{
    "items": [
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Here's a way:</p>\n\n<pre><code>function getKey(key, obj) {\n  return key.split('.').reduce(function(a,b){\n    return a &amp;&amp; a[b];\n  }, obj);\n}\n\ngetKey('foo.bar', obj); //=&gt; \"I want this\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>just use the obj.foo.bar..that will work;</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>if <code>path = \"foo.bar\"</code> then you may write</p>\n\n<pre><code>var keys = path.split('.');\nconsole.log(obj[keys[0]][keys[1]]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Another way :</p>\n\n<pre><code>function resolve(root, path){\n    try {\n        return (new Function(\n            'root', 'return root.' + path + ';'\n        ))(root);\n    } catch (e) {}\n}\n\nresolve(obj, 'foo.bar'); // \"I want this\"\n</code></pre>\n\n<p>More on this : <a href=\"http://stackoverflow.com/a/18381564/1636522\">http://stackoverflow.com/a/18381564/1636522</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I have the following object</p>\n\n<pre><code>var obj = {};\nobj.foo = {};\nobj.foo.bar = \"I want this\";\n</code></pre>\n\n<p>given the \"path\" <code>\"foo.bar\"</code> as a string, how do I retrieve <code>obj.foo.bar</code> (or <code>obj[foo][bar]</code>)?</p>\n",
            "last_activity_date": 1379590422,
            "question_id": 18891939,
            "score": 0,
            "tags": [
                "javascript"
            ],
            "title": "Javascript - retrieve object property path"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>you should get the cookie value as a string split it and have every criteria alone than use the insert query because the query you wrote is incorrect you saying insert into user_data the first name the last name the job title... but you are only giving him 1 value the $cookie but the sql don't know that the $cookie contain everything so you should first slpit the cookie value based on the ','</p>\n",
                    "is_accepted": true,
                    "score": 1
                }
            ],
            "body": "<p>I was doing a survey I was offline server so I save users information in cookies,\nI have users Information like this </p>\n\n<p><strong>Fname:Ali,Lname:Kheiri,title:Director,org:Magiclamp,email:alikheiri@gmail.com\nFname:Ali,Lname:Kheiri,title:Director,org:Magiclamp,email:alikheiri@gmail.com</strong> </p>\n\n<p>it is save in cookies, but now i am online, so i want to save this cookies data in mysql database in php, javascript for this I write this code but its not working </p>\n\n<pre><code>    mysql_connect(\"localhost\",\"root\",\"\");//database connection05\n    mysql_select_db(\"o2measure\");\n    if($_POST['submit']){\n        $date = date('Y,m,d');\n       $time = date(\"i:h:s\",time() + $time_a);\n       echo $session_id;\n       $ip=$_SERVER['REMOTE_ADDR'];\n        foreach($_COOKIE as $name =&gt; $cookie){\n    // you can check any conditions based on cookie name $name\n    $sql=\"INSERT INTO user_data (first_name, last_name, job_title, organisation, email, phone_number, ip_address, date, time)\n     VALUES(\" . mysql_escape_string($cookie) . \")\";\n        $result=mysql_query($sql); \n\n}\n</code></pre>\n",
            "last_activity_date": 1336798107,
            "question_id": 10550441,
            "score": 0,
            "tags": [
                "php",
                "javascript",
                "database",
                "cookies",
                "offline"
            ],
            "title": "Save my cookie data to MySQL database?"
        },
        {
            "answer_count": 0,
            "body": "<p>It's very common nowadays for Javascript libraries / functions / code snippets to be encapsulated with an anonymous function, e.g.</p>\n\n<pre><code>(function () {\n    // code to be executed goes here\n})();\n</code></pre>\n\n<p>As far as I can tell, that should be completely superfluous: that anonymous function just executes the code within. However, there's obviously a reason behind this! :-)</p>\n\n<p>I've seen an occurrence of this with a comment alongside the first line: \"// function wrapper for Opera\".</p>\n\n<p>Does anyone know why this code is commonly used, what the history of its development is, and what the relation with Opera is?</p>\n",
            "last_activity_date": 1256873516,
            "question_id": 1643321,
            "score": 0,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript: Why the anonymous function wrapper?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The elements do not have a CSS height or width specified.</p>\n\n<p>Note that you are trying to get the \"requested\" sizes, not the actual sizes. The output therefore is correct.</p>\n\n<p>If you want to get the <em>effective</em> sizes, use the jQuery <code>width()</code> and <code>height()</code> methods. See <a href=\"http://api.jquery.com/width/\" rel=\"nofollow\">http://api.jquery.com/width/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The <code>.style</code> property is for getting styles that were placed directly on the element. It doesn't compute styles from your stylesheets.</p>\n\n<p>See <a href=\"https://developer.mozilla.org/en/DOM/window.getComputedStyle\"><code>getComputedStyle()</code></a>.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>why <code>this.style[property]</code> get an empty string? my code is:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Demo&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n        #test{\n            height:100px;\n        }\n        .tclass{\n            width:100px;\n        }\n    &lt;/style&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        function $(ID){\n            var element=document.getElementById(ID||'nodId');\n            if(element){\n                element.css=css;\n            }\n            return element;\n        }\n\n        function css(prop,value){\n            if(value==null){\n                return this.style[prop];\n            }\n            if(prop){\n                this.style[prop]=value;\n            }\n            return true;\n        }\n\n        window.onload=function(){\n            var element=$(\"test\");\n            alert(element.css(\"height\")+\",\"+element.css(\"width\")+\",\"+element.css(\"background\"));\n\n            //alert ,,#ccc\n        };\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"test\" style=\"background:#CCC;\" class=\"tclass\"&gt;Test&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>this code alert <code>,,#ccc</code>,but i want get <code>100px,100px,#ccc</code>,what's wrong with me? who can help me?</p>\n\n<p><strong>update</strong></p>\n\n<p>i changed the css function,now it can work well:</p>\n\n<pre><code>    function css(prop,value){\n        if(value==null){\n            var b = (window.navigator.userAgent).toLowerCase();\n            var s;\n            if(/msie|opera/.test(b)){\n                s = this.currentStyle\n            }else if(/gecko/.test(b)){\n                s = document.defaultView.getComputedStyle(this,null);\n            }\n            if(s[prop]!=undefined){\n                return s[prop];\n            }\n            return this.style[prop];\n        }\n        if(prop){\n            this.style[prop]=value;\n        }\n        return true;\n    }\n</code></pre>\n",
            "last_activity_date": 1330181275,
            "question_id": 9444751,
            "score": -1,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "styles"
            ],
            "title": "why javascript this.style[property] return an empty string?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Well, since you can currently only have one ngView directive... I use nested directive controls. This allows you to set up templating and inherit (or isolate) scopes among them. Outside of that I use ng-switch or even just ng-show to choose which controls I'm displaying based on what's coming in from $routeParams.</p>\n\n<p><strong>EDIT</strong> Here's some example pseudo-code to give you an idea of what I'm talking about. With a nested sub navigation.</p>\n\n<p>Here's the main app page</p>\n\n<pre><code>&lt;!-- primary nav --&gt;\n&lt;a href=\"#/page/1\"&gt;Page 1&lt;/a&gt;\n&lt;a href=\"#/page/2\"&gt;Page 2&lt;/a&gt;\n&lt;a href=\"#/page/3\"&gt;Page 3&lt;/a&gt;\n\n&lt;!-- display the view --&gt;\n&lt;div ng-view&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Directive for the sub navigation</p>\n\n<pre><code>app.directive('mySubNav', function(){\n    return {\n        restrict: 'E',\n        scope: {\n           current: '=current'\n        },\n        templateUrl: 'mySubNav.html',\n        controller: function($scope) {\n        }\n    };\n});\n</code></pre>\n\n<p>template for the sub navigation</p>\n\n<pre><code>&lt;a href=\"#/page/1/sub/1\"&gt;Sub Item 1&lt;/a&gt;\n&lt;a href=\"#/page/1/sub/2\"&gt;Sub Item 2&lt;/a&gt;\n&lt;a href=\"#/page/1/sub/3\"&gt;Sub Item 3&lt;/a&gt;\n</code></pre>\n\n<p>template for a main page (from primary nav)</p>\n\n<pre><code>&lt;my-sub-nav current=\"sub\"&gt;&lt;/my-sub-nav&gt;\n\n&lt;ng-switch on=\"sub\"&gt;\n  &lt;div ng-switch-when=\"1\"&gt;\n      &lt;my-sub-area1&gt;&lt;/my-sub-area&gt;\n  &lt;/div&gt;\n  &lt;div ng-switch-when=\"2\"&gt;\n      &lt;my-sub-area2&gt;&lt;/my-sub-area&gt;\n  &lt;/div&gt;\n  &lt;div ng-switch-when=\"3\"&gt;\n      &lt;my-sub-area3&gt;&lt;/my-sub-area&gt;\n  &lt;/div&gt;\n&lt;/ng-switch&gt;\n</code></pre>\n\n<p>Controller for a main page. (from the primary nav)</p>\n\n<pre><code>app.controller('page1Ctrl', function($scope, $routeParams) {\n     $scope.sub = $routeParams.sub;\n});\n</code></pre>\n\n<p>Directive for a Sub Area</p>\n\n<pre><code>app.directive('mySubArea1', function(){\n    return {\n        restrict: 'E',\n        templateUrl: 'mySubArea1.html',\n        controller: function($scope) {\n            //controller for your sub area.\n        }\n    };\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 108
                },
                {
                    "body": "<h3><em>UPDATE:</em> <a href=\"https://github.com/angular-ui/ui-router\">Check out AngularUI's new project to address this problem</a></h3>\n\n<hr>\n\n<p>For subsections it's as easy as leveraging strings in ng-include:</p>\n\n<pre><code>&lt;ul id=\"subNav\"&gt;\n  &lt;li&gt;&lt;a ng-click=\"subPage='section1/subpage1.htm'\"&gt;Sub Page 1&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a ng-click=\"subPage='section1/subpage2.htm'\"&gt;Sub Page 2&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a ng-click=\"subPage='section1/subpage3.htm'\"&gt;Sub Page 3&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ng-include src=\"subPage\"&gt;&lt;/ng-include&gt;\n</code></pre>\n\n<p>Or you can create an object in case you have links to sub pages all over the place:</p>\n\n<pre><code>$scope.pages = { page1: 'section1/subpage1.htm', ... };\n</code></pre>\n\n\n\n<pre><code>&lt;ul id=\"subNav\"&gt;\n  &lt;li&gt;&lt;a ng-click=\"subPage='page1'\"&gt;Sub Page 1&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a ng-click=\"subPage='page2'\"&gt;Sub Page 2&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a ng-click=\"subPage='page3'\"&gt;Sub Page 3&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ng-include src=\"pages[subPage]\"&gt;&lt;/ng-include&gt;\n</code></pre>\n\n<p>Or you can even use <code>$routeParams</code></p>\n\n<pre><code>$routeProvider.when('/home', ...);\n$routeProvider.when('/home/:tab', ...);\n$scope.params = $routeParams;\n</code></pre>\n\n\n\n<pre><code>&lt;ul id=\"subNav\"&gt;\n  &lt;li&gt;&lt;a href=\"#/home/tab1\"&gt;Sub Page 1&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=\"#/home/tab2\"&gt;Sub Page 2&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=\"#/home/tab3\"&gt;Sub Page 3&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ng-include src=\" '/home/' + tab + '.html' \"&gt;&lt;/ng-include&gt;\n</code></pre>\n\n<p>You can also put an ng-controller at the top-most level of each partial</p>\n",
                    "is_accepted": false,
                    "score": 148
                },
                {
                    "body": "<p>You may checkout this library for the same purpose also:</p>\n\n<p><a href=\"http://angular-route-segment.com\">http://angular-route-segment.com</a></p>\n\n<p>It looks like what you are looking for, and it is much simpler to use than ui-router. From the <a href=\"http://angular-route-segment.com/src/example/\">demo site</a>:</p>\n\n<p>JS:</p>\n\n<pre><code>$routeSegmentProvider.\n\nwhen('/section1',          's1.home').\nwhen('/section1/:id',      's1.itemInfo.overview').\nwhen('/section2',          's2').\n\nsegment('s1', {\n    templateUrl: 'templates/section1.html',\n    controller: MainCtrl}).\nwithin().\n    segment('home', {\n        templateUrl: 'templates/section1/home.html'}).\n    segment('itemInfo', {\n        templateUrl: 'templates/section1/item.html',\n        controller: Section1ItemCtrl,\n        dependencies: ['id']}).\n    within().\n        segment('overview', {\n            templateUrl: 'templates/section1/item/overview.html'}).\n</code></pre>\n\n<p>Top-level HTML:</p>\n\n<pre><code>&lt;ul&gt;\n    &lt;li ng-class=\"{active: $routeSegment.startsWith('s1')}\"&gt;\n        &lt;a href=\"/section1\"&gt;Section 1&lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li ng-class=\"{active: $routeSegment.startsWith('s2')}\"&gt;\n        &lt;a href=\"/section2\"&gt;Section 2&lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n&lt;div id=\"contents\" app-view-segment=\"0\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Nested HTML:</p>\n\n<pre><code>&lt;h4&gt;Section 1&lt;/h4&gt;\nSection 1 contents.\n&lt;div app-view-segment=\"1\"&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>You may use ng-include to avoid using nested ng-views.</p>\n\n<p><a href=\"http://docs.angularjs.org/api/ng/directive/ngInclude\" rel=\"nofollow\">http://docs.angularjs.org/api/ng/directive/ngInclude</a><br>\n<a href=\"http://plnkr.co/edit/ngdoc:example-example39@snapshot?p=preview\" rel=\"nofollow\">http://plnkr.co/edit/ngdoc:example-example39@snapshot?p=preview</a></p>\n\n<p>My index page I use ng-view. Then on my sub pages which I need to have nested frames. I use    ng-include. \nThe demo shows a dropdown. I replaced mine with a link  ng-click. \nIn the function I would put    $scope.template = $scope.templates[0]; or $scope.template = $scope.templates[1];</p>\n\n<pre><code>$scope.clickToSomePage= function(){\n  $scope.template = $scope.templates[0];\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Angular ui-router supports nested views. I haven't used it yet but looks very promising.</p>\n\n<p><a href=\"http://angular-ui.github.io/ui-router/\" rel=\"nofollow\">http://angular-ui.github.io/ui-router/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I too was struggling with nested views in Angular.</p>\n\n<p>Once I got a hold of <a href=\"https://github.com/angular-ui/ui-router\" rel=\"nofollow\">ui-router</a> I knew I was never going back to angular default routing functionality.</p>\n\n<p>Here is an example application that uses multiple levels of views nesting</p>\n\n<pre><code>app.config(function ($stateProvider, $urlRouterProvider,$httpProvider) {\n// navigate to view1 view by default\n$urlRouterProvider.otherwise(\"/view1\");\n\n$stateProvider\n    .state('view1', {\n        url: '/view1',\n        templateUrl: 'partials/view1.html',\n        controller: 'view1.MainController'\n    })\n    .state('view1.nestedViews', {\n        url: '/view1',\n        views: {\n            'childView1': { templateUrl: 'partials/view1.childView1.html' , controller: 'childView1Ctrl'},\n            'childView2': { templateUrl: 'partials/view1.childView2.html', controller: 'childView2Ctrl' },\n            'childView3': { templateUrl: 'partials/view1.childView3.html', controller: 'childView3Ctrl' }\n        }\n    })\n\n    .state('view2', {\n        url: '/view2',\n    })\n\n    .state('view3', {\n        url: '/view3',\n    })\n\n    .state('view4', {\n        url: '/view4',\n    });\n});\n</code></pre>\n\n<p>As it can be seen there are 4 main views (view1,view2,view3,view4) and view1 has 3 child views.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>My question involves how to go about dealing with complex nesting of <strong>templates</strong> (also called <strong>partials</strong>) in an AngularJS application.</p>\n\n<p>The best way to describe my situation is with an image I created:</p>\n\n<p><img src=\"http://i.stack.imgur.com/V17C3.png\" alt=\"AngularJS Page Diagram\"></p>\n\n<p>As you can see this has the potential to be a fairly complex application with lots of nested models.</p>\n\n<p>The application is single-page, so it loads an <strong>index.html</strong> that contains a div element in the DOM with the <code>ng-view</code> attribute.</p>\n\n<p><strong>For circle 1</strong>, You see that there is a Primary navigation that loads the appropriate templates into the <code>ng-view</code>.  I'm doing this by passing <code>$routeParams</code> to the main app module.  Here is an example of what's in my app:</p>\n\n<pre><code>angular.module('myApp', []).\n    config(['$routeProvider', function($routeProvider) {\n        $routeProvider.                     \n            when(\"/job/:jobId/zones/:zoneId\", { controller: JobDetailController, templateUrl: 'assets/job_list_app/templates/zone_edit.html' }).\n            when(\"/job/:jobId/initial_inspection\", { controller: JobDetailController, templateUrl: 'assets/job_list_app/templates/initial_inspection.html' }).\n            when(\"/job/:jobId/zones/:zoneId/rooms/:roomId\", { controller: JobDetailController, templateUrl: 'assets/job_list_app/templates/room_edit.html' })       \n\n    }]);\n</code></pre>\n\n<p><strong>In circle 2</strong>, the template that is loaded into the <code>ng-view</code> has an additional <strong>sub-navigation</strong>.  This sub-nav then needs to load templates into the area below it - but since ng-view is already being used, I'm not sure how to go about doing this.</p>\n\n<p>I know that I can include additional templates within the 1st template, but these templates are all going to be pretty complex.  I would like to keep all the templates separate in order to make the application easier to update and not have a dependency on the parent template having to be loaded in order to access its children.</p>\n\n<p><strong>In circle 3</strong>, you can see things get even more complex.  There is the potential that the sub-navigation templates will have a <strong>2nd sub-navigation</strong> that will need to load its own templates as well into the area in <strong>circle 4</strong></p>\n\n<p><strong>How does one go about structuring an AngularJS app to deal with such complex nesting of templates while keeping them all separate from one another?</strong></p>\n",
            "last_activity_date": 1417422764,
            "question_id": 12863663,
            "score": 326,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Complex nesting of partials and templates"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Search for the Google Tech Talk by Doug Crockford \"Javascript: The Good Parts\"\nHe has a book out, too - and other lectures online from Yahoo, I believe.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Here's a book that covers most of the bases:</p>\n\n<p><a href=\"http://rads.stackoverflow.com/amzn/click/1847194141\" rel=\"nofollow\">Object Oriented Javascript for high quality applicatons and libraries</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>First ought to read about the <a href=\"http://en.wikipedia.org/wiki/Prototype-based_programming\">prototype-based programming</a> so you know what kind of beast you're dealing with and then take a look at <a href=\"https://developer.mozilla.org/En/Javascript_Style_Guide\">JavaScript style guide at MDC</a> and <a href=\"https://developer.mozilla.org/en/JavaScript\">JavaScript page at MDC</a>. I also find best to force the code quality with a tool, ie. <a href=\"http://www.JavaScriptLint.com/\">JavaScript Lint</a> or other variants.</p>\n\n<p>Best practices with OO sounds more like you want to find patterns than concentrate on code quality, so look at <a href=\"http://www.google.com/search?client=safari&amp;rls=en-us&amp;q=javascript+patterns&amp;ie=UTF-8&amp;oe=UTF-8\">Google search: javascript patterns</a> and <a href=\"http://www.mail-archive.com/jquery-en@googlegroups.com/msg24924.html\">jQuery patterns</a>.</p>\n\n<ul>\n  <li><a href=\"http://www.youtube.com/watch?v=mHtdZgou0qU&fmt=18\">Speed up your JavaScript</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<h3>Using `var` or not</h3>\n\n<p>You should introduce any variable with the <code>var</code> statement, otherwise it gets to the global scope.</p>\n\n<p>It's worth mentioning that in strict mode (<code>\"use strict\";</code>) <a href=\"http://hacks.mozilla.org/2011/01/ecmascript-5-strict-mode-in-firefox-4/\">undeclared variable assignments throws <code>ReferenceError</code></a>.</p>\n\n<p>At present JavaScript does not have a block scope. The Crockford school teaches you to <a href=\"http://javascript.crockford.com/code.html#variable%20declarations\">put var statements at the beginning of the function body</a>, while Dojo's Style Guide reads that <a href=\"http://docs.dojocampus.org/developer/styleguide\">all variables should be declared in the smallest scope possible</a>. (The <a href=\"https://developer.mozilla.org/en/New_in_JavaScript_1.7#let_statement\"><code>let</code> statement and definition</a> introduced in JavaScript 1.7 is not part of the ECMAScript standard.)</p>\n\n<p>It is good practice to bind regularly-used objects' properties to local variables as it is faster than looking up the whole scope chain. (See <a href=\"http://codeutopia.net/blog/2009/04/30/optimizing-javascript-for-extreme-performance-and-low-memory-consumption/\">Optimizing JavaScript for extreme performance and low memory consumption</a>.)</p>\n\n<h3>Defining things in the file, or in a `(function(){...})()`</h3>\n\n<p>If you don't need to reach your objects outside your code, you can wrap your whole code in a function expression\u2014-it's called the module pattern. It has performance advantages, and also allows your code to be minified and obscured at a high level. You can also ensure it won't pollute the global namespace. <a href=\"http://peter.michaux.ca/articles/wrapping-functions-in-javascript\">Wrapping Functions in JavaScript</a> also allows you to add aspect-oriented behaviour. Ben Cherry has an <a href=\"http://www.adequatelygood.com/2010/3/JavaScript-Module-Pattern-In-Depth\">in-depth article on module pattern</a>.</p>\n\n<h3>Using `this` or not</h3>\n\n<p>If you use pseudo-classical inheritance in JavaScript, you can hardly avoid using <code>this</code>. It's a matter of taste which inheritance pattern you use. For other cases, check Peter Michaux's article on <a href=\"http://peter.michaux.ca/articles/javascript-widgets-without-this\">JavaScript Widgets Without \"this\"</a>.</p>\n\n<h3>Using `function myname()` or `myname = function();`</h3>\n\n<p><code>function myname()</code> is a function declaration and <code>myname = function();</code> is a function expression assigned to variable <code>myname</code>. The latter form indicates that functions are first-class objects, and you can do anything with them, as with a variable. The only difference between them is that all function declarations are hoisted to the top of the scope, which may matter in certain cases. Otherwise they are equal. <code>function foo()</code> is a shorthand form. Further details on hoisting can be found in the <a href=\"http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting\">JavaScript Scoping and Hoisting</a> article.</p>\n\n<h3>Defining methods in the body of the object or using \"prototype\"</h3>\n\n<p>It's up to you. JavaScript has four object-creation patterns: pseudo-classical, prototypical, functional, and parts (<a href=\"http://oreilly.com/catalog/9780596517748/\">Crockford, 2008</a>). Each has its pros and cons, see <a href=\"http://yuiblog.com/crockford/\">Crockford in his video talks</a> or get his book <em>The Good Parts</em> as <a href=\"http://stackoverflow.com/questions/907225/object-oriented-javascript-best-pratices/907275#907275\">Anon already suggested</a>.</p>\n\n<h3>Frameworks</h3>\n\n<p>I suggest you pick up some JavaScript frameworks, study their conventions and style, and find those practices and patterns that best fit you. For instance, the <a href=\"http://docs.dojocampus.org/dojo/declare\">Dojo Toolkit</a> provides a robust framework to write object-oriented JavaScript code which even supports multiple inheritance. </p>\n\n<h3>Patterns</h3>\n\n<p>Lastly, there is a blog dedicated to <a href=\"http://www.jspatterns.com/category/patterns/object-creation/\">explore common JavaScript patterns and anti-patterns</a>. Also check out the question <em><a href=\"http://stackoverflow.com/questions/211795/are-there-any-coding-standards-for-javascript\">Are there any coding standards for JavaScript?</a></em> in Stack Overflow.</p>\n",
                    "is_accepted": true,
                    "score": 256
                },
                {
                    "body": "<p>You might want to check out <a href=\"http://jsninja.com\">Secrets of the JavaScript Ninja</a> by John Resig (jQuery). \"This book is intended to take an intermediate JavaScript developer and give him the knowledge he needs to create a cross-browser JavaScript library, from the ground, up.\"</p>\n\n<p>The draft is available through the publisher:\n<a href=\"http://www.manning.com/resig/\">http://www.manning.com/resig/</a></p>\n\n<p>Douglas Crockford also has some nice JavaScript articles on his homepage:\n<a href=\"http://www.crockford.com/\">http://www.crockford.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I am going to write down some stuffs that I read or put in application since I asked this question. So people reading it won't get frustrated, as most of the answers are RTMF's in disguise (even if I must admit, suggested books ARE good).</p>\n\n<h2>Var usage</h2>\n\n<p>Any variable is supposed to be already declared at the higher scope in JS. So when ever you want a new variable, declare it to avoid bad surprises like manipulating a global var without noticing it. <strong>Therefore, always use the var keyword.</strong></p>\n\n<p>In an object make, var the variable private. If you want to just declare a public variable, use <code>this.my_var = my_value</code> to do so.</p>\n\n<h2>Declaring methods</h2>\n\n<p>In JS, they are numerous way of declaring methods. For an OO programmer, the most natural and yet efficient way is to use the following syntax:</p>\n\n<p>Inside the object body</p>\n\n<pre><code>this.methodName = function(param) {\n\n/* bla */\n\n};\n</code></pre>\n\n<p>There is a drawback: inner functions won't be able to access \"this\" because of the funny JS scope. Douglas Crockford recommends to bypass this limitation using a conventional local variable named \"that\". So it becomes</p>\n\n<pre><code>function MyObject() {\n\n    var that = this;\n\n    this.myMethod = function() {\n\n        jQuery.doSomethingCrazy(that.callbackMethod);\n\n    };\n\n};\n</code></pre>\n\n<h2>Do not rely on automatic end of line</h2>\n\n<p>JS tries to automatically add <code>;</code> at the end of the line if you forget it. Don't rely on this behavior, as you'll get errors that are a mess to debug.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I often feel like the only guy here who uses MooTools for my javascript.  </p>\n\n<p>It stands for <strong>M</strong>y <strong>O</strong>bject <strong>O</strong>riented Tools, mootools.</p>\n\n<p>I really like their take on OOP in javascript.  You can use their class implementation along with jquery too, so you don't have to ditch jquery (though mootools does it all just as well).  </p>\n\n<p>Anyway, give the first link a good read and see what you think, the second link is to the mootools docs.</p>\n\n<p><a href=\"http://jqueryvsmootools.com/#mooinheritance\">MooTools &amp; Inheritance</a></p>\n\n<p><a href=\"http://mootools.net/docs/core/Class/Class\">MooTools Classes</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I'm finding myself coding a big project in Javascript. I remember the last one was quite an adventure because hacky JS can quickly becomes unreadable and I want this code to be clean.</p>\n\n<p>Well, I'm using objects to construct a lib, but there are several ways to define things in JS, implying important consequences in the scope, the memory management, the name space, etc. E.G :</p>\n\n<ul>\n<li>using <code>var</code> or not;</li>\n<li>defining things in the file, or in a <code>(function(){...})()</code>, jquery style;</li>\n<li>using <code>this</code>, or not;</li>\n<li>using <code>function myname()</code> or <code>myname = function()</code>;</li>\n<li>defining methods in the body of the object or using \"prototype\";</li>\n<li>etc.</li>\n</ul>\n\n<p>So what are really the best practices when coding in OO in JS ?</p>\n\n<p>Academic explanations really expected here. Link to books warmly welcome, as long as they deal with quality and robustness.</p>\n\n<p>EDIT :</p>\n\n<p>Got some readings, but I'm still very interested in answers to the questions above and any best practices.</p>\n",
            "last_activity_date": 1408816328,
            "question_id": 907225,
            "score": 216,
            "tags": [
                "javascript",
                "oop"
            ],
            "title": "Object Oriented Javascript best practices?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>It uses the <code>slice</code> method arrays have and calls it with its <code>this</code> being the <code>arguments</code> object. This means it calls it as if you did <code>arguments.slice()</code> assuming <code>arguments</code> had such a method.</p>\n\n<p>Creating a slice without any arguments will simply take all elements - so it simply copies the elements from <code>arguments</code> to an array.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Normally, calling</p>\n\n<pre><code>var b = a.slice();\n</code></pre>\n\n<p>will copy the array <code>a</code> into <code>b</code>. However, we can't do</p>\n\n<pre><code>var a = arguments.slice();\n</code></pre>\n\n<p>because <code>arguments</code> isn't a real array, and doesn't have <code>slice</code> as a method. <code>Array.prototype.slice</code> is the <code>slice</code> function for arrays, and <code>call</code> runs the function with <code>this</code> set to <code>arguments</code>.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Let's assume you have: <code>function.apply(thisArg, argArray )</code></p>\n\n<blockquote>\n  <p>The apply method invokes a function, passing in the object that will be bound to this\n  and an optional array of arguments.</p>\n</blockquote>\n\n<p>The slice() method selects a part of an array, and returns the new array.</p>\n\n<p>So when you call <code>Array.prototype.slice.apply(arguments, [0])</code> the array slice method is invoked (bind) on arguments.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Its because, as <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Functions_and_function_scope/arguments\" rel=\"nofollow\">MDN notes</a></p>\n\n<blockquote>\n  <p>The arguments object is not an array. It is similar to an array, but\n  does not have any array properties except length. For example, it does\n  not have the pop method. However it can be converted to a real array:</p>\n</blockquote>\n\n<p>Here we are calling <code>slice</code> on the native object <code>Array</code> and not on its <em>implementation</em> and thats why the extra <code>.prototype</code></p>\n\n<pre><code>var args = Array.prototype.slice.call(arguments);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The <code>arguments</code> object is not actually an instance of an Array, and does not have any of the Array methods. So, <code>arguments.slice(...)</code> will not work because the arguments object does not have the slice method.</p>\n\n<p>Arrays do have this method, and because the <code>arguments</code> object is very similar to an array, the two are compatible. This means that we can use array methods with the arguments object. And since array methods were built with arrays in mind, they will return arrays rather than other argument objects.</p>\n\n<p>So why use <code>Array.prototype</code>? The <code>Array</code> is the object which we create new arrays from (<code>new Array()</code>), and these new arrays are passed methods and properties, like slice. These methods are stored in the <code>[Class].prototype</code> object. So, for efficiency sake, instead of accessing the slice method by <code>(new Array()).slice.call()</code> or <code>[].slice.call()</code>, we just get it straight from the prototype. This is so we don't have to initialise a new array.</p>\n\n<p>But why do we have to do this in the first place? Well, as you said, it converts an arguments object into an Array instance. The reason why we use slice, however, is more of a \"hack\" than anything. The slice method will take a, you guessed it, slice of an array and return that slice as a new array. Passing no arguments to it (besides the arguments object as its context) causes the slice method to take a complete chunk of the passed \"array\" (in this case, the arguments object) and return it as a new array.</p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>What happens under the hood is that when <code>.slice()</code> is called normally, <code>this</code> is an Array, and then it just iterates over that Array, and does its work.</p>\n\n<p>How is <code>this</code> in the <code>.slice()</code> function an Array? Because when you do:</p>\n\n<pre><code>object.method();\n</code></pre>\n\n<p>...the <code>object</code> automatically becomes the value of <code>this</code> in the <code>method()</code>. So with:</p>\n\n<pre><code>[1,2,3].slice()\n</code></pre>\n\n<p>...the <code>[1,2,3]</code> Array is set as the value of <code>this</code> in <code>.slice()</code>.</p>\n\n<hr>\n\n<p>But what if you could substitute something else as the <code>this</code> value? As long as whatever you substitute has a numeric <code>.length</code> property, and a bunch of properties that are numeric indices, it should work. This type of object is often called an <em>array-like object</em>.</p>\n\n<p>The <code>.call()</code> and <code>.apply()</code> methods let you <em>manually</em> set the value of <code>this</code> in a function. So if we set the value of <code>this</code> in <code>.slice()</code> to an <em>array-like object</em>, <code>.slice()</code> will just <em>assume</em> it's working with an Array, and will do its thing.</p>\n\n<p>Take this plain object as an example.</p>\n\n<pre><code>var my_object = {\n    '0': 'zero',\n    '1': 'one',\n    '2': 'two',\n    '3': 'three',\n    '4': 'four',\n    length: 5\n};\n</code></pre>\n\n<p>This is obviously not an Array, but if you can set it as the <code>this</code> value of <code>.slice()</code>, then it will just work, because it looks enough like an Array for <code>.slice()</code> to work properly.</p>\n\n<pre><code>var sliced = Array.prototype.slice.call( my_object, 3 );\n</code></pre>\n\n<p><strong>Example:</strong> <a href=\"http://jsfiddle.net/wSvkv/\">http://jsfiddle.net/wSvkv/</a></p>\n\n<p>As you can see in the console, the result is what we expect:</p>\n\n<pre><code>['three','four'];\n</code></pre>\n\n<p>So this is what happens when you set an <code>arguments</code> object as the <code>this</code> value of <code>.slice()</code>. Because <code>arguments</code> has a <code>.length</code> property and a bunch of numeric indices, <code>.slice()</code> just goes about its work as if it were working on a real Array.</p>\n",
                    "is_accepted": true,
                    "score": 372
                },
                {
                    "body": "<p>Dont forget, that a low-level basics of this behaviour is the type-casting that integrated in JS-engine entirely.</p>\n\n<p>Slice just takes object (thanks to existing arguments.length property) and returns array-object casted after doing all operations on that.</p>\n\n<p>The same logics you can test if you try to treat String-method with an INT-value:</p>\n\n<pre><code>String.prototype.bold.call(11);  // returns \"&lt;b&gt;11&lt;/b&gt;\"\n</code></pre>\n\n<p>And that explains statement above.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I'm just writing this to remind myself...</p>\n\n<pre><code>    Array.prototype.slice.call(arguments);\n==  Array.prototype.slice(arguments[1], arguments[2], arguments[3], ...)\n==  [ arguments[1], arguments[2], arguments[3], ... ]\n</code></pre>\n\n<p>Or just use this handy function <strong>$A</strong> to turn most things into an array.</p>\n\n<pre><code>function hasArrayNature(a) {\n    return !!a &amp;&amp; (typeof a == \"object\" || typeof a == \"function\") &amp;&amp; \"length\" in a &amp;&amp; !(\"setInterval\" in a) &amp;&amp; (Object.prototype.toString.call(a) === \"[object Array]\" || \"callee\" in a || \"item\" in a);\n}\n\nfunction $A(b) {\n    if (!hasArrayNature(b)) return [ b ];\n    if (b.item) {\n        var a = b.length, c = new Array(a);\n        while (a--) c[a] = b[a];\n        return c;\n    }\n    return Array.prototype.slice.call(b);\n}\n</code></pre>\n\n<p>example usage...</p>\n\n<pre><code>function test() {\n    $A( arguments ).forEach( function(arg) {\n        console.log(\"Argument: \" + arg);\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>// We can apply `slice` from  `Array.prototype`:\nArray.prototype.slice.call([]); //-&gt; []\n\n// Since `slice` is available on an array's prototype chain,\n'slice' in []; //-&gt; true\n[].slice === Array.prototype.slice; //-&gt; true\n\n// \u2026 we can just invoke it directly:\n[].slice(); //-&gt; []\n\n// `arguments` has no `slice` method\n'slice' in arguments; //-&gt; false\n\n// \u2026 but we can apply it the same way:\nArray.prototype.slice.call(arguments); //-&gt; [\u2026]\n\n// In fact, though `slice` belongs to `Array.prototype`,\n// it can operate on any array-like object:\nArray.prototype.slice.call({0: 1, length: 1}); //-&gt; [1]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>when .slice() is called normally, this is an Array, and then it just iterates over that Array, and does its work.</p>\n\n<pre><code> //ARGUMENTS\nfunction func(){\n  console.log(arguments);//[1, 2, 3, 4]\n\n  //var arrArguments = arguments.slice();//Uncaught TypeError: undefined is not a function\n  var arrArguments = [].slice.call(arguments);//cp array with explicity THIS  \n  arrArguments.push('new');\n  console.log(arrArguments)\n}\nfunc(1,2,3,4)//[1, 2, 3, 4, \"new\"]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I know it is used to make arguments a real array, but I don't understand what happens when using <code>Array.prototype.slice.call(arguments)</code></p>\n",
            "last_activity_date": 1422550277,
            "question_id": 7056925,
            "score": 179,
            "tags": [
                "javascript",
                "prototype-programming"
            ],
            "title": "how does Array.prototype.slice.call() work?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I think that the correct answer would be \"not always.\" From what I understand, both the browser and the server play a role in determining what gets cached. If you really need files to be reloaded every time, then I think you should be able to configure that from within Apache (for example). Of course, I suppose that the user's browser could be configured to ignore that setting, but that's probably unlikely.</p>\n\n<p>So I would imagine that in most practical cases, the javascript files themselves are cached, but are dynamically re-interpreted each time the page loads.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As far as I am aware, only Opera caches the parsed JavaScript. See the section \"Cached compiled programs\" <a href=\"http://my.opera.com/core/blog/2009/12/22/carakan-revisited\" rel=\"nofollow\">here</a>. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The browser definitely makes use of caching but yes, the browsers parse the JavaScript every time a page refreshes.\nBecause whenever a page is loaded by the browser, it creates 2 trees \n1.Content tree and \n2.render tree.</p>\n\n<p>This render tree consists of the information about the visual layout of the dom elements. So whenever a page loads, the javascript is parsed and any dynamic changes by the javascript will  like positioning the dom element, show/hide element, add/remove element will cause the browser to recreate the render tree. But the modern broswers like FF and chrome handle it slightly differently, they have the concept of incremental rendering, so whenever there are dynamic changes by the js as mentioned above, it will only cause those elements to render and repaint again.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Opera does it, as mentioned in the other answer. (<a href=\"http://my.opera.com/core/blog/2009/12/22/carakan-revisited\">source</a>)</p>\n\n<p>Firefox (SpiderMonkey engine) does <em>not</em> cache bytecode. (<a href=\"http://stackoverflow.com/questions/5957720/if-javascript-interpreter-does-jit-compilation-does-it-cache-results-of-it-fo\">source</a>)</p>\n\n<p>WebKit (Safari, Konqueror) does <em>not</em> cache bytecode. (<a href=\"http://comments.gmane.org/gmane.os.opendarwin.webkit.devel/7639\">source</a>)</p>\n\n<p>I'm not sure about IE[6/7/8] or V8 (Chrome), I think IE might do some sort of caching while V8 may not. IE is closed source so I'm not sure, but in V8 it may not make sense to cache \"compiled\" code since they compile straight to machine code.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>These are the details that I've been able to dig up. It's worth noting first that although JavaScript is usually considered to be interpreted and run on a VM, this isn't really the case with the modern interpreters, which tend to compile the source directly into machine code (with the exception of IE).</p>\n\n<hr>\n\n<p><strong>Chrome : V8 Engine</strong></p>\n\n<p>V8 has a compilation cache. This stores compiled JavaScript using a hash of the source for up to 5 garbage collections. This means that two identical pieces of source code will share a cache entry in memory regardless of how they were included. This cache is not cleared when pages are reloaded.</p>\n\n<p><a href=\"http://code.google.com/p/v8/source/browse/branches/bleeding_edge/src/compilation-cache.h\">Source</a></p>\n\n<hr>\n\n<p><strong>Opera : Carakan Engine</strong></p>\n\n<blockquote>\n  <p>In practice this means that whenever a script program is about to be\n  compiled, whose source code is identical to that of some other program\n  that was recently compiled, we reuse the previous output from the\n  compiler and skip the compilation step entirely. This cache is quite\n  effective in typical browsing scenarios where one loads page after\n  page from the same site, such as different news articles from a news\n  service, since each page often loads the same, sometimes very large,\n  script library.</p>\n</blockquote>\n\n<p>Therefore JavaScript is cached across page reloads, two requests to the same script will not result in re-compilation.</p>\n\n<p><a href=\"http://my.opera.com/core/blog/2009/12/22/carakan-revisited\">Source</a></p>\n\n<hr>\n\n<p><strong>Firefox : SpiderMonkey Engine</strong></p>\n\n<p>SpiderMonkey uses <code>Nanojit</code> as its native back-end, a JIT compiler. The process of compiling the machine code can be seen <a href=\"https://developer.mozilla.org/En/Nanojit\">here</a>. In short, it <em>appears</em> to recompile scripts as they are loaded. However, if <a href=\"https://developer.mozilla.org/En/SpiderMonkey/Internals/Tracing_JIT\">we take a closer look</a> at the internals of <code>Nanojit</code> we see that the higher level monitor <code>jstracer</code>, which is used to track compilation can transition through three stages during compilation, providing a benefit to <code>Nanojit</code>:</p>\n\n<blockquote>\n  <p>The trace monitor's initial state is monitoring. This means that\n  spidermonkey is interpreting bytecode. Every time spidermonkey\n  interprets a backward-jump bytecode, the monitor makes note of the\n  number of times the jump-target program-counter (PC) value has been\n  jumped-to. This number is called the hit count for the PC. If the hit\n  count of a particular PC reaches a threshold value, the target is\n  considered hot.</p>\n  \n  <p>When the monitor decides a target PC is hot, it looks in a hashtable\n  of fragments to see if there is a fragment holding native code for\n  that target PC. If it finds such a fragment, it transitions to\n  executing mode. Otherwise it transitions to recording mode.</p>\n</blockquote>\n\n<p>This means that for <code>hot</code> fragments of code the native code is cached. Meaning that will not need to be recompiled.\nIt is not made clear is these hashed native sections are retained between page refreshes. But I would assume that they are. <strong>If anyone can find supporting evidence for this then excellent.</strong></p>\n\n<p><strong>EDIT</strong>: \nIt's been pointed out that Mozilla developer Boris Zbarsky has stated that Gecko does not cache compiled scripts <em>yet</em>. Taken from <a href=\"http://stackoverflow.com/questions/5957720/if-javascript-interpreter-does-jit-compilation-does-it-cache-results-of-it-fo\">this SO answer</a>.</p>\n\n<hr>\n\n<p><strong>Safari : JavaScriptCore/SquirelFish Engine</strong></p>\n\n<p>I think that the best answer for this implementation has already <a href=\"http://comments.gmane.org/gmane.os.opendarwin.webkit.devel/7639\">been given by someone else</a>.</p>\n\n<blockquote>\n  <p>We don't currently cache the bytecode (or the native code). It is an<br>\n  option we have considered, however, currently, code generation is a<br>\n  trivial portion of JS execution time (&lt; 2%), so we're not pursuing<br>\n  this at the moment.</p>\n</blockquote>\n\n<p>This was written by <a href=\"http://en.wikipedia.org/wiki/Maciej_Stachowiak\">Maciej Stachowiak</a>, the lead developer of Safari. So I think we can take that to be true. </p>\n\n<p>I was unable to find any other information but you can read more about the speed improvements of the latest <code>SquirrelFish Extreme</code> engine <a href=\"http://www.webkit.org/blog/214/introducing-squirrelfish-extreme/\">here</a>, or browse the source code <a href=\"http://trac.webkit.org/browser\">here</a> if you're feeling adventurous.</p>\n\n<hr>\n\n<p><strong>IE : Chakra Engine</strong></p>\n\n<p>There is no current information regarding IE9's JavaScript Engine (Chakra) in this field. <strong>If anyone knows anything, please comment.</strong></p>\n\n<p>This is quite unofficial, but for IE's older engine implementations, Eric Lippert (<a href=\"http://blogs.msdn.com/b/ericlippert/about.aspx\">a MS developer of JScript</a>) states in a blog reply <a href=\"http://blogs.msdn.com/b/ptorr/archive/2003/09/14/56184.aspx\">here</a> that:</p>\n\n<blockquote>\n  <p>JScript Classic acts like a compiled language in the sense that before any JScript Classic program runs, we fully syntax check the code, generate a full parse tree, and generate a bytecode. We then run the bytecode through a bytecode interpreter. In that sense, JScript is every bit as \"compiled\" as Java. <strong>The difference is that JScript does not allow you to persist or examine our proprietary bytecode</strong>. Also, the bytecode is much higher-level than the JVM bytecode -- the JScript Classic bytecode language is little more than a linearization of the parse tree, whereas the JVM bytecode is clearly intended to operate on a low-level stack machine. </p>\n</blockquote>\n\n<p>This suggests that the bytecode does not persist in any way, and thus bytecode is not cached.</p>\n",
                    "is_accepted": false,
                    "score": 279
                },
                {
                    "body": "<p>It's worth nothing that <a href=\"http://www.dartlang.org/\" rel=\"nofollow\">Google Dart</a> explicitly tackles this problem via \"Snapshots\" - the goal is to speed up the initialization and loading time by loading the preparsed version of the code. </p>\n\n<p>InfoQ has a good writeup @ <a href=\"http://www.infoq.com/articles/google-dart\" rel=\"nofollow\">http://www.infoq.com/articles/google-dart</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Do browsers (IE and Firefox) parse linked javascript files every time the page refreshes?</p>\n\n<p>They can cache the files, so I'm guessing they won't try to download them each time, but as each page is essentially separate, I expect them to tear down any old code and re-parse it.</p>\n\n<p>This is inefficient, although perfectly understandable, but I wonder if modern browsers are clever enough to avoid the parsing step within sites. I'm thinking of cases where a site uses a javascript library, like ExtJS or jQuery, etc.</p>\n",
            "last_activity_date": 1329765992,
            "question_id": 1096907,
            "score": 158,
            "tags": [
                "javascript",
                "browser-cache",
                "javascript-engine"
            ],
            "title": "Do browsers parse javascript on every page load?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>readability is a javascript bookmarklet. meaning its client side code that manipulates the DOM. Look at the javascript and you should be able to see whats going on. </p>\n\n<p>Readability's workflow and code:</p>\n\n<pre><code>/*\n     *  1. Prep the document by removing script tags, css, etc.\n     *  2. Build readability's DOM tree.\n     *  3. Grab the article content from the current dom tree.\n     *  4. Replace the current DOM tree with the new one.\n     *  5. Read peacefully.\n*/\n\njavascript: (function () {\n    readConvertLinksToFootnotes = false;\n    readStyle = 'style-newspaper';\n    readSize = 'size-medium';\n    readMargin = 'margin-wide';\n    _readability_script = document.createElement('script');\n    _readability_script.type = 'text/javascript';\n    _readability_script.src = 'http://lab.arc90.com/experiments/readability/js/readability.js?x=' + (Math.random());\n    document.documentElement.appendChild(_readability_script);\n    _readability_css = document.createElement('link');\n    _readability_css.rel = 'stylesheet';\n    _readability_css.href = 'http://lab.arc90.com/experiments/readability/css/readability.css';\n    _readability_css.type = 'text/css';\n    _readability_css.media = 'all';\n    document.documentElement.appendChild(_readability_css);\n    _readability_print_css = document.createElement('link');\n    _readability_print_css.rel = 'stylesheet';\n    _readability_print_css.href = 'http://lab.arc90.com/experiments/readability/css/readability-print.css';\n    _readability_print_css.media = 'print';\n    _readability_print_css.type = 'text/css';\n    document.getElementsByTagName('head')[0].appendChild(_readability_print_css);\n})();\n</code></pre>\n\n<p>And if you follow the JS and CSS files that the above code pulls in you'll get the whole picture:</p>\n\n<p><a href=\"http://lab.arc90.com/experiments/readability/js/readability.js\">http://lab.arc90.com/experiments/readability/js/readability.js</a> (this is pretty well commented, interesting reading)</p>\n\n<p><a href=\"http://lab.arc90.com/experiments/readability/css/readability.css\">http://lab.arc90.com/experiments/readability/css/readability.css</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>There's no 100% reliable way to do this, of course. You can have a look at the Readability source code <a href=\"http://lab.arc90.com/experiments/readability/js/readability.js\">here</a></p>\n\n<p>Basically, what they're doing is trying to identify <em>positive</em> and <em>negative</em> blocks of text. Positive identifiers (i.e. div IDs) would be something like:</p>\n\n<ul>\n<li>article</li>\n<li>body</li>\n<li>content</li>\n<li>blog</li>\n<li>story</li>\n</ul>\n\n<p>Negative identifiers would be:</p>\n\n<ul>\n<li>comment</li>\n<li>discuss</li>\n</ul>\n\n<p>And then they have <em>unlikely</em> and <em>maybe</em> candidates.\nWhat they would do is determine what is most likely to be the main content of the site, see line <code>678</code> in the readability source. This is done by analyzing mostly the length of paragraphs, their identifiers (see above), the DOM tree (i.e. if the paragraph is a last child node),  strip out everything unnecessary, remove formatting, etc.</p>\n\n<p>The code has 1792 lines. It does seem like a non trivial problem, so maybe you can get your inspirations from there.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Readability mainly consists of heuristics that \"just somehow work well\" in many cases.</p>\n\n<p>I have written some research papers about this topic and I would like to explain the background of why it is easy to come up with a solution that works well and when it gets hard to get close to 100% accuracy.</p>\n\n<p>There seems to be a linguistic law underlying in human language that is also (but not exclusively) manifest in Web page content, which already quite clearly separates two types of text (full-text vs. non-full-text or, roughly, \"main content\" vs. \"boilerplate\").</p>\n\n<p>To get the main content from HTML, it is in many cases sufficient to keep only the HTML text elements (i.e. blocks of text that are not interrupted by markup) which have more than about 10 words. It appears that humans choose from two types of text (\"short\" and \"long\", measured by the number of words they emit) for two different motivations of writing text. I would call them \"navigational\" and \"informational\" motivations.</p>\n\n<p>If an author wants you to <em>quickly</em> get what is written, he/she uses \"navigational\" text, i.e. few words (like \"STOP\", \"Read this\", \"Click here\"). This is the mostly prominent type of text in navigational elements (menus etc.)</p>\n\n<p>If an author wants you to deeply understand what he/she means, he/she uses many words. This way, ambiguity is removed at the cost of an increase in redundancy. Article-like content usually falls into this class as it has more than only a few words.</p>\n\n<p>While this separation seems to work in a plethora of cases, it is getting tricky with headlines, short sentences, disclaimers, copyright footers etc.</p>\n\n<p>There are more sophisticated strategies, and features, that help separating main content from boilerplate. For example the link density (number of words in a block that are linked versus the overall number of words in the block), the features of the previous/next blocks, the frequency of a particular block text in the \"whole\" Web, the DOM structure of HTML document, the visual image of the page etc.</p>\n\n<p>You can read my latest article \"<a href=\"http://code.google.com/p/boilerpipe/wiki/WSDM2010Paper\">Boilerplate Detection using Shallow Text Features</a>\" to get some insight from a theoretical perspective. You may also watch the video of my paper presentation on VideoLectures.net.</p>\n\n<p>\"Readability\" uses some of these features. If you carefully watch the SVN changelog, you will see that the number of strategies varied over time, and so did the extraction quality of Readability. For example, the introduction of link density in December 2009 very much helped improving.</p>\n\n<p>In my opinion, it therefore makes no sense in saying \"Readability does it like that\", without mentioning the exact version number.</p>\n\n<p>I have published an Open Source HTML content extraction library called <a href=\"http://code.google.com/p/boilerpipe/\">boilerpipe</a>, which provides several different extraction strategies. Depending on the use case, one or the other extractor works better. You can try these extractors on pages on your choice using the companion boilerpipe-web app on Google AppEngine.</p>\n\n<p>To let numbers speak, see the \"<a href=\"http://code.google.com/p/boilerpipe/wiki/Benchmarks\">Benchmarks</a>\" page on the boilerpipe wiki which compares some extraction strategies, including boilerpipe, Readability and Apple Safari.</p>\n\n<p>I should mention that these algorithms assume that the main content is actually full text. There are cases where the \"main content\" is something else, e.g. an image, a table, a video etc. The algorithms won't work well for such cases.</p>\n\n<p>Cheers,</p>\n\n<p>Christian</p>\n",
                    "is_accepted": false,
                    "score": 114
                },
                {
                    "body": "<p>Interesting. I have developed a similar PHP script. It basically scans articles and attaches parts of speech to all text (Brill Tagger). Then, grammatically invalid sentences are instantly eliminated. Then, sudden shifts in pronouns or past tense indicate the article is over, or hasn't started yet. Repeated phrases are searched for and eliminated, like \"Yahoo news sports finance\" appears ten times in the page. You can also get statistics on the tone with a plethora of word banks relating to various emotions. Sudden changes in tone, from active/negative/financial, to passive/positive/political indicates a boundary. It's endless really, however dig you want to deep.</p>\n\n<p>The major issues are links, embedded anomalies, scripting styles and updates. </p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>For a while, I've been trying to find a way of intelligently extracting the \"relevant\" text from a URL by eliminating the text related to ads and all the other clutter.After several months of researching, I gave it up as a problem that cannot be accurately determined. (I've tried different ways but none were reliable)</p>\n\n<p>A week back, I stumbled across <a href=\"http://lab.arc90.com/experiments/readability/\">Readability</a> - a plugin that converts any URL into readable text. It looks pretty accurate to me. My guess is that they somehow have an algorithm that's smart enough to extract the relevant text.</p>\n\n<p>Does anyone know how they do it? Or how I could do it reliably?</p>\n",
            "last_activity_date": 1320317219,
            "question_id": 3652657,
            "score": 68,
            "tags": [
                "javascript",
                "asp.net",
                "extraction"
            ],
            "title": "What algorithm does Readability use for extracting text from URLs?"
        },
        {
            "answer_count": 18,
            "answers": [
                {
                    "body": "<p><strong>Edit:</strong> My answer is obsolete. Node.js is a very fast changing technology.</p>\n\n<p>I also wondered about <strong>reloading</strong> modules. I modified node.js and have published the source at Github at <a href=\"http://github.com/nalply/node\" rel=\"nofollow\">nalply/node</a>. The only difference is the function <code>require</code>. It has an optional second argument <code>reload</code>.</p>\n\n<pre><code>require(url, reload)\n</code></pre>\n\n<p>To reload <code>app.js</code> in current directory use</p>\n\n<pre><code>app = require(\"./app\", true);\n</code></pre>\n\n<p>Write something like this, and you have <strong>auto</strong>-reload:</p>\n\n<pre><code>process.watchFile(script_name, function(curr, prev) {\n    module = reload(script_name, true);\n});\n</code></pre>\n\n<p>The only problem I see is the variable <code>module</code>, but I am working at it now.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Take a look at <a href=\"http://github.com/felixge/node/commit/86b5354a10026c9c86c3a3250f17f4ed45cbdc6c\" rel=\"nofollow\">require.hot()</a> patch by Felix Geisend\u00f6rfer. I use it with modified Nerve framework.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There was a recent <a href=\"http://groups.google.com/group/nodejs/browse%5Fthread/thread/c9b82171d3c7aac2\" rel=\"nofollow\">thread</a> about this subject on the node.js mailing list.  The short answer is no, it's currently not possible auto-reload required files, but several people have developed patches that add this feature. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is Node-Supervisor that you can install by</p>\n\n<pre><code>npm install supervisor\n</code></pre>\n\n<p>see <a href=\"http://github.com/isaacs/node-supervisor\">http://github.com/isaacs/node-supervisor</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><a href=\"http://blog.romeda.org/2010/01/hot-code-loading-in-nodejs.html\" rel=\"nofollow\">Here</a> is a blog post about Hot Reloading for Node. It provides a <a href=\"http://github.com/blaine/node/tree/hotload\" rel=\"nofollow\">github Node branch</a> that you can use to replace your installation of Node to enable Hot Reloading.</p>\n\n<p>From the blog:</p>\n\n<pre><code>var requestHandler = require('./myRequestHandler');\n\nprocess.watchFile('./myRequestHandler', function () {\n  module.unCacheModule('./myRequestHandler');\n  requestHandler = require('./myRequestHandler');\n}\n\nvar reqHandlerClosure = function (req, res) {\n  requestHandler.handle(req, res);\n}\n\nhttp.createServer(reqHandlerClosure).listen(8000);\n</code></pre>\n\n<blockquote>\n  <p>Now, any time you modify myRequestHandler.js, the above code will no\u00adtice and re\u00adplace the local re\u00adquestHandler with the new code. Any ex\u00adist\u00ading re\u00adquests will con\u00adtin\u00adue to use the old code, while any new in\u00adcom\u00ading re\u00adquests will use the new code. All with\u00adout shut\u00adting down the serv\u00ader, bounc\u00ading any re\u00adquests, pre\u00adma\u00adture\u00adly killing any re\u00adquests, or even re\u00adly\u00ading on an in\u00adtel\u00adli\u00adgent load bal\u00adancer.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>solution at: \n<a href=\"http://github.com/shimondoodkin/node-hot-reload\" rel=\"nofollow\">http://github.com/shimondoodkin/node-hot-reload</a></p>\n\n<p>notice that you have to take care by yourself of the references used.</p>\n\n<p>that means if you did : var x=require('foo'); y=x;z=x.bar; and hot reloaded\nit.</p>\n\n<p>it means you have to replace the references stored in x, y and z. in the hot reaload callback function.</p>\n\n<p>some people confuse hot reload with auto restart\nmy nodejs-autorestart module also has upstart integration to enable auto start on boot.\nif you have a small app auto restart is fine, but when you have a large app hot reload is more suitable. simply because hot reload is faster.</p>\n\n<p>Also I like my node-inflow module.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>node-supervisor is awesome</p>\n\n<p>usage to restart on save:</p>\n\n<pre>\nnpm install supervisor -g\nsupervisor app.js\n</pre>\n\n<p>by isaacs - <a href=\"http://github.com/isaacs/node-supervisor\">http://github.com/isaacs/node-supervisor</a></p>\n",
                    "is_accepted": false,
                    "score": 248
                },
                {
                    "body": "<p>I am working on making a rather tiny node \"thing\" that is able to load/unload modules at-will (so, i.e. you could be able to restart part of your application without bringing the whole app down).\nI am incorporating a (very stupid) dependency management, so that if you want to stop a module, all the modules that depends on that will be stopped too.</p>\n\n<p>So far so good, but then I stumbled into the issue of how to reload a module. Apparently, one could just remove the module from the \"require\" cache and have the job done. Since I'm not keen to change directly the node source code, I came up with a <em>very</em> hacky-hack that is: search in the stack trace the last call to the \"require\" function, grab a reference to it's \"cache\" field and..well, delete the reference to the node:\n<strike></p>\n\n<pre><code>    var args = arguments\n    while(!args['1'] || !args['1'].cache) {\n        args = args.callee.caller.arguments\n    }\n    var cache = args['1'].cache\n    util.log('remove cache ' + moduleFullpathAndExt)\n    delete( cache[ moduleFullpathAndExt ] )\n</code></pre>\n\n<p></strike>\nEven easier, actually:</p>\n\n<pre><code>var deleteCache = function(moduleFullpathAndExt) {\n  delete( require.cache[ moduleFullpathAndExt ] )\n}\n</code></pre>\n\n<p>Apparently, this works just fine. I have absolutely no idea of what that arguments[\"1\"] means, but it's doing its job. I believe that the node guys will implement a reload facility someday, so I guess that for now this solution is acceptable too.\n(btw. my \"thing\" will be here: <a href=\"https://github.com/cheng81/wirez\" rel=\"nofollow\">https://github.com/cheng81/wirez</a> , go there in a couple of weeks and you should see what I'm talking about)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>i found a simple way:</p>\n\n<pre><code>delete require.cache['/home/shimin/test2.js']\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 56
                },
                {
                    "body": "<p><em>nodemon</em> came up first in a google search, and it seems to do the trick:</p>\n\n<pre><code>npm install nodemon -g\ncd whatever_dir_holds_my_app\nnodemon app.js\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If somebody still comes to this question and wants to solve it using only the standard modules I made a simple example:</p>\n\n<pre><code>var cp = require('child_process');\nvar fs = require('fs');\n\nvar server = cp.fork('server.js');\nconsole.log('Server started');\n\nfs.watchFile('server.js', function (event, filename) {\n    server.kill();\n    console.log('Server stopped');\n    server = cp.fork('server.js');\n    console.log('Server started');\n});\n\nprocess.on('SIGINT', function () {\n    server.kill();\n    fs.unwatchFile('server.js');\n    process.exit();\n});\n</code></pre>\n\n<p>This examples is only for one file (server.js), but can be adapted to multiple files using an array of files and a for loop to get all file names. This code was made for Node.js 0.8 API, it is not adapted for some specific needs but will work in some simple apps.</p>\n\n<p>UPDATE:\nThis functional is implemented in my module <a href=\"https://www.npmjs.org/package/simpler\" rel=\"nofollow\">simpleR</a>, <a href=\"https://github.com/micnic/simpleR\" rel=\"nofollow\">GitHub repo</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>A good, up to date alternative to <code>supervisor</code> is <strong><a href=\"https://github.com/remy/nodemon\"><code>nodemon</code></a></strong>:</p>\n\n<blockquote>\n  <p>Monitor for any changes in your node.js application and automatically restart the server - perfect for development</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 112
                },
                {
                    "body": "<p>Use this:</p>\n\n<pre><code>function reload_config(file) {\n  if (!(this instanceof reload_config))\n    return new reload_config(file);\n  var self = this;\n\n  self.path = path.resolve(file);\n\n  fs.watchFile(file, function(curr, prev) {\n    delete require.cache[self.path];\n    _.extend(self, require(file));\n  });\n\n  _.extend(self, require(file));\n}\n</code></pre>\n\n<p>All you have to do now is:</p>\n\n<pre><code>var config = reload_config(\"./config\");\n</code></pre>\n\n<p>And config will automatically get reloaded :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>loaddir is my solution for quick loading of a directory, recursively.</p>\n\n<p>can return </p>\n\n<p><code>{ 'path/to/file': 'fileContents...' }</code>\nor \n<code>{ path: { to: { file: 'fileContents'} } }</code></p>\n\n<p>It has <code>callback</code> which will be called when the file is changed.</p>\n\n<p>It handles situations where files are large enough that <code>watch</code> gets called before they're done writing.</p>\n\n<p>I've been using it in projects for a year or so, and just recently added promises to it.</p>\n\n<p>Help me battle test it!</p>\n\n<p><a href=\"https://github.com/danschumann/loaddir\" rel=\"nofollow\">https://github.com/danschumann/loaddir</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use auto-reload to reload the module without shutdown the server.</p>\n\n<h2>install</h2>\n\n<pre><code>npm install auto-reload\n</code></pre>\n\n<h2>example</h2>\n\n<p>data.json</p>\n\n<pre><code>{ \"name\" : \"Alan\" }\n</code></pre>\n\n<p>test.js</p>\n\n<pre><code>var fs = require('fs');\nvar reload = require('auto-reload');\nvar data = reload('./data', 3000); // reload every 3 secs\n\n// print data every sec\nsetInterval(function() {\n    console.log(data);\n}, 1000);\n\n// update data.json every 3 secs\nsetInterval(function() {\n    var data = '{ \"name\":\"' + Math.random() + '\" }';\n    fs.writeFile('./data.json', data);\n}, 3000);\n</code></pre>\n\n<p>Result:</p>\n\n<pre><code>{ name: 'Alan' }\n{ name: 'Alan' }\n{ name: 'Alan' }\n{ name: 'Alan' }\n{ name: 'Alan' }\n{ name: '0.8272748321760446' }\n{ name: '0.8272748321760446' }\n{ name: '0.8272748321760446' }\n{ name: '0.07935990858823061' }\n{ name: '0.07935990858823061' }\n{ name: '0.07935990858823061' }\n{ name: '0.20851597073487937' }\n{ name: '0.20851597073487937' }\n{ name: '0.20851597073487937' }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>another simple solution is to <strong>use fs.readFile instead of using require</strong>\nyou can save a text file contaning a json object, and create a interval on the server to reload this object.</p>\n\n<p>pros:</p>\n\n<ul>\n<li>no need to use external libs</li>\n<li>relevant for production (reloading config file on change)</li>\n<li>easy to implement</li>\n</ul>\n\n<p>cons:</p>\n\n<ul>\n<li>you can't reload a module - just a json containing key-value data</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For people using Vagrant and PHPStorm, <a href=\"https://www.jetbrains.com/phpstorm/webhelp/using-file-watchers.html\" rel=\"nofollow\">file watcher</a> is a faster approach</p>\n\n<ul>\n<li><p>disable immediate sync of the files so you run the command only on save then create a scope for the *.js files and working directories and add this command </p>\n\n<p>vagrant ssh -c \"/var/www/gadelkareem.com/forever.sh restart\"</p></li>\n</ul>\n\n<p>where forever.sh is like</p>\n\n<pre><code>#!/bin/bash\n\ncd /var/www/gadelkareem.com/ &amp;&amp; forever $1 -l /var/www/gadelkareem.com/.tmp/log/forever.log -a app.js\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I recently came to this question because the usual suspects were not working with linked packages. If you're like me and are taking advantage of <code>npm link</code> during development to effectively work on a project that is made up of many packages, it's important that changes that occur in dependencies trigger a reload as well. </p>\n\n<p>After having tried node-mon and pm2, even following their instructions for additionally watching the node_modules folder, they still did not pick up changes. Although there are some custom solutions in the answers here, for something like this, a separate package is cleaner. I came across <a href=\"https://www.npmjs.com/package/node-dev\" rel=\"nofollow\">node-dev</a> today and it works perfectly without any options or configuration.</p>\n\n<p>From the Readme:</p>\n\n<blockquote>\n  <p>In contrast to tools like supervisor or nodemon it doesn't scan the filesystem for files to be watched. Instead it hooks into Node's require() function to watch only the files that have been actually required.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>EDIT: Use <a href=\"http://github.com/isaacs/node-supervisor\">http://github.com/isaacs/node-supervisor</a>; This is an old question and the code example is made with an outdated Node.js API. </p>\n\n<p>Any ideas on how I could implement an auto-reload of files in node.js. I'm tired of restarting the server every time I change a file. \nApparently Node.js' <code>require()</code> function does not reload files if they already have been required, so I need to do something like this:</p>\n\n<pre><code>var sys     = require('sys'), \n    http    = require('http'),\n    posix   = require('posix'),\n    json    = require('./json');\n\nvar script_name      = '/some/path/to/app.js';\nthis.app     = require('./app').app;\n\nprocess.watchFile(script_name, function(curr, prev){\n    posix.cat(script_name).addCallback(function(content){\n        process.compile( content, script_name );\n    });\n});\n\nhttp.createServer(this.app).listen( 8080 );\n</code></pre>\n\n<p>And in the <em>app.js</em> file I have:</p>\n\n<pre><code>var file = require('./file');\nthis.app = function(req, res) { \n    file.serveFile( req, res, 'file.js');  \n}\n</code></pre>\n\n<p>But this also isn't working - I get an error in the <code>process.compile()</code> statement saying that 'require' is not defined. <code>process.compile</code> is evaling the <em>app.js</em>, but has no clue about the node.js globals.</p>\n",
            "last_activity_date": 1418406323,
            "question_id": 1972242,
            "score": 187,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "Auto-reload of files in Node.js"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><a href=\"https://github.com/angular-ui/ui-router\">ui-router</a> is a 3rd-party module and is very powerful.  It supports everything the normal ngRoute can do as well as many extra functions.</p>\n\n<p>Here are some common reason ui-router is chosen over ngRoute:</p>\n\n<ul>\n<li><p>ui-router allows for <a href=\"https://github.com/angular-ui/ui-router/wiki/Nested-States-%26-Nested-Views\">nested views</a> and <a href=\"https://github.com/angular-ui/ui-router/wiki/Multiple-Named-Views\">multiple named views</a>.  This is very useful with larger app where you may have pages that inherit from other sections.</p></li>\n<li><p>ui-router allows for you to have strong-type linking between states based on state names.  Change the url in one place will update every link to that state when you build your links with <a href=\"http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.directive:ui-sref\"><code>ui-sref</code></a>. Very useful for larger projects where URLs might change.</p></li>\n<li><p>There is also the concept of the <a href=\"http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_decorator\">decorator</a> which could be used to allow your routes to be dynamically created based on the URL that is trying to be accessed. This could mean that you will not need to specify all of your routes before hand.</p></li>\n<li><p><a href=\"https://github.com/angular-ui/ui-router/wiki#state-manager\">states</a> allow you to map and access different information about different states and you can easily pass information between states via <a href=\"https://github.com/angular-ui/ui-router/wiki/URL-Routing#stateparams-service\"><code>$stateParams</code></a>.</p></li>\n<li><p>You can easily determine if you are in a state or parent of a state to adjust UI element (highlighting the navigation of the current state) within your templates via <a href=\"http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$state\"><code>$state</code></a> provided by ui-router which you can expose via setting it in <code>$rootScope</code> on <code>run</code>.</p></li>\n</ul>\n\n<p>In essence, ui-router is ngRouter with more features, under the sheets it is quite different. These additional features are very useful for larger applications.</p>\n\n<p>More Information:</p>\n\n<ul>\n<li>Github: <a href=\"https://github.com/angular-ui/ui-router\">https://github.com/angular-ui/ui-router</a></li>\n<li>Documentation:\n<ul>\n<li>API Reference: <a href=\"http://angular-ui.github.io/ui-router/site/#/api\">http://angular-ui.github.io/ui-router/site/#/api</a></li>\n<li>Guide: <a href=\"https://github.com/angular-ui/ui-router/wiki\">https://github.com/angular-ui/ui-router/wiki</a></li>\n</ul></li>\n<li>FAQs: <a href=\"https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions\">https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions</a></li>\n<li>Sample Application: <a href=\"http://angular-ui.github.io/ui-router/sample/#/\">http://angular-ui.github.io/ui-router/sample/#/</a> </li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 265
                },
                {
                    "body": "<p>ngRoute is part of the core AngularJS framework.</p>\n\n<p>ui-router is a community library that has been created to attempt to improve upon the default routing capabilities.</p>\n\n<p>here is a good article about configuring/setting up ui-router:</p>\n\n<p><a href=\"http://www.ng-newsletter.com/posts/angular-ui-router.html\">http://www.ng-newsletter.com/posts/angular-ui-router.html</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p><strong>ngRoute</strong> is a module developed by the Angular.js team which was earlier part of the Angular core.</p>\n\n<p><strong>ui-router</strong> is a framework which was made outside the Angular.js project to improve and enhance routing capabalities. </p>\n\n<p>From the ui-router <a href=\"https://github.com/angular-ui/ui-router\">documentation</a>:</p>\n\n<blockquote>\n  <p>AngularUI Router is a routing framework for AngularJS, which allows\n  you to organize the parts of your interface into a state machine.\n  Unlike the $route service in Angular core, which is organized around\n  URL routes, UI-Router is organized around states, which may optionally\n  have routes, as well as other behavior, attached.</p>\n  \n  <p>States are bound to named, nested and parallel views, allowing you to\n  powerfully manage your application's interface.</p>\n</blockquote>\n\n<p>Neither of them is better, you will have to chose the most appropriate for your project.</p>\n\n<p>However, if you plan to have complex views in your application and you would like to deal with the \"$state\" notion. I recommend you to chose ui-router.</p>\n\n<p>Hope that help !</p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>If you want to make use of nested views functionality implemented within ngRoute paradigm, try <a href=\"http://angular-route-segment.com\">angular-route-segment</a> - it aims to extend ngRoute rather than to replace it.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>ngRoute is basic routing library, where you can specify just one view and controller for any route.</p>\n\n<p>With ui-router, you can specify multiple views, both parallel and nested. So if you app requires (or may require in future) any kind of complex routing/views, then go ahead with ui-router. </p>\n\n<p><a href=\"http://www.ng-newsletter.com/posts/angular-ui-router.html\" rel=\"nofollow\">This</a> is best getting started guide for AngularUI Router.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>ngRoute is a angular core module which is good for basic scenarios. I believe that they will add more powerful features in upcoming releases.</p>\n</blockquote>\n\n<p>URL: <a href=\"https://docs.angularjs.org/api/ngRoute\">https://docs.angularjs.org/api/ngRoute</a></p>\n\n<blockquote>\n  <p>Ui-router is a contributed module which is overcome the problems of ngRoute. Mainly Nested/Complex views.</p>\n</blockquote>\n\n<p>URL: <a href=\"https://github.com/angular-ui/ui-router\">https://github.com/angular-ui/ui-router</a></p>\n\n<p>Some of the difference between ui-router and ngRoute</p>\n\n<p><a href=\"http://www.amasik.com/angularjs-ngroute-vs-ui-router/\">http://www.amasik.com/angularjs-ngroute-vs-ui-router/</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/PkUq0.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I am new to AngularJS. I find Angular quite interesting and planning to use angular in my big apps. So I am in the process to find out the right modules to use.</p>\n\n<p>What is the difference between <strong>ngRoute (angular-route.js)</strong> and <strong>ui-router (angular-ui-router.js)</strong> modules?</p>\n\n<p>In many articles when <em>ngRoute</em> is used, route is configured with <strong><em>$routeProvider</em></strong>. However, when used with <em>ui-router</em>, route is configured with <strong><em>$stateProvider and $urlRouterProvider</em></strong>. </p>\n\n<p>This creates a bit of confusion for me. Which module should I use for better manageability and extensibility? Your answers are greatly appreciated. </p>\n",
            "last_activity_date": 1418913124,
            "question_id": 21023763,
            "score": 189,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-routing",
                "angular-ui-router",
                "angularjs-module"
            ],
            "title": "Difference between angular-route and angular-ui-router"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I never saw a widely acknowledged JavaScript coding standard out there. We did write our own some time ago and I <a href=\"http://blog.galasoft.ch/archive/2007/02/05/105493.aspx\" rel=\"nofollow\">published it on my blog</a> in accordance with my employer.</p>\n\n<p>Keep in mind that some of the guidelines might be a bit outdated.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You can find some simple but essential coding conventions at the <a href=\"http://code.google.com/p/gmaps-utility-library-dev/wiki/JavascriptCodingConventions\" rel=\"nofollow\">Google Code Wiki</a>.</p>\n\n<p>For very detailed style guides read the <a href=\"http://dojotoolkit.org/community/styleGuide\" rel=\"nofollow\">Dojo Style Guide</a>. It is going over naming conventions, file conventions, variable usage, code layout, whitespace, and comments.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Not exactly what you're looking for, but (like Doug Crockford's vids) I think everybody who writes/edits/reviews JS should look at Chris Heilmann's <a href=\"http://www.slideshare.net/cheilmann/fronteers-maintainability-presentation\">slides</a> and <a href=\"http://ajaxian.com/archives/maintainable-javascript-videos-are-now-available\">videos</a> on maintainable javascript.</p>\n\n<p>In the <a href=\"http://www.slideshare.net/cheilmann/fronteers-maintainability-presentation\">slides</a>, slide 127, he says don't worry so much about style guides/code standards, reformat all code checked in to VCS.</p>\n\n<p>Also these:</p>\n\n<p><a href=\"http://developer.mozilla.org/en/JavaScript_style_guide\">Mozilla JavaScript Tips</a></p>\n\n<p><a href=\"http://neil.rashbrook.org/Js.htm\">JavaScript Style Guide</a></p>\n",
                    "is_accepted": true,
                    "score": 68
                },
                {
                    "body": "<p>Another reason why <a href=\"http://javascript.crockford.com/code.html\">Crockford's JavaScript</a> coding guidelines are a good idea to follow: </p>\n\n<p>This code (below) actually returns undefined because of JavaScript's semicolon injection - which is a damn good reason to get the whole team of developers singing from the same song sheet:</p>\n\n<pre><code>return // injected semicolon, therefore returns 'undefined'\n{\n    javascript : \"fantastic\"\n}; // object constructs anonymously but nothing happens with it.\n</code></pre>\n\n<p>Bit more about that at <a href=\"http://www.robertnyman.com/2008/10/16/beware-of-javascript-semicolon-insertion\">Beware of JavaScript semicolon insertion</a></p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>The <a href=\"http://jibbering.com/faq/notes/code-guidelines/\" rel=\"nofollow\">comp.lang.javascript Code Guidelines</a> document points to causes of errors and problems related to javascript for web applications and how to avoid them.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Myself and a few others recently put together <a href=\"http://www.asp.net/ajaxlibrary/act_contribute_codingStandards.ashx\" rel=\"nofollow\">these</a> (PDF or HTML)</p>\n\n<p>They are primarily intended for use with the Ajax Control Toolkit but realistically contain all sorts of useful guidance whichever framework you use.</p>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Google has posted a <a href=\"http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml\">Javascript guide</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>A bit puzzled that I cannot find on the replies \n<a href=\"https://github.com/rwldrn/idiomatic.js\" rel=\"nofollow\">Idiomatic.js</a> and \n<a href=\"http://docs.jquery.com/JQuery_Core_Style_Guidelines\" rel=\"nofollow\">jQuery Core Style Guide</a>. Addy Osmani puts those two on the very top of full list of coding styles for JavaScript in his \"JavaScript Style Guides And Beautifiers\" article. </p>\n\n<p>I personally prefer jQuery standard, though it doesn't much differ from Idiomatic.js. But whatever standard you choose you will need a validator to check how successful you are following it. I couldn't find any for jQuery or at least Idiomatic, but eventually came up with <a href=\"https://github.com/dsheiko/jscodesniffer\" rel=\"nofollow\">JS_CodeSniffer</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>What are the established coding standards for JavaScript?</p>\n",
            "last_activity_date": 1360632419,
            "question_id": 211795,
            "score": 148,
            "tags": [
                "javascript",
                "coding-style"
            ],
            "title": "Are there any coding standards for JavaScript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>If you are starting with <a href=\"http://stackoverflow.com/questions/2687566/learning-javascript-in-one-weekend/2687581#2687581\">the W3Schools tutorial</a>, you should get through that in just a couple of hours, at most. In the remaining time I would suggest watching the video lectures listed in the following blog article:</p>\n\n<ul>\n<li><a href=\"http://www.catonmat.net/blog/learning-javascript-programming-language-through-video-lectures\" rel=\"nofollow\">Learning JavaScript Programming Language through Video Lectures</a> by Peteris Krumins</li>\n</ul>\n\n<p>The author of that blog article wrote very detailed points on each video talk, so you can get a very clear idea of what will be discussed. The talks are given by <a href=\"http://en.wikipedia.org/wiki/Douglas_Crockford\" rel=\"nofollow\">Douglas Crockford</a>, <a href=\"http://en.wikipedia.org/wiki/John_Resig\" rel=\"nofollow\">John Resig</a> and <a href=\"http://www.nczonline.net/\" rel=\"nofollow\">Nicholas Zakas</a> - all significant figures in the JavaScript world. These should take quite a big chunk from your weekend, but they should serve as a very sound introduction for when you go through \"<a href=\"http://books.google.com/books?id=PXa2bby0oQ0C&amp;printsec=frontcover&amp;dq=javascript+the+good+parts&amp;ei=PqLPS6r3No3KzgT_taX1CQ&amp;cd=1\" rel=\"nofollow\">The Good Parts</a>\" book.</p>\n\n<p>JavaScript is a very expressive language, and I hope learning it will be fun. You can really sense the enthusiasm of the speakers in the above talks when they describe some of the good features of the language, such as <a href=\"http://en.wikipedia.org/wiki/Closure_%28computer_science%29\" rel=\"nofollow\">closures</a> and <a href=\"http://en.wikipedia.org/wiki/First-class_function\" rel=\"nofollow\">first-class functions</a>. Enjoy!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you're learning Javascript it's worth checking out <a href=\"http://jquery.com\" rel=\"nofollow\">jQuery</a> and <a href=\"http://www.prototypejs.org\" rel=\"nofollow\">Prototype</a> as they will help  a lot with writing cross browser Javascript as well as some great resource for performing some of the trickier tasks in JS like animation, etc. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>i second the <a href=\"http://www.w3schools.com\" rel=\"nofollow\">W3Schools</a> reference.  I also like the <a href=\"http://rads.stackoverflow.com/amzn/click/0672328801\" rel=\"nofollow\">Javascript Phrasebook</a>, it's got real world examples with brief explanations of each one.  Doesn't go into the history or theory of the language, which may be too much reading if you want to stuff as much as possible into one weekend.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is my list of <em>really</em> good resources to learn the language:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/core_javascript_1.5_guide\">Mozilla Developer Center: Core JavaScript 1.5 Guide</a></li>\n<li><a href=\"http://eloquentjavascript.net/\">Eloquent JavaScript</a> (Interactive tutorial)</li>\n<li><a href=\"http://ejohn.org/apps/learn/\">Learning Advanced JavaScript</a> (Interactive tutorial)</li>\n<li><a href=\"http://www.quirksmode.org/\">QuirksMode</a> (The prime source for browser compatibility information)</li>\n<li><a href=\"https://developer.mozilla.org/en/A_re-introduction_to_JavaScript\">A re-introduction to JavaScript</a> (Great article)</li>\n<li><a href=\"http://yuiblog.com/crockford/\">Douglas Crockford Video Series</a></li>\n<li><a href=\"https://developer.mozilla.org/en/Introduction_to_Object-Oriented_JavaScript\">Introduction to Object Oriented JavaScript</a></li>\n<li><a href=\"http://www.3site.eu/doc/\">JavaScript Prototypal Inheritance</a></li>\n<li><a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMAScript Language Specification</a></li>\n</ul>\n\n<p>Tools:</p>\n\n<ul>\n<li>A debugger\n<ul>\n<li><a href=\"http://getfirebug.com\">Firebug</a> for Firefox</li>\n<li><a href=\"http://www.opera.com/dragonfly/\">Dragonfly</a> for Opera</li>\n<li><a href=\"http://www.apple.com/safari/features.html\">Developer tools</a> (Safari / WebKit)</li>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/dd565628%28VS.85%29.aspx\">IE8 Developer Tools</a></li>\n</ul></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 65
                },
                {
                    "body": "<p>I was more or less in your situation. What I did was </p>\n\n<ul>\n<li><p>I read \"javascript, the good parts\". It's a good book, but don't take it literally. For example, its use of objects, completely neglecting the new operator and the native object instantiation mechanism is frankly excessive. Hence, learn the prototype-based mechanism well.</p></li>\n<li><p>take jQuery and learn it by using. Remember that jQuery is a great library to manipulate the web page DOM. add nodes, remove nodes, and much more. jQuery abstracts many browser dependent operations, so you don't go mad with browser incompatibilities.</p></li>\n<li><p>tinker and when you find yourself in a troublesome spot, use FireBug to find the trouble. Make smaller examples, be very wary of variables introduced without the <code>var</code> keyword, and always keep into account that <code>this</code> refers to the object owning a given routine, and this could be an unexpected one.</p></li>\n</ul>\n\n<p>Javascript (and JS on the DOM) is a nice language, but its logic can be baffling sometimes. Don't give up. Once you get to understand how it works, it's rather intuitive.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The part of your question that matters here is </p>\n\n<blockquote>\n  <p>[how do] experienced Javascript developers ... get the basics of Javascript down in 24/28 hours</p>\n</blockquote>\n\n<p>Experience is not something that you can get in one night, one week, one month, or one year.  Experience is something that you acquire over the course of years of hard work &mdash; encountering bugs, learning best practices, re-writing code that you wrote four years before and asking yourself, \"why did I do this\", optimizing for far-less-than-perfect environments ...</p>\n\n<p>That being said, if you have only one night to learn enough to make you dangerous, then start at the bottom and work your way up.  Daniel Vassallo has given you one very nice link already, and more than one person has suggested W3Schools for a quick overview of both Javascript and the DOM.  </p>\n\n<p>But don't start with any of that.  Instead, start by determining, as well as you can, what it is you want to be able to do with Javascript tomorrow. To do that you need to ask yourself two simple questions.</p>\n\n<p><strong>What is your level of programing expertise?</strong> Can you code complex algorithms in <code>C</code> and <code>C++</code> with the occasionally foray into some variant of assembler? Have you ever worked on a decently large project in a slightly \"higher level\" language like <code>C#</code> or <code>Java</code>? Do you know at least one scripting language decently? Or do the phrases \"functional programing\", \"class-based inheritance\" and \"bubble sort\" mean nothing to you right off the bat? If you are in any of the first three categories, a little time with a few of the <strong><a href=\"http://javascript.crockford.com/prototypal.html\">better</a> <a href=\"http://javascript.crockford.com/little.html\">tutorials</a> <a href=\"http://perfectionkills.com/javascript-quiz/\">on</a> <a href=\"http://www.jibbering.com/faq/faq_notes/closures.html\">the</a> <a href=\"http://ejohn.org/apps/learn/\">Internet</a></strong>, and maybe a quick look at a Stackoverflow <strong><a href=\"http://stackoverflow.com/questions/61088/hidden-features-of-javascript\">question</a> <a href=\"http://stackoverflow.com/questions/2628672/what-every-javascript-programmer-should-know\">or</a> <a href=\"http://stackoverflow.com/questions/2687566/learning-javascript-in-one-weekend/2687693#2687693\">two</a></strong> should have you up and running in no time. If you are in the last category, you might do well to start off with the basics of programing in general.  No matter what you are going to need an environment in which to learn. Which brings us to the second question ...</p>\n\n<p><strong>What is your platform?</strong> Are you planning on doing some server-side programing with <a href=\"http://nodejs.org/\"><code>node.js</code></a>? Maybe you planning on developing some utility in a <a href=\"http://www.mozilla.org/rhino/\"><code>Rhino</code></a> or <a href=\"http://msdn.microsoft.com/en-us/library/yek4tbz0%28VS.85%29.aspx\"><code>JScript</code></a> environment? If either of these situations are the case then reading the documentation for the platform you will be developing on will stand you in much better stead than reading up on the DOM.  If, on the other hand you are planning on developing for the web, then you cannot do much better than to grab <a href=\"http://www.mozilla.com/en-US/firefox/firefox.html\">Firefox</a> with the <a href=\"http://getfirebug.com/\">Firebug</a> extension and start by building a simplified version of what you are going to be working on tomorrow.</p>\n\n<p>And if none of this is in any way helpful to you then hopefully by the time you have finished reading it, someone else will have answered the question in a far more suitable manner ... that's the beauty of Stackoverflow.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://www.codecademy.com\" rel=\"nofollow\">codecademy</a> is really excellent site to learn not only javascript but HTML and css and some more stuffs. This site is a bit different than others. because you will learn stuffs in this site interactively.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Similar to <a href=\"http://stackoverflow.com/questions/2682561/learning-python-in-one-weekend\">this question</a>, I am wondering if experienced JavaScript developers have any websites they use with examples to get the basics of JavaScript down in 24/28 hours? I have looked at Douglas Crockford's Google Tech Talk and I bought the book \"Javascript: The Good Parts\", but I haven't had time to read it. </p>\n",
            "last_activity_date": 1355391562,
            "question_id": 2687566,
            "score": 29,
            "tags": [
                "javascript"
            ],
            "title": "Learning JavaScript in one weekend?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Include <code>'use strict';</code> as the first statement in a wrapping function, so it only affects that function.  This prevents problems when concatenating scripts that aren't strict.</p>\n\n<p>See Douglas Crockford's latest blog post <a href=\"http://www.yuiblog.com/blog/2010/12/14/strict-mode-is-coming-to-town/\">Strict Mode Is Coming To Town</a>.</p>\n\n<p>Example from that post:</p>\n\n<pre><code>(function () {\n   'use strict';\n   // this function is strict...\n}());\n\n(function () {\n   // but this function is sloppy...\n}());\n</code></pre>\n\n<p><strong>Update:</strong>\nIn case you don't want to wrap in immediate function (e.g. it is a node module), then you can disable the warning.</p>\n\n<p>For <strong>JSLint</strong> (per <a href=\"http://stackoverflow.com/a/11375064/2688\">Zhami</a>):</p>\n\n<pre><code>/*jslint node: true */\n</code></pre>\n\n<p>For <strong>JSHint</strong>:</p>\n\n<pre><code>/*jshint strict:false */\n</code></pre>\n\n<p>or (per <a href=\"http://stackoverflow.com/posts/4462560/revisions\">Laith Shadeed</a>)</p>\n\n<pre><code>/* jshint -W097 */\n</code></pre>\n\n<p>To disable any arbitrary warning from JSHint, check the map in <a href=\"https://github.com/jshint/jshint/blob/2.x/src/messages.js\">JSHint source code</a> (details in <a href=\"http://www.jshint.com/docs/\">docs</a>).</p>\n",
                    "is_accepted": true,
                    "score": 484
                },
                {
                    "body": "<p>There's nothing innately wrong with the string form. </p>\n\n<p>Rather than avoid the \"global\" strict form for worry of concatenating non-strict javascript, it's probably better to just fix the damn non-strict javascript to be strict.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>This is how simple it is: If you want to be strict with all your code, add <code>\"use strict\";</code> at the start of your JavaScript.</p>\n\n<p>But if you only want to be  strict with some of your code, use the function form. Anyhow, I would recomend you to use it at the beginning of your JavaScript because this will help you be a better coder.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>If you're writing modules for NodeJS, they are already encapsulated. Tell JSLint that you've got node by including at the top of your file:</p>\n\n<pre><code>/*jslint node: true */\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 162
                },
                {
                    "body": "<p>I'd suggest to use <a href=\"https://github.com/jshint/jshint\">jshint</a> instead.</p>\n\n<p>It allows to suppress this warning via <code>/*jshint globalstrict: true*/</code>.</p>\n\n<p>If you are writing a library, I would only suggest using global strict if your code is encapsulated into modules as is the case with nodejs.</p>\n\n<p>Otherwise you'd force everyone who is using your library into strict mode.</p>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>I started creating a Node.js/browserify application following the <a href=\"https://blog.codecentric.de/en/2014/02/cross-platform-javascript/\" rel=\"nofollow\">Cross Platform JavaScript</a> blog post. And I ran into this issue, because my brand new Gruntfile didn't pass jshint.</p>\n\n<p>Luckily I found an answer in the <a href=\"https://leanpub.com/grunt/read\" rel=\"nofollow\">Leanpub book on Grunt</a>:</p>\n\n<blockquote>\n  <p>If we try it now, we will scan our Gruntfile\u2026 and get some errors:</p>\n\n<pre><code>$ grunt jshint\n\nRunning \"jshint:all\" (jshint) task\nLinting Gruntfile.js...ERROR\n[L1:C1] W097: Use the function form of \"use strict\".\n'use strict';\nLinting Gruntfile.js...ERROR\n[L3:C1] W117: 'module' is not defined.\nmodule.exports = function (grunt) {\n\nWarning: Task \"jshint:all\" failed. Use --force to continue.\n</code></pre>\n  \n  <p>Both errors are because the Gruntfile is a Node program, and by default JSHint does not recognise or allow the use of module and the string version of use strict. We can set a JSHint rule that will accept our Node programs. Let\u2019s edit our jshint task configuration and add an options key:</p>\n\n<pre><code>jshint: {\n  options: {\n    node: true\n  },\n}\n</code></pre>\n</blockquote>\n\n<p>Adding <code>node: true</code> to the jshint <code>options</code>, to put jshint into \"Node mode\", removed both errors for me.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I include the statement:</p>\n\n<pre><code>\"use strict\";\n</code></pre>\n\n<p>at the beginning of most of my Javascript files.</p>\n\n<p>JSLint has never before warned about this. But now it is, saying:</p>\n\n<blockquote>\n  <p>Use the function form of \"use strict\".</p>\n</blockquote>\n\n<p>Does anyone know what the \"function form\" would be?</p>\n",
            "last_activity_date": 1401522365,
            "question_id": 4462478,
            "score": 418,
            "tags": [
                "javascript",
                "jslint"
            ],
            "title": "JSLint is suddenly reporting: Use the function form of &quot;use strict&quot;"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>To take a slightly different angle, your second solution would be the correct one in terms of <strong>accessibility</strong>...you would be providing alternative content to users who cannot use javascript (those with screen readers, etc.). </p>\n\n<p>This would automatically add the benefits of SEO and, in my opinion, would not be seen as a 'naughty' technique by Google.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think you need this: <a href=\"http://code.google.com/web/ajaxcrawling/\">http://code.google.com/web/ajaxcrawling/</a></p>\n\n<p>You can also install a special backend that \"renders\" your page by running javascript on the server, and then serves that to google.</p>\n\n<p>Combine both things and you have a solution without programming things twice. (As long as your app is fully controllable via anchor fragments.)</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>While #2 might be \"easier\" for you as a developer, it only provides search engine crawling. And yes, if Google finds out your serving different content, you might be penalized (I'm not an expert on that, but I have heard of it happening).</p>\n\n<p>Both SEO and accessibility (not just for disabled person, but accessibility via mobile devices, touch screen devices, and other non-standard computing / internet enabled platforms) both have a similar underlying philosophy: semantically rich markup that is \"accessible\" (i.e. can be accessed, viewed, read, processed, or otherwise used) to all these different browsers. A screen reader, a search engine crawler or a user with JavaScript enabled, should all be able to use/index/understand your site's core functionality without issue. </p>\n\n<p><code>pushState</code> does not add to this burden, in my experience. It only brings what used to be an afterthought and \"if we have time\" to the forefront of web development.</p>\n\n<p>What your describe in option #1 is usually the best way to go - but, like other accessibility and SEO issues, doing this with <code>pushState</code> in a JavaScript-heavy app requires up-front planning or it will become a significant burden. It should be baked in to the page and application architecture from the start - retrofitting is painful and will cause more duplication than is necessary.</p>\n\n<p>I've been working with <code>pushState</code> and SEO recently for a couple of different application, and I found what I think is a good approach. It basically follows your item #1, but accounts for not duplicating html / templates.</p>\n\n<p>Most of the info can be found in these two blog posts:</p>\n\n<p><a href=\"http://lostechies.com/derickbailey/2011/09/06/test-driving-backbone-views-with-jquery-templates-the-jasmine-gem-and-jasmine-jquery/\">http://lostechies.com/derickbailey/2011/09/06/test-driving-backbone-views-with-jquery-templates-the-jasmine-gem-and-jasmine-jquery/</a></p>\n\n<p>and</p>\n\n<p><a href=\"http://lostechies.com/derickbailey/2011/06/22/rendering-a-rails-partial-as-a-jquery-template/\">http://lostechies.com/derickbailey/2011/06/22/rendering-a-rails-partial-as-a-jquery-template/</a></p>\n\n<p>The gist of it is that I use ERB or HAML templates (running Ruby on Rails, Sinatra, etc) for my server side render and to create the client side templates that Backbone can use, as well as for my Jasmine JavaScript specs. This cuts out the duplication of markup between the server side and the client side.</p>\n\n<p>From there, you need to take a few additional steps to have your JavaScript work with the HTML that is rendered by the server - true progressive enhancement; taking the semantic markup that got delivered and enhancing it with JavaScript.</p>\n\n<p>For example, i'm building an image gallery application with <code>pushState</code>. If you request <code>/images/1</code> from the server, it will render the entire image gallery on the server and send all of the HTML, CSS and JavaScript down to your browser. If you have JavaScript disabled, it will work perfectly fine. Every action you take will request a different URL from the server and the server will render all of the markup for your browser. If you have JavaScript enabled, though, the JavaScript will pick up the already rendered HTML along with a few variables generated by the server and take over from there. </p>\n\n<p>Here's an example:</p>\n\n<pre><code>&lt;form id=\"foo\"&gt;\n  Name: &lt;input id=\"name\"&gt;&lt;button id=\"say\"&gt;Say My Name!&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>After the server renders this, the JavaScript would pick it up (using a Backbone.js view in this example)</p>\n\n<pre><code>FooView = Backbone.View.extend({\n  events: {\n    \"change #name\": \"setName\",\n    \"click #say\": \"sayName\"\n  },\n\n  setName: function(e){\n    var name = $(e.currentTarget).val();\n    this.model.set({name: name});\n  },\n\n  sayName: function(e){\n    e.preventDefault();\n    var name = this.model.get(\"name\");\n    alert(\"Hello \" + name);\n  },\n\n  render: function(){\n    // do some rendering here, for when this is just running JavaScript\n  }\n});\n\n$(function(){\n  var model = new MyModel();\n  var view = new FooView({\n    model: model,\n    el: $(\"#foo\")\n  });\n});\n</code></pre>\n\n<p>This is a very simple example, but I think it gets the point across. </p>\n\n<p>When I instante the view after the page loads, I'm providing the existing content of the form that was rendered by the server, to the view instance as the <code>el</code> for the view. I am <em>not</em> calling render or having the view generate an <code>el</code> for me, when the first view is loaded. I have a render method available for after the view is up and running and the page is all JavaScript. This lets me re-render the view later if I need to.</p>\n\n<p>Clicking the \"Say My Name\" button with JavaScript enabled will cause an alert box. Without JavaScript, it would post back to the server and the server could render the name to an html element somewhere.</p>\n\n<p><strong>Edit</strong></p>\n\n<p>Consider a more complex example, where you have a list that needs to be attached (from the comments below this)</p>\n\n<p>Say you have a list of users in a <code>&lt;ul&gt;</code> tag. This list was rendered by the server when the browser made a request, and the result looks something like:</p>\n\n<pre><code>&lt;ul id=\"user-list\"&gt;\n  &lt;li data-id=\"1\"&gt;Bob\n  &lt;li data-id=\"2\"&gt;Mary\n  &lt;li data-id=\"3\"&gt;Frank\n  &lt;li data-id=\"4\"&gt;Jane\n&lt;/ul&gt;\n</code></pre>\n\n<p>Now you need to loop through this list and attach a Backbone view and model to each of the <code>&lt;li&gt;</code> items. With the use of the <code>data-id</code> attribute, you can find the model that each tag comes from easily. You'll then need a collection view and item view that is smart enough to attach itself to this html.</p>\n\n<pre><code>UserListView = Backbone.View.extend({\n  attach: function(){\n    this.el = $(\"#user-list\");\n    this.$(\"li\").each(function(index){\n      var userEl = $(this);\n      var id = userEl.attr(\"data-id\");\n      var user = this.collection.get(id);\n      new UserView({\n        model: user,\n        el: userEl\n      });\n    });\n  }\n});\n\nUserView = Backbone.View.extend({\n  initialize: function(){\n    this.model.bind(\"change:name\", this.updateName, this);\n  },\n\n  updateName: function(model, val){\n    this.el.text(val);\n  }\n});\n\nvar userData = {...};\nvar userList = new UserCollection(userData);\nvar userListView = new UserListView({collection: userList});\nuserListView.attach();\n</code></pre>\n\n<p>In this example, the <code>UserListView</code> will loop through all of the <code>&lt;li&gt;</code> tags and attach a view object with the correct model for each one. it sets up an event handler for the model's name change event and updates the displayed text of the element when a change occurs.</p>\n\n<hr>\n\n<p>This kind of process, to take the html that the server rendered and have my JavaScript take over and run it, is a great way to get things rolling for SEO, Accessibility, and <code>pushState</code> support.</p>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>Use <a href=\"https://developers.google.com/closure/\" rel=\"nofollow\">Google Closure Template</a> to render pages. It compiles to javascript or java, so it is easy to render the page either on the client or server side. On the first encounter with every client, render the html and add javascript as link in header. Crawler will read the html only but the browser will execute your script. All subsequent requests from the browser could be done in against the api to minimize the traffic.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're using Rails, try <a href=\"https://github.com/olivernn/poirot\" rel=\"nofollow\">poirot</a>.  It's a gem that makes it dead simple to reuse <a href=\"http://mustache.github.com/\" rel=\"nofollow\">mustache</a> or <a href=\"http://handlebarsjs.com/\" rel=\"nofollow\">handlebars</a> templates client and server side.</p>\n\n<p>Create a file in your views like <code>_some_thingy.html.mustache</code>.  </p>\n\n<p>Render server side:</p>\n\n<pre><code>&lt;%= render :partial =&gt; 'some_thingy', object: my_model %&gt;\n</code></pre>\n\n<p>Put the template your head for client side use:</p>\n\n<pre><code>&lt;%= template_include_tag 'some_thingy' %&gt;\n</code></pre>\n\n<p>Rendre client side:</p>\n\n<pre><code>html = poirot.someThingy(my_model)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Interesting. I have been searching around for viable solutions but it seems to be quite problematic.</p>\n\n<p>I was actually leaning more towards your 2nd approach:</p>\n\n<blockquote>\n  <p>Let the server provide a special website only for the search engine\n  bots. If a normal user visits <a href=\"http://example.com/my_path\" rel=\"nofollow\">http://example.com/my_path</a> the server\n  should give him a JavaScript heavy version of the website. But if the\n  Google bot visits, the server should give it some minimal HTML with\n  the content I want Google to index.</p>\n</blockquote>\n\n<p>Here's my take on solving the problem. Although it is not confirmed to work, it might provide some insight or idea's for other developers.</p>\n\n<p>Assume you're using a JS framework that supports \"push state\" functionality, and your backend framework is Ruby on Rails. You have a simple blog site and you would like search engines to index all your article <code>index</code> and <code>show</code> pages.</p>\n\n<p>Let's say you have your routes set up like this:</p>\n\n<pre><code>resources :articles\nmatch \"*path\", \"main#index\"\n</code></pre>\n\n<p>Ensure that every server-side controller renders the same template that your client-side framework requires to run (html/css/javascript/etc). If none of the controllers are matched in the request (in this example we only have a RESTful set of actions for the <code>ArticlesController</code>), then just match anything else and just render the template and let the client-side framework handle the routing. The only difference between hitting a controller and hitting the wildcard matcher would be the ability to render content based on the URL that was requested to JavaScript-disabled devices.</p>\n\n<p>From what I understand it is a bad idea to render content that isn't visible to browsers. So when Google indexes it, people go through Google to visit a given page and there isn't any content, then you're probably going to be penalised. What comes to mind is that you render content in a <code>div</code> node that you <code>display: none</code> in CSS.</p>\n\n<p>However, I'm pretty sure it doesn't matter if you simply do this:</p>\n\n<pre><code>&lt;div id=\"no-js\"&gt;\n  &lt;h1&gt;&lt;%= @article.title %&gt;&lt;/h1&gt;\n  &lt;p&gt;&lt;%= @article.description %&gt;&lt;/p&gt;\n  &lt;p&gt;&lt;%= @article.content %&gt;&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>And then using JavaScript, which doesn't get run when a JavaScript-disabled device opens the page:</p>\n\n<pre><code>$(\"#no-js\").remove() # jQuery\n</code></pre>\n\n<p>This way, for Google, and for anyone with JavaScript-disabled devices, they would see the raw/static content. So the content <em>is</em> physically there and is visible to anyone with JavaScript-disabled devices.</p>\n\n<p>But, when a user visits the same page and actually <em>has</em> JavaScript enabled, the <code>#no-js</code> node will be removed so it doesn't clutter up your application. Then your client-side framework will handle the request through it's router and display what a user should see when JavaScript is enabled.</p>\n\n<p>I think this might be a valid and fairly easy technique to use. Although that might depend on the complexity of your website/application.</p>\n\n<p>Though, please correct me if it isn't. Just thought I'd share my thoughts.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>So, it seem that the main concern is being DRY</p>\n\n<ul>\n<li>If you're using pushState have your server send the same exact code for all urls (that don't contain a file extension to serve images, etc.) \"/mydir/myfile\",   \"/myotherdir/myotherfile\" or root \"/\" -- all requests receive the same exact code.  You need to have some kind url rewrite engine. You can also serve a tiny bit of html and the rest can come from your CDN (using require.js to manage dependencies -- see <a href=\"http://stackoverflow.com/a/13813102/1595913\">http://stackoverflow.com/a/13813102/1595913</a>).</li>\n<li>(test the link's validity by converting the link to your url scheme and testing against existence of content by querying a static or a dynamic source. if it's not valid send a 404 response.) </li>\n<li>When the request is not from a google bot, you just process normally.</li>\n<li>If the request is from a google bot, you use phantom.js -- headless webkit browser (<em>\"A headless browser is simply a full-featured web browser with no visual interface.\"</em>) to render html and javascript on the server and send the google bot the resulting html.  As the bot parses the html it can hit your other \"pushState\" links /somepage on the server <code>&lt;a href=\"/someotherpage\"&gt;mylink&lt;/a&gt;</code>, the server rewrites url to your application file, loads it in phantom.js and the resulting html is sent to the bot, and so on...</li>\n<li>For your html I'm assuming you're using normal links with some kind of hijacking (e.g. using with backbone.js <a href=\"http://stackoverflow.com/a/9331734/1595913\">http://stackoverflow.com/a/9331734/1595913</a>)</li>\n<li>To avoid confusion with any links separate your api code that serves json into a separate subdomain, e.g. api.mysite.com</li>\n<li>To improve performance you can pre-process your site pages for search engines ahead of time during off hours by creating static versions of the pages using the same mechanism with phantom.js and consequently serve the static pages to google bots.  Preprocessing can be done with some simple app that can parse <code>&lt;a&gt;</code> tags.  In this case handling 404 is easier since you can simply check for the existence of the static file with a name that contains url path.</li>\n<li>If you use #! hash bang syntax for your site links a similar scenario applies, except that the rewrite url server engine would look out for _escaped_fragment_ in the url and would format the url to your url scheme.</li>\n<li>There are a couple of integrations of node.js with phantom.js on github and you can use node.js as the web server to produce html output.</li>\n</ul>\n\n<p>Here are a couple of examples using phantom.js for seo:</p>\n\n<p><a href=\"http://backbonetutorials.com/seo-for-single-page-apps/\">http://backbonetutorials.com/seo-for-single-page-apps/</a></p>\n\n<p><a href=\"http://thedigitalself.com/blog/seo-and-javascript-with-phantomjs-server-side-rendering\">http://thedigitalself.com/blog/seo-and-javascript-with-phantomjs-server-side-rendering</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Use NodeJS on the serverside, browserify your clientside code and route each http-request's(except for static http resources) uri through a serverside client to provide the first 'bootsnap'(a snapshot of the page it's state). Use something like jsdom to handle jquery dom-ops on the server. After the bootsnap returned, setup the websocket connection. Probably best to differentiate between a websocket client and a serverside client by making some kind of a wrapper connection on the clientside(serverside client can directly communicate with the server). I've been working on something like this: <a href=\"https://github.com/jvanveen/rnet/\" rel=\"nofollow\">https://github.com/jvanveen/rnet/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>There are a lot of cool tools for making powerful \"single-page\" JavaScript websites nowadays. In my opinion, this is done right by letting the server act as an API (and nothing more) and letting the client handle all of the HTML generation stuff. The problem with this \"pattern\" is the lack of search engine support. I can think of two solutions:</p>\n\n<ol>\n<li>When the user enters the website, let the server render the page exactly as the client would upon navigation. So if I go to <code>http://example.com/my_path</code> directly the server would render the same thing as the client would if I go to <code>/my_path</code> through pushState.</li>\n<li>Let the server provide a special website only for the search engine bots. If a normal user visits <code>http://example.com/my_path</code> the server should give him a JavaScript heavy version of the website. But if the Google bot visits, the server should give it some minimal HTML with the content I want Google to index.</li>\n</ol>\n\n<p>The first solution is discussed further <a href=\"http://stackoverflow.com/questions/6193858/pushstate-and-seo\">here</a>. I have been working on a website doing this and it's not a very nice experience. It's not DRY and in my case I had to use two different template engines for the client and the server.</p>\n\n<p>I think I have seen the second solution for some good ol' Flash websites. I like this approach much more than the first one and with the right tool on the server it could be done  quite painlessly.</p>\n\n<p>So what I'm really wondering is the following:</p>\n\n<ul>\n<li>Can you think of any better solution?</li>\n<li>What are the disadvantages with the second solution? If Google in some way finds out that I'm not serving the exact same content for the Google bot as a regular user, would I then be punished in the search results?</li>\n</ul>\n",
            "last_activity_date": 1405345861,
            "question_id": 7549306,
            "score": 102,
            "tags": [
                "javascript",
                "seo",
                "backbone.js",
                "pushstate",
                "singlepage"
            ],
            "title": "&quot;Single-page&quot; JS websites and SEO"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Here's the part that generates the n/v:</p>\n\n<pre><code>([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[1^11&lt;&lt;1]\n</code></pre>\n\n<p>In Firefox, <code>([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])</code> evaluates to</p>\n\n<pre><code>\"function test() {\n    [native code]\n}\"\n</code></pre>\n\n<p>while in Chrome it is</p>\n\n<pre><code>\"function test() { [native code] }\"\n</code></pre>\n\n<p><code>1^11&lt;&lt;1</code> equals 23. So due to Firefox's extra whitespace, this isn't quite enough to get to the 'v', and is instead 'n'.</p>\n\n<p>And this is why you shouldn't rely on Function#toString behavior. ;)</p>\n\n<p>EDIT:\nFinally I found a reasonably obfuscated cross-browser version:</p>\n\n<pre><code>[[]+1/!1][1^1][1&gt;&gt;1]+({}+[])[1&lt;&lt;1^11&gt;&gt;1]+([]+!!-[])[1&lt;&lt;1]+[/~/+{}][+!1][-~1&lt;&lt;1]+([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[(1^11&lt;&lt;1)+(parseInt(\"010\")&lt;10?(1+1+1+1):0)]+([,][~1]+[])[1-~1]+[[]+{}][!1.1%1][11111.1%11.1*111e11|!1]+(/1/+1/[1&lt;1][1%1])[1^11]+[[],[]+{}][1][+1]+(/&lt;&lt;/[1]+[])[1/1.1&amp;1]\n</code></pre>\n\n<p>This replaces the n/v section with:</p>\n\n<pre><code>([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[(1^11&lt;&lt;1)+(parseInt(\"010\")&lt;10?(1+1+1+1):0)]\n</code></pre>\n\n<p>which exploits differences in parseInt (apparently Firefox parses numbers starting with 0 as octal, while Chrome doesn't) to add 4 in Firefox's case, thus getting 'v' from 'native' in both cases (I can't find another 'v' :P).<br>\nThe parseInt looks a little out of place, but that's the best I can do for now.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In chrome, the expression <code>([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])</code> evaluates to <code>\"function test() { [native code] }\"</code>, the <code>[1^11&lt;&lt;1]</code> evaluates to 23 (bitwise operators cause the variable to be truncated to 32 bits)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This gives a v  in Chrome:</p>\n\n<pre><code>Object.getOwnPropertyNames(Object)[17][3];\n</code></pre>\n\n<p>And this does it in Firefox:</p>\n\n<pre><code>Object.getOwnPropertyNames(Object)[9][3]\n</code></pre>\n\n<p>They both pull it out of <code>Object.prototype.preventExtensions()</code>, so you could probably find a cross-browser way to reference that method. (It's the only 17-character name in Object.Prototype for starters.)</p>\n\n<p>Feel free to build a more-obfuscated version of this and take all the credit for yourself, I'm out of time ;)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is about as close as I could get, unfortunately it violates the convention of the original obfuscation by making a call to <code>unescape()</code>:</p>\n\n<pre><code>unescape((/%/+[])[1]+(/1/[1]+[])[1%1]+(+!1)+(+!1)+(1e1+(11*(1-~1)&lt;&lt;1)))\n</code></pre>\n\n<p>Teardown:</p>\n\n<pre><code>(/%/+[])[1]          =&gt; \"%\"\n(/1/[1]+[])[1%1]     =&gt; \"u\"\n(+!1)                =&gt; \"0\"\n(+!1)                =&gt; \"0\"\n(1e1+(11*(1-~1)&lt;&lt;1)) =&gt; \"76\"\n===========================\nunescape(\"%u0076\")   =&gt; \"v\"\n</code></pre>\n\n<p>Other ideas:</p>\n\n<ol>\n<li>Somehow get to <code>unescape(\"\\x76\")</code></li>\n<li>Somehow convert <code>118</code> without calling <code>String.fromCharCode()</code></li>\n<li>Get the text from an exception with the word \"Invalid\" in it</li>\n</ol>\n\n<p><strong>Updates:</strong></p>\n\n<p>I started playing code golf and have been making it shorter, replacing parts with more <code>1</code>s, etc.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>For the <em>general</em> use-case, if character casing isn't a big concern, I might be inclined to cheat a little.</p>\n\n<p>Create function \"c\" which turns a number 0 .. 25 into a character.</p>\n\n<pre><code>c=function(v){for(var i in window){for(var ci in i){if(parseInt(i[ci],(10+11+11)+(1&lt;&lt;1)+(1&lt;&lt;1))==(v+10)){return i[ci]}}}};\n</code></pre>\n\n<p>For performance reasons, pre-cache the letters, if you want.</p>\n\n<pre><code>l=[];for(var i=0; i&lt;(11+11)+(1&lt;&lt;1)+(1&lt;&lt;1);i++){l[i]=c(i);}\n</code></pre>\n\n<p>In the Chrome console, the resulting array looks like this:</p>\n\n<pre><code>&gt; l;\n[\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"K\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"S\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"Z\"]\n</code></pre>\n\n<p>So ... your <em>v</em> might be <code>l[10+10+1]</code>.</p>\n\n<p>Alternatively, a general solution like this:</p>\n\n<pre><code>p=(function(){10%11}+[])[1+11+(1&lt;&lt;1)]; // \"%\"\nu=(function(){club=1}+[])[1+11+(1&lt;&lt;1)]; // \"u\"\nvc=p+u+(0+[])+(0+[])+((111&gt;&gt;1)+11+10+[]); // \"%u0076\"\nunescape(vc);\n</code></pre>\n\n<p>Or, for this <em>specific</em> problem, maybe just:</p>\n\n<pre><code>(function(){v=1}+[])[10+(1&lt;&lt;1)]; // \"v\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Why isn't the <code>native code</code> bit from the question being used? This one gives a <code>'v'</code> in both Chrome and Firefox:</p>\n\n<pre><code>([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[1^11&lt;&lt;1]&gt;([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[1^(11+1+1)&lt;&lt;1]?([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[1^11&lt;&lt;1]:([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[1^(11+1+1)&lt;&lt;1]\n</code></pre>\n\n<hr>\n\n<p><strong>Edit to support IE and do it without the ternary operator:</strong>\nThis one works in Chrome, IE, and FF. Builds an array and uses <code>==</code> to determine browser.</p>\n\n<pre><code>[([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[1+(1^(11+1+1)&lt;&lt;1)],([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[1^11&lt;&lt;1],([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[1^(11+1+1)&lt;&lt;1]][((([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[(1&lt;&lt;1&lt;&lt;1&lt;&lt;1)+1&lt;&lt;1]==({}+[])[1^1])*1)+((([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[(1^11&lt;&lt;1)-1]==({}+[])[1^1])&lt;&lt;1)]\n</code></pre>\n\n<p>Readable:</p>\n\n<pre><code>[\n    //ie\n    ([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[1+(1^(11+1+1)&lt;&lt;1)],\n    //ch\n    ([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[1^11&lt;&lt;1],\n    //ff\n    ([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[1^(11+1+1)&lt;&lt;1]\n]\n[\n    //ch?\n    ((([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[(1&lt;&lt;1&lt;&lt;1&lt;&lt;1)+1&lt;&lt;1]==({}+[])[1^1])*1)+\n    //ff?\n    ((([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[(1^11&lt;&lt;1)-1]==({}+[])[1^1])&lt;&lt;1)\n]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>First of all, I would like to thank Jason and all the contributors for playing with that funny snippet. I have written that piece of code <em>just for fun</em> in order to send it to my wife on February 14 :) Having only Chrome installed on the laptop I had no options to check how it works in Firefox and IE. Moreover, I haven't really expected that <code>toString()</code> representation of build-in methods might look differently in other browsers.</p>\n\n<p>Now, <em>moving to the real problem</em>, let's precisely have a look at the code. Yes, <code>\"v\"</code> was the real \"problem\" here. I found no other ways of getting this letter except parsing <code>[native code]</code> string, which can be taken from any built-in method. Since I limited myself with having no strings and no numbers except <code>1</code> used, I needed to exploit some method that has only available characters in its name.</p>\n\n<p>Available characters can be obtained from existing keywords and string representations, i.e. from the start we had <code>NaN</code>, <code>null</code>, <code>undefined</code>, <code>Infinity</code>, <code>true</code>, <code>false</code>, and <code>\"[object Object]\"</code>. Some of them can be easily converted to strings, e.g. <code>1/!1+[]</code> gives <code>\"Infinity\"</code>.</p>\n\n<p>I have analyzed different build-in methods for arrays <code>[]</code>, objects <code>{}</code>, regular expressions <code>/(?:)/</code>, numbers <code>1.1</code>, strings <code>\"1\"</code>, and discovered one beautiful method of <code>RegExp</code> object called <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/RegExp/test\"><code>test()</code></a>. Its name can be assembled from all available characters, e.g. <code>\"t\"</code> and <code>\"e\"</code> from <code>true</code>, and <code>\"s\"</code> from <code>false</code>. I have created a string <code>\"test\"</code> and addressed this method using square brackets notation for regex literal <code>/-/</code>, correctly identified in this line:</p>\n\n<pre><code>/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]]\n</code></pre>\n\n<p>As was already discussed, this piece of code is evaluated in Chrome as:</p>\n\n<pre><code>function test() { [native code] }\n</code></pre>\n\n<p>in Firefox as:</p>\n\n<pre><code>function test() {\n    [native code]\n}\n</code></pre>\n\n<p>and in IE as:</p>\n\n<pre><code> function test() {     [native code] }  \n</code></pre>\n\n<p><sup>(in the latter pay <em>special</em> attention to the space before <code>function</code> keyword)</sup></p>\n\n<p>So, as you clearly see, my code was getting the 24th character from the presented string, which in Chrome was <code>\"v\"</code> (as was planned), but unfortunately in Firefox and IE -- <code>\"n\"</code> and <code>\"[\"</code> respectively.</p>\n\n<p>In order to make the same output in all the browsers, I have used <em>different approach</em> than illustrated in the other answers. Now the modified version looks like that:</p>\n\n<pre><code>javascript:[[]+1/!1][1^1][1&gt;&gt;1]+({}+[])[1&lt;&lt;1^11&gt;&gt;1]+([]+!!-\n[])[1&lt;&lt;1]+[/~/+{}][+!1][-~1&lt;&lt;1]+/\\[[^1]+\\]/[([]+![])[1&lt;&lt;1&lt;&lt;\n1]+(/|/[(1+{})[1+11&gt;&gt;&gt;1]+[[]+{}][+!1][1]+([]+1/[])[1&lt;&lt;1&gt;&gt;1]\n+([1&lt;1]+[])[1+11&gt;&gt;&gt;1+1]+[[!!1]+1][+[]][1-1]+([]+!!/!/)[1|1]\n+(/1/[1]+[])[!1%1]+(-{}+{})[-1+1e1-1]+(1+[!!1])[1]+([]+1+{}\n)[1&lt;&lt;1]+[!!/!!/+[]][+[]][1&amp;1]]+/=/)[1e1+(1&lt;&lt;1|1)+(([]+/-/[(\n!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1\n]])[1^1]==+!1)]+(!![]+{})[1|1&lt;&lt;1]+[1+{}+1][!1+!1][(11&gt;&gt;1)+1\n]](([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+\n(!!1+[])[1^1]]))[1&amp;.1][11&gt;&gt;&gt;1]+([,][~1]+[])[1-~1]+[[]+{}][!\n1.1%1][11111.1%11.1*111e11|!1]+(/1/+1/[1&lt;1][1%1])[1^11]+[[]\n,[]+{}][1&lt;&lt;1&gt;&gt;&gt;1][1||1]+(/[&lt;+&gt;]/[1&amp;1|1]+[1.1])[1/11.1&amp;1.11]\n</code></pre>\n\n<p>However, in order to intrigue the readers I won't provide a solution for that. I honestly believe that you will easily understand how it works... and some can even surprise their beloved in cross-browser way ;)</p>\n\n<h1>P.S. <a href=\"http://jsbin.com/amecoq/2\">Yet Another Obfuscator</a></h1>\n\n<p>Inspired by Jason's idea to create a universal obfuscating tool, I have written one more. You can find it at <strong>JSBin: <a href=\"http://jsbin.com/amecoq/2\">http://jsbin.com/amecoq/2</a></strong>. It can obfuscate any text that contains numbers <code>[0-9]</code>, small latin letters <code>[a-z]</code>, and spaces. The string length is limited mostly with your RAM (at least the body of my answer was successfully obfuscated). The output is supported by Chrome, Firefox, and IE.</p>\n\n<p><sup><strong>Hint:</strong> the tool uses different obfuscation approach than was presented above.</sup></p>\n",
                    "is_accepted": true,
                    "score": 65
                }
            ],
            "body": "<p><em>this question is difficult to summarize in a question title</em></p>\n\n<p><strong>UPDATE</strong>\nI created a JSFiddle that builds an obfuscated string out of your input based on the letters extracted from this question: You can access it <a href=\"http://jsfiddle.net/w9rFF/14/\">here</a>, or would a <a href=\"http://bl.ocks.org/jasonsperske/5400283\">gist</a> be easier?</p>\n\n<p>I recently came across a fun bit of obfuscated JavaScript in <a href=\"http://stackoverflow.com/users/1249581/vision\">this profile</a> that looks like this:</p>\n\n<pre><code>javascript:[[]+1/!1][1^1][1&gt;&gt;1]+({}+[])[1&lt;&lt;1^11&gt;&gt;1]+([]+!!-\n[])[1&lt;&lt;1]+[/~/+{}][+!1][-~1&lt;&lt;1]+([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1\n+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[1^11&lt;&lt;1]+([,][\n~1]+[])[1-~1]+[[]+{}][!1.1%1][11111.1%11.1*111e11|!1]+(/1/+\n1/[1&lt;1][1%1])[1^11]+[[],[]+{}][1][+1]+(/&lt;&lt;/[1]+[])[1/1.1&amp;1]\n</code></pre>\n\n<p>Sorry to ruin the surprise but when this is evaluated it returns this:</p>\n\n<pre><code>\"I love you\" in Chrome\n\"I lone you\" In Firefox\n\"I lo[e you\" in IE10\n</code></pre>\n\n<p>The way this works when broken out, is to generate a series of messages and to pull letters out of them like so (using the \"I\" as an example):</p>\n\n<pre><code>[]+1/!1\nreturns\n\"Infinity\"\nthen\n[[]+1/!1]\ncreates this array:\n[\"Infinity\"]\nthen\n[[]+1/!1][1^1]\nTakes the first (1^1 == 0) element of that array\n\"Infinity\"\nfinally\n[[]+1/!1][1^1][1&gt;&gt;1]\nTakes the first (1&gt;&gt;1 == 0) char of that string\n\"I\"\n</code></pre>\n\n<p>Other strings that are generated include:</p>\n\n<pre><code>({}+[])       -&gt; \"[object Object]\" (where the space comes from)\n([]+!!-[])    -&gt; \"false\" (used for it's \"l\")\n[/~/+{}][+!1] -&gt; \"/~/[object Object]\" (this is used for an \"o\")\n(/&lt;&lt;/[1]+[])  -&gt; \"undefined\"\n</code></pre>\n\n<p>I was interested in finding a replacement for the \"n\" and \"[\" and came up with this:</p>\n\n<pre><code>String.fromCharCode(('1'.charCodeAt(0)&lt;&lt;1)+(10&lt;&lt;1))\n</code></pre>\n\n<p>Which I feel in in the spirit of using 1's and 0's, but violates one of the more elegant aspects of the original code which is the appearance of having nothing to do with strings at all.  Does anyone else have an idea of how to generate a \"v\" that is in keeping with the original obfuscated code?</p>\n\n<p><em><strong>Here is some extra information that was found after many talented JavaScript programers took a deeper look at this</em></strong></p>\n\n<p>Firefox returns \"I lone you\" Because of this line:</p>\n\n<pre><code>([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[1^11&lt;&lt;1]+\n</code></pre>\n\n<p><code>[1^11&lt;&lt;1]</code> trims a specific character from this:</p>\n\n<pre><code>([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])\n</code></pre>\n\n<p>Which evaluates to this:</p>\n\n<pre><code>\"function test() {\n    [native code]\n}\"\n</code></pre>\n\n<p>Which looks like we might have our \"V\"!!!</p>\n\n<p>Chrome returns \"I love you\", because the same code returns this:</p>\n\n<pre><code>\"function test() { [native code] }\"\n</code></pre>\n\n<hr>\n\n<p>Before the question is closed for questionable connection with \"a real programming issue\", I thought I'd add a summarized solution that builds on <a href=\"http://stackoverflow.com/a/15981930/16959\">@Supr's</a>, <a href=\"http://stackoverflow.com/a/15980008/16959\">@Cory's</a> and <a href=\"http://stackoverflow.com/a/15978467/16959\">@alpha123's</a>, behold:</p>\n\n<pre><code>alert([[]+1/!1][1^1][1&gt;&gt;1]+({}+[])[1&lt;&lt;1^11&gt;&gt;1]+(\n[]+!!-[])[1&lt;&lt;1]+[/~/+{}][+!1][-~1&lt;&lt;1]+[([]+/-/[(\n!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(\n!!1+[])[1^1]])[1+(1^(11+1+1)&lt;&lt;1)],([]+/-/[(!!1+[\n])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[\n])[1^1]])[1^11&lt;&lt;1],([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[\n])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[1^(11\n+1+1)&lt;&lt;1]][((([]+/-/[(!!1+[])[1&gt;&gt;1]+(!!1+[])[1&lt;&lt;\n1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1]])[(1&lt;&lt;1&lt;&lt;1&lt;&lt;1\n)+1&lt;&lt;1]==({}+[])[1^1])*1)+((([]+/-/[(!!1+[])[1&gt;&gt;\n1]+(!!1+[])[1&lt;&lt;1^1]+(!1+[])[1|1&lt;&lt;1]+(!!1+[])[1^1\n]])[(1^11&lt;&lt;1)-1]==({}+[])[1^1])&lt;&lt;1)]+([,][~1]+[]\n)[1-~1]+[[]+{}][!1.1%1][11111.1%11.1*111e11|!1]+\n(/1/+1/[1&lt;1][1%1])[1^11]+[[],[]+{}][1][+1]+(/&lt;&lt;/\n[1]+[])[1/1.1&amp;1])\n</code></pre>\n\n<p>Given the complexity of the code and the message it produces it's almost like the JavaScript engine is telling how special you make it feel :)</p>\n",
            "last_activity_date": 1366788902,
            "question_id": 15978204,
            "score": 119,
            "tags": [
                "javascript",
                "obfuscation"
            ],
            "title": "What are JavaScript&#39;s builtin strings?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I generally use the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/typeof\"><code>typeof</code></a> operator:</p>\n\n<pre><code>if (typeof obj.foo != 'undefined') {\n  // ..\n}\n</code></pre>\n\n<p>It will return <code>\"undefined\"</code> either if the property doesn't exist or it's value is <code>undefined</code>.</p>\n\n<p><sub>(See also: <a href=\"http://stackoverflow.com/questions/3420071/difference-between-undefined-and-not-being-defined-in-javascript/3420160#3420160\">Difference between <code>undefined</code> and not being defined.</a>)</sub></p>\n\n<p>There are other ways to figure out if a property exists on an object, like the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/HasOwnProperty\"><code>hasOwnProperty</code></a> method:</p>\n\n<pre><code>if (obj.hasOwnProperty('foo')) {\n  //..\n}\n</code></pre>\n\n<p>And the <code>in</code> operator:</p>\n\n<pre><code>if ('foo' in obj) {\n  //..\n}\n</code></pre>\n\n<p>The difference between the last two, is that the <code>hasOwnProperty</code> method, will check if the property exist <em>physically</em> on the object (the property is not inherited).</p>\n\n<p>The <code>in</code> operator will check on all the properties reachable up in the prototype chain, e.g.:</p>\n\n<pre><code>var obj = { foo: 'bar'};\n\nobj.hasOwnProperty('foo'); // true\nobj.hasOwnProperty('toString'); // false\n'toString' in obj; // true\n</code></pre>\n\n<p>As you can see, <code>hasOwnProperty</code> returns <code>false</code> and the <code>in</code> operator returns <code>true</code> when checking the <code>toString</code> method, this method is defined up in the prototype chain, because <code>obj</code> inherits form <code>Object.prototype</code>.</p>\n",
                    "is_accepted": true,
                    "score": 405
                },
                {
                    "body": "<pre><code>if (!('foo' in obj)) {\n  // not set.\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<blockquote>\n  <p><a href=\"http://phpjs.org/functions/isset/\" rel=\"nofollow\">Reference to SOURCE</a></p>\n</blockquote>\n\n<pre><code>function isset ()\n{\n    // http://kevin.vanzonneveld.net\n    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   improved by: FremyCompany\n    // +   improved by: Onno Marsman\n    // +   improved by: Rafa\u0142 Kukawski\n    // *     example 1: isset( undefined, true);\n    // *     returns 1: false\n    // *     example 2: isset( 'Kevin van Zonneveld' );\n    // *     returns 2: true\n\n  var a = arguments,\n    l = a.length,\n    i = 0,\n    undef;\n\n  if (l === 0)\n  {\n    throw new Error('Empty isset');\n  }\n\n  while (i !== l)\n  {\n    if (a[i] === undef || a[i] === null)\n    {\n      return false;\n    }\n    i++;\n  }\n  return true;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<pre><code>//\n//  tring to reference non-existing variable throws ReferenceError \n//  before test function is even executed\n//\n//  example, if you do:\n//    \n//     if ( isset( someVar ) ) \n//        doStuff( someVar );\n//   \n//  you get a ReferenceError ( if there is no someVar... ) \n//  and isset fn doesn't get executed.\n//\n//  if you pass variable name as string, ex. isset( 'novar' );, \n//  this might work:\n//\nfunction isset ( strVariableName ) { \n\n    try { \n        eval( strVariableName );\n    } catch( err ) { \n        if ( err instanceof ReferenceError ) \n           return false;\n    }\n\n    return true;\n\n } \n//\n//\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This simple solution works, but not for deep object check.</p>\n\n<pre><code>function isset(str) {\n    return window[str] !== undefined;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Provide the object path as a string, then you can break this string into a path and resolve <code>hasOwnProperty</code> at each step while overwriting the object itself with each iteration.</p>\n\n<p>If you are coding in ES6 environment, take a look at <a href=\"http://stackoverflow.com/a/26990347/368691\">this stackoverflow Ques</a>.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var a;\r\n\r\na = {\r\n    b: {\r\n        c: 'e'\r\n    }\r\n};\r\n\r\nfunction isset (obj, path) {\r\n    var stone;\r\n\r\n    path = path || '';\r\n\r\n    if (path.indexOf('[') !== -1) {\r\n        throw new Error('Unsupported object path notation.');\r\n    }\r\n\r\n    \r\n    path = path.split('.');\r\n    \r\n    do {\r\n        if (obj === undefined) {\r\n            return false;\r\n        }\r\n\r\n        stone = path.shift();\r\n        \r\n        if (!obj.hasOwnProperty(stone)) {\r\n            return false;\r\n        }\r\n        \r\n        obj = obj[stone];\r\n        \r\n    } while (path.length);\r\n\r\n    return true;\r\n}\r\n\r\nconsole.log(\r\n    isset(a, 'b') == true,\r\n    isset(a, 'b.c') == true,\r\n    isset(a, 'b.c.d') == false,\r\n    isset(a, 'b.c.d.e') == false,\r\n    isset(a, 'b.c.d.e.f') == false\r\n);</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In PHP you can do <code>if(isset($array['foo'])) { ... }</code>. In JavaScript you often use <code>if(array.foo) { ... }</code> to do the same, but this is not exactly the same statement. The condition will also evaluate to false if <code>array.foo</code> does exists but is <code>false</code> or <code>0</code> (and probably other values as well).</p>\n\n<p>What is the perfect equivalent of PHP's <code>isset</code> in JavaScript?</p>\n\n<p>In a broader sense, a general, complete guide on JavaScript's handling of variables that don't exist, variables without a value, etc. would be convenient.</p>\n",
            "last_activity_date": 1419637550,
            "question_id": 2281633,
            "score": 244,
            "tags": [
                "javascript",
                "isset"
            ],
            "title": "JavaScript isset() equivalent"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Here's what I ended up using.</p>\n\n<p>I'm very new to AngularJS, so would love to see better / alternative solutions.</p>\n\n<pre><code>angular.module('formComponents', [])\n    .directive('formInput', function() {\n        return {\n            restrict: 'E',\n            scope: {},\n            link: function(scope, element, attrs)\n            {\n                var type = attrs.type || 'text';\n                var required = attrs.hasOwnProperty('required') ? \"required='required'\" : \"\";\n                var htmlText = '&lt;div class=\"control-group\"&gt;' +\n                    '&lt;label class=\"control-label\" for=\"' + attrs.formId + '\"&gt;' + attrs.label + '&lt;/label&gt;' +\n                        '&lt;div class=\"controls\"&gt;' +\n                        '&lt;input type=\"' + type + '\" class=\"input-xlarge\" id=\"' + attrs.formId + '\" name=\"' + attrs.formId + '\" ' + required + '&gt;' +\n                        '&lt;/div&gt;' +\n                    '&lt;/div&gt;';\n                element.html(htmlText);\n            }\n        }\n    })\n</code></pre>\n\n<p>Example usage:</p>\n\n<pre><code>&lt;form-input label=\"Application Name\" form-id=\"appName\" required/&gt;&lt;/form-input&gt;\n&lt;form-input type=\"email\" label=\"Email address\" form-id=\"emailAddress\" required/&gt;&lt;/form-input&gt;\n&lt;form-input type=\"password\" label=\"Password\" form-id=\"password\" /&gt;&lt;/form-input&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>angular.module('formComponents', [])\n  .directive('formInput', function() {\n    return {\n        restrict: 'E',\n        compile: function(element, attrs)\n        {\n            var type = attrs.type || 'text';\n            var required = attrs.hasOwnProperty('required') ? \"required='required'\" : \"\";\n            var htmlText = '&lt;div class=\"control-group\"&gt;' +\n                '&lt;label class=\"control-label\" for=\"' + attrs.formId + '\"&gt;' + attrs.label + '&lt;/label&gt;' +\n                    '&lt;div class=\"controls\"&gt;' +\n                    '&lt;input type=\"' + type + '\" class=\"input-xlarge\" id=\"' + attrs.formId + '\" name=\"' + attrs.formId + '\" ' + required + '&gt;' +\n                    '&lt;/div&gt;' +\n                '&lt;/div&gt;';\n            element.replaceWith(htmlText);\n        }\n    }\n})\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 158
                },
                {
                    "body": "<p>The above answers unfortunately don't quite work. In particular, the compile stage does not have access to scope, so you can't customize the field based on dynamic attributes. Using the linking stage seems to offer the most flexibility (in terms of asynchronously creating dom, etc.) The below approach addresses that:</p>\n\n<pre><code>&lt;!-- Usage: --&gt;\n&lt;form&gt;\n  &lt;form-field ng-model=\"formModel[field.attr]\" field=\"field\" ng-repeat=\"field in fields\"&gt;\n&lt;/form&gt;\n\n// directive\nangular.module('app')\n.directive('formField', function($compile, $parse) {\n  return { \n    restrict: 'E', \n    compile: function(element, attrs) {\n      var fieldGetter = $parse(attrs.field);\n\n      return function (scope, element, attrs) {\n        var template, field, id;\n        field = fieldGetter(scope);\n        template = '..your dom structure here...'\n        element.replaceWith($compile(template)(scope));\n      }\n    }\n  }\n})\n</code></pre>\n\n<p>I've created <a href=\"https://gist.github.com/joesavona/6985935\" rel=\"nofollow\">a gist</a> with more complete code and a <a href=\"http://justandsimply.com/blog/2013/10/14/dynamic-forms-in-angularjs/\" rel=\"nofollow\">writeup</a> of the approach.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Tried to use the solution proposed by Misko, but in my situation, some attributes, which needed to be merged into my template html, were themselves directives.</p>\n\n<p>Unfortunately, not all of the directives referenced by the resulting template did work correctly. I did not have enough time to dive into angular code and find out the root cause, but found a workaround, which could potentially be helpful. </p>\n\n<p>The solution was to move the code, which creates the template html, from compile to a template function. Example based on code from above:</p>\n\n<pre><code>    angular.module('formComponents', [])\n  .directive('formInput', function() {\n    return {\n        restrict: 'E',\n        template: function(element, attrs) {\n           var type = attrs.type || 'text';\n            var required = attrs.hasOwnProperty('required') ? \"required='required'\" : \"\";\n            var htmlText = '&lt;div class=\"control-group\"&gt;' +\n                '&lt;label class=\"control-label\" for=\"' + attrs.formId + '\"&gt;' + attrs.label + '&lt;/label&gt;' +\n                    '&lt;div class=\"controls\"&gt;' +\n                    '&lt;input type=\"' + type + '\" class=\"input-xlarge\" id=\"' + attrs.formId + '\" name=\"' + attrs.formId + '\" ' + required + '&gt;' +\n                    '&lt;/div&gt;' +\n                '&lt;/div&gt;';\n             return htmlText;\n        }\n        compile: function(element, attrs)\n        {\n           //do whatever else is necessary\n        }\n    }\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I have a form that is using markup from Bootstrap, like the following:</p>\n\n<pre><code>&lt;form class=\"form-horizontal\"&gt;\n  &lt;fieldset&gt;\n    &lt;legend&gt;Legend text&lt;/legend&gt;\n    &lt;div class=\"control-group\"&gt;\n      &lt;label class=\"control-label\" for=\"nameInput\"&gt;Name&lt;/label&gt;\n      &lt;div class=\"controls\"&gt;\n        &lt;input type=\"text\" class=\"input-xlarge\" id=\"nameInput\"&gt;\n        &lt;p class=\"help-block\"&gt;Supporting help text&lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/fieldset&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>There's a lot of boilerplate code in there, that I'd like to reduce to a new directive - form-input, like follows:</p>\n\n<pre><code>&lt;form-input label=\"Name\" form-id=\"nameInput\"&gt;&lt;/form-input&gt;\n</code></pre>\n\n<p>generates:</p>\n\n<pre><code>   &lt;div class=\"control-group\"&gt;\n      &lt;label class=\"control-label\" for=\"nameInput\"&gt;Name&lt;/label&gt;\n      &lt;div class=\"controls\"&gt;\n        &lt;input type=\"text\" class=\"input-xlarge\" id=\"nameInput\"&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n</code></pre>\n\n<p>I have this much working via a simple template.</p>\n\n<pre><code>angular.module('formComponents', [])\n    .directive('formInput', function() {\n        return {\n            restrict: 'E',\n            scope: {\n                label: 'bind',\n                formId: 'bind'\n            },\n            template:   '&lt;div class=\"control-group\"&gt;' +\n                            '&lt;label class=\"control-label\" for=\"{{formId}}\"&gt;{{label}}&lt;/label&gt;' +\n                            '&lt;div class=\"controls\"&gt;' +\n                                '&lt;input type=\"text\" class=\"input-xlarge\" id=\"{{formId}}\" name=\"{{formId}}\"&gt;' +\n                            '&lt;/div&gt;' +\n                        '&lt;/div&gt;'\n\n        }\n    })\n</code></pre>\n\n<p>However it's when I come to add in more advanced functionality that I'm getting stuck.</p>\n\n<h2>How can I support default values in the template?</h2>\n\n<p>I'd like to expose the \"type\" parameter as an optional attribute on my directive, eg:</p>\n\n<pre><code>&lt;form-input label=\"Password\" form-id=\"password\" type=\"password\"/&gt;&lt;/form-input&gt;\n&lt;form-input label=\"Email address\" form-id=\"emailAddress\" type=\"email\" /&gt;&lt;/form-input&gt;\n</code></pre>\n\n<p>However, if nothing is specified, I'd like to default to <code>\"text\"</code>.  How can I support this?</p>\n\n<h2>How can I customize the template based on the presence / absence of attributes?</h2>\n\n<p>I'd also like to be able to support the \"required\" attribute, if it's present.\nEg:</p>\n\n<pre><code>&lt;form-input label=\"Email address\" form-id=\"emailAddress\" type=\"email\" required/&gt;&lt;/form-input&gt;\n</code></pre>\n\n<p>If <code>required</code> is present in the directive, I'd like to add it to the generated <code>&lt;input /&gt;</code> in the output, and ignore it otherwise.  I'm not sure how to achieve this.</p>\n\n<p>I suspect these requirements may have moved beyond a simple template, and have to start using the pre-compile phases, but I'm at a loss where to start.</p>\n",
            "last_activity_date": 1422027911,
            "question_id": 10629238,
            "score": 70,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "AngularJs: Customizing the template within a Directive"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>[Edit]</strong> 7 months later</p>\n\n<p>Quoting from the github project</p>\n\n<blockquote>\n  <p>jQuery is no good, and jQuery plugins is not how do modular code.</p>\n</blockquote>\n\n<p>Seriously \"jQuery plugins\" are not a sound architecture strategy. Writing code with a hard dependency on jQuery is also silly.</p>\n\n<p><strong>[Original]</strong></p>\n\n<p>Since I gave critique about this template I will propose an alternative.</p>\n\n<p>To make live easier this relies on <code>jQuery</code> 1.6+ and ES5 (use the <a href=\"https://github.com/Raynos/jQuery-plugin-scaffolding\">ES5 Shim</a>).</p>\n\n<p>I've spend some time re-designing the plugin template you've given and rolled out my own.</p>\n\n<p><strong>Links:</strong></p>\n\n<ul>\n<li><a href=\"https://github.com/Raynos/jQuery-plugin-scaffolding\">Github</a></li>\n<li><a href=\"http://raynos.github.com/jQuery-plugin-scaffolding/\">Documentation</a></li>\n<li><a href=\"http://raynos.github.com/jQuery-plugin-scaffolding/tests/test.html\">Unit tests</a> Confirmed to pass in FF4, Chrome and IE9 (IE8 &amp; OP11 dies. known <a href=\"https://github.com/kriskowal/es5-shim/pull/20\">bug</a>).</li>\n<li><a href=\"http://raynos.github.com/jQuery-plugin-scaffolding/docs/jQuery-plugin-scaffold.html\">Annotated Source Code</a></li>\n<li><a href=\"http://jsfiddle.net/e2aYH/11/\">The PlaceKitten example plugin</a></li>\n</ul>\n\n<p><strong>Comparison:</strong></p>\n\n<p>I've refactored the template so that it's split into boilerplate (85%) and scaffolding code (15%). The intention is that you only have to edit the scaffolding code and you can keep leave boilerplate code untouched. To achieve this I've used </p>\n\n<ul>\n<li><em>inheritance</em> <a href=\"https://github.com/Raynos/jQuery-plugin-scaffolding/blob/master/lib/jQuery-plugin-scaffold.js#L210\"><code>var self = Object.create(Base)</code></a> Rather then editing the <code>Internal</code> class you have directly you should be editing a sub class. All your template / default functionality should be in a base class (called <code>Base</code> in my code).</li>\n<li><em>convention</em> <a href=\"https://github.com/Raynos/jQuery-plugin-scaffolding/blob/master/lib/jQuery-plugin-scaffold.js#L222\"><code>self[PLUGIN_NAME] = main;</code></a> By convention the plugin defined on jQuery will call the method define on <code>self[PLUGIN_NAME]</code> by default. This is considered the <code>main</code> plugin method and has a seperate external method for clarity. </li>\n<li><em>monkey patching</em> <a href=\"https://github.com/Raynos/jQuery-plugin-scaffolding/blob/master/lib/jQuery-plugin-scaffold.js#L20\"><code>$.fn.bind = function  _bind ...</code></a> Use of monkey patching means that the event namespacing is done automatically for you under the hood. This functionality is free and does not come at the cost of readability (calling <code>getEventNS</code> all the time).</li>\n</ul>\n\n<p><strong>OO Techniques</strong></p>\n\n<p>It's better to stick to proper JavaScript OO rather then classical OO emulation. To achieve this you should use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create</code></a>. (which ES5 just use the shim to upgrade old browsers).</p>\n\n<pre><code>var Base = (function _Base() {\n    var self = Object.create({}); \n    /* ... */\n    return self;\n})();\n\nvar Wrap = (function _Wrap() {\n    var self = Object.create(Base);\n    /* ...  */\n    return self;\n})();\n\nvar w = Object.create(Wrap);\n</code></pre>\n\n<p>This is different from the standard <code>new</code> and <code>.prototype</code> based OO people are used to. This approach is preferred because it re-inforces the concept that there are only Objects in JavaScript and it's a prototypical OO approach.</p>\n\n<p><strong>[<code>getEventNs</code>]</strong></p>\n\n<p>As mentioned this method has been refactored away by overriding <code>.bind</code> and <code>.unbind</code> to automatically inject namespaces. These methods are overwritten on the private version of jQuery <a href=\"https://github.com/Raynos/jQuery-plugin-scaffolding/blob/master/lib/jQuery-plugin-scaffold.js#L229\"><code>$.sub()</code></a>. The overwritten methods behave the same way as your namespacing does. It namespaces events uniquely based on plugin and instance of a plugin wrapper around a HTMLElement (Using <a href=\"https://github.com/Raynos/jQuery-plugin-scaffolding/blob/master/lib/jQuery-plugin-scaffold.js#L23\"><code>.ns</code></a>.</p>\n\n<p><strong>[<code>getData</code>]</strong></p>\n\n<p>This method has been replaced with a <a href=\"https://github.com/Raynos/jQuery-plugin-scaffolding/blob/master/lib/jQuery-plugin-scaffold.js#L105\"><code>.data</code></a> method that has the same API as <code>jQuery.fn.data</code>. The fact that it's the same API makes it easier to use, its basically a thin wrapper around <code>jQuery.fn.data</code> with namespacing. This allows you to set key/value pair data that is immediatley stored for that plugin only. Multiple plugins can use this method in parallel without any conflicts.</p>\n\n<p><strong>[<code>publicMethods</code>]</strong></p>\n\n<p>The publicMethods object has been replaced by any method being defined on <code>Wrap</code> being automatically public. You can call any method on a Wrapped object directly but you do not actually have access to the wrapped object.</p>\n\n<p><strong>[<code>$.fn[PLUGIN_NAME]</code>]</strong></p>\n\n<p>This has been refactored so it exposes a more standardized API. This api is</p>\n\n<pre><code>$(selector).PLUGIN_NAME(\"methodName\", {/* object hash */}); // OR\n$(selector).PLUGIN_NAME({/* object hash */}); // methodName defaults to PLUGIN_NAME\n</code></pre>\n\n<p>the elements in the selector are automatically wrapped in the <code>Wrap</code> object, the method is called or each selected element from the selector and the return value is always a <a href=\"http://api.jquery.com/category/deferred-object/\"><code>$.Deferred</code></a> element. </p>\n\n<p>This standardizes the API and the return type. You can then call <code>.then</code> on the returned deferred to get out the actual data you care about. The use of deferred here is very powerful for abstraction away whether the plugin is synchronous or asynchronous.</p>\n\n<p><a href=\"https://github.com/Raynos/jQuery-plugin-scaffolding/blob/master/lib/jQuery-plugin-scaffold.js#L55\"><strong><code>_create</code></strong></a></p>\n\n<p>A caching create function has been added. This is called to turn a <code>HTMLElement</code> into a Wrapped element and each HTMLElement will only be wrapped once. This caching gives you a solid reduction in memory.</p>\n\n<p><a href=\"https://github.com/Raynos/jQuery-plugin-scaffolding/blob/master/lib/jQuery-plugin-scaffold.js#L127\"><strong><code>$.PLUGIN_NAME</code></strong></a></p>\n\n<p>Added another public method for the plugin (A total of two!).</p>\n\n<pre><code>$.PLUGIN_NAME(elem, \"methodName\", {/* options */});\n$.PLUGIN_NAME([elem, elem2, ...], \"methodName\", {/* options */});\n$.PLUGIN_NAME(\"methodName\", { \n  elem: elem, /* [elem, elem2, ...] */\n  cb: function() { /* success callback */ }\n  /* further options */\n});\n</code></pre>\n\n<p>All parameters are optional. <code>elem</code> defaults to <code>&lt;body&gt;</code>, <code>\"methodName\"</code> defaults to <code>\"PLUGIN_NAME\"</code> and <code>{/* options */}</code> defaults to <code>{}</code>.</p>\n\n<p>This API is very flexible (with 14 method overloads!) and standard enough to get used to the syntnax for every method your plugin will expose.</p>\n\n<p><a href=\"https://github.com/Raynos/jQuery-plugin-scaffolding/blob/master/lib/jQuery-plugin-scaffold.js#L157\"><strong>Public exposure</strong></a></p>\n\n<p>The <code>Wrap</code>, <code>create</code> and <code>$</code> objects are exposed globally. This will allow advanced plugin users maximum flexibility with your plugin. They can use <code>create</code> and the modified subbed <code>$</code> in their development and they can also monkey patch <code>Wrap</code>. This allows for i.e. hooking into your plugin methods. All three of these are marked with a <code>_</code> in front of their name so they are internal and using them breaks the garantuee that your plugin works.</p>\n\n<p>The internal <code>defaults</code> object is also exposed as <code>$.PLUGIN_NAME.global</code>. This allows users to override your defaults and set plugin global <code>defaults</code>. In this plugin setup all hashes past into methods as objects are merged with the defaults, so this allows users to set global defaults for all your methods. </p>\n\n<p><a href=\"http://raynos.github.com/jQuery-plugin-scaffolding/\"><strong>Actual Code</strong></a></p>\n\n<pre><code>(function($, jQuery, window, document, undefined) {\n    var PLUGIN_NAME = \"Identity\";\n    // default options hash.\n    var defaults = {\n        // TODO: Add defaults\n    };\n\n    // -------------------------------\n    // -------- BOILERPLATE ----------\n    // -------------------------------\n\n    var toString = Object.prototype.toString,\n        // uid for elements\n        uuid = 0,\n        Wrap, Base, create, main;\n\n    (function _boilerplate() {\n        // over-ride bind so it uses a namespace by default\n        // namespace is PLUGIN_NAME_&lt;uid&gt;\n        $.fn.bind = function  _bind(type, data, fn, nsKey) {\n            if (typeof type === \"object\") {\n                for (var key in type) {\n                    nsKey = key + this.data(PLUGIN_NAME)._ns;\n                    this.bind(nsKey, data, type[key], fn);\n                }\n                return this;\n            }\n\n            nsKey = type + this.data(PLUGIN_NAME)._ns;\n            return jQuery.fn.bind.call(this, nsKey, data, fn);\n        };\n\n        // override unbind so it uses a namespace by default.\n        // add new override. .unbind() with 0 arguments unbinds all methods\n        // for that element for this plugin. i.e. calls .unbind(_ns)\n        $.fn.unbind = function _unbind(type, fn, nsKey) {\n            // Handle object literals\n            if ( typeof type === \"object\" &amp;&amp; !type.preventDefault ) {\n                for ( var key in type ) {\n                    nsKey = key + this.data(PLUGIN_NAME)._ns;\n                    this.unbind(nsKey, type[key]);\n                }\n            } else if (arguments.length === 0) {\n                return jQuery.fn.unbind.call(this, this.data(PLUGIN_NAME)._ns);\n            } else {\n                nsKey = type + this.data(PLUGIN_NAME)._ns;\n                return jQuery.fn.unbind.call(this, nsKey, fn);    \n            }\n            return this;\n        };\n\n        // Creates a new Wrapped element. This is cached. One wrapped element \n        // per HTMLElement. Uses data-PLUGIN_NAME-cache as key and \n        // creates one if not exists.\n        create = (function _cache_create() {\n            function _factory(elem) {\n                return Object.create(Wrap, {\n                    \"elem\": {value: elem},\n                    \"$elem\": {value: $(elem)},\n                    \"uid\": {value: ++uuid}\n                });\n            }\n            var uid = 0;\n            var cache = {};\n\n            return function _cache(elem) {\n                var key = \"\";\n                for (var k in cache) {\n                    if (cache[k].elem == elem) {\n                        key = k;\n                        break;\n                    }\n                }\n                if (key === \"\") {\n                    cache[PLUGIN_NAME + \"_\" + ++uid] = _factory(elem);\n                    key = PLUGIN_NAME + \"_\" + uid;\n                } \n                return cache[key]._init();\n            };\n        }());\n\n        // Base object which every Wrap inherits from\n        Base = (function _Base() {\n            var self = Object.create({});\n            // destroy method. unbinds, removes data\n            self.destroy = function _destroy() {\n                if (this._alive) {\n                    this.$elem.unbind();\n                    this.$elem.removeData(PLUGIN_NAME);\n                    this._alive = false;    \n                }\n            };\n\n            // initializes the namespace and stores it on the elem.\n            self._init = function _init() {\n                if (!this._alive) {\n                    this._ns = \".\" + PLUGIN_NAME + \"_\" + this.uid;\n                    this.data(\"_ns\", this._ns);    \n                    this._alive = true;\n                }\n                return this;\n            };\n\n            // returns data thats stored on the elem under the plugin.\n            self.data = function _data(name, value) {\n                var $elem = this.$elem, data;\n                if (name === undefined) {\n                    return $elem.data(PLUGIN_NAME);\n                } else if (typeof name === \"object\") {\n                    data = $elem.data(PLUGIN_NAME) || {};\n                    for (var k in name) {\n                        data[k] = name[k];\n                    }\n                    $elem.data(PLUGIN_NAME, data);\n                } else if (arguments.length === 1) {\n                    return ($elem.data(PLUGIN_NAME) || {})[name];\n                } else  {\n                    data = $elem.data(PLUGIN_NAME) || {};\n                    data[name] = value;\n                    $elem.data(PLUGIN_NAME, data);\n                }\n            };\n                return self;\n        })();\n\n        // Call methods directly. $.PLUGIN_NAME(elem, \"method\", option_hash)\n        var methods = jQuery[PLUGIN_NAME] = function _methods(elem, op, hash) {\n            if (typeof elem === \"string\") {\n                hash = op || {};\n                op = elem;\n                elem = hash.elem;\n            } else if ((elem &amp;&amp; elem.nodeType) || Array.isArray(elem)) {\n                if (typeof op !== \"string\") {\n                    hash = op;\n                    op = null;\n                }\n            } else {\n                hash = elem || {};\n                elem = hash.elem;\n            }\n\n            hash = hash || {}\n            op = op || PLUGIN_NAME;\n            elem = elem || document.body;\n            if (Array.isArray(elem)) {\n                var defs = elem.map(function(val) {\n                    return create(val)[op](hash);    \n                });\n            } else {\n                var defs = [create(elem)[op](hash)];    \n            }\n\n            return $.when.apply($, defs).then(hash.cb);\n        };\n\n        // expose publicly.\n        Object.defineProperties(methods, {\n            \"_Wrap\": {\n                \"get\": function() { return Wrap; },\n                \"set\": function(v) { Wrap = v; }\n            },\n            \"_create\":{\n                value: create\n            },\n            \"_$\": {\n                value: $    \n            },\n            \"global\": {\n                \"get\": function() { return defaults; },\n                \"set\": function(v) { defaults = v; }\n             }\n        });\n\n        // main plugin. $(selector).PLUGIN_NAME(\"method\", option_hash)\n        jQuery.fn[PLUGIN_NAME] = function _main(op, hash) {\n            if (typeof op === \"object\" || !op) {\n                hash = op;\n                op = null;\n            }\n            op = op || PLUGIN_NAME;\n            hash = hash || {};\n\n            // map the elements to deferreds.\n            var defs = this.map(function _map() {\n                return create(this)[op](hash);\n            }).toArray();\n\n            // call the cb when were done and return the deffered.\n            return $.when.apply($, defs).then(hash.cb);\n\n        };\n    }());\n\n    // -------------------------------\n    // --------- YOUR CODE -----------\n    // -------------------------------\n\n    main = function _main(options) {\n        this.options = options = $.extend(true, defaults, options); \n        var def = $.Deferred();\n\n        // Identity returns this &amp; the $elem.\n        // TODO: Replace with custom logic\n        def.resolve([this, this.elem]);\n\n        return def;\n    }\n\n    Wrap = (function() {\n        var self = Object.create(Base);\n\n        var $destroy = self.destroy;\n        self.destroy = function _destroy() {\n            delete this.options;\n            // custom destruction logic\n            // remove elements and other events / data not stored on .$elem\n\n            $destroy.apply(this, arguments);\n        };\n\n        // set the main PLUGIN_NAME method to be main.\n        self[PLUGIN_NAME] = main;\n\n        // TODO: Add custom logic for public methods\n\n        return self;\n    }());\n\n})(jQuery.sub(), jQuery, this, document);\n</code></pre>\n\n<p>As can be seen the code your supposed to edit is below the <code>YOUR CODE</code> line. The <code>Wrap</code> object acts similarly to your <code>Internal</code> object. </p>\n\n<p>The function <code>main</code> is the main function called with <code>$.PLUGIN_NAME()</code> or <code>$(selector).PLUGIN_NAME()</code> and should contain your main logic.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>A while back I've build a plugin generator based on a blog article I have read: <a href=\"http://jsfiddle.net/KeesCBakker/QkPBF/\" rel=\"nofollow\">http://jsfiddle.net/KeesCBakker/QkPBF/</a>. It might be of use. It is fairly basic and straight forward. Any comments would be very welcome. </p>\n\n<p>You can fork your own generator and change it to your needs.</p>\n\n<p>Ps. This is the generated body:</p>\n\n<pre><code>(function($){\n\n    //My description\n    function MyPluginClassName(el, options) {\n\n        //Defaults:\n        this.defaults = {\n            defaultStringSetting: 'Hello World',\n            defaultIntSetting: 1\n        };\n\n        //Extending options:\n        this.opts = $.extend({}, this.defaults, options);\n\n        //Privates:\n        this.$el = $(el);\n    }\n\n    // Separate functionality from object creation\n    MyPluginClassName.prototype = {\n\n        init: function() {\n            var _this = this;\n        },\n\n        //My method description\n        myMethod: function() {\n            var _this = this;\n        }\n    };\n\n    // The actual plugin\n    $.fn.myPluginClassName = function(options) {\n        if(this.length) {\n            this.each(function() {\n                var rev = new MyPluginClassName(this, options);\n                rev.init();\n                $(this).data('myPluginClassName', rev);\n            });\n        }\n    };\n})(jQuery);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>I've been googling and landed here so, I have to post some ideas: first I agree with @Raynos. </p>\n\n<p>The most code out there that tries to build a jQuery plugin actually...is not a plugin! It's just an object stored in memory which is refered by the data property of a node/element. That's because jQuery should be seen and used as a tool side by side with a class library (to remedy js inconsistencies from OO architecture) to build better code and yes this is not bad at all!</p>\n\n<p>If you don't like classical OO behaviour stick to a prototypal library like <a href=\"http://clonejs.org/\" rel=\"nofollow\">clone</a>.</p>\n\n<p>So what our options really?</p>\n\n<ul>\n<li>use JQueryUI/Widget or a similar library that hides technicalities and\nprovides abstraction</li>\n<li>don't use them because of complexities, learning curve and god knows future changes</li>\n<li>don't use them becuase you want to insist on modular design, build small-increase later</li>\n<li>don't use them because you might want porting/connecting your code with different libraries.</li>\n</ul>\n\n<p>Suppose the issues addressed by the following scenario (see the complexities from this question: <a href=\"http://stackoverflow.com/questions/7127600/which-jquery-plugin-design-pattern-should-i-use\">Which jQuery plugin design pattern should I use?</a>):</p>\n\n<blockquote>\n  <p>we have nodes A, B and C that store an object reference into their <code>data</code> property</p>\n  \n  <blockquote>\n    <p>some of them store info in public <strong>and</strong> private accessible <strong><em>internal objects</em></strong>,\n    some classes of these objects are connected with <strong>inheritance</strong>,\n    all of these nodes also need some private <strong>and</strong> public <strong><em>singletons</em></strong> to work best. </p>\n  </blockquote>\n</blockquote>\n\n<p>What would we do? See the drawning:</p>\n\n<pre><code>classes : |  A        B         C\n------------------case 1----------\nmembers   |  |        |         |\n  of      |  v        v         v\nan object | var a=new A, b=new B,  c=new C\n  at      |     B extends A\nnode X :  |  a, b, c : private\n------------------case 2---------\nmembers   |  |        |         |\n  of      |  v        v         v\nan object | var aa=new A, bb=new B, cc=new C\n  at      |     BB extends AA\nnode Y :  |  aa, bb, cc : public\n-------------------case 3--------\nmembers   |  |        |         |\n  of      |  v        v         v\nan object | var d= D.getInstance() (private),\n  at      |     e= E.getInstance() (public)\nnode Z :  |     D, E : Singletons\n</code></pre>\n\n<p>as you can see every node refers to an object - a jQuery approach - but these objects change wildely; they contain object-properties with different data stored in or, even singletons that should be...single in memory like the prototype functions of the objects. We don't want every object's function belonging to <code>class A</code> to be repeatedly <strong><em>duplicated in memory</em></strong> in every node's object!</p>\n\n<p><em><strong>Before my answer</em></strong> see a common approach I've seen in jQuery plugins - some of them very popular but I don't say names:</p>\n\n<pre><code>(function($, window, document, undefined){\n   var x = '...', y = '...', z = '...',\n       container, $container, options;\n   var myPlugin = (function(){ //&lt;----the game is lost!\n      var defaults = {\n\n      };\n      function init(elem, options) {\n         container = elem;\n         $container = $(elem);\n         options = $.extend({}, defaults, options);\n      }\n      return {\n         pluginName: 'superPlugin',\n         init: function(elem, options) {\n            init(elem, options);\n         }\n      };\n   })();\n   //extend jquery\n   $.fn.superPlugin = function(options) {\n      return this.each(function() {\n         var obj = Object.create(myPlugin); //&lt;---lose, lose, lose!\n         obj.init(this, options);\n         $(this).data(obj.pluginName, obj);\n      });\n   };\n\n}(jQuery, window, document));\n</code></pre>\n\n<p>I was watching some slides at: <a href=\"http://www.slideshare.net/benalman/jquery-plugin-creation\" rel=\"nofollow\">http://www.slideshare.net/benalman/jquery-plugin-creation</a> from Ben Alman where he refers at slide 13 to <strong><em>object literals</em></strong> as <strong><em>singletons</em></strong> and that just knock me over: this is what the above plugin does, it creates one singleton with <strong><em>no chance whatsover</em></strong> to alter it's internal state!!!</p>\n\n<p>Furthermore, at the jQuery part it stores a <strong><em>common reference</em></strong> to every single node!</p>\n\n<p>My solution uses a <strong><em>factory</em></strong> to keep internal state and return an object plus it can be expanded with a <strong><em>class</em></strong> library and split in different files:</p>\n\n<pre><code>;(function($, window, document, undefined){\n   var myPluginFactory = function(elem, options){\n   ........\n   var modelState = {\n      options: null //collects data from user + default\n   };\n   ........\n   function modeler(elem){\n      modelState.options.a = new $$.A(elem.href);\n      modelState.options.b = $$.B.getInstance();\n   };\n   ........\n   return {\n         pluginName: 'myPlugin',\n         init: function(elem, options) {\n            init(elem, options);\n         },\n         get_a: function(){return modelState.options.a.href;},\n         get_b: function(){return modelState.options.b.toString();}\n      };\n   };\n   //extend jquery\n   $.fn.myPlugin = function(options) {\n      return this.each(function() {\n         var plugin = myPluginFactory(this, options);\n         $(this).data(plugin.pluginName, plugin);\n      });\n   };\n}(jQuery, window, document));\n</code></pre>\n\n<p>My project: <a href=\"https://github.com/centurianii/jsplugin\" rel=\"nofollow\">https://github.com/centurianii/jsplugin</a></p>\n\n<p>See: <a href=\"http://jsfiddle.net/centurianii/s4J2H/1/\" rel=\"nofollow\">http://jsfiddle.net/centurianii/s4J2H/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've started to write few jQuery plugins and figured it'd be nice to setup my IDE with a jQuery plugin template. </p>\n\n<p>I have been reading some articles and posts on this site related to plugin convention, design, etc.. and thought I'd try and consolidate all of that.</p>\n\n<p>Below is my template, I am looking to use it frequently so was keen to ensure it generally conforms to jQuery plugin design convention and whether the idea of having multiple internal methods (or even its general design) would impact performance and be prone to memory issues.</p>\n\n<pre><code>(function($)\n{\n    var PLUGIN_NAME = \"myPlugin\"; // TODO: Plugin name goes here.\n    var DEFAULT_OPTIONS =\n    {\n        // TODO: Default options for plugin.\n    };\n    var pluginInstanceIdCount = 0;\n\n    var I = function(/*HTMLElement*/ element)\n    {\n        return new Internal(element);\n    };\n\n    var Internal = function(/*HTMLElement*/ element)\n    {\n        this.$elem = $(element);\n        this.elem = element;\n        this.data = this.getData();\n\n        // Shorthand accessors to data entries:\n        this.id = this.data.id;\n        this.options = this.data.options;\n    };\n\n    /**\n     * Initialises the plugin.\n     */\n    Internal.prototype.init = function(/*Object*/ customOptions)\n    {\n        var data = this.getData();\n\n        if (!data.initialised)\n        {\n            data.initialised = true;\n            data.options = $.extend(DEFAULT_OPTIONS, customOptions);\n\n            // TODO: Set default data plugin variables.\n            // TODO: Call custom internal methods to intialise your plugin.\n        }\n    };\n\n    /**\n     * Returns the data for relevant for this plugin\n     * while also setting the ID for this plugin instance\n     * if this is a new instance.\n     */\n    Internal.prototype.getData = function()\n    {\n        if (!this.$elem.data(PLUGIN_NAME))\n        {\n            this.$elem.data(PLUGIN_NAME, {\n                id : pluginInstanceIdCount++,\n                initialised : false\n            });\n        }\n\n        return this.$elem.data(PLUGIN_NAME);\n    };\n\n    // TODO: Add additional internal methods here, e.g. Internal.prototype.&lt;myPrivMethod&gt; = function(){...}\n\n    /**\n     * Returns the event namespace for this widget.\n     * The returned namespace is unique for this widget\n     * since it could bind listeners to other elements\n     * on the page or the window.\n     */\n    Internal.prototype.getEventNs = function(/*boolean*/ includeDot)\n    {\n        return (includeDot !== false ? \".\" : \"\") + PLUGIN_NAME + \"_\" + this.id;\n    };\n\n    /**\n     * Removes all event listeners, data and\n     * HTML elements automatically created.\n     */\n    Internal.prototype.destroy = function()\n    {\n        this.$elem.unbind(this.getEventNs());\n        this.$elem.removeData(PLUGIN_NAME);\n\n        // TODO: Unbind listeners attached to other elements of the page and window.\n    };\n\n    var publicMethods =\n    {\n        init : function(/*Object*/ customOptions)\n        {\n            return this.each(function()\n            {\n                I(this).init(customOptions);\n            });\n        },\n\n        destroy : function()\n        {\n            return this.each(function()\n            {\n                I(this).destroy();\n            });\n        }\n\n        // TODO: Add additional public methods here.\n    };\n\n    $.fn[PLUGIN_NAME] = function(/*String|Object*/ methodOrOptions)\n    {\n        if (!methodOrOptions || typeof methodOrOptions == \"object\")\n        {\n            return publicMethods.init.call(this, methodOrOptions);\n        }\n        else if (publicMethods[methodOrOptions])\n        {\n            var args = Array.prototype.slice.call(arguments, 1);\n\n            return publicMethods[methodOrOptions].apply(this, args);\n        }\n        else\n        {\n            $.error(\"Method '\" + methodOrOptions + \"' doesn't exist for \" + PLUGIN_NAME + \" plugin\");\n        }\n    };\n})(jQuery);\n</code></pre>\n\n<p>Thanks in advance.</p>\n",
            "last_activity_date": 1386332581,
            "question_id": 5980194,
            "score": 55,
            "tags": [
                "javascript",
                "jquery",
                "jquery-plugins"
            ],
            "title": "jQuery plugin template - best practice, convention, performance and memory impact"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p><a href=\"http://phonegap.com/\">PhoneGap</a> isn't exactly what you're asking about, but is something you might want to be aware of. It's a wrapper for making iPhone apps using HTML/CSS/JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>QuickConnectiPhone has what you are asking for.  There is a custom project type for Dashcode that allows you to quickly create your app.  If you then want to run it installed on an iPhone or touch you can then drop it into Xcode and compile it up.</p>\n\n<p>It includes wrappers for AJAX and the SQLite database that exists within the Safari browser on the iPhone and touch.</p>\n\n<p>You can get it at</p>\n\n<p><a href=\"http://sourceforge.net/projects/quickconnect/\" rel=\"nofollow\">http://sourceforge.net/projects/quickconnect/</a></p>\n\n<p>More information is available at </p>\n\n<p><a href=\"http://tetontech.wordpress.com\" rel=\"nofollow\">http://tetontech.wordpress.com</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>My personal preference is jQTouch. It's a great framework to work with and includes both javascript and CSS assets to make web applications that really give the feel of native applications.</p>\n\n<p>For accessing the lower level functionality of the native device, you can always wrap your HTML files, JS + CSS + jQTouch assets into a native app using something like phonegap, rhomobile or appcelerator, however, this does require a mac to compile and deploy the native application to the appstore.  </p>\n\n<p>Certainly most of the things I am looking at are just web applications, so jQTouch does the job nicely.  Did a blog post combining my thoughts in my detail on my blog, link below:</p>\n\n<p><a href=\"http://distractable.net/coding/iphone-android-web-application-frameworks/\" rel=\"nofollow\">iPhone and Android Web Application Frameworks</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I would second <a href=\"http://www.jqtouch.com/\" rel=\"nofollow\">jQTouch</a>. It uses native CSS animations and behaves reasonably smoothly on my iPod Touch.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>JQTouch is not really an app dev framework..it is a style and animation \"wrapper\".</p>\n\n<p>QuickConnect provides start to finish app development on iphone, droid, and blackberry. The iphone is the most complete.</p>\n\n<p>It can incorporate JQTouch for look and feel and is well-documented.</p>\n\n<p>PhoneGap can be used in conjunction with JQTouch as well but in my experience PG documentation and instruction is harder to find.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I second jQTouch being a great full featured solution. But if you are just looking for a JavaScript library I'd recommend <a href=\"http://xuijs.com/\" rel=\"nofollow\">XUI</a>.  The syntax is based on jQuery but the library is tuned for mobile development.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is also <a href=\"http://www.journyx.com/jpint/\" rel=\"nofollow\">jPint</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Old question, but still relevant. Sencha (the new name of the company behind ExtJs) just released the mobile app platform Sencha Tounch for iPhone, iPod, iPad and Android:\n<a href=\"http://www.sencha.com/products/touch/\">http://www.sencha.com/products/touch/</a></p>\n\n<p>Blog post that explains the difference between jQTouch and Sencha Touch:\n<a href=\"http://9-bits.com/post/723711597/jqtouch-and-sencha-touch\">http://9-bits.com/post/723711597/jqtouch-and-sencha-touch</a></p>\n\n<p>Update: John Resig recently announced that the jQuery team is working on a mobile UI library. Looks promising: <a href=\"http://jquerymobile.com/2010/08/announcing-the-jquery-mobile-project/\">http://jquerymobile.com/2010/08/announcing-the-jquery-mobile-project/</a></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>The folks at DHTMLX also have a mobile library</p>\n\n<p>DEMOS: <a href=\"http://dhtmlx.com/touch/samples/\" rel=\"nofollow\">http://dhtmlx.com/touch/samples/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>use <a href=\"http://jquerymobile.com/\" rel=\"nofollow\">http://jquerymobile.com/</a>  it is well supported by industry leaders </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I like <a href=\"http://uraniumjs.com\" rel=\"nofollow\">Uranium</a>. It's a lightweight set of widgets. (It also includes the <a href=\"http://xuijs.com\" rel=\"nofollow\">XUI</a> framework). I find jQuery too bloated for mobile use. I need a smaller library. Uranium is a bunch of pre-defined widgets, which I find pretty useful for most functions I want to perform on a mobile site.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm starting a web application that will target Mobile Safari on iPhone/iPod Touch.  I'm evaluating the available client-side JavaScript/CSS libraries/frameworks that are currently out there.</p>\n\n<p>These are the ones I'm currenlty aware of:</p>\n\n<ul>\n<li><a href=\"http://code.google.com/p/iui/\">iUI</a></li>\n<li><a href=\"http://code.google.com/p/ciui-dev\">CiUI</a></li>\n<li><a href=\"http://code.google.com/p/iphone-universal/\">UiUIKit</a></li>\n<li><a href=\"http://webapp.net.free.fr/\">WebApp.Net</a></li>\n<li><a href=\"http://snippetspace.com/projects/iwebkit/\">iWebKit</a></li>\n<li><a href=\"http://developer.apple.com/documentation/AppleApplications/Conceptual/Dashcode_UserGuide/Contents/Resources/en.lproj/Introduction/chapter_1_section_1.html\">Apple's Dashcode Application</a> - not really a standalone library/framework, but it provides/generates JavaScript, CSS, and images that conform to the native iPhone UI metaphors.</li>\n</ul>\n\n<p>Are there any others out there?  I want to make sure I'm not missing any before I make a decision.  I'm only looking for client-side JavaScript/CSS solutions and building one from scratch isn't an option because of time constraints.  No server-side PHP, Ruby, Python, Java, etc. solutions.</p>\n\n<p>I am aware of the <a href=\"http://stackoverflow.com/questions/8756/iphone-web-applications-templates-frameworks\">iPhone web applications, templates, frameworks?</a> question that was asked, but this only mentioned iUI and UiUIKit.</p>\n\n<p>Thank you</p>\n",
            "last_activity_date": 1355885325,
            "question_id": 215390,
            "score": 54,
            "tags": [
                "javascript",
                "iphone",
                "frameworks",
                "mobile-safari"
            ],
            "title": "Available iPhone Web Application JavaScript UI Library/Frameworks"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Good question!</p>\n\n<p>One solution could be to continue using your config.xml file, and provide api endpoint information from the backend to your generated html, like this (example in php):</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nangular.module('YourApp').constant('API_END_POINT', '&lt;?php echo $apiEndPointFromBackend; ?&gt;');\n&lt;/script&gt;\n</code></pre>\n\n<p>Maybe not a pretty solution, but it would work.</p>\n\n<p>Another solution could be to keep the <code>API_END_POINT</code> constant value as it should be in production, and only modify your hosts-file to point that url to your local api instead.</p>\n\n<p>Or maybe a solution using <code>localStorage</code> for overrides, like this:</p>\n\n<pre><code>.factory('User',['$resource','API_END_POINT'],function($resource,API_END_POINT){\n   var myApi = localStorage.get('myLocalApiOverride');\n   return $resource((myApi || API_END_POINT) + 'user');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>One cool solution might be separating all environment-specific values into some separate angular module, that all other modules depend on:</p>\n\n<pre><code>angular.module('configuration', [])\n       .constant('API_END_POINT','123456')\n       .constant('HOST','localhost');\n</code></pre>\n\n<p>Then your modules that need those entries can declare a dependency on it:</p>\n\n<pre><code>angular.module('services',['configuration'])\n       .factory('User',['$resource','API_END_POINT'],function($resource,API_END_POINT){\n           return $resource(API_END_POINT + 'user');\n       });\n</code></pre>\n\n<p>Now you could think about further cool stuff:</p>\n\n<p>The module, that contains the configuration can be separated into configuration.js, that will be included at your page.</p>\n\n<p>This script can be easily edited by each of you, as long as you don\u2019t check this separate file into git. But it's easier to not check in the configuration if it is in a separate file. Also, you could branch it locally.</p>\n\n<p>Now, if you have a build-system, like ANT or Maven, your further steps could be implementing some placeholders for the values API_END_POINT, that will be replaced during build-time, with your specific values.</p>\n\n<p>Or you have your <code>configuration_a.js</code> and <code>configuration_b.js</code> and decide at the backend which to include.</p>\n",
                    "is_accepted": false,
                    "score": 48
                },
                {
                    "body": "<p>Have you seen this <a href=\"http://stackoverflow.com/questions/13015523/angular-js-is-value-the-proper-way-to-set-app-wide-constant-and-how-to-retri?rq=1\">question</a> and its answer?</p>\n\n<p>You can set a globally valid value for you app like this:</p>\n\n<pre><code>app.value('key', 'value');\n</code></pre>\n\n<p>and then use it in your services. You could move this code to a config.js file and execute it on page load or another convenient moment.</p>\n",
                    "is_accepted": false,
                    "score": -8
                },
                {
                    "body": "<p>You could use <code>lvh.me:9000</code> to access your AngularJS app, (<code>lvh.me</code> just points to 127.0.0.1) and then specify a different endpoint if <code>lvh.me</code> is the host:</p>\n\n<pre><code>app.service(\"Configuration\", function() {\n  if (window.location.host.match(/lvh\\.me/)) {\n    return this.API = 'http://localhost\\\\:7080/myapi/';\n  } else {\n    return this.API = 'http://localhost\\\\:8099/hisapi/';\n  }\n});\n</code></pre>\n\n<p>And then inject the Configuration service and use <code>Configuration.API</code> wherever you need to access the API:</p>\n\n<pre><code>$resource(Configuration.API + '/endpoint/:id', {\n  id: '@id'\n});\n</code></pre>\n\n<p>A tad clunky, but works fine for me, albeit in a slightly different situation (API endpoints differ in production and development).</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I'm a little late to the thread, but if you're using <a href=\"http://gruntjs.com/\">Grunt</a> I've had great success with <a href=\"https://npmjs.org/package/grunt-ng-constant\"><code>grunt-ng-constant</code></a>.</p>\n\n<p>The config section for <code>ngconstant</code> in my <code>Gruntfile.js</code> looks like</p>\n\n<pre><code>ngconstant: {\n  options: {\n    name: 'config',\n    wrap: '\"use strict\";\\n\\n{%= __ngModule %}',\n    space: '  '\n  },\n  development: {\n    options: {\n      dest: '&lt;%= yeoman.app %&gt;/scripts/config.js',\n    },\n    constants: {\n      ENV: 'development'\n    }\n  },\n  production: {\n    options: {\n      dest: '&lt;%= yeoman.dist %&gt;/scripts/config.js',\n    },\n    constants: {\n      ENV: 'production'\n    }\n  }\n}\n</code></pre>\n\n<p>The tasks that use <code>ngconstant</code> look like</p>\n\n<pre><code>grunt.registerTask('server', function (target) {\n  if (target === 'dist') {\n    return grunt.task.run([\n      'build',\n      'open',\n      'connect:dist:keepalive'\n    ]);\n  }\n\n  grunt.task.run([\n    'clean:server',\n    'ngconstant:development',\n    'concurrent:server',\n    'connect:livereload',\n    'open',\n    'watch'\n  ]);\n});\n\ngrunt.registerTask('build', [\n  'clean:dist',\n  'ngconstant:production',\n  'useminPrepare',\n  'concurrent:dist',\n  'concat',\n  'copy',\n  'cdnify',\n  'ngmin',\n  'cssmin',\n  'uglify',\n  'rev',\n  'usemin'\n]);\n</code></pre>\n\n<p>So running <code>grunt server</code> will generate a <code>config.js</code> file in <code>app/scripts/</code> that looks like</p>\n\n<pre><code>\"use strict\";\nangular.module(\"config\", []).constant(\"ENV\", \"development\");\n</code></pre>\n\n<p>Finally, I declare the dependency on whatever modules need it:</p>\n\n<pre><code>// the 'config' dependency is generated via grunt\nvar app = angular.module('myApp', [ 'config' ]);\n</code></pre>\n\n<p>Now my constants can be dependency injected where needed. E.g.,</p>\n\n<pre><code>app.controller('MyController', ['ENV', function( ENV ) {\n  if( ENV === 'production' ) {\n    ...\n  }\n}]);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 146
                },
                {
                    "body": "<p>If you're using <a href=\"http://brunch.io\" rel=\"nofollow\">Brunch</a>, the plugin <a href=\"https://www.npmjs.org/package/constangular-brunch\" rel=\"nofollow\">Constangular</a> helps you to manage variables for different environments.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For <a href=\"http://gulpjs.com\" rel=\"nofollow\">Gulp</a> users, <a href=\"https://www.npmjs.com/package/gulp-ng-constant\" rel=\"nofollow\">gulp-ng-constant</a> is also useful combined with <a href=\"https://www.npmjs.com/package/gulp-concat\" rel=\"nofollow\">gulp-concat</a>, <a href=\"https://www.npmjs.com/package/event-stream\" rel=\"nofollow\">event-stream</a> and <a href=\"https://www.npmjs.com/package/yargs\" rel=\"nofollow\">yargs</a>.</p>\n\n<pre><code>var concat = require('gulp-concat'),\n    es = require('event-stream'),\n    gulp = require('gulp'),\n    ngConstant = require('gulp-ng-constant'),\n    argv = require('yargs').argv;\n\nvar enviroment = argv.env || 'development';\n\ngulp.task('build', function () {\n  var config = gulp.src('config/' + enviroment + '.json')\n    .pipe(ngConstant({name: 'app.config'}));\n  var scripts = gulp.src('js/*');\n  return es.merge(config, scripts)\n    .pipe(concat('app.js'))\n    .pipe(gulp.dest('app/dist'))\n    .on('error', function() { });\n});\n</code></pre>\n\n<p>In my config folder I have these files:</p>\n\n<pre><code>ls -l config\ntotal 8\n-rw-r--r--+ 1 .. ci.json\n-rw-r--r--+ 1 .. development.json\n-rw-r--r--+ 1 .. production.json\n</code></pre>\n\n<p>Then you can run <code>gulp config --env development</code> and that will create something like this:</p>\n\n<pre><code>angular.module(\"app.config\", [])\n.constant(\"foo\", \"bar\")\n.constant(\"ngConstant\", true);\n</code></pre>\n\n<p>I also have this spec:</p>\n\n<pre><code>beforeEach(module('app'));\n\nit('loads the config', inject(function(config) {\n  expect(config).toBeTruthy();\n}));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How do you manage configuration variables/constants for different environments?</p>\n\n<p>This could be an example:  </p>\n\n<p>My rest API is reachable on <code>localhost:7080/myapi/</code>, but my friend that works on the same code under Git version control has the API deployed on his Tomcat on <code>localhost:8099/hisapi/</code>.</p>\n\n<p>Supposing that we have something like this : </p>\n\n<pre><code>angular\n    .constant('API_END_POINT','&lt;local_end_point&gt;')\n    .factory('User', ['$resource','API_END_POINT'], function($resource, API_END_POINT){\n        return $resource(API_END_POINT + 'user');\n    });\n</code></pre>\n\n<p>How do I dynamically inject the correct value of the API endpoint, depending on the environment?</p>\n\n<p>In PHP I usually do this kind of stuff with a <code>config.username.xml</code> file, merging the basic configuration file (config.xml) with the local environment configuration file recognised by the name of the user. But I don't know how to manage this kind of thing in JavaScript?</p>\n",
            "last_activity_date": 1425989557,
            "question_id": 16339595,
            "score": 105,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-service"
            ],
            "title": "How do I configure different environments in Angular.js?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>So after much trial and error (which is the best way to learn it) here's the way that works for me.</p>\n\n<p>First- externalize all your templates, say you have a template inside script tags like</p>\n\n<pre><code>&lt;script id=\"tmpl_ownevents\" type=\"text/templates\"&gt;\n    {{#unless event}}\n        &lt;div class=\"notfoundevents\"&gt;&lt;p&gt;No events for you&lt;/p&gt;&lt;/div&gt;    \n    {{/unless}}\n&lt;/script&gt;\n</code></pre>\n\n<p>Create a new file called events.tmpl and copy/paste the template into that.\nBe sure to remove the script elements themselves, this gotcha bit me in the a.. </p>\n\n<p>Install the Handlebars commandline script like so</p>\n\n<pre><code>npm install -g handlebars\n</code></pre>\n\n<p>go to the folder you have saved events.tmpl into and run</p>\n\n<pre><code>handlebars events.tmpl -f events.tmpl.js\n</code></pre>\n\n<p>Include the compiled javascript into your HTML after you included Handlebars.js </p>\n\n<pre><code>&lt;script src=\"events.tmpl.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Now all that is left is change your normal template code into something resembling the following</p>\n\n<pre><code>var template = Handlebars.templates['events.tmpl'], // your template minus the .js\n    context = events.all(), // your data\n    html    = template(context);\n</code></pre>\n\n<p>And there you have it, super fast pre-compiled Handlebars templates.</p>\n",
                    "is_accepted": true,
                    "score": 94
                },
                {
                    "body": "<p>Another great option for this is to use <a href=\"http://www.gruntjs.com\">GruntJS</a>. Once installed: </p>\n\n<p>npm install grunt-contrib-handlebars --save-dev</p>\n\n<p>Then inside your gruntfile.js</p>\n\n<pre><code>grunt.initConfig({\n    dirs: {\n      handlebars: 'app/handlebars'\n    },\n    watch: {\n      handlebars: {\n        files: ['&lt;%= handlebars.compile.src %&gt;'],\n        tasks: ['handlebars:compile']\n      }\n    },\n    handlebars: {\n      compile: {\n        src: '&lt;%= dirs.handlebars %&gt;/*.handlebars',\n        dest: '&lt;%= dirs.handlebars %&gt;/handlebars-templates.js'\n      }\n    }\n});\n\n\ngrunt.loadNpmTasks('grunt-contrib-handlebars');\n</code></pre>\n\n<p>Then you simply type <code>grunt watch</code> from your console, and grunt will automatically compile all *.handlebars files into your handlebars-templates.js file. </p>\n\n<p>Really rad way to work with handlebars. </p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<h2>Precompiling Handlebars Templates with Grunt</h2>\n\n<p>Assuming you have Node.js installed. If you don't, go do that.</p>\n\n<h3>1) Setting up Node dependencies:</h3>\n\n<p>In your applications root directory add a file named <code>package.json</code>. Paste the following into that file:</p>\n\n<pre><code>{\n  \"devDependencies\": {\n   \"grunt-contrib-handlebars\": \"~0.6.0\",\n    \"grunt-contrib-watch\": \"~0.5.3\",\n    \"handlebars\": \"~1.3.0\"\n  },\n}\n</code></pre>\n\n<p>This JSON file tells Node what packages it needs to install. This helps to get other developers get up-and-running very quickly, as you'll see in the next step.</p>\n\n<h3>2) Installing Node Dependencies:</h3>\n\n<p>In your terminal/command prompt/powershell, <code>cd</code> into your projects root directory and run the following commands:</p>\n\n<pre><code>npm install grunt -g\nnpm install grunt-cli -g\n</code></pre>\n\n<p>And to install the dependencies listed in your package.json:</p>\n\n<pre><code>npm install\n</code></pre>\n\n<p>Now you've installed all of the node dependencies that you need. In your projects root directory, you'll see a <code>node_modules folder</code>.</p>\n\n<h3>3) Configuring Grunt:</h3>\n\n<p>In your projects root directory, create a file named <code>Gruntfile.js</code>. Paste the following into that file:</p>\n\n<pre><code>module.exports = function(grunt) {\n\n    var TEMPLATES_LOCATION        = \"./src/templates/\",       // don't forget the trailing /\n        TEMPLATES_EXTENSION       = \".hbs\",\n        TEMPLATES_OUTPUT_LOCATION = TEMPLATES_LOCATION,       // don't forget the trailing /\n        TEMPLATES_OUTPUT_FILENAME = \"compiled_templates.js\";  // don't forget the .js\n\n    grunt.initConfig({\n        watch: {\n            handlebars: {\n                files: [TEMPLATES_LOCATION + '**/*' + TEMPLATES_EXTENSION],\n                tasks: ['handlebars:compile']\n            }\n        },\n        handlebars: {\n            compile: {\n                src: TEMPLATES_LOCATION + '**/*' + TEMPLATES_EXTENSION,\n                dest: TEMPLATES_OUTPUT_LOCATION + TEMPLATES_OUTPUT_FILENAME,\n                options: {\n                    amd: true,\n                    namespace: \"templates\"\n                }\n            }\n        }\n    });\n\n    grunt.loadNpmTasks('grunt-contrib-handlebars');\n    grunt.loadNpmTasks('grunt-contrib-watch');\n\n}\n</code></pre>\n\n<h3>4) Configuring to Your Liking:</h3>\n\n<p><strong>If you are not using Require.js</strong>, you'll want to change <code>handlebars.compile.options.amd</code> to <code>false</code>. You may also want to tweak the <code>namespace</code> option to your liking. If you're using require/amd modules, the namespace property is unimportant (it's default is \"JST\", if you remove it).</p>\n\n<p>Because all project structures are a little bit different, you'll need to configure the Gruntfile just a little bit. Modify the constants <code>TEMPLATES_LOCATION</code>, <code>TEMPLATES_EXTENSION</code>, <code>TEMPLATES_OUTPUT_LOCATION</code>, <code>TEMPLATES_OUTPUT_FILENAME</code> to fit your project.</p>\n\n<p>If your templates are scattered throughout your application, you'll want to change <code>TEMPLATES_LOCATION</code> to the lowest directory possible. Make sure your templates are isolated from your node_modules, bower_components or any other 3rd party directories, because you don't want Grunt to compile 3rd Party templates into your applications compiled templates. If you include all of your own code in a <code>./src</code>, <code>./js</code>, <code>./app</code> directory, you'll be okay.</p>\n\n<h3>5) Compiling templates with Grunt:</h3>\n\n<p>To run grunt in the background, open your terminal and <code>cd</code> into your projects root directory and run the command: <code>grunt watch:handlebars</code> (just <code>grunt watch</code> works as well). With grunt running in the background, all changes to your template files will be automatically compiled and the output file specified <code>handlebars.compile.dest</code> will be rewritten as needed. The output will look something like this:</p>\n\n<pre><code>Running \"watch\" task\nWaiting...\n</code></pre>\n\n<p>To run the compile task alone, open your terminal and <code>cd</code> into your projects root directory and run the command: <code>grunt handlebars:compile</code> (just <code>grunt:handlebars</code> works as well). The output will look something like:</p>\n\n<pre><code>Running \"handlebars:compile\" &lt;handlebars&gt; task\nFile \"./src/templates/compiled_templates.js\" created.\n\nDone, without errors.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is the way I do it:</p>\n\n<h2>Preparation</h2>\n\n<p>We will just assume all your template variables are in a variable called <code>context</code>:</p>\n\n<pre><code>var context = {\n    name: \"Test Person\",\n    ...\n};\n</code></pre>\n\n<h2>Where to put your templates</h2>\n\n<p>Create a directory containing all your templates (we'll call it <code>templates/</code>)\nAdd your templates here, called <code>filename.handlebars</code>.</p>\n\n<p>Your directory structure:</p>\n\n<pre><code>.\n\u2514\u2500\u2500 templates\n    \u251c\u2500\u2500 another_template.handlebars\n    \u2514\u2500\u2500 my_template.handelbars\n</code></pre>\n\n<h2>Compiling your templates</h2>\n\n<p>First go to your root directory, then compile your templates with the npm CLI program:</p>\n\n<p><code>handlebars templates/*.handlebars -f compiled.js</code></p>\n\n<p>New directory structure:</p>\n\n<pre><code>.\n\u251c\u2500\u2500 compiled.js\n\u2514\u2500\u2500 templates\n    \u251c\u2500\u2500 another_template.handlebars\n    \u2514\u2500\u2500 my_template.handlebars\n</code></pre>\n\n<h2>Usage</h2>\n\n<p>Include the <code>compiled.js</code> in your HTML page after you include the runtime:</p>\n\n<pre><code>&lt;script src=\"handlebars.runtime.js\"&gt;&lt;/script&gt;\n&lt;script src=\"compiled.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Render your templates using the global <code>Handlebars</code> object:</p>\n\n<pre><code>// If you used JavaScript object property conform file names\n// Original filename: \"my_template.handlebars\"\nHandlebars.templates.my_template(context)\n\n// if you used special characters which are not allowed in JavaScript properties\n// Original filename: \"my-template.handlebars\"\nHandlebars.templates[\"my-template\"](context)\n</code></pre>\n\n<h2>Remarks</h2>\n\n<p>Note the file extension <code>.handlebars</code>. It is automatically stripped when compiling the templates.</p>\n\n<p>Extra: if you use one of the Jetbrains IDEs together with the <a href=\"http://plugins.jetbrains.com/plugin/6884?pr=\">Handlebars/Mustache plugin</a> you even get quite a good editor support.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<h2>For Handlebars 2.0.0 alpha Update:</h2>\n\n<p>@Macro has explained quite clearly how it works with 1 piece of template, please see <a href=\"http://stackoverflow.com/a/8666180/2346720\">this answer for how to make handlebars.js works</a></p>\n\n<h3>If you see \"TypeError: 'undefined' is not a function\" when using precompiled templates:</h3>\n\n<p>This error happened at \"handlebar.runtime.js\" line 436 when evaluting  templateSpec.call(container, Handlebars, context, options.helpers, options.partials, options.data), </p>\n\n<p>because the compiler npm installed is not matching the one used by the browser. The latest stable version downloaded is v1.3.0 while if you use npm install handlebars, it will install 2.0.0-alpha4 for you.</p>\n\n<p>Please check it out using</p>\n\n<pre><code>handlebars any_your_template_before_compile.handlebars | grep \"compiler\"\n</code></pre>\n\n<p>which will give you like, if you indeed installed handlebar 2.0.0-alpha4:</p>\n\n<pre><code>this.compiler = [5, '&gt;=2.0.0']\n</code></pre>\n\n<p>With the first number stands for the version for your handlebar compiler. Type in the following code in browser console, see if the result match the version. </p>\n\n<pre><code>Handlebars.COMPILER_REVISION\n</code></pre>\n\n<p>If you have compiler 5 with browser revison 4, then you will have the above problem.</p>\n\n<p><strong>To fix it, install handlebar 1.3.0 with the following command</strong></p>\n\n<pre><code>npm install handlebars@1.3.0 -g\n</code></pre>\n\n<p>Then try to compile it again, you will see this time, it gives you matching version info and you are good to go with the precompiled templates.</p>\n\n<pre><code>this.compilerInfo = [4, '&gt;=1.0.0']\n</code></pre>\n\n<p><br></p>\n\n<h3>Just explain if you have tons of templates:</h3>\n\n<p>Firstly externalize each piece of your  braced templates: event.handlebars, item.handlebars, etc... You can put them all in one folder, say \"/templates\"</p>\n\n<p>Compile all the files and concatenate it into 1 file with the following command:</p>\n\n<pre><code>handlebars *.handlebars -f templates.js\n</code></pre>\n\n<p>And include handlebars.runtime, this file in your HTML</p>\n\n<pre><code>&lt;script src=\"/lib/handlebars.runtime.js\"&gt;&lt;/script&gt;\n&lt;script src=\"templates.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>The templates will be injected into Handlebars.templates by their name. For example, event.handlebars can be accessed by Handlebars.tempaltes['event'].</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am struggling somewhat with pre-compilation of templates in Handlebars. My jQuery Mobile project is getting pretty big template-wise and I wish to pre-compile the templates I use.</p>\n\n<p>However I can't seem to find a good explanation (like a step by step tutorial) of how to do this with Handlebars.</p>\n\n<p>I still have my templates all inline using the script tags. I have handlebars installed using NPM. But now I am kinda lost in how to proceed. </p>\n\n<p>I am guessing doing something like</p>\n\n<pre><code>handlebars -s event.handlebars &gt; event.compiled\n</code></pre>\n\n<p>and somehow including the event.compiled contents? But then, how to call it.</p>\n\n<p>I am calling my templates like so</p>\n\n<pre><code>var source = $('#tmpl_profile').html(),\ntemplate = Handlebars.compile(source),\ncontext = user.profile()),\nhtml    = template(context);\n</code></pre>\n\n<p>Hope someone can shed some light on this for me.</p>\n",
            "last_activity_date": 1412977261,
            "question_id": 8659787,
            "score": 51,
            "tags": [
                "javascript",
                "jquery-mobile",
                "handlebars.js"
            ],
            "title": "Using pre-compiled templates with Handlebars.js (jQuery Mobile environment)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"http://docs.angularjs.org/guide/compiler\">From the docs:</a></p>\n\n<blockquote>\n  <h2>Compiler</h2>\n  \n  <p>Compiler is an angular service which traverses the DOM looking for attributes. The compilation process happens into two phases.</p>\n  \n  <ol>\n  <li><p><strong>Compile:</strong> traverse the DOM and collect all of the directives. The result is a linking function.</p></li>\n  <li><p><strong>Link:</strong> combine the directives with a scope and produce a live view. Any changes in the scope model are reflected in the view, and any user interactions with the view are reflected in the scope model. Making the scope model a single source of truth.</p></li>\n  </ol>\n  \n  <p>Some directives such <a href=\"http://docs.angularjs.org/api/ng.directive%3angRepeat\"><code>ng-repeat</code></a> clone DOM elements once for each item in collection. Having a compile and link phase improves performance since the cloned template only needs to be compiled once, and then linked once for each clone instance.</p>\n</blockquote>\n\n<p>So at least in some cases, <strong>the two phases exist separately as an optimization.</strong></p>\n\n<hr>\n\n<p><a href=\"http://stackoverflow.com/questions/12164138/what-is-the-difference-between-compile-and-link-function-in-angularjs/12164194#comment16280957_12164194\">From @UmurKontac\u0131</a>:</p>\n\n<blockquote>\n  <p>If you are going to make DOM transformations, it should be <code>compile</code>. If you want to add some features that are behavior changes, it should be in <code>link</code>.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<ul>\n<li><p>compile function - use for <strong>template</strong> DOM manipulation (i.e., manipulation of tElement = template element), hence manipulations that apply to all DOM clones of the template associated with the directive.</p></li>\n<li><p>link function - use for registering DOM listeners (i.e., $watch expressions on the instance scope) as well as <strong>instance</strong> DOM manipulation (i.e., manipulation of iElement = individual instance element).<br> It is executed after the template has been cloned.  E.g., inside an &lt;li ng-repeat...>, the link function is executed after the &lt;li> template (tElement) has been cloned (into an iElement) for that particular &lt;li> element.<br> A $watch() allows a directive to be notified of instance scope property changes (an instance scope is associated with each instance), which allows the directive to render an updated instance value to the DOM -- by copying content from the instance scope into the DOM.</p></li>\n</ul>\n\n<p>Note that DOM transformations can be done in the compile function and/or the link function.</p>\n\n<p>Most directives only need a link function, since most directives only deal with a specific DOM element instance (and its instance scope).</p>\n\n<p>One way to help determine which to use: consider that the compile function does not receive a  <code>scope</code> argument.  (I'm purposely ignoring the transclude linking function argument, which receives a transcluded scope -- this is <a href=\"http://stackoverflow.com/questions/13183005/what-exactly-do-you-do-with-the-transclude-function-and-the-clone-linking-functi\">rarely</a> used.) So the compile function can't do anything you would want to do that requires an (instance) scope -- you can't $watch any model/instance scope properties, you can't manipulate the DOM using instance scope information, you can't call functions defined on the instance scope, etc.</p>\n\n<p>However, the compile function (like the link function) does have access to the attributes. So if your DOM manipulations don't require the instance scope, you can use a compile function.  Here's <a href=\"http://stackoverflow.com/questions/13852248/how-to-write-a-double-and-a-ntimes-directive-for-angularjs/13873098#13873098\">an example</a> of a directive that only uses a compile function, for those reasons.  It examines the attributes, but it doesn't need an instance scope to do its job.</p>\n\n<p>Here's <a href=\"http://stackoverflow.com/a/14107024/215945\">an example</a> of a directive that also only uses a compile function.  The directive only needs to transform the template DOM, so a compile function can be used.</p>\n\n<p>Another way to help determine which to use: if you don't use the \"element\" parameter in the link function, then you probably don't need a link function.</p>\n\n<p>Since most directives have a link function, I'm not going to provide any examples -- they should be very easy to find.</p>\n\n<p>Note that if you need a compile function and a link function (or pre and post link functions),  the compile function must return the link function(s) because the 'link' attribute is ignored if the 'compile' attribute is defined.</p>\n\n<p>See also </p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/12546945/difference-between-the-controller-and-link-functions-when-defining-an-angula\">Difference between the &#39;controller&#39;, &#39;link&#39; and &#39;compile&#39; functions when defining a directive</a></li>\n<li>Dave Smith's excellent <a href=\"http://youtu.be/UMkd0nYmLzY?t=21m59s\">ng-conf 2104 talk on directives</a> (the link goes to the section of the video that talks about compile and link)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 109
                },
                {
                    "body": "<p>This is from Misko 's talk on directives. <a href=\"http://youtu.be/WqmeI5fZcho?t=16m23s\">http://youtu.be/WqmeI5fZcho?t=16m23s</a></p>\n\n<blockquote>\n  <p>Think of the compiler function as\n  the thing that works on a template and the thing that is allowed to\n  change the template itself by, for example, adding a class to it or\n  anything like that. But it's the linking function that actually does\n  the work of binding the two together because the linking function has\n  access to the scope and it's the linking function that executes once\n  for each instantiation of the particular template. So the only kind of\n  things you can placed inside of the compile functions are things that\n  are common across all of the instances.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I beat my head against the wall on this for a couple of days, and I feel that a bit more explanation is in order.</p>\n\n<p>Basically, the docs mention that the separation is largely a performance enhancement. I would reiterate that the compile phase is mainly used when you need to modify the DOM BEFORE the sub-elements themselves are compiled.</p>\n\n<p>For our purposes, I'm going to stress terminology, which is otherwise confusing:</p>\n\n<p>The compiler SERVICE ($compile) is the angular mechanism that processes the DOM and runs the various bits of code in directives.</p>\n\n<p>The compile FUNCTION is one bit of code within a directive, which is run at a particular time BY the compiler SERVICE ($compile).</p>\n\n<p>Some notes about the compile FUNCTION:</p>\n\n<ol>\n<li><p>You cannot modify the ROOT element (the one your directive affects), since it is already being compiled from the outer level of DOM (the compile SERVICE has already scanned for directives on that element).</p></li>\n<li><p>If you want to add other directives to (nested) elements, you either:</p>\n\n<ol>\n<li><p>Have to add them during the compile phase.</p></li>\n<li><p>Have to inject the compile service into the linking phase and compile the elements manually. BUT, beware of compiling something twice!</p></li>\n</ol></li>\n</ol>\n\n<p>It is also helpful to see how the nesting and explicit calls to $compile work, so I've created a playground for viewing that at <a href=\"http://jsbin.com/imUPAMoV/1/edit\">http://jsbin.com/imUPAMoV/1/edit</a>. Basically, it just logs the steps to console.log.</p>\n\n<p>I'll state the results of what you'd see in that bin here. For a DOM of custom directives tp and sp nested as follows:</p>\n\n<pre><code>&lt;tp&gt;\n   &lt;sp&gt;\n   &lt;/sp&gt;\n&lt;/tp&gt;\n</code></pre>\n\n<p>Angular compile SERVICE will call:</p>\n\n<pre><code>tp compile\nsp compile\ntp pre-link\nsp pre-link\nsp post-link\ntp post-link\n</code></pre>\n\n<p>The jsbin code also has the tp post-link FUNCTION explicitly call the compile SERVICE on a third directive (up), which does all three steps at the end.</p>\n\n<p>Now, I want to walk through a couple of scenarios to show how one might go about using the compile and link to do various things:</p>\n\n<p>SCENARIO 1: Directive as a MACRO</p>\n\n<p>You want to add a directive (say ng-show) dynamically to something in your template that you can derive from an attribute.</p>\n\n<p>Say you have a templateUrl that points to:</p>\n\n<pre><code>&lt;div&gt;&lt;span&gt;&lt;input type=\"text\"&gt;&lt;/span&gt;&lt;div&gt;\n</code></pre>\n\n<p>and you want a custom directive:</p>\n\n<pre><code>&lt;my-field model=\"state\" name=\"address\"&gt;&lt;/my-field&gt;\n</code></pre>\n\n<p>that turns the DOM into this:</p>\n\n<pre><code>&lt;div&gt;&lt;span ng-show=\"state.visible.address\"&gt;&lt;input ng-model=\"state.fields.address\" ...&gt;\n</code></pre>\n\n<p>basically, you want to reduce boilerplate by having some consistent model structure that your directive can interpret. In other words: you want a macro. </p>\n\n<p>This is a great use for the compile phase, since you can base all of the DOM manipulations on things you know just from the attributes. Simply use jQuery to add the attributes:</p>\n\n<pre><code>compile: function(tele, tattr) {\n   var span = jQuery(tele).find('span').first();\n   span.attr('ng-show', tattr.model + \".visible.\" + tattr.name);\n   ...\n   return { \n     pre: function() { },\n     post: function() {}\n   };\n}\n</code></pre>\n\n<p>The sequence of operations will be (you can see this via the jsbin mentioned earlier):</p>\n\n<ol>\n<li>The compile SERVICE finds my-field</li>\n<li>It calls the compile FUNCTION on the directive, which updates the DOM.</li>\n<li>The compile SERVICE then walks into the resulting DOM, and COMPILES (recursively)</li>\n<li>The compile SERVICE then calls pre-link top-down</li>\n<li>The compile SERVICE then calls post-link BOTTOM UP, so my-field's link function is called AFTER interior nodes have been linked.</li>\n</ol>\n\n<p>In the above example, no linking is needed, since all of the directive's work was done in compile FUNCTION.</p>\n\n<p>At any point, the code in a directive can ask for the compiler SERVICE to run on additional elements.</p>\n\n<p>This means that we can do exactly the same thing in a link function if you inject the compile service:</p>\n\n<pre><code>directive('d', function($compile) {\n  return {\n    // REMEMBER, link is called AFTER nested elements have been compiled and linked!\n    link: function(scope, iele, iattr) {\n      var span = jQuery(iele).find('span').first();\n      span.attr('ng-show', iattr.model + \".visible.\" + iattr.name);\n      // CAREFUL! If span had directives on it before\n      // you will cause them to be processed again:\n      $compile(span)(scope);\n    }\n});\n</code></pre>\n\n<p>If you're sure that the elements you are passing to $compile SERVICE originally were directive-free (e.g. they came from a template you defined, or you just created them with angular.element()), then the end result is pretty much the same as before (though you may be repeating some work). However, if the element had other directives on it, you just caused those to be processed again, which can cause all sorts of erratic behavior (e.g. double-registration of events and watches).</p>\n\n<p>Thus, the compile phase is a much better choice for macro-style work.</p>\n\n<p>SCENARIO 2: DOM configuration via scope data</p>\n\n<p>This one follows from the example above. Suppose you need access to the scope while manipulating the DOM. Well, in that case, the compile section is useless to you, since it happens before a scope is available. </p>\n\n<p>So, let's say you want to pimp out an input with validations, but you want to export your validations from a server-side ORM class (DRY), and have them auto-apply and generate the proper client-side UI for those validations.</p>\n\n<p>Your model might push:</p>\n\n<pre><code>scope.metadata = {\n  validations: {\n     address: [ {\n       pattern: '^[0-9]',\n       message: \"Address must begin with a number\"\n     },\n     { maxlength: 100,\n       message: \"Address too long\"\n     } ]\n  }\n};\nscope.state = {\n  address: '123 Fern Dr'\n};\n</code></pre>\n\n<p>and you might want a directive:</p>\n\n<pre><code>&lt;form name=\"theForm\"&gt;\n  &lt;my-field model=\"state\" metadata=\"metadata\" name=\"address\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>to auto-include the proper directives and divs to show the various validation errors:</p>\n\n<pre><code>&lt;form name=\"theForm\"&gt;\n  &lt;div&gt;\n    &lt;input ng-model=\"state.address\" type=\"text\"&gt;\n    &lt;div ng-show=\"theForm.address.$error.pattern\"&gt;Address must begin with a number&lt;/input&gt;\n...\n</code></pre>\n\n<p>In this case you definitely need access to the scope (since that is where your validations are stored), and are going to have to compile the additions manually, again being careful not to double-compile things. (as a side note, you would need to set a name on the containing form tag (I'm assuming theForm here), and could access it in link with iElement.parent().controller('form').$name).</p>\n\n<p>In this case there is no point in writing a compile function. Link is really what you want. The steps would be:</p>\n\n<ol>\n<li>Define a template that is completely devoid of angular directives.</li>\n<li>Define a link function that adds the various attributes</li>\n<li>REMOVE any angular directives that you might allow on your top-level element (the my-field directive). They have already been processed and this is a way to keep them from being double-processed.</li>\n<li>Finish by calling the compile SERVICE on your top-level element</li>\n</ol>\n\n<p>Like so:</p>\n\n<pre><code>angular.module('app', []).\ndirective('my-field', function($compile) {\n  return {\n    link: function(scope, iele, iattr) {\n      // jquery additions via attr()\n      // remove ng attr from top-level iele (to avoid duplicate processing)\n      $compile(iele)(scope); // will pick up additions\n    }\n  };\n});\n</code></pre>\n\n<p>You could, of course, compile the nested elements one-by-one to avoid having to worry about the duplicate processing of ng directives when you compile the top-level element again.</p>\n\n<p>One final note on this scenario: I implied you'd be pushing the definition of the validations from a server, and in my example I've shown them as data already in the scope. I leave it as an exercise for the reader to figure out how one might deal with needing to pull that data from a REST API (hint: deferred compile).</p>\n\n<p>SCENARIO 3: two-way data binding via link</p>\n\n<p>Of course the most common use of link is to simply hook up the two-way data binding via watch/apply. Most directives fall into this category, so it is adequately covered elsewhere.</p>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>Two Phases: Compile and Link</p>\n\n<p>Compile: </p>\n\n<p>Traverse the DOM tree looking for directives (elements / attributes / classes / comments). Each compilation of a directive may modify its template, or modify its contents which has not been compiled yet. Once a directive is matched, it returns a linking function, which is used in a later phase to link elements together. At the end of the compile phase, we have a list of compiled directives and their corresponding linking functions.</p>\n\n<p>Link: </p>\n\n<p>When an element is linked, the DOM tree is broken at its branch point in the DOM tree, and the contents are replaced by the compiled (and linked) instance of the template.  The original displaced content is either discarded, or in the case of transclusion, re-linked back into the template.  With transclusion, the two pieces are linked back together (kind of like a chain, with the template piece being in the middle). When the link function is called, the template has already been bound to a scope, and added as a child of the element.  The link function is your opportunity to manipulate the DOM further and setup change listeners. </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Can someone explain in simple terms?</p>\n\n<p>The docs seems a bit obtuse. I am not getting the essence and the big picture of when to use one over the other. An example contrasting the two would be awesome.</p>\n",
            "last_activity_date": 1422641407,
            "question_id": 12164138,
            "score": 101,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "What is the difference between compile and link function in angularjs"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift\"><code>unshift</code></a>. It's like <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/push\"><code>push</code></a>, except it adds elements to the beginning of the array instead of the end.</p>\n\n<ul>\n<li><code>unshift</code>/<code>push</code> - add an element to the beginning/end of an array</li>\n<li><code>shift</code>/<code>pop</code>  - remove and return the first/last element of and array</li>\n</ul>\n\n<p>A simple diagram...</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   unshift -&gt; array &lt;- push\n   shift   &lt;- array -&gt; pop\n</code></pre>\n\n<p>and chart:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>          add  remove  start  end\n   push    X                   X\n    pop           X            X\nunshift    X             X\n  shift           X      X\n</code></pre>\n\n<p>Check out the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array\">MDN Array documentation</a>. Virtually every language that has the ability to push/pop elements from an array will also have the ability to unshift/shift (sometimes called <code>push_front</code>/<code>pop_front</code>) elements, you should never have to implement these yourself.</p>\n",
                    "is_accepted": true,
                    "score": 477
                },
                {
                    "body": "<p><img src=\"http://i.stack.imgur.com/1pQk8.jpg\" alt=\"enter image description here\"></p>\n\n<pre><code>var a = [23, 45, 12, 67];\n    a.unshift(34);\n\n    console.log(a); // [34, 23, 45, 12, 67]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 350
                },
                {
                    "body": "<p><strong>Quick Cheatsheet:</strong> </p>\n\n<p>The terms shift/unshift and push/pop can be a bit confusing, at least to folks who may not be familiar with programming in C.</p>\n\n<p>If you are not familiar with the lingo, here is a quick translation of alternate terms, which may be easier to remember:</p>\n\n<pre><code>* array_unshift()  -  (aka Prepend ;; InsertBefore ;; InsertAtBegin )     \n* array_shift()    -  (aka UnPrepend ;; RemoveBefore  ;; RemoveFromBegin )\n\n* array_push()     -  (aka Append ;; InsertAfter   ;; InsertAtEnd )     \n* array_pop()      -  (aka UnAppend ;; RemoveAfter   ;; RemoveFromEnd ) \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>I have a need to add elements (I retrieve on timely basis using AJAX) at the top of an array.</p>\n\n<p>For example, if my array looks like below:</p>\n\n<pre><code>[23, 45, 12, 67]\n</code></pre>\n\n<p>And the response from my AJAX call is <code>34</code>, I want the updated array to be like the following:</p>\n\n<pre><code>[34, 23, 45, 12, 67]\n</code></pre>\n\n<p>Currently I am planning to do it like this:</p>\n\n<pre><code>var newArray = [];\nnewArray.push(response);\n\nfor (int i=0; i &lt; theArray.length; i++) {\n    newArray.push(theArray[i]);\n}\n\ntheArray = newArray;\ndelete newArray;\n</code></pre>\n\n<p>Is there any better way to do this? Does JavaScript have any built-in functionality that does this?</p>\n\n<p>The complexity of my method is <code>O(n)</code> and it would be really interesting to see better implementations.</p>\n",
            "last_activity_date": 1414910240,
            "question_id": 8073673,
            "score": 218,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "How can I add new array elements at the beginning of an array in JavaScript?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>Have you tried to use <kbd>CTRL</kbd>-<kbd>F5</kbd> to update the page?</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Enter \"about:config\" into the Firefox address bar and set:</p>\n\n<pre><code>network.http.use-cache = false\n</code></pre>\n\n<p>If developing locally, or using HTML5's new manifest attribute you may have to also set the following in about:config -</p>\n\n<pre><code>browser.cache.offline.enable = false\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 152
                },
                {
                    "body": "<p>You can use <kbd>CTRL</kbd>-<kbd>F5</kbd> to reload bypassing the cache.</p>\n\n<p>You can set the preferences in firefox not to use the cache</p>\n\n<pre><code>network.http.use-cache = false\n</code></pre>\n\n<p>You can setup you web server to send a no-cache/Expires/Cache-Control headers for the js files.</p>\n\n<p>Here is an <a href=\"http://www.askapache.com/htaccess/using-http-headers-with-htaccess.html#prevent-caching-with-htaccess\" rel=\"nofollow\">example</a> for apache web server.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Best strategy is to design your site to build a unique URL to your JS files, that gets reset every time there is a change.  That way it caches when there has been no change, but imediately reloads when any change occurs.</p>\n\n<p>You'd need to adjust for your specific environment tools, but if you are using PHP/Apache, here's a great solution for both you, and the end-users.</p>\n\n<p><a href=\"http://verens.com/archives/2008/04/09/javascript-cache-problem-solved/\" rel=\"nofollow\">http://verens.com/archives/2008/04/09/javascript-cache-problem-solved/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you're working with server side code you could generate a random number and append it to the end of the src in the following manner....</p>\n\n<p>src=\"yourJavascriptFile.js?randomNumber=434534\"</p>\n\n<p>with the randomNumber being randomly generated each time.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The <a href=\"https://addons.mozilla.org/en-US/firefox/addon/60\">Web Developer Toolbar</a> has an option to disable caching which makes it very easy to turn it on and off when you need it.</p>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>I use <kbd>CTRL</kbd>-<kbd>SHIFT</kbd>-<kbd>DELETE</kbd> which activates the privacy feature, allowing you to clear your cache, reset cookies, etc, all at once.  You can even configure it so that it just DOES it, instead of popping up a dialog box asking you to confirm.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I know I'm resurrecting an ancient question, but I was trying to solve this problem today and have an alternate solution.  Toggling caching when I want to test was not really acceptable for me, and as others mentioned, hard refreshing (ctrl+shift+r) doesn't always work.</p>\n\n<p>Instead, I opted to put the following in my vhost.conf file (can also be done in .htaccess) on my dev environment:</p>\n\n<pre><code>&lt;FilesMatch \"\\.(js|css)$\"&gt;\nFileETag None\n&lt;IfModule mod_headers.c&gt;\nHeader unset ETag\nHeader set Cache-Control \"max-age=0, no-cache, no-store, must-revalidate\"\nHeader set Pragma \"no-cache\"\nHeader set Expires \"Wed, 11 Jan 1984 05:00:00 GMT\"\n&lt;/IfModule&gt;\n&lt;/FilesMatch&gt;\n</code></pre>\n\n<p>On my dev environment, this ensures that js and css are always retrieved.  Additionally it doesn't affect the rest of my browsing, and it also works for all browsers, so testing in chrome / ie etc is also easy.</p>\n\n<p>Found the snippet here, some other handy apache tricks as well: <a href=\"http://www.askapache.com/htaccess/using-http-headers-with-htaccess.html#prevent-caching-with-htaccess\" rel=\"nofollow\">http://www.askapache.com/htaccess/using-http-headers-with-htaccess.html#prevent-caching-with-htaccess</a></p>\n\n<p>To make sure that my clients always see the latest version on production, we increment the query string on the js include on each update, ie</p>\n\n<pre><code>jquery.somefile.js?v=0.5\n</code></pre>\n\n<p>This forces my clients' browsers to update their local cache when they see a new querystring, but then caches the new copy until the file is updated again</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>After 2 hours of browsing for various alternatives, this is something that worked for me.</p>\n\n<p>My requirement was disabling caching of js and css files in my spring secured web application. But at the same time caching these files \"within\" a particular session.</p>\n\n<p>Passing a unique id with every request is one of the advised approaches.</p>\n\n<p>And this is what I did :- Instead of</p>\n\n<pre><code>&lt;script language=\"javascript\" src=\"js/home.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>I used</p>\n\n<pre><code>&lt;script language=\"javascript\" src=\"js/home.js?id=${pageContext.session.id}\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Any cons to the above approach are welcome. Security Issues ?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are pros and cons to the last two solutions posted, but they're both IMHO great solutions.</p>\n\n<ol>\n<li><p>You may or may not want your session ID embedded in your url like that for tighter security.  But in development that shouldn't matter, but what if you forget to remove it?\nAlso does that really work?  Wouldn't you need something like a sequential number generator (hit count stored in the session, or maybe even just if 1 then 0, if 0 then 1)?</p></li>\n<li><p>Adding a session id (or whatever sequencer) means you need to remember to add it to every resource you don't want cached.  On the one hand that's better because you can just include your session id with just that resource you're actively developing and testing.  On the other hand, it means you have to do that and you have to remember to remove that for production.</p></li>\n<li><p>Modifying the vhost.conf or the .htaccess file does the trick nicely without the need to remember to add and remove the session id.  But the downside is performance of all js and css resources will be affected, and if you have large files, that's going to slow you down.  </p></li>\n</ol>\n\n<p>Both seem like great, elegant solutions -- depends on your needs.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is no specific option to disable caching only for JavaScript, you will have to disable caching entirely.</p>\n\n<p><a href=\"https://getfirebug.com/\" rel=\"nofollow\">FireBug</a> has an option to disable the browser cache on the Network tab's drop down menu.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>In higher versions of Firefox, like Nightly, there is an options named \"disable cache\", you can find it by clicking the gear. And that options works only in current session, which means when you close inspector and restart it, you have to check it again if you want catch disabled.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>On the same page you want to disable the caching do this :\nFYI: the version am working on is 30.0</p>\n\n<p>You can  :</p>\n\n<p><img src=\"http://i.stack.imgur.com/qOLEo.png\" alt=\"open webdeveloper toolbar\">\n<img src=\"http://i.stack.imgur.com/ps2rB.png\" alt=\"open web developer\"></p>\n\n<p><img src=\"http://i.stack.imgur.com/RZL8b.png\" alt=\"and pick disable cache \"></p>\n\n<p>After that it will reload page from its own (you are on) and every thing is recached and any furthure request are recahed every time too and you may keep the web developer open always to keep an eye and make sure its always on (check).</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>During development I have to \"clear cache\" in Firefox all the time in order to make it use the latest version of JavaScript files.</p>\n\n<p>Is there some kind of setting (about:config) to turn off caching completely for JavaScript files? Or, if not, for all files?</p>\n",
            "last_activity_date": 1418203791,
            "question_id": 289751,
            "score": 82,
            "tags": [
                "javascript",
                "firefox",
                "caching"
            ],
            "title": "Turn off caching on Firefox"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>In the appendix of <a href=\"http://rads.stackoverflow.com/amzn/click/0470187573\">Professional ASP.NET 3.5</a> Scott Hanselman talks about <a href=\"http://svn.offwhite.net/trac/SmallSharpTools.Packer/wiki\">Packer for .NET</a>. This will integrate with MSBuild and pack javascript files for production deployments etc.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Why not use the ScriptManager? Here's an <a href=\"http://www.codeplex.com/MvcScriptManager\">MVCScriptManager</a> that will combine AND squish.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Use either YUI Compressor or Dojo compressor.  They both use the Rhino JS parsing engine which tokenizes your code, and will therefore only work if the code is valid code.  If there is an error, they'll let you know (which is a nice bonus IMO!) Packer on the other hand, will pack your code even if it contains errors.</p>\n\n<p>I use YUI in all my projects via build scripts.  Never do it on the fly, it takes too long to do the compression.  Both YUI and Dojo are Java based (ala Rhino) and if you do it on the fly, you'll be spawning background processes to generate the output - not good for performance.  Always do it at build time.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Here's what I've used for concatenating, compressing and caching CSS and JS files: \n<a href=\"http://gist.github.com/130913\" rel=\"nofollow\">http://gist.github.com/130913</a></p>\n\n<p>It just requires Yahoo.Yui.Compressor.dll in the bin directory. It doesn't compress at compile time, but the files are cached with a file dependency, so they are only loaded once, until they're changed.</p>\n\n<p>Then I just add this code in the &lt;head&gt;:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"/YuiCompressor.ashx?css=reset,style,etc\" /&gt;\n</code></pre>\n\n<p>and this just before the &lt;/body&gt;:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"/YuiCompressor.ashx?js=main,other,etc\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>It's designed to work with multiple files all in the same path but could easily be upgraded to support different paths.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try this:</p>\n\n<p>I\u2019ve recently completed a fair bit of research and consequent development at work that goes quite far to improve the performance of our web application\u2019s front-end. I thought I\u2019d share the basic solution here.</p>\n\n<p>The first obvious thing to do is benchmark your site using Yahoo\u2019s YSlow and Google\u2019s PageSpeed. These will highlight the \"low-hanging fruit\" performance improvements to make. Unless you\u2019ve already done so, the resulting suggestions will almost certainly include combining, minifying and gzipping your static content.</p>\n\n<p>The steps we\u2019re going to perform are:</p>\n\n<p>Write a custom HTTPHandler to combine and minify CSS.\nWrite a custom HTTPHandler to combine and minify JS.\nInclude a mechanism to ensure that the above only do their magic when the application is not in debug mode.\nWrite a custom server-side web control to easily maintain css/js file inclusion.\nEnable GZIP of certain content types on IIS 6.\nRight, let\u2019s start with CSSHandler.asax that implements the .NET IHttpHandler interface:</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Text;\nusing System.Web;\n\nnamespace WebApplication1\n{\n    public class CssHandler : IHttpHandler\n    {\n        public bool IsReusable { get { return true; } }\n\n        public void ProcessRequest(HttpContext context)\n        {\n            string[] cssFiles = context.Request.QueryString[\"cssfiles\"].Split(',');\n\n            List&lt;string&gt; files = new List&lt;string&gt;();\n            StringBuilder response = new StringBuilder();\n            foreach (string cssFile in cssFiles)\n            {\n                if (!cssFile.EndsWith(\".css\", StringComparison.OrdinalIgnoreCase))\n                {\n                    //log custom exception\n                    context.Response.StatusCode = 403;\n                    return;\n                }\n\n                try\n                {\n                    string filePath = context.Server.MapPath(cssFile);\n                    string css = File.ReadAllText(filePath);\n                    string compressedCss = Yahoo.Yui.Compressor.CssCompressor.Compress(css);\n                    response.Append(compressedCss);\n                }\n                catch (Exception ex)\n                {\n                    //log exception\n                    context.Response.StatusCode = 500;\n                    return;\n                }\n            }\n\n            context.Response.Write(response.ToString());\n\n            string version = \"1.0\"; //your dynamic version number \n\n            context.Response.ContentType = \"text/css\";\n            context.Response.AddFileDependencies(files.ToArray());\n            HttpCachePolicy cache = context.Response.Cache;\n            cache.SetCacheability(HttpCacheability.Public);\n            cache.VaryByParams[\"cssfiles\"] = true;\n            cache.SetETag(version);\n            cache.SetLastModifiedFromFileDependencies();\n            cache.SetMaxAge(TimeSpan.FromDays(14));\n            cache.SetRevalidation(HttpCacheRevalidation.AllCaches);\n        }\n    }\n}\n</code></pre>\n\n<p>Ok, now some explanation:</p>\n\n<p>IsReUsable property:</p>\n\n<p>We aren\u2019t dealing with anything instance-specific, which means we can safely reuse the same instance of the handler to deal with multiple requests, because our ProcessRequest is threadsafe. More info.</p>\n\n<p>ProcessRequest method:</p>\n\n<p>Nothing too hectic going on here. We\u2019re looping through the CSS files given to us (see the CSSControl below for how they\u2019re coming in) and compressing each one, using a .NET port of Yahoo\u2019s YUICompressor, before adding the contents to the outgoing response stream.</p>\n\n<p>The remainder of the method deals with setting up some HTTP caching properties to further optimise the way the browser client downloads (or not, as the case may be) content.</p>\n\n<p>We set Etags in code so that they may be the same across all machines in our server farm.\nWe set Response and Cache dependencies on our actual files so, should they be replaced, cache will be invalidated.\nWe set Cacheability such that proxies can cache.\nWe VaryByParams using our cssfiles attribute, so that we can cache per CSS file group submitted through the handler.\nAnd here is the CSSControl, a custom server-side control inheriting the .NET LiteralControl.</p>\n\n<p>Front:</p>\n\n<pre><code>&lt;customcontrols:csscontrol id=\"cssControl\" runat=\"server\"&gt;\n  &lt;CustomControls:Stylesheet File=\"main.css\" /&gt;\n  &lt;CustomControls:Stylesheet File=\"layout.css\" /&gt;\n  &lt;CustomControls:Stylesheet File=\"formatting.css\" /&gt;\n&lt;/customcontrols:csscontrol&gt;\n</code></pre>\n\n<p>Back:</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Web;\nusing System.Web.UI;\nusing System.Linq;\nusing TTC.iTropics.Utilities;\n\nnamespace WebApplication1\n{\n    [DefaultProperty(\"Stylesheets\")]\n    [ParseChildren(true, \"Stylesheets\")]\n    public class CssControl : LiteralControl\n    {\n        [PersistenceMode(PersistenceMode.InnerDefaultProperty)]\n        public List&lt;Stylesheet&gt; Stylesheets { get; set; }\n\n        public CssControl()\n        {\n            Stylesheets = new List&lt;Stylesheet&gt;();\n        }\n\n        protected override void Render(HtmlTextWriter output)\n        {\n            if (HttpContext.Current.IsDebuggingEnabled)\n            {\n                const string format = \"&lt;link rel=\\\"Stylesheet\\\" href=\\\"stylesheets/{0}\\\"&gt;&lt;/link&gt;\";\n\n                foreach (Stylesheet sheet in Stylesheets)\n                    output.Write(format, sheet.File);\n            }\n            else\n            {\n                const string format = \"&lt;link type=\\\"text/css\\\" rel=\\\"Stylesheet\\\" href=\\\"stylesheets/CssHandler.ashx?cssfiles={0}&amp;version={1}\\\"/&gt;\";\n                IEnumerable&lt;string&gt; stylesheetsArray = Stylesheets.Select(s =&gt; s.File);\n                string stylesheets = String.Join(\",\", stylesheetsArray.ToArray());\n                string version = \"1.00\" //your version number\n\n                output.Write(format, stylesheets, version);\n            }\n\n        }\n    }\n\n    public class Stylesheet\n    {\n        public string File { get; set; }\n    }\n}\n</code></pre>\n\n<p>HttpContext.Current.IsDebuggingEnabled is hooked up to the following setting in your web.config:</p>\n\n<pre><code>&lt;system.web&gt;\n  &lt;compilation debug=\"false\"&gt;\n&lt;/system.web&gt;\n</code></pre>\n\n<p>So, basically, if your site is in debug mode you get HTML markup like this:</p>\n\n<pre><code>&lt;link rel=\"Stylesheet\" href=\"stylesheets/formatting.css\"&gt;&lt;/link&gt;\n&lt;link rel=\"Stylesheet\" href=\"stylesheets/layout.css\"&gt;&lt;/link\n&lt;link rel=\"Stylesheet\" href=\"stylesheets/main.css\"&gt;&lt;/link&gt;\n</code></pre>\n\n<p>But if you\u2019re in production mode (debug=false), you\u2019ll get markup like this:</p>\n\n<pre><code>&lt;link type=\"text/css\" rel=\"Stylesheet\" href=\"CssHandler.ashx?cssfiles=main.css,layout.css,formatting.css&amp;version=1.0\"/&gt;\n</code></pre>\n\n<p>The latter will then obviously invoke the CSSHandler, which will take care of combining, minifying and cache-readying your static CSS content.</p>\n\n<p>All of the above can then also be duplicated for your static JavaScript content:</p>\n\n<p>`JSHandler.ashx:</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Text;\nusing System.Web;\n\nnamespace WebApplication1\n{\n    public class JSHandler : IHttpHandler\n    {\n        public bool IsReusable { get { return true; } }\n\n        public void ProcessRequest(HttpContext context)\n        {\n            string[] jsFiles = context.Request.QueryString[\"jsfiles\"].Split(',');\n\n            List&lt;string&gt; files = new List&lt;string&gt;();\n            StringBuilder response = new StringBuilder();\n\n            foreach (string jsFile in jsFiles)\n            {\n                if (!jsFile.EndsWith(\".js\", StringComparison.OrdinalIgnoreCase))\n                {\n                    //log custom exception\n                    context.Response.StatusCode = 403;\n                    return;\n                }\n\n                try\n                {\n                    string filePath = context.Server.MapPath(jsFile);\n                    files.Add(filePath);\n                    string js = File.ReadAllText(filePath);\n                    string compressedJS = Yahoo.Yui.Compressor.JavaScriptCompressor.Compress(js);\n                    response.Append(compressedJS);\n                }\n                catch (Exception ex)\n                {\n                    //log exception\n                    context.Response.StatusCode = 500;\n                    return;\n                }\n            }\n\n            context.Response.Write(response.ToString());\n\n            string version = \"1.0\"; //your dynamic version number here\n\n            context.Response.ContentType = \"application/javascript\";\n            context.Response.AddFileDependencies(files.ToArray());\n            HttpCachePolicy cache = context.Response.Cache;\n            cache.SetCacheability(HttpCacheability.Public);\n            cache.VaryByParams[\"jsfiles\"] = true;\n            cache.VaryByParams[\"version\"] = true;\n            cache.SetETag(version);\n            cache.SetLastModifiedFromFileDependencies();\n            cache.SetMaxAge(TimeSpan.FromDays(14));\n            cache.SetRevalidation(HttpCacheRevalidation.AllCaches);\n        }\n    }\n}\n</code></pre>\n\n<p>And its accompanying JSControl:</p>\n\n<p>Front:</p>\n\n<pre><code>&lt;customcontrols:JSControl ID=\"jsControl\" runat=\"server\"&gt;\n  &lt;customcontrols:Script File=\"jquery/jquery-1.3.2.js\" /&gt;\n  &lt;customcontrols:Script File=\"main.js\" /&gt;\n  &lt;customcontrols:Script File=\"creditcardpayments.js\" /&gt;\n&lt;/customcontrols:JSControl&gt;\n</code></pre>\n\n<p>Back:</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Web;\nusing System.Web.UI;\nusing System.Linq;\n\nnamespace WebApplication1\n{\n    [DefaultProperty(\"Scripts\")]\n    [ParseChildren(true, \"Scripts\")]\n    public class JSControl : LiteralControl\n    {\n        [PersistenceMode(PersistenceMode.InnerDefaultProperty)]\n        public List&lt;Script&gt; Scripts { get; set; }\n\n        public JSControl()\n        {\n            Scripts = new List&lt;Script&gt;();\n        }\n\n        protected override void Render(HtmlTextWriter writer)\n        {\n            if (HttpContext.Current.IsDebuggingEnabled)\n            {\n                const string format = \"&lt;script src=\\\"scripts\\\\{0}\\\"&gt;&lt;/script&gt;\";\n\n                foreach (Script script in Scripts)\n                    writer.Write(format, script.File);\n            }\n            else\n            {\n                IEnumerable&lt;string&gt; scriptsArray = Scripts.Select(s =&gt; s.File);\n                string scripts = String.Join(\",\", scriptsArray.ToArray());\n                string version = \"1.0\" //your dynamic version number\n                const string format = \"&lt;script src=\\\"scripts/JsHandler.ashx?jsfiles={0}&amp;version={1}\\\"&gt;&lt;/script&gt;\";\n\n                writer.Write(format, scripts, version);\n            }\n        }\n    }\n\n    public class Script\n    {\n        public string File { get; set; }\n    }\n}\n</code></pre>\n\n<p>Enabling GZIP:</p>\n\n<p>As Jeff Atwood says, enabling Gzip on your web site server is a no-brainer. After some tracing, I decided to enable Gzip on the following file types:</p>\n\n<p>.css\n.js\n.axd (Microsoft Javascript files)\n.aspx (Usual ASP.NET Web Forms content)\n.ashx (Our handlers)\nTo enable HTTP Compression on your IIS 6.0 web server:</p>\n\n<p>Open IIS, Right click Web Sites, Services tab, enable Compress Application Files and Compress Static Files\nStop IIS\nOpen up IIS Metabase in Notepad (C:\\WINDOWS\\system32\\inetsrv\\MetaBase.xml) \u2013 and make a back up if you\u2019re nervous about these things \nLocate and overwrite the two IIsCompressionScheme and one IIsCompressionSchemes elements with the following:\n    \n    \n    \n    \n    </p>\n\n<p>And that\u2019s it! This saved us heaps of bandwidth and resulted in a more responsive web application throughout.</p>\n\n<p>Enjoy!</p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>Rejuicer is a great new minifier for ASP.NET that's getting a lot of buzz:\n<a href=\"http://rejuice.me\" rel=\"nofollow\">http://rejuice.me</a></p>\n\n<p>It is configured as a HTTP module &amp; performs minification at run-time (once) and caches the output.</p>\n\n<p>It:</p>\n\n<ul>\n<li>Has a fluent interface for configuration</li>\n<li>Allows you to specify files to minify with wildcard rules</li>\n<li>Runs on Windows Azure</li>\n<li>Somewhat magically turns itself off in development environments, so you can debug your original javascript code (not minified).</li>\n</ul>\n\n<p>The configuration (done on ApplicationStart in global.asax.cs) is as simple as:</p>\n\n<pre><code>OnRequest.ForJs(\"~/Combined.js\")\n            .Compact\n            .FilesIn(\"~/Scripts/\")\n              .Matching(\"*.js\")\n            .Cache\n            .Configure();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I use a customized solution based on MSBuild and the Microsoft Ajax Minifier. Much of the existing blog posts out there don't correctly handle certain cases such as integration with TFS build.</p>\n\n<p>For each web project, we create a \"wpp.targets\" file to extend the Web Publishing Pipeline. For example, if the project is \"Website.csproj\" create a file named \"Website.wpp.targets\" in the project.</p>\n\n<p>Place the following code in the targets file:</p>\n\n<pre><code>&lt;Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\"&gt;\n  &lt;Import Project=\"$(MSBuildExtensionsPath32)\\PATH TO YOUR MSBUILD MINIFY TARGETS\" /&gt;\n\n  &lt;!-- Hook up minification task to WPP build process --&gt;\n  &lt;PropertyGroup&gt;\n    &lt;OnAfterPipelineTransformPhase&gt;\n      $(OnAfterPipelineTransformPhase);\n      MinifyResourceFiles;\n    &lt;/OnAfterPipelineTransformPhase&gt;\n  &lt;/PropertyGroup&gt;\n\n  &lt;!-- Define temporary location to store minified resources --&gt;\n  &lt;PropertyGroup&gt;\n    &lt;MinifyResourceIntermediateOutput Condition=\"'$(MinifyResourceIntermediateOutput)'==''\"&gt;MinifyResourceFiles&lt;/MinifyResourceIntermediateOutput&gt;\n    &lt;MinifyResourceIntermediateLocation Condition=\"'$(MinifyResourceIntermediateLocation)'==''\"&gt;$(_WPPDefaultIntermediateOutputPath)$(MinifyResourceIntermediateOutput)&lt;/MinifyResourceIntermediateLocation&gt;\n  &lt;/PropertyGroup&gt;\n\n  &lt;Target Name=\"MinifyResourceFiles\" DependsOnTargets=\"PipelineCollectFilesPhase\" Condition=\"'$(Configuration)' == 'Release'\"&gt;\n    &lt;!-- Create lists of the resources to minify --&gt;\n    &lt;!-- These extract all Javascript and CSS files from the publishing pipeline \"FilesForPackagingFromProject\" and create two new lists.\n     The \"MinifiedFile\" metadata on each item contains the temporary location where the minified file will be stored --&gt;\n    &lt;ItemGroup&gt;\n      &lt;JavaScriptToMinify Include=\"@(FilesForPackagingFromProject)\" \n                          Condition=\"'%(FilesForPackagingFromProject.Extension)' == '.js'\"&gt;\n        &lt;MinifiedFile&gt;$(MinifyResourceIntermediateLocation)\\minified\\%(DestinationRelativePath)&lt;/MinifiedFile&gt;\n      &lt;/JavaScriptToMinify&gt;\n      &lt;StylesheetToMinify Include=\"@(FilesForPackagingFromProject)\"\n                          Condition=\"'%(FilesForPackagingFromProject.Extension)' == '.css'\"&gt;\n        &lt;MinifiedFile&gt;$(MinifyResourceIntermediateLocation)\\minified\\%(DestinationRelativePath)&lt;/MinifiedFile&gt;\n      &lt;/StylesheetToMinify&gt;    \n    &lt;/ItemGroup&gt;\n\n    &lt;!-- Minify resources --&gt;\n    &lt;!-- These commands should be replaced with the MSBuild Tasks used to perform your minification\n         I use my own custom tasks based on the Microsoft Ajax Minifier DLL \n         The input of the minifier takes a source file directly from the project and outputs to a temporary location --&gt;\n    &lt;MinifyJavaScript SourceFiles=\"@(JavaScriptToMinify)\" DestinationFiles=\"@(JavaScriptToMinify-&gt;'%(MinifiedFile)')\"\n                      Comments=\"None\" /&gt;\n    &lt;MinifyStylesheet SourceFiles=\"@(StylesheetToMinify)\" DestinationFiles=\"@(StylesheetToMinify-&gt;'%(MinifiedFile)')\"\n                      Comments=\"None\" /&gt;\n\n    &lt;!-- Remove the original source files from the packaging system and include the new minfied resources from the temporary location --&gt;\n    &lt;ItemGroup&gt;\n      &lt;!--Remove unminified resources from the pipeline --&gt;\n      &lt;FilesForPackagingFromProject Remove=\"@(JavaScriptToMinify)\" Condition=\"'@(JavaScriptToMinify)' != ''\" /&gt;\n      &lt;FilesForPackagingFromProject Remove=\"@(StylesheetToMinify)\" Condition=\"'@(StylesheetToMinify)' != ''\" /&gt;\n      &lt;!--Add the minified resources at the new loction to the pipeline --&gt;\n      &lt;FilesForPackagingFromProject Include=\"@(JavaScriptToMinify-&gt;'%(MinifiedFile)')\" Condition=\"'@(JavaScriptToMinify)' != ''\"/&gt;\n      &lt;FilesForPackagingFromProject Include=\"@(StylesheetToMinify-&gt;'%(MinifiedFile)')\" Condition=\"'@(StylesheetToMinify)' != ''\"/&gt;\n    &lt;/ItemGroup&gt;\n  &lt;/Target&gt;\n&lt;/Project&gt;\n</code></pre>\n\n<p>The \"'$(Configuration') == 'Release'\" condition on the minification target can be modified depending on your needs. It will automatically minify (and validate) all CSS and JS files in the project when publishing, packaging, and building on the server.</p>\n\n<p>You may need to enable the WPP \"CopyWebApplication\" target for server builds. To do this, set the MSBuild property UseWP_CopyWebApplication to True, and PipelineDependsOnBuild to False. We set these in the project file, before the web application targets file is included.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'd recommend <a href=\"http://www.RequestReduce.com\" rel=\"nofollow\">http://www.RequestReduce.com</a> which minimizes and combines css and javascript as well as sprites css background images and optimizes their PNG compression. It does all of this at run time and caches the output. It requires no code or configuration beyond adding the HttpModule. It serves all cached content with optimized far future headers and ETags to ensure that browsers cache the css/javascript/sprites as long as possible. While it requires no configuration, it is highly configurable and can be setup to run with a CDN and sync cached files accross a web farm.</p>\n\n<p>All javascript, images and css are fetched via HTTP so it can include css and js from third parties and its also a great way to minify/combine .axd resources like WebResource.axd and ScriptResource.axd. It determines the presense of js and css via content-type so the target resource can have any (or no) extension. It runs on any IIS based technology including all versions and view engines of MVC, web forms and \"web pages\".</p>\n\n<p>You can download from <a href=\"http://www.RequestReduce.com\" rel=\"nofollow\">http://www.RequestReduce.com</a>, Nuget or fork from <a href=\"https://github.com/mwrock/RequestReduce\" rel=\"nofollow\">https://github.com/mwrock/RequestReduce</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>As an extension to this question here <a href=\"http://stackoverflow.com/questions/885990/linking-javascript-libraries-in-user-controls/886184#886184\">Linking JavaScript Libraries in User Controls</a> I was after some examples of how people are concatenating and minifying JavaScript on the fly OR at build time. I would also like to see how it then works into your master pages.</p>\n\n<p>I don't mind page specific files being minified and linked inidividually as they currently are (see below) but all the JavaScript files on the main master page (I have about 5 or 6) I would like concatenated and minified.</p>\n\n<p>Bonus points for anyone who also incorporates CSS concatenation and minification! :-)</p>\n\n<p>Current master page with the common JavaScript files that I would like concatenated and minified:</p>\n\n<pre><code>&lt;%@ Master Language=\"C#\" Inherits=\"System.Web.Mvc.ViewMasterPage\" %&gt;\n&lt;head runat=\"server\"&gt;\n    ... BLAH ...\n    &lt;asp:ContentPlaceHolder ID=\"AdditionalHead\" runat=\"server\" /&gt;\n    ... BLAH ...\n    &lt;%= Html.CSSBlock(\"/styles/site.css\") %&gt;\n    &lt;%= Html.CSSBlock(\"/styles/jquery-ui-1.7.1.css\") %&gt;\n    &lt;%= Html.CSSBlock(\"/styles/jquery.lightbox-0.5.css\") %&gt;\n    &lt;%= Html.CSSBlock(\"/styles/ie6.css\", 6) %&gt;\n    &lt;%= Html.CSSBlock(\"/styles/ie7.css\", 7) %&gt;\n    &lt;asp:ContentPlaceHolder ID=\"AdditionalCSS\" runat=\"server\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    ... BLAH ...\n    &lt;%= Html.JSBlock(\"/scripts/jquery-1.3.2.js\", \"/scripts/jquery-1.3.2.min.js\") %&gt;\n    &lt;%= Html.JSBlock(\"/scripts/jquery-ui-1.7.1.js\", \"/scripts/jquery-ui-1.7.1.min.js\") %&gt;\n    &lt;%= Html.JSBlock(\"/scripts/jquery.validate.js\", \"/scripts/jquery.validate.min.js\") %&gt;\n    &lt;%= Html.JSBlock(\"/scripts/jquery.lightbox-0.5.js\", \"/scripts/jquery.lightbox-0.5.min.js\") %&gt;\n    &lt;%= Html.JSBlock(\"/scripts/global.js\", \"/scripts/global.min.js\") %&gt;\n    &lt;asp:ContentPlaceHolder ID=\"AdditionalJS\" runat=\"server\" /&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>Used in a page like this (which I'm happy with):</p>\n\n<pre><code>&lt;asp:Content ID=\"signUpContent\" ContentPlaceHolderID=\"AdditionalJS\" runat=\"server\"&gt;\n    &lt;%= Html.JSBlock(\"/scripts/pages/account.signup.js\", \"/scripts/pages/account.signup.min.js\") %&gt;\n&lt;/asp:Content&gt;\n</code></pre>\n\n<p><br/></p>\n\n<p><strong>UPDATE:</strong> Recommendations for now (late 2013):</p>\n\n<p>I would look at Microsoft ASP.NET's built in <a href=\"http://www.asp.net/mvc/tutorials/mvc-4/bundling-and-minification\" rel=\"nofollow\">Bundling and Minification</a>.</p>\n",
            "last_activity_date": 1381959300,
            "question_id": 890561,
            "score": 44,
            "tags": [
                "c#",
                "javascript",
                "css",
                "asp.net-mvc",
                "minify"
            ],
            "title": "Concatenate and minify JavaScript on the fly OR at build time - ASP.NET MVC"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><a href=\"http://javascript.about.com/library/blreserved.htm\">http://javascript.about.com/library/blreserved.htm</a> lists them quite nicely.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>We should be linking to the actual sources of info, rather than just the top google hit.</p>\n\n<p><a href=\"http://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Reserved_Words\">http://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Reserved_Words</a></p>\n\n<p>JScript 8.0:\n<a href=\"http://msdn.microsoft.com/en-us/library/ttyab5c8.aspx\">http://msdn.microsoft.com/en-us/library/ttyab5c8.aspx</a></p>\n\n<p>I'll look for ECMAScript links later.</p>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>To supplement benc, see <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\">Standard ECMA-262</a>. These are the official reserved words, but only a pedant ignores the implementation to respect the standard. For the reserved words of the most popular implementations, that is firefox and internet explorer, see benc's answer.</p>\n\n<p>The reserved words in EMCAScript-262 are the *Keyword*s, *Future Reserved Word*s, <em>NullLiteral</em>, and *BooleanLiteral*s, where the <em>Keywords</em> are</p>\n\n<pre><code>break do instanceof typeof\ncase else new var\ncatch finally return void\ncontinue for switch while\ndebugger function this with\ndefault if throw\ndelete in try\n</code></pre>\n\n<p>the <em>Future Reserved Word</em>\u200bs are</p>\n\n<pre><code>abstract enum int short\nboolean export interface static\nbyte extends long super\nchar final native synchronized\nclass float package throws\nconst goto private transient\ndebugger implements protected volatile\ndouble import public\n</code></pre>\n\n<p>the <em>NullLiteral</em> is</p>\n\n<pre><code>null\n</code></pre>\n\n<p>and the *BooleanLiteral*s are</p>\n\n<pre><code>true\nfalse\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>Here is my poem, dedicated to those who remain honest in the moment, and not just try to score:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Let this long package float, \nGoto private class if short.\nWhile protected with debugger case,  \nContinue volatile interface.\nInstanceof super synchronized throw, \nExtends final export throws.  \n\nTry import double enum?  \n- False, boolean, abstract function, \nImplements typeof transient break!\nVoid static, default do,  \nSwitch int native new. \nElse, delete null public var \nIn return for const, true, char\n\u2026Finally catch byte.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 528
                },
                {
                    "body": "<p>I was just reading about this in <strong><a href=\"http://rads.stackoverflow.com/amzn/click/1449399029\">JavaScript &amp; jQuery: The Missing Manual</a></strong>:</p>\n\n<blockquote>\n  <p><em>Not all of these reserved words will cause problems in all browsers, but it\u2019s best to steer clear of these names when naming variables.</em></p>\n  \n  <p><strong>JavaScript keywords:</strong> <code>break, case, catch, continue, debugger, default, delete, do, else, false, finally, for, function, if, in, instanceof, new, null, return, switch, this, throw, true, try, typeof, var, void, while, with</code>.</p>\n  \n  <p><strong>Reserved for future use:</strong> <code>abstract, boolean, byte, char, class, const, double, enum, export, extends, final, float, goto, implements, import, int, interface, let, long, native, package, private, protected, public, short, static, super, synchronized, throws, transient, volatile, yield</code>.</p>\n  \n  <p><strong>Reserved for browser:</strong> <code>alert, blur, closed, document, focus, frames, history, innerHeight, innerWidth, length, location, navigator, open, outerHeight, outerWidth, parent, screen, screenX, screenY, statusbar, window</code>.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I did some research on this a while back and posted the results here: <a href=\"http://mathiasbynens.be/notes/reserved-keywords\" rel=\"nofollow\"><strong><em>Reserved keywords in JavaScript</em></strong></a>. It lists the reserved keywords <strong>for each version</strong> of the ECMAScript language, based on the original specifications (i.e. straight from the horse\u2019s mouth). None of the other resources I found did that.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What Javascript keywords (function names, variables, etc) are reserved?</p>\n",
            "last_activity_date": 1403660869,
            "question_id": 26255,
            "score": 71,
            "tags": [
                "javascript"
            ],
            "title": "Reserved Keywords in Javascript"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>If you are using firefox then the <a href=\"http://getfirebug.com/\">firebug plug-in</a> console is an excellent way of examining objects</p>\n\n<pre><code>console.debug(myObject);\n</code></pre>\n\n<p>Alternatively you can loop through the properties (including methods) like this:</p>\n\n<pre><code>for (property in object) {\n    // do what you want with property, object[property].value\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 76
                },
                {
                    "body": "<p>If you use Firebug, you can use <a href=\"http://getfirebug.com/console.html\" rel=\"nofollow\">console.log</a> to output an object and get a hyperlinked, explorable item in the console.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>As the others said, you can use Firebug, and that will sort you out no worries on Firefox. Chrome &amp; Safari both have a built-in developer console which has an almost identical interface to Firebug's console, so your code should be portable across those browsers. For other browsers, there's <a href=\"http://getfirebug.com/lite.html\">Firebug Lite</a>.</p>\n\n<p>If Firebug isn't an option for you, then try this simple script:</p>\n\n<pre><code>function dump(obj) {\n    var out = '';\n    for (var i in obj) {\n        out += i + \": \" + obj[i] + \"\\n\";\n    }\n\n    alert(out);\n\n    // or, if you wanted to avoid alerts...\n\n    var pre = document.createElement('pre');\n    pre.innerHTML = out;\n    document.body.appendChild(pre)\n}\n</code></pre>\n\n<p>I'd recommend against alerting each individual property: some objects have a LOT of properties and you'll be there all day clicking \"OK\", \"OK\", \"OK\", \"O... dammit that was the property I was looking for\".</p>\n",
                    "is_accepted": true,
                    "score": 155
                },
                {
                    "body": "<p>It can't be stated enough that you can use console.debug(object) for this. This technique will save you literally hundreds of hours a year if you do this for a living :p</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>A lot of modern browsers support the following syntax:</p>\n\n<pre><code>JSON.stringify(myVar);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p><a href=\"http://getfirebug.com/logging/\">console.dir</a> (toward the bottom of the linked page) in either firebug or the google-chrome web-inspector will output an interactive listing of an object's properties. </p>\n\n<p>See also <a href=\"http://stackoverflow.com/a/11656075/564406\">this Stack-O answer</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>A bit of improvement on nickf's function for those that don't know the type of the variable coming in:</p>\n\n<pre><code>function dump(v) {\n    switch (typeof v) {\n        case \"object\":\n            for (var i in v) {\n                console.log(i+\":\"+v[i]);\n            }\n            break;\n        default: //number, string, boolean, null, undefined \n            console.log(typeof v+\":\"+v);\n            break;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I improved nickf's answer, so it recursively loops through objects:</p>\n\n<pre><code>function var_dump(obj, element)\n{\n    var logMsg = objToString(obj, 0);\n    if (element) // set innerHTML to logMsg\n    {\n        var pre = document.createElement('pre');\n        pre.innerHTML = logMsg;\n        element.innerHTML = '';\n        element.appendChild(pre);\n    }\n    else // write logMsg to the console\n    {\n        console.log(logMsg);\n    }\n}\n\nfunction objToString(obj, level)\n{\n    var out = '';\n    for (var i in obj)\n    {\n        for (loop = level; loop &gt; 0; loop--)\n        {\n            out += \"    \";\n        }\n        if (obj[i] instanceof Object)\n        {\n            out += i + \" (Object):\\n\";\n            out += objToString(obj[i], level + 1);\n        }\n        else\n        {\n            out += i + \": \" + obj[i] + \"\\n\";\n        }\n    }\n    return out;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To answer the question from the context of the title of this question, here is a function that does something similar to a PHP var_dump.  It only dumps one variable per call, but it indicates the data type as well as the value and it iterates through array's and objects [even if they are Arrays of Objects and vice versa].  I'm sure this can be improved on.  I'm more of a PHP guy.</p>\n\n<pre><code>/**\n * Does a PHP var_dump'ish behavior.  It only dumps one variable per call.  The\n * first parameter is the variable, and the second parameter is an optional\n * name.  This can be the variable name [makes it easier to distinguish between\n * numerious calls to this function], but any string value can be passed.\n * \n * @param mixed var_value - the variable to be dumped\n * @param string var_name - ideally the name of the variable, which will be used \n *       to label the dump.  If this argumment is omitted, then the dump will\n *       display without a label.\n * @param boolean - annonymous third parameter. \n *       On TRUE publishes the result to the DOM document body.\n *       On FALSE a string is returned.\n *       Default is TRUE.\n * @returns string|inserts Dom Object in the BODY element.\n */\nfunction my_dump (var_value, var_name)\n{\n    // Check for a third argument and if one exists, capture it's value, else\n    // default to TRUE.  When the third argument is true, this function\n    // publishes the result to the document body, else, it outputs a string.\n    // The third argument is intend for use by recursive calls within this\n    // function, but there is no reason why it couldn't be used in other ways.\n    var is_publish_to_body = typeof arguments[2] === 'undefined' ? true:arguments[2];\n\n    // Check for a fourth argument and if one exists, add three to it and\n    // use it to indent the out block by that many characters.  This argument is\n    // not intended to be used by any other than the recursive call.\n    var indent_by = typeof arguments[3] === 'undefined' ? 0:arguments[3]+3;\n\n    var do_boolean = function (v)\n    {\n        return 'Boolean(1) '+(v?'TRUE':'FALSE');\n    };\n\n    var do_number = function(v)\n    {\n        var num_digits = (''+v).length;\n        return 'Number('+num_digits+') '+v;\n    };\n\n    var do_string = function(v)\n    {\n        var num_chars = v.length;\n        return 'String('+num_chars+') \"'+v+'\"';\n    };\n\n    var do_object = function(v)\n    {\n        if (v === null)\n        {\n            return \"NULL(0)\";\n        }\n\n        var out = '';\n        var num_elem = 0;\n        var indent = '';\n\n        if (v instanceof Array)\n        {\n            num_elem = v.length;\n            for (var d=0; d&lt;indent_by; ++d)\n            {\n                indent += ' ';\n            }\n            out = \"Array(\"+num_elem+\") \\n\"+(indent.length === 0?'':'|'+indent+'')+\"(\";\n            for (var i=0; i&lt;num_elem; ++i)\n            {\n                out += \"\\n\"+(indent.length === 0?'':'|'+indent)+\"|   [\"+i+\"] = \"+my_dump(v[i],'',false,indent_by);\n            }\n            out += \"\\n\"+(indent.length === 0?'':'|'+indent+'')+\")\";\n            return out;\n        }\n        else if (v instanceof Object)\n        {\n            for (var d=0; d&lt;indent_by; ++d)\n            {\n                indent += ' ';\n            }\n            out = \"Object \\n\"+(indent.length === 0?'':'|'+indent+'')+\"(\";\n            for (var p in v)\n            {\n                out += \"\\n\"+(indent.length === 0?'':'|'+indent)+\"|   [\"+p+\"] = \"+my_dump(v[p],'',false,indent_by);\n            }\n            out += \"\\n\"+(indent.length === 0?'':'|'+indent+'')+\")\";\n            return out;\n        }\n        else\n        {\n            return 'Unknown Object Type!';\n        }\n    };\n\n    // Makes it easier, later on, to switch behaviors based on existance or\n    // absence of a var_name parameter.  By converting 'undefined' to 'empty \n    // string', the length greater than zero test can be applied in all cases.\n    var_name = typeof var_name === 'undefined' ? '':var_name;\n    var out = '';\n    var v_name = '';\n    switch (typeof var_value)\n    {\n        case \"boolean\":\n            v_name = var_name.length &gt; 0 ? var_name + ' = ':''; // Turns labeling on if var_name present, else no label\n            out += v_name + do_boolean(var_value);\n            break;\n        case \"number\":\n            v_name = var_name.length &gt; 0 ? var_name + ' = ':'';\n            out += v_name + do_number(var_value);\n            break;\n        case \"string\":\n            v_name = var_name.length &gt; 0 ? var_name + ' = ':'';\n            out += v_name + do_string(var_value);\n            break;\n        case \"object\":\n            v_name = var_name.length &gt; 0 ? var_name + ' =&gt; ':'';\n            out += v_name + do_object(var_value);\n            break;\n        case \"function\":\n            v_name = var_name.length &gt; 0 ? var_name + ' = ':'';\n            out += v_name + \"Function\";\n            break;\n        case \"undefined\":\n            v_name = var_name.length &gt; 0 ? var_name + ' = ':'';\n            out += v_name + \"Undefined\";\n            break;\n        default:\n            out += v_name + ' is unknown type!';\n    }\n\n    // Using indent_by to filter out recursive calls, so this only happens on the \n    // primary call [i.e. at the end of the algorithm]\n    if (is_publish_to_body  &amp;&amp;  indent_by === 0)\n    {\n        var div_dump = document.getElementById('div_dump');\n        if (!div_dump)\n        {\n            div_dump = document.createElement('div');\n            div_dump.id = 'div_dump';\n\n            var style_dump = document.getElementsByTagName(\"style\")[0];\n            if (!style_dump)\n            {\n                var head = document.getElementsByTagName(\"head\")[0];\n                style_dump = document.createElement(\"style\");\n                head.appendChild(style_dump);\n            }\n            // Thank you Tim Down [http://stackoverflow.com/users/96100/tim-down] \n            // for the following addRule function\n            var addRule;\n            if (typeof document.styleSheets != \"undefined\" &amp;&amp; document.styleSheets) {\n                addRule = function(selector, rule) {\n                    var styleSheets = document.styleSheets, styleSheet;\n                    if (styleSheets &amp;&amp; styleSheets.length) {\n                        styleSheet = styleSheets[styleSheets.length - 1];\n                        if (styleSheet.addRule) {\n                            styleSheet.addRule(selector, rule)\n                        } else if (typeof styleSheet.cssText == \"string\") {\n                            styleSheet.cssText = selector + \" {\" + rule + \"}\";\n                        } else if (styleSheet.insertRule &amp;&amp; styleSheet.cssRules) {\n                            styleSheet.insertRule(selector + \" {\" + rule + \"}\", styleSheet.cssRules.length);\n                        }\n                    }\n                };\n            } else {\n                addRule = function(selector, rule, el, doc) {\n                    el.appendChild(doc.createTextNode(selector + \" {\" + rule + \"}\"));\n                };\n            }\n\n            // Ensure the dump text will be visible under all conditions [i.e. always\n            // black text against a white background].\n            addRule('#div_dump', 'background-color:white', style_dump, document);\n            addRule('#div_dump', 'color:black', style_dump, document);\n            addRule('#div_dump', 'padding:15px', style_dump, document);\n\n            style_dump = null;\n        }\n\n        var pre_dump = document.getElementById('pre_dump');\n        if (!pre_dump)\n        {\n            pre_dump = document.createElement('pre');\n            pre_dump.id = 'pre_dump';\n            pre_dump.innerHTML = out+\"\\n\";\n            div_dump.appendChild(pre_dump);\n            document.body.appendChild(div_dump);\n        }  \n        else\n        {\n            pre_dump.innerHTML += out+\"\\n\";\n        }\n    }\n    else\n    {\n        return out;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you are looking for PHP function converted in JS, there is this little site: <a href=\"http://phpjs.org\" rel=\"nofollow\">http://phpjs.org</a>.\nOn there you can get most of the PHP function reliably written in JS. for var_dump try: <a href=\"http://phpjs.org/functions/var_dump/\" rel=\"nofollow\">http://phpjs.org/functions/var_dump/</a> (make sure to check the top comment, this depends on \"echo\", which can also be downloaded from the same site)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>console.log(OBJECT|ARRAY|STRING|...);\nconsole.info(OBJECT|ARRAY|STRING|...);\nconsole.debug(OBJECT|ARRAY|STRING|...);\nconsole.warn(OBJECT|ARRAY|STRING|...);\nconsole.assert(Condition, 'Message if false');\n</code></pre>\n\n<p>These Should work correctly On Google Chrome and Mozilla Firefox (if you are running with old version of firefox, so you have to install Firebug plugin)<br />\nOn Internet Explorer 8 or higher you must do as follow: <br /></p>\n\n<ul>\n<li>Launch \"Developer Tools, by clicking on F12 Button</li>\n<li>On the Tab List, click on \"Script\" Tab\"</li>\n<li>Click on \"Console\" Button in the right side</li>\n</ul>\n\n<p>For more informations you can visit this URL: <a href=\"https://developer.chrome.com/devtools/docs/console-api\" rel=\"nofollow\">https://developer.chrome.com/devtools/docs/console-api</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I used the first answer, but I felt was missing a recursion in it.</p>\n\n<p>The result was this:</p>\n\n<pre><code>function dump(obj) {\n    var out = '';\n    for (var i in obj) {\n        if(typeof obj[i] === 'object'){\n            dump(obj[i]);\n        }else{\n            out += i + \": \" + obj[i] + \"\\n\";\n        }\n    }\n\n    var pre = document.createElement('pre');\n    pre.innerHTML = out;\n    document.body.appendChild(pre);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>We need to see what methods/fields an object has in Javascript.</p>\n",
            "last_activity_date": 1422988339,
            "question_id": 323517,
            "score": 158,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "Is there an equivalent for var_dump (PHP) in Javascript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>A array of one item can be treated as the item itself.</p>\n\n<p>This is due to duck typing. Since \"2\" == 2 == [2] and possibly more.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>It is because of the implicit type conversion of <code>==</code> operator.</p>\n\n<p>[2] is converted to Number is 2 when compared with a Number. Try the unary <code>+</code> operator on [2].</p>\n\n<pre><code>&gt; +[2]\n2\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>For the <code>==</code> case, this is why <a href=\"http://javascript.crockford.com/\" rel=\"nofollow\">Doug Crockford</a> recommends always using <code>===</code>.  It doesn't do any implicit type conversion.</p>\n\n<p>For the examples with <code>===</code>, the implicit type conversion is done before the equality operator is called.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>var a = [0, 1, 2, 3];\na[[2]] === a[2]; // this is true\n</code></pre>\n\n<p>On the right side of the equation, we have the a[2], which returns a number type with value 2. On the left, we are first creating a new array with a single object of 2. Then we are calling a[(array is in here)]. I am not sure if this evaluates to a string or a number. 2, or \"2\". Lets take the string case first. I believe a[\"2\"] would create a new variable and return null. null !== 2. So lets assume it is actually implicitly converting to a number. a[2] would return 2. 2 and 2 match in type (so === works) and value. I think it is implicitly converting the array to a number because a[value] expects a string or number. It looks like number takes higher precedence.</p>\n\n<p>On a side note, I wonder who determines that precedence. Is because [2] has a number as it's first item, so it converts to a number? Or is it that when passing an array into a[array] it tries to turn the array into a number first, then string. Who knows?</p>\n\n<pre><code>var a = { \"abc\" : 1 };\na[[\"abc\"]] === a[\"abc\"];\n</code></pre>\n\n<p>In this example, you are creating an object called a with a member called abc. The right side of the equation is pretty simple; it is equivalent to a.abc. This returns 1. The left side first creates a literal array of [\"abc\"]. You then search for a variable on the a object by passing in the newly created array. Since this expects a string, it converts the array into a string. This now evaluates to a[\"abc\"], which equals 1. 1 and 1 are the same type (which is why === works) and equal value.</p>\n\n<pre><code>[[[[[[[2]]]]]]] == 2;\n</code></pre>\n\n<p>This is just an implicit conversion. === wouldn't work in this situation because there is a type mismatch.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You can look up the comparison algorithm in the ECMA-spec (relevant sections of ECMA-262, 3rd edition for your problem: 11.9.3, 9.1, 8.6.2.6).</p>\n\n<p>If you translate the involved abstract algorithms back to JS, what happens when evaluating <code>2 == [2]</code> is basically this:</p>\n\n<pre><code>2 === Number([2].valueOf().toString())\n</code></pre>\n\n<p>where <code>valueOf()</code> for arrays returns the array itself and the string-representation of a one-element array is the string representation of the single element.</p>\n\n<p>This also explains the third example as <code>[[[[[[[2]]]]]]].toString()</code> is still just the string <code>2</code>.</p>\n\n<p>As you can see, there's quite a lot of behind-the-scene magic involved, which is why I generally only use the strict equality operator <code>===</code>.</p>\n\n<p>The first and second example are easier to follow as property names are always strings, so</p>\n\n<pre><code>a[[2]]\n</code></pre>\n\n<p>is equivalent to</p>\n\n<pre><code>a[[2].toString()]\n</code></pre>\n\n<p>which is just</p>\n\n<pre><code>a[\"2\"]\n</code></pre>\n\n<p>Keep in mind that even numeric keys are treated as property names (ie strings) before any array-magic happens.</p>\n",
                    "is_accepted": true,
                    "score": 109
                },
                {
                    "body": "<p>To add a little detail to the other answers... when comparing an <code>Array</code> to a <code>Number</code>, Javascript will convert the <code>Array</code> with <code>parseFloat(array)</code>. You can try it yourself in the console (eg Firebug or Web Inspector) to see what different <code>Array</code> values get converted to.</p>\n\n<pre><code>parseFloat([2]); // 2\nparseFloat([2, 3]); // 2\nparseFloat(['', 2]); // NaN\n</code></pre>\n\n<p>For <code>Array</code>s, <code>parseFloat</code> performs the operation on the <code>Array</code>'s first member, and discards the rest.</p>\n\n<p>Edit: Per Christoph's details, it may be that it is using the longer form internally, but the results are consistently identical to <code>parseFloat</code>, so you can always use <code>parseFloat(array)</code> as shorthand to know for sure how it will be converted.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>[0] == false // true\nif ([0]) { /* executes */ } // [0] is both true and false!\n</code></pre>\n\n<p>That's interesting, it's not that [0] is both true and false, actually</p>\n\n<pre><code>[0] == true // false\n</code></pre>\n\n<p>It is javascript's funny way of processing if() operator.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You are comparing 2 objects in every case.. Dont use ==, if you are thinking of comparison, you are having === in mind and not ==. == can often give insane effects. Look for the good parts in the language :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I recently discovered that <code>2 == [2]</code> in JavaScript.  As it turns out, this quirk has a couple of interesting consequences:</p>\n\n<pre><code>var a = [0, 1, 2, 3];\na[[2]] === a[2]; // this is true\n</code></pre>\n\n<p>Similarly, the following works:</p>\n\n<pre><code>var a = { \"abc\" : 1 };\na[[\"abc\"]] === a[\"abc\"]; // this is also true\n</code></pre>\n\n<p>Even stranger still, this works as well:</p>\n\n<pre><code>[[[[[[[2]]]]]]] == 2; // this is true too! WTF?\n</code></pre>\n\n<p>These behaviors seem consistent across all browsers.</p>\n\n<p>Any idea why this is a language feature?</p>\n\n<p><strong>EDIT</strong>: Here are more insane consequences of this \"feature\":</p>\n\n<pre><code>[0] == false // true\nif ([0]) { /* executes */ } // [0] is both true and false!\n\nvar a = [0];\na == a // true\na == !a // also true, WTF?\n</code></pre>\n\n<p>These examples were found by jimbojw of <a href=\"http://www.trephine.org\">trephine</a> and <a href=\"http://jimbojw.com\">http://jimbojw.com</a> fame as well as <a href=\"http://thefoley.net/\">walkingeyerobot</a>.</p>\n",
            "last_activity_date": 1314120356,
            "question_id": 1724255,
            "score": 141,
            "tags": [
                "javascript"
            ],
            "title": "Why does 2 == [2] in JavaScript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><a href=\"http://docs.jquery.com/CSS/offset\"><code>.offset()</code></a> will return the offset position of an element as a simple object, eg:</p>\n\n<pre><code>var position = $(element).offset(); // position = { left: 42, top: 567 }\n</code></pre>\n\n<p>You can use this return value to position other elements at the same spot:</p>\n\n<pre><code>$(anotherElement).css(position)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 390
                },
                {
                    "body": "<p>Note that <code>$(element).offset()</code> tells you the position of an element <em>relative to the document</em>. This works great in most circumstances, but in the case of <strong><code>position:fixed</code></strong> you can get unexpected results.</p>\n\n<p>If your document is <em>longer than the viewport</em> and you have scrolled vertically toward the bottom of the document, then your <code>position:fixed</code> element's <code>offset()</code> value <strong>will be greater than</strong> the expected value by the amount you have scrolled. </p>\n\n<p>If you are looking for a value <em>relative to the viewport</em> (window), rather than the document on a position:fixed element, you can subtract the document's <code>scrollTop()</code> value from the fixed element's <code>offset().top</code> value. Example: <code>$(\"#el\").offset().top - $(document).scrollTop()</code></p>\n\n<p>If the <code>position:fixed</code> element's offset parent is the <em>document</em>, you want to read <code>parseInt($.css('top'))</code> instead.</p>\n",
                    "is_accepted": false,
                    "score": 92
                }
            ],
            "body": "<p>Is there a way of finding the absolute position of an element, i.e. relative to the start of the window, using jQuery?</p>\n",
            "last_activity_date": 1418158971,
            "question_id": 683339,
            "score": 223,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How do I find the absolute position of an element using jQuery?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<h2>Is <code>pushState</code> bad if you need search engines to read your content?</h2>\n\n<p>No, the talk about <code>pushState</code> is geared around accomplishing the same general process to hashbangs, but with better-looking URLs.  Think about what really happens when you use hashbangs...</p>\n\n<p>You say:</p>\n\n<blockquote>\n  <p>With hashbangs, google knows to go to the escaped_fragment url to get their static content.</p>\n</blockquote>\n\n<p>So in other words,</p>\n\n<ol>\n<li>Google sees a link to <code>example.com/#!/blog</code></li>\n<li>Google requests <code>example.com/?_escaped_fragment_=/blog</code></li>\n<li>You <strong><a href=\"http://code.google.com/web/ajaxcrawling/docs/getting-started.html\">return a snapshot of the content the user should see</a></strong></li>\n</ol>\n\n<p>As you can see, it already relies on the server.  <strong>If you aren't serving a snapshot of the content from the server, then your site isn't getting indexed properly.</strong></p>\n\n<h2>So how will Google see anything with pushState?</h2>\n\n<blockquote>\n  <p>With pushState, google just sees nothing as it can't use the javascript to load the json and subsequently create the template.</p>\n</blockquote>\n\n<p>Actually, Google will see whatever it can request at <code>site.com/blog</code>.  A URL still points to a resource on the server, and clients still obey this contract.  Of course, for modern clients, Javascript has opened up new possibilities for retrieving and interacting with content without a <em>page</em> refresh, but the contracts are the same.</p>\n\n<p>So the intended elegance of <code>pushState</code> is that it serves the same content to all users, old and new, JS-capable and not, but the new users <a href=\"http://en.wikipedia.org/wiki/Progressive_enhancement\">get an enhanced experience</a>.</p>\n\n<h2>How do you get Google to see your content?</h2>\n\n<ol>\n<li><p>The Facebook approach &mdash; serve the same content at the URL <code>site.com/blog</code> that your client app would transform into when you push <code>/blog</code> onto the state. (Facebook doesn't use <code>pushState</code> yet that I know of, but they do this with hashbangs)</p></li>\n<li><p>The Twitter approach &mdash; redirect all incoming URLs to the hashbang equivalent.  In other words, a link to \"/blog\" pushes <code>/blog</code> onto the state.  But if it's requested directly, the browser ends up at <code>#!/blog</code>. (For Googlebot, this would then route to <code>_escaped_fragment_</code> as you want.  For other clients, you could <code>pushState</code> back to the pretty URL).</p></li>\n</ol>\n\n<h2>So do you lose the <code>_escaped_fragment_</code> capability with <code>pushState</code>?</h2>\n\n<p>In a couple different comments, you said</p>\n\n<blockquote>\n  <p>escaped fragment is completely different. You can serve pure unthemed content, cached content, and not be put under the load that normal pages are.</p>\n  \n  <p>The ideal solution is for google to either do javascript sites or implement some way of knowing that there's an escaped fragment url even for pushstate sites (robots.txt?).</p>\n</blockquote>\n\n<p>The benefits you mentioned are not isolated to <code>_escaped_fragment_</code>.  That it does the rewriting for you and uses a specially-named <code>GET</code> param is really an implementation detail.  There is nothing really special about it that you couldn't do with standard URLs &mdash; in other words, rewrite <code>/blog</code> to <code>/?content=/blog</code> on your own using <a href=\"http://httpd.apache.org/docs/current/mod/mod_rewrite.html\">mod_rewrite</a> or your server's equivalent.</p>\n\n<h2>What if you don't serve server-side content at all?</h2>\n\n<p>If you can't rewrite URLs and serve <em>some kind of content</em> at <code>/blog</code> (or whatever state you pushed into the browser), then your server is really no longer abiding by the HTTP contract.</p>\n\n<p>This is important because a page reload (for whatever reason) will pull content at this URL. <i>(See <a href=\"https://wiki.mozilla.org/Firefox_3.6/PushState_Security_Review\">https://wiki.mozilla.org/Firefox_3.6/PushState_Security_Review</a> &mdash; \"view-source and reload will both fetch the content at the new URI if one was pushed.\")</i></p>\n\n<p>It's not that drawing user interfaces once on the client-side and loading content via JS APIs is a bad goal, its just that it isn't really accounted for with HTTP and URLs and it's basically not backward-compatible.</p>\n\n<p><strong>At the moment,</strong> this is the exact thing that hashbangs are intended for &mdash; to represent distinct page states that are navigated on the client and not on the server.  A reload, for example, will load the <em>same</em> resource which can then read, parse, and process the hashed value.</p>\n\n<p>It just happens to be that they have <em>also been used</em> (notably by Facebook and Twitter) to change the history to a server-side location without a page refresh.  <strong>It is in those use cases that people are recommending abandoning hashbangs for pushState.</strong></p>\n\n<p>If you render all content client-side, you should think of <code>pushState</code> as part of a more convenient history API, and not a way out of using hashbangs.</p>\n",
                    "is_accepted": false,
                    "score": 81
                },
                {
                    "body": "<p>What about using the meta tag that Google suggests for those who don't want hash-bangs in their URLs: \n<code>&lt;meta name=\"fragment\" content=\"!\"&gt;</code></p>\n\n<p>See here for more info:\n<a href=\"https://developers.google.com/webmasters/ajax-crawling/docs/getting-started\">https://developers.google.com/webmasters/ajax-crawling/docs/getting-started</a></p>\n\n<p>Unfortunately I don't think NickC clarified the issue that I thought the OP was having. The problem is simply that we don't know who we are serving content to if we don't use the hash-bang. Pushstate does not solve this for us. We don't want search engines telling end-users to navigate to some URL that spits out unformatted JSON. Instead, we create URLs (that trigger other calls to more URLs) that retrieve data via AJAX and present it to the user in the manner we prefer. If the user is not a human, then as an alternative we can serve an html-snapshot, so that search engines can properly direct human users to the URL that they would expect to find the requested data at (and in a presentable manner). But the ultimate challenge is how do we determine the type of user? Yes we can possibly use .htaccess or something to rewrite the URL for search engine bots we detect, but I'm not sure how fullproof and futureproof this is. It may also be possible that Google could penalize people for doing this sort of thing, but I have not researched it fully. So the (pushstate + google's meta tag) combo seems to be a likely solution.</p>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>Many people have been saying, use pushState rather than hashbang.</p>\n\n<p>What I don't understand is, how would you be search engine friendly without using hashbang?</p>\n\n<p>Presumably your pushState content is generated by client side javascript.</p>\n\n<p>Scenario is thusly:</p>\n\n<p>I'm on <code>example.com</code>. My user clicks a link: <code>href=\"example.com/blog\"</code></p>\n\n<p>pushState captures the click, updates the url, grabs a json file from somewhere, and creates the listing of blog posts in the content area.</p>\n\n<p>With hashbangs, google knows to go to the escaped_fragment url to get their static content.</p>\n\n<p>With pushState, google just sees nothing as it can't use the javascript to load the json and subsequently create the template.</p>\n\n<p>The only way to do it I can see is to render the template on the server side, but that completely negates the benefits of pushing the application layer to the client.</p>\n\n<p>So am I getting this right, pushState is not SE friendly for client side apps at all?</p>\n",
            "last_activity_date": 1395291767,
            "question_id": 6193858,
            "score": 58,
            "tags": [
                "javascript",
                "web-applications",
                "seo",
                "hashbang",
                "pushstate"
            ],
            "title": "pushstate and seo"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Use the \"delete\" keyword in Javascript.</p>\n\n<pre><code>delete myArray[\"lastname\"];\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 625
                },
                {
                    "body": "<p>All objects in JavaScript are implemented as hashtables/associative arrays. So, the following are the equivalent:</p>\n\n<pre><code>alert(myObj[\"SomeProperty\"]);\nalert(myObj.SomeProperty);\n</code></pre>\n\n<p>And, as already indicated, you \"remove\" a property from an object via the <code>delete</code> keyword, which you can use in two ways:</p>\n\n<pre><code>delete myObj[\"SomeProperty\"];\ndelete myObj.SomeProperty;\n</code></pre>\n\n<p>Hope the extra info helps...</p>\n",
                    "is_accepted": false,
                    "score": 53
                },
                {
                    "body": "<p>That only removes deletes the object but still keeps the array length same. </p>\n\n<p>To remove you need to do something like:</p>\n\n<pre><code>array.splice(index, 1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>You are using Object, you are not having an associative array to begin with.\nWith an associative array, adding and removing items goes like this:</p>\n\n<pre><code>    Array.prototype.contains = function(obj) \n    {\n        var i = this.length;\n        while (i--) \n        {\n            if (this[i] === obj) \n            {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    Array.prototype.add = function(key, value) \n    {\n        if(this.contains(key))\n            this[key] = value;\n        else\n        {\n            this.push(key);\n            this[key] = value;\n        }\n    }\n\n\n    Array.prototype.remove = function(key) \n    {\n        for(var i = 0; i &lt; this.length; ++i)\n        {\n            if(this[i] == key)\n            {\n                this.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n\n\n    // Read a page's GET URL variables and return them as an associative array.\n    function getUrlVars()\n    {\n        var vars = [], hash;\n        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&amp;');\n\n        for(var i = 0; i &lt; hashes.length; i++)\n        {\n            hash = hashes[i].split('=');\n            vars.push(hash[0]);\n            vars[hash[0]] = hash[1];\n        }\n\n        return vars;\n    }\n\n\n\n    function ForwardAndHideVariables() {\n        var dictParameters = getUrlVars();\n\n        dictParameters.add(\"mno\", \"pqr\");\n        dictParameters.add(\"mno\", \"stfu\");\n\n        dictParameters.remove(\"mno\");\n\n\n\n        for(var i = 0; i &lt; dictParameters.length; i++)\n        {\n            var key = dictParameters[i];\n            var value = dictParameters[key];\n            alert(key + \"=\" + value);\n        }\n        // And now forward with HTTP-POST\n        aa_post_to_url(\"Default.aspx\", dictParameters);\n    }\n\n\n    function aa_post_to_url(path, params, method) {\n        method = method || \"post\";\n\n        var form = document.createElement(\"form\");\n\n        //move the submit function to another variable\n        //so that it doesn't get written over if a parameter name is 'submit'\n        form._submit_function_ = form.submit;\n\n        form.setAttribute(\"method\", method);\n        form.setAttribute(\"action\", path);\n\n        for(var i = 0; i &lt; params.length; i++)\n        {\n            var key = params[i];\n\n            var hiddenField = document.createElement(\"input\");\n            hiddenField.setAttribute(\"type\", \"hidden\");\n            hiddenField.setAttribute(\"name\", key);\n            hiddenField.setAttribute(\"value\", params[key]);\n\n            form.appendChild(hiddenField);\n        }\n\n        document.body.appendChild(form);\n        form._submit_function_(); //call the renamed function\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<h2>Problem</h2>\n\n<p>None of the previous answers address the fact that Javascript does not have associative arrays to begin with - there is no <code>array</code> type as such, see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/typeof\"><code>typeof</code></a>.</p>\n\n<p>What Javascript has, are object instances with dynamic properties. When properties are confused with elements of an Array object instance then Bad Things\u2122 are bound to happen:</p>\n\n<pre><code>var elements = new Array()\n\nelements.push(document.getElementsByTagName(\"head\")[0])\nelements.push(document.getElementsByTagName(\"title\")[0])\nelements[\"prop\"] = document.getElementsByTagName(\"body\")[0]\n\nconsole.log(\"number of elements: \", elements.length)   // returns 2\ndelete elements[1]\nconsole.log(\"number of elements: \", elements.length)   // returns 2 (?!)\n\nfor (var i = 0; i &lt; elements.length; i++)\n{\n   // uh-oh... throws a TypeError when i == 1\n   elements[i].onmouseover = function () { window.alert(\"Over It.\")}\n   console.log(\"success at index: \", i)\n}\n</code></pre>\n\n<h2>Solution</h2>\n\n<p>To have a universal removal function that does not blow up on you, use:</p>\n\n<pre><code>Object.prototype.removeItem = function (key) {\n   if (!this.hasOwnProperty(key))\n      return\n   if (isNaN(parseInt(key)) || !(this instanceof Array))\n      delete this[key]\n   else\n      this.splice(key, 1)\n};\n\n//\n// Code sample.\n//\nvar elements = new Array()\n\nelements.push(document.getElementsByTagName(\"head\")[0])\nelements.push(document.getElementsByTagName(\"title\")[0])\nelements[\"prop\"] = document.getElementsByTagName(\"body\")[0]\n\nconsole.log(elements.length)                        // returns 2\nelements.removeItem(\"prop\")\nelements.removeItem(0)\nconsole.log(elements.hasOwnProperty(\"prop\"))        // returns false as it should\nconsole.log(elements.length)                        // returns 1 as it should\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>While the accepted answer is correct, it is missing the explanation why it works. </p>\n\n<p>First of all, your code should reflect the fact that this is <strong>NOT</strong> an array:</p>\n\n<pre><code>var myObject = new Object();\nmyObject[\"firstname\"] = \"Bob\";\nmyObject[\"lastname\"] = \"Smith\";\nmyObject[\"age\"] = 25;\n</code></pre>\n\n<p>Note that all objects (including <code>Array</code>s) can be used this way. However, do not expect for standard JS array functions (pop, push,...) to work on objects!</p>\n\n<p>As said in accepted answer, you can then use <code>delete</code> to remove the entries from objects:</p>\n\n<pre><code>delete myObject[\"lastname\"]\n</code></pre>\n\n<p>You should decide which route you wish to take - either use objects (associative arrays / dictionaries) or use arrays (maps). Never mix the two of them.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If your intention is just to remove a single item from an existing array and you are using jQuery, I would use $.grep() method. Pass in the array you wish to remove an entry from and run an anonymous function that returns the array without the specified entry. I found this very helpful... Hope it helps!</p>\n\n<pre><code>     for(var i = 0; i &lt; yourArray.length; i++) {\n\n        if (yourVar == yourArray[i]) {\n\n            yourArray= $.grep(yourArray, function (item, index) {\n\n                return item != yourArray[i];\n                //index param is not used in this instance\n            });\n        }\n        alert(\"Updated Array = \" + yourArray); //Display updated Array\n    }\n</code></pre>\n\n<p>Here is the link to the jQuery API page for $.grep:\n<a href=\"http://api.jquery.com/jQuery.grep/\" rel=\"nofollow\">http://api.jquery.com/jQuery.grep/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If for whatever reason the delete key is not working (like it wasnt working for \nme ) </p>\n\n<p>You can splice it out and then filter the undefined values</p>\n\n<pre><code>// to cut out one element via arr.splice(indexToRemove, numberToRemove);\narray.splice(key, 1)\narray.filter(function(n){return n});\n</code></pre>\n\n<p>Dont try and chain them since splice returns removed elements;</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Its very straight forward if you have <a href=\"http://underscorejs.org/#omit\" rel=\"nofollow\">underscore.js</a> dependency in your project -</p>\n\n<pre><code>_.omit(myArray, \"lastname\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>By using the <strong><code>\"delete\"</code></strong> keyword, it will delete the array element from array in javascript.</p>\n\n<p>For example, </p>\n\n<p>Consider following statements.</p>\n\n<pre><code>var arrayElementToDelete = new Object();\n\narrayElementToDelete[\"id\"]           = \"XERTYB00G1\"; \narrayElementToDelete[\"first_name\"]   = \"Employee_one\";\narrayElementToDelete[\"status\"]       = \"Active\"; \n\ndelete arrayElementToDelete[\"status\"];\n</code></pre>\n\n<p>Last line of the code will remove the array element who's key is \"status\" from the array.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can remove an entry from your map by explicitly assigning it to 'undefined'. As in your case:</p>\n\n<blockquote>\n  <p>myArray[\"lastname\"] = undefined;</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Suppose I have this code:  </p>\n\n<pre><code>var myArray = new Object();\nmyArray[\"firstname\"] = \"Bob\";\nmyArray[\"lastname\"] = \"Smith\";\nmyArray[\"age\"] = 25;\n</code></pre>\n\n<p>Now if I wanted to remove \"lastname\"?....is there some equivalent of<br>\n<code>myArray[\"lastname\"].remove()</code>?</p>\n\n<p>(I need the element gone because the number of elements is important and I want to keep things clean.)</p>\n",
            "last_activity_date": 1420394351,
            "question_id": 346021,
            "score": 299,
            "tags": [
                "javascript",
                "arrays",
                "associative-array",
                "associative"
            ],
            "title": "How do I remove objects from a javascript associative array?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>Crescent Fresh's answer highly-voted answer is misleading.  Though his warnings are invalid, there are other limitations that he doesn't address.</p>\n\n<p>First, the reasoning in Crescent's \"Caveats:\" paragraph doesn't make sense.  The explanation implies that coding \"a bunch of if (error instanceof MyError) else ...\" is somehow burdensome or verbose compared to multiple catch statements.  Multiple instanceof statements in a single catch block are just as concise as multiple catch statements-- clean and concise code without any tricks.  This is a great way to emulate Java's great throwable-subtype-specific error handling.</p>\n\n<p>WRT \"appears the message property of the subclass does not get set\", that is not the case if you use a properly constructed Error subclass.  To make your own ErrorX Error subclass, just copy the code block beginning with \"var MyError =\", changing the one word \"MyError\" to \"ErrorX\".  (If you want to add custom methods to your subclass, follow the sample text).</p>\n\n<p>The real and significant limitation of JavaScript error subclassing is that for JavaScript implementations or debuggers that track and report on stack trace and location-of-instantiation, like FireFox, a location in your own Error subclass implementation will be recorded as the instantiation point of the class, whereas if you used a direct Error, it would be the location where you ran \"new Error(...)\").  IE users would probably never notice, but users of Fire Bug on FF will see useless file name and line number values reported alongside these Errors, and will have to drill down on the stack trace to element #1 to find the real instantiation location.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>In the above example <code>Error.apply</code> (also <code>Error.call</code>) doesn't do anything for me (Firefox 3.6/Chrome 5). A workaround I use is:</p>\n\n<pre><code>function MyError(message, fileName, lineNumber) {\n    var err = new Error();\n\n    if (err.stack) {\n        // remove one stack level:\n        if (typeof(Components) != 'undefined') {\n            // Mozilla:\n            this.stack = err.stack.substring(err.stack.indexOf('\\n')+1);\n        }\n        else if (typeof(chrome) != 'undefined' || typeof(process) != 'undefined') {\n            // Google Chrome/Node.js:\n            this.stack = err.stack.replace(/\\n[^\\n]*/,'');\n        }\n        else {\n            this.stack = err.stack;\n        }\n    }\n    this.message    = message    === undefined ? err.message    : message;\n    this.fileName   = fileName   === undefined ? err.fileName   : fileName;\n    this.lineNumber = lineNumber === undefined ? err.lineNumber : lineNumber;\n}\n\nMyError.prototype = new Error();\nMyError.prototype.constructor = MyError;\nMyError.prototype.name = 'MyError';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The only standard field Error object has is the <code>message</code> property. (See <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error\">MDN</a>, or EcmaScript Language Specification, section 15.11) <strong><em>Everything else is platform specific.</em></strong></p>\n\n<p>Mosts environments set the <code>stack</code> property, but <code>fileName</code> and <code>lineNumber</code> are practically useless to be used in inheritance.</p>\n\n<p>So, the minimalistic approach is:</p>\n\n<pre><code>function MyError(message) {\n    this.name = 'MyError';\n    this.message = message;\n    this.stack = (new Error()).stack;\n}\nMyError.prototype = new Error;  // &lt;-- remove this if you do not \n                                //     want MyError to be instanceof Error\n</code></pre>\n\n<p>You could sniff the stack, unshift unwanted elements from it and extract information like fileName and lineNumber, but doing so requires information about the platform JavaScript is currently running upon. Most cases that is unnecessary -- and you can do it in post-mortem if you really want.</p>\n\n<p><em>Safari</em> is a notable exception. There is no <code>stack</code> property, but the <code>throw</code> keyword sets <code>sourceURL</code> and <code>line</code> properties of the object that is being thrown. Those things are guaranteed to be correct.</p>\n\n<p>Test cases I used can be found here: <a href=\"http://pastebin.com/aRpPr5Sd\">JavaScript self-made Error object comparison</a>.</p>\n",
                    "is_accepted": false,
                    "score": 71
                },
                {
                    "body": "<p>Edit: Please read comments.</p>\n\n<p><strong>Fully capable</strong></p>\n\n<p>Solution for V8 (Chrome / Node.JS), works in Firefox, and can be modified to function mostly correctly in IE. (see end of post)</p>\n\n<pre><code>function UserError(message) {\n  this.constructor.prototype.__proto__ = Error.prototype // Make this an instanceof Error.\n  Error.call(this) // Does not seem necessary. Perhaps remove this line?\n  Error.captureStackTrace(this, this.constructor) // Creates the this.stack getter\n  this.name = this.constructor.name; // Used to cause messages like \"UserError: message\" instead of the default \"Error: message\"\n  this.message = message; // Used to set the message\n}\n</code></pre>\n\n<p><a href=\"http://jayyy0v.wordpress.com/2011/12/08/creating-custom-error-extending-error-type-in-node-js/\" rel=\"nofollow\">Original post on \"Show me the code !\"</a></p>\n\n<p>Short version:</p>\n\n<pre><code>function UserError(message) {\n  this.constructor.prototype.__proto__ = Error.prototype\n  Error.captureStackTrace(this, this.constructor)\n  this.name = this.constructor.name\n  this.message = message\n}\n</code></pre>\n\n<p>I keep <code>this.constructor.prototype.__proto__ = Error.prototype</code> inside the function to keep all the code together. But you can also replace <code>this.constructor</code> with <code>UserError</code> and that allows you to move the code to outside the function, so it only gets called once.</p>\n\n<p>If you go that route, make sure you call that line <em>before</em> the first time you throw <code>UserError</code>.</p>\n\n<p>That caveat does not apply the function, because functions are created first, no matter the order. Thus, you can move the function to the end of the file, without a problem.</p>\n\n<p><strong>Browser Compatibility</strong></p>\n\n<p>Works in Firefox and Chrome (and Node.JS) and fills all promises.</p>\n\n<p>Internet Explorer fails in the following</p>\n\n<ul>\n<li><p>Errors do not have <code>err.stack</code> to begin with, so \"it's not my fault\".</p></li>\n<li><p><code>Error.captureStackTrace(this, this.constructor)</code> does not exist so you need to do something else like</p>\n\n<pre><code>if(Error.captureStackTrace) // AKA if not IE\n    Error.captureStackTrace(this, this.constructor)\n</code></pre></li>\n<li><p><code>toString</code> ceases to exist when you subclass <code>Error</code>. So you also need to add.</p>\n\n<pre><code>else\n    this.toString = function () { return this.name + ': ' + this.message }\n</code></pre></li>\n<li><p>IE will not consider <code>UserError</code> to be an <code>instanceof Error</code> unless you run the following some time before you <code>throw UserError</code></p>\n\n<pre><code>UserError.prototype = Error.prototype\n</code></pre></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>The way to do this right is to return the result of the apply from the constructor, as well as setting the prototype in the usual complicated javascripty way:</p>\n\n<pre><code>function MyError() {\n    var tmp = Error.apply(this, arguments);\n    tmp.name = this.name = 'MyError'\n\n    this.stack = tmp.stack\n    this.message = tmp.message\n\n    return this\n}\n    var IntermediateInheritor = function() {}\n        IntermediateInheritor.prototype = Error.prototype;\n    MyError.prototype = new IntermediateInheritor()\n\nvar myError = new MyError(\"message\");\nconsole.log(\"The message is: '\"+myError.message+\"'\") // The message is: 'message'\nconsole.log(myError instanceof Error)                // true\nconsole.log(myError instanceof MyError)              // true\nconsole.log(myError.toString())                      // MyError: message\nconsole.log(myError.stack)                           // MyError: message \\n \n                                                     // &lt;stack trace ...&gt;\n</code></pre>\n\n<p>The only problems with this way of doing it at this point (i've iterated it a bit) are that </p>\n\n<ul>\n<li>properties other than <code>stack</code> and <code>message</code> aren't included in <code>MyError</code> and </li>\n<li>the stacktrace has an additional line that isn't really necessary. </li>\n</ul>\n\n<p>The first problem could be fixed by iterating through all the non-enumerable properties of error using the trick in this answer: <a href=\"http://stackoverflow.com/questions/8024149/is-it-possible-to-get-the-non-enumerable-inherited-property-names-of-an-object\">Is it possible to get the non-enumerable inherited property names of an object?</a>, but this isn't supported by ie&lt;9. The second problem could be solved by tearing out that line in the stack trace, but I'm not sure how to safely do that (maybe just removing the second line of e.stack.toString() ??).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I just want to add to what others have already stated:</p>\n\n<p><strong>To make sure that the custom error class shows up properly in the stack trace, you need to set the custom error class's prototype's name property to the custom error class's name property.\nThis is what I mean:</strong></p>\n\n<pre><code>CustomError.prototype = Error.prototype;\nCustomError.prototype.name = 'CustomError';\n</code></pre>\n\n<p>So the full example would be:</p>\n\n<pre><code>    var CustomError = function(message) {\n        var err = new Error(message);\n        err.name = 'CustomError';\n        this.name = err.name;\n        this.message = err.message;\n        //check if there is a stack property supported in browser\n        if (err.stack) {\n            this.stack = err.stack;\n        }\n        //we should define how our toString function works as this will be used internally\n        //by the browser's stack trace generation function\n        this.toString = function() {\n           return this.name + ': ' + this.message;\n        };\n    };\n    CustomError.prototype = new Error();\n    CustomError.prototype.name = 'CustomError';\n</code></pre>\n\n<p>When all is said and done, you throw your new exception and it looks like this (I lazily tried this in the chrome dev tools):</p>\n\n<pre><code>CustomError: Stuff Happened. GASP!\n    at Error.CustomError (&lt;anonymous&gt;:3:19)\n    at &lt;anonymous&gt;:2:7\n    at Object.InjectedScript._evaluateOn (&lt;anonymous&gt;:603:39)\n    at Object.InjectedScript._evaluateAndWrap (&lt;anonymous&gt;:562:52)\n    at Object.InjectedScript.evaluate (&lt;anonymous&gt;:481:21)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Since JavaScript Exceptions are difficult to sub-class, I don't sub-class. I just create a new Exception class and use an Error inside of it. I change the Error.name property so that it looks like my custom exception on the console:</p>\n\n<pre><code>var InvalidInputError = function(message) {\n    var error = new Error(message);\n    error.name = 'InvalidInputError';\n    return error;\n};\n</code></pre>\n\n<p>The above new exception can be thrown just like a regular Error and it will work as expected, for example:</p>\n\n<pre><code>throw new InvalidInputError(\"Input must be a string\");\n// Output: Uncaught InvalidInputError: Input must be a string \n</code></pre>\n\n<p><strong>Caveat:</strong> the stack trace is not perfect, as it will bring you to where the new Error is created and not where you throw. This is not a big deal on Chrome because it provides you with a full stack trace directly in the console. But it's more problematic on Firefox, for example.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>My solution is different enough that I feel like it warrants posting. It does have the limitation that first entry in the call stack is useless information. But that is easily ignored. </p>\n\n<p>On the plus side, this solution is much more simple than the answers provided. There are only 6 lines are required per custom error. It maintains the correct prototype chain. And it preserves whatever properties a browser may append to Error without needing specific knowledge of them.</p>\n\n<p>I've tested in Chrome, Firefox, Node, and IE11.</p>\n\n<pre><code>//polyfil\nObject.setPrototypeOf = Object.setPrototypeOf || function (obj, proto) {\n    obj.__proto__ = proto;\n    return obj;\n};\n\n//custom error\nvar CustomError = function(message, param1, param2) {\n    var err = new Error(message);\n    Object.setPrototypeOf(err, CustomError.prototype);\n\n    //set properties specific to the custom error\n    err.param1 = param1;\n    err.param2 = param2;\n\n    return err;\n};\nCustomError.prototype = Object.create(Error.prototype, { name: { value: 'CustomError', enumerable: false } });\n\n//example usage\ntry {\n    throw new CustomError('Something Unexpected Happened!', 1234, 'neat');\n} catch (ex) {\n    console.log(ex.name);\n    console.log(ex.message);\n    console.log(ex.param1);\n    console.log(ex.param2);\n    console.log(ex.stack);\n    console.log(ex instanceof Error);\n    console.log(ex instanceof CustomError);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>My 2 cents:</p>\n\n<h3>Why another answer?</h3>\n\n<p>a) Because accessing the <code>Error.stack</code> property (as in some answers) have a large performance penalty. </p>\n\n<p>b) Because it is only one line.</p>\n\n<p>c) Because the solution at <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error</a> does not seems to preserve stack info.</p>\n\n<pre><code>//MyError class constructor\nfunction MyError(msg){\n    this.__proto__.__proto__ = Error.apply(null, arguments);\n};\n</code></pre>\n\n<p>usage example</p>\n\n<p><a href=\"http://jsfiddle.net/luciotato/xXyeB/\" rel=\"nofollow\">http://jsfiddle.net/luciotato/xXyeB/</a></p>\n\n<h3>What does it do?</h3>\n\n<p><code>this.__proto__.__proto__</code> is <code>MyError.prototype.__proto__</code>, so it is setting the <code>__proto__</code> FOR ALL INSTANCES\nof MyError to a specific newly created Error. It keeps MyError class properties and methods and also puts the new Error properties (including .stack) in the <code>__proto__</code> chain.</p>\n\n<h3>Obvious problem:</h3>\n\n<p>You can not have more than one instance of MyError with useful stack info.</p>\n\n<p>Do not use this solution if you do not fully understand what <code>this.__proto__.__proto__=</code> does.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>How about this solution?</p>\n\n<p>Instead of throwing your custom Error using:</p>\n\n<pre><code>throw new MyError(\"Oops!\");\n</code></pre>\n\n<p>You would wrap the Error object (kind of like a Decorator):</p>\n\n<pre><code>throw new MyError(Error(\"Oops!\"));\n</code></pre>\n\n<p>This makes sure all of the attributes are correct, such as the stack, fileName lineNumber, et cetera.</p>\n\n<p>All you have to do then is either copy over the attributes, or define getters for them.\nHere is an example using getters (IE9):</p>\n\n<pre><code>function MyError(wrapped)\n{\n        this.wrapped = wrapped;\n        this.wrapped.name = 'MyError';\n}\n\nfunction wrap(attr)\n{\n        Object.defineProperty(MyError.prototype, attr, {\n                get: function()\n                {\n                        return this.wrapped[attr];\n                }\n        });\n}\n\nMyError.prototype = Object.create(Error.prototype);\nMyError.prototype.constructor = MyError;\n\nwrap('name');\nwrap('message');\nwrap('stack');\nwrap('fileName');\nwrap('lineNumber');\nwrap('columnNumber');\n\nMyError.prototype.toString = function()\n{\n        return this.wrapped.toString();\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I would take a step back and consider why you want to do that? I think the point is to deal with different errors differently.</p>\n\n<p>For example, in Python, you can restrict the catch statement to only catch <code>MyValidationError</code>, and perhaps you want to be able to do something similar in javascript.</p>\n\n<pre><code>catch (MyValidationError e) {\n    ....\n}\n</code></pre>\n\n<p>You can't do this in javascript. There's only going to be one catch block. You're supposed to use an if statement on the error to determine its type.</p>\n\n<p><code>\ncatch(e) {\n    if(isMyValidationError(e)) {\n        ...\n    } else {\n        // maybe rethrow?\n        throw e;\n    }\n}\n</code></p>\n\n<p>I think I would instead throw a raw object with a type, message, and any other properties you see fit.</p>\n\n<pre><code>throw { type: \"validation\", message: \"Invalid timestamp\" }\n</code></pre>\n\n<p>And when you catch the error:</p>\n\n<pre><code>catch(e) {\n    if(e.type === \"validation\") {\n         // handle error\n    }\n    // re-throw, or whatever else\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To <strong>avoid the boilerplate</strong> for every different type of error, I combined the wisdom of some of the solutions into a\u00a0<code>createErrorType</code> function:</p>\n\n<pre><code>function createErrorType(name, init) {\n  function E(message) {\n    this.name = name;\n    if (!Error.captureStackTrace)\n      this.stack = (new Error()).stack;\n    else\n      Error.captureStackTrace(this, this.constructor);\n    this.message = message;\n    init &amp;&amp; init.apply(this, arguments);\n  }\n  E.prototype = new Error();\n  E.prototype.name = name;\n  E.prototype.constructor = E;\n  return E;\n}\n</code></pre>\n\n<p>Then you can <strong>define new error types easily</strong> as follows:</p>\n\n<pre><code>var NameError = createErrorType('NameError', function (name, invalidChar) {\n  this.message = 'The name ' + name + ' may not contain ' + invalidChar;\n});\n\nvar UnboundError = createErrorType('UnboundError', function (variableName) {\n  this.message = 'Variable ' + variableName + ' is not bound';\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h1>Custom Error Decorator</h1>\n\n<p>This is based on <a href=\"http://stackoverflow.com/a/8460753/1253428\">George Bailey's answer</a>, but extends and simplifies the original idea. It is written in CoffeeScript, but is easy to convert to JavaScript. The idea is extend Bailey's custom error with a decorator that wraps it, allowing you to create new custom errors easily.</p>\n\n<p><em>Note: This will only work in V8. There is no support for <code>Error.captureStackTrace</code> in other environments.</em></p>\n\n<h2>Define</h2>\n\n<p>The decorator takes a name for the error type, and returns a function that takes an error message, and encloses the error name.</p>\n\n<pre><code>CoreError = (@message) -&gt;\n\n    @constructor.prototype.__proto__ = Error.prototype\n    Error.captureStackTrace @, @constructor\n    @name = @constructor.name\n\nBaseError = (type) -&gt;\n\n    (message) -&gt; new CoreError \"#{ type }Error: #{ message }\"\n</code></pre>\n\n<h2>Use</h2>\n\n<p>Now it is simple to create new error types.</p>\n\n<pre><code>StorageError   = BaseError \"Storage\"\nSignatureError = BaseError \"Signature\"\n</code></pre>\n\n<p>For fun, you could now define a function that throws a <code>SignatureError</code> if it is called with too many args.</p>\n\n<pre><code>f = -&gt; throw SignatureError \"too many args\" if arguments.length\n</code></pre>\n\n<p>This has been tested pretty well and seems to work perfectly on V8, maintaing the traceback, position etc.</p>\n\n<p><em>Note: Using <code>new</code> is optional when constructing a custom error.</em></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to throw some things in my JS code and I want them to be instanceof Error, but I also want to have them be something else.</p>\n\n<p>In Python, typically, one would subclass Exception.  </p>\n\n<p>What's the appropriate thing to do in JS?</p>\n",
            "last_activity_date": 1426211756,
            "question_id": 1382107,
            "score": 107,
            "tags": [
                "javascript",
                "exception",
                "error-handling"
            ],
            "title": "What&#39;s a good way to extend Error in JavaScript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Found something!</p>\n\n<p><a href=\"http://www.google.com/trends/hottrends/atom/hourly\">http://www.google.com/trends/hottrends/atom/hourly</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>$trends = new GoogleHotrends();\n$keywords = $trends-&gt;fetch_trends();\nprint_r($keywords);\n\nclass GoogleHotrends {\nprivate $trendsurl = 'http://www.google.com/trends/hottrends/atom/hourly';\n\n    public function fetch_trends()\n    {\n        $c = curl_init($this-&gt;trendsurl);\n        curl_setopt($c, CURLOPT_RETURNTRANSFER, 1);\n        $responsedata = curl_exec($c);\n        curl_close($c);\n        return $this-&gt;parse_trend_feed( $responsedata );\n    }\n\n    private function parse_trend_feed( $data ){\n        preg_match_all('/.+?&lt;a href=\".+?\"&gt;(.+?)&lt;\\/a&gt;.+?/',$data,$matches);\n        return $matches[1];\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Use this: <a href=\"https://developers.google.com/feed/v1/jsondevguide#loadBasic\">https://developers.google.com/feed/v1/jsondevguide#loadBasic</a></p>\n\n<p>Example: <a href=\"https://ajax.googleapis.com/ajax/services/feed/load?v=1.0&amp;q=http%3A%2F%2Fwww.google.com%2Ftrends%2Fhottrends%2Fatom%2Fhourly&amp;callback=processResults\">https://ajax.googleapis.com/ajax/services/feed/load?v=1.0&amp;q=http%3A%2F%2Fwww.google.com%2Ftrends%2Fhottrends%2Fatom%2Fhourly&amp;callback=processResults</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This question is pretty old, but just to chime in...</p>\n\n<p>I was actually googling for something similar, but the difference was, I wanted to actually compare specific search terms, instead of just finding all of the top terms -- as I suspect a great deal of people viewing this page want to as well.</p>\n\n<p>After a bit of digging, I found this:</p>\n\n<p><a href=\"http://www.google.com/trends/fetchComponent?q=asdf,qwerty&amp;cid=TIMESERIES_GRAPH_0&amp;export=3\">http://www.google.com/trends/fetchComponent?q=asdf,qwerty&amp;cid=TIMESERIES_GRAPH_0&amp;export=3</a></p>\n\n<p>That returns a runnable piece of code that sets some variables (which you can synthesize if need be!) to the values of the graph displayed on the <a href=\"http://trends.google.com\">trends.google.com</a> search page!</p>\n\n<p>The syntax is as follows:</p>\n\n<pre><code>http://www.google.com/trends/fetchComponent?q=YOUR_QUERY_HERE&amp;cid=TIMESERIES_GRAPH_0&amp;export=3\n</code></pre>\n\n<p>Where <code>YOUR_QUERY_HERE</code> is a list (separated by comma) of search terms to compare.</p>\n\n<p>Due to it being JS runnable, you may not even need JSON, but, if for whatever reason, you need to directly parse it as text, it should be pretty easy! (indexOf for <code>{\"c\":</code>, then for the next <code>},</code> The entries will directly follow all instances of <code>{\"v\":</code> that lie before the next <code>}]},</code> (they will come in the same order as the order in which you specified your search terms.)</p>\n\n<p>If you want to view the actual graph for comparison (not just the data), then change <code>export=3</code> to <code>export=5</code> (for instance, <a href=\"http://www.google.com/trends/fetchComponent?q=asdf,qwerty&amp;cid=TIMESERIES_GRAPH_0&amp;export=5\">http://www.google.com/trends/fetchComponent?q=asdf,qwerty&amp;cid=TIMESERIES_GRAPH_0&amp;export=5</a>)</p>\n\n<p>Hope this helps... Happy coding!</p>\n",
                    "is_accepted": true,
                    "score": 67
                },
                {
                    "body": "<p><a href=\"https://ajax.googleapis.com/ajax/services/feed/load?v=1.0&amp;q=http%3A%2F%2Fwww.google.com%2Ftrends%2Fhottrends%2Fatom%2Fhourly&amp;callback=processResults\" rel=\"nofollow\">https://ajax.googleapis.com/ajax/services/feed/load?v=1.0&amp;q=http%3A%2F%2Fwww.google.com%2Ftrends%2Fhottrends%2Fatom%2Fhourly&amp;callback=processResults</a></p>\n\n<p>You can try !</p>\n\n<p>this is a cool service from google and you can grab google trend with json format.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is where Google Trends get the data from:\n<a href=\"http://hawttrends.appspot.com/api/terms/\">http://hawttrends.appspot.com/api/terms/</a></p>\n\n<p>It's a JSON string that you can easily use in javascript or php :)</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>This link has the top 5 trends represented in a very easy to parse JSON format.</p>\n\n<p><a href=\"https://ajax.googleapis.com/ajax/services/feed/load?v=1.0&amp;q=http://www.google.com/trends/hottrends/atom/feed?pn=p1\" rel=\"nofollow\">https://ajax.googleapis.com/ajax/services/feed/load?v=1.0&amp;q=http://www.google.com/trends/hottrends/atom/feed?pn=p1</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I am searching for a JSON based Google Trends API. Apparently Google announced they would release an official API, but never did. I also found an unofficial API, but didn't find much documentation.</p>\n\n<p>I want to simply to do something like <code>$.getJSON([URLForApi])</code> and get a list of the top trending search terms.</p>\n",
            "last_activity_date": 1410975982,
            "question_id": 7805711,
            "score": 43,
            "tags": [
                "javascript",
                "json",
                "google-trends"
            ],
            "title": "JavaScript/JSON Google Trends API"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>While <code>this.model.get(\"obj1\").myAttribute1</code> is fine, it's a bit problematic because then you might be tempted to do the same type of thing for set, i.e.</p>\n\n<pre><code>this.model.get(\"obj1\").myAttribute1 = true;\n</code></pre>\n\n<p>But if you do this, you won't get the benefits of Backbone models for <code>myAttribute1</code>, like change events or validation.</p>\n\n<p>A better solution would be to never nest POJSOs (\"plain old JavaScript objects\") in your models, and instead nest custom model classes. So it would look something like this:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var Obj = Backbone.Model.extend({\n    defaults: {\n        myAttribute1: false,\n        myAttribute2: true\n    }\n});\n\nvar MyModel = Backbone.Model.extend({\n    initialize: function () {\n        this.set(\"obj1\", new Obj());\n    }\n});\n</code></pre>\n\n<p>Then the accessing code would be</p>\n\n<pre><code>var x = this.model.get(\"obj1\").get(\"myAttribute1\");\n</code></pre>\n\n<p>but more importantly the setting code would be </p>\n\n<pre><code>this.model.get(\"obj1\").set({ myAttribute1: true });\n</code></pre>\n\n<p>which will fire appropriate change events and the like. Working example here: <a href=\"http://jsfiddle.net/g3U7j/\">http://jsfiddle.net/g3U7j/</a></p>\n",
                    "is_accepted": true,
                    "score": 104
                },
                {
                    "body": "<p>I created <a href=\"https://github.com/powmedia/backbone-deep-model\">backbone-deep-model</a> for this - just extend Backbone.DeepModel instead of Backbone.Model and you can then use paths to get/set nested model attributes. It maintains change events too.</p>\n\n<pre><code>model.bind('change:user.name.first', function(){...});\nmodel.set({'user.name.first': 'Eric'});\nmodel.get('user.name.first'); //Eric\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 59
                },
                {
                    "body": "<p>Domenic's solution will work however each new MyModel will point to the same instance of Obj. \nTo avoid this, MyModel should look like:  </p>\n\n<pre><code>var MyModel = Backbone.Model.extend({\n  initialize: function() {\n     myDefaults = {\n       obj1: new Obj()\n     } \n     this.set(myDefaults);\n  }\n});\n</code></pre>\n\n<p>See c3rin's answer @ <a href=\"http://stackoverflow.com/a/6364480/1072653\">http://stackoverflow.com/a/6364480/1072653</a> for a full explanation.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I had the same problem @pagewil and @Benno had with @Domenic's solution.  My answer was to instead write a simple sub-class of Backbone.Model that fixes the problem.</p>\n\n<pre><code>// Special model implementation that allows you to easily nest Backbone models as properties.\nBackbone.NestedModel = Backbone.Model.extend({\n    // Define Backbone models that are present in properties\n    // Expected Format:\n    // [{key: 'courses', model: Course}]\n    models: [],\n\n    set: function(key, value, options) {\n        var attrs, attr, val;\n\n        if (_.isObject(key) || key == null) {\n            attrs = key;\n            options = value;\n        } else {\n            attrs = {};\n            attrs[key] = value;\n        }\n\n        _.each(this.models, function(item){\n            if (_.isObject(attrs[item.key])) {\n                attrs[item.key] = new item.model(attrs[item.key]);\n            }\n        },this);\n\n        return Backbone.Model.prototype.set.call(this, attrs, options);\n    }\n});\n\nvar Obj = Backbone.Model.extend({\n    defaults: {\n        myAttribute1: false,\n        myAttribute2: true\n    }\n});\n\nvar MyModel = Backbone.NestedModel.extend({\n    defaults: {\n        obj1: new Obj()\n    },\n\n    models: [{key: 'obj1', model: Obj}]\n});\n</code></pre>\n\n<p>What NestedModel does for you is allow these to work (which is what happens when myModel gets set via JSON data):</p>\n\n<pre><code>var myModel = new MyModel();\nmyModel.set({ obj1: { myAttribute1: 'abc', myAttribute2: 'xyz' } });\nmyModel.set('obj1', { myAttribute1: 123, myAttribute2: 456 });\n</code></pre>\n\n<p>It would be easy to generate the models list automatically in initialize, but this solution was good enough for me.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I use this approach.</p>\n\n<p>If you have a Backbone model like this:</p>\n\n<pre><code>var nestedAttrModel = new Backbone.Model({\n    a: {b: 1, c: 2}\n});\n</code></pre>\n\n<p>You can set the attribute \"a.b\" with:</p>\n\n<pre><code>var _a = _.omit(nestedAttrModel.get('a')); // from underscore.js\n_a.b = 3;\nnestedAttrModel.set('a', _a);\n</code></pre>\n\n<p>Now your model will have attributes like:</p>\n\n<pre><code>{a: {b: 3, c: 2}}\n</code></pre>\n\n<p>with the \"change\" event fired.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Experience level: newbie</p>\n\n<p>I have a simple question about Backbone.js' <strong>get</strong> and <strong>set</strong> functions.</p>\n\n<p>1) With the code below, how can I 'get' or 'set' obj1.myAttribute1 directly?</p>\n\n<p>Another question:</p>\n\n<p>2) In the Model, aside from the <strong>defaults</strong> object, where can/should I declare my model's other attributes, such that they can be accessed via Backbone's get and set methods?</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var MyModel = Backbone.Model.extend({\n    defaults: {\n        obj1 : {\n            \"myAttribute1\" : false,\n            \"myAttribute2\" : true,\n        }\n    }\n})\n\nvar MyView = Backbone.View.extend({\n    myFunc: function(){\n        console.log(this.model.get(\"obj1\"));\n        //returns the obj1 object\n        //but how do I get obj1.myAttribute1 directly so that it returns false?\n    }\n});\n</code></pre>\n\n<p>I know I can do:</p>\n\n<pre><code>this.model.get(\"obj1\").myAttribute1;\n</code></pre>\n\n<p>but is that good practice? </p>\n\n<p>Appreciate all help.</p>\n",
            "last_activity_date": 1392295255,
            "question_id": 6351271,
            "score": 86,
            "tags": [
                "javascript",
                "backbone.js",
                "backbone-model"
            ],
            "title": "Backbone.js get and set nested object attribute"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You could split the pages in separate XHTML files and store them in a folder. Eg: page01, page02. You can then render those pages one by one underneath each other.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Speaking from experience, expect to put a lot of time into this, even for a barebones viewer. An ePub reader was actually first big project I took on when I started learning C#, but the ePub standard is definitely pretty complex.</p>\n\n<p>You can find the latest version of the spec for ePub here:\n<a href=\"http://www.idpf.org/specs.htm\" rel=\"nofollow\">http://www.idpf.org/specs.htm</a>\nwhich includes the OPS (Open Publication Structure), OPF (Open Packaging Format), and OCF (OEBPS Container Format).</p>\n\n<p>Also, if it helps you at all, here is a link to the C# source code of the project I started on:</p>\n\n<p><a href=\"https://www.dropbox.com/sh/50kxcr29831t854/MDITIklW3I/ePub%20Test.zip\" rel=\"nofollow\">https://www.dropbox.com/sh/50kxcr29831t854/MDITIklW3I/ePub%20Test.zip</a></p>\n\n<p>It's not fleshed out at all; I haven't played with this for months, but if I remember correctly, just stick an ePub in the debug directory, and when you run the program just type some part of the name (e.g. Under the Dome, just type \"dome\") and it will display the details of the book. </p>\n\n<p>I had it working correctly for a few books, but any eBooks from Google Books broke it completely. They have a completely bizarre implementation of ePub (to me, at least) compared to books from other sources. </p>\n\n<p>Anyway, hopefully some of the structural code in there might help you out!</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>I recently attempted something similar to this and added some CSS styling to change the layout to horizontal instead of vertical. This gave me the desired effect without having to modify the content of the Epub in any way.</p>\n\n<p>This code <em>should</em> work.</p>\n\n<pre><code>mWebView.setWebViewClient(new WebViewClient() {\n    public void onPageFinished(WebView view, String url) {\n\n        // Column Count is just the number of 'screens' of text. Add one for partial 'screens'\n        int columnCount = Math.floor(view.getHeight() / view.getWidth())+1;\n\n        // Must be expressed as a percentage. If not set then the WebView will not stretch to give the desired effect.\n        int columnWidth = columnCount * 100;\n\n        String js = \"var d = document.getElementsByTagName('body')[0];\" + \n            \"d.style.WebkitColumnCount=\" + columnCount + \";\" + \n            \"d.style.WebkitColumnWidth='\" + columnWidth + \"%';\";\n        mWebView.loadUrl(\"javascript:(function(){\" + js + \"})()\");\n    }\n});\n\nmWebView.loadUrl(\"file:///android_asset/chapter.xml\");\n</code></pre>\n\n<p>So, basically you're injecting JavaScript to change the styling of the body element after the chapter has been loaded (very important). The only downfall to this approach is when you have images in the content the calculated column count goes askew. It shouldn't be too hard to fix though. My attempt was going to be injecting some JavaScript to add width and height attributes to all images in the DOM that don't have any.</p>\n\n<p>Hope it helps.</p>\n\n<p>-Dan</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Maybe it would work to use <a href=\"http://en.wikipedia.org/wiki/XSL-FO\" rel=\"nofollow\">XSL-FO</a>. This seems heavy for a mobile device, and maybe it's overkill, but it should work, and you wouldn't have to implement the complexities of good pagination (e.g. how do you make sure that each screen doesn't cut text in half) yourself.</p>\n\n<p>The basic idea would be:</p>\n\n<ul>\n<li>transform the XHTML (and other EPUB stuff) to XSL-FO using XSLT.</li>\n<li>use an XSL-FO processor to render the XSL-FO into a paged format that you can display on the mobile device, such as PDF (can you display that?)</li>\n</ul>\n\n<p>I don't know whether there is an XSL-FO processor available for Android. You could try Apache FOP. RenderX (XSL-FO processor) has the advantage of having a <a href=\"http://services.renderx.com/lists/xep-support/6209.html\" rel=\"nofollow\">paged-HTML output option</a>, but again I don't know if it could run on Android.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Building on Dan's answer here is my solution for this problem, with which I was struggling myself until just now. (this JS works on iOS Webkit, no guarantees for android, but please let me know the results)</p>\n\n<pre><code>var desiredHeight;\nvar desiredWidth;\nvar bodyID = document.getElementsByTagName('body')[0];\ntotalHeight = bodyID.offsetHeight;\npageCount = Math.floor(totalHeight/desiredHeight) + 1;\nbodyID.style.padding = 10; //(optional) prevents clipped letters around the edges\nbodyID.style.width = desiredWidth * pageCount;\nbodyID.style.height = desiredHeight;\nbodyID.style.WebkitColumnCount = pageCount;\n</code></pre>\n\n<p>Hope this helps...</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>You can look at <a href=\"http://www.litres.ru/static/OR/or.html?data=/static/trials/00/42/47/00424722.gur.html&amp;art=424722&amp;user=0&amp;trial=1\" rel=\"nofollow\">http://www.litres.ru/static/OR/or.html?data=/static/trials/00/42/47/00424722.gur.html&amp;art=424722&amp;user=0&amp;trial=1</a> but the code may be heavily obfuscated, so just use Firebug to  inspect DOM.</p>\n\n<p>If the link isn't working, comment - would give you fixed.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is several ways this could be done. If every line is in its own element all you have to do is to check if one of it's edges goes outside of the view (either the browsers, or the \"book page\").</p>\n\n<p>If you want to know how many \"pages\" there is going to be in advance, just temporary move them into the view and get what line a page ends. This could potentially be slow because of that page reflow is needed for the browser to know where anything is.</p>\n\n<p>Otherwise I think that you could use the HTML5 canvas element to measure text and / or draw text.</p>\n\n<p>Some info on that here:\n    <a href=\"https://developer.mozilla.org/en/Drawing_text_using_a_canvas\" rel=\"nofollow\">https://developer.mozilla.org/en/Drawing_text_using_a_canvas</a>\n    <a href=\"http://uupaa-js-spinoff.googlecode.com/svn/trunk/uupaa-excanvas.js/demo/8_2_canvas_measureText.html\" rel=\"nofollow\">http://uupaa-js-spinoff.googlecode.com/svn/trunk/uupaa-excanvas.js/demo/8_2_canvas_measureText.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've had to code something like this too, and my (working) solution is this:</p>\n\n<p>You have to apply these lines to the webview...</p>\n\n<pre><code>    webView_.getSettings().setUseWideViewPort(true);\n    webView_.getSettings().setLayoutAlgorithm(LayoutAlgorithm.NARROW_COLUMNS);\n</code></pre>\n\n<p>Also, you have to inject some javascript. I've had tons of problems with the differents scales of my activity and the content rendered in the webview, so my solution doesn't take any kind of value from \"outside\".</p>\n\n<pre><code>    webView_.setWebViewClient(new WebViewClient(){\n\n            public void onPageFinished(WebView view, String url) {\n                injectJavascript();\n            }\n\n        });\n</code></pre>\n\n<p>[...]</p>\n\n<pre><code>    public void injectJavascript() {\n        String js = \"javascript:function initialize() { \" +\n                \"var d = document.getElementsByTagName('body')[0];\" +\n                \"var ourH = window.innerHeight; \" +\n                \"var ourW = window.innerWidth; \" + \n                \"var fullH = d.offsetHeight; \" +\n                \"var pageCount = Math.floor(fullH/ourH)+1;\" +\n                \"var currentPage = 0; \" +\n                \"var newW = pageCount*ourW; \" +\n                \"d.style.height = ourH+'px';\" +\n                \"d.style.width = newW+'px';\" +\n                \"d.style.webkitColumnGap = '2px'; \" +\n                \"d.style.margin = 0; \" +\n                \"d.style.webkitColumnCount = pageCount;\" +\n                \"}\";\n        webView_.loadUrl(js);\n        webView_.loadUrl(\"javascript:initialize()\");\n    }\n</code></pre>\n\n<p>Enjoy :)</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Had this same problem recently and inspired by the answers found a plain CSS solution using CSS3's column-* attributes:</p>\n\n<pre><code>/* CSS */\n.chapter {\n    width: 600px;\n    padding: 60px 10px;\n    -webkit-column-gap: 40px;\n    -webkit-column-width: 150px;\n    -webkit-column-count: 2;\n    height:400px;\n}\n\n/* HTML */\n&lt;div class=\"chapter\"&gt;\n    your long lorem ipsum arbitrary HTML\n&lt;/div&gt;\n</code></pre>\n\n<p>The example above gives great results on a retina iPhone. Playing around with the different attributes yields in different spacing between the pages and such.</p>\n\n<p>If you need to support multiple chapters for instance which need to start on new pages, there's an XCode 5 example on github: <a href=\"https://github.com/dmrschmidt/ios_uiwebview_pagination\" rel=\"nofollow\">https://github.com/dmrschmidt/ios_uiwebview_pagination</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I split the content of a HTML file in screen-sized chunks to \"paginate\" it in a WebKit browser? </p>\n\n<p>Each \"page\" should show a complete amount of text. This means that a line of text must not be cut in half in the top or bottom border of the screen.</p>\n\n<p><strong>Edit</strong></p>\n\n<p>This question was originally tagged \"Android\" as my intent is to build an Android ePub reader. However, it appears that the solution can be implemented just with JavaScript and CSS so I broadened the scope of the question to make it platform-independent.</p>\n",
            "last_activity_date": 1383276718,
            "question_id": 3636052,
            "score": 46,
            "tags": [
                "javascript",
                "html",
                "css",
                "webkit",
                "pagination"
            ],
            "title": "HTML book-like pagination"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The two most oft-quoted advantages are:</p>\n\n<ul>\n<li>JavaScript is both server-side and client-side. There are fewer things to learn, less context switching, and the ability to reuse code across the two sides.</li>\n<li>Uses non-blocking I/O, and Chrome's V8 engine, to provide fast, highly scalable servers. </li>\n</ul>\n\n<p>For me though, the most interesting part is the amount of activity happening in this area. There are a lot of very interesting ideas under development for node - be sure to check out the <a href=\"https://github.com/joyent/node/wiki/modules\" rel=\"nofollow\">list of Node.js modules</a>.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Personally, I'd most likely use Node.js when:</p>\n\n<ul>\n<li>I want to write a server that doesn't use the <a href=\"http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" rel=\"nofollow\">HTTP protocol</a>.</li>\n<li>I'm prototyping a server implementation.</li>\n<li>I'm writing a server that isn't expecting a ton of traffic (although I've never profiled a Node.js implementation next to, say, a matching C++ implementation).</li>\n<li>I want to get active in the community (which is apparently growing quite rapidly).</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>When you're (or even if you are not) a JavaScript enthusiast you can/should use Node.js for a number of reasons:</p>\n\n<ul>\n<li>It's a low-level, lightweight and standalone framework which brings power of JavaScript to the server-side environment.</li>\n<li>If you like more higher level abstraction then there is a large number of <a href=\"https://github.com/joyent/node/wiki/modules\" rel=\"nofollow\">modules</a> and the <a href=\"http://search.npmjs.org/\" rel=\"nofollow\">npm</a> package manager where you can find wide range of ready-to-use applications.</li>\n<li>Fast/unencumbered development process - for example, you don't need tons of additional tools in order to start writing serious stuff.</li>\n<li>Big open source based community full of enthusiasts and very talented people.</li>\n<li>Made for creating real-time web oriented applications - that's where the (near) future is.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>It's evented asynchronous non-blocking <a href=\"http://en.wikipedia.org/wiki/Input/output\">I/O</a> build ontop of <a href=\"http://en.wikipedia.org/wiki/V8_%28JavaScript_engine%29\">V8</a>.</p>\n\n<p>So we have all the performance gain of V8 which is the Google JavaScript interpreter. Since the JavaScript performance race hasn't ended yet, you can expect Google to constantly update performance on V8 (for free).</p>\n\n<p>We have non-blocking I/O which is simply the correct way to do I/O. This is based on an event loop and using asynchronous callbacks for your I/O.</p>\n\n<p>It gives you useful tools like creating a HTTP server, creating a <a href=\"http://en.wikipedia.org/wiki/Transmission_Control_Protocol\">TCP</a> server, handling file I/O.</p>\n\n<p>It's a low level highly performant platform for doing any kind of I/O without having to write the entire thing in C from scratch. And it scales very well due to the non-blocking I/O. </p>\n\n<p>So you want to use Node.js if you want to write highly scaling and efficient applications using non-blocking I/O whilst still having a high level scripting language available. If needed, you can hand optimise parts of your code by writing extensions in C.</p>\n\n<p>There are plenty of OS libraries for Node.js that will give you abstractions, like <a href=\"https://en.wikipedia.org/wiki/Express.js\">Express.js</a> and <a href=\"http://nowjs.com/\">now</a>.</p>\n\n<p>You don't want to use Node.js if you want (slow) high level abstractions to do everything for you. You don't want to use Node.js if you want <a href=\"https://en.wikipedia.org/wiki/Rapid_application_development\">RAD</a>. You don't want to use Node.js if you can't afford to trust a young platform, either due to having to write large pieces of code yourself to do things that are build into other frameworks or because you can't use Node.js, because the API isn't stable yet or it's a sub 1.0 release.</p>\n",
                    "is_accepted": true,
                    "score": 56
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/5062614/how-to-decide-when-to-use-nodejs\">How to decide when to use Node.js?</a>  </p>\n</blockquote>\n\n\n\n<p>Sorry if I'm a bit ambiguous, but I'm trying to understand the real advantages of using <a href=\"http://en.wikipedia.org/wiki/Node.js\">Node.js</a> instead of other server-side language.</p>\n\n<p>I'm a JavaScript enthusiast, so I'm probably going to play with Node.js, but I want to know if I should use it in my projects.</p>\n",
            "last_activity_date": 1405784152,
            "question_id": 5617683,
            "score": 80,
            "tags": [
                "javascript",
                "node.js",
                "serverside-javascript",
                "server-side"
            ],
            "title": "Why and when to use Node.js?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I created these examples.</p>\n\n<h3>Simple <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf\">indexOf</a> search</h3>\n\n<pre><code>var $rows = $('#table tr');\n$('#search').keyup(function() {\n    var val = $.trim($(this).val()).replace(/ +/g, ' ').toLowerCase();\n\n    $rows.show().filter(function() {\n        var text = $(this).text().replace(/\\s+/g, ' ').toLowerCase();\n        return !~text.indexOf(val);\n    }).hide();\n});\n</code></pre>\n\n<p><strong>Demo</strong>: <a href=\"http://jsfiddle.net/7BUmG/2/\">http://jsfiddle.net/7BUmG/2/</a></p>\n\n<h3>Regular expression search</h3>\n\n<p>More advanced functionality using regular expressions will allow you to search words in any order in the row. It will work the same if you type <code>apple green</code> or <code>green apple</code>:</p>\n\n<pre><code>var $rows = $('#table tr');\n$('#search').keyup(function() {\n\n    var val = '^(?=.*\\\\b' + $.trim($(this).val()).split(/\\s+/).join('\\\\b)(?=.*\\\\b') + ').*$',\n        reg = RegExp(val, 'i'),\n        text;\n\n    $rows.show().filter(function() {\n        text = $(this).text().replace(/\\s+/g, ' ');\n        return !reg.test(text);\n    }).hide();\n});\n</code></pre>\n\n<p><strong>Demo</strong>: <a href=\"http://jsfiddle.net/dfsq/7BUmG/1133/\">http://jsfiddle.net/dfsq/7BUmG/1133/</a></p>\n",
                    "is_accepted": true,
                    "score": 107
                },
                {
                    "body": "<p>i have an jquery plugin for this. It uses jquery-ui also. You can see an example here\n<a href=\"http://jsfiddle.net/tugrulorhan/fd8KB/1/\" rel=\"nofollow\">http://jsfiddle.net/tugrulorhan/fd8KB/1/</a></p>\n\n<pre><code>$(\"#searchContainer\").gridSearch({\n            primaryAction: \"search\",\n            scrollDuration: 0,\n            searchBarAtBottom: false,\n            customScrollHeight: -35,\n            visible: {\n                before: true,\n                next: true,\n                filter: true,\n                unfilter: true\n            },\n            textVisible: {\n                before: true,\n                next: true,\n                filter: true,\n                unfilter: true\n            },\n            minCount: 2\n        });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I've been Googling and searching Stack Overflow for a while, but I just can't get around this problem.</p>\n\n<p>I have a standard HTML table, containing, say, fruit. Like so:</p>\n\n<pre><code>&lt;table&gt;\n   &lt;tr&gt;\n      &lt;td&gt;Apple&lt;/td&gt;\n      &lt;td&gt;Green&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n      &lt;td&gt;Grapes&lt;/td&gt;\n      &lt;td&gt;Green&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n      &lt;td&gt;Orange&lt;/td&gt;\n      &lt;td&gt;Orange&lt;/td&gt;\n   &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>Above this I have a text box, which I would like to search the table as a user types. So, if they type <code>Gre</code> for example, the Orange row of the table would disapear, leaving the Apple and Grapes. If they carried on and typed <code>Green Gr</code> the Apple row should disapear, leaving just grapes. I hope this is clear.</p>\n\n<p>And, should the user delete some or all of their query from the text box, I should like all of the rows that now match the query to reappear.</p>\n\n<p>While I know how to remove a table row in jQuery, I have little idea about how to go about doing the search and removing rows selectively based on this. Is there a simple solution to this? Or a plugin?</p>\n\n<p>If anyone could point me in the right direction it would be brilliant.</p>\n\n<p>Thank you.</p>\n",
            "last_activity_date": 1415350115,
            "question_id": 9127498,
            "score": 47,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "How to perform a real time search and filter on a HTML table"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I'm also building a website with angular and I came across this same obstacle for global 401 handling. I ended up using http interceptor when I came across this blog post. Maybe you'll find it as helpful as I did.</p>\n\n<p><a href=\"http://www.espeo.pl/2012/02/26/authentication-in-angularjs-application\">http://www.espeo.pl/2012/02/26/authentication-in-angularjs-application</a></p>\n\n<p><strong>EDIT: final solution</strong></p>\n\n<pre><code>angular.module('myApp', ['myApp.filters', 'myApp.services', 'myApp.directives'], function ($routeProvider, $locationProvider, $httpProvider) {\n\n    var interceptor = ['$rootScope', '$q', function (scope, $q) {\n\n        function success(response) {\n            return response;\n        }\n\n        function error(response) {\n            var status = response.status;\n\n            if (status == 401) {\n                window.location = \"./index.html\";\n                return;\n            }\n            // otherwise\n            return $q.reject(response);\n\n        }\n\n        return function (promise) {\n            return promise.then(success, error);\n        }\n\n    }];\n    $httpProvider.responseInterceptors.push(interceptor);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 78
                },
                {
                    "body": "<p>Please note that responseInterceptors have been deprecated with Angular 1.1.4. \nBelow you can find an excerpt based on the <a href=\"http://docs.angularjs.org/api/ng.%24http\">official docs</a>, showing the new way to implement interceptors.</p>\n\n<pre><code>$provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {\n  return {\n    'response': function(response) {\n      // do something on success\n      return response || $q.when(response);\n    },\n\n   'responseError': function(rejection) {\n      // do something on error\n      if (canRecover(rejection)) {\n        return responseOrNewPromise;\n      }\n      return $q.reject(rejection);\n    }\n  };\n});\n\n$httpProvider.interceptors.push('myHttpInterceptor');\n</code></pre>\n\n<p>This is how it looks in my project using Coffeescript:</p>\n\n<pre><code>angular.module(\"globalErrors\", ['appStateModule']).factory \"myHttpInterceptor\", ($q, $log, growl) -&gt;\n  response: (response) -&gt;\n    $log.debug \"success with status #{response.status}\"\n    response || $q.when response\n\n  responseError: (rejection) -&gt;\n    $log.debug \"error with status #{rejection.status} and data: #{rejection.data['message']}\"\n    switch rejection.status\n      when 403\n        growl.addErrorMessage \"You don't have the right to do this\"\n      when 0\n        growl.addErrorMessage \"No connection, internet is down?\"\n      else\n        growl.addErrorMessage \"#{rejection.data['message']}\"\n\n    # do something on error\n    $q.reject rejection\n\n.config ($provide, $httpProvider) -&gt;\n  $httpProvider.interceptors.push('myHttpInterceptor')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>Create the file <code>&lt;script type=\"text/javascript\" src=\"../js/config/httpInterceptor.js\" &gt;&lt;/script&gt;</code> with this content:</p>\n\n<pre><code>(function(){\n  var httpInterceptor = function ($provide, $httpProvider) {\n    $provide.factory('httpInterceptor', function ($q) {\n      return {\n        response: function (response) {\n          return response || $q.when(response);\n        },\n        responseError: function (rejection) {\n          if(rejection.status === 401) {\n            // you are not autorized\n          }\n          return $q.reject(rejection);\n        }\n      };\n    });\n    $httpProvider.interceptors.push('httpInterceptor');\n  };\n  angular.module(\"myModule\").config(httpInterceptor);\n}());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>When my website was 100% jQuery, I used to do this:</p>\n\n<pre><code>$.ajaxSetup({\n    global: true,\n    error: function(xhr, status, err) {\n        if (xhr.status == 401) {\n           window.location = \"./index.html\";\n        }\n    }\n});\n</code></pre>\n\n<p>to set a global handler for 401 errors. Now, I use angularjs with <code>$resource</code> and <code>$http</code> to do my (REST) requests to the server. Is there any way to similarly set a global error handler with angular?</p>\n",
            "last_activity_date": 1404374532,
            "question_id": 11971213,
            "score": 52,
            "tags": [
                "javascript",
                "ajax",
                "angularjs"
            ],
            "title": "Global Ajax error handler with AngularJS"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>In the newer versions of Handlebars index (or key in the case of object iteration) is provided by default with the standard each helper. </p>\n\n<hr>\n\n<p>snippet from : <a href=\"https://github.com/wycats/handlebars.js/issues/250#issuecomment-9514811\">https://github.com/wycats/handlebars.js/issues/250#issuecomment-9514811</a></p>\n\n<p>The index of the current array item has been available for some time now via @index:</p>\n\n<pre><code>{{#each array}}\n    {{@index}}: {{this}}\n{{/each}}\n</code></pre>\n\n<p>For object iteration, use @key instead:</p>\n\n<pre><code>{{#each object}}\n    {{@key}}: {{this}}\n{{/each}} \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 257
                },
                {
                    "body": "<p>This has changed in the newer versions of Ember.</p>\n\n<p>For arrays:</p>\n\n<pre><code>{{#each array}}\n    {{_view.contentIndex}}: {{this}}\n{{/each}}\n</code></pre>\n\n<p>It looks like the #each block no longer works on objects. My suggestion is to roll your own helper function for it.</p>\n\n<p>Thanks for this <a href=\"http://stackoverflow.com/questions/21841340/what-is-the-correct-way-of-getting-the-index-of-an-array-when-iterating-over-it\">tip</a>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I'm using Handlebars for templating in my project. Is there a way to get the index of the current iteration of an \"each\" helper in Handlebars?</p>\n\n<pre><code>&lt;tbody&gt;\n     {{#each item}}\n         &lt;tr&gt;\n            &lt;td&gt;&lt;!--HOW TO GET ARRAY INDEX HERE?--&gt;&lt;/td&gt;\n            &lt;td&gt;{{this.key}}&lt;/td&gt;\n            &lt;td&gt;{{this.value}}&lt;/td&gt;\n         &lt;/tr&gt;\n     {{/each}}\n&lt;/tbody&gt;\n</code></pre>\n",
            "last_activity_date": 1404940340,
            "question_id": 11884960,
            "score": 118,
            "tags": [
                "javascript",
                "handlebars.js"
            ],
            "title": "How to get index in Handlebars each helper?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I'm using now <strong>PHP SDK 3.x</strong> without any problem.</p>\n\n<p>Naitik the class author removed the <strong>getSession()</strong> function, and now if you want to know if the user is authenticated or not, use <strong>getUser()</strong>.</p>\n\n<p>For Access token, it's very simple, use this function <strong>getAccessToken()</strong>, and you'll get the access token to make <strong>Graph or Rest API</strong> calls.</p>\n\n<pre><code>$user = $facebook-&gt;getUser();\n\nif ($user) {\n//USER Logged-In\n}\nelse {\n//USER not Logged-In\n}\n\n//TO GET ACCESS TOKEN\n$access_token = $facebook-&gt;getAccessToken();\n\n\n//MAKE AN API CALL WITH IT\n$user_info = $facebook-&gt;api('me?fields=id,name,first_name,last_name&amp;access_token='.$access_token);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>For starters, I would debug a little more. Log the contents of the requests. What\u2019s stored in $_SESSION, what\u2019s passed in $_REQUEST. Also, check if it\u2019s a browser issue (is it happening regardless of the browser, or is there a pattern?)</p>\n\n<p>But since fixing the cookie issue in IE (P3P header) helped, my guess is that there are some browsers left, that deny third party cookies. As far as I know, some versions of Safari and Opera does that by default. \nIn addition, this error states that there was no <code>access_token</code> provided, as opposed to invalid or expired one.</p>\n\n<p>You can test that by disabling third party cookies (<a href=\"http://kb.mozillazine.org/Network.cookie.cookieBehavior\" rel=\"nofollow\">using about:config in firefox</a> for instance), deauthorizing your app (using the \"Apps and websites\" section on the bottom of <a href=\"http://www.facebook.com/settings/?tab=privacy\" rel=\"nofollow\">Facebook Privacy settings</a>), deleting cookies (related to your canvas URL) and then launching the application.</p>\n\n<p>BTW, there\u2019s always a possibility of facebook not returning access token even when it should, as <a href=\"http://bugs.developers.facebook.net/show_bug.cgi?id=17236\" rel=\"nofollow\">described in bug 17236</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h2>My solution</h2>\n\n<p>Well, since everything I did was just a workaround until the new JS SDK comes out, there seems to be no best practice. Setting <code>session.use_trans_sid</code> to 1 and adding the P3P header helped to overcome IE iFrame cookie issues (see my first edit). After a few days of heavy debugging I found out, that FB.ui's <code>permission_request</code> does not send a new access token everytime (&lt;5%).</p>\n\n<p>If this happens, something went wrong. But this little something is driving me crazy. Since this happens infrequently, I can bear redirecting users back to the facebook tab to get a new signed request. With the new JS SDK, hopefully, this won't happen anymore.</p>\n\n<h2>Update: final solution</h2>\n\n<p>There was one little thing I have overseen and the solution can be found here: <a href=\"http://stackoverflow.com/questions/5331165/fb-is-not-defined-problem/5331861#5331861\">FB is not defined problem</a><br>\nI did not <strong>load the JS SDK asynchronously</strong>! This explains everything. Sometimes the all.js file was not loaded fast enough, so there was a JS error. Due to that, neither the permission dialog nor the JS validation worked and an empty #session input value was sent.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>FYI, Facebook posted an update to the PHP SDK about 2 hours ago which adds support for the new cookie format, if you're creating a session on the client using the JavaScript SDK. The update can be found at the <a href=\"https://github.com/facebook/php-sdk\" rel=\"nofollow\">Facebook PHP-SDK GitHub repo</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Hi i've run in the same trouble seems i've solved it with watching the JS API and redirect to the PHP-SDK Login Page if User Information is readable</p>\n\n<p>example: </p>\n\n<pre><code>&lt;script language=\"JavaScript\"&gt;\n\nfunction check_fb_status(){\n    FB.api('/me', function(response){\n     if(response.name) window.location='&lt;?php echo $facebook-&gt;getLoginUrl(); ?&gt;';\n     else check_fb_status();\n    });\n}\n\ncheck_fb_status();\n\n&lt;/script&gt;\n</code></pre>\n\n<p>if the script succed it loads the loginpage, and user got recognized by both JS and PHP SDK ;)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In the PHP 3.0 SDK there is no <code>getSession()</code> or any session handling from outside the Facebook api available. Some days ago the developers of facebook have also somehow updated the JavaScript sdk, according to <strong><a href=\"http://knoopgroup.org/\">this blog entry</a></strong> and <strong><a href=\"http://bugs.developers.facebook.net/show_bug.cgi?id=18633\">this bug report</a></strong>.</p>\n\n<blockquote>\n  <p>Within the last few days, a change was\n  introduced into the hosted JS SDK\n  which broke all compatility between it\n  and the current PHP SDK (2.x and 3.x).\n  Developers who utilize both the JS and\n  PHP SDK on their websites are likely\n  to see server-side API failure.</p>\n</blockquote>\n\n<p>However, I don't know if that really effects my problem. Like in <strong><a href=\"http://stackoverflow.com/questions/6460531/facebook-session-transfer-js-sdk-to-php-sdk\">this question's answer</a></strong> I am retrieving the access token of the OAuth dialog with PHP and save the new access token in the session.</p>\n\n<h2>Current workaround</h2>\n\n<p>The following code shows how I am handling this sessions. <code>$_REQUEST['session']</code> is the content of the response of the OAuth dialog.</p>\n\n<pre><code>if(isset($_REQUEST['session'])) {\n\n    $response = json_decode(stripslashes($_REQUEST['session']), true);\n\n    if(isset($response['access_token'])) {\n        $this-&gt;api-&gt;setAccessToken($response['access_token']);\n        $_SESSION['access_token'] = $this-&gt;api-&gt;getAccessToken();\n    }\n\n}\nelseif(isset($_SESSION['access_token']) &amp;&amp; ! isset($_REQUEST['signed_request'])) \n    $this-&gt;api-&gt;setAccessToken($_SESSION['access_token']);\nelseif(isset($_REQUEST['signed_request'])) {\n    Session::invalidate('fbuser');\n    $_SESSION['access_token'] = '';\n}\n</code></pre>\n\n<p>Here is how I handle the user data:</p>\n\n<pre><code>try {\n    $this-&gt;user = Session::getVar('fbuser');\n    if ($this-&gt;user === false || is_null($this-&gt;user)) {\n        $facebookUser = $this-&gt;api-&gt;api('me?fields=id,name,first_name,last_name');\n        $this-&gt;user = new FBUserModel(array('fbId' =&gt; $facebookUser['fbId'], ...));\n        Session::setVar('fbuser', $this-&gt;user);\n    }\n}\n</code></pre>\n\n<p><br /></p>\n\n<h2>The Problem</h2>\n\n<p>Everything looks fine while testing. Only once an error occured: <strong>the first time</strong> after permission was set. Now, since the app is online, it seems as if the error occurs on average with every second user in</p>\n\n<pre><code>$facebookUser = $this-&gt;api-&gt;api('me?fields=id,name,first_name,last_name');\n</code></pre>\n\n<p>with the error:</p>\n\n<pre><code>An active access token must be used to query information about the current user.\n</code></pre>\n\n<p><br /></p>\n\n<h2>Question</h2>\n\n<p>So why is this happening? It is very hard to debug since the error seems to only occur when a user enters the app the first time, after the app authentication and the access token has changed. And even that is not happening every time. How should I handle the session and access token right with the new PHP SDK?</p>\n\n<p>Any help would be highly appreciatied!</p>\n\n<p><br /></p>\n\n<h2>Edit</h2>\n\n<p>I found out that there are some IE issues with cookies/session inside an iFrame. As seen <strong><a href=\"http://adamyoung.net/IE-Blocking-iFrame-Cookies\">in this blog post</a></strong>. With that hint and some further research I added the following lines in my bootstrap:</p>\n\n<pre><code>ini_set('session.use_trans_sid', 1);\nheader('P3P:CP=\"IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT\"');\n</code></pre>\n\n<p>Now its much better, but the information from about 2 of 50 users get lost between the steps landing page (authentication) -> formular -> and registration. So there is still something I missed.</p>\n\n<p><br /></p>\n\n<h2>Edit 2</h2>\n\n<p>I edited my user handling from</p>\n\n<pre><code>if ($this-&gt;user === false || is_null($this-&gt;user)) {\n    // get user data\n}\n</code></pre>\n\n<p>to</p>\n\n<pre><code>if ((is_object($this-&gt;user) &amp;&amp; $this-&gt;user-&gt;fbId == '') || $this-&gt;user === false || is_null($this-&gt;user)) {\n    // get user data\n}\n</code></pre>\n\n<p>This seems to help a little bit. I think the main problem is somewhere in my session.</p>\n\n<p>Furthermore I added a try/catch block to see if somewhere in my app a Facebook <code>OAuthException</code> is thrown. If this is the case, I redirect the <strong>top location</strong> to the Facebook Page and Tab to get a <strong>new signed request</strong>. Though this might help solve this problem, I want to prevent my app from having to redirect the user.</p>\n\n<p><br /></p>\n\n<h2>Edit 3</h2>\n\n<p>After some days of intense debugging and logging I found out, that the <code>$_REQUEST['session']</code> coming from the <strong>FB.ui permissions.request method</strong> is empty infrequently.</p>\n\n<p>Here is how I handle it:</p>\n\n<p>This is the stuff I always included:</p>\n\n<pre><code>FB.provide(\"UIServer.Methods\", {'permissions.request': {size : {width: 575, height: 300}, url: 'connect/uiserver.php', transform : FB.UIServer.genericTransform}});\n</code></pre>\n\n<p>And this function is called on form submit. Always worked for me, but somehow it still sends the form although <code>session == ''</code>.</p>\n\n<pre><code>function getPermission(form) {\n\n    session = $('#' + $(form).attr('id') + ' input[name=\"session\"]');\n\n    if($(session).val() != '') {\n        form.submit();\n        return;\n    }\n\n    FB.ui({method: \"permissions.request\", \"perms\": 'user_photos'}, function callback(info){\n        if(info.status=='connected' &amp;&amp; info.session !== null) {\n            $(session).val(JSON.stringify(info.session));\n            form.submit();\n        }\n    });\n    return;\n}\n</code></pre>\n",
            "last_activity_date": 1313973271,
            "question_id": 6468103,
            "score": 37,
            "tags": [
                "php",
                "javascript",
                "facebook",
                "session"
            ],
            "title": "How to properly handle session and access token with Facebook PHP SDK 3.0?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>tell you the true, I still don't get what you need, but</p>\n\n<pre><code>window.location(url);\n</code></pre>\n\n<p>should be</p>\n\n<pre><code>window.location = url;\n</code></pre>\n\n<p>a search on <a href=\"https://developer.mozilla.org/en/window.location\">window.location</a> reference will tell you that.</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>jQuery does not have an option for this, nor should it have one. This is perfectly valid javascript and there is no reason for jQuery to provide wrapper functions for this.</p>\n\n<p>jQuery is just a library on top of javascript, even if you use jQuery you can still use normal javascript.</p>\n\n<p>Btw window.location is not a function but a property which you should set like this:</p>\n\n<pre><code>window.location = url;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>As mentioned in the other answers, you don't need jQuery to do this; you can just use the standard properties.</p>\n\n<p>However, it seems you don't seem to know the difference between <code>window.location.replace(url)</code> and <code>window.location = url</code>.</p>\n\n<ol>\n<li><code>window.location.replace(url)</code> replaces the current location in the address bar by a new one. The page that was calling the function, won't be included in the browser history. Therefore, on the new location, clicking the back button in your browser would make you go back to the page you were viewing before you visited the document containing the redirecting JavaScript.</li>\n<li><code>window.location = url</code> redirects to the new location. On this new page, the back button in your browser would point to the original page containing the redirecting JavaScript.</li>\n</ol>\n\n<p>Of course, both have their use cases, but it seems to me like in this case you should stick with the latter.</p>\n\n<p>P.S.: You probably forgot two slashes after <code>http:</code> on line 2 of your JavaScript:</p>\n\n<pre><code>url = \"http://abc.com/\" + temp;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 195
                },
                {
                    "body": "<p>Try this...</p>\n\n<pre><code>$(\"#abc\").attr(\"action\", \"/yourapp/\" + temp).submit();\n</code></pre>\n\n<p>What it means:</p>\n\n<p>Find a form with <code>id</code> \"abc\", change it's <code>attribute</code> named \"action\" and then submit it... </p>\n\n<p>This works for me... !!!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var temp=\"/yourapp/\";\n$(location).attr('href','http://abcd.com'+temp);\n</code></pre>\n\n<p>Try this...\n      used as an alternative</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have some code like this,</p>\n\n<pre><code>&lt;form id=\"abc\"&gt;\n  &lt;input type=\"text\" id=\"txt\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>and now I want to redirect like this,</p>\n\n<pre><code>var temp = $(\"#txt\").val();\nurl = \"http:abc.com/\" + temp;\nwindow.location.replace(url);\nor\nwindow.location(url);\n</code></pre>\n\n<p>Is there anyway in jQuery to solve this? It still lets me have <code>url = <a href=\"http://abc.com\">http://abc.com</a></code>.</p>\n",
            "last_activity_date": 1421051598,
            "question_id": 846954,
            "score": 68,
            "tags": [
                "javascript",
                "jquery",
                "url",
                "redirect"
            ],
            "title": "Change URL and redirect using jQuery"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>To get the contents of the attribute <code>data-id</code> (like in <code>&lt;a data-id=\"123\"&gt;link&lt;/a&gt;</code>) you have to use</p>\n\n<pre><code>$(this).attr(\"data-id\") // will return the string \"123\"\n</code></pre>\n\n<p>or <a href=\"http://api.jquery.com/data/\"><code>.data()</code></a> (if you use newer jQuery >= 1.4.3)</p>\n\n<pre><code>$(this).data(\"id\") // will return the number 123\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 313
                },
                {
                    "body": "<p>If we want to retrieve or update these attributes using existing, native <strong>JavaScript</strong>, then we can do so using the getAttribute and setAttribute methods as shown below:    </p>\n\n<pre><code>&lt;div id='strawberry-plant' data-fruit='12'&gt;&lt;/div&gt;\n\n&lt;script&gt;\n// 'Getting' data-attributes using getAttribute\nvar plant = document.getElementById('strawberry-plant');\nvar fruitCount = plant.getAttribute('data-fruit'); // fruitCount = '12'\n\n// 'Setting' data-attributes using setAttribute\nplant.setAttribute('data-fruit','7'); // Pesky birds\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>Through jQuery</strong></p>\n\n<pre><code>// Fetching data\nvar fruitCount = $(this).data('fruit');\n\n// Assigning data\n$(this).attr('data-fruit','7');\n</code></pre>\n\n<p><a href=\"http://html5doctor.com/html5-custom-data-attributes/\">Read this documentation</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I use $.data - <a href=\"http://api.jquery.com/jquery.data/\" rel=\"nofollow\">http://api.jquery.com/jquery.data/</a></p>\n\n<pre><code>//Set value 7 to data-id \n$.data(this, 'id', 7);\n\n//Get value from data-id\nalert( $(this).data(\"id\") ); // =&gt; outputs 7\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are not concerned about old IE browsers, you can also use <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement.dataset\" rel=\"nofollow\">HTML5 dataset API</a></p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div id=\"my-div\" data-info=\"some info here\" data-other-info=\"more info here\"&gt;My Awesome Div&lt;/div&gt;\n</code></pre>\n\n<p><strong>JS</strong></p>\n\n<pre><code>var myDiv = document.querySelector('#my-div');\n\nmyDiv.dataset.info // \"some info here\"\nmyDiv.dataset.otherInfo // \"more info here\"\n</code></pre>\n\n<p>Demo: <a href=\"http://html5demos.com/dataset\" rel=\"nofollow\">http://html5demos.com/dataset</a></p>\n\n<p>Full browser support list: <a href=\"http://caniuse.com/#feat=dataset\" rel=\"nofollow\">http://caniuse.com/#feat=dataset</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using the jquery quicksand plugin. I need to get the data-id of the clicked item and pass it to a webservice.\nHow do I get the data-id attribute? I'm using the .live() method to re-bind the click event for sorted items.</p>\n\n<p>Html looks like this:</p>\n\n<pre><code>   &lt;ul id=\"list\" class=\"grid\"&gt;                           \n       &lt;li data-id=\"id-40\" class=\"win\"&gt;\n           &lt;a id=\"ctl00_cphBody_ListView1_ctrl0_SelectButton\" class=\"project\" href=\"#\"&gt;\n             &lt;img src=\"themes/clean/images/win.jpg\" class=\"project-image\" alt=\"\" /&gt; &lt;/a&gt;\n       &lt;/li&gt;\n    &lt;/ul&gt;\n</code></pre>\n\n<p>And my JavaScript looks like this:</p>\n\n<pre><code>$(\"#list li\").live('click',function(){\n //  ret = DetailsView.GetProject($(this).attr(\"#data-id\"), OnComplete, OnTimeOut, OnError);\n  alert($(this).attr(\"#data-id\"));\n});\n</code></pre>\n",
            "last_activity_date": 1420929091,
            "question_id": 5309926,
            "score": 132,
            "tags": [
                "javascript",
                "jquery",
                "custom-data-attribute"
            ],
            "title": "How to get the data-id attribute?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Very interesting question! Let's dig in.</p>\n\n<h2>The root cause</h2>\n\n<p>The root of the difference is in how Node.js evaluates these statements vs. how the Chrome development tools do.</p>\n\n<h2>What Node.js does</h2>\n\n<p>Node.js uses the <a href=\"http://nodejs.org/api/repl.html\">repl</a> module for this.</p>\n\n<p>From the Node.js <a href=\"https://github.com/joyent/node/blob/master/lib/repl.js#L253\">REPL source code</a>:</p>\n\n<pre><code>  self.eval('(' + evalCmd + ')',\n            self.context,\n            'repl',\n            function(e, ret) {\n                if (e &amp;&amp; !isSyntaxError(e)) \n                    return finish(e);                    \n                if (typeof ret === 'function' &amp;&amp;\n                    /^[\\r\\n\\s]*function/.test(evalCmd) ||\n                    e) {\n                      // Now as statement without parens.\n                      self.eval(evalCmd, self.context, 'repl', finish);\n                } \n                else {\n                  finish(null, ret);\n                }\n            });\n</code></pre>\n\n<p>This acts just like running <code>({}+{})</code> in the Chrome developer tools, which also produces <code>\"[object Object][object Object]\"</code> as you'd expect.</p>\n\n<h2>What the chrome developer tools do</h2>\n\n<p>On the other hand <a href=\"https://chromium.googlesource.com/chromium/blink.git/+/master/Source/core/inspector/InjectedScriptSource.js\">Chrome dveloper tools does the following</a>:</p>\n\n<pre><code>  try {\n      if (injectCommandLineAPI &amp;&amp; inspectedWindow.console) {\n          inspectedWindow.console._commandLineAPI = new CommandLineAPI(this._commandLineAPIImpl, isEvalOnCallFrame ? object : null);\n          expression = \"with ((window &amp;&amp; window.console &amp;&amp; window.console._commandLineAPI) || {}) {\\n\" + expression + \"\\n}\";\n      }\n      var result = evalFunction.call(object, expression);\n      if (objectGroup === \"console\")\n          this._lastResult = result;\n      return result;\n  } \n  finally {\n      if (injectCommandLineAPI &amp;&amp; inspectedWindow.console)\n          delete inspectedWindow.console._commandLineAPI;\n  }\n</code></pre>\n\n<p>So basically, it performs a <code>call</code> on the object with the expression. The expression being:</p>\n\n<pre><code>with ((window &amp;&amp; window.console &amp;&amp; window.console._commandLineAPI) || {}) {\n    {}+{};// &lt;-- This is your code\n}\n</code></pre>\n\n<p>So, as you can see, the expression is being evaluted directly, without the wrapping parenthesis.</p>\n\n<h2>Why Node.js acts differently</h2>\n\n<p>Node.js's source justifies this:</p>\n\n<pre><code>// This catches '{a : 1}' properly.\n</code></pre>\n\n<p>Node did not always act like this. Here is <a href=\"https://github.com/joyent/node/commit/b45698e67629a894cc005efba5c39d0e8adae1b0#lib/repl.js\">the actual commit that changed it</a>. Ryan left the following comment on the change: \"Improve how REPL commands are evaled\" with an example of the difference.</p>\n\n<hr>\n\n<h3>Rhino</h3>\n\n<p>Update - OP was interested in how <strong>Rhino</strong> behaves (and why it behaves like the Chrome devtools and unlike nodejs).</p>\n\n<p>Rhino uses a completely different JS engine unlike the Chrome developer tools and Node.js's REPL which both use V8.</p>\n\n<p>Here is the basic pipe line of what happens when you eval a JavaScript command with Rhino in the Rhino shell.</p>\n\n<ul>\n<li><p>The shell runs <a href=\"https://github.com/mozilla/rhino/blob/master/toolsrc/org/mozilla/javascript/tools/shell/Main.java\"><code>org.mozilla.javascript.tools.shell.main</code></a>.</p></li>\n<li><p>In turn, it calls <a href=\"https://github.com/mozilla/rhino/blob/master/toolsrc/org/mozilla/javascript/tools/shell/Main.java#L340\">this</a> <code>new IProxy(IProxy.EVAL_INLINE_SCRIPT);</code> for example, if the code was passed directly with the inline switch -e.</p></li>\n<li><p>This hits IProxy's <a href=\"https://github.com/mozilla/rhino/blob/master/toolsrc/org/mozilla/javascript/tools/shell/Main.java#L102\"><code>run</code></a> method.</p></li>\n<li><p>It invokes <a href=\"https://github.com/mozilla/rhino/blob/master/toolsrc/org/mozilla/javascript/tools/shell/Main.java#L196-L202\"><code>evalInlineScript</code></a> (<a href=\"http://paste.ubuntu.com/5801684/\">src</a>). This simply compiles the string and evals it.</p></li>\n</ul>\n\n<p>Basically:</p>\n\n<pre><code> Script script = cx.compileString(scriptText, \"&lt;command&gt;\", 1, null);\n if (script != null) {\n     script.exec(cx, getShellScope()); // &lt;- just an eval\n }\n</code></pre>\n\n<p>Out of the three, Rhino's shell is the one that does the closest thing to an actual <code>eval</code> without any wrapping. Rhino's is the closest to an actual <code>eval()</code> statement and you can expect it to behave exactly like <code>eval</code> would.</p>\n",
                    "is_accepted": true,
                    "score": 110
                }
            ],
            "body": "<p>While <code>[] + []</code> is an empty string, <code>[] + {}</code> is <code>\"[object Object]\"</code>, and <code>{} + []</code> is <code>0</code>. Why is <code>{} + {}</code> NaN?</p>\n\n<pre><code>&gt; {} + {}\n  NaN\n</code></pre>\n\n<p>My question isn't why <code>({} + {}).toString()</code> is <code>\"[object Object][object Object]\"</code> while <code>NaN.toString()</code> is <code>\"NaN\"</code>, <a href=\"http://stackoverflow.com/a/9033306/1348195\">this part has an answer here already</a>.</p>\n\n<p>My question is why does this happen only on the client side? On the server side (<a href=\"http://en.wikipedia.org/wiki/Node.js\">Node.js</a>) <code>{} + {}</code> is <code>\"[object Object][object Object]\"</code>.</p>\n\n<pre><code>&gt; {} + {}\n'[object Object][object Object]'\n</code></pre>\n\n<hr>\n\n<p><strong>Summarizing</strong>:</p>\n\n<p>On the client side:</p>\n\n<pre><code> [] + []              // Returns \"\"\n [] + {}              // Returns \"[object Object]\"\n {} + []              // Returns 0\n {} + {}              // Returns NaN\n\n NaN.toString()       // Returns \"NaN\"\n ({} + {}).toString() // Returns \"[object Object][object Object]\"\n var a = {} + {};     // 'a' will be \"[object Object][object Object]\"\n</code></pre>\n\n<p>In Node.js:</p>\n\n<pre><code> [] + []   // Returns \"\" (like on the client)\n [] + {}   // Returns \"[object Object]\" (like on the client)\n {} + []   // Returns \"[object Object]\" (not like on the client)\n {} + {}   // Returns \"[object Object][object Object]\" (not like on the client)\n</code></pre>\n",
            "last_activity_date": 1372259600,
            "question_id": 17268468,
            "score": 108,
            "tags": [
                "javascript",
                "node.js",
                "eval",
                "google-chrome-devtools",
                "web-developer-toolbar"
            ],
            "title": "Why {} + {} is NaN only on the client side? Why not in Node.js?"
        },
        {
            "answer_count": 20,
            "answers": [
                {
                    "body": "<p>If the modal container has a fixed or relative position or is within an element with fixed or relative position this behavior will occur.</p>\n\n<p><strong>Make sure the modal container and all of its parent elements are positioned the default way to fix the problem.</strong></p>\n\n<p>Here are a couple ways to do this:</p>\n\n<ol>\n<li>Easiest way is to just move the modal div so it is outside any elements with special positioning.  One good place might be just before the closing body tag <code>&lt;/body&gt;</code>.</li>\n<li>Alternatively, you can remove <code>position:</code> CSS properties from the modal and its ancestors until the problem goes away.  This might change how the page looks and functions, however.</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 155
                },
                {
                    "body": "<p>I got it to work by giving a high z-index value to the modal window <strong>AFTER</strong> opening it. E.g.:</p>\n\n<pre><code>$(\"#myModal\").modal(\"show\");\n$(\"#myModal\").css(\"z-index\", \"1500\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>The problem has to do with the positioning of the parent containers. You can easily \"move\" your modal out from these containers before displaying it. Here's how to do it if you were <code>show</code>ing your modal using script:</p>\n\n<pre><code>$('#myModal').appendTo(\"body\").modal('show');\n</code></pre>\n\n<p>Or, if you launch modal using buttons, drop the <code>model('show')</code> and just do:</p>\n\n<pre><code>$('#myModal').appendTo(\"body\") \n</code></pre>\n\n<p>This will keep all normal functionality, allowing you to show the modal using a button.</p>\n",
                    "is_accepted": false,
                    "score": 80
                },
                {
                    "body": "<p>try overwrite class .modal-open overflow value from hidden to visible.</p>\n\n<pre><code>.modal-open {\n    overflow: visible;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I found that by adding an inline style tag to set \"display: none\" prevented this problem.  The position of the code did not have any effect.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>in your navbar <code>navbar-fixed-top</code> need <code>z-index = 1041</code>\nand also if u use <code>bootstarp-combined.min.css</code> the also change  <code>.navbar-fixed-top, .navbar-fixed-bottom</code> <code>z-index to 1041</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A but late on this but here is a generic solution -</p>\n\n<pre><code>    var checkeventcount = 1,prevTarget;\n    $('.modal').on('show.bs.modal', function (e) {\n        if(typeof prevTarget == 'undefined' || (checkeventcount==1 &amp;&amp; e.target!=prevTarget))\n        {  \n          prevTarget = e.target;\n          checkeventcount++;\n          e.preventDefault();\n          $(e.target).appendTo('body').modal('show');\n        }\n        else if(e.target==prevTarget &amp;&amp; checkeventcount==2)\n        {\n          checkeventcount--;\n        }\n     });\n</code></pre>\n\n<p>Visit this link - <a href=\"http://stackoverflow.com/questions/21126617/bootstrap-3-modal-disappearing-below-backdrop-when-using-a-fixed-sidebar/21127348#21127348\">Bootstrap 3 - modal disappearing below backdrop when using a fixed sidebar</a> for details.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Hi I had the same issue then I realize that when you using bootsrap 3.1 \nUnlike in older versions of bootsrap (2.3.2)\nthe html structure of the modal was changed!</p>\n\n<p><strong>you must wrap your modal header body and footer with modal-dialog and modal-content</strong>  </p>\n\n<pre><code>&lt;div class=\"modal hide fade\"&gt;\n\n  &lt;div class=\"modal-dialog\"&gt;\n    &lt;div class=\"modal-content\"&gt;\n\n    **here goes the modal header body and footer**\n\n    &lt;/div&gt;\n  &lt;/div&gt;\n\n &lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In my case, I had a wrapper with the following:</p>\n\n<pre><code>.wrapper { margin: 0 auto; position:relative; z-index:1;overflow:hidden;}\n</code></pre>\n\n<p>Only removed the z-index:1 and have no idea why fixed the problem. also for sure removing the relative position did but I needed it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can make a workaround but this will remove the fade from all the page. the modal will popup like fb popups. \nAfter opening the modal try</p>\n\n<pre><code> $('.modal-backdrop').removeClass('modal-backdrop');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Remove modal-backdrop background which is set to black in your bootstrap CSS</p>\n\n<p>See mine:</p>\n\n<pre><code>.modal-backdrop {\n    position: fixed; /*---- commented and it shows */\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 1030;\n    /*background-color: #000000; */\n}\n</code></pre>\n\n<p>and then add this background color and opacity of o.5. see mine:</p>\n\n<pre><code>.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1030; \n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0.5;\n</code></pre>\n\n<p>}</p>\n\n<p>NOTE: Though these changes were made in the boostrap css, I used angular-strap and I didn't download or use the ng-animate css</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I have also encountered this problem and none of the solutions worked for me until i figured out i actually don't need a backdrop. You can easily remove the backdrop with the folowing code.</p>\n\n<pre><code>&lt;div class=\"modal fade\" id=\"createModal\" data-backdrop=\"false\"&gt;\n    &lt;div class=\"modal-dialog\"&gt;\n        &lt;div class=\"modal-content\"&gt;\n            &lt;div class=\"modal-header\"&gt;\n                &lt;h4&gt;Create Project&lt;/h4&gt;\n            &lt;/div&gt;\n            &lt;div class=\"modal-body\"&gt;Nog niet gemaakt&lt;/div&gt;\n            &lt;div class=\"modal-footer\"&gt;\n                &lt;button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"&gt;Close&lt;/button&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Note the data-backdrop attribute has been set te false</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I tried all options supplied above but didn't get it to work using those.</p>\n\n<p><strong>What did work:</strong> setting the z-index of the .modal-backdrop to -1.</p>\n\n<pre><code>.modal-backdrop {\n  z-index: -1;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Also, make sure that version of BootStrap css and js are the same ones. Different versions can also make modal appearing under background:</p>\n\n<p>For example:</p>\n\n<p>Bad:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css\"&gt;\n&lt;script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Good:</p>\n\n<pre><code>&lt;link href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css\" rel=\"stylesheet\" &gt;\n&lt;script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>add this to your style sheet:</p>\n\n<p><code>.modal-backdrop {\n      background-color: #000;\n      bottom: 0;\n      left: 0;\n      position: fixed;\n      right: 0;\n      top: 0;\n      z-index: 0 !important;\n    }</code></p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>An other way to approach this is to remove the z-index from the <code>.modal-backdrop</code> in bootstrap.css. This will cause the backdrop to be on the same level as the rest of your body (it will still fade) and your modal to be on top.</p>\n\n<p><code>.modal-backdrop</code> looks like this</p>\n\n<pre><code>.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: #000000;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Try this out <a href=\"https://github.com/nakupanda/bootstrap3-dialog/releases/tag/v1.34.0\" rel=\"nofollow\">https://github.com/nakupanda/bootstrap3-dialog/releases/tag/v1.34.0</a></p>\n\n<p>Bootstrap Modal 3.3.0 generates the modal-backdrop inside the main element, while previously it's appended to body element.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This behaviour sometimes occurs when there is an unclosed tag, most especially an unclosed <code>&lt;/div&gt;</code>. You can review where your modal is located and ensure all tags are properly closed or better yet move the div modal closer to the bottom of the page, imediately before <code>&lt;/body&gt;</code> tag enclosure</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In my case, the cause was boostrap.min.css :) once I excluded it form my html file as a reference, the dialog showed in forn of the modal shade :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've simply set:</p>\n\n<pre><code>#myModal {\n    z-index: 1500;\n}\n</code></pre>\n\n<p>and it works.... </p>\n\n<p>For the original question: </p>\n\n<pre><code>.my-module {\n    z-index: 1500;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have used the code for my modal straight from the Bootstrap example, and have included only the bootstrap.js (and not bootstrap-modal.js). However, my modal is appearing underneath the grey fade (backdrop) and is non editable.</p>\n\n<p>Here's what it looks like:</p>\n\n<p><img src=\"http://i.stack.imgur.com/qSypO.png\" alt=\"modal hiding behind backdrop\"></p>\n\n<p>See <a href=\"http://jsfiddle.net/hq4fzvh9/1/\">this fiddle</a> for <em>one</em> way  to reproduce this problem. The basic structure of that code is like this:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;body&gt;\n    &lt;p&gt;Lorem ipsum dolor sit amet.&lt;/p&gt;    \n\n    &lt;div class=\"my-module\"&gt;\n        This container contains the modal code.\n        &lt;div class=\"modal fade\"&gt;\n            &lt;div class=\"modal-dialog\"&gt;\n                &lt;div class=\"modal-content\"&gt;\n                    &lt;div class=\"modal-body\"&gt;Modal&lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<pre class=\"lang-css prettyprint-override\"><code>body {\n    padding-top: 50px;\n}\n\n.my-module {\n    position: fixed;\n    top: 0;\n    left: 0;\n}\n</code></pre>\n\n<p>Any ideas why this is or what I can do to fix this?</p>\n",
            "last_activity_date": 1423756949,
            "question_id": 10636667,
            "score": 103,
            "tags": [
                "javascript",
                "css",
                "twitter-bootstrap",
                "modal-dialog"
            ],
            "title": "Bootstrap modal appearing under background"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>File one:</p>\n\n<pre><code>angular.module('myApp.controllers', []);\n</code></pre>\n\n<p>File two:</p>\n\n<pre><code>angular.module('myApp.controllers').controller('Ctrlr1', ['$scope', '$http', function($scope, $http){\n\n}]);\n</code></pre>\n\n<p>File three:</p>\n\n<pre><code>angular.module('myApp.controllers').controller('Ctlr2', ['$scope', '$http', function($scope, $http){\n\n}]);\n</code></pre>\n\n<p>Include in that order. I recommend 3 files so the module declaration is on its own.</p>\n\n<hr>\n\n<p>As for folder structure there are many many many opinions on the subject, but these two are pretty good</p>\n\n<p><a href=\"https://github.com/angular/angular-seed\">https://github.com/angular/angular-seed</a></p>\n\n<p><a href=\"http://briantford.com/blog/huuuuuge-angular-apps.html\">http://briantford.com/blog/huuuuuge-angular-apps.html</a></p>\n",
                    "is_accepted": true,
                    "score": 134
                },
                {
                    "body": "<p>Using the angular.module API <strong>with an array at the end</strong> will tell angular to create a new module:</p>\n\n<p><strong>myApp.js</strong></p>\n\n<pre><code>// It is like saying \"create a new module\"\nangular.module('myApp.controllers', []); // Notice the empty array at the end here\n</code></pre>\n\n<p>Using it without the array is actually a getter function. So to seperate your controllers, you can do:</p>\n\n<p><strong>Ctrl1.js</strong></p>\n\n<pre><code>// It is just like saying \"get this module and create a controller\"\nangular.module('myApp.controllers').controller('Ctrlr1', ['$scope', '$http', function($scope, $http) {}]);\n</code></pre>\n\n<p><strong>Ctrl2.js</strong></p>\n\n<pre><code>angular.module('myApp.controllers').controller('Ctrlr2', ['$scope', '$http', function($scope, $http) {}]);\n</code></pre>\n\n<p>During your javascript imports, just make sure <strong>myApp.js</strong> is after AngularJS but before any controllers / services / etc...otherwise angular won't be able to initialize your controllers.</p>\n",
                    "is_accepted": false,
                    "score": 72
                },
                {
                    "body": "<p>Although both answers are technically correct, I want to introduce a different syntax choice for this answer. This imho makes it easier to read what's going on with injection, differentiate between etc.</p>\n\n<p>File One</p>\n\n<pre><code>// Create the module that deals with controllers\nangular.module('myApp.controllers', []);\n</code></pre>\n\n<p>File Two</p>\n\n<pre><code>// Here we get the module we created in file one\nangular.module('myApp.controllers')\n\n// We are adding a function called Ctrl1\n// to the module we got in the line above\n.controller('Ctrl1', Ctrl1);\n\n// Inject my dependencies\nCtrl1.$inject = ['$scope', '$http'];\n\n// Now create our controller function with all necessary logic\nfunction Ctrl1($scope, $http) {\n  // Logic here\n}\n</code></pre>\n\n<p>File Three</p>\n\n<pre><code>// Here we get the module we created in file one\nangular.module('myApp.controllers')\n\n// We are adding a function called Ctrl2\n// to the module we got in the line above\n.controller('Ctrl2', Ctrl2);\n\n// Inject my dependencies\nCtrl2.$inject = ['$scope', '$http'];\n\n// Now create our controller function with all necessary logic\nfunction Ctrl2($scope, $http) {\n  // Logic here\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have all of my AngularJS controllers in one file, controllers.js.  This file is structured as follows:</p>\n\n<pre><code>angular.module('myApp.controllers', [])\n  .controller('Ctrlr1', ['$scope', '$http', function($scope, $http) {   \n  }])\n  .controller('Ctlr2', ['$scope', '$http', function($scope, $http) }\n  }])\n</code></pre>\n\n<p>What I'd like to do is put Ctrl1 and Ctrl2 into separate files.  I would then include both files in my index.html, but how should that be structured?  I tried doing some thing like this and it throws an error in the web browser console saying it can't find my controllers.  Any hints?</p>\n\n<p>I searched StackOverflow and found this similar question - however, this syntax is using a different framework (CoffeeScript) on top of Angular, and so I haven't been able to follow.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/12655890/angularjs-how-do-i-create-controllers-in-multiple-files\">AngularJS: How do I create controllers in multiple files</a></p>\n",
            "last_activity_date": 1421812989,
            "question_id": 20087627,
            "score": 97,
            "tags": [
                "javascript",
                "angularjs",
                "controller"
            ],
            "title": "How to create separate AngularJS controller files?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>First off, remember that JavaScript is a prototypal language, and not a strongly typed Object Oriented language. <code>Foo</code> isn't a class, it's a function, which is an object. You can instantiate an object <em>from</em> that function using the <code>new</code> keyword which will allow you to create something similar to a class in a standard OOP language.</p>\n\n<p>I'd suggest ignoring <code>__proto__</code> most of the time because it has poor cross browser support, and instead focus on learning about how <code>prototype</code> works.</p>\n\n<p>If you have an instance of an object created from a function<sup>[1]</sup> and you access one of its members (methods, attributes, properties, constants etc) in any way, the access will flow down the prototype hierarchy until it either (a) finds the member, or (b) doesn't find another prototype.</p>\n\n<p>The hierarchy starts on the object that was called, and then searches it's prototype object. If the prototype object has a prototype, it repeats, if no prototype exists, <code>undefined</code> is returned.</p>\n\n<p>For example:</p>\n\n<pre><code>foo = {bar: 'baz'};\nalert(foo.bar); //alerts \"baz\"\n\nfoo = {};\nalert(foo.bar); //alerts undefined\n\nfunction Foo(){}\nFoo.prototype = {bar: 'baz'};\nf = new Foo();\nalert(f.bar);\n//alerts \"baz\" because the object f doesn't have an attribute \"bar\"\n//so it checks the prototype\nf.bar = 'buzz';\nalert( f.bar ); //alerts \"buzz\" because f has an attribute \"bar\" set\n</code></pre>\n\n<p><sub>[1]: essentially a class instance created by a constructor, but there are many nuanced differences that I don't want to mislead you</sub></p>\n\n<hr>\n\n<p>It looks to me like you've at least somewhat understood these \"basic\" parts already, but I need to make them explicit just to be sure.</p>\n\n<p>In JavaScript, everything is an object.</p>\n\n<p><strong>everything</strong> is an object.</p>\n\n<p>except null, and undefined.</p>\n\n<p><code>function Foo(){}</code> doesn't just define a new function, it defines a new function object that can be accessed using <code>Foo</code>.</p>\n\n<p>This is why you can access <code>Foo</code>'s prototype with <code>Foo.prototype</code>.</p>\n\n<p>What you can also do is set <em>more functions</em> on <code>Foo</code>:</p>\n\n<pre><code>Foo.talk = function () {\n  alert('hello world!');\n};\n</code></pre>\n\n<p>This new function can be accessed using:</p>\n\n<pre><code>Foo.talk();\n</code></pre>\n\n<p>I hope by now you're noticing a similarity between functions on a function object and a static method.</p>\n\n<p>Think of <code>f = new Foo();</code> as creating a class instance, <code>Foo.prototype.bar = function(){...}</code> as defining a shared method for the class, and <code>Foo.baz = function(){...}</code> as defining a public static method for the class.</p>\n",
                    "is_accepted": true,
                    "score": 154
                },
                {
                    "body": "<p>Call a static method from an instance:</p>\n\n<pre><code>function Clazz() {};\nClazz.staticMethod = function() {\n    alert('STATIC!!!');\n};\n\nClazz.prototype.func = function() {\n    this.constructor.staticMethod();\n}\n\nvar obj = new Clazz();\nobj.func(); // &lt;- Alert's \"STATIC!!!\"\n</code></pre>\n\n<p>Simple Javascript Class Project: <a href=\"https://github.com/reduardo7/sjsClass\">https://github.com/reduardo7/sjsClass</a></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>You can achieve it as below:</p>\n\n<pre><code>function Foo() {};\n\nFoo.talk = function() { alert('I am talking.'); };\n</code></pre>\n\n<p>You can now invoke \"talk\" function as below:</p>\n\n<pre><code>Foo.talk();\n</code></pre>\n\n<p>You can do this because in JavaScript, functions are objects as well. \"zzzzBov\" has answered it as well but it's a lengthy read.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Here is a good example to demonstrate how Javascript works with static/instance variables and methods.</p>\n\n<pre><code>function Animal(name) {\n    Animal.count = Animal.count+1||1;// static variables, use function name \"Animal\"\n    this.name = name; //instance variable, using \"this\"\n}\n\nAnimal.showCount = function () {//static method\n    alert(Animal.count)\n}\n\nAnimal.prototype.showName=function(){//instance method\n    alert(this.name);\n}\n\nvar mouse = new Animal(\"Mickey\");\nvar elephant = new Animal(\"Haddoop\");\n\nAnimal.showCount();  // static method, count=2\nmouse.showName();//instance method, alert \"Mickey\"\nmouse.showCount();//Error!! mouse.showCount is not a function, which is different from  Java\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I know this will work</p>\n\n<pre><code>function Foo() {};\nFoo.prototype.talk = function () {\n    alert('hello~\\n');\n};\n\nvar a = new Foo;\na.talk(); // 'hello~\\n'\n</code></pre>\n\n<p>But if I want to call</p>\n\n<pre><code>Foo.talk() // this will not work\nFoo.prototype.talk() // this works correctly\n</code></pre>\n\n<p>I find some methods to make <code>Foo.talk</code> work, </p>\n\n<ol>\n<li><code>Foo.__proto__ = Foo.prototype</code></li>\n<li><code>Foo.talk = Foo.prototype.talk</code></li>\n</ol>\n\n<p>Is there some others ways to do this? I don't know whether it is right to do so. Do you use <code>class method</code> or <code>static method</code> in your javascript code?</p>\n",
            "last_activity_date": 1422879270,
            "question_id": 7694501,
            "score": 93,
            "tags": [
                "javascript",
                "oop"
            ],
            "title": "class/static method in javascript?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You can actually just use <code>Array</code>'s <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"><code>slice</code></a> function on an arguments object, and it will convert it into a standard JavaScript array. You'll just have to reference it manually through Array's prototype:</p>\n\n<pre><code>function sortArgs() {\n    var args = Array.prototype.slice.call(arguments);\n    return args.sort();\n}\n</code></pre>\n\n<p>Why does this work? Well, here's an excerpt from the <a href=\"http://es5.github.io/#x15.4.4.10\">ECMAScript 5 documentation itself</a>:</p>\n\n<blockquote>\n  <p><strong>NOTE</strong>: The <code>slice</code> function is intentionally generic; it does not require that its <strong>this</strong> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method. Whether the <code>slice</code> function can be applied successfully to a host object is implementation-dependent.</p>\n</blockquote>\n\n<p>Therefore, <code>slice</code> works on anything that has a <code>length</code> property, which <code>arguments</code> conveniently does.</p>\n\n<hr>\n\n<p>If <code>Array.prototype.slice</code> is too much of a mouthful for you, you can abbreviate it slightly by using array literals:</p>\n\n<pre><code>var args = [].slice.call(arguments);\n</code></pre>\n\n<p>However, I tend to feel that the former version is more explicit, so I'd prefer it instead. Abusing the array literal notation feels hacky and looks strange.</p>\n\n<hr>\n\n<p>Furthermore, in the upcoming ES6 Harmony proposal, you can use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from</code></a> to efficiently convert Array-like objects to Array instances. Unfortunately, <code>Array.from</code> is currently only implemented in newer versions of Firefox, and it is relatively unusable due to its lack of browser support.</p>\n",
                    "is_accepted": true,
                    "score": 213
                },
                {
                    "body": "<p>If you're using jQuery, the following is a good deal easier to remember in my opinion:</p>\n\n<pre><code>function sortArgs(){\n  return $.makeArray(arguments).sort();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>function sortArgs(){ return [].slice.call(arguments).sort() }\n\n// Returns the arguments object itself\nfunction sortArgs(){ return [].sort.call(arguments) }\n</code></pre>\n\n<p>Some array methods are intentionally made not to require the target object to be an actual array. They only require the target to have a property named <strong>length</strong> and indices (which must be zero or larger integers).</p>\n\n<pre><code>[].sort.call({0:1, 1:0, length:2}) // =&gt; ({0:0, 1:1, length:2})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>This is a very old question, but I think I have a solution that is slightly easier to type than previous solutions and doesn't rely on external libraries:</p>\n\n<pre><code>function sortArguments() {\n  return Array.apply(null, arguments).sort();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://jsperf.com/ghel-args\" rel=\"nofollow\">Here is benchmark</a> of several methods converting arguments into array. </p>\n\n<p>As for me, the best solution for small amount of arguments is:</p>\n\n<pre><code>function sortArgs (){\n  var q = [];\n  for (var k = 0, l = arguments.length; k &lt; l; k++){\n    q[k] = arguments[k];\n  }\n  return q.sort();\n}\n</code></pre>\n\n<p>For other cases:</p>\n\n<pre><code>function sortArgs (){ return Array.apply(null, arguments).sort(); }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use:</p>\n\n<pre><code>function sortArguments() {\n  return arguments.length === 1 ? [arguments[0]] :\n                 Array.apply(null, arguments).sort();\n}\n</code></pre>\n\n<p><code>Array(arg1, arg2, ...)</code> returns <code>[arg1, arg2, ...]</code></p>\n\n<p><code>Array(str1)</code> returns <code>[str1]</code></p>\n\n<p><code>Array(num1)</code> returns an array that has <code>num1</code> elements</p>\n\n<p>You must check number of arguments!</p>\n\n<p><code>Array.slice</code> version (slower):</p>\n\n<pre><code>function sortArguments() {\n  return Array.prototype.slice.call(arguments).sort();\n}\n</code></pre>\n\n<p><code>Array.push</code> version (slower, faster than slice):</p>\n\n<pre><code>function sortArguments() {\n  var args = [];\n  Array.prototype.push.apply(args, arguments);\n  return args.sort();\n}\n</code></pre>\n\n<p>Move version (slower, but small size is faster):</p>\n\n<pre><code>function sortArguments() {\n  var args = [];\n  for (var i = 0; i &lt; arguments.length; ++i)\n    args[i] = arguments[i];\n  return args.sort();\n}\n</code></pre>\n\n<p><code>Array.concat</code> version (slowest):</p>\n\n<pre><code>function sortArguments() {\n  return Array.prototype.concat.apply([], arguments).sort();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>It's also worth referencing <a href=\"https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#3-managing-arguments\" rel=\"nofollow\">this Bluebird promises library wiki page</a> that shows how to manage the <code>arguments</code> object into array in a way that makes the function optimizable under V8 JavaScript engine:</p>\n\n<pre><code>function doesntLeakArguments() {\n    var args = new Array(arguments.length);\n    for(var i = 0; i &lt; args.length; ++i) {\n        args[i] = arguments[i];\n    }\n    return args;\n}\n</code></pre>\n\n<p>This method is used in favor of <code>var args = [].slice.call(arguments);</code>. The author also shows how a build step can help reduce the verbosity.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Another Answer.</p>\n\n<p>Use Black Magic Spells:</p>\n\n<pre><code>function sortArguments() {\n  arguments.__proto__ = Array.prototype;\n  return arguments.slice().sort();\n}\n</code></pre>\n\n<p>Firefox, Chrome, Node.js, IE11 are OK.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>//var args must be create before and contain an Arguments Object\nvar i = 0;\nvar loop = 1000000;\nvar t = Date.now();\nwhile(i &lt; loop)\n{\n    Array.prototype.slice.call(args, 0); \n    i++;\n}\nconsole.log(Date.now() - t);\n\ni = 0,\nt = Date.now();\nwhile(i &lt; loop)\n{\n    Array.apply(null, args);\n    i++;\n}\nconsole.log(Date.now() - t);\n</code></pre>\n\n<p>RESULT?</p>\n\n<p>Array.prototype.slice.call(args, 0); => <strong>1172ms</strong></p>\n\n<p><strong>Array.apply(null, args); => <em>868ms</em></strong></p>\n\n<p>Enjoy !</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The <code>arguments</code> object in JavaScript is an odd wart\u2014it acts just like an array in most situations, but it's not <em>actually</em> an array object. Since it's <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments\">really something else entirely</a>, it doesn't have the useful functions from <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype\"><code>Array.prototype</code></a> like <code>forEach</code>, <code>sort</code>, <code>filter</code>, and <code>map</code>.</p>\n\n<p>It's trivially easy to construct a new array from an arguments object with a simple for loop. For example, this function sorts its arguments:</p>\n\n<pre><code>function sortArgs() {\n    var args = [];\n    for (var i = 0; i &lt; arguments.length; i++)\n        args[i] = arguments[i];\n    return args.sort();\n}\n</code></pre>\n\n<p>However, this is a rather pitiful thing to have to do simply to get access to the extremely useful JavaScript array functions. Is there a built-in way to do it using the standard library?</p>\n",
            "last_activity_date": 1418706206,
            "question_id": 960866,
            "score": 118,
            "tags": [
                "javascript",
                "arrays",
                "sorting",
                "arguments",
                "varargs"
            ],
            "title": "How can I convert the &quot;arguments&quot; object to an array in JavaScript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Here's code from a sample of mine.  It's async and returns a JSON object.  It could do any get request.  Note there's more optimal ways (just a sample) - for example, instead of concatenating the chunks you put into an array and join it etc...  Hopefully, it gets you started in the right direction:</p>\n\n<pre><code>var http = require(\"http\");\nvar https = require(\"https\");\n\n/**\n * getJSON:  REST get request returning JSON object(s)\n * @param options: http options object\n * @param callback: callback to pass the results JSON object(s) back\n */\nexports.getJSON = function(options, onResult)\n{\n    console.log(\"rest::getJSON\");\n\n    var prot = options.port == 443 ? https : http;\n    var req = prot.request(options, function(res)\n    {\n        var output = '';\n        console.log(options.host + ':' + res.statusCode);\n        res.setEncoding('utf8');\n\n        res.on('data', function (chunk) {\n            output += chunk;\n        });\n\n        res.on('end', function() {\n            var obj = JSON.parse(output);\n            onResult(res.statusCode, obj);\n        });\n    });\n\n    req.on('error', function(err) {\n        //res.send('error: ' + err.message);\n    });\n\n    req.end();\n};\n</code></pre>\n\n<p>It's called by creating an options objects like:</p>\n\n<pre><code>var options = {\n    host: 'somesite.com',\n    port: 443,\n    path: '/some/path',\n    method: 'GET',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n};\n</code></pre>\n\n<p>and providing a callback function.</p>\n\n<p>For example, in a service, I require the rest module above and then do this.</p>\n\n<pre><code>    rest.getJSON(options,\n        function(statusCode, result)\n        {\n            // I could work with the result html/json here.  I could also just return it\n            console.log(\"onResult: (\" + statusCode + \")\" + JSON.stringify(result));\n            res.statusCode = statusCode;\n            res.send(result);\n        });\n</code></pre>\n\n<p>I have a more complete sample if you're interested.</p>\n\n<p>UPDATE:</p>\n\n<p>Here is the more complete integrated sample:  <a href=\"https://github.com/bryanmacfarlane/nodefun\">https://github.com/bryanmacfarlane/nodefun</a></p>\n\n<p>Look in /express/helloworld</p>\n\n<p>It's a sample where node.js is using parse.com as a back so it sends REST requests over http.  To get it to work, you need the parse.com app id/key in /service/secrets.js</p>\n",
                    "is_accepted": true,
                    "score": 69
                },
                {
                    "body": "<p>Check out <a href=\"https://github.com/spire-io/shred/\" rel=\"nofollow\">shred</a>.  It's a node HTTP client created and maintained by <a href=\"http://www.spire.io/\" rel=\"nofollow\">spire.io</a> that handles redirects, sessions, and JSON responses.  It's great for interacting with rest APIs.  See <a href=\"http://blog.amt.in/shred-an-http-client-library-for-nodejs\" rel=\"nofollow\">this blog post</a> for more details.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"https://github.com/mikeal/request\">Request</a> and <a href=\"http://visionmedia.github.com/superagent/\">Superagent</a> are pretty good libraries to use.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Try using the simple <a href=\"http://nodejs.org/api/http.html#http_http_get_options_callback\"><code>http.get(options, callback)</code> function</a> in node.js:</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>var http = require('http');\nvar options = {\n  host: 'www.google.com',\n  path: '/index.html'\n};\n\nvar req = http.get(options, function(res) {\n  console.log('STATUS: ' + res.statusCode);\n  console.log('HEADERS: ' + JSON.stringify(res.headers));\n\n  // Buffer the body entirely for processing as a whole.\n  var bodyChunks = [];\n  res.on('data', function(chunk) {\n    // You can process streamed parts here...\n    bodyChunks.push(chunk);\n  }).on('end', function() {\n    var body = Buffer.concat(bodyChunks);\n    console.log('BODY: ' + body);\n    // ...and/or process the entire body here.\n  })\n});\n\nreq.on('error', function(e) {\n  console.log('ERROR: ' + e.message);\n});\n</code></pre>\n\n<p>There is also a general <a href=\"http://nodejs.org/api/http.html#http_http_request_options_callback\"><code>http.request(options, callback)</code> function</a> which allows you to specify the request method and other request details.</p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>Check out <a href=\"https://github.com/SamDecrock/node-httpreq\" rel=\"nofollow\">httpreq</a>: it's a node library I created because I was frustrated there was no simple http GET or POST module out there ;-)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can also use <a href=\"http://ranm8.github.io/requestify\">Requestify</a>, a really cool and very simple HTTP client I wrote for nodeJS + it supports caching.</p>\n\n<p>Just do the following for GET method request:</p>\n\n<pre><code>var requestify = require('requestify');\n\nrequestify.get('http://example.com/api/resource')\n  .then(function(response) {\n      // Get the response body (JSON parsed or jQuery object for XMLs)\n      response.getBody();\n  }\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Look at request module. Reference here <a href=\"http://www.sitepoint.com/making-http-requests-in-node-js/\" rel=\"nofollow\">http://www.sitepoint.com/making-http-requests-in-node-js/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://unirest.io/\" rel=\"nofollow\">Unirest</a> is the best library I've come across for making HTTP requests from Node.  It's aiming at being a multiplatform framework, so learning how it works on Node will serve you well if you need to use an HTTP client on Ruby, PHP, Java, Python, Objective C, .Net or Windows 8 as well.  As far as I can tell the unirest libraries are mostly backed by existing HTTP clients (e.g. on Java, the Apache HTTP client, on Node, <a href=\"https://github.com/mikeal/request\" rel=\"nofollow\">Mikeal's Request libary</a>) - Unirest just puts a nicer API on top.</p>\n\n<p>Here are a couple of code examples for Node.js:</p>\n\n<pre><code>var unirest = require('unirest')\n\n// GET a resource\nunirest.get('http://httpbin.org/get')\n  .query({'foo': 'bar'})\n  .query({'stack': 'overflow'})\n  .end(function(res) {\n    if (res.error) {\n      console.log('GET error', res.error)\n    } else {\n      console.log('GET response', res.body)\n    }\n  })\n\n// POST a form with an attached file\nunirest.post('http://httpbin.org/post')\n  .field('foo', 'bar')\n  .field('stack', 'overflow')\n  .attach('myfile', 'examples.js')\n  .end(function(res) {\n    if (res.error) {\n      console.log('POST error', res.error)\n    } else {\n      console.log('POST response', res.body)\n    }\n  })\n</code></pre>\n\n<p>You can jump straight to the Node docs <a href=\"http://unirest.io/nodejs.html\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How can I make an HTTP request from within node/express? I need to connect to another service. I am hoping the call is async and that the callback contains the remote servers response.</p>\n",
            "last_activity_date": 1399921610,
            "question_id": 9577611,
            "score": 43,
            "tags": [
                "javascript",
                "node.js",
                "express",
                "httprequest"
            ],
            "title": "HTTP GET Request in Node.js Express"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Is there a way to do a JSONP request using POST/PUT/DELETE?</p>\n</blockquote>\n\n<p>No there isn't.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>No. Consider what JSONP is: an injection of a new <code>&lt;script&gt;</code> tag in the document. The browser performs a <code>GET</code> request to pull the script pointed to by the <code>src</code> attribute. There's no way to specify any other HTTP verb when doing this.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Actually - there is a way to support POST requests. \nAnd there is no need in a PROXI server - just a small utility HTML page that is described bellow.</p>\n\n<h3>Here's how you get Effectively a POST cross-domain call, including attached files and multi-part and all :)</h3>\n\n<p>Here first are the steps in <strong>understanding</strong> the idea, after that - find an implementation sample.</p>\n\n<p><strong>How JSONP of jQuery is implemented, and why doesn't it support POST requests?</strong></p>\n\n<p>While the traditional JSONP is implemented by creating a script element and appending it into the DOM - what results inforcing the browser to fire an HTTP request to retrieve the source for the  tag, and then execute it as JavaScript, the HTTP request that the browser fires is simple GET.</p>\n\n<p><strong>What is not limited to GET requests?</strong> </p>\n\n<p>A FORM. Submit the FORM while specifing <code>action</code> the cross-domain server.\nA FORM tag can be created completely using a script, populated with all fields using script, set all necessary attributes, injected into the DOM, and then submitted - all using script.</p>\n\n<p><strong>But how can we submit a FORM without refreshing the page?</strong> </p>\n\n<p>We specify the <code>target</code> the form to an IFRAME in the same page. \nAn IFRAME can also be created, set, named and injected to the DOM using script.</p>\n\n<p><strong>But How can we hide this work from the user?</strong> \nWe'll contain both FORM and IFRAME in a hidden DIV using <code>style=\"display:none\"</code></p>\n\n<p>(and here's the most complicated part of the technique, be patient)</p>\n\n<p><strong>But IFRAME from another domain cannot call a callback on it's top-level document. How to overcome that?</strong> </p>\n\n<p>Indeed , if a response from FORM submit is a page from another domain, any script communication between the top-level page and the page in the IFRAME results in \"access denied\". So the server cannot callback using a script. What can the server can do? <strong>redirect</strong>. The server may redirect to any page - including pages in the same domain as the top-level document - pages that can invoke the callback for us.</p>\n\n<p><strong>How can a server redirect?</strong></p>\n\n<p>two ways: </p>\n\n<ol>\n<li>Using client side script like <code>&lt;Script&gt;location.href = 'some-url'&lt;/script&gt;</code></li>\n<li>Using HTTP-Header. See: <a href=\"http://www.webconfs.com/how-to-redirect-a-webpage.php\">http://www.webconfs.com/how-to-redirect-a-webpage.php</a></li>\n</ol>\n\n<p><strong>So I end up with another page? How does it help me?</strong></p>\n\n<p>This is a simple utility page that will be used from all cross-domain calls. Actually, this page is in-fact a kind of a proxi, but it is not a server, but a <em>simple and static HTML page</em>, that anybody with notepad and a browser can use.</p>\n\n<p>All this page has to do is invoke the callback on the top-level document, with the response-data from the server. Client-Side scripting has access to all URL parts, and the server can put it's response there encoded as part of it, as well as the name of the callback that has to be invoked. Means - this page can be a static and HTML page, and does not have to be a dynamic server-side page :)</p>\n\n<p>This utility page will take the information from the URL it runs in - specifically in my implementation bellow - the Query-String parameters (or you can write your own implementation using anchor-ID - i.e the part of a url right to the \"#\" sign). And since this page is static - it can be even allowed to be cached :)</p>\n\n<p><strong>Won't adding for every POST request a DIV, a SCRIPT and an IFRAME eventually leak memory?</strong> </p>\n\n<p>If you leave it in the page - it will. If you clean after you - it will not. All we have to do is give an ID to the DIV that we can use to celan-up the DIV and the FORM and IFRAME inside it whenever the response arrives from the server, or times out.</p>\n\n<p><strong>What do we get?</strong></p>\n\n<h2>Effectively a POST cross-domain call, including attached files and multi-part and all :)</h2>\n\n<p><strong>What are the limits?</strong></p>\n\n<ul>\n<li>The server response is limited to whatever fits into a redirection.</li>\n<li>The server must ALWAYS return a REDIRECT to a POST requests. That include 404 and 500 errors.\nAlternatively - create a timeout on the client just before firing the request, so you'll have a chance to detect requests that have not returned.</li>\n<li>not everybody can understand all this and all the stages involved. it's a kind of an infrastructure level work, but once you get it running - it rocks :)</li>\n</ul>\n\n<p><strong>Can I use it for PUT and DELETE calls?</strong></p>\n\n<p>FORM tag does not PUT and DELETE.\nBut that's better then nothing :)</p>\n\n<p><strong>Ok, got the concept. How is it done technically?</strong></p>\n\n<p>What I do is:</p>\n\n<p>I create the DIV, style it as invisible, and append it to the DOM. I also give it an ID that I can clean it up from the DOM after the server response has arrived (the same way JQuery cleans it's JSONP SCRIPT tasgs - but the DIV). </p>\n\n<p>Then I <em>compose</em> a string that contains both IFRAME and FORM - with all attributes, properties and input fields, and inject it into the invisible DIV. <strong>it is important to inject this string into the DIV only AFTER the div is in the DOM.</strong> If not - it will not work on all browsers.</p>\n\n<p>After that - I obtain a reference to the FORM and submit it.\nJust remember one line before that - to set a <strong>Timeout callback</strong> in case the server does not respond, or responds in a wrong way.</p>\n\n<p>The callback function contains the clean-up code. It is also called by timer in case of a response-timeout (and cleans it's timeout-timer when a server response arrives).</p>\n\n<p><strong>Show me the code!</strong></p>\n\n<p>The code snippet bellow is totally \"neutral\" on \"pure\" javascript, and declares whatever utility it needs. Just for simplification of explaining the idea - it all runs on the global scope, however it should be a little more sophisticated...</p>\n\n<p>Organize it in functions as you may and parameterize what you need - but make sure that all parts that need to see each other run on the same scope :)</p>\n\n<p>For this example - assume the client runs on <a href=\"http://samedomain.com\">http://samedomain.com</a> and the server runs on <a href=\"http://crossdomain.com\">http://crossdomain.com</a>.</p>\n\n<p><strong>The script code on the top-level document</strong></p>\n\n<pre><code>//declare the Async-call callback function on the global scope\nfunction myAsyncJSONPCallback(data){\n    //clean up \n    var e = document.getElementById(id);\n    if (e) e.parentNode.removeChild(e);\n    clearTimeout(timeout);\n\n    if (data &amp;&amp; data.error){\n        //handle errors &amp; TIMEOUTS\n        //...\n        return;\n    }\n\n    //use data\n    //...\n}\n\nvar serverUrl          = \"http://crossdomain.com/server/page\"\n  , params = { param1  : \"value of param 1\"      //I assume this value to be passed\n             , param2  : \"value of param 2\"      //here I just declare it...\n             , callback: \"myAsyncJSONPCallback\" \n             }\n  , clientUtilityUrl   = \"http://samedomain.com/utils/postResponse.html\"\n  , id     = \"some-unique-id\"// unique Request ID. You can generate it your own way\n  , div    = document.createElement(\"DIV\")       //this is where the actual work start!\n  , HTML   = [ \"&lt;IFRAME name='ifr_\",id,\"'&gt;&lt;/IFRAME&gt;\"  \n             , \"&lt;form target='ifr_\",id,\"' method='POST' action='\",serverUrl \n             , \"' id='frm_\",id,\"' enctype='multipart/form-data'&gt;\"\n             ]\n  , each, pval, timeout;\n\n//augment utility func to make the array a \"StringBuffer\" - see usage bellow\nHTML.add = function(){\n              for (var i =0; i &lt; arguments.length; i++) \n                  this[this.length] = arguments[i];\n           }\n\n//add rurl to the params object - part of infrastructure work\nparams.rurl = clientUtilityUrl //ABSOLUTE URL to the utility page must be on\n                               //the SAME DOMAIN as page that makes the request\n\n//add all params to composed string of FORM and IFRAME inside the FORM tag  \nfor(each in params){\n    pval = params[each].toString().replace(/\\\"/g,\"&amp;quot;\");//assure: that \" mark will not break\n    HTML.add(\"&lt;input name='\",each,\"' value='\",pval,\"'/&gt;\"); //        the composed string      \n}\n//close FORM tag in composed string and put all parts together\nHTML.add(\"&lt;/form&gt;\");\nHTML = HTML.join(\"\");   //Now the composed HTML string ready :)\n\n//prepare the DIV\ndiv.id = id; // this ID is used to clean-up once the response has come, or timeout is detected\ndiv.style.display = \"none\"; //assure the DIV will not influence UI\n\n//TRICKY: append the DIV to the DOM and *ONLY THEN* inject the HTML in it\n//        for some reason it works in all browsers only this way. Injecting the DIV as part \n//        of a composed string did not always work for me\ndocument.body.appendChild(div);\ndiv.innerHTML = HTML;\n\n//TRICKY: note that myAsyncJSONPCallback must see the 'timeout' variable\ntimeout = setTimeout(\"myAsyncJSONPCallback({error:'TIMEOUT'})\",4000);\ndocument.getElementById(\"frm_\"+id+).submit();\n</code></pre>\n\n<p><strong>The server on the cross-domain</strong>\nThe response from the server is expected to be a REDIRECTION, either by HTTP-Header or by writing a SCRIPT tag. (redirection is better, SCRIPT tag is easier to debug with JS breakpoints).\nHere's the example of the header, assuming the <code>rurl</code> value from above</p>\n\n<pre><code>Location: http://samedomain.com/HTML/page?callback=myAsyncJSONPCallback&amp;data=whatever_the_server_has_to_return\n</code></pre>\n\n<p>Note that </p>\n\n<ul>\n<li>the value of the <code>data</code> argument can be a JavaScript Object-Literal or JSON expression, however it better be url-encoded.</li>\n<li>the length of the server response is limited to the length of a URL a browser can process.</li>\n</ul>\n\n<p>Also - in my system the server has a default value for the <code>rurl</code> so that this parameter is optional. But you can do that only if your client-application and server-application are coupled.</p>\n\n<p>APIs to emit redirection header: </p>\n\n<p><a href=\"http://www.webconfs.com/how-to-redirect-a-webpage.php\">http://www.webconfs.com/how-to-redirect-a-webpage.php</a></p>\n\n<p>Alternatively, you can have the server write as a response the following:</p>\n\n<pre><code>&lt;script&gt;\n   location.href=\"http://samedomain.com/HTML/page?callback=myAsyncJSONPCallback&amp;data=whatever_the_server_has_to_return\"\n&lt;/script&gt;\n</code></pre>\n\n<p>But HTTP-Headers would be considered more clean ;)</p>\n\n<p><strong>The utility page on the same domain as the top-level document</strong></p>\n\n<p>I use the same utility page as <code>rurl</code> for all my post requests: all it does is take the name of the callback and the parameters from the Query-String using client side code, and call it on the parent document. It can do it <strong>ONLY</strong> when this page runs in the EXACT same domain as the page that fired the request! <strong>Important:</strong> Unlike cookies - subdomains do not count!! It has to he the exact same domain.</p>\n\n<p>It's also make it more efficient if this utility page contains no references to other resources -including JS libraries. So this page is plain JavaScript. But you can implement it however you like.</p>\n\n<p>Here's the responder page that I use, who's URL is found in the <code>rurl</code> of the POST request (in the example: <a href=\"http://samedomain.com/utils/postResponse.html\">http://samedomain.com/utils/postResponse.html</a> )</p>\n\n<pre><code>&lt;html&gt;&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\n//parse and organize all QS parameters in a more comfortable way\nvar params = {};\nif (location.search.length &gt; 1) {\n    var i, arr = location.search.substr(1).split(\"&amp;\");\n    for (i = 0; i &lt; arr.length; i++) {\n        arr[i] = arr[i].split(\"=\");\n        params[arr[i][0]] = unescape(arr[i][1]);\n    }\n}\n\n//support server answer as JavaScript Object-Literals or JSON:\n//  evaluate the data expression\ntry { \n    eval(\"params.data = \" + params.data); \n} catch (e) { \n    params.data = {error: \"server response failed with evaluation error: \" + e.message\n                  ,data : params.data\n                  }\n}\n\n//invoke the callback on the parent\ntry{\n     window.parent[ params.callback ](params.data || \"no-data-returned\");\n}catch(e){\n     //if something went wrong - at least let's learn about it in the\n     //      console (in addition to the timeout)\n     throw \"Problem in passing POST response to host page: \\n\\n\" + e.message;\n}\n&lt;/script&gt;\n&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>It's not much automation and 'ready-made' library like jQuery and involes some 'manual' work - but it has the charm :)</p>\n\n<p>If you're a keen fan of ready-made libraries - you can also check on <strong>Dojo Toolkit</strong> that when last I checked (about a year ago) - had their own implementation for the same mechanism.\n<a href=\"http://dojotoolkit.org/\">http://dojotoolkit.org/</a></p>\n\n<p>Good luck buddy, I hope it helps...</p>\n",
                    "is_accepted": true,
                    "score": 65
                },
                {
                    "body": "<ul>\n<li>Rather than banging our heads with JSONP method, that actually won't\nsupport POST method by default, we can go for <a href=\"http://enable-cors.org/\" rel=\"nofollow\">CORS</a> .That will provide no big changes in the conventional way of programming. By simple Jquery Ajax call we can go with cross domains. </li>\n<li>In CORS method, you have to add headers in server side scripting file, or in the server itself(in remote domain), for enabling this access. This is much reliable, since we can prevent/restrict the domains making unwanted calls.</li>\n<li>It can be found in detail in <a href=\"http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\" rel=\"nofollow\">wikipedia</a> page.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am working on creating a RESTful API that supports cross-domain requests, JSON/JSONP support, and the main HTTP method (PUT/GET/POST/DELETE).  Now while will be easy to accessing this API through server side code , it would nice to exposed it to javascript.  From what I can tell, when doing a JSONP requests with jQuery, it only supports the GET method.  Is there a way to do a JSONP request using POST/PUT/DELETE?</p>\n\n<p>Ideally I would like a way to do this from within jQuery (through a plugin if the core does not support this), but I will take a plain javascript solution too.  Any links to working code or how to code it would be helpful, thanks.</p>\n",
            "last_activity_date": 1377253513,
            "question_id": 5345493,
            "score": 35,
            "tags": [
                "javascript",
                "jquery",
                "web-services",
                "rest"
            ],
            "title": "Using PUT/POST/DELETE with JSONP and jQuery"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>Why not a named anchor?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>&lt;a href=\"#myAnchorALongWayDownThePage\"&gt;Click here to scroll&lt;/a&gt;\n\n&lt;A name='myAnchorALongWayDownThePage\"&gt;&lt;/a&gt;\n</code></pre>\n\n<p>No fancy scrolling but it should take you there.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Answer posted <a href=\"http://stackoverflow.com/questions/66964/how-do-i-create-a-link-to-a-footnote-in-html\">here</a> - same solution to your problem.</p>\n\n<p>Edit: the JQuery answer is very nice if you want a smooth scroll - I hadn't seen that in action before.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>How about the <a href=\"http://demos.flesler.com/jquery/scrollTo/\">JQuery ScrollTo - see this sample code</a></p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>The property you need is location.hash. For example:<br /><br/>\n     location.hash = 'top'; //would jump to named anchor \"top</p>\n\n<p>I don't know how to do the nice scroll animation without the use of dojo or some toolkit like that, but if you just need it to jump to an anchor, location.hash should do it.</p>\n\n<p>(tested on FF3 and Safari 3.1.2)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>scrollTop (IIRC) is where in the document the top of the page is scrolled to. scrollTo scrolls the page so that the top of the page is where you specify.</p>\n\n<p>What you need here is some Javascript manipulated styles. Say if you wanted the div off-screen and scroll in from the right you would set the left attribute of the div to the width of the page and then decrease it by a set amount every few seconds until it is where you want.</p>\n\n<p>This should point you in the right direction.</p>\n\n<p>Additional: I'm sorry, I thought you wanted a separate div to 'pop out' from somewhere (sort of like this site does sometimes), and not move the entire page to a section. Proper use of anchors would achieve that effect.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The difficulty with scrolling is that you may not only need to scroll the page to show a div, but you may need to scroll inside scrollable divs on any number of levels as well.</p>\n\n<p>The scrollTop property is a available on any DOM element, including the document body. By setting it, you can control how far down something is scrolled. You can also use clientHeight and scrollHeight properties to see how much scrolling is needed (scrolling is possible when clientHeight (viewport) is less than scrollHeight (the height of the content).</p>\n\n<p>You can also use the offsetTop property to figure out where in the container an element is located.</p>\n\n<p>To build a truly general purpose \"scroll into view\" routine from scratch, you would need to start at the node you want to expose, make sure it's in the visible portion of it's parent, then repeat the same for the parent, etc, all the way until you reach the top.</p>\n\n<p>One step of this would look something like this (untested code, not checking edge cases):</p>\n\n<pre><code>function scrollIntoView(node) {\n  var parent = node.parent;\n  var parentCHeight = parent.clientHeight;\n  var parentSHeight = parent.scrollHeight;\n  if (parentSHeight &gt; parentCHeight) {\n    var nodeHeight = node.clientHeight;\n    var nodeOffset = node.offsetTop;\n    var scrollOffset = nodeOffset + (nodeHeight / 2) - (parentCHeight / 2);\n    parent.scrollTop = scrollOffset;\n  }\n  if (parent.parent) {\n    scrollIntoView(parent);\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If you don't want to add an extra extension the following code should work with jQuery.</p>\n\n<pre><code>$('a[href=#target]').\n    click(function(){\n        var target = $('a[name=target]');\n        if (target.length)\n        {\n            var top = target.offset().top;\n            $('html,body').animate({scrollTop: top}, 1000);\n            return false;\n        }\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Correct me if I'm wrong but I'm reading the question again and again and still think that Angus McCoteup was asking how to set an element to be position: fixed. </p>\n\n<p>Angus McCoteup, check out <a href=\"http://www.cssplay.co.uk/layouts/fixed.html\" rel=\"nofollow\">http://www.cssplay.co.uk/layouts/fixed.html</a> - if you want your DIV to behave like a menu there, have a look at a CSS there</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a <a href=\"http://demos.flesler.com/jquery/scrollTo/\" rel=\"nofollow\">jQuery plugin</a> for the general case of scrolling to a DOM element, but if performance is an issue (and when is it not?), I would suggest doing it manually. This involves two steps:</p>\n\n<ol>\n<li>Finding the position of the element you are scrolling to.</li>\n<li>Scrolling to that position.</li>\n</ol>\n\n<p><a href=\"http://www.quirksmode.org/js/findpos.html\" rel=\"nofollow\">quirksmode</a> gives a good explanation of the mechanism behind the former. Here's my preferred solution:</p>\n\n<pre><code>function absoluteOffset(elem) {\n    return elem.offsetParent &amp;&amp; elem.offsetTop + absoluteOffset(elem.offsetParent);\n}\n</code></pre>\n\n<p>It uses casting from null to 0, which isn't proper etiquette in some circles, but I like it :) The second part uses <code>window.scroll</code>. So the rest of the solution is:</p>\n\n<pre><code>function scrollToElement(elem) {\n    window.scroll(absoluteOffset(elem));\n}\n</code></pre>\n\n<p>Voila!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>old question, but if anyone finds this through google (as I did) and who does not want to use anchors or jquery; there's a builtin javascriptfunction to 'jump' to an element;</p>\n\n<pre><code>document.getElementById('youridhere').scrollIntoView();\n</code></pre>\n\n<p>and what's even better; according to the great compatibility-tables on quirksmode, this is <a href=\"http://www.quirksmode.org/dom/w3c_cssom.html#t23\">supported by all major browsers</a>!</p>\n",
                    "is_accepted": false,
                    "score": 243
                },
                {
                    "body": "<p>I personally found Josh's jQuery-based answer above to be the best I saw, and worked perfectly for my application... of course, I was <em>already</em> using jQuery... I certainly wouldn't have included the whole jQ library just for that one purpose.</p>\n\n<p>Cheers!</p>\n\n<p>EDIT: OK... so mere seconds after posting this, I saw another answer just <em>below</em> mine (not sure if still below me after an edit) that said to use:</p>\n\n<p>document.getElementById('your_element_ID_here').scrollIntoView();</p>\n\n<p>This works perfectly and in so much less code than the jQuery version!  I had no idea that there was a built-in function in JS called .scrollIntoView(), but there it is!  So, if you want the fancy animation, go jQuery.  Quick n' dirty... use this one!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a link on a long HTML page. When I click it, I wish a DIV on another part of the page to be visible in the window by scrolling into view.</p>\n\n<p>A bit like  EnsureVisible in other languages.</p>\n\n<p>I've checked out scrollTop and scrollTo but they seem like red herrings.</p>\n\n<p>Can anyone help?</p>\n",
            "last_activity_date": 1324289319,
            "question_id": 68165,
            "score": 58,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "JavaScript to scroll long page to DIV"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>How about using the Infobox plugin rather than using the usual Infowindow?  I put up a complete example in a <a href=\"http://jsfiddle.net/jEhJ3/597/\">jsfiddle example here</a>.  The main thing about the infobox is that you can create your infobox within your page's html, giving you complete control over how it looks using css (and some javascript options, if necessary).  Here's the html for the infobox:</p>\n\n<pre><code>&lt;div class=\"infobox-wrapper\"&gt;\n    &lt;div id=\"infobox1\"&gt;\n        Infobox is very easy to customize because, well, it's your code\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>The idea here is the <code>\"infobox-wrapper\"</code> div will be hidden (i.e., display:none in your css) and then in your javascript you will initialize an Infobox object and give it a reference to your \"infobox\" (inside the hidden wrapper) like so:</p>\n\n<pre><code>infobox = new InfoBox({\n    content: document.getElementById(\"infobox1\"),\n    disableAutoPan: false,\n    maxWidth: 150,\n    pixelOffset: new google.maps.Size(-140, 0),\n    zIndex: null,\n    boxStyle: {\n                background: \"url('http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/examples/tipbox.gif') no-repeat\",\n                opacity: 0.75,\n                width: \"280px\"\n        },\n    closeBoxMargin: \"12px 4px 2px 2px\",\n    closeBoxURL: \"http://www.google.com/intl/en_us/mapfiles/close.gif\",\n    infoBoxClearance: new google.maps.Size(1, 1)\n});\n</code></pre>\n\n<p>This is just an example of some of the available options. The only required key is <code>content</code> - the reference to the infobox. Check out all options in the <a href=\"http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/docs/reference.html#InfoBoxOptions\">Infobox API docs</a>.</p>\n\n<p>And to open the info window:</p>\n\n<pre><code>google.maps.event.addListener(marker, 'click', function() {\n    infobox.open(map, this);\n    map.panTo(loc);\n});\n</code></pre>\n\n<p>And additional <a href=\"http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/docs/examples.html\">Google examples here</a>.</p>\n\n<p>And to further demonstrate the flexibility of the InfoBox, <a href=\"http://jsfiddle.net/V5PeQ/13/\">this jsfiddle</a> has an image with a css transition as the \"info box\".</p>\n\n<p>And one final tip: <strong>Don't use the class \"infobox\" in your html.</strong>  It is rather unfortunately used by the plugin when the infobox is actually generated. </p>\n",
                    "is_accepted": false,
                    "score": 91
                },
                {
                    "body": "<p>I wanted to have a transparent contact form popup on google map marker click. I made it finally with the help of infobox plugin and <a href=\"http://trevordavis.net/blog/wordpress-jquery-contact-form-without-a-plugin/\" rel=\"nofollow\">this post</a>. <a href=\"http://www.shumon.me/wpv/contact-me/\" rel=\"nofollow\">That's what</a> I made.</p>\n\n<p>Anyone can download and use the source from <a href=\"https://github.com/johnshumon/contact-form-popup-on-marker-click\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you can't use infobox and need to customise the infowindow you can access it using css.\nIt's not pretty, relies heavily on first:child/last:child psuedo selectors and obviously on whether google ever decides to change their map html structure.</p>\n\n<p>Hopefully the below css can help someone else out in a bind when they're forced to deal with infowindow.</p>\n\n<pre><code>/* white background and box outline */\n.gm-style &gt; div:first-child &gt; div + div &gt; div:last-child &gt; div &gt; div:first-child &gt; div\n{\n    /* we have to use !important because we are overwritng inline styles */\n    background-color: transparent !important;\n    box-shadow: none !important;\n    width: auto !important;\n    height: auto !important;\n}\n\n/* arrow colour */\n.gm-style &gt; div:first-child &gt; div + div &gt; div:last-child &gt; div &gt; div:first-child &gt; div &gt; div &gt; div\n{\n    background-color: #003366 !important; \n}\n\n/* close button */\n.gm-style &gt; div:first-child &gt; div + div &gt; div:last-child &gt; div &gt; div:last-child\n{\n    margin-right: 5px;\n    margin-top: 5px;\n}\n\n/* image icon inside close button */\n.gm-style &gt; div:first-child &gt; div + div &gt; div:last-child &gt; div &gt; div:last-child &gt; img\n{\n    display: none;\n}\n\n/* positioning of infowindow */\n.gm-style-iw\n{\n    top: 22px !important;\n    left: 22px !important;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I've tried many of the examples from the google maps reference and from other stackoverflow questions, but I haven't been able to get custom styles on my infowindow.</p>\n\n<p>I am using something very similar to what was done <a href=\"http://stackoverflow.com/questions/3059044/google-maps-js-api-v3-simple-multiple-marker-example/3059129#3059129\">in this other stackoverflow answer</a></p>\n\n<p>Here it is working/editable: <a href=\"http://jsfiddle.net/3VMPL/\">http://jsfiddle.net/3VMPL/</a></p>\n\n<p>In particular, I would like to have square corners instead of the rounded.</p>\n",
            "last_activity_date": 1407907130,
            "question_id": 7616666,
            "score": 37,
            "tags": [
                "javascript",
                "google-maps"
            ],
            "title": "Google Maps API v3: Custom styles for infowindow"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>From your comments, I'd guess you have 2 options</p>\n\n<ol>\n<li>Try to find a phantomjs node module - <a href=\"https://github.com/sgentle/phantomjs-node\">https://github.com/sgentle/phantomjs-node</a> </li>\n<li>Run phantomjs as a child process inside node - <a href=\"http://nodejs.org/api/child_process.html\">http://nodejs.org/api/child_process.html</a></li>\n</ol>\n\n<p>Edit: </p>\n\n<p>It seems the child process is suggested by phantomjs as a way of interacting with node, see faq - <a href=\"http://code.google.com/p/phantomjs/wiki/FAQ\">http://code.google.com/p/phantomjs/wiki/FAQ</a></p>\n\n<p>Edit:</p>\n\n<p>Example Phantomjs script for getting the pages HTML markup:</p>\n\n<pre><code>var page = require('webpage').create();  \npage.open('http://www.google.com', function (status) {\n    if (status !== 'success') {\n        console.log('Unable to access network');\n    } else {\n        var p = page.evaluate(function () {\n            return document.getElementsByTagName('html')[0].innerHTML\n        });\n        console.log(p);\n    }\n    phantom.exit();\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>I've used two different ways in the past, including the page.evaluate() method that queries the DOM that Declan mentioned. The other way I've passed info from the web page is to spit it out to console.log() from there, and in the phantomjs script use:</p>\n\n<pre><code>page.onConsoleMessage = function (msg, line, source) {\n  console.log('console [' +source +':' +line +']&gt; ' +msg);\n}\n</code></pre>\n\n<p>I might also trap the variable msg in the onConsoleMessage and search for some encapsulate data. Depends on how you want to use the output.</p>\n\n<p>Then in the Nodejs script, you would have to scan the output of the Phantomjs script:</p>\n\n<pre><code>var yourfunc = function(...params...) {\n  var phantom = spawn('phantomjs', [...args]);\n  phantom.stdout.setEncoding('utf8');\n  phantom.stdout.on('data', function(data) {\n    //parse or echo data\n    var str_phantom_output = data.toString();\n    // The above will get triggered one or more times, so you'll need to\n    // add code to parse for whatever info you're expecting from the browser\n  });\n  phantom.stderr.on('data', function(data) {\n    // do something with error data\n  });\n  phantom.on('exit', function(code) {\n    if (code !== 0) {\n      // console.log('phantomjs exited with code ' +code);\n    } else {\n      // clean exit: do something else such as a passed-in callback\n    }\n  });\n}\n</code></pre>\n\n<p>Hope that helps some.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Late update in case anyone stumbles on this question:</p>\n\n<p>A project on GitHub developed by a colleague of mine exactly aims at helping you do that: <a href=\"https://github.com/vmeurisse/phantomCrawl\" rel=\"nofollow\">https://github.com/vmeurisse/phantomCrawl</a>.</p>\n\n<p>It still a bit young, it certainly is missing some documentation, but the example provided should help doing basic crawling.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Why not just use this ? </p>\n\n<pre><code>var page = require('webpage').create();\npage.open(\"http://example.com\", function (status)\n{\n    if (status !== 'success') \n    {\n        console.log('FAIL to load the address');            \n    } \n    else \n    {\n        console.log('Success in fetching the page');\n        console.log(page.content);\n    }\n    phantom.exit();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here's an old version that I use running node, express and phantomjs which saves out the page as a .png. You could tweak it fairly quickly to get the html.</p>\n\n<p><a href=\"https://github.com/wehrhaus/sitescrape.git\" rel=\"nofollow\">https://github.com/wehrhaus/sitescrape.git</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm looking for an example of requesting a webpage, waiting for the JavaScript to render (JavaScript modifies the DOM), and then grabbing the HTML of the page.</p>\n\n<p>This should be a simple example with an obvious use-case for PhantomJS. I can't find a decent example, the documentation seems to be all about command line use.</p>\n",
            "last_activity_date": 1398482312,
            "question_id": 9966826,
            "score": 32,
            "tags": [
                "javascript",
                "html",
                "node.js",
                "web-scraping",
                "phantomjs"
            ],
            "title": "Save and render a webpage with PhantomJS and node.js"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<pre><code>location.reload();\n</code></pre>\n\n<p>See this <a href=\"https://developer.mozilla.org/en/DOM/window.location\">MDC page</a> for more information about the <code>location</code> object.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>location.href = location.href</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Javascript 1.0</p>\n\n<pre><code>window.location.href = window.location.pathname;\n// creates a history entry\n</code></pre>\n\n<p>Javascript 1.1</p>\n\n<pre><code>window.location.replace(window.location.pathname);\n// does not create a history entry\n</code></pre>\n\n<p>Javascript 1.2</p>\n\n<pre><code>window.location.reload(false); \n// If we needed to pull the document from\n//  the web-server again (such as where the document contents\n//  change dynamically) we would pass the argument as 'true'.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 199
                },
                {
                    "body": "<p>If you put </p>\n\n<pre><code>window.location.reload(true);\n</code></pre>\n\n<p>at the beginning of your page with no other condition qualifying why that code runs, the page will load and then continue to reload itself until you close your browser.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><em>You can perform this task uisng <code>window.location.reload();</code>. As there are many ways to do this but I think it is the appropriate way to reload the same docuemnt with javascript. Here is the explaination</em></p>\n\n<p>Javascript <strong>window.location</strong> object can be used </p>\n\n<ul>\n<li>Get the current page address (URL). </li>\n<li>To redirect the browser to other page.</li>\n<li>To reload the same page.</li>\n</ul>\n\n<p><strong>window</strong> -- The window object in java-script represents an open window in a browser. </p>\n\n<p><strong>location</strong> -- The location object in java script holds information about the current URL.</p>\n\n<p>The location object is like a fragment of the window object and is called up through the <strong>window.location</strong> property.</p>\n\n<p><strong>Location Objects</strong> has three methods -- </p>\n\n<ol>\n<li><strong>assign()</strong>      Used to load a new document</li>\n<li><strong>reload()</strong>      Used to reloads the current document.    </li>\n<li><strong>replace()</strong>    Used to replace the current document with a new one</li>\n</ol>\n\n<p>So here we need to use <strong>reload()</strong> because it can help us in reloading  the same document.</p>\n\n<p>So use it like <code>window.location.reload();</code></p>\n\n<p><a href=\"http://jsfiddle.net/agrawalnikhil/4FhHA/\">Online Demo jsfiddle</a></p>\n\n<p><em>To ask your browser to retrieve the page directly from the server not from the cache, you can pass a true parameter to location.reload():</em></p>\n\n<p>This method is compitable with all major browsers including</p>\n\n<ul>\n<li>IE, Chrome, Firefox, Safari, Opera.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can simply use </p>\n\n<pre><code>window.location=document.URL\n</code></pre>\n\n<p>where document.URL gets the current page URL and window.location reloads it.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>try:</p>\n\n<pre><code>location.reload(true);\n</code></pre>\n\n<p>The parameter set to 'true' reloads a fresh copy from the server. Leaving it out will serve the page from cache.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>This work's for me:</strong></p>\n\n<pre><code>function refresh() {\n\n    setTimeout(function () {\n        location.reload()\n    }, 100);\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/umerqureshi/znruyzop/\" rel=\"nofollow\">http://jsfiddle.net/umerqureshi/znruyzop/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How I can reload the page using Javascript? I need a method that works in all browsers.</p>\n",
            "last_activity_date": 1420703547,
            "question_id": 3715047,
            "score": 135,
            "tags": [
                "javascript"
            ],
            "title": "How to reload a page using Javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>$( document.activeElement )\n</code></pre>\n\n<p>Will retrieve it without having to search the whole DOM tree.</p>\n\n<p><a href=\"http://api.jquery.com/focus-selector/\">http://api.jquery.com/focus-selector/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>// Get the focused element:\nvar $focused = $(':focus');\n\n// No jQuery:\nvar focused = document.activeElement;\n\n// Does the element have focus:\nvar hasFocus = $('foo').is(':focus');\n\n// No jQuery:\nelem === elem.ownerDocument.activeElement;\n</code></pre>\n\n<p>Which one should you use? quoting the <a href=\"http://api.jquery.com/focus-selector/\">jQuery docs</a>:</p>\n\n<blockquote>\n  <p>As with other pseudo-class selectors (those that begin with a \":\"), it is recommended to precede :focus with a tag name or some other selector; otherwise, the universal selector (\"*\") is implied. In other words, the bare <code>$(':focus')</code> is equivalent to <code>$('*:focus')</code>. If you are looking for the currently focused element, $( document.activeElement ) will retrieve it without having to search the whole DOM tree.</p>\n</blockquote>\n\n<p>The answer is:</p>\n\n<pre><code>document.activeElement\n</code></pre>\n\n<p>And if you want a jQuery object wrapping the element:</p>\n\n<pre><code>$(document.activeElement)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 272
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>$(\":focus\").each(function() {\n    alert(\"Focused Elem_id = \"+ this.id );\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've tested two ways in Firefox, Chrome, IE9 and Safari.</p>\n\n<p>(1). <code>$(document.activeElement)</code> works as expected in Firefox, Chrome and Safari.</p>\n\n<p>(2). <code>$(':focus')</code> works as expected in Firefox and Safari.</p>\n\n<p>I moved into the mouse to input 'name' and pressed Enter on keyboard, then I tried to get the focused element. </p>\n\n<p>(1). <code>$(document.activeElement)</code> returns the input:text:name as expected in Firefox, Chrome and Safari, but it returns input:submit:addPassword in IE9</p>\n\n<p>(2). <code>$(':focus')</code> returns input:text:name as expected in Firefox and Safari, but nothing in IE</p>\n\n<pre><code>&lt;form action=\"\"&gt;\n    &lt;div id=\"block-1\" class=\"border\"&gt;\n        &lt;h4&gt;block-1&lt;/h4&gt;\n        &lt;input type=\"text\" value=\"enter name here\" name=\"name\"/&gt;            \n        &lt;input type=\"button\" value=\"Add name\" name=\"addName\"/&gt;\n    &lt;/div&gt;\n    &lt;div id=\"block-2\" class=\"border\"&gt;\n        &lt;h4&gt;block-2&lt;/h4&gt;\n        &lt;input type=\"text\" value=\"enter password here\" name=\"password\"/&gt;            \n        &lt;input type=\"submit\" value=\"Add password\" name=\"addPassword\"/&gt;\n    &lt;/div&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Using <code>jQuery</code> how can I get the input element that has the caret(cursor) focus?   </p>\n\n<p>Or in other words, how to determine if an input has the caret(cursor) focus?</p>\n",
            "last_activity_date": 1417506113,
            "question_id": 11277989,
            "score": 113,
            "tags": [
                "javascript",
                "jquery",
                "cursor",
                "element",
                "caret"
            ],
            "title": "How to get the focused element with jQuery?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can use <a href=\"http://api.jquery.com/resize/\"><code>.resize()</code></a> to get every time the width/height actually changes, like this:</p>\n\n<pre><code>$(window).resize(function() {\n  //resize just happened, pixels changed\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/UqYCr/\">You can view a working demo here</a>, it takes the new height/width values and updates them in the page for you to see.  Remember the event doesn't really <em>start</em> or <em>end</em>, it just \"happens\" when a resize occurs...there's nothing to say another one won't happen.</p>\n\n<hr>\n\n<p><strong>Edit:</strong> By comments it seems you want something like a \"on-end\" event, the solution you found does this, with a few exceptions (you can't distinguish between a mouse-up and a pause in a cross-browser way, the same for an <em>end</em> vs a <em>pause</em>).  You can <em>create</em> that event though, to make it a bit cleaner, like this:</p>\n\n<pre><code>$(window).resize(function() {\n    if(this.resizeTO) clearTimeout(this.resizeTO);\n    this.resizeTO = setTimeout(function() {\n        $(this).trigger('resizeEnd');\n    }, 500);\n});\n</code></pre>\n\n<p>You could have this is a base file somewhere, whatever you want to do...then you can bind to that new <code>resizeEnd</code> event you're triggering, like this:</p>\n\n<pre><code>$(window).bind('resizeEnd', function() {\n    //do something, window hasn't changed size in 500ms\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/UqYCr/1/\">You can see a working demo of this approach here</a>\n    \u200b</p>\n",
                    "is_accepted": true,
                    "score": 163
                }
            ],
            "body": "<p>Is there any way with jQuery or JavaScript to trigger a function when the user ends to resize the browser window?</p>\n\n<p>In other terms:</p>\n\n<ol>\n<li>Can I detect mouse up event when user is resizing the browser window? Otherwise:</li>\n<li>Can I detect when a window resize operation is finished?</li>\n</ol>\n\n<p>I'm currently only able to trigger an event when the user start to resize the window with jQuery</p>\n",
            "last_activity_date": 1418385094,
            "question_id": 2996431,
            "score": 75,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Detect when a window is resized using JavaScript ?"
        },
        {
            "answer_count": 16,
            "answers": [
                {
                    "body": "<p>The constructor needs to be like a factory method and return what you want. If you need additional methods/properties, you can add them to the object before returning it.</p>\n\n<pre><code>function NotImplementedError(message) { return new Error(\"Not implemented\", message); }\n\nx = new NotImplementedError();\n</code></pre>\n\n<p>Though I'm not sure why you'd need to do this. Why not just use <code>new Error...</code> ? Custom exceptions don't really add much in JavaScript (or probably any untyped language).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Update your code to assign your prototype to the Error.prototype and the instanceof and your asserts work.</p>\n\n<pre><code>function NotImplementedError(message) {\n    this.name = \"NotImplementedError\";\n    this.message = (message || \"\");\n}\nNotImplementedError.prototype = Error.prototype;\n</code></pre>\n\n<p>However, I would just throw your own object and just check the name property.</p>\n\n<pre><code>throw {name : \"NotImplementedError\", message : \"too lazy to implement\"}; \n</code></pre>\n\n<p><strong>Edit based on comments</strong></p>\n\n<p>After looking at the comments and trying to remember why I would assign prototype to <code>Error.prototype</code> instead of <code>new Error()</code> like Nicholas Zakas did in his article, I created a <a href=\"http://jsfiddle.net/MwMEJ/\">jsFiddle</a> with the code below:</p>\n\n<pre><code>function NotImplementedError(message) {\n    this.name = \"NotImplementedError\";\n    this.message = (message || \"\");\n}\nNotImplementedError.prototype = Error.prototype;\n\nfunction NotImplementedError2(message) {\n    this.message = (message || \"\");\n}\nNotImplementedError2.prototype = new Error();\n\ntry {\n    var e = new NotImplementedError(\"NotImplementedError message\");\n    throw e;\n} catch (ex1) {\n    console.log(ex1.stack);\n    console.log(\"ex1 instanceof NotImplementedError = \" + (ex1 instanceof NotImplementedError));\n    console.log(\"ex1 instanceof Error = \" + (ex1 instanceof Error));\n    console.log(\"ex1.name = \" + ex1.name);\n    console.log(\"ex1.message = \" + ex1.message);\n}\n\ntry {\n    var e = new NotImplementedError2(\"NotImplementedError2 message\");\n    throw e;\n} catch (ex1) {\n    console.log(ex1.stack);\n    console.log(\"ex1 instanceof NotImplementedError2 = \" + (ex1 instanceof NotImplementedError2));\n    console.log(\"ex1 instanceof Error = \" + (ex1 instanceof Error));\n    console.log(\"ex1.name = \" + ex1.name);\n    console.log(\"ex1.message = \" + ex1.message);\n}\n</code></pre>\n\n<p>The console output was this.</p>\n\n<pre><code>undefined\nex1 instanceof NotImplementedError = true\nex1 instanceof Error = true\nex1.name = NotImplementedError\nex1.message = NotImplementedError message\nError\n    at window.onload (http://fiddle.jshell.net/MwMEJ/show/:29:34)\nex1 instanceof NotImplementedError2 = true\nex1 instanceof Error = true\nex1.name = Error\nex1.message = NotImplementedError2 message\n</code></pre>\n\n<p>This confirmes the \"problem\" I ran into was the stack property of the error was the line number where <code>new Error()</code> was created, and not where the <code>throw e</code> occurred.  However, that may be better that having the side effect of a <code>NotImplementedError.prototype.name = \"NotImplementedError\"</code> line affecting the Error object.</p>\n\n<p>Also, notice with <code>NotImplementedError2</code>, when I don't set the <code>.name</code> explicitly, it is equal to \"Error\".  However, as mentioned in the comments, because that version sets prototype to <code>new Error()</code>, I could set <code>NotImplementedError2.prototype.name = \"NotImplementedError2\"</code> and be OK.</p>\n",
                    "is_accepted": true,
                    "score": 92
                },
                {
                    "body": "<p>This section of the standard may explain why the <code>Error.apply</code> call doesn't initialize the object:</p>\n\n<blockquote>\n  <p><strong>15.11.1 The Error Constructor Called as a Function</strong></p>\n  \n  <p>When Error is called as a function rather than as a constructor, it creates and\n  initialises a new Error object. Thus the function call Error(...) is\n  equivalent to the object creation expression new Error(...) with the\n  same arguments.</p>\n</blockquote>\n\n<p>In this case the <code>Error</code> function probably determines that it's not being called as a constructor, so it returns a new Error instance rather than initializing the <code>this</code> object.</p>\n\n<p>Testing with the following code seems to demonstrate that this is in fact what's happening:</p>\n\n<pre><code>function NotImplementedError() { \n   var returned = Error.apply(this, arguments);\n   console.log(\"returned.message = '\" + returned.message + \"'\");\n   console.log(\"this.message = '\" + this.message + \"'\");\n}\nNotImplementedError.prototype = new Error();\n\nvar nie = new NotImplementedError(\"some message\");\n</code></pre>\n\n<p>The following output is generated when this is run:</p>\n\n<pre><code>returned.message = 'some message'\nthis.message = ''\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I had a similar issue to this. My error needs to be an <code>instanceof</code> both <code>Error</code> and <code>NotImplemented</code>, and it also needs to produce a coherent backtrace in the console.</p>\n\n<p>My solution:</p>\n\n<pre><code>var NotImplemented = (function() {\n  var NotImplemented, err;\n  NotImplemented = (function() {\n    function NotImplemented(message) {\n      var err;\n      err = new Error(message);\n      err.name = \"NotImplemented\";\n      this.message = err.message;\n      if (err.stack) this.stack = err.stack;\n    }\n    return NotImplemented;\n  })();\n  err = new Error();\n  err.name = \"NotImplemented\";\n  NotImplemented.prototype = err;\n\n  return NotImplemented;\n}).call(this);\n\n// TEST:\nconsole.log(\"instanceof Error: \" + (new NotImplemented() instanceof Error));\nconsole.log(\"instanceof NotImplemented: \" + (new NotImplemented() instanceofNotImplemented));\nconsole.log(\"message: \"+(new NotImplemented('I was too busy').message));\nthrow new NotImplemented(\"just didn't feel like it\");\n</code></pre>\n\n<p>Result of running with node.js:</p>\n\n<pre><code>instanceof Error: true\ninstanceof NotImplemented: true\nmessage: I was too busy\n\n/private/tmp/t.js:24\nthrow new NotImplemented(\"just didn't feel like it\");\n      ^\nNotImplemented: just didn't feel like it\n    at Error.NotImplemented (/Users/colin/projects/gems/jax/t.js:6:13)\n    at Object.&lt;anonymous&gt; (/Users/colin/projects/gems/jax/t.js:24:7)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.runMain (module.js:487:10)\n    at process.startup.processNextTick.process._tickCallback (node.js:244:9)\n</code></pre>\n\n<p>The error passes all 3 of my criteria, and although the <code>stack</code> property is nonstandard, <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error/Stack#Browser_Compatibility\" rel=\"nofollow\">it is supported in most newer browsers</a> which is acceptable in my case. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I just had to implement something like this and found that the stack was lost in my own error implementation. What I had to do was create a dummy error and retrieve the stack from that:</p>\n\n<pre><code>My.Error = function (message, innerException) {\n    var err = new Error();\n    this.stack = err.stack; // IMPORTANT!\n    this.name = \"Error\";\n    this.message = message;\n    this.innerException = innerException;\n}\nMy.Error.prototype = new Error();\nMy.Error.prototype.constructor = My.Error;\nMy.Error.prototype.toString = function (includeStackTrace) {\n    var msg = this.message;\n    var e = this.innerException;\n    while (e) {\n        msg += \" The details are:\\n\" + e.message;\n        e = e.innerException;\n    }\n    if (includeStackTrace) {\n        msg += \"\\n\\nStack Trace:\\n\\n\" + this.stack;\n    }\n    return msg;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try a new prototype object for each instance of the user defined error type. It allows <code>instanceof</code> checks to behave as usual plus type and message are correctly reported in Firefox and V8 (Chome, nodejs).</p>\n\n<pre><code>function NotImplementedError(message){\n    if(NotImplementedError.innercall===undefined){\n        NotImplementedError.innercall = true;\n        NotImplementedError.prototype = new Error(message);\n        NotImplementedError.prototype.name = \"NotImplementedError\";\n        NotImplementedError.prototype.constructor = NotImplementedError;\n\n        return new NotImplementedError(message);\n    }\n    delete NotImplementedError.innercall;\n}\n</code></pre>\n\n<p>Note that an additional entry will preceed the otherwise correct stack.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>easier way. You could make your object inherit from the Error object. \nExample:</p>\n\n<pre><code>function NotImplementError(message)\n{\n    this.message = message;\n    Error.call();\n    Error.call(message);\n} \n</code></pre>\n\n<p>what we are doing is using the function call() which call the constructor of the Error class so is basicly the same thing as implementing a class inheritance in other object oriented languages.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>At the expense of not being able to use <code>instanceof</code>, the following preserves the original stack trace and doesn't use any non-standard tricks.</p>\n\n<pre><code>// the function itself\nvar fixError = function(err, name) {\n    err.name = name;\n    return err;\n}\n\n// using the function\ntry {\n    throw fixError(new Error('custom error message'), 'CustomError');\n} catch (e) {\n    if (e.name == 'CustomError')\n        console.log('Wee! Custom Error! Msg:', e.message);\n    else\n        throw e; // unhandled. let it propagate upwards the call stack\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>All of the above answers are terrible awful - really. Even the one with 40 ups! The real answer is here guys: </p>\n\n<p><a href=\"http://stackoverflow.com/questions/8802845/inheriting-from-the-error-object-where-is-the-message-property\">Inheriting from the Error object - where is the message property?</a></p>\n\n<p>TL;DR:</p>\n\n<p>A. The reason <code>message</code> isn't being set is that <code>Error</code> is a function that returns a new Error object and does <em>not</em> manipulate <code>this</code> in any way.</p>\n\n<p>B. The way to do this right is to return the result of the apply from the constructor, as well as setting the prototype in the usual complicated javascripty way:</p>\n\n<pre><code>function MyError() {\n    var tmp = Error.apply(this, arguments);\n    tmp.name = this.name = 'MyError'\n\n    this.stack = tmp.stack\n    this.message = tmp.message\n}\n    var IntermediateInheritor = function() {}\n        IntermediateInheritor.prototype = Error.prototype;\n    MyError.prototype = new IntermediateInheritor()\n\nvar myError = new MyError(\"message\");\nconsole.log(\"The message is: '\"+myError.message+\"'\") // The message is: 'message'\nconsole.log(myError instanceof Error)                // true\nconsole.log(myError instanceof MyError)              // true\nconsole.log(myError.toString())                      // MyError: message\nconsole.log(myError.stack)                           // MyError: message \\n \n                                                     // &lt;stack trace ...&gt;\n</code></pre>\n\n<p>You could probably do some trickery to enumerate through all the non-enumerable properties of the <code>tmp</code> Error to set them rather than explicitly setting only <code>stack</code> and <code>message</code>, but the trickery isn't supported in ie&lt;9</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Another alternative , might not work in all enviroments.Atleast assured it works in nodejs 0.8\nThis approach uses a non standard way of modifying the internal proto prop</p>\n\n<pre><code>function myError(msg){ \n      var e = new Error(msg); \n      _this = this; \n      _this.__proto__.__proto__ = e;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function InvalidValueError(value, type) {\n    this.message = \"Expected `\" + type.name + \"`: \" + value;\n    var error = new Error(this.message);\n    this.stack = error.stack;\n}\nInvalidValueError.prototype = new Error();\nInvalidValueError.prototype.name = InvalidValueError.name;\nInvalidValueError.prototype.constructor = InvalidValueError;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is implemented nicely in the Cesium DeveloperError:</p>\n\n<ul>\n<li><a href=\"http://cesiumjs.org/Cesium/Build/Documentation/DeveloperError.html\" rel=\"nofollow\">Docs</a></li>\n<li><a href=\"https://github.com/AnalyticalGraphicsInc/cesium/blob/b24/Source/Core/DeveloperError.js\" rel=\"nofollow\">Source</a></li>\n</ul>\n\n<p>In it's simplified form:</p>\n\n<pre><code>var NotImplementedError = function(message) {\n    this.name = 'NotImplementedError';\n    this.message = message;\n    this.stack = (new Error()).stack;\n}\n\n// Later on...\n\nthrow new NotImplementedError();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My contibution to custom errors in javascript:</p>\n\n<ol>\n<li><p>First, I agree with this @B T guy at <a href=\"http://stackoverflow.com/questions/8802845/inheriting-from-the-error-object-where-is-the-message-property?lq=1\">Inheriting from the Error object - where is the message property?</a>, we have to built it properly (actually you have to use a js object library, my favorite: <a href=\"https://github.com/jiem/my-class\" rel=\"nofollow\">https://github.com/jiem/my-class</a>):</p>\n\n<pre><code>window.g3 = window.g3 || {};\ng3.Error = function (message, name, original) {\n    this.original = original;\n    this.name = name || 'Error.g3';\n    this.message = message || 'A g3.Error was thrown!';\n    (original)? this.stack = this.original.stack: this.stack = null;\n    this.message += '&lt;br&gt;---STACK---&lt;br&gt;' + this.stack;\n};\n\nvar ClassEmpty = function() {};\nClassEmpty.prototype = Error.prototype;\ng3.Error.prototype = new ClassEmpty();\ng3.Error.prototype.constructor = g3.Error;\n</code></pre></li>\n<li><p>then, we should define a global error handling function (optional) or, they'll end up to the engine:</p>\n\n<pre><code>window.onerror = printError; \nfunction printError(msg, url, line){\n    document.getElementById('test').innerHTML = msg+'&lt;br&gt;at: '+url+'&lt;br&gt;line: '+line;\n    return true;\n}\n</code></pre></li>\n<li><p>finally, we should throw our custom errors carefully:</p>\n\n<pre><code>//hit it!\n//throw new g3.Error('Hey, this is an error message!', 'Error.Factory.g3');\nthrow new g3.Error('Hey, this is an error message!', 'Error.Factory.g3', new Error());\n</code></pre></li>\n</ol>\n\n<p>Only, when passing the third parameter as <code>new Error()</code> we are able to see the stack with function and line numbers!</p>\n\n<p>At 2, the function can also handle error thrown by the engine as well.</p>\n\n<p>Of course, the real question is if we really need it and when; there are cases (99% in my opinion) where a graceful return of <code>false</code> is enough and leave only some critical points to be shown with the thrown of an error.</p>\n\n<p>Example: <a href=\"http://jsfiddle.net/centurianii/m2sQ3/1/\" rel=\"nofollow\">http://jsfiddle.net/centurianii/m2sQ3/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are using Node/Chrome. The following snippet will get you extension which meets the following requirements.</p>\n\n<ul>\n<li><code>err instanceof Error</code></li>\n<li><code>err instanceof CustomErrorType</code></li>\n<li>console.log() returns <code>[CustomErrorType]</code> when created with a message</li>\n<li>console.log() returns <code>[CustomErrorType: message]</code> when created without a message</li>\n<li>throw/stack provides the information at the point the error was created.</li>\n<li>Works optimally in Node.JS, and Chrome.</li>\n<li>Will pass instanceof checks in Chrome, Safari, Firefox and IE 8+, but will not have a valid stack outside of Chrome/Safari. I'm OK with that because I can debug in chrome, but code which requires specific error types will still function cross browser. <strong>If you need Node only you can easily remove the <code>if</code> statements and you're good to go</strong>.</li>\n</ul>\n\n<p>Snippet</p>\n\n<pre><code>var CustomErrorType = function(message) {\n    if (Object.defineProperty) {\n        Object.defineProperty(this, \"message\", {\n            value : message || \"\",\n            enumerable : false\n        });\n    } else {\n        this.message = message;\n    }\n\n    if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, CustomErrorType);\n    }\n}\n\nCustomErrorType.prototype = new Error();\nCustomErrorType.prototype.name = \"CustomErrorType\";\n</code></pre>\n\n<p>Usage</p>\n\n<pre><code>var err = new CustomErrorType(\"foo\");\n</code></pre>\n\n<p>Output</p>\n\n<pre><code>var err = new CustomErrorType(\"foo\");\nconsole.log(err);\nconsole.log(err.stack);\n\n[CustomErrorType: foo]\nCustomErrorType: foo\n    at Object.&lt;anonymous&gt; (/errorTest.js:27:12)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:906:3\n\n/errorTest.js:30\n        throw err;\n              ^\nCustomErrorType: foo\n    at Object.&lt;anonymous&gt; (/errorTest.js:27:12)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:906:3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If anyone is curious on how to create a custom error <strong>and</strong> get the stack trace:</p>\n\n<pre><code>function CustomError(message) {\n  this.name = 'CustomError';\n  this.message = message || '';\n  var error = new Error(message);\n  error.name = this.name;\n  this.stack = error.stack;\n}\nCustomError.prototype = Object.create(Error.prototype);\n\ntry {\n  throw new CustomError('foobar');\n}\ncatch (e) {\n  console.log('name:', e.name);\n  console.log('message:', e.message);\n  console.log('stack:', e.stack);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I used the Constructor Pattern for creating new objects, and I define the <strong>prototype</strong> properties and also the <strong>instance</strong> properties, to resemble the <code>Error</code> object.</p>\n\n<h2>IMPLEMENTATION</h2>\n\n<pre class=\"lang-js prettyprint-override\"><code>// Creates a custom exception notifier\n// Begin closure (Constructor Pattern)\nvar CustomError = (function() {\n    'use strict';\n\n    function CustomError(message) {\n        //enforces new\n        if (!(this instanceof CustomError)) {\n            return new CustomError(message);\n        }\n        var i, error;\n\n        //builds the message with multiple arguments\n        message = message || \"An exception occurred\";\n        for (i = 1; i &lt; arguments.length; i+=1)\n            message = message.replace(new RegExp(\"\\\\{\" + (i - 1) + \"}\"), arguments[i]);\n\n        //saves the current stack\n        error = new Error(message);\n\n        //access to CustomError.prototype.name\n        error.name = this.name;\n\n        //set the properties of the instance\n        //to look like an Error instance\n        Object.defineProperties(this, {\n            \"stack\": {\n                enumerable: false,\n                get: function() { return error.stack; }\n            },\n            \"message\": {\n                enumerable: false,\n                value: message\n            }\n        });\n    }\n\n    // Sets the prototype and prevents the direct reference to Error.prototype;\n    // not set by new Error() because the stack trace would be generated here\n    CustomError.prototype = Object.create(Error.prototype);\n    Object.defineProperties(CustomError.prototype, {\n        \"constructor\": {\n            enumerable: false,\n            value: CustomError\n        },\n        \"name\": {\n            enumerable: false,\n            value: \"JSU Error\"\n        }\n    });\n\n    //returns the constructor\n    return CustomError;\n}());\n//end closure\n</code></pre>\n\n<h2>USAGE</h2>\n\n<p>The CustomError constructor can receive many arguments to build the message, e.g.\n</p>\n\n<pre><code>throw new CustomError(\"The url of file is required\");\n\nthrow new CustomError(\"Invalid Date: {0}\", +\"date\");\n\nthrow new CustomError(\"The length must be greater than {0}\", 4);\n\nthrow new CustomError(\"Properties .{0}, .{1} do not exist\", \"p1\", \"p2\");\n\n$.ajax({ /* options */ })\n.done({ /* success */ })\n.fail(function (jqXHR, result) {\n    throw new CustomError(result);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>For some reason it looks like constructor delegation doesn't work in the following snippet:</p>\n\n<pre><code>function NotImplementedError() { \n  Error.apply(this, arguments); \n}\nNotImplementedError.prototype = new Error();\n\nvar nie = new NotImplementedError(\"some message\");\nconsole.log(\"The message is: '\"+nie.message+\"'\")\n</code></pre>\n\n<p>Running this gives <code>The message is: ''</code>. Any ideas as to why, or if there is a better way to create a new <code>Error</code> subclass? Is there a problem with <code>apply</code>ing to the native <code>Error</code> constructor that I don't know about?</p>\n",
            "last_activity_date": 1424310903,
            "question_id": 783818,
            "score": 65,
            "tags": [
                "javascript",
                "exception"
            ],
            "title": "How do I create a custom Error in JavaScript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>iOS5 has support for this (<a href=\"http://davidbcalhoun.com/2011/new-mobile-safari-stuff-in-ios5-position-fixed-overflow-scroll-new-input-type-support-web-workers-ecmascript-5\" rel=\"nofollow\">Reference</a>). If you want to invoke the native date picker you might have a an option with PhoneGap (have not tested this myself). </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Give mobiscroll <a href=\"http://mobiscroll.com\">http://mobiscroll.com</a> a try.\nThe scroller style date and time picker was especially created for interaction on touch devices.\nIt is pretty flexible, and easily customizable. It comes with iOS/Android themes.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>iOS 5 now supports HTML5 better.\nin your webapp do</p>\n\n<pre><code>&lt;input type=\"date\" name=\"date\" /&gt;\n</code></pre>\n\n<p>Android as of 4.0 lacks this type of native menu support.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Nowadays some devices support <code>&lt;input type=\"date\"&gt;</code> but others don't, so one needs to be careful:</p>\n\n<ul>\n<li><p>One can detect if <code>type=\"date\"</code> is supported by setting that attribute and then reading back its value. Browsers/devices that don't support it will ignore setting the type to <code>date</code> and return <code>text</code> when reading back that attribute. Alternatively, <a href=\"http://modernizr.com/\">Modernizr</a> can be used for detection. Beware that it's not enough to check for some version; like the Samsung Galaxy S2 on Android 4.0.3 does support <code>type=\"date\"</code>, but the Google/Samsung Nexus S on the more recent Android 4.0.4 does <em>not</em>.</p></li>\n<li><p>When presetting the date for the native date picker, be sure to use a format the device recognizes. When not doing that, devices might silently reject it, leaving one with an empty input field when trying to show an existing value. Like using the date picker on a Galaxy S2 running Android 4.0.3 might itself set the <code>&lt;input&gt;</code> to <code>2012-6-1</code> for June 1st. However, when setting the value from JavaScript, it needs leading zeroes: <code>2012-06-01</code>.</p></li>\n<li><p>When using things like Cordova (PhoneGap) to display the native date picker on devices that don't support <code>type=\"date\"</code>:</p>\n\n<ul>\n<li><p>Be sure to properly detect built-in support. Like on the Galaxy S2 running Android 4.0.3, erroneously <em>also</em> using <a href=\"https://github.com/phonegap/phonegap-plugins/tree/master/Android/DatePicker\">the Cordova Android plugin</a> will result in showing the date picker twice in a row: once again after clicking \"set\" in its first occurence. </p></li>\n<li><p>When there's multiple inputs on the same page, some devices show \"previous\" and \"next\" to get into another form field. On iOS 4, this does not trigger the <code>onclick</code> handler and hence gives the user a regular input. Using <code>onfocus</code> to trigger the plugin seems to work better.</p></li>\n<li><p>On iOS 4, using <code>onclick</code> or <code>onfocus</code> to trigger <a href=\"https://github.com/phonegap/phonegap-plugins/tree/master/iOS/DatePicker\">the iOS plugin</a> first makes the regular keyboard show, after which the date picker is placed on top of that. Next, after using the date picker, one still needs to close the regular keyboard. Using <code>$(this).blur()</code> to remove focus before the date picker is shown helps for iOS 4 and does not affect other devices I tested. But it introduces some quick flashing of the keyboard on iOS, and things can be even more confusing on first usage as then the date picker is slower. One can fully disable the regular keyboard by making the input <code>readonly</code> if one is using the plugin, but that disables the \"previous\" and \"next\" buttons when typing in other inputs on the same screen. It also seems the iOS 4 plugin does not make the native date picker show \"cancel\" or \"clear\", but <a href=\"http://developer.apple.com/library/ios/#DOCUMENTATION/UIKit/Reference/UIDatePicker_Class/Reference/UIDatePicker.html\">I guess that's an iOS 4 thing</a>.</p></li>\n<li><p>On an iOS 4 iPad (simulator), the Cordova plugin does not seem to render correctly, basically not giving the user any option to enter or change a date. <em>(Maybe iOS 4 doesn't render its native date picker nicely on top of a web view, or maybe my web view's CSS styling has some effect, and surely this might be different on a real device: please comment or edit!)</em></p></li>\n<li><p>Though the Android date picker plugin tries to use the same JavaScript API as the iOS plugin, and its example uses <code>allowOldDates</code>, Android actually <a href=\"https://github.com/phonegap/phonegap-plugins/blob/master/Android/DatePicker/DatePickerPlugin.java#L81-84\">does not support that</a>. Also, it returns the new date as <code>2012/7/2</code> while the iOS version returns <code>Mon Jul 02 2012 00:00:00 GMT+0200 (CEST)</code>.</p></li>\n<li><p>As an aside, when using the PhoneGap 1.5 Android plugin in Cordova 1.6, then in the Java code replace <code>final PhonegapActivity currentCtx = ctx;</code> with <code>final Context currentCtx = ctx.getContext();</code> and in the JavaScript file replace <code>PhoneGap</code> with <code>cordova</code>. Also note that GitHub sometimes renders <code>README.md</code> wrong; see <a href=\"https://raw.github.com/phonegap/phonegap-plugins/master/Android/DatePicker/README.md\">its raw version</a>. The iOS plugin is already updated for Cordova.</p></li>\n</ul></li>\n<li><p>Even when <code>&lt;input type=\"date\"&gt;</code> is supported, things might look messy:</p>\n\n<ul>\n<li><p>iOS 5 nicely displays <code>2012-06-01</code> in a localized format, like <code>1 Jun. 2012</code> or <code>June 1, 2012</code> (and even updates that immediately while still operating the date picker). However, the Galaxy S2 running Android 4.0.3 shows the ugly <code>2012-6-1</code> or <code>2012-06-01</code>, no matter which locale is used.</p></li>\n<li><p>iOS 5 on an iPad (simulator) does not hide the keyboard when that is already visible when touching the date input, or when using \"previous\" or \"next\" in another input. It then simultaneously shows the date picker below the input <em>and</em> the keyboard at the bottom, and <em>seems</em> to allow any input from both. However, though it does change the visible value, the keyboard input is actually ignored. (Shown when reading back the value, or when invoking the date picker again.) When the keyboard was not yet shown, then touching the date input only shows the date picker, not the keyboard. <em>(This might be different on a real device, please comment or edit!)</em></p></li>\n<li><p>Devices might show a cursor in the input field, and a long press might trigger the clipboard options, possibly showing the regular keyboard too. When clicking, some devices might even show the regular keyboard for a split second, before changing to show the date picker.</p></li>\n</ul></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 76
                },
                {
                    "body": "<p>You could use <a href=\"http://docs.trigger.io/en/v1.4/modules/ui.html\" rel=\"nofollow\">Trigger.io's UI</a> module to use the native Android date / time picker with a regular HTML5 input. Doing that does require using the overall framework though (so won't work as a regular mobile web page).</p>\n\n<p>You can see before and after screenshots in this blog post: <a href=\"http://trigger.io/cross-platform-application-development-blog/2012/11/16/new-feature-roundup-native-date-time-picker-analytics-with-flurry-android-events/\" rel=\"nofollow\">date time picker</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>My answer is over-simplistic. \nIf you like to write simple code that works cross-platform, then use the <strong>window.prompt</strong> method to ask the user for a date. Obviously you need to validate with a regex and then create the date object.</p>\n\n<pre><code>function onInputClick(e){\nvar r = window.prompt(\"Give me a date (YYYY-MM-DD)\", \"2014-01-01\");\nif(/[\\d]{4}-[\\d]{1,2}-[\\d]{1,2}/.test(r)){\n    //date ok\n    e.value=r;\n    var split=e.value.split(\"-\");\n    var date=new Date(parseInt(split[0]),parseInt(split[1])-1,parseInt(split[2]));\n}else{\n    alert(\"Invalid date. Try again.\");\n}\n}\n</code></pre>\n\n<p>In you HTML:</p>\n\n<pre><code>&lt;input type=\"text\" onclick=\"onInputClick(this)\" value=\"2014-01-01\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>On your form elements use <code>input type=\"time\"</code>. It will save you all the hassle of trying to use a data picker library.</p>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>I'm trying to explore the posibilities with running a native web-app on different platforms using HTML5. Currently, an <code>&lt;input type=\"date\"&gt;</code>field just opens the standard soft keyboard on Android and iOS. I suppose that in the future the mobile OS's soft keyboards will include date pickers and such - just as <code>&lt;select&gt;</code> invokes the native select today.</p>\n\n<p>Since this isn't implemented on either Android or iOS, but is implemented in native UI, is it possible for a web-app to invoke the native date picker, i.e. when clicked on?</p>\n\n<p>This would make it possible for us to stop using JavaScript libraries like jQuery mobile and YUI.</p>\n\n<p>If my question is in any way unclear, please tell me. Thank you in advance :-)</p>\n",
            "last_activity_date": 1407538089,
            "question_id": 4946919,
            "score": 53,
            "tags": [
                "javascript",
                "iphone",
                "android",
                "ios",
                "html5"
            ],
            "title": "Invoke native date picker from web-app on iOS/Android"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>check for <code>keyCode</code> &amp;&amp; <code>which</code> &amp; <code>keyup</code> || <code>keydown</code></p>\n\n<pre><code>$(document).keydown(function(e){\n   var code = e.keyCode ? e.keyCode : e.which;\n   alert(code);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>$(document).keyup(function(e) {\n\n  if (e.keyCode == 27) { &lt;DO YOUR WORK HERE&gt; }   // escape key maps to keycode `27`\n});\n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/questions/1160008/which-keycode-for-escape-key-with-jquery\">Which keycode for escape key with jQuery</a></p>\n",
                    "is_accepted": true,
                    "score": 339
                },
                {
                    "body": "<p>either use <code>.keydown()</code> or <code>.keyup()</code>...</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The <code>keydown</code> event will work fine for Escape and has the benefit of allowing you to use <code>keyCode</code> in all browsers. Also, you need to attach the listener to <code>document</code> rather than the body:</p>\n\n<pre><code>document.onkeydown = function(evt) {\n    evt = evt || window.event;\n    if (evt.keyCode == 27) {\n        alert(\"Escape\");\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>Using <a href=\"http://en.wikipedia.org/wiki/JavaScript\">JavaScript</a> you can do check working <strong><a href=\"http://jsfiddle.net/m9w8m/\">jsfiddle</a></strong> </p>\n\n<pre><code>document.onkeydown = function(evt) {\n    evt = evt || window.event;\n    if (evt.keyCode == 27) {\n        alert('Esc key pressed.');\n    }\n};\n</code></pre>\n\n<p>Using <a href=\"http://jquery.com/\">jQuery</a> you can do check working <strong><a href=\"http://jsfiddle.net/MQHVa/1/\">jsfiddle</a></strong> </p>\n\n<pre><code>jQuery(document).on('keyup',function(evt) {\n    if (evt.keyCode == 27) {\n       alert('Esc key pressed.');\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Best way is to make function for this</p>\n\n<p><strong>FUNCTION:</strong></p>\n\n<pre><code>$.fn.escape = function (callback) {\n    return this.each(function () {\n        $(document).on(\"keypress\", this, function (e) {\n            var keycode = (e.keyCode ? e.keyCode : e.which);\n            if (keycode === 27) {\n                callback.call(this, e);\n            };\n        });\n    });\n};\n</code></pre>\n\n<p><strong>EXAMPLE:</strong></p>\n\n<pre><code>$(\"#my-div\").escape(function () {\n    alert('Escape!');\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1160008/which-keycode-for-escape-key-with-jquery\">Which keycode for escape key with jQuery</a>  </p>\n</blockquote>\n\n\n\n<p>How to detect escape key press in IE, Firefox and Chrome?\nBelow code works in IE and alerts <code>27</code>, but in firefox it alerts <code>0</code></p>\n\n<pre><code>$('body').keypress(function(e){\n    alert(e.which);\n    if(e.which == 27){\n        // Close my modal window\n    }\n});\n</code></pre>\n",
            "last_activity_date": 1424693288,
            "question_id": 3369593,
            "score": 184,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events",
                "key"
            ],
            "title": "How to detect escape key press with JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I figured it out!</p>\n\n<p>The Visual Studio installer must have added an errant line to the registry.</p>\n\n<p>open up <code>regedit</code> and take a look at this registry key:</p>\n\n<p><img src=\"http://i.stack.imgur.com/PLamg.png\" alt=\"enter image description here\"></p>\n\n<p>See that key? The Content Type key? <strong>change its value from text/plain to text/javascript.</strong></p>\n\n<p>Finally chrome can breathe easy again.</p>\n\n<p>I should note that neither Content Type nor PercievedType are there by default on Windows 7, so you could probably safely delete them both, but the minimum you need to do is that edit.</p>\n\n<p>Anyway I hope this fixes it for you too!</p>\n",
                    "is_accepted": true,
                    "score": 186
                },
                {
                    "body": "<p>I tried fixing this problem using this method but it didn't work for me. </p>\n\n<p>My problem was that IIS manager didn't have MIME types in HTTP Features.</p>\n\n<p>I was able to turn it on by enabling Static Context via...</p>\n\n<p>--> Control Panel </p>\n\n<p>--> Programs </p>\n\n<p>--> Turn Windows features on or off </p>\n\n<p>--> Internet Information Services </p>\n\n<p>--> World Wide Web Services </p>\n\n<p>--> Common HTTP features </p>\n\n<p><strong>--> [X] Static Content.</strong> </p>\n\n<p>After this, MIME types appeared and everything started working again.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>The accepted answer is a great one! However, just to post an answer for those who encounter problem like me, who use a department/college computer sometimes, where I do not have the permission to change any key value in regedit.</p>\n\n<p>Change </p>\n\n<p><code>&lt;script type=\"text/javascript\" src=\"main.js\"&gt;&lt;/script&gt;</code></p>\n\n<p>to </p>\n\n<p><code>&lt;script src=\"main.js\"&gt;&lt;/script&gt;</code></p>\n\n<p>Although the error message still exist, the page loaded correctly.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm getting a \"Resource interpreted as Script but transferred with MIME type text/plain\" warning in Google Chrome when including a local script file.</p>\n\n<p>I know the problem appears when loading a file from a server or through ajax which most often depends on wrong headers being set.</p>\n\n<p>The weird thing is that I get this warning even though it is run from a local folder: <code>file:///C:/test/foo.html</code></p>\n\n<p>This happens only in Chrome with the most basic html there is:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n    &lt;html&gt;\n    &lt;head&gt;\n        &lt;script type=\"text/javascript\" src=\"bar.js\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>bar.js is also as simple as it can get:</p>\n\n<pre><code>function hello() {}\n</code></pre>\n\n<p>I've tried adding a meta tag: </p>\n\n<pre><code>&lt;meta http-equiv=\"content-script-type\" content=\"text/javascript\"&gt;\n</code></pre>\n\n<p>and tested with other doctypes but nothing seems to help.</p>\n\n<p>This obviously isn't a real issue since the scripts still work fine, but I'm working on a large project and currently have around 150 scripts included. It therefore makes it difficult to see when an actual warning occurs in between them.</p>\n\n<p>Everything works fine when I run the file on a server, locally or remote.</p>\n\n<p>Any ideas on why chrome is annoying me with this?</p>\n",
            "last_activity_date": 1422904656,
            "question_id": 12003107,
            "score": 89,
            "tags": [
                "javascript",
                "html",
                "google-chrome",
                "mime-types"
            ],
            "title": "Resource interpreted as Script but transferred with MIME type text/plain - for local file"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This works in all browsers:</p>\n\n<pre><code>window.location.href = '...';\n</code></pre>\n\n<p>If you wanted to change the page without it reflecting in the browser back history, you can do:</p>\n\n<pre><code>window.location.replace('...');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 456
                },
                {
                    "body": "<p>Try this :</p>\n\n<ol>\n<li>window.location.href = '<a href=\"http://www.google.com\">http://www.google.com</a>';</li>\n<li>window.location.assign(\"<a href=\"http://www.w3schools.com\">http://www.w3schools.com</a>\");</li>\n<li>window.location = '<a href=\"http://www.google.com\">http://www.google.com</a>';</li>\n</ol>\n\n<p>For more see this link : <a href=\"http://www.phpied.com/files/location-location/location-location.html\">other ways to reload the page with JavaScript</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>it seems that this is the correct way <code>window.location.assign(\"http://www.mozilla.org\");</code></p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.location\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/Window.location</a></p>\n\n<p><a href=\"http://www.w3schools.com/js/js_window_location.asp\" rel=\"nofollow\">http://www.w3schools.com/js/js_window_location.asp</a></p>\n\n<p><a href=\"http://jstricks.com/javascript-redirect-page-redirection/\" rel=\"nofollow\">http://jstricks.com/javascript-redirect-page-redirection/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is the best (correct, modern, cross-browser, safe) way to get a web browser to navigate to a URL of your choice using Javascript?</p>\n",
            "last_activity_date": 1424202293,
            "question_id": 1226714,
            "score": 241,
            "tags": [
                "javascript"
            ],
            "title": "How to get browser to navigate to URL in Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/apply\"><code>.apply()</code></a> to have the same access to <code>arguments</code> in function <code>b</code>, like this:</p>\n\n<pre><code>function a(args){\n    b.apply(this, arguments);\n}\nfunction b(args){\n   alert(arguments); //arguments[0] = 1, etc\n}\na(1,2,3);\u200b\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/nick_craver/UPMD3/\">You can test it out here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 194
                },
                {
                    "body": "<p>The explanation that none of the other answers supplies is that the original arguments <em>are</em> still available, but not in the original position in the <code>arguments</code> object.  </p>\n\n<p>The <code>arguments</code> object contains one element for each actual parameter provided to the function. When you call <code>a</code> you supply three arguments: the numbers <code>1</code>, <code>2</code>, and, <code>3</code>. So, <code>arguments</code> contains <code>[1, 2, 3]</code>.</p>\n\n<pre><code>function a(args){\n    console.log(arguments) // [1, 2, 3]\n    b(arguments);\n}\n</code></pre>\n\n<p>When you call <code>b</code>, however, you pass exactly <em>one</em> argument: <code>a</code>'s <code>arguments</code> object. So <code>arguments</code> contains <code>[[1, 2, 3]]</code> (i.e. one element, which is <code>a</code>'s <code>arguments</code> object, which has properties containing the original arguments to <code>a</code>).</p>\n\n<pre><code>function b(args){\n    // arguments are lost?\n    console.log(arguments) // [[1, 2, 3]]\n}\n\na(1,2,3);\n</code></pre>\n\n<p>As @Nick demonstrated, you can use <code>apply</code> to provide a set <code>arguments</code> object in the call.</p>\n\n<p>The following achieves the same result:</p>\n\n<pre><code>function a(args){\n    b(arguments[0], arguments[1], arguments[2]); // three arguments\n}\n</code></pre>\n\n<p>But <code>apply</code> is the correct solution in the general case.</p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>This is how this could be done, without confusion about scopes:</p>\n\n<pre><code>this.a.bind(arguments)();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've tried the following with no success:</p>\n\n<pre><code>function a(args){\n    b(arguments);\n}\n\nfunction b(args){\n    // arguments are lost?\n}\n\na(1,2,3);\n</code></pre>\n\n<p>In function a, I can use the arguments keyword to access an array of arguments, in function b these are lost. Is there a way of passing arguments to another javascript function like I try to do?</p>\n",
            "last_activity_date": 1414940145,
            "question_id": 3914557,
            "score": 125,
            "tags": [
                "javascript"
            ],
            "title": "Passing arguments forward to another javascript function"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>For VML detection, here's what <a href=\"http://maps.google.com/intl/en%5FALL/mapfiles/73/maps2.api/main.js\">google maps does</a> (search for \"<code>function Xd</code>\"):</p>\n\n<pre><code>function supportsVml() {\n    if (typeof supportsVml.supported == \"undefined\") {\n        var a = document.body.appendChild(document.createElement('div'));\n        a.innerHTML = '&lt;v:shape id=\"vml_flag1\" adj=\"1\" /&gt;';\n        var b = a.firstChild;\n        b.style.behavior = \"url(#default#VML)\";\n        supportsVml.supported = b ? typeof b.adj == \"object\": true;\n        a.parentNode.removeChild(a);\n    }\n    return supportsVml.supported\n}\n</code></pre>\n\n<p>I see what you mean about FF: it allows arbitrary elements to be created, including vml elements (<code>&lt;v:shape&gt;</code>). It looks like it's the test for the <a href=\"http://msdn.microsoft.com/en-us/library/bb250527%28VS.85%29.aspx\">adjacency attribute</a> that can determine if the created element is truly interpreted as a vml object.</p>\n\n<p>For SVG detection, this works nicely:</p>\n\n<pre><code>function supportsSvg() {\n    return document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#Shape\", \"1.0\")\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>I'd suggest one tweak to crescentfresh's answer - use </p>\n\n<pre><code>document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\")\n</code></pre>\n\n<p>rather than </p>\n\n<pre><code>document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#Shape\", \"1.0\")\n</code></pre>\n\n<p>to detect SVG. WebKit is currently very picky about reporting features, and returns false for <code>feature#Shape</code> despite having relatively solid SVG support. The <code>feature#BasicStructure</code> alternative is suggested in the comments to <a href=\"https://bugs.webkit.org/show_bug.cgi?id=17400\" rel=\"nofollow\">https://bugs.webkit.org/show_bug.cgi?id=17400</a> and gives me the answers I expected on Firefox/Opera/Safari/Chrome (true) and IE (false).</p>\n\n<p>Note that the <code>implementation.hasFeature</code> approach will ignore support via plugins, so if you want to check for e.g. the Adobe SVG Viewer plugin for IE you'll need to do that separately. I'd imagine the same is true for the RENESIS plugin, but haven't checked.</p>\n",
                    "is_accepted": false,
                    "score": 53
                },
                {
                    "body": "<p>You might like to skip this and use a JS library which will allow you to do vector drawing cross-browser, if that's the intention. The library will then handle this, outputting to SVG if supported or fallback to canvas, VML, flash, silverlight, etc if not, depending on what's available. </p>\n\n<p>Examples of libraries that will do this are, in no particular order: </p>\n\n<ul>\n<li><strong>dojo.gfx</strong> (<a href=\"http://docs.dojocampus.org/dojox/gfx/\" rel=\"nofollow\">http://docs.dojocampus.org/dojox/gfx/</a>)</li>\n<li><strong>Rapha\u00ebl</strong> (<a href=\"http://raphaeljs.com/\" rel=\"nofollow\">http://raphaeljs.com/</a>)</li>\n<li><strong>SVGWeb</strong> (<a href=\"http://code.google.com/p/svgweb/\" rel=\"nofollow\">http://code.google.com/p/svgweb/</a>)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The SVG check didn't work for me in Chrome, so I looked at what the Modernizer library does in their check (<a href=\"https://github.com/Modernizr/Modernizr/blob/master/modernizr.js\">https://github.com/Modernizr/Modernizr/blob/master/modernizr.js</a>).</p>\n\n<p>Based on their code, this is what worked for me:</p>\n\n<pre><code>function supportsSVG() {\n    return !!document.createElementNS &amp;&amp; !!document.createElementNS('http://www.w3.org/2000/svg', \"svg\").createSVGRect;\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<pre><code>var svgSupport = (window.SVGSVGElement) ? true : false;\n</code></pre>\n\n<p>Works, if you assume that non-SVG browsers are IE5.5 or better and can support VML.\nTested on IE6, Firefox 8, Chrome 14.0.</p>\n\n<p>Raphael is very cool, but it does not support the concept of groups, which can be limiting depending on what you are doing.\nDmitry will probably flame me for saying so, though.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>On the other hand...\nWhen you want to know before you serve the page:\nScrape this page:\n<a href=\"http://caniuse.com/#cats=SVG&amp;statuses=rec&amp;nodetails=1\" rel=\"nofollow\">http://caniuse.com/#cats=SVG&amp;statuses=rec&amp;nodetails=1</a>\nFor the incoming browser/user agent.\nDisclaimer:\nI've not yet implemented this.\nAs I'm hoping caniuse.com will publish an api to work with.</p>\n\n<p>MarkT</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You may want to check out <a href=\"http://www.modernizr.com/docs/#features-misc\" rel=\"nofollow\">http://www.modernizr.com/docs/#features-misc</a> as it contains support for actual detection of SVG capability as opposed to user-agent sniffing which can be easily corrupted.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The SVG-check did not work in Chrome because it specifies version 1.0. This should work better:</p>\n\n<pre><code>document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#Shape\", \"1.1\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm writing a bit of javascript and need to choose between SVG or VML (or both, or something else, it's a weird world).\nWhilst I know that for now that only IE supports VML, I'd much rather detect functionality than platform.</p>\n\n<p>SVG appears to have a few properties which you can go for: window.SVGAngle for example.</p>\n\n<p>Is this the best way to check for SVG support?</p>\n\n<p>Is there any equivalent for VML?</p>\n\n<p>Unfortuntaly - in firefox I can quite happily do all the rendering in VML without error - just nothing happens on screen. It's quite hard to detect that situation from script.</p>\n",
            "last_activity_date": 1418754746,
            "question_id": 654112,
            "score": 57,
            "tags": [
                "javascript",
                "internet-explorer",
                "svg",
                "browser-detection",
                "vml"
            ],
            "title": "How do you detect support for VML or SVG in a browser"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I found the following info on this site: <a href=\"http://www.devguru.com/Technologies/ecmascript/quickref/doc%5Fdomain.html\">devguru</a>. More concretely, here's the quote:</p>\n\n<blockquote>\n  <p>This property sets or returns the\n  domain name of the server from which\n  the document originated. This defaults\n  to the domain name of the server that\n  the document was retreived from, but\n  can be changed to a suffix (and only a\n  suffix) of this name. This allows the\n  sharing of script properties, security\n  allowing, between documents delivered\n  from different servers providing they\n  share the same domain suffix.</p>\n</blockquote>\n\n<p>It seems to me that it allows cross site scripting for same domain (even if subdomain is different). </p>\n\n<p>I would suppose that if you don't touch document.domain, the js engine only allows other javascripts from same domain. With that property, you'll be able to deploy to other <strong>sub-domains</strong> like the orbited docs state.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I actually wrote this code.</p>\n\n<p>When trying to do cross-subdomain/port comet, the iframe needs to have the same <code>document.domain</code> value as the parent frame. Unfortunately, the browser stores the domain name AND port internally for the original <code>document.domain</code> value. But the getter and setter in javascript knows nothing about the port. So the problem is this: if the top frame <code>document.domain</code> is <code>('example.com', 80)</code>, and the bottom frame is <code>('comet.example.com', 80)</code>, how do you get the bottom frame to be <code>('example.com', 80)</code> as well?</p>\n\n<p>You can't, as changing the hostname portion will necessarily cause the port to be set to <code>null</code>, so the best you can do is <code>('example.com', null)</code> in the bottom frame. So the top frame also needs to be set to that value, and setting <code>document.domain=document.domain</code> does just that. It changes the internal representation in the browser from <code>('example.com', 80)</code> to <code>('example.com', null)</code> and then everything matches up and cross-port/subdomain frame communication works.</p>\n",
                    "is_accepted": true,
                    "score": 131
                },
                {
                    "body": "<p>Browsers distinguish between \n(a) document.domain when not explicitly set \nand\n(b) document.domain when explicitly set\n... even if they return the same value.</p>\n\n<p>Explicitly setting the value indicates intent to \"cooperate\" with a script on another subdomain (under the same parent domain). </p>\n\n<p>If BOTH the parent page AND the external script explicitly set document.domain to the same value, the same-origin policy restriction may be bypassed and each script may access all the (otherwise restricted) objects and properties of each others' contexts.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>The <code>document.domain</code> pulls a default from the actual URL if not explicitly set. Browsers will record if <code>document.domain</code> has come as a default from the URL or if it was explicitly set. Both must be a default for the same domain or both must be explicitly set to the same domain for this to work. If one is default and one is explicitly set, both matching if read, the two pages will still be forbidden from talking with each other.</p>\n\n<p>See: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/document.domain\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/DOM/document.domain</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>The client-side JS component of <a href=\"http://orbited.org/\">Orbited</a> (a Comet server), requires that if the server is running on a different domain or port to the JS itself, you must execute</p>\n\n<pre><code>document.domain = document.domain;\n</code></pre>\n\n<p>before any other JS is loaded.  (See the <a href=\"http://orbited.org/wiki/Deployment\">documentation</a>.)</p>\n\n<p>What does this do?  It looks like a NOOP!  (I've checked and it is in fact necessary.)   </p>\n",
            "last_activity_date": 1420749230,
            "question_id": 1481251,
            "score": 51,
            "tags": [
                "javascript",
                "orbited"
            ],
            "title": "What does document.domain = document.domain do?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If you want to use page feed (like your own page feed) in an app for showing it to others. Just use your own access_token to get it.<br>\n<strong>BUT!</strong> as it's not considered as a good practice you can also login with the Page or Application and use their access_token.</p>\n\n<p>For more information please read the <a href=\"http://developers.facebook.com/docs/authentication/\" rel=\"nofollow\">official documentation on authentication</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're anything like me your clients won't want a standard Facebook likebox plugin, they'll want it all styled and customised their own way.</p>\n\n<p>You don't need to spend all day going round the official documentation wondering if any of it applies to you for something simple like this, it's quite easy.  The confusion arises because you'd assume that with all these keys and secret ids you'd have to get permission or authentication from the Facebook page you wanted to pull the feed from - you don't.  All you need is a valid app and you can get the feed for any public page.</p>\n\n<p>Set your app up in Facebook and it will give you an app id and an API key.  Get the profile id for the public page feed you want, and that's all you need.  You can then use the following code to retrieve the auth token and then then use that to return the feed data as a JSON object.</p>\n\n<pre><code>&lt;?php\n\nfunction fetchUrl($url){\n\n $ch = curl_init();\n curl_setopt($ch, CURLOPT_URL, $url);\n curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n curl_setopt($ch, CURLOPT_TIMEOUT, 20);\n // You may need to add the line below\n // curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,false);\n\n $feedData = curl_exec($ch);\n curl_close($ch); \n\n return $feedData;\n\n}\n\n$profile_id = \"the_profile_id_of_the_page_you_want\";\n\n//App Info, needed for Auth\n$app_id = \"your_app_id_in_here\";\n$app_secret = \"your_app_secret_in_here\";\n\n//Retrieve auth token\n$authToken = fetchUrl(\"https://graph.facebook.com/oauth/access_token?grant_type=client_credentials&amp;client_id={$app_id}&amp;client_secret={$app_secret}\");\n\n$json_object = fetchUrl(\"https://graph.facebook.com/{$profile_id}/feed?{$authToken}\");\n</code></pre>\n\n<p>Thanks to an edit someone suggested I reckon this code came from <a href=\"https://illuminatikarate.com/blog/facebook-graph-api-requires-access-token-for-feed-access/\">here</a> (looks familiar anyway :) ) and there's some more info in the comments there that might help.</p>\n\n<p>You can then parse the object, here's some code to do it in PHP based on this thread;</p>\n\n<p><a href=\"http://stackoverflow.com/questions/263392/handling-data-in-a-php-json-object\">Handling data in a PHP JSON Object</a></p>\n\n<pre><code>$feedarray = json_decode($json_object);\n\nforeach ( $feedarray-&gt;data as $feed_data )\n{\n    echo \"&lt;h2&gt;{$feed_data-&gt;name}&lt;/h2&gt;&lt;br /&gt;\";\n    echo \"{$feed_data-&gt;message}&lt;br /&gt;&lt;br /&gt;\";\n}\n</code></pre>\n\n<p>To find out what's available to you in the json object you can output the url in a browser and copy/paste it into this useful json visualisation tool;</p>\n\n<p><a href=\"http://chris.photobooks.com/json/default.htm\">http://chris.photobooks.com/json/default.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 53
                },
                {
                    "body": "<p>I think in order to do this you have to use FQL not simply the Graph API. This is what I'm doing (replace <code>PAGE_ID</code> with the ID of your page, keep the quotes):</p>\n\n<pre><code>SELECT post_id, created_time, type, message, attachment \nFROM stream \nWHERE source_id = 'PAGE_ID' \nAND actor_id = source_id\n</code></pre>\n\n<p><a href=\"https://developers.facebook.com/docs/reference/fql/stream/\" rel=\"nofollow\">https://developers.facebook.com/docs/reference/fql/stream/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In response to the message of @Psyked and @James_David_Low, it is not recommended to use FQL because is deprecated.</p>\n\n<p><em>\"...There are two low-level HTTP APIs that are also used at Facebook to access the graph: FQL and the Legacy REST API. These APIs contain similar and overlapping functionality, but are deprecated.\"</em></p>\n\n<p>New features are generally only available in the <a href=\"http://developers.facebook.com/docs/getting-started/graphapi/\" rel=\"nofollow\">Graph API</a>. <strong>To future-proof your app you should be using the Graph API in your app if you can.</strong></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>Facebook app access token doesn't ever expire or change unless I manually reset the secret</p>\n</blockquote>\n\n<p>That's correct.</p>\n\n<blockquote>\n  <p>App tokens do not expire unless the App Secret is reset. App access tokens are unique to each app.</p>\n</blockquote>\n\n<p>Since public feeds take <strong>any</strong> valid access token, application tokens can be used.</p>\n\n<p>Go to <a href=\"https://developers.facebook.com/tools/access_token\" rel=\"nofollow\">https://developers.facebook.com/tools/access_token</a> and you would not require a flow. Then you can just hard code it in. The moment you reset the secret this method is void.</p>\n\n<pre><code>$access_token = '1111111111|2Cha_1-n5'\n$graph_url = \"https://graph.facebook.com/Boo/posts?access_token=\" \n    . $access_token;\n$page_posts = json_decode(file_get_contents($graph_url), true);\n</code></pre>\n\n<p>Then iterate through the pages</p>\n\n<pre><code>foreach($page_posts['data'] as $post){\n    $post_link = $post['actions'][0]['link'];\n    $page_id = $post['from']['id'];\n    $page_name = $post['from']['name'];\n    $message = ($post['message']) ? $post['message'] : \" \";\n    $name = ($post['name']) ? $post['name'] : \" \";\n    $story = ($post['story']) ? $post['story'] : \" \";\n    $post_time = $post['updated_time'];\n}\n</code></pre>\n\n<p><sub>Source: <a href=\"http://philippeharewood.com/facebook/how-to-get-facebook-access-tokens-in-php-for-public-posts-the-basic-sauce/\" rel=\"nofollow\">http://philippeharewood.com/facebook/how-to-get-facebook-access-tokens-in-php-for-public-posts-the-basic-sauce/</a></sub></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I've never used Facebook's Graph API, or OAuth. I'm simply trying to get a public Facebook page's feed using the Graph API, but it requires an access token. I don't want to hassle the users to login and allow access to get their token. A Facebook app access token could be used to get a public feed, but I'm trying to do this entirely in Javascript, so I can't use the app secret to do so. I read somewhere that a Facebook app access token doesn't ever expire or change unless I manually reset the secret. Is this true? Would it be safe to just hard code in the Access Token? If not, is there some way I could authenticate an app to get the token without having to involve a user? Is there some type of generic app token I could use?</p>\n",
            "last_activity_date": 1367304509,
            "question_id": 9373645,
            "score": 22,
            "tags": [
                "javascript",
                "facebook",
                "facebook-graph-api",
                "client-side",
                "oauth-2.0"
            ],
            "title": "Can you get a public Facebook page&#39;s feed using Graph API without asking a user to allow?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can intercept the onsubmit event by js.\nCall a confirmation alert and them grab the result.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var answer = confirm(\"Save data?\")\nif (answer){\n       //some code\n}\nelse{\n        //some code\n}\n</code></pre>\n\n<p>Use <code>confirm</code> instead of alert. This is the easiest way to achieve that functionality.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>You\u2019re probably looking for <code>confirm()</code>, which displays a prompt and returns <code>true</code> or <code>false</code> based on what the user decided:</p>\n\n<pre><code>if (confirm('Are you sure you want to save this thing into the database?')) {\n    // Save it!\n} else {\n    // Do nothing!\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 397
                },
                {
                    "body": "<p>How to do this using 'inline' JavaScript:</p>\n\n<pre><code>&lt;form action=\"http://www.google.com/search\"&gt;\n  &lt;input type=\"text\" name=\"q\" /&gt;\n  &lt;input type=\"submit\" value=\"Go\"\n    onclick=\"return confirm('Are you sure you want to search Google?')\"\n  /&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>jQuery can make <code>confirm()</code> super easy to code using data attributes in your HTML:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$(\":not(form)[data-confirm]\").on(\"click\", function(){\r\n  return confirm($(this).data(\"confirm\"));\r\n});\r\n\r\n$(\"form[data-confirm]\").on(\"submit\", function(){\r\n  return confirm($(this).data(\"confirm\"));\r\n});</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;a href=\"http://www.example.com\" data-confirm=\"Are you sure you want to load this URL?\"&gt;Anchor&lt;/a&gt;\r\n\r\n&lt;form action=\"http://www.example.com\" data-confirm=\"Are you sure you want to submit the form?\"&gt;\r\n  &lt;button type=\"button\" data-confirm=\"Are you sure you want to click the button?\"&gt;Button&lt;/button&gt;\r\n  &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\r\n&lt;/form&gt;\r\n\r\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The best way for me to use confirm() was this:</p>\n\n<pre><code>$('.deleteAction').on('click', function(){\n    return confirm(\"Are you sure?\");\n});\n</code></pre>\n\n<p>$('.deleteAction') is an anchor element and my handler prevents it's default action. @rybo111 did the same but with no explanation.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am going to make a button to take an action and save the data into database. Once click on the button, a javascript alert will ask me yes or cancel. Once select yes the data will be inserted to database else no action taken.</p>\n\n<p>Anyone can help?</p>\n",
            "last_activity_date": 1411054341,
            "question_id": 9334636,
            "score": 190,
            "tags": [
                "javascript"
            ],
            "title": "Javascript &#39;yes no&#39; alert"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>Use splice function on arrays. Specify the position of the start element and the length of the subsequence you want to remove.</p>\n\n<pre><code>someArray.splice(pos, 1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is not an array. It is an invalid Object.</p>\n\n<p>I suppose you meant:</p>\n\n<pre><code>someArray = [{name:\"Kristian\", lines:\"2,5,10\"},\n             {name:\"John\", lines:\"1,19,26,96\"}];\n</code></pre>\n\n<p>You can use several methods to remove an item from it:</p>\n\n<pre><code>//1\nsomeArray.shift(); // first element removed\n//2\nsomeArray = someArray.slice(1); // first element removed\n//3\nsomeArray.splice(0,1); // first element removed\n//4\nsomeArray.pop(); // last element removed\n</code></pre>\n\n<p>If you want to remove element at position <code>x</code>, use:</p>\n\n<pre><code>someArray.splice(x,1);\n</code></pre>\n\n<p>Reply to the comment of <a href=\"http://stackoverflow.com/users/995721/chill182\">@chill182</a>: you can remove one ore more elements from an array using <code>Array.filter</code> (see <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"><strong>MDN</strong></a>), e.g.</p>\n\n<pre><code>someArray = [{name:\"Kristian\", lines:\"2,5,10\"},\n             {name:\"John\", lines:\"1,19,26,96\"},\n             {name:\"Brian\",lines:\"3,9,62,36\" }]\njohnRemoved = someArray\n               .filter(function (el) {\n                        return el.name !== \"John\";\n                       });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 81
                },
                {
                    "body": "<p>The clean solution would be to use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/filter\"><code>Array.filter</code></a>:</p>\n\n<pre><code>var filtered = someArray.filter(function(el) { return el.Name != \"Kristian\"; }); \n</code></pre>\n\n<p>The problem with this is that it <a href=\"http://kangax.github.com/es5-compat-table/\">does not work</a> on IE &lt; 9. However, you can include code from a Javascript library (e.g. <a href=\"http://documentcloud.github.com/underscore/#filter\">underscore.js</a>) that implements this for any browser.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Simplest solution would be to create a map that stores the indexes for each object by name, like this:</p>\n\n<pre><code>//adding to array\nvar newPerson = {name:\"Kristian\", lines:\"2,5,10\"}\nsomeMap[ newPerson.name ] = someArray.length;\nsomeArray.push( newPerson );\n\n//deleting from the array\nvar index = someMap[ 'Kristian' ];\nsomeArray.splice( index, 1 );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Your \"array\" as shown is invalid JavaScript syntax. Curly brackets <code>{}</code> are for objects with property name/value pairs, but square brackets <code>[]</code> are for arrays - like so:</p>\n\n<pre><code>someArray = [{name:\"Kristian\", lines:\"2,5,10\"}, {name:\"John\", lines:\"1,19,26,96\"}];\n</code></pre>\n\n<p>In that case, you can use the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice\"><code>.splice()</code> method</a> to remove an item. To remove the first item (index 0), say:</p>\n\n<pre><code>someArray.splice(0,1);\n\n// someArray = [{name:\"John\", lines:\"1,19,26,96\"}];\n</code></pre>\n\n<p>If you don't know the index but want to search through the array to find the item with name \"Kristian\" to remove you could to this:</p>\n\n<pre><code>for (var i =0; i &lt; someArray.length; i++)\n   if (someArray[i].name === \"Kristian\") {\n      someArray.splice(i,1);\n      break;\n   }\n</code></pre>\n\n<p>EDIT: I just noticed your question is tagged with \"jQuery\", so you could try the <a href=\"http://api.jquery.com/jQuery.grep/\"><code>$.grep()</code> method</a>:</p>\n\n<pre><code>someArray = $.grep(someArray,\n                   function(o,i) { return o.name === \"Kristian\"; },\n                   true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>There seems to be an error in your array syntax so assuming you mean an array as opposed to an object, <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice\" rel=\"nofollow\">Array.splice</a> is your friend here:</p>\n\n<pre><code>someArray = [{name:\"Kristian\", lines:\"2,5,10\"}, {name:\"John\", lines:\"1,19,26,96\"}];\nsomeArray.splice(1,1)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I recommend using <a href=\"http://documentcloud.github.com/underscore/\">underscore.js</a> or <a href=\"http://sugarjs.com/\">sugar.js</a> for common tasks like this:</p>\n\n<pre><code>// underscore.js\nsomeArray = _.(someArray).reject(function(el) { return el.Name === \"Kristian\"; });\n\n// sugar.js\nsomeArray.remove(function(el) { return el.Name === \"Kristian\"; });\n</code></pre>\n\n<p>in most projects, having a set of helper methods that is provided by libraries like these is quite useful.</p>\n",
                    "is_accepted": false,
                    "score": 64
                },
                {
                    "body": "<p>Although this is probably not that appropriate for this situation I found out the other day that you can also use the <code>delete</code> keyword to remove an item from an array if you don't need to alter the size of the array e.g.</p>\n\n<pre><code>var myArray = [1,2,3];\n\ndelete myArray[1];\n\nconsole.log(myArray[1]); //undefined\n\nconsole.log(myArray.length); //3 - doesn't actually shrink the array down\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use javascript's splice() function. </p>\n\n<p>This may help: <a href=\"http://www.w3schools.com/jsref/jsref_splice.asp\" rel=\"nofollow\">http://www.w3schools.com/jsref/jsref_splice.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>How about this?</p>\n\n<pre><code>$.each(someArray, function(i){\n    if(someArray[i].name === 'Kristian') {\n        someArray.splice(i,1);\n        return false;\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>Vote for the <a href=\"http://underscorejs.org/\" rel=\"nofollow\">UndercoreJS</a> for simple work with arrays.</p>\n\n<p><a href=\"http://underscorejs.org/#without\" rel=\"nofollow\" title=\"_.without&#40;&#41;\">_.without()</a> function helps to remove an element:</p>\n\n<pre><code> _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n    =&gt; [2, 3, 4]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I have made a dynamic function takes the objects Array, Key and value and returns the same array after removing the desired object:</p>\n\n<pre><code>function removeFunction (myObjects,prop,valu)\n        {\n             return myObjects.filter(function (val) {\n              return val[prop] !== valu;\n          });\n\n        }\n</code></pre>\n\n<p>Full Example: <a href=\"http://jsfiddle.net/aPH7m/1/\">DEMO</a></p>\n\n<pre><code>var obj = {\n            \"results\": [\n              {\n                  \"id\": \"460\",\n                  \"name\": \"Widget 1\",\n                  \"loc\": \"Shed\"\n              }, {\n                  \"id\": \"461\",\n                  \"name\": \"Widget 2\",\n                  \"loc\": \"Kitchen\"\n              }, {\n                  \"id\": \"462\",\n                  \"name\": \"Widget 3\",\n                  \"loc\": \"bath\"\n              }\n            ]\n            };\n\n\n        function removeFunction (myObjects,prop,valu)\n        {\n             return myObjects.filter(function (val) {\n              return val[prop] !== valu;\n          });\n\n        }\n\n\nconsole.log(removeFunction(obj.results,\"id\",\"460\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>someArray = jQuery.grep(someArray , function (value) {\n        return value.name != 'Kristian';\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is a function that works for me:</p>\n\n<pre><code>function removeFromArray(array, value) {\n    var idx = array.indexOf(value);\n    if (idx !== -1) {\n        array.splice(idx, 1);\n    }\n    return array;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>splice(i, 1) where i is the incremental index of the array will remove the object. \nBut remember splice will also reset the array length so watch out for 'undefined'. Using your example, if you remove 'Kristian', then in the next execution within the loop, i will be 2 but someArray will be a length of 1, therefore if you try to remove \"John\" you will get an \"undefined\" error. One solution to this albeit not elegant is to have separate counter to keep track of index of the element to be removed. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I remove an object from an array? \nI wish to remove the object that includes name \"Kristian\" from \"someArray\". For example:</p>\n\n<pre><code>someArray = [{name:\"Kristian\", lines:\"2,5,10\"},\n             {name:\"John\", lines:\"1,19,26,96\"}];\n</code></pre>\n\n<p><strong>I want to achieve:</strong></p>\n\n<pre><code>someArray = [{name:\"John\", lines:\"1,19,26,96\"}];\n</code></pre>\n",
            "last_activity_date": 1420379669,
            "question_id": 10024866,
            "score": 52,
            "tags": [
                "javascript",
                "jquery",
                "arrays"
            ],
            "title": "Remove Object from Array using JavaScript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Well, I didn\u2019t test it, but try to add those params to the <code>.trackPageview()</code> method, i.e.:</p>\n\n<pre><code>pageTracker._trackPageview(\"?utm_source=...\")\n</code></pre>\n\n<p>Anyways, You have to pass those parameters some how. And this means, you\u2019ll allways have long URL-s with some kind of campaign crap in them. It won\u2019t prevent bookmarking the wrong URL-s, search engines indexing them, etc.</p>\n\n<p>If you want to maintain control of those parameters, setup separate URL-s for partners, that redirects to the tagged target URL:</p>\n\n<pre><code>http://example.com/campaigns/1 -&gt; http://example.com/?utm_source=...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use the Google Analytics API to customize the call to _trackPageview in your example. </p>\n\n<pre><code>pageTracker._trackPageview(\"/inbound/\" + campaignSource + \"/\" + campaignMedium );\n</code></pre>\n\n<p>All of the inbound links will then show up in Google Analytics under the /inbound/ \"pseudo directory\" with a separate \"directory\" for Campaign Source and Campaign Medium.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is a function <a href=\"http://code.google.com/apis/analytics/docs/gaJS/gaJSApi.html#%5Fgat.GA%5FTracker%5F.%5FsetAllowAnchor\"><code>_setAllowAnchor</code></a> in the Trackin API that allows you to specify the tags in the anchor text instead of as query parameters.</p>\n\n<pre><code>pageTracker._setAllowAnchor(true);\n</code></pre>\n\n<p>So you can use <code>http://www.stackoverflow.com/#utm_source=expertexchange</code> and GA will understand it. This way you can avoid the SEO problem.</p>\n\n<p>For the Twitter problem, I suggest you the method described in post <a href=\"http://blog.avangate.com/twitter-analytics-love/\">Tracking Twitter and Shorten URLs in Google Analytics</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>T\u00f6r\u00f6k G\u00e1bor gave me an idea. </p>\n\n<pre><code>// ...\nvar campaignMedium = &lt;%= ViewData.Model.CampaignMedium %&gt;;\nvar campaignSource = &lt;%= ViewData.Model.CampaignSource %&gt;;\nvar campaignName = &lt;%= ViewData.Model.CampaignName %&gt;;\n\n// save the old hash\nvar oldHash = document.location.hash;\n\n// add campaign data to the hash\ndocument.location.hash = 'utm_source=' + escape(campaignSource) + ...;\npageTracker._setAllowAnchor(true);\npageTracker._trackPageview();\n// restore the old hash:\ndocument.location.hash = oldHash;\n</code></pre>\n\n<p>This way, you could create the campaign data in the backend, and then, pass it to the hash dynamically, and then restore it without user even noticing it. I.e. the campaign tracking is 100% independent of the real URL.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I posted this to the Google help forum.</p>\n\n<p>Google Please Read!!! Great enhancement opportunity!!!  This is causing a lot of users not to be able to use the Advertising parameters.  Allow the Advertising parameters to be read from the URL used on trackPageview(url).</p>\n\n<p>In any case, without this capability, I had to use a work-around.  Rather than appending the parameters to the URL.  I temporarily appended them to the URL as a bookmark.  Then I removed them after the trackPageview call.  By adding them as a bookmark, the page is no reloaded.  See the following example.</p>\n\n<pre><code>var pageTracker = _gat._getTracker(param);\nvar orighash = document.location.hash;\nif (orighash == \"\") {\n    orighash = \"none\";  // this is done to prevent page scrolling\n}\ndocument.location.hash = 'utm_source='+source+'&amp;utm_campaign='+campaign+'&amp;utm_medium='+medium+'&amp;utm_content='+content;\npageTracker._setAllowAnchor(true);\npageTracker._trackPageview();\ndocument.location.hash = orighash\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<h2>_set campaignParams</h2>\n\n<p>Your theoretical \"_setCampaignData\" finally exists, in the form of <code>[\"_set\",\"campaignParams\",...]</code></p>\n\n<p>If you have a way to programmatically inject the values you'd like to set (for example, set by a cookie on a redirect, or on the server side and printed onto the page), you can use the <code>_set</code> API to hard-code the campaign params that you'd like to set. </p>\n\n<p>The format for that is just:</p>\n\n<pre><code>_gaq.push(['_set', 'campaignParams', \n'utm_campaign=CAMPAIGN&amp;utm_source=SOURCE&amp;utm_medium=MEDIUM']);\n</code></pre>\n\n<p>So, using your original example:</p>\n\n<pre><code> var campaignMedium = &lt;%= ViewData.Model.CampaignMedium %&gt;;\n var campaignSource = &lt;%= ViewData.Model.CampaignSource %&gt;;\n var campaignName = &lt;%= ViewData.Model.CampaignName %&gt;;\n _gaq.push(['_set', 'campaignParams', \n'utm_campaign=' + campaignName +  '&amp;utm_source=' + campaignSource +'&amp;utm_medium=' + campaignMedium]);\n</code></pre>\n\n<h2>HTML5 History API</h2>\n\n<p>A clever, less complex solution could be to utilize the HTML5 History API to just remove the query string from the URL once Google Analytics is properly initialized. Would only work for HTML5 History API enabled browsers, but would cut a significant amount of the problem.</p>\n\n<p>You would put this code <em>below</em> your <code>_trackPageview</code> call. </p>\n\n<pre><code>if (window.history &amp;&amp; history.replaceState &amp;&amp; (location.search+location.hash).match(/utm_/)) {\n    _gaq.push(function(){\n            history.replaceState({}, \"\", location.pathname); //assuming you want no query string\n    });\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Below is an updated way to do this using the Google Analytics Universal method of Event tracking rather than GA Standard Event tracking. </p>\n\n<p>The entire UTM string can be extracted from the queryString (when there) or pulled from the Google cookie (__utmz) and then passed into Google Analytics using the below code. </p>\n\n<pre><code>ga('send', 'event', 'queryString', 'getQueryString', googleString ); \n</code></pre>\n\n<p>Then, upon execution of whatever trigger you want to create (I use a function named \"widgetTracker\"), you can execute the GA event tracker. </p>\n\n<p>Here's the entire code: </p>\n\n<pre><code>/* JavaScript Document */\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-xxxxxxx-xx', 'xx.xxx');\n  ga('send', 'pageview');\n\n var googleString;  \n var stringArray = [];  \n var queryStringObject = makeQueryStringObject();   \n var QUOT = \"'\";    \n var EQ = '=';  \n var AMP = '&amp;';         \n\n for  ( var v in queryStringObject ) {  \n    var str =  v + EQ + queryStringObject[v] ;  \n    stringArray.push(str);   \n    googleString = stringArray.join(AMP);\n} \n\n         function makeQueryStringObject()   {       \n            var obj = [];       \n            var pageURL = window.location.href;         \n            var URLArray = pageURL.split('?');      \n            if( URLArray[1] )       {           \n                var argsArray = URLArray[1].split('&amp;');             \n                var l = argsArray.length;           \n                for( i=0; i&lt;l; i++ )            {               \n                    var individualArg = argsArray[i].split('=');                \n                    if(individualArg[1] &amp;&amp; individualArg[1].indexOf('#') &gt; -1)              {               \n                        var dropHashArray = individualArg[1].split('#');                    \n                        individualArg[1] = dropHashArray[0];                \n                    }               \n                    obj[ individualArg[0] ] = individualArg[1];     \n                    console.log(\"value of queryStringObject: \" + individualArg[0] + \" :: \" + obj[   individualArg[0] ]);\n\n                }       \n            } else { /* from http://stackoverflow.com/a/14984832/1013405 */         \n                ga1 = parseGACookie();  \n                if(ga1['utmcsr']) {             \n                    var utm_source = ga1['utmcsr'];                     \n                }           \n                    if(ga1['utmccn']) {             \n                        var utm_campaign = ga1['utmccn'];                   \n                    }           if(ga1['utmcmd']) {             \n                        var utm_medium = ga1['utmcmd'];                 \n                        }           \n                        if(ga1['utmctr']) {             \n                            var utm_term = ga1['utmctr'];                           \n                        }           \n                        if(ga1['utmcct']) {             \n                            var utm_content = ga1['utmcct'];                \n                        }       \n                    }   \n                        var googleString2 = \"utm_campaign=\" + utm_campaign + '&amp;' + \"utm_medium=\" + utm_medium + '&amp;' + \"utm_term=\" + utm_term + '&amp;' + \"utm_content=\" + utm_content;  \n                    return obj;     \n                } \n\n                function parseGACookie()  {     \n                var values = {};     \n                var cookie = readCookie(\"__utmz\");     \n                if (cookie) {         \n                    var z = cookie.split('.');         \n                    if (z.length &gt;= 4) {             \n                        var y = z[4].split('|');            \n                         for (i=0; i&lt;y.length; i++) {                 \n                            var pair = y[i].split(\"=\");                 \n                            values[pair[0]] = pair[1];             \n                         }         \n                        }     \n                    }     \n                    return values; \n                }  \n\n\n                function readCookie(name) {     \n                    var nameEQ = name + \"=\";     \n                    var ca = document.cookie.split(';');     \n                    for(var i=0;i &lt; ca.length;i++) {        \n                     var c = ca[i];        \n                      while (c.charAt(0)==' ') c = c.substring(1,c.length);         \n                      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);     \n                    }     \n                    return null; \n                }  \n                function widgetTracker() {  \n                /* event tracking order of elements: send (required), event (required), Category, Action, Label, Value */ \n                    if (googleString) { \n                    ga('send', 'event', 'queryString', 'getQueryString', googleString ); \n                    } else { \n                     ga('send', 'event', 'queryString2', 'getQueryString2', googleString2 ); \n                     }\n                }  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The new(er) universal analytics allows you to specify these params - see the documentation here <a href=\"https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference\" rel=\"nofollow\">https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference</a></p>\n\n<p>Look for the \"Campaign Source\" section for an example of setting what would be the utm_source param.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a supported way in Google Analytics to track a campaign without having to use query string parameters.</p>\n\n<p>In Analytics you can <a href=\"http://www.google.com/support/analytics/bin/answer.py?hl=en&amp;answer=55518\">tag a link to your site</a> with query string parameters such as <code>utm_campaign</code> and <code>utm_medium</code> which carry information about the campaign so that they can be tracked.</p>\n\n<p>Google actually has an <a href=\"http://www.google.com/support/analytics/bin/answer.py?answer=55578&amp;hl=en\">online tool</a> to help in the creation of such links.</p>\n\n<p>For instance if StackOverflow was advertising on Experts Exchange they may have a link like this :</p>\n\n<p><a href=\"http://www.stackoverflow.com/?utm_source=expertexchange&amp;utm_medium=banner&amp;utm_campaign=a-better-expert-exchange\">http://www.stackoverflow.com/?utm_source=expertexchange&amp;utm_medium=banner&amp;utm_campaign=a-better-expert-exchange</a> </p>\n\n<p>For many reasons I don't want these clumsy looking parameters appearing in my URLS :</p>\n\n<ul>\n<li>I want to encourage twittering, and long links discourage this </li>\n<li>I dont want people bookmarking them with campaign IDs in</li>\n<li>I want people to see a clean URL </li>\n<li>I dont want search engines indexing these links.</li>\n<li>I want full control about what parameters are sent to google analytics - and not leave it up to my partners to mess up the URLs they access my site with</li>\n</ul>\n\n<p>I looked a while ago to try to find a way wherein you could set these parameters. <a href=\"http://code.google.com/apis/analytics/docs/gaJS/gaJSApiCampaignTracking.html\">Google has a page</a> which at first glance looks like the solution, but actually isn't. That page describes how you can change the names of the query string parameters to something else - for instance to use <code>src</code> instead of <code>utm_source</code> you would run :</p>\n\n<pre><code> pageTracker._setCampSourceKey(\"src\");     \n</code></pre>\n\n<p>I really cannot seem to figure out why they don't make it easy to actually explicitly set the value of the <code>utm_source</code> key - and not just set up an alternative parameter name for it.</p>\n\n<p>I remember a while back finding someone who had a kind of nasty hack, but I cant even seem to find that now. I seem to recall though that whoever it was took a copy of the analytics code and essentially branched it off and hacked at it. This is not a good solution for me!</p>\n\n<p>is there an officially supported way of doing this at all, without some kind of nasty redirects. </p>\n\n<p>In a nutshell I want to do something like this (ASP.NET MVC site). Give a partnet a link to my site with a URL like this :</p>\n\n<pre><code> http://www.example.com/?cid=2dae88a8-66b1-475d-8a35-2978bd1a158c\n</code></pre>\n\n<p>In the controller for my MVC page I would find out what campaign this GUID related to, and set the model state. Note: this gives me the advantage that i can change the campaign parameters without having to reissue the URL.</p>\n\n<p>In the page itself I would then do this:</p>\n\n<pre><code>var campaignMedium = &lt;%= ViewData.Model.CampaignMedium %&gt;;\nvar campaignSource = &lt;%= ViewData.Model.CampaignSource %&gt;;\nvar campaignName = &lt;%= ViewData.Model.CampaignName %&gt;;\n\npageTracker._setCampaignData({\n    utm_source: campaignSource,\n    utm_medium: campaignMedium,\n    utm_campaignName: campaignName\n});\npageTracker._trackPageview();\n</code></pre>\n\n<p><strong>IMPORTANT: This _setCampaignData method DOES NOT ACTUALLY EXIST. This is just 'pseudo code' for what I'd ideally like to be able to do.</strong></p>\n\n<p>Has anyone successfully managed to do anything like this?</p>\n",
            "last_activity_date": 1414808321,
            "question_id": 934119,
            "score": 34,
            "tags": [
                "javascript",
                "google-analytics"
            ],
            "title": "Track campaigns with Google Analytics without query string parameters?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<pre><code>Width / Height\n</code></pre>\n\n<p>?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>Aspect Ratio = width / height\n</code></pre>\n\n<p>if that is what you're after. You can then multiply it by one of the dimensions of the target space to find out the other (that maintains the ratio)\ne.g.</p>\n\n<pre><code>widthT = heightT * Aspect Ratio\nheightT = widthT / Aspect Ratio\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I believe that aspect ratio is width divided by height.</p>\n\n<pre><code> r = w/h\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I gather you're looking for an usable aspect ratio <code>integer:integer</code> solution like <code>16:9</code> rather than a <code>float:1</code> solution like <code>1.77778:1</code>.</p>\n\n<p>If so, what you need to do is find the greatest common divisor (GCD) and divide both values by that. The GCD is the highest number that evenly divides both numbers. So the GCD for 6 and 10 is 2, the GCD for 44 and 99 is 11.</p>\n\n<p>For example, a 1024x768 monitor has a GCD of 256. When you divide both values by that you get 4x3 or 4:3.</p>\n\n<p>A (recursive) GCD algorithm:</p>\n\n<pre><code>function gcd (a,b):\n    if b = 0:\n        return a\n    return gcd (b, a mod b)\n</code></pre>\n\n<p>In C:</p>\n\n<pre><code>static int gcd (int a, int b) {\n    return (b == 0) ? a : gcd (b, a%b);\n}\n\nint main(void) {\n    printf (\"gcd(1024,768) = %d\\n\",gcd(1024,768));\n}\n</code></pre>\n\n<p>And here's some complete HTML/Javascript which shows one way to detect the screen size and calculate the aspect ratio from that. This works in FF3, I'm unsure what support other browsers have for <code>screen.width</code> and <code>screen.height</code>.</p>\n\n<pre><code>&lt;html&gt;&lt;body&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        function gcd (a, b) {\n            return (b == 0) ? a : gcd (b, a%b);\n        }\n        var w = screen.width;\n        var h = screen.height;\n        var r = gcd (w, h);\n        document.write (\"&lt;pre&gt;\");\n        document.write (\"Dimensions = \", w, \" x \", h, \"&lt;br&gt;\");\n        document.write (\"Gcd        = \", r, \"&lt;br&gt;\");\n        document.write (\"Aspect     = \", w/r, \":\", h/r);\n        document.write (\"&lt;/pre&gt;\");\n    &lt;/script&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>It outputs (on my weird wide-screen monitor):</p>\n\n<pre><code>Dimensions = 1680 x 1050\nGcd        = 210\nAspect     = 8:5\n</code></pre>\n\n<p>Others that I tested this on:</p>\n\n<pre><code>Dimensions = 1280 x 1024\nGcd        = 256\nAspect     = 5:4\n\nDimensions = 1152 x 960\nGcd        = 192\nAspect     = 6:5\n\nDimensions = 1280 x 960\nGcd        = 320\nAspect     = 4:3\n\nDimensions = 1920 x 1080\nGcd        = 120\nAspect     = 16:9\n</code></pre>\n\n<p>I wish I had that last one at home but, no, it's a work machine unfortunately.</p>\n\n<p>What you do if you find out the aspect ratio is not supported by your graphic resize tool is another matter. I suspect the best bet there would be to add letter-boxing lines (like the ones you get at the top and bottom of your old TV when you're watching a wide-screen movie on it). I'd add them at the top/bottom or the sides (whichever one results in the least number of letter-boxing lines) until the image meets the requirements.</p>\n\n<p>One thing you may want to consider is the quality of a picture that's been changed from 16:9 to 5:4 - I still remember the incredibly tall, thin cowboys I used to watch in my youth on television before letter-boxing was introduced. You may be better off having one different image per aspect ratio and just resize the correct one for the actual screen dimensions before sending it down the wire.</p>\n",
                    "is_accepted": true,
                    "score": 92
                },
                {
                    "body": "<p>I think this does what you are asking for:</p>\n\n<p><a href=\"http://www.webdeveloper.com/forum/archive/index.php/t-18205.html\" rel=\"nofollow\">webdeveloper.com - decimal to fraction</a></p>\n\n<p>Width/height gets you a decimal, converted to a fraction with \":\" in place of '/' gives you a \"ratio\".</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://code.activestate.com/recipes/52317/\" rel=\"nofollow\">This algorithm in Python</a> gets you part of the way there.</p>\n\n<p><hr /></p>\n\n<p>Tell me what happens if the windows is a funny size.</p>\n\n<p>Maybe what you should have is a list of all acceptable ratios (to the 3rd party component). Then, find the closest match to your window and return that ratio from the list.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I guess you want to decide which of 4:3 and 16:9 is the best fit.</p>\n\n<pre><code>function getAspectRatio(width, height) {\n    var ratio = width / height;\n    return ( Math.abs( ratio - 4 / 3 ) &lt; Math.abs( ratio - 16 / 9 ) ) ? '4:3' : '16:9';\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>As an alternative solution to the GCD searching, I suggest you to check against a set of standard values. You can find a list on <a href=\"http://en.wikipedia.org/wiki/Aspect%5Fratio%5F%28image%29\" rel=\"nofollow\">Wikipedia</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Im assuming your talking about video here, in which case you may also need to worry about pixel aspect ratio of the source video. For example.</p>\n\n<p>PAL DV comes in a resolution of 720x576. Which would look like its 4:3. Now depending on the Pixel aspect ratio (PAR) the screen ratio can be either 4:3 or 16:9. </p>\n\n<p>For more info have a look here <a href=\"http://en.wikipedia.org/wiki/Pixel_aspect_ratio\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Pixel_aspect_ratio</a></p>\n\n<p>You can get Square pixel Aspect Ratio, and a lot of web video is that, but you may want to watch out of the other cases.</p>\n\n<p>Hope this helps</p>\n\n<p>Mark</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>bit of a strange way to do this but use the resolution as the aspect.\nE.G.</p>\n\n<p>1024:768</p>\n\n<p>or you can try</p>\n\n<pre><code>var w = screen.width;\nvar h = screen.height;\nfor(var i=1,asp=w/h;i&lt;5000;i++){\n  if(asp*i % 1==0){\n    i=9999;\n    document.write(asp*i,\":\",1*i);\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>paxdiablo's answer is great, but there are a lot of common resolutions that have just a few more or less pixels in a given direction, and the greatest common divisor approach gives horrible results to them.</p>\n\n<p>Take for example the well behaved resolution of 1360x765 which gives a nice 16:9 ratio using the gcd approach. According to Steam, this resolution is only used by 0.01% of it's users, while 1366x768 is used by a whoping 18.9%. Let's see what we get using the gcd approach:</p>\n\n<pre><code>1360x765 - 16:9 (0.01%)\n1360x768 - 85:48 (2.41%)\n1366x768 - 683:384 (18.9%)\n</code></pre>\n\n<p>We'd want to round up that 683:384 ratio to the closest, 16:9 ratio.</p>\n\n<p>I wrote a python script that parses a text file with pasted numbers from the Steam Hardware survey page, and prints all resolutions and closest known ratios, as well as the prevalence of each ratio (which was my goal when I started this):</p>\n\n<pre><code># Contents pasted from store.steampowered.com/hwsurvey, section 'Primary Display Resolution'\nsteam_file = './steam.txt'\n\n# Taken from http://upload.wikimedia.org/wikipedia/commons/thumb/f/f0/Vector_Video_Standards4.svg/750px-Vector_Video_Standards4.svg.png\naccepted_ratios = ['5:4', '4:3', '3:2', '8:5', '5:3', '16:9', '17:9']\n\n#-------------------------------------------------------\ndef gcd(a, b):\n    if b == 0: return a\n    return gcd (b, a % b)\n\n#-------------------------------------------------------\nclass ResData:\n\n    #-------------------------------------------------------\n    # Expected format: 1024 x 768 4.37% -0.21% (w x h prevalence% change%)\n    def __init__(self, steam_line):\n        tokens = steam_line.split(' ')\n        self.width  = int(tokens[0])\n        self.height = int(tokens[2])\n        self.prevalence = float(tokens[3].replace('%', ''))\n\n        # This part based on pixdiablo's gcd answer - http://stackoverflow.com/a/1186465/828681\n        common = gcd(self.width, self.height)\n        self.ratio = str(self.width / common) + ':' + str(self.height / common)\n        self.ratio_error = 0\n\n        # Special case: ratio is not well behaved\n        if not self.ratio in accepted_ratios:\n            lesser_error = 999\n            lesser_index = -1\n            my_ratio_normalized = float(self.width) / float(self.height)\n\n            # Check how far from each known aspect this resolution is, and take one with the smaller error\n            for i in range(len(accepted_ratios)):\n                ratio = accepted_ratios[i].split(':')\n                w = float(ratio[0])\n                h = float(ratio[1])\n                known_ratio_normalized = w / h\n                distance = abs(my_ratio_normalized - known_ratio_normalized)\n                if (distance &lt; lesser_error):\n                    lesser_index = i\n                    lesser_error = distance\n                    self.ratio_error = distance\n\n            self.ratio = accepted_ratios[lesser_index]\n\n    #-------------------------------------------------------\n    def __str__(self):\n        descr = str(self.width) + 'x' + str(self.height) + ' - ' + self.ratio + ' - ' + str(self.prevalence) + '%'\n        if self.ratio_error &gt; 0:\n            descr += ' error: %.2f' % (self.ratio_error * 100) + '%'\n        return descr\n\n#-------------------------------------------------------\n# Returns a list of ResData\ndef parse_steam_file(steam_file):\n    result = []\n    for line in file(steam_file):\n        result.append(ResData(line))\n    return result\n\n#-------------------------------------------------------\nratios_prevalence = {}\ndata = parse_steam_file(steam_file)\n\nprint('Known Steam resolutions:')\nfor res in data:\n    print(res)\n    acc_prevalence = ratios_prevalence[res.ratio] if (res.ratio in ratios_prevalence) else 0\n    ratios_prevalence[res.ratio] = acc_prevalence + res.prevalence\n\n# Hack to fix 8:5, more known as 16:10\nratios_prevalence['16:10'] = ratios_prevalence['8:5']\ndel ratios_prevalence['8:5']\n\nprint('\\nSteam screen ratio prevalences:')\nsorted_ratios = sorted(ratios_prevalence.items(), key=lambda x: x[1], reverse=True)\nfor value in sorted_ratios:\n    print(value[0] + ' -&gt; ' + str(value[1]) + '%')\n</code></pre>\n\n<p>For the curious, these are the prevalence of screen ratios amongst Steam users (as of October 2012):</p>\n\n<pre><code>16:9 -&gt; 58.9%\n16:10 -&gt; 24.0%\n5:4 -&gt; 9.57%\n4:3 -&gt; 6.38%\n5:3 -&gt; 0.84%\n17:9 -&gt; 0.11%\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Based on the other answers, here is how I got the numbers I needed in Python;</p>\n\n<pre><code>from decimal import Decimal\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    return gcd(b, a%b)\n\ndef closest_aspect_ratio(width, height):\n    g = gcd(width, height)\n    x = Decimal(str(float(width)/float(g)))\n    y = Decimal(str(float(height)/float(g)))\n    dec = Decimal(str(x/y))\n    return dict(x=x, y=y, dec=dec)\n\n&gt;&gt;&gt; closest_aspect_ratio(1024, 768)\n{'y': Decimal('3.0'), \n 'x': Decimal('4.0'), \n 'dec': Decimal('1.333333333333333333333333333')}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I plan to use it with javascript to crop an image to fit the entire window.</p>\n\n<p>I appreciate all help you can provide.</p>\n\n<p>Edit: I'll be using a 3rd part component that only accepts the aspect ratio in the format like: 4:3, 16:9</p>\n",
            "last_activity_date": 1384420222,
            "question_id": 1186414,
            "score": 26,
            "tags": [
                "javascript",
                "algorithm",
                "crop",
                "aspect-ratio"
            ],
            "title": "Whats the algorithm to calculate aspect ratio? I need an output like: 4:3, 16:9"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>There is an OnEnded event associated with the video tag.  However, it does not work for me in the current version of Google Chrome.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/2925851/html-5-video-onended-event-not-firing\">http://stackoverflow.com/questions/2925851/html-5-video-onended-event-not-firing</a></p>\n\n<p>and see also</p>\n\n<p><a href=\"http://stackoverflow.com/questions/2741493/how-do-you-detect-html5-video-events\">http://stackoverflow.com/questions/2741493/how-do-you-detect-html5-video-events</a></p>\n\n<p>For a general-purpose solution (supports video tag with fallback see)</p>\n\n<p><a href=\"http://camendesign.com/code/video_for_everybody\" rel=\"nofollow\">http://camendesign.com/code/video_for_everybody</a>\nor\n<a href=\"http://www.kaltura.org/project/HTML5_Video_Media_JavaScript_Library\" rel=\"nofollow\">http://www.kaltura.org/project/HTML5_Video_Media_JavaScript_Library</a> or <a href=\"http://www.mediafront.org/\" rel=\"nofollow\">http://www.mediafront.org/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://dev.w3.org/html5/spec/Overview.html#mediaevents\">You can view a complete list of events in the spec here</a>.  </p>\n\n<p>For example:</p>\n\n<pre><code>$(\"video\").bind(\"ended\", function() {\n   alert(\"I'm done!\");\n});\n</code></pre>\n\n<p>You can bind to the event on the element like anything else in jQuery...as for your comment question, whatever element you're delivering for IE, yes, it would need a separate handler rigged up to whatever event it provides.</p>\n\n<p>For the other question about timecode, the <code>timeupdate</code> event occurs when it's playing, and the <code>durationchange</code> event occurs when the overall duration changes.  You can bind to and use them just like I showed with the <code>ended</code> event above.  With <code>timeupdate</code> you'll probably want the <code>currentTime</code> property, with <code>durationchange</code> you'll want the <code>duration</code> property, each of which you get directly off the DOM object, like this:</p>\n\n<pre><code>$(\"video\").bind(\"durationchange\", function() {\n   alert(\"Current duration is: \" + this.duration);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 50
                }
            ],
            "body": "<p>I'm working on a site for a client and they're insistent on using HTML5's video tag as the delivery method for some of their video content. I currently have it up and running with a little help from <a href=\"http://videojs.com/\">http://videojs.com/</a> to handle the Internet Explorer Flash fallback.</p>\n\n<p>One thing they've asked me to do is, after the videos finish playing (they're all a different length), fade them out and then fade a picture in place of the video --- think of it like a poster frame after the video.</p>\n\n<p>Is this even possible? Can you get the timecode of a currently playing movie via Javascript or some other method? I know Flowplayer (<a href=\"http://flowplayer.org/demos/scripting/grow.html\">http://flowplayer.org/demos/scripting/grow.html</a>) has an onFinish function, is that the route I should take in lieu of the HTML5 video method? Does the fact that IE users will be getting a Flash player require two separate solutions?</p>\n\n<p>Any input would be greatly appreciated. I'm currently using jQuery on the site, so I'd like to keep the solution in that realm if at all possible. Thanks!</p>\n",
            "last_activity_date": 1275447056,
            "question_id": 2954595,
            "score": 24,
            "tags": [
                "javascript",
                "jquery",
                "video",
                "html5",
                "html5-video"
            ],
            "title": "HTML5 &lt;video&gt; callbacks?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>Here is some methods I've been used in the past to trim strings in js:</p>\n\n<pre><code>String.prototype.ltrim = function( chars ) {\n    chars = chars || \"\\\\s*\";\n    return this.replace( new RegExp(\"^[\" + chars + \"]+\", \"g\"), \"\" );\n}\n\nString.prototype.rtrim = function( chars ) {\n    chars = chars || \"\\\\s*\";\n    return this.replace( new RegExp(\"[\" + chars + \"]+$\", \"g\"), \"\" );\n}\nString.prototype.trim = function( chars ) {\n    return this.rtrim(chars).ltrim(chars);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>ECMAScript 5 supports <code>trim</code> and this has been implemented in Firefox.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String/Trim\">trim - MDC</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here, this should do all that you need</p>\n\n<pre><code>function doSomething(input) {\n    return input\n              .replace(/^\\s\\s*/, '')     // Remove Preceding white space\n              .replace(/\\s\\s*$/, '')     // Remove Trailing white space\n              .replace(/([\\s]+)/g, '-'); // Replace remaining white space with dashes\n}\n\nalert(doSomething(\"  something with  some       whitespace   \"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Steven Levithan analyzed many different implementation of <code>trim</code> in Javascript in terms of performance.</p>\n\n<p>His recommendation is:</p>\n\n<pre><code>function trim1 (str) {\n    return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n</code></pre>\n\n<p>for \"general-purpose implementation which is fast cross-browser\", and</p>\n\n<pre><code>function trim11 (str) {\n    str = str.replace(/^\\s+/, '');\n    for (var i = str.length - 1; i &gt;= 0; i--) {\n        if (/\\S/.test(str.charAt(i))) {\n            str = str.substring(0, i + 1);\n            break;\n        }\n    }\n    return str;\n}\n</code></pre>\n\n<p>\"if you want to handle long strings exceptionally fast in all browsers\".</p>\n\n<h3>References</h3>\n\n<ul>\n<li><a href=\"http://blog.stevenlevithan.com/archives/faster-trim-javascript\">blog.stevenlevithan.com -- Faster JavaScript Trim</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 122
                },
                {
                    "body": "<p>Here is my current code, the 2nd line works if I comment the 3rd line, but don't work if I leave it how it is.</p>\n\n<pre><code>var page_title = $(this).val().replace(/[^a-zA-Z0-9\\s]/g, '');\npage_title = page_title.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\npage_title = page_title.replace(/([\\s]+)/g, '-');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As <a href=\"http://stackoverflow.com/questions/3000649/trim-spaces-from-start-and-end-of-string/3000676#3000676\">@ChaosPandion</a> mentioned, the <code>String.prototype.trim</code> method has been introduced into the <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMAScript 5th Edition</a> Specification, <a href=\"http://kangax.github.com/es5-compat-table/\">some implementations</a> already include this method, so the best way is to detect the native implementation and declare it <em>only</em> if it's not available:</p>\n\n<pre><code>if (typeof String.prototype.trim != 'function') { // detect native implementation\n  String.prototype.trim = function () {\n    return this.replace(/^\\s+/, '').replace(/\\s+$/, '');\n  };\n}\n</code></pre>\n\n<p>Then you can simply:</p>\n\n<pre><code>title = title.trim();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>If using jQuery is an option:</p>\n\n<pre><code>/**\n * Trim the site input[type=text] fields globally by removing any whitespace from the\n * beginning and end of a string on input .blur()\n */\n$('input[type=text]').blur(function(){\n    $(this).val($.trim($(this).val()));\n});\n</code></pre>\n\n<p>or simply:</p>\n\n<pre><code>$.trim(string);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>I know this is an old post, but just thought I'd share our solution. In the quest for shortest code (doesn't everyone just <em>love</em> terse regex), one could instead use:</p>\n\n<pre><code>title = title.replace(/(^\\s+|\\s+$)/g, '');\n</code></pre>\n\n<p>BTW: I ran this same test through the link shared above <a href=\"http://blog.stevenlevithan.com/archives/faster-trim-javascript\">blog.stevenlevithan.com -- Faster JavaScript Trim</a> and this pattern beat all the other HANDS down!</p>\n\n<p>Using IE8, added test as test13. The results were:</p>\n\n<blockquote>\n  <p>Original length: 226002 trim1: 110ms (length: 225994) trim2: 79ms\n  (length: 225994) trim3: 172ms (length: 225994) trim4: 203ms (length:\n  225994) trim5: 172ms (length: 225994) trim6: 312ms (length: 225994)\n  trim7: 203ms (length: 225994) trim8: 47ms (length: 225994) trim9:\n  453ms (length: 225994) trim10: 15ms (length: 225994) trim11: 16ms\n  (length: 225994) trim12: 31ms (length: 225994) trim13: 0ms (length:\n  226002)</p>\n  \n  <hr>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>jQuery.trim(\"    hello, how are you?    \");</p>\n\n<p>:)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var word=\" testWord \"//add here word or space and test\n\nvar x=$.trim(word);\n\nif(x.length&gt;0)\n{\nalert('word');\n}\nelse{\nalert('spaces');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just use <code>string.trim()</code> method. It's supported by all major browsers.\nReference here: <a href=\"http://www.w3schools.com/jsref/jsref_trim_string.asp\" rel=\"nofollow\">http://www.w3schools.com/jsref/jsref_trim_string.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>When the DOM is fully loaded, you can add this to all the text fields. I have never had a situation where I needed to submit leading or trailing space, so doing it all the time globally has worked for me...</p>\n\n<pre><code>$(function() { $('input[type=text]').on('blur', function(){\n    $(this).val($.trim($(this).val()));\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am trying to find a way to trim spaces from the start and end of the title string. I was using this, but it doesn't seem to be working:</p>\n\n<pre><code>title = title.replace(/(^[\\s]+|[\\s]+$)/g, '');\n</code></pre>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1408981432,
            "question_id": 3000649,
            "score": 90,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Trim spaces from start and end of string"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>first store the actual function in a variable..</p>\n\n<pre><code>var oldFunction = someFunction;\n</code></pre>\n\n<p>then define your own:</p>\n\n<pre><code>someFunction = function(){\n  // do something before\n  oldFunction();\n  // do something after\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>You can make a function that calls your code, and then calls the function.</p>\n\n<pre><code>var old_someFunction = someFunction;\nsomeFunction = function(){\n    alert('Hello');\n    old_someFunction();\n    alert('Goodbye');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I don't know if you can update the function, but depending on how it is referenced, you can make a new function in its place:</p>\n\n<pre><code>var the_old_function = someFunction;\nsomeFunction = function () {\n    /* ..My new code... */\n    the_old_function();\n    /* ..More of my new code.. */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If <code>someFunction</code> is globally available, then you can cache the function, create your own, and have yours call it.</p>\n\n<p>So if this is the original...</p>\n\n<pre><code>someFunction = function() {\n    alert(\"done\");\n}\n</code></pre>\n\n<p>You'd do this...</p>\n\n<pre><code>someFunction = (function() {\n    var cached_function = someFunction;\n\n    return function() {\n        // your code\n\n        cached_function.apply(this, arguments); // use .apply() to call it\n\n        // more of your code\n    };\n}());\n</code></pre>\n\n<p>Here's the fiddle: <a href=\"http://jsfiddle.net/kXkFS/\">http://jsfiddle.net/kXkFS/</a></p>\n\n<hr>\n\n<p>Notice that I use <code>.apply</code> to call the cached function. This lets me retain the expected value of <code>this</code>, and pass whatever arguments were passed in as individual arguments irrespective of how many there were.</p>\n",
                    "is_accepted": true,
                    "score": 118
                }
            ],
            "body": "<p>I'm attempting to customize an existing JS library without modifying the original JS code.  This code loads in a few external JS files which I do have access to, and what I'd like to do is change one of the functions contained in the original file without copying and pasting the whole thing into the second JS file.\n<br>\nSo for example, the off limits JS might have a function like this:</p>\n\n<pre><code>var someFunction = function(){\n    alert(\"done\");\n}\n</code></pre>\n\n<p>I'd like to be able to somehow append or prepend some JS code into that function.  The reason is primarily that in the original untouchable JS the function is pretty enormous and if that JS ever gets updated, the function I overwrite it with will be out of date.</p>\n\n<p>I'm not entirely sure this is possible, but I figured I'd check.<br>\nThanks.</p>\n",
            "last_activity_date": 1384774922,
            "question_id": 9134686,
            "score": 65,
            "tags": [
                "javascript",
                "merge",
                "append",
                "user-defined-functions",
                "prepend"
            ],
            "title": "Adding code to a javascript function programatically"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can: <a href=\"http://jsfiddle.net/sdDVf/8/\">http://jsfiddle.net/sdDVf/8/</a>.</p>\n\n<hr>\n\n<pre><code>$(\"textarea\").keydown(function(e) {\n    if(e.keyCode === 9) { // tab was pressed\n        // get caret position/selection\n        var start = this.selectionStart;\n        var end = this.selectionEnd;\n\n        var $this = $(this);\n        var value = $this.val();\n\n        // set textarea value to: text before caret + tab + text after caret\n        $this.val(value.substring(0, start)\n                    + \"\\t\"\n                    + value.substring(end));\n\n        // put caret at right position again (add one for the tab)\n        this.selectionStart = this.selectionEnd = start + 1;\n\n        // prevent the focus lose\n        e.preventDefault();\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 74
                },
                {
                    "body": "<p>Here is a modified version of pimvdb's answer that doesn't need JQuery:</p>\n\n<pre><code>document.querySelector(\"textarea\").addEventListener('keydown',function(e) {\n    if(e.keyCode === 9) { // tab was pressed\n        // get caret position/selection\n        var start = this.selectionStart;\n        var end = this.selectionEnd;\n\n        var target = e.target;\n        var value = target.value;\n\n        // set textarea value to: text before caret + tab + text after caret\n        target.value = value.substring(0, start)\n                    + \"\\t\"\n                    + value.substring(end);\n\n        // put caret at right position again (add one for the tab)\n        this.selectionStart = this.selectionEnd = start + 1;\n\n        // prevent the focus lose\n        e.preventDefault();\n    }\n},false);\n</code></pre>\n\n<p>I tested it in Firefox 21.0 and Chrome 27. Don't know if it works anywhere else.</p>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>I would like a textarea that handles a situation of pressing <em>tab</em> key.</p>\n\n<p>In default case if you press a <em>tab</em> key then focus leaves the textarea. But what about the situation when user wants to type <em>tab</em> key in textarea?</p>\n\n<p>Can I catch this event and return focus to the textarea and add a tab to a <em>current</em> cursor position?</p>\n",
            "last_activity_date": 1376861051,
            "question_id": 6140632,
            "score": 43,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "How to handle &lt;tab&gt; in textarea?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>var optionTexts = [];\n$(\"ul li\").each(function() { optionTexts.push($(this).text()) });\n</code></pre>\n\n<p>...should do the trick. To get the final output you're looking for, <code>join()</code> plus some concatenation will do nicely:</p>\n\n<pre><code>var quotedCSV = '\"' + optionTexts.join('\", \"') + '\"';\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 92
                },
                {
                    "body": "<pre><code>var arr = new Array();\n\n$('li').each(function() { \n  arr.push(this.innerHTML); \n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>And in clean javascript:</p>\n\n<pre><code>var texts = [], lis = document.getElementsByTagName(\"li\");\nfor(var i=0, im=lis.length; im&gt;i; i++)\n  texts.push(lis[i].firstChild.nodeValue);\n\nalert(texts);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Without redundant intermediate arrays:</p>\n\n<pre><code>arr = $('li').map(function(i, el) {\n    return $(el).text();\n}).get();\n</code></pre>\n\n<p>See jsfiddle <a href=\"http://jsfiddle.net/cC8fT/\">demo</a></p>\n",
                    "is_accepted": false,
                    "score": 49
                },
                {
                    "body": "<p>kimstik was close, but not quite.</p>\n\n<p>Here's how to do it in a convenient one-liner:</p>\n\n<pre><code>$.map( $('li'), function (element) { return $(element).text() });\n</code></pre>\n\n<p>Here's the full documentation for jQuery's map function, it's quite handy: <a href=\"http://api.jquery.com/jQuery.map/\">http://api.jquery.com/jQuery.map/</a></p>\n\n<p>Just to answer fully, here's the complete functionality you were looking for:</p>\n\n<pre><code>$.map( $('li'), function (element) { return $(element).text() }).join(', ');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>$(\"ul li\").clone().append('\"').prepend('\"').not(\":last\").append(\", \").end().text();\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/NxsC4/\" rel=\"nofollow\">http://jsfiddle.net/NxsC4/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a structure like this:</p>\n\n<pre><code>&lt;ul&gt;\n  &lt;li&gt;text1&lt;/li&gt;\n  &lt;li&gt;text2&lt;/li&gt;\n  &lt;li&gt;text3&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>How do I use javascript or jQuery to get the text as an array?</p>\n\n<pre><code>['text1', 'text2', 'text3']\n</code></pre>\n\n<p>My plan after this is to assemble it into a string, probably using <code>.join(', ')</code>, and get it in a format like this:</p>\n\n<pre><code>'\"text1\", \"text2\", \"text3\"'\n</code></pre>\n",
            "last_activity_date": 1401222994,
            "question_id": 247023,
            "score": 72,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Get an array of list element contents in jQuery"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>PhoneGap has window.PhoneGap (or in Cordova, it's window.cordova or window.Cordova) object set. Check whether that object exists and do the magic.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Quick solution comes to mind is,</p>\n\n<pre><code>onDeviceReady\n</code></pre>\n\n<p>shall help you. As this JS call is invoked only by the Native bridge (objC or Java), the safari mobile browser will fail to detect this. So your on device app(phone gap) source base will initiate from <code>onDeviceReady</code>.</p>\n\n<p>And if any of the Phonegap's JS calls like Device.platform or Device.name is NaN or null then its obviously a mobile web call.</p>\n\n<p>Please check and let me know the results. </p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I am using the same code for both phonegap app and our web client. Here is the code that I use to detect if phonegap is available:</p>\n\n<pre><code>window.phonegap = false;\n$.getScript(\"cordova-1.7.0.js\", function(){\n    window.phonegap = true;\n});\n</code></pre>\n\n<p>Keep in mind that phonegap js file is loaded asynchronously. You can load it synchronously by setting the correct option of a nifty jquery $.getScript function. </p>\n\n<p>Note that approach does make an extra GET request to grab phonegap js file even in your webclient. In my case, it did not affect the performance of my webclient; so it ended up being a nice/clean way to do this.Well at least until someone else finds a quick one-line solution :)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use jQuery, run like this</p>\n\n<pre><code>$(document).ready(function(){\n   alert(window.innerHeight);\n});\n</code></pre>\n\n<p>Take iPhone as example for your mobile application,</p>\n\n<p>When using PhoneGap or Cordova, you'll get 460px of WebView, but in safari, you'll lose some height because of browser's default header and footer.</p>\n\n<p>If window.innerHeight is equal to 460, you can load phonegap.js, and call <code>onDeviceReady</code> function</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To my mind you try to make issue for self. You didn't mentioned your development platform but most of them have different deployment configuration. You can define two configurations. And set variable that indicates in which way code was deployed.\nIn this case you don't need to care about devices where you deployed your app.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It sounds like you are loading another webpage once the webview starts in the Phonegap app, is that correct? If that's true then you could add a param to the request url based on configuration.</p>\n\n<p>For example, assuming PHP,</p>\n\n<pre><code>App.Config = {\n  target: \"phonegap\"\n};\n\n&lt;body onload=\"onbodyload()\"&gt;\n\nvar onbodyload = function () {\n  var target = App.Config.target;\n  document.location = \"/home?target=\" + target;\n};\n</code></pre>\n\n<p>Then on the server side, include the phonegap js if the target is phonegap.</p>\n\n<p>There is no way to detect the difference using the user agent. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I haven't tried this in any way but how about this?</p>\n\n<p>Inside the native call where the url for the phonegap app is loaded you add a parameter target with value phonegap. So the call for android becomes something like this.\n    <pre><code>super.loadUrl(\"file:///android_asset/www/index.html?target=phonegap\");</code></pre>\nYour website using this code won't be called with the extra parameter, so we now have something different between the two deploying platforms.<br />\nInside the javascript we check if the parameter exists and if so we add the script tag for phonegap/cordova.\n    <pre>\n    var urlVars = window.location.href.split('?');\n    if(urlVars.length > 1 &amp;&amp; urlVars[1].search('target=phonegap') != -1){\n        //phonegap was used for the call\n        $('head').append('&lt;script src=\"cordova.js\"&gt;&lt;/script&gt;');\n    }\n    </pre>\n<strong>A small caveat</strong>: this method requires to change the call to index.html in phonegap for each different targeted mobile platform. I am unfamiliar where to do this for most platforms.<br /></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I figured out a way to do this and not rely on deviceready events thus, keeping the web codebase intact...</p>\n\n<p>The current problem with using the built in deviceready event, is that when the page is loaded, you have no way of telling the app: \"Hey this is NOT running on an mobile device, there's no need to wait for the device to be ready to start\".</p>\n\n<p>1.- In the native portion of the code, for example for iOS, in MainViewController.m there's a method viewDidLoad, I am sending a javascript variable that I later check for in the web code, if that variable is around, I will wait to start the code for my page until everything is ready (for example, navigator geolocation)</p>\n\n<p>Under MainViewController.m:</p>\n\n<pre><code>- (void) viewDidLoad\n{\n    [super viewDidLoad];\n    NSString* jsString = [NSString stringWithFormat:@\"isAppNative = true;\"];\n    [self.webView stringByEvaluatingJavaScriptFromString:jsString];\n}\n</code></pre>\n\n<p>2.- index.html the code goes like this:</p>\n\n<pre><code>function onBodyLoad()\n{\n    document.addEventListener(\"deviceready\", onDeviceReady, false);\n}\n\nfunction onDeviceReady(){;\n    myApp.run();\n}\n\ntry{\n    if(isAppNative!=undefined);\n}catch(err){\n    $(document).ready(function(){\n        myApp.run();\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You could check if the current URL contains <code>http</code> protocol.</p>\n\n<pre><code>var app = document.URL.indexOf( 'http://' ) === -1 &amp;&amp; document.URL.indexOf( 'https://' ) === -1;\nif ( app ) {\n    // PhoneGap application\n} else {\n    // Web page\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>The way I'm doing it with is using a global variable that is overwritten by a browser-only version of cordova.js. In your main html file (usually <code>index.html</code>) I have the following scripts that are order-dependent:</p>\n\n<pre><code>    &lt;script&gt;\n        var __cordovaRunningOnBrowser__ = false\n    &lt;/script&gt;\n    &lt;script src=\"cordova.js\"&gt;&lt;/script&gt; &lt;!-- must be included after __cordovaRunningOnBrowser__ is initialized --&gt;\n    &lt;script src=\"index.js\"&gt;&lt;/script&gt; &lt;!-- must be included after cordova.js so that __cordovaRunningOnBrowser__ is set correctly --&gt;\n</code></pre>\n\n<p>And inside <code>cordova.js</code> I have simply:</p>\n\n<pre><code>__cordovaRunningOnBrowser__ = true\n</code></pre>\n\n<p>When building for a mobile device, the cordova.js will not be used (and instead the platform-specific cordova.js file will be used), so this method has the benefit of being 100% correct regardless of protocols, userAgents, or library variables (which may change). There may be other things I should include in cordova.js, but I don't know what they are yet. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Ive ben struggling with this aswell, and i know this is an old thread, but i havent seen my approach anywhere, so thought id share incase itll help someone.</p>\n\n<p>i set a custom useragent after the actual useragent : </p>\n\n<pre><code>String useragent = settings.getUserAgentString();\nsettings.setUserAgentString(useragent + \";phonegap\");\n</code></pre>\n\n<p>that just adds the phonegap string so other sites relying on detecting your mobile useragent still works.</p>\n\n<p>Then you can load phonegap like this: </p>\n\n<pre><code>if( /phonegap/i.test(navigator.userAgent) ) \n{\n//you are on a phonegap app, $getScript etc\n} else {\nalert(\"not phonegap\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Short and effective:</strong></p>\n\n<pre><code>if (document.location.protocol == 'file:') { //Phonegap is present }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>what if you try following : </p>\n\n<pre><code>if(window._cordovaNative) {\n  alert(\"loading cordova\");\n  requirejs([\"...path/to/cordova.js\"], function () { \n         alert(\"Finished loading cordova\");\n  });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is it possible to detect if the user is accessing through the browser or application using JavaScript? </p>\n\n<p>I'm developing a hybrid application to several mobile OS through a web page and a PhoneGap application and the goal would be to:</p>\n\n<ol>\n<li>Use the same code independently of the deployment target</li>\n<li>Add PhoneGap.js file only when the user agent is an application</li>\n</ol>\n",
            "last_activity_date": 1424128255,
            "question_id": 10347539,
            "score": 43,
            "tags": [
                "javascript",
                "jquery",
                "mobile",
                "cordova"
            ],
            "title": "Detect between a mobile browser or a PhoneGap application"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Did you look into librairies like Scrollrama <a href=\"http://johnpolacek.github.com/scrollorama/\" rel=\"nofollow\">http://johnpolacek.github.com/scrollorama/</a> or Curtain <a href=\"http://curtain.victorcoulon.fr/\" rel=\"nofollow\">http://curtain.victorcoulon.fr/</a>?</p>\n\n<p>I know in your question you mention that you already looked into different librairies but depending how they work it's difficult to really suggest how to use proper coordinates.</p>\n\n<p>*<strong>edit1</strong></p>\n\n<p>If you didn't see it yet, the auther of scrollorama also did superscrollorama which give a bit more controler over the animation for example animation when an element is pinned.</p>\n\n<p><a href=\"http://johnpolacek.github.com/superscrollorama/\" rel=\"nofollow\">http://johnpolacek.github.com/superscrollorama/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This article in <a href=\"http://smashinghub.com/7-jquery-parallax-and-scrolling-effect-plugins.htm\">smashinghub.com</a> shows a collection of JQuery plugin for scrolling and parallax effect I'm totally sure one of them will help you.\nit looks like <a href=\"http://joelb.me/scrollpath/\">jQuery Scroll Path</a> is the most advanced of them or suit your requirements.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I realize I'm jumping in late here, and this might seem ultra obvious, but have you tried reverse engineering what they have done on <a href=\"https://victoriabeckham.landrover.com/INT\" rel=\"nofollow\">https://victoriabeckham.landrover.com/INT</a>? It looks like <a href=\"https://victoriabeckham.landrover.com/js/ScrollAnimator.js?v=471\" rel=\"nofollow\">the ScrollAnimator script</a> does a bulk of the work. I would download their site &amp; mess with it locally, subtracting parts until I figured out which components provide which pieces of functionality. Then I would read through those to understand how they made it happen.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I threw something together is jsfiddle for you.</p>\n\n<p><a href=\"http://jsfiddle.net/9R4hZ/40/\">http://jsfiddle.net/9R4hZ/40/</a></p>\n\n<p>The script initializes the start positions of all of the objects first. Then handlers are set up for arrow key and mouse wheel. After that is the meat of the algorithm in the parallaxScroll function.</p>\n\n<p>It uses the ARROWS or MOUSEWHEEL for scrolling.</p>\n\n<p>There are from [left, right, top, bottom] transitions.</p>\n\n<p>The HTML and CSS are really simple.</p>\n\n<p>The JS/jQuery that runs it is self explanatory.</p>\n\n<p>It's an interesting effect, that seems to be geared for artsy type sites.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>you have use <a href=\"https://github.com/JoelBesada/scrollpath\" rel=\"nofollow\">scrollpath plugin</a></p>\n\n<pre><code>make path\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to build a multi-directional JQuery parallax page for a client - they basically want it to work in a similar way to this - <a href=\"https://victoriabeckham.landrover.com/INT\">https://victoriabeckham.landrover.com/INT</a></p>\n\n<p>I have the artwork ready and have found many jquery libraries that will allow me to scroll horiz/vertical - but i'm not sure how to combine both together at a specific co-ordinate. \nCould anyone please point me in a the right direction?</p>\n\n<p>Edit:  I did originally sign this post off having looked into Superscrolarama and thinking all was solved - but having struggled with implementing it - I dont think its quite the saviour I thought it was, I need both horizontal and vertical parallax as well as scrolling to achieve above, which it doesn't seem to support - so any other tips I'd be very grateful for!</p>\n",
            "last_activity_date": 1407150726,
            "question_id": 12461710,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "html5",
                "css3",
                "parallax"
            ],
            "title": "Jquery Parallax Scrolling effect - Multi directional"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Depends on what you want to do. The fourth and sixth methods there won't reload any form data, they essentially make a separate visit to the page. Some versions of Firefox also have issues with the third method. Other than that, I'd go with the fifth as a personal preference. It seems the clearest.</p>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>You may also do:</p>\n\n<p><code>wd</code> represents <strong>window</strong> || <strong>document</strong>: </p>\n\n<ul>\n<li><strong>wd.location.assign(wd.location.href)</strong> : \n<em>go to the URL</em></li>\n<li><strong>wd.location.replace(wd.location.href)</strong> :\n<em>go to the URL and replace previous page in history</em></li>\n<li><strong>wd.location.reload(&lt;true/false/blank&gt;)</strong> : <em>reload page from server/cache/cache</em></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 21
                }
            ],
            "body": "<p>which way to reload a current page (using a button) would you prefer?</p>\n\n<pre><code>1 &lt;input type=\"button\" value=\"Reload\" onClick=\"history.go(0)\"&gt;\n2 &lt;input type=\"button\" value=\"Reload\" onClick=\"location.reload(true)\"&gt;\n3 &lt;input type=\"button\" value=\"Reload\" onClick=\"window.location.reload(true)\"&gt;\n4 &lt;input type=\"button\" value=\"Reload\" onClick=\"window.location.href=window.location.href\"&gt;\n5 &lt;input type=\"button\" value=\"Reload\" onClick=\"document.location.reload(true)\"&gt;\n6 &lt;input type=\"button\" value=\"Reload\" onClick=\"document.location.href=document.location.href\"&gt;\n</code></pre>\n\n<p>As the URL of the page changes frequently AFAIK a 'fallback function' like</p>\n\n<pre><code>&lt;a href=\"urlOfCurrentPage.html\" onclick=\"window.location.reload(true);return false;\"&gt;Reload&lt;/a&gt;\n</code></pre>\n\n<p>won't work for me, right?</p>\n",
            "last_activity_date": 1395409688,
            "question_id": 2624111,
            "score": 82,
            "tags": [
                "javascript",
                "reload"
            ],
            "title": "Preferred method to reload page with JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>window load will wait for all resources to be loaded.</p>\n\n<p><a href=\"http://api.jquery.com/ready/\">document ready</a> waits for the document to be initialized.</p>\n\n<p>unload well, waits till the document is being unloaded.</p>\n\n<p>the order is: document ready, window load, ... ... ... ... window unload.</p>\n\n<p><strong>always use document ready</strong> unless you need to wait for your images to load.</p>\n\n<p>shorthand for document ready:</p>\n\n<pre><code>$(function(){\n    // yay!\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>$(window).load();\n</code></pre>\n\n<p>Will execute after the page along with all its contents are done loading. This means that all images, CSS (and content defined by CSS like custom fonts and images), scripts, etc. are all loaded. This happens event fires when your browser's \"Stop\" -icon becomes gray, so to speak. This is very useful to detect when the document along with all its contents are loaded.</p>\n\n<pre><code>$(document).ready();\n</code></pre>\n\n<p>This on the other hand will fire as soon as the web browser is capable of running your JavaScript, which happens after the parser is done with the DOM. This is useful if you want to execute JavaScript as soon as possible.</p>\n\n<pre><code>$(window).unload();\n</code></pre>\n\n<p>This event will be fired when you are navigating off the page. That could be Refresh/F5, pressing the previous page button, navigating to another website or closing the entire tab/window.</p>\n\n<p>To sum up, ready() will be fired before load(), and unload() will be the last to be fired.</p>\n",
                    "is_accepted": true,
                    "score": 83
                },
                {
                    "body": "<p>If both \"document.ready\" variants are used they will both fire, in the order of appearance</p>\n\n<pre><code>$(function(){\n    alert('shorthand document.ready');\n});\n\n//try changing places\n$(document).ready(function(){\n    alert('document.ready');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Just a simple question, for the jquery event. Are the .load(), .ready() and .unload() run in order when the DOM is loaded? The answer seems yes when I see the jQuery Documentation.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n        $(window).load(function () {\n            // run code\n            initializeCode();\n        });\n\n        $(document).ready(function() {\n            //run code that MUST be after initialize\n\n        });\n\n        $(window).unload(function() {\n\n            Cleanup();\n        });\n    &lt;/script&gt;\n</code></pre>\n\n<p>However, the code inside the .ready() is execute before the initializeCode(); is execute, so I feel really strange. And now I have to place my code inside the .onload() method and just after the initializeCode(); line, which means to be inside the .ready() block.</p>\n\n<p>Could someone explain me more about this, as I am new to jQuery.</p>\n\n<p>Thank you so much.</p>\n",
            "last_activity_date": 1372246875,
            "question_id": 2683072,
            "score": 47,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "dom"
            ],
            "title": "jQuery events .load(), .ready(), .unload()"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Another solution that may or may not work for you is to dynamically insert/remove script tags in your DOM that point to the target domain.  This will work if the target returns json and supports a callback.</p>\n\n<p>Function to handle the result:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  function foo(result) {\n    alert( result );\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>Instead of doing an AJAX request you would dynamically insert something like this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://n1.example.com/echo?callback=foo\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Another workaround, is to direct the ajax request to a php (for example) page on your domain, and in that page make a cURL request to the subdomain.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Cross domain is entirely a different subject. But cross sub-domain is relatively easy. All you need to do is to set the document.domain to be same in both the parent page and the iframe page.</p>\n\n<pre><code>document.domain = \"yourdomain.com\"\n</code></pre>\n\n<p><a href=\"http://www.tomhoppe.com/index.php/2008/03/cross-sub-domain-javascript-ajax-iframe-etc/\">More info here</a></p>\n",
                    "is_accepted": false,
                    "score": 108
                },
                {
                    "body": "<p>I faced the same problem during 2 days and I found the solution, and it's elegant after googling a lot.\nI needed xss Ajax for some widget clients which pull datastream from tiers websites to my Rails app.\n<a href=\"http://franckyu.tumblr.com/post/1019911037/widespread-your-app-making-an-application-webservice\" rel=\"nofollow\">here's how I did.</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>New idea: if you want cross subdomain (www.domain.com and sub.domain.com) and you are working on apache. things can get a lot easier. if a subdomain actually is a subdirectory in public_html (sub.domain.com = www.domain.com/sub/. so if you have ajax.domain.com/?request=subject...you can do something like this: www.domain.com/ajax/?request=subject</p>\n\n<p>works like a charm for me, and no stupid hacks, proxies or difficult things to do for just a few Ajax requests!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I wrote a solution for cross sub domain and its been working for my applications. I used iframe and setting document.domain=\"domain.com\" on both sides. You can find my solution at :</p>\n\n<p><a href=\"https://github.com/emphaticsunshine/Cross-sub-domain-solution\" rel=\"nofollow\">https://github.com/emphaticsunshine/Cross-sub-domain-solution</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The simplest solution I found was to create a php on your subdomain and include your original function file within it using a full path.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <p>www.domain.com/ajax/this_is_where_the_php_is_called.php</p>\n</blockquote>\n\n<p>Subdomain:</p>\n\n<blockquote>\n  <p>sub.domain.com</p>\n</blockquote>\n\n<p>Create:\nsub.domain.com/I_need_the_function.php</p>\n\n<blockquote>\n  <p>Inside  I_need_the_function.php just use an include:</p>\n  \n  <p>include_once(\"/server/path/public_html/ajax/this_is_where_the_php_is_called.php\");</p>\n</blockquote>\n\n<p>Now call sub.domain.com/I_need_the_function.php from your javascript.</p>\n\n<pre><code>var sub=\"\";\nswitch(window.location.hostname)\n{\ncase \"www.domain.com\":\nsub = \"/ajax/this_is_where_the_php_is_called.php\";\nbreak;\ncase \"domain.com\":\nsub = \"\";\nbreak;\ndefault: ///your subdomain (or add more \"case\" 's)\nsub = \"/I_need_the_function.php\";\n}\n\n\nxmlHttp.open(\"GET\",sub,true);\n</code></pre>\n\n<p>The example is as simple as I can make it. You may want to use better formatted paths.</p>\n\n<p>I hope this helps some one. Nothing messy here - and you are calling the original file, so any edits will apply to all functions.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>All modern browsers support CORS and henceforth we should leverage this addition.</p>\n\n<p>It works on simple handshaking technique were the 2 domains communicating trust each other by way of HTTP headers sent/received. This was long awaited as same origin policy was necessary to avoid XSS and other malicious attempts.</p>\n\n<p>To initiate a cross-origin request, a browser sends the request with an Origin HTTP header. The value of this header is the site that served the page. For example, suppose a page on <a href=\"http://www.example-social-network.com\">http://www.example-social-network.com</a> attempts to access a user's data in online-personal-calendar.com. If the user's browser implements CORS, the following request header would be sent:</p>\n\n<p>Origin: <a href=\"http://www.example-social-network.com\">http://www.example-social-network.com</a></p>\n\n<p>If online-personal-calendar.com allows the request, it sends an Access-Control-Allow-Origin header in its response. The value of the header indicates what origin sites are allowed. For example, a response to the previous request would contain the following:</p>\n\n<p>Access-Control-Allow-Origin: <a href=\"http://www.example-social-network.com\">http://www.example-social-network.com</a></p>\n\n<p>If the server does not allow the cross-origin request, the browser will deliver an error to example-social-network.com page instead of the online-personal-calendar.com response.</p>\n\n<p>To allow access to all pages, a server can send the following response header:</p>\n\n<p>Access-Control-Allow-Origin: *</p>\n\n<p>However, this might not be appropriate for situations in which security is a concern.</p>\n\n<p>Very well explained here in below wiki page.\n<a href=\"http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\">http://en.wikipedia.org/wiki/Cross-origin_resource_sharing</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>Let's say I have the main page loaded from <a href=\"http://www.example.com/index.html\">http://www.example.com/index.html</a>. On that page there is js code that makes an ajax request to <a href=\"http://n1.example.com//echo?message=hello\">http://n1.example.com//echo?message=hello</a>. When the response is received a div on the main page is updated with the response body.</p>\n\n<p>Will that work on all popular browsers?</p>\n\n<p>Edit:</p>\n\n<p>The obvious solution is to put a proxy in front of www.example.com and n1.example.com and set it so that every request going to a subresource of <a href=\"http://www.example.com/n1\">http://www.example.com/n1</a> gets proxied to <a href=\"http://n1.example.com/\">http://n1.example.com/</a>.</p>\n",
            "last_activity_date": 1368724975,
            "question_id": 648899,
            "score": 34,
            "tags": [
                "javascript",
                "ajax"
            ],
            "title": "A question about cross-domain (subdomain) ajax request"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Didn't use eclipse for a while, but there are <a href=\"http://www.eclipse.org/atf/\" rel=\"nofollow\">ATF</a> and <a href=\"http://www.aptana.com/\" rel=\"nofollow\">Aptana</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Disclaimer, I work at Aptana. I would point out there are some nice features for JS that you might not get so easily elsewhere. One is plugin-level integration of JS libraries that provide CodeAssist, samples, snippets and easy inclusion of the libraries files into your project; we provide the plugins for many of the more commonly used libraries, including YUI, jQuery, Prototype, dojo and EXT JS.</p>\n\n<p>Second, we have a server-side JavaScript engine called Jaxer that not only lets you run any of your JS code on the server but adds file, database and networking functionality so that you don't have to use a scripting language but can write the entire app in JS.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Oracle Workshop for WebLogic (formally BEA Workshop) has excellent support for JavaScript and for visually editing HTMLs. It support many servers, not only WebLogic, including Tomcat, JBoss, Resin, Jetty, and WebSphere.  </p>\n\n<p>It recently became free, check out <a href=\"http://blog.zvikico.com/2008/08/the-best-jspstrutsjsf-development-tool-is-now-free.html\" rel=\"nofollow\">my post</a> about it. Given that it was an expensive product not long ago, I guess it's worth checking out.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There once existed a plugin called <a href=\"http://www.interaktonline.com/products/eclipse/jseclipse/overview/\" rel=\"nofollow\">JSEclipse</a> that Adobe has subsequently sucked up and killed by making it available only by purchasing and installing FlexBuilder 3 (please someone prove me wrong). I found it to worked excellent but have since lost it since \"upgrading\" from Eclipse 3.4 to 3.4.1.</p>\n\n<p>The feature I liked most was Content Outline. </p>\n\n<blockquote>\n  <p>In the Outline window of your Eclipse\n  Screen, JSEclipse lists all classes in\n  the currently opened file. It provides\n  an overview of the class hierarchy and\n  also method and property names. The\n  outline makes heavy use of the code\n  completion engine to find out more\n  about how the code is structured. By\n  clicking on the function entry in the\n  list the cursor will be taken to the\n  function declaration helping you\n  navigate faster in long files with\n  lots of class and method definitions</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Ganymede's version of WTP includes a revamped Javascript editor that's worth a try.  The key version numbers are Eclipse 3.4 and WTP 3.0.  See <a href=\"http://live.eclipse.org/node/569\">http://live.eclipse.org/node/569</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"http://amateras.sourceforge.jp/cgi-bin/fswiki_en/wiki.cgi?page=EclipseHTMLEditor\">Eclipse HTML Editor Plugin</a></p>\n\n<p>I too have struggled with this totally obvious question.  It seemed crazy that this wasn't an extremely easy-to-find feature with all the web development happening in Eclipse these days.</p>\n\n<p>I was very turned off by Aptana because of how bloated it is, and the fact that it starts up a local web server (by default on port 8000) everytime you start eclipse and <a href=\"http://forums.aptana.com/viewtopic.php?t=5269\">you can't disable this functionality</a>.  Adobe's port of JSEclipse is now a 400Mb plugin, which is equally insane.</p>\n\n<p>However, I just found a super-lightweight javascript editor called <a href=\"http://amateras.sourceforge.jp/cgi-bin/fswiki_en/wiki.cgi?page=EclipseHTMLEditor\">Eclipse HTML Editor Plugin</a>, made by Amateras, which was exactly what I was looking for.</p>\n",
                    "is_accepted": false,
                    "score": 54
                },
                {
                    "body": "<p>The new release of Eclipse (Helios) has an especific package for <a href=\"http://eclipse.org/downloads/\" rel=\"nofollow\">javascript web development</a>. I haven't tried it yet, but it certainly worth a look.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try the <a href=\"https://www.ebayopensource.org/index.php/VJET/HomePage\">Vjet Javascript IDE</a> from ebay (<a href=\"http://www.ebayopensource.org/wiki/display/VJET/VJET+JavaScript+IDE+Installation+Guide\">installation</a>)</p>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>I'm looking for the best JavaScript editor available as an Eclipse plugin. I've been using Spket which is good. But, is there more better one?</p>\n",
            "last_activity_date": 1403860608,
            "question_id": 24678,
            "score": 116,
            "tags": [
                "javascript",
                "eclipse",
                "plugins",
                "editor"
            ],
            "title": "JavaScript editor within Eclipse"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><a href=\"http://html5doctor.com/html5-custom-data-attributes/\">Have a look here</a>:</p>\n\n<p>If the browser also supports the HTML5 JavaScript API, you should be able to get the data with:</p>\n\n<pre><code>var attributes = element.dataset\n</code></pre>\n\n<p>or</p>\n\n<pre><code>var cat = element.dataset.cat\n</code></pre>\n\n<p>Oh, but I also read:</p>\n\n<blockquote>\n  <p>Unfortunately, the new dataset property has not yet been implemented in any browser, so in the meantime it\u2019s best to use <code>getAttribute</code> and <code>setAttribute</code> as demonstrated earlier.</p>\n</blockquote>\n\n<p>It is from May 2010.</p>\n\n<hr>\n\n<p>If you use jQuery anyway, you might want to have a look at the <a href=\"http://plugins.jquery.com/project/customdata\"><strong>customdata</strong></a> plugin. I have no experience with it though.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Actually, if you're working with jQuery, as of version <del>1.4.3</del> 1.4.4 (because of the bug as mentioned in the comments below), <code>data-*</code> attributes are supported through <a href=\"http://api.jquery.com/data/\"><code>.data()</code></a>: </p>\n\n<blockquote>\n  <p>As of jQuery 1.4.3 HTML 5 <code>data-</code>\n  attributes will be automatically\n  pulled in to jQuery's data object.</p>\n  \n  <p>Note that strings are left intact\n  while JavaScript values are converted\n  to their associated value (this\n  includes booleans, numbers, objects,\n  arrays, and null). The <code>data-</code>\n  attributes are pulled in the first\n  time the data property is accessed and\n  then are no longer accessed or mutated\n  (all data values are then stored\n  internally in jQuery).</p>\n</blockquote>\n\n<p>The <code>jQuery.fn.data</code> function will return all of the <code>data-</code> attribute inside an object as key-value pairs, with the key been the part of the attribute name after <code>data-</code> and the value been the value of that attribute after been converted following the rules stated above. </p>\n\n<p>I've also created a simple demo if that doesn't convince you: <a href=\"http://jsfiddle.net/yijiang/WVfSg/\">http://jsfiddle.net/yijiang/WVfSg/</a></p>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>A pure JavaScript solution ought to be offered as well, as the solution is not difficult:</p>\n\n<pre><code>var a = [].filter.call(el.attributes, function(at) { return /^data-/.test(at.name); });\n</code></pre>\n\n<p>This gives an array of attribute objects, which have <code>name</code> and <code>value</code> properties:</p>\n\n<pre><code>if (a.length) {\n    var firstAttributeName = a[0].name;\n    var firstAttributeValue = a[0].value;\n}\n</code></pre>\n\n<p><strong>Edit:</strong> To take it a step further, you can get a dictionary by iterating the attributes and populating a data object:</p>\n\n<pre><code>var data = {};\n[].forEach.call(el.attributes, function(attr) {\n    if (/^data-/.test(attr.name)) {\n        var camelCaseName = attr.name.substr(5).replace(/-(.)/g, function ($0, $1) {\n            return $1.toUpperCase();\n        });\n        data[camelCaseName] = attr.value;\n    }\n});\n</code></pre>\n\n<p>You could then access the value of, for example, <code>data-my-value=\"2\"</code> as <code>data.myValue</code>;</p>\n\n<p><a href=\"http://jsfiddle.net/3KFYf/33/\" rel=\"nofollow\">jsfiddle.net/3KFYf/33</a></p>\n\n<p><strong>Edit:</strong> If you wanted to set data attributes on your element programmatically from an object, you could:</p>\n\n<pre><code>Object.keys(data).forEach(function(key) {\n    var attrName = \"data-\" + key.replace(/[A-Z]/g, function($0) {\n        return \"-\" + $0.toLowerCase();\n    });\n    el.setAttribute(attrName, data[key]);\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/3KFYf/34/\" rel=\"nofollow\">jsfiddle.net/3KFYf/34</a></p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>You should be get the data through the dataset attributes</p>\n\n<pre><code>var data = element.dataset;\n</code></pre>\n\n<p><a href=\"https://github.com/mui-lychi/dataset\" rel=\"nofollow\">dataset</a> is useful tool for get data-attribute</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Given an arbitrary HTML element with zero or more <code>data-*</code> attributes, how can one retrieve a list of key-value pairs for the data.</p>\n\n<p>E.g. given this:</p>\n\n<pre><code>&lt;div id='prod' data-id='10' data-cat='toy' data-cid='42'&gt;blah&lt;/div&gt;\n</code></pre>\n\n<p>I would like to be able to programmatically retrieve this:</p>\n\n<pre><code>{ \"id\":10, \"cat\":\"toy\", \"cid\":42 }\n</code></pre>\n\n<p>Using jQuery (v1.4.3), accessing the individual bits of data using <code>$.data()</code> is simple if the keys are known in advance, but it is not obvious how one can do so with arbitrary sets of data.</p>\n\n<p>I'm looking for a 'simple' jQuery solution if one exists, but would not mind a lower level approach otherwise. I had a go at trying to to parse <code>$('#prod').attributes</code> but my lack of javascript-fu is letting me down.</p>\n\n<h2>update</h2>\n\n<p><a href=\"https://github.com/ubilabs/jquery-customdata\" rel=\"nofollow\">customdata</a> does what I need. However, including a jQuery plugin just for a fraction of its functionality seemed like an overkill. </p>\n\n<p>Eyeballing the source helped me fix my own code (and improved my javascript-fu).</p>\n\n<p>Here's the solution I came up with:</p>\n\n<pre><code>function getDataAttributes(node) {\n    var d = {}, \n        re_dataAttr = /^data\\-(.+)$/;\n\n    $.each(node.get(0).attributes, function(index, attr) {\n        if (re_dataAttr.test(attr.nodeName)) {\n            var key = attr.nodeName.match(re_dataAttr)[1];\n            d[key] = attr.nodeValue;\n        }\n    });\n\n    return d;\n}\n</code></pre>\n\n<h2>update 2</h2>\n\n<p>As demonstrated in the accepted answer, the solution is trivial with jQuery (>=1.4.4). <code>$('#prod').data()</code> would return the required data dict. Many thanks for all the help.</p>\n",
            "last_activity_date": 1425652391,
            "question_id": 4187032,
            "score": 72,
            "tags": [
                "javascript",
                "jquery",
                "html5",
                "attributes"
            ],
            "title": "Get list of data-* attributes using javascript / jQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You need to reference <code>csrf</code> in your controller <code>IndexUsersCtrl = ( $scope, csrf )</code> </p>\n\n<pre><code>IndexUsersCtrl.$inject = [ '$scope', 'csrf' ]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>Module.value(key, value)</code> is used to inject an editable value,\n<code>Module.constant(key, value)</code> is used to inject a constant value</p>\n\n<p>The difference between the two isn't so much that you \"can't edit a constant\", it's more that you can't intercept a constant with $provide and inject something else.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// define a value\napp.value('myThing', 'weee');\n\n// define a constant\napp.constant('myConst', 'blah');\n\n// use it in a service\napp.factory('myService', ['myThing', 'myConst', function(myThing, myConst){\n   return {\n       whatsMyThing: function() { \n          return myThing; //weee\n       },\n       getMyConst: function () {\n          return myConst; //blah\n       }\n   };\n}]);\n\n// use it in a controller\napp.controller('someController', ['$scope', 'myThing', 'myConst', \n    function($scope, myThing, myConst) {\n        $scope.foo = myThing; //weee\n        $scope.bar = myConst; //blah\n    });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 99
                },
                {
                    "body": "<p>I recently wanted to use this feature with Karma inside a test. As Dan Doyon points out the key is that you would inject a value just like a controller, service, etc.  You can set .value to many different types - strings, arrays of objects, etc.  For example:</p>\n\n<p>myvalues.js a file containing value - make sure it is including in your karma conf file</p>\n\n<pre><code>var myConstantsModule = angular.module('test.models', []);\nmyConstantModule.value('dataitem', 'thedata');\n// or something like this if needed\nmyConstantModule.value('theitems', [                                                                                                                                                                                                             \n  {name: 'Item 1'},                                                                                                                                                                                                                         \n  {name: 'Item 2'},                                                                                                                                                                                                                         \n  {name: 'Item 3'}\n]);                                                                                                                                                                                                                         \n</code></pre>\n\n<p>]);                         </p>\n\n<p>test/spec/mytest.js - maybe this is a Jasmine spec file loaded by Karma</p>\n\n<pre><code>describe('my model', function() {\n    var theValue;\n    var theArray;\n    beforeEach(module('test.models'));\n    beforeEach(inject(function(dataitem,theitems) {\n      // note that dataitem is just available\n      // after calling module('test.models')\n      theValue = dataitem;\n      theArray = theitems;\n    });\n    it('should do something',function() {\n      // now you can use the value in your tests as needed\n      console.log(\"The value is \" + theValue);\n      console.log(\"The array is \" + theArray);\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Hi there I was watching a couple of the angular.js videos and saw that the value() method was used to set a kind of module-wide constant. for example, one can set the Angular-UI library's config like so: (coffeescript)</p>\n\n<pre><code>angular.module('app',[])\n.value \"ui.config\", \n  tinymce:\n    theme: 'simple'\n    width: '500'\n    height: '300'\n</code></pre>\n\n<p>And my app is currently looking like this:</p>\n\n<pre><code>window.app = angular.module(\"app\", [ 'ui'])\n\n.config([\"$routeProvider\", ($routeProvider) -&gt;\n  $routeProvider\n  .when \"/users\",\n    templateUrl: \"assets/templates/users/index.html\"\n    controller: IndexUsersCtrl\n\n  .otherwise redirectTo: \"/users\"\n\n])\n\n.value 'csrf', $('meta[name=\"csrf-token\"]').attr('content') #&lt;---- attention here\n\nIndexUsersCtrl = ($scope) -&gt;\n  $scope.users = gon.rabl\n  console.log \"I want to log the csrf value here\" #&lt;---- then attention\nIndexUsersCtrl.$inject = ['$scope']\n</code></pre>\n\n<p>But I can't seem to get that value by tapping into the 'app' variable which is corresponding to the app module. </p>\n\n<p>I read up here on ST and over on angularjs's google group that one way to share common code btwn controllers is through a service, will this concept apply here, too?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1414288859,
            "question_id": 13015523,
            "score": 60,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Angular.js: Is .value() the proper way to set app wide constant and how to retrieve it in a controller"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I think <a href=\"http://www.softwareverify.com/javascript/memory/feature.html\" rel=\"nofollow\">JavaScript Memory Validator</a> from Software Verification Limited can help you, it has allocations view, objects view, generations view, etc. It's not free but you can use the evaluation version to check your coworker's code. They also have a Performance and Coverage Validators...</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>See <a href=\"http://mxr.mozilla.org/mozilla-central/source/js/src/jsarray.cpp#41\">the source</a>. Sparse arrays don't take up lots of memory, but if your colleague doesn't need any <code>Array</code> functionality, he should be using plain <code>Object</code>s anyway.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I haven't tried the Sofware verify tools, but Mozilla has tools that track overall memory consumed by firefox for the purpose of stemming leaks:</p>\n\n<p><a href=\"http://www.mozilla.org/performance/tools.html\">http://www.mozilla.org/performance/tools.html</a></p>\n\n<p>and:</p>\n\n<p><a href=\"https://wiki.mozilla.org/Performance%3aLeak_Tools\">https://wiki.mozilla.org/Performance:Leak_Tools</a></p>\n\n<p>There's also this guy saying to avoid large arrays in the context of closures, towards article bottom</p>\n\n<p><a href=\"http://ajax.sys-con.com/node/352585\">http://ajax.sys-con.com/node/352585</a></p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Try also <code>about:memory</code> which shows how much memory each window occupies and how much of it is dedicated to JS objects. It gives high level summary without per object usage, but it is a good starting point for investigating memory requirements of a site.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Is there a tool/plugin/function for Firefox that'll dump out a memory usage of Javascript objects that you create in a page/script? I know about Firebug's profiler but I'd like something more than just times. Something akin to what Yourkit has for Java profiling of memory usage.</p>\n\n<p>Reason is that a co-worker is using id's for \"keys\" in an array and is creating 1000's of empty slots when he does this. He's of the opinion that this is harmless whereas my opinion differs. I'd like to offer some proof to prove whether I'm right or not.</p>\n",
            "last_activity_date": 1395083544,
            "question_id": 171565,
            "score": 49,
            "tags": [
                "javascript",
                "firefox",
                "memory",
                "profiling"
            ],
            "title": "Javascript memory profiler for Firefox"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><strong>As of sometime ago:</strong></p>\n\n<p>I don't think this is possible. </p>\n\n<p>You can possibly paste the file name, but you really need the full path to the image. \nYou actually need to upload the image from the user's system to the server.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For now i found the <a href=\"http://msdn.microsoft.com/en-us/library/ms535220%28VS.85%29.aspx#\" rel=\"nofollow\">clipboardData Object</a> .</p>\n\n<p>But it retrieve only text format or URL from clipboard.\n<code>clipboardData</code> is IE only, it works with character string and return null if we paste an image.</p>\n\n<p>a test example</p>\n\n<pre><code> &lt;form&gt;\n    &lt;input type=\"text\" id=\"context\"  onClick=\"paste();\"&gt;  \n  &lt;/form&gt;\n\n&lt;script type=\"text/javascript\"&gt; \n\nfunction paste() {  \n\nvar sRetrieveData = clipboardData.getData(\"Text\");\ndocument.getElementById('context').value = sRetrieveData;        \n\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>By default clipboard access is not enabled on firefox, explanation <a href=\"http://support.mozilla.com/fr/kb/Granting+JavaScript+access+to+the+clipboard\" rel=\"nofollow\">here</a>.\nOn the other way, <a href=\"http://msdn.microsoft.com/en-us/library/ms536419%28VS.85%29.aspx\" rel=\"nofollow\">execCommand()</a> only process text values and is not Firefox compliant.</p>\n\n<p>Like the others said, the fact that code works on IE is a security risk, any site can access your clipboard text.</p>\n\n<p>The easiest way to copy images relative URL is to use a java applet, windows activeX plugin, <a href=\"http://p2p.wrox.com/book-professional-javascript-web-developers-isbn-978-0-7645-7908-0/53146-paste-clipboard-image.html\" rel=\"nofollow\">.net code</a> or drag and drop it.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>JavaScript clipboard access is a security risk and if you (falsely) think you need it you probably need to go back to your design...</p>\n",
                    "is_accepted": false,
                    "score": -15
                },
                {
                    "body": "<p>Unfortunately, It's not possible to paste an image from your clipboard to the RTE.</p>\n\n<p>If you copy a blob from a desktop app like Microsoft Word that contains an image and some text, the image will turn up as a broken reference (though the proportions will be correct) and the text will be pasted correctly (formatting will be lost).</p>\n\n<p>The only thing that is possible is to copy an image within the RTE and paste back within the RTE.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>New browsers, like Firefox 4, support pasting of image data from clipboard into a RTE as <a href=\"http://en.wikipedia.org/wiki/Data_URI_scheme#Advantages\">Data URI with encoded PNG Data</a>. However, most web applications incorrectly parse these Data URIs and discard it. Yahoo mail properly handles. However Gmail and Hotmail discard it. I have notified Google and Microsoft about this.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Because this question still often shows up in Google's search results, I want to point out this is possible today, at least in Google Chrome. They implemented it to use in GMail, but it is available for all websites.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/6333814/how-does-the-paste-image-from-clipboard-functionality-work-in-gmail-and-google-c\">How does the paste image from clipboard functionality work in Gmail and Google Chrome 12+?</a></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>This is definitely possible now in Chrome and Firefox. I'm not so sure about IE/Safari.</p>\n\n<p>Look at imgur.com, onpaste, and pasteboard.co as examples, and see the <a href=\"https://github.com/JoelBesada/pasteboard\" rel=\"nofollow\">code for pasteboard on github</a> as well as <a href=\"http://joelb.me/blog/2011/code-snippet-accessing-clipboard-images-with-javascript/\" rel=\"nofollow\">Joel's excellent write up on his blog</a></p>\n\n<p>For the record, you need the user to press Ctrl+V on your element, and then you can capture the data in the <em>paste</em> event handler by reading from <code>event.clipboardData</code> but to make it work down-level, you need to be sure focus is on an empty <strong>contenteditable</strong> element, and pull the results from there, which doesn't work well in Firefox 22. See <a href=\"http://stackoverflow.com/questions/14151018/can-one-hack-paste-image-support-into-a-textarea-in-firefox/14423247?noredirect=1#comment25508678_14423247\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>How do we paste an image from clipboard into a custom rich text editor using javascript? (ctrl+c and ctrl+v or a snapshot).</p>\n\n<p>Has anyone used Ajax's rich text editor? Does pasting an image from clipboard to Ajax RTE work?</p>\n\n<p>Please do share your thoughts!</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1373350835,
            "question_id": 490908,
            "score": 44,
            "tags": [
                "javascript",
                "clipboard",
                "copy-paste"
            ],
            "title": "Paste an image from clipboard using JavaScript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en/Gecko_DOM_Reference\">Gecko DOM Reference</a></p>\n\n<p><a href=\"http://www.javascriptkit.com/domref/\">JavaScript Kit - DOM Reference</a></p>\n\n<p><a href=\"http://www.google.com/search?q=dom+reference\">And many more</a>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>https://developer.mozilla.org/</p>\n\n<p>The DOM section of it is probably what you look for, alongside with Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'm rather fond of <a href=\"http://www.gotapi.com/html\">Got API</a>, which lets you see easily see api docs about all the various pieces of web development.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>specific to jQuery I quite like <a href=\"http://visualjquery.com\" rel=\"nofollow\">visualjquery.com</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I find that when working a lot with these things, nothing beats having a book (which automatically falls open on the 2-3 most popular places due to wear &amp; tear). Nothing beats the <a href=\"http://oreilly.com/catalog/9780596101992/?CMP=AFC-ak_book&amp;ATT=JavaScript%3A+The+Definitive+Guide\" rel=\"nofollow\">rhino book</a>, which also has good coverage on what differences you can expect from different browsers. Get the latest edition.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>How about the standards?</p>\n\n<ol>\n<li><a href=\"http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/DOM2-Core.pdf\">DOM2 Core</a> (W3C)</li>\n<li><a href=\"http://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/DOM2-Events.pdf\">DOM2 Events</a> (W3C)</li>\n<li><a href=\"http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/DOM2-HTML.pdf\">DOM2 HTML</a> (W3C)</li>\n<li><a href=\"http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/DOM2-Style.pdf\">DOM2 CSS</a> (W3C)</li>\n</ol>\n\n<p>And for javascript itself:</p>\n\n<ol>\n<li><a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\">Standard ECMA-262 ECMAScript Language Specification</a> (ECMA)</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>One of the best sites i came across was   <a href=\"http://www.quirksmode.org/\" rel=\"nofollow\">http://www.quirksmode.org/</a>  </p>\n\n<p><a href=\"http://www.quirksmode.org/compatibility.html\" rel=\"nofollow\">http://www.quirksmode.org/compatibility.html</a></p>\n\n<p>Compares major browsers\u2019 CSS and JavaScript capabilities, as well as their adherence to the W3C standards.</p>\n\n<p><strong>Added 18/01</strong></p>\n\n<p>When can I use...  <a href=\"http://caniuse.com/\" rel=\"nofollow\">http://caniuse.com/</a></p>\n\n<p>Compatibility tables for support of HTML5, CSS3, SVG and more in desktop and mobile browsers</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I am looking for a good API documentation for Javascript especially related to browsers and DOM. I am not looking for any kind of Javascript tutorial, but simply a documentation for all standard Javascript classes and for classes used in web browsers.</p>\n\n<p>Something similar to Java's Javadoc ( <a href=\"http://java.sun.com/j2se/1.4.2/docs/api/\">http://java.sun.com/j2se/1.4.2/docs/api/</a> )</p>\n",
            "last_activity_date": 1326901203,
            "question_id": 555726,
            "score": 29,
            "tags": [
                "javascript",
                "api",
                "documentation",
                "reference"
            ],
            "title": "A good Javascript API reference documentation related to browsers and DOM"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You could allow cross-domain requests during testing by running chrome with the <code>--disable-web-security</code> command line option. This should probably get rid of the error (and allow FB to spy on your testing ;)</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>Since we can't blame the people from Google for constructing such a safe browser, I think the best solution is to use Facebook's server-side solutions (e.g. PHP SDK), it'll save you a lot, lot, lot, lot, lot of headache. The only advantage I see in using the FB javascript SDK  is the popup login which you can do yourself using javascript/jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This happens when a source from an different domain is loaded and tries to access the document.cookie. It happens with head sources (script tags) as well with iframe documents which try to access the document.cookie for some reason.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>These errors can be thrown if, when you register your app with Facebook, you don't have a trailing forward slash in the Site URL field. In other words, you need \"<a href=\"http://domain.com\" rel=\"nofollow\">http://domain.com</a><strong>/</strong>\" not \"<a href=\"http://domain.com\" rel=\"nofollow\">http://domain.com</a>\"</p>\n\n<p>You can check the Site URL setting from <a href=\"http://developers.facebook.com/apps\" rel=\"nofollow\">developers.facebook.com/apps</a> Edit settings -> Basic -> Site URL.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Whats the problem?</strong></p>\n\n<p>Tons of <code>Unsafe JavaScript attempt to access frame with URL...</code> error messages in the Chrome JS console.</p>\n\n<p>As <a href=\"http://stackoverflow.com/a/5353834/363701\">@thechrisproject points out</a>, these errors are caused by many reputable 3rd party api's and widgets, including but not limited to:</p>\n\n<ul>\n<li>The Facebook JS SDK</li>\n<li>Vimeo Iframe Embed</li>\n<li>Google Maps Iframe Embed</li>\n</ul>\n\n<p><strong>My understanding on the <em>why</em>:</strong> <sup>(please correct me if I'm wrong)</sup></p>\n\n<blockquote>\n  <p>Chrome has stricter security settings and/or shows more such errors than competing browsers.  API/widget/embed authors attempt to do things (cross-domain/frame) that will not work in all browsers (probably for their own reporting/analytics) but that don't actually effect the usuabilty of their widget if it doesn't work (just causes a lot of annoying errors)</p>\n</blockquote>\n\n<p><strong>Quick Answer</strong></p>\n\n<blockquote>\n  <p><strong>NO,</strong> you cannot (<em>just</em>) suppress these errors in the chrome console.</p>\n</blockquote>\n\n<p><strong>Solutions?</strong></p>\n\n<ul>\n<li><strong>Deal with it.</strong> These errors do not actually break these 3rd party apis and widgets, they just make the console much more difficult to use</li>\n<li>you can set the console to log only Warnings, Logs, or Debug messages. This will hide ALL errors.</li>\n<li>you can use another browser</li>\n<li>As <a href=\"http://stackoverflow.com/a/3327770/363701\">@Dagg_Nabbit. pointed out</a>, you can allow cross-domain requests by running chrome with the <code>--disable-web-security</code> command line option. More information here: <a href=\"http://stackoverflow.com/questions/3102819/chrome-disable-same-origin-policy\">Chrome: Disable same origin policy</a>.  Note that this setting will negatively effect the security of your browser.  I have 2 chrome shortcuts so I can open it with or without this flag.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Chrome (or any other webkit browser) throws a ton of these \"Unsafe JavaScript attempt to access frame with URL...\" when working with the Facebook API for example.</p>\n\n<p>It doesn't interfere with actual operation, but it does make the javascript console basically unusable.</p>\n\n<p>I'd like to know if there is a way to suppress these errors specifically in the console? Or if there are other solutions you guys can think of, I would really appreciate it.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1375845256,
            "question_id": 3010170,
            "score": 124,
            "tags": [
                "javascript",
                "facebook",
                "google-chrome",
                "webkit",
                "opengraph"
            ],
            "title": "&quot;Unsafe JavaScript attempt to access frame with URL...&quot; error being continuously generated in Chrome webkit inspector"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<pre><code>(function(data){\n    var recursive = arguments.callee;\n    data = data+1;\n    var nothing = function() {\n        recursive(data)\n    }\n    nothing();\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You could do something like:</p>\n\n<pre><code>(foo = function() { foo(); })()\n</code></pre>\n\n<p>or in your case:</p>\n\n<pre><code>(recur = function(data){\n    data = data+1;\n    var nothing = function() {\n        if (data &gt; 100) return; // put recursion limit\n        recur(data);\n    }\n    nothing();\n})(/* put data init value here */ 0);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You <strong>can</strong> give the function a name, even when you're creating the function as a value and not a \"function declaration\" statement. In other words:</p>\n\n<pre><code>(function foo() { foo(); })();\n</code></pre>\n\n<p>is a stack-blowing recursive function.  Now, that said, you <a href=\"http://kangax.github.com/nfe/\" rel=\"nofollow\"><strike>probably don't</strike> may not want to do this</a> in general because there are some weird problems with various implementations of Javascript. (<em>note</em> &mdash; that's a fairly old comment; some/many/all of the problems described in Kangax's blog post may be fixed in more modern browsers.)</p>\n\n<p>When you give a name like that, the name is not visible outside the function (well, it's not supposed to be; that's one of the weirdnesses).  It's like \"letrec\" in Lisp.</p>\n\n<p>As for <code>arguments.callee</code>, that's disallowed in \"strict\" mode and generally is considered a bad thing, because it makes some optimizations hard.  It's also much slower than one might expect.</p>\n\n<p><em>edit</em> &mdash; If you want to have the effect of an \"anonymous\" function that can call itself, you can do something like this (assuming you're passing the function as a callback or something like that):</p>\n\n<pre><code>asyncThingWithCallback(params, (function() {\n  function recursive() {\n    if (timeToStop())\n      return whatever();\n    recursive(moreWork);\n  }\n  return recursive;\n})());\n</code></pre>\n\n<p>What that does is define a function with a nice, safe, not-broken-in-IE function <strong>declaration</strong> statement, creating a local function whose name will not pollute the global namespace. The wrapper (truly anonymous) function just returns that local function.</p>\n",
                    "is_accepted": true,
                    "score": 86
                },
                {
                    "body": "<p>I would not do this as an inline function. It's pushing against the boundaries of good taste and doesn't really get you anything.</p>\n\n<p>If you really must, there is <code>arguments.callee</code> as in Fabrizio's answer. However this is generally considered inadvisable and is disallowed in ECMAScript Fifth Edition's \u2018strict mode\u2019. Although ECMA 3 and non-strict-mode are not going away, working in strict mode promises more possible language optimisations.</p>\n\n<p>One can also use a named inline function:</p>\n\n<pre><code>(function foo(data){\n    data++;\n    var nothing = function() {\n        foo(data);\n    }\n    nothing();\n})();\n</code></pre>\n\n<p>However named inline function expressions are also best avoided, as IE's JScript does some bad things to them. In the above example <code>foo</code> incorrectly pollutes the parent scope in IE, and the parent <code>foo</code> is a separate instance to the <code>foo</code> seen inside <code>foo</code>.</p>\n\n<p>What's the purpose of putting this in an inline anonymous function? If you just want to avoid polluting the parent scope, you can of course hide your first example inside another self-calling-anonymous-function (namespace). Do you really need to create a new copy of <code>nothing</code> each time around the recursion? You might be better off with a namespace containing two simple mutually-recursive functions.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Like bobince wrote, simply name your function.</p>\n\n<p>But, I'm guessing you also want to pass in an initial value and stop your function eventually!</p>\n\n<pre><code>var initialValue = ...\n\n(function recurse(data){\n    data++;\n    var nothing = function() {\n        recurse(data);\n    }\n    if ( ... stop condition ... )\n        { ... display result, etc. ... }\n    else\n        nothing();\n}(initialValue));\n</code></pre>\n\n<h2><a href=\"http://jsfiddle.net/SZp8C/\" rel=\"nofollow\">working jsFiddle example (uses data += data for fun)</a></h2>\n\n<p><br/></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>When you declare an anonymous function like this:</p>\n\n<pre><code>(function () {\n    // Pass\n}());\n</code></pre>\n\n<p>Its considered a function expression and it has an optional name (that you can use to call it from within itself. But because it's a function expression (and not a statement) it stays anonymous (but has a name that you can call). So this function can call itself:</p>\n\n<pre><code>(function foo () {\n    foo();\n}());\nfoo //-&gt; undefined\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>People talked about the Y combinator in comments, but no one wrote it as an answer.</p>\n\n<p>The Y combinator can be defined in javascript as follows: (thanks to steamer25 for the link)</p>\n\n<pre><code>var Y = function (gen) {\n  return (function(f) {\n    return f(f);\n  }(function(f) {\n    return gen(function() {\n      return f(f).apply(null, arguments);\n    });\n  }));\n}\n</code></pre>\n\n<p>And when you want to pass your anonymous function:</p>\n\n<pre><code>(Y(function(recur) {\n  return function(data) {\n    data = data+1;\n    var nothing = function() {\n      recur(data);\n    }\n    nothing();\n  }\n})());\n</code></pre>\n\n<p>The most important thing to note about this solution is that you shouldn't use it.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Why not pass the function to the functio itself ?</p>\n\n<pre><code>    var functionCaller = function(thisCaller, data) {\n        data = data + 1;\n        var nothing = function() {\n            thisCaller(thisCaller, data);\n        };\n        nothing();\n    };\n    functionCaller(functionCaller, data);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It may be simplest to use an \"anonymous object\" instead:</p>\n\n<pre><code>({\n  do: function() {\n    console.log(\"don't run this ...\");\n    this.do();\n  }\n}).do();\n</code></pre>\n\n<p>Your global space is completely unpolluted. It's pretty straightforward. And you can easily take advantage of the object's non-global state.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I am not sure if the answer is still required but this can also be done using delegates created using function.bind:</p>\n\n<pre><code>    var x = ((function () {\n        return this.bind(this, arguments[0])();\n    }).bind(function (n) {\n        if (n != 1) {\n            return n * this.bind(this, (n - 1))();\n        }\n        else {\n            return 1;\n        }\n    }))(5);\n\n    console.log(x);\n</code></pre>\n\n<p>This does not involve named functions or arguments.callee.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Lets say I have a basic recursive function:</p>\n\n<pre><code>function recur(data) {\n    data = data+1;\n    var nothing = function() {\n        recur(data);\n    }\n    nothing();\n}\n</code></pre>\n\n<p>How could I do this if I have an anonymous function such as...</p>\n\n<pre><code>(function(data){\n    data = data+1;\n    var nothing = function() {\n        //Something here that calls the function?\n    }\n    nothing();\n})();\n</code></pre>\n\n<p>I'd like a way to call the function that called this function... I've seen scripts somewhere (I can't remember where) that can tell you the name of a function called, but I can't recall any of that information right now.</p>\n",
            "last_activity_date": 1423326764,
            "question_id": 3883780,
            "score": 63,
            "tags": [
                "javascript",
                "recursion",
                "scope",
                "anonymous-function"
            ],
            "title": "javascript: recursive anonymous function?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Here are some options:</p>\n\n<ul>\n<li><a href=\"http://github.com/felixge/node-mysql\">http://github.com/felixge/node-mysql</a> (last update: Sep 29th)</li>\n<li><a href=\"http://github.com/sidorares/nodejs-mysql-native\">http://github.com/sidorares/nodejs-mysql-native</a> (last update: Aug 31st)</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Just look at <a href=\"https://github.com/Sannis/node-mysql-libmysqlclient\">https://github.com/Sannis/node-mysql-libmysqlclient</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you need an ORM for MySQL you might want to check out <a href=\"http://sequelizejs.com\" rel=\"nofollow\">http://sequelizejs.com</a> :)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can also try out a newer effort known as <a href=\"http://nodejsdb.org/\">Node.js DB</a> that aims to provide a common framework for several database engines. It is built with C++ so performance is guaranteed.</p>\n\n<p>Specifically you could use its db-mysql driver for <a href=\"http://nodejsdb.org/db-mysql\">Node.js MySQL support</a>.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>For connecting to MySQL with node.js, I've had great success using <a href=\"https://github.com/w1nk/node-odbc\" rel=\"nofollow\">node-odbc</a></p>\n\n<p>It's also worked flawlessly for connecting to other databases such as IBM's DB2, and it's been surprisingly fast.</p>\n\n<p><a href=\"http://www.webaj.com/how-setup-mysql-dsn-datasbase-source-centos-myodbc-and-unixodbc-command-line.htm\" rel=\"nofollow\">This page</a> is particularly useful for configuring ODBC on linux.</p>\n\n<p>After installing with <code>yum install mysql-connector-odbc</code>, my /etc/odbc.ini file looks like this:</p>\n\n<pre><code>[MYSQL]\nDescription = MySQL ODBC Driver\nDriver      = /usr/lib64/libmyodbc3.so\n</code></pre>\n\n<p>I left out stuff such as server, user, database, port, password etc. so that I can set these from my connection string (I need to connect to multiple databases).</p>\n\n<p>After saving /etc/odbc.ini, it's installed with this command: <code>odbcinst -i -s -l -f /etc/odbc.ini</code></p>\n\n<p>And here's a code sample for testing it out:</p>\n\n<pre><code>    var odbc = require(\"odbc\");\n    var db = new odbc.Database();\n    var conn = \"dsn=mysql;server=localhost;user=root;database=mydb;port=3306;password=mypwd;command timeout=30000;\";\n    db.open(conn, function(err) {\n        if(err) throw err;\n        var params = ['jiy@stackoverflow.com'];\n        var qry = \"select * users where email = ?\";\n        db.query(qry, params, function(err, rows, def) {\n            if(err) console.log(err);\n            console.log(rows);\n        });\n    });\n</code></pre>\n\n<p>Or if you wanted to use coffeescript:</p>\n\n<pre><code>    odbc = require \"odbc\"\n    db = new odbc.Database()\n    conn = \"dsn=mysql;server=localhost;user=root;database=mydb;port=3306;password=mypwd;command timeout=30000;\"\n\n    db.open conn, (err) -&gt;\n        throw err if err\n\n        qry = \"select * from users where email = ?\"\n\n        db.query sql, [\"jiy@stackoverflow.com\"], (err, rows, def) -&gt;\n            if err? then console.log err else\n            console.log rows\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there a Node.JS Driver for MySQL that is commonly used other than <a href=\"https://github.com/felixge/node-mysql\">node-mysql?</a></p>\n\n<p>(It seems like there is not much activity with node.js database drivers. Is there a reason for this or is it just because Node.JS is so young?)</p>\n",
            "last_activity_date": 1346886680,
            "question_id": 3878818,
            "score": 55,
            "tags": [
                "javascript",
                "mysql",
                "database",
                "node.js"
            ],
            "title": "What MySQL drivers are available for node.js?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<ol>\n<li>All the script includes happen in order that they appear in the html, they get loaded in as the html is parsed.</li>\n<li>It means ALL dom objects have been loaded, and all include scripts and css. (Images maybe not yet).</li>\n<li>see 2.</li>\n<li>$(document).ready() only gets call once all scripts and dom objects are loaded, you should be fine.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"http://javascript.about.com/od/hintsandtips/a/exeorder.htm\" rel=\"nofollow\">http://javascript.about.com/od/hintsandtips/a/exeorder.htm</a> should help you answer that</p>\n\n<p>basically:\nfirst all the data is loaded (the html), then the js\nthe code within the head/body which is not in a function or ready or something like that is executed first. from there it goes about the scripts sequentially</p>\n\n<p>its important to note that js takes precedence over ie. css loading - so form a performance perspective you should have the js at the bottom of the page.</p>\n\n<p>so @4: you dont need to prevent that scenarion because first.js is always being read/executed before last.js</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Javascript is executed as it is seen.  <em>Usually</em>, the browser stops parsing the page as soon as it sees a <code>&lt;script&gt;</code> tag, downloads and runs the script, and then keeps going.  This is why it's commonly advised to put <code>&lt;script&gt;</code> tags at the bottom: so the user doesn't have a blank page while the browser waits for the scripts to download.</p>\n\n<p>However, starting from Firefox 3.5, scripts are downloaded in the background while the rest of the page is rendered.  In the now-unusual event that the script uses <code>document.write</code> or similar, Firefox will back up and redraw as necessary.  I don't think other browsers do this at the moment, but I wouldn't be surprised if it were forthcoming, and IE at least supports a <code>defer</code> attribute in the <code>&lt;script&gt;</code> tag that will defer loading the script until after the page is loaded.</p>\n\n<p><code>DOMContentLoaded</code> is exactly that: it fires as soon as the DOM is loaded.  That is, as soon as the browser has parsed all of the HTML and created a tree of it internally.  It does NOT wait for images, CSS, etc. to load.  The DOM is all you usually need to run whatever Javascript you want, so it's nice to not have to wait for other resources.  However, I believe only Firefox supports <code>DOMContentLoaded</code>; in other browsers, <code>ready()</code> will just attach an event to regular old <code>onload</code>.</p>\n\n<p>Javascript is guaranteed to run in the order it appears in your HTML, so just make sure your function is defined before you try to attach it to an event.</p>\n",
                    "is_accepted": true,
                    "score": 27
                }
            ],
            "body": "<p>I just realized that I lack the fundamental knowledge of what exactly happens as a page is being loaded into a browser.</p>\n\n<p>Assume I have a structure like this: </p>\n\n<pre><code>&lt;head&gt;\n\n&lt;script src=\"jquery.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"first.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n...\n&lt;script type=\"text/javascript\" id=\"middle\"&gt;\n    // some more JS here...\n&lt;/script&gt;\n...\n&lt;script src=\"last.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>Here are the questions I have:</p>\n\n<ol>\n<li><p><strong>What sequence are things happening in?</strong> First the DOM then the JS is executed, is it vice-versa, or is it simultaneous (or as soon as the JS files finish downloading, without any regard to the DOM)? I know that scripts are loaded in order.</p></li>\n<li><p><strong>Where does <code>$(document).ready()</code> fit in?</strong> In Firebug's Net tab I see <code>DOMContentLoaded</code> event and the <code>load</code> event. Is <code>$(document).ready()</code> triggered when the <code>DOMContentLoaded</code> event fires? Couldn't find any concrete info on this (everyone merely mentions \"when the DOM is loaded\").</p></li>\n<li><p>What exactly does \"when the DOM is loaded\" mean? That all HTML/JS has been downloaded and parsed by the browser? Or just the HTML?</p></li>\n<li><p>Is the following scenario possible: there is a <code>$(document).ready()</code> which calls code in <code>last.js</code>, but runs before last.js has loaded? Where would it most likely be (in <code>first.js</code> or the inline code block)? <strong>How can I prevent this scenario?</strong></p></li>\n</ol>\n\n<p>I want to undestand the big picture of what happens when and what depends on what (if at all).</p>\n",
            "last_activity_date": 1250792763,
            "question_id": 1307929,
            "score": 46,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "dom"
            ],
            "title": "JavaScript: DOM load events, execution sequence, and $(document).ready()"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you're asking about creating an HTML table from CSV data, this is what you want:</p>\n\n<pre><code>d3.csv(\"data.csv\", function(data) {\n    // the columns you'd like to display\n    var columns = [\"name\", \"age\"];\n\n    var table = d3.select(\"#container\").append(\"table\"),\n        thead = table.append(\"thead\"),\n        tbody = table.append(\"tbody\");\n\n    // append the header row\n    thead.append(\"tr\")\n        .selectAll(\"th\")\n        .data(columns)\n        .enter()\n        .append(\"th\")\n            .text(function(column) { return column; });\n\n    // create a row for each object in the data\n    var rows = tbody.selectAll(\"tr\")\n        .data(data)\n        .enter()\n        .append(\"tr\");\n\n    // create a cell in each row for each column\n    var cells = rows.selectAll(\"td\")\n        .data(function(row) {\n            return columns.map(function(column) {\n                return {column: column, value: row[column]};\n            });\n        })\n        .enter()\n        .append(\"td\")\n            .text(function(d) { return d.value; });\n});\n</code></pre>\n\n<p>Check out the <a href=\"http://jsfiddle.net/7WQjr/\">working example</a>. If you're copying that code, you'll need to update the <code>tabulate()</code> function so that it either selects an existing table or a different container (rather than <code>\"#container\"</code>), then you can use it with CSV data like so:</p>\n\n<pre><code>d3.csv(\"path/to/data.csv\", function(data) {\n  tabulate(data, [\"name\", \"age\"]);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>There is a bug in the answer proposed by @Shawn_allen.</p>\n\n<p>To solve it just change the following line of code </p>\n\n<pre><code>return {column: column, value: row[column]};\n</code></pre>\n\n<p>by this one</p>\n\n<pre><code>return {column: column, value: row[columns.indexOf(column)]};\n</code></pre>\n\n<p>Enjoy !</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Often, I need to refresh a table of data periodically.  Here's how I populate a table with data:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;table id=\"t1\"&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;&lt;th&gt;Name&lt;th&gt;Age\n    &lt;/thead&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>function tabulate(data, columns) {\n  var table = d3.select(\"#t1\");\n  table.select('tbody').remove();  // remove any existing data\n  var tbody = table.append('tbody');\n  data.forEach(function(row) {\n    var tr = tbody.append('tr');\n    columns.forEach(function(column) {\n      tr.append('td').text(row[column]);\n    });\n  });\n  return table;\n}\n</code></pre>\n\n<p>Notes:</p>\n\n<ul>\n<li>I like to put table headers in the HTML, rather than generate them from JavaScript.</li>\n<li>I didn't attach the data to the table rows and cells (like @Shawn shows in his answer), because I don't have a need for that.  So the code is simpler.</li>\n</ul>\n\n<p><kbd><a href=\"http://jsfiddle.net/mrajcok/xywo7h90/\" rel=\"nofollow\">fiddle</a></kbd></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am trying to create a table linked to a <code>*.csv</code> file using d3, but all I get is a blank webpage.\nEven with the example Crimea I get a blank page.<br>\nI would be grateful to be directed or shown a working example or a suggestion of what I am doing wrong.</p>\n",
            "last_activity_date": 1425408517,
            "question_id": 9268645,
            "score": 29,
            "tags": [
                "javascript",
                "d3.js",
                "html-table"
            ],
            "title": "Creating a table linked to a csv file"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I had the same issue when implementing autocomplete on a site I worked on recently.  This is the solution I came up with:</p>\n\n<pre><code>$(\"input\").focusin(function () {\n    $(document).keypress(function (e) {\n        if (e.which == 13) {\n            var firstResult = $(\".pac-container .pac-item:first\").text();\n\n            var geocoder = new google.maps.Geocoder();\n            geocoder.geocode({\"address\":firstResult }, function(results, status) {\n                if (status == google.maps.GeocoderStatus.OK) {\n                    var lat = results[0].geometry.location.lat(),\n                        lng = results[0].geometry.location.lng(),\n                        placeName = results[0].address_components[0].long_name,\n                        latlng = new google.maps.LatLng(lat, lng);\n\n                        $(\".pac-container .pac-item:first\").addClass(\"pac-selected\");\n                        $(\".pac-container\").css(\"display\",\"none\");\n                        $(\"#searchTextField\").val(firstResult);\n                        $(\".pac-container\").css(\"visibility\",\"hidden\");\n\n                    moveMarker(placeName, latlng);\n\n                }\n            });\n        } else {\n            $(\".pac-container\").css(\"visibility\",\"visible\");\n        }\n\n    });\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/dodger/pbbhH/\">http://jsfiddle.net/dodger/pbbhH/</a></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Here is a solution that does not make a geocoding request that may return an incorrect result: <a href=\"http://jsfiddle.net/amirnissim/2D6HW/\">http://jsfiddle.net/amirnissim/2D6HW/</a> <br/></p>\n\n<p>It simulates a <code>down-arrow</code> keypress whenever the user hits <code>return</code> inside the autocomplete field. The <kbd>\u2193</kbd> event is triggered before the <kbd>return</kbd> event so it simulates the user selecting the first suggestion using the keyboard.<br/></p>\n\n<p>Here is the code (tested on Chrome and Firefox) :<br/></p>\n\n<pre><code>&lt;script src='https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js'&gt;&lt;/script&gt;\n&lt;script src=\"https://maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places\"&gt;&lt;/script&gt;\n&lt;script&gt;\n    var pac_input = document.getElementById('searchTextField');\n\n    (function pacSelectFirst(input) {\n        // store the original event binding function\n        var _addEventListener = (input.addEventListener) ? input.addEventListener : input.attachEvent;\n\n        function addEventListenerWrapper(type, listener) {\n            // Simulate a 'down arrow' keypress on hitting 'return' when no pac suggestion is selected,\n            // and then trigger the original listener.\n            if (type == \"keydown\") {\n                var orig_listener = listener;\n                listener = function(event) {\n                    var suggestion_selected = $(\".pac-item-selected\").length &gt; 0;\n                    if (event.which == 13 &amp;&amp; !suggestion_selected) {\n                        var simulated_downarrow = $.Event(\"keydown\", {\n                            keyCode: 40,\n                            which: 40\n                        });\n                        orig_listener.apply(input, [simulated_downarrow]);\n                    }\n\n                    orig_listener.apply(input, [event]);\n                };\n            }\n\n            _addEventListener.apply(input, [type, listener]);\n        }\n\n        input.addEventListener = addEventListenerWrapper;\n        input.attachEvent = addEventListenerWrapper;\n\n        var autocomplete = new google.maps.places.Autocomplete(input);\n\n    })(pac_input);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 63
                },
                {
                    "body": "<p>Here is an example of a real, non-hacky, solution. It doesn't use any browser hacks etc, just methods from the public API provided by Google and documented here: <a href=\"https://developers.google.com/maps/documentation/javascript/reference\">Google Maps API</a></p>\n\n<p>The only downside is that additional requests to Google are required if the user doesn't select an item from the list. The upside is that the result will always be correct as the query is performed identically to the query inside the AutoComplete. Second upside is that by only using public API methods and not relying on the internal HTML structure of the AutoComplete widget, we can be sure that our product won't break if Google makes changes.</p>\n\n<pre><code>var input = /** @type {HTMLInputElement} */(document.getElementById('searchTextField'));\nvar autocomplete = new google.maps.places.Autocomplete(input);  \n// These are my options for the AutoComplete\nautocomplete.setTypes(['(cities)']);\nautocomplete.setComponentRestrictions({'country': 'es'});\n\ngoogle.maps.event.addListener(autocomplete, 'place_changed', function() {\n    result = autocomplete.getPlace();\n    if(typeof result.address_components == 'undefined') {\n        // The user pressed enter in the input \n        // without selecting a result from the list\n        // Let's get the list from the Google API so that\n        // we can retrieve the details about the first result\n        // and use it (just as if the user had actually selected it)\n        autocompleteService = new google.maps.places.AutocompleteService();\n        autocompleteService.getPlacePredictions(\n            {\n                'input': result.name,\n                'offset': result.name.length,\n                // I repeat the options for my AutoComplete here to get\n                // the same results from this query as I got in the \n                // AutoComplete widget\n                'componentRestrictions': {'country': 'es'},\n                'types': ['(cities)']\n            },\n            function listentoresult(list, status) {\n                if(list == null || list.length == 0) {\n                    // There are no suggestions available.\n                    // The user saw an empty list and hit enter.\n                    console.log(\"No results\");\n                } else {\n                    // Here's the first result that the user saw\n                    // in the list. We can use it and it'll be just\n                    // as if the user actually selected it\n                    // themselves. But first we need to get its details\n                    // to receive the result on the same format as we\n                    // do in the AutoComplete.\n                    placesService = new google.maps.places.PlacesService(document.getElementById('placesAttribution'));\n                    placesService.getDetails(\n                        {'reference': list[0].reference},\n                        function detailsresult(detailsResult, placesServiceStatus) {\n                            // Here's the first result in the AutoComplete with the exact\n                            // same data format as you get from the AutoComplete.\n                            console.log(\"We selected the first item from the list automatically because the user didn't select anything\");\n                            console.log(detailsResult);\n                        }\n                    );\n                }\n            }\n        );\n    } else {\n        // The user selected a result from the list, we can \n        // proceed and use it right away\n        console.log(\"User selected an item from the list\");\n        console.log(result);\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Building on <a href=\"http://stackoverflow.com/a/11703018/449045\" title=\"amimissim's answer\">amimissim's answer</a>, I present a slight alternative, utilising Google's API to handle the events in a cross browser way (amimissim's solution doesn't seem to work in IE8).</p>\n\n<p>I also had to change <code>pac-item.pac-selected</code> to <code>pac-item-refresh.pac-selected</code> as it seems the results div class has changed. This makes pressing <code>ENTER</code> on a suggestion work (rather than selecting the next one down).</p>\n\n<pre><code>var input = document.getElementById('MyFormField');\nvar autocomplete = new google.maps.places.Autocomplete(input);\ngoogle.maps.event.addListener(autocomplete, 'keydown', function(event) {\n    var suggestion_selected = $(\".pac-item-refesh.pac-selected\").length &gt; 0;\n    if (event.which == 13 &amp;&amp; !suggestion_selected) {\n        var simulated_downarrow = $.Event(\"keydown\", {\n                    keyCode: 40,\n                    which: 40\n        });\n        this.apply(autocomplete, [simulated_downarrow]);\n    }\n    this.apply(autocomplete, [event]);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>@benregn @amirnissim I think the selection error comes from:</p>\n\n<pre><code>var suggestion_selected = $(\".pac-item.pac-selected\").length &gt; 0;\n</code></pre>\n\n<p>The class <code>pac-selected</code> should be <code>pac-item-selected</code>, which explains why <code>!suggestion_selected</code> always evaluate to true, causing the incorrect location to be selected when the enter key is pressed after using 'keyup' or 'keydown' to highlight the desired location.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I just want to write an small enhancement for <a href=\"http://stackoverflow.com/a/11703018/3074149\">the answer of amirnissim</a><br />The script posted doesn't support IE8, because \"event.which\" seems to be always empty in IE8.<br />\nTo solve this problem you just need to additionally check for \"event.keyCode\":</p>\n\n<pre><code>listener = function (event) {\n  if (event.which == 13 || event.keyCode == 13) {\n    var suggestion_selected = $(\".pac-item.pac-selected\").length &gt; 0;\n    if(!suggestion_selected){\n      var simulated_downarrow = $.Event(\"keydown\", {keyCode:40, which:40})\n      orig_listener.apply(input, [simulated_downarrow]);\n    }\n  }\n  orig_listener.apply(input, [event]);\n};\n</code></pre>\n\n<p>JS-Fiddle: <a href=\"http://jsfiddle.net/QW59W/107/\" rel=\"nofollow\">http://jsfiddle.net/QW59W/107/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It seems there is a much better and clean solution: To use <code>google.maps.places.SearchBox</code> instead of <code>google.maps.places.Autocomplete</code>.\nA code is almost the same, just getting the first from multiple places. On pressing the Enter the the correct list is returned - so it runs out of the box and there is no need for hacks.</p>\n\n<p>See the example HTML page:</p>\n\n<p><a href=\"http://rawgithub.com/klokan/8408394/raw/5ab795fb36c67ad73c215269f61c7648633ae53e/places-enter-first-item.html\" rel=\"nofollow\">http://rawgithub.com/klokan/8408394/raw/5ab795fb36c67ad73c215269f61c7648633ae53e/places-enter-first-item.html</a></p>\n\n<p>The relevant code snippet is:</p>\n\n<pre><code>var searchBox = new google.maps.places.SearchBox(document.getElementById('searchinput'));\n\ngoogle.maps.event.addListener(searchBox, 'places_changed', function() {\n  var place = searchBox.getPlaces()[0];\n\n  if (!place.geometry) return;\n\n  if (place.geometry.viewport) {\n    map.fitBounds(place.geometry.viewport);\n  } else {\n    map.setCenter(place.geometry.location);\n    map.setZoom(16);\n  }\n});\n</code></pre>\n\n<p>The complete source code of the example is at: <a href=\"https://gist.github.com/klokan/8408394\" rel=\"nofollow\">https://gist.github.com/klokan/8408394</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>How about this?</p>\n\n<pre><code>$(\"input\").keypress(function(event){\n            if(event.keyCode == 13 || event.keyCode == 9) {\n                $(event.target).blur();\n                if($(\".pac-container .pac-item:first span:eq(3)\").text() == \"\")\n                    firstValue = $(\".pac-container .pac-item:first .pac-item-query\").text();\n                else\n                    firstValue = $(\".pac-container .pac-item:first .pac-item-query\").text() + \", \" + $(\".pac-container .pac-item:first span:eq(3)\").text();\n                event.target.value = firstValue;\n\n            } else\n                return true;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>None of these answers seemed to work for me. They'd get the general location but wouldn't actually pan to the actual place I searched for. Within the .pac-item you can actually get just the address (name of place excluded) by selecting $('.pac-item:first').children()[2].textContent</p>\n\n<p>So here is my solution:</p>\n\n<pre><code>$(\"#search_field\").on(\"keyup\", function(e) {\n    if(e.keyCode == 13) {\n        searchPlaces();\n    }\n});\n\nfunction searchPlaces() {\n    var $firstResult = $('.pac-item:first').children();\n    var placeName = $firstResult[1].textContent;\n    var placeAddress = $firstResult[2].textContent;\n\n    $(\"#search_field\").val(placeName + \", \" + placeAddress);\n\n    var geocoder = new google.maps.Geocoder();\n    geocoder.geocode({\"address\":placeAddress }, function(results, status) {\n        if (status == google.maps.GeocoderStatus.OK) {\n            var lat = results[0].geometry.location.lat(),\n                lng = results[0].geometry.location.lng(),\n                placeName = results[0].address_components[0].long_name,\n                latlng = new google.maps.LatLng(lat, lng);\n\n            map.panTo(latlng);\n        }\n    });\n}\n</code></pre>\n\n<p>I know this question was already answered but figured I'd throw in my 2 cents just in case anyone else was having the same problem as me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>For Google Places Autocomplete V3, the best solution for this is two API requests.</strong>  </p>\n\n<p>Here is the <a href=\"http://jsfiddle.net/elGrecode/x4utt1tL/3/\" rel=\"nofollow\">fiddle</a></p>\n\n<p>The reason why none of the other answers sufficed is because they either used jquery to mimic events (hacky) or used either Geocoder or Google Places Search box <em>which does not always match autocomplete results</em>. Instead, what we will do is is uses Google's Autocomplete Service as detailed here with only javascript (no jquery)</p>\n\n<p>Below is detailed the most cross browser compatible solution using native Google APIs to generate the autocomplete box and then rerun the query to select the first option.</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?libraries=places&amp;language=en\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Javascript</p>\n\n<pre><code>// For convenience, although if you are supporting IE8 and below\n// bind() is not supported\nvar $ = document.querySelector.bind(document);\n\nfunction autoCallback(predictions, status) {\n    // *Callback from async google places call\n    if (status != google.maps.places.PlacesServiceStatus.OK) {\n        // show that this address is an error\n        pacInput.className = 'error';\n        return;\n    }\n\n    // Show a successful return\n    pacInput.className = 'success';\n    pacInput.value = predictions[0].description;\n}\n\n\nfunction queryAutocomplete(input) {\n    // *Uses Google's autocomplete service to select an address\n    var service = new google.maps.places.AutocompleteService();\n    service.getPlacePredictions({\n        input: input,\n        componentRestrictions: {\n            country: 'us'\n        }\n    }, autoCallback);\n}\n\nfunction handleTabbingOnInput(evt) {\n    // *Handles Tab event on delivery-location input\n    if (evt.target.id == \"pac-input\") {\n        // Remove active class\n        evt.target.className = '';\n\n        // Check if a tab was pressed\n        if (evt.which == 9 || evt.keyCode == 9) {\n            queryAutocomplete(evt.target.value);\n        }\n    }\n}\n\n// ***** Initializations ***** //\n// initialize pac search field //\nvar pacInput = $('#pac-input');\npacInput.focus();\n\n// Initialize Autocomplete\nvar options = {\n    componentRestrictions: {\n        country: 'us'\n    }\n};\nvar autocomplete = new google.maps.places.Autocomplete(pacInput, options);\n// ***** End Initializations ***** //\n\n// ***** Event Listeners ***** //\ngoogle.maps.event.addListener(autocomplete, 'place_changed', function () {\n    var result = autocomplete.getPlace();\n    if (typeof result.address_components == 'undefined') {\n        queryAutocomplete(result.name);\n    } else {\n        // returns native functionality and place object\n        console.log(result.address_components);\n    }\n});\n\n// Tabbing Event Listener\nif (document.addEventListener) {\n    document.addEventListener('keydown', handleTabbingOnInput, false);\n} else if (document.attachEvent) { // IE8 and below\n    document.attachEvent(\"onsubmit\", handleTabbingOnInput);\n}\n\n// search form listener\nvar standardForm = $('#search-shop-form');\nif (standardForm.addEventListener) {\n    standardForm.addEventListener(\"submit\", preventStandardForm, false);\n} else if (standardForm.attachEvent) { // IE8 and below\n    standardForm.attachEvent(\"onsubmit\", preventStandardForm);\n}\n// ***** End Event Listeners ***** //\n</code></pre>\n\n<p>HTML</p>\n\n<pre><code>&lt;form id=\"search-shop-form\" class=\"search-form\" name=\"searchShopForm\" action=\"/impl_custom/index/search/\" method=\"post\"&gt;\n    &lt;label for=\"pac-input\"&gt;Delivery Location&lt;/label&gt;\n        &lt;input id=\"pac-input\" type=\"text\" placeholder=\"Los Angeles, Manhattan, Houston\" autocomplete=\"off\" /&gt;\n        &lt;button class=\"search-btn btn-success\" type=\"submit\"&gt;Search&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>The only gripe is that the native implementation returns a different data structure although the information is the same. Adjust accordingly. </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have successfuly implemented Google Maps Places V3 autocomplete feature on my input box as per <a href=\"http://code.google.com/intl/sk-SK/apis/maps/documentation/javascript/places.html#places_autocomplete\">http://code.google.com/intl/sk-SK/apis/maps/documentation/javascript/places.html#places_autocomplete</a>. It works nicely, however I would love to know how can I make it select the first option from the suggestions when a user presses enter. I guess I would need some JS magic, but I am very much new to JS and don't know where to start.</p>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1424046680,
            "question_id": 7865446,
            "score": 26,
            "tags": [
                "javascript",
                "google-maps",
                "autocomplete",
                "google-maps-api-3"
            ],
            "title": "Google maps Places API V3 autocomplete - select first option on enter"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I guess it would be preferable to get the manifest approach working, since this feels like the most relevant mechanism for locally caching the file.</p>\n\n<p>What happens if you alter the audio file's HTTP headers, e.g. <code>Content-Type</code> and <code>Expires</code>? Does the browser do something different if the file extension is changed?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I see you've had no luck so far.</p>\n\n<p>You might want to take a look at <a href=\"http://www.hyper-metrix.com/open-source/jai/\" rel=\"nofollow\">JAI (JavaScript Audio Interface)</a> (\"the world's first javascript interface for web <code>&lt;audio&gt;</code>\"). Or get in touch with <a href=\"http://twitter.com/F1LT3R\" rel=\"nofollow\">Alastair MacDonald</a>, who wrote it.</p>\n\n<p>Failing that, the <a href=\"http://html5doctor.com\" rel=\"nofollow\">HTML5 Doctor</a> may be able to assist.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've been trying to do this myself, on the iOS (for iPhone / iPad) but it refuses to cache audio files in offline, even if in Cache Manifest. </p>\n\n<p>It does not error, but instead simply pretends to have played the audio element if invoked via JavaScript without a control. If it's embedded with a control, it displays an alternate control that says \"Cannot play audio file.\". It works fine if the application is able to go online.</p>\n\n<p>It seems not to cache the audio, playing another sound resource seems to cause it to clear the previous resource from memory - this is pretty worthless functionality even when online.</p>\n\n<p>I have experimented with base64 encoding the audio as data URI's. This works in Safari on the desktop (at least for fairly short samples of around 20-30k that I've been using) but seems not to be supported at all on iOS - it silently does nothing, which is highly annoying.</p>\n\n<p>I don't know about other vendors - Google Chrome used to not support data URI's for audio but perhaps they fixed it... - it seems like it's not possible for now though.</p>\n\n<p>Update: Minor discrepancy with iPhone OS 3.x (tested with 3.1.2): If an audio element is specified in an offline web app but it doesn't have a control, it displays a non-interactive control with a non-animated spinner on it (which it definitely shouldn't do). I assume this is fixed in iOS 4.x (which should be out next week).</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>So it's been a while since I asked this question and I thought i'd give some info about how we solved it. Basically we encoded the data into PNG's using a similar technique to this:</p>\n\n<p><a href=\"http://audioscene.org/scene-files/yury/pngencoding/sample.html\">http://audioscene.org/scene-files/yury/pngencoding/sample.html</a></p>\n\n<p>Then cached the image on the mobile device using html5 local storage and accessed it as needed. The PNG's were pretty big but this worked for us.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>I spent a while trying to do this for a game I'm making, and since as far as I could tell browsers (Firefox and Chrome) still don't support caching of audio elements I thought I'd post the solution I found.</p>\n\n<p>There is a workaround described here: <a href=\"http://dougx.net/plunder/index.php#code\" rel=\"nofollow\">http://dougx.net/plunder/index.php#code</a></p>\n\n<p>I can confirm it works pretty well, but is probably better suited to smaller files. As he describes here (http://dougx.net/plunder/GameSounds.txt), you encode the audio as base64 strings, and give them a data:audio/ogg;base64 (or any compatible audio format) header, which HTML5 audio can then read in. Because this is just a string, the browser will cache it.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Adding video and audio files to local storage works with iOS 4.3.</p>\n\n<p>I just added a video and an audio file to manifest and they both got downloaded to offline storage on iPad.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've been experimenting with the audio and local storage features of html5 of late and have run into something that has me stumped.</p>\n\n<p>I'd like to be able to cache or store the source of the audio  element locally to enable speedier and offline playback. The problem is I can't see how this is possible with the current implementation.</p>\n\n<p>I have tried the following using WebKit:</p>\n\n<ol>\n<li><p>Creating a manifest file to set up local caching but the audio file appears not to be a cacheable item maybe due to the way it is stream or something</p></li>\n<li><p>I have also attempted to use javascript to put an audio object into local storage but the size of the mp3 makes this impossible due to memory issues (i think).</p></li>\n<li><p>I have tried to use the data uri and base64 to use the html as a audio transport that can be cached but again the filesize makes this prohibitive. Also the audio element does not seem to like this in WebKit (works fine in mozilla)</p></li>\n<li><p>I have tried several methods of putting the data into the local database store. Again suffering the same issues as the other cases.</p></li>\n</ol>\n\n<p>I'd love to hear any other ideas anyone may have as to how I could achieve my goal of offline playback using caching/local storage in WebKit.</p>\n",
            "last_activity_date": 1300395766,
            "question_id": 1612116,
            "score": 20,
            "tags": [
                "javascript",
                "caching",
                "html5",
                "audio",
                "webkit"
            ],
            "title": "HTML5 Local Storage of audio element source - is it possible?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Javascript was the original name, meant to capitalize on the popularity of java.  ECMA is the standards body that oversees the standard that was eventually put in place so the names are roughly equivalent.</p>\n\n<p>Implementations have other names, like V8 or Rhino, etc.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Various JavaScript versions are implementations of the ECMAScript standard.  </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I doubt we'd ever use the word \"ECMAScript\" if not for the fact that the name \"JavaScript\" is owned by Sun. For all intents and purposes, the language is JavaScript. You don't go to the bookstore looking for ECMAScript books, do you?</p>\n\n<p>It's a bit too simple to say that \"JavaScript\" is the implementation. JScript is Microsoft's implementation.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>javascript <strong>is a</strong> ECMAscript language\nECMAscript <strong>isn't necessarily</strong> javascript\ndoes that help?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Technically ECMAScript is the language that everyone is using and implementing -- it is the spec created many years ago when Netscape and Microsoft sat down and attempted to standardise the scripting between JavaScript (Netscape's scripting language) and JScript (Microsoft's).</p>\n\n<p>Subsequently all these engines are ostensibly implementing ECMAScript, however JavaScript (the name) now hangs around for both traditional naming reasons, and as a marketing term by mozilla for their various non-standard extensions (which they want to be able to actually \"version\")</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>JavaScript is one branch of languages formed around the ECMAScript standard. I believe ECMA is the European Computer Manufacturers Association, not that this is really relevant or anything.</p>\n\n<p>Don't forget another popular language formed around the ECMA Script standard is ActionScript, used in Adobe Flash/Flex.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>ECMAScript is the language, whereas JavaScript, JScript, and even ActionScript 3 are called \"dialects\". <a href=\"http://en.wikipedia.org/wiki/ECMAScript\">Wikipedia</a> sheds some light on this.</p>\n",
                    "is_accepted": true,
                    "score": 81
                },
                {
                    "body": "<p>i know this is an old post but hopefully this will help someone.</p>\n\n<p>In the 1990\u2019s different versions of js started coming out like javascript  from netscape,\nJs script from Microsoft. So ecmascript was introduced as a standard. But ecmascript forms only a part of javascript which specifies its core syntax,types,objects etc. Probably that explains the inconsistent implementations of javascript across diff. browsers</p>\n\n<p>Reference - Wrox(Professional Javascript For Web Developers)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In my understanding, ECMAScript is the \"Theory\" or \"Specification\", and Javascript is \"Practicals\" or \"Implementation\".</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What's the difference between ECMAScript and JavaScript? From what I've deduced, ECMAScript is the standard and JavaScript is the implementation. Is this correct?</p>\n",
            "last_activity_date": 1387387191,
            "question_id": 912479,
            "score": 96,
            "tags": [
                "javascript",
                "ecma262"
            ],
            "title": "What is the difference between JavaScript and ECMAScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>It's a <a href=\"http://www.howtocreate.co.uk/tutorials/javascript/browserwindow\">pain in the ass</a>.  I recommend skipping the nonsense and using <a href=\"http://docs.jquery.com/CSS/width\">jQuery</a>, which lets you just do <code>$(window).width()</code>.</p>\n",
                    "is_accepted": true,
                    "score": 174
                },
                {
                    "body": "<p>Since all browsers behave differently, you'll need to test for values first, and then use the correct one. Here's a function that does this for you:</p>\n\n<pre><code>function getWidth() {\n  if (self.innerHeight) {\n    return self.innerWidth;\n  }\n\n  if (document.documentElement &amp;&amp; document.documentElement.clientHeight) {\n    return document.documentElement.clientWidth;\n  }\n\n  if (document.body) {\n    return document.body.clientWidth;\n  }\n}\n</code></pre>\n\n<p>and similarly for height:</p>\n\n<pre><code>function getHeight() {\n  if (self.innerHeight) {\n    return self.innerHeight;\n  }\n\n  if (document.documentElement &amp;&amp; document.documentElement.clientHeight) {\n    return document.documentElement.clientHeight;\n  }\n\n  if (document.body) {\n    return document.body.clientHeight;\n  }\n}\n</code></pre>\n\n<p>Call both of these in your scripts using <code>getWidth()</code> or <code>getHeight()</code>. If none of the browser's native properties are defined, it will return <code>undefined</code>.</p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p><strong>Here is a shorter version of the function presented above:</strong></p>\n\n<pre><code>function getWidth() {\n    if (self.innerWidth) {\n       return self.innerWidth;\n    }\n    else if (document.documentElement &amp;&amp; document.documentElement.clientHeight){\n        return document.documentElement.clientWidth;\n    }\n    else if (document.body) {\n        return document.body.clientWidth;\n    }\n    return 0;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>var w = window.innerWidth;\nvar h = window.innerHeight;\nvar ow = window.outerWidth; //including toolbars and status bar etc.\nvar oh = window.outerHeight;\n</code></pre>\n\n<p>Both return integers and don't require jQuery. Cross-browser compatible.</p>\n\n<p>I often find jQuery returns invalid values for width() and height()</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>From W3schools and its cross browser back to the dark ages of IE!</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n\n&lt;p id=\"demo\"&gt;&lt;/p&gt;\n\n&lt;script&gt;\nvar w = window.innerWidth\n|| document.documentElement.clientWidth\n|| document.body.clientWidth;\n\nvar h = window.innerHeight\n|| document.documentElement.clientHeight\n|| document.body.clientHeight;\n\nvar x = document.getElementById(\"demo\");\nx.innerHTML = \"Browser inner window width: \" + w + \", height: \" + h + \".\";\n\nalert(\"Browser inner window width: \" + w + \", height: \" + h + \".\");\n\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am trying to write a javascript function to get the current browser width.</p>\n\n<p>I found this one:</p>\n\n<pre><code>javascript:alert(document.body.offsetWidth);\n</code></pre>\n\n<p>But its problem that it fail if the body has width 100%</p>\n\n<p>There is any other better function or a work around?</p>\n",
            "last_activity_date": 1421220874,
            "question_id": 1038727,
            "score": 75,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "How to get browser width using javascript code?"
        },
        {
            "answer_count": 22,
            "answers": [
                {
                    "body": "<p>Try this: </p>\n\n<pre><code>var foo = [1, 2, 3, 4, 5];\n</code></pre>\n\n<p>Unfortunately, Javascript doesn't have a construct in place to do something like this: </p>\n\n<pre><code>var foo = [1..5]; \n</code></pre>\n\n<p>So, it looks like you'll have to use a for loop if you want to initialize an array up to a variable length.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>function range(start, end) {\n    var foo = [];\n    for (var i = start; i &lt;= end; i++) {\n        foo.push(i);\n    }\n    return foo;\n}\n</code></pre>\n\n<p>Then called by</p>\n\n<pre><code>var foo = range(1, 5);\n</code></pre>\n\n<p>There is no built-in way to do this in Javascript, but it's a perfectly valid utility function to create if you need to do it more than once.</p>\n\n<p>Edit: In my opinion, the following is a better range function. Maybe just because I'm biased by LINQ, but I think it's more useful in more cases. Your mileage may vary.</p>\n\n<pre><code>function range(start, count) {\n    if(arguments.length == 1) {\n        count = start;\n        start = 0;\n    }\n\n    var foo = [];\n    for (var i = 0; i &lt; count; i++) {\n        foo.push(start + i);\n    }\n    return foo;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>If I get what you are after, you want an array of numbers <code>1..n</code> that you can later loop through.</p>\n\n<p>If this is all you need, can you do this instead?</p>\n\n<pre><code>var foo = new Array(45);//create a 45 element array\n</code></pre>\n\n<p>then when you want to use it... (un-optimized, just for example)</p>\n\n<pre><code>for(var i=0;i&lt;foo.length;i++){\n  document.write('Item: ' + (i+1) + ' of ' + foo.length + '&lt;br/&gt;'); \n}\n</code></pre>\n\n<p>e.g. if you don't need to <strong>store</strong> anything in the array, you just need a container of the right length that you can iterate over... this might be easier.</p>\n\n<p>See it in action here: <a href=\"http://jsfiddle.net/3kcvm/\">http://jsfiddle.net/3kcvm/</a></p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>I know your answer is asking to populate an array numerically, but I'm uncertain why you'd want to do this?  Arrays are unnecessary for this.</p>\n\n<p><br />\nYou may just want to declare an array of a certain size:  </p>\n\n<pre><code>var foo = new Array(N);   // where N is a positive integer\n\n/* this will create an array with a number of elements, N; \n   each element will contain a default value of 'undefined' */\n</code></pre>\n\n<p><br />\nOtherwise, you'd want to create a function as others suggested, or use the loop construct as in your question.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just for fun, I wanted to build off of <strong><a href=\"http://stackoverflow.com/questions/3746725/create-a-javascript-array-containing-1-n/3746752#3746752\">Ian Henry's answer</a></strong>.</p>\n\n<p>Of course <code>var array = new Array(N);</code> will give you an array of size <code>N</code>, but the keys and values will be identical.... then to shorten the array to size <code>M</code>, use <code>array.length = M</code>.... but for some added functionality try:</p>\n\n<pre><code>function range()\n{\n    // This function takes optional arguments:\n    // start, end, increment\n    //    start may be larger or smaller than end\n    // Example:  range(null, null, 2);\n\n    var array = []; // Create empty array\n\n      // Get arguments or set default values:\n    var start = (arguments[0] ? arguments[0] : 0);\n    var end   = (arguments[1] ? arguments[1] : 9);\n      // If start == end return array of size 1\n    if (start == end) { array.push(start); return array; }\n    var inc   = (arguments[2] ? Math.abs(arguments[2]) : 1);\n\n    inc *= (start &gt; end ? -1 : 1); // Figure out which direction to increment.\n\n      // Loop ending condition depends on relative sizes of start and end\n    for (var i = start; (start &lt; end ? i &lt;= end : i &gt;= end) ; i += inc)\n        array.push(i);\n\n    return array;\n}\n\nvar foo = range(1, -100, 8.5)\n\nfor(var i=0;i&lt;foo.length;i++){\n  document.write(foo[i] + ' is item: ' + (i+1) + ' of ' + foo.length + '&lt;br/&gt;'); \n}\u200b\n</code></pre>\n\n<p>Output of the above:</p>\n\n<blockquote>\n  <p>1 is item: 1 of 12<br>\n  -7.5 is item: 2 of 12<br>\n  -16 is item: 3 of 12<br>\n  -24.5 is item: 4 of 12<br>\n  -33 is item: 5 of 12<br>\n  -41.5 is item: 6 of 12<br>\n  -50 is item: 7 of 12<br>\n  -58.5 is item: 8 of 12<br>\n  -67 is item: 9 of 12<br>\n  -75.5 is item: 10 of 12<br>\n  -84 is item: 11 of 12<br>\n  -92.5 is item: 12 of 12  </p>\n</blockquote>\n\n<h2><strong><a href=\"http://jsfiddle.net/BGHHV/\" rel=\"nofollow\">jsFiddle example</a></strong></h2>\n\n<p>This function makes use of the automatically generated <strong><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Functions_and_function_scope/arguments\" rel=\"nofollow\"><code>arguments</code></a></strong> array.</p>\n\n<p>The function creates an array filled with values beginning at <code>start</code> and ending at <code>end</code> with increments of size <code>increment</code>, where</p>\n\n<pre><code>range(start, end, increment);\n</code></pre>\n\n<p>Each value has a default and the sign of the increment doesn't matter, since the direction of incrementation depends on the relative sizes of start and end.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I was looking for a <em>functional</em> solution and I ended up with:</p>\n\n<pre><code>function numbers(min, max) {\n  return Array(max-min+2).join().split(',').map(function(e, i) { return min+i; });\n}\n\nconsole.log(numbers(1, 9));\n</code></pre>\n\n<p>Note: <code>join().split(',')</code> transforms the sparse array into a contiguous one.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you happen to be using <a href=\"http://d3js.org/\">d3.js</a> in your app as I am, D3 provides a helper function that does this for you.</p>\n\n<p>So to get an array from 0 to 4, it's as easy as:</p>\n\n<pre><code>d3.range(5)\n[0, 1, 2, 3, 4]\n</code></pre>\n\n<p>and to get an array from 1 to 5, as you were requesting:</p>\n\n<pre><code>d3.range(1, 5+1)\n[1, 2, 3, 4, 5]\n</code></pre>\n\n<p>Check out <a href=\"http://www.janwillemtulp.com/2011/03/31/tutorialthe-basics-working-with-arrays-in-d3/\">this tutorial</a> for more info.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>This is prolly the fastest way to generate an array of numbers</p>\n\n<p>shortest</p>\n\n<pre><code>var a=[],b=N;while(b--){a[b]=a+1};\n</code></pre>\n\n<p>inline</p>\n\n<pre><code>var arr=(function(a,b){while(a--){b[a]=a}return b})(10,[]);\n</code></pre>\n\n<p>arr=[0,1,2,3,4,5,6,7,8,9]</p>\n\n<p>if u want to start from 1</p>\n\n<pre><code>var arr=(function(a,b){while(a--){b[a]=a+1}return b})(10,[]);\n</code></pre>\n\n<p>arr=[1,2,3,4,5,6,7,8,9,10]</p>\n\n<p>want a function?</p>\n\n<p>a=length b=start c=is just a placeholder so u don't need to write var</p>\n\n<pre><code>var numberArray=function(a,b,c){c=[];while(a--){c[a]=a+b}return c};\n</code></pre>\n\n<p>var arr=numberArray(10,5);</p>\n\n<p>arr=[5,6,7,8,9,10,11,12,13,14]</p>\n\n<p>WHY?</p>\n\n<p>1.while -- is prolly the fastest loop;</p>\n\n<p>2.direct setting is faster than push;</p>\n\n<p>3.[] is also faster than new Array(10);</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The following function returns an array populated with numbers:</p>\n\n<pre><code>var createArrayOfNumbers = function (n) {\n    return Array.apply(null, new Array(n)).map(function (empty, index) {\n        return index;\n    });\n};\n</code></pre>\n\n<p>Note that an array created with the array constructor consists of holes, so it cannot be traversed with array functions like map. Hence using the <code>Array.apply</code> function.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can do so:</p>\n\n<pre><code>var N = 10; \nArray.apply(null, {length: N}).map(Number.call, Number)\n</code></pre>\n\n<blockquote>\n  <p>result:  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</p>\n</blockquote>\n\n<p>or with random values:</p>\n\n<pre><code>Array.apply(null, {length: N}).map(Function.call, Math.random)\n</code></pre>\n\n<blockquote>\n  <p>result: [0.7082694901619107, 0.9572225909214467, 0.8586748542729765,\n  0.8653848143294454, 0.008339877473190427, 0.9911756622605026, 0.8133423360995948, 0.8377588465809822, 0.5577575915958732, 0.16363654541783035]</p>\n</blockquote>\n\n<h3>Explanation</h3>\n\n<p>First, note that <code>Number.call(undefined, N)</code> is equivalent to <code>Number(N)</code>, which just returns <code>N</code>.  We'll use that fact later.</p>\n\n<p><code>Array.apply(null, [undefined, undefined, undefined])</code> is equivalent to <code>Array(undefined, undefined, undefined)</code>, which produces a three-element array and assigns <code>undefined</code> to each element.</p>\n\n<p>How can you generalize that to <em>N</em> elements?  Consider how <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array()</code></a> works, which goes something like this:</p>\n\n<pre><code>function Array() {\n    if ( arguments.length == 1 &amp;&amp;\n         'number' === typeof arguments[0] &amp;&amp;\n         arguments[0] &gt;= 0 &amp;&amp; arguments &amp;&amp;\n         arguments[0] &lt; 1 &lt;&lt; 32 ) {\n        return [ \u2026 ];  // array of length arguments[0], generated by native code\n    }\n    var a = [];\n    for (var i = 0; i &lt; arguments.length; i++) {\n        a.push(arguments[i]);\n    }\n    return a;\n}\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\">Since ECMAScript 5</a>, <code>Function.prototype.apply(thisArg, argsArray)</code> also accepts a duck-typed array-like object as its second parameter.  If we invoke <code>Array.apply(null, { length: N })</code>, then it will execute</p>\n\n<pre><code>function Array() {\n    var a = [];\n    for (var i = 0; i &lt; /* arguments.length = */ N; i++) {\n        a.push(/* arguments[i] = */ undefined);\n    }\n    return a;\n}\n</code></pre>\n\n<p>Now we have an <em>N</em>-element array, with each element set to <code>undefined</code>.  When we call <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>.map(callback, thisArg)</code></a> on it, each element will be set to the result of <code>callback.call(thisArg, element, index, array)</code>.  Therefore, <code>[undefined, undefined, \u2026, undefined].map(Number.call, Number)</code> would map each element to <code>(Number.call).call(Number, undefined, index, array)</code>, which is the same as <code>Number.call(undefined, index, array)</code>, which, as we observed earlier, evaluates to <code>index</code>.  That completes the array whose elements are the same as their index.</p>\n\n<p>Why go through the trouble of <code>Array.apply(null, {length: N})</code> instead of just <code>Array(N)</code>?  After all, both expressions would result an an <em>N</em>-element array of undefined elements.  The difference is that in the former expression, each element is explicitly <em>set</em> to undefined, whereas in the latter, each element was never set.  According to the documentation of <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>.map()</code></a>:</p>\n\n<blockquote>\n  <p><code>callback</code> is invoked only for indexes of the array which have assigned values; it is not invoked for indexes which have been deleted or which have never been assigned values.</p>\n</blockquote>\n\n<p>Therefore, <code>Array(N)</code> is insufficient; <code>Array(N).map(Number.call, Number)</code> would result in an uninitialized array of length <em>N</em>.</p>\n\n<h3>Compatibility</h3>\n\n<p>Since this technique relies on behaviour of <code>Function.prototype.apply()</code> specified in ECMAScript 5, it will <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply#Description\">not work</a> in pre-ECMAScript 5 browsers such as Chrome 14 and Internet Explorer 9.</p>\n",
                    "is_accepted": false,
                    "score": 123
                },
                {
                    "body": "<p>Improvising on the above:</p>\n\n<pre><code>var range = function (n) {\n  return Array(n).join().split(',').map(function(e, i) { return i; });\n}  \n</code></pre>\n\n<p>one can get the following options:</p>\n\n<p>1) Array.init to value v</p>\n\n<pre><code>var arrayInitTo = function (n,v) {\n  return Array(n).join().split(',').map(function() { return v; });\n}; \n</code></pre>\n\n<p>2) get a reversed range:</p>\n\n<pre><code>var rangeRev = function (n) {\n  return Array(n).join().split(',').map(function() { return n--; });\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is small function, it allow to use construction like\n[1, 2].range(3, 4) -> [1, 2, 3, 4] also it works with negative params. Enjoy.</p>\n\n<pre><code>Array.prototype.range = function(from, to)\n{\n   var range = (!to)? from : Math.abs(to - from) + 1, increase = from &lt; to;\n   var tmp = Array.apply(this, {\"length\": range}).map(function()\n      {\n         return (increase)?from++ : from--;\n      }, Number);\n\n   return this.concat(tmp);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Today I was having the same problem and I asked a friend how to do this because I wasn't really satisfied with the style of this solution, he described his solution on his blog.</p>\n\n<p><a href=\"http://jswizardry.wordpress.com/2014/02/06/creating-a-range/\" rel=\"nofollow\">http://jswizardry.wordpress.com/2014/02/06/creating-a-range/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use this:</p>\n\n<pre><code>new Array(/*any number which you want*/)\n    .join().split(',')\n    .map(function(item, index){ return ++index;})\n</code></pre>\n\n<p>for example</p>\n\n<pre><code>new Array(10)\n    .join().split(',')\n    .map(function(item, index){ return ++index;})\n</code></pre>\n\n<p>will create following array:</p>\n\n<pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>How about using <strong><a href=\"http://underscorejs.org/#times\" rel=\"nofollow\">Underscore.js's <code>times()</code> function</a></strong>?</p>\n\n<pre><code>var foo = [];\n_.times(N, function(i) {\n    foo.push(i + 1);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>to get array with n random numbers between min, max (not unique though)</p>\n\n<pre><code>function callItWhatYouWant(n, min, max) {\n    return Array.apply(null, {length: n}).map(Function.call, function(){return Math.floor(Math.random()*(max-min+1)+min)})\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use the very popular <strong><a href=\"http://underscorejs.org/#range\">Underscore _.range method</a></strong></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// _.range([start], stop, [step])\n\n_.range(10); // =&gt; [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n_.range(1, 11); // =&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n_.range(0, 30, 5); // =&gt; [0, 5, 10, 15, 20, 25]\n_.range(0, -10, -1); //  =&gt; [0, -1, -2, -3, -4, -5, -6, -7, -8, -9]\n_.range(0); // =&gt; []\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>For small ranges a slice is nice. N is only known at runtime, so:</p>\n\n<pre><code>[0, 1, 2, 3, 4, 5].slice(0, N+1)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>All of these are too complicated. Just do:</p>\n\n<pre><code>function count(num) {\n  var arr = [];\n  var i = 0;\n\n  while (num--) {\n    arr.push(i++);\n  }\n\n  return arr;\n}\n\nconsole.log(count(9))\n//=&gt; [ 0, 1, 2, 3, 4, 5, 6, 7, 8 ]\n</code></pre>\n\n<p>Or to do a range from <code>a</code> to <code>b</code></p>\n\n<pre><code>function range(a, b) {\n  var arr = [];\n\n  while (a &lt; b + 1) {\n    arr.push(a++);\n  }\n\n  return arr;\n}\n\nconsole.log(range(4, 9))\n//=&gt; [ 4, 5, 6, 7, 8, 9 ]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I didn't see any solution based on recursive functions (and never wrote recursive functions myself) so here is my try.</p>\n\n<p>Note that array.push(something) returns the new length of the array: </p>\n\n<pre><code>(a=[]).push(a.push(a.push(0))) //  a = [0, 1, 2]\n</code></pre>\n\n<p>And with a recursive function:</p>\n\n<pre><code>var a = (function f(s,e,a,n){return ((n?n:n=s)&gt;e)?a:f(s,e,a?a:a=[],a.push(n)+s)})(start,end) // e.g., start = 1, end = 5\n</code></pre>\n\n<p>EDIT : two other solutions</p>\n\n<pre><code>var a = Object.keys(new Int8Array(6)).map(Number).slice(1)\n</code></pre>\n\n<p>and</p>\n\n<pre><code>var a = []\nvar i=setInterval(function(){a.length===5?clearInterval(i):a.push(a.length+1)}) \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Using new Array methods and <code>=&gt;</code> function syntax from ES6 standard (only Firefox at the time of writing).</p>\n\n<p>By filling holes with <code>undefined</code>: </p>\n\n<pre><code>Array(N).fill().map((_, i) =&gt; i + 1);\n</code></pre>\n\n<p><code>Array.from</code> turns \"holes\" into <code>undefined</code> so <code>Array.map</code> works as expected:</p>\n\n<pre><code>Array.from(Array(5)).map((_, i) =&gt; i + 1)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A little bit simpler than the string variant:</p>\n\n<pre><code>// create range by N\nArray(N).join(0).split(0);\n\n// create a range starting with 0 as the value\nArray(7).join(0).split(0).map(Number.call, Number); // [0, 1, 2, 3, 4, 5, 6]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking for any alternatives to the below for creating a JavaScript array containing 1 through to N where N is only known at runtime.</p>\n\n<pre><code>var foo = [];\n\nfor (var i = 1; i &lt;= N; i++) {\n   foo.push(i);\n}\n</code></pre>\n\n<p>To me it feels like there should be a way of doing this without the loop.</p>\n\n<p>Cheers for any ideas.</p>\n",
            "last_activity_date": 1421887009,
            "question_id": 3746725,
            "score": 67,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "Create a JavaScript array containing 1...N"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Breaking out of <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach\">Array#forEach</a> is not possible. (You can inspect the source code that implements it in Firefox on the linked page, to confirm this.)</p>\n\n<p>Instead you should use a normal <code>for</code> loop:</p>\n\n<pre><code>function recurs(comment) {\n    for (var i = 0; i &lt; comment.comments.length; ++i) {\n        var subComment = comment.comments[i];\n        recurs(subComment);\n        if (...) {\n            break;\n        }\n    }\n}\n</code></pre>\n\n<p>(or, if you want to be a little more clever about it and <code>comment.comments[i]</code> is always an object:)</p>\n\n<pre><code>function recurs(comment) {\n    for (var i = 0, subComment; subComment = comment.comments[i]; ++i) {\n        recurs(subComment);\n        if (...) {\n            break;\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can't break from a forEach. I can think of three ways to fake it, though.</p>\n\n<p><strong>1. The Ugly Way</strong>: pass a second argument to forEach to use as context, and store a boolean in there, then use an <code>if</code>. This is awful, obviously.</p>\n\n<p><strong>2. The Bad Way</strong>: surround the whole thing in a <code>try-catch</code> block and throw an exception when you want to break.</p>\n\n<p><strong>3. The Fun Way</strong>: use <code>every()</code>.</p>\n\n<pre><code>['a', 'b', 'c'].every(function(element[, index, array]) {\n    // Do something.\n    if (you_want_to_break)\n        return false;\n    else return true;\n});\n</code></pre>\n\n<p>You can use <code>some()</code> instead, if you'd rather <code>return true</code> to break.</p>\n\n<p>Cheers!</p>\n",
                    "is_accepted": true,
                    "score": 163
                },
                {
                    "body": "<p>jQuery provides an <code>each()</code> method, not <code>forEach()</code>.  You can break out of <code>each</code> by returning <code>false</code>.  <code>forEach()</code> is part of the ECMA-262 standard, and the only way to break out of that that I'm aware of is by throwing an exception.</p>\n\n<pre><code>function recurs(comment) {\n  try {\n    comment.comments.forEach(function(elem) {\n      recurs(elem);\n      if (...) throw \"done\";\n    });\n  } catch (e) { if (e != \"done\") throw e; }\n}\n</code></pre>\n\n<p>Ugly, but does the job.</p>\n",
                    "is_accepted": false,
                    "score": -8
                },
                {
                    "body": "<p>As others have pointed out, you can't cancel a <code>forEach</code> loop, but here's my solution:</p>\n\n<pre><code>ary.forEach(function loop(){\n    if(loop.stop){ return; }\n\n    if(condition){ loop.stop = true; }\n});\n</code></pre>\n\n<p>Of course this doesn't actually break the loop, it just prevents code execution on all the elements following the \"break\"</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>In some cases <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/some\">Array.some</a> will probably fulfil the requirements.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Wy not use plain return? </p>\n\n<pre><code>function recurs(comment){\ncomment.comments.forEach(function(elem){\n    recurs(elem);\n    if(...) return;\n});\n</code></pre>\n\n<p>it will return from 'recurs' function. I use it like this. Althougth this will not break from  forEach but from whole function, in this simple example it might work </p>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>i'm playing with nodejs and mongoose \u2014 trying to find specific comment in deep comments nesting with recursive func and foreach within. Is there a way to stop nodejs forEach? As i understand every forEach iteration is a function and and i can't just do \"break\",only \"return\" but this won't stop foreach.</p>\n\n<pre><code>function recurs(comment){\n    comment.comments.forEach(function(elem){\n        recurs(elem);\n        //if(...) break;\n    });\n}\n</code></pre>\n",
            "last_activity_date": 1425953576,
            "question_id": 6260756,
            "score": 61,
            "tags": [
                "javascript",
                "ecmascript-5"
            ],
            "title": "how to stop Javascript forEach?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Make sure you're actually in IE 8 mode by using the preferred method, a standards doctype...</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n</code></pre>\n\n<p>...or the undesired method, the <code>X-UA-Compatible</code> meta tag/header...</p>\n\n<pre><code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=EDGE\" /&gt;\n</code></pre>\n\n<p>See <a href=\"http://msdn.microsoft.com/en-us/library/cc288325(v=VS.85).aspx\">Defining Document Compatibility</a> for more information.</p>\n",
                    "is_accepted": true,
                    "score": 88
                },
                {
                    "body": "<p>Other things that absence of doctype or wrong doctype, or some error with html syntax, will force IE to use document modes different from what you expect.</p>\n\n<p>I was using simple \"\" in a test document and the absence of TITLE tag as a child of HEAD tag made window.JSON become undefined.</p>\n\n<p>Remember always that it's better to test the resource against the version of browser. And, if your users can use IE's with emulation of document modes, it's better you have a piece of code  to provide the JSON.parse and JSON.stringify when natives are undefined.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>May happen despite <code>&lt;!DOCTYPE html&gt;</code> if the page encoding is <code>UTF-8</code> with <code>BOM</code> (byte order mark). Try saving the file as <code>UTF-8</code> without <code>BOM</code>, using a suitable text editor.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Using <a href=\"http://api.jquery.com/jquery.parsejson/\" rel=\"nofollow\">jQuery.parseJSON</a> solved this for me, in case you are already using JQuery.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>function parseJson(jsonString) {\n    if ($.browser.msie &amp;&amp; $.browser.version &lt; 8) {\n        return eval('(' + jsonString + ')');\n    }\n    else {\n        return JSON.parse(jsonString);\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Check jQuery version.\n<a href=\"http://blog.jquery.com/2013/04/18/jquery-2-0-released/\" rel=\"nofollow\">jQuery 2.0 drops support for IE 6, 7 and 8</a>. Use jQuery 1.x instead, which is still officially supported.\nyou can use this Code.</p>\n\n<pre><code>&lt;script src=\"http://code.jquery.com/jquery-1.9.0.js\"&gt;&lt;/script&gt;\n&lt;script src=\"http://code.jquery.com/jquery-migrate-1.2.1.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>read more about <a href=\"https://github.com/jquery/jquery-migrate/#readme\" rel=\"nofollow\">jquery migrate</a>.</p>\n\n<p>if not working check <a href=\"http://chapter31.com/2012/11/21/json-undefined-issues-on-ie8-and-ie9/\" rel=\"nofollow\">this article</a>.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>put following code in your js file ;</p>\n\n<pre><code>var JSON = JSON || {};\n\n// implement JSON.stringify serialization\nJSON.stringify = JSON.stringify || function (obj) {\n\nvar t = typeof (obj);\nif (t != \"object\" || obj === null) {\n\n    // simple data type\n    if (t == \"string\") obj = '\"'+obj+'\"';\n    return String(obj);\n\n}\nelse {\n\n    // recurse array or object\n    var n, v, json = [], arr = (obj &amp;&amp; obj.constructor == Array);\n\n    for (n in obj) {\n        v = obj[n]; t = typeof(v);\n\n        if (t == \"string\") v = '\"'+v+'\"';\n        else if (t == \"object\" &amp;&amp; v !== null) v = JSON.stringify(v);\n\n        json.push((arr ? \"\" : '\"' + n + '\":') + String(v));\n    }\n\n    return (arr ? \"[\" : \"{\") + String(json) + (arr ? \"]\" : \"}\");\n}\n};\n\n// implement JSON.parse de-serialization\nJSON.parse = JSON.parse || function (str) {\nif (str === \"\") str = '\"\"';\neval(\"var p=\" + str + \";\");\nreturn p;\n };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can add JSON object like this:</p>\n\n<pre><code>&lt;script&gt;if (typeof window.JSON === 'undefined') { document.write('&lt;script src=\"../scripts/uncompressed/json2.js\"&gt;&lt;\\/script&gt;'); }&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Currently I'm writing a JavaScript file and have the following line:</p>\n\n<pre><code>var res = \"JSON=\" + JSON.stringify(result);\n</code></pre>\n\n<p>result is being set just above this line. The issue I'm having is that IE8 (IE8 only, that is) is reporting to me that JSON is undefined somehow. I'm not sure what to make of this since, as I understood it, IE8 is a browser that implemented JSON support. Does anyone have any idea what might be going on?</p>\n",
            "last_activity_date": 1425336510,
            "question_id": 4715373,
            "score": 52,
            "tags": [
                "javascript",
                "html",
                "json",
                "internet-explorer-8"
            ],
            "title": "JSON object undefined in Internet Explorer 8"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Try Google'ing <code>pdf.js documentation</code></p>\n\n<pre><code>/* create the PDF document */\n\nvar doc = new pdf();\ndoc.text(20, 20, 'hello, I am PDF.');\ndoc.text(20, 30, 'i was created in the browser using javascript.');\ndoc.text(20, 40, 'i can also be created from node.js');\n\n/* Optional - set properties on the document */\ndoc.setProperties({\n  title: 'A sample document created by pdf.js',\n  subject: 'PDFs are kinda cool, i guess',        \n  author: 'Marak Squires',\n  keywords: 'pdf.js, javascript, Marak, Marak Squires',\n  creator: 'pdf.js'\n});\n\ndoc.addPage();\ndoc.setFontSize(22);\ndoc.text(20, 20, 'This is a title');\ndoc.setFontSize(16); \ndoc.text(20, 30, 'This is some normal sized text underneath.');\n\nvar fileName = \"testFile\"+new Date().getSeconds()+\".pdf\";\nvar pdfAsDataURI = doc.output('datauri', {\"fileName\":fileName});\n</code></pre>\n\n<p>Taken from: <a href=\"http://badassjs.com/post/708922912/pdf-js-create-pdfs-in-javascript\">http://badassjs.com/post/708922912/pdf-js-create-pdfs-in-javascript</a></p>\n\n<p><strong>NOTE:</strong> the \"pdf.js\" project mentioned here is <a href=\"https://github.com/Marak/pdf.js\">https://github.com/Marak/pdf.js</a>, and has been deprecated since this answer was posted. @Treffynnon's answer is about the still-active Mozilla project (<a href=\"https://github.com/mozilla/pdf.js\">https://github.com/mozilla/pdf.js</a>) that most searchers will be looking for.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>There is documentation available on their <a href=\"https://github.com/mozilla/pdf.js\">github readme</a>. They cite the <a href=\"https://github.com/mozilla/pdf.js/blob/master/examples/helloworld/hello.js\">following example code</a>:</p>\n\n<pre><code>/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n\n//\n// See README for overview\n//\n\n'use strict';\n\nPDFJS.getPdf('helloworld.pdf', function getPdfHelloWorld(data) {\n  //\n  // Instantiate PDFDoc with PDF data\n  //\n  var pdf = new PDFJS.PDFDoc(data);\n  var page = pdf.getPage(1);\n  var scale = 1.5;\n\n  //\n  // Prepare canvas using PDF page dimensions\n  //\n  var canvas = document.getElementById('the-canvas');\n  var context = canvas.getContext('2d');\n  canvas.height = page.height * scale;\n  canvas.width = page.width * scale;\n\n  //\n  // Render PDF page into canvas context\n  //\n  page.startRendering(context);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                }
            ],
            "body": "<p>I am considering using <a href=\"https://github.com/mozilla/pdf.js\">pdf.js</a> (an open source tool that allows embedding of a pdf in a webpage). There isn't any documentation on how to use it.</p>\n\n<p>I assume what I do is make an html page with the script referenced in the header, and then in the body, I put some sort of function call with an array of the file name and location. Can anyone help me out here?</p>\n",
            "last_activity_date": 1389054088,
            "question_id": 9328551,
            "score": 46,
            "tags": [
                "javascript",
                "pdf",
                "pdf-conversion",
                "pdf.js"
            ],
            "title": "How to Use pdf.js"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>It's hard to prove a negative, but my research suggests this is a bug in Mobile Safari, possibly at the level of WebKit.</p>\n\n<p>Note that focus() works, more or less\u2014though it can require more than one tap to succeed, and it's not necessary if you're trying to respond to a user tap on the field in question as the tap itself will give the field focus. Unfortunately, select() <em>is</em> simply non-functional in Mobile Safari.</p>\n\n<p>Your best bet may be a bug report to <a href=\"https://bugreport.apple.com/\">Apple</a> and/or <a href=\"http://webkit.org/quality/reporting.html\">WebKit</a>.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Something like the following is working for me for me on Webkit that comes with Android 2.2:</p>\n\n<pre><code>function trySelect(el) {\n    setTimeout(function() {\n        try {\n            el.select();\n        } catch (e) {\n        }\n    }, 0);\n}\n</code></pre>\n\n<p>See Chromium <a href=\"http://code.google.com/p/chromium/issues/detail?id=32865#c6\" rel=\"nofollow\">Issue 32865</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It looks like focus will work but only when directly called from a native event.  calling focus using something like SetTimeout does not appear call up the keyboard.  Control of the ios keyboard is very poor.  Its not a good situation.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you are using HTML5-compliant browsers, you can use <code>placeholder=\"xxx\"</code> in your <code>input</code> tag.\nThat should do the job.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>setSelectionRange(0, 9999);\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/Input.select\">https://developer.mozilla.org/en/DOM/Input.select</a></p>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>Sorry, in my earlier post, I didn't notice the Javascript implying that you wanted an answer in Javascript.</p>\n\n<p>To get what you want in <strong>UIWebView</strong> with <strong>javascript</strong>, I have managed to scrape together two important pieces of info to get it to work. Not sure about the mobile browser.</p>\n\n<ol>\n<li><p><code>element.setSelectionRange(0,9999);</code> does what we want</p></li>\n<li><p>mouseUp event is undoing the selection</p></li>\n</ol>\n\n<p>Thus (using Prototype):\n    <pre>\n    input.observe('focus', function() {\n      this.setSelectionRange(0, 9999);\n    });\n    input.observe('mouseup', function(event) {\n      event.stop();\n    });</pre></p>\n\n<p>does the trick.</p>\n\n<p>Matt</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Nothing in this thread worked for me, here's what works on my iPad:</p>\n\n<pre><code>// t is the input field\nsetTimeout(function() {\n    t.setSelectionRange(0, 9999);\n}, 1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p><a href=\"http://jsfiddle.net/5e548/4/\" rel=\"nofollow\">See this fiddle</a>: (enter some text in the input box and click 'select text')</p>\n\n<p>It is selecting text in an inputbox on my iPod (5th gen iOS6.0.1), opening the keyboard and also showing the Cut/Copy/Suggest... menu</p>\n\n<p>Using plain javascript. Did not try this with jQuery</p>\n\n<pre><code>document.getElementById(\"p1\").selectionStart = 0\ndocument.getElementById(\"p1\").selectionEnd = 999\n</code></pre>\n\n<p>Note that the number 999 is just a sample. You should set these numbers to the number of characters you want to select.</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<ul>\n<li>iPod5 - iOS6.0.1 - Working ok.</li>\n<li>iPad1 - iOS5.1.1 - Only text selected. Tap selection once to open Cut/Copy menu </li>\n<li>iPad2 - iOS4.3.3 - Only text selected. Tap selection once to open Cut/Copy menu</li>\n</ul>\n\n<p>For the last two, you might experiment by triggering a click event on the <code>input</code> element</p>\n\n<p><strong>UPDATE:</strong> (07-10-2013)</p>\n\n<ul>\n<li>iPod5 - iOS7.0.2 - Using the fiddle in the link: Can't see typed text in input box.\n                  Pressing select redirects me to facebook.com (??? wtf ???) \n                  no idea what's going on there.</li>\n</ul>\n\n<p><strong>UPDATE:</strong> (14-11-2013)</p>\n\n<ul>\n<li>iOS 7.0.3 :        Thanks to the comment from <a href=\"http://stackoverflow.com/users/429091/binki\">binki</a> update that the \n                  <code>.selectionStart</code> and <code>.selectionEnd</code> <strong>does</strong> work.</li>\n</ul>\n\n<p><strong>UPDATE:</strong> (15-01-2015)</p>\n\n<ul>\n<li>iOS 8.x.x :        Thanks to the comment from <a href=\"http://stackoverflow.com/users/429091/binki\">Michael Siebert</a>. Taken from the comment:\n                  I had to listen for both focus AND click events and then setTimeout/_.debounce\n                  to make it work in both cases: click the input or focus through tabbing</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>With iOS 7 on iPad the only way that I was able to make this work was to use actually <code>&lt;textarea&gt;&lt;/textarea&gt;</code> instead of <code>&lt;input&gt;</code> field. </p>\n\n<p>e.g.</p>\n\n<p><code>\n&lt;textarea onclick=\"this.setSelectionRange(0, 9999);\"&gt;My text will be selected when textarea is clicked.&lt;/textarea&gt;\n</code></p>\n\n<p>How to prevent user from changing text inside area was more difficult, since is you make textarea readonly the selection trick won't work anymore.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do you programmatically select the text of an input field on iOS devices, e.g. iPhone, iPad running mobile Safari?</p>\n\n<p>Normally it is sufficient to call the <code>.select()</code> function on the <code>&lt;input ... /&gt;</code> element, but this does not work on those devices.  The cursor is simply left at the end of the existing entry with no selection made.</p>\n",
            "last_activity_date": 1421331148,
            "question_id": 3272089,
            "score": 46,
            "tags": [
                "javascript",
                "iphone",
                "html",
                "safari",
                "ios"
            ],
            "title": "Programmatically selecting text in an input field on iOS devices (mobile Safari)"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You can use the canvas object directly to draw in 2D.  IE requires the excanvas library.</p>\n\n<p><a href=\"http://developer.mozilla.org/En/Drawing_Graphics_with_Canvas\">http://developer.mozilla.org/En/Drawing_Graphics_with_Canvas</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>John Resig's <a href=\"http://ejohn.org/blog/processingjs/\">Processing.js</a> is a nice framework for that.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Depending on how cross-browser you need to be and your goal of doing the output, you might look into the Canvas element and the related javascript.</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Canvas_(HTML_element\" rel=\"nofollow\">Canvas</a>)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try <a href=\"http://www.walterzorn.de/en/jsgraphics/jsgraphics_e.htm\" rel=\"nofollow\">http://www.walterzorn.de/en/jsgraphics/jsgraphics_e.htm</a>.  It's the best I've found (without resorting to SVG) and works in most browsers without add-ins.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"http://raphaeljs.com/\">Raphael</a> is pretty cool for that, and works across browsers since it uses VML (for MSIE) and SVG (for everything else).</p>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>Drawing text with the canvas tag is a big pain. Your options are to use regular divs absolutely positioned in the right places, or find/write a font layout engine (<a href=\"http://www.federated.com/~jim/canvastext/\" rel=\"nofollow\">example</a>), or wait for a new standard to be implemented that lets you draw text. SVG deals with this much better.</p>\n\n<p>In IE you have <a href=\"http://excanvas.sourceforge.net/\" rel=\"nofollow\">ExplorerCanvas</a> to simulate the canvas API with IE's own VML markup. However, native VML can do text on a path and such things much like SVG. I think theoretically if you want complex text handling you'd want SVG and VML like the Raphael library that Dan mentioned.</p>\n\n<p>You might also consider Flash for a moment before starting.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As mentioned above, canvas is the way you should go. IE doesn't support it natively, so you'll need to download <a href=\"http://excanvas.sourceforge.net/\" rel=\"nofollow\">ExCanvas</a> to ensure cross-browser compatibility. I'd recommend looking at <a href=\"http://ajaxian.com/by/topic/canvas\" rel=\"nofollow\">Ajaxian</a> for some projects that use the canvas tag.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Checkout the <a href=\"http://plugins.jquery.com/project/Draw\" rel=\"nofollow\">jQuery Drawing plugin</a>, and you can also look at the Mozilla <a href=\"http://developer.mozilla.org/En/Drawing_Graphics_with_Canvas\" rel=\"nofollow\">Canvas</a> reference and <a href=\"http://developer.mozilla.org/en/Canvas_tutorial\" rel=\"nofollow\">tutorial</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Also <a href=\"http://www.jgraph.com/mxgraph.html\" rel=\"nofollow\">mxGraph</a>. This doesn't use excanvas for IE. Excanvas is way slower than using VML, specifically, re-using the same VML nodes rather than deleting, adding DOM nodes for redrawing. This is often a overlooked point, but excanvas on IE performance is just awful.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Any suggestion for a JS interactive drawing library? Just need to draw lines, polygons, texts of different colors. IE/Firefox/Opera/Safari compatible.</p>\n",
            "last_activity_date": 1325694215,
            "question_id": 96486,
            "score": 39,
            "tags": [
                "javascript",
                "graphics"
            ],
            "title": "Javascript drawing library?"
        }
    ]
}
