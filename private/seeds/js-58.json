{
    "items": [
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>One way is:</p>\n\n<pre><code>var ChildView = ParentView.extend({\n   events: function(){\n      return _.extend({},ParentView.prototype.events,{\n          'click' : 'onclickChild'\n      });\n   }\n});\n</code></pre>\n\n<p>Another would be:</p>\n\n<pre><code>var ParentView = Backbone.View.extend({\n   originalEvents: {\n      'click': 'onclick'\n   },\n   //Override this event hash in\n   //a child view\n   additionalEvents: {\n   },\n   events : function() {\n      return _.extend({},this.originalEvents,this.additionalEvents);\n   }\n});\n\nvar ChildView = ParentView.extend({\n   additionalEvents: {\n      'click' : ' onclickChild'\n   }\n});\n</code></pre>\n\n<p>To check whether Events is function or object</p>\n\n<pre><code>var ChildView = ParentView.extend({\n   events: function(){\n      var parentEvents = ParentView.prototype.events;\n      if(_.isFunction(parentEvents)){\n          parentEvents = parentEvents();\n      }\n      return _.extend({},parentEvents,{\n          'click' : 'onclickChild'\n      });\n   }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 115
                },
                {
                    "body": "<p>The soldier.moth answer is a good one. Simplifying it further you could just do the following</p>\n\n<pre><code>var ChildView = ParentView.extend({\n   initialize: function(){\n       _.extend(this.events, ParentView.prototype.events);\n   }\n});\n</code></pre>\n\n<p>Then just define your events in either class in the typical way.</p>\n",
                    "is_accepted": false,
                    "score": 58
                },
                {
                    "body": "<p>You could also use the <code>defaults</code> method to avoid creating the empty object <code>{}</code>.</p>\n\n<pre><code>var ChildView = ParentView.extend({\n  events: function(){\n    return _.defaults({\n      'click' : 'onclickChild'\n    }, ParentView.prototype.events);\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Short version of @soldier.moth's last suggestion:</p>\n\n<pre><code>var ChildView = ParentView.extend({\n  events: function(){\n    return _.extend({}, _.result(ParentView.prototype, 'events') || {}, {\n      'click' : 'onclickChild'\n    });\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you use CoffeeScript and set a function to <code>events</code>, you can use <code>super</code>.</p>\n\n<pre><code>class ParentView extends Backbone.View\n  events: -&gt;\n    'foo' : 'doSomething'\n\nclass ChildView extends ParentView\n  events: -&gt;\n    _.extend {}, super,\n      'bar' : 'doOtherThing'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This CoffeeScript solution worked for me (and takes into account @soldier.moth's suggestion):</p>\n\n<pre><code>class ParentView extends Backbone.View\n  events: -&gt;\n    'foo' : 'doSomething'\n\nclass ChildView extends ParentView\n  events: -&gt;\n    _.extend({}, _.result(ParentView.prototype, 'events') || {},\n      'bar' : 'doOtherThing')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This would also work:</p>\n\n<pre><code>class ParentView extends Backbone.View\n  events: -&gt;\n    'foo' : 'doSomething'\n\nclass ChildView extends ParentView\n  events: -&gt;\n    _.extend({}, _.result(_super::, 'events') || {},\n      'bar' : 'doOtherThing')\n</code></pre>\n\n<p>Using straight <code>super</code> wasn't working for me, either was manually specifying the <code>ParentView</code> or inherited class. </p>\n\n<p>Access to the <code>_super</code> var which is available within any coffeescript <code>Class\u00a0\u2026\u00a0extends\u00a0\u2026</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>\nIf you are sure that the <code>ParentView</code> has the events defined as object and you don't need to define events dynamically in <code>ChildView</code> it is possible to simplify soldier.moth's answer further by getting rid of the function and using <code>_.extend</code> directly:</p>\n\n<pre><code>var ParentView = Backbone.View.extend({\n    events: {\n        'click': 'onclick'\n    }\n});\n\nvar ChildView = ParentView.extend({\n    events: _.extend({}, ParentView.prototype.events, {\n        'click' : 'onclickChild'\n    })\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Backbone's documentation states:</p>\n\n<blockquote>\n  <p>The events property may also be defined as a function that returns an events hash, to make it easier to programmatically define your events, as well as inherit them from parent views.</p>\n</blockquote>\n\n<p>How do you inherit a parent's view events and extend them?</p>\n\n<h2>Parent View</h2>\n\n<pre><code>var ParentView = Backbone.View.extend({\n   events: {\n      'click': 'onclick'\n   }\n});\n</code></pre>\n\n<h2>Child View</h2>\n\n<pre><code>var ChildView = ParentView.extend({\n   events: function(){\n      ????\n   }\n});\n</code></pre>\n",
            "last_activity_date": 1422638959,
            "question_id": 9403675,
            "score": 75,
            "tags": [
                "javascript",
                "backbone.js",
                "backbone-events"
            ],
            "title": "Backbone View: Inherit and extend events from parent"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I believe (though I am not certain, so please don't pounce on me) that this would ensure any prior statement from a different file is closed.  In the worst case, this would be an empty statement, but in the best case it could avoid trying to track down an error in this file when the unfinished statement actually came from above.</p>\n",
                    "is_accepted": false,
                    "score": 54
                },
                {
                    "body": "<p>I would say since scripts are often concatenated and minified/compressed/sent together there's a chance the last guy had something like:</p>\n\n<pre><code>return {\n   'var':'value'\n}\n</code></pre>\n\n<p>at the end of the last script without a <code>;</code> on the end.  If you have a <code>;</code> at the start on yours, it's safe, example:</p>\n\n<pre><code>return {\n   'var':'value'\n}\n;(function( $ ){ //Safe (still, screw you, last guy!)\n</code></pre>\n\n<hr>\n\n<pre><code>return {\n   'var':'value'\n}\n(function( $ ){ //Oh crap, closure open, kaboom!\n</code></pre>\n\n<hr>\n\n<pre><code>return {\n   'var':'value'\n};\n;(function( $ ){ //Extra ;, still safe, no harm\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 344
                },
                {
                    "body": "<p>Consider this example:</p>\n\n<pre><code>function a() {\n  /* this is my function a */\n}\na()\n(function() {\n  /* This is my closure */\n})()\n</code></pre>\n\n<p>What will happen is that it will be evaluated like this:</p>\n\n<pre><code>function a() {\n  /* this is my function a */\n}\na()(function() {})()\n</code></pre>\n\n<p>So what ever <code>a</code> is returning will be treated as a function an tried to be initialized. </p>\n\n<p>This is mostly to prevent errors when trying to concat multiply files into one file:</p>\n\n<p><strong>a.js</strong></p>\n\n<pre><code>function a() {\n  /* this is my function a */\n}\na()\n</code></pre>\n\n<p><strong>b.js</strong></p>\n\n<pre><code>(function() {\n  /* This is my closure */\n})()\n</code></pre>\n\n<p>If we concat these files together it will cause problems.</p>\n\n<p>So therefore remember to put your <code>;</code> in front of <code>(</code> and maybe also a few other places. Btw. <code>var a = 1;;;var b = 2;;;;;;;;;var c = a+b;</code> is perfectly valid JavaScript</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I have recently noticed that a lot of JavaScript files on the Web start with a <code>;</code> immediately following the comment section.</p>\n\n<p>For example, <a href=\"http://plugins.jquery.com/project/ScrollTo\">this jQuery plugin's</a> code starts with:</p>\n\n<pre><code>/**\n * jQuery.ScrollTo\n * Copyright (c) 2007-2008 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com\n * Dual licensed under MIT and GPL.\n * Date: 9/11/2008                                      \n .... skipping several lines for brevity...\n *\n * @desc Scroll on both axes, to different values\n * @example $('div').scrollTo( { top: 300, left:'+=200' }, { axis:'xy', offset:-20 } );\n */\n;(function( $ ){\n</code></pre>\n\n<p>Why does the file need to start with a <code>;</code>? I see this convention in server-side JavaScript files as well.</p>\n\n<p>What are the advantages and disadvantages of doing this?</p>\n",
            "last_activity_date": 1399668094,
            "question_id": 2481543,
            "score": 205,
            "tags": [
                "javascript",
                "jquery",
                "jquery-plugins",
                "serverside-javascript"
            ],
            "title": "Why does the JavaScript need to start with &quot;;&quot;?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>From what I understand of your request, this should work:</p>\n\n<pre><code>&lt;script&gt;\n//  var status  = document.getElementsByID(\"uniqueID\"); // this works too\nvar status  = document.getElementsByName(\"status\")[0];\nvar jsonArr = [];\n\nfor (var i = 0; i &lt; status.options.length; i++) {\n    jsonArr.push({\n        id: status.options[i].text,\n        optionValue: status.options[i].value\n    });\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 131
                },
                {
                    "body": "<pre><code>var sels = //Here is your array of SELECTs\nvar json = { };\n\nfor(var i = 0, l = sels.length; i &lt; l; i++) {\n  json[sels[i].id] = sels[i].value;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>If you want a single JavaScript object such as the following:</p>\n\n<pre><code>{ uniqueIDofSelect: \"uniqueID\", optionValue: \"2\" }\n</code></pre>\n\n<p>(where option 2, \"Absent\", is the current selection)\nthen the following code should produce it:</p>\n\n<pre><code>  var jsObj = null;\n  var status = document.getElementsByName(\"status\")[0];\n  for (i = 0, i &lt; status.options.length, ++i) {\n     if (options[i].selected ) {\n        jsObj = { uniqueIDofSelect: status.id, optionValue: options[i].value };\n        break;\n     }\n  }\n</code></pre>\n\n<p>If you want an array of all such objects (not just the selected one), use <a href=\"http://stackoverflow.com/questions/920930#921012\">michael's code</a> but swap out <code>status.options[i].text</code> for <code>status.id</code>.</p>\n\n<p>If you want a <em>string</em> that contains a JSON representation of the selected object, use this instead:</p>\n\n<pre><code>  var jsonStr = \"\";\n  var status = document.getElementsByName(\"status\")[0];\n  for (i = 0, i &lt; status.options.length, ++i) {\n     if (options[i].selected ) {\n        jsonStr = '{ '\n                  + '\"uniqueIDofSelect\" : '\n                  + '\"' + status.id + '\"'\n                  + \", \"\n                  + '\"optionValue\" : '\n                  + '\"'+ options[i].value + '\"'\n                  + ' }';\n        break;\n     }\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Your question is pretty hard to decode, but I'll try taking a stab at it.</p>\n\n<p>You say:</p>\n\n<blockquote>\n  <p>I want to create a json object having two fields\n  <strong><code>uniqueIDofSelect</code></strong> and <strong><code>optionValue</code></strong> in javascript.</p>\n</blockquote>\n\n<p>And then you say:</p>\n\n<blockquote>\n  <p>I need output like</p>\n\n<pre><code>[{\"selectID\":2,\"optionValue\":\"2\"},\n{\"selectID\":4,\"optionvalue\":\"1\"}]\n</code></pre>\n</blockquote>\n\n<p>Well, this example output doesn't have the field named <strong><code>uniqueIDofSelect</code></strong>, it only has <strong><code>optionValue</code></strong>.</p>\n\n<p>Anyway, you are asking for array of objects...</p>\n\n<p>Then in the comment to michaels answer you say:</p>\n\n<blockquote>\n  <p>It creates json object array. but I need only one json object.</p>\n</blockquote>\n\n<p>So you don't want an array of objects?</p>\n\n<p>What do you want then?</p>\n\n<p>Please make up your mind.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If I want to create JavaScript Object from string generated by for loop then I would JSON to Object approach. I would generate JSON string by iterating for loop and then use any popular JavaScript Framework to evaluate JSON to Object.</p>\n\n<p>I have used <a href=\"http://www.prototypejs.org/\" rel=\"nofollow\">Prototype JavaScript Framework</a>. I have two array with keys and values. I iterate through for loop and generate valid JSON string. I use <a href=\"http://www.prototypejs.org/api/string/evalJSON\" rel=\"nofollow\">evalJSON()</a> function to convert JSON string to JavaScript object.</p>\n\n<p>Here is example code. Tryout on your <a href=\"http://getfirebug.com/logging\" rel=\"nofollow\">FireBug Console</a></p>\n\n<pre><code>var key = [\"color\", \"size\", \"fabric\"];\nvar value = [\"Black\", \"XL\", \"Cotton\"];\n\nvar json = \"{ \";\nfor(var i = 0; i &lt; key.length; i++) {\n    (i + 1) == key.length ? json += \"\\\"\" + key[i] + \"\\\" : \\\"\" + value[i] + \"\\\"\" : json += \"\\\"\" + key[i] + \"\\\" : \\\"\" + value[i] + \"\\\",\";\n}\njson += \" }\";\nvar obj = json.evalJSON(true);\nconsole.log(obj);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can not do it effectively with a for loop, it's best to use a recursive function. Here is a snippet from the AlSpace framework (it uses it's internal functions to determine the type of the object received, but those are pretty self-explanatory):</p>\n\n<pre><code>AlSpace.JSON.encode=function(o){\n    if(AlSpace.isArray(o)){\n        var _r=[];\n        o.each(function(){_r.push(AlSpace.JSON.encode(this))});\n        return '['+_r.join(',')+']'\n    }else if(AlSpace.isDate(o)){\n        var year=o.getFullYear(),\n            month=o.getMonth()+1,\n            day=o.getDate();\n        if(month&lt;10)month='0'+month;\n        if(day&lt;10)day='0'+day;\n        return '\"'+year+'-'+month+'-'+day+'\"'\n    }else if((o===true)||(o===false)){\n        if(o)return 'true';\n        return 'false'\n    }else if(!isNaN(o))return o;\n    else if(AlSpace.isString(o)){\n        if((o.charAt(0)=='[')||(o.charAt(0)=='{')||(o=='null')||(o=='false')||(o=='true'))return o;\n        return '\"'+o+'\"'\n    }else if(AlSpace.isEmpty(o))return 'null';\n    else if(AlSpace.isObject(o)){\n        var _r=[];\n        for(i in o)if(o.hasOwnProperty(i))_r.push('\"'+i+'\":'+AlSpace.JSON.encode(o[i]));\n        return '{'+_r.join(',')+'}'\n    }\n    return ''\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have <strong>array</strong> of select tag.</p>\n\n<pre><code>&lt;select id='uniqueID' name=\"status\"&gt;\n      &lt;option value=\"1\"&gt;Present&lt;/option&gt;\n      &lt;option value=\"2\"&gt;Absent&lt;/option&gt;\n &lt;/select&gt;\n</code></pre>\n\n<p>and I want to create a json object having two fields 'uniqueIDofSelect and optionValue' in javascript.</p>\n\n<p>I use getElementsByName(\"status\") and I iterate on it.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>I need out put like</p>\n\n<pre><code>[{\"selectID\":2,\"OptionValue\":\"2\"},\n{\"selectID\":4,\"optionvalue\":\"1\"}]\n</code></pre>\n\n<p>and so on... </p>\n",
            "last_activity_date": 1398784182,
            "question_id": 920930,
            "score": 72,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "How to create json by javascript for loop?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>This should do the trick:</p>\n\n<pre><code>&lt;% if (typeof(date) !== \"undefined\") { %&gt;\n    &lt;span class=\"date\"&gt;&lt;%= date %&gt;&lt;/span&gt;\n&lt;% } %&gt;\n</code></pre>\n\n<p>Remember that in underscore.js templates <code>if</code> and <code>for</code> are just standard javascript syntax wrapped in <code>&lt;% %&gt;</code> tags.</p>\n",
                    "is_accepted": true,
                    "score": 263
                },
                {
                    "body": "<p>Depending on the situation and or your style, you might also wanna use <a href=\"http://documentcloud.github.com/underscore/#template\">print</a> inside your <code>&lt;%</code> <code>%&gt;</code> tags, as it allows for direct output. Like:</p>\n\n<pre><code>&lt;% if (typeof(id) != \"undefined\") {\n     print(id);\n}\nelse {\n    print('new Model');\n} %&gt;\n</code></pre>\n\n<p>And for the original snippet with some concatenation:</p>\n\n<pre><code>&lt;% if (typeof(date) != \"undefined\") {\n    print('&lt;span class=\"date\"&gt;' + date + '&lt;/span&gt;');\n} %&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>If you prefer shorter if else statement, you can use this shorthand:</p>\n\n<pre><code>&lt;%= typeof(id)!== 'undefined' ?  id : '' %&gt;\n</code></pre>\n\n<p>It means display the id if is valid and blank if it wasn't. </p>\n",
                    "is_accepted": false,
                    "score": 56
                },
                {
                    "body": "<p>Responding to blackdivine above (about how to stripe one's results), you may have already found your answer (if so, shame on you for not sharing!), but the easiest way of doing so is by using the modulus operator. say, for example, you're working in a for loop:</p>\n\n<pre><code>&lt;% for(i=0, l=myLongArray.length; i&lt;l; ++i) { %&gt;\n...\n&lt;% } %&gt;\n</code></pre>\n\n<p>Within that loop, simply check the value of your index (i, in my case):</p>\n\n<pre><code>&lt;% if(i%2) { %&gt;class=\"odd\"&lt;% } else { %&gt;class=\"even\" &lt;% }%&gt;\n</code></pre>\n\n<p>Doing this will check the remainder of my index divided by two (toggling between 1 and 0 for each index row).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is a simple if/else check in underscore.js, if you need to include a null check.</p>\n\n<pre><code>&lt;div class=\"editor-label\"&gt;\n    &lt;label&gt;First Name : &lt;/label&gt;\n&lt;/div&gt;\n&lt;div class=\"editor-field\"&gt;\n    &lt;% if(FirstName == null) { %&gt;\n        &lt;input type=\"text\" id=\"txtFirstName\" value=\"\" /&gt;\n    &lt;% } else { %&gt;\n        &lt;input type=\"text\" id=\"txtFirstName\" value=\"&lt;%=FirstName%&gt;\" /&gt;\n    &lt;% } %&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can try <a href=\"http://underscorejs.org/#isUndefined\" rel=\"nofollow\">_.isUndefined</a></p>\n\n<pre><code>&lt;% if (!_.isUndefined(date)) { %&gt;&lt;span class=\"date\"&gt;&lt;%= date %&gt;&lt;/span&gt;&lt;% } %&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm using the underscore.js templating function and have done a template like this: </p>\n\n<pre><code>&lt;script type=\"text/template\" id=\"gridItem\"&gt;\n    &lt;div class=\"griditem &lt;%= gridType %&gt; &lt;%= gridSize %&gt;\"&gt;\n        &lt;img src=\"&lt;%= image %&gt;\" /&gt;\n        &lt;div class=\"content\"&gt;\n            &lt;span class=\"subheading\"&gt;&lt;%= categoryName %&gt;&lt;/span&gt;\n            &lt;% if (date) { %&gt;&lt;span class=\"date\"&gt;&lt;%= date %&gt;&lt;/span&gt;&lt;% }  %&gt;\n            &lt;h2&gt;&lt;%= title %&gt;&lt;/h2&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>As you can see I have an if statement in there because all of my models won't have the date parameter. However this way of doing it gives me an error <code>date is not defined</code>. So, how can I do if statements within a template?</p>\n",
            "last_activity_date": 1422561513,
            "question_id": 7230470,
            "score": 144,
            "tags": [
                "javascript",
                "templates",
                "backbone.js",
                "underscore.js"
            ],
            "title": "How to use if statements in underscore.js templates?"
        },
        {
            "answer_count": 30,
            "answers": [
                {
                    "body": "<p>Some mobile browsers do not support Javascript and relying on Javascript might render them unsupported.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" rel=\"nofollow\">Cross-site scripting</a> is a major concern.  Also, just because you have not found out that anything bad has happened is not a reliable indicator that it hasn't.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Javascript is not good or bad, in the same way that a hammer is not good or bad. It's what you do with it that is good or bad. Many of the sites that use Javascript, use it where it is not actually necessary.</p>\n\n<p>Some reasons why Javascript should not be overused:</p>\n\n<ul>\n<li>search engines don't pick up script-generated content</li>\n<li>creating a nontrivial script that works in all browsers can be tricky</li>\n<li>many basic things can be achieved using CSS instead, which degrades more gracefully</li>\n<li>XSS (as recursive mentioned) can make bad things happen to your visitors if you screw up (although scripts might still be injected even if your site is Javascript-free, of course)</li>\n<li>you might think that every browser nowadays supports Javascript, but with more and more people using script-blocker extensions like NoScript for Firefox, this does not have to be true</li>\n</ul>\n\n<p>Bottom line: Javascript should be used to enhance the website, but so far as humanly possible, the site should still work without it.</p>\n",
                    "is_accepted": false,
                    "score": 117
                },
                {
                    "body": "<p>My feelings about JavaScript can be read at my <a href=\"http://stackoverflow.com/questions/337570/is-it-worth-it-to-code-different-functionality-for-users-with-javascript-disabl#338276\">answer to another question</a>.  I'm definitely pro-JavaScript.  However, after reading through the forum thread you linked to I have two thoughts.</p>\n\n<ol>\n<li>Some users will refuse to use JavaScript, as you have seen from other answers to this question.  There is no way to change this fact.  You have to decide if you are willing to lose those users.  If you aren't, then you must provide an alternative method.</li>\n<li>My suggestion to you for your particular problem is to use your spam prevention JavaScript for users who have it enabled.  For users who do not, implement a CAPTCHA solution.  This gives the majority of your users the better experience, while providing the small minority the opportunity to use your site with slightly more inconvenience. </li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>We are worried that by visiting an evil site, it will attack our internal network, make a request to another site that I am logged into, or perhaps things like the myspace worm.</p>\n\n<ul>\n<li><a href=\"http://www.betanews.com/article/Symantec_Change_Your_Router_Password/1171644147\">http://www.betanews.com/article/Symantec_Change_Your_Router_Password/1171644147</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Cross-site_request_forgery\">http://en.wikipedia.org/wiki/Cross-site_request_forgery</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Samy_(XSS)\">http://en.wikipedia.org/wiki/Samy_(XSS)</a></li>\n</ul>\n\n<p>I choose to use the firefox plugin noscript.  This allows me to whitelist sites I trust.</p>\n\n<p>Of course we also get annoyed at stupid things web developers try to do with javascript like break the back button, prevent me from saving images, popups, etc.  Disabling javascript makes the web a far less annoying place.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The browsers used by blind/disabled people have limited or no javascript support. </p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>My 2c (and why I disable every Javascript feature I can in Firefox aside from basic Javascript):</p>\n\n<p>Client-side scripting is typically associated with annoying client-side behavior. From popup windows, to window move/resize, to status bar overwrite, to blinking images, to browser-specific interfaces: virtually everything annoying in the early days of the web was enabled by Javascript. Now, of course, there are many other ways to annoy, and a similar number of blocking addons, but Javascript is the grand-daddy of web pain and frustration.</p>\n\n<p>I'd guess that (aside from security issues and legitimate complaints), that's the primary reason for residual Javascript hate.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I'm pro-Javascript. People that disable it have only themselves to blame. I haven't read a single reason in this thread yet that would justify doing so.</p>\n\n<p>However search-engine optimization and acessibility are serious concerns for some websites, so that is a reason to cut back on the JS goodness.</p>\n\n<p>That said, I too first check if a particular effect can be achieved with pure HTML/CSS, and only then resort to JS if nothing else works (or I need a very complex behaviour).</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Just make sure that a webpage's <strong>basic functions</strong> work for everybody. There are valid reasons that webpages should be <strong>usable without JavaScript</strong>: Accessibility (a.k.a. for users that have to access webpages via non-standard browsers), machine readability (a.k.a. search engines, ...), even some nasty ads can go away if you disable Javascript. And yes, a page could request some stuff from somewhere else without you noticing, but it could also do that with a simple iframe or an img...</p>\n\n<p>However that does <strong>not</strong> necessarily mean, that <strong>all functionality needs to be available</strong>. If it protects you, require JS for comments (as long as you can live with some people not being able to leave comments). That's a business consideration you've got to make. Noone can expect you to leave out <strong>your security</strong> just to allow them to be paranoid.</p>\n\n<p>It's your webpage after all.</p>\n\n<p><hr /></p>\n\n<p>BTW: Yes, I'm very aware that this is a very controversal view, especially because it has \"religion\" involved.</p>\n\n<p>Being on the \"ripped off\" side of the medallion for some time might have affected my point of view a bit, so I'm very much into protecting myself (as the person running a website) BEFORE protecting others. Obviously that does not give an excuse to allow the users to be attacked (i.e. you've got to do everything possible to avoid XSS, XRS, ...), but if you can help yourself (and - in fact - your users, because nobody wants an endless list of spam comments) by adding javascript to your comment mechanism: <em>do it</em>!</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Doing government websites and others there is a requirement for accessibility.  These specifications are quite rigid, and require the site to work without javascript.  That doesn't mean you can't use javascript, but just that the site needs to degrade well and still work without the javascript.  This is a lot of extra work, so some just say don't bother and go with the least common denominator.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Javascript is a major attack vector for drive-by downloads.</p>\n\n<p>Many browser vulnerabilites can only be attacked through javaScript, and about half the security alerts issued about browsers read \"while we're working on a patch to this vulnerability, you can protect yourself against it by disabling scripting\".</p>\n\n<p>On what machines do you think those spam bots are running? Nowadays, most of them fell victim to a drive-by download on some website that used Javascript to attack a browser vulnerability, and in many cases the malicious code got into that website through an XSS attack. A <a href=\"http://news.bbc.co.uk/2/hi/technology/6645895.stm\">study</a> conducted by Google last year found <strong>10%</strong> of all websites they surveyed to contain such attacks!</p>\n\n<p>So yes, Javascript (Flash too, btw) is very much the problem, not the solution, and it's becoming a bigger and bigger problem. Eventually it will be too big to tolerate; you better be prepared to find a way to make your website work without Javascript when every single Joe User out there has (or closely knows someone who has) had their ebay acount, paypal account or even bank account broken into, and is told they could have avoided it by deactivating  Javascript in their browser.</p>\n\n<p>Of course, this is a worst-case scenario, and maybe browser developers will manage to get their act together, or some sort of sandboxing technology for Javascript engines (or the browsers themselves) becomes prevalent, though that would still do nothing to counter XSS.</p>\n\n<p>But saying that Javascript is not a problem right now betrays appaling ignorance in someone who develops web apps professionally.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<blockquote>\n  <p>Is there something wrong with Javascript that I'm not aware of?</p>\n</blockquote>\n\n<p>Javascript annoys me when it is <em>required</em> for the site to function, especially for things that should not depend on it (like opening a link). Basically your site should work perfectly with Javascript disabled - the Javascript should just make it nicer to use.</p>\n\n<p>Say I have javascript disabled (for whatever reason - security, paranoia, CPU usage, ad-blocking etc), I should still be view that picture, albeit not with a fancy Lightbox effect, or submit a form, again albeit without dynamic in-line error reporting)</p>\n\n<p>There's nothing \"wrong\" with Javascript, it just shouldn't be obnoxious, or mandatory.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Where I work we place quite a lot of emphasis on website accessibility. Unfortunately, this means that excessive JavaScript use is hard to justify.</p>\n\n<p>Every piece of JavaScript we use requires back up functionality to be in place for people who don't have JavaScript support (for example people who rely on using screen readers for browsing web sites).</p>\n\n<p>I love JavaScript and the power it gives you on the client side but in the end we build sites that we want as many people as possible to be able to access and this therefore means that JavaScript use is limited. </p>\n\n<p>Sometimes it's just easier and quicker to build the functionality without using JS rather than doing the same thing twice.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As this website needs javascript (at least if you want to access all features), you will only have a few users here, that are skeptical against Javascript. But it is true, that Javascript is the main vector for installing malware on end-user-computers. Many sites are infested, and the maintainer of the site don't even notice, because the site works as expected, but additionally is malware installed secretly. Besides that Javascript is often used for annoying stuff. Some appliances doesn't support Javascript or don't support it well. Javascript also can make a website problematic for blind users. So a mentionable amount of users can be scared away from your website by making Javascript necessary. Optional Javascripts don't prevent these users.</p>\n\n<p>A good website-example is the Wikipedia. It uses some Javascript, but works perfectly without it.</p>\n\n<p><strong>EDIT:</strong> Twitter shows clearly the <a href=\"http://www.pcworld.com/article/162992/twitter_worm_attack_continues_heres_how_to_keep_safe.html\" rel=\"nofollow\">security-problem with Javascript</a>. Some may argue, that is a problem with wrong code at Twitter, but if even such a big website cannot keep XSS out, how is it with local and small websites? It's not uncommon, that hacked websites execute silently malicious Javascript. Turning Javascript off is at the moment the best solution to that problem.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>The claim that it is a security risk\n  seems bogus to me. I've had Javascript\n  on in my browser for as long as I\n  remember, and not once have I found\n  out that anything malicious has\n  happened.</p>\n</blockquote>\n\n<p>I'm sorry but this is a pretty lame excuse. Because you got lucky, you didn't visit so much dodgy websites or you kept  your windows update all the time it doesn't mean others will do that as well. And there is still 0day attack window (time between the exploit and patch release) which is all about being a target and luck. </p>\n\n<p><strong>Defence in depth</strong> is crucial, <strong>95% of the browser client-side attacks uses Javascript to deliver the exploits.</strong> Therefore disabling javascript is a really smart idea.</p>\n\n<p>Secondly <strong>usability and accessibility</strong> issues. Javascript is a big problem.</p>\n\n<p>Finally <strong>CSRF is nothing to do with Javascript</strong> in most of the CSRF attacks you don't even need <strong>Javascript</strong>. (you only need it if it's a POST request, and even in that case you just need to make a huge CSS and submit the hidden form in any click to the page. so still you can do it without javascript)</p>\n\n<p><strong>XSS</strong> is client protection and not the website. If your website is free from <strong>Javascript</strong>, you can still be vulnerable to XSS. <strong>Not using Javascript as a developer is not going save you against XSS</strong>. But as a visitor of the website disabling javascript can protect you against XSS.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>\"To Javascript or not\" has valid, compelling reasons on both sides of the argument, which is the definition of a \"religious argument\".</p>\n\n<p>I prefer to develop websites with Javascript not because it makes it easier (it definitely doesn't!) but to meet the requirements of the people I am delivering to, that the application be all whizzy and modern. However, building in <a href=\"http://www.access-board.gov/508.htm\" rel=\"nofollow\">Section 508 compliance</a> will probably come as a shock to the project sponsors.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This backlash against Javascript, which is a lot more common than you'd think, makes me wonder how the notion that \"client apps are dead and Web apps are the future.\" You hear this all the time. I don't really understand how both of those notions can be so prevalent. I'm not talking about social bookmarking web sites, but actual applications.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As far as I'm concerned, as long as you follow the practice of <a href=\"http://en.wikipedia.org/wiki/Progressive_enhancement\" rel=\"nofollow\">Progressive Enhancement</a>, you can use as much javascript as you feel is necessary to create your web application. </p>\n\n<p>The users who run into your site with JavaScript disabled or not supported will still have full functionality. The rest of your users will see your animations, AJAX calls (and thus less postbacks or redirects), and other dynamic features.</p>\n\n<p>It requires more work, but it really is the best solution. Remember that there are limited cell phone browsers, old computers with old browsers, alternative browsing methods (screen readers, crawlers/indexers), and people who purposefully turn JavaScript off. It may not even be the majority of your users, but it can very useful to cater to them.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I use NoScript in Firefox, and by default no Javascript will work.  I allow scripts on a case-by-case basis.</p>\n\n<p>Therefore, if you want me to let you execute Javascript at my browser, you need to give me some reason to do so.  Some reason that I can see without turning it on, because I don't turn scripting on without a reason.</p>\n\n<p>This doesn't mean I expect full functionality without JS.  This means I have to have enough functionality to see what I'll be getting by turning it on, and enough to give me some sort of feeling of trust.  This isn't necessarily ideal from a security standpoint, but it's what I'm comfortable with.</p>\n\n<p>There's also my feeling that people who demand Javascript for even partial functionality are likely to put style way over substance, so there likely isn't anything I really want there anyway.  </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>My feeling is that turning Javascript off in your browser is like taking all the lightbulbs out of your house in case you get electrocuted, but then complaining that it's dark at night time.</p>\n\n<p>I'm not going to put objects in front of you to trip over in the dark, but don't expect me to go buying flashlights for you.</p>\n",
                    "is_accepted": false,
                    "score": 94
                },
                {
                    "body": "<p>My take on the whole issue is as long as you're coding your Javascript to add to the users experience in a positive way, you're using Javascript correctly. The reason many disable it is because there are many terrible developers and companies out there that abuse Javascript for advertising, spam, harassment, and other nefarious ends.</p>\n\n<p>Javascript brings a whole new experience to uses via Ajax, and several other frameworks/applications and shouldn't be ignored completely. There are compatibility issues galore but so does CSS and standard HTML, but we still use those day in day out.</p>\n\n<p>I agree with an above post, \"Javascript is not good or bad, in the same way that a hammer is not good or bad. It's what you do with it that is good or bad.\". And the same could be said for any programming language.</p>\n\n<p>And for those turning off Javascript entirely, you're missing out on a world of convenience and neat tricks that have helped push the web into the so called 2.0 and 3.0 web experiences. </p>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>Javascript can certainly be used to make a site more accessible.  Look at <a href=\"http://www.google.com/search?q=rattlesnake&amp;esrch=BetaShortcuts\" rel=\"nofollow\">Google's Keyboard Shortcuts Beta</a></p>\n\n<p>If you visit this site without javascript, you'll see that it acts no differently from a typical google search.  Visit it again with javascript enabled, and you'll find that the \"j\" and \"k\" keys will move to the next and previous search results (respectively), and navigate to the selected item upon pressing the enter key.</p>\n\n<p>It is the responsibility of the developers to consider accessibility (such as alt text, etc.).  A common problem is that some developers rarely make it a priority.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I found the following comment at: <a href=\"http://www.exaflop.org/pivot/entry.php?id=115\" rel=\"nofollow\">http://www.exaflop.org/pivot/entry.php?id=115</a></p>\n\n<blockquote>\n  <p>I believe 2 [requiring javascript] isn't a major issue in that you can put a message on your comment form to the effect that if you are unable to use the form, please send an email and you'll add the comment for them. Maybe that will put some people off, but it shouldn't ... Besides, many people are now using conventional Javascript browsers with screen reader software instead of the old text mode browsers like Lynx, so this problem should diminish for disabled users. As for the tin-foil-hat-wearers that disable javascript in their browsers out of paranoia, they can stay silent for all I care :). </p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think a lot of <em>users</em> dislike javascript because it is yet one more thing that takes control of usage out of the user's control.</p>\n\n<p>Besides the security concerns, javascript is very, very easy to do badly. Novice interface designers can cram tons of useless gimmicks into a webpage and set off a cascade of side effects that the user cannot control. </p>\n\n<p>My personal pet peeve is the \"Are you sure you want to leave our wonderful site?\" popups that show up apparently at random. </p>\n\n<p>No code should be configured in such a way to wrest control from the user. Every interface should have simply one user-action to one result correspondence. A button shouldn't have  result A on Monday and result B on Tuesday. (Or worse, the button behaves differently depending on many times you have hit it previously!) </p>\n\n<p>Javascript can be a joy on the site of a responsible and competent developer but if even just 5% of sites use javascript incompetently, abusively and even criminally, a lot of <em>users</em> will decide the benefits just aren't worth the hassle.   </p>\n\n<p>Your site might have a lot of nifty javascript features but if the next site I navigate to uses javascript to insert a trojan, the benefits that your javascript provides won't offset the damage caused by the next guy. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm not surprised that there is a vocal anti-javascript bloc among developers. Its a language with a checkered past. The flexibility of the language backfired, resulting in a web that sometimes feels like a stinking pile of badly written javascript hacks.</p>\n\n<p>But I have a feeling that a lot of the anti-js sentiment comes from the time when js as what you used to make your cute flying mailbox animated gif open your guestbook in a new window, or what generates the storm of pop-unders when you try to leave a porn site <em>(don't pretend that isn't what annoys you about js! You know I'm right!)</em>.</p>\n\n<p>Javascript is evolving. In the last couple years it has been embraced as a first class language, suitable for serious application development. You can decide to use NoScripts or the like, and only turn it on case-by-case, but you're going to find yourself turning it on more and more often.</p>\n\n<p>Other answers have mentioned the accessibility issues, and of course the security issues, and others still have talked about solutions to those issues that don't include \"ditch js\" (how do you impliment keyboard shortcuts without js??). I welcome high expectations, but you can't bitch and moan without also talking about solutions.</p>\n\n<p>Javascript is not the problem. As a designer I build sites with accessibility, security and compatibility in mind. I do so assuming js will be turned on. I contend that this is a reasonable design assumption. Things should degrade gracefully of course, but opinionated developers who turn off js to make a point are not users I design for.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>interesting discussion!</p>\n\n<p>With jQuery now there's no argument left for cross browser problems. These have gone away.\nI appreciate the concerns about bling people and am not qualified to comment on the current situation here.\nThere is also the mobile issue.</p>\n\n<p>In my experience there's never enough budget to build two or three versions of a site and some functionality you just can't do without js. Ajax and jQuery are just a joy.</p>\n\n<p>I would suggest that the users who want to control js use FF with no-script. They can then turn it off/on as they wish. But I would suggest they stop visiting sites that cause them problems. I suspect these people are spending a lot of time on very trashy sites if they are annoyed by ads and pop-ups.  If I come across a site like that I leave immeditiately. There is never a site I've visited that's annoying that I can't do without.</p>\n\n<p>If the developers have to compromise the users have to grow up.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>obviously, a large percentage of the web requires cookies and js (heard of facebook?)... I'm kinda shocked by those who choose not to use cookies or js as it obviously creates an issue where the client is making a poor user experiec</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Although this question is old, it's just popped up and I feel I'm in a position to give people here a different perspective.</p>\n\n<p>The main argument I've seen in the past from developers is that JavaScript can isolate people who need to use screen readers.  I am visually-impaired and I have been that way since I was 3 months old.  I've only ever had to use a screen reader whilst waiting for my eyes to heal after operations have been carried out. </p>\n\n<p>The last operations were in 2005 and 2006 and I actually used a different screen reader each time.  They are <em>far better</em> than what they used to be, believe me.  The support is much better in general than what it was years ago.  So to help back that up a bit, <a href=\"http://webaim.org/projects/screenreadersurvey3/\" rel=\"nofollow\">here is WebAIM's screen reader survey for 2011</a> with the most important parts paraphrased and quoted below:</p>\n\n<blockquote>\n  <p>** Percentage of users whose screen readers were detected with JavaScript: 98.4%</p>\n  \n  <p>10.4% of respondents to the October 2009 survey indicated that they have JavaScript disabled in their web browser. As respondents submitted responses to this survey we detected the presence of JavaScript. We found that very few respondents had it disabled or unavailable in their web browser. Of the 19 respondents with JavaScript disabled, 12 were using Firefox (presumably with the NoScript add-on enabled) and 5 were using Lynx with Linux.</p>\n</blockquote>\n\n<p>** Note: Only 1245 \"valid responses\" were received for this survey.</p>\n\n<p>On top of this, the Royal National Institute for the Blind (RNIB) <a href=\"http://www.rnib.org.uk/\" rel=\"nofollow\">website</a> makes heavy use of JavaScript.  The RNIB is the primary organisation in the UK which supports those with visual disabilities.</p>\n\n<h2>Something more important</h2>\n\n<p>That said, what I believe to be <em>far more important</em> for allowing equality for the disabled on the web, is for people to actively incorporate accessibility standards into their work.  If you take nothing else from my answer, please do something in your workplace to improve the accessibility support for those who want to use the Internet in the same way that you and I can.  You can find details of the Web Accessibility Initiative (WAI) <a href=\"http://www.w3.org/WAI/\" rel=\"nofollow\">here</a> and the current Web Content Accessibility Guidelines (WCAG) <a href=\"http://www.w3.org/TR/WCAG20/\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Thanks for being willing to even discuss this issue. </p>\n\n<p>I'm not dogmatic about the javascript thing, but I have a strong preference against it. I don't like the tracking  because I don't want to facilitate the onslaught of personal surveillance. But mostly it's because javascript usually serves the whims of web designers, not users, and especially not users like me. </p>\n\n<p>What you think is cool might not help me use your page. People have been producing unreadable, unusable websites since the dawn of web development. You can use flash and javascript to support a bad design just as you could use blinking html.</p>\n\n<p>The main reason I dislike javascript-delivered website design is all the movement and delays on my page. I need the page to stay stable so I can work with it. Elements that pop up and move around or resize as I move my mouse around the page are really distracting.(I can hardly abide floating divs!) This makes it tough for me to concentrate as I use the page. Plus it delays scrolling and page loading, and makes it hard to view or use pages on mobile browsers.</p>\n\n<p>The recent changes in the google groups interface, for instance, are really horrific for me. I will use the basic html interface for gmail forever if I can. I use mobile facebook.</p>\n\n<p>Your comment about handicapped people needing to more or less \"get over it\" also stung a bit. So many people with disabilities depend on web services as a lifeline. If you were designing bricks and mortar you'd have to take the needs of people with disabilities into account. Same here. You really do provide a service, so why not provide a model service?</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>you all miss one important thing.  With client-side scripting, MY BROWSER is where all the stuff is executed.  And if I allow this to happen, I thereby give YOU, the damn site developer, nearly full control over my browser.  I can even agree with some people here who says JavaScript as such (as a programming language) is not bad, the bad thing is the idea of client-side scripting.</p>\n\n<p>JavaScript being executed within the client's browser is malicious and dangerous by design. Many people continue to say that -- well -- JS virtual machines are buggy, yes, and security holes are found, one by one, in these machines, but the problem is not with the client side scripting, only with implementations of these virtual machines, and one day we implement a secure JS VM, and everything will be fine.  That's LIE.  Just one thing: the CPU time needed to render a page.  Without Turing-complete code on the page, the time is just a (almost linear) function of the HTML length.  But once we get the Turing-complete code and allow it to execute, the rendering time is not only no longer a function of anything, it is UNPREDICTABLE (hell, mathematically proven to be unpredictable).</p>\n\n<p>These web developers who use JS (actually, nearly all existing web developers, which is sad) force us, their users, to trust them so fanatically so we don't mind to give them full control on our browsers.  Hey, may be you also need a key of my house?</p>\n",
                    "is_accepted": false,
                    "score": -6
                }
            ],
            "body": "<p>I really don't understand what the problem is with those people who ask you not to use JavaScript on your site. </p>\n\n<p><img src=\"http://www.beholdgenealogy.com/img/no_javascript.gif\" alt=\"Why the paranoia?\"></p>\n\n<p>I went through all sorts of trouble trying to remove a couple of JavaScript scripts I used on one of my sites <a href=\"http://groups.google.com/group/soc.genealogy.computing/browse_thread/thread/fc76732425d5f24f\">to appease a couple of \"complainers\"</a>. A month later, after a relentless attack by spam bots, I decided I better add the JavaScript spam prevention code back in.</p>\n\n<p>JavaScript is obviously used by a lot of programmers. It is currently the 6th most popular tag here at Stack Overflow. It is used on practically every single website that I know of. </p>\n\n<p>The claim that it is a security risk seems bogus to me. I've had JavaScript on in my browser for as long as I remember, and not once have I found out that anything malicious has happened.</p>\n\n<p>JavaScript has, of course, been extended into AJAX. And AJAX is the thing that makes the wonderful world of Web 2.0 work. And that includes this wonderful Stack Overflow site.</p>\n\n<p>So is there something I'm missing? Is there something wrong with JavaScript that I'm not aware of?</p>\n\n<hr>\n\n<p>Follow-up:</p>\n\n<p>I am flabbergasted by the response to my Question.</p>\n\n<p>The responses are strong and vociferous from the Anti-JavaScript people.</p>\n\n<p>There was one pro-JavaScript comment, and it was voted down (as I write this to -2) by the others.</p>\n\n<p>I turned JavaScript off to add this follow-up. I immediately notice three obvious things (There might be more):</p>\n\n<ol>\n<li><p>A big annoying white on red banner at the top of each page saying: \"Stack Overflow works best with JavaScript enabled\". (Annoyance) </p></li>\n<li><p>Comments cannot be viewed at all or added. You can't vote up or vote down. You can't select the accepted answer. (Loss of functionality)</p></li>\n<li><p>Of course none of the AJAX stuff works. I don't have access to the line of editing tools above this entry box, and I can't see the preview as I type this. (Inconveniences)</p></li>\n</ol>\n\n<p>So as far as I am concerned, turning your JavaScript off results in Annoyances, Loss of Functionality, and Inconvenience.</p>\n\n<p>I'm sorry for the handicapped people who have no JavaScript support, but I still don't get why so many of you are so religiously against using it. </p>\n\n<p>Personally, I love what AJAX and its beautiful interfaces and enhanced functionality are doing to the Web. I try to add such features to my site and it annoys me when the Anti-JavaScript people ask me - no, demand of me to take it out because they can't access them. </p>\n\n<p>But how many of you use Stack Overflow with JavaScript off? None I would expect. Your answer would be that you turn it on for sites you trust like Stack Overflow.</p>\n\n<p>Okay. If I make a site that uses Ajax or JavaScript, then I'm fine with you turning it off until you decide to trust my site. But don't expect me to be required to give you all the functionality that I do to people who trust me. Even Stack Overflow doesn't. </p>\n\n<p>If someone wants to embellish this idea, I'll give them the accepted answer.</p>\n\n<hr>\n\n<p>Also see the question:  <a href=\"http://stackoverflow.com/questions/337570/is-it-worth-it-to-code-different-functionality-for-users-with-javascript-disabl\">Is it worth it to code different functionality for users with JavaScript disabled?</a></p>\n\n<p>and <a href=\"http://stackoverflow.com/questions/337570/is-it-worth-it-to-code-different-functionality-for-users-with-javascript-disabl#378681\">my answer to that question</a> (which, when I last looked, had been voted down by the Do-Not-Use JavaScript people).</p>\n\n<hr>\n\n<p>Followup.  I found the following opinion about JavaScript at the <a href=\"http://www.polepositionmarketing.com/library/wp-spamfree/#wpsf_how_it_works\">WP-SpamFree WordPress Plugin page</a>:</p>\n\n<p>\"Most of the spam hitting your blog originates from bots. Few bots can process JavaScript. Few bots can process cookies. Fewer still, can handle both. In a nutshell, this plugin uses a combo of JavaScript and cookies (on steroids) to weed out the humans from spambots, preventing 99%+ of automated spam from ever getting to your site. Almost 100% of web site visitors will have these turned on by default, so this type of solution works silently in the background, with no inconveniences. There are extremely few users (less than 2%) that have JavaScript and/or cookies turned off by default, but they will be prompted to turn those back on to post their comment.</p>\n\n<p>Stats show that among all Internet users, less than 2% have JavaScript turned off, and less than 1% have cookies turned off. This requirement isn\u2019t anything out of the ordinary because most modern websites require the use of JavaScript and cookies for key features \u2014 AJAX, for example, won\u2019t work if JS is disabled.</p>\n\n<p><strong>Overall, the very few that might be inconvenienced because they have JS and cookies turned off will be far fewer than the 100% who would be annoyed by CAPTCHA\u2019s, challenge questions, and other validation methods.</strong>\"</p>\n",
            "last_activity_date": 1381926079,
            "question_id": 373818,
            "score": 143,
            "tags": [
                "javascript",
                "security"
            ],
            "title": "What&#39;s with those Do-Not-Use JavaScript People?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I would would wrap the <code>&lt;ul&gt;</code> with a <code>&lt;div ng-cloak&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As <a href=\"http://docs.angularjs.org/api/ng.directive%3angCloak\">mentioned in the documentation</a>, you should add a rule to your CSS to hide it based on the <code>ng-cloak</code> attribute:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>[ng\\:cloak], [ng-cloak], .ng-cloak {\n    display: none;\n}\n</code></pre>\n\n<p>We use similar tricks on the \"Built with Angular\" site, which you can view the source of on Github: <a href=\"https://github.com/angular/builtwith.angularjs.org\">https://github.com/angular/builtwith.angularjs.org</a></p>\n\n<p>Hope that helps!</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Though the documentation doesn't mention it, it might not be enough to add the <code>display: none;</code> rule to your CSS.  In cases where you are loading angular.js in the body or templates aren't compiled soon enough, use the <code>ng-cloak</code> directive <strong>and</strong> include the following in your CSS:</p>\n\n<pre><code>/* \n  Allow angular.js to be loaded in body, hiding cloaked elements until \n  templates compile.  The !important is important given that there may be \n  other selectors that are more specific or come later and might alter display.  \n */\n[ng\\:cloak], [ng-cloak], .ng-cloak {\n  display: none !important;\n}\n</code></pre>\n\n<p>As mentioned in the comment, the <code>!important</code> is important.  For example, if you have the following markup</p>\n\n<pre><code>&lt;ul class=\"nav\"&gt;\n  &lt;li&gt;&lt;a href=\"/foo\" ng-cloak&gt;{{bar}}&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>and you happen to be using <code>bootstrap.css</code>, the following selector is more specific for your <code>ng-cloak</code>'ed element</p>\n\n<pre><code>.nav &gt; li &gt; a {\n  display: block;\n}\n</code></pre>\n\n<p>So if you include a rule with simply <code>display: none;</code>, Bootstrap's rule will take precedence and the <code>display</code> will be set to <code>block</code>, so you'll see the flicker before the template compiles.</p>\n",
                    "is_accepted": true,
                    "score": 147
                },
                {
                    "body": "<p><a href=\"http://docs.angularjs.org/api/ng.directive%3angBind\">ngBind</a> and <a href=\"http://docs.angularjs.org/api/ng.directive%3angBindTemplate\">ngBindTemplate</a> are alternatives that do not require CSS:</p>\n\n<pre><code>&lt;div ng-show=\"foo != null\" ng-cloak&gt;{{name}}&lt;/div&gt;  &lt;!-- requires CSS --&gt;\n&lt;div ng-show=\"foo != null\" ng-bind=\"name\"&gt;&lt;/div&gt;\n&lt;div ng-show=\"foo != null\" ng-bind-template=\"name = {{name}}\"&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Make sure AngularJS is included in the <code>head</code> of the HTML.  See <a href=\"http://docs.angularjs.org/api/ng.directive%3angCloak\">ngCloak doc</a>:</p>\n\n<blockquote>\n  <p>For the best result, angular.js script must be loaded in the head\n  section of the html file; alternatively, the css rule (above) must be\n  included in the external stylesheet of the application.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I've never had much luck using ngCloak.  I still get flickering despite everything mentioned above.  The only surefire way to avoid flicking is to put your content in a template and include the template.  In a SPA, the only HTML that will get evaluated before being compiled by Angular is your main index.html page.  </p>\n\n<p>Just take everything inside the body and stick it in a separate file and then:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;ng-include src=\"'views/indexMain.html'\"&gt;&lt;/ng-include&gt;\n</code></pre>\n\n<p>You should never get any flickering that way as Angular will compile the template before adding it to the DOM.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>We ran into this problem at our company and solved it by adding \"display: none\" to the CSS styling for those flickering ng-show elements. We didn't have to use ng-cloak at all. Unlike others in this thread, we experienced this issue in Safari but not Firefox or Chrome -- possibly due to <a href=\"http://java.dzone.com/articles/safaris-lazy-repaint-bug-ios-7\" rel=\"nofollow\">Safari's lazy repaint bug in iOS7</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In addition to the accepted answer if you're using an alternative method of triggering ng-cloak...</p>\n\n<p>You may also wish to add some additional specificities to your CSS/LESS:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>[ng\\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak],\n.ng-cloak, .x-ng-cloak,\n.ng-hide {\n    display: none !important;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>For what it's worth, I had a similar issue ng-cloak not working. It may be worth checking your app/site with cache enabled to reuse source files to see if that helps.</p>\n\n<p>With my run-in with flickering, I was testing with DevTools open and cache disabled. Leaving the panel closed with caching enabled fixed my issue.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I was having no luck with <code>ng-cloak</code> and it turned out <code>ng-show</code> was a much more effective solution for my use case. This may be the case for anyone landing here as well.</p>\n\n<p>(I had a form I didn't want to load until a certain promise in my controller had resolved.)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an issue in angularjs with directive/class ng-cloak or ng-show.</p>\n\n<p>Chrome works fine, but Firefox is causing blink of elements with [ng-cloak] or [ng-show].\nIMHO it's caused by the converting [ng-cloak]/[ng-show] to style=\"display: none;\", probably the FF javascript compiler is little bit slower, so the elements appears for a while and then hide?</p>\n\n<p>Example:</p>\n\n<pre><code>&lt;ul ng-show=\"foo != null\" ng-cloak&gt;..&lt;/ul&gt;\n</code></pre>\n\n<p>I would appreciate any tips or help, it's very annoying,</p>\n",
            "last_activity_date": 1416438693,
            "question_id": 11249768,
            "score": 72,
            "tags": [
                "javascript",
                "class",
                "angularjs"
            ],
            "title": "Angularjs - ng-cloak/ng-show elements blink"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I think you should try <a href=\"http://thejit.org/\">http://thejit.org/</a></p>\n\n<p>I use it all the time and is perfect for my needs.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>I decided to port the <a href=\"http://kenneth.kufluk.com/google/js-mindmap/\">one you found</a> into a jQuery plugin, which can be found LINK REMOVED - SEE EDIT.  It was written up in about 2 hours last night, so is probably riddled with bugs.  If you find any bugs, feel free to email me at the email listed in my StackOverflow profile.</p>\n\n<p><strong>Edit:</strong> I've contacted the author of the original Mindmap, and my jQuery conversion has become the core of development.  You can get it, as well as speed improvements and new functionality <a href=\"https://github.com/kennethkufluk/js-mindmap\">here</a>, on the Github page.</p>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>Also, if you decide to write your own implementation, a good visualization library is <a href=\"http://mbostock.github.com/d3/\" rel=\"nofollow\">d3.js</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There's also <a href=\"https://github.com/samizdatco/arbor\" rel=\"nofollow\">arbor.js</a>, much newer then the ones cited in other answers. It implements the force directed algorithm for layout, similar to js-mindmap that you cited, but with better performance since it uses webworkers. The actual rendering is left for you, so you can use jquery or whatever you prefer.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I was wondering if anyone happens to know of a jQuery (or pure javascript) mind map.  I found <a href=\"http://kenneth.kufluk.com/google/js-mindmap/\">this one</a> a few times, but it uses MooTools, unfortunately.</p>\n",
            "last_activity_date": 1359450221,
            "question_id": 1374149,
            "score": 45,
            "tags": [
                "javascript",
                "jquery",
                "mindmapping"
            ],
            "title": "jQuery Mind Map/Think Map"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I've done this by using jQuery UI Sortable to trigger an event on the item view when an item is dropped. I can then trigger another event on the item view that includes the model as data which the collection view is bound to. The collection view can then be responsible for updating the sort order. </p>\n\n<h1>Working example</h1>\n\n<p><a href=\"http://jsfiddle.net/7X4PX/4/\">http://jsfiddle.net/7X4PX/4/</a></p>\n\n<h1>jQuery UI Sortable</h1>\n\n<pre><code>$(document).ready(function() {\n    $('#collection-view').sortable({\n        // consider using update instead of stop\n        stop: function(event, ui) {\n            ui.item.trigger('drop', ui.item.index());\n        }\n    });\n});\n</code></pre>\n\n<p>The <a href=\"http://api.jqueryui.com/sortable/#event-stop\">stop</a> event is bound to a function that triggers <code>drop</code> on the DOM node for the item with the item's index (provided by jQuery UI) as data.</p>\n\n<h1>Item view</h1>\n\n<pre><code>Application.View.Item = Backbone.View.extend({\n    tagName: 'li',\n    className: 'item-view',\n    events: {\n        'drop' : 'drop'\n    },\n    drop: function(event, index) {\n        this.$el.trigger('update-sort', [this.model, index]);\n    },        \n    render: function() {\n        $(this.el).html(this.model.get('name') + ' (' + this.model.get('id') + ')');\n        return this;\n    }\n});\n</code></pre>\n\n<p>The drop event is bound to the <code>drop</code> function which triggers an <code>update-sort</code> event on the item view's DOM node with the data <code>[this.model, index]</code>. That means we are passing the current model and it's index (from jQuery UI sortable) to whomever is bound to the <code>update-sort</code> event.</p>\n\n<h1>Items (collection) view</h1>\n\n<pre><code>Application.View.Items = Backbone.View.extend({\n    events: {\n        'update-sort': 'updateSort'\n    },\n    render: function() {\n        this.$el.children().remove();\n        this.collection.each(this.appendModelView, this);\n        return this;\n    },    \n    appendModelView: function(model) {\n        var el = new Application.View.Item({model: model}).render().el;\n        this.$el.append(el);\n    },\n    updateSort: function(event, model, position) {            \n        this.collection.remove(model);\n\n        this.collection.each(function (model, index) {\n            var ordinal = index;\n            if (index &gt;= position) {\n                ordinal += 1;\n            }\n            model.set('ordinal', ordinal);\n        });            \n\n        model.set('ordinal', position);\n        this.collection.add(model, {at: position});\n\n        // to update ordinals on server:\n        var ids = this.collection.pluck('id');\n        $('#post-data').html('post ids to server: ' + ids.join(', '));\n\n        this.render();\n    }\n}); \n</code></pre>\n\n<p>The <code>Items</code> view is bound to the <code>update-sort</code> event and the function uses the data passed by the event (model and index). The model is removed from the collection, the <code>ordinal</code> attribute is updated on each remaining item and the order of items by id is sent to the server to store state.</p>\n\n<h1>Collection</h1>\n\n<pre><code>Application.Collection.Items = Backbone.Collection.extend({\n    model: Application.Model.Item,\n    comparator: function(model) {\n        return model.get('ordinal');\n    },\n});\n</code></pre>\n\n<p>The collection has a <a href=\"http://backbonejs.org/#Collection-comparator\">comparator</a> function defined which orders the collection by <code>ordinal</code>. This keeps the rendered order of items in sync as the \"default order\" of the collection is now by the value of the <code>ordinal</code> attribute.</p>\n\n<p>Note there is some duplication of effort: the model doesn't need to be removed and added back to the collection if a collection has a comparator function as the jsfiddle does. Also the view may not need to re-render itself.</p>\n\n<p><strong>Note</strong>: compared to the other answer, my feeling was that it was more correct to notify the model instance of the item that it needed to be updated instead of the collection directly. Both approaches are valid. The other answer here goes directly to the collection instead of taking the model-first approach. Pick whichever makes more sense to you.</p>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p><a href=\"http://jsfiddle.net/aJjW6/2/\">http://jsfiddle.net/aJjW6/2/</a></p>\n\n<h3>HTML:</h3>\n\n<pre><code>`&lt;div class=\"test-class\"&gt;\n     &lt;h1&gt;Backbone and jQuery sortable - test&lt;/h1&gt;\n     &lt;div id=\"items-collection-warper\"&gt;&lt;/div&gt;\n&lt;/div&gt;`\n</code></pre>\n\n<h3>JavaScript:</h3>\n\n<pre><code>$(document).ready(function(){\n\nvar collection = [\n    {name: \"Item \", order: 0},\n    {name: \"Item 1\", order: 1},\n    {name: \"Item 2\", order: 2},\n    {name: \"Item 3\", order: 3},\n    {name: \"Item 4\", order: 4}\n];\nvar app = {};\n\napp.Item = Backbone.Model.extend({});\napp.Items = Backbone.Collection.extend({\n    model: app.Item,\n    comparator: 'order',\n\n});\n\napp.ItemView = Backbone.View.extend({\n    tagName: 'li',\n    template: _.template('&lt;span&gt;&lt;%= name %&gt; - &lt;b&gt;&lt;%= order %&gt;&lt;/b&gt;&lt;/span&gt;'),\n    initialize: function(){\n\n    },\n    render: function(){\n        var oneItem = this.$el.html(this.template(this.model.attributes));\n        return this;\n    }\n});\n\napp.AppView = Backbone.View.extend({\n    el: \"#items-collection-warper\",\n    tagName: 'ul',\n    viewItems: [],\n    events:{\n        'listupdate': 'listUpdate'\n    },\n    initialize: function(){\n        var that = this;\n\n        this.$el.sortable({\n             placeholder: \"sortable-placeholder\",\n            update: function(ev, ui){\n               that.listUpdate();\n            }\n        });            \n    },\n    render: function(){\n        var that= this;\n        this.collection.each(function(item){\n            that.viewItems.push(that.addOneItem(item));\n            return this;\n        });\n\n    },\n    addOneItem: function(item){\n        var itemView = new app.ItemView({model: item});\n        this.$el.append(itemView.render().el);\n\n        return itemView;\n    },\n\n    listUpdate: function(){\n\n\n        _.each(this.viewItems, function(item){\n            item.model.set('order', item.$el.index());\n        });\n        this.collection.sort({silent: true})\n         _.invoke(this.viewItems, 'remove');\n        this.render();\n    }\n});\n\nvar Items = new app.Items(collection)\nvar appView = new app.AppView({collection: Items});\nappView.render();\n});\n</code></pre>\n\n<h3>CSS:</h3>\n\n<pre><code>.test-class{\n    font-family: Arial;\n}\n.test-class li{\n    list-style:none;\n    height:20px;\n\n}\n.test-class h1{\n    font-size: 12px;\n}\n.ui-sortable-helper{\n    opacity:0.4;\n}\n.sortable-placeholder{\n    background: #ddd;\n    border:1px dotted #ccc;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Just use <a href=\"http://rotundasoftware.github.io/backbone.collectionView/\">Backbone.CollectionView</a>!</p>\n\n<pre><code>var collectionView = new Backbone.CollectionView( {\n  sortable : true,\n  collection : new Backbone.Collection\n} );\n</code></pre>\n\n<p>Voila!</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I have a Backbone.js collection that I would like to be able to sort using jQuery UI's Sortable. Nothing fancy, I just have a list that I would like to be able to sort. </p>\n\n<p>The problem is that I'm not sure how to get the current order of items after being sorted and communicate that to the collection. Sortable can serialize itself, but that won't give me the model data I need to give to the collection.</p>\n\n<p>Ideally, I'd like to be able to just get an array of the current order of the models in the collection and use the reset method for the collection, but I'm not sure how to get the current order. Please share any ideas or examples for getting an array with the current model order.</p>\n",
            "last_activity_date": 1403812308,
            "question_id": 10147969,
            "score": 36,
            "tags": [
                "javascript",
                "jquery-ui",
                "backbone.js",
                "backbone.js-collections"
            ],
            "title": "Saving jQuery UI Sortable&#39;s order to Backbone.js Collection"
        },
        {
            "answer_count": 16,
            "answers": [
                {
                    "body": "<p>It's not jQuery ... but I have found that a dropdown, with a list of fifteen minute intervals of time, 8:00AM, 8:15AM, 8:30AM, and so on, is extremely easy for the user to interact with.</p>\n\n<p>Not sure if you <strong>really</strong> need a jQuery way of doing this ... may be overkill. Just an opinion based on my personal experience with <strong>real</strong> users and developing business applications.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Check out Maxime Haineault's <a href=\"http://haineault.com/media/jquery/ui-timepickr/page/\" rel=\"nofollow\">jQuery.timepicker</a>. Pretty cool, IMHO...</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>My advice would be not to do this. I find it bad enough being forced to use a calendar control just to enter a date, especially when not given the option to type a date which I can do way quicker than navigating yet another wacky control. </p>\n\n<p>Time pickers just take this kind of UI fetish to a new extreme. Why not allow your users to either type the time or just use a couple of drop down boxes for hours and mins. Even drop down lists allow a user to just type the time. The time picker in <a href=\"http://stackoverflow.com/questions/476822/jquery-time-picker#476861\">Shog9's answer</a> is all very nice to look at but is incredibly fiddly to use. If I was an end user having to use a data entry app and it had a control like that on the page then it's only going to slow me down and make me want to come and cut off the developers hands. :)</p>\n\n<p>Think about usability first before how slick the app looks.</p>\n\n<p>Just my humble opinion.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I found <a href=\"http://labs.perifer.se/timedatepicker/\">this plugin</a> (<a href=\"https://github.com/perifer/timePicker\">github repository</a>) trumps the other one mentioned.  It mimics Google Calendar's timepicker.</p>\n",
                    "is_accepted": true,
                    "score": 86
                },
                {
                    "body": "<p>My situation was slightly different, I needed a date time picker but couldn't find one either. So I decided to write one. You can find the <a href=\"http://www.yart.com.au//DateTime/TimeCalendar.js\" rel=\"nofollow\">full source here</a>; I also posted <a href=\"http://www.yart.com.au/Resources/ASP-NET/ASP-NET-JQuery-Date-Time-Control.aspx\" rel=\"nofollow\">a quick demo</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The best I have ever used is the one offered by Telerik.</p>\n\n<p><a href=\"http://demos.telerik.com/aspnet-ajax/calendar/examples/datetimepicker/overview/defaultcs.aspx\" rel=\"nofollow\">http://demos.telerik.com/aspnet-ajax/calendar/examples/datetimepicker/overview/defaultcs.aspx</a></p>\n\n<p>It is unobtrusive, letting the user just enter in the time or click on the clock icon to select from a list. Basically just a more aesthetically appealing method of using editable drop downs.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The <a href=\"http://www.ama3.com/anytime/\" rel=\"nofollow\">Any+Time\u2122 DatePicker/TimePicker AJAX Calendar Widget</a> allows time selection which, when using the mouse, is about as fast as typing by hand, but has the added benefit of error prevention.  The time can be formatted any way necessary.  It also supports keyboard manipulation, although admittedly the keyboard access is not as quick as the mouse or typing... but again, it guarantees the value will be in the required format.  It's also easy-to-customize and can handle dates as well.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are interested in using a good time parser and allowing the user to enter in a wide range of valid time strings (8:00 AM, 8AM, 8a, 8, etc), take a look at <a href=\"http://www.datejs.com/\" rel=\"nofollow\">http://www.datejs.com/</a>. </p>\n\n<p>Here is the jquery code I am using to work with it.</p>\n\n<pre><code>$('.time').blur(function (e) {\n    var val = $(this).val();\n    if (!isNaN(val))\n        // add minutes to numeric value otherwise it will be interpreted as a date\n        val = val + ':00'; \n    var dt = Date.parse(val);\n    $(this).val(dt.toString('h:mm tt'))\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><a href=\"http://github.com/gdoermann/jquery.ui.timepicker\" rel=\"nofollow\">I wrote one</a> based off of the plugin Jim mentioned (works like google calendar time picker) but it works using jquery ui autocomplete.  It is MUCH more stable than the afore mentioned plugin.  I had issues with that one positioning itself on the page.  The plugin takes an array, time range and intervals or an ajax source... so you can customize it to your hearts content.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think every answer, except Kev's, is subjective. I've seen tenths of time-picker JQuery plug-ins on the net, and most were useless time consuming gimmicks, but if you already use the standard Jquery datepicker then <a href=\"http://trentrichardson.com/examples/timepicker/\" rel=\"nofollow\">this plug-in</a> would be appropriate.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I tried a ton of timepicker and was not satisfied so I wrote [yet] another one. I think it works well. Also it is inspired from the datepicker so it looks like standard jQuery UI stuff.</p>\n\n<p>The default minute increments is at 5 and can be set to 15 in the options.</p>\n\n<p><a href=\"http://fgelinas.com/code/timepicker\">http://fgelinas.com/code/timepicker</a> </p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>Here is my try on the subject:\n<a href=\"http://yoka.github.com/jquery-timeselect/\" rel=\"nofollow\">http://yoka.github.com/jquery-timeselect/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Whilst there isn't a standard one, I've been using a <a href=\"http://keith-wood.name/timeEntry.html\" rel=\"nofollow\">jQuery plugin from Keith Wood</a>. Unlike some, this degrades to a text box (that you can still type in, whilst still performing validation), and can also be used with a mouse if you're so inclined.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I couldn't find a plugin that did what I wanted (i.e., allow a user to select a time from a fixed table of times, using mouse only), so I wrote this. The sparse write up is here <a href=\"http://codetipper.wordpress.com/\" rel=\"nofollow\">http://codetipper.wordpress.com/</a> and the demo is here <a href=\"http://www.nymediation.net/TimeSelect.html\" rel=\"nofollow\">http://www.nymediation.net/TimeSelect.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this great lib - <a href=\"http://code.google.com/p/mobiscroll/\" rel=\"nofollow\">http://code.google.com/p/mobiscroll/</a></p>\n\n<p>Demo - <a href=\"http://demo.mobiscroll.com/\" rel=\"nofollow\">http://demo.mobiscroll.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I have been using <a href=\"http://trentrichardson.com/examples/timepicker/\" rel=\"nofollow\">Trent Richardson's timepicker library</a> and have found it to be great. It is a very popular one too, by number of downloads.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm looking to fill a text input with a time that the user can choose in 15 minute intervals. I know there are a few plugins out there. I was wondering if there was any \u201cindustry standard\u201d plugin, or strong objective reasons to prefer a particular one in common scenarios.</p>\n",
            "last_activity_date": 1344962693,
            "question_id": 476822,
            "score": 71,
            "tags": [
                "javascript",
                "jquery",
                "time"
            ],
            "title": "jQuery time picker"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>&lt;ul id=\"luke_should_be_here\"&gt;\n{{people.1.name}}\n&lt;/ul&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 147
                },
                {
                    "body": "\n\n<p>The following, <em>with an additional dot before the index</em>, works just as expected. Here, the square brackets are optional when the index is followed by another property:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>{{people.[1].name}}\n{{people.1.name}}\n</code></pre>\n\n<p>However, the square brackets are <em>required</em> in:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>{{#with people.[1]}}\n  {{name}}\n{{/with}}\n</code></pre>\n\n<p>In the latter, using the index number without the square brackets would get one:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Error: Parse error on line ...:\n...     {{#with people.1}}                \n-----------------------^\nExpecting 'ID', got 'INTEGER'\n</code></pre>\n\n<p>As an aside: the brackets are (also) used for <a href=\"http://handlebarsjs.com/expressions.html\">segment-literal syntax</a>, to refer to actual identifiers (not index numbers) that would otherwise be invalid. More details in <a href=\"https://github.com/wycats/handlebars-site/issues/26\">What is a valid identifier?</a></p>\n\n<p>(Tested with Handlebars in YUI.)</p>\n",
                    "is_accepted": false,
                    "score": 117
                },
                {
                    "body": "<p>If undocumented features aren't your game, the same can be accomplished here:</p>\n\n<pre><code>Handlebars.registerHelper('index_of', function(context,ndx) {\n  return context[ndx];\n});\n</code></pre>\n\n<p>Then in a template</p>\n\n<pre><code>{{#index_of this 1}}{{/index_of}}   \n</code></pre>\n\n<p>I wrote the above before I got a hold of </p>\n\n<pre><code>this.[0]\n</code></pre>\n\n<p>I can't see you getting too far with handlebars if you aren't writing your own helpers.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Please try this, if you want to fetch first/last.</p>\n\n<pre><code>{{#each list}}\n\n    {{#if @first}}\n        &lt;div class=\"active\"&gt;\n    {{else}}\n        &lt;div&gt;\n    {{/if}}\n\n{{/each}}\n\n\n{{#each list}}\n\n    {{#if @last}}\n        &lt;div class=\"last-element\"&gt;\n    {{else}}\n        &lt;div&gt;\n    {{/if}}\n\n{{/each}}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The following syntax can also be used if the array is not named (just the array is passed to the template):</p>\n\n<pre><code>  &lt;ul id=\"luke_should_be_here\"&gt;\n  {{this.1.name}}\n  &lt;/ul&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>{{#each array}}\n  {{@index}}\n{{/each}}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am trying to be able to specify the index of an item in an array within a handlebars template:</p>\n\n<pre><code>{\n  people: [\n    {\"name\":\"Yehuda Katz\"},\n    {\"name\":\"Luke\"},\n    {\"name\":\"Naomi\"}\n  ]\n}\n</code></pre>\n\n<p>using this:</p>\n\n<pre><code>&lt;ul id=\"luke_should_be_here\"&gt;\n{{people[1].name}}\n&lt;/ul&gt;\n</code></pre>\n\n<p>If the above is not possible, how would I write a helper that could access a spefic item within the array?</p>\n",
            "last_activity_date": 1410753956,
            "question_id": 8044219,
            "score": 88,
            "tags": [
                "javascript",
                "handlebars.js"
            ],
            "title": "handlebars access array item"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>To debug, we have to modify the grunt file under bin. On my machine, grunt is installed globally, so I went to /usr/local/lib/node_modules/grunt/bin\nI opened the file and modified:</p>\n\n<p><code>#!/usr/bin/env node</code></p>\n\n<p>To</p>\n\n<p><code>#!/usr/bin/env node --debug-brk</code></p>\n\n<p>--debug-brk will break on the first line of javascript ran.</p>\n\n<p>Doing that alone isn't quite enough though, since you won't be able to find you're grunt task js file in the drop down in node inspector, so you have to modify the file you're interested in debugging by adding <code>debugger;</code> where you want the breakpoint to happen. \nNow you can click continue after the first break, and you'll break on you're <code>debugger;</code> line</p>\n\n<p>Pretty kludgy, but it's the only way I've found so far.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>To run grunt in debug, you need to pass the grunt script to node explicitly:</p>\n\n<pre><code>node-debug $(which grunt) task\n</code></pre>\n\n<p>and put a <code>debugger;</code> line in your task. <code>node-inspector</code> will then open a browser with debugging tools.</p>\n\n<h3>Edit 28 Feb 2014</h3>\n\n<p><code>node-inspector</code> has added the command <code>node-debug</code>, which launches node in a <code>--debug</code> state and opens the browser to the <code>node-inspector</code> page, stopping when it hits the first <code>debugger</code> line or set breakpoint.</p>\n\n<h3>Edit 30 January 2015</h3>\n\n<p>On Windows, things are a touch more complicated. See the answer from @e.gluhotorenko for instructions.</p>\n",
                    "is_accepted": true,
                    "score": 108
                },
                {
                    "body": "<h3>Windows solution</h3>\n\n<p>Run </p>\n\n<pre><code>node --debug-brk c:\\Users\\username\\AppData\\Roaming\\npm\\node_modules\\grunt-cli\\bin\\grunt taskname\n</code></pre>\n\n<p>from cmd in a directory with your <code>Gruntfile.js</code>. Do not forget, of course, put <code>debugger;</code> line in necessary places.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>I have done a task to run my app and launch node-inspector.\nIt is far better than current proposition, you just have to add this task in gruntfile:</p>\n\n<pre><code>  grunt.registerTask('debug', 'My debug task.', function() {\n        var done = this.async();\n        grunt.util.spawn({\n            cmd: 'node',\n            args: ['--debug', 'app.js'],\n            opts: {\n                //cwd: current workin directory\n            }\n        },\n        function (error, result, code) {\n            if (error) {\n                grunt.log.write (result);\n                grunt.fail.fatal(error);\n            }\n            done();\n        });\n        grunt.log.writeln ('node started');\n        grunt.util.spawn({\n            cmd: 'node-inspector',\n            args: ['&amp;'],\n            opts: {\n                //cwd: current workin directory\n            }\n        },\n        function (error, result, code) {\n            if (error) {\n                grunt.log.write (result);\n                grunt.fail.fatal(error);\n            }\n            done();\n        });\n        grunt.log.writeln ('inspector started');\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I recently created grunt-node-inspector to easily configure node-inspector with the rest of your grunt workflow, check it out: <a href=\"https://github.com/ChrisWren/grunt-node-inspector\" rel=\"nofollow\">https://github.com/ChrisWren/grunt-node-inspector</a></p>\n\n<p>Here is a section of a Gruntfile which illustrates how you can debug a grunt task using grunt-node-inspector, grunt-concurrent, and grunt-shell: <a href=\"https://github.com/CabinJS/Cabin/blob/master/Gruntfile.js#L44-L77\" rel=\"nofollow\">https://github.com/CabinJS/Cabin/blob/master/Gruntfile.js#L44-L77</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Does someone used <a href=\"https://github.com/dannycoates/node-inspector\">node-inspector</a> with <a href=\"https://github.com/cowboy/grunt\">Grunt</a> for application debugging? If not, Can you recommend a debugging tool for Grunt based apps?</p>\n\n<p>I'm working with <a href=\"http://nodejs.org/\">nodejs</a> for a server side app and I have <a href=\"https://github.com/cowboy/grunt\">Grunt</a> to use separated tasks (this is because users can execute tasks separately).</p>\n\n<p>Thanks in advance</p>\n",
            "last_activity_date": 1422649437,
            "question_id": 11171013,
            "score": 74,
            "tags": [
                "javascript",
                "debugging",
                "node.js",
                "node-inspector",
                "gruntjs"
            ],
            "title": "Using node-inspector with Grunt tasks"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Inject $locationProvider into your config, and set <code>$locationProvider.html5Mode(true)</code>.</p>\n\n<p><a href=\"http://docs.angularjs.org/api/ng.%24locationProvider\">http://docs.angularjs.org/api/ng.$locationProvider</a></p>\n\n<p>Simple example:</p>\n\n<p>JS:</p>\n\n<pre><code>myApp.config(function($routeProvider, $locationProvider) {\n  $locationProvider.html5Mode(true);\n  $routeProvider\n    .when('/page1', { template: 'page1.html', controller: 'Page1Ctrl' })\n    .when('/page2', { template: 'page2.html', controller: 'Page2Ctrl' })\n});\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;a href=\"/page1\"&gt;Page 1&lt;/a&gt; | &lt;a href=\"/page2\"&gt;Page 2&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 103
                }
            ],
            "body": "<p>i am trying to implement html5's pushstate instead of the # navigation used by angular.js i have tried searching google for an answer and also tried the angular irc chat room with no luck yet.</p>\n\n<p>this is my controllers.js</p>\n\n<pre><code>function PhoneListCtrl($scope, $http) {\n    $http.get('phones/phones.json').success(function(data) {\n        $scope.phones = data;\n    });\n}\n\nfunction PhoneDetailCtrl($scope, $routeParams) {\n  $scope.phoneId = $routeParams.phoneId;\n}\n\n\n\nfunction greetCntr($scope, $window) {\n    $scope.greet = function() {\n    $(\"#modal\").slideDown();\n    }\n}\n</code></pre>\n\n<p>app.js</p>\n\n<pre><code>angular.module('phoneapp', []).\n    config(['$routeProvider', function($routeProvider){\n        $routeProvider.\n            when('/phones', {\n                templateUrl: 'partials/phone-list.html',\n                controller: PhoneListCtrl\n            }).\n            when('/phones/:phoneId', {\n                templateUrl: 'partials/phone-detail.html',\n                controller: PhoneDetailCtrl\n            }).\n            otherwise({\n                redirectTo: '/phones'\n            });\n    }])\n</code></pre>\n",
            "last_activity_date": 1340548930,
            "question_id": 11095179,
            "score": 68,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "using html5 pushstate on angular.js"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>What's happening here is that you call <code>slice()</code> as if it was a function of <code>NodeList</code> using <code>call()</code>. What <code>slice()</code> does in this case is create an empty array, then iterate through the object it's running on (originally an array, now a <code>NodeList</code>) and keep appending the elements of that object to the empty array it created, which is eventually returned. Here's an <a href=\"http://shifteleven.com/articles/2007/06/28/array-like-objects-in-javascript\">article on this</a>.</p>\n\n<p><strong>EDIT:</strong></p>\n\n<blockquote>\n  <p>So it starts with an empty array [], then slice is used to\n  convert the result of call to a new array yeah?</p>\n</blockquote>\n\n<p>That's not right. <code>[].slice</code> returns a function object. A function object has a function <code>call()</code> which calls the function assigning the first parameter of the <code>call()</code> to <code>this</code>; in other words, making the function think that it's being called from the parameter (the <code>NodeList</code> returned by <code>document.querySelectorAll('a')</code>) rather than from an array.</p>\n",
                    "is_accepted": true,
                    "score": 53
                },
                {
                    "body": "<p>It retrieves the <code>slice</code> function from an <code>Array</code>. It then calls that function, but using the result of <code>document.querySelectorAll</code> as the <code>this</code> object instead of an actual array.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>In javascript, methods of an object can be bound to another object at runtime. In short, javascript allows an object to \"borrow\" the method of another object:</p>\n\n<pre><code>object1 = {\n    name:'frank',\n    greet:function(){\n        alert('hello '+this.name)\n    }\n};\n\nobject2 = {\n    name:'andy'\n};\n\n// Note that object2 has no greet method.\n// But we may \"borrow\" from object1:\n\nobject1.greet.call(object2);\n</code></pre>\n\n<p>The <code>call</code> and <code>apply</code> methods of function objects (in javascript functions are objects as well) allows you to do this. So in your code you could say that the Nodelist is borrowing an array's slice method. What does the conversion is the fact that slice returns another array as it's result.</p>\n",
                    "is_accepted": false,
                    "score": 21
                }
            ],
            "body": "<p>I stumbled onto this neat shortcut for converting a DOM NodeList into a regular array, but I must admit, I don't completely understand how it works:</p>\n\n<pre><code>[].slice.call(document.querySelectorAll('a'), 0)\n</code></pre>\n\n<p>So it starts with an empty array <code>[]</code>, then <code>slice</code> is used to convert the result of <code>call</code> to a new array yeah?</p>\n\n<p>The bit I don't understand is the <code>call</code>. How does that convert <code>document.querySelectorAll('a')</code> from a NodeList to a regular array?</p>\n",
            "last_activity_date": 1382039408,
            "question_id": 2125714,
            "score": 59,
            "tags": [
                "javascript",
                "arrays",
                "call",
                "slice"
            ],
            "title": "Explanation of [].slice.call in javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Since you are using jQuery why not use the following:</p>\n\n<pre><code>&lt;script language=\"JavaScript\"&gt;\n    $(document).ready(function() {\n        $('#YOUR_FORM').submit(function() { // catch the form's submit event\n            $.ajax({ // create an AJAX call...\n                data: $(this).serialize(), // get the form data\n                type: $(this).attr('method'), // GET or POST\n                url: $(this).attr('action'), // the file to call\n                success: function(response) { // on success..\n                    $('#DIV_CONTAINING_FORM).html(response); // update the DIV\n                }\n            });\n            return false;\n        });\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>EDIT</strong></p>\n\n<p>As pointed out in the comments sometimes the above won't work. So try the following:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var frm = $('#FORM-ID');\n    frm.submit(function () {\n        $.ajax({\n            type: frm.attr('method'),\n            url: frm.attr('action'),\n            data: frm.serialize(),\n            success: function (data) {\n                $(\"#SOME-DIV\").html(data);\n            },\n            error: function(data) {\n                $(\"#MESSAGE-DIV\").html(\"Something went wrong!\");\n            }\n        });\n        return false;\n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>You can access the data on the POST request using the name of the variable, in your case:</p>\n\n<pre><code>request.POST[\"noteid\"]\nrequest.POST[\"phase\"]\nrequest.POST[\"parent\"]\n... etc\n</code></pre>\n\n<p>The request.POST object is inmutable. You should assign the value to a variable, and then manipulate it.</p>\n\n<p>I would advise you to use <a href=\"http://jquery.malsup.com/form/\" rel=\"nofollow\">this JQuery plugin</a>, so you can write normal HTML forms and then get them \"upgraded\" to AJAX. Having $.post everywhere in you code is kind of tedious.   </p>\n\n<p>Also, use the Network view on Firebug(for Firefox) or the Developer Tools for Google Chrome so you can view what's being sent by you AJAX calls.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>On the server side, your django code can process the AJAX post the same way it processes other form submissions.  For example, </p>\n\n<p><b>views.py</b></p>\n\n<pre><code>def save_note(request, space_name):\n\n    \"\"\"\n    Saves the note content and position within the table.\n    \"\"\"\n    place = get_object_or_404(Space, url=space_name)\n    note_form = NoteForm(request.POST or None)\n\n    if request.method == \"POST\" and request.is_ajax():        \n        print request.POST\n        if note_form.is_valid():\n            note_form.save()\n            msg=\"AJAX submission saved\"\n        else:\n            msg=\"AJAX post invalid\"\n    else:\n        msg = \"GET petitions are not allowed for this view.\"\n\n    return HttpResponse(msg)\n</code></pre>\n\n<p>I've assumed your NoteForm is a ModelForm -- which it should be -- so it has a save method.  Note that in addition to adding the <code>save()</code> command, I changed your <code>request.is_ajax</code> to <code>request.is_ajax()</code>, which is what you want (if you use <code>request.is_ajax</code> your code will just check whether the request has a method called <code>is_ajax</code>, which obviously it does).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As the other answers do work, I prefer to use the <a href=\"http://jquery.malsup.com/form/\" rel=\"nofollow\">jQuery Form Plugin</a>. It fully supports what you want and more. The post view is handled as usual in the Django part, just returning the HTML that is being replaced.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Something to look out for is when returning the form as an html snipped to a modal.</p>\n\n<p><strong>Views.py</strong></p>\n\n<pre><code>@require_http_methods([\"POST\"])\ndef login(request):\nform = BasicLogInForm(request.POST)\n    if form.is_valid():\n        print \"ITS VALID GO SOMEWHERE\"\n        pass\n\n    return render(request, 'assess-beta/login-beta.html', {'loginform':form})\n</code></pre>\n\n<p>Simple view to return the html snipped</p>\n\n<p><strong>Form html Snipped</strong></p>\n\n<pre><code>&lt;form class=\"login-form\" action=\"/login_ajx\" method=\"Post\"&gt; \n  &lt;div class=\"modal-header\"&gt;\n    &lt;button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"&gt;&amp;times;&lt;/button&gt;\n    &lt;h4 class=\"modal-title\" id=\"header\"&gt;Authenticate&lt;/h4&gt;\n  &lt;/div&gt;\n  &lt;div class=\"modal-body\"&gt;\n        {%if form.non_field_errors %}&lt;div class=\"alert alert-danger\"&gt;{{ form.non_field_errors }}&lt;/div&gt;{%endif%}\n        &lt;div class=\"fieldWrapper form-group  has-feedback\"&gt;\n            &lt;label class=\"control-label\" for=\"id_email\"&gt;Email&lt;/label&gt;\n            &lt;input class=\"form-control\" id=\"{{ form.email.id_for_label }}\" type=\"text\" name=\"{{ form.email.html_name }}\" value=\"{%if form.email.value %}{{ form.email.value }}{%endif%}\"&gt;\n            {%if form.email.errors %}&lt;div class=\"alert alert-danger\"&gt;{{ form.email.errors }}&lt;/div&gt;{%endif%}\n        &lt;/div&gt;\n        &lt;div class=\"fieldWrapper form-group  has-feedback\"&gt;\n            &lt;label class=\"control-label\" for=\"id_password\"&gt;Password&lt;/label&gt;\n            &lt;input class=\"form-control\" id=\"{{ form.password.id_for_label }}\" type=\"password\" name=\"{{ form.password.html_name}}\" value=\"{%if form.password.value %}{{ form.password.value }}{%endif%}\"&gt;\n            {%if form.password.errors %}&lt;div class=\"alert alert-danger\"&gt;{{ form.password.errors }}&lt;/div&gt;{%endif%}\n        &lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div class=\"modal-footer\"&gt;\n&lt;button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"&gt;Cancel&lt;/button&gt;\n&lt;input type=\"submit\" value=\"Sign in\" class=\"btn btn-primary pull-right\"/&gt;\n&lt;/div&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p><strong>Page containing the modal</strong></p>\n\n<pre><code>&lt;div class=\"modal fade\" id=\"LoginModal\" tabindex=\"-1\" role=\"dialog\"&gt;{% include \"assess-beta/login-beta.html\" %}&lt;/div&gt;\n</code></pre>\n\n<p>Use the include tag to load the snipped on page load so it is available when you open the modal.</p>\n\n<p><strong>Modal.js</strong></p>\n\n<pre><code>$(document).on('submit', '.login-form', function(){\n$.ajax({ \n    type: $(this).attr('method'), \n    url: this.action, \n    data: $(this).serialize(),\n    context: this,\n    success: function(data, status) {\n        $('#LoginModal').html(data);\n    }\n    });\n    return false;\n});\n</code></pre>\n\n<p>Using the .on() in this case work like .live() the key being binding the submit event not to the button but to the document.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've checked out tons of tutorials for django AJAX forms, but each one of them tells you one way of doing it, none of them is simple and I'm a bit confused since I've never worked with AJAX.</p>\n\n<p>I have a model called \"note\", a modelform for it, and inside the template I need that everytime a note element sends the stop() signal (from jQuery Sortables) django updates the object.</p>\n\n<p>My current code:</p>\n\n<p><strong>views.py</strong></p>\n\n<pre><code>def save_note(request, space_name):\n\n    \"\"\"\n    Saves the note content and position within the table.\n    \"\"\"\n    place = get_object_or_404(Space, url=space_name)\n    note_form = NoteForm(request.POST or None)\n\n    if request.method == \"POST\" and request.is_ajax:\n        msg = \"The operation has been received correctly.\"          \n        print request.POST\n\n    else:\n        msg = \"GET petitions are not allowed for this view.\"\n\n    return HttpResponse(msg)\n</code></pre>\n\n<p><strong>JavaScript:</strong></p>\n\n<pre><code>function saveNote(noteObj) {\n    /*\n        saveNote(noteObj) - Saves the notes making an AJAX call to django. This\n        function is meant to be used with a Sortable 'stop' event.\n        Arguments: noteObj, note object.\n    */\n    var noteID = noteObj.attr('id');\n\n    $.post(\"../save_note/\", {\n        noteid: noteID,\n        phase: \"Example phase\",\n        parent: $('#' + noteID).parent('td').attr('id'),\n        title: $('#' + noteID + ' textarea').val(),\n        message: \"Blablbla\",\n    });\n}\n</code></pre>\n\n<p>The current code gets the data from the template and prints it in the terminal. I don't know how I can manipulate this data. I've seen some people manages the data through jqueryforms to send the data to django.</p>\n\n<p>How can I access the data sent by AJAX and update the note object?</p>\n",
            "last_activity_date": 1403926559,
            "question_id": 7335780,
            "score": 34,
            "tags": [
                "javascript",
                "ajax",
                "django",
                "django-templates"
            ],
            "title": "How to POST a django form with AJAX &amp; jQuery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I find it harder to explain than to show an example, so here is a very simple implementation of what a defer/promise could be.</p>\n\n<p><strong>Disclaimer:</strong> This is not a functional implementation and some parts of the Promise/A specification are missing, This is just to explain the basis of the promises.</p>\n\n<p><strong>tl;dr:</strong> Go to the <strong>Create classes and example</strong> section to see full implementation.</p>\n\n<h2>Promise:</h2>\n\n<p>First we need to create a promise object with an array of callbacks. I'll start working with objects because it's clearer:</p>\n\n<pre><code>var promise = {\n  callbacks: []\n}\n</code></pre>\n\n<p>now add callbacks with the method then:</p>\n\n<pre><code>var promise = {\n  callbacks: [],\n  then: function (callback) {\n    callbacks.push(callback);\n  }\n}\n</code></pre>\n\n<p>And we need the error callbacks too:</p>\n\n<pre><code>var promise = {\n  okCallbacks: [],\n  koCallbacks: [],\n  then: function (okCallback, koCallback) {\n    okCallbacks.push(okCallback);\n    if (koCallback) {\n      koCallbacks.push(koCallback);\n    }\n  }\n}\n</code></pre>\n\n<h2>Defer:</h2>\n\n<p>Now create the defer object that will have a promise:</p>\n\n<pre><code>var defer = {\n  promise: promise\n};\n</code></pre>\n\n<p>The defer needs to be resolved:</p>\n\n<pre><code>var defer = {\n  promise: promise,\n  resolve: function (data) {\n    this.promise.okCallbacks.forEach(function(callback) {\n      window.setTimeout(function () {\n        callback(data)\n      }, 0);\n    });\n  },\n};\n</code></pre>\n\n<p>And needs to reject:</p>\n\n<pre><code>var defer = {\n  promise: promise,\n  resolve: function (data) {\n    this.promise.okCallbacks.forEach(function(callback) {\n      window.setTimeout(function () {\n        callback(data)\n      }, 0);\n    });\n  },\n\n  reject: function (error) {\n    this.promise.koCallbacks.forEach(function(callback) {\n      window.setTimeout(function () {\n        callback(error)\n      }, 0);\n    });\n  }\n};\n</code></pre>\n\n<p>Note that the callbacks are called in a timout to allow the code be always asynchromous.</p>\n\n<p>And that's what a basic defer/promise implementation needs.</p>\n\n<h2>Create classes and example:</h2>\n\n<p>Now lets convert both objects to classes, first the promise:</p>\n\n<pre><code>var Promise = function () {\n  this.okCallbacks = [];\n  this.koCallbacks = [];\n};\n\nPromise.prototype = {\n  okCallbacks: null,\n  koCallbacks: null,\n  then: function (okCallback, koCallback) {\n    okCallbacks.push(okCallback);\n    if (koCallback) {\n      koCallbacks.push(koCallback);\n    }\n  }\n};\n</code></pre>\n\n<p>And now the defer:</p>\n\n<pre><code>var Defer = function () {\n  this.promise = new Promise();\n};\n\nDefer.prototype = {\n  promise: null,\n  resolve: function (data) {\n    this.promise.okCallbacks.forEach(function(callback) {\n      window.setTimeout(function () {\n        callback(data)\n      }, 0);\n    });\n  },\n\n  reject: function (error) {\n    this.promise.koCallbacks.forEach(function(callback) {\n      window.setTimeout(function () {\n        callback(error)\n      }, 0);\n    });\n  }\n};\n</code></pre>\n\n<p>And here is an example of use:</p>\n\n<pre><code>function test() {\n  var defer = new Defer();\n  // an example of an async call\n  serverCall(function (request) {\n    if (request.status === 200) {\n      defer.resolve(request.responseText);\n    } else {\n      defer.reject(new Error(\"Status code was \" + request.status));\n    }\n  });\n  return defer.promise;\n}\n\ntest().then(function (text) {\n  alert(text);\n}, function (error) {\n  alert(error.message);\n});\n</code></pre>\n\n<p>As you can see the basic parts are simple and small. It will grow when you add other options, for example multiple promise resolution:</p>\n\n<pre><code>Defer.all(promiseA, promiseB, promiseC).then()\n</code></pre>\n\n<p>or promise chaining:</p>\n\n<pre><code>getUserById(id).then(getFilesByUser).then(deleteFile).then(promptResult);\n</code></pre>\n\n<p>To read more about the specifications: <a href=\"http://wiki.commonjs.org/wiki/Promises\">CommonJS Promise Specification</a>. Note that main libraries (Q, when.js, rsvp.js, node-promise, ...) follow <a href=\"http://wiki.commonjs.org/wiki/Promises/A\">Promises/A</a> specification.</p>\n\n<p>Hope I was clear enaugh.</p>\n\n<h1>Edit:</h1>\n\n<p>As asked in the comments, I've added two things in this version:</p>\n\n<ul>\n<li>The posibility to call then of a promise, no matter what status it has.</li>\n<li>The posibility to chain promises.</li>\n</ul>\n\n<p>To be able to call the promise when resolved you need to add the status to the promise, and when the then is called check that status. If the status is resolved or rejected just execute the callback with its data or error.</p>\n\n<p>To be able to chain promises you need to generate a new defer for each call to <code>then</code> and, when the promise is resolved/rejected, resolve/reject the new promise with the result of the callback. So when the promise is done, if the callback returns a new promise it is binded to the promise returned with the <code>then()</code>. If not, the promise is resolved with the result of the callback.</p>\n\n<p>Here is the promise:</p>\n\n<pre><code>var Promise = function () {\n  this.okCallbacks = [];\n  this.koCallbacks = [];\n};\n\nPromise.prototype = {\n  okCallbacks: null,\n  koCallbacks: null,\n  status: 'pending',\n  error: null,\n\n  then: function (okCallback, koCallback) {\n    var defer = new Defer();\n\n    // Add callbacks to the arrays with the defer binded to these callbacks\n    this.okCallbacks.push({\n      func: okCallback,\n      defer: defer\n    });\n\n    if (koCallback) {\n      this.koCallbacks.push({\n        func: koCallback,\n        defer: defer\n      });\n    }\n\n    // Check if the promise is not pending. If not call the callback\n    if (this.status === 'resolved') {\n      this.resolveCallback({\n        func: okCallback,\n        defer: defer\n      }, this.data)\n    } else if(this.status === 'rejected') {\n      this.executeCallback({\n        func: koCallback,\n        defer: defer\n      }, this.error)\n    }\n\n    return defer.promise;\n  },\n\n  executeCallback: function (callbackData, result) {\n    window.setTimeout(function () {\n      var res = callbackData.func(result);\n      if (res instanceOf Promise) {\n        callbackData.defer.bind(res);\n      } else {\n        callbackData.defer.resolve(res);\n      }\n    }, 0);\n  }\n};\n</code></pre>\n\n<p>And the defer:</p>\n\n<pre><code>var Defer = function () {\n  this.promise = new Promise();\n};\n\nDefer.prototype = {\n  promise: null,\n  resolve: function (data) {\n    var promise = this.promise;\n    promise.data = data;\n    promise.status = 'resolved';\n    promise.okCallbacks.forEach(function(callbackData) {\n      promise.executeCallback(callbackData, data);\n    });\n  },\n\n  reject: function (error) {\n    var promise = this.promise;\n    promise.error = error;\n    promise.status = 'rejected';\n    promise.koCallbacks.forEach(function(callbackData) {\n      promise.executeCallback(callbackData, error);\n    });\n  },\n\n  // Make this promise behave like another promise:\n  // When the other promise is resoved/rejected this is also resolved/rejected\n  // with the same data\n  bind: function (promise) {\n    var that = this;\n    promise.then(function (res) {\n      that.resolve(res);\n    }, function (err) {\n      that.reject(err);\n    })\n  }\n};\n</code></pre>\n\n<p>As you can see, it has grown quite a bit.</p>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<p>First make sure you're understanding how Promises are supposed to work. Have a look at the <a href=\"http://wiki.commonjs.org/wiki/Promises\" rel=\"nofollow\">CommonJs <em>Promises</em> proposals</a> and the <a href=\"http://promisesaplus.com/\" rel=\"nofollow\">Promises/A+ specification</a> for that.</p>\n\n<p>There are two basic concepts that can be implemented each in a few simple lines:</p>\n\n<ul>\n<li><p>A Promise does asynchronously get resolved with the result. Adding callbacks is a transparent action - independent from whether the promise is resolved already or not, they will get called with the result once it is available.</p>\n\n<pre><code>function Deferred() {\n    var callbacks = [], // list of callbacks\n        result; // the resolve arguments or undefined until they're available\n    this.resolve = function() {\n        if (result) return; // if already settled, abort\n        result = arguments; // settle the result\n        for (var c;c=callbacks.shift();) // execute stored callbacks\n            c.apply(null, result);\n    });\n    // create Promise interface with a function to add callbacks:\n    this.promise = new Promise(function add(c) {\n        if (result) // when results are available\n            c.apply(null, result); // call it immediately\n        else\n            callbacks.push(c); // put it on the list to be executed later\n    });\n}\n// just an interface for inheritance\nfunction Promise(add) {\n    this.addCallback = add;\n}\n</code></pre></li>\n<li><p>Promises have a <code>then</code> method that allows chaining them. I takes a callback and returns a new Promise which will get resolved with the result of that callback after it was invoked with the first promise's result. If the callback returns a Promise, it will get assimilated instead of getting nested.</p>\n\n<pre><code>Promise.prototype.then = function(fn) {\n    var dfd = new Deferred(); // create a new result Deferred\n    this.addCallback(function() { // when `this` resolves\u2026\n        // execute the callback with the results\n        var result = fn.apply(null, arguments);\n        // check whether it returned a promise\n        if (result instanceof Promise)\n            result.addCallback(dfd.resolve); // then hook the resolution on it\n        else\n            dfd.resolve(result); // resolve the new promise immediately \n        });\n    });\n    // and return the new Promise\n    return dfd.promise;\n};\n</code></pre></li>\n</ul>\n\n<p>Further concepts would be maintaining a separate <em>error</em> state (with an extra callback for it) and catching exceptions in the handlers, or guaranteeing asynchronity for the callbacks. Once you add those, you've got a fully functional Promise implementation.</p>\n\n<p>Here is the error thing written out. It unfortunately is pretty repetitive; you can do better by using extra closures but then it get's really really hard to understand.</p>\n\n<pre><code>function Deferred() {\n    var callbacks = [], // list of callbacks\n        errbacks = [], // list of errbacks\n        value, // the fulfill arguments or undefined until they're available\n        reason; // the error arguments or undefined until they're available\n    this.fulfill = function() {\n        if (reason || value) return false; // can't change state\n        value = arguments; // settle the result\n        for (var c;c=callbacks.shift();)\n            c.apply(null, value);\n        errbacks.length = 0; // clear stored errbacks\n    });\n    this.reject = function() {\n        if (value || reason) return false; // can't change state\n        reason = arguments; // settle the errror\n        for (var c;c=errbacks.shift();)\n            c.apply(null, reason);\n        callbacks.length = 0; // clear stored callbacks\n    });\n    this.promise = new Promise(function add(c) {\n        if (reason) return; // nothing to do\n        if (value)\n            c.apply(null, value);\n        else\n            callbacks.push(c);\n    }, function add(c) {\n        if (value) return; // nothing to do\n        if (reason)\n            c.apply(null, reason);\n        else\n            errbacks.push(c);\n    });\n}\nfunction Promise(addC, addE) {\n    this.addCallback = addC;\n    this.addErrback = addE;\n}\nPromise.prototype.then = function(fn, err) {\n    var dfd = new Deferred();\n    this.addCallback(function() { // when `this` is fulfilled\u2026\n        try {\n            var result = fn.apply(null, arguments);\n            if (result instanceof Promise) {\n                result.addCallback(dfd.fulfill);\n                result.addErrback(dfd.reject);\n            } else\n                dfd.fulfill(result);\n        } catch(e) { // when an exception was thrown\n            dfd.reject(e);\n        }\n    });\n    this.addErrback(err ? function() { // when `this` is rejected\u2026\n        try {\n            var result = err.apply(null, arguments);\n            if (result instanceof Promise) {\n                result.addCallback(dfd.fulfill);\n                result.addErrback(dfd.reject);\n            } else\n                dfd.fulfill(result);\n        } catch(e) { // when an exception was re-thrown\n            dfd.reject(e);\n        }\n    } : dfd.reject); // when no `err` handler is passed then just propagate\n    return dfd.promise;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Q is a very complex promise library in terms of implementation because it aims to support pipelining and RPC type scenarios.  I have my own very bare bones implementation of the <a href=\"http://promises-aplus.github.io/promises-spec/\" rel=\"nofollow\">Promises/A+</a> specification <a href=\"https://github.com/then/promise/blob/master/core.js\" rel=\"nofollow\">here</a>.</p>\n\n<p>In principle it's quite simple.  Before the promise is settled/resolved, you keep a record of any callbacks or errbacks by pushing them into an array.  When the promise is settled you call the appropriate callbacks or errbacks and record what result the promise was settled with (and whether it was fulfilled or rejected).  After it's settled, you just call the callbacks or errbacks with the stored result.</p>\n\n<p>That gives you aproximately the semantics of <code>done</code>.  To build <code>then</code> you just have to return a new promise that is resolved with the result of calling the callbacks/errbacks.</p>\n\n<p>If you're interested in a full explenation of the reasonning behind the development of a full on promise implementation with support for RPC and pipelining like Q, you can read kriskowal's reasonning <a href=\"https://github.com/kriskowal/q/blob/master/design/README.js\" rel=\"nofollow\">here</a>.  It's a really nice graduated approach that I can't recommend highly enough if you are thinking of implementing promises.  It's probably worth a read even if you're just going to be using a promise library.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As Forbes mentions in his answer, I chronicled many of the design decisions involved in making a library like Q, here <a href=\"https://github.com/kriskowal/q/blob/master/design/README.js\" rel=\"nofollow\">https://github.com/kriskowal/q/blob/master/design/README.js</a>. Suffice it to say, there are levels of a promise library, and lots of libraries that stop at various levels.</p>\n\n<p>At the first level, captured by the Promises/A+ specification, a promise is a proxy for an eventual result and is suitable for managing <strong>\u201clocal asynchrony\u201d</strong>. That is, it is suitable for ensuring that work occurs in the right order, and for ensuring that it is simple and straight-forward to listen for the result of an operation regardless of whether it already settled, or will occur in the future.  It also makes it just as simple for one or many parties to subscribe to an eventual result.</p>\n\n<p>Q, as I have implemented it, provides promises that are proxies for eventual, remote, or eventual+remote results. To that end, it\u2019s design is inverted, with different implementations for promises\u2014deferred promises, fulfilled promises, rejected promises, and promises for remote objects (the last being implemented in Q-Connection).  They all share the same interface and work by sending and receiving messages like \"then\" (which is sufficient for Promises/A+) but also \"get\" and \"invoke\". So, Q is about <strong>\u201cdistributed asynchrony\u201d</strong>, and exists on another layer.</p>\n\n<p>However, Q was actually taken down from a higher layer, where promises are used for managing distributed asynchrony among <strong>mutually suspicious parties</strong> like you, a merchant, a bank, Facebook, the government\u2014not enemies, maybe even friends, but sometimes with conflicts of interest.  The Q that I implemented is designed to be API compatible with hardened security promises (which is the reason for separating <code>promise</code> and <code>resolve</code>), with the hope that it would introduce people to promises, train them in using this API, and allow them to take their code with them if they need to use promises in secure mashups in the future.</p>\n\n<p>Of course, there are trade-offs as you move up the layers, usually in speed. So, promises implementations can also be designed to co-exist.  This is where the concept of a <strong>\u201cthenable\u201d</strong> enters.  Promise libraries at each layer can be designed to consume promises from any other layer, so multiple implementations can coexist, and users can buy only what they need.</p>\n\n<p>All this said, there is no excuse for being difficult to read. Domenic and I are working on a version of Q that will be more modular and approachable, with some of its distracting dependencies and work-arounds moved into other modules and packages. Thankfully folks like <a href=\"https://github.com/then/promise/blob/master/core.js\" rel=\"nofollow\">Forbes</a>, <a href=\"https://github.com/douglascrockford/monad/blob/master/vow.js\" rel=\"nofollow\">Crockford</a>, and others have filled in the educational gap by making simpler libraries.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You might want to check out the <a href=\"http://abdulapopoola.com/2015/02/23/how-to-write-a-promisea-compatible-library/\" rel=\"nofollow\">blog post</a> on Adehun. </p>\n\n<p>Adehun is an extremely lightweight implementation (about 166 LOC) and very useful for learning how to implement the Promise/A+ spec.</p>\n\n<p><strong>Disclaimer</strong>: I wrote the blog post but the blog post does explain all about Adehun.</p>\n\n<p><strong>The Transition function \u2013 Gatekeeper for State Transition</strong> </p>\n\n<p>Gatekeeper function; ensures that state transitions occur when all required conditions are met.</p>\n\n<p>If conditions are met, this function updates the promise\u2019s state and value. It then triggers the process function for further processing.</p>\n\n<p>The process function carries out the right action based on the transition (e.g. pending to fulfilled) and is explained later.</p>\n\n<pre><code>function transition (state, value) {\n  if (this.state === state ||\n    this.state !== validStates.PENDING ||\n    !isValidState(state)) {\n      return;\n    }\n\n  this.value = value;\n  this.state = state;\n  this.process();\n}\n</code></pre>\n\n<p><strong>The Then function</strong></p>\n\n<p>The then function takes in two optional arguments (onFulfill and onReject handlers) and must return a new promise. Two major requirements:</p>\n\n<ol>\n<li><p>The base promise (the one on which then is called) needs to create a new promise using the passed in handlers; the base also stores an internal reference to this created promise so it can be invoked once the base promise is fulfilled/rejected.</p></li>\n<li><p>If the base promise  is settled (i.e. fulfilled or rejected), then the appropriate handler should be called immediately. Adehun.js handles this scenario by calling process in the then function.</p></li>\n</ol>\n\n<p>``</p>\n\n<pre><code>function then(onFulfilled, onRejected) {\n    var queuedPromise = new Adehun();\n    if (Utils.isFunction(onFulfilled)) {\n        queuedPromise.handlers.fulfill = onFulfilled;\n    }\n\n    if (Utils.isFunction(onRejected)) {\n        queuedPromise.handlers.reject = onRejected;\n    }\n\n    this.queue.push(queuedPromise);\n    this.process();\n\n    return queuedPromise;\n}`\n</code></pre>\n\n<p><strong>The Process function \u2013 Processing Transitions</strong></p>\n\n<p>This is called after state transitions or when the then function is invoked. Thus it needs to check for pending promises since it might have been invoked from the then function.</p>\n\n<p>Process runs the Promise Resolution procedure on all internally stored promises (i.e. those that were attached to the base promise through the then function) and enforces the following Promise/A+ requirements:</p>\n\n<ol>\n<li><p>Invoking the handlers asynchronously using the Utils.runAsync helper (a thin wrapper around setTimeout (setImmediate will also work)).</p></li>\n<li><p>Creating fallback handlers for the onSuccess and onReject handlers if they are missing.</p></li>\n<li><p>Selecting the correct handler function based on the promise state e.g. fulfilled or rejected.</p></li>\n<li><p>Applying the handler to the base promise\u2019s value. The value of this operation is passed to the Resolve function to complete the promise processing cycle.</p></li>\n<li><p>If an error occurs, then the attached promise is immediately rejected.</p>\n\n<p>function process() {\n    var that = this,\n        fulfillFallBack = function(value) {\n            return value;\n        },\n        rejectFallBack = function(reason) {\n            throw reason;\n        };</p>\n\n<pre><code>if (this.state === validStates.PENDING) {\n    return;\n}\n\nUtils.runAsync(function() {\n    while (that.queue.length) {\n        var queuedP = that.queue.shift(),\n            handler = null,\n            value;\n\n        if (that.state === validStates.FULFILLED) {\n            handler = queuedP.handlers.fulfill ||\n                fulfillFallBack;\n        }\n        if (that.state === validStates.REJECTED) {\n            handler = queuedP.handlers.reject ||\n                rejectFallBack;\n        }\n\n        try {\n            value = handler(that.value);\n        } catch (e) {\n            queuedP.reject(e);\n            continue;\n        }\n\n        Resolve(queuedP, value);\n    }\n});\n</code></pre>\n\n<p>}</p></li>\n</ol>\n\n<p><strong>The Resolve function \u2013 Resolving Promises</strong></p>\n\n<p>This is probably the most important part of the promise implementation since it handles promise resolution. It accepts two parameters \u2013 the promise and its resolution value.</p>\n\n<p>While there are lots of checks for various possible resolution values; the interesting resolution scenarios are two \u2013 those involving a promise being passed in and a thenable  (an object with a then value).</p>\n\n<ol>\n<li>Passing in a Promise value</li>\n</ol>\n\n<p>If the resolution value is another promise, then the promise must adopt this resolution value\u2019s state. Since this resolution value can be pending or settled, the easiest way to do this is to attach a new then handler to the resolution value and handle the original promise therein. Whenever it settles, then the original promise will be resolved or rejected.</p>\n\n<ol start=\"2\">\n<li>Passing in a thenable value</li>\n</ol>\n\n<p>The catch here is that the thenable value\u2019s then function must be invoked  only once (a good use for the once wrapper from functional programming). Likewise, if the retrieval of the then function throws an Exception, the promise is to be rejected immediately.</p>\n\n<p>Like before, the then function is invoked with functions that ultimately resolve or reject the promise but the difference here is the called flag which is set on the first call and turns subsequent calls are no ops.</p>\n\n<pre><code>function Resolve(promise, x) {\n  if (promise === x) {\n    var msg = \"Promise can't be value\";\n    promise.reject(new TypeError(msg));\n  }\n  else if (Utils.isPromise(x)) {\n    if (x.state === validStates.PENDING){\n      x.then(function (val) {\n        Resolve(promise, val);\n      }, function (reason) {\n        promise.reject(reason);\n      });\n    } else {\n      promise.transition(x.state, x.value);\n    }\n  }\n  else if (Utils.isObject(x) ||\n           Utils.isFunction(x)) {\n    var called = false,\n        thenHandler;\n\n    try {\n      thenHandler = x.then;\n\n      if (Utils.isFunction(thenHandler)){\n        thenHandler.call(x,\n          function (y) {\n            if (!called) {\n              Resolve(promise, y);\n              called = true;\n            }\n          }, function (r) {\n            if (!called) {\n              promise.reject(r);\n              called = true;\n            }\n       });\n     } else {\n       promise.fulfill(x);\n       called = true;\n     }\n   } catch (e) {\n     if (!called) {\n       promise.reject(e);\n       called = true;\n     }\n   }\n }\n else {\n   promise.fulfill(x);\n }\n}\n</code></pre>\n\n<p><strong>The Promise Constructor</strong></p>\n\n<p>And this is the one that puts it all together. The fulfill and reject functions are syntactic sugar that pass no-op functions to resolve and reject.</p>\n\n<pre><code>var Adehun = function (fn) {\n var that = this;\n\n this.value = null;\n this.state = validStates.PENDING;\n this.queue = [];\n this.handlers = {\n   fulfill : null,\n   reject : null\n };\n\n if (fn) {\n   fn(function (value) {\n     Resolve(that, value);\n   }, function (reason) {\n     that.reject(reason);\n   });\n }\n};\n</code></pre>\n\n<p>I hope this helped shed more light into the way promises work.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How is a promise/defer library like <a href=\"https://github.com/kriskowal/q\">q</a> implemented?  I was trying to read the source code but found it pretty hard to understand, so I thought it'd be great if someone could explain to me, from a high level, what are the techniques used to implement promises in single-thread JS environments like Node and browsers.</p>\n",
            "last_activity_date": 1425574378,
            "question_id": 17718673,
            "score": 33,
            "tags": [
                "javascript",
                "promise"
            ],
            "title": "How is a promise/defer library implemented?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>A good use case of <code>$provide.decorator</code> is when you need to do minor \"tweak\" on some third-party/upstream service, on which your module depends, while leaving the service intact (because you are not the owner/maintainer of the service). <a href=\"http://plnkr.co/edit/lj9srM2KXZmwmTxLb1p7?p=preview\">Here</a> is a demonstration on plunkr.</p>\n",
                    "is_accepted": true,
                    "score": 87
                },
                {
                    "body": "<p>Decorators allow us to separate out cross-cutting concerns and allow services to preserve SRP without worrying about \"infrastructure\" code.</p>\n\n<p>Practical uses of decorators:</p>\n\n<ul>\n<li>Caching: if we have a service which makes potentially expensive HTTP calls, we can wrap the service in a caching decorator which checks local storage before making the external call.</li>\n<li>Debugging/Tracing: have a switch depending on your development/production configuration which decorates your services with debugging or tracing wrappers. </li>\n<li>Throttling : wrap frequently triggered calls in a debouncing wrapper. Allows us to easily interact with rate-limited services, for example.</li>\n</ul>\n\n<p>In all these cases, we limit the code in the service to its main responsibility.</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p><code>decorator</code> can intercept service instance created by <code>factory, service, value, provider</code>, and gives the options to change some <code>instance(service)</code> that is otherwise not configurable / with options.</p>\n\n<p>It can also provide mock up instances for testing purpose, for example <code>$http</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://odetocode.com/blogs/scott/archive/2013/06/06/decorating-angularjs-services.aspx\">Here</a> is another lovely example by Scott Allen demonstrating the use of $decorator. Its one of most succinct and simplest examples I've seen so far.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I'm curious what exactly decorators are in AngularJS. There isn't much information online for decorators save for a blurb in the <a href=\"http://docs.angularjs.org/api/AUTO.%24provide#decorator\">AngularJS documentation</a> and a brief (albeit interesting) mention in a <a href=\"http://www.youtube.com/watch?v=VxuN6WO3tIA\">youtube video</a>.</p>\n\n<p>As the Angular guys put it a decorator is:</p>\n\n<blockquote>\n  <p>Decoration of service, allows the decorator to intercept the service\n  instance creation. The returned instance may be the original instance,\n  or a new instance which delegates to the original instance.</p>\n</blockquote>\n\n<p>I don't really know what that <em>means</em>, and I'm not sure why you would separate this logic from the service itself. For example if I wanted to return something different under different conditions I would just pass different arguments to the relevant functions or use another function sharing that private state.</p>\n\n<p>I'm still kind of an AngularJS n00b so I'm sure it's just ignorance and/or bad habits I've picked up.</p>\n",
            "last_activity_date": 1407961375,
            "question_id": 16075982,
            "score": 60,
            "tags": [
                "javascript",
                "angularjs",
                "decorator"
            ],
            "title": "AngularJS - What are &quot;decorators&quot; and how are they used?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I suppose your html page is hosted on a different port. Same origin policy <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy#Origin_determination_rules\" rel=\"nofollow\">requires</a> in most browsers that the loaded file be on the same port than the loading file.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If your simple test page is located on other protocol/domain/port than your hello world node.js example you are doing cross-domain requests and violating <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\">same origin policy</a> therefore your jQuery ajax calls (get and load) are failing silently. To get this working cross-domain you should use <a href=\"http://en.wikipedia.org/wiki/JSONP#JSONP\">JSONP</a> based format. For example node.js code:</p>\n\n<pre><code>var http = require('http');\n\nhttp.createServer(function (req, res) {\n    console.log('request received');\n    res.writeHead(200, {'Content-Type': 'text/plain'});\n    res.end('_testcb(\\'{\"message\": \"Hello world!\"}\\')');\n}).listen(8124);\n</code></pre>\n\n<p>and client side JavaScript/jQuery:</p>\n\n<pre><code>$(document).ready(function() {\n    $.ajax({\n        url: 'http://192.168.1.103:8124/',\n        dataType: \"jsonp\",\n        jsonpCallback: \"_testcb\",\n        cache: false,\n        timeout: 5000,\n        success: function(data) {\n            $(\"#test\").append(data);\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            alert('error ' + textStatus + \" \" + errorThrown);\n        }\n    });\n});\n</code></pre>\n\n<p>There are also other ways how to get this working, for example by setting up <a href=\"http://en.wikipedia.org/wiki/Reverse_proxy\">reverse proxy</a> or build your web application entirely with framework like <a href=\"http://expressjs.com/\">express</a>.</p>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p>Thanks to yojimbo for his answer.  To add to his sample, I wanted to use the jquery method $.getJSON  which puts a random callback in the query string so I also wanted to parse that out in the Node.js.  I also wanted to pass an object back and use the stringify function.</p>\n\n<p>This is my Client Side code.</p>\n\n<pre><code>$.getJSON(\"http://localhost:8124/dummy?action=dostuff&amp;callback=?\",\nfunction(data){\n  alert(data);\n},\nfunction(jqXHR, textStatus, errorThrown) {\n    alert('error ' + textStatus + \" \" + errorThrown);\n});\n</code></pre>\n\n<p>This is my Server side Node.js</p>\n\n<pre><code>var http = require('http');\nvar querystring = require('querystring');\nvar url = require('url');\n\nhttp.createServer(function (req, res) {\n    //grab the callback from the query string   \n    var pquery = querystring.parse(url.parse(req.url).query);   \n    var callback = (pquery.callback ? pquery.callback : '');\n\n    //we probably want to send an object back in response to the request\n    var returnObject = {message: \"Hello World!\"};\n    var returnObjectString = JSON.stringify(returnObject);\n\n    //push back the response including the callback shenanigans\n    res.writeHead(200, {'Content-Type': 'text/plain'});\n    res.end(callback + '(\\'' + returnObjectString + '\\')');\n}).listen(8124);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Use something like the following on the server side:</p>\n\n<pre><code>http.createServer(function (request, response) {\n    if (request.headers['x-requested-with'] == 'XMLHttpRequest') {\n        // handle async request\n        var u = url.parse(request.url, true); //not needed\n\n        response.writeHead(200, {'content-type':'text/json'})\n        response.end(JSON.stringify(some_array.slice(1, 10))) //send elements 1 to 10\n    } else {\n        // handle sync request (by server index.html)\n        if (request.url == '/') {\n            response.writeHead(200, {'content-type': 'text/html'})\n            util.pump(fs.createReadStream('index.html'), response)\n        } \n        else \n        {\n            // 404 error\n        }\n    }\n}).listen(31337)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>This is similar to <a href=\"http://stackoverflow.com/questions/2558606/stream-data-with-node-js\">Stream data with Node.js</a>, but I don't feel that question was answered sufficiently.</p>\n\n<p>I'm trying to use a jQuery ajax call (get, load, getJSON) to transfer data between a page and a node.js server. I can hit the address from my browser and see 'Hello World!\", but when I try this from my page, it fails and shows that I get no response back. I setup a simple test page and hello world example to test this:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;get test&lt;/title&gt; \n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Get Test&lt;/h1&gt;\n    &lt;div id=\"test\"&gt;&lt;/div&gt;\n\n    &lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;\n        $(document).ready(function() {\n            //alert($('h1').length);\n            $('#test').load('http://192.168.1.103:8124/');\n            //$.get('http://192.168.1.103:8124/', function(data) {                \n            //  alert(data);\n            //});\n        });\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>and</p>\n\n<pre><code>var http = require('http');\n\nhttp.createServer(function (req, res) {\n    console.log('request received');\n    res.writeHead(200, {'Content-Type': 'text/plain'});\n    res.end('Hello World\\n');\n}).listen(8124);\n</code></pre>\n",
            "last_activity_date": 1315337876,
            "question_id": 5373987,
            "score": 50,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "ajax",
                "node.js"
            ],
            "title": "how to use jQuery ajax calls with node.js"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Using an object literal (a.k.a. object literal pattern) will not pollute the global namespace as severely as using many functions declared globally will, and also helps to organise code in a logical fashion</p>\n\n<p>For example, this object literal</p>\n\n<pre><code>var obj = {\n              find : function(elem) { /* find code */ },\n              doSomething: function() { /* doSomething code */ },\n              doSomethingElse: function() { /* doSomethingElse code */ }\n          }\n</code></pre>\n\n<p>compared to </p>\n\n<pre><code>function find(elem) { /* find code */ },\nfunction doSomething() { /* doSomething code */ },\nfunction doSomethingElse() { /* doSomethingElse code */ }\n</code></pre>\n\n<p>will create only one property on the global object compared to three. You can then easily use the functions like so</p>\n\n<pre><code>obj.doSomething();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Rebecca Murphey did a talk on Object Literals at this year's jQuery Conference. One of the best reasons to use them is simply good code organization.</p>\n\n<p>Here is Rebecca's write up on the Object Literal Pattern : <a href=\"http://rmurphey.com/blog/2009/10/15/using-objects-to-organize-your-code/\">http://rmurphey.com/blog/2009/10/15/using-objects-to-organize-your-code/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>As Russ Cam said, you avoid polluting the global namespace, which is very important in these days of combining scripts from multiple locations (TinyMCE, etc.).</p>\n\n<p>As Alex Sexton said, it makes for good code organisation as well.</p>\n\n<p>If you're using this technique, I'd suggest using the module pattern. This still uses object literals, but as the return value from a scoping function:</p>\n\n<pre><code>var MyThingy = (function() {\n\n    function doSomethingCool() {\n        ...\n    }\n\n    function internalSomething() {\n        ....\n    }\n\n    function anotherNiftyThing() {\n        // Note that within the scoping function, functions can\n        // call each other direct.\n        doSomethingCool();\n        internalSomething();\n    }\n\n    return {\n        doSomethingCool: doSomethingCool,\n        anotherNiftyThing: anotherNiftyThing\n    };\n})();\n</code></pre>\n\n<p>External use:</p>\n\n<pre><code>MyThingy.doSomethingCool();\n</code></pre>\n\n<p>The scoping function is wrapped around all of your functions, and then you call it immediately and store its return value. Advantages:</p>\n\n<ul>\n<li>Functions are declared normally and therefore have <em>names</em>.  (Whereas with the <code>{name: function() { ... }}</code> format, all of your functions are anonymous, even though the properties referencing them have names.)  Names help tools help you, from showing call stacks in a debugger, to telling you what function threw an exception.</li>\n<li>Gives you the freedom of having private functions only used by your module (such as my <code>internalSomething</code> above).  No other code on the page can call those functions; they're truly private.  Only the ones you export at the end, in the return statement, are visible outside the scoping function.</li>\n<li>Makes it easy to return different functions depending on environment, if the implementation just changes completely (such as IE-vs-W3C stuff, or SVG vs. Canvas, etc.).</li>\n</ul>\n\n<p>Example of returning different functions:</p>\n\n<pre><code>var MyUtils = (function() {\n    function hookViaAttach(element, eventName, handler) {\n        element.attachEvent('on' + eventName, handler);\n    }\n\n    function hookViaListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n    }\n\n    return {\n        hook: window.attachEvent ? hookViaAttach : hookViaListener\n    };\n})();\n\nMyUtils.hook(document.getElementById('foo'), 'click', /* handler goes here */);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>Ive always used object literals because they are a clear way to organise code. Which is why I don't like prototype, it's too messy.</p>\n\n<p>Functions don't polute the name space as someone mentioned above any more than object literals.</p>\n\n<p>You could easily write a literal like</p>\n\n<pre><code>var obj = {}\nvar find = function(elem) { /* find code */ },\nvar doSomething = function() { /* doSomething code */ },\nvar doSomethingElse = function() { /* doSomethingElse code */ }\n</code></pre>\n\n<p>which would polute by creating lots of global objects the same the same as the functions. similarly you could do:</p>\n\n<pre><code>(function() {\nfunction find(elem) { /* find code */ },\nfunction doSomething() { /* doSomething code */ },\nfunction doSomethingElse() { /* doSomethingElse code */ }\n})();\n</code></pre>\n\n<p>which would not create those global objects (everything is an object in JS)</p>\n\n<p>that way you still don't create loads of global objects.</p>\n\n<p>To my mind object literals have two advantages. One they are used by many plugins such as jQuery so people are familier and they are easy to read. Making them easy to pass through data into a plugin. It's easy to create both public and private methods.... </p>\n\n<p>They can be slow though as every time you create an instance of the object all it's methods are duplicated. It's my understanding that that isn't the case with prototype as you have one copy of the methods and new ojects simply reference the prototype.</p>\n\n<p>I could be wrong of course...</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've read that rather than simply writing a bunch of functions, I should use object literal.</p>\n\n<p>Can someone explain what the advantages of object literal are with examples, because I don't understand thus far.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1383965086,
            "question_id": 1600130,
            "score": 29,
            "tags": [
                "javascript",
                "object-literal"
            ],
            "title": "JavaScript - Advantages of object literal"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><a href=\"http://en.wikipedia.org/wiki/Common_logarithm#Numeric_value\"><img src=\"http://upload.wikimedia.org/math/b/8/6/b865df69b449daf0523e9a19bb86603c.png\" alt=\"Logarithm for base 10\"></a></p>\n\n<pre><code>function log10(val) {\n  return Math.log(val) / Math.LN10;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 213
                },
                {
                    "body": "<p>Easy, just change the base by dividing by the log(10). There is even a constant to help you</p>\n\n<pre><code>Math.log(num) / Math.LN10;\n</code></pre>\n\n<p>which is the same as:</p>\n\n<pre><code>Math.log(num) / Math.log(10);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<pre><code>Math.log10 = function(n) {\n    return (Math.log(n)) / (Math.log(10));\n}\n</code></pre>\n\n<p>Then you can do</p>\n\n<pre><code>Math.log10(your_number);\n</code></pre>\n\n<p><strong>NOTE:</strong> Initially I thought to do <code>Math.prototype.log10 = ...</code> to do this, but user <a href=\"http://stackoverflow.com/users/5445/cms\">CMS</a> pointed out that Math doesn't work this way, so I edited out the <code>.prototype</code> part.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You can simply divide the logarithm of your value, and the logarithm of the desired base, also you could override the <code>Math.log</code> method to accept an optional base argument:</p>\n\n<pre><code>Math.log = (function() {\n  var log = Math.log;\n  return function(n, base) {\n    return log(n)/(base ? log(base) : 1);\n  };\n})();\n\nMath.log(5, 10);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>the answer here would cause obvious precision problem and is not reliable in some use cases</p>\n\n<pre><code>&gt; Math.log(10)/Math.LN10\n1\n\n&gt; Math.log(100)/Math.LN10\n2\n\n&gt; Math.log(1000)/Math.LN10\n2.9999999999999996\n\n&gt; Math.log(10000)/Math.LN10\n4\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>Math.logBase = function(n, base) {\n    return Math.log(n) / Math.log(base);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>FF 25+ supports a <a href=\"https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/log10\" rel=\"nofollow\"><code>Math.log10</code></a> method. You may to use polyfill:</p>\n\n<pre><code>if (!Math.log10) Math.log10 = function(t){ return Math.log(t)/Math.LN10; };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I need a <code>log</code> function for JavaScript, but it needs to be base 10. I can't see any listing for this, so I'm assuming it's not possible. Are there any math wizards out there who know a solution for this?</p>\n",
            "last_activity_date": 1406890085,
            "question_id": 3019278,
            "score": 127,
            "tags": [
                "javascript",
                "math",
                "logarithm"
            ],
            "title": "How can I specify the base for Math.log() in JavaScript?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Yup, it's called <a href=\"http://goessner.net/articles/JsonPath/\">JSONPath</a>:</p>\n\n<p>It's also integrated into <a href=\"http://www.sitepen.com/blog/2008/03/17/jsonpath-support/\">DOJO</a>.</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>I think JSONQuery is a superset of JSONPath and thus <a href=\"http://dojotoolkit.org/reference-guide/dojox/json/query.html\" rel=\"nofollow\">replaces it in dojo</a>. Then there's also <a href=\"http://www.sitepen.com/blog/2010/11/02/resource-query-language-a-query-language-for-the-web-nosql/\" rel=\"nofollow\">RQL</a>.</p>\n\n<p>From Dojo documentation:</p>\n\n<blockquote>\n  <p>JSONQuery is an extended version of JSONPath with additional features\n  for security, ease of use, and a comprehensive set of data querying\n  tools including filtering, recursive search, sorting, mapping, range\n  selection, and flexible expressions with wildcard string comparisons\n  and various operators.</p>\n</blockquote>\n\n<p><a href=\"http://jsonselect.org/\" rel=\"nofollow\">JSONselect</a> has another point of view on the question (CSS selector-like, rather than XPath) and has a <a href=\"https://github.com/lloyd/JSONSelect\" rel=\"nofollow\">JavaScript implementation</a>.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>XQuery can be used to query JSON, provided that the processor offers JSON support. This is a straightforward example how BaseX can be used to find objects with \"id\" = 1:</p>\n\n<pre><code>json:parse('[\n    { \"id\": 1, \"name\": \"One\", \"objects\": [\n        { \"id\": 1, \"name\": \"Response 1\", \"objects\": [ \"etc.\" ] }\n    ]}\n]')//value[.//id = 1]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Three other alternatives I am aware of are</p>\n\n<ol>\n<li><a href=\"http://jsoniq.com/\" rel=\"nofollow\">JSONiq</a> specification, which specifies two subtypes of languages: one that hides XML details and provides JS-like syntax, and one that enriches XQuery syntax with JSON constructors and such. <a href=\"http://www.zorba-xquery.com/html/index\" rel=\"nofollow\">Zorba</a> implements JSONiq.</li>\n<li><a href=\"http://developer.marklogic.com/code/corona\" rel=\"nofollow\">Corona</a>, which builds on top of MarkLogic provides a REST interface for storing, managing, and searching XML, JSON, Text and Binary content.</li>\n<li><a href=\"http://developer.marklogic.com/products\" rel=\"nofollow\">MarkLogic</a> 6 and later provide a similar REST interface as Corona out of the box.</li>\n</ol>\n\n<p>HTH.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Try to using <a href=\"https://github.com/dfilatov/jspath\">JSPath</a></p>\n\n<p>JSPath is a domain-specific language (DSL) that enables you to navigate and find data within your JSON documents. Using JSPath, you can select items of JSON in order to retrieve the data they contain.</p>\n\n<p>JSPath for JSON like an XPath for XML.</p>\n\n<p>It is heavily optimized both for Node.js and modern browsers.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p><a href=\"http://tools.ietf.org/html/draft-ietf-appsawg-json-pointer-09\" rel=\"nofollow\">Json Pointer</a> seem's to be getting growing support too.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To summarise some of the current options for traversing/filtering JSON data, and provide some syntax examples...</p>\n\n<ul>\n<li><p><a href=\"https://github.com/dfilatov/jspath\">JSPath</a>\n<br><code>.automobiles{.maker === \"Honda\" &amp;&amp; .year &gt; 2009}.model</code></p></li>\n<li><p><a href=\"http://jsonselect.org/\">json:select()</a> (inspired more by CSS selectors)\n<br><code>.automobiles .maker:val(\"Honda\") .model</code></p></li>\n<li><p><a href=\"http://goessner.net/articles/JsonPath/\">JSONPath</a> (inspired more by XPath)\n<br><code>$.automobiles[?(@.maker='Honda')].model</code></p></li>\n</ul>\n\n<p>I think JSPath looks the nicest, so I'm going to try and integrate it with my AngularJS + CakePHP app.</p>\n\n<p><em>(I originally posted this answer in <a href=\"http://stackoverflow.com/a/15727429/195835\">another thread</a> but thought it would be useful here, also.)</em></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://adriank.github.io/ObjectPath/\" rel=\"nofollow\">ObjectPath</a> is a query language similar to XPath or JSONPath, but much more powerful thanks to embedded arithmetic calculations, comparison mechanisms and built-in functions.\nSee the syntax:</p>\n\n<p>Find in the shop all shoes of red color and price less than 50</p>\n\n<p>$..shoes.*[color is \"red\" and price &lt; 50]</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"https://github.com/dragonworx/jsel\" rel=\"nofollow\">Jsel</a> is awesome and is based on a real XPath engine. It allows you to create XPath expressions to find any type of JavaScript data, not just objects (strings too).</p>\n\n<p>You can create custom schemas and mappings to give you complete control over how your data is walkable by the XPath engine. A schema is a way of defining how elements, children, attributes, and node values are defined in your data. Then you can create your own expressions to suit.</p>\n\n<p>Given you had a variable called <code>data</code> which contained the JSON from the question, you could use jsel to write:</p>\n\n<pre><code>jsel(data).select(\"//*[@id=3]\")\n</code></pre>\n\n<p>This will return any node with an <code>id</code> attribute of 3. An attribute is any primitive (string, number, date, regex) value within an object.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>@Naftule - with \"defiant.js\", it is possible to query a JSON structure with XPath expressions. Check out this evaluator to get an idea of how it works:</p>\n\n<p><a href=\"http://www.defiantjs.com/#xpath_evaluator\" rel=\"nofollow\">http://www.defiantjs.com/#xpath_evaluator</a></p>\n\n<p>Unlike JSONPath, \"defiant.js\" delivers the full-scale support of the query syntax - of XPath on JSON structures.</p>\n\n<p>The source code of defiant.js can be found here:<br/>\n<a href=\"https://github.com/hbi99/defiant.js\" rel=\"nofollow\">https://github.com/hbi99/defiant.js</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>When searching for items in complex JSON arrays and hashes, like:</p>\n\n<pre><code>[\n    { \"id\": 1, \"name\": \"One\", \"objects\": [\n        { \"id\": 1, \"name\": \"Response 1\", \"objects\": [\n            // etc.\n        }]\n    }\n]\n</code></pre>\n\n<p>Is there some kind of query language I can used to find an item <code>in [0].objects where id = 3</code>? </p>\n",
            "last_activity_date": 1400071202,
            "question_id": 8481380,
            "score": 83,
            "tags": [
                "javascript",
                "json",
                "xpath",
                "xquery"
            ],
            "title": "Is there a JSON equivalent of XQuery/XPath?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Random character:</p>\n\n<pre><code>String.fromCharCode(i); //where is an int\n</code></pre>\n\n<p>Random int:</p>\n\n<pre><code>Math.floor(Math.random()*100);\n</code></pre>\n\n<p>Put it all together:</p>\n\n<pre><code>function randomNum(hi){\n    return Math.floor(Math.random()*hi);\n} \nfunction randomChar(){\n    return String.fromCharCode(randomNum(100));\n}\nfunction randomString(length){\n   var str = \"\";\n   for(var i = 0; i &lt; length; ++i){\n        str += randomChar();\n   }\n   return str;\n}\nvar RandomString = randomString(32); //32 length string\n</code></pre>\n\n<p>Fiddle: <a href=\"http://jsfiddle.net/maniator/QZ9J2/\" rel=\"nofollow\">http://jsfiddle.net/maniator/QZ9J2/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If you only want to allow specific characters, you could also do it like this:</p>\n\n<pre><code>function randomString(length, chars) {\n    var result = '';\n    for (var i = length; i &gt; 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\n    return result;\n}\nvar rString = randomString(32, '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n</code></pre>\n\n<p>Here's a jsfiddle to demonstrate: <a href=\"http://jsfiddle.net/wSQBx/\">http://jsfiddle.net/wSQBx/</a></p>\n\n<p>Another way to do it could be to use a special string that tells the function what types of characters to use. You could do that like this:</p>\n\n<pre><code>function randomString(length, chars) {\n    var mask = '';\n    if (chars.indexOf('a') &gt; -1) mask += 'abcdefghijklmnopqrstuvwxyz';\n    if (chars.indexOf('A') &gt; -1) mask += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    if (chars.indexOf('#') &gt; -1) mask += '0123456789';\n    if (chars.indexOf('!') &gt; -1) mask += '~`!@#$%^&amp;*()_+-={}[]:\";\\'&lt;&gt;?,./|\\\\';\n    var result = '';\n    for (var i = length; i &gt; 0; --i) result += mask[Math.round(Math.random() * (mask.length - 1))];\n    return result;\n}\n\nconsole.log(randomString(16, 'aA'));\nconsole.log(randomString(32, '#aA'));\nconsole.log(randomString(64, '#A!'));\n</code></pre>\n\n<p>Fiddle: <a href=\"http://jsfiddle.net/wSQBx/2/\">http://jsfiddle.net/wSQBx/2/</a></p>\n\n<p>Alternatively, to use the base36 method as described below you could do something like this:</p>\n\n<pre><code>function randomString(length) {\n    return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 65
                },
                {
                    "body": "<p>I just came across this as a really nice and elegant solution:</p>\n\n<pre><code>Math.random().toString(36).slice(2)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 120
                },
                {
                    "body": "<p>Or to build upon what Jar Jar suggested, this is what I used on a recent project (to overcome length restrictions):</p>\n\n<pre><code>var randomString = function (len, bits)\n{\n    bits = bits || 36;\n    var outStr = \"\", newStr;\n    while (outStr.length &lt; len)\n    {\n        newStr = Math.random().toString(bits).slice(2);\n        outStr += newStr.slice(0, Math.min(newStr.length, (len - outStr.length)));\n    }\n    return outStr.toUpperCase();\n};\n</code></pre>\n\n<p>Use:</p>\n\n<pre><code>randomString(12, 16); // 12 hexadecimal characters\nrandomString(200); // 200 alphanumeric characters\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>for 32 characters:</p>\n\n<pre><code>for(var c = ''; c.length &lt; 32;) c += Math.random().toString(36).substr(2, 1)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When I saw this question I thought of when I had to generate UUIDs. I can't take credit for the code, as I am sure I found it here on stackoverflow. If you dont want the dashes in your string then take out the dashes. Here is the function:</p>\n\n<pre><code>function generateUUID() {\n    var d = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c) {\n        var r = (d + Math.random()*16)%16 | 0;\n        d = Math.floor(d/16);\n        return (c=='x' ? r : (r&amp;0x7|0x8)).toString(16);\n    });\n    return uuid.toUpperCase();\n}\n</code></pre>\n\n<p>Fiddle: <a href=\"http://jsfiddle.net/nlviands/fNPvf/11227/\" rel=\"nofollow\">http://jsfiddle.net/nlviands/fNPvf/11227/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What's the shortest way (within reason) to generate a random alpha-numeric (uppercase, lowercase, and numbers) string in JavaScript to use as a probably-unique identifier?</p>\n",
            "last_activity_date": 1423336215,
            "question_id": 10726909,
            "score": 46,
            "tags": [
                "javascript",
                "random"
            ],
            "title": "Random alpha-numeric string in JavaScript?"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>Modify your comparator function to return some reversely proporitional value instead of  returning the data that you are currently.\nSome code from : <a href=\"http://documentcloud.github.com/backbone/#Collection-comparator\">http://documentcloud.github.com/backbone/#Collection-comparator</a></p>\n\n<p>Example:</p>\n\n<pre><code>var Chapter  = Backbone.Model;\nvar chapters = new Backbone.Collection;\n\n/* Method 1: This sorts by page number */\nchapters.comparator = function(chapter) {\n  return chapter.get(\"page\");\n};\n\n/* Method 2: This sorts by page number in reverse */\nchapters.comparator = function(chapter) {\n  return -chapter.get(\"page\");\n};\n\nchapters.add(new Chapter({page: 9, title: \"The End\"}));\nchapters.add(new Chapter({page: 5, title: \"The Middle\"}));\nchapters.add(new Chapter({page: 1, title: \"The Beginning\"}));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Well, you can return negative values from comparator. If we take, for example, the example from Backbone's site and want to reverse the order, it will look like this:</p>\n\n<pre><code>var Chapter  = Backbone.Model;\nvar chapters = new Backbone.Collection;\n\nchapters.comparator = function(chapter) {\n  return -chapter.get(\"page\"); // Note the minus!\n};\n\nchapters.add(new Chapter({page: 9, title: \"The End\"}));\nchapters.add(new Chapter({page: 5, title: \"The Middle\"}));\nchapters.add(new Chapter({page: 1, title: \"The Beginning\"}));\n\nalert(chapters.pluck('title'));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 101
                },
                {
                    "body": "<p>Backbone.js's collection comparator relies on the Underscore.js method _.sortBy. The way sortBy is implemented ends up \"wrapping\" up javascript .sort() in a way that makes sorting strings in reverse difficult. Simple negation of the string ends up returning NaN and breaks the sort. </p>\n\n<p>If you need to perform a reverse sort with Strings, such as reverse alphabetical sort, here's a really hackish way of doing it:</p>\n\n<pre><code>comparator: function (Model) {\n  var str = Model.get(\"name\");\n  str = str.toLowerCase();\n  str = str.split(\"\");\n  str = _.map(str, function(letter) { \n    return String.fromCharCode(-(letter.charCodeAt(0)));\n  });\n  return str;\n}\n</code></pre>\n\n<p>It's by no means pretty, but it is a \"string negator\". If you don't have any qualms with modifying native object types in javascript, you could make you code clearer by extracting the string negator and adding it as a method on String.Prototype. However you probably only want to do this if you know what you are doing, because modifying native object types in javascript can have unforeseen consequences.</p>\n",
                    "is_accepted": false,
                    "score": 41
                },
                {
                    "body": "<p>My solution was to reverse results after sort. </p>\n\n<p>To prevent double rendering first sort with silent, then trigger 'reset'.</p>\n\n<pre><code>collections.sort({silent:true})\ncollections.models = collections.models.reverse();\ncollections.trigger('reset', collections, {});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Personally, I'm not that happy with any of the solutions given here: </p>\n\n<ul>\n<li><p>The multiplying by -1 solution fails to work when the sort type is non-numeric. Although there are ways around this (by calling <code>Date.getTime()</code> for example) these cases are specific. I would like a general way to reverse the direction of any sort, without having to worry about the specific type of the field being sorted.</p></li>\n<li><p>For the string solution, constructing a string one character at a time seems like a performance bottleneck, especially when using large collections (or indeed, large sort field strings)</p></li>\n</ul>\n\n<p>Here's a solution that works nicely for String, Date and Numeric fields:</p>\n\n<p>Firstly, declare a comparator that will reverse the result of a result of a sortBy function, like this:</p>\n\n<pre><code>function reverseSortBy(sortByFunction) {\n  return function(left, right) {\n    var l = sortByFunction(left);\n    var r = sortByFunction(right);\n\n    if (l === void 0) return -1;\n    if (r === void 0) return 1;\n\n    return l &lt; r ? 1 : l &gt; r ? -1 : 0;\n  };\n}\n</code></pre>\n\n<p>Now, if you want to reverse the direction of the sort, all we need to do is:</p>\n\n<pre><code>var Chapter  = Backbone.Model;\nvar chapters = new Backbone.Collection;\n\n// Your normal sortBy function\nchapters.comparator = function(chapter) {\n  return chapter.get(\"title\"); \n};\n\n\n// If you want to reverse the direction of the sort, apply \n// the reverseSortBy function.\n// Assuming the reverse flag is kept in a boolean var called reverseDirection \nif(reverseDirection) {\n   chapters.comparator = reverseSortBy(chapters.comparator);\n}\n\nchapters.add(new Chapter({page: 9, title: \"The End\"}));\nchapters.add(new Chapter({page: 5, title: \"The Middle\"}));\nchapters.add(new Chapter({page: 1, title: \"The Beginning\"}));\n\nalert(chapters.pluck('title'));\n</code></pre>\n\n<p>The reason this works is that <code>Backbone.Collection.sort</code> behaves differently if the sort function has two arguments. In this case, it behaves in the same manner as the comparator passed into <code>Array.sort</code>. This solution works by adapting the single argument sortBy function into a two argument comparator and reversing the result.</p>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>This can be done elegantly by overriding sortBy method. Here is an example </p>\n\n<pre><code>var SortedCollection = Backbone.Collection.extend({\n\n   initialize: function () {\n       // Default sort field and direction\n       this.sortField = \"name\";\n       this.sortDirection = \"ASC\";\n   },\n\n   setSortField: function (field, direction) {\n       this.sortField = field;\n       this.sortDirection = direction;\n   },\n\n   comparator: function (m) {\n       return m.get(this.sortField);\n   },\n\n   // Overriding sortBy (copied from underscore and just swapping left and right for reverse sort)\n   sortBy: function (iterator, context) {\n       var obj = this.models,\n           direction = this.sortDirection;\n\n       return _.pluck(_.map(obj, function (value, index, list) {\n           return {\n               value: value,\n               index: index,\n               criteria: iterator.call(context, value, index, list)\n           };\n       }).sort(function (left, right) {\n           // swap a and b for reverse sort\n           var a = direction === \"ASC\" ? left.criteria : right.criteria,\n               b = direction === \"ASC\" ? right.criteria : left.criteria;\n\n           if (a !== b) {\n               if (a &gt; b || a === void 0) return 1;\n               if (a &lt; b || b === void 0) return -1;\n           }\n           return left.index &lt; right.index ? -1 : 1;\n       }), 'value');\n   }\n\n});\n</code></pre>\n\n<p>So you can use it like this: </p>\n\n<pre><code>var collection = new SortedCollection([\n  { name: \"Ida\", age: 26 },\n  { name: \"Tim\", age: 5 },\n  { name: \"Rob\", age: 55 }\n]);\n\n//sort by \"age\" asc\ncollection.setSortField(\"age\", \"ASC\");\ncollection.sort();\n\n//sort by \"age\" desc\ncollection.setSortField(\"age\", \"DESC\");\ncollection.sort();\n</code></pre>\n\n<p>This solution does not depend on the field type.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>// For numbers, dates, and other number-like things\nvar things = new Backbone.Collection;\nthings.comparator = function (a, b) { return b - a };\n\n// For strings\nthings.comparator = function (a, b) {\n  if (a === b) return 0;\n  return a &lt; b ? -1 : 1;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For reverse order on id:</p>\n\n<pre><code>comparator: function(object) { return (this.length - object.id) + 1; }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The following worked well for me:</p>\n\n<pre><code>comparator: function(a, b) {\n  // Optional call if you want case insensitive\n  name1 = a.get('name').toLowerCase();\n  name2 = b.get('name').toLowerCase();\n\n  if name1 &lt; name2\n    ret = -1;\n  else if name1 &gt; name2\n    ret = 1;\n  else\n    ret = 0;\n\n  if this.sort_dir === \"desc\"\n    ret = -ret\n  return ret;\n}\n\ncollection.sort_dir = \"asc\";\ncollection.sort(); // returns collection in ascending order\ncollection.sort_dir = \"desc\";\ncollection.sort(); // returns collection in descending order\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I had a slightly different requirement, in that I am displaying my models in a table, and I wanted to be able to sort them by any collumn (model property) and either ascending or descending.</p>\n\n<p>It has taken a fair amount of mucking around to get all the cases working (where values can be strings, empty strings, dates, numbers. However I think this is pretty close.</p>\n\n<pre><code>    inverseString: function(str)\n    {\n        return str.split(\"\").map(function (letter) { return String.fromCharCode(-(letter.charCodeAt(0))); }).join(\"\");\n    }\n    getComparisonValue: function (val, desc)\n    {\n        var v = 0;\n        // Is a string\n        if (typeof val === \"string\")\n        {\n            // Is an empty string, upgrade to a space to avoid strange ordering\n            if(val.length === 0)\n            {\n                val = \" \";\n                return desc ? this.inverseString(val) : val;\n            }                \n\n            // Is a (string) representing a number\n            v = Number(val);\n            if (!isNaN(v))\n            {\n                return desc ? -1 * v : v;\n            }\n            // Is a (string) representing a date\n            v = Date.parse(val);\n            if (!isNaN(v))\n            {\n                return desc ? -1 * v : v;\n            }\n            // Is just a string\n            return desc ? this.inverseString(val) : val;\n        }\n        // Not a string\n        else\n        {\n            return desc ? -1 * val : val;\n        }\n    },\n</code></pre>\n\n<p>use:</p>\n\n<pre><code>    comparator: function (item)\n    {\n        // Store the collumn to 'sortby' in my global model\n        var property = app.collections.global.get(\"sortby\");\n\n        // Store the direction of the sorting also in the global model\n        var desc = app.collections.global.get(\"direction\") === \"DESC\";\n\n        // perform a comparison based on property &amp; direction\n        return this.getComparisonValue(item.get(property), desc);\n    },\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I read some where that the Backbone comparator function either uses or mimics the JavaScript Array.prototype.sort() function. This means it uses either 1, -1 or 0 to decide on the sort order of each model in the collection. This constantly updates and the collection stays in the correct order based on the comparator.</p>\n\n<p>Info on Array.prototype.sort() can be found here: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2Fsort\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2Fsort</a></p>\n\n<p>Many answers on this question simply reverse the order just before rending it to the page. This is not ideal.</p>\n\n<p>Using the above article on Mozilla as a guide I was able to keep my collection sorted in reverse order using the following code, then we simply render the collection to page in it's current order and we can use a flag (reverseSortDirection) for reversing the order.</p>\n\n<pre><code>//Assuming this or similar will be in your Backbone.Collection.\nsortKey: 'id', //The field name of the item in your collection\n\nreverseSortDirection: false,\n\ncomparator: function(a, b) {\n\n  var sampleDataA = a.get(this.sortKey),\n      sampleDataB = b.get(this.sortKey);\n\n      if (this.reverseSortDirection) {\n        if (sampleDataA &gt; sampleDataB) { return -1; }\n        if (sampleDataB &gt; sampleDataA) { return 1; }\n        return 0;\n      } else {\n        if (sampleDataA &lt; sampleDataB) { return -1; }\n        if (sampleDataB &lt; sampleDataA) { return 1; }\n        return 0;\n      }\n\n},\n</code></pre>\n\n<p>Comparator except's two models, on changes to the collection or model the compartor function runs and changes the order of the collection. </p>\n\n<p>I have tested this approach with Numbers and Strings and it seems to be working perfectly for me.</p>\n\n<p>I really hope this answer can help as I have struggled with this problem many times and usually end up using a work around.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Here is a really simple solution, for those who simply want to flip the current order. It is useful if you have a table whose columns can be ordered in two directions.</p>\n\n<pre><code>collection.models = collection.models.reverse()\n</code></pre>\n\n<p>You can combine it with something like this if you are interested in the table case (coffeescript) :</p>\n\n<pre><code>  collection.comparator = (model) -&gt;\n    model.get(sortByType)\n\n  collection.sort()\n\n  if reverseOrder\n    collection.models = collection.models.reverse()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I just overrode the sort function to reverse the models array upon completion. Also I held off triggering the 'sort' event until after the reverse has been completed.</p>\n\n<pre><code>    sort : function(options){\n\n        options = options || {};\n\n        Backbone.Collection.prototype.sort.call(this, {silent:true});\n        this.models.reverse();\n\n        if (!options.silent){\n            this.trigger('sort', this, options);\n        }\n\n        return this;\n    },\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Recently ran into this issue and just decided to add an rsort method.</p>\n\n<pre><code>    Collection = Backbone.Collection.extend({\n            comparator:function(a, b){\n                return a&gt;b;\n            },\n            rsort:function(){\n                var comparator = this.comparator;\n\n                this.comparator = function(){\n                    return -comparator.apply(this, arguments);\n                }\n                this.sort();\n\n                this.comparator = comparator;\n\n            }\n    });\n</code></pre>\n\n<p>Hopefully someone will find this useful </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a quick and easy way to reverse-sort a collection's models using UnderscoreJS</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code> var reverseCollection = _.sortBy(this.models, function(model) {\r\n   return self.indexOf(model) * -1;\r\n });</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>With <a href=\"http://documentcloud.github.com/backbone/\">Backbone.js</a> I've got a collection set up with a comparator function. It's nicely sorting the models, but I'd like to reverse the order. How can I have the models be sorted in a descending rather than ascending manner?</p>\n",
            "last_activity_date": 1414911122,
            "question_id": 5013819,
            "score": 71,
            "tags": [
                "javascript",
                "backbone.js"
            ],
            "title": "reverse sort order with Backbone.js"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can't actually put it inside the text box unfortunately, only make it look like its inside it, which unfortunately means some css is needed :P</p>\n\n<p>Theory is wrap the input in a div, take all the borders and backgrounds off the input, then style the div up to look like the box. Then, drop in your button after the input box in the code and the jobs a good'un.</p>\n\n<p>Once you've got it to work anyway ;)</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>@thebluefox has summarized the most of all. You're only also forced to use JavaScript to make that button to work anyway. Here's an SSCCE, you can copy'n'paste'n'run it:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n        &lt;title&gt;SO question 2803532&lt;/title&gt;\n        &lt;script src=\"http://code.jquery.com/jquery-latest.min.js\"&gt;&lt;/script&gt;\n        &lt;script&gt;\n            $(document).ready(function() {\n                $('input.deletable').wrap('&lt;span class=\"deleteicon\" /&gt;').after($('&lt;span/&gt;').click(function() {\n                    $(this).prev('input').val('').focus();\n                }));\n            });\n        &lt;/script&gt;\n        &lt;style&gt;\n            span.deleteicon {\n                position: relative;\n            }\n            span.deleteicon span {\n                position: absolute;\n                display: block;\n                top: 5px;\n                right: 0px;\n                width: 16px;\n                height: 16px;\n                background: url('http://cdn.sstatic.net/stackoverflow/img/sprites.png?v=4') 0 -690px;\n                cursor: pointer;\n            }\n            span.deleteicon input {\n                padding-right: 16px;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;input type=\"text\" class=\"deletable\"&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><a href=\"http://jsbin.com/exizep/\">Live example here</a>.</p>\n\n<p><a href=\"http://jquery.com\">jQuery</a> is by the way not necessary, it just nicely separates the logic needed for progressive enhancement from the source, you can of course also go ahead with <em>plain</em> HTML/CSS/JS:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n        &lt;title&gt;SO question 2803532, with \"plain\" HTML/CSS/JS&lt;/title&gt;\n        &lt;style&gt;\n            span.deleteicon {\n                position: relative;\n            }\n            span.deleteicon span {\n                position: absolute;\n                display: block;\n                top: 5px;\n                right: 0px;\n                width: 16px;\n                height: 16px;\n                background: url('http://cdn.sstatic.net/stackoverflow/img/sprites.png?v=4') 0 -690px;\n                cursor: pointer;\n            }\n            span.deleteicon input {\n                padding-right: 16px;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;span class=\"deleteicon\"&gt;\n            &lt;input type=\"text\"&gt;\n            &lt;span onclick=\"var input = this.previousSibling; input.value = ''; input.focus();\"&gt;&lt;/span&gt;\n        &lt;/span&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>You only ends up with uglier HTML (and non-crossbrowser compatible JS ;) ).</p>\n\n<p>Note that when the UI look'n'feel isn't your biggest concern, but the functionality is, then just use <code>&lt;input type=\"search\"&gt;</code> instead of <code>&lt;input type=\"text\"&gt;</code>. It'll show the (browser-specific) clear button on HTML5 capable browsers.</p>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>Check out our <a href=\"https://github.com/waslos/jquery-clearsearch\">jQuery-ClearSearch</a> plugin. It's a configurable jQuery plugin - adapting it to your needs by styling the input field is straightforward. Just use it as follows:</p>\n\n<pre><code>&lt;input class=\"clearable\" type=\"text\" placeholder=\"search\"&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    $('.clearable').clearSearch();\n&lt;/script&gt;\n</code></pre>\n\n<p>\u200b\nExample: <a href=\"http://jsfiddle.net/wldaunfr/FERw3/\">http://jsfiddle.net/wldaunfr/FERw3/</a></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>HTML5 introduces the 'search' input type that I believe does what you want.</p>\n\n<p><code>&lt;input type=\"search\" /&gt;</code></p>\n\n<p>Here's a <a href=\"http://codepen.io/anon/pen/kjyAF\">live example</a>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I want to have a nice little icon that, when clicked will clear the text in the &lt;INPUT&gt; box.</p>\n\n<p>This is to save space rather than having a clear link outside of the input box.</p>\n\n<p>My CSS skills are weak...   Here is a <strike>screenshot</strike> photo of how the iPhone looks.</p>\n\n<p><img src=\"http://imgur.com/vOJFX.jpg\" alt=\"\"/></p>\n",
            "last_activity_date": 1423155237,
            "question_id": 2803532,
            "score": 59,
            "tags": [
                "javascript",
                "iphone",
                "html",
                "css"
            ],
            "title": "How do I put a clear button inside my HTML text input box like the iPhone does?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>All you needed was a plus :)</p>\n\n<pre><code>$(\"#Restaurant_Name\").keyup(function(){\n        var Text = $(this).val();\n        Text = Text.toLowerCase();\n        var regExp = /\\s+/g;\n        Text = Text.replace(regExp,'-');\n        $(\"#Restaurant_Slug\").val(Text);        \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>First of all, regular expressions should not have surrounding quotes, so <strong>'/\\s/g'</strong> should be <strong>/\\s/g</strong></p>\n\n<p>In order to replace all non-alphanumerical characters with dashes, this should work (using your example code):</p>\n\n<pre><code>$(\"#Restaurant_Name\").keyup(function(){\n        var Text = $(this).val();\n        Text = Text.toLowerCase();\n        Text = Text.replace(/[^a-zA-Z0-9]+/g,'-');\n        $(\"#Restaurant_Slug\").val(Text);        \n});\n</code></pre>\n\n<p>That should do the trick...</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I have no idea where the 'slug' term came from, but here we go:</p>\n\n<pre><code>function convertToSlug(Text)\n{\n    return Text\n        .toLowerCase()\n        .replace(/ /g,'-')\n        .replace(/[^\\w-]+/g,'')\n        ;\n}\n</code></pre>\n\n<p>First replace will change spaces to hyphens, second replace removes anything not alphanumeric, underscore, or hyphen.</p>\n\n<p>If you don't want things \"like - this\" turning into \"like---this\" then you can instead use this one:</p>\n\n<pre><code>function convertToSlug(Text)\n{\n    return Text\n        .toLowerCase()\n        .replace(/[^\\w ]+/g,'')\n        .replace(/ +/g,'-')\n        ;\n}\n</code></pre>\n\n<p>That will remove hyphens (but not spaces) on the first replace, and in the second replace it will condense consecutive spaces into a single hyphen.</p>\n\n<p>So \"like - this\" comes out as \"like-this\".</p>\n",
                    "is_accepted": true,
                    "score": 144
                },
                {
                    "body": "<pre><code>private string ToSeoFriendly(string title, int maxLength) {\n    var match = Regex.Match(title.ToLower(), \"[\\\\w]+\");\n    StringBuilder result = new StringBuilder(\"\");\n    bool maxLengthHit = false;\n    while (match.Success &amp;&amp; !maxLengthHit) {\n        if (result.Length + match.Value.Length &lt;= maxLength) {\n            result.Append(match.Value + \"-\");\n        } else {\n            maxLengthHit = true;\n            // Handle a situation where there is only one word and it is greater than the max length.\n            if (result.Length == 0) result.Append(match.Value.Substring(0, maxLength));\n        }\n        match = match.NextMatch();\n    }\n    // Remove trailing '-'\n    if (result[result.Length - 1] == '-') result.Remove(result.Length - 1, 1);\n    return result.ToString();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I create a plugin to implement in most of languages: <a href=\"http://leocaseiro.com.br/jquery-plugin-string-to-slug/\" rel=\"nofollow\">http://leocaseiro.com.br/jquery-plugin-string-to-slug/</a></p>\n\n<p>Default Usage:</p>\n\n<pre><code>$(document).ready( function() {\n    $(\"#string\").stringToSlug();\n});\n</code></pre>\n\n<p>Is very easy has stringToSlug jQuery Plugin</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var slug = function(str) {\n  str = str.replace(/^\\s+|\\s+$/g, ''); // trim\n  str = str.toLowerCase();\n\n  // remove accents, swap \u00f1 for n, etc\n  var from = \"\u00e3\u00e0\u00e1\u00e4\u00e2\u1ebd\u00e8\u00e9\u00eb\u00ea\u00ec\u00ed\u00ef\u00ee\u00f5\u00f2\u00f3\u00f6\u00f4\u00f9\u00fa\u00fc\u00fb\u00f1\u00e7\u00b7/_,:;\";\n  var to   = \"aaaaaeeeeeiiiiooooouuuunc------\";\n  for (var i=0, l=from.length ; i&lt;l ; i++) {\n    str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n  }\n\n  str = str.replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n    .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n    .replace(/-+/g, '-'); // collapse dashes\n\n  return str;\n};\n</code></pre>\n\n<p>and try</p>\n\n<pre><code>slug($('#field').val())\n</code></pre>\n\n<p>original by: <a href=\"http://dense13.com/blog/2009/05/03/converting-string-to-slug-javascript/\">http://dense13.com/blog/2009/05/03/converting-string-to-slug-javascript/</a></p>\n",
                    "is_accepted": false,
                    "score": 51
                },
                {
                    "body": "<pre><code>//\n//  jQuery Slug Plugin by Perry Trinier (perrytrinier@gmail.com)\n//  MIT License: http://www.opensource.org/licenses/mit-license.php\n\njQuery.fn.slug = function(options) {\nvar settings = {\n    slug: 'slug', // Class used for slug destination input and span. The span is created on $(document).ready() \n    hide: true   // Boolean - By default the slug input field is hidden, set to false to show the input field and hide the span. \n};\n\nif(options) {\n    jQuery.extend(settings, options);\n}\n\n$this = $(this);\n\n$(document).ready( function() {\n    if (settings.hide) {\n        $('input.' + settings.slug).after(\"&lt;span class=\"+settings.slug+\"&gt;&lt;/span&gt;\");\n        $('input.' + settings.slug).hide();\n    }\n});\n\nmakeSlug = function() {\n        var slug = jQuery.trim($this.val()) // Trimming recommended by Brooke Dukes - http://www.thewebsitetailor.com/2008/04/jquery-slug-plugin/comment-page-1/#comment-23\n                    .replace(/\\s+/g,'-').replace(/[^a-zA-Z0-9\\-]/g,'').toLowerCase() // See http://www.djangosnippets.org/snippets/1488/ \n                    .replace(/\\-{2,}/g,'-'); // If we end up with any 'multiple hyphens', replace with just one. Temporary bugfix for input 'this &amp; that'=&gt;'this--that'\n        $('input.' + settings.slug).val(slug);\n        $('span.' + settings.slug).text(slug);\n\n    }\n\n$(this).keyup(makeSlug);\n\nreturn $this;\n    };\n</code></pre>\n\n<p>This helped me with the same problem !</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm working on an app in CodeIgniter, and I am trying to make a field on a form dynamically generate the URL slug. What I'd like to do is remove the punctuation, convert it to lowercase, and replace the spaces with hyphens. So for example, Shane's Rib Shack would become shanes-rib-shack.</p>\n\n<p>Here's what I have so far. The lowercase part was easy, but the replace doesn't seem to be working at all, and I have no idea to remove the punctuation:</p>\n\n<pre><code>$(\"#Restaurant_Name\").keyup(function(){\n    var Text = $(this).val();\n    Text = Text.toLowerCase();\n    Text = Text.replace('/\\s/g','-');\n    $(\"#Restaurant_Slug\").val(Text);    \n});\n</code></pre>\n",
            "last_activity_date": 1423109517,
            "question_id": 1053902,
            "score": 58,
            "tags": [
                "javascript",
                "jquery",
                "regex"
            ],
            "title": "How to convert a Title to a URL slug in jQuery?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>AFAIK, that is indeed how modules must be loaded.\nHowever, instead of tacking all exported functions onto the <code>exports</code> object, you can also tack them onto <code>this</code> (what would otherwise be the global object).</p>\n\n<p>So, if you want to keep the other libraries compatible, you can do this:</p>\n\n<pre><code>this.quadTree = function () {\n  // the function's code\n};\n</code></pre>\n\n<p>or, when the external library already has its own namespace, e.g. <code>jQuery</code> (not that you can use <em>that</em> in a server-side environment):</p>\n\n<pre><code>this.jQuery = jQuery;\n</code></pre>\n\n<p>In a non-Node environment, <code>this</code> would resolve to the global object, thus making it a global variable... which it already was.  So it shouldn't break anything.</p>\n\n<p><strong>Edit</strong>:\nJames Herdman has a <a href=\"http://jherdman.github.com/2010-04-05/understanding-nodejs-require.html\">nice writeup</a> about node.js for beginners, which also mentions this.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I'm not sure if I'll actually end up using this because it's a rather hacky solution, but one way around this is to build a little mini-module importer like this...</p>\n\n<p>In the file <code>./node_modules/vanilla.js</code>:</p>\n\n<pre><code>var fs = require('fs');\n\nexports.require = function(path,names_to_export) {\n    filedata = fs.readFileSync(path,'utf8');\n    eval(filedata);\n    exported_obj = {};\n    for (i in names_to_export) {\n        to_eval = 'exported_obj[names_to_export[i]] = ' \n            + names_to_export[i] + ';'\n        eval(to_eval); \n    }\n    return exported_obj;\n}\n</code></pre>\n\n<p>Then when you want to use your library's functionality you'll need to manually choose which names to export. </p>\n\n<p>So for a library like the file <code>./lib/mylibrary.js</code>...</p>\n\n<pre><code>function Foo() { //Do something... }\nbiz = \"Blah blah\";\nvar bar = {'baz':'filler'};\n</code></pre>\n\n<p>When you want to use its functionality in your Node.js code...</p>\n\n<pre><code>var vanilla = require('vanilla');\nvar mylibrary = vanilla.require('./lib/mylibrary.js',['biz','Foo'])\nmylibrary.Foo // &lt;-- this is Foo()\nmylibrary.biz // &lt;-- this is \"Blah blah\"\nmylibrary.bar // &lt;-- this is undefined (because we didn't export it)\n</code></pre>\n\n<p>Don't know how well this would all work in practice though.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Here's what I think is the 'rightest' answer for this situation.</p>\n\n<p>Say you have a script file called <code>quadtree.js</code>.</p>\n\n<p>You should build a custom <code>node_module</code> that has this sort of directory structure...</p>\n\n<pre><code>./node_modules/quadtree/quadtree-lib/\n./node_modules/quadtree/quadtree-lib/quadtree.js\n./node_modules/quadtree/quadtree-lib/README\n./node_modules/quadtree/quadtree-lib/some-other-crap.js\n./node_modules/quadtree/index.js\n</code></pre>\n\n<p>Everything in your <code>./node_modules/quadtree/quadtree-lib/</code> directory are files from your 3rd party library. </p>\n\n<p>Then your <code>./node_modules/quadtree/index.js</code> file will just load that library from the filesystem and do the work of exporting things properly.</p>\n\n<pre><code>var fs = require('fs');\n\n// Read and eval library\nfiledata = fs.readFileSync('./node_modules/quadtree/quadtree-lib/quadtree.js','utf8');\neval(filedata);\n\n/* The quadtree.js file defines a class 'QuadTree' which is all we want to export */\n\nexports.QuadTree = QuadTree\n</code></pre>\n\n<p>Now you can use your <code>quadtree</code> module like any other node module...</p>\n\n<pre><code>var qt = require('quadtree');\nqt.QuadTree();\n</code></pre>\n\n<hr>\n\n<p>I like this method because there's no need to go changing any of the source code of your 3rd party library--so it's easier to maintain. All you need to do on upgrade is look at their source code and ensure that you are still exporting the proper objects.</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>There is a much better method than using <code>eval</code>: the <a href=\"http://nodejs.org/docs/v0.4.2/api/vm.html\" rel=\"nofollow\"><code>vm</code></a> module.</p>\n\n<p>For example, here is my <code>execfile</code> module, which evaluates the script at <code>path</code> in either <code>context</code> or the global context:</p>\n\n<pre><code>var vm = require(\"vm\");\nvar fs = require(\"fs\");\nmodule.exports = function(path, context) {\n  context = context || {};\n  var data = fs.readFileSync(path);\n  vm.runInNewContext(data, context, path);\n  return context;\n}\n</code></pre>\n\n<p>And it can be used like this:</p>\n\n<pre><code>&gt; var execfile = require(\"execfile\");\n&gt; // `someGlobal` will be a global variable while the script runs\n&gt; var context = execfile(\"example.js\", { someGlobal: 42 });\n&gt; // And `getSomeGlobal` defined in the script is available on `context`:\n&gt; context.getSomeGlobal()\n42\n&gt; context.someGlobal = 16\n&gt; context.getSomeGlobal()\n16\n</code></pre>\n\n<p>Where <code>example.js</code> contains:</p>\n\n<pre><code>function getSomeGlobal() {\n    return someGlobal;\n}\n</code></pre>\n\n<p>The big advantage of this method is that you've got complete control over the global variables in the executed script: you can pass in custom globals (via <code>context</code>), and all the globals created by the script will be added to <code>context</code>. Debugging is also easier because syntax errors and the like will be reported with the correct file name.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>The simplest way is: <code>eval(require('fs').readFileSync('./path/to/file.js', 'utf8'));</code>\nThis works great for testing in the interactive shell.</p>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>There are some third party Javascript libraries that have some functionality I would like to use in a Node.js server. (Specifically I want to use a QuadTree javascript library that I found.) But these libraries are just straightforward <code>.js</code> files and not \"Node.js libraries\". </p>\n\n<p>As such, these libraries don't follow the <code>exports.var_name</code> syntax that Node.js expects for its modules. As far as I understand that means when you do <code>module = require('module_name');</code> or <code>module = require('./path/to/file.js');</code> you'll end up with a module with no publicly accessible functions, etc.</p>\n\n<p>My question then is \"How do I load an arbitrary javascript file into Node.js such that I can utilize its functionality without having to rewrite it so that it does do <code>exports</code>?\"</p>\n\n<p>I'm very new to Node.js so please let me know if there is some glaring hole in my understanding of how it works.</p>\n\n<hr/>\n\n<p><strong>EDIT</strong>: Researching into things more and I now see that the module loading pattern that Node.js uses is actually part of a recently developed standard for loading Javascript libraries called <a href=\"http://wiki.commonjs.org/wiki/Modules/1.1\">CommonJS</a>. It says this right on the <a href=\"http://nodejs.org/docs/v0.4.1/api/modules.html\">module doc page for Node.js</a>, but I missed that until now.</p>\n\n<p>It may end up being that the answer to my question is \"wait until your library's authors get around to writing a CommonJS interface or do it your damn self.\"</p>\n",
            "last_activity_date": 1424909434,
            "question_id": 5171213,
            "score": 48,
            "tags": [
                "javascript",
                "node.js",
                "commonjs"
            ],
            "title": "Load &quot;Vanilla&quot; Javascript Libraries into Node.js"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Here's a collection of scripts:\n<a href=\"http://webtecker.com/2008/03/26/collection-of-password-strength-scripts/\" rel=\"nofollow\">http://webtecker.com/2008/03/26/collection-of-password-strength-scripts/</a></p>\n\n<p>And this one uses Prototype/Scriptaculous:\n<a href=\"http://ajaxorized.com/?p=14\" rel=\"nofollow\">http://ajaxorized.com/?p=14</a></p>\n\n<p>I think both of them rate the password and don't use jQuery... but I don't know if they have native support for disabling the form?</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<pre><code>Password Strength Algorithm:\n\nPassword Length:\n    5 Points: Less than 4 characters\n    10 Points: 5 to 7 characters\n    25 Points: 8 or more\n\nLetters:\n    0 Points: No letters\n    10 Points: Letters are all lower case\n    20 Points: Letters are upper case and lower case\n\nNumbers:\n    0 Points: No numbers\n    10 Points: 1 number\n    20 Points: 3 or more numbers\n\nCharacters:\n    0 Points: No characters\n    10 Points: 1 character\n    25 Points: More than 1 character\n\nBonus:\n    2 Points: Letters and numbers\n    3 Points: Letters, numbers, and characters\n    5 Points: Mixed case letters, numbers, and characters\n\nPassword Text Range:\n\n    &gt;= 90: Very Secure\n    &gt;= 80: Secure\n    &gt;= 70: Very Strong\n    &gt;= 60: Strong\n    &gt;= 50: Average\n    &gt;= 25: Weak\n    &gt;= 0: Very Weak\n</code></pre>\n\n<p>Settings\nToggle to true or false, if you want to change what is checked in the password</p>\n\n<pre><code>var m_strUpperCase = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nvar m_strLowerCase = \"abcdefghijklmnopqrstuvwxyz\";\nvar m_strNumber = \"0123456789\";\nvar m_strCharacters = \"!@#$%^&amp;*?_~\"\n\nCheck password\n\n\nfunction checkPassword(strPassword)\n{\n    // Reset combination count\n    var nScore = 0;\n\n    // Password length\n    // -- Less than 4 characters\n    if (strPassword.length &lt; 5)\n    {\n        nScore += 5;\n    }\n    // -- 5 to 7 characters\n    else if (strPassword.length &gt; 4 &amp;&amp; strPassword.length &lt; 8)\n    {\n        nScore += 10;\n    }\n    // -- 8 or more\n    else if (strPassword.length &gt; 7)\n    {\n        nScore += 25;\n    }\n\n    // Letters\n    var nUpperCount = countContain(strPassword, m_strUpperCase);\n    var nLowerCount = countContain(strPassword, m_strLowerCase);\n    var nLowerUpperCount = nUpperCount + nLowerCount;\n    // -- Letters are all lower case\n    if (nUpperCount == 0 &amp;&amp; nLowerCount != 0) \n    { \n        nScore += 10; \n    }\n    // -- Letters are upper case and lower case\n    else if (nUpperCount != 0 &amp;&amp; nLowerCount != 0) \n    { \n        nScore += 20; \n    }\n\n    // Numbers\n    var nNumberCount = countContain(strPassword, m_strNumber);\n    // -- 1 number\n    if (nNumberCount == 1)\n    {\n        nScore += 10;\n    }\n    // -- 3 or more numbers\n    if (nNumberCount &gt;= 3)\n    {\n        nScore += 20;\n    }\n\n    // Characters\n    var nCharacterCount = countContain(strPassword, m_strCharacters);\n    // -- 1 character\n    if (nCharacterCount == 1)\n    {\n        nScore += 10;\n    }   \n    // -- More than 1 character\n    if (nCharacterCount &gt; 1)\n    {\n        nScore += 25;\n    }\n\n    // Bonus\n    // -- Letters and numbers\n    if (nNumberCount != 0 &amp;&amp; nLowerUpperCount != 0)\n    {\n        nScore += 2;\n    }\n    // -- Letters, numbers, and characters\n    if (nNumberCount != 0 &amp;&amp; nLowerUpperCount != 0 &amp;&amp; nCharacterCount != 0)\n    {\n        nScore += 3;\n    }\n    // -- Mixed case letters, numbers, and characters\n    if (nNumberCount != 0 &amp;&amp; nUpperCount != 0 &amp;&amp; nLowerCount != 0 &amp;&amp; nCharacterCount != 0)\n    {\n        nScore += 5;\n    }\n\n\n    return nScore;\n}\n\n// Runs password through check and then updates GUI \n\n\nfunction runPassword(strPassword, strFieldID) \n{\n    // Check password\n    var nScore = checkPassword(strPassword);\n\n\n     // Get controls\n        var ctlBar = document.getElementById(strFieldID + \"_bar\"); \n        var ctlText = document.getElementById(strFieldID + \"_text\");\n        if (!ctlBar || !ctlText)\n            return;\n\n        // Set new width\n        ctlBar.style.width = (nScore*1.25&gt;100)?100:nScore*1.25 + \"%\";\n\n    // Color and text\n    // -- Very Secure\n    /*if (nScore &gt;= 90)\n    {\n        var strText = \"Very Secure\";\n        var strColor = \"#0ca908\";\n    }\n    // -- Secure\n    else if (nScore &gt;= 80)\n    {\n        var strText = \"Secure\";\n        vstrColor = \"#7ff67c\";\n    }\n    // -- Very Strong\n    else \n    */\n    if (nScore &gt;= 80)\n    {\n        var strText = \"Very Strong\";\n        var strColor = \"#008000\";\n    }\n    // -- Strong\n    else if (nScore &gt;= 60)\n    {\n        var strText = \"Strong\";\n        var strColor = \"#006000\";\n    }\n    // -- Average\n    else if (nScore &gt;= 40)\n    {\n        var strText = \"Average\";\n        var strColor = \"#e3cb00\";\n    }\n    // -- Weak\n    else if (nScore &gt;= 20)\n    {\n        var strText = \"Weak\";\n        var strColor = \"#Fe3d1a\";\n    }\n    // -- Very Weak\n    else\n    {\n        var strText = \"Very Weak\";\n        var strColor = \"#e71a1a\";\n    }\n\n    if(strPassword.length == 0)\n    {\n    ctlBar.style.backgroundColor = \"\";\n    ctlText.innerHTML =  \"\";\n    }\nelse\n    {\n    ctlBar.style.backgroundColor = strColor;\n    ctlText.innerHTML =  strText;\n}\n}\n\n// Checks a string for a list of characters\nfunction countContain(strPassword, strCheck)\n{ \n    // Declare variables\n    var nCount = 0;\n\n    for (i = 0; i &lt; strPassword.length; i++) \n    {\n        if (strCheck.indexOf(strPassword.charAt(i)) &gt; -1) \n        { \n                nCount++;\n        } \n    } \n\n    return nCount; \n} \n</code></pre>\n\n<p>You can customize by yourself according to your requirement. </p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p><strong>Update</strong>: created a js fiddle here to see it live: <a href=\"http://jsfiddle.net/HFMvX/\">http://jsfiddle.net/HFMvX/</a></p>\n\n<p>I went through tons of google searches and didn't find anything satisfying. i like how passpack have done it so essentially reverse-engineered their approach, here we go:</p>\n\n<pre><code>function scorePassword(pass) {\n    var score = 0;\n    if (!pass)\n        return score;\n\n    // award every unique letter until 5 repetitions\n    var letters = new Object();\n    for (var i=0; i&lt;pass.length; i++) {\n        letters[pass[i]] = (letters[pass[i]] || 0) + 1;\n        score += 5.0 / letters[pass[i]];\n    }\n\n    // bonus points for mixing it up\n    var variations = {\n        digits: /\\d/.test(pass),\n        lower: /[a-z]/.test(pass),\n        upper: /[A-Z]/.test(pass),\n        nonWords: /\\W/.test(pass),\n    }\n\n    variationCount = 0;\n    for (var check in variations) {\n        variationCount += (variations[check] == true) ? 1 : 0;\n    }\n    score += (variationCount - 1) * 10;\n\n    return parseInt(score);\n}\n</code></pre>\n\n<p>Good passwords start to score around 60 or so, here's function to translate that in words:</p>\n\n<pre><code>function checkPassStrength(pass) {\n    var score = scorePassword(pass);\n    if (score &gt; 80)\n        return \"strong\";\n    if (score &gt; 60)\n        return \"good\";\n    if (score &gt;= 30)\n        return \"weak\";\n\n    return \"\";\n}\n</code></pre>\n\n<p>you might want to tune this a bit but i found it working for me nicely</p>\n",
                    "is_accepted": false,
                    "score": 64
                }
            ],
            "body": "<p>I have a situation where I would like to be able to rate a users password in the web interface to my system, so that before they hit submit they know if they have a bad password.</p>\n\n<p>Key Requirements:</p>\n\n<ul>\n<li>Must be able to rate the password, not just pass/fail.</li>\n<li>Should disable the form if the password is below a threshhold, so the user can't submit it.</li>\n<li>Look nice. :)</li>\n<li>Not use jQuery - we're currently using Mochikit and Y!UI in this system.</li>\n</ul>\n\n<p>I've found many password meters written in jQuery, and things like <a href=\"http://www.passwordmeter.com/\">http://www.passwordmeter.com/</a> that are too verbose.</p>\n\n<p>Can anyone suggest a good drop in javascript password rater I can use, or give an example of how to write one?</p>\n",
            "last_activity_date": 1377085675,
            "question_id": 948172,
            "score": 23,
            "tags": [
                "javascript",
                "passwords"
            ],
            "title": "Password Strength Meter"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The following might explain things.\n<a href=\"http://markmail.org/message/5wrphjwmo365pajy\">http://markmail.org/message/5wrphjwmo365pajy</a></p>\n\n<p>also, according to <a href=\"http://www.developersdex.com/asp/message.asp?p=2978&amp;r=6619733\">http://www.developersdex.com/asp/message.asp?p=2978&amp;r=6619733</a> they employ some script hacks (e.g. inserting a script into the DOM to get requested data, instead of XHR)</p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>I'm making a RESTful web service call in my JavaScript page and get the following warning:</p>\n\n<p>\"This page is accessing information that is not under its control.  This poses a security risk.  Do you want to continue?\"</p>\n\n<p>Now I've read up on this and am aware of the <a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\">cross-domain, same origin policy</a>.  However, I don't get such warnings when I consume other APIs like Google's Maps API.  Clearly the domain is not the same as my local domain.  What is the difference?  </p>\n\n<p>My initial guess is that Google is 'imported' into the page using the <code>&lt;script&gt;</code> tag while my REST consumption is using XMLHttpRequest.  IF that is the case, what is the difference between these two approaches that one would merit a warning and the other not?</p>\n\n<p><strong>Solution Summary:</strong></p>\n\n<p>I would like to summarize what the solution was to this problem.  You can find a helpful URL <a href=\"http://www.teamlalala.com/blog/2009/04/14/how-do-you-get-data-from-one-domain-to-another-using-javascript/\">here</a>.  </p>\n\n<p>Essentially, you inject code through the pages <code>&lt;script&gt;</code> tag when importing JavaScript.  Anything imported through this tag is executed immediately in the global context.  So instead of passing in a JavaScript file, pass in a URL to a website that returns a page not of HTML tags but instead a page that returns JavaScript code text that calls a callback in your code.  </p>\n\n<p>You use URL parameters to tell the page what 'callback' to return and any parameters that need to go into the callback.  For instance:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://crossdomainhost/CrossDomainConsumerSite/Default.aspx?callback=myCallback&amp;param1=myParam\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>When this is evaluated, the page returned by the 'src' parameter is:</p>\n\n<pre><code>myCallback( myParam );\n</code></pre>\n\n<p>On the server side, you will create a site at that URL that overrides the OnLoad equivalent (with whatever server-side language you are using).  Instead of page HTML, the OnLoad will take the URL parameters and re-swizzle them to match the callback call above.</p>\n\n<p>When the substitution is made, the callback is immediately called when the client loads the page.  The benefit of this is that the 'src' URL doesn't have to match the domain of the hosted page.</p>\n\n<p>Here is what the client HTML page will look like at the end:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var myCallback = function( myParam ) {\n        alert( \"this was called across domains!\" );\n    };\n&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"http://crossdomainhost/CrossDomainConsumerSite/Default.aspx?callback=myCallback&amp;param=myParam&gt;&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1274124561,
            "question_id": 926137,
            "score": 38,
            "tags": [
                "javascript",
                "security",
                "rest",
                "google-maps",
                "cross-domain"
            ],
            "title": "Why don&#39;t I get a &#39;same origin policy&#39; warning when using the Google Maps API?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Probably the single most important thing is to use a framework, such as <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a>, or <a href=\"http://www.prototypejs.org/\" rel=\"nofollow\">prototype</a>, to iron out the differences between browsers, and also make things easier in general.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I liked <a href=\"http://oreilly.com/catalog/9780596517748/\" rel=\"nofollow\">JavaScript:The Good Parts</a> by Douglas Crockford although it's focused entirely on the language and ignores the DOM altogether.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can pick up a lot from <a href=\"http://rads.stackoverflow.com/amzn/click/1590597273\" rel=\"nofollow\">Pro JavaScript Techniques</a>, and I'm looking forward to Resig's forthcoming <a href=\"http://jsninja.com/\" rel=\"nofollow\">Secrets of the JavaScript Ninja</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Seconding <a href=\"http://oreilly.com/catalog/9780596517748/\">Javascript: The Good Parts</a> and Resig's book <a href=\"http://jsninja.com/\">Secrets of the Javascript Ninja</a>.</p>\n\n<p>Here are some tips for Javascript:</p>\n\n<ul>\n<li>Don't pollute the global namespace (put all functions into objects/closures)\n<ul>\n<li>Take a look at <a href=\"http://developer.yahoo.com/yui/\">YUI</a>, it's a huge codebase with only 2 global objects: YAHOO and YAHOO_config</li>\n</ul></li>\n<li>Use the Module pattern for singletons (<a href=\"http://yuiblog.com/blog/2007/06/12/module-pattern/\">http://yuiblog.com/blog/2007/06/12/module-pattern/</a>)</li>\n<li>Make your JS as reusable as possible (jQuery plugins, YUI modules, basic JS objects.) Don't write tons of global functions.</li>\n<li>Don't forget to var your variables</li>\n<li>Use JSlint : <a href=\"http://www.jslint.com/\">http://www.jslint.com/</a></li>\n<li>If you need to save state, it's probably best to use objects instead of the DOM.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>I disagree to the \"use a framework\" statement to some degree. Too many people use frameworks blindly and have little or no understanding of what's going on behind the curtains.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>this article (with comments) is also very helpful : </p>\n\n<p><a href=\"http://www.dustindiaz.com/javascript-no-no/\" rel=\"nofollow\">http://www.dustindiaz.com/javascript-no-no/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As an addendum to the Crockford book, you may also want to check out this piece <a href=\"http://javascript.crockford.com/code.html\" rel=\"nofollow\">Code Conventions for the Javascript Programming Language</a>. I also have a slightly different suggestion: instead of using a JS library off the bat, why not create your own? You may write a crappy library (as I did), but you'll learn something in the process. You have existing examples you can use as models. Also, to help give you an understanding of JS design patterns, I shall recommend another book, 'Pro Javascript Design Patterns'. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://developer.yahoo.com/yui/theater/\" rel=\"nofollow\">YUI Theatre</a> has a bunch of videos (some with transcripts) by Steve Souders, Douglas Crockford, John Resig and others on JavaScript, YUI, website performance and other related topics.</p>\n\n<p>There are also very interested google tech talks on <a href=\"http://www.youtube.com\" rel=\"nofollow\">Youtube</a> on jQuery and other frameworks.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you don't feel like reading you can watch this video:</p>\n\n<p>JavaScript the good parts by Doug Crockford</p>\n\n<p><a href=\"http://www.youtube.com/watch?v=hQVTIJBZook\" rel=\"nofollow\"><img src=\"http://img9.imageshack.us/img9/6918/jstgp.png\" alt=\"alt text\" /></a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>What are some good resources to learn best practices for Javascript?  I'm mainly concerned about when something should be an object vs. when it should just be tracked in the DOM.  Also I would like to better learn how to organize my code so it's easy to unit test.</p>\n",
            "last_activity_date": 1269190904,
            "question_id": 39691,
            "score": 32,
            "tags": [
                "javascript",
                "unit-testing"
            ],
            "title": "Javascript Best Practices"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>Try using <code>typeof(var)</code> and/or <code>var instanceof something</code>.</p>\n",
                    "is_accepted": true,
                    "score": 71
                },
                {
                    "body": "<p>If <code>typeof yourVariable === 'object'</code>, it's an object or null. If you want to exclude null, just make it <code>yourVariable !== null &amp;&amp; typeof yourVariable === 'object'</code>.</p>\n",
                    "is_accepted": false,
                    "score": 229
                },
                {
                    "body": "<p>Use <code>typeof</code>.</p>\n\n<p>HTML:    </p>\n\n<pre><code>&lt;a id=\"a1\" href=\"#\"&gt;Test link&lt;/a&gt;\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>var item = $(\"#a1\")\nalert(typeof  item)\nvar item2 = \"simple\"\nalert(typeof item2)\n</code></pre>\n\n<p>Sample program is here : <a href=\"http://jsfiddle.net/DKGJG/\" rel=\"nofollow\">http://jsfiddle.net/DKGJG/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try this</p>\n\n<pre><code>if (objectName instanceof Object == false) {\n  alert('Not an object');\n}\nelse {\n  alert('An object');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><code>Object.prototype.toString.call(myVar)</code> will return:</p>\n\n<ul>\n<li><code>\"[object Object]\"</code> if myVar is an object</li>\n<li><code>\"[object Array]\"</code> if myVar is an array</li>\n<li>etc.</li>\n</ul>\n\n<p>For more information on this and why it is a good alternative to typeof, <a href=\"http://javascriptweblog.wordpress.com/2011/08/08/fixing-the-javascript-typeof-operator/\">check out this article</a>.</p>\n",
                    "is_accepted": false,
                    "score": 62
                },
                {
                    "body": "<p>The official <a href=\"http://underscorejs.org/#isObject\">underscore.js</a> uses this check to find out if something is really an object</p>\n\n<pre><code>// Is a given variable an object?\n_.isObject = function(obj) {\n  return obj === Object(obj);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>For simply checking against Object or Array without additional function call (speed). As also posted <a href=\"http://stackoverflow.com/a/16608045/926988\">here</a>.</p>\n\n<p><strong>isArray()</strong></p>\n\n<pre><code>isArray = function(a) {\n    return (!!a) &amp;&amp; (a.constructor === Array);\n};\nconsole.log(isArray(        )); // false\nconsole.log(isArray(    null)); // false\nconsole.log(isArray(    true)); // false\nconsole.log(isArray(       1)); // false\nconsole.log(isArray(   'str')); // false\nconsole.log(isArray(      {})); // false\nconsole.log(isArray(new Date)); // false\nconsole.log(isArray(      [])); // true\n</code></pre>\n\n<p><strong>isObject()</strong> - Note: use for Object literals only, as it returns false for custom objects, like new Date or new YourCustomObject.</p>\n\n<pre><code>isObject = function(a) {\n    return (!!a) &amp;&amp; (a.constructor === Object);\n};\nconsole.log(isObject(        )); // false\nconsole.log(isObject(    null)); // false\nconsole.log(isObject(    true)); // false\nconsole.log(isObject(       1)); // false\nconsole.log(isObject(   'str')); // false\nconsole.log(isObject(      [])); // false\nconsole.log(isObject(new Date)); // false\nconsole.log(isObject(      {})); // true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I have a code snippet that works. I find it confusing when the whole piece of code is not given, so I just created it myself:</p>\n\n<pre><code>    &lt;!DOCTYPE html&gt;\n    &lt;html&gt;\n    &lt;body&gt;\n    &lt;button onclick=\"myFunc()\"&gt;Try it&lt;/button&gt;\n\n    &lt;script&gt;\n    var abc = new Number();\n    // var abc = 4;\n    //this is a code variation which will give a diff alert\n\n    function myFunc()\n    {\n    if(abc &amp;&amp; typeof abc === \"object\")\n    alert('abc is an object and does not return null value');\n    else\n    alert('abc is not an object');\n    }\n    &lt;/script&gt;\n\n    &lt;/body&gt;\n    &lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Let's define \"object\" in Javascript</strong>.  According to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Glossary\">MDN docs</a>, every value is either an object or a primitive:</p>\n\n<blockquote>\n  <p>primitive, primitive value </p>\n  \n  <p>A data that is not an object and does not have any methods. JavaScript has 5 primitive datatypes: string, number, boolean, null, undefined. </p>\n</blockquote>\n\n<p><strong>What's a primitive?</strong></p>\n\n<ul>\n<li><code>3</code></li>\n<li><code>'abc'</code></li>\n<li><code>true</code></li>\n<li><code>null</code></li>\n<li><code>undefined</code></li>\n</ul>\n\n<p><strong>What's an object (i.e. not a primitive)?</strong></p>\n\n<ul>\n<li><code>Object.prototype</code></li>\n<li>everything descended from <code>Object.prototype</code>\n<ul>\n<li><code>Function.prototype</code>\n<ul>\n<li><code>Object</code></li>\n<li><code>Function</code></li>\n<li><code>function C(){}</code> -- user-defined functions</li>\n</ul></li>\n<li><code>C.prototype</code> -- the prototype property of a user-defined function: this is <em>not</em> <code>C</code>s prototype\n<ul>\n<li><code>new C()</code> -- \"new\"-ing a user-defined function</li>\n</ul></li>\n<li><code>Math</code></li>\n<li><code>Array.prototype</code>\n<ul>\n<li>arrays</li>\n</ul></li>\n<li><code>{\"a\": 1, \"b\": 2}</code> -- objects created using literal notation</li>\n<li><code>new Number(3)</code> -- wrappers around primitives</li>\n<li>... <em>many other things</em> ...</li>\n</ul></li>\n<li><code>Object.create(null)</code></li>\n<li>everything descended from an <code>Object.create(null)</code></li>\n</ul>\n\n<p><strong>How to check whether a value is an object</strong></p>\n\n<p><code>instanceof</code> by itself won't work, because it misses two cases:</p>\n\n<pre><code>// oops:  isObject(Object.prototype) -&gt; false\n// oops:  isObject(Object.create(null)) -&gt; false\nfunction isObject(val) {\n    return val instanceof Object; \n}\n</code></pre>\n\n<p><code>typeof x === 'object'</code> won't work, because of false positives (<code>null</code>) and false negatives (functions):</p>\n\n<pre><code>// oops: isObject(Object) -&gt; false\nfunction isObject(val) {\n    return (typeof val === 'object');\n}\n</code></pre>\n\n<p><code>Object.prototype.toString.call</code> won't work, because of false positives for all of the primitives:</p>\n\n<pre><code>&gt; Object.prototype.toString.call(3)\n\"[object Number]\"\n\n&gt; Object.prototype.toString.call(new Number(3))\n\"[object Number]\"\n</code></pre>\n\n<p>So I use:</p>\n\n<pre><code>function isObject(val) {\n    if (val === null) { return false;}\n    return ( (typeof val === 'function') || (typeof val === 'object') );\n}\n</code></pre>\n\n<hr>\n\n<p>@Daan's answer also seems to work:</p>\n\n<pre><code>function isObject(obj) {\n  return obj === Object(obj);\n}\n</code></pre>\n\n<p>because, according to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">MDN docs</a>:</p>\n\n<blockquote>\n  <p>The Object constructor creates an object wrapper for the given value. If the value is null or undefined, it will create and return an empty object, otherwise, it will return an object of a type that corresponds to the given value. If the value is an object already, it will return the value.</p>\n</blockquote>\n\n<hr>\n\n<p>A third way that seems to work (not sure if it's 100%) is to use <code>Object.getPrototypeOf</code> which <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\">throws an exception</a> if its argument isn't an object:</p>\n\n<pre><code>// these 5 examples throw exceptions\nObject.getPrototypeOf(null)\nObject.getPrototypeOf(undefined)\nObject.getPrototypeOf(3)\nObject.getPrototypeOf('abc')\nObject.getPrototypeOf(true)\n\n// these 5 examples don't throw exceptions\nObject.getPrototypeOf(Object)\nObject.getPrototypeOf(Object.prototype)\nObject.getPrototypeOf(Object.create(null))\nObject.getPrototypeOf([])\nObject.getPrototypeOf({})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>I'm fond of simply: </p>\n\n<pre><code>var isObject = function(item) {\n  return (typeof item === \"object\" &amp;&amp; !Array.isArray(item) &amp;&amp; item !== null);\n};\n</code></pre>\n\n<p>If the item is a JS object, and it's not a JS array, and it's not <code>null</code>\u2026if all three prove true, return <code>true</code>. If any of the three conditions fails, the <code>&amp;&amp;</code> test will short-circuit and <code>false</code> will be returned. Omit the <code>null</code> test if desired. </p>\n\n<p>DOCS: </p>\n\n<p><a href=\"http://devdocs.io/javascript/operators/typeof\">http://devdocs.io/javascript/operators/typeof</a></p>\n\n<p><a href=\"http://devdocs.io/javascript/global_objects/object\">http://devdocs.io/javascript/global_objects/object</a></p>\n\n<p><a href=\"http://devdocs.io/javascript/global_objects/array/isarray\">http://devdocs.io/javascript/global_objects/array/isarray</a></p>\n\n<p><a href=\"http://devdocs.io/javascript/global_objects/null\">http://devdocs.io/javascript/global_objects/null</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>When everything else fails, I use this:</p>\n\n<pre><code>var isObject = function(item) {\n   return item.constructor.name === \"Object\";\n}; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>lodash has <a href=\"https://lodash.com/docs#isPlainObject\" rel=\"nofollow\">isPlainObject</a>, which might be what many who come to this page are looking for. It returns false when give a function or array.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>  var isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' &amp;&amp; !!obj;\n  };\n</code></pre>\n\n<p><code>!!obj</code> is shorthand for checking if object is truthy ( to filter out null/undefined) </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In JavaScript null is \"nothing\". It is supposed to be something that doesn't exist. Unfortunately, in JavaScript, the data type of null is an object.</p>\n\n<blockquote>\n  <p>Note  You can consider it a bug in JavaScript that typeof null is an\n  object. It should be null.</p>\n</blockquote>\n\n<pre><code>typeof undefined             // undefined\ntypeof null                  // object\nnull === undefined           // false\nnull == undefined            // true\n</code></pre>\n\n<p><a href=\"http://www.w3schools.com/js/js_typeof.asp\" rel=\"nofollow\">Reference go to:  http://www.w3schools.com/js/js_typeof.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to check in JavaScript if a variable is an object?</p>\n",
            "last_activity_date": 1424730337,
            "question_id": 8511281,
            "score": 145,
            "tags": [
                "javascript",
                "variables",
                "object"
            ],
            "title": "Check if a variable is an object in javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You need the <a href=\"http://api.jquery.com/not-selector/\"><code>:not()</code></a> selector:</p>\n\n<pre><code>$('div[class^=\"first-\"]:not(.first-bar)')\n</code></pre>\n\n<p>or, alternatively, the <a href=\"http://api.jquery.com/not/\"><code>.not()</code></a> method:</p>\n\n<pre><code>$('div[class^=\"first-\"]').not('.first-bar');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 209
                },
                {
                    "body": "<p>You can use the <code>:not</code> filter selector:</p>\n\n<pre><code>$('foo:not(\".someClass\")')\n</code></pre>\n\n<p>Or <code>not()</code> method:</p>\n\n<pre><code>$('foo').not(\".someClass\")\n</code></pre>\n\n<p><strong>More Info:</strong></p>\n\n<ul>\n<li><a href=\"http://api.jquery.com/not-selector/\">http://api.jquery.com/not-selector/</a></li>\n<li><a href=\"http://api.jquery.com/not/\">http://api.jquery.com/not/</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 36
                }
            ],
            "body": "<p>Is there a simple selector expression to not select elements with a specific class?</p>\n\n<pre><code>&lt;div class=\"first-foo\" /&gt;\n&lt;div class=\"first-moo\" /&gt;\n&lt;div class=\"first-koo\" /&gt;\n&lt;div class=\"first-bar second-foo\" /&gt;\n</code></pre>\n\n<p>I just want to get the first three divs and tried</p>\n\n<pre><code>$(div[class^=\"first-\"][class!=\"first-bar\"])\n</code></pre>\n\n<p>But this receives all as the last div contains more than first-bar. Is there a way to use a placeholder in such an expression? Something like that</p>\n\n<pre><code>$(div[class^=\"first-\"][class!=\"first-bar*\"]) // doesn't seem to work\n</code></pre>\n\n<p>Any other selectors that may help?</p>\n",
            "last_activity_date": 1294311218,
            "question_id": 4614120,
            "score": 101,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors"
            ],
            "title": "Not class selector in jQuery"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>If you hide the content before you append it and chain the fadeIn method to that, you should get the effect that you're looking for.</p>\n\n<pre><code>// Create the DOM elements\n$(content)\n// Sets the style of the elements to \"display:none\"\n    .hide()\n// Appends the hidden elements to the \"posts\" element\n    .appendTo('#posts')\n// Fades the new content into view\n    .fadeIn();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 158
                },
                {
                    "body": "<p>You have to be aware that the code doesn't execute linearly. The animated stuff can't be expected to halt code execution to do the animation and then return. </p>\n\n<pre>\n   commmand(); \n   animation(); \n   command();  </pre>\n\n<p>This is because the animation uses set timeout and other similar magic to do its job and settimeout is non-blocking.</p>\n\n<p>This is why we have callback methods on animations to run when the animation is done ( to avoid changing something which doesn't exist yet ) </p>\n\n<pre><code>\n   command(); \n   animation( ... function(){ \n      command(); \n   });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I don't know if I fully understand the issue you're having, but something like this should work:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"posts\"&gt;\n  &lt;span id=\"post1\"&gt;Something here&lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>var counter=0;\n\n$.get(\"http://www.something/dir\",\n    function(data){\n        $('#posts').append('&lt;span style=\"display:none\" id=\"post' + counter + \"&gt;\" + data + \"&lt;/span&gt;\" ) ;\n        $('#post' + counter).fadeIn();\n        counter += 1;\n    });\n</code></pre>\n\n<p>Basically you're wrapping each piece of the content (each \"post\") in a span, setting that span's display to none so it doesn't show up, and then fading it in.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This should solve your problem I think.</p>\n\n<pre><code>$('#content').prepend('&lt;p&gt;Hello!&lt;/p&gt;');\n$('#content').children(':first').fadeOut().fadeIn();\n</code></pre>\n\n<p>If you are doing append instead then you have to use the :last selector instead.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>assuming you have the following in the css defined:</p>\n\n<pre><code>.new {display:none} \n</code></pre>\n\n<p>and the javascript should be :</p>\n\n<pre><code>$('#content').append('&lt;p class='new'&gt;Hello!&lt;/p&gt;');\n$('#content').children('.new').fadeIn();\n$('#content').children.removeClass('new');\n$('#content').children('.new').hide();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>First is convert received data to jQuery Object.\nSecond, hide it immediately.\nThird, append it to a target node.\nAnd, after this all, we can clearly use necessary animation, just like fadeIn :)</p>\n\n<pre><code>jNode = $(\"&lt;div&gt;first&lt;/div&gt;&lt;div&gt;second&lt;/div&gt;\");\njNode.hide();\n$('#content').append(jNode);\njNode.fadeIn();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>im have a exprensive,for this:</p>\n\n<pre><code>$(\"dt\").append(tvlst.ddhtml);\n$(\"dd:last\").fadeIn(700);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$(output_string.html).fadeIn().appendTo(\"#list\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am loading JSON data to my page and using appendTo() but I am trying to fade in my results, any ideas?</p>\n\n<pre><code>$(\"#posts\").fadeIn();\n$(content).appendTo(\"#posts\");\n</code></pre>\n\n<p>I saw that there is a difference between append and appendTo, on the documents.</p>\n\n<p>I tried this as well:</p>\n\n<pre><code>$(\"#posts\").append(content).fadeIn();\n</code></pre>\n\n<p><em><strong>I got it, the above did the trick!</em></strong></p>\n\n<p>But I get \"undefined\" as one of my JSON values.</p>\n",
            "last_activity_date": 1349607694,
            "question_id": 327682,
            "score": 70,
            "tags": [
                "javascript",
                "jquery",
                "fade"
            ],
            "title": "Using fadein and append"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>If you are checking the browser use <code>$.browser</code>.  But if you are checking feature support (recommended) then use <code>$.support</code>.</p>\n\n<p>You should NOT use $.browser to enable/disable features on the page.  Reason being its not dependable and generally just not recommended.</p>\n\n<p>If you need feature support then I recommend <a href=\"http://www.modernizr.com/\" rel=\"nofollow\">modernizr</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Apparently the only reliable and accepted solution would be to do feature detection like this:</p>\n\n<pre><code>browser_treats_urls_like_safari_does = false;\nvar last_location_hash = location.hash;\nlocation.hash = '\"blah\"';\nif (location.hash == '#%22blah%22')\n    browser_treats_urls_like_safari_does = true;\nlocation.hash = last_location_hash;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Chrome has both '<strong><em>Chrome</em></strong>' and '<strong><em>Safari</em></strong>' inside userAgent string.<br>\nSafari has only '<strong><em>Safari</em></strong>'.</p>\n\n<p>So this works:</p>\n\n<pre><code>var is_chrome = navigator.userAgent.indexOf('Chrome') &gt; -1;\nvar is_explorer = navigator.userAgent.indexOf('MSIE') &gt; -1;\nvar is_firefox = navigator.userAgent.indexOf('Firefox') &gt; -1;\nvar is_safari = navigator.userAgent.indexOf(\"Safari\") &gt; -1;\nvar is_Opera = navigator.userAgent.indexOf(\"Presto\") &gt; -1;\nif ((is_chrome)&amp;&amp;(is_safari)) {is_safari=false;}\n</code></pre>\n\n<p><b>if (is_safari) alert('Safari');</b></p>\n\n<p>Or for Safari only, use this :</p>\n\n<pre><code>if (navigator.userAgent.indexOf('Safari') != -1 &amp;&amp; navigator.userAgent.indexOf('Chrome') == -1) {alert('Its Safari');}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 123
                },
                {
                    "body": "<p>For checking Safari I used this:</p>\n\n<pre><code>$.browser.safari = ($.browser.webkit &amp;&amp; !(/chrome/.test(navigator.userAgent.toLowerCase())));\nif ($.browser.safari) {\n    alert('this is safari');\n}\n</code></pre>\n\n<p>It works correctly.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The following identifies Safari 3.0+ and distinguishes it from Chrome:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>isSafari = !!navigator.userAgent.match(/Version\\/[\\d\\.]+.*Safari/)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>unfortunately the above examples will also detect android's default browser as Safari, which it is not.\nI used \n<code>navigator.userAgent.indexOf('Safari') != -1 &amp;&amp; navigator.userAgent.indexOf('Chrome') == -1 &amp;&amp;  navigator.userAgent.indexOf('Android') == -1</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Generic FUNCTION</p>\n\n<pre><code> getBrowseActive = function (browserName) {\n   if (navigator.userAgent.indexOf(browserName) &gt; -1)\n     return true;\n\n   return false;\n };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A very useful way to fix this is to detect the browsers webkit version and check if it is at least the one we need, else do something else.</p>\n\n<p>Using jQuery it goes like this:<div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>\"use strict\";\r\n\r\n$(document).ready(function()\r\n{\r\n\tvar appVersion\t\t\t= navigator.appVersion;\r\n\tvar webkitVersion_positionStart\t= appVersion.indexOf(\"AppleWebKit/\") + 12;\r\n\tvar webkitVersion_positionEnd\t= webkitVersion_positionStart + 3;\r\n\tvar webkitVersion\t\t= appVersion.slice(webkitVersion_positionStart,webkitVersion_positionEnd);\r\n\tconsole.log(webkitVersion);\r\n\tif (webkitVersion  &lt; 537)\r\n\t{\r\n\t\tconsole.log(\"webkit outdated.\");\r\n\t} else\r\n\t{\r\n\t\tconsole.log(\"webkit ok.\");\r\n\t};\r\n});</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>This provides a safe and permanent fix for dealing with problems with browser's different webkit implementations.</p>\n\n<p>Happy coding!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Though both are Webkit based browsers, Safari urlencodes quotation marks in the URL while Chrome does not.</p>\n\n<p>Therefore I need to distinguish between these two in JS.</p>\n\n<p><a href=\"http://api.jquery.com/jQuery.browser/\">jQuery's browser detection docs</a> mark \"safari\" as deprecated.</p>\n\n<p>Is there a better method or do I just stick with the deprecated value for now?</p>\n",
            "last_activity_date": 1411256152,
            "question_id": 5899783,
            "score": 39,
            "tags": [
                "javascript",
                "jquery",
                "safari",
                "browser-detection"
            ],
            "title": "Detect Safari, Chrome, IE, Firefox, Opera (with user agent)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Main differences are</p>\n\n<p><code>{{view}}</code> renders the provided view class which should be available<br></p>\n\n<p><code>{{partial}}</code> renders the template available in Ember.TEMPLATES. its may not have related the view class. Advantage is context of the template remains of the parent view.<br></p>\n\n<p><code>{{outlet}}</code> Specify the router that here it is supposed to render the provided view or template or as per renderTemplate() hook.<br></p>\n\n<p><code>{{outlet NAME}}</code> useful when you want to render two views/templates at different positions. You can name the outlets and ask router to render.</p>\n\n<p><code>{{render}}</code> same as outlet except you force the router to render specific view/template.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>They are all template helpers with the following main characteristics as described in emberjs guides.\n(<a href=\"http://emberjs.com/guides/templates/rendering-with-helpers/\">http://emberjs.com/guides/templates/rendering-with-helpers/</a>)</p>\n\n<p>1.<code>{{outlet}}</code> - Renders a template based on the route determined by the router. Based on the route the corresponding controller and view are used. <strong>This is useful when rendering contents based on the route, which is the most common case</strong>.</p>\n\n<p>2.<code>{{outlet NAME}}</code> - Provides the ability to specify in the route where exactly to render the content. <strong>Useful when trying to render contents from more than one templates for a route</strong>.</p>\n\n<p>3.<code>{{render}}</code> - Similar to <code>outlet</code> but the controller/view/model can be specified directly or indirectly from the helper. Useful when required to render content from more than one template with the ability to override the context (view/controller) and model. If model is specified it uses a unique instance of the corresponding controller, otherwise it will use the singleton instance. <strong>Useful when required to overide the route's context and model, while rendering multiple template contents</strong>.</p>\n\n<p>4.<code>{{control}}</code> - Works like render, except it uses a new controller instance for every call, instead of reusing the singleton controller. When using <code>render</code> it is not possible to use multiple render for the same route without specifying the model, for that case the <code>control</code> should be used. <strong>Useful to support new instances of a controller for every template content rendered.</strong></p>\n\n<p><strong>Update:</strong> Control helper has been removed <a href=\"https://github.com/emberjs/ember.js/commit/86eecd7ef7cdc7d2ea6f77b3a726b293292ec55d\">https://github.com/emberjs/ember.js/commit/86eecd7ef7cdc7d2ea6f77b3a726b293292ec55d</a> .</p>\n\n<p>5.<code>{{partial}}</code> -  Takes the template to be rendered as an argument, and renders that template in place. It does not change context or scope. It simply drops the given template into place with the current scope. So no view class is specified for the partial. <strong>Useful when it is required to break a template into template modules, for better control or reusability, without creating any view classes</strong>.</p>\n\n<p>6.<code>{{view}}</code> - This works like partial but a view class is provided. The view class specifies the template to be used. <strong>Useful when breaking a template into modules but requiring a view class e.g. for event handling.</strong></p>\n\n<p>7.<code>{{#view}}</code> - There is also the block form of the view helper, which allows specifying the template of the child view inline with the parent view template. (<a href=\"http://emberjs.com/guides/views/inserting-views-in-templates/\">http://emberjs.com/guides/views/inserting-views-in-templates/</a>)</p>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p><code>{{outlet}}</code> this defines where nested resources/routes will be rendered inside a route's template</p>\n\n<p><code>{{outlet NAME}}</code> this creates a named outlet where you can programmatically render something into</p>\n\n<pre><code>App.PostRoute = App.Route.extend({\n  renderTemplate: function() {\n    this.render('favoritePost', {   // the template to render\n      into: 'posts',                // the route to render into\n      outlet: 'posts',              // the name of the outlet in the route's template\n      controller: 'blogPost'        // the controller to use for the template\n    });\n    this.render('comments', {\n      into: 'favoritePost',\n      outlet: 'comment',    \n      controller: 'blogPost'\n    });\n  }\n});\n</code></pre>\n\n<p><code>{{render}}</code> takes two parameters:</p>\n\n<p>The first parameter describes the context to be setup\nThe optional second parameter is a model, which will be passed to the controller if provided</p>\n\n<p><code>{{render}}</code> does several things:</p>\n\n<p>When no model is provided it gets the singleton instance of the corresponding controller\nWhen a model is provided it gets a unique instance of the corresponding controller\nRenders the named template using this controller\nSets the model of the corresponding controller</p>\n\n<p><code>{{partial}}</code> takes the template to be rendered as an argument, and renders that template in place (using the current scope as the context).</p>\n\n<p><code>{{view}}</code> This helper works like the partial helper, except instead of providing a template to be rendered within the current template, you provide a view class. The view controls what template is rendered.</p>\n\n<p><code>{{control}}</code> is <strong>deprecated</strong> works like render, except it uses a new controller instance for every call, instead of reusing the singleton controller.</p>\n\n<p>Most of this I just copied and pasted from their documentation: <a href=\"http://emberjs.com/guides/templates/rendering-with-helpers/\" rel=\"nofollow\">http://emberjs.com/guides/templates/rendering-with-helpers/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>There are scattered explainations of each around, but I'm still not 100% clear on the differences &amp; usage.  Could someone give me a side-by-side comparison?</p>\n\n<pre><code>{{outlet}}\n{{outlet NAME}}\n{{render}}\n{{partial}}\n{{view}}\n{{control}}\n</code></pre>\n\n<p>Note: <a href=\"http://stackoverflow.com/questions/14697221/handlebars-partial-vs-render-vs-template\">this post</a> was very helpful with partial vs render </p>\n",
            "last_activity_date": 1401987570,
            "question_id": 19982257,
            "score": 37,
            "tags": [
                "javascript",
                "ember.js",
                "handlebars.js"
            ],
            "title": "ember.js + handlebars: render vs outlet vs partial vs view vs control"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Javascript's inheritance is prototype based, so you extend the prototypes of objects such as Date, Math, and even your own custom ones.</p>\n\n<pre><code>Date.prototype.lol = function() {\n alert('hi');\n};\n\n( new Date ).lol() // alert message\n</code></pre>\n\n<p>In the snippet above, I define a method for <em>all</em> Date objects ( already existing ones and all new ones ). </p>\n\n<p><code>extend</code> is usually a high level function that copies the prototype of a new subclass that you want to extend from the base class.</p>\n\n<p>So you can do something like:</p>\n\n<pre><code>extend( Fighter, Human )\n</code></pre>\n\n<p>And the <code>Fighter</code> constructor/object will inherit the prototype of <code>Human</code>, so if you define methods such as <code>live</code> and <code>die</code> on <code>Human</code> then <code>Fighter</code> will also inherit those.</p>\n",
                    "is_accepted": true,
                    "score": 77
                },
                {
                    "body": "<p><code>.extend()</code> is added by many third-party libraries to make it easy to create objects from other objects.  See <a href=\"http://api.jquery.com/jQuery.extend/\">http://api.jquery.com/jQuery.extend/</a> or <a href=\"http://www.prototypejs.org/api/object/extend\">http://www.prototypejs.org/api/object/extend</a> for some examples.</p>\n\n<p><code>.prototype</code> refers to the \"template\" (if you want to call it that) of an object, so by adding methods to an object's prototype (you see this a lot in libraries to add to String, Date, Math, or even Function) those methods are added to every new instance of that object. </p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>The <code>extend</code> method for example in <a href=\"http://api.jquery.com/jQuery.extend/\">jQuery</a> or <a href=\"http://www.prototypejs.org/api/object/extend\">PrototypeJS</a>, copies all properties from the source to the destination object.</p>\n\n<p>Now about the <code>prototype</code> property, it is a member of function objects, it is part of the language core.</p>\n\n<p>Any function can be used as a <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Working_with_Objects#Using_a_Constructor_Function\"><em>constructor</em></a>, to create new object instances. All functions have this <code>prototype</code> property.</p>\n\n<p>When you use the <code>new</code> operator with on a function object, a new object will be created, and it will inherit from its constructor <code>prototype</code>.</p>\n\n<p>For example:</p>\n\n<pre><code>function Foo () {\n}\nFoo.prototype.bar = true;\n\nvar foo = new Foo();\n\nfoo.bar; // true\nfoo instanceof Foo; // true\nFoo.prototype.isPrototypeOf(foo); // true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Javascript inheritance seems to be like an open debate everywhere. It can be called \"The curious case of Javascript language\".</p>\n\n<p>The idea is that there is a base class and then you extend the base class to get an inheritance-like feature (not completely, but still).</p>\n\n<p>The whole idea is to get what prototype really means. I did not get it until I saw John Resig's code (close to what <code>jQuery.extend</code> does) wrote a code chunk that does it and he claims that base2 and prototype libraries were the source of inspiration.</p>\n\n<p>Here is the code. </p>\n\n<pre><code>    /* Simple JavaScript Inheritance\n     * By John Resig http://ejohn.org/\n     * MIT Licensed.\n     */  \n     // Inspired by base2 and Prototype\n    (function(){\n  var initializing = false, fnTest = /xyz/.test(function(){xyz;}) ? /\\b_super\\b/ : /.*/;\n\n  // The base Class implementation (does nothing)\n  this.Class = function(){};\n\n  // Create a new Class that inherits from this class\n  Class.extend = function(prop) {\n    var _super = this.prototype;\n\n    // Instantiate a base class (but only create the instance,\n    // don't run the init constructor)\n    initializing = true;\n    var prototype = new this();\n    initializing = false;\n\n    // Copy the properties over onto the new prototype\n    for (var name in prop) {\n      // Check if we're overwriting an existing function\n      prototype[name] = typeof prop[name] == \"function\" &amp;&amp;\n        typeof _super[name] == \"function\" &amp;&amp; fnTest.test(prop[name]) ?\n        (function(name, fn){\n          return function() {\n            var tmp = this._super;\n\n            // Add a new ._super() method that is the same method\n            // but on the super-class\n            this._super = _super[name];\n\n            // The method only need to be bound temporarily, so we\n            // remove it when we're done executing\n            var ret = fn.apply(this, arguments);        \n            this._super = tmp;\n\n            return ret;\n          };\n        })(name, prop[name]) :\n        prop[name];\n    }\n\n    // The dummy class constructor\n    function Class() {\n      // All construction is actually done in the init method\n      if ( !initializing &amp;&amp; this.init )\n        this.init.apply(this, arguments);\n    }\n\n    // Populate our constructed prototype object\n    Class.prototype = prototype;\n\n    // Enforce the constructor to be what we expect\n    Class.prototype.constructor = Class;\n\n    // And make this class extendable\n    Class.extend = arguments.callee;\n\n    return Class;\n  };\n})();\n</code></pre>\n\n<p>There are three parts which are doing the job. First, you loop through the properties and add them to the instance. After that, you create a constructor for later to be added to the object.Now, the key lines are:</p>\n\n<pre><code>// Populate our constructed prototype object\nClass.prototype = prototype;\n\n// Enforce the constructor to be what we expect\nClass.prototype.constructor = Class;\n</code></pre>\n\n<p>You first point the <code>Class.prototype</code> to the desired prototype. Now, the whole object has changed meaning that you need to force the layout back to its own one.</p>\n\n<p>And the usage example:</p>\n\n<pre><code>var Car = Class.Extend({\n  setColor: function(clr){\n    color = clr;\n  }\n});\n\nvar volvo = Car.Extend({\n   getColor: function () {\n      return color;\n   }\n});\n</code></pre>\n\n<p>Read more about it here at <a href=\"http://ejohn.org/blog/simple-javascript-inheritance/\">Javascript Inheritance by John Resig</a> 's post.</p>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>I am relatively new to JavaScript and keep seeing .extend and .prototype in third party libraries I am using. I thought it had to do with the Prototype javascript library, but I am beginning to think that is not the case. What are these used for?</p>\n",
            "last_activity_date": 1387384393,
            "question_id": 3781373,
            "score": 75,
            "tags": [
                "javascript",
                "prototype",
                "object-model"
            ],
            "title": "JavaScript: What are .extend and .prototype used for?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>The designers of MVC went through a lot of trouble to prevent us from using code-behinds, but by creating a file named &lt;viewname>.aspx.cs and modify the inherits attribute of the aspx page accordingly, it is still possible to get them.</p>\n\n<p>I'd say, the best place to put the include would be in the Page_Load handler in the codebehind (using Page.ClientScript.RegisterClientScriptInclude).</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This seems like a similar (although not entirely) question.  <a href=\"http://stackoverflow.com/questions/863436/is-it-bad-practice-to-return-partial-views-that-contain-javascript/863465#863465\">Is it bad practice to return partial views that contain javascript?</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My preference will be to create a plugin.master page that inherits from your main Site.master. The idea is that you stuff these plugins into plugin.master and make the 8 or so pages that will use this partial view to inherit from plugin.master.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The preferred approach is to <a href=\"http://developer.yahoo.com/performance/rules.html#js%5Fbottom\" rel=\"nofollow\">put scripts at the bottom</a>, however, if you can't avoid that then it's reasonable to put them in the middle.</p>\n\n<p>Browsers usually load the various page elements in parallel, however, while the browser is downloading the Javascript file, it won't download any other page elements in parallel until the Javascript is done downloading. This means that your images and what not will have to wait so it's generally considered better to move scripts at the bottom but if your script is small then I wouldn't worry about it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Seems very similar to this question: <a href=\"http://stackoverflow.com/questions/885990/linking-javascript-libraries-in-user-controls/886184#886184\">Linking JavaScript Libraries in User Controls</a></p>\n\n<p>I'll repost my answer that that question here.</p>\n\n<p>I would definitely advise against putting them inside partials for exactly the reason you mention. There is a high chance that one view could pull in two partials that both have references to the same js file. You've also got the performance hit of loading js before loading the rest of the html.</p>\n\n<p>I don't know about best practice but I choose to include any common js files inside the masterpage and then define a separate ContentPlaceHolder for some additional js files that are specific to a particular or small number of views.</p>\n\n<p>Here's an example master page - it's pretty self explanatory.</p>\n\n<pre><code>&lt;%@ Master Language=\"C#\" Inherits=\"System.Web.Mvc.ViewMasterPage\" %&gt;\n&lt;head runat=\"server\"&gt;\n    ... BLAH ...\n    &lt;asp:ContentPlaceHolder ID=\"AdditionalHead\" runat=\"server\" /&gt;\n    ... BLAH ...\n    &lt;%= Html.CSSBlock(\"/styles/site.css\") %&gt;\n    &lt;%= Html.CSSBlock(\"/styles/ie6.css\", 6) %&gt;\n    &lt;%= Html.CSSBlock(\"/styles/ie7.css\", 7) %&gt;\n    &lt;asp:ContentPlaceHolder ID=\"AdditionalCSS\" runat=\"server\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    ... BLAH ...\n    &lt;%= Html.JSBlock(\"/scripts/jquery-1.3.2.js\", \"/scripts/jquery-1.3.2.min.js\") %&gt;\n    &lt;%= Html.JSBlock(\"/scripts/global.js\", \"/scripts/global.min.js\") %&gt;\n    &lt;asp:ContentPlaceHolder ID=\"AdditionalJS\" runat=\"server\" /&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>Html.CSSBlock &amp; Html.JSBlock are obviously my own extensions but again, they are self explanatory in what they do.</p>\n\n<p>Then in say a SignUp.aspx view I would have</p>\n\n<pre><code>&lt;asp:Content ID=\"signUpContent\" ContentPlaceHolderID=\"AdditionalJS\" runat=\"server\"&gt;\n    &lt;%= Html.JSBlock(\"/scripts/pages/account.signup.js\", \"/scripts/pages/account.signup.min.js\") %&gt;\n&lt;/asp:Content&gt;\n</code></pre>\n\n<p>HTHs, Charles</p>\n\n<p>Ps. Here is a follow up question I asked about minifying and concatenating js files: \n<a href=\"http://stackoverflow.com/questions/890561/concatenate-minify-js-on-the-fly-or-at-build-time-asp-net-mvc\">Concatenate &amp; Minify JS on the fly OR at build time - ASP.NET MVC</a></p>\n\n<p><strong>EDIT:</strong> As requested on my other answer, my implementation of .JSBlock(a, b) as requested</p>\n\n<pre><code>public static MvcHtmlString JSBlock(this HtmlHelper html, string fileName)\n{\n    return html.JSBlock(fileName, string.Empty);\n}\n\npublic static MvcHtmlString JSBlock(this HtmlHelper html, string fileName, string releaseFileName)\n{\n    if (string.IsNullOrEmpty(fileName))\n        throw new ArgumentNullException(\"fileName\");\n\n    string jsTag = string.Format(\"&lt;script type=\\\"text/javascript\\\" src=\\\"{0}\\\"&gt;&lt;/script&gt;\",\n                                 html.MEDebugReleaseString(fileName, releaseFileName));\n\n    return MvcHtmlString.Create(jsTag);\n}\n</code></pre>\n\n<p>And then where the magic happens...</p>\n\n<pre><code>    public static MvcHtmlString MEDebugReleaseString(this HtmlHelper html, string debugString, string releaseString)\n    {\n        string toReturn = debugString;\n#if DEBUG\n#else\n        if (!string.IsNullOrEmpty(releaseString))\n            toReturn = releaseString;\n#endif\n        return MvcHtmlString.Create(toReturn);\n    }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>The reason you would put a script at the bottom of the page is to ensure the dom has been loaded before attempting any manipulation. This can also be achieved in something like the $(document).ready(callback); jQuery method.</p>\n\n<p>I share the view of not putting embedded JavaScript in the html. Instead I use an Html helper to create an empty div to use as a server instruction. The helper sig is Html.ServerData(String name, Object data);</p>\n\n<p>I use this ServerData method for instructions from the server to the client. The div tag keeps it clean and the \"data-\" attribute is valid html5.</p>\n\n<p>For the loadScript instruction I may do something like this in my ascx or aspx:</p>\n\n<pre>\n&lt;%= Html.ServerData(\"loadScript\", new { url: \"pathTo.js\" }) %&gt;\n</pre>\n\n<p>Or add another helper to do this which looks a little cleaner:</p>\n\n<pre>&lt;%= Html.LoadScript(\"~/path/to.js\") %&gt;</pre>\n\n<p>The html output would be:</p>\n\n<pre>&lt;div name=\"loadScript\" data-server=\"encoded json string\"&gt;</pre>\n\n<p>Then I have a jQuery method that can find any server data tag:\n$(containingElement).serverData(\"loadScript\"); // returns a jQuery like array of the decoded json objects.</p>\n\n<p>The client may look something like this:</p>\n\n<pre>\nvar script = $(containingelement\").serverData(\"loadScript\");\n$.getScript(script.url, function () {\n    // script has been loaded - can do stuff with it now\n});\n</pre>\n\n<p>This technique is great for user controls or scripts that need to be loaded within ajax loaded content. The version I wrote is a little more involved handling caching scripts so they load only once per full page load and contain callbacks and jQuery triggers so you can hook into it when it is ready.</p>\n\n<p>If anyone is interested in the full version of this (from MVC to jQuery extension) I would be happy to show off this technique in more detail. Otherwise - hopes it gives someone a new way of approaching this tricky problem.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Today I've created my own solution which fits the bill perfectly. Whether it is good design or not, is for you all to decide but thought I should share either way!</p>\n\n<p>Below is my HtmlExtensions class which allows you to do this in your masterpage: </p>\n\n<pre><code>&lt;%=Html.RenderJScripts() %&gt;\n</code></pre>\n\n<p>My HtmlExtensions class: </p>\n\n<pre><code>public static class HtmlExtensions\n{\n    private const string JSCRIPT_VIEWDATA = \"__js\";\n\n    #region Javascript Inclusions\n\n    public static void JScript(this HtmlHelper html, string scriptLocation)\n    {\n        html.JScript(scriptLocation, string.Empty);\n    }\n\n    public static void JScript(this HtmlHelper html, string scriptLocationDebug, string scriptLocationRelease)\n    {\n        if (string.IsNullOrEmpty(scriptLocationDebug))\n            throw new ArgumentNullException(\"fileName\");\n\n        string jsTag = \"&lt;script type=\\\"text/javascript\\\" src=\\\"{0}\\\"&gt;&lt;/script&gt;\";\n\n#if DEBUG\n        jsTag = string.Format(jsTag, scriptLocationDebug);\n#else\n        jsTag = string.Format(jsTag, !string.IsNullOrEmpty(scriptLocationRelease) ? scriptLocationRelease : scriptLocationDebug);\n#endif\n\n        registerJScript(html, jsTag);\n    }\n\n    public static MvcHtmlString RenderJScripts(this HtmlHelper html)\n    {\n        List&lt;string&gt; jscripts = html.ViewContext.TempData[JSCRIPT_VIEWDATA] as List&lt;string&gt;;\n        string result = string.Empty; ;\n        if(jscripts != null)\n        {\n            result = string.Join(\"\\r\\n\", jscripts);\n        }\n        return MvcHtmlString.Create(result);\n    }\n\n    private static void registerJScript(HtmlHelper html, string jsTag)\n    {\n        List&lt;string&gt; jscripts = html.ViewContext.TempData[JSCRIPT_VIEWDATA] as List&lt;string&gt;;\n        if(jscripts == null) jscripts = new List&lt;string&gt;();\n\n        if(!jscripts.Contains(jsTag))\n            jscripts.Add(jsTag);\n\n        html.ViewContext.TempData[JSCRIPT_VIEWDATA] = jscripts;\n    }\n\n    #endregion\n\n}\n</code></pre>\n\n<p><strong>What is going on?</strong><br>\nThe class above will extend the HtmlHelper with methods to add javascript links to a collection that is being stored by the <code>HtmlHelper.ViewContext.TempData</code> collection. At the end of the masterpage I put the <code>&lt;%=Html.RenderJScripts() %&gt;</code> which will loop the jscripts collection inside the <code>HtmlHelper.ViewContext.TempData</code> and render these to the output.</p>\n\n<p>There is a downside however,.. You have to ensure that you don't render the scripts before you've added them. If you'd want to do this for css links for example, it wouldn't work because you have to place these in the <code>&lt;head&gt;</code> tag of your page and the htmlhelper would render the output before you've even added a link.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>hejdig.</p>\n\n<p>Playing around with Aspnetmvc3 I decided, for now, to just include my javascript file in the partial</p>\n\n<p>&lt;script src=\"@Url.Content(\"~/Scripts/User/List.js\")\" type=\"text/javascript\"&gt;&lt;/script&gt;</p>\n\n<p>This js file is then specific for my /user/List.schtml file.</p>\n\n<p>/OF</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am wondering what the best practice is for including javascript files inside partial views. Once rendered this will end up as a js include tag in the middle of my page's html. From my point of view this isn't a nice way of doing this. They belong in the head tag and as such should not prevent the browser from rendering the html in one go.</p>\n\n<p><strong>An example:</strong>\nI am using a jquery picturegallery plugin inside a 'PictureGallery' partial view as this partial view will be used on several pages. This plugin only needs to be loaded when this view is used and <strong>I don't want to have to need to know which plugins each partial view is using...</strong></p>\n\n<p>Thanks for your answers.</p>\n",
            "last_activity_date": 1291287399,
            "question_id": 912755,
            "score": 64,
            "tags": [
                "javascript",
                "jquery",
                "asp.net-mvc",
                "partial-views"
            ],
            "title": "Include JavaScript file in partial views"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>What you are after is called <strong>partial function application</strong>. </p>\n\n<p>Don't be fooled by those that don't understand the subtle difference between that and currying, they <em>are</em> different.</p>\n\n<p>Partial function application can be used to implement, but <em>is not</em> currying. Here is a quote from <a href=\"http://www.uncarved.com/blog/not_currying.mrk\"><strong>a blog post on the difference</strong></a>:</p>\n\n<blockquote>\n  <p>Where partial application takes a function and from it builds a function which takes fewer arguments, currying builds functions which take multiple arguments by composition of functions which each take a single argument.</p>\n</blockquote>\n\n<p>This has already been answered, see this question for your answer: <a href=\"http://stackoverflow.com/questions/321113\"><strong>How can I pre-set arguments in JavaScript function call?</strong></a></p>\n\n<p>Example:</p>\n\n<pre><code>var fr = partial(f, 1, 2, 3);\n\n// now, when you invoke fr() it will invoke f(1,2,3)\nfr();\n</code></pre>\n\n<p>Again, see that question for the details.</p>\n",
                    "is_accepted": true,
                    "score": 53
                },
                {
                    "body": "<p>The following is equivalent to your second code block:</p>\n\n<pre><code>var f = function () {\n        //Some logic here...\n    };\n\nvar fr = f;\n\nfr(pars);\n</code></pre>\n\n<p>If you want to actually pass a reference to a function to some other function, you can do something like this:</p>\n\n<pre><code>function fiz(x, y, z) {\n    return x + y + z;\n}\n\n// elsewhere...\n\nfunction foo(fn, p, q, r) {\n    return function () {\n        return fn(p, q, r);\n    }\n}\n\n// finally...\n\nf = foo(fiz, 1, 2, 3);\nf(); // returns 6\n</code></pre>\n\n<p>You're almost certainly better off using a framework for this sort of thing, though.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>You can also overload the Function prototype:</p>\n\n<pre><code>// partially applies the specified arguments to a function, returning a new function\nFunction.prototype.curry = function( ) {\n    var func = this;\n    var slice = Array.prototype.slice;\n    var appliedArgs = slice.call( arguments, 0 );\n\n    return function( ) {\n        var leftoverArgs = slice.call( arguments, 0 );\n        return func.apply( this, appliedArgs.concat( leftoverArgs ) );\n    };\n};\n\n// can do other fancy things:\n\n// flips the first two arguments of a function\nFunction.prototype.flip = function( ) {\n    var func = this;\n    return function( ) {\n        var first = arguments[0];\n        var second = arguments[1];\n        var rest = Array.prototype.slice.call( arguments, 2 );\n        var newArgs = [second, first].concat( rest );\n\n        return func.apply( this, newArgs );\n    };\n};\n\n/*\ne.g.\n\nvar foo = function( a, b, c, d ) { console.log( a, b, c, d ); }\nvar iAmA = foo.curry( \"I\", \"am\", \"a\" );\niAmA( \"Donkey\" );\n-&gt; I am a Donkey\n\nvar bah = foo.flip( );\nbah( 1, 2, 3, 4 );\n-&gt; 2 1 3 4\n*/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/321113/how-can-i-pre-set-arguments-in-javascript-function-call-partial-function-appli\">How can I pre-set arguments in JavaScript function call? (Partial Function Application)</a>  </p>\n</blockquote>\n\n\n\n<p>I need to able to <strong>pass a reference to a function with a given set of parameters</strong>.</p>\n\n<p>Here is an example of passing a reference <strong><em>without</strong> parameters</em>:</p>\n\n<pre><code>var f = function () {\n    //Some logic here...\n};\n\nvar fr = f; //Here I am passing a reference to function 'f', without parameters\nfr(); //the 'f' function is invoked, without parameters\n</code></pre>\n\n<p>Now what I need to do is pass the same <code>f</code> function, but this time I would need to pass parameters to the reference.  Now, I can do it with an anonymous function and invoke the <code>f</code> function with parameters inside the newly created function, like such:</p>\n\n<pre><code>var f = function () {\n        //Some logic here...\n    };\n\nvar fr = function (pars) {\n    f(pars);\n}; //Here I am creating an anonymous function, and invoking f inside it\n\nfr({p : 'a parameter'}); //Invoking the fr function, that will later invoke the f function with parameters\n</code></pre>\n\n<p>But my question is, <strong>Is there a way to pass a direct reference to the <code>f</code> function With parameters to <code>fr</code>, but without enclosing it in an anonymous function?</strong></p>\n\n<p><em>What do I need to assign to <code>fr</code> to make it invokable without parameters (<code>fr()</code>), so that f(1,2,3) is executed when <code>fr</code> is invoked?</em>   </p>\n\n<p><strong>[UPDATE]</strong> \nI followed <a href=\"http://stackoverflow.com/questions/373157/javascript-passing-a-reference-to-a-function-with-parameters#373216\">Jason Bunting</a>'s answer to <a href=\"http://stackoverflow.com/questions/321113\">here</a> about the <em>Partial Function</em> and the JavaScript function he posts there is exactly what I was looking for.  Here is the solution:</p>\n\n<pre><code>function partial(func /*, 0..n args */) {\n  var args = Array.prototype.slice.call(arguments).splice(1);\n  return function() {\n    var allArguments = args.concat(Array.prototype.slice.call(arguments));\n    return func.apply(this, allArguments);\n  };\n}\n</code></pre>\n",
            "last_activity_date": 1393461379,
            "question_id": 373157,
            "score": 62,
            "tags": [
                "javascript",
                "pass-by-reference",
                "anonymous-function"
            ],
            "title": "How can I pass a reference to a function, with parameters?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>It might help to see your CSS, as it sounds like a rather weird issue. But anyway, if it is happening and all else is good, you could try shifting the hover effect to javascript (you could use jquery as well).\nSimply, bind to the mouseover or better still mouseenter event and light up your element when the event fires.</p>\n\n<p>Checkout the last example here: <a href=\"http://api.jquery.com/mouseover/\" rel=\"nofollow\">http://api.jquery.com/mouseover/</a>, you could use something similar to log when the event fires and take it from there!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>How can I get the hover effects when I'm using the mouse, but suppress them when I'm using the touchscreen?</p>\n</blockquote>\n\n<p>Maybe don't think of it so much as suppressing hover effects for touchscreens, but as adding hover effects for mouse events?</p>\n\n<p>If you want to keep the <code>:hover</code> effects in your CSS you could specify different styles for different media:</p>\n\n<pre><code>@media screen { /* hover styles here */ } \n\n@media handheld { /* non-hover styles here */ }\n</code></pre>\n\n<p>Except that unfortunately there are plenty of mobile devices that ignore this and just use the screen rules. Fortunately a lot of newer mobile/tablet browsers do support some fancier media queries:</p>\n\n<pre><code>@media screen and (max-width:800px) { /* non-hover styles here */ }\n</code></pre>\n\n<p>So even if the \"screen\" or \"handheld\" part is ignored the \"max-width\" will do the trick for you. You could just assume that anything with a screen smaller than 800 pixels must be a tablet or phone, and not use hover effects. For the rare users who are using a mouse on a low resolution device they wouldn't see the hover effects but your site would be fine otherwise.</p>\n\n<p>Further reading on media queries? There are plenty of articles about this online - here is one: <a href=\"http://www.alistapart.com/articles/return-of-the-mobile-stylesheet\">http://www.alistapart.com/articles/return-of-the-mobile-stylesheet</a></p>\n\n<p>If you shift the hover effects out of your CSS and apply them with JavaScript then you could bind specifically to mouse events, and/or again you could just make some assumptions just based on screen size with the worst-case \"problem\" being that some user who is using a mouse misses out on the hover effects.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>What I've done to solve the same problem is to have a feature detection (I use something like <a href=\"http://stackoverflow.com/a/4819886/26115\">this code</a>), seeing if onTouchMove is defined, and if so I add the css class \"touchMode\" to the body, else i add \"desktopMode\".</p>\n\n<p>Then every time some style effect only applies to a touch device, or only to a desktop the css rule is prepended with the appropriate class:</p>\n\n<pre><code>.desktopMode .someClass:hover{ color: red }\n.touchMode .mainDiv { width: 100%; margin: 0; /*etc.*/ }\n</code></pre>\n\n<p><em>Edit</em>: This strategy of course adds a few extra characters to your css, so If you're concerned about css size, you could search for the touchMode and desktopMode definitons and put them into different files, so you can serve optimized css for each device type; or you could change the class names to something much shorter before going to prod.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you are happy to use JavaScript then you can use <a href=\"http://modernizr.com/\" rel=\"nofollow\">Modernizr</a> in your page. When the page loads, a non-touch screen browser will have the class '.no-touch' added to the html tag, but for a touch screen browser, the html tag will have the class '.touch' added to the html tag. </p>\n\n<p>Then it is simply a case of checking to see if the html tag has the no-touch class before deciding to add your mouseenter and mouseleave listeners.</p>\n\n<pre><code>if($('html').hasClass('no-touch')){\n    $('.box').on(\"mouseenter\", function(event){\n            $(this).css('background-color','#0000ff')\n    });\n    $('.box').on(\"mouseleave\", function(event){\n            $(this).css('background-color','')\n    });\n}\n</code></pre>\n\n<p>For a touchscreen device the events will have no listeners so you will get no hover effect when you tap.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In a project I did recently, I solved this problem with jQuery's delegated events feature. It looks for certain elements using a jQuery selector, and adds/removes a CSS class to those elements when the mouse is over the element. It seems to work well as far as I've been able to test it, which includes IE10 on a touch-capable notebook running Windows 8.</p>\n\n<pre><code>$(document).ready(\n    function()\n    {\n        // insert your own selector here: maybe '.hoverable'?\n        var selector = 'button, .hotspot';\n\n        $('body')\n            .on('mouseover', selector, function(){ $(this).addClass('mouseover');    })\n            .on('mouseout',  selector, function(){ $(this).removeClass('mouseover'); })\n            .on('click',     selector, function(){ $(this).removeClass('mouseover'); });\n    }\n);\n</code></pre>\n\n<p><em><strong>edit:</strong> this solution does, of course, require that you alter your CSS to remove the \":hover\" selectors, and contemplate in advance on which elements you want to be \"hoverable\".</em></p>\n\n<p>If you have very many elements on your page (like several thousand) it may get a bit slow, though, because this solution catches events of three types on <em>all elements</em> in the page, and then does its thing if the selector matches. I named the CSS class \"mouseover\" instead of \"hover\", because I didn't want any CSS readers to read \":hover\" where I wrote \".hover\".</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Right, I jst had a similar problem but managed to fix it with media queries and simple CSS. I'm sure I'm breaking some rules here, but it's working for me.</p>\n\n<p>I basically had to take a massive application someone made, and make it responsive. They used jQueryUI and asked me not to tamper with any of their jQuery, so I was restricted to using CSS alone.</p>\n\n<p>When I pressed one of their buttons in touchscreen mode, the hover effect woudld fire for a second before the button's action took effect. Here's how I fixed it.</p>\n\n<pre><code>@media only screen and (max-width:1024px) {\n\n       #buttonOne{\n            height: 44px;\n        }\n\n\n        #buttonOne:hover{\n            display:none;\n        }\n}   \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had the same issue and fixed it by switching my CSS <code>:hover</code> declarations over to <code>.mouseover</code> declarations and using the following Javascript to handle hover states. </p>\n\n<pre><code>$(\".button\")\n    .on(\"mouseover\", function() {\n        $(this).addClass(\"mouseover\");\n    })\n    .on(\"mouseout\", function() {\n        $(this).removeClass(\"mouseover\");\n    })\n    .on(\"click\", function() {\n        $(this).removeClass(\"mouseover\");\n    });\n</code></pre>\n\n<p>With the above JS, when a touch screen user selects a button and their invisible mouse is left over it (which is what's causing the <code>:hover</code> declaration to remain), the <code>click</code> event is fired and removes the <code>.mouseover</code> class.</p>\n\n<p><strong>Update 3/16/14</strong>\nI am now instead using different code to implement this on sites that require full desktop, tablet and mobile support. You can find this code at <a href=\"http://stackoverflow.com/questions/8291517/disable-hover-effects-on-mobile-browsers/22395157#22395157\">this other answer</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I wrote the following JS for a recent project, which was a desktop/mobile/tablet site that has hover effects that shouldn't appear on-touch.</p>\n\n<p>The <code>mobileNoHoverState</code> module below has a variable <code>preventMouseover</code> (initially declared as <code>false</code>), that is set to <code>true</code> when a user fires the <code>touchstart</code> event on an element, <code>$target</code>. </p>\n\n<p><code>preventMouseover</code> is then being set back to <code>false</code> whenever the <code>mouseover</code> event is fired, which allows the site to work as intended if a user is using both their touchscreen and mouse.</p>\n\n<p>We know that <code>mouseover</code> is being triggered after <code>touchstart</code> because of the order that they are being declared within <code>init</code>.</p>\n\n<pre><code>var mobileNoHoverState = function() {\n\n    var hoverClass = 'hover',\n        $target = $(\".foo\"), \n        preventMouseover = false;\n\n    function forTouchstart() {\n        preventMouseover = true;\n    }\n\n    function forMouseover() {\n        if (preventMouseover === false) {\n            $(this).addClass(hoverClass);\n        } else {\n            preventMouseover = false;\n        }\n    }\n\n    function forMouseout() {\n        $(this).removeClass(hoverClass);\n    }\n\n    function init() {\n        $target.on({\n            touchstart  : forTouchstart,\n            mouseover   : forMouseover,\n            mouseout    : forMouseout\n        });                \n    }\n\n    return {\n        init: init\n    };\n}();\n</code></pre>\n\n<p>The module is then instantiated further down the line:</p>\n\n<pre><code>mobileNoHoverState.init();\n</code></pre>\n\n<p>I think that this is much cleaner than <a href=\"http://stackoverflow.com/a/21030625/2539700\">my other answer</a> because there isn't one event (click) whose actions cancel out the other's (mouseover). </p>\n\n<p>More importantly, my previous code disabled hover effects after a user triggers a <code>click</code> event on the element, which definitely made the desktop UI suffer.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I take it from your question that your hover effect changes the content of your page. In that case, my advice is to:</p>\n\n<ul>\n<li><strong>Add hover effects on <code>touchstart</code> and <code>mouseenter</code>.</strong></li>\n<li><strong>Remove hover effects on <code>mouseleave</code>, <code>touchmove</code> and <code>click</code>.</strong></li>\n</ul>\n\n<p>Alternatively, you can edit your page that there is no content change.</p>\n\n<h1>Background</h1>\n\n<p>In order to simulate a mouse, browsers such as Webkit mobile fire the following events if a user touches and releases a finger on touch screen (like iPad) (source: <a href=\"http://www.html5rocks.com/en/mobile/touchandmouse/#toc-together\">Touch And Mouse</a> on html5rocks.com):</p>\n\n<ol>\n<li><code>touchstart</code></li>\n<li><code>touchmove</code></li>\n<li><code>touchend</code></li>\n<li>300ms delay, where the browser makes sure this is a single tap, not a double tap</li>\n<li><code>mouseover</code></li>\n<li><code>mouseenter</code>\n<ul>\n<li><strong>Note</strong>: If a <code>mouseover</code>, <code>mouseenter</code> or <code>mousemove</code> event changes the page content, the following events are never fired.</li>\n</ul></li>\n<li><code>mousemove</code></li>\n<li><code>mousedown</code></li>\n<li><code>mouseup</code></li>\n<li><code>click</code></li>\n</ol>\n\n<p><em><strong>It does not seem possible to simply tell the webbrowser to skip the mouse events.</em></strong></p>\n\n<p>What's worse, if a mouseover event changes the page content, the click event is never fired, as explained on <a href=\"https://developer.apple.com/library/ios/DOCUMENTATION/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\">Safari Web Content Guide - Handling Events</a>, in particular figure 6.4 in <em>One-Finger Events</em>. What exactly a \"content change\" is, will depend on browser and version. I've found that for iOS 7.0, a change in background color is not (or no longer?) a content change.</p>\n\n<h1>Solution Explained</h1>\n\n<p>To recap:</p>\n\n<ul>\n<li>Add hover effects on <code>touchstart</code> and <code>mouseenter</code>.</li>\n<li>Remove hover effects on <code>mouseleave</code>, <code>touchmove</code> and <code>click</code>.</li>\n</ul>\n\n<p>Note that there is no action on <code>touchend</code>!</p>\n\n<p>This clearly works for mouse events: <code>mouseenter</code> and <code>mouseleave</code> (slightly improved versions of <code>mouseover</code> and <code>mouseout</code>) are fired, and add and remove the hover.</p>\n\n<p>If the user actually <code>click</code>s a link, the hover effect is also removed. This ensure that it is removed if the user presses the back button in the web browser.</p>\n\n<p>This also works for touch events: on touchstart the hover effect is added. It is '''not''' removed on touchend. It is added again on <code>mouseenter</code>, and since this causes no content changes (it was already added), the <code>click</code> event is also fired, and the link is followed without the need for the user to click again!</p>\n\n<p>The 300ms delay that a browser has between a <code>touchstart</code> event and <code>click</code> is actually put in good use because the hover effect will be shown during this short time.</p>\n\n<p>If the user decides to cancel the click, a move of the finger will do so just as normal. Normally, this is a problem since no <code>mouseleave</code> event is fired, and the hover effect remains in place. Thankfully, this can easily be fixed by removing the hover effect on <code>touchmove</code>.</p>\n\n<p>That's it!</p>\n\n<p>Note that it is possible to remove the 300ms delay, for example using the <a href=\"https://github.com/ftlabs/fastclick\">FastClick library</a>, but this is out of scope for this question.</p>\n\n<h1>Alternative Solutions</h1>\n\n<p>I've found the following problems with the following alternatives:</p>\n\n<ul>\n<li><strong>browser detection:</strong> Extremely prone to errors. Assumes that a device has either mouse or touch, while a combination of both will become more and more common when touch displays prolifirate.</li>\n<li><strong>CSS media detection:</strong> The only CSS-only solution I'm aware of. Still prone to errors, and still assumes that a device has either mouse or touch, while both are possible.</li>\n<li><strong>Emulate the click event in <code>touchend</code>:</strong> This will incorrectly follow the link, even if the user only wanted to scroll or zoom, without the intention of actually clicking the link.</li>\n<li><strong>Use a variable to suppress mouse events:</strong> This set a variable in <code>touchend</code> that is used as a if-condition in subsequent mouse events to prevents state changes at that point in time. The variable is reset in the click event. See Walter Roman's answer on this page. This is a decent solution if you really don't want a hover effect on touch interfaces. Unfortunately, this does not work if a <code>touchend</code> is fired for another reason and no click event is fired (e.g. the user scrolled or zoomed), and is subsequently trying to following the link with a mouse (i.e on a device with both mouse and touch interface).</li>\n</ul>\n\n<h1>Further Reading</h1>\n\n<ul>\n<li><a href=\"http://jsfiddle.net/macfreek/24Z5M/\">http://jsfiddle.net/macfreek/24Z5M/</a>. Test the above solution for yourself in this sandbox.</li>\n<li><a href=\"http://www.macfreek.nl/memory/Touch_and_mouse_with_hover_effects_in_a_web_browser\">http://www.macfreek.nl/memory/Touch_and_mouse_with_hover_effects_in_a_web_browser</a>. This same answer, with a bit more background.</li>\n<li><a href=\"http://www.html5rocks.com/en/mobile/touchandmouse/\">http://www.html5rocks.com/en/mobile/touchandmouse/</a>. Great background article on html5rocks.com about touch and mouse in general.</li>\n<li><a href=\"https://developer.apple.com/library/ios/DOCUMENTATION/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\">https://developer.apple.com/library/ios/DOCUMENTATION/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html</a>. Safari Web Content Guide - Handling Events. See in particular figure 6.4, which explains that no further events are fired after a content change during a <code>mouseover</code> or <code>mousemove</code> event.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>Here is my solution: <a href=\"http://jsfiddle.net/agamemnus/g56aw709/--\" rel=\"nofollow\">http://jsfiddle.net/agamemnus/g56aw709/--</a> code below.</p>\n\n<p>All one needs to do is to convert their \":hover\" to \".hover\"... that's it! The big difference between this and the rest is that this will also work on non-singular element selectors such as <code>.my_class &gt; *:hover {</code>.</p>\n\n<pre><code>handle_css_hover_effects ()\n\nfunction handle_css_hover_effects (init) {\n var init = init || {}\n var handle_touch_events = init.handle_touch_events || true\n var handle_mouse_events = init.handle_mouse_events || true\n var hover_class         = init.hover_class         || \"hover\"\n var delay_preferences   = init.delay_preferences   || {touch: {add: 500, remove: 500}}\n function default_handler (curobj, input_type, op) {\n  var hovered_element_selector = \"*\" + ((op == \"add\") ? \":\" : (\".\" + hover_class))\n  var hovered_elements = Array.prototype.slice.call(document.body.querySelectorAll(hovered_element_selector))\n  var modified_list = []\n  while (true) {\n   if ((curobj == null) || (curobj == document.documentElement)) break\n   if (hovered_elements.indexOf(curobj) != -1) modified_list.push (curobj)\n   curobj = curobj.parentNode\n  }\n  function do_hover_change () {modified_list.forEach (function (curobj) {curobj.classList[op](hover_class)})}\n  if ((!delay_preferences[input_type]) || (!delay_preferences[input_type][op])) {\n   do_hover_change ()\n  } else {\n   setTimeout (do_hover_change, delay_preferences[input_type][op])\n  }\n }\n\n if (handle_mouse_events) {\n  document.body.addEventListener ('mouseover' , function (evt) {var curobj = evt.target; default_handler (curobj, \"mouse\", \"add\")})\n  document.body.addEventListener ('mouseout'  , function (evt) {var curobj = evt.target; default_handler (curobj, \"mouse\", \"remove\")})\n  document.body.addEventListener ('click'     , function (evt) {var curobj = evt.target; default_handler (curobj, \"mouse\", \"remove\")})\n }\n\n if (handle_touch_events) {\n  document.body.addEventListener ('touchstart', function (evt) {var curobj = evt.target; default_handler (curobj, \"touch\", \"add\")})\n  document.body.addEventListener ('touchend'  , function (evt) {var curobj = evt.target; default_handler (curobj, \"touch\", \"remove\")})\n  document.body.addEventListener ('touchmove',  function (evt) {\n   var curobj = evt.target\n   var hovered_elements = Array.prototype.slice.call(document.body.querySelectorAll(\"*:hover\"))\n   var lastobj = null\n   evt = evt.changedTouches[0]\n   var elements_at_point = get_elements_at_point (evt.pageX, evt.pageY)\n   // Get the last element that isn't at the current point but is still hovered over, and remove only its hover attribute.\n   while (true) {\n    if ((curobj == null) || (curobj == document.documentElement)) break\n    if ((hovered_elements.indexOf(curobj) != -1) &amp;&amp; (elements_at_point.indexOf(curobj) == -1)) lastobj = curobj\n    curobj = curobj.parentNode\n   }\n   if (lastobj == null) return\n   if ((!delay_preferences.touch) || (!delay_preferences.touch.remove)) {\n    lastobj.classList.remove(hover_class)\n   } else {\n    setTimeout (function () {lastobj.classList.remove(hover_class)}, delay_preferences.touch.remove)\n   }\n\n   function get_elements_at_point (x, y) {\n    var el_list = [], pe_list = []\n    while (true) {\n     var curobj = document.elementFromPoint(x, y)\n     if ((curobj == null) || (curobj == document.documentElement)) break\n     el_list.push (curobj); pe_list.push (curobj.style.pointerEvents)\n     curobj.style.pointerEvents = \"none\"\n    }\n    el_list.forEach (function (current_element, i) {current_element.style.pointerEvents = pe_list[i]})\n    return el_list\n   }\n  })\n }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My solution is to add hover-active css class to the HTML tag,\nand use it on the beginning of all the CSS selectors with :hover \nand remove that class on the first touchstart event.</p>\n\n<p><a href=\"http://codepen.io/Bnaya/pen/EoJlb\" rel=\"nofollow\">http://codepen.io/Bnaya/pen/EoJlb</a></p>\n\n<p>JS:</p>\n\n<pre><code>(function () {\n    'use strict';\n\n    if (!('addEventListener' in window)) {\n        return;\n    }\n\n    var htmlElement = document.querySelector('html');\n\n    function touchStart () {\n        document.querySelector('html').classList.remove('hover-active');\n\n        htmlElement.removeEventListener('touchstart', touchStart);\n    }\n\n    htmlElement.addEventListener('touchstart', touchStart);\n}());\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;html class=\"hover-active\"&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.hover-active .mybutton:hover {\n    box-shadow: 1px 1px 1px #000;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Iv'd found 2 solutions to the problem, which its implied that you detect touch with modernizr or something else and set a touch class on the html element.</p>\n\n<p>This is good but not <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/all\" rel=\"nofollow\">supported</a></strong> very well:</p>\n\n<pre><code>html.touch *:hover {\n    all:unset!important;\n}\n</code></pre>\n\n<p>But this has a very good <strong><a href=\"http://caniuse.com/#feat=pointer-events\" rel=\"nofollow\">support</a></strong>:</p>\n\n<pre><code>html.touch *:hover {\n    pointer-events: none !important;\n}\n</code></pre>\n\n<p>Works flawless for me, it makes all the hover effects be like when you have a touch on a button it will light up but not end up buggy as the initial hover effect for mouse events.</p>\n\n<p>Detecting touch from no-touch devices i think modernizr has done the best job:</p>\n\n<p><strong><a href=\"https://github.com/Modernizr/Modernizr/blob/master/feature-detects/touchevents.js\" rel=\"nofollow\">https://github.com/Modernizr/Modernizr/blob/master/feature-detects/touchevents.js</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm writing a Web site that's meant to be used from both desktops and tablets. When it's being visited from a desktop, I want the clickable areas of the screen to light up with <code>:hover</code> effects (different background color, etc.) With a tablet, there's no mouse, so I don't want any hover effects.</p>\n\n<p>The problem is, when I tap something on the tablet, the browser evidently has some kind of \"invisible mouse cursor\" that it moves to the location I tapped, and then leaves it there -- so the thing I just tapped lights up with a hover effect until I tap something else.</p>\n\n<p><strong>How can I get the hover effects when I'm using the mouse, but suppress them when I'm using the touchscreen?</strong></p>\n\n<p>In case someone was thinking of suggesting it, I don't want to use user-agent sniffing. The same device could have both a touchscreen and a mouse (maybe not so common today, but much more so in the future). I'm not interested in the device, I'm interested in how it's currently being used: mouse or touchscreen.</p>\n\n<p>I already tried hooking the <code>touchstart</code>, <code>touchmove</code>, and <code>touchend</code> events and calling <code>preventDefault()</code> on all of them, which does suppress the \"invisible mouse cursor\" some of the time; but if I tap rapidly back and forth between two different elements, after a few taps it will start moving the \"mouse cursor\" and lighting up the hover effects anyway -- it's like my <code>preventDefault</code> isn't always honored. I won't bore you with the details unless necessary -- I'm not even sure that's the right approach to take; if anyone has a simpler fix, I'm all ears.</p>\n\n<hr>\n\n<p><strong>Edit:</strong> This can be reproduced with bog-standard CSS <code>:hover</code>, but here's a quick repro for reference.</p>\n\n<pre><code>&lt;style&gt;\n  .box { border: 1px solid black; width: 150px; height: 150px; }\n  .box:hover { background: blue; }\n&lt;/style&gt;\n&lt;div class=\"box\"&gt;&lt;/div&gt;\n&lt;div class=\"box\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>If you mouse over either of the boxes, it will get a blue background, which I want. But if you tap on either of the boxes, it will also get a blue background, which is the thing I'm trying to prevent.</p>\n\n<p>I've also posted a sample <a href=\"http://sandbox.excastle.com/stackoverflow/8291517.html\">here</a> that does the above and also hooks jQuery's mouse events. You can use it to see that tap events will also fire <code>mouseenter</code>, <code>mousemove</code> and <code>mouseleave</code>.</p>\n",
            "last_activity_date": 1421844220,
            "question_id": 8291517,
            "score": 50,
            "tags": [
                "javascript",
                "hover",
                "touch"
            ],
            "title": "Disable hover effects on mobile browsers"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>For a more flexible solution, use the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice\"><code>splice()</code></a> function.  It allows you to remove any item in an Array based on Index Value:</p>\n\n<pre><code>var indexToRemove = 0;\nvar numberToRemove = 1;\n\narr.splice(indexToRemove, numberToRemove);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 182
                },
                {
                    "body": "<p>Maybe something like this:</p>\n\n<pre><code>arr=arr.slice(1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/shift\"><code>shift()</code></a> is ideal for your situation. <code>shift()</code> removes the first element from an array and returns that element. This method changes the length of the array.</p>\n\n<pre><code>array = [1, 2, 3, 4, 5];\n\narray.shift(); // 1\n\narray // [2, 3, 4, 5]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 446
                },
                {
                    "body": "<p>Wrote a small article about inserting and deleting elements at arbitrary positions in Javascript Arrays.</p>\n\n<p>Here's the small snippet to remove an element from any position. This extends the Array class in Javascript and adds the remove(index) method.</p>\n\n<pre><code>// Remove element at the given index\nArray.prototype.remove = function(index) {\n    this.splice(index, 1);\n}\n</code></pre>\n\n<p>So to remove the first item in your example, call arr.remove():</p>\n\n<pre><code>var arr = [1,2,3,5,6];\narr.remove(0);\n</code></pre>\n\n<p>To remove the second item,</p>\n\n<pre><code>arr.remove(1);\n</code></pre>\n\n<p>Here's a tiny <a href=\"http://r0x0r.tumblr.com/post/304905664/javascript-arrays-custom-methods\" rel=\"nofollow\">article</a> with insert and delete methods for Array class.</p>\n\n<p>Essentially this is no different than the other answers using splice, but the name <code>splice</code> is non-intuitive, and if you have that call all across your application, it just makes the code harder to read.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>arr.slice(begin[,end])\n</code></pre>\n\n<p>is non destructive, splice and shift will modify your original array</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The <code>Array.shift()</code> element removes the first element from an array, and returns it. It modifies the original array.</p>\n\n<pre><code>var a = [1,2,3]\n// [1,2,3]\na.shift()\n// 1\na\n//[2,3]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p><code>Array.splice()</code> has the interesting property that one cannot use it to remove the first element. So, we need to resort to</p>\n\n<pre><code>function removeAnElement( array, index ) {\n    index--;\n\n    if ( index === -1 ) {\n        return array.shift();\n    } else {\n        return array.splice( index, 1 );\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code>var arr = [1,2,3,5,6];\n</code></pre>\n\n<p>I want to remove the 1st element of the array so that it becomes:</p>\n\n<pre><code>var arr = [2,3,5,6];\n</code></pre>\n\n<p>How?</p>\n\n<h3>Edit</h3>\n\n<p>To extend this question, what if I want to remove the 2nd element of the array?</p>\n",
            "last_activity_date": 1424676678,
            "question_id": 2003815,
            "score": 159,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "How to remove first element of an array in javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You have correctly established that the <code>undefined</code> relates to a JavaScript problem and if your site users haven't complained about seeing error pages, you could check the following.</p>\n\n<blockquote>\n  <p>If JavaScript is used to set or change image locations, it sometimes happens that an <code>undefined</code> makes its way into the URI.</p>\n</blockquote>\n\n<p>When that happens, the browser will happily try to load the image (no AJAX headers), but it will leave hints: it sets a particular <code>Accept:</code> header; instead of <code>text/html, text/xml, ...</code> it will use <code>image/jpeg, image/png, ...</code>.</p>\n\n<p>Once such a header is confirmed, you have narrowed down the problem to images only. Finding the root cause will possibly take some time though :)</p>\n\n<p><strong>Update</strong></p>\n\n<p>To help debugging you could override <code>$.fn.attr()</code> and invoke the debugger when something is being assigned to undefined. Something like this:</p>\n\n<pre><code>\u200b(function($, undefined) {\n    var $attr = $.fn.attr;\n\n    $.fn.attr = function(attributeName, value) {\n        var v = attributeName === 'src' ? value : attributeName.src;\n\n        if (v === 'undefined') {\n            alert(\"Setting src to undefined\");\n        }\n\n        return $attr(attributeName, value);\n    }\n}(jQuery));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There is no simple straight answer. </p>\n\n<p>You are going to have to debug this and it is probably JavaScript due to the 'undefined' word in the URL. However it doesn't have to be AJAX, it could be JavaScript creating any URL that is automatically resolved by the browser (e.g. JavaScript that sets the src attribute on an image tag, setting a css-image attribute, etc). I use <a href=\"http://www.mozilla.org/en-US/firefox/new/\">Firefox</a> with <a href=\"http://www.mozilla.org/en-US/firefox/new/\">Firebug</a> installed most of the time, so my directions will be with that in mind.</p>\n\n<p><strong>Firebug Initial Setup</strong></p>\n\n<p><em>Skip this if you already know how to use Firebug.</em></p>\n\n<p>After the installs and restarting Firefox for Firebug, you are going to have to enable most of Firebug's 'panels'. To open Firebug there will be a little fire bug/insect looking thing in the top right corner of your browser or you can press F12. Click through the Firebug tabs 'Console', 'Script', 'Net' and enable them by opening them up and reading the panel's information. You might have to refresh the page to get them working properly.</p>\n\n<p><strong>Debugging User Interaction</strong></p>\n\n<p>Navigate to one of the pages that has the issue with Firebug open and the Net panel active. In the Net panel there will be a few options: 'Clear', 'Persist', 'All', 'Html', etc. Make sure ALL is selected. Don't do anything on the page and try not to mouse over anything on it. Look through the requests. The request for the invalid URL will be red and probably have a status of 404 Not Found (or similar). </p>\n\n<p>See it on load? Skip to the next part.</p>\n\n<p>Don't see it on initial load? Start using your page and continue here.</p>\n\n<p>Start clicking on every feature, mouse over everything, etc. Keep your eyes on the Net panel and watch for a requests that fail. You might have to be creative, but continue using your application till you see your browser make an invalid request. If the page makes many requests, feel free to hit the 'Clear' button on the top left of the Net panel to clear it up a bit.</p>\n\n<p>If you submit the page and see a failed request go out really quick but then lose it because the next page loads, enable persistence by clicking 'Persist' in the top left of the Net panel.</p>\n\n<p>Once it does, and it should, consider what you did to make that happen. See if you can make it happen again. After you figure out what user interaction is making it happen, dive into that code and start looking for things that are making invalid requests.</p>\n\n<p>You can use the Script tab to setup breakpoints in your JavaScript and step through them. Investigate event handlers done via $(elemment).bind/click/focus/etc or from old school event attributes like onclick=\"\"/onfocus=\"\" etc.</p>\n\n<p><strong>If the request is happening as soon as the page loads</strong></p>\n\n<p>This is going to be a little harder to peg down. You will need to go to the Script tab and start adding break points to every script that runs on load. You do this by clicking on the left side of the line of JavaScript. </p>\n\n<p>Reload your page and your break points should stop the browser from loading the page. Press the 'Continue' button on the script panel. Go to your net panel and see if your request was made, continue till it is found. You can use this to narrow down where the request is being made from by slowly adding more and more break points and then stepping into and out of functions.</p>\n\n<p><strong>What you are looking for in your code</strong></p>\n\n<p>Something that is similar to the following:</p>\n\n<pre><code>var url = workingUrl + someObject['someProperty'];\n\nvar url = workingUrl + someObject.someProperty;\n</code></pre>\n\n<p>Keep in mind that someObject might be an object <code>{}</code>, an array <code>[]</code>, or any of the internal browser types. The point is that a property will be accessed that doesn't exist.</p>\n\n<p><strong>I don't see any 404/red requests</strong></p>\n\n<p>Then whatever is causing it isn't being triggered by your tests. Try using more things. The point is you should be able to make the request happen somehow. You just don't know yet. It has to show up in the Net panel. The only time it won't is when you aren't doing whatever triggers it.</p>\n\n<p><strong>Conclusion</strong></p>\n\n<p>There is no super easy way to peg down what exactly is going on. However using the methods I outlined you should be at least  be able to get close. It is probably something you aren't even considering.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>This sounds like a race condition where a variable is not getting properly initialized before getting used. Considering this is not an AJAX issue according to your comments, there will be a couple of ways of figuring this out, listed below.</p>\n\n<p><strong>Hookup a Javascript exception Logger</strong>: this will help you catch just about all random javascript exceptions in your log. Most of the time programmatic errors will bubble up here. Put it before any scripts. You will need to catch these on the server and print them to your logs for analysis later. This is your first line of defense. Here is an example:</p>\n\n<pre><code>window.onerror = function(m,f,l) {\n    var e = window.encodeURIComponent;\n    new Image().src = \"/jslog?msg=\" + e(m) + \"&amp;filename=\" + e(f) + \"&amp;line=\" + e(l) + \"&amp;url=\" + e(window.location.href);\n};\n</code></pre>\n\n<p><strong>Search for window.location</strong>: for each of these instances you should add logging or check for undefined concats/appenders to your window.location. For example:</p>\n\n<pre><code>function myCode(loc) {\n    // window.location.href = loc; // old \n    typeof loc === 'undefined' &amp;&amp; window.onerror(...); //new\n    window.location.href = loc; //new\n}\n</code></pre>\n\n<p>or the slightly cleaner:</p>\n\n<pre><code>window.setLocation = function(url) { \n   /undefined/.test(url) ? \n         window.onerror(...) : window.location.href = url;       \n}\n\nfunction myCode(loc) {\n    //window.location.href = loc; //old\n    window.setLocation(loc); //new\n} \n</code></pre>\n\n<p>If you are interested in getting stacktraces at this stage take a look at: <a href=\"https://github.com/eriwen/javascript-stacktrace\" rel=\"nofollow\">https://github.com/eriwen/javascript-stacktrace</a></p>\n\n<p><strong>Grab all unhandled undefined links</strong>: Besides window.location The only thing left are the DOM links themselves. The third step is to check all unhandeled DOM links for your invalid URL pattern (you can attach this right after jQuery finishes loading, earlier better):</p>\n\n<pre><code>$(\"body\").on(\"click\", \"a[href$='undefined']\", function() {\n    window.onerror('Bad link: ' + $(this).html()); //alert home base\n});\n</code></pre>\n\n<p>Hope this is helpful. Happy debugging.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'm wondering if this might be an adblocker issue.  When I search through the logs by IP address it appears that every request by a particular user to /folder/page.html is followed by a request to /folder/undefined</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Based on this <a href=\"http://productforums.google.com/d/msg/chrome/G1snYHaHSOc/p8RLCohxz2kJ\">post</a>, I reverse-engineered the \"Complitly\" Chrome Plugin/malware, and found that this extension is injecting an \"improved autocomplete\" feature that was throwing \"undefined\" requests at every site that has a input text field with NAME or ID of \"search\", \"q\" and many others.</p>\n\n<p>I found also that the enable.js file (one of complitly files) were checking a global variable called \"suggestmeyes_loaded\" to see if it's already loaded (like a Singleton). So, setting this variable to false disables the plugin.</p>\n\n<p>To disable the malware and stop \"undefined\" requests, apply this to every page with a search field on your site:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>&lt;script type=\"text/javascript\"&gt;\n    window.suggestmeyes_loaded = true;\n&lt;/script&gt;\n</code></pre>\n\n<p>This malware also redirects your users to a \"searchcompletion.com\" site, sometimes showing competitors ADS. So, it should be taken seriously.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Some facts that have been established, especially in this thread: <a href=\"http://productforums.google.com/forum/#!msg/chrome/G1snYHaHSOc/p8RLCohxz2kJ\" rel=\"nofollow\">http://productforums.google.com/forum/#!msg/chrome/G1snYHaHSOc/p8RLCohxz2kJ</a></p>\n\n<p>it happens on pages that have no javascript at all.\nthis proves that it is not an on-page programming error</p>\n\n<p>the user is unaware of the issue and continues to browse quite happily.</p>\n\n<p>it happens a few seconds after the person visits the page.</p>\n\n<p>it doesn't happen to everybody.</p>\n\n<p>happens on multiple browsers (Chrome, IE, Firefox, Mobile Safari, Opera)</p>\n\n<p>happens on multiple operating systems (Linux, Android, NT)</p>\n\n<p>happens on multiple web servers (IIS, Nginx, Apache)</p>\n\n<p>I have one case of googlebot following the link and claiming the same referrer. They may just be trying to be clever and the browser communicated it to the mothership who then set out a bot to investigate.</p>\n\n<p>I am fairly convinced by the proposal that it is caused by plugins.  Complitly is one, but that doesn't support Opera. There many be others.</p>\n\n<p>Though the mobile browsers weigh against the plugin theory.</p>\n\n<p>Sysadmins have reported a major drop off by adding some javascript on the page to trick Complitly into thinking it is already initialized.</p>\n\n<p>Here's my solution for nginx:</p>\n\n<pre><code>location ~ undefined/?$  {\n  return 204;\n}\n</code></pre>\n\n<p>This returns \"yeah okay, but no content for you\".  </p>\n\n<p>If you are on website.com/some/page and you (somehow) navigate to website.com/some/page/undefined the browser will show the URL as changed but will not even do a page reload. The previous page will stay as it was in the window. </p>\n\n<p>If for some reason this is something experienced by users then they will have a clean noop experience and it will not disturb whatever they were doing.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Since 12 june 2012 11:20 TU, I see very weirds errors in my varnish/apache logs.</p>\n\n<p>Sometimes, when an user has requested one page, several seconds later I see a similar request but the all string after the last / in the url has been replaced by \"undefined\".</p>\n\n<p>Example:\n<strong>http://example.com/foo/bar</strong> triggers a <strong>http://example.com/foo/undefined</strong> request.</p>\n\n<p>Of course theses \"undefined\" pages does not exist and my 404 page is returned instead (which is a custom page with a standard layout, not a classic apache 404)</p>\n\n<ul>\n<li>This happens with any pages (from the homepage to the deepest)</li>\n<li>with various browsers, (mostly Chrome 19, but also firefox 3.5 to 12, IE 8/9...) but only 1% of the trafic. </li>\n<li>The headers sent by these request are classic headers (and there is no ajax headers).</li>\n<li>For a given ip, this seems occur randomly: sometimes at the first page visited, sometimes on a random page during the visit, sometimes several pages during the visit...</li>\n</ul>\n\n<p>Of course it looks like a javascript problem (I'm using jquery 1.7.2 hosted by google), but <strong>I've absolutely nothing changed in the js/html or the server configuration</strong> since several days and I never saw this kind of error before. And of course, there is no such links in the html.</p>\n\n<p>I also noticed some interesting facts:</p>\n\n<ul>\n<li>the undefined requests are never found as referer of another pages, but instead the \"real\" pages were used as referer for the following request of the same IP (the user has the ability to use the classic menu on the 404 page)</li>\n<li>I did not see any trace of these pages in Google Analytics, so I assume no javascript has been executed (tracker exists on all pages including 404)</li>\n<li>nobody has contacted us about this, even when I invoked the problem in the social networks of the website</li>\n<li>most of the users continue the visit after that</li>\n</ul>\n\n<p>All theses facts make me think the problem occurs silently in the browers, probably triggered by a buggy add-on, antivirus, a browser bar or a crappy manufacturer soft integrated in browsers updated yesterday (but I didn't find any add-on released yesterday for chrome, firefox and IE).</p>\n\n<p>Is anyone here has noticed the same issue, or have a more complete explanation?</p>\n\n<p>Thanks in advance</p>\n",
            "last_activity_date": 1402938849,
            "question_id": 11017609,
            "score": 63,
            "tags": [
                "javascript",
                "browser"
            ],
            "title": "&quot;undefined&quot; randomly appended in 1% of requested urls on my website since 12 june 2012"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>That defeats the purpose of non-blocking IO -- you're blocking it when it doesn't need blocking <code>:)</code></p>\n\n<p>You should nest your callbacks instead of forcing node.js to wait, or call another callback inside the callback where you need the result of <code>r</code>.</p>\n\n<p>Chances are, if you need to force blocking, you're thinking about your architecture wrong.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The \"good node.js /event driven\" way of doing this is to <strong>not wait</strong>.</p>\n\n<p>Like almost everything else when working with event driven systems like node, your function should accept a callback parameter that will be invoked when then computation is complete. The caller should not wait for the value to be \"returned\" in the normal sense, but rather send the routine that will handle the resulting value:</p>\n\n<pre><code>function(query, callback) {\n  myApi.exec('SomeCommand', function(response) {\n    // other stuff here...\n    // bla bla..\n    callback(response); // this will \"return\" your value to the original caller\n  });\n}\n</code></pre>\n\n<p>So you dont use it like this:</p>\n\n<pre><code>var returnValue = myFunction(query);\n</code></pre>\n\n<p>But like this:</p>\n\n<pre><code>myFunction(query, function(returnValue) {\n  // use the return value here instead of like a regular (non-evented) return value\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 93
                },
                {
                    "body": "<p>supposing you have a function:</p>\n\n<pre><code>var fetchPage(page, callback) {\n   ....\n   request(uri, function (error, response, body) {\n        ....\n        if (something_good) {\n          callback(true, page+1);\n        } else {\n          callback(false);\n        }\n        .....\n   });\n\n\n};\n</code></pre>\n\n<p>you can make use of callbacks like this: </p>\n\n<pre><code>fetchPage(1, x = function(next, page) {\nif (next) {\n    console.log(\"^^^ CALLBACK --&gt;  fetchPage: \" + page);\n    fetchPage(page, x);\n}\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>check this:\n<a href=\"https://github.com/luciotato/waitfor-ES6\">https://github.com/luciotato/waitfor-ES6</a></p>\n\n<p>your code with wait.for: (requires generators, --harmony flag)</p>\n\n<pre><code>function* (query) {\n  var r = yield wait.for( myApi.exec, 'SomeCommand');\n  return r;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><em>Note: This answer should probably not be used in production code. It's a hack and you should now about the implications.</em></p>\n\n<p>There is the <a href=\"https://github.com/creationix/uvrun\" rel=\"nofollow\">uvrun</a> module (updated for newer Nodejs versions <a href=\"https://github.com/albertz/uvrun\" rel=\"nofollow\">here</a>) where you can execute a single loop round of the libuv main event loop (which is the Nodejs main loop).</p>\n\n<p>Your code would look like this:</p>\n\n<pre><code>function(query) {\n  var r;\n  myApi.exec('SomeCommand', function(response) {\n    r = response;\n  });\n  var uvrun = require(\"uvrun\");\n  while (!r)\n    uvrun.runOnce();\n  return r;\n}\n</code></pre>\n\n<p>(You might alternative use <code>uvrun.runNoWait()</code>. That could avoid some problems with blocking, but takes 100% CPU.)</p>\n\n<p>Note that this approach kind of invalidates the whole purpose of Nodejs, i.e. to have everything async and non-blocking. Also, it could increase your callstack depth a lot, so you might end up with stack overflows. If you run such function recursively, you definitely will run into troubles.</p>\n\n<p>See the other answers about how to redesign your code to do it \"right\".</p>\n\n<p>This solution here is probably only useful when you do testing and esp. want to have synced and serial code.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a simplified function that looks like this:</p>\n\n<pre><code>function(query) {\n  myApi.exec('SomeCommand', function(response) {\n    return response;\n  });\n}\n</code></pre>\n\n<p>Basically i want it to call <code>myApi.exec</code>, and return the response that is given in the callback lambda. However, the above code doesn't work and simply returns immediately.</p>\n\n<p>Just for a very hackish attempt, i tried the below which didn't work, but at least you get the idea what i'm trying to achieve:</p>\n\n<pre><code>function(query) {\n  var r;\n  myApi.exec('SomeCommand', function(response) {\n    r = response;\n  });\n  while (!r) {}\n  return r;\n}\n</code></pre>\n\n<p>Basically, what's a good 'node.js/event driven' way of going about this? I want my function to wait until the callback gets called, then return the value that was passed to it.</p>\n",
            "last_activity_date": 1423079589,
            "question_id": 5010288,
            "score": 59,
            "tags": [
                "javascript",
                "multithreading",
                "callback",
                "node.js"
            ],
            "title": "How to make a function wait until a callback has been called using node.js"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can look at the user agent string - <code>window.navigator.userAgent</code> described here: <a href=\"https://developer.mozilla.org/en/DOM/window.navigator.userAgent\">https://developer.mozilla.org/en/DOM/window.navigator.userAgent</a></p>\n\n<p>If what you're really trying to detect is whether you have a version of the browser that supports a particular feature, then it's nearly always better to use feature detection instead of browser version detection.  modernizr is a huge base of code for feature detection that you can either use as is or borrow one particular piece from or just learn how the general technique works.</p>\n\n<p>When I Google, I see user agent strings like this for Android:</p>\n\n<pre><code>Mozilla/5.0 (Linux; U; Android 2.2.1; fr-ch; A43 Build/FROYO) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1\n</code></pre>\n\n<p>A regex of <code>/Android\\s+([\\d\\.]+)/</code> on <code>window.navigator.userAgent</code> will pick up the Android version number.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Use below code to get 2 digit version of Android</p>\n\n<pre><code>var ua = navigator.userAgent;\nif( ua.indexOf(\"Android\") &gt;= 0 )\n{\n  var androidversion = parseFloat(ua.slice(ua.indexOf(\"Android\")+8)); \n  if (androidversion &lt; 2.3)\n  {\n      // do whatever\n  }\n}\n</code></pre>\n\n<p>For example</p>\n\n<blockquote>\n  <p>Mozilla/5.0 (Linux; U; Android 2.2.1; fr-ch; A43 Build/FROYO) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1</p>\n</blockquote>\n\n<p>will return \nAndroid Version = 2.2</p>\n",
                    "is_accepted": false,
                    "score": 72
                },
                {
                    "body": "<pre><code>function getAndroidVersion(ua) {\n    ua = (ua || navigator.userAgent).toLowerCase(); \n    var match = ua.match(/android\\s([0-9\\.]*)/);\n    return match ? match[1] : false;\n};\n\ngetAndroidVersion(); //\"4.2.1\"\nparseInt(getAndroidVersion(), 10); //4\nparseFloat(getAndroidVersion()); //4.2\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>Motorola's player user agents can have the following:</p>\n\n<pre><code>Linux;Android ; Release/4.1.2\n</code></pre>\n\n<p>So, I've had to start using the the following regex:</p>\n\n<pre><code>[a|A]ndroid[^\\d]*([\\d[_|.]]+\\d)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I can't comment because I don't have enough rep...\nJust wanted to add that I had to change neiker's code to</p>\n\n<pre><code>var match = ua.match(/Android\\s([0-9\\.]*)/i);\n</code></pre>\n\n<p>to make it case insensitive because the Galaxy S3 was returning \"android\" instead of Android in its user agent</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This code checks the full version of Android from the useragent.</p>\n\n<pre><code>var test = LowerThanAndroidVersion('4.4');\nif (test) {\n    alert('lower than android 4.4')\n} else if (test == undefined) {\n    alert('no android')\n} else {\n    alert('android 4.4 or higher');\n}    \n\nfunction LowerThanAndroidVersion(testversion) {\n    //var useragent = 'Mozilla/5.0 (Linux; U; Android 4.3.1; en-gb; GT-I9300 Build/IMM76D) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30';\n    var useragent = navigator.userAgent;\n    var androidpoint = useragent.indexOf('Android');\n    if (androidpoint &gt;= 0) {\n        var rest = useragent.substring(androidpoint + 8, useragent.length);\n        var version = rest.substring(0, rest.indexOf(';'));\n        return (version &lt; testversion) ? true : false;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm building a web app and wanting to disable transitions effects on Android devices under version 3.0. </p>\n\n<p>Is there anyway to pick up the Android version number by Javascript in the browser? If so how?</p>\n",
            "last_activity_date": 1424790634,
            "question_id": 7184573,
            "score": 41,
            "tags": [
                "javascript",
                "android",
                "website"
            ],
            "title": "Pick up the Android version in the browser by Javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Using POST</p>\n\n<pre><code>function DoAction( id, name )\n{\n    $.ajax({\n         type: \"POST\",\n         url: \"someurl.php\",\n         data: \"id=\" + id + \"&amp;name=\" + name,\n         success: function(msg){\n                     alert( \"Data Saved: \" + msg );\n                  }\n    });\n}\n</code></pre>\n\n<p>Using GET</p>\n\n<pre><code>function DoAction( id, name )\n{\n     $.ajax({\n          type: \"GET\",\n          url: \"someurl.php\",\n          data: \"id=\" + id + \"&amp;name=\" + name,\n          success: function(msg){\n                     alert( \"Data Saved: \" + msg );\n                   }\n     });\n}\n</code></pre>\n\n<p>EDIT:</p>\n\n<p>A, perhaps, better way to do this that would work (using GET) if javascript were not enabled would be to generate the URL for the href, then use a click handler to call that URL via ajax instead.</p>\n\n<pre><code>&lt;a href=\"/someurl.php?id=1&amp;name=Jose\" class=\"ajax-link\"&gt; Click &lt;/a&gt;\n&lt;a href=\"/someurl.php?id=2&amp;name=Juan\" class=\"ajax-link\"&gt; Click &lt;/a&gt;\n&lt;a href=\"/someurl.php?id=3&amp;name=Pedro\" class=\"ajax-link\"&gt; Click &lt;/a&gt;\n...\n&lt;a href=\"/someurl.php?id=n&amp;name=xxx\" class=\"ajax-link\"&gt; Click &lt;/a&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n$(function() {\n   $('.ajax-link').click( function() {\n         $.get( $(this).attr('href'), function(msg) {\n              alert( \"Data Saved: \" + msg );\n         });\n         return false; // don't follow the link!\n   });\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>Do you want to pass parameters to another page or to the function only?</p>\n\n<p>If only the function, you don't need to add the $.ajax() tvanfosson added. Just add your function content instead.\nLike:</p>\n\n<pre><code>function DoAction (id, name ) {\n    // ...\n    // do anything you want here\n    alert (\"id: \"+id+\" - name: \"+name);\n    //...\n}\n</code></pre>\n\n<p>This will return an alert box with the id and name values.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you want to do an ajax call or a simple javascript function, don't forget to close your function with the return false</p>\n\n<p>like this:</p>\n\n<pre><code>function DoAction(id, name) \n{ \n    // your code\n    return false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>try something like this </p>\n\n<p><code>#vote_links a</code> will catch all ids inside vote links div id ...</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n  jQuery(document).ready(function() {\n  jQuery(\\'#vote_links a\\').click(function() {// alert(\\'vote clicked\\');\n    var det = jQuery(this).get(0).id.split(\"-\");// alert(jQuery(this).get(0).id);\n    var votes_id = det[0];\n\n\n   $(\"#about-button\").css({\n    opacity: 0.3\n   });\n   $(\"#contact-button\").css({\n    opacity: 0.3\n   });\n\n   $(\"#page-wrap div.button\").click(function(){\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\" src=\"jquery.js\"&gt;\n&lt;/script&gt;\n\n &lt;script type=\"text/javascript\"&gt;\n\n  function omtCallFromAjax(urlVariable)\n{ \n    alert(\"omt:\"+urlVariable);\n     $(\"#omtDiv\").load(\"omtt.php?\"+urlVariable);\n}\n\n &lt;/script&gt;\n</code></pre>\n\n<p>try this it work for me</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm creating HTML with a loop that has a column for Action. That column\nis a Hyperlink that when the user clicks calls a JavaScript\nfunction and passes the parameters...</p>\n\n<p>example:</p>\n\n<pre><code>&lt;a href=\"#\" OnClick=\"DoAction(1,'Jose');\" &gt; Click &lt;/a&gt;\n&lt;a href=\"#\" OnClick=\"DoAction(2,'Juan');\" &gt; Click &lt;/a&gt;\n&lt;a href=\"#\" OnClick=\"DoAction(3,'Pedro');\" &gt; Click &lt;/a&gt;\n...\n&lt;a href=\"#\" OnClick=\"DoAction(n,'xxx');\" &gt; Click &lt;/a&gt;\n</code></pre>\n\n<p>I want that function to call an Ajax jQuery function with the correct\nparameters.</p>\n\n<p>Any help?</p>\n",
            "last_activity_date": 1324204887,
            "question_id": 370359,
            "score": 37,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "function",
                "parameters"
            ],
            "title": "Passing parameters to a JQuery function"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There are two projects you might be interested in:</p>\n\n<ol>\n<li><a href=\"https://github.com/charlietuna/JavaScriptCore-iOS\">JavaScriptCore-iOS</a></li>\n<li><a href=\"https://github.com/couchbaselabs/iMonkey\">iMonkey</a></li>\n</ol>\n\n<p>It is absolutely possible to build and ship a JavaScript engine with your iOS app, see <a href=\"http://www.phoboslab.org/log/2011/04/ios-and-javascript-for-real-this-time\">http://www.phoboslab.org/log/2011/04/ios-and-javascript-for-real-this-time</a>. Titanium does that, too: <a href=\"https://github.com/appcelerator/webkit_titanium/tree/master/Source/JavaScriptCore\">https://github.com/appcelerator/webkit_titanium/tree/master/Source/JavaScriptCore</a>.\nAlso see <a href=\"http://www.phoboslab.org/log/2011/06/javascriptcore-project-files-for-ios\">http://www.phoboslab.org/log/2011/06/javascriptcore-project-files-for-ios</a>.</p>\n\n<p>I've also made a small app that shows how to use JSC on iOS: <a href=\"https://github.com/jfahrenkrug/AddressBookSpy\">https://github.com/jfahrenkrug/AddressBookSpy</a></p>\n\n<p>Enjoy.</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>Take a look at the open source project <a href=\"http://impactjs.com/ejecta\"><strong>Ejecta</strong></a>, which embeds JavaScriptCore. It provides the HTML5 canvas API, and uses OpenGL &amp; OpenAL.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>For future viewers, now there is the JavaScriptCore framework, introduced in the new iOS 7. It does magic! Wrapping, unwrapping values from/to JS/Objective-C, calling functions, callbacks, everything!</p>\n\n<p>Unfortunately, documentation is really poor at the moment. You can find a presentation from the <a href=\"https://developer.apple.com/wwdc/videos/\">WWDC 2013 event</a> and some more info in the header files (cmd+click on the header file name in Xcode). There are also some tutorial around the internets which just copy what the guy in the WWDC presentation does. </p>\n\n<p>I've used it for one of my projects, it's really powerful. The only think I didn't like is that it passed objects from JS to ObjC by value, i.e. reference was lost. There might be a workaround for this, but I couldn't find anything without proper documentation.</p>\n\n<p>Hope this will help someone :)</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>If you eventually want to port your game to something other than iOS (or you have other reasons to avoid Apple's proprietary interfaces) you can use <a href=\"http://mujs.com/\" rel=\"nofollow\">MuJS</a>. It's a small library providing a JavaScript interpreter that is easy to embed and extend.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I wonder if anyone has successfully ported a javascript engine/interpreter to iOS. I'm writing an iPhone game that I would like to use Javascript as the high-level scripting language (AI, gameplay, etc.), but to do that, I need to compile the JS engine into a static library and link it against my objectiveC program for iPhone OS. There are some candidate JS engine I'm looking at but I couldn't find any successful cases for doing that. </p>\n\n<p>Here're the js engine I was hoping to use for iOS</p>\n\n<ul>\n<li>google's V8 javascript engine</li>\n<li>mozilla's SpiderMonkey</li>\n</ul>\n\n<p>The alternative is to use <code>UIWebView's</code> Javascript callback interface, but that requires loading the entire <code>UIWebView</code> into memory and the experiences I heard is that it is usually slow in performance. </p>\n\n<p>Appreciate if anyone had similar experiences of do this or know any references for that!</p>\n\n<p><strong>[UPDATED] as Kostis mentioned, Apple introduced <a href=\"https://developer.apple.com/library/mac/documentation/Carbon/Reference/WebKit_JavaScriptCore_Ref/_index.html\" rel=\"nofollow\">JavascriptCore</a> in WWDC 2013</strong></p>\n",
            "last_activity_date": 1411389927,
            "question_id": 5317776,
            "score": 36,
            "tags": [
                "javascript",
                "ios",
                "iphone",
                "v8"
            ],
            "title": "Embed a JavaScript engine in an iOS application"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Have you tried calling knockout's clean node method on your DOM element to dispose of the in memory bound objects?</p>\n\n<pre><code>var element = $('#elementId')[0]; \nko.cleanNode(element);\n</code></pre>\n\n<p>Then applying the knockout bindings again on just that element with your new view models would update your view binding.</p>\n",
                    "is_accepted": true,
                    "score": 108
                },
                {
                    "body": "<p>For a project I'm working on, I wrote a simple <code>ko.unapplyBindings</code> function that accepts a jQuery node and the remove boolean.  It first unbinds all jQuery events as <code>ko.cleanNode</code> method doesn't take care of that. I've tested for memory leaks, and it appears to work just fine.</p>\n\n<pre><code>ko.unapplyBindings = function ($node, remove) {\n    // unbind events\n    $node.find(\"*\").each(function () {\n        $(this).unbind();\n    });\n\n    // Remove KO subscriptions and references\n    if (remove) {\n        ko.removeNode($node[0]);\n    } else {\n        ko.cleanNode($node[0]);\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I have to call ko.applyBinding each time search button click, and filtered data is return from server, and in this case following work for me without using ko.cleanNode.</p>\n\n<p>I experienced, if we replace foreach with template then it should work fine in case of collections/observableArray.</p>\n\n<p>You may find this scenario useful.</p>\n\n<pre><code>&lt;ul data-bind=\"template: { name: 'template', foreach: Events }\"&gt;&lt;/ul&gt;\n\n&lt;script id=\"template\" type=\"text/html\"&gt;\n    &lt;li&gt;&lt;span data-bind=\"text: Name\"&gt;&lt;/span&gt;&lt;/li&gt;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I have found that if the view model contains many div bindings the best way to clear the <code>ko.applyBindings(new someModelView);</code> is to use: <code>ko.cleanNode($(\"body\")[0]);</code> This allows you to call a new <code>ko.applyBindings(new someModelView2);</code> dynamically without the worry of the previous view model still being binded. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could try using the with binding that knockout offers:\n<a href=\"http://knockoutjs.com/documentation/with-binding.html\">http://knockoutjs.com/documentation/with-binding.html</a>\nThe idea is to use apply bindings once, and whenever your data changes, just update your model.</p>\n\n<p>Lets say you have a top level view model storeViewModel, your cart represented by cartViewModel,\nand a list of items in that cart - say cartItemsViewModel.</p>\n\n<p>You would bind the top level model - the storeViewModel to the whole page. Then, you could separate the parts of your page that are responsible for cart or cart items.</p>\n\n<p>Lets assume that the cartItemsViewModel has the following structure:</p>\n\n<pre><code>var actualCartItemsModel = { CartItems: [\n  { ItemName: \"FirstItem\", Price: 12 }, \n  { ItemName: \"SecondItem\", Price: 10 }\n] }\n</code></pre>\n\n<p>The cartItemsViewModel can be empty at the beginning.</p>\n\n<p>The steps would look like this:</p>\n\n<ol>\n<li><p>Define bindings in html. Separate the cartItemsViewModel binding.</p>\n\n<pre>\n  <code>\n    &lt;div data-bind=\"with: cartItemsViewModel\"&gt;\n      &lt;div data-bind=\"foreach: CartItems\"&gt;\n        &lt;span data-bind=\"text: ItemName\"&gt;&lt;/span&gt;\n        &lt;span data-bind=\"text: Price\"&gt;&lt;/span&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  </code>\n</pre></li>\n<li><p>The store model comes from your server (or is created in any other way).</p>\n\n<p><code>var storeViewModel = ko.mapping.fromJS(modelFromServer)</code></p></li>\n<li><p>Define empty models on your top level view model. Then a structure of that model can be updated with\nactual data.</p>\n\n<pre>\n  <code>\n    storeViewModel.cartItemsViewModel = ko.observable();\n    storeViewModel.cartViewModel = ko.observable();\n </code>\n</pre></li>\n<li><p>Bind the top level view model.</p>\n\n<p><code>ko.applyBindings(storeViewModel);</code></p></li>\n<li><p>When the cartItemsViewModel object is available then assign it to the previously defined placeholder.</p>\n\n<p><code>storeViewModel.cartItemsViewModel(actualCartItemsModel);</code></p></li>\n</ol>\n\n<p>If you would like to clear the cart items:\n    <code>storeViewModel.cartItemsViewModel(null);</code></p>\n\n<p>Knockout will take care of html - i.e. it will appear when model is not empty and the contents of div (the one with the \"with binding\") will disappear.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I think it might be better to keep the binding the entire time, and simply update the data associated with it. I ran into this issue, and found that just calling using the <code>.resetAll()</code> method on the array in which I was keeping my data was the most effective way to do this. </p>\n\n<p>Basically you can start with some global var which contains data to be rendered via the ViewModel:</p>\n\n<pre><code>var myLiveData = ko.observableArray();\n</code></pre>\n\n<p>It took me a while to realize I couldn't just make <code>myLiveData</code> a normal array -- the <code>ko.oberservableArray</code> part was important. </p>\n\n<p>Then you can go ahead and do whatever you want to <code>myLiveData</code>. For instance, make a <code>$.getJSON</code> call:</p>\n\n<pre><code>$.getJSON(\"http://foo.bar/data.json?callback=?\", function(data) {\n    myLiveData.removeAll();\n    /* parse the JSON data however you want, get it into myLiveData, as below */\n    myLiveData.push(data[0].foo);\n    myLiveData.push(data[4].bar);\n});\n</code></pre>\n\n<p>Once you've done this, you can go ahead and apply bindings using your ViewModel as usual:</p>\n\n<pre><code>function MyViewModel() {\n    var self = this;\n    self.myData = myLiveData;\n};\nko.applyBindings(new MyViewModel());\n</code></pre>\n\n<p>Then in the HTML just use <code>myData</code> as you normally would. </p>\n\n<p>This way, you can just muck with myLiveData from whichever function. For instance, if you want to update every few seconds, just wrap that <code>$.getJSON</code> line in a function and call <code>setInterval</code> on it. You'll never need to remove the binding as long as you remember to keep the <code>myLiveData.removeAll();</code> line in. </p>\n\n<p>Unless your data is really huge, user's won't even be able to notice the time in between resetting the array and then adding the most-current data back in. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Instead of using KO's internal functions and dealing with JQuery's blanket event handler removal, a much better idea is using <code>with</code> or <code>template</code> bindings. When you do this, ko re-creates that part of DOM and so it automatically gets cleaned. This is also recommended way, see here: <a href=\"http://stackoverflow.com/a/15069509/207661\">http://stackoverflow.com/a/15069509/207661</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I had a memory leak problem recently and <code>ko.cleanNode(element);</code> wouldn't do it for me -<code>ko.removeNode(element);</code> did. <a href=\"http://stackoverflow.com/questions/23409499/javascript-knockout-js-memory-leak-how-to-make-sure-object-is-being-destroye/23410899#23410899\">Javascript + Knockout.js memory leak - How to make sure object is being destroyed?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm building functionality onto a webpage which the user can perform multiple times. Through the user's action, an object/model is created and applied to HTML using ko.applyBindings().</p>\n\n<p>The data-bound HTML is created through jQuery templates.</p>\n\n<p>So far so good.</p>\n\n<p>When I repeat this step by creating a second object/model and call ko.applyBindings() I encounter two problems:</p>\n\n<ol>\n<li>The markup shows the previous object/model as well as the new object/model.</li>\n<li>A javascript error occurs relating to one of the properties in the object/model, although it's still rendered in the markup.</li>\n</ol>\n\n<p>To get around this problem, after the first pass I call jQuery's .empty() to remove the templated HTML which contains all the data-bind attributes, so that it's no longer in the DOM. When the user starts the process for the second pass the data-bound HTML is re-added to the DOM.</p>\n\n<p>But like I said, when the HTML is re-added to the DOM and re-bound to the new object/model, it still includes data from the the first object/model, and I still get the JS error which doesn't occur during the first pass.</p>\n\n<p>The conclusion appears to be that Knockout is holding on to these bound properties, even though the markup is removed from the DOM.</p>\n\n<p>So what I'm looking for is a means of removing these bound properties from Knockout; telling knockout that there is no longer an observable model. Is there a way to do this?</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>The basic process is that the user uploads a file; the server then responds with a JSON object, the data-bound HTML is added to the DOM, then the JSON object model is bound to this HTML using</p>\n\n<pre><code>mn.AccountCreationModel = new AccountViewModel(jsonData.Account);\nko.applyBindings(mn.AccountCreationModel);\n</code></pre>\n\n<p>Once the user has made some selections on the model, the same object is posted back to the server, the data-bound HTML is removed from then DOM, and I then have the following JS</p>\n\n<pre><code>mn.AccountCreationModel = null;\n</code></pre>\n\n<p>When the user wishes to do this once more, all these steps are repeated.</p>\n\n<p>I'm afraid the code is too 'involved' to do a jsFiddle demo.</p>\n",
            "last_activity_date": 1398959047,
            "question_id": 10048485,
            "score": 72,
            "tags": [
                "javascript",
                "knockout.js"
            ],
            "title": "How to clear/remove observable bindings in Knockout.js?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This should work:</p>\n\n<p><code>$('.myClass, .myOtherClass').removeClass('theclass');</code></p>\n\n<p>You must add the multiple selectors all in the first argument to $(), otherwise you are giving jQuery a context in which to search, which is not what you want.</p>\n\n<p>It's the same as you would do in CSS.</p>\n",
                    "is_accepted": true,
                    "score": 229
                },
                {
                    "body": "<p>Have you tried this?</p>\n\n<pre><code>$('.myClass, .myOtherClass').removeClass('theclass');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I use <code>$('.myClass.myOtherClass').removeClass('theclass');</code></p>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>I've had a good look and can't seem to find how to select all elements matching certain classes in one jQuery selector statement such as this:</p>\n\n<pre><code>$('.myClass', '.myOtherClass').removeClass('theclass');\n</code></pre>\n\n<p>Any ideas on how to achieve this?  The only other option is to do</p>\n\n<pre><code>$('.myClass').removeClass('theclass');\n$('.myOtherClass').removeClass('theclass');\n</code></pre>\n\n<p>But I'm doing it against quite a few so it requires much code.</p>\n",
            "last_activity_date": 1370572916,
            "question_id": 488305,
            "score": 105,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors"
            ],
            "title": "jQuery - Selecting Multiple Classes"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>They are separate programs, but they modify a shared global object.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Function hoisting \u2014 the process that evaluates <code>function</code> statements before the rest of the function \u2014 is part of the ECMAScript standard IIRC (I can't find a reference right now, but I recall seeing discussions of EMCAScript that mention it). The evaluation of <code>script</code> tags is part of the HTML standard. It does not specify that they are \"separate programs\" in so many words, but it does say that the script elements are evaluated in the order they appear in the document. That is why functions in later script tags aren't hoisted: The script hasn't been evaluated yet. That also explains why one script stopping doesn't cut off subsequent scripts: When the current script stops evaluating, the next one starts.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Dmitry Soshnikov has answered your question. Every <code>&lt;script&gt;</code> element is executed as a Program, as defined by the ECMAScript specification. There is one global object that each Program within a single page uses. And that's really it.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Another way to think about this is pseudo local vs global scope.  Every SCRIPT declaration has a local scope to it's current methods/functions, as well as access to the current (previously declared) global scope.  Whenever a method/function is defined in a SCRIPT block, it is then added to the global scope and becomes accessible by the SCRIPT blocks after it.</p>\n\n<p>Also, here's a further reference from <a href=\"http://www.w3.org/TR/REC-html40/interact/scripts.html\" rel=\"nofollow\">W3C</a> on script declaration/handling/modification:</p>\n\n<blockquote>\n  <p>The dynamic modification of a document\n  may be modeled as follows:</p>\n  \n  <ol>\n  <li>All SCRIPT elements are evaluated in order as the document is loaded.</li>\n  <li>All script constructs within a given SCRIPT element that generate\n  SGML CDATA are evaluated. Their\n  combined generated text is inserted in\n  the document in place of the SCRIPT\n  element.</li>\n  <li>The generated CDATA is re-evaluated.</li>\n  </ol>\n</blockquote>\n\n<p><a href=\"http://docstore.mik.ua/orelly/webprog/jscript/ch12_03.htm\" rel=\"nofollow\">This</a> is another good resource on script/function evaluation/declaration.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>JavaScript programs consist of statements and function declarations. When a JavaScript program is executed, these two steps occur:</p>\n\n<ol>\n<li><p>the code is scanned for function declarations, and every func. declaration is \"executed\" (by creating a function object) and a named reference to that function is created (so that this function can be called from within a statement)</p></li>\n<li><p>the statements are executed (evaluated) sequentially (as they appear in the code)</p></li>\n</ol>\n\n<p>Because of that, this <strong>works just fine</strong>:</p>\n\n<pre><code>&lt;script&gt;\n    foo();\n    function foo() {\n        return;\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>Although the \"foo\" function is called before it is declared, it works because the function declaration is evaluated before the statement.</p>\n\n<p>However, this <strong>does not work</strong>:</p>\n\n<pre><code>&lt;script&gt;\n    foo();\n&lt;/script&gt;\n&lt;script&gt;\n    function foo() {\n        return;\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>A ReferenceError will be thrown (\"foo is not defined\").\nThis leads to the conclusion that every SCRIPT element inside the HTML code of the web-page represents a separate JavaScript program and every time the HTML parser encounters a SCRIPT element, it executes the program inside that element (and then once the program is executed, the parser moves on to the HTML code that follows the SCRIPT element).</p>\n\n<p>Then again, this <strong>does work</strong>:</p>\n\n<pre><code>&lt;script&gt;\n    function foo() {\n        return;\n    }\n&lt;/script&gt;\n&lt;script&gt;\n    foo();\n&lt;/script&gt;\n</code></pre>\n\n<p>My understanding here is that the Global object (which serves as the Variable object in the global execution context) exists (and remains) at all times, so the first JavaScript program will create the function object and make a reference for it, and then the second JavaScript program will use that reference to call the function. Therefore, all JavaScript programs (within a single web-page) \"use\" the same Global object, and all changes done to the Global object by one JavaScript program can be observed by all JavaScript programs that run subsequently.</p>\n\n<p>Now, note this...</p>\n\n<pre><code>&lt;script&gt;\n    // assuming that foo is not defined\n    foo();\n    alert(1);\n&lt;/script&gt;\n</code></pre>\n\n<p>In the above case, the alert call <strong>will not execute</strong>, because the \"foo()\" statement throws a ReferenceError (which breaks the whole JavaScript program) and therefore, all subsequent statements do not execute.</p>\n\n<p>However, in this case...</p>\n\n<pre><code>&lt;script&gt;\n    // assuming that foo is not defined\n    foo();\n&lt;/script&gt;\n&lt;script&gt;\n    alert(1);\n&lt;/script&gt;\n</code></pre>\n\n<p>Now, the alert call <strong>does get executed</strong>. The first JavaScript program throws a ReferenceError (and as a consequence breaks), but the second JavaScript program runs normally. Of course, the browser will report the error (although it did execute subsequent JavaScript programs, after the error occurred).</p>\n\n<p>Now, my conclusions are:</p>\n\n<ul>\n<li>every SCRIPT element within the HTML code of the web-page represents a separate JavaScript program. These programs execute immediately as the HTML parser encounters them.</li>\n<li>all JavaScript programs within the same web-page \"use\" the same Global object. That Global object exists at all times (from the moment the web-page is fetched up until the web-page is destroyed). JavaScript programs may manipulate the Global object, and all changes done to the Global object by one JavaScript program can be observed in all subsequent JavaScript programs.</li>\n<li>if one JavaScript program breaks (by having an error thrown), that does not prevent subsequent JavaScript programs to execute.</li>\n</ul>\n\n<p>Please fact-check this post and tell me if I got something wrong.</p>\n\n<p>Also, I have not found resources that explain the behaviors mentioned in this post, and I assume that the browser makers must have published such resources somewhere, so if you know about them, please provide the links to them.</p>\n\n<p><strong>UPDATE!</strong></p>\n\n<p>OK, I am going to (try to) answer my own question here :)\nI got a response (via e-mail) from Dmitry A. Soshnikov (he runs a blog about JavaScript at <a href=\"http://www.dmitrysoshnikov.com/\">http://www.dmitrysoshnikov.com/</a> ).</p>\n\n<p>His take on this issue is this: Each SCRIPT block contains global code. Executing each SCRIPT block creates a new execution context. Therefore, each SCRIPT block has its own execution context, but all those execution contexts share the same Global object.</p>\n\n<p>SCRIPT blocks could be viewed as different \"sub-programs\" with the same shared state.</p>\n\n<p>Furthermore, the ECMAScript spec (3rd edition) states (chapter 10):\n\"Global code is source text that is treated as an ECMAScript Program.\"</p>\n",
            "last_activity_date": 1295558935,
            "question_id": 3735406,
            "score": 59,
            "tags": [
                "javascript",
                "browser",
                "website"
            ],
            "title": "How many JavaScript programs are executed for a single web-page in the browser?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>JSON.stringify</code> turns an object in to a JSON text and stores that JSON text in a string.</p>\n\n<p><code>JSON.parse</code> turns a string of JSON text into an object.</p>\n",
                    "is_accepted": true,
                    "score": 111
                },
                {
                    "body": "<p><code>JSON.parse();</code> is for \"parsing\" something that was received as JSON. JSON.stringify is to create a JSON string out of an object/array.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>They are the inverse of each other. JSON.stringify() serializes a JS object, whereas JSON.parse() will deserialize it.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><code>JSON.stringify(obj [, replacer [, space]])</code> - Takes any serializable object and returns the JSON representation as a string.</p>\n\n<p><code>JSON.parse(string)</code> - Takes a well formed JSON string and returns the corresponding JavaScript object.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><strong>JSON.stringify vs JSON.parse</strong></p>\n\n<p>I have been confused over when to use these parsing methods.</p>\n\n<p>After I echo my json_encoded data and retrieve it back via ajax,I often run in to confusion that when should I use <strong>JSON.stringify</strong> and <strong>JSON.parse</strong>.</p>\n\n<p>I got <code>[object,object]</code> in my <em>console.log</em> when parsed and\n a js object when stringified.</p>\n\n<pre><code>$.ajax({\nurl:\"demo_test.txt\",\nsuccess:function(data){\n         console.log(JSON.stringify(data))\n                     OR\n         console.log(JSON.parse(data))\n        //this is what I am unsure about?\n  }});\n</code></pre>\n",
            "last_activity_date": 1415441759,
            "question_id": 17785592,
            "score": 58,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "Difference between JSON.stringify and JSON.parse"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>This blog isn't too dated, but it supplies some answers to your questions as well as gives some more info on speeding up your site when using jquery: <a href=\"http://www.artzstudio.com/2009/04/jquery-performance-rules/\" rel=\"nofollow\">http://www.artzstudio.com/2009/04/jquery-performance-rules/</a></p>\n\n<p>One of my favorites is number six which states to limit DOM manipulation.  It's always a bad thing to do a .append in a for loop since each time you are appending to the DOM, which is an expensive operation.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I'll try to answer these as concisely as possible:</p>\n\n<ol>\n<li><p>Cache it when it's used often, <strong>especially</strong> in a loop situation, running the <em>same</em> code to get the <em>same</em> result is never a good thing for performance, cache it.</p></li>\n<li><p>Use <code>this</code> when you only need a DOM element and <code>$(this)</code> when you need <a href=\"http://api.jquery.com/\">the jQuery methods</a> (that wouldn't be available otherwise), your example of <code>this.id</code> vs <code>$(this).attr(\"id\")</code> is perfect, some more common examples:  </p>\n\n<ul>\n<li>Use <code>this.checked</code> instead of <code>$(this).is(':checked')</code></li>\n<li>Use <code>$.data(this, 'thing')</code> instead of <code>$(this).data('thing')</code></li>\n<li>Any other case where creating a jQuery object isn't useful basically.</li>\n</ul></li>\n<li><p>Decending from an ID selector is preferred for performance...how specific do you need to be?  That completely depends, in short: <em>be as specific as you need to be</em>.</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>Up to your questions:</p>\n\n<ol>\n<li>Caching the jQuery object should yield best performance. It will avoid DOM lookups which is what can get slow when performed many times. You can benefit from jQuery chaining - sometimes there is no need for a local variable.</li>\n<li>The same goes with $(this) when <code>this</code> is a DOM element. Despite the fact that this is the fastest way to obtain a jQuery object it is still slower than caching. If the vanilla DOM element would suffice - then don't call jQuery at all. The example with the id attribute is excellent - prefer this.id than $(this).attr('id) if you are not going to need $(this)</li>\n<li>More specific selectors will decrease the DOM lookup time indeed. However there is indeed a line to be drawn - make the selectors more specific only if you are 100% sure this would improve performance in a noticeable way.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The <strong>only</strong> situations you should keep your eye on are <strong>loops</strong> and <strong>events</strong>. Because every action you make in one of these will be done in every iteration or on every event.</p>\n\n<ol>\n<li><p><strong>Assignment vs jQuery Calls</strong></p>\n\n<p>Your example is not the best. The place where you should save references to jQuery objects are the ones used in <strong>loops</strong> or <strong>events</strong>, or which are results of <strong>complex queries</strong>.</p></li>\n<li><p><strong>this vs $(this)</strong></p>\n\n<p>Again in <strong>performance critical</strong> situations <strong>raw dom</strong> is better. <strong>Other</strong> than that you should chose which is <strong>shorter</strong> or more <strong>readable</strong>. Surprise, surprise it's not always jQuery.</p></li>\n<li><p><strong>Is more specificity always better?</strong></p>\n\n<p>There are <strong>more types</strong> of specificity which are usually confused by people. <strong>One</strong> of them is <strong>useless</strong> which e.g.: a tag name for an id selector <code>tag#id</code>, it will be slower than a simple id. But there is <strong>another</strong> type when it will be a <strong>huge benefit</strong> to be specific.\nNow this type depends on the browser, because the modern ones will sacrifice for the old ones, but it worths the trade-off This happens when you specify a <code>tag</code> for a <code>class</code> <code>tag.class</code>. In IE 6-7 it will be significantly faster than a simple <code>.class</code>, because sizzle can make use of the fast <code>document.getElementsByTagName</code> function. Now <strong>another</strong> type is when you specify <strong>too much ancestors</strong>. This will <strong>slow things down</strong> in every browser. This is because the selector is executed from right to left. The rule to keep in mind: <strong>always be the rightmost selector as specific as possible</strong>.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<h2>1) Assignment vs jQuery Calls</h2>\n\n<blockquote>\n  <p>Does this same rule apply when referencing jQuery's $(this)?</p>\n</blockquote>\n\n<p>Yes, absolutely. A call to the <code>$</code> function creates a new jQuery object and with it comes associated overhead. Multiple calls to <code>$</code> with the same selector will create a new object every time.</p>\n\n<h2>2) this vs $(this)</h2>\n\n<p>I would say knowing the difference is important because at times it becomes crucial that you don't wrap your objects with jQuery. In most cases, you wouldn't want to do premature optimization and just to keep things consistent, always wrap them with $(this), and preferably cache it in a variable. However, consider this extreme example of an unordered list <code>&lt;ul&gt;</code> that contains a million <code>&lt;li&gt;</code> elements:</p>\n\n<pre><code>$(\"#someList  li\").each(function() {\n    var id = $(this).attr('id');\n});\n</code></pre>\n\n<p>A million new objects will be created which will incur a significant performance penalty, when you could have done without creating any new objects at all. For attributes and properties that are consistent across all browsers, you could access them directly without wrapping it in jQuery. However, if doing so, try to limit it to cases where lots of elements are being dealt with.</p>\n\n<h2>3) Is more specificity always better?</h2>\n\n<p>Not always. It mostly depends on browsers, and again not worth delving into micro-optimizations unless you know for sure that something is running rather slow in your application. For example:</p>\n\n<pre><code>$(\"#someElement\") vs $(\"#someElement\", \"#elementsContainer\")\n</code></pre>\n\n<p>It may appear that since we are also provide a context when searching an element by id, that the second query is going to be faster, but it's the opposite. The first query translates to a direct call to the native <code>getElementById(..)</code> while the second one doesn't because of the context selector.</p>\n\n<p>Also, some browsers might provide an interface to access elements by class name using <code>getElementsByClassName</code> and jQuery might be using it for those browsers for faster results, in which case providing a more specific selector such as:</p>\n\n<pre><code>$(\"#someElement.theClass\")\n</code></pre>\n\n<p><em>might</em> actually be a hindrance than simply writing:</p>\n\n<pre><code>$(\".theClass\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<h2>2013 blog article about the best jQuery practices</h2>\n\n<p>Updated answers on your question and even more regarding the best jQuery practices to apply nowadays, <a href=\"http://www.tipsfromsiliconvalley.com/2013/06/17/jquery-guide-10-best-practices-with-jquery-1-7-for-front-end-developers/\" rel=\"nofollow\">this article</a> is dealing with interesting subjects that are really helpful and that you might want to read.</p>\n\n<p>It deals with the subjects asked here and even more: the animate function,jQuery promises, best ways to import jQuery, jQuery events etc. \nHope that will be helpful to you!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Ok saddle up cowboys, because this is going to be a long one. I have been spending the morning going through some of my old code and I'm left wondering about best practices and optimzation. In order to avoid a ride down subjective lane I'll just post some examples with some hopefully easy to answer questions. I will try to keep the examples very simple for ease of an answer and to decrease the likelihood of mistakes. Here we go:</p>\n\n<h1>1) Assignment vs jQuery Calls</h1>\n\n<p>I understand that when accessing selectors it's generally considered better to assign a selector to a variable rather than make the same call more than once - ex.</p>\n\n<pre><code>$('div#apples').hide();\n$('div#apples').show();\n</code></pre>\n\n<p>vs.</p>\n\n<pre><code>var oranges = $('div#oranges');\noranges.show();\noranges.hide();\n</code></pre>\n\n<p>Does this same rule apply when referencing jQuery's <code>$(this)</code>? Ex. A simple bit of script to make some data in a table clickable and customize the link.</p>\n\n<pre><code>$('tr td').each( function() {\n    var colNum = $(this).index();\n    var rowNum = $(this).parent().index();\n    $(this).wrap('&lt;a href=\"example.com/hello.html?column=' + colNum + '&amp;row=' + rowNum +'\"&gt;'); \n})\n</code></pre>\n\n<p>vs.</p>\n\n<pre><code>$('tr td').each( function() {\n    var self = $(this);\n    var colNum = self.index()\n    var rowNum = self.parent().index()\n    self.wrap('&lt;a href=\"example.com/hello.html?column=' + colNum + '&amp;row=' + rowNum +'\"&gt;'); \n});\n</code></pre>\n\n<h1>2) <code>this</code> vs <code>$(this)</code></h1>\n\n<p>Ok so this next one is something that I have wondered about for a long time but I can't seem to find any information on it. Please excuse my ignorance. When does it make sense to call the vanilla js <code>this</code> as opposed to the jQuery wrapped <code>$(this)</code>? It's my <a href=\"http://encosia.com/2010/03/30/5-steps-toward-jquery-mastery/\">understanding</a> that -</p>\n\n<pre><code>$('button').click(function() {\n  alert('Button clicked: ' + $(this).attr('id'));\n});\n</code></pre>\n\n<p>Is much less efficient than accessing the DOM attribute of the vanilla <code>this</code> object like the following -</p>\n\n<pre><code>$('button').click(function() {\n  alert('Button clicked: ' + this.id);\n});\n</code></pre>\n\n<p>I understand what is going on there, Im just wondering if there is a rule of thumb to follow when deciding which to use.</p>\n\n<h1>3) Is more specificity always better?</h1>\n\n<p>This one is pretty simple, is it ALWAYS beneficial to be more specific with our selectors? It's easy to see that <code>$('.rowStripeClass')</code> would be much slower than <code>$('#tableDiv.rowStripeClass')</code>, but where do we draw the line? Is <code>$('body div#tableDiv table tbody tr.rowStripeClass')</code> faster still? Any input would be appreciated!</p>\n\n<p>If you've made it this far, thanks for taking a look! If you haven't, :p\n\u200b</p>\n",
            "last_activity_date": 1375891763,
            "question_id": 3230727,
            "score": 35,
            "tags": [
                "javascript",
                "jquery",
                "sizzle"
            ],
            "title": "jQuery Optimization/Best Practices"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>If you need to use the functionality provided by <code>express.bodyParser</code> but you want to disable it for multipart/form-data, the trick is to not use <code>express.bodyParser directly</code>. <code>express.bodyParser</code> is a convenience method that wraps three other methods: <code>express.json</code>, <code>express.urlencoded</code>, and <code>express.multipart</code>.</p>\n\n<p>So instead of saying</p>\n\n<pre><code>app.use(express.bodyParser())\n</code></pre>\n\n<p>you just need to say</p>\n\n<pre><code>app.use(express.json())\n   .use(express.urlencoded())\n</code></pre>\n\n<p>This gives you all the benefits of the bodyparser for most data while allowing you to handle formdata uploads independently.</p>\n\n<p><strong>Edit:</strong> <code>json</code> and <code>urlencoded</code> are now no longer bundled with Express. They are provided by the separate <a href=\"https://github.com/expressjs/body-parser\">body-parser</a> module and you now use them as follows:</p>\n\n<pre><code>bodyParser = require(\"body-parser\")\napp.use(bodyParser.json())\n   .use(bodyParser.urlencoded())\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>If the need for body parsing depends only on the route itself, the simplest thing is to use <code>bodyParser</code> as a route middleware function on only the routes that need it rather than using it app-wide:</p>\n\n<pre><code>var express=require('express');\nvar app=express.createServer();\napp.post('/body', express.bodyParser(), function(req, res) {\n    res.send(typeof(req.body), {'Content-Type': 'text/plain'});\n});\napp.post('/nobody', function(req, res) {\n    res.send(typeof(req.body), {'Content-Type': 'text/plain'});\n});\napp.listen(2484);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>throw this is before app.configure</p>\n\n<pre><code>delete express.bodyParser.parse['multipart/form-data'];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When you type <code>app.use(express.bodyParser())</code>, almost each request will go through <code>bodyParser</code> functions (which one will be executed depends on <code>Content-Type</code> header).</p>\n\n<p>By default, there are 3 headers supported (AFAIR). You could see sources to be sure. You can (re)define handlers for <code>Content-Type</code>s with something like this:</p>\n\n<pre><code>var express = require('express');\nvar bodyParser = express.bodyParser;\n\n// redefine handler for Content-Type: multipart/form-data\nbodyParser.parse('multipart/form-data') = function(req, options, next) {\n  // parse request body your way; example of such action:\n  // https://github.com/senchalabs/connect/blob/master/lib/middleware/multipart.js\n\n  // for your needs it will probably be this:\n  next();\n}\n</code></pre>\n\n<p><hr/><strong>upd.</strong></p>\n\n<p>Things have changed in Express 3, so I'm sharing updated code from working project (should be <code>app.use</code>ed <em>before</em> <code>express.bodyParser()</code>):</p>\n\n<pre><code>var connectUtils = require('express/node_modules/connect/lib/utils');\n\n/**\n * Parses body and puts it to `request.rawBody`.\n * @param  {Array|String} contentTypes Value(s) of Content-Type header for which\n                                       parser will be applied.\n * @return {Function}                  Express Middleware\n */\nmodule.exports = function(contentTypes) {\n  contentTypes = Array.isArray(contentTypes) ? contentTypes\n                                             : [contentTypes];\n  return function (req, res, next) {\n    if (req._body)\n      return next();\n\n    req.body = req.body || {};\n\n    if (!connectUtils.hasBody(req))\n      return next();\n\n    if (-1 === contentTypes.indexOf(req.header('content-type')))\n      return next();\n\n    req.setEncoding('utf8');  // Reconsider this line!\n    req._body   = true;       // Mark as parsed for other body parsers.\n    req.rawBody = '';\n\n    req.on('data', function (chunk) {\n      req.rawBody += chunk;\n    });\n\n    req.on('end', next);\n  };\n};\n</code></pre>\n\n<p>And some pseudo-code, regarding original question:</p>\n\n<pre><code>function disableParserForContentType(req, res, next) {\n  if (req.contentType in options.contentTypes) {\n    req._body = true;\n    next();\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Within Express 3, you can pass parameter to the <code>bodyParser</code> as <code>{defer: true}</code> - which in term defers multipart processing and exposes the Formidable form object as req.form. Meaning your code can be:</p>\n\n<pre><code>...\napp.use(express.bodyParser({defer: true}));\n\n...\n// your upload handling request \napp.post('/upload', function(req, res)) {\n    var incomingForm = req.form  // it is Formidable form object\n\n    incomingForm.on('error', function(err){\n\n          console.log(error);  //handle the error\n\n    })\n\n    incomingForm.on('fileBegin', function(name, file){\n\n         // do your things here when upload starts\n    })\n\n\n    incomingForm.on('end', function(){\n\n         // do stuff after file upload\n    });\n\n    // Main entry for parsing the files\n    // needed to start Formidables activity\n    incomingForm.parse(req, function(err, fields, files){\n\n\n    })\n}\n</code></pre>\n\n<p>For more detailed formidable event handling refer to <a href=\"https://github.com/felixge/node-formidable\">https://github.com/felixge/node-formidable</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I've faced similar problems in 3.1.1 and found (not so pretty IMO) solution:</p>\n\n<p>to disable bodyParser for multipart/form-data:</p>\n\n<pre><code>var bodyParser = express.bodyParser();\napp.use(function(req,res,next){\n    if(req.get('content-type').indexOf('multipart/form-data') === 0)return next();\n    bodyParser(req,res,next);\n});\n</code></pre>\n\n<p>and for parsing the content:</p>\n\n<pre><code>app.all('/:token?/:collection',function(req,res,next){\n    if(req.get('content-type').indexOf('multipart/form-data') !== 0)return next();\n    if(req.method != 'POST' &amp;&amp; req.method != 'PUT')return next();\n    //...use your custom code here\n});\n</code></pre>\n\n<p>for example I'm using node-multiparty where the custom code should look like this:</p>\n\n<pre><code>    var form = new multiparty.Form();\n\n    form.on('file',function(name,file){\n       //...per file event handling\n    });     \n\n    form.parse(req, function(err, fields, files) {\n       //...next();\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>This seems like it should be a fairly simple question, but I'm having a really hard time figuring out how to approach it.</p>\n\n<p>I'm using Node.js + Express to build a web application, and I find the connect BodyParser that express exposes to be very useful in most cases. However, I would like to have more granular access to multipart form-data POSTS as they come - I need to pipe the input stream to another server, and want to avoid downloading the whole file first.</p>\n\n<p>Because I'm using the Express BodyParser, however, all file uploads are parsed automatically and uploaded and available using \"request.files\" before they ever get to any of my functions.</p>\n\n<p>Is there a way for me to disable the BodyParser for multipart formdata posts without disabling it for everything else?</p>\n",
            "last_activity_date": 1407920411,
            "question_id": 11295554,
            "score": 34,
            "tags": [
                "javascript",
                "node.js",
                "file-upload",
                "express",
                "connect"
            ],
            "title": "How to disable Express BodyParser for file uploads (Node.js)"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I don't know of any software that actively check for problems, but Adobe has recently released <a href=\"https://browserlab.adobe.com/index.html#\" rel=\"nofollow\">BrowserLab</a>, which really does speed up cross-browser testing. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<h3>Cross Browser Development</h3>\n\n<p>No tool can ever make up for bad behaviour, but they can sure make life easier on you.</p>\n\n<p>That being said, you should really come up with a workflow that let's you optimize for cross-browser compatability in the least amount of work spent. If that means small iterative or large monolithical steps for you, well that is up to you to decide. But generally working against several browsers during development saves you if not time at least a major headache on d-day.</p>\n\n<h3>List of tools/resources i find useful</h3>\n\n<ul>\n<li><a href=\"http://seleniumhq.org/\">Selenium</a> is a tool for frontend\ntesting </li>\n<li><a href=\"http://my-debugbar.com/wiki/IETester/HomePage\">IETester</a> let's you view\na page in different IE versions</li>\n<li><a href=\"http://browsershots.org/\">Browsershots</a> let's you view the\npage on different platforms as well</li>\n<li><a href=\"http://www.google.com\">Google</a> let's you search for known and obscure IE perversions</li>\n<li><a href=\"http://www.ie6nomore.com/\">IE 6 No More</a> saves you a lot of headache not bothering about the preshistorical crap that goes by the name of IE 6</li>\n<li><a href=\"http://developer.yahoo.com/yui/articles/gbs/\">YUI Graded Browser Support</a> - make sure you know which browsers to focus on</li>\n<li><a href=\"http://jquery.com/\">jQquery</a> Cross browser javascript library</li>\n<li><a href=\"http://developer.yahoo.com/yui/3/cssreset/\">YUI 3: Reset CSS</a> reset your CSS (link contains useful information as well as the CSS)</li>\n<li><a href=\"http://net.tutsplus.com/tutorials/html-css-techniques/9-most-common-ie-bugs-and-how-to-fix-them/\">9 Most Common IE Bugs and How to Fix Them</a> very useful tips on how to get the most bang for the buck by fixing the common problems first.</li>\n<li><a href=\"http://www.good-tutorials.com/tutorials/css/cross-browser-development\">Cross browser development</a> Contains lots of useful tutorials regarding cross browser development.</li>\n</ul>\n\n<h3>References</h3>\n\n<p><a href=\"http://stackoverflow.com/questions/426190/selenium-alternatives\">Selenium alternatives</a> / <a href=\"http://crossbrowsertesting.com/\">Cross Browser Testing</a> / <a href=\"http://litmusapp.com/\">Litmus</a></p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>This will not answer your question, but just an advice based on my personal experience.</p>\n\n<p>When you are developing for many browsers, the best thing to do is to test simultaneously on all of them while you're coding.</p> \n\n<p>This way you will just have to correct small bugs each time as opposed to overwhelming complicated layout problems.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>When you say only using divs and CSS, I hope you're not absolutely positioning everything. That's a sure-fire way to mess designs up in lots of browsers. (Generally the best practice is to use floats.)</p>\n\n<p>You could also try <a href=\"http://code.google.com/p/ie7-js/\" rel=\"nofollow\">IE7.js</a> to fix a bunch of problems with IE 6-7.</p>\n\n<p>In general I'd suggest developing in IE and one of the standards-compliant browsers side-by-side (Firefox/Chrome/Safari/Opera). And try and keep both the HTML and CSS as simple as possible.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would also recommend using <a href=\"http://developer.yahoo.com/yui/3/cssreset/\" rel=\"nofollow\">CSS reset</a>. This way you get a lot of inconsistencies out of the way right from the start.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A couple more tools include</p>\n\n<ul>\n<li>Browsera - automatic detection of cross-browser layout problems</li>\n<li>LitmusApp - screenshots with pass/fail tagging</li>\n<li>SuperPreview - extension to Microsoft Expression Web (currently available standalone download) where you can view an overlay screenshot of a different browser</li>\n<li>Browserlab - extension to Adobe Dreamweaver (currently available standalone online) where you can view an overlay screenshot of a different browser</li>\n</ul>\n\n<p>I'd also strongly recommend using a CSS reset to start such as <a href=\"http://meyerweb.com/eric/tools/css/reset/\" rel=\"nofollow\">http://meyerweb.com/eric/tools/css/reset/</a></p>\n\n<p>Why?  Because many of the cross-browser inconsistencies stem from the fact that the default style in the browser differs.  For instance, a default margin may make an element layout correctly in one browser, but not the others.  </p>\n\n<p>It may seem weird to always be overriding default behavior, because it seems like a waste, but its absolutely necessary in order to have a baseline with which to work.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'd recommend looking at a CSS framework like <a href=\"http://www.blueprintcss.org/\" rel=\"nofollow\">BluePrint</a>. It has a generic way to build pages using grids, and also has some default css for forms etc. </p>\n\n<p>Frameworks will have dealt with many of these cross-browser quirks during their development, so it could save you a lot of time.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I do cross-browser development and I don't really use any of the prescribed patterns, like cross-browser testing. I instead use a decorative pattern. Sometimes it works wonderfully, sometimes it's a headache, but that can be said for any development pattern.</p>\n\n<p>Most of my development takes place in which browser I consider the most standards-compliant. I prefer WebKit to Presto, but both are generally neck and neck for standards compliance. With these browsers, proper use of HTML and CSS almost always leads to desirable results. My WebKit browser of choice is Google Chrome. Safari works too, but keep in mind that on Mac OS X the font smoothing tends to make text bigger. To ensure compatibility with sites designed for Safari Mac, Safari Win emboldens fonts, so it's not always the most pixel-perfect representation of your site.</p>\n\n<p>Blueprint CSS can be a huge help if you're trying to quickly prototype a cross-browser site design. I'm not convinced that such a framework is always necessary, and they can also influence the way you structure your XHTML markup, and contorting your markup to match a pre-existing CSS class hierarchy isn't always a great idea.</p>\n\n<p>Once I have a design that I'm happy with in my standards compliant browser, I then decorate it with bug fixes in other, less standards-compliant browsers using conditional styles or stylesheets. Firefox, at least since version 3.0, is almost never a huge issue, but there are ways of targeting Firefox specifically, and even differentiating between Gecko 1.9 and 1.8, using only CSS. It's a hack, technically, so CSS purists might scoff at the code blasphemy, but it's a reliable, usable solution. For clarity and ease of maintenance, I usually maintain my Firefox/IE fixes in isolated stylesheets and compile them with some kind of server side script, which I consider preferable to conditional include statements and JavaScript hacks. If you make use of caching with PHP, this isn't a significant bottleneck or waste of CPU time.</p>\n\n<p><a href=\"http://www.my-debugbar.com/wiki/IETester/HomePage\" rel=\"nofollow\">IETester</a> is an indispensible tool for checking a design in all of the different IE versions, and it even uses the proper JScript engine for each release, which previous, less reliable solutions like MultipleIEs lacked.</p>\n\n<p>These days, the biggest problem with cross-browser development is JavaScript, and jQuery will basically save your life here. As someone who maintained a sizable JavaScript framework for a corporate website in the days before AJAX and JavaScript interfaces, so there's no limit to the amount of praise I can give for jQuery/Prototype/Dojo.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm developing a web application for a new service, starting from Firefox 3.5.</p>\n\n<p>The interface design is tableless, only using divs + CSS &amp; performance-blessed practices.</p>\n\n<p>Now, while being compatible with Safari has taken just a small amount of time, IE is a pain.</p>\n\n<p>My question is: is there anything out there that could be used to speedup cross-browser checking? I already know many points of difference between FF and IE for instance, but a specific tool would maybe help some more.</p>\n\n<p>Could you suggest one, if any?</p>\n\n<p>Thanks,</p>\n\n<p>Scarlet</p>\n",
            "last_activity_date": 1358163134,
            "question_id": 1694544,
            "score": 18,
            "tags": [
                "javascript",
                "css",
                "internet-explorer",
                "firefox",
                "cross-browser"
            ],
            "title": "Cross-browser development"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete\"><code>delete</code></a> operator allows you to remove a property from an object.  </p>\n\n<p>The following examples all do the same thing.</p>\n\n<pre><code>// Example 1\nvar key = \"Cow\";\ndelete thisIsObject[key]; \n\n// Example 2\ndelete thisIsObject[\"Cow\"];\n\n// Example 3\ndelete thisIsObject.Cow;\n</code></pre>\n\n<p>If you're interested, read <a href=\"http://perfectionkills.com/understanding-delete/\">Understanding Delete</a> for an in-depth explanation.</p>\n",
                    "is_accepted": true,
                    "score": 399
                },
                {
                    "body": "<p>If you are using a javascript shell, it's as easy as <code>delete object.keyname;</code>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In Node.JS, you can use <a href=\"https://npmjs.org/package/key-del\" rel=\"nofollow\">key-del</a> module, which deletes the keys from Javascript object, including nested one</p>\n\n<p><strong>Example:</strong> </p>\n\n<pre><code>var deleteKey = require('key-del')\n\nvar originalObject = {\n    one: 1,\n    two: 2,\n    three: {\n      nestedOne: 3,\n      nestedTwo: 4\n    }\n}\n\nvar result = deleteKey(originalObject, ['one', 'nestedOne'])\n\nconsole.log(result)\n// {two: 2, three: {nestedTwo: 4}}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you are using Underscore js , there is function 'omit' that witll do it.\n<a href=\"http://underscorejs.org/#omit\" rel=\"nofollow\">http://underscorejs.org/#omit</a></p>\n\n<pre><code>var thisIsObject= {\n    'Cow' : 'Moo',\n    'Cat' : 'Meow',\n    'Dog' : 'Bark'\n};\n_.omit(thisIsObject,'Cow');\n\n=&gt; {'Cat' : 'Meow', 'Dog' : 'Bark'}  //result\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Let's say we have an object with this format:</p>\n\n<pre><code>var thisIsObject= {\n   'Cow' : 'Moo',\n   'Cat' : 'Meow',\n   'Dog' : 'Bark'\n};\n</code></pre>\n\n<p>i wanted to do a function that removes by key:</p>\n\n<pre><code>removeFromObjectByKey('Cow');\n</code></pre>\n",
            "last_activity_date": 1425236561,
            "question_id": 3455405,
            "score": 199,
            "tags": [
                "javascript"
            ],
            "title": "how to remove a key from a JavaScript object?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use jQuery's <a href=\"http://api.jquery.com/jQuery.map/\"><code>$.map</code></a>.</p>\n\n<pre><code>var foo = { 'alpha' : 'puffin', 'beta' : 'beagle' },\nkeys = $.map(foo, function(v, i){\n  return i;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<pre><code>var foo = { 'alpha' : 'puffin', 'beta' : 'beagle' };\nvar keys = Object.keys(foo); // ['alpha', 'beta'] \n// (or maybe some other order, keys are unordered).\n</code></pre>\n\n<p>Use <a href=\"http://es5.github.com/#x15.2.3.14\"><code>Object.keys</code></a>.</p>\n\n<p>This is an ES5 feature. This means it works in all modern browsers but will not work in legacy browsers.</p>\n\n<p>The ES5-shim has a <a href=\"https://github.com/kriskowal/es5-shim/blob/v2.0.5/es5-shim.js#L544\">implementation of <code>Object.keys</code> you can steal</a></p>\n",
                    "is_accepted": true,
                    "score": 154
                },
                {
                    "body": "<p>I don't know about less verbose but I was inspired to coerce the following onto one line by the one-liner request, don't know how Pythonic it is though ;)</p>\n\n<pre><code>var keys = (function(o){var ks=[]; for(var k in o) ks.push(k); return ks})(foo);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Of course, <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys()</code></a> is the <em>best</em> way to get an Object's keys. If it's not available in your environment, it can be trivially <em>shimmed</em> using code such as in your example (except you'd need to take into account your loop will iterate over all properties up the prototype chain, unlike <code>Object.keys()</code>'s behaviour).</p>\n\n<p>However, your example code...</p>\n\n<pre><code>var foo = { 'alpha' : 'puffin', 'beta' : 'beagle' };\nvar keys = [];\nfor (var key in foo) {\n    keys.push(key);\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Hkd9Y/\">jsFiddle</a>.</p>\n\n<p>...could be modified. You can do the assignment right in the <em>variable</em> part.</p>\n\n<pre><code>var foo = { 'alpha' : 'puffin', 'beta' : 'beagle' };\nvar keys = [], i = 0;\nfor (keys[i++] in foo) {}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/HCf6j/\">jsFiddle</a>.</p>\n\n<p>Of course, this behaviour is different to what <code>Object.keys()</code> actually does (<a href=\"http://jsfiddle.net/hHEwy/\">jsFiddle</a>). You could simply use the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys#Compatiblity\">shim on the MDN documentation</a>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I would like to get the keys of a JavaScript object as an array, either in jQuery or pure JavaScript.</p>\n\n<p>Is there a less verbose way than this?</p>\n\n<pre><code>var foo = { 'alpha' : 'puffin', 'beta' : 'beagle' };\nvar keys = [];\nfor (var key in foo) {\n    keys.push(key);\n}\n</code></pre>\n",
            "last_activity_date": 1385786380,
            "question_id": 8763125,
            "score": 74,
            "tags": [
                "javascript"
            ],
            "title": "Get array of object&#39;s keys"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This sounds more like you want a tooltip for the link selected.  There are many jQuery tooltips, try out <a href=\"http://craigsworks.com/projects/qtip/\" rel=\"nofollow\">jQuery qTip</a>.  It has a lot of options and is easy to change the styles.</p>\n\n<p>Otherwise if you want to do this yourself you can use the jQuery <code>.position()</code>.  More info about <code>.position()</code> is on <a href=\"http://api.jquery.com/position/\" rel=\"nofollow\">http://api.jquery.com/position/</a></p>\n\n<p><code>$(\"#element\").position();</code> will return the current position of an element relative to the offset parent.</p>\n\n<p>There is also the jQuery <a href=\"http://api.jquery.com/offset/\" rel=\"nofollow\">.offset();</a> which will return the position relative to the document.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Initially, Grab the <a href=\"http://api.jquery.com/offset/\"><strong>.offset</strong></a> position of the element and calculate it's relative position with respect to window</p>\n\n<p><strong>Refer</strong> :<br />\n1. <a href=\"http://api.jquery.com/offset\">offset</a><br />\n2. <a href=\"http://api.jquery.com/scroll/\">scroll</a><br />\n3. <a href=\"http://api.jquery.com/scrolltop/\">scrollTop</a><br /></p>\n\n<p>You can give it a try at this <strong><a href=\"http://jsfiddle.net/mk4q332q/\"><em>fiddle</em></a></strong></p>\n\n<p>Following few lines of code explains how this can be solved</p>\n\n<p>when <a href=\"http://api.jquery.com/scroll\"><strong>.scroll</strong></a> event is performed, we calculate the relative position of the element with respect to window object</p>\n\n<pre><code>$(window).scroll(function () {\n    console.log(eTop - $(window).scrollTop());\n});\n</code></pre>\n\n<p>when scroll is performed in browser, we call the above event handler function</p>\n\n<h2>code snippet</h2>\n\n<hr>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function log(txt) {\r\n  $(\"#log\").html(\"location : &lt;b&gt;\" + txt + \"&lt;/b&gt; px\")\r\n}\r\n\r\n$(function() {\r\n  var eTop = $('#element').offset().top; //get the offset top of the element\r\n  log(eTop - $(window).scrollTop()); //position of the ele w.r.t window\r\n\r\n  $(window).scroll(function() { //when window is scrolled\r\n    log(eTop - $(window).scrollTop());\r\n  });\r\n});</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>#element {\r\n  margin: 140px;\r\n  text-align: center;\r\n  padding: 5px;\r\n  width: 200px;\r\n  height: 200px;\r\n  border: 1px solid #0099f9;\r\n  border-radius: 3px;\r\n  background: #444;\r\n  color: #0099d9;\r\n  opacity: 0.6;\r\n}\r\n#log {\r\n  position: fixed;\r\n  top: 40px;\r\n  left: 40px;\r\n  color: #333;\r\n}\r\n#scroll {\r\n  position: fixed;\r\n  bottom: 10px;\r\n  right: 10px;\r\n  border: 1px solid #000;\r\n  border-radius: 2px;\r\n  padding: 5px;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;div id=\"log\"&gt;&lt;/div&gt;\r\n\r\n&lt;div id=\"element\"&gt;Hello\r\n  &lt;hr&gt;World&lt;/div&gt;\r\n&lt;div id=\"scroll\"&gt;Scroll Down&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": true,
                    "score": 138
                },
                {
                    "body": "<pre><code>function getWindowRelativeOffset(parentWindow, elem) {\n        var offset = {\n            left : 0,\n            top : 0\n        };\n        // relative to the target field's document\n        offset.left = elem.getBoundingClientRect().left;\n        offset.top = elem.getBoundingClientRect().top;\n        // now we will calculate according to the current document, this current\n        // document might be same as the document of target field or it may be\n        // parent of the document of the target field\n        var childWindow = elem.document.frames.window;\n        while (childWindow != parentWindow) {\n            offset.left = offset.left + childWindow.frameElement.getBoundingClientRect().left;\n            offset.top = offset.top + childWindow.frameElement.getBoundingClientRect().top;\n            childWindow = childWindow.parent;\n        }\n\n        return offset;\n    };\n</code></pre>\n\n<p>you can call it like this</p>\n\n<p>getWindowRelativeOffset(top, inputElement);</p>\n\n<p>I focus for IE only as per my focus but similar can be done foe other browsers</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Given an HTML DOM ID, how to get an element's position relative to the window in JavaScript/JQuery?  This is not the same as relative to the document nor offset parent since the element may be inside an iframe or some other elements.  I need to get the screen location of the element's rectangle (as in position and dimension) as it is currently being displayed.  Negative values are acceptable if the element is currently off-screen (have been scrolled off).</p>\n\n<p>This is for an iPad (WebKit / WebView) application.  Whenever the user taps on a special link in an <code>UIWebView</code>, I am supposed to open a popover view that displays further information about the link.  The popover view needs to display an arrow that points back to the part of the screen that invokes it.</p>\n",
            "last_activity_date": 1416480104,
            "question_id": 3714628,
            "score": 67,
            "tags": [
                "javascript",
                "jquery",
                "ipad",
                "webkit",
                "webview"
            ],
            "title": "jQuery get the location of an element relative to window"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>appendChild()</code> is a more native way:</p>\n\n<pre><code>var script = document.createElement('script');\nscript.type = 'text/javascript';\nscript.src = 'script.js';\ndocument.head.appendChild(script);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 56
                },
                {
                    "body": "<p>Do you use some AJAX framework? Using jQuery it would be:</p>\n\n<pre><code>$.getScript('script.js');\n</code></pre>\n\n<p>If you're not using any framework then see the answer by Harmen.</p>\n\n<h2>UPDATE:</h2>\n\n<p>It's been years since I\u00a0wrote this answer and I\u00a0think it's worth pointing out here that today you can use:</p>\n\n<ul>\n<li><a href=\"https://github.com/systemjs/systemjs#readme\">SystemJS</a></li>\n<li><a href=\"https://github.com/ModuleLoader/es6-module-loader#readme\">ModuleLoader</a></li>\n<li><a href=\"http://jspm.io/\">jspm.io</a></li>\n</ul>\n\n<p>to dynamically load scripts. Those may be relevant to people reading this question.</p>\n\n<p>See also: <a href=\"https://www.youtube.com/watch?v=0VUjM-jJf2U\">The Fluent 2014 talk by Guy Bedford: Practical Workflows for ES6 Modules</a>.</p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<pre><code>var el = document.createElement(\"script\"),\nloaded = false;\nel.onload = el.onreadystatechange = function () {\n  if ((el.readyState &amp;&amp; el.readyState !== \"complete\" &amp;&amp; el.readyState !== \"loaded\") || loaded) {\n    return false;\n  }\n  el.onload = el.onreadystatechange = null;\n  loaded = true;\n  // done!\n};\nel.async = true;\nel.src = path;\nvar hhead = document.getElementsByTagName('head')[0];\nhhead.insertBefore(el, hhead.firstChild);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>is there a simpler (native perhaps?) way to include a external script file in the google chrome browsers?\nCurrently I'm doing it like this:</p>\n\n<pre><code>document.head.innerHTML+=\"&lt;script src='http://domain.com/fil.js'&gt;&lt;/script&gt;\";\n</code></pre>\n",
            "last_activity_date": 1424171863,
            "question_id": 5282228,
            "score": 54,
            "tags": [
                "javascript",
                "google-chrome",
                "console",
                "include"
            ],
            "title": "Include javascript file in chrome console"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>From what I understand you can't pass an arguments to a filter function (when using the 'filter' filter). What you would have to do is to write a custom filter, sth like this:</p>\n\n<pre><code>.filter('weDontLike', function(){\n\nreturn function(items, name){\n\n    var arrayToReturn = [];        \n    for (var i=0; i&lt;items.length; i++){\n        if (items[i].name != name) {\n            arrayToReturn.push(items[i]);\n        }\n    }\n\n    return arrayToReturn;\n};\n</code></pre>\n\n<p>Here is the working jsFiddle: <a href=\"http://jsfiddle.net/pkozlowski_opensource/myr4a/1/\">http://jsfiddle.net/pkozlowski_opensource/myr4a/1/</a></p>\n\n<p>The other simple alternative, without writing custom filters is to store a name to filter out in a scope and then write:</p>\n\n<pre><code>$scope.weDontLike = function(item) {\n  return item.name != $scope.name;\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p>Actually you can pass a parameter ( <a href=\"http://docs.angularjs.org/api/ng.filter:filter\">http://docs.angularjs.org/api/ng.filter:filter</a> ) and don't need a custom function just for this. If you rewrite your HTML as below it'll work:</p>\n\n<pre><code>&lt;div ng:app&gt;\n &lt;div ng-controller=\"HelloCntl\"&gt;\n &lt;ul&gt;\n    &lt;li ng-repeat=\"friend in friends | filter:{name:'!Adam'}\"&gt;\n        &lt;span&gt;{{friend.name}}&lt;/span&gt;\n        &lt;span&gt;{{friend.phone}}&lt;/span&gt;\n    &lt;/li&gt;\n &lt;/ul&gt;\n &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/ZfGx4/59/\">http://jsfiddle.net/ZfGx4/59/</a></p>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>Actually there is another (maybe better solution) where you can use the angular's native 'filter' filter and still pass arguments to your custom filter.</p>\n\n<p>Consider the following code:</p>\n\n<pre><code>&lt;div ng-repeat=\"group in groups\"&gt;\n    &lt;li ng-repeat=\"friend in friends | filter:weDontLike(group.enemy.name)\"&gt;\n        &lt;span&gt;{{friend.name}}&lt;/span&gt;\n    &lt;li&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>To make this work you just define your filter as the following:</p>\n\n<pre><code>$scope.weDontLike = function(name) {\n    return function(friend) {\n        return friend.name != name;\n    }\n}\n</code></pre>\n\n<p>As you can see here, weDontLike actually returns another function which has your parameter in its scope as well as the original item coming from the filter.</p>\n\n<p>It took me 2 days to realise you can do this, haven't seen this solution anywhere yet.</p>\n\n<p>Checkout <a href=\"http://stackoverflow.com/questions/13464809/reverse-polarity-of-an-angular-js-filter/17811582#17811582\">Reverse polarity of an angular.js filter</a> to see how you can use this for other useful operations with filter.</p>\n",
                    "is_accepted": false,
                    "score": 78
                }
            ],
            "body": "<p>Is it possible to pass an argument to the filter function so you can filter by any name?</p>\n\n<p>Something like </p>\n\n<pre><code>$scope.weDontLike = function(item, name) {\n    console.log(arguments);\n    return item.name != name;\n};\n</code></pre>\n",
            "last_activity_date": 1416868888,
            "question_id": 11753321,
            "score": 38,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Passing arguments to angularjs filters"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You need to create a set of escaped (with <code>\\</code>) parentheses (that match the parentheses) and a group of regular parentheses that create your capturing group:</p>\n\n<pre><code>var regExp = /\\(([^)]+)\\)/;\nvar matches = regExp.exec(\"I expect five hundred dollars ($500).\");\n\n//matches[1] contains the value between the parentheses\nconsole.log(matches[1]);\n</code></pre>\n\n<p>Breakdown:</p>\n\n<ul>\n<li><code>\\(</code> : match an opening parentheses</li>\n<li><code>(</code> : begin capturing group</li>\n<li><code>[^)]+</code>: match one or more non <code>)</code> characters</li>\n<li><code>)</code> : end capturing group</li>\n<li><code>\\)</code> : match closing parentheses</li>\n</ul>\n\n<p>Here is a visual explanation: <a href=\"http://tinyurl.com/mog7lr3\">tinyurl.com/mog7lr3</a>.</p>\n",
                    "is_accepted": true,
                    "score": 90
                },
                {
                    "body": "<p>For just digits after a currency sign : <code>\\(.+\\s*\\d+\\s*\\)</code> should work</p>\n\n<p>Or <code>\\(.+\\)</code> for anything inside brackets</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try string manipulation:</p>\n\n<pre><code>var txt = \"I expect five hundred dollars ($500). and new brackets ($600)\";\nvar newTxt = txt.split('(');\nfor (var i = 1; i &lt; newTxt.length; i++) {\n    console.log(newTxt[i].split(')')[0]);\n}\n</code></pre>\n\n<p>or regex (<em>which is somewhat <a href=\"http://jsperf.com/stringvsregex/\">slow compare to the above</a></em>)</p>\n\n<pre><code>var txt = \"I expect five hundred dollars ($500). and new brackets ($600)\";\nvar regExp = /\\(([^)]+)\\)/g;\nvar matches = txt.match(regExp);\nfor (var i = 0; i &lt; matches.length; i++) {\n    var str = matches[i];\n    console.log(str.substring(1, str.length - 1));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I am trying to write a regular expression which returns a string which is between parentheses. For example: I want to get the string which resides between the strings \"(\" and \")\"</p>\n\n<pre><code>I expect five hundred dollars ($500).\n</code></pre>\n\n<p>would return</p>\n\n<pre><code>$500\n</code></pre>\n\n<p>Found <a href=\"http://stackoverflow.com/questions/5642315/regular-expression-to-get-a-string-between-two-strings-in-javascript\">Regular Expression to get a string between two strings in Javascript</a></p>\n\n<p>But I'm new with regex. I don't know how to use '(', ')' in regexp</p>\n",
            "last_activity_date": 1387263539,
            "question_id": 17779744,
            "score": 32,
            "tags": [
                "javascript",
                "jquery",
                "regex",
                "string"
            ],
            "title": "Regular Expression to get a string between parentheses in Javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>if( a['desiredKey'] !== undefined )\n{\n   // it exists\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use the <code>in</code> operator: e.g. <code>\"key1\" in a</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Don't use an array if you want named keys, use a plain object.</p>\n\n<pre><code>var a = {};\na[\"key1\"] = \"value1\";\na[\"key2\"] = \"value2\";\n</code></pre>\n\n<p>Then:</p>\n\n<pre><code>if (\"key1\" in a) {\n   // something\n} else {\n   // something else \n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 152
                },
                {
                    "body": "<p>You want to create an Object, not an Array.</p>\n\n<p>Like so,</p>\n\n<pre><code>var Map = {};\n\nMap['key1'] = 'value1';\nMap['key2'] = 'value2';\n</code></pre>\n\n<p>You can check if the key exists in multiple ways:</p>\n\n<pre><code>Map.hasOwnProperty(key);\nMap[key] != undefined // For illustration // Edit, remove null check\nif (key in Map) ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>A built-in Map type is now available in JavaScript. It can be used instead of simply using Object. It is supported by current versions of all major browsers.</p>\n\n<p>Maps do not support the <code>[subscript]</code> notation used by Objects. That syntax implicitly casts the <code>subscript</code> value to a primitive string or symbol. Maps support any values as keys, so you must use the methods <code>.get(key)</code>, <code>.set(key, value)</code> and <code>.has(key)</code>.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var m = new Map();\r\nvar key1 = 'key1';\r\nvar key2 = {};\r\nvar key3 = {};\r\n\r\nm.set(key1, 'value1');\r\nm.set(key2, 'value2');\r\n\r\nconsole.assert(m.has(key2), \"m should contain key2.\");\r\nconsole.assert(!m.has(key3), \"m should not contain key3.\");</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Objects only supports primitive strings and symbols as keys, because the values are stored as properties. If you were using Object, it wouldn't be able to to distinguish <code>key2</code> and <code>key3</code> because their string representations would be the same:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var o = new Object();\r\nvar key1 = 'key1';\r\nvar key2 = {};\r\nvar key3 = {};\r\n\r\no[key1] = 'value1';\r\no[key2] = 'value2';\r\n\r\nconsole.assert(o.hasOwnProperty(key2), \"o should contain key2.\");\r\nconsole.assert(!o.hasOwnProperty(key3), \"o should not contain key3.\"); // Fails!</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<h3>Related</h3>\n\n<ul>\n<li>MDN Documentation: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\" rel=\"nofollow\">Map</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\" rel=\"nofollow\">Symbol</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\" rel=\"nofollow\">Set</a>, <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\" rel=\"nofollow\">WeakMap</a>, <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\" rel=\"nofollow\">WeakSet</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I want to create a map object in javascript. I came to idea like the following</p>\n\n<pre><code> var a = new Array();\n a[\"key1\"] = \"value1\";\n a[\"key2\"] = \"value2\";\n</code></pre>\n\n<p>but then how I can find a  particular key exists or not?</p>\n",
            "last_activity_date": 1421736906,
            "question_id": 6298169,
            "score": 90,
            "tags": [
                "javascript",
                "dictionary"
            ],
            "title": "How to create a Map object in a javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you're using Google Maps v2, call checkResize() on your map after resizing the container.  <a href=\"http://code.google.com/apis/maps/documentation/reference.html#GMap2\">link</a></p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Wolfgang Pichler's <a href=\"http://www.wolfpil.de/v3/map-in-a-box.html\" rel=\"nofollow\">map-in-a-box</a> offers to</p>\n\n<blockquote>\n  <p>Load a map in a draggable and resizable div element.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>for Google Maps v3, you need to trigger the resize event differently:</p>\n\n<pre><code>google.maps.event.trigger(map, \"resize\");\n</code></pre>\n\n<p>See the documentation for the resize event (you'll need to search for the word 'resize'): <a href=\"http://code.google.com/apis/maps/documentation/v3/reference.html#event\">http://code.google.com/apis/maps/documentation/v3/reference.html#event</a></p>\n\n<hr>\n\n<p><strong>Update</strong> </p>\n\n<p>This answer has been here a long time, so a little demo might be worthwhile &amp; although it uses jQuery, there's no real need to do so.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$(function() {\r\n  var mapOptions = {\r\n    zoom: 8,\r\n    center: new google.maps.LatLng(-34.397, 150.644)\r\n  };\r\n  var map = new google.maps.Map($(\"#map-canvas\")[0], mapOptions);\r\n\r\n  // listen for the window resize event &amp; trigger Google Maps to update too\r\n  $(window).resize(function() {\r\n    // (the 'map' here is the result of the created 'var map = ...' above)\r\n    google.maps.event.trigger(map, \"resize\");\r\n  });\r\n});</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>html,\r\nbody {\r\n  height: 100%;\r\n}\r\n#map-canvas {\r\n  min-width: 200px;\r\n  width: 50%;\r\n  min-height: 200px;\r\n  height: 80%;\r\n  border: 1px solid blue;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;script src=\"https://maps.googleapis.com/maps/api/js?v=3.exp&amp;dummy=.js\"&gt;&lt;/script&gt;\r\nGoogle Maps resize demo\r\n&lt;div id=\"map-canvas\"&gt;&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 212
                }
            ],
            "body": "<p>I have a 'mapwrap' div set to 400px x 400px and inside that I have a Google 'map' set to 100% x 100%. So the map loads at 400 x 400px, then with JavaScript I resize the 'mapwrap' to 100% x 100% of the screen - the google map resizes to the whole screen as I expected but tiles start disappearing before the right hand edge of the page.</p>\n\n<p>Is there a simple function I can call to cause the Google map to re-adjust to the larger size 'mapwrap' div? </p>\n",
            "last_activity_date": 1419543037,
            "question_id": 743214,
            "score": 59,
            "tags": [
                "javascript",
                "css",
                "google-maps"
            ],
            "title": "How do I resize a Google Map with JavaScript after it has loaded?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>How to use conditional in ng-class: </p>\n\n<p>Solution 1:</p>\n\n<pre><code>&lt;i ng-class=\"{'icon-autoscroll': autoScroll, 'icon-autoscroll-disabled': !autoScroll}\"&gt;&lt;/i&gt;\n</code></pre>\n\n<p>Solution 2:</p>\n\n<pre><code>&lt;i ng-class=\"{true: 'icon-autoscroll', false: 'icon-autoscroll-disabled'}[autoScroll]\"&gt;&lt;/i&gt;\n</code></pre>\n\n<p>Solution 3 (angular v.1.1.4+ introduced support for ternary operator):</p>\n\n<pre><code>&lt;i ng-class=\"autoScroll ? 'icon-autoscroll' : 'icon-autoscroll-disabled'\"&gt;&lt;/i&gt;\n</code></pre>\n\n<p><a href=\"http://plnkr.co/edit/EdiNmaQYbVSftTuvNVpG\">Plunker</a></p>\n",
                    "is_accepted": true,
                    "score": 143
                },
                {
                    "body": "<p>As alternate solution, based on javascript logic operator '&amp;&amp;' which returns the last evaluation, you can also do this like so:</p>\n\n<pre><code>&lt;i ng-class=\"autoScroll &amp;&amp; 'icon-autoscroll' || !autoScroll &amp;&amp; 'icon-autoscroll-disabled'\"&gt;&lt;/i&gt;\n</code></pre>\n\n<p>It's only slightly shorter syntax, but for me easier to read.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Add more than one class based on the condition:</p>\n\n<pre><code>&lt;div ng-click=\"AbrirPopUp(s)\" \nng-class=\"{'class1 class2 class3':!isNew, \n           'class1 class4': isNew}\"&gt;{{ isNew }}&lt;/div&gt;\n</code></pre>\n\n<p>Apply: class1 + class2 + class3 when <strong>isNew=false</strong>,\n<p>\nApply: class1+ class4 when <strong>isNew=true</strong></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am trying to toggle the class of an element using <code>ng-class</code></p>\n\n<pre><code>&lt;button class=\"btn\"&gt;\n  &lt;i ng-class=\"{(isAutoScroll()) ? 'icon-autoscroll' : 'icon-autoscroll-disabled'}\"&gt;&lt;/i&gt;\n&lt;/button&gt;\n</code></pre>\n\n<p>isAutoScroll():</p>\n\n<pre><code>$scope.isAutoScroll = function()\n{\n    $scope.autoScroll = ($scope.autoScroll) ? false : true;\n    return $scope.autoScroll;\n}\n</code></pre>\n\n<p>Basically, if <code>$scope.autoScroll</code> is true, I want ng-class to be <code>icon-autoscroll</code> and if its false, I want it to be <code>icon-autoscroll-disabled</code></p>\n\n<p>What I have now isn't working and is producing this error in the console</p>\n\n<p><code>Error: Lexer Error: Unexpected next character  at columns 18-18 [?] in expression [{(isAutoScroll()) ? 'icon-autoscroll' : 'icon-autoscroll-disabled'}].</code></p>\n\n<p>How do I correctly do this?</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>solution 1: (outdated)</p>\n\n<pre><code>&lt;button class=\"btn\" ng-click=\"autoScroll = !autoScroll\"&gt;\n  &lt;i ng-class=\"{'icon-autoscroll': autoScroll, 'icon-autoscroll-disabled': !autoScroll}\"&gt;&lt;/i&gt;\n&lt;/button&gt;\n</code></pre>\n\n<p><strong>EDIT 2</strong></p>\n\n<p>solution 2:</p>\n\n<p>I wanted to update the solution as Solution 3 provided by Stewie should be the one used. It is the most standard when it comes to ternary operator (and to me easiest to read). The solution would be</p>\n\n<pre><code>&lt;button class=\"btn\" ng-click=\"autoScroll = !autoScroll\"&gt;\n  &lt;i ng-class=\"autoScroll ? 'icon-autoscroll' : 'icon-autoscroll-disabled'\"&gt;&lt;/i&gt;\n&lt;/button&gt;\n</code></pre>\n\n<p>translates to:</p>\n\n<p><code>if (autoScroll == true) ?</code> //use class <code>'icon-autoscroll' :</code> //else use <code>'icon-autoscroll-disabled'</code></p>\n",
            "last_activity_date": 1407948160,
            "question_id": 15397252,
            "score": 58,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "AngularJS toggle class using ng-class"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Something like this?</p>\n\n<p><a href=\"http://jsfiddle.net/jtbowden/ykbgT/embedded/result/\">http://jsfiddle.net/jtbowden/ykbgT/embedded/result/</a></p>\n\n<p><a href=\"http://jsfiddle.net/jtbowden/ykbgT/\">http://jsfiddle.net/jtbowden/ykbgT/</a></p>\n\n<p>This is the basic functionality.  It doesn't scale to more divs, etc, but that should get you started.</p>\n\n<p>The key is to wrap your elements in a container and make the overflow hidden.</p>\n\n<p><strong>Update</strong>:</p>\n\n<p>Here's a slightly better version that handles any number of divs (greater than 1):</p>\n\n<p><a href=\"http://jsfiddle.net/jtbowden/ykbgT/1/\">http://jsfiddle.net/jtbowden/ykbgT/1/</a></p>\n\n<p><strong>Simplified further</strong>:</p>\n\n<p><a href=\"http://jsfiddle.net/jtbowden/ykbgT/2/\">http://jsfiddle.net/jtbowden/ykbgT/2/</a></p>\n",
                    "is_accepted": true,
                    "score": 86
                },
                {
                    "body": "<p>Maybe I misinterpreted. I though you wanted three divs in a row, and only the ones on the end sliding and whatnot.</p>\n\n<p><a href=\"http://jsfiddle.net/acsfy/\" rel=\"nofollow\">http://jsfiddle.net/acsfy/</a></p>\n\n<p>(I know you're using jQuery for this, but it pissed me off as I was trying to force it to work. You'd have to adapt this for your purposes.)</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>This is a bit of a challenge. Here's what I'm looking for:</p>\n\n<ol>\n<li>3 divs on screen</li>\n<li>Div 1 resides in the middle of the page (centered)</li>\n<li>Div 2 resides just off the screen on the far left</li>\n<li>Div 3 resides just off the screen on the far right</li>\n<li><code>OnClick</code>, Div 1 slides to the position Div 2 was (to the left), Div 2 slides off the screen entirely, Div 3 slides to where Div 3 was (middle, centered). A new div arrives on the right.</li>\n</ol>\n\n<p>I've tried using jQuery animation and AddClass. jQuery doesn't like sliding a div offscreen. </p>\n\n<p>Any thoughts?</p>\n\n<p>For an example of what I'm describing, visit <a href=\"http://www.groupon.com/\">Groupon.com</a>. I thought it was a cool idea, and have given myself the challenge of recreating it. So far, no dice.</p>\n\n<p>-D</p>\n",
            "last_activity_date": 1369415089,
            "question_id": 4741880,
            "score": 42,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "Slide a div offscreen using jQuery"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Right after our long comment section, I think this is what you're looking for, it's jQuery based:</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;img width=\"100%\" id=\"img\" src=\"http://uploads8.wikipaintings.org/images/william-adolphe-bouguereau/self-portrait-presented-to-m-sage-1886.jpg\"&gt;\n</code></pre>\n\n<p><strong>JS:</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nwindow.onload = function(){\n       var img = document.getElementById('img')\n       if(img.clientHeight&lt;$(window).height()){\n            img.style.height=$(window).height()+\"px\";\n       }\n       if(img.clientWidth&lt;$(window).width()){\n            img.style.width=$(window).width()+\"px\";\n       } \n}\n\u200b&lt;/script&gt;\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>body{\n    overflow: hidden;\n}\n</code></pre>\n\n<p>\u200bThe code above is using the browsers width and height if you where doing this within a div, you would have to change it to something like this:</p>\n\n<p><strong>For Div:</strong></p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div style=\"width:100px; max-height: 100px;\" id=\"div\"&gt;\n     &lt;img width=\"100%\" id=\"img\" src=\"http://uploads8.wikipaintings.org/images/william-adolphe-bouguereau/self-portrait-presented-to-m-sage-1886.jpg\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>JS:</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nwindow.onload = function(){\n       var img = document.getElementById('img')\n       if(img.clientHeight&lt;$('#div').height()){\n            img.style.height=$('#div').height()+\"px\";\n       }\n       if(img.clientWidth&lt;$('#div').width()){\n            img.style.width=$('#div').width()+\"px\";\n       } \n}\n\u200b&lt;/script&gt;\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>div{\n   overflow: hidden;\n}\n</code></pre>\n\n<p>I should also state that I've only tested this is Google Chrome... here is a jsfiddle:\n<a href=\"http://jsfiddle.net/ADCKk/\" rel=\"nofollow\">http://jsfiddle.net/ADCKk/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's how I did this. A working example is in <a href=\"http://jsfiddle.net/GCtMm/\">this jsFiddle</a>.</p>\n\n<p><strong>HTML5</strong></p>\n\n<pre><code>&lt;div id=\"video-viewport\"&gt;\n    &lt;video autoplay controls preload width=\"640\" height=\"360\"&gt;\n        &lt;source src=\"http://www.quirksmode.org/html5/videos/big_buck_bunny.mp4\"type=\"video/mp4\" /&gt;\n        &lt;source src=\"http://www.quirksmode.org/html5/videos/big_buck_bunny.webm\"type=\"video/webm\" /&gt;\n        &lt;source src=\"http://www.quirksmode.org/html5/videos/big_buck_bunny.ogv\"type=\"video/webm\" /&gt;\n    &lt;/video&gt;\n&lt;/div&gt;\n\n&lt;div id=\"debug\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>#video-viewport {\n    position: absolute;\n    top: 0;\n    overflow: hidden;\n    z-index: -1; /* for accessing the video by click */\n}\n\n#debug {\n    position: absolute;\n    top 0;\n    z-index: 100;\n    color: #fff;\n    font-size: 12pt;\n}\n</code></pre>\n\n<p><strong>JavaScript/JQuery</strong></p>\n\n<pre><code>var min_w = 300; // minimum video width allowed\nvar vid_w_orig;  // original video dimensions\nvar vid_h_orig;\n\njQuery(function() { // runs after DOM has loaded\n\n    vid_w_orig = parseInt(jQuery('video').attr('width'));\n    vid_h_orig = parseInt(jQuery('video').attr('height'));\n    $('#debug').append(\"&lt;p&gt;DOM loaded&lt;/p&gt;\");\n\n    jQuery(window).resize(function () { resizeToCover(); });\n    jQuery(window).trigger('resize');\n});\n\nfunction resizeToCover() {\n\n    // set the video viewport to the window size\n    jQuery('#video-viewport').width(jQuery(window).width());\n    jQuery('#video-viewport').height(jQuery(window).height());\n\n    // use largest scale factor of horizontal/vertical\n    var scale_h = jQuery(window).width() / vid_w_orig;\n    var scale_v = jQuery(window).height() / vid_h_orig;\n    var scale = scale_h &gt; scale_v ? scale_h : scale_v;\n\n    // don't allow scaled width &lt; minimum video width\n    if (scale * vid_w_orig &lt; min_w) {scale = min_w / vid_w_orig;};\n\n    // now scale the video\n    jQuery('video').width(scale * vid_w_orig);\n    jQuery('video').height(scale * vid_h_orig);\n    // and center it by scrolling the video viewport\n    jQuery('#video-viewport').scrollLeft((jQuery('video').width() - jQuery(window).width()) / 2);\n    jQuery('#video-viewport').scrollTop((jQuery('video').height() - jQuery(window).height()) / 2);\n\n    // debug output\n    jQuery('#debug').html(\"&lt;p&gt;win_w: \" + jQuery(window).width() + \"&lt;/p&gt;\");\n    jQuery('#debug').append(\"&lt;p&gt;win_h: \" + jQuery(window).height() + \"&lt;/p&gt;\");\n    jQuery('#debug').append(\"&lt;p&gt;viewport_w: \" + jQuery('#video-viewport').width() + \"&lt;/p&gt;\");\n    jQuery('#debug').append(\"&lt;p&gt;viewport_h: \" + jQuery('#video-viewport').height() + \"&lt;/p&gt;\");\n    jQuery('#debug').append(\"&lt;p&gt;video_w: \" + jQuery('video').width() + \"&lt;/p&gt;\");\n    jQuery('#debug').append(\"&lt;p&gt;video_h: \" + jQuery('video').height() + \"&lt;/p&gt;\");\n    jQuery('#debug').append(\"&lt;p&gt;vid_w_orig: \" + vid_w_orig + \"&lt;/p&gt;\");\n    jQuery('#debug').append(\"&lt;p&gt;vid_h_orig: \" + vid_h_orig + \"&lt;/p&gt;\");\n    jQuery('#debug').append(\"&lt;p&gt;scale: \" + scale + \"&lt;/p&gt;\");\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>i'm gunna post this solution as well, since i had this problem but the other solutions did not work for my situation...</p>\n\n<p>i think to properly simulate the <code>background-size:cover;</code> css property on an element instead of an elements background-image property, you'd have to compare the images aspect ratio to the current windows aspect ratio, so no matter what size (and also in case the image is taller than wider) the window is the element is filling the window (and also centering it, though i don't know if that was a requirement)....</p>\n\n<p>using an image, just for simplicity's sake, i'm sure a video element would work fine too.</p>\n\n<p>first get the elements aspect ratio (once it's loaded), then attach the window resize handler, trigger it once for initial sizing:</p>\n\n<pre><code>var img = document.getElementById( \"background-picture\" ),\n    imgAspectRatio;\n\nimg.onload = function() {\n    // get images aspect ratio\n    imgAspectRatio = this.height / this.width;\n    // attach resize event and fire it once\n    window.onresize = resizeBackground;\n    window.onresize();\n}\n</code></pre>\n\n<p>then in your resize handler you should first determine whether to fill width or fill height by comparing the window's current aspect ratio to the image's original aspect ratio.</p>\n\n<pre><code>function resizeBackground( evt ) {\n\n// get window size and aspect ratio\nvar windowWidth = window.innerWidth,\n    windowHeight = window.innerHeight;\n    windowAspectRatio = windowHeight / windowWidth;\n\n//compare window ratio to image ratio so you know which way the image should fill\nif ( windowAspectRatio &lt; imgAspectRatio ) {\n    // we are fill width\n    img.style.width = windowWidth + \"px\";\n    // and applying the correct aspect to the height now\n    img.style.height = (windowWidth * imgAspectRatio) + \"px\";\n    // this can be margin if your element is not positioned relatively, absolutely or fixed\n    // make sure image is always centered\n    img.style.left = \"0px\";\n    img.style.top = (windowHeight - (windowWidth * imgAspectRatio)) / 2 + \"px\";\n} else { // same thing as above but filling height instead\n    img.style.height = windowHeight + \"px\";\n    img.style.width = (windowHeight / imgAspectRatio) + \"px\";\n    img.style.left = (windowWidth - (windowHeight / imgAspectRatio)) / 2 + \"px\";\n    img.style.top = \"0px\";\n}\n</code></pre>\n\n<p>}</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Using background cover is fine for images, and so is width 100%. These are not optimal for <code>&lt;video&gt;</code>, and these answers are overly complicated. You do not need jQuery or javascript to accomplish a full width video background.</p>\n\n<p>Keep in mind that my code will not cover a background completely with a video like cover will, but instead it will make the video as big as it needs to be to maintain aspect ratio and still cover the whole background. Any excess video will bleed off the page edge, which sides depend on where you anchor the video.         </p>\n\n<p>The answer is quite simple.</p>\n\n<p>Just use this html5 video code, or something along these lines:</p>\n\n<pre><code>&lt;video id=\"video-background\" preload autoplay muted&gt;\n  &lt;source src=\"movie.mp4\" type=\"video/mp4\"&gt;\n  &lt;source src=\"movie.ogg\" type=\"video/ogg\"&gt;\n  Your browser does not support the video tag.\n&lt;/video&gt;\n</code></pre>\n\n<p>Then apply this css:</p>\n\n<pre><code>#video-background { \n  position: absolute;\n  bottom: 50%; \n  right: 50%;\n  transform: translateX(-50%) translateY(-50%)\n  min-width: 100%; \n  min-height: 100%; \n  width: auto; \n  height: auto;\n  z-index: -1000; \n  overflow: hidden\n}\n</code></pre>\n\n<p>The min-height and min-width will allow the video to maintain the aspect ratio of the video, which is usually the aspect ratio of any normal browser at a normal resolution. Any excess video bleeds off the side of the page.</p>\n\n<p>Read more from my website: <a href=\"http://kesilconsulting.com/web-designer-magazine/html-video-background-tutorial/#ixzz2O3BPNZE6\">HTML Video Background Tutorial - HTML5 and CSS only</a>!  </p>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>This approach just uses css and html. You can actually stack a divs below the video easily. It is cover but not centered while you resize.</p>\n\n<p><strong>HTML:</strong>  </p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"&gt; \n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id = \"contain\"&gt;\n&lt;div id=\"vid\"&gt;\n    &lt;video autoplay&gt;\n        &lt;source src=\"http://www.quirksmode.org/html5/videos/big_buck_bunny.mp4\" type=\"video/mp4\" /&gt;\n    &lt;/video&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>CCS:</strong></p>\n\n<pre><code>/*\nfilename:style.css\n*/\nbody {\n    margin:0;\n}\n\n#vid video{\nposition: absolute; \nright: 0; \ntop: 0;\nmin-width: 100%; \nmin-height: 100%;\nwidth: auto; \nheight: auto; \n}\n\n#contain {\nwidth:100%;\nheight:100%;\nzoom:1%;/*Without this the video will be stretched and skewed*/ \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For some browsers you can use</p>\n\n<pre><code>object-fit: cover;\n</code></pre>\n\n<p><a href=\"http://caniuse.com/object-fit\">http://caniuse.com/object-fit</a></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>CSS and little js can make the video cover the background and horizontally centered.</p>\n\n<p>CSS:</p>\n\n<pre><code>video#bgvid {\n    position: absolute;\n    bottom: 0px; \n    left: 50%; \n    min-width: 100%; \n    min-height: 100%; \n    width: auto; \n    height: auto; \n    z-index: -1; \n    overflow: hidden;\n}\n</code></pre>\n\n<p>JS: (bind this with window resize and call once seperately)</p>\n\n<pre><code>$('#bgvid').css({\n    marginLeft : '-' + ($('#bgvid').width()/2) + 'px'\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To answer the comment from <a href=\"http://stackoverflow.com/users/59160/weotch\">weotch</a> that <a href=\"http://stackoverflow.com/users/2189256/timothy-ryan-carpenter\">Timothy Ryan Carpenter</a>'s answer doesn't account for <code>cover</code>'s centering of the background, I offer this quick CSS fix:</p>\n\n<p>CSS:</p>\n\n<pre><code>margin-left: 50%;\ntransform: translateX(-50%);\n</code></pre>\n\n<p>Adding these two lines will center any element. Even better, all browsers that can handle HTML5 video also support CSS3 transformations, so this will always work.</p>\n\n<p>The complete CSS looks like this.</p>\n\n<pre><code>#video-background { \n  position: absolute;\n  bottom: 0px; \n  right: 0px; \n  min-width: 100%; \n  min-height: 100%; \n  width: auto; \n  height: auto; \n  z-index: -1000; \n  overflow: hidden;\n  margin-left: 50%;\n  transform: translateX(-50%);\n</code></pre>\n\n<p>}</p>\n\n<p>I'd have commented directly on Timothy's answer, but I don't have enough reputation to do so.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The other answers were good but they involve javascript or they doesn't center the video horizontally AND vertically.</p>\n\n<p>You can use this full CSS solution to have a video that simulate the background-size: cover property:</p>\n\n<pre><code>  video {\n    position: fixed;           // Make it full screen (fixed)\n    right: 0;\n    bottom: 0;\n    z-index: -1;               // Put on background\n\n    min-width: 100%;           // Expand video\n    min-height: 100%;\n    width: auto;               // Keep aspect ratio\n    height: auto;\n\n    top: 50%;                  // Vertical center offset\n    left: 50%;                 // Horizontal center offset\n\n    -webkit-transform: translate(-50%,-50%);\n    -moz-transform: translate(-50%,-50%);\n    -ms-transform: translate(-50%,-50%);\n    transform: translate(-50%,-50%);         // Cover effect: compensate the offset\n\n    background: url(bkg.jpg) no-repeat;      // Background placeholder, not always needed\n    background-size: cover;\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>For video, this plugin will do it. Also has parallax features: <a href=\"https://github.com/linnett/backgroundVideo\" rel=\"nofollow\">https://github.com/linnett/backgroundVideo</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I simulate the functionality of background-size:cover on an html element like <code>&lt;video&gt;</code> or <code>&lt;img&gt;</code>?</p>\n\n<p>I'd like it to work like\n<code>background-size: cover;\nbackground-position: center center;</code>.</p>\n",
            "last_activity_date": 1425405580,
            "question_id": 10797632,
            "score": 41,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "simulate background-size:cover on &lt;video&gt; or &lt;img&gt;"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I had the same problem and solved it changing the viewport.\nI also thought the problem was phonegap, but it really was that the devices used for testing had different dpi.</p>\n\n<p>My solution was to change the target-densitydpi on the viewport to:</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, target-densitydpi=medium-dpi, user-scalable=0\" /&gt;\n</code></pre>\n\n<p>Hope it helps</p>\n",
                    "is_accepted": true,
                    "score": 105
                },
                {
                    "body": "<p>target-densitydpi=medium-dpi Worked for us.</p>\n\n<p>Scenario\nFaced this issue when ee upgraded from PhoneGap 2.2 to 3.3. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I had a similar problem and did some research I thought is worth sharing:</p>\n\n<ul>\n<li><p>Set the viewport's <code>target-densitydpi</code> to <code>medium-dpi</code> (=160dpi), as already suggested. This virtualizes the <code>px</code> unit, e.g. <code>1px</code> in html/css then corresponds to 2 physical pixels on a 320dpi device. Note that images are scaled (and blurred) as well.</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=medium-dpi\" /&gt;\n</code></pre></li>\n<li><p>CSS: Use media queries to implement conditional styling. Adapting for different screen sizes dependent on width, height, aspect or orientation is straight-forward. Different pixel densities can be handled with <code>device-pixel-ratio</code> (thanks to Marc Edwards for providing an example: <a href=\"https://gist.github.com/marcedwards/3446599\" rel=\"nofollow\">https://gist.github.com/marcedwards/3446599</a>).</p>\n\n<pre><code>@media screen and (-webkit-min-device-pixel-ratio: 1.5),\n       screen and (-o-min-device-pixel-ratio: 15/10)\n{\n  body { background-image: ... } /* provide high-res image */\n}\n</code></pre>\n\n<p>The media feature <code>resolution</code> is cleaner than <code>device-pixel-ratio</code>, but it lacks mobile browser support.</p></li>\n<li><p>Javascript: Adapt button sizes, images etc. based on <code>window.devicePixelRatio</code> and <code>window.screen.width</code> and <code>window.screen.height</code>. Layouting per Javascript is considered as bad practice. Also flickering might result during loading as the execution starts after the <code>pageload</code> event.</p></li>\n<li><p><code>-webkit-image-set</code> and image <code>src-set</code> make it easy to provide high-res images for retina displays, see <a href=\"http://www.html5rocks.com/en/mobile/high-dpi/#toc-bff\" rel=\"nofollow\">http://www.html5rocks.com/en/mobile/high-dpi/#toc-bff</a>. Browser support is limited.</p>\n\n<pre><code> background-image: -webkit-image-set(\n   url(icon1x.jpg) 1x,\n   url(icon2x.jpg) 2x\n );\n</code></pre></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Adding this solution here</p>\n\n<p>For me, some text were rendering really big, others were the correct size.\nThe problem was with the use of rem values for font-size in the css. For some reason, elements where the font-size was the base value (defined in the body) were rendered way bigger than they should.</p>\n\n<p>The fix was to reassign a global value for the rem font-size in a wrapper element for the entire site.</p>\n\n<p>(my .font-size(1.4) is only a mixin rendering: font-size: 1.4rem; )</p>\n\n<p>So this </p>\n\n<pre><code>html {\n  font-size: 62.5%;\n}\n\nbody {\n  .font-size(1.4);\n}\n\nh1 {\n  .font-size(2.6);\n}\n</code></pre>\n\n<p>Can be fixed with this</p>\n\n<pre><code>html {\n  font-size: 62.5%;\n}\n\nbody {\n  .font-size(1.4);\n}\n\n.wrapper {\n  .font-size(1.4);\n}\n\nh1 {\n  .font-size(2.6);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>It appears that removing the <code>target-densitydpi</code> altogether brings the best results. </p>\n\n<p><code>&lt;meta name=\"viewport\" content=\"user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height\" /&gt;</code></p>\n\n<p>This should be more than enough to control your app's appearance in most cases.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I recently build an android app using html, css, javascript and running them through phonegap to create the actual app. One of the problems I encountered in one phone is that the text looks too small. Also some images are a little small as well. I added a viewport meta tag but it doesnt seem to work either. Here are the meta tags:</p>\n\n<pre><code>    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /&gt;\n    &lt;meta name=\"format-detection\" content=\"telephone=no\" /&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, user-scalable=no, target-densitydpi=device-dpi\" /&gt;`\n</code></pre>\n\n<p>This is how it looks<br>\n<img src=\"http://i.stack.imgur.com/QeacM.jpg\" alt=\"This happens in a particular phone(Samsung Galaxy)\"><br></p>\n\n<p>This is how its supposed to look:<br>\n<img src=\"http://i.stack.imgur.com/LRJ9H.jpg\" alt=\"This is how it looks in htc wildfire s\"></p>\n",
            "last_activity_date": 1414663826,
            "question_id": 15194940,
            "score": 39,
            "tags": [
                "javascript",
                "html",
                "css",
                "jquery-mobile",
                "cordova"
            ],
            "title": "Phonegap Application text and layout too small"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>(shameless but relevant plug below)</p>\n\n<p><a href=\"http://code.google.com/p/google-caja/\" rel=\"nofollow\">Caja</a> is reworking its ES5 support via <a href=\"http://code.google.com/p/google-caja/wiki/DifferencesBetweenES5Over3AndES5\" rel=\"nofollow\">ES5/3</a> and will do the same for ES harmony.  So our structure would be implemented as a Harmony to ES3 layer which can be skipped for real harmony implementations, and then a separable loader that preserves the security properties that concern caja.</p>\n\n<p>Like Traceur, members of the Caja team are part of TC39 (the committee defining ES Harmony).</p>\n\n<p>I don't know about Coffeescript's plans, but it was mentioned during discussions of Harmony modules.  <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony%3amodule_loaders\" rel=\"nofollow\">Module loaders</a> will likely have the ability to intercept loaded source code (via <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony%3amodule_loaders#evaluation_semantics\" rel=\"nofollow\">eval hooks</a>) and rewrite it before module initialization, so if a module is written in CoffeeScript, a runtime CoffeeScript rewriter could be invoked at initialization time.  This would allow apps to be composed of modules written in multiple languages that compile down to Harmony at load time.</p>\n\n<p>One thing to note is that not everything in Harmony can be implemented easily via translation.  For example, implementing <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony%3aweak_maps\" rel=\"nofollow\">weak maps</a> correctly would require implementing your own garbage collector in JavaScript and even if you did that you would probably just reintroduce the host object/native object cycle problem.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p><a href=\"http://www.mascaraengine.com/\" rel=\"nofollow\">Mascara</a> is probably what you're looking for.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Check out <a href=\"http://www.typescriptlang.org\">TypeScript</a>, Microsoft's new language based on ES6.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p><a href=\"http://benvie.github.com/continuum/\">Continuum</a> has implemented most of the relevant features and should run in es3 browsers (like older IEs).</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>There's also <a href=\"https://github.com/matthewrobb/six\" rel=\"nofollow\">https://github.com/matthewrobb/six</a></p>\n\n<blockquote>\n  <p>Six is a language super-set of JavaScript that enables new syntactic features from the 6th edition of ECMAScript to be used, through a transpiler, in your scripts today.</p>\n  \n  <p><strong>WARNING</strong>: Still in a very early state, proceed with caution.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm not sure in what instance compilation back to ES3 would valuable as opposed to ES5, seeing that implementation changes are limited to array and object helper functions, and <a href=\"http://kangax.github.io/compat-table/es5/\" rel=\"nofollow\">ES5 support is so prevalent</a>.</p>\n\n<p>So for completeness, another ES6 to ES5 compiler is the esnext project by Square. It is a collection of a number of modules designed to polyfill various ES6 features provided in one package. Here is the list modules included: <a href=\"https://github.com/square/esnext#available\" rel=\"nofollow\">https://github.com/square/esnext#available</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"https://developers.google.com/closure/compiler/\" rel=\"nofollow\">Google Closure Compiler</a> (<a href=\"https://github.com/google/closure-compiler\" rel=\"nofollow\">Github</a>) is a great tool for ES6 compilation. It's a simple Java jar that is used from the command line. There are other options such as API services and GUIs, but I find that it was best to set up an automatic build system hooking into the Java JAR. It can transpile your ES6 code into ES5 compatible code. I started using it for compressing and obfuscating code, but it can also do error checking and the ES6 transpilation as I mentioned.</p>\n\n<p>Note that the ES6 features are marked as experimental. But I'm planning on using them in production soon, since my tests were rock solid.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>After reading <a href=\"http://peter.michaux.ca/articles/javascript-is-dead-long-live-javascript\">Peter's article on JavaScript</a> I noticed</p>\n\n<blockquote>\n  <p>Brendan Eich stated that one the goals for Harmony is to be a better target for to-JavaScript compilers.</p>\n</blockquote>\n\n<p>There are currently two popular compilers with some vague <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony%3aproposals\">ES:Harmony</a> compliance:</p>\n\n<ul>\n<li><a href=\"https://github.com/google/traceur-compiler\">Traceur</a></li>\n<li><a href=\"http://jashkenas.github.com/coffee-script/\">CoffeeScript</a></li>\n</ul>\n\n<p>Although CoffeeScript has some compliance it's not designed to be an ES:Harmony compiler so it's not useful to this end.</p>\n\n<p>Tracuer seems to be sticking more rigorously to the ES:Harmony specification but I don't know whether it intends to become a full ES:Harmony compiler.</p>\n\n<p>Since the aim is to to compile ES6 down to ES3 it would also need to support ES5 features (and probably a switch whether to compile ES5 to ES3 or ES6 to ES3). </p>\n\n<ol>\n<li>Are there currently any other projects aiming to create a full ES:Harmony to ES3 compiler? </li>\n<li>Is it wise to start writing such a compiler knowing that the standard is young / unstable / in flux.</li>\n<li>Are there currently any ES5 -> ES3 compilers?</li>\n</ol>\n\n<p>I've left a question on the <a href=\"http://groups.google.com/group/traceur-compiler-discuss/browse_thread/thread/2974b8ed9705110c\">Traceur mailing list</a>.</p>\n\n<p>The aim of such a compiler would be backwards compatibility with ES3. Not full emulation of ES5 and ES6 in ES3. </p>\n",
            "last_activity_date": 1415831190,
            "question_id": 6506519,
            "score": 37,
            "tags": [
                "javascript",
                "compiler-construction",
                "ecmascript-harmony"
            ],
            "title": "ECMAScript:Harmony / ES6 to JavaScript compiler"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Every time a function() {} is evaluated, it creates a new function object.  Therefore, in #1 all of the User objects are sharing the same getName and getAge functions, but in #2 and #3, each object has its own copy of getName and getAge.  All of the different getName functions all behave exactly the same, so you can't see any difference in the output.</p>\n\n<p>The {...} shorthand <em>is</em> a constructor.  When evaluated, it constructs a new \"Object\" with the given properties.  When you run \"new User(...)\", it constructs a new \"User\".  You happen to have created an Object with the same behavior as a User, but they are of different types.</p>\n\n<p>Response to comment:</p>\n\n<p>You can't, directly.  You could make a function that creates a new object as per #3.  For example:</p>\n\n<pre><code>function make_user(name, age) {\n    return {\n        name: name,\n        age: age,\n        getName: function() { return name; },\n        getAge: function() { return age; },\n    };\n}\n\nvar user = make_user(\"Joe\", \"18\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<h1>2:</h1>\n\n<p>You can access name and age, without using such functions. In javascript you have to use different hacks to keep something private or protected.</p>\n\n<p>This</p>\n\n<pre><code>User.name = \"BoB\";\nUser.age = 44;\n</code></pre>\n\n<p>will produce same output as your example.</p>\n\n<p>There are no constructors as they appear in other languages. Easiest way would be to just define init() function and call it right after you instance the object.</p>\n\n<p>But my biggest tip for you is to look into <a href=\"http://www.prototypejs.org/\">http://www.prototypejs.org/</a>. It's a javascript library with a lot of cool features which tries to make javascript \"more OO*\".</p>\n\n<p>Using prototype library you can make classes to behave more like real OOP classes. It also features constructors.</p>\n\n<p>Edit:\nAs for what you asked in your comment:</p>\n\n<pre><code>person = new User();\nperson.name = \"Bob\";\nperson.age = 44;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><strong>Question #1</strong></p>\n\n<p><code>prototype</code> has the benefit of <a href=\"http://en.wikipedia.org/wiki/Monkey_patch\" rel=\"nofollow\">monkey patching</a>. As the first example shows, the function are added after-the-fact. You can continue this to add or replace any methods you need (though, with fair warning).</p>\n\n<p>Defining objects like #2 is more along the lines of classic OOP. But, then again, monkey patching isn't allowed in all OOP languages.</p>\n\n<p><strong>Question #2</strong></p>\n\n<p>In your 3rd function, you don't even need the <code>get</code> and <code>set</code> functions -- <code>name</code> and <code>age</code> are public properties (the potential downside to <code>{}</code>).</p>\n\n<pre><code>var User = {\n  name: \"\",\n  age: 0\n};\n\nUser.name = 'Bob';\nUser.age = 44;\n\nconsole.log(\"User: \" + User.name + \", Age: \" + User.age);\n</code></pre>\n\n<p>When you create an object using <code>{}</code> (an object literal), <code>{}</code> is the constructor (varying on browser). But, essentially, no you can't use a constructor in this format.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Your example #1 shows the usage of the prototype property. This property is available to all javascript objects you create and allows you to add properties or functions to the object declaration, so you had a object with 2 properties and later on you added 4 functions (getters and setters).</p>\n\n<p>You should see the prototype property as the way to modify your object specification at runtime, say you have an object called name:</p>\n\n<pre><code>var Name = {\n  First: \"\",\n  Last: \"\"\n};\n</code></pre>\n\n<p>You can use the prototype to add a function getFullName() later on by simply:</p>\n\n<pre><code>Name.prototype.getFullName = function() { return this.First + \" \" + this.Last; }\n</code></pre>\n\n<p>In the example 2 you inline the declaration of these getters and setters in the object declaration so in the end they are the same. Finally on the 3rd example you use the JavaScript object notation you should see <a href=\"http://www.json.org/\" rel=\"nofollow\">JSON</a>.</p>\n\n<p>About your question 2 you can just declare your object as:</p>\n\n<pre><code>var User = {\n  name: \"\",\n  age: 0\n};\n</code></pre>\n\n<p>this will give you the same object without getters and setters.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you want to do OOP in JavaScript I'd highly suggest looking up closures.  I began my learning on the subject with these three web pages:</p>\n\n<p><a href=\"http://www.dustindiaz.com/javascript-private-public-privileged/\">http://www.dustindiaz.com/javascript-private-public-privileged/</a></p>\n\n<p><a href=\"http://www.dustindiaz.com/namespace-your-javascript/\">http://www.dustindiaz.com/namespace-your-javascript/</a></p>\n\n<p><a href=\"http://blog.morrisjohns.com/javascript_closures_for_dummies\">http://blog.morrisjohns.com/javascript_closures_for_dummies</a></p>\n\n<p>The differences between 1, 2, and 3 are as follows:\n1) Is an example of adding new methods to an existing object.\n2) Is the same as #1 except some methods are included in the object in the User function.\n3) Is an example of defining an object using <a href=\"http://en.wikipedia.org/wiki/JSON\">JSON</a>.  The shortcoming is that you cannot use new (at least not with that example) to define new instances of that object.  However you do get the benefit of the convenient JSON coding style.</p>\n\n<p>You should definitely read up on JSON if you don't know it yet.  JavaScript will make a lot more sense when you understand JSON.</p>\n\n<p><em>edit</em>\nIf you want to use new in function #3 you can write it as</p>\n\n<pre><code>function User() {\n  return {\n    name: \"\",\n    age: 0,\n    setName: function(name) {\n      this.name = name;\n    },\n    setAge: function(age) {\n      this.age = age;\n    },\n    getName: function() {\n      return this.name;\n    },\n    getAge: function() {\n      return this.age;\n    }\n  };\n}\n</code></pre>\n\n<p>Of course all of those functions and properties would then be public.  To make them private you need to use closures.  For example you could make age and name private with this syntax.</p>\n\n<pre><code>function User() {\n  var age=0;\n  var name=\"\";\n  return {\n    setName: function(name_) {\n      name = name_;\n    },\n    setAge: function(age_) {\n      age = age_;\n    },\n    getName: function() {\n      return name;\n    },\n    getAge: function() {\n      return age;\n    }\n  };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>You seem to have some good answers here but you might like to look at this question: <a href=\"http://stackoverflow.com/questions/436234/best-approach-to-member-variables-in-object-oriented-javascript#43648\">best-approach-to-member-variables-in-object-oriented-javascript</a>. This was <a href=\"http://stackoverflow.com/questions/436234/best-approach-to-member-variables-in-object-oriented-javascript#43648\">my answer</a> which describes the differences and similaries. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you interested on JSON style JavaScript class declaration talks... </p>\n\n<p><a href=\"http://mahtonu.wordpress.com/2010/04/13/json-style-javascript-object-declaration/\" rel=\"nofollow\">http://mahtonu.wordpress.com/2010/04/13/json-style-javascript-object-declaration/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been using javascript for a while, but have never learned the language past the basics.  I am reading John Resig's \"Pro Javascript Techniques\" - I'm coming up with some questions, but I'm not finding the answers to them in the book or on google, etc.</p>\n\n<p>John gives this example in his book:<br />\n<strong>Function #1</strong></p>\n\n<pre><code>function User( name, age ){\n  this.name = name;\n  this.age = age;\n}\n// Add a new function to the object prototype\nUser.prototype.getName = function(){\n  return this.name;\n};\nUser.prototype.getAge = function(){\n  return this.age;\n};\nvar user = new User( \"Bob\", 44 );\nconsole.log(\"User: \" + user.getName() + \", Age: \" + user.getAge());\n</code></pre>\n\n<p>I'm still learning about the <em>prototype</em> property, so I tried writing something similar:<br />\n<strong>Function #2</strong></p>\n\n<pre><code>function User (name, age ) {\n  this.name = name;\n  this.age = age;\n  this.getName = function() {\n    return this.name;\n  };\n  this.getAge = function() {\n    return this.age;\n  };\n}\nvar user = new User( \"Bob\", 44 );\nconsole.log(\"User: \" + user.getName() + \", Age: \" + user.getAge());\n</code></pre>\n\n<p>It doesn't use the <em>prototype</em> property to create the getName and getAge functions, but the output is the same as John's example.</p>\n\n<p>I took it one step further, and created this:<br />\n<strong>Function #3</strong></p>\n\n<pre><code>var User = {\n  name: \"\",\n  age: 0,\n  setName: function(name) {\n    this.name = name;\n  },\n  setAge: function(age) {\n    this.age = age;\n  },\n  getName: function() {\n    return this.name;\n  },\n  getAge: function() {\n    return this.age;\n  }\n};\nUser.setName(\"Bob\");\nUser.setAge(44);\nconsole.log(\"User: \" + User.getName() + \", Age: \" + User.getAge());\n</code></pre>\n\n<p>Again - it looks different than John's example (and I had to add setter methods), but the output is the same.</p>\n\n<p><strong>Question #1</strong> - what is the difference between the 3 functions?  What is the advantage of the prototype property, and is Function #2 doing anything incorrectly, because it seems more straight forward to code #2 instead of #1 (although I'm sure #1 is doing it better seeing as John created it).</p>\n\n<p><strong>Question #2</strong> - How could I modify function #3 to not use the setName and setAge methods, but still keep the {...} shorthand?  Can the {...} shorthand have constructors?</p>\n\n<p>Thanks in advance for helping me learn!</p>\n\n<p><strong>EDIT</strong>\nI think my 2nd question was a little confusing. I meant how could I use the {...} shorthand to create a User object, but then after I create the object, say something like:</p>\n\n<pre><code>var user = new User(\"Bob\", 44);\n</code></pre>\n\n<p>Just like in Function #1 - or is that not possible?</p>\n\n<p><strong>EDIT #2</strong>\nWow!  Thanks everyone for the awesome answers.  That really makes it a lot more clear to me.  So if I understand correctly, the difference between #1 and #2 aren't too much.  If I only ever create one \"User\" object - they probably aren't different at all.  But if my program creates many User objects, #1 would most likely be more efficient and use less memory since all objects will share the same functions.</p>\n\n<p>I really appreciate all of the great answers - Thanks!</p>\n",
            "last_activity_date": 1274695757,
            "question_id": 444170,
            "score": 36,
            "tags": [
                "javascript",
                "oop"
            ],
            "title": "Object Oriented questions in Javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>var getKeyByDinner = function(obj, dinner) {\n    var returnKey = -1;\n\n    $.each(obj, function(key, info) {\n        if (info.dinner == dinner) {\n           returnKey = key;\n           return false; \n        };   \n    });\n\n    return returnKey;       \n\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/alexdickson/9haHx/\">jsFiddle</a>.</p>\n\n<p>So long as <code>-1</code> isn't ever a valid key.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you have an object like this</p>\n\n<pre><code>var peoples = [\n  { \"name\": \"bob\", \"dinner\": \"pizza\" },\n  { \"name\": \"john\", \"dinner\": \"sushi\" },\n  { \"name\": \"larry\", \"dinner\": \"hummus\" }\n];\n</code></pre>\n\n<p>Ignore what's below. Use the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/filter\"><code>filter</code></a> method!</p>\n\n<pre><code>peoples.filter(function (person) { return person.dinner == \"sushi\" });\n  // =&gt; [{ \"name\": \"john\", \"dinner\": \"sushi\" }]\n</code></pre>\n\n<hr>\n\n<p>You can search for people who have <code>\"dinner\": \"sushi\"</code> using a <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/map\"><code>map</code></a></p>\n\n<pre><code>peoples.map(function (person) {\n  if (person.dinner == \"sushi\") {\n    return person\n  } else {\n    return null\n  }\n}); // =&gt; [null, { \"name\": \"john\", \"dinner\": \"sushi\" }, null]\n</code></pre>\n\n<p>or a <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/reduce\"><code>reduce</code></a></p>\n\n<pre><code>peoples.reduce(function (sushiPeople, person) {\n  if (person.dinner == \"sushi\") {\n    return sushiPeople.concat(person);\n  } else {\n    return sushiPeople\n  }\n}, []); // =&gt; [{ \"name\": \"john\", \"dinner\": \"sushi\" }]\n</code></pre>\n\n<p>I'm sure you are able to generalize this to arbitrary keys and values!</p>\n",
                    "is_accepted": true,
                    "score": 80
                },
                {
                    "body": "<p>If you're going to be doing this search frequently, consider changing the format of your object so dinner actually is a key.  This is kind of like assigning a primary clustered key in a database table.  So, for example:  </p>\n\n<pre><code>Obj = { 'pizza' : { 'name' : 'bob' }, 'sushi' : { 'name' : 'john' } }\n</code></pre>\n\n<p>You can now easily access it like this: <code>Object['sushi']['name']</code></p>\n\n<p>Or if the object really is this simple (just 'name' in the object), you could just change it to:</p>\n\n<pre><code>Obj = { 'pizza' : 'bob', 'sushi' : 'john' }\n</code></pre>\n\n<p>And then access it like: <code>Object['sushi']</code>.</p>\n\n<p>It's obviously not always possible or to your advantage to restructure your data object like this, but the point is, sometimes the best answer is to consider whether your data object is structured the best way.  Creating a key like this can be faster and create cleaner code.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>jQuery has a built-in method <a href=\"http://api.jquery.com/jQuery.grep/\"><code>jQuery.grep</code></a> that works similarly to the ES5 <code>filter</code> function from <a href=\"http://stackoverflow.com/a/5181740/363701\">@adamse's Answer</a> and should work fine on older browsers.</p>\n\n<p>Using adamse's example:</p>\n\n<pre><code>var peoples = [\n  { \"name\": \"bob\", \"dinner\": \"pizza\" },\n  { \"name\": \"john\", \"dinner\": \"sushi\" },\n  { \"name\": \"larry\", \"dinner\": \"hummus\" }\n];\n</code></pre>\n\n<p>you can do the following</p>\n\n<pre><code>jQuery.grep(peoples, function (person) { return person.dinner == \"sushi\" });\n  // =&gt; [{ \"name\": \"john\", \"dinner\": \"sushi\" }]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>You can find the object in array with <a href=\"http://github.com/agershun/alasql\" rel=\"nofollow\">Alasql</a> library:</p>\n\n<pre><code>var data = [ { name : \"bob\" , dinner : \"pizza\" }, { name : \"john\" , dinner : \"sushi\" },\n     { name : \"larry\", dinner : \"hummus\" } ];\n\nvar res = alasql('SELECT * FROM ? WHERE dinner=\"sushi\"',[data]);\n</code></pre>\n\n<p>Try this example <a href=\"http://jsfiddle.net/agershun/wzbcbdtx/1/\" rel=\"nofollow\">in jsFiddle</a>.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I have a multidimensional object (it's basically an array):</p>\n\n<pre><code>Object = { 1 : { name : bob , dinner : pizza }, 2 : { name : john , dinner : sushi }, 3 : { name : larry, dinner : hummus } }\n</code></pre>\n\n<p>I want to be able to search the object/array for where the key is \"dinner\", and see if it matches \"sushi\".</p>\n\n<p>I know jQuery has $.inArray, but it doesn't seem to work on multidimensional arrays. Or maybe I'm wrong. indexOf also seems to only work on one array level.</p>\n\n<p>Is there no function or existing code for this?</p>\n",
            "last_activity_date": 1419194937,
            "question_id": 5181493,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "arrays",
                "search"
            ],
            "title": "How to find a value in a multidimensional object/array in Javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Personally I always put javascript in separate files. Global variables which depend on routing or some server side information inside the view. Exactly as you do. As an alternative to storing global variables you could use anchor or form elements which already contain the url and then ajaxify them. As far as model values are concerned they could be stored also in DOM elements such as hidden fields, CSS classes, HTML5 data-* attributes, ... but this might not be applicable to all situations.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I create separate javascripts for calculations / logic, but call them from my view. In this way I do not have to create global variables and its easier to re-use the javascripts.</p>\n\n<p>example javascript:</p>\n\n<pre><code>function doSomeCoolProcessing(modelId, fetchAction)\n{\n    //some stuff\n}\n</code></pre>\n\n<p>and in the view</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $('document').ready(function() {\n        doSomeCoolProcessing('&lt;%=Model.id%&gt;', '&lt;%=Url.Action(\"Fetch\", \"PriceList\")%&gt;');\n    )};\n&lt;/script&gt;\n</code></pre>\n\n<p>It also makes it a lot clearer what's happening (and debugging when you return to your project after six months), since nothing happens unless you explicitly tell it to do so.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>vandalo,</p>\n\n<p>I've borrowed a situation whereby the javascript is all in seperate file. however, using a custom action result on the controller, the js is invoked as an htmlhelper function and has a context with the page. the htmlhelper actually serves the code as a file and it's therefore cached, thus speeding up excecution/delivery.</p>\n\n<p>I know you'll be curious to see how this works, so will update the answer to show the mechanics of this a little later.</p>\n\n<p>til then... (here's a link to where i got my inspiration. i then tweaked this to my own needs)</p>\n\n<p><a href=\"http://stackoverflow.com/questions/2957517/asp-net-mvc-routing-and-paths-is-js-files\">ASP.NET MVC routing and paths is js files</a></p>\n\n<p>ok, here's my worked example (a simple mvc 2 project that contains required helpers and classes) - enjoy:</p>\n\n<p><a href=\"http://www.gatehousemusic.com/downloads/ServeJsExample.zip\" rel=\"nofollow\">http://www.gatehousemusic.com/downloads/ServeJsExample.zip</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A separate file for tidiness at the least. The less languages you put into each file, the easier it will be to read what it does at a glance. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I follow a handful of rules:</p>\n\n<ol>\n<li>Don't attach a variable directly to the DOM unless absolutely necessary.</li>\n<li>Place as much information in js files as possible. The fewer js files, the better.</li>\n<li>Version your js files. When publishing, minify and mash via Chirpy or SquishIt</li>\n<li>In js, minimize your dependency on dynamic server-side values (generated ids, etc.) when you can.</li>\n</ol>\n\n<p>So, here's an example:</p>\n\n<p>I'll add jQuery and jQuery metadata to my project:\n<a href=\"http://plugins.jquery.com/project/metadata\">http://plugins.jquery.com/project/metadata</a></p>\n\n<p>Then, in my master js file, I'll extend jQuery with my own namespace:</p>\n\n<pre><code>$.extend({\n   fatDish : {\n     url : {},\n     urls : function(a) {\n        $.extend($.fatDish.url, a);\n     }\n   }\n});\n</code></pre>\n\n<p>Almost all of my customized js logic will live in the <strong>$.fatDish</strong> namespace.</p>\n\n<p>Now, let's say I want to pass a <strong>MVC route</strong> to <strong>$.fatDish</strong>. In my aspx page, I'd write the following:</p>\n\n<pre><code>&lt;script src=\"@Url.Content(\"~/path/master.js\")\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n   $.fatDish.urls({\n      path1 : '@Url.Action(\"Index\", \"Home\")'\n   });\n&lt;/script&gt;\n</code></pre>\n\n<p>In a js file, I can now write:</p>\n\n<pre><code>window.location = $.fatDish.url.path1;\n</code></pre>\n\n<p>A second approach is to use jQuery metadata (which I mentioned above). On your aspx page, you could write something like:</p>\n\n<pre><code>&lt;div class=\"faux-link {act:'@Url.Action(\"Index\", \"Home\")'}\"&gt;Go Somewhere&lt;/div&gt;\n</code></pre>\n\n<p>Then, in your js file, you can grab the route value like so:</p>\n\n<pre><code>$('.faux-link').click(function() {\n   var $this = $(this);\n   var href = $this.metadata().act;\n   window.location = href;\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>Here's my methods on ASP.NET MVC3 to complete the @weirdlover answer, one thing he's missing is the JSON encoding which is quite important when you want to safely inject data in js.</p>\n\n<p>If the data is not too big and can be logically attached to a DOM element, I use one (or several) data-attribute (don't require a jQuery plugin and leave the css class pretty) and a css class to find the elements from jQuery.</p>\n\n<p>Stupid example:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"text-widget\" \n     data-options=\"@Json.Encode(new { url = Url.Action(\"Update\", \"Text\", new { id = 3 }), uselessParam = true })\"&gt;\n  &lt;input type=\"text\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>COFFEESCRIPT:</p>\n\n<pre><code>class TextWidget\n  constructor: (@element) -&gt;\n    @el = $ @element\n    @options = @el.data 'options'\n    @input = @el.find 'input'\n    @input.change @update\n\n  update: =&gt;\n     value = @input.val()\n     $.post @options.url, \n       value: value\n       , -&gt; alert 'text saved'\n\n$ -&gt;\n  new TextWidget element for element in $('.text-widget').get()\n</code></pre>\n\n<p>A little gotcha with Json.Encode and jQuery.data: \nif you use it on a simple string, you will get a quoted string in javascript: $().data('strattribute') == ' \"hello\" '. Just use Html.Encode in that case. </p>\n\n<p>Anyway I prefer to use a single attibute with an anonymous object I build in the controller, it's easier to maintain: <code>data-options=\"@Json.Encode(Model.Options)\"</code>.</p>\n\n<p>If there is a lot of data, like a list of objects I will turn to ViewModels for knockoutjs, I use a <code>&lt;script&gt;</code> and <code>var data = @(Html.Raw(Json.Encode(Model.MyData)));</code>.</p>\n\n<p>I also use namespacing and closures to avoid poluting the global object.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Trying to improve my coding styles I've tried different solutions but I can't figure out what is the best.<br>\nI've started putting JavaScript inside my views but I don't particularly like this solution.<br>\nIt's hard to debug with Visual Studio, and it kinds of \"pollutes\" the page.<br>\nMy new \"trend\" is to put the scripts for the page in a separate file.<br>\nThe only problem I am facing is with the code.<br>\nTo solve the problem I've defined JavaScript variables like this:  </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var PriceListFetchAction = '&lt;%=Url.Action(\"Fetch\", \"PriceList\")%&gt;';\n    var UploaderAction = '&lt;%=Url.Action(\"UploadExcelPriceList\", \"PriceList\")%&gt;';\n    var ModelId = '&lt;%=Model.id%&gt;';\n    var ImportType = '&lt;%=Model.Type%&gt;';\n    var customerCodeFetchAction = '&lt;%=Url.Action(\"FetchByCustomerCode\", \"Customers\")%&gt;';\n    var customerNameFetchAction = '&lt;%=Url.Action(\"FetchByCustomerName\", \"Customers\")%&gt;';\n    var ImportErpAction = '&lt;%=Url.Action(\"ImportPriceListErp\", \"PriceList\")%&gt;';\n    var imageCalendar = '&lt;%=Url.Content(\"~/Content/Images/calendar.png\")%&gt;';\n&lt;/script&gt;  \n</code></pre>\n\n<p>and then I use the variables in my JavaScript file.\nWhat is the best in terms of performance, debugging, style for you?</p>\n",
            "last_activity_date": 1340749205,
            "question_id": 4624626,
            "score": 23,
            "tags": [
                "javascript",
                "asp.net-mvc"
            ],
            "title": "do you write your JavaScript in a ASP.NET MVC view ... or in a separate JavaScript file?"
        },
        {
            "answer_count": 19,
            "answers": [
                {
                    "body": "<p>Here are two good articles for getting started:</p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/magazine/dd453033.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/magazine/dd453033.aspx</a></p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/magazine/dd569752.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/magazine/dd569752.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One of the best places to start is the jQuery Tutorials:</p>\n\n<p><a href=\"http://docs.jquery.com/Tutorials\" rel=\"nofollow\">Tutorials - jQuery</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Read the documentation - jQuery has really good support as well as lots of examples on jquery.com itself.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think you would be better at learning <a href=\"http://www.w3schools.com/JS/default.asp\" rel=\"nofollow\">javascript</a> first and from there you can learn its libraries like jQuery. Book I would recommend would be <a href=\"http://www.scribd.com/doc/8635225/jQuery-in-Action\" rel=\"nofollow\">JQuery in Action</a>, its the best IMO and recently I found a link that makes the first chapter free online just to give you a little taste. Trust me worth the buy</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I think you'd be best off by learning JavaScript first. Learning a library without the background knowledge is going to leave you high and dry at the worst possible times.</p>\n\n<p>Besides, you'll appreciate jQuery <em>that much more</em> when you realize you can accomplish in 1 line what used to take 50. :)</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Hey!\nCheck out <a href=\"http://blog.themeforest.net/screencasts/jquery-for-absolute-beginners-video-series/\" rel=\"nofollow\">Jquery for absolute beginners video series</a> . I love the blogs at this page. Check em out, and you'll learn what you need for JQuery and some additional Javascript. I believe that link will show you the fundations you need to understand the JQuery functions you want too.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Yes, I agree Mark, first start with Javascript itself by <a href=\"http://www.w3schools.com\" rel=\"nofollow\">w3schools</a>. If you need to learn HTML and CSS <a href=\"http://www.w3schools.com\" rel=\"nofollow\">w3schools</a> is the best place to learn. then try to solve your problems with <a href=\"http://docs.jquery.com/Main%5FPage\" rel=\"nofollow\">JQuery</a>. It will be more effective I think.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I agree with Mark Hurd below.  Learn Javascript first.</p>\n\n<p>The first book that gave me \"aha- this is amazing\" is <a href=\"http://rads.stackoverflow.com/amzn/click/1590595335\" rel=\"nofollow\">DOM Scripting: Web Design with JavaScript and the Document Object Model</a></p>\n\n<p>Once you get the basics of that, what jQuery does will come more naturally to you and it will seem easy.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I started using jQuery in a project and was learning from jquery website and my colleagues. After reading jQuery in Action I've learned many things that I was missing. I really enjoyed reading this book. And still is a very good reference. Jquery in Action also introduces to some jquery's plugin.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://www.quirksmode.org/\" rel=\"nofollow\">http://www.quirksmode.org/</a></p>\n\n<p>and his book <a href=\"http://rads.stackoverflow.com/amzn/click/0321423305\" rel=\"nofollow\">ppk on JavaScript</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<ol>\n<li><p>Learn the language first: <a href=\"http://rads.stackoverflow.com/amzn/click/0596101996\" rel=\"nofollow\">Javascript The Definitive Guide, 5th Edition</a></p></li>\n<li><p>Learn jQuery: <a href=\"http://rads.stackoverflow.com/amzn/click/1933988355\" rel=\"nofollow\">jQuery in Action</a></p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>When this book comes out, you will learn <em>a lot</em> about how to write good javascript from the guy who wrote jQuery. Personally, I can't wait for it come out.</p>\n\n<p>Seriously... this one is worth getting when it comes out...</p>\n\n<p><a href=\"http://jsninja.com/\" rel=\"nofollow\">Secrets of the JavaScript Ninja</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"http://www.amazon.com/s?ie=UTF8&amp;search-type=ss&amp;index=books&amp;field-author=John%20Resig&amp;page=1\" rel=\"nofollow\">These books</a> are all (co) authored by John Resig who also wrote jQuery itself.</p>\n\n<p>For JS in general, I've also heard very good things about this:\n<a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\" rel=\"nofollow\">JavaScript: The Good Parts</a> by Douglas Crockford who works for Yahoo!.</p>\n\n<p>Crockford and Resig both have free and comprehensive videos at the <a href=\"http://developer.yahoo.com/yui/theater/\" rel=\"nofollow\">YUI theater</a>. These three are good for a broad overview of general JS:</p>\n\n<ul>\n<li>Douglas Crockford \u2014 The JavaScript Programming Language</li>\n<li>Douglas Crockford \u2014 Advanced JavaScript</li>\n<li>Douglas Crockford \u2014 An Inconvenient API: The Theory of the DOM</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A great start point is the its online documentation. </p>\n\n<p>JQuery gives you a great chance to \"Write Less, Do More\". But javascript is not quite comfortable to write and to debug. I do not think it makes much sense to dive into javascript. I suggest you as take a look at GWT. You can write code in java, which will be generated to valid javascript automatically.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Have a look at these video series they are awesome !! <a href=\"http://blog.themeforest.net/tutorials/jquery-for-absolute-beginners-video-series/\" rel=\"nofollow\">link</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This link has a massive collection of almost everything you want to know about JQuery</p>\n\n<p><a href=\"http://speckyboy.com/2008/04/02/65-excellent-jquery-resources-tutorialscheat-sheetsebooksdemosplugins/\" rel=\"nofollow\">JQuery cheat sheet</a></p>\n\n<p>There's a getting started tutorial here - <a href=\"http://www.dotnetcube.com/post/Getting-started-with-JQuery-in-ASPNET.aspx\" rel=\"nofollow\">Getting started with JQuery in ASP.NET</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another good book (along with \"jQuery in Action\") is \"<a href=\"http://www.packtpub.com/learning-jquery-1.3/book\" rel=\"nofollow\">Learning JQuery 1.3</a>\", the updated version of (I think) the very first jQuery book.</p>\n\n<p>From the Amazon product description: <em>\"Basic JavaScript programming knowledge is required. You will need to know the basics of HTML and CSS, and should be comfortable with the syntax of JavaScript\"</em>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I recommend the articles and videos (screencasts) available at:</p>\n\n<p><a href=\"http://www.jqueryfordesigners.com/\" rel=\"nofollow\">http://www.jqueryfordesigners.com/</a></p>\n\n<p>because the author, Remy Sharp, describes how and <em>why</em> he makes the choices he does and you can see the progress from start to finish.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://www.rebeccamurphey.com/\" rel=\"nofollow\">Rebecca Murphey</a> (of <a href=\"http://yayquery.com/\" rel=\"nofollow\">Yayquery Podcast</a> fame) has released a book of her jQuery training materials.  <a href=\"http://jqfundamentals.com/\" rel=\"nofollow\">It is available here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>over the last couple of years I've seen jquery grow leaps and bounds.  And every time I look at some jquery code I feel there is something I am missing which I need to learn.  I've given their documentation a try, and it seems to be ok for basic stuff.  </p>\n\n<p>Can you guys suggest a good jquery book that might help? I'm looking for something that doesnt go much in depth into the theory part of jquery but actually does and shows examples of how to do all the cool stuff.  </p>\n\n<p>Back in the days when I was in school, I never cared for JS, CSS, HTML ...but now that after 3 years after school I see myself doing a lot of server side web development. I want to learn these technologies. </p>\n",
            "last_activity_date": 1391102875,
            "question_id": 787271,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "Learning jQuery and Getting Better at Javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Take a look at: <a href=\"http://my.opera.com/GreyWyvern/blog/show.dml/1725165\" rel=\"nofollow\">link</a>. It's not about speed, but comfort. Besides as you can see you can only use <strong>slice(0)</strong> on <strong>primitive types</strong>.</p>\n\n<p>To make an independent copy of an array rather than a copy of the refence to it, you can use the array slice method.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <p>To make an independent copy of an array rather than a copy of the refence to it, you can use the array slice method.</p>\n\n<pre><code>var oldArray = [\"mip\", \"map\", \"mop\"];\nvar newArray = oldArray.slice();\n</code></pre>\n  \n  <p>To copy or clone an object :</p>\n\n<pre><code>function cloneObject(source) {\n    for (i in source) {\n        if (typeof source[i] == 'source') {\n            this[i] = new cloneObject(source[i]);\n        }\n        else{\n            this[i] = source[i];\n  }\n    }\n}\n\nvar obj1= {bla:'blabla',foo:'foofoo',etc:'etc'};\nvar obj2= new cloneObject(obj1);\n</code></pre>\n</blockquote>\n\n<p>Source: <a href=\"http://www.hardcode.nl/subcategory_1/article_414-copy-or-clone-javascript-array-object\" rel=\"nofollow\">link</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It depends on broswer, if you look at the link below there is a rough guide to performance of each: <a href=\"http://weblogs.asp.net/alexeigorkov/archive/2008/02/18/array-prototype-slice-vs-manual-array-creation.aspx\" rel=\"nofollow\">http://weblogs.asp.net/alexeigorkov/archive/2008/02/18/array-prototype-slice-vs-manual-array-creation.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I put together a quick demo. <a href=\"http://jsbin.com/agugo3/edit\">http://jsbin.com/agugo3/edit</a></p>\n\n<p>my results on IE8 are 156/782/750, which would indicate <code>slice</code> is much faster in this case.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>There are at least <strong>4</strong> (!) principal ways to clone an array:</p>\n\n<ul>\n<li>loop</li>\n<li>constructor</li>\n<li>slice / splice</li>\n<li>concat</li>\n</ul>\n\n<p>There are over 14 sub - ways. Browse the <a href=\"http://jsperf.com/new-array-vs-splice-vs-slice/31\">benchmark</a> thread for them. Many holywars were fought to choose the best one among them... Benchmark is the only judge:</p>\n\n<h2><strong><a href=\"http://jsperf.com/new-array-vs-splice-vs-slice/19\"> BENCHMARKS thread</a></strong></h2>\n\n<p>Strange to see that Firefox 25, Safari 6, Safari for iOS 7 and IE 11 are still in the stone age and using a <code>while</code> loop is the fastest way for them. I suppose cloning in a single step using native methods is preferable because they are written in C / Assembler and open for internal optimizations (they should use direct memory block copying). This is already implemented in V8 and I predict that it should be implemented by others in future.</p>\n\n<p>Quick answer is:</p>\n\n<pre><code> var b = a.slice();\n</code></pre>\n\n<p>Using <code>concat</code> is correct way as well.</p>\n\n<p><strong>This answer becomes outdated fast. Use benchmarks to check the actual situation</strong></p>\n",
                    "is_accepted": true,
                    "score": 129
                },
                {
                    "body": "<p>Technically <code>slice</code> IS the fastest way, <strong>HOWEVER</strong> it is even faster if you add the <code>0</code> begin index.</p>\n\n<pre><code>myArray.slice(0);\n</code></pre>\n\n<p>is faster than,</p>\n\n<pre><code>myArray.slice();\n</code></pre>\n\n<p><a href=\"http://jsperf.com/cloning-arrays/3\">http://jsperf.com/cloning-arrays/3</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>There is much more clean solution:</p>\n\n<pre><code>var array = [1, 2, 3];\nvar clone = Array.apply(this, array);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Easiest way to deep clone Array or Object:</p>\n\n<pre><code>var dup_array = JSON.parse(JSON.stringify(original_array))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>In order to duplicate an Array in Javascript,</p>\n\n<p>does anyone know (and maybe tested) if it's faster to use the slice method:</p>\n\n<pre><code>var dup_array = original_array.slice();\n</code></pre>\n\n<p>or do a for loop:</p>\n\n<pre><code>for(var i = 0, l = original_array.length; i &lt; l; ++i)\n   dup_array[i] = original_array[i];\n</code></pre>\n\n<hr>\n\n<p>UPDATE: (just to clarify myself) I know both ways do only a <strong>shallow copy</strong>: if original_array contains references to objects, objects won't be cloned, but only the references will be copied therefor both arrays will have references to the same objects.\nBut this is not the point of this question.</p>\n\n<p>I'm asking only about speed.</p>\n",
            "last_activity_date": 1418691749,
            "question_id": 3978492,
            "score": 72,
            "tags": [
                "javascript",
                "arrays",
                "copy",
                "slice",
                "duplication"
            ],
            "title": "Javascript fastest way to duplicate an Array - slice vs for loop"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Just use the String <a href=\"https://developer.mozilla.org/En/Core%5FJavaScript%5F1.5%5FReference/Objects/String/Replace\"><code>replace</code></a> and <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Objects/String/toLowerCase\"><code>toLowerCase</code></a> methods, for example:</p>\n\n<pre><code>var str = \"Sonic Free Games\";\nstr.replace(/\\s+/g, '-').toLowerCase();\n// \"sonic-free-games\"\n</code></pre>\n\n<p>Notice the <code>g</code> flag on the <code>RegExp</code>, it will make the replacement <em>globally</em> within the string, if it's not used, only the first occurrence will be replaced, and also, that <code>RegExp</code> will match one or more white-space characters.</p>\n",
                    "is_accepted": true,
                    "score": 134
                },
                {
                    "body": "<p>Above answer can be considered to be confusing a little. \nString methods are not <strong>modifying</strong> original object. They <strong>return</strong> new object. \nIt must be:</p>\n\n<pre><code>var str = \"Sonic Free Games\";\nstr = str.replace(/\\s+/g, '-').toLowerCase(); //new object assigned to var str\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to reformat a string using jquery or standard javascript</p>\n\n<p>Lets say we have</p>\n\n<p><strong>Sonic Free Games</strong></p>\n\n<p>I want to convert it to</p>\n\n<p><strong>sonic-free-games</strong></p>\n\n<p>So white spaces replaced with dashes and all letters converted to small letters</p>\n\n<p>Any help on this please ?</p>\n",
            "last_activity_date": 1424343372,
            "question_id": 1983648,
            "score": 58,
            "tags": [
                "javascript",
                "string",
                "replace"
            ],
            "title": "Replace space with dash and make all letters lower case using javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You may want to use Angular's built-in routing rather than do it yourself. Here are a few tutorials to get started:</p>\n\n<ul>\n<li><a href=\"http://docs.angularjs.org/tutorial/step_07\" rel=\"nofollow\">Angular Tutorals: Multiple Views, Routing and Layout Template</a></li>\n<li><a href=\"http://www.bennadel.com/blog/2420-Mapping-AngularJS-Routes-Onto-URL-Parameters-And-Client-Side-Events.htm\" rel=\"nofollow\">Mapping AngularJS Routes Onto URL Parameters And Client-Side Events</a></li>\n<li><a href=\"http://coenraets.org/blog/2012/02/sample-application-with-angular-js/\" rel=\"nofollow\">Sample Application with Angular.js</a></li>\n<li><a href=\"http://onehungrymind.com/building-a-website-with-angularjs-routes-and-partials/\" rel=\"nofollow\">Building a Website with AngularJS \u2013 Routes and Partials</a></li>\n</ul>\n\n<p>I also have a <a href=\"https://github.com/ryangasparini-wf/angular-website-routes\" rel=\"nofollow\">sample app on Github</a> that implements routing, if you wish to take a look.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>I know this is an old question, but it took me some time to sort this out given the sparse Angular documentation.  The <strong>RouteProvider</strong> and <strong>routeParams</strong> is the way to go.  The route wires up the URL to your Controller/View and the routeParams can be passed into the controller. </p>\n\n<p>Check out the <a href=\"https://github.com/angular/angular-seed\">Angular seed</a> project.  Within the app.js you'll find an example for the route provider.  To use params simply append them like this:</p>\n\n<pre><code>$routeProvider.when('/view1/:param1/:param2', {\n    templateUrl: 'partials/partial1.html',    \n    controller: 'MyCtrl1'\n});\n</code></pre>\n\n<p>Then in your controller inject $routeParams:</p>\n\n<pre><code>.controller('MyCtrl1', ['$scope','$routeParams', function($scope, $routeParams) {\n  var param1 = $routeParams.param1;\n  var param1 = $routeParams.param2;\n  ...\n}]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 79
                },
                {
                    "body": "<p>While routing is indeed a good solution for application-level URL parsing, you may want to use the more low-level $location service, as injected in your own service or controller:</p>\n\n<pre><code>var paramValue = $location.search().myParam; \n</code></pre>\n\n<p>This simple syntax will work for <a href=\"http://example.com/path?myParam=someValue\">http://example.com/path?myParam=someValue</a>. However, only if you configured the $locationProvider in the html5 mode before:</p>\n\n<pre><code>$locationProvider.html5Mode(true);\n</code></pre>\n\n<p>Otherwise have a look at the <a href=\"http://example.com/#!/path?myParam=someValue\">http://example.com/#!/path?myParam=someValue</a> \"Hashbang\" syntax which is a bit more complicated, but have the benefit of working on old browsers (non-html5 compatible) as well.</p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>If you're using ngRoute, you can inject <code>$routeParams</code> into your controller</p>\n\n<p><a href=\"http://docs.angularjs.org/api/ngRoute/service/$routeParams\" rel=\"nofollow\">http://docs.angularjs.org/api/ngRoute/service/$routeParams</a></p>\n\n<p>If you're using angular-ui-router, you can inject <code>$stateParams</code><br></p>\n\n<p><a href=\"https://github.com/angular-ui/ui-router/wiki/URL-Routing\" rel=\"nofollow\">https://github.com/angular-ui/ui-router/wiki/URL-Routing</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>HTML source code </p>\n\n<pre><code>&lt;div ng-app=\"\"&gt;\n    &lt;div ng-controller=\"test\"&gt;\n      &lt;div ng-address-bar browser=\"html5\"&gt;&lt;/div&gt;\n      &lt;br&gt;&lt;br&gt;\n      $location.url() = {{$location.url()}}&lt;br&gt;\n      $location.search() = {{$location.search('keyword')}}&lt;br&gt;\n      $location.hash() = {{$location.hash()}}&lt;br&gt;     \n      keyword valus is={{loc}} and ={{loc1}}\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Angular.js source code</p>\n\n<pre><code>&lt;script&gt;\nfunction test($scope, $location) {\n  $scope.$location = $location;\n  $scope.ur = $scope.$location.url('www.html.com/x.html?keyword=test#/x/u');\n  $scope.loc1 = $scope.$location.search().keyword ;    \n    if($location.url().indexOf('keyword') &gt; -1){    \n        $scope.loc= $location.url().split('=')[1];\n        $scope.loc = $scope.loc.split(\"#\")[0]        \n    }\n  }\n &lt;/script&gt;\n</code></pre>\n\n<p>Here the variables <code>loc</code> and <code>loc1</code> both return <em>test</em> as the result for the above URL. Is this the correct way?</p>\n",
            "last_activity_date": 1421877136,
            "question_id": 11758079,
            "score": 41,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "How to get the url parameters using angular js"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The code creates an anonymous function, and then immediately runs it. Similar to:</p>\n\n<pre><code>var temp = function() {\n  // init part\n}\ntemp();\n</code></pre>\n\n<p>The purpose of this construction is to create a scope for the code inside the function. You can declare varaibles and functions inside the scope, and those will be local to that scope. That way they don't clutter up the global scope, which minimizes the risk for conflicts with other scripts.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>That pattern will create a new EC in which any local VO's will live, and will likewise die when the EC exits. The only exception to this lifetime is for VO's which become part of a <a href=\"http://stackoverflow.com/questions/111102/how-does-a-javascript-closure-work\">closure</a>.</p>\n\n<p>Please note that JavaScript has no magic \"init\" function. You might associate this pattern with such since most any self-respecting JS library (jQuery, YUI, etc.) will do this so that they don't pollute the global NS more than they need to. </p>\n\n<p>A demonstration:</p>\n\n<pre><code>var x = 1; // global VO\n(function(){        \n    var x = 2; // local VO\n})();\nx == 1; // global VO, unchanged by the local VO\n</code></pre>\n\n<p>The 2nd set of \"brackets\" (those are actually called parens, or a set of parentheses), are simply to invoke the function expression directly preceding it (as defined by the prior set of parenthesis).</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>The way I usually explain this to people is to show how it's similar to other JavaScript patterns.</p>\n\n<p>First, you should know that there are two ways to declare a function (actually, there's at least five, but these are the two main culprits):</p>\n\n<p><code>function foo() {/*code*/}</code></p>\n\n<p>and</p>\n\n<p><code>var foo = function() {/*code*/};</code></p>\n\n<p>Even if this construction looks strange, you probably use it all the time when attaching events:</p>\n\n<p><code>window.onload=function(){/*code*/};</code></p>\n\n<p>You should notice that the second form is not much different from a regular variable declaration:</p>\n\n<pre><code>var bar = 5;\nvar baz = 'some string';\nvar foo = function() {/*code*/};\n</code></pre>\n\n<p>But in JavaScript, you always have the choice between using a value directly or through a variable. If <code>bar</code> is <code>5</code>, then the next two statements are equivalent:</p>\n\n<pre><code>var myVal = bar * 100; // use 'bar'\nvar myVal = 5 * 100;   // don't use 'bar'\n</code></pre>\n\n<p>Well, if you can use <code>5</code> on its own, why can't you use <code>function() {\\*code*\\}</code> on its own too? In fact, you can. And that's called an anonymous function. So these two examples are equivalent as well:</p>\n\n<pre><code>var foo = function() {/*code*/}; // use 'foo'\nfoo();                           \n\n(function(){/*code*/}());        // don't use 'foo' \n</code></pre>\n\n<p>The only difference you should see is in the extra brackets. That's simply because if you start a line with the keyword <code>function</code>, the parser will think you are declaring a function using the very first pattern at the top of this answer and throw a syntax error exception. So wrap your entire anonymous function inside a pair of braces and the problem goes away. </p>\n\n<p>In other words, the following three statements are valid:</p>\n\n<pre><code>5;                        // pointless and stupid\n'some string';            // pointless and stupid\n(function(){/*code*/}()); // wonderfully powerful\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 57
                },
                {
                    "body": "<p>I can't believe no-one has answered the ops question!</p>\n\n<p>The last set of brackets are used for passing in the parameters to the anonymous question. So, the following example creates a function, then runs it with the x=5 and y=8</p>\n\n<pre><code>(function(x,y){\n    //code here\n})(5,8)\n</code></pre>\n\n<p>This may seem not so useful, but it has its place. The most common one I have seen is</p>\n\n<pre><code>(function($){\n    //code here\n})(jQuery)\n</code></pre>\n\n<p>which allows for jQuery to be in compatible mode, but you can refer to it as \"$\" within the anonymous function.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Self invoking anonymous function (SIAF)</p>\n\n<p>Self-invoking functions runs instantly, even if DOM isn't completely ready.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/3259496/jquery-document-ready-vs-self-calling-anonymous-function\">jQuery document.ready vs self calling anonymous function</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In simple word you can understand that whenever page load, by this second pair of brackets () function will have called default.We need not call the function.It is known as anonymous function.</p>\n\n<p>i.e.</p>\n\n<pre><code>(function(a,b){\n//Do your code here\n})(1,2);\n</code></pre>\n\n<p>It same like as </p>\n\n<pre><code>var test = function(x,y) {\n  // Do your code here\n}\ntest(1,2);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Its is called immediatly invoking function expression (IIFE). Mainly associated with the JavaScript closure concept. Main use is to run the function before the global variable changed, so that the expected behaviour of code can be retained.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I can see often the following code:</p>\n\n<pre><code>(function () {\n  // init part\n})();\n</code></pre>\n\n<p>but I never could put my head round on how it works. Especially I find last brackets confusing.\nIf someone can explain how it works in terms of Execution Contexts (EC) and Variable Objects (VO).</p>\n",
            "last_activity_date": 1403803958,
            "question_id": 4212149,
            "score": 36,
            "tags": [
                "javascript"
            ],
            "title": "Init function in javascript and how it works"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>In Twitter Bootstrap <a href=\"https://github.com/twitter/bootstrap/issues/983\">is not implemented</a> but you can use the <a href=\"https://github.com/CWSpear/twitter-bootstrap-hover-dropdown\">this plugin</a></p>\n\n<p>Update 1: </p>\n\n<p>Sames question <a href=\"http://stackoverflow.com/questions/8878033/how-to-make-twitter-bootstrap-menu-dropdown-on-hover-rather-than-click\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The easiest solution would be in CSS. Add something like...</p>\n\n<pre><code>.dropdown:hover .dropdown-menu {\n    display: block;\n }\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/MgcDU/8668/\">Working Fiddle</a></p>\n",
                    "is_accepted": true,
                    "score": 88
                },
                {
                    "body": "<p>Hover over the nav items to see that they activate on hover.\n<a href=\"http://cameronspear.com/demos/twitter-bootstrap-hover-dropdown/#\">http://cameronspear.com/demos/twitter-bootstrap-hover-dropdown/#</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>An easy way, using jQuery, is this:</p>\n\n\n\n<pre><code>$(document).ready(function(){\n    $('ul.nav li.dropdown').hover(function() {\n      $(this).find('.dropdown-menu').stop(true, true).delay(200).fadeIn(200);\n    }, function() {\n      $(this).find('.dropdown-menu').stop(true, true).delay(200).fadeOut(200);\n    });  \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>you can use jquery hover function</p>\n\n<p>you just need to add class 'open' when mouse hover and remove the 'open' class when mouse leave the dropdown</p>\n\n<p>here's my code</p>\n\n<pre><code>$(function(){\n    $('.dropdown').hover(function() {\n         $(this).toggleClass('open');\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>The best way of doing it is to just trigger bootstraps click event with a hover. This way, it should still remain touch device friendly </p>\n\n<pre><code>$('.dropdown').hover(function(){ \n  $('.dropdown-toggle', this).trigger('click'); \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>So you have this code:</p>\n\n<pre><code>&lt;a class=\"dropdown-toggle\" data-toggle=\"dropdown\"&gt;Show menu&lt;/a&gt;\n\n&lt;ul class=\"dropdown-menu\" role=\"menu\"&gt;\n    &lt;li&gt;Link 1&lt;/li&gt;\n    &lt;li&gt;Link 2&lt;/li&gt; \n    &lt;li&gt;Link 3&lt;/li&gt;                                             \n&lt;/ul&gt;\n</code></pre>\n\n<p>Normally it works on click event, and you want it work on hover event. This is very simple, just use this javascript/jquery code:</p>\n\n<pre><code>$(document).ready(function () {\n    $('.dropdown-toggle').mouseover(function() {\n        $('.dropdown-menu').show();\n    })\n\n    $('.dropdown-toggle').mouseout(function() {\n        t = setTimeout(function() {\n            $('.dropdown-menu').hide();\n        }, 100);\n\n        $('.dropdown-menu').on('mouseenter', function() {\n            $('.dropdown-menu').show();\n            clearTimeout(t);\n        }).on('mouseleave', function() {\n            $('.dropdown-menu').hide();\n        })\n    })\n})\n</code></pre>\n\n<p>This works very well and here is the explanation: we have a button, and a menu. When we hover the button we display the menu, and when we mouseout of the button we hide the menu after 100ms. If you wonder why i use that, is because you need time to drag the cursor from the button over the menu. When you are on the menu, the time is reset and you can stay there as many time as you want. When you exit the menu, we will hide the menu instantly without any timeout.</p>\n\n<p>I've used this code in many projects, if you encounter any problem using it, feel free to ask me questions.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This will help you make your own hover class for bootstrap:</p>\n\n<p>CSS:</p>\n\n<pre><code>/* Hover dropdown */\n.hover_drop_down.input-group-btn ul.dropdown-menu{margin-top: 0px;}/*To avoid unwanted close*/\n.hover_drop_down.btn-group ul.dropdown-menu{margin-top:2px;}/*To avoid unwanted close*/\n.hover_drop_down:hover ul.dropdown-menu{\n   display: block;\n}\n</code></pre>\n\n<p>Margins are set to avoid unwanted close and they are optional.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"btn-group hover_drop_down\"&gt;\n  &lt;button type=\"button\" class=\"btn btn-default\" data-toggle=\"dropdown\"&gt;&lt;/button&gt;\n  &lt;ul class=\"dropdown-menu\" role=\"menu\"&gt;\n    ...\n  &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Don't forget to remove the button attribute <strong>data-toggle=\"dropdown\"</strong> if you want to remove onclick open, and this also will work when input is append with dropdown.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is what I use to make it dropdown on hover with some jQuery</p>\n\n<pre><code>$(document).ready(function () {\n    $('.navbar-default .navbar-nav &gt; li.dropdown').hover(function () {\n        $('ul.dropdown-menu', this).stop(true, true).slideDown('fast');\n        $(this).addClass('open');\n    }, function () {\n        $('ul.dropdown-menu', this).stop(true, true).slideUp('fast');\n        $(this).removeClass('open');\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This only hovers the navbar when you are not on a mobile device, because I find that hovering the navigation does not work well on mobile divices:</p>\n\n<pre><code>    $( document ).ready(function() {\n\n    $( 'ul.nav li.dropdown' ).hover(function() {\n        // you could also use this condition: $( window ).width() &gt;= 768\n        if ($('.navbar-toggle').css('display') === 'none' \n            &amp;&amp; false === ('ontouchstart' in document)) {\n\n            $( '.dropdown-toggle', this ).trigger( 'click' );\n        }\n    }, function() {\n        if ($('.navbar-toggle').css('display') === 'none'\n            &amp;&amp; false === ('ontouchstart' in document)) {\n\n            $( '.dropdown-toggle', this ).trigger( 'click' );\n        }\n    });\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I try other solutions, i'm using bootstrap 3, but dropdown menu closes too quickly to move over it</p>\n\n<p>supposed that you add class=\"dropdown\" to li, i added a timeout</p>\n\n<pre><code>var hoverTimeout;\n$('.dropdown').hover(function() {\n    clearTimeout(hoverTimeout);\n    $(this).addClass('open');\n}, function() {\n    var $self = $(this);\n    hoverTimeout = setTimeout(function() {\n        $self.removeClass('open');\n    }, 150);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For CSS it goes crazy when you also click on it. This is the code that I'm using, it also don't change anything for mobile view.</p>\n\n<pre><code>$('.dropdown').mouseenter(function(){\n    if(!$('.navbar-toggle').is(':visible')) { // disable for mobile view\n        if(!$(this).hasClass('open')) { // Keeps it open when hover it again\n            $('.dropdown-toggle', this).trigger('click');\n        }\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had issues with the other solutions. The simple CSS ones are not using the <code>.open</code> class on the <code>.dropdown</code>, so there will be no feedback on the dropdown toggle element when the dropdown is visible.</p>\n\n<p>The js ones are interfering with clicking on <code>.dropdown-toggle</code>, so the dropdown shows up on hover, then you click, which hides the dropdown, and moving out the mouse will trigger the dropdown to show up again. Some of the js solutions are braking iOS compatibility.</p>\n\n<p>So adding mine which prevents all these issues:</p>\n\n<pre><code>var dropdownHidingTimeoutHandler;\n\n$('.dropdown').on('mouseenter', function() {\n    var $this = $(this);\n    clearTimeout(dropdownHidingTimeoutHandler);\n    if (!$this.hasClass('open')) {\n        $('.dropdown-toggle', $this).dropdown('toggle');\n    }\n});\n\n$('.dropdown').on('mouseleave', function() {\n    var $this = $(this);\n    dropdownHidingTimeoutHandler = setTimeout(function() {\n        if ($this.hasClass('open')) {\n            $('.dropdown-toggle', $this).dropdown('toggle');\n        }\n    }, 150);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>    $('.navbar .dropdown').hover(function() {\n      $(this).find('.dropdown-menu').first().stop(true, true).slideDown(150);\n    }, function() {\n      $(this).find('.dropdown-menu').first().stop(true, true).slideUp(105)\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>OK, so what I need is fairly straightforward.</p>\n\n<p>I have set up a navbar with some dropdown menus in it (using <code>class=\"dropdown-toggle\" data-toggle=\"dropdown\"</code>), and it works fine.</p>\n\n<p>The thing is it works \"<code>onClick</code>\", while I would prefer if it worked \"<code>onHover</code>\".</p>\n\n<p>Is there any built-in way to do this?</p>\n",
            "last_activity_date": 1426009309,
            "question_id": 16214326,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "twitter-bootstrap"
            ],
            "title": "Bootstrap Dropdown with Hover"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You should remove your <code>availableTags</code>, as you are overloading <code>tagSource</code>, which is used as source for the autocompletion.</p>\n\n<p>Also that may be a typo, but it \"<code>return</code>\", and not \"<code>eturn</code>\".</p>\n\n<h2>Edit:</h2>\n\n<p>I think the problem is that the function you provided to <code>tagSource</code> doesn't seems to return anything. However my javascript knowledge seems to end here :/</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Seems this question hasn't been answered for a long time, I bet you have already found a solution but for those who haven't here is my answer:</p>\n\n<p>The indention got all messed up when i copied from my code ;)</p>\n\n<pre><code>&lt;input type=\"hidden\" name=\"tags\" id=\"mySingleField\" value=\"Apple, Orange\" disabled=\"true\"&gt;\nTags:&lt;br&gt;\n&lt;ul id=\"mytags\"&gt;&lt;/ul&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    jQuery(document).ready(function() {\n    jQuery(\"#mytags\").tagit({\n        singleField: true,\n        singleFieldNode: $('#mySingleField'),\n        allowSpaces: true,\n        minLength: 2,\n        removeConfirmation: true,\n        tagSource: function( request, response ) {\n            //console.log(\"1\");\n            $.ajax({\n                url: \"search.php\", \n                data: { term:request.term },\n                dataType: \"json\",\n                success: function( data ) {\n                    response( $.map( data, function( item ) {\n                        return {\n                            label: item.label+\" (\"+ item.id +\")\",\n                            value: item.value\n                        }\n                    }));\n                }\n            });\n        }});\n    });\n</code></pre>\n\n<p></p>\n\n<p>and the \"search.php\" you can find this in some autocomplete jQuery examples actually.</p>\n\n<pre><code>&lt;?php\n$q = strtolower($_GET[\"term\"]);\nif (!$q) return;\n\n$items = array(\n    \"Great Bittern\"=&gt;\"Botaurus stellaris\",\n    \"Little Grebe\"=&gt;\"Tachybaptus ruficollis\",\n    \"Black-necked Grebe\"=&gt;\"Podiceps nigricollis\",\n    \"Little Bittern\"=&gt;\"Ixobrychus minutus\",\n    \"Black-crowned Night Heron\"=&gt;\"Nycticorax nycticorax\",\n    \"Heuglin's Gull\"=&gt;\"Larus heuglini\"\n);\n\nfunction array_to_json( $array ){\n\n    if( !is_array( $array ) ){\n        return false;\n    }\n\n    $associative = count( array_diff( array_keys($array), array_keys( array_keys( $array )) ));\n    if( $associative ){\n\n        $construct = array();\n        foreach( $array as $key =&gt; $value ){\n\n        // We first copy each key/value pair into a staging array,\n        // formatting each key and value properly as we go.\n\n        // Format the key:\n        if( is_numeric($key) ){\n            $key = \"key_$key\";\n        }\n        $key = \"\\\"\".addslashes($key).\"\\\"\";\n\n        // Format the value:\n        if( is_array( $value )){\n            $value = array_to_json( $value );\n        } else if( !is_numeric( $value ) || is_string( $value ) ){\n            $value = \"\\\"\".addslashes($value).\"\\\"\";\n        }\n\n        // Add to staging array:\n        $construct[] = \"$key: $value\";\n    }\n\n    // Then we collapse the staging array into the JSON form:\n    $result = \"{ \" . implode( \", \", $construct ) . \" }\";\n\n} else { // If the array is a vector (not associative):\n\n    $construct = array();\n    foreach( $array as $value ){\n\n        // Format the value:\n        if( is_array( $value )){\n            $value = array_to_json( $value );\n        } else if( !is_numeric( $value ) || is_string( $value ) ){\n            $value = \"'\".addslashes($value).\"'\";\n        }\n\n        // Add to staging array:\n        $construct[] = $value;\n    }\n\n    // Then we collapse the staging array into the JSON form:\n    $result = \"[ \" . implode( \", \", $construct ) . \" ]\";\n}\n\nreturn $result;\n}\n\n$result = array();\nforeach ($items as $key=&gt;$value) {\n    if (strpos(strtolower($key), $q) !== false) {\n    array_push($result, array(\"id\"=&gt;$value, \"label\"=&gt;$key, \"value\" =&gt; strip_tags($key)));\n}\nif (count($result) &gt; 11)\n    break;\n}\necho array_to_json($result);\n\n?&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>check this out:\n<a href=\"https://github.com/aehlke/tag-it/issues/13\">How to get tagSource to work with $.ajax()?</a> (from tag-it's github issue list).</p>\n\n<p>this is an example:\nHTML file:</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js\" type=\"text/javascript\" charset=\"utf-8\"&gt;&lt;/script&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.12/jquery-ui.min.js\" type=\"text/javascript\" charset=\"utf-8\"&gt;&lt;/script&gt;\n&lt;script src=\"js/tag-it.js\" type=\"text/javascript\" charset=\"utf-8\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1/themes/flick/jquery-ui.css\"&gt;\n&lt;link href=\"css/jquery.tagit.css\" rel=\"stylesheet\" type=\"text/css\"&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n$(document).ready(function() {\n$(\"#mytags\").tagit({\n  tagSource: function(search, showChoices) {\n    $.ajax({\n      url: \"auto.php\",\n      data: {search: search.term},\n      success: function(choices) {\n        showChoices(choices);\n      }\n    });\n  }\n});\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;ul id=\"mytags\"&gt;\n&lt;li&gt;Tag1&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>(get tag-it.js file from [here][1])</p>\n\n<p>and this is the PHP file:</p>\n\n<pre><code>&lt;?php\nheader('Content-type: application/json');\n$q = $_GET[\"search\"];\n//check $q, get results from your database and put them in $arr\n$arr[] = 'tag1';\n$arr[] = 'tag2';\n$arr[] = $q;\necho json_encode($arr);\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>None of these answers worked as is for me, so I thought I would come back and post my code that does work.</p>\n\n<pre><code>var tagThis = $(\".tagit\");\ntagThis.tagit({\n    tagSource: function(search, showChoices) {\n        $.ajax({\n            url: \"/tags/search\",\n            data: { search: search.term },\n            dataType: \"json\",\n            success: function(data) {\n                var assigned = tagThis.tagit(\"assignedTags\");\n                var filtered = [];\n                for (var i = 0; i &lt; data.length; i++) {\n                    if ($.inArray(data[i], assigned) == -1) {\n                        filtered.push(data[i]);\n                    }\n                }\n                showChoices(filtered);\n            }\n        });\n    }\n});\n</code></pre>\n\n<p>This code assumes the URL returns a JSON encoded string (an array of strings). It will then filter out any tags that have already been selected in the input. So they aren't repeated in the list. Otherwise, this works for me.</p>\n\n<p>Thanks to the others for settings me on the right path.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I think that you can overwrite the autocomplete method from jquery UI :</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$('.tags ul').tagit({\n\n    itemName: 'question',\n    fieldName: 'tags',\n    removeConfirmation: true,\n    //availableTags: [\"c++\", \"java\", \"php\", \"javascript\", \"ruby\", \"python\", \"c\"]\n    allowSpaces: true,\n    // tagSource: ['foo', 'bar']\n    tagSource: function () {\n        $.ajax({\n            url: \"/autocomplete_tags.json\",\n            dataType: \"json\",\n            data: {\n                term: 'ruby'\n            },\n            success: function (data) {\n                console.log(data);\n                return data;\n            }\n\n        });\n    },\n    autocomplete: {\n        delay: 0,\n        minLength: 2,\n        source: this.tagSource()\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>tagSource has been depreciated.</p>\n\n<p>Just use:</p>\n\n<pre><code>&lt;script&gt;\n  $(document).ready(function(){\n      $(\"#tagit\").tagit({\n     autocomplete: {\n    source: \"your-php-file.php\",\n     }\n   });\n  });\n&lt;/script&gt;\n</code></pre>\n\n<p>You can add all the attributes to this:</p>\n\n<pre><code>&lt;script&gt;\n  $(document).ready(function(){\n      $(\"#tagit\").tagit({\n         allowSpaces: true,\n         singleFieldDelimiter: ';',\n         allowDuplicates: true,\n         autocomplete: {\n           source: \"your-php-file.php\",\n     }\n   });\n  });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Trying to get <a href=\"http://aehlke.github.com/tag-it/\">tag-it</a> to work with an ajax call.</p>\n\n<p>Everything works so far. Except, I am unable to assign a tagSource via an ajax call.</p>\n\n<p>In firebug, the 'data' is returning:</p>\n\n<pre><code>[\"Ruby\",\"Ruby On Rails\"]\n</code></pre>\n\n<p>But its not showing up as I type into the input box.</p>\n\n<pre><code>$('.tags ul').tagit({\n  itemName: 'question',\n  fieldName: 'tags',\n  removeConfirmation: true,\n  availableTags: [\"c++\", \"java\", \"php\", \"javascript\", \"ruby\", \"python\", \"c\"],\n  allowSpaces: true,\n  // tagSource: ['foo', 'bar']\n  tagSource: function() {\n    $.ajax({\n      url:        \"/autocomplete_tags.json\",\n      dataType:   \"json\",\n      data:       { term: 'ruby' },\n      success:    function(data) {\n        console.log(data);\n        return data;\n      }\n    });\n  }\n});\n</code></pre>\n\n<p><code>console.log(data)</code> returns <code>[\"Ruby\", \"Ruby On Rails\"]</code>.</p>\n\n<p>Am I missing something here? Anyone else got this to work?</p>\n",
            "last_activity_date": 1387508978,
            "question_id": 6938802,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "autocomplete",
                "tag-it"
            ],
            "title": "Trying to get tag-it to work with an AJAX call"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>international characters listed are part of extended ASCII. the ones added by you are certainly not.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Seeing as the statement works in the console, could this have to do the way your .js files are saved (i.e. ascii or UTF-8) and that the browser is loading them thusly and in the process translates the characters?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What is the character encoding of the JS file?</p>\n\n<p>For XML QNames I use this RegExp:</p>\n\n<pre><code>/**\n * Definition of an XML Name\n */\nvar NameStartChar = \"A-Za-z:_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\"+\n                    \"\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\"+\n                    \"\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u010000-\\u0EFFFF\";\nvar NameChar = NameStartChar+\"\\\\-\\\\.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040\";\nvar Name = \"^[\"+NameStartChar+\"][\"+NameChar+\"]*$\";\nRegExp (Name).test (value);\n</code></pre>\n\n<p>It works like a charm also with internationalized characters. Note the escaping. Due to that I'm able to restrict the JS file to <strong>ASCII</strong> characters only. Therefore I don't get into trouble when dealing with ISO-8859 vs UTF-8 charsets.</p>\n\n<p>This is no more true, if you use character encodings where ASCII is no real subset (like, e.g., in Asia UTF-16).</p>\n\n<p>Cheers,</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think the email and url validation methods are a good reference here, eg. the email method:</p>\n\n<pre><code>email: function(value, element) {\n    return this.optional(element) || /^((([a-z]|\\d|[!#\\$%&amp;'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&amp;'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i.test(value);\n},\n</code></pre>\n\n<p><a href=\"http://projects.scottsplayground.com/email_address_validation/lib/email.js\">The script to compile that regex</a>. <a href=\"http://projects.scottsplayground.com/iri/lib/iri.js\">Or the one for URLs</a>.</p>\n\n<p>In other words, replacing your arbitrary list of \"crazy moon\" characters with this could help:</p>\n\n<pre><code>[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]\n</code></pre>\n\n<p>Basically this avoids the character encoding issues you have elsewhere by replacing the needs-encoding characters with more general definitions. While not necessarily more readable, so far it's shorter than your full list.</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>This isn't really an answer but I don't have 50 rep yet to add a comment... It can definately be attributed to encoding issues.</p>\n\n<p>Yea \"ECMA shouldn't care about encoding...\" blah blah, well if you're on firefox, go to <strong>View > Character Encoding > Western (ISO-8859-1)</strong> then try using the Name field.</p>\n\n<p>It works fine for me after changing the encoding manually (granted the rest of the page doesn't like the encoding switch, :P)</p>\n\n<p>(on IE8 you can go to <strong>Page > Encoding > Western European (Windows)</strong> to get the same effect)</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Use something like Fiddler or Charles (not Firebug's Net panel, or anything else that's actually inside the browser) to examine what's actually coming over the wire. It's almost certainly an encoding issue: either the file has been saved in some Microsoft character set and is being sent as UTF-8, or maybe the other way around.</p>\n\n<p>In the case of JS RegExps you can, as Boldewyn points out, avoid these problems by specifying the Unicode code point for the characters you want that are outside the US-ASCII range. It would still be as well to make sure you aren't mixing up encodings between the place where the file is saved and the place where it's served, though.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>We use the excellent <a href=\"http://bassistance.de/jquery-plugins/jquery-plugin-validation/\" rel=\"nofollow\">validator plugin for jQuery</a> here on Stack Overflow to do client-side validation of input before it is submitted to the server.</p>\n\n<p>It generally works well, however, this one has us scratching our heads.</p>\n\n<p>The following validator method is used on the ask/answer form for the user name field (note that you must be <strong>logged out</strong> to see this field on the live site; it's on every <code>/question</code> page and the <code>/ask</code> page)</p>\n\n<pre><code>$.validator.addMethod(\"validUserName\",\n  function(value, element) {\n  return this.optional(element) || \n  /^[\\w\\-\\s\\d\u00c0\u00c8\u00cc\u00d2\u00d9\u00e0\u00e8\u00ec\u00f2\u00f9\u00c1\u00c9\u00cd\u00d3\u00da\u00dd\u00e1\u00e9\u00ed\u00f3\u00fa\u00fd\u00c2\u00ca\u00ce\u00d4\u00db\u00e2\u00ea\u00ee\u00f4\u00fb\u00c3\u00d1\u00d5\u00e3\u00f1\u00f5\u00c4\u00cb\u00cf\u00d6\u00dc\u00e4\u00eb\u00ef\u00f6\u00fc\u00e7\u00c7\u00df\u00d8\u00f8\u00c5\u00e5\u00c6\u00e6\u00de\u00fe\u00d0\u00f0]+$/.test(value); },\n  \"Can only contain A-Z, 0-9, spaces, and hyphens.\");  \n</code></pre>\n\n<p>Now this regex looks weird but it's pretty simple:</p>\n\n<ul>\n<li>match the beginning of the string (^)</li>\n<li>match any of these..\n<ul>\n<li>word character (\\w)</li>\n<li>dash (-)</li>\n<li>space (\\s)</li>\n<li>digit (\\d)</li>\n<li>crazy moon language characters (\u00e0\u00e8\u00ec\u00f2\u00f9 etc)</li>\n</ul></li>\n<li>now match the end of the string ($)</li>\n</ul>\n\n<p>Yes, we ran into the <a href=\"http://www.hanselman.com/blog/InternationalizedRegularExpressions.aspx\" rel=\"nofollow\">Internationalized Regular Expressions</a> problem. JavaScript's definition of \"word character\" does not include international characters.. at all.</p>\n\n<p>Here's the weird part: even though we've gone to the trouble of manually adding tons of the valid international characters to the regex, it <em>doesn't work</em>. You cannot enter these international characters in the input box for user name without getting the..</p>\n\n<blockquote>\n  <p>Can only contain A-Z, 0-9, spaces, and hyphens</p>\n</blockquote>\n\n<p>.. validation return!</p>\n\n<p>Obviously <strong>the validation <em>is</em> working for the other parts of the regex</strong>.. so.. what gives?</p>\n\n<p>The other strange part is that this validation works in the browser's JavaScript console but not when executed as a part of our standard *.js includes.</p>\n\n<blockquote>\n  <p>/^[\\w-\\s\u00c0\u00c8\u00cc\u00d2\u00d9\u00e0\u00e8\u00ec\u00f2\u00f9\u00c1\u00c9\u00cd\u00d3\u00da\u00dd\u00e1\u00e9\u00ed\u00f3\u00fa\u00fd\u00c2\u00ca\u00ce\u00d4\u00db\u00e2\u00ea\u00ee\u00f4\u00fb\u00c3\u00d1\u00d5\u00e3\u00f1\u00f5\u00c4\u00cb\u00cf\u00d6\u00dc\u00e4\u00eb\u00ef\u00f6\u00fc\u00e7\u00c7\u00df\u00d8\u00f8\u00c5\u00e5\u00c6\u00e6\u00de\u00fe\u00d0\u00f0]+$/\n  .test('\u00d3Bill de h\u00d3ra') === true</p>\n</blockquote>\n\n<p>We've run into some really bizarre international character issues in JavaScript code before, resulting in some very, very nasty hacks. We'd like to understand what's going on here and why. Please enlighten us!</p>\n",
            "last_activity_date": 1334209435,
            "question_id": 1073412,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "validation",
                "internationalization"
            ],
            "title": "JavaScript validation issue with international characters"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<h2>Object has property:</h2>\n\n<p>If you are testing for properties that are on the object itself (not a part of its prototype chain) you can use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>.hasOwnProperty()</code></a>:</p>\n\n<pre><code>if (x.hasOwnProperty('y')) { \n  // ......\n}\n</code></pre>\n\n<h2>Object or its prototype has a property:</h2>\n\n<p>You can use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/in\"><code>in</code></a> operator to test for properties that are inherited as well.</p>\n\n<pre><code>if ('y' in x) {\n  // ......\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 209
                },
                {
                    "body": "<p>You can trim that up a bit like this:</p>\n\n<pre><code>if ( x.y !== undefined ) ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you want to know if the object <em>physically</em> contains the property <a href=\"http://stackoverflow.com/questions/1894792/determining-if-a-javascript-object-has-a-given-property/1894803#1894803\">@gnarf's</a> answer using <code>hasOwnProperty</code> will do the work. </p>\n\n<p>If you're want to know if the property exists anywhere, either on the object itself or up in the prototype chain, you can use the <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Operators/Special%5FOperators/in%5FOperator\"><code>in</code> operator</a>.</p>\n\n<pre><code>if ('prop' in obj) {\n  // ...\n}\n</code></pre>\n\n<p>Eg.:</p>\n\n<pre><code>var obj = {};\n\n'toString' in obj == true; // inherited from Object.prototype\nobj.hasOwnProperty('toString') == false; // doesn't contains it physically\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>One feature of my original code</p>\n\n<pre><code>if ( typeof(x.y) != 'undefined' ) ...\n</code></pre>\n\n<p>that might be useful in some situations is that it is safe to use whether <code>x</code> exists or not. With either of the methods in gnarf's answer, one should first test for <code>x</code> if there is any doubt if it exists.</p>\n\n<p>So perhaps all three methods have a place in one's bag of tricks.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Underscore.js</p>\n\n<pre><code>if (_.has(x, \"y\")) ...\n</code></pre>\n\n<p>:)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>If I want to test of object <code>x</code> has a defined property <code>y</code> regardless of <code>x.y</code>'s value, is there a better way that the rather clunky:</p>\n\n<pre><code>if ( typeof(x.y) != 'undefined' ) ...\n</code></pre>\n\n<p>?</p>\n",
            "last_activity_date": 1417630023,
            "question_id": 1894792,
            "score": 93,
            "tags": [
                "javascript",
                "object"
            ],
            "title": "Determining if a javascript object has a given property"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You'll want to use:</p>\n\n<pre><code>Backbone.Model.prototype.clone.call(this);\n</code></pre>\n\n<p>This will call the original <code>clone()</code> method from <code>Backbone.Model</code> with the context of <code>this</code>(The current model).</p>\n\n<p>From <a href=\"http://documentcloud.github.com/backbone/#Model-extend\">Backbone docs</a>:</p>\n\n<blockquote>\n  <p>Brief aside on super: JavaScript does not provide a simple way to call\n  super \u2014 the function of the same name defined higher on the prototype\n  chain. If you override a core function like set, or save, and you want\n  to invoke the parent object's implementation, you'll have to\n  explicitly call it [demonstrated above]</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p>I believe you can cache the original method (although not tested):</p>\n\n<pre><code>var MyModel = Backbone.Model.extend({\n  origclone: Backbone.Model.clone,\n  clone: function(){\n    origclone();//calling the original clone method\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can also use the <a href=\"http://blog.usefunnel.com/2011/03/js-inheritance-with-backbone/\"><code>__super__</code></a> property which is a reference to the parent class prototype:</p>\n\n<pre><code>var MyModel = Backbone.Model.extend({\n  clone: function(){\n    MyModel.__super__.clone.call(this);\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Josh Nielsen <a href=\"http://forrst.com/posts/Backbone_js_super_function-4co\">found an elegant solution for this</a>, which hides a lot of the ugliness.</p>\n\n<p>Just add this snippet to your app to extend Backbone's model:</p>\n\n<pre><code>Backbone.Model.prototype._super = function(funcName){\n    return this.constructor.prototype[funcName].apply(this, _.rest(arguments));\n}\n</code></pre>\n\n<p>Then use it like this:</p>\n\n<pre><code>Model = Backbone.model.extend({\n    set: function(arg){\n        // your code here\n\n        // call the super class function\n        this._super('set', arg);\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>If you want just to call  this._super();  without passing the function name as an argument</p>\n\n<pre><code>Backbone.Controller.prototype._super = function(){\n    var fn = Backbone.Controller.prototype._super.caller, funcName;\n\n    $.each(this, function (propName, prop) {\n        if (prop == fn) {\n            funcName = propName;\n        }\n    });\n\n    return this.constructor.__super__[funcName].apply(this, _.rest(arguments));\n}\n</code></pre>\n\n<p>Better use this plugin: \n<a href=\"https://github.com/lukasolson/Backbone-Super\" rel=\"nofollow\">https://github.com/lukasolson/Backbone-Super</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Pass the parent class as an option during instantiation:</p>\n\n<pre><code>BaseModel = Backbone.Model.extend({\n    initialize: function(attributes, options) {\n        var self = this;\n        this.myModel = new MyModel({parent: self});\n    } \n});\n</code></pre>\n\n<p>Then in your MyModel you can call parent methods like this</p>\n\n<p>this.options.parent.method();\nKeep in mind this creates a retain cycle on the two objects. So to let the garbage collector do it's job you would need to manually destroy the retain on one of the objects when finished with it. If you're application is pretty large. I would encourage you to look more into hierarchal setups so events can travel up to the correct object.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>backbone._super.js, from my gists: <a href=\"https://gist.github.com/sarink/a3cf3f08c17691395edf\" rel=\"nofollow\">https://gist.github.com/sarink/a3cf3f08c17691395edf</a></p>\n\n<pre><code>// Forked/modified from: https://gist.github.com/maxbrunsfeld/1542120\n// This method gives you an easier way of calling super when you're using Backbone in plain javascript.\n// It lets you avoid writing the constructor's name multiple times.\n// You still have to specify the name of the method.\n//\n// So, instead of having to write:\n//\n//    var Animal = Backbone.Model.extend({\n//        word: \"\",\n//        say: function() {\n//            return \"I say \" + this.word;\n//        }\n//    });\n//    var Cow = Animal.extend({\n//        word: \"moo\",\n//        say: function() {\n//            return Animal.prototype.say.apply(this, arguments) + \"!!!\"\n//        }\n//    });\n//\n//\n// You get to write:\n//\n//    var Animal = Backbone.Model.extend({\n//        word: \"\",\n//        say: function() {\n//            return \"I say \" + this.word;\n//        }\n//    });\n//    var Cow = Animal.extend({\n//        word: \"moo\",\n//        say: function() {\n//            return this._super(\"say\", arguments) + \"!!!\"\n//        }\n//    });\n\n(function(root, factory) {\n    if (typeof define === \"function\" &amp;&amp; define.amd) {\n        define([\"underscore\", \"backbone\"], function(_, Backbone) {\n            return factory(_, Backbone);\n        });\n    }\n    else if (typeof exports !== \"undefined\") {\n        var _ = require(\"underscore\");\n        var Backbone = require(\"backbone\");\n        module.exports = factory(_, Backbone);\n    }\n    else {\n        factory(root._, root.Backbone);\n    }\n}(this, function(_, Backbone) {\n    \"use strict\";\n\n    // Finds the next object up the prototype chain that has a different implementation of the method.\n    var findSuper = function(methodName, childObject) {\n        var object = childObject;\n        while (object[methodName] === childObject[methodName]) {\n            object = object.constructor.__super__;\n        }\n        return object;\n    };\n\n    var _super = function(methodName) {\n        // Keep track of how far up the prototype chain we have traversed, in order to handle nested calls to `_super`.\n        this.__superCallObjects__ || (this.__superCallObjects__ = {});\n        var currentObject = this.__superCallObjects__[methodName] || this;\n        var parentObject  = findSuper(methodName, currentObject);\n        this.__superCallObjects__[methodName] = parentObject;\n\n        // If `methodName` is a function, call it with `this` as the context and `args` as the arguments, if it's an object, simply return it.\n        var args = _.tail(arguments);\n        var result = (_.isFunction(parentObject[methodName])) ? parentObject[methodName].apply(this, args) : parentObject[methodName];\n        delete this.__superCallObjects__[methodName];\n        return result;\n    };\n\n    // Mix in to Backbone classes\n    _.each([\"Model\", \"Collection\", \"View\", \"Router\"], function(klass) {\n        Backbone[klass].prototype._super = _super;\n    });\n\n    return Backbone;\n}));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In the case that you don't know what the parent class is exactly (multiple inheritance or you want a helper function) then you can use the following:</p>\n\n<pre><code>var ChildModel = ParentModel.extend({\n\n  initialize: function() {\n    this.__proto__.constructor.__super__.initialize.apply(this, arguments);\n    // Do child model initialization.\n  }\n\n});\n</code></pre>\n\n<p>With helper function:</p>\n\n<pre><code>function parent(instance) {\n  return instance.__proto__.constructor.__super__;\n};\n\nvar ChildModel = ParentModel.extend({\n\n  initialize: function() {\n    parent(this).initialize.apply(this, arguments);\n    // Do child model initialization.\n  }\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>2 functions below, one requires you pass in the function name, the other can \"discover\" which function we want the super version of</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>Discover.Model = Backbone.Model.extend({\n       _super:function(func) {\n        var proto = this.constructor.__super__;\n        if (_.isUndefined(proto[func])) {\n            throw \"Invalid super method: \" + func + \" does not exist in prototype chain.\";\n        }\n        return proto[func].apply(this, _.rest(arguments));\n    },\n    _superElegant:function() {\n        t = arguments;\n        var proto = this.constructor.__super__;\n        var name;\n        for (name in this) {\n            if (this[name] === arguments.callee.caller) {\n                console.log(\"FOUND IT \" + name);\n                break;\n            } else {\n                console.log(\"NOT IT \" + name);\n            }\n        }\n        if (_.isUndefined(proto[name])) {\n            throw \"Super method for: \" + name + \" does not exist.\";\n        } else {\n            console.log(\"Super method for: \" + name + \" does exist!\");\n        }\n        return proto[name].apply(this, arguments);\n    },\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When I override the <code>clone()</code> method of a <code>Backbone.Model</code>, is there a way to call this overriden method from my implantation? Something like this:</p>\n\n<pre><code>var MyModel = Backbone.Model.extend({\n    clone: function(){\n        super.clone();//calling the original clone method\n    }\n})\n</code></pre>\n",
            "last_activity_date": 1426025648,
            "question_id": 8596861,
            "score": 49,
            "tags": [
                "javascript",
                "inheritance",
                "backbone.js"
            ],
            "title": "Super in Backbone"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Any <em>extension page</em> (except <a href=\"http://developer.chrome.com/extensions/content_scripts.html\">content scripts</a>) has direct access to the background page via <a href=\"http://developer.chrome.com/extensions/extension.html#method-getBackgroundPage\"><code>chrome.extension.getBackgroundPage()</code></a>.</p>\n\n<p>That means, within the <a href=\"http://developer.chrome.com/extensions/browserAction.html\">popup page</a>, you can just do:</p>\n\n<pre><code>chrome.extension.getBackgroundPage().console.log('foo');\n</code></pre>\n\n<p>To make it easier to use:</p>\n\n<pre><code>var bkg = chrome.extension.getBackgroundPage();\nbkg.console.log('foo');\n</code></pre>\n\n<p>Now if you want to do the same within <a href=\"http://developer.chrome.com/extensions/content_scripts.html\">content scripts</a> you have to use <a href=\"http://developer.chrome.com/extensions/messaging.html\">Message Passing</a> to achieve that. The reason, they both belong to different domains, which make sense. There are many examples in the <a href=\"http://developer.chrome.com/extensions/messaging.html\">Message Passing</a> page for you to check out.</p>\n\n<p>Hope that clears everything.</p>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>Throwing obvious answer here just in case. You know that you can open background page's console if you click on \"background.html\" link in the extensions list, right?</p>\n\n<h2>Edit</h2>\n\n<p>To access the background page that corresponds to your extensions open <code>Settings / Extensions</code> or open a new tab and enter <code>chrome://extensions</code>. You will see something like this screenshot. </p>\n\n<p><img src=\"http://i.stack.imgur.com/Xulbx.png\" alt=\"Chrome extensions dialogue\"></p>\n\n<p>Under your extension click on the link <code>background page</code>. This opens a new window. \nFor the <strong><a href=\"https://developer.chrome.com/extensions/samples#context-menus-sample\">context menu sample</a></strong> the window has the title: <code>_generated_background_page.html</code>.</p>\n",
                    "is_accepted": false,
                    "score": 49
                },
                {
                    "body": "<p>The simplest solution would be to add the following code on the top of the file. And than you can use all full <a href=\"https://developers.google.com/chrome-developer-tools/docs/console-api\" rel=\"nofollow\">Chrome console api</a> as you would normally.</p>\n\n<pre><code> console = chrome.extension.getBackgroundPage().console;\n// for instance, console.assert(1!=1) will return assertion error\n// console.log(\"msg\") ==&gt; prints msg\n// etc\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To answer your question directly, when you call <code>console.log(\"something\")</code> from the background, this message is logged, to the background page's console. To view it, you may go to <code>chrome://extensions/</code> and  click on that <code>inspect view</code> under your extension.</p>\n\n<p>When you click the popup, it's loaded into the current page, thus the console.log should show log message in the current page.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>You can still use console.log(), but it gets logged into a separate console.\nIn order to view it - right click on the extension icon and select \"Inspect popup\".</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In relation to the original question I'd like to add to the accepted answer by Mohamed Mansour that there is also a way to make this work the other way around:</p>\n\n<p>You can access other extension pages (i.e. options page, popup page) from <em>within the background page/script</em> with the <code>chrome.extension.getViews()</code> call. As described <a href=\"https://developer.chrome.com/extensions/background_pages\" rel=\"nofollow\">here</a>.</p>\n\n<pre><code> // overwrite the console object with the right one.\nvar optionsPage = (  chrome.extension.getViews()  \n                 &amp;&amp;  (chrome.extension.getViews().length &gt; 1)  ) \n                ? chrome.extension.getViews()[1] : null;\n\n // safety precaution.\nif (optionsPage) {\n  var console = optionsPage.console;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this, if you want to log to the active page's console:</p>\n\n<pre><code>chrome.tabs.executeScript({\n    code: 'console.log(\"addd\")'\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If I call <code>console.log('something');</code> from the popup page, or any script included off that it works fine.</p>\n\n<p>However as the background page is not directly run off the popup page it is not included in the console.</p>\n\n<p>Is there a way that I can get <code>console.log()</code>'s in the background page to show up in the console for the popup page?</p>\n\n<p>is there any way to, from the background page call a function in the popup page?</p>\n",
            "last_activity_date": 1407728280,
            "question_id": 3829150,
            "score": 49,
            "tags": [
                "javascript",
                "google-chrome",
                "google-chrome-extension"
            ],
            "title": "google chrome extension :: console.log() from background page?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You have distributed the JavaScript library to the user; you are required to comply with the GPL's requirements on distribution then. Whether this requires you to distribute the rest of the website is where things get complicated - I'd advise you to talk with a competent lawyer about your exact situation if you're even thinking about going that route, and keep in mind that this is at least violating the spirit of the licence, whether or not it violates the letter of the license as well.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This does definitely get complicated.  I'll give you an example.  What if you're using jQuery's GPL license (I know <a href=\"http://docs.jquery.com/License\" rel=\"nofollow\">it's dual licensed</a>, but let's ignore that for just a sec).  </p>\n\n<p>Google has a public distribution of jQuery (among other javascript frameworks) that they distribute on their CDN, for example:<br />\n<a href=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js\" rel=\"nofollow\">http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js</a></p>\n\n<p>So in this case, you're not the one that is distributing the javascript library to the user, google is ;-)</p>\n\n<p><strong><em>please note:</em></strong> as @bdonlan describes, only an experienced lawyer should be the one to really weigh in on this.  I only contributed this answer to provide context for things you can speak to the lawyer about.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I am not a lawyer. I have talked to lawyers about using the GPL and LGPL for code to be interpreted / dynamically linked into non-free software. We all got big headaches. The question isn't just whether you have to release the rest of your site under GPL. It's whether a non-free browser can legally run GPL code.</p>\n\n<p>My best non-legal advice is to never try to use the GPL on Javascript code. I'd never release a Javascript library under GPL, and if I found some code I wanted to use I'd try to get the author to give me an exception. The LGPL <a href=\"http://www.gnu.org/licenses/lgpl-java.html\">may be</a> a better choice, but that license is so complex I suggest avoiding it as well.</p>\n\n<p>The FSF themselves have an answer for you in their FAQ <a href=\"http://www.gnu.org/licenses/gpl-faq.html#InterpreterIncompat\">If a programming language interpreter has a license that is incompatible with the GPL, can I run GPL-covered programs on it?</a>. That answer itself is frustratingly ambiguous, but it suggests paths where you could run GPL code in a non-GPL browser. You may also find the FSF essay <A href=\"http://www.gnu.org/philosophy/javascript-trap.html\">The Javascript Trap</a> interesting, although again it doesn't really give a clear answer to your question.</p>\n\n<p>For context, it helps to remember that the GPL and LPGL were written in the Unix era when most everything was statically linked. No dynamic linking, no interpreted languages where the scripts themselves were considered valuable intellectual property, etc. </p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>And just to add more fuel to the fire...</p>\n\n<p>Reading the gpl v3 it is clear that if you include a gpl'd work, you need to provide the source with the license text at the top of the file and the copyright statement.</p>\n\n<p>So if I strip comments and whitespace from the file and shorten variable names, then 'distribute' it to someone's browser (in source form of course) I would probably be in violation of the license.  BTW, a solution might be a binary uuid that stands for the appropriate licenses  for the mangled files.  Thoughts?</p>\n\n<p>If I provide the source of the library and my own 'source' using the library with a gpl stmt on it, does delivering it to the browser constitute providing the source freely?</p>\n\n<p>I think there are enough loopholes in this to make the license unenforceable.</p>\n\n<p>my 2cents/ not a lawyer.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This guy wrote an article about it:\n<a href=\"http://stuck-in-windows.blogspot.com/2009/02/fud-over-javascript-and-gpl.html\" rel=\"nofollow\">http://stuck-in-windows.blogspot.com/2009/02/fud-over-javascript-and-gpl.html</a></p>\n\n<p>In his article, he cites the gnu website <a href=\"http://www.gnu.org/licenses/gpl-faq.html#UnreleasedMods\" rel=\"nofollow\">FAQ</a>, which has Q&amp;A:</p>\n\n<blockquote>\n  <p>(Q) A company is running a modified version of a GPL'ed program on a\n  web site. Does the GPL say they must release their modified sources?</p>\n  \n  <p>(A) The GPL permits anyone to make a modified version and use it\n  without ever distributing it to others. What this company is doing is\n  a special case of that. Therefore, the company does not have to\n  release the modified sources.</p>\n</blockquote>\n\n<p>The FAQ then references the <a href=\"http://www.gnu.org/licenses/agpl.html\" rel=\"nofollow\">GNU Affero GPL</a> which does require the release of all website source code.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For e.g. Magento uses ExtJS which is under GPL v3. Now, when Magento is downloaded and installed by shopping-store-owners, you mean store-owners have to give a link to their 'whole-website-source' along with their Products ? Funny Lol </p>\n\n<p>So In my opinion, a Javascript library licensed under GPL v3 is good for any project unless you are trying to modify the Javascript library and selling it commercially or related commercial-services.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Your app + GPL'd library + release -> open source GPL'd app.</p>\n\n<p>This is the intention of the FSF and the GPL, and it applies regardless of what programming language you are using.</p>\n\n<p>A GPL'd JavaScript lib will infect all your JavaScript code, and possibly even your HTML and page content.</p>\n\n<p>So please don't release JavaScript libs under the GPL, if you intend them for general use.</p>\n\n<p>In my opinion, the GPL is an anachronistic boil on the ass of free software.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>If I use GPL-licensed JavaScript components on my website, would it be considered as a release to the public (as client-side code of the components is loaded to users' browsers via http) and I have to \"open-source\" the whole website?  </p>\n\n<p>So, can we say that the usage of JavaScript components on a website is distribution of the code and it involves the distribution of the whole website code?</p>\n\n<p>Hope, the question is clear and you can help me to understand this aspect of GPL.</p>\n",
            "last_activity_date": 1337734700,
            "question_id": 1239470,
            "score": 46,
            "tags": [
                "javascript",
                "licensing",
                "legal",
                "gpl"
            ],
            "title": "Restrictions of GPL on javascript libraries"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Constructor-functions and prototypes are one of the reasonable ways to implement classes and instances. They don't quite correspond to that model so you typically need to choose a particular scheme or helper method to implement classes in terms of prototypes. (<a href=\"http://stackoverflow.com/questions/1595611/how-to-properly-create-a-custom-object-in-javascript\">Some background on classes in JS</a>.)</p>\n\n<p>The module pattern is typically used for namespacing, where you'll have a single instance acting as a store to group related functions and objects. This is a different use case from what prototyping is good for. They're not really competing with each other; you can quite happily use both together (eg put a constructor-function inside a module and say <code>new MyNamespace.MyModule.MyClass(arguments)</code>).</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>Module pattern is by far easier and more elegant than prototype. However, thinking mobile first. It is not a relevant pattern for medium/large objects because the initialization needs to parse the whole block before starting. The multiple closures also create circular dependencies that the garbage collector does not free (especially IE), it results in a heavier memory footprint not freed until the window (or tab) is closed - check chrome task manager to compare-\nThe loading time is inversely proportional to the object size using module pattern while this is not the case for prototypal inheritance.\nStatements above are verified through multiple benchmarks like this one: <a href=\"http://jsperf.com/prototypal-performance/54\">http://jsperf.com/prototypal-performance/54</a></p>\n\n<p>As seen in last test. Small objects are better off being initialized as plain object ( without these patterns). It is suitable for single objects not requiring closure nor inheritance. It is wise to assess if you even need these patterns.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You could try the Folding Pattern, here's a link:\n<a href=\"http://intrepidis.blogspot.co.uk/2013/04/javascript-folding-pattern.html\" rel=\"nofollow\">Javascript Folding Pattern</a></p>\n\n<p>I also left an answer to a similar question, which shows how to use the Folding Pattern:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/387707/whats-the-best-way-to-define-a-class-in-javascript/15857622#15857622\">Simple Example of Folding Pattern</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Prototype pattern helps us to extend the functionality and there is only one instance of functions in a memory irrespective of the number of objects. In Module patter, each object creates a new instance of functions in memory but it provides with concept of private/public variables and helps in encapsulating the variables and functions.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I would like to know if the module pattern or Constructor/protoType pattern is more applicable to my work.</p>\n\n<p>Basically I am using unobtrusive javascript -- the HTML document has a reference to the .js file.</p>\n\n<p>My understanding of the module pattern:</p>\n\n<ul>\n<li>call an INIT method (which is basically a public method i can create and return using the module pattern)</li>\n<li>In the INIT method, assign all click events etc.</li>\n</ul>\n\n<p>This sounds like the perfect pattern for my situation, as I don't need to create Objects and inheritance hierarchies etc.</p>\n\n<p>My understanding of the Constructor/Prototype pattern:</p>\n\n<ul>\n<li>for creating objects</li>\n<li>for using inheritance (i.e. Subtypes of a supertype)</li>\n</ul>\n\n<p>Am I correct, that for providing unobtrusive javascript, the module pattern is ideal?</p>\n",
            "last_activity_date": 1405534619,
            "question_id": 3790909,
            "score": 41,
            "tags": [
                "javascript",
                "design-patterns",
                "unobtrusive-javascript",
                "module-pattern"
            ],
            "title": "Javascript: Module Pattern vs Constructor/Prototype pattern?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I've had a reasonable amount of success setting up a development environment on my Ubuntu machine and I'd like to share my methods here for anyone looking to do the same.  This answer is intended to be platform independent, so the same advice should work on any fully fledged operating system.  </p>\n\n<h2>Introduction</h2>\n\n<p>First off, the question's assumptions regarding app structure are correct.  A JavaScript application consists of the following items:</p>\n\n<ul>\n<li><strong>config.xml</strong>, a simple configuration file defining various settings and deployment information.  See <a href=\"http://www.samsungdforum.com/upload_files/files/guide/data/html/html_2/getting_started/coding_js.html#config\"><em>Writing the config.xml File</em></a> on the official developer site.</li>\n<li><strong>widget.info</strong>, a very small file with a few lines used to define the opacity of the application's body.  This may not be required for full-screen applications.</li>\n<li><strong>index.html</strong>, the main HTML file for your application.</li>\n<li><strong>Images, sounds and other resources</strong>.</li>\n</ul>\n\n<p>You can write these files using your favourite editor.  I'm happily using <em>vim</em> with linting plugins for my JS and CSS.    </p>\n\n<h2>Testing</h2>\n\n<p>As of version 4.0 of the SDK, a Linux version of the emulator is now available.  This allows you to test your apps as they would appear on 2011-2013 TVs.  For older TVs, you can run SDK 1.5's emulator in Wine, but emulators belonging to SDK 2.0 and newer <a href=\"http://bugs.winehq.org/show_bug.cgi?id=32414\">will not run</a>.</p>\n\n<p>It <em>is</em> possible to run the emulators in a Windows virtual machine, and, with a little bit of trickery, you can make the emulators use your own application folder to look for apps.  This involves sharing your development folders with your virtual machine, then creating a symbolic link to those folders, replacing the \"apps\" folder inside the SDK's installation directory.  A quick overview of this process is available in an article titled, <a href=\"http://www.peterfriese.de/your-windows-ide-sucks-replace-it-with-your-favorite-editor-on-the-mac/\"><em>Your Windows IDE sucks? Replace it with Your Favorite Editor on the Mac!</em></a></p>\n\n<h2>Deployment</h2>\n\n<p>Samsung Smart TVs have a built-in developer account that allows you to send an application over from your computer for live testing on the television itself.  You enter the IP address of your deployment server and the TV will look for a file called <em>widgetlist.xml</em> on that server.  An example of the format is as follows:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;rsp stat=\"ok\"&gt;\n  &lt;list&gt;\n    &lt;widget id=\"MyTVApp\"&gt;\n      &lt;title&gt;MyTVApp&lt;/title&gt;\n      &lt;compression size=\"3383543\" type=\"zip\"/&gt;\n      &lt;description&gt;A basic application for Samsung TVs&lt;/description&gt;\n      &lt;download&gt;http://192.168.1.83/Widget/MyTVApp_0.1_America_20120709.zip&lt;/download&gt;\n    &lt;/widget&gt;\n  &lt;/list&gt;\n&lt;/rsp&gt;\n</code></pre>\n\n<p>After that, it will download each app listed using the URL in the <code>&lt;download&gt;</code> tag.  All you have to do is zip up the files, modify the <em>widgetlist.xml</em> accordingly and make sure both files are hosted in a web server running on your machine.  You can use Apache, lighttpd or anything.  I have a small node.js/connect app that will build the <em>widgetlist.xml</em> dynamically based on the zip files I have in a directory labelled <em>deploy</em>.</p>\n\n<p>So there you have it.  Development of Samsung Smart TV apps is not impossible without Windows. In fact, there's quite a few options available.  Hooray!</p>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>I've created this Answer for a topic that I know nothing about, but nevertheless I did spot something that threw a red flag in my direction... <em><a href=\"/questions/tagged/bounty\" class=\"post-tag\" title=\"show questions tagged 'bounty'\" rel=\"tag\">bounty</a> or not.</em></p>\n\n<p>First, I looked at your <a href=\"http://bugs.winehq.org/show_bug.cgi?id=32414\" rel=\"nofollow\"><strong>WineHQ Bug Report</strong></a> to see if this issue was resolved, but it's still pending as of this writing. I noticed that bug  report had a reference link to <a href=\"http://forum.winehq.org/viewtopic.php?f=8&amp;t=17835\" rel=\"nofollow\"><strong>the discussion</strong></a> which I clicked and followed.</p>\n\n<p>Looking at the <code>machine-code generated dump-error</code> in <em>that discussion</em> proved informative.</p>\n\n<p><em>Reference:</em>  </p>\n\n<blockquote>\n  <p>Z:\\home\\andy.wine\\drive_c\\Program Files (x86)\\Samsung\\Samsung TV\n  SDK(3.5.2)\\Emulator\\Emulator2012_v3.5\\bin\\Emulator2.exe</p>\n</blockquote>\n\n<p>The above <code>Path</code> is the location of the file that caused the dump. <em>That path is the red flag I mentioned.</em></p>\n\n<p>Let me back up a tiny bit and explain about what I learned about <code>Windows XP SP3</code> and <code>IE8</code> which very well may apply here, or you can skip down to the line with the bold text.</p>\n\n<p>I worked on a webpage project that used a lightbox plugin called <code>Shadowbox</code>. That project wasn't on a local server, just in a <em>subfolder of a subfolder</em>. It works fine in Firefox and Chrome but IE choked and <em>didn't render any CSS</em> from the plugins style sheet. Because I was very familiar with Shadowbox, I was 100% convinced it was <em>not the plugin</em>. So I started to think <em>outside the box</em>, and through <em>trials and tribulations</em> I discovered the culprit was just <em>the actual path</em>!</p>\n\n<p>I had created a <em>subfolder</em> for the project that used <code>/test(v1)/</code> in the <code>Path</code> and that's what broke <code>IE8</code>. Once I removed the <em>parentheses</em>, the CSS was loaded correctly. This same solution was also the cause of a CSS issue for a forum member who used <code>Vista and IE9</code>, so then <em>it's conceivable these issues lie with Wine as well</em>.</p>\n\n<p>What issue is that? It's using <strong>illegal characters</strong>, <em>the parentheses</em>, in the path name. I will stop short and say the URL name only because it's the file path leading to the <code>index.html</code> file (<em>and only relative paths were used in coding - parentheses could not be escaped - and base tag failed</em>).</p>\n\n<p>Firefox and Chrome were forgiving, but not IE. Even though you may not be using IE, it's possible that this issue extends outside of that.</p>\n\n<p>My solution is not to use <strong><code>parentheses</code></strong> or <strong><code>whitespaces</code></strong> in any portion of your file path. While this may not solve this particular bug, at the very least you will not have sandbox Wine issues for when that <code>file path</code> becomes a <code>URL path</code> for whatever requirement (<em>e.g., accessing a SWF object to be used as a video player</em>). If IE browsers are unforgiving, so too can other embedded browsers or programing modules.</p>\n\n<p><em>Recommended:</em></p>\n\n<blockquote>\n  <p>Z:\\home\\andy.wine\\drive_c\\Samsung\\Samsung_TV\n  SDK_3.5.2\\Emulator\\Emulator2012_v3.5\\bin\\Emulator2.exe</p>\n</blockquote>\n\n<p>Notice the above does not use the <code>Program Files (x86)</code> folder since that can't be changed per OS requirements. Having such a path will surely reduce, if not eliminate, any unforeseen errors. Cheers!</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>They have now released Smart TV SDK 4.0 which includes support for Linux &amp; Mac OS X: <a href=\"http://www.samsungdforum.com/SamsungDForum/NewsView?newsID=27\">http://www.samsungdforum.com/SamsungDForum/NewsView?newsID=27</a></p>\n\n<p>\"In addition to the Eclipse-based App Editor, a new Linux-based Emulator has been released.<br>\nThis Emulator executes in an Ubuntu virtual machine that is run in the Virtual Box virtualization tool.\"</p>\n\n<p>\u25a0 Features for 2013 Platform on Linux (First Release)</p>\n\n<ul>\n<li>Apps Framework</li>\n<li>App Engine / WebKit</li>\n<li>UniPlayer</li>\n<li>SEF (Service Extension Framework)</li>\n</ul>\n\n<p>You need to register to Samsung D forum and then you can download the SDK from <a href=\"https://www.samsungdforum.com/Devtools/SdkDownload\">https://www.samsungdforum.com/Devtools/SdkDownload</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>One tip that I have not seen mentioned in any of the answers, is that the TV will attempt to open a socket connection on port 45634 of the machine where the app was downloaded from (the one with the widgetlist.xml).</p>\n\n<p>All debugging (alerts() calls), will be sent over this port, allowing for remote debugging.</p>\n\n<p>I use NetCat to open a port and dump all logs, like so:</p>\n\n<pre><code>nc -l 45634\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I know it's an old question, but since I'm delving into the process, I figured I'd share some links. Enjoy!</p>\n\n<p>Decent quick start guide on developing for the Smart TV platform: <a href=\"http://www.samsungdforum.com/Guide/c02/index.html\" rel=\"nofollow\">http://www.samsungdforum.com/Guide/c02/index.html</a>.</p>\n\n<p>These are the minimum project requirements and some example files: <a href=\"http://www.samsungdforum.com/Guide/art00011/index.html\" rel=\"nofollow\">http://www.samsungdforum.com/Guide/art00011/index.html</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p><b>Problem:</b></p>\n\n<p>I'd like to try building a proof-of-concept app using the Samsung SmartTV SDK 2.5 (I have a 2011 model TV - UA55D8000). </p>\n\n<p>Unfortunaltely, the SDK comes in two varieties that only seem to work on Microsoft Windows. It's weird because there's no reason it should be the case: the televisions themselves run Linux and applications are written in JavaScript.</p>\n\n<p>This presents two problems:</p>\n\n<ol>\n<li><p>As I don't have Microsoft Windows at home, I can't use the build environment (nor the TV emulator) that come with the SDK. (The SDK files themselves are just JavaScript)</p></li>\n<li><p>Even if I had access to Windows, it's very hard to automate building &amp; testing of the Apps without access to traditional build tools (e.g: Make, Ant, Autotools, etc)</p></li>\n</ol>\n\n<p>How can I build Samsung Smart TV Applications on Linux? (i.e: without using the Windows-based build tools that come with the SDK)</p>\n\n<hr>\n\n<p><b>What I've figured out so far:</b></p>\n\n<p>From what I can gather, a JavaScript-mode application is simply  zip file containing an XML config file, one or more JavaScript files (including supplied JavaScript interface libraries for platform SDK functions), and any required assets (HTML, images, etc).</p>\n\n<p>Also, from what I gather, deployment involves placing the zip file and an XML manifest file on a web-server network accessible to the TV, logging in as 'develop' on the TV and 'syncing' the application to the installed applications on the TV.</p>\n\n<hr>\n\n<p>Could someone point me to a source for the full deployment requirements &amp; app bundle requirements? Or even just a working sample?</p>\n",
            "last_activity_date": 1390335314,
            "question_id": 12766653,
            "score": 37,
            "tags": [
                "javascript",
                "linux",
                "samsung-smart-tv"
            ],
            "title": "How to build &amp; deploy a Samsung SmartTV app without the IDE (e.g: on Linux)"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>This sounds to me like a script that was pulled in with src, and loaded just halfway, causing a syntax error sine the remainder is not loaded.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Actually I got something like that on IE recently and it was related to JavaScript syntax \"errors\". I say error in quotes because it was fine everywhere but on IE. This was under IE6. The problem was related to JSON object creation and an extra comma, such as</p>\n\n<pre><code>{ one:1, two:2, three:3, }\n</code></pre>\n\n<p>IE6 really doesn't like that comma after 3. You might look for something like that, touchy little syntax formality issues.</p>\n\n<p>Yeah, I thought the multi-million line number in my 25 line JavaScript was interesting too.</p>\n\n<p>Good luck.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>The cause of this type of error can often be a misplaced comma in an object or array definition:</p>\n\n<pre><code>var obj = {\n   id: 23,\n   name: \"test\",  &lt;--\n}\n</code></pre>\n\n<p>If it appears at a random line, maybe it's part of an object defintion you are creating dynamically.</p>\n",
                    "is_accepted": true,
                    "score": 106
                },
                {
                    "body": "<p><strong>This is a definitive un-answer: eliminating a tempting-but-wrong answer to help others  navigate toward correct answers.</strong></p>\n\n<p>It might seem like debugging would highlight the problem. However, the only browser the problem occurs in is IE, and in IE you can only debug code that was part of the original document. For dynamically added code, the debugger just shows the body element as the current instruction, and IE claims the error happened on a huge line number.</p>\n\n<p>Here's a sample web page that will demonstrate this problem in IE:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;javascript debug test&lt;/title&gt;\n&lt;/head&gt;\n&lt;body onload=\"attachScript();\"&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction attachScript() {\n   var s = document.createElement(\"script\");\n   s.setAttribute(\"type\", \"text/javascript\");\n   document.body.appendChild(s);\n   s.text = \"var a = document.getElementById('nonexistent'); alert(a.tagName);\"\n}\n&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>This yielded for me the following error:</p>\n\n<pre><code>Line: 54654408\nError: Object required\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>As noted previously, having an extra comma threw an error.</p>\n\n<p>Also in IE 7.0, not having a semicolon at the end of a line caused an error. It works fine in Safari and Chrome (with no errors in console).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>IE7 is much less forgiving than newer browsers, especially Chrome.  I like to use <a href=\"http://www.jslint.com/\" rel=\"nofollow\">JSLint</a> to find these bugs.  It will find these improperly placed commas, among other things.  You will probably want to activate the option to ignore improper whitespace.</p>\n\n<p>In addition to improperly placed commas, at <a href=\"http://blog.favrik.com/2007/11/29/ie7-error-expected-identifier-string-or-number/\" rel=\"nofollow\">this blog</a> in the comments someone reported:</p>\n\n<blockquote>\n  <p>I've been hunting down an error that only said \"Expected identifier\"\n  only in IE (7). My research led me to this page. After some\n  frustration, it turned out that the problem that I used a reserved\n  word as a function name (\"switch\"). THe error wasn't clear and it\n  pointed to the wrong line number.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Using the word <strong>class</strong> as a key in a Javascript dictionary can also trigger the dreaded \"Expected identifier, string or number\" error because <strong>class</strong> is a reserved keyword in Internet Explorer.</p>\n\n<p>BAD</p>\n\n<pre><code>{ class : 'overlay'} // ERROR: Expected identifier, string or number\n</code></pre>\n\n<p>GOOD</p>\n\n<pre><code>{'class': 'overlay'}\n</code></pre>\n\n<p>When using a reserved keyword as a key in a Javascript dictionary, enclose the key in quotes.</p>\n\n<p>Hope this hint saves you a day of debugging hell.</p>\n",
                    "is_accepted": false,
                    "score": 67
                },
                {
                    "body": "<p>Remove the unwanted , sign in the function. you will get the solution.</p>\n\n<p>Refer this</p>\n\n<p><a href=\"http://blog.favrik.com/2007/11/29/ie7-error-expected-identifier-string-or-number/\" rel=\"nofollow\">http://blog.favrik.com/2007/11/29/ie7-error-expected-identifier-string-or-number/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://closure-compiler.appspot.com/home\" rel=\"nofollow\">http://closure-compiler.appspot.com/home</a> will pick this error up with an accurate reference to the actual line number in the offending script.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>IE7 has problems with arrays of objects</p>\n\n<pre><code>columns: [\n{\n  field: \"id\",\n  header: \"ID\"\n},\n{\n  field: \"name\",\n  header: \"Name\" , /* this comma was the problem*/ \n},\n...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another variation of this bug: I had a function named 'continue' and since it's a reserved word it threw this error. I had to rename my function 'continueClick'</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This error occurs when we add or missed to remove a comma at the end of array or in function code.  It is necessary to observe the entire code of a web page for such error.</p>\n\n<p>I got it in a Facebook app code while I was coding for a Facebook API.</p>\n\n<pre><code>&lt;div id='fb-root'&gt;\n    &lt;script type='text/javascript' src='http://connect.facebook.net/en_US/all.js'&lt;/script&gt;\n    &lt;script type='text/javascript'&gt;\n          window.fbAsyncInit = function() {\n             FB.init({appId:'\".$appid.\"', status: true, cookie: true, xfbml: true});            \n             FB.Canvas.setSize({ width: 800 , height: 860 , }); \n                                                       // ^ extra comma here\n          };\n    &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just saw the bug in one of my applications, as a catch-all, remember to enclose the name of all javascript properties that are the same as keyword.</p>\n\n<p>Found this bug after attending to a bug where an object such as:</p>\n\n<pre><code>var x = { class: 'myClass', function: 'myFunction'};\n</code></pre>\n\n<p>generated the error (class and function are keywords)\nthis was fixed by adding quotes</p>\n\n<pre><code>var x = { 'class': 'myClass', 'function': 'myFunction'};\n</code></pre>\n\n<p>I hope to save you some time</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use '<a href=\"https://www.google.co.in/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;ved=0CCkQFjAA&amp;url=http://www.microsoft.com/en-in/download/details.aspx?id=18359&amp;ei=PwA_UpyKCpPzqwH6i4HYBA&amp;usg=AFQjCNHm1kcrl66oyF42litsO2yt9p9XdQ&amp;bvm=bv.52434380,d.aWM\" rel=\"nofollow\">IEDeveloper</a>' Tool and you can debug the error exactly and the tool even shows the line where the error is , try and enjoy</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Maybe you've got an object having a method 'constructor' and try to invoke that one.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Some users are reporting occasional JS errors on my site. The error message says \"Expected identifier, string or number\" and the line number is 423725915, which is just an arbitrary number and changes for each report when this occurs. \nThis mostly happens with IE7/ Mozilla 4.0 browsers.</p>\n\n<p>I scanned my code a bunch of times and ran jslint but it didn't pick anything up - anyone know of the general type of JS problems that lead to this error message?</p>\n",
            "last_activity_date": 1398347382,
            "question_id": 2149762,
            "score": 53,
            "tags": [
                "javascript"
            ],
            "title": "Possible cases for Javascript error: &quot;Expected identifier, string or number&quot;"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/split\">Split</a> it on the <code>,</code> character;</p>\n\n<pre><code>var string = \"0,1\";\nvar array = string.split(\",\");\nalert(array[0]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>For simple array members like that, you can use <code>JSON.parse</code>.</p>\n\n<pre><code>var array = JSON.parse(\"[\" + string + \"]\");\n</code></pre>\n\n<hr>\n\n<p>This gives you an Array of numbers.</p>\n\n<pre><code>[0, 1]\n</code></pre>\n\n<p>If you use <code>.split()</code>, you'll end up with an Array of strings.</p>\n\n<pre><code>[\"0\", \"1\"]\n</code></pre>\n\n<hr>\n\n<p>Just be aware that <code>JSON.parse</code> will limit you to the supported data types. If you need values like <code>undefined</code> or functions, you'd need to use <code>eval()</code>, or a JavaScript parser.</p>\n\n<hr>\n\n<p>If you want to use <code>.split()</code>, but you also want an Array of Numbers, you could use <code>Array.prototype.map</code>, though you'd need to shim it for IE8 and lower or just write a traditional loop.</p>\n\n<pre><code>var array = string.split(\",\").map(Number);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 111
                },
                {
                    "body": "<p>you can use split. <a href=\"http://www.w3schools.com/jsref/jsref_split.asp\" rel=\"nofollow\">http://www.w3schools.com/jsref/jsref_split.asp</a></p>\n\n<p><code>\"0,1\".split(',')</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>For simple array members like that, you can use JSON.parse.</p>\n\n<pre><code>var listValues = \"[{\\\"ComplianceTaskID\\\":75305,\\\"RequirementTypeID\\\":4,\\\"MissedRequirement\\\":\\\"Initial Photo Upload NRP\\\",\\\"TimeOverdueInMinutes\\\":null}]\";\n\nvar array = JSON.parse(\"[\" + listValues + \"]\");\n</code></pre>\n\n<p>This gives you an Array of numbers.</p>\n\n<p>now you variable value is like array.length=1</p>\n\n<p>Value output</p>\n\n<pre><code>array[0].ComplianceTaskID\narray[0].RequirementTypeID\narray[0].MissedRequirement\narray[0].TimeOverdueInMinutes\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>use the built-in map function with an anonymous function, like so:</p>\n\n<pre><code>string.split(',').map(function(n) {return Number(n);});\n</code></pre>\n\n<p>[edit] here's how you would use it</p>\n\n<pre><code>var array = string.split(',').map(function(n) {\n    return Number(n);\n});\nalert( array[0] );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Short question. How can I convert a string to the JS array?</p>\n\n<p>Look at the code:</p>\n\n<pre><code>var string = \"0,1\";\nvar array = [string];\nalert(array[0]);\n</code></pre>\n\n<p>In this case, <code>alert</code> would popup a <code>0,1</code>. When it would be an array, it would popup a <code>0</code>, and when <code>alert(array[1]);</code> is called, it should popup the <code>1</code>.</p>\n\n<p>Is there any chance to convert such string into a JS array?</p>\n",
            "last_activity_date": 1425754706,
            "question_id": 13272406,
            "score": 48,
            "tags": [
                "javascript",
                "arrays",
                "string",
                "type-conversion"
            ],
            "title": "JavaScript string to array conversion"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Not that I know of. This would be great, but it would need a lexical analyzer specific to JavaScript and it would probably not work when there are any syntax errors.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>BlueJ has it (1) - but then it also may not.  The context coloring for scope in javascript will certainly be more complicated than any other language such a java - which this editor works on.</p>\n\n<p>The folks writing Brackets will probably do it eventually since they worship Crockford (2,3)</p>\n\n<p>Why not join them in helping write it or at least tell them to?</p>\n\n<p>Sources: </p>\n\n<p>1) <a href=\"http://blogs.kent.ac.uk/mik/2010/05/bluej-3-0-whats-new/\" rel=\"nofollow\">http://blogs.kent.ac.uk/mik/2010/05/bluej-3-0-whats-new/</a></p>\n\n<p>2) <a href=\"https://github.com/adobe/brackets/issues/search?q=Crockford\" rel=\"nofollow\">https://github.com/adobe/brackets/issues/search?q=Crockford</a></p>\n\n<p>3) <a href=\"http://www.adobe.com/devnet/html5/articles/bracket-code-architecture.html\" rel=\"nofollow\">http://www.adobe.com/devnet/html5/articles/bracket-code-architecture.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As of Feb-13th 2013 Crockford has added an experimental context coloring feature to JSLint.</p>\n\n<p><a href=\"https://plus.google.com/118095276221607585885/posts/FzKnHk96m2C\">https://plus.google.com/118095276221607585885/posts/FzKnHk96m2C</a></p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>I just watched his video on that, great stuff. Had to <a href=\"https://github.com/daniellmb/JavaScript-Scope-Context-Coloring\"><strong>give it a try</strong></a>, or checkout the project on GitHub <a href=\"https://github.com/daniellmb/JavaScript-Scope-Context-Coloring\">https://github.com/daniellmb/JavaScript-Scope-Context-Coloring</a>.</p>\n\n<p><img src=\"http://i.stack.imgur.com/XsHHz.png\" alt=\"JavaScript Scope Context Coloring\"></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>There's a package for sublime now: <a href=\"https://github.com/mazurov/sublime-levels\" rel=\"nofollow\">https://github.com/mazurov/sublime-levels</a></p>\n\n<p>It also has an online live demo at <a href=\"http://mazurov.github.io/eslevels-demo/\" rel=\"nofollow\">http://mazurov.github.io/eslevels-demo/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Paul Irish opened a thread to sum up updates about it : <a href=\"https://plus.google.com/113127438179392830442/posts/XjR4WmSDFAV\" rel=\"nofollow\">https://plus.google.com/113127438179392830442/posts/XjR4WmSDFAV</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<h2>Vim <a href=\"https://github.com/bigfish/vim-js-context-coloring\" rel=\"nofollow\">(GitHub)</a>:</h2>\n\n<p><img src=\"http://i.stack.imgur.com/j8rLt.png\" alt=\"enter image description here\"></p>\n\n<h2>Emacs <a href=\"https://github.com/jacksonrayhamilton/context-coloring/\" rel=\"nofollow\">(GitHub)</a>:</h2>\n\n<p><img src=\"https://github.com/jacksonrayhamilton/context-coloring/raw/develop/screenshot.png\" alt=\"Screenshot of context coloring in Emacs.\"></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I watched a video from YUIConf 2012 in which Douglas Crockford gives a talk about implementing monads in JavaScript. In this talk he gives a code example that utilizes what he calls \"Context Coloring\" which throws out the idea of coloring by language syntax and introduces different colors for different levels of scope. Here is the link to that specific part of the video.</p>\n\n<p><a href=\"http://www.youtube.com/watch?feature=player_embedded&amp;v=dkZFtimgAcM#t=15m58s\">http://www.youtube.com/watch?feature=player_embedded&amp;v=dkZFtimgAcM#t=15m58s</a></p>\n\n<p><strong>Is this context coloring scheme implemented by any code editor for JavaScript or any language?</strong></p>\n\n<p>I use Sublime Text and this editor like every other code editor I have come across allows color to be applied to syntax. Im not sure if a plugin could solve this problem or if an editor would have to be designed from the ground up to allow this context coloring scheme.</p>\n",
            "last_activity_date": 1419151206,
            "question_id": 13882241,
            "score": 45,
            "tags": [
                "javascript",
                "editor",
                "syntax-highlighting",
                "sublimetext2"
            ],
            "title": "Is Crockford style Context Coloring implemented in any code editor?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Unfortunately there is no easy way to do this. So just using <code>touchstart</code> or <code>touchend</code> will leave you with other problems like someone starts scrolling when click on on a button for example. We use <a href=\"http://zeptojs.com/\" rel=\"nofollow\">zepto</a> for a while, and even with this really good framework there are some issues that came up over the time. A lot of them are <a href=\"https://github.com/madrobby/zepto/issues/search?q=tap\" rel=\"nofollow\">closed</a>, but it seems is not a field of simple solution.</p>\n\n<p>We have this solution to globally handle clicks on links:</p>\n\n<pre><code>   $(document.body).\n    on('tap', 'a',function (e) {\n      var href = this.getAttribute('href');\n      if (e.defaultPrevented || !href) { return; }\n      e.preventDefault();\n      location.href= href;\n    }).\n    on('click', 'a', function (e) {\n      e.preventDefault();\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"https://github.com/ftlabs/fastclick\" rel=\"nofollow\">This plugin -FastClick developed by Financial Times</a>  does it perfectly for you! </p>\n\n<p>Make sure though to add <code>event.stopPropagation();</code> and/or <code>event.preventDefault();</code> directly after the click function, otherwise it might run twice as it did for me, i.e.:</p>\n\n<pre><code>$(\"#buttonId\").on('click',function(event){\n    event.stopPropagation(); event.preventDefault();\n   //do your magic\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>Somehow, disabling zoom seems to disable this small delay. Makes sense, as double-tap isn't needed anymore then.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/4472891/how-can-i-disable-zoom-on-a-mobile-web-page\">How can I &quot;disable&quot; zoom on a mobile web page?</a></p>\n\n<p>But please be aware of the usability impact this will have. It may be useful for webpages designed as apps, but shouldn't be used for more general-purpose 'static' pages IMHO. I use it for a pet project that needs low latency.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>i know this is old but can't you just test to see if \"touch\" is supported in the browser? Then create a variable that's either \"touchend\" or \"click\" and use that variable as the event that gets bound to your element?</p>\n\n<pre><code>var clickOrTouch = (('ontouchend' in window)) ? 'touchend' : 'click';\n$('#element').on(clickOrTouch, function() {\n    // do something\n});\n</code></pre>\n\n<p>So that code sample checks to see if the \"touchend\" event is supported in the browser and if not then we use the \"click\" event.</p>\n\n<p>(Edit: changed \"touchend\" to \"ontouchend\")</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I've come across a <a href=\"http://eightmedia.github.io/hammer.js/\">hugely popular alternative called Hammer.js</a> <a href=\"https://github.com/EightMedia/hammer.js/\">(Github page)</a> which I think is the best approach.</p>\n\n<p>Hammer.js is a more full-featured touch library (has many swipe commands) than Fastclick.js (most upvoted answer).</p>\n\n<p><em>Beware though:</em> scrolling fast on mobile devices tends to really lock up the UI when you use either Hammer.js or Fastclick.js. This is a major problem if your site has a newsfeed or an interface where users will be scrolling a lot (would seem like most web apps). For this reason, I'm using neither of these plugins at the moment. </p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>The below link has a solution,</p>\n\n<p><a href=\"http://cubiq.org/remove-onclick-delay-on-webkit-for-iphone\" rel=\"nofollow\">http://cubiq.org/remove-onclick-delay-on-webkit-for-iphone</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Now some mobile browsers eliminate 300 ms click delay if you set the viewport. You don't need to use workarounds anymore.</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"width=device-width, user-scalable=no\"&gt;\n</code></pre>\n\n<p>This is currently <strong>supported Chrome for Android</strong> and <strong>Firefox for Android</strong></p>\n\n<p><strong>However on iOS Safari</strong>, double-tap is a scroll gesture on unzoomable pages. For that reason <strong>they can't remove the 300ms delay</strong>. If they can't remove the delay on unzoomable pages, they're unlikely to remove it on zoomable pages.</p>\n\n<p><strong>Windows Phones</strong> also retain the 300ms delay on unzoomable pages, but they don't have an alternative gesture like iOS so it's possible for them to remove this delay as Chrome has. You can remove the delay using:</p>\n\n<pre><code>html {\n-ms-touch-action: manipulation;\ntouch-action: manipulation;\n}\n</code></pre>\n\n<p>Source: <a href=\"http://updates.html5rocks.com/2013/12/300ms-tap-delay-gone-away\">http://updates.html5rocks.com/2013/12/300ms-tap-delay-gone-away</a></p>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>I've read that <a href=\"https://developers.google.com/mobile/articles/fast_buttons?hl=de-DE.\"> mobile Safari has a 300ms delay on click events</a> from the time the link/button is clicked to the time the event fires. The reason for the delay is to wait to see if the user intends to double-click, but from a UX perspective waiting 300ms is often undesirable.</p>\n\n<p><a href=\"http://www.mikedellanoce.com/2012/09/10-tips-for-getting-that-native-ios.html\">One solution</a> to eliminate this 300ms delay is to use jQuery Mobile \"tap\" handling. Unfortunately I'm not familiar with this framework and don't want to load some big framework if all I need is a line or two of code applying <code>touchend</code> in the right way.</p>\n\n<p>Like many sites, my site has many click events like this: </p>\n\n<pre><code>$(\"button.submitBtn\").on('click', function (e) {   \n  $.ajaxSubmit({... //ajax form submisssion\n});\n\n$(\"a.ajax\").on('click', function (e) {   \n  $.ajax({... //ajax page loading\n});\n\n$(\"button.modal\").on('click', function (e) {   \n      //show/hide modal dialog\n});\n</code></pre>\n\n<p>and what I'd like to do is to get rid of the 300ms delay on <strong>ALL</strong> those click events using a single code snippet like this:</p>\n\n<pre><code>$(\"a, button\").on('tap', function (e) {\n $(this).trigger('click');\n e.preventDefault();\n});\n</code></pre>\n\n<p>Is that a bad/good idea? </p>\n",
            "last_activity_date": 1410342068,
            "question_id": 12238587,
            "score": 40,
            "tags": [
                "javascript",
                "jquery",
                "jquery-mobile",
                "safari",
                "touch"
            ],
            "title": "Eliminate 300ms delay on click events in mobile Safari"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>There's a book coming soon that covers this topic...</p>\n\n<p><a href=\"http://rads.stackoverflow.com/amzn/click/0470540710\" rel=\"nofollow\">Professional XMPP with JavaScript and jQuery</a>\n<img src=\"http://ecx.images-amazon.com/images/I/51B7VAHw8OL.%5FSL500%5FAA240%5F.jpg\" alt=\"alt text\"></p>\n\n<p>But I'm assuming you don't want to wait for the book. So watch <a href=\"http://www.infoq.com/presentations/Real-Time-Web-with-XMPP\" rel=\"nofollow\">the Jack Moffitt's presentation from JSConf</a>. I watched it this morning. (Jack Moffitt is the author of the book linked to above.)</p>\n\n<p>The library involved (JavaScript and C implementations) is <a href=\"http://code.stanziq.com/strophe/\" rel=\"nofollow\">Strophe</a>.</p>\n\n<p>This is a very fruitful area of exploration, but very raw. We'll see more soon. WebSockets come with HTML5, is that right?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>We don't yet have a standard for XMPP over <a href=\"http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol\">WebSockets</a> that the servers can implement, which will be required before the client side can be tackled adequately.  </p>\n\n<p>The first step is to finish WebSocket standardization.  It looks like this may happen in an IETF HyBi working group, which at the time of writing has not yet been approved by the IESG.  There was a HyBi Birds-of-a-Feather (BoF) at the Hiroshima IETF meeting a couple of weeks ago (see the <a href=\"http://trac.tools.ietf.org/bof/trac/wiki/HyBi\">meeting materials</a>), which went pretty well.</p>\n\n<p>After WebSockets has a stable reference, and seems to be settling down, the <a href=\"http://xmpp.org/\">XSF</a> will create a <a href=\"http://xmpp.org/extensions/\">XEP</a> that binds XMPP to WebSockets, presumably with a stanza per WebSocket frame.</p>\n\n<p>Edit: Jack Moffitt has written an IETF <a href=\"http://tools.ietf.org/html/draft-moffitt-xmpp-over-websocket\">Internet-Draft</a> with a first pass at a protocol that can be used.  <strong>WARNING</strong>.  This is still likely to change drastically.  Only implement it if you're willing to rip it out completely later.  <strong>WARNING</strong>.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>There are multiple solutions (none of them are perfect)</p>\n\n<h1>1. Use Kaazing.</h1>\n\n<p>They already support it. It's open source, but they have some sort of <a href=\"http://www.kaazing.org/confluence/display/KAAZING/License\" rel=\"nofollow\">dual license</a>, so better to check whether you can use for your project or not.</p>\n\n<ul>\n<li><a href=\"http://www.kaazing.org/confluence/display/Doc/XMPP+JavaScript+How-To\" rel=\"nofollow\">XMPP JavaScript How-To</a></li>\n</ul>\n\n<h1>2. Combine js.io and APE(Ajax Push Engine)</h1>\n\n<p>APE is a Comet framework, but they recently started supporting Websockets. \nAt their website(\"APE as proxy\" section), they say it can run js.io libraries which includes xmpp.js, so combining them may work.</p>\n\n<ul>\n<li><a href=\"http://www.ape-project.org/wiki/index.php/How_to_write_an_application_with_APE\" rel=\"nofollow\">How to write an application with APE</a></li>\n</ul>\n\n<h1>3. Use Caucho</h1>\n\n<p>It is a java based framework similar to APE which provides one stop shop Comet solution, and they seem to support both XMPP and WebSockets</p>\n\n<ul>\n<li><a href=\"http://java.dzone.com/announcements/caucho-releases-resin-320\" rel=\"nofollow\">Caucho Resin</a></li>\n<li><a href=\"http://www.caucho.com/resin/examples/websocket-java/index.xtp\" rel=\"nofollow\">Caucho Websocket example with Resin</a></li>\n</ul>\n\n<h1>4. Ask Strophe team to support WebSocket.</h1>\n\n<p>Strophe does XMPP over BOSH(Bidirectional-streams Over Synchronous HTTP), but there is <a href=\"http://groups.google.com/group/strophe-dev/browse_thread/thread/c6b555ac5f84fc5f/30ba98ee90769d16\" rel=\"nofollow\">a discussion about supporting WebSockets</a>, too.</p>\n\n<p>Jack Moffitt (the core developer and the author of the book mentioned above) seems interested in WebSockets, but we need to provide more strong reasoning about why they need to support WebSocket over BOSH. If you have good answers, please join the tread.</p>\n\n<p>I just tried their <a href=\"http://gist.github.com/272956\" rel=\"nofollow\">xmpp,bosh,strophe echobot example</a>, which worked nicely. You might also want to try it to see if it fits your requirement or not.</p>\n\n<p>For #2 and #3, they say that they both support xmpp and websockets, but not sure if they work together.</p>\n\n<p>What kind of application you are thinking about using XMPP &amp; WebSockets for? </p>\n\n<p>The below are suggestions for alternatives.</p>\n\n<ul>\n<li>If you want the presence, chat, chat room equivalent functionality, you could make Wave Gadget or Robot, then expose to outside using <a href=\"http://code.google.com/apis/wave/guide.html\" rel=\"nofollow\">Wave Embed API</a>(dead link, kept for historic purposes). Wave is actually built on top of XMPP.</li>\n<li>If you are simply looking for very low latency messaging capability, you could <a href=\"http://blog.0x82.com/2009/12/28/twitter-amqp-websocket-example-no-polling\" rel=\"nofollow\">try AMQP</a>.</li>\n<li>If you are looking for much simpler message streaming, you can just <a href=\"http://blog.new-bamboo.co.uk/2009/12/14/pushing-the-boundary-of-real-time-web-with-twitter-and-xfactor\" rel=\"nofollow\">pipe in/out unix file as I demonstrated here</a>.</li>\n</ul>\n\n<p>I got most of the information above when I wrote <a href=\"http://blog.new-bamboo.co.uk/2009/12/30/brain-dump-of-real-time-web-rtw-and-websocket\" rel=\"nofollow\">this blog post</a>. \nIf you check the comment section time to time, I will post update once I find other solutions.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>I am not sure why you are asking specifically for a WebSocket solution because the XMPP servers would have to support this first.</p>\n\n<p>However there are several XMPP JavaScript libraries available (as far as I see they all use the BOSH method):</p>\n\n<ul>\n<li>Dojo toolkit has an <a href=\"http://dojotoolkit.org/api/1.7/dojox.xmpp\" rel=\"nofollow\">XMPP extension library</a></li>\n<li><a href=\"https://github.com/gameclosure/js.io\" rel=\"nofollow\">JS.io</a></li>\n<li><a href=\"http://blog.jwchat.org/jsjac/\" rel=\"nofollow\">JSJac</a></li>\n<li><a href=\"http://strophe.im/\" rel=\"nofollow\">Strophe.js</a></li>\n<li><a href=\"http://xmpp4js.sourceforge.net/\" rel=\"nofollow\">xmpp4js</a></li>\n<li><a href=\"http://ivan.vucica.net/zxmpp/\" rel=\"nofollow\">Z-XMPP</a></li>\n</ul>\n\n<p>These examples were taken from the <a href=\"http://xmpp.org/software/libraries.shtml\" rel=\"nofollow\">XMPP Website</a> which lists open source implementations of the XMPP protocol.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm not sure JS on browser side can handle websocket protocol alone as it mostly rely on browser API. Few browser support websocket yet: Chrome, Safari5, maybe Firefox4. There are many workarounds based on flash/as3 (then your js communicates with flash code) the the main limitation is that flash does not support secure connection (too bad).</p>\n\n<p>BWT, you can check <a href=\"http://github.com/Treegger/websocket-client\" rel=\"nofollow\">this websocket implem</a> they provide opensource Java websocket client lib and seems to deal with xmpp stuff and if you browse the repositories you might find basic as3 websocket implementation.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://github.com/sstrigler/JSJaC/\" rel=\"nofollow\">JSJaC</a> implements <a href=\"http://tools.ietf.org/html/draft-moffitt-xmpp-over-websocket-01\" rel=\"nofollow\">XMPP Over Websockets</a>. It's known to work with several backend implementations:</p>\n\n<ul>\n<li>node-xmpp-bosh -\nsupports RFC6455 and works with no problems since 0.6.1, it also\ntransparently uses STARTTLS if necessary</li>\n<li>wxg - supports RFC6455 and works\nwith no problems, but cannot connect to servers requiring\nSTARTTLS (original wxg has some\nissues, that were fixed by Gordin).</li>\n<li>ejabberd-websockets - does not\nsupport RFC6455 hence it does not work, adapting it to support\nRFC6455 should be quite easy for anyone knowing Erlang (some work\nin progress can be found on github)</li>\n<li>Openfire -\nunofficial plugin is available, but it lacks support\nfor RFC6455 hence it does not work</li>\n<li>Apache Vysper - does\nnot support RFC6455 hence does not work</li>\n<li>Tigase - no known work on WebSocket\nsupport</li>\n<li>MongooseIM - a fork of ejabberd\nwith support for XMPP over Websockets.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Has anyone written an open source XMPP library that uses WebSockets and is meant to be run by a browser?</p>\n",
            "last_activity_date": 1377635910,
            "question_id": 1850162,
            "score": 33,
            "tags": [
                "javascript",
                "xmpp"
            ],
            "title": "Is there an open source WebSockets (JavaScript) XMPP library?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Here are a few jQuery plugins that do what you want to do:</p>\n\n<ul>\n<li><a href=\"http://plugins.jquery.com/bootstrap.TagManager/\">bootstrap.TagManager</a> (<a href=\"https://github.com/max-favilli/tagmanager\">GitHub</a>, <a href=\"http://welldonethings.com/tags/manager\">Demo</a>)</li>\n<li><a href=\"http://plugins.jquery.com/bootstrap-tagsinput/\">Bootstrap Tags Input</a> (<a href=\"http://github.com/TimSchlechter/bootstrap-tagsinput\">GitHub</a>, <a href=\"http://timschlechter.github.io/bootstrap-tagsinput/examples/\">Demo</a>)</li>\n<li><a href=\"http://plugins.jquery.com/TagTagger/\">TagTagger.js</a> (<a href=\"http://github.com/exexzian/TagTagger.js\">GitHub</a>, <a href=\"http://exexzian.github.io/TagTagger.js/demo/taggerDemo.html\">Demo</a>)</li>\n<li><a href=\"http://plugins.jquery.com/tagtacular/\">Tagtacular</a> (<a href=\"http://github.com/burnsbert/tagtacular\">GitHub</a>, <a href=\"http://gototech.com/tagtacular\">Demo</a>)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Autocomplete + tags => <a href=\"http://bassistance.de/jquery-plugins/jquery-plugin-autocomplete/\" rel=\"nofollow\">http://bassistance.de/jquery-plugins/jquery-plugin-autocomplete/</a> </p>\n\n<p><a href=\"http://jquery.bassistance.de/autocomplete/demo/\" rel=\"nofollow\">demo</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There are <strong>plenty</strong>:</p>\n\n<ol>\n<li><a href=\"http://code.drewwilson.com/entry/autosuggest-jquery-plugin\" rel=\"nofollow\">http://code.drewwilson.com/entry/autosuggest-jquery-plugin</a> (also see: <a href=\"https://github.com/drewwilson/AutoSuggest\" rel=\"nofollow\">github</a>)</li>\n<li><a href=\"http://bassistance.de/jquery-plugins/jquery-plugin-autocomplete/\" rel=\"nofollow\">http://bassistance.de/jquery-plugins/jquery-plugin-autocomplete/</a></li>\n<li><strike><a href=\"http://plugins.jquery.com/project/tag-it\" rel=\"nofollow\">http://plugins.jquery.com/project/tag-it</a></strike> <strong>broken link</strong> <a href=\"http://aehlke.github.io/tag-it/\" rel=\"nofollow\">github link</a></li>\n<li><strike><a href=\"http://plugins.jquery.com/project/jquerytag\" rel=\"nofollow\">http://plugins.jquery.com/project/jquerytag</a></strike> <strong>broken link</strong></li>\n</ol>\n\n<p><strong>If you are looking for a styled and ready solution, I'd recommend the first option.</strong></p>\n\n<p>If you are looking for a more flexible and complete solution, the second solution is probably a good fit.</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>Here is another jQuery plugin which does the same:\n<a href=\"http://textextjs.com/\" rel=\"nofollow\">http://textextjs.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm looking for a plugin or simple script that behaves like <a href=\"http://stackoverflow.com\">Stack Overflow</a>'s <em>tags</em> input interface. </p>\n\n<p>In particular I need to separate the single words (tags) that people write. </p>\n",
            "last_activity_date": 1410458417,
            "question_id": 5031162,
            "score": 27,
            "tags": [
                "javascript",
                "jquery",
                "jquery-plugins",
                "autocomplete"
            ],
            "title": "plugin to separate tags (like the stackoverflow&#39;s input tags interface)"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>When you <a href=\"http://bost.ocks.org/mike/join/\">join data</a> to a selection via <a href=\"https://github.com/mbostock/d3/wiki/Selections#wiki-data\">selection.data</a>, the number of elements in your data array should match the number of elements in the selection. Your data array has two elements (for Jim and Ray), but the selection you are binding it to only has one SVG element. Are you trying to create multiple SVG elements, or put the score rects for both Jim and Ray in the same SVG element?</p>\n\n<p>If you want to bind both data elements to the singular SVG element, you can wrap the data in another array:</p>\n\n<pre><code>var chart = d3.select(\"#charts\").append(\"svg\")\n    .data([data])\n    .attr(\"class\", \"chart\")\n    \u2026\n</code></pre>\n\n<p>Alternatively, use <a href=\"https://github.com/mbostock/d3/wiki/Selections#wiki-datum\">selection.datum</a>, which binds data directly without computing a join:</p>\n\n<pre><code>var chart = d3.select(\"#charts\").append(\"svg\")\n    .datum(data)\n    .attr(\"class\", \"chart\")\n    \u2026\n</code></pre>\n\n<p>If you want to create multiple SVG elements for each person, then you'll need a data-join:</p>\n\n<pre><code>var chart = d3.select(\"#charts\").selectAll(\"svg\")\n    .data(data)\n  .enter().append(\"svg\")\n    .attr(\"class\", \"chart\")\n    \u2026\n</code></pre>\n\n<p>A second problem is that you shouldn't use <a href=\"https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_values\">d3.values</a> with an array; that function is for extracting the values of an object. Assuming you wanted one SVG element per person (so, two in this example), then the data for the rect is simply that person's associated scores:</p>\n\n<pre><code>var rect = chart.selectAll(\"rect\")\n    .data(function(d) { return d.scores; })\n  .enter().append(\"rect\")\n    \u2026\n</code></pre>\n\n<p>If you haven't already, I recommend reading these tutorials:</p>\n\n<ul>\n<li><a href=\"http://bost.ocks.org/mike/join/\">Thinking with Joins</a></li>\n<li><a href=\"http://bost.ocks.org/mike/nest/\">Nested Selections</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 42
                }
            ],
            "body": "<p>I'm new to D3, and spent already a few hours to find out anything about dealing with structured data, but without positive result.\nI want to create a bar chart using data structure below.\nBars are drawed (horizontally), but only for user \"jim\".</p>\n\n<pre><code>var data = [{\"user\":\"jim\",\"scores\":[40,20,30,24,18,40]},\n            {\"user\":\"ray\",\"scores\":[24,20,30,41,12,34]}];\n\n\nvar chart = d3.select(\"div#charts\").append(\"svg\")                                   \n              .data(data)\n              .attr(\"class\",\"chart\")\n              .attr(\"width\",800)\n              .attr(\"height\",350);\n\n\nchart.selectAll(\"rect\")    \n    .data(function(d){return d3.values(d.scores);})    \n    .enter().append(\"rect\")\n    .attr(\"y\", function(d,i){return i * 20;})\n    .attr(\"width\",function(d){return d;})\n    .attr(\"height\", 20);\n</code></pre>\n\n<p>Could anyone point what I made wrong?</p>\n\n<p>Thanks,\nRay</p>\n",
            "last_activity_date": 1386118080,
            "question_id": 10086167,
            "score": 18,
            "tags": [
                "javascript",
                "json",
                "svg",
                "d3.js"
            ],
            "title": "D3 - how to deal with JSON data structures?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Not sure what overall objective is but one way is to create 2 attributes, one for the target object and the other for the property of that object:</p>\n\n<pre><code>&lt;button ng-update1  obj=\"inputdata\" prop=\"title\"&gt;\n</code></pre>\n\n<pre><code>app.directive('ngUpdate1', function() {\n    return function(scope, element, attrs) {\n        element.bind('click', function() {\n            scope.$apply(function() {                \n                scope[ attrs.obj ][attrs.prop] = \"Button 1\";               \n\n            });\n        });\n    };\n});\n</code></pre>\n\n<p>DEMO:<a href=\"http://jsfiddle.net/CSbRB/9/\" rel=\"nofollow\">http://jsfiddle.net/CSbRB/9/</a></p>\n\n<p>Alternatively using existing format you could <code>split()</code> value of your current <code>ng-update1</code> attribute and use result array for object and property in notation</p>\n\n<pre><code> element.bind('click', function() {\n           var target=attrs.ngUpdate1.split('.');\n            scope.$apply(function() {                \n                scope[ target[0] ][target[1]] = \"Button 1\";               \n\n            });\n        });\n</code></pre>\n\n<p>DEMO with both approaches: <a href=\"http://jsfiddle.net/CSbRB/10/\" rel=\"nofollow\">http://jsfiddle.net/CSbRB/10/</a></p>\n\n<p>One more approach where you create an isolated scope in directive and can pass in the reference to <code>inputdata</code> object and pull property name from attribute(same markup as second version):</p>\n\n<pre><code>app.directive('ngUpdate3', function () {\n    return {\n        scope: {\n           targetObject: '=obj'\n        },\n        link: function (scope, element, attrs) {\n            element.bind('click', function () {  \n               scope.$apply(function () {\n                    scope.targetObject[attrs.prop]='Button 3';\n\n                });\n            });\n        }\n    }\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/CSbRB/11/\" rel=\"nofollow\">http://jsfiddle.net/CSbRB/11/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://docs.angularjs.org/api/ng.%24parse\">$parse</a> will solve your problem.</p>\n\n<pre><code>&lt;button ng-update1=\"inputdata.title\"&gt;\n</code></pre>\n\n<pre class=\"lang-js prettyprint-override\"><code>app.directive('ngUpdate1', function($parse) {\n    return function(scope, element, attrs) {\n        var model = $parse(attrs.ngUpdate1);\n        console.log(model(scope));  // logs \"test\"\n        element.bind('click', function() {\n           model.assign(scope, \"Button 1\");\n           scope.$apply();\n        });\n    };\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mrajcok/J4ccY/\">Fiddle</a></p>\n\n<p>Whenever a directive does not use an isolate scope and you specify a scope property using an attribute, and you want to modify the value, use <code>$parse</code>.   </p>\n\n<p>If you don't need to modify the value, you can use <code>$eval</code> instead:</p>\n\n<pre><code>console.log(scope.$eval(attrs.ngUpdate1));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                }
            ],
            "body": "<p>I have have a directive inside an ng-repeater that should set a scope property.\nPlease see the fiddle here: <a href=\"http://jsfiddle.net/paos/CSbRB/\">http://jsfiddle.net/paos/CSbRB/</a></p>\n\n<p>The problem is that the scope property is given as an attribute value like this:</p>\n\n<pre><code>&lt;button ng-update1=\"inputdata.title\"&gt;click me&lt;/button&gt;\n</code></pre>\n\n<p>The directive is supposed to set the scope property inputdata.title to some string. This does not work:</p>\n\n<pre><code>app.directive('ngUpdate1', function() {\n    return function(scope, element, attrs) {\n        element.bind('click', function() {\n            scope.$apply(function() {\n                scope[ attrs.ngUpdate1 ] = \"Button 1\";\n            });\n        });\n    };\n});\n</code></pre>\n\n<p>However, assigning directly works:</p>\n\n<pre><code>scope[\"inputdata\"][\"title\"] = \"Button 1\";\n</code></pre>\n\n<p>Can you please tell me how I can set a scope property with . notation in its name from a directive?</p>\n\n<p>PS: The reason the fiddle is using a repeater is because it makes the directives be in child scopes. When they are in a child scope, you can't write to scope properties that are primitives. That's why I need an object property with \".\" in the name. See the long explanation here: <a href=\"http://stackoverflow.com/questions/14049480/what-are-the-nuances-of-scope-prototypal-prototypical-inheritance-in-angularjs/14049482#14049482\">What are the nuances of scope prototypal / prototypical inheritance in AngularJS?</a></p>\n\n<p>Thank you</p>\n",
            "last_activity_date": 1373641780,
            "question_id": 15721298,
            "score": 15,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "How to set angular controller object property value from directive in child scope"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Possibly the best approach would be to calculate where these points are. </p>\n\n<p>As a basic algorithm you could iterate over all the points in the Polyline, and calculate the cumulative distance - if the next segment puts you over your distance, you can interpolate the point where the distance has been reached - then simply add a point of interest to your map for that.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Having <a href=\"http://stackoverflow.com/questions/2094268/moving-a-point-along-a-path-in-sql-server-2008\">answered a similar problem</a> a couple of months ago on how to tackle this on the server-side in SQL Server 2008, I am porting the same algorithm to JavaScript using the <a href=\"http://code.google.com/apis/maps/documentation/javascript/v2/\" rel=\"nofollow\">Google Maps API v2</a>.</p>\n\n<p>For the sake of this example, let's use a simple 4-point polyline, with a total length of circa 8,800 meters. The snippet below will define this polyline and will render it on the map:</p>\n\n<pre><code>var map = new GMap2(document.getElementById('map_canvas'));\n\nvar points = [\n   new GLatLng(47.656, -122.360),\n   new GLatLng(47.656, -122.343),\n   new GLatLng(47.690, -122.310),\n   new GLatLng(47.690, -122.270)\n];\n\nvar polyline = new GPolyline(points, '#f00', 6);\n\nmap.setCenter(new GLatLng(47.676, -122.343), 12);\nmap.addOverlay(polyline);\n</code></pre>\n\n<p>Now before we approach the actual algorithm, we will need a function that returns the destination point when given a start point, an end point, and the distance to travel along that line, Luckily, there are a few handy JavaScript implementations by Chris Veness at <a href=\"http://www.movable-type.co.uk/scripts/latlong.html\" rel=\"nofollow\">Calculate distance, bearing and more between Latitude/Longitude points</a>. </p>\n\n<p>In particular I have adapted the following two methods from the above source to work with Google's <code>GLatLng</code> class:</p>\n\n<ul>\n<li><a href=\"http://www.movable-type.co.uk/scripts/latlong.html#destPoint\" rel=\"nofollow\">Destination point given distance and bearing from start point</a></li>\n<li><a href=\"http://www.movable-type.co.uk/scripts/latlong.html#bearing\" rel=\"nofollow\">Bearing</a></li>\n</ul>\n\n<p>These were used to extend Google's <code>GLatLng</code> class with a method <code>moveTowards()</code>, which when given another point and a distance in meters, it will return another <code>GLatLng</code> along that line when the distance is travelled from the original point towards the point passed as a parameter.</p>\n\n<pre><code>GLatLng.prototype.moveTowards = function(point, distance) {   \n   var lat1 = this.lat().toRad();\n   var lon1 = this.lng().toRad();\n   var lat2 = point.lat().toRad();\n   var lon2 = point.lng().toRad();         \n   var dLon = (point.lng() - this.lng()).toRad();\n\n   // Find the bearing from this point to the next.\n   var brng = Math.atan2(Math.sin(dLon) * Math.cos(lat2),\n                         Math.cos(lat1) * Math.sin(lat2) -\n                         Math.sin(lat1) * Math.cos(lat2) * \n                         Math.cos(dLon));\n\n   var angDist = distance / 6371000;  // Earth's radius.\n\n   // Calculate the destination point, given the source and bearing.\n   lat2 = Math.asin(Math.sin(lat1) * Math.cos(angDist) + \n                    Math.cos(lat1) * Math.sin(angDist) * \n                    Math.cos(brng));\n\n   lon2 = lon1 + Math.atan2(Math.sin(brng) * Math.sin(angDist) *\n                            Math.cos(lat1), \n                            Math.cos(angDist) - Math.sin(lat1) *\n                            Math.sin(lat2));\n\n   if (isNaN(lat2) || isNaN(lon2)) return null;\n\n   return new GLatLng(lat2.toDeg(), lon2.toDeg());\n}\n</code></pre>\n\n<p>Having this method, we can now tackle the problem as follows:</p>\n\n<ol>\n<li>Iterate through each point of the path.</li>\n<li>Find the distance between the current point in the iteration to the next point.</li>\n<li><p>If the distance in point 2 is greater the distance we need to travel on the path:</p>\n\n<p>...then the destination point is between this point and the next. Simply apply the <code>moveTowards()</code> method to the current point, passing the next point and the distance to travel. Return the result and break the iteration.</p>\n\n<p>Else:</p>\n\n<p>...the destination point is further in the path from the next point in the iteration. We need to subtract the distance between this point and the next point from the total distance to travel along the path. Continue through the iteration with the modified distance.</p></li>\n</ol>\n\n<p>You may have noticed that we can easily implement the above recursively, instead of iteratively. So let's do it:</p>\n\n<pre><code>function moveAlongPath(points, distance, index) {\n   index = index || 0;  // Set index to 0 by default.\n\n   if (index &lt; points.length) {\n      // There is still at least one point further from this point.\n\n      // Construct a GPolyline to use its getLength() method.\n      var polyline = new GPolyline([points[index], points[index + 1]]);\n\n      // Get the distance from this point to the next point in the polyline.\n      var distanceToNextPoint = polyline.getLength();\n\n      if (distance &lt;= distanceToNextPoint) {\n         // distanceToNextPoint is within this point and the next. \n         // Return the destination point with moveTowards().\n         return points[index].moveTowards(points[index + 1], distance);\n      }\n      else {\n         // The destination is further from the next point. Subtract\n         // distanceToNextPoint from distance and continue recursively.\n         return moveAlongPath(points,\n                              distance - distanceToNextPoint,\n                              index + 1);\n      }\n   }\n   else {\n      // There are no further points. The distance exceeds the length  \n      // of the full path. Return null.\n      return null;\n   }  \n}\n</code></pre>\n\n<p>With the above method, if we define an array of <code>GLatLng</code> points, and we invoke our <code>moveAlongPath()</code> function with this array of points and with a distance of 2,500 meters, it will return a <code>GLatLng</code> on that path at 2.5km from the first point.</p>\n\n<pre><code>var points = [\n   new GLatLng(47.656, -122.360),\n   new GLatLng(47.656, -122.343),\n   new GLatLng(47.690, -122.310),\n   new GLatLng(47.690, -122.270)\n];\n\nvar destinationPointOnPath = moveAlongPath(points, 2500);\n\n// destinationPointOnPath will be a GLatLng on the path \n// at 2.5km from the start.\n</code></pre>\n\n<p>Therefore all we need to do is to call <code>moveAlongPath()</code> for each check point we need on the path. If you need three markers at 1km, 5km and 10km, you can simply do:</p>\n\n<pre><code>map.addOverlay(new GMarker(moveAlongPath(points, 1000)));\nmap.addOverlay(new GMarker(moveAlongPath(points, 5000)));\nmap.addOverlay(new GMarker(moveAlongPath(points, 10000)));\n</code></pre>\n\n<p>Note however that <code>moveAlongPath()</code> may return <code>null</code> if we request a check point further from the total length of the path, so it will be wiser to check for the return value before passing it to <code>new GMarker()</code>.</p>\n\n<p>We can put this together for the full implementation. In this example we are dropping a marker every 1,000 meters along the 8.8km path defined earlier:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt; \n&lt;head&gt; \n   &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/&gt; \n   &lt;title&gt;Google Maps - Moving point along a path&lt;/title&gt; \n   &lt;script src=\"http://maps.google.com/maps?file=api&amp;v=2&amp;sensor=false\"\n           type=\"text/javascript\"&gt;&lt;/script&gt; \n&lt;/head&gt; \n&lt;body onunload=\"GUnload()\"&gt; \n   &lt;div id=\"map_canvas\" style=\"width: 500px; height: 300px;\"&gt;&lt;/div&gt;\n\n   &lt;script type=\"text/javascript\"&gt; \n\n   Number.prototype.toRad = function() {\n      return this * Math.PI / 180;\n   }\n\n   Number.prototype.toDeg = function() {\n      return this * 180 / Math.PI;\n   }\n\n   GLatLng.prototype.moveTowards = function(point, distance) {   \n      var lat1 = this.lat().toRad();\n      var lon1 = this.lng().toRad();\n      var lat2 = point.lat().toRad();\n      var lon2 = point.lng().toRad();         \n      var dLon = (point.lng() - this.lng()).toRad();\n\n      // Find the bearing from this point to the next.\n      var brng = Math.atan2(Math.sin(dLon) * Math.cos(lat2),\n                            Math.cos(lat1) * Math.sin(lat2) -\n                            Math.sin(lat1) * Math.cos(lat2) * \n                            Math.cos(dLon));\n\n      var angDist = distance / 6371000;  // Earth's radius.\n\n      // Calculate the destination point, given the source and bearing.\n      lat2 = Math.asin(Math.sin(lat1) * Math.cos(angDist) + \n                       Math.cos(lat1) * Math.sin(angDist) * \n                       Math.cos(brng));\n\n      lon2 = lon1 + Math.atan2(Math.sin(brng) * Math.sin(angDist) *\n                               Math.cos(lat1), \n                               Math.cos(angDist) - Math.sin(lat1) *\n                               Math.sin(lat2));\n\n      if (isNaN(lat2) || isNaN(lon2)) return null;\n\n      return new GLatLng(lat2.toDeg(), lon2.toDeg());\n   }\n\n   function moveAlongPath(points, distance, index) {        \n      index = index || 0;  // Set index to 0 by default.\n\n      if (index &lt; points.length) {\n         // There is still at least one point further from this point.\n\n         // Construct a GPolyline to use the getLength() method.\n         var polyline = new GPolyline([points[index], points[index + 1]]);\n\n         // Get the distance from this point to the next point in the polyline.\n         var distanceToNextPoint = polyline.getLength();\n\n         if (distance &lt;= distanceToNextPoint) {\n            // distanceToNextPoint is within this point and the next. \n            // Return the destination point with moveTowards().\n            return points[index].moveTowards(points[index + 1], distance);\n         }\n         else {\n            // The destination is further from the next point. Subtract\n            // distanceToNextPoint from distance and continue recursively.\n            return moveAlongPath(points,\n                                 distance - distanceToNextPoint,\n                                 index + 1);\n         }\n      }\n      else {\n         // There are no further points. The distance exceeds the length  \n         // of the full path. Return null.\n         return null;\n      }  \n   }\n\n   var map = new GMap2(document.getElementById('map_canvas'));\n\n   var points = [\n      new GLatLng(47.656, -122.360),\n      new GLatLng(47.656, -122.343),\n      new GLatLng(47.690, -122.310),\n      new GLatLng(47.690, -122.270)\n   ];\n\n   var polyline = new GPolyline(points, '#f00', 6);\n\n   var nextMarkerAt = 0;     // Counter for the marker checkpoints.\n   var nextPoint = null;     // The point where to place the next marker.\n\n   map.setCenter(new GLatLng(47.676, -122.343), 12);\n\n   // Draw the path on the map.\n   map.addOverlay(polyline);\n\n   // Draw the checkpoint markers every 1000 meters.\n   while (true) {\n      // Call moveAlongPath which will return the GLatLng with the next\n      // marker on the path.\n      nextPoint = moveAlongPath(points, nextMarkerAt);\n\n      if (nextPoint) {\n         // Draw the marker on the map.\n         map.addOverlay(new GMarker(nextPoint));\n\n         // Add +1000 meters for the next checkpoint.\n         nextMarkerAt += 1000;    \n      }\n      else {\n         // moveAlongPath returned null, so there are no more check points.\n         break;\n      }            \n   }\n   &lt;/script&gt;\n&lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n\n<p>Screenshot of the above example, showing a marker every 1,000 meters:</p>\n\n<p><img src=\"http://i.imgur.com/LEMZ02U.png\" alt=\"Google Maps - Move Point Along a Path\"></p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<blockquote>\n  <p>I found out why I had the\n  inexactitude. Actually in V3 of GMap,\n  we don't have the function \"getLength\"\n  anymore that return the length in Km\n  or Meters of the polyLine.</p>\n</blockquote>\n\n<p>here's the prototypes for the required function - hope this helps any further:</p>\n\n<pre><code>google.maps.Polygon.prototype.Distance = function() {\n   var dist = 0;\n   for (var i=1; i &lt; this.getPath().getLength(); i++) {\n      dist += this.getPath().getAt(i).distanceFrom(this.getPath().getAt(i-1));\n   }\n   return dist;\n}\n\ngoogle.maps.LatLng.prototype.distanceFrom = function(newLatLng) {\n    //var R = 6371; // km (change this constant to get miles)\n    var R = 6378100; // meters\n    var lat1 = this.lat();\n    var lon1 = this.lng();\n    var lat2 = newLatLng.lat();\n    var lon2 = newLatLng.lng();\n    var dLat = (lat2-lat1) * Math.PI / 180;\n    var dLon = (lon2-lon1) * Math.PI / 180;\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(lat1 * Math.PI / 180 ) * Math.cos(lat2 * Math.PI / 180 ) *\n      Math.sin(dLon/2) * Math.sin(dLon/2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    var d = R * c;\n    return d;\n}\n</code></pre>\n\n<p><a href=\"http://econym.org.uk/gmap/\" rel=\"nofollow\">source</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am trying to create a Google Map where the user can plot the route he walked/ran/bicycled and see how long he ran. The <code>GPolyline</code> class with it\u2019s <code>getLength()</code> method is very helpful in this regard (at least for Google Maps API V2), but I wanted to add markers based on distance, for example a marker for 1 km, 5 km, 10 km, etc., but it seems that there is no obvious way to find a point on a polyline based on how far along the line it is. Any suggestions?</p>\n",
            "last_activity_date": 1406198938,
            "question_id": 2698112,
            "score": 10,
            "tags": [
                "javascript",
                "google-maps",
                "distance",
                "intervals",
                "polyline"
            ],
            "title": "How to add markers on Google Maps polylines based on distance along the line?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Use the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Date\">Date</a> object's <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Date/getTime\"><code>getTime()</code></a> method, which returns the number of milliseconds since 1 January 1970 00:00:00 (<a href=\"http://en.wikipedia.org/wiki/Unix_time\">epoch time</a>):</p>\n\n<pre><code>var date = new Date();\nvar copiedDate = new Date(date.getTime());\n</code></pre>\n\n<p>In Safari 4, you can also write:</p>\n\n<pre><code>var date = new Date();\nvar copiedDate = new Date(date);\n</code></pre>\n\n<p>...but I'm not sure whether this works in other browsers. (It seems to work in IE8).</p>\n",
                    "is_accepted": true,
                    "score": 243
                },
                {
                    "body": "<p>BAD (original):   </p>\n\n<pre><code>var myDate = new Date();\nvar myDate2 = new Date();\nmyDate2.setDate(myDate.getDate());\n</code></pre>\n\n<p>GOOD (new, edited):</p>\n\n<pre><code>var myDate = new Date();\nvar myDate2 = new Date(myDate.getTime());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This is the cleanest approach</p>\n\n<pre><code>var dat = new Date() \n\nvar copyOf = new Date(dat.valueOf())\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>you can use universal method:</p>\n\n<ol>\n<li><p>Date</p>\n\n<pre><code>var new_date = $.extend(new Date(), current_date);\n</code></pre></li>\n<li><p>Object</p>\n\n<pre><code>var new_object = $.extend({}, current_object);\n</code></pre></li>\n</ol>\n\n<p>and others...</p>\n",
                    "is_accepted": false,
                    "score": -6
                },
                {
                    "body": "<p>Simplified version:</p>\n\n<pre><code>Date.prototype.clone = function () {\n    return new Date(this.getTime());\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I found out that this simple assignmnent also works:</p>\n\n<pre><code>dateOriginal = new Date();\ncloneDate = new Date(dateOriginal);\n</code></pre>\n\n<p>But I don't know how \"safe\" it is. Successfully tested in IE7 and Chrome 19.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>var orig = new Date();\nvar copy = new Date(+orig);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Assigning a Date variable to another one will copy the reference to the SAME value. This means that changing one will change the other. How can I actually clone or copy the value?</p>\n",
            "last_activity_date": 1392548463,
            "question_id": 1090815,
            "score": 161,
            "tags": [
                "javascript"
            ],
            "title": "How to clone a Date object in JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Here you go:</p>\n\n<pre><code>$.inArray('specialword', arr)\n</code></pre>\n\n<p>This function returns a positive integer (the array index of the given value), or <code>-1</code> if the given value was not found in the array.</p>\n\n<p><strong>Live demo:</strong> <a href=\"http://jsfiddle.net/simevidas/5Gdfc/\" rel=\"nofollow\">http://jsfiddle.net/simevidas/5Gdfc/</a></p>\n\n<p>You probably want to use this like so:</p>\n\n<pre><code>if ( $.inArray('specialword', arr) &gt; -1 ) {\n    // the value is in the array\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jQuery offers <a href=\"http://api.jquery.com/jQuery.inArray\"><code>$.inArray</code></a>:</p>\n\n<pre><code>var found = $.inArray('specialword', categories) &gt; -1;\n</code></pre>\n\n<p>Note that inArray returns the index of the element found, so <code>0</code> indicates the element is the first in the array. <code>-1</code> indicates the element was not found.</p>\n\n<p><a href=\"http://jsfiddle.net/BWWRh/\">Example</a>.</p>\n\n<hr>\n\n<p><em>Edit 3.5 years later</em></p>\n\n<p><code>$.indexOf</code> is effectively a wrapper for <code>Array.prototype.indexOf</code> in browsers that support it (almost all of them these days), while providing a shim in those that don't. It is essentially equivalent to adding a shim to <code>Array.prototype</code>, which is a more idiomatic/JSish way of doing things. MDN provides <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf#Polyfill\">such code</a>. These days I would take this option, rather than using the jQuery wrapper.</p>\n",
                    "is_accepted": true,
                    "score": 129
                },
                {
                    "body": "<p>Just use a for loop</p>\n\n<pre><code>var found = false;\nfor (i = 0; i &lt; categories.length &amp;&amp; !found; i++) {\n  if (categories[i] === \"specialword\") {\n    found = true;\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I don't like <code>$.inArray(..)</code>, it's the kind of ugly, jQuery-ish solution that most sane people wouldn't tolerate. Here's a snippet which adds a simple <code>contains(str)</code> method to your arsenal:</p>\n\n<pre><code>$.fn.contains = function (target) {\n  var result = null;\n  $(this).each(function (index, item) {\n    if (item === target) {\n      result = item;\n    }\n  });\n  return result ? result : false;\n}\n</code></pre>\n\n<p>Similarly, you could wrap <code>$.inArray</code> in an extension:</p>\n\n<pre><code>$.fn.contains = function (target) {\n  return ($.inArray(target, this) &gt; -1);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You really don't need jQuery for this!</p>\n\n<pre><code>var myarr = [\"I\", \"like\", \"turtles\"];\nvar arraycontainsturtles = (myarr.indexOf(\"turtles\") &gt; -1);\n</code></pre>\n\n<p>or</p>\n\n<pre><code>function arrayContains(needle, arrhaystack)\n{\n    return (arrhaystack.indexOf(needle) &gt; -1);\n}\n</code></pre>\n\n<p>It's worth noting that jQuery's indexOf(...) function will work in IE &lt; 9; <code>.indexOf(..)</code> is not supported by old versions of IE. Huh.</p>\n",
                    "is_accepted": false,
                    "score": 169
                }
            ],
            "body": "<p>Can someone tell me how to detect if <code>\"specialword\"</code> appears in an array? Example:</p>\n\n<pre><code>categories: [\n    \"specialword\"\n    \"word1\"\n    \"word2\"\n]\n</code></pre>\n",
            "last_activity_date": 1413879943,
            "question_id": 6116474,
            "score": 80,
            "tags": [
                "javascript",
                "jquery",
                "arrays"
            ],
            "title": "How to find if an array contains a specific string in JavaScript/jQuery?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>if(!my_string){ \n// stuff \n}\n</code></pre>\n\n<p>and</p>\n\n<pre><code>if(my_string !== \"\")\n</code></pre>\n\n<p>if you want to accept null but reject empty</p>\n\n<p>EDIT: woops, forgot your condition is if it IS empty</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>if (!a) {\n  // is emtpy\n}\n</code></pre>\n\n<p>To ignore white space:</p>\n\n<pre><code>if (!a.trim()) {\n    // is empty or whitespace\n}\n</code></pre>\n\n<p>If you need legacy support (IE8-) for <code>trim()</code>, use <a href=\"http://api.jquery.com/jquery.trim/\"><code>$.trim</code></a> or a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Compatibility\">polyfill</a>.</p>\n",
                    "is_accepted": true,
                    "score": 184
                },
                {
                    "body": "<p>The link you gave seems to be attempting something different to the test you are trying to avoid repeating.</p>\n\n<pre><code>if (a == null || a=='')\n</code></pre>\n\n<p>tests if the string is an empty string or null. The article you linked to tests if the string consists entirely of whitespace (or is empty).</p>\n\n<p>The test you described can be replaced by:</p>\n\n<pre><code>if (!a)\n</code></pre>\n\n<p>Because in javascript, an empty string, and null, both evaluate to false in a boolean context.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Try executing this in your browser console or in a node.js repl.</p>\n\n<pre><code>var string = ' ';\nstring ? true : false;\n//-&gt; true\n\nstring = '';\nstring ? true : false;\n//-&gt; false\n</code></pre>\n\n<p>Therefore, a simple branching construct will suffice for the test.</p>\n\n<pre><code>if(string) {\n    // string is not empty\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Since you can also input numbers as well as fixed type strings, the answer should actually be:</p>\n\n<pre><code>function isBlank(value) {\n  return $.trim(value);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is the best way to test for an empty string with jquery-out-of-the-box, i.e. without plugins? I tried this: \n<a href=\"http://zipalong.com/blog/?p=287\">http://zipalong.com/blog/?p=287</a> </p>\n\n<p>But it did't work at least out-of-the-box. It would be nice to use something that's builtin.</p>\n\n<p>I wouldn't like to repeat </p>\n\n<pre><code>if (a == null || a=='')\n</code></pre>\n\n<p>everywhere if some  <code>if (isempty(a))</code>   would be available.</p>\n",
            "last_activity_date": 1403209240,
            "question_id": 1812245,
            "score": 69,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "What is the best way to test for an empty string with jquery-out-of-the-box?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>For the record, to force angular to re-render the current page, you can use:</p>\n\n<pre><code>$route.reload();\n</code></pre>\n\n<p>According to AngularJS <a href=\"http://docs.angularjs.org/api/ngRoute/service/%24route\">documentation</a>:</p>\n\n<blockquote>\n  <p>Causes $route service to reload the current route even if $location hasn't changed.</p>\n  \n  <p>As a result of that, ngView creates new scope, reinstantiates the controller.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 153
                },
                {
                    "body": "<p>For reloading the page for a given route path :-</p>\n\n<pre><code>$location.path('/path1/path2');\n$route.reload();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Well maybe you forgot to add \"$route\" when declaring the dependencies of your Controller:</p>\n\n<pre><code>app.controller('NameCtrl', ['$scope','$route', function($scope,$route) {   \n   // $route.reload(); Then this should work fine.\n}]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><code>$route.reload</code> will reinitialise the controllers but not the services. If you want to reset the whole state of your application you can use:</p>\n\n<pre><code>$window.location.reload();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>I've had a hard fight with this problem for months, and the only solution that worked for me is this:</p>\n\n<pre><code>var landingUrl = \"http://www.ytopic.es\"; //URL complete\n$window.location.href = landingUrl;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The only thing that worked for me was: </p>\n\n<pre><code>$window.location.href = $window.location.href;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$window.location.href = landingUrl;\n$window.location.reload();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>After rendering the entire page based on several user contexts and having made several <code>$http</code> requests, I want the user to be able to switch contexts and re-render everything again (resending all <code>$http</code> requests, etc). If I just redirect the user somewhere else, things work properly:</p>\n\n<pre><code>$scope.on_impersonate_success = function(response) {\n  //$window.location.reload(); // This cancels any current request\n  $location.path('/'); // This works as expected, if path != current_path\n};\n\n$scope.impersonate = function(username) {\n  return auth.impersonate(username)\n    .then($scope.on_impersonate_success, $scope.on_auth_failed);\n};\n</code></pre>\n\n<p>If I use <code>$window.location.reload()</code>, then some of the <code>$http</code> requests on <code>auth.impersonate(username)</code> that are waiting for a response get cancelled, so I can't use that. Also, the hack <code>$location.path($location.path())</code> doesn't work either (nothing happens).</p>\n\n<p>Is there another way to re-render the page without manually issuing all requests again?</p>\n",
            "last_activity_date": 1426012003,
            "question_id": 16703215,
            "score": 62,
            "tags": [
                "javascript",
                "angularjs",
                "reload",
                "rerender"
            ],
            "title": "How to reload or re-render the entire page using AngularJS"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Think that JavaScriptDevelopmentTools might do it. Although, I have eclipse indigo, and I'm pretty sure it does that kind of thing automatically.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Complete the following steps in Eclipse to get plugins for JavaScript files:</p>\n\n<ol>\n<li>Open Eclipse -> Go to \"Help\" -> \"Install New Software\"</li>\n<li>Select the repository for your version of Eclipse. I have Juno so I selected <code>http://download.eclipse.org/releases/juno</code></li>\n<li>Expand \"Programming Languages\" -> Check the box next to \"JavaScript Development Tools\"</li>\n<li>Click \"Next\" -> \"Next\" -> Accept the Terms of the License Agreement -> \"Finish\"</li>\n<li>Wait for the software to install, then restart Eclipse (by clicking \"Yes\" button at pop up window)</li>\n<li>Once Eclipse has restarted, open \"Window\" -> \"Preferences\" -> Expand \"General\" and \"Editors\" -> Click \"File Associations\" -> Add \".js\" to the \"File types:\" list, if it is not already there</li>\n<li>In the same \"File Associations\" dialog, click \"Add\" in the \"Associated editors:\" section</li>\n<li>Select \"Internal editors\" radio at the top</li>\n<li>Select \"JavaScript Viewer\". Click \"OK\" -> \"OK\"</li>\n</ol>\n\n<p><strong>To add JavaScript Perspective:  (Optional)</strong><br>\n 10. Go to \"Window\" -> \"Open Perspective\" -> \"Other...\"<br>\n 11. Select \"JavaScript\". Click \"OK\"</p>\n\n<p><strong>To open .html or .js file with highlighted JavaScript syntax:</strong><br>\n 12. (Optional) Select JavaScript Perspective<br>\n 13. Browse and Select .html or .js file in Script Explorer in [JavaScript Perspective] (Or Package Explorer [Java Perspective] Or PyDev Package Explorer [PyDev Perspective] Don't matter.)<br>\n 14. Right-click on .html or .js file -> \"Open With\" -> \"Other...\"<br>\n 15. Select \"Internal editors\"<br>\n 16. Select \"Java Script Editor\". Click \"OK\" (see JavaScript syntax is now highlighted )</p>\n",
                    "is_accepted": true,
                    "score": 107
                },
                {
                    "body": "<blockquote>\n  <p>JavaScript that allows for syntax checking </p>\n</blockquote>\n\n<p>JSHint-Eclipse </p>\n\n<blockquote>\n  <p>and autosuggestions for .js files in Eclipse?</p>\n</blockquote>\n\n<ol>\n<li><a href=\"http://usejsdoc.org/\" rel=\"nofollow\">Use JSDoc more</a> as JSDT has nice support for the standard, so you will get more suggestions for your own code.</li>\n<li>There is new TernIDE that provide additional hints for .js and AngulatJS .html. Get them together as Anide from <code>http://www.nodeclipse.org/updates/anide/</code></li>\n</ol>\n\n<p>As <a href=\"http://www.nodeclipse.org/\" rel=\"nofollow\">Nodeclipse</a> lead, I am always looking for what is available in Eclipse ecosystem. <a href=\"http://www.nodeclipse.org/\" rel=\"nofollow\">Nodeclipse</a> site has even more links,\nand I am inviting to <a href=\"https://github.com/nodeclipse/nodeclipse-1/\" rel=\"nofollow\">collaborate on the JavaScript tools on GitHub</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In 2015 I would go with:</p>\n\n<ul>\n<li>For small scripts: The js editor + jsHint plugin</li>\n<li>For large code bases: <a href=\"https://github.com/palantir/eclipse-typescript\" rel=\"nofollow\">TypeScript Eclipse plugin</a>, or a similar transpiled language... I only know that TypeScript works well in Eclipse.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there an Eclipse plugin available for JavaScript that allows for syntax checking and autosuggestions for .js files in Eclipse?</p>\n",
            "last_activity_date": 1423501150,
            "question_id": 12269560,
            "score": 45,
            "tags": [
                "javascript",
                "eclipse",
                "eclipse-plugin"
            ],
            "title": "JavaScript Editor Plugin for Eclipse"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I don't know a lot about ASP.NET, but why not write a custom function for the onload event that in turn calls both functions for you?  If you've got two functions, call them both from a third script which you register for the event.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Have you considered using something like <a href=\"http://jquery.com/\" rel=\"nofollow\">JQuery</a> which provides a framework for cleaning adding multiple event handlers?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>window.attachEvent(\"onload\", myOtherFunctionToCall);\n\nfunction myOtherFunctionToCall() {\n    // do something\n}\n</code></pre>\n\n<p>edit:  hey, I was just getting ready to log in with Firefox and reformat this myself!  Still doesn't seem to format code for me with IE7.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Actually, according to <a href=\"http://msdn.microsoft.com/en-us/library/z9h4dk8y.aspx\" rel=\"nofollow\">this MSDN page</a>, it looks like you <em>can</em> call this function multiple times to register multiple scripts.  You just need to use different keys (the second argument).</p>\n\n<pre><code>Page.ClientScript.RegisterStartupScript(\n    this.GetType(), key1, function1, true);\n\nPage.ClientScript.RegisterStartupScript(\n    this.GetType(), key2, function2, true);\n</code></pre>\n\n<p>I believe that should work.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://mootools.net/\" rel=\"nofollow\" title=\"Unison Home Page\">Mootools</a> is another great JavaScript framework which is fairly easy to use, and like RedWolves said with <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a> you can can just keep chucking as many handlers as you want.</p>\n\n<p>For every *.js file I include I just wrap the code in a function.</p>\n\n<pre><code>window.addEvent('domready', function(){\n    alert('Just put all your code here');\n});\n</code></pre>\n\n<p>And there are also <a href=\"http://walkthrough.ifupdown.com/walkthrough-1.2/domready.\" rel=\"nofollow\">advantages of using domready instead of onload</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There still is an ugly solution (which is far inferior to using a framework or addEventListener/attachEvent) that is to save the current onload event:</p>\n\n<pre><code>function addOnLoad(fn)\n{ \n   var old = window.onload;\n   window.onload = function()\n   {\n       old();\n       fn();\n   };\n}\n\naddOnLoad(function()\n{\n   // your code here\n});\naddOnLoad(function()\n{\n   // your code here\n});\naddOnLoad(function()\n{\n   // your code here\n});\n</code></pre>\n\n<p>Note that frameworks like jQuery will provide a way to execute code when the DOM is ready and not when the page loads. </p>\n\n<p>DOM being ready means that your HTML has loaded but not external components like images or stylesheets, allowing you to be called long before the load event fires.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I know this has been answered, but I just want you to know about this function:</p>\n\n<p><a href=\"http://phrogz.net/JS/AttachEvent_js.txt\" rel=\"nofollow\">http://phrogz.net/JS/AttachEvent_js.txt</a></p>\n\n<p>regards T</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Most of the \"solutions\" suggested are Microsoft-specific, or require bloated libraries. Here's one good way. This works with W3C-compliant browsers and with Microsoft IE.</p>\n\n<pre><code>if (window.addEventListener) // W3C standard\n{\n  window.addEventListener('load', myFunction, false); // NB **not** 'onload'\n} \nelse if (window.attachEvent) // Microsoft\n{\n  window.attachEvent('onload', myFunction);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 77
                },
                {
                    "body": "<p>I had a similar problem today so I solved it having an index.js with the following:</p>\n\n<pre><code>window.onloadFuncs = [];\n\nwindow.onload = function()\n{\n for(var i in this.onloadFuncs)\n {\n  this.onloadFuncs[i]();\n }\n}\n</code></pre>\n\n<p>and in additional js files that i want to attach the onload event I just have to do this:</p>\n\n<pre><code>window.onloadFuncs.push(function(){\n // code here\n});\n</code></pre>\n\n<p>I normally use jQuery though, but this time I was restricted to pure js wich forced to use my mind for a while!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can do this with jquery </p>\n\n<p>$(window).load(function(){\n    // jQuery functions to initialize after the page has loaded.\n});</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In my asp.net User Control I'm adding some script to the window.onload event like so:</p>\n\n<pre><code>if (!Page.ClientScript.IsStartupScriptRegistered(this.GetType(), onloadScriptName))\n  Page.ClientScript.RegisterStartupScript(this.GetType(), onloadScriptName, \n    \"window.onload = function() {myFunction();};\", true);            \n</code></pre>\n\n<p>My problem is, if there is already something in the onload event, than this overwrites it. \nHow would I go about allowing two user controls to each execute javascript in the onload event?</p>\n\n<p>*<em>Edit:</em>*Thanks for the info on third party libraries. I'll keep them in mind. </p>\n",
            "last_activity_date": 1346315851,
            "question_id": 9434,
            "score": 44,
            "tags": [
                "c#",
                "asp.net",
                "javascript"
            ],
            "title": "How do I add an additional window.onload event in Javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I prefer the <a href=\"http://docs.dojocampus.org/dijit/InlineEditBox\" rel=\"nofollow\">Dijit InlineEditBox</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>How about his:\n</code></pre>\n\n<p>Make a hidden \"textArea\" , and upon selecting(clicking or Hover) the div , hide the Div and  Show the textArea .</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I found out how.</p>\n\n<p>You use the contentEditable property of the DOMElement, like so</p>\n\n<pre><code>&lt;div onClick=\"this.contentEditable='true';\"&gt;\n    lorem ipsum dolor lorem ipsum dolorlorem ipsum dolor\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 61
                },
                {
                    "body": "<p>You can do this in pure HTML</p>\n\n<pre><code>&lt;div class=\"editable\" contenteditable=\"true\"&gt;\n    Editable text...\n&lt;/div&gt;\n</code></pre>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Do you know how to make a DIV editable with JavaScript (cross-browser) ?</p>\n\n<p>Something similar to a rich textarea, but that uses an editable iframe. I need something similar for a DIV.<br>\n<em>I don't want to use a replacement textbox.</em></p>\n",
            "last_activity_date": 1423765636,
            "question_id": 1188581,
            "score": 36,
            "tags": [
                "javascript",
                "html",
                "cross-browser",
                "contenteditable"
            ],
            "title": "How to make a DIV editable cross-browser?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Let's look at one of the most popular SPA sites, GMail.</p>\n\n<p><strong><em>1. SPA is extremely good for very responsive sites:</em></strong></p>\n\n<p>Server-side rendering is not as hard as it used to be with simple techniques like keeping a #hash in the URL, or more recently <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history\">HTML5 <code>pushState</code></a>. With this approach the exact state of the web app is embedded in the page URL. As in GMail every time you open a mail a special hash tag is added to the URL. If copied and pasted to other browser window can open the exact same mail (provided they can authenticate). This approach maps directly to a more traditional query string, the difference is merely in the execution.  With HTML5 pushState() you can eliminate the <code>#hash</code> and use completely classic URLs which can resolve on the server on the first request and then load via ajax on subsequent requests.</p>\n\n<p><strong><em>2. With SPA we don't need to use extra queries to the server to download pages.</em></strong></p>\n\n<p>The number of pages user downloads during visit to my web site?? really how many mails some reads when he/she opens his/her mail account. i read >50 at one go. now the structure of the mails is almost the same. if you will use a server side rendering scheme the server would then render it on every request(typical case). \n    - security concern - you should/ should not keep separate pages for the admins/login that entirely depends upon the structure of you site take paytm.com for example also making a web site SPA does not mean that you open all the endpoints for all the users i mean i use forms auth with my spa web site. \n   - in the probably most used spa framework angular js the dev can load the entire html temple from the web site so that can be done depending on the users authentication level. pre loading html for all the auth types isnt SPA. </p>\n\n<p><strong><em>3. May be any other advantages? Don't hear about any else..</em></strong></p>\n\n<ul>\n<li>these days you can safely assume the client will have javascript enabled browsers. </li>\n<li>only one entry point of the site. As i mentioned earlier maintenance of state is possible you can have any number of entry points as you want but you should have one for sure. </li>\n<li>even in an SPA user only see to what he has proper rights. you dont have to inject every thing at once. loading diff html templates and javascript async is also a valid part of SPA. </li>\n</ul>\n\n<p><strong><em>Advantages that I can think of are:</em></strong></p>\n\n<ol>\n<li>rendering html obviously takes some resources now every user visiting you site is doing this. also not only rendering major logics are now done client side instead of server side.</li>\n<li>date time issues - i just give the client utc time is a pre set format and done even care about the time zones i let javascript handle it. this is great advantage to where i had to guess time zones based on location derived from users IP. </li>\n<li>to me state is more nicely maintained in an SPA because once you have set a variable you know it will be there. this gives a feel of developing an app rather than a web page. this helps a lot typically in making sites like foodpanda, flipkart, amazon. because if you are not using client side state you are using expensive sessions.</li>\n<li>websites surely are extremely responsive - ill take an extreme example for this try making a calculator in a non SPA website(i know its weird).</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<h2>Disadvantages</h2>\n\n<p><strong><em>1. Client must enable javascript.</em></strong> Yes, this is a clear disadvantage of SPA. In my case I know that I can expect my users to have JavaScript enabled. If you can't then you can't do a SPA, period. That's like trying to deploy a .NET app to a machine without the .NET Framework installed.</p>\n\n<p><strong><em>2. Only one entry point to the site.</em></strong> I solve this problem using <a href=\"http://www.sammyjs.org/\" rel=\"nofollow\">SammyJS</a>. 2-3 days of work to get your routing properly set up, and people will be able to create deep-link bookmarks into your app that work correctly. Your server will only need to expose one endpoint - the \"give me the HTML + CSS + JS for this app\" endpoint (think of it as a download/update location for a precompiled application) - and the client-side JavaScript you write will handle the actual entry into the application.</p>\n\n<p><strong><em>3. Security.</em></strong> This issue is not unique to SPAs, you have to deal with security in exactly the same way when you have an \"old-school\" client-server app (the HATEOAS model of using Hypertext to link between pages). It's just that the user is making the requests rather than your JavaScript, and that the results are in HTML rather than JSON or some data format. In a non-SPA app you have to secure the individual pages on the server, whereas in a SPA app you have to secure the data endpoints. (And, if you don't want your client to have access to all the code, then you have to split apart the downloadable JavaScript into separate areas as well. I simply tie that into my SammyJS-based routing system so the browser only requests things that the client knows it should have access to, based on an initial load of the user's roles, and then that becomes a non-issue.)</p>\n\n<h2>Advantages</h2>\n\n<ol>\n<li><p>A major architectural advantage of a SPA (that rarely gets mentioned) in many cases is the huge reduction in the \"chattiness\" of your app. If you design it properly to handle most processing on the client (the whole point, after all), then the number of requests to the server (read \"possibilities for 503 errors that wreck your user experience\") is dramatically reduced. In fact, a SPA makes it possible to do entirely offline processing, which is <em>huge</em> in some situations.</p></li>\n<li><p>Performance is certainly better with client-side rendering if you do it right, but this is not the most compelling reason to build a SPA. (Network speeds are improving, after all.) Don't make the case for SPA on this basis alone.</p></li>\n<li><p>Flexibility in your UI design is perhaps the other major advantage that I have found. Once I defined my API (with an SDK in JavaScript), I was able to completely rewrite my front-end with <em>zero</em> impact on the server aside from some static resource files. Try doing that with a traditional MVC app! :) (This becomes valuable when you have live deployments and version consistency of your API to worry about.)</p></li>\n</ol>\n\n<p>So, bottom line: If you need offline processing (or at least want your clients to be able to survive occasional server outages) - dramatically reducing your own hardware costs - and you can assume JavaScript &amp; modern browsers, then you need a SPA. In other cases it's more of a tradeoff.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p><strong>Disadvantages</strong>:\nTechnically, design and initial development of SPA is complex and can be avoided. Other reasons for not using this SPA can be:\na) Security: Single Page Application is less secure as compared to traditional pages due to cross site scripting(XSS).\nb) Memory Leak: Memory leak in JavaScript can even cause powerful Computer to slow down. As traditional websites encourage to navigate among pages, thus any memory leak caused by previous page is almost cleansed leaving less residue behind.\nc) Client must enable JavaScript to run SPA, but in multi-page application JavaScript can be completely avoided.\nd) SPA grows to optimal size, cause long waiting time. Eg: Working on Gmail with slower connection.</p>\n\n<p>Apart from above, other architectural limitations are Navigational Data loss, No log of Navigational History in browser and difficulty in Automated Functional Testing with selenium.</p>\n\n<p><a href=\"https://upvishal.wordpress.com/\" rel=\"nofollow\">This</a> link explain Single Page Application's Advantages and Disadvantages.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've read about SPA and it advantages. I find most of them unconvincing. There are 3 advantages that arouse my doubts.</p>\n\n<p><em><strong>Question:</em></strong> <em>Can you act as advocate of SPA and prove that I am wrong about first three statements?</em></p>\n\n<pre><code>                              === ADVANTAGES ===\n</code></pre>\n\n<p><em><strong>1. SPA is extremely good for very responsive sites:</em></strong></p>\n\n<blockquote>\n  <p>Server-side rendering is hard to implement for all the intermediate\n  states - small view states do not map well to URLs.</p>\n  \n  <p>Single page apps are distinguished by their ability to redraw any part\n  of the UI without requiring a server roundtrip to retrieve HTML. This\n  is achieved by separating the data from the presentation of data by\n  having a model layer that handles data and a view layer that reads\n  from the models.</p>\n</blockquote>\n\n<p><em>What is wrong with holding a model layer for non-SPA? Does SPA the only compatible architecture with MVC on client side?</em></p>\n\n<p><em><strong>2. With SPA we don't need to use extra queries to the server to download pages.</em></strong></p>\n\n<p><em>Hah, and how many pages user can download during visiting your site? Two, three? Instead there appear another security problems and you need to separate your login page, admin page etc into separate pages. In turn it conflicts with SPA architecture.</em></p>\n\n<p><em><strong>3.May be any other advantages? Don't hear about any else..</em></strong></p>\n\n<pre><code>                            === DISADVANTAGES ===\n</code></pre>\n\n<ol>\n<li>Client must enable javascript.</li>\n<li>Only one entry point to the site.</li>\n<li>Security.</li>\n</ol>\n\n<p><em><strong>P.S.</em></strong> I've worked on SPA and non-SPA projects. And I'm asking those questions because I need to deepen my understanding. No mean to harm SPA supporters. Don't ask me to read a bit more about SPA. I just want to hear your considerations about that.</p>\n",
            "last_activity_date": 1421435003,
            "question_id": 21862054,
            "score": 32,
            "tags": [
                "javascript",
                "architecture",
                "client-side",
                "single-page-application"
            ],
            "title": "Single Page Application: advantages and disadvantages"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>That section of the html5boilerplate is sort of an abbreviation of what should/could go there.  </p>\n\n<p>You can approach plugins.js a few ways:</p>\n\n<ol>\n<li>Ignore it and include all of your JS plugins as separate files (undesirable)</li>\n<li>Manually concatenate and minify the plugin files (this is a pain to maintain)</li>\n<li>Use a script to concatenate them (and cache it) at run-time (<a href=\"http://rakaz.nl/2006/12/make-your-pages-load-faster-by-combining-and-compressing-javascript-and-css-files.html\">like this</a>)</li>\n<li>Use a makefile to concatenate/compress like a ninja (<a href=\"http://sixohthree.com/1380/makefile-for-css-and-js-minifycompress\">like this</a>)</li>\n<li>Use a slick JS library like <a href=\"http://yepnopejs.com/\">yepnope.js</a> to asynchronously load your plugin files as needed.</li>\n</ol>\n\n<p>There's a lot of options for including your JS plugins...you'll have to weigh them yourself, of course.  I usually use options 3 or 4, though I need to start using 5.</p>\n\n<p>As for what goes in the snippet of code that you gave:</p>\n\n<pre><code>(function($){\n  // This is a wrapper for your jQuery stuff \n})(this.jQuery);\n</code></pre>\n\n<p>You'll see that block of code wrapping a lot of jQuery plugins (check <a href=\"http://docs.jquery.com/Plugins/Authoring\">the docs</a>). It can be used to wrap your jQuery-specific code so you can make use of <code>$</code> while keeping your site in jQuery compatibility mode...which lets your site play nicely with other libraries that may use <code>$</code> as well.</p>\n",
                    "is_accepted": true,
                    "score": 28
                }
            ],
            "body": "<p>How is one expected to include additional js files in plugins.js? Is the expectation that we just copy and paste the contents of each plugin there? Or is there some method of doing a js include that I should be using?</p>\n\n<p>Specifically, I'd like to see an example of goes within this function:</p>\n\n<pre><code>// remap jQuery to $\n(function($){\n\n})(this.jQuery);\n</code></pre>\n",
            "last_activity_date": 1335111313,
            "question_id": 4572659,
            "score": 28,
            "tags": [
                "javascript",
                "html5boilerplate"
            ],
            "title": "HTML5 Boilerplate plugins.js"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If you're using jQuery it has a callback function to overcome this:</p>\n\n<p><a href=\"http://docs.jquery.com/Ajax/jQuery.ajax#options\">http://docs.jquery.com/Ajax/jQuery.ajax#options</a></p>\n\n<blockquote>\n  <p>As of jQuery 1.2, you can load JSON\n  data located on another domain if you\n  specify a JSONP callback, which can be\n  done like so: \"myurl?callback=?\".\n  jQuery automatically replaces the ?\n  with the correct method name to call,\n  calling your specified callback. Or,\n  if you set the dataType to \"jsonp\" a\n  callback will be automatically added\n  to your Ajax request.</p>\n</blockquote>\n\n<p>Alternatively you could make your ajax request to a server-side script which does the cross-domain call for you, then passes the data back to your script</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>Some more details would be nice: which AJAX library are you using, what would you like to achive, how you do it.</p>\n\n<p>For example it can be a cross-domain Ajax request, which is not allowed. In this case use <a href=\"http://www.json.org/\" rel=\"nofollow\">JSON</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I came across this problem recently and it was while I as AJAX loading the local request, not cross site scripting problem. Also, Jimmy himself seems to have the same problem. This seems to be the FF security problem, this article describes the <a href=\"http://jquery-howto.blogspot.com/2008/12/access-to-restricted-uri-denied-code.html\" rel=\"nofollow\">cause and the solution to access to restricted uri denied\" code: \"1012 problem</a>.</p>\n\n<blockquote>\n  <p>Sorry, got that error using JQuery\n  $.ajax on FireFox 3. Tried jsonp\n  suggestion but I think that will only\n  work with something that will serve up\n  json. I'm trying to create a sample\n  local html file based mashup that will\n  pull data from Yahoo!Finance, but they\n  are serving .csv, so I think I'm SOL.\n  \u2013 Jimmy Chandra (Sep 9 at 17:20)</p>\n</blockquote>\n\n<p>I hope you'll find it useful.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To update the answer (I guess, mostly for my benefit when I come looking for this answer later on), if are loading XML or something else, you can always ask the user if he will allow us to read from another site with this code:</p>\n\n<pre><code>try {\n    if (netscape.security.PrivilegeManager.enablePrivilege)\n        netscape.security.PrivilegeManager.enablePrivilege(\"UniversalBrowserRead\");\n} catch (e) { \n    alert(\"Sorry, browser security settings won't let this program run.\"); \n    return; \n}\n</code></pre>\n\n<p>(from the RESTful web services book) But, this only works in firefox, when the html file is loaded from local file. So, not that useful.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>One more solution: if all you need is the headers, you can specify \"HEAD\" as the method and it won't trigger the security issue.  For instance, if you just want to know if the web page exists.</p>\n\n<pre><code>var client = new XMLHttpRequest();\nclient.open(\"HEAD\", my_url, false);\nclient.send(null);\nif(client.readyState != 4 || client.status != 200) //if we failed\n    alert(\"can't open web page\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How do you get around this Ajax cross site scripting problem on FireFox 3?</p>\n",
            "last_activity_date": 1418650965,
            "question_id": 51283,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "xss"
            ],
            "title": "Access to restricted URI denied code: 1012"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I would use 3d distance between two colors where x,y,z are R,G,B values.</p>\n\n<p>Take a look at this Perl Library:</p>\n\n<p><a href=\"http://metacpan.org/pod/Color::Similarity::RGB\" rel=\"nofollow\">http://metacpan.org/pod/Color::Similarity::RGB</a></p>\n\n<p>This is easy to implement yourself.</p>\n\n<p>Just make sure that (R1-R2)^2 + (G1-G2)^2 + (B1-B2)^2 >= threshold^2</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://en.wikipedia.org/wiki/Color_difference\" rel=\"nofollow\">Wikipedia</a> has details on a number of algorithms which can be used for this.</p>\n\n<p>There is also this previous StackOverflow question: <a href=\"http://stackoverflow.com/questions/1313/followup-finding-an-accurate-distance-between-colors\">Finding an accurate \u201cdistance\u201d between colors</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here is a <a href=\"http://www.compuphase.com/cmetric.htm\">theoretical explanation</a> </p>\n\n<p>And the algo in C:</p>\n\n<pre><code>typedef struct {\n    unsigned char r, g, b;\n} RGB;\n\ndouble ColourDistance(RGB e1, RGB e2)\n{\n    long rmean = ( (long)e1.r + (long)e2.r ) / 2;\n    long r = (long)e1.r - (long)e2.r;\n    long g = (long)e1.g - (long)e2.g;\n    long b = (long)e1.b - (long)e2.b;\n    return sqrt((((512+rmean)*r*r)&gt;&gt;8) + 4*g*g + (((767-rmean)*b*b)&gt;&gt;8));\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>From an algorithm viewpoint, this is fairly simple. Each color represents a point in a 3D space, and the difference between colors is the distance between those points. </p>\n\n<p>Presumably the point here is to ensure that the colors are visibly different. If that's the case, deciding on the minimum distance is probably going to be fairly difficult. The problem is that (at least for people with normal vision) some differences are easier to see than others. For example, most people are more sensitive to small differences in shades of green than equally small changes in shades of red or blue. There are algorithms to take this into account, but they're based on average human vision, so none of them is guaranteed to be precisely correct for any one person.</p>\n\n<p>Just for fun, you might want to take a look at <a href=\"http://www.xrite.com/custom_page.aspx?PageID=77\" rel=\"nofollow\">X-rite's online color vision test</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Most answers for this question will suggest calculating the distance between two colors when mapping the RGB values into a 3D space.  The problem with this technique is that two colors with similar hues, but different saturation or brightness levels may map further away from each other in 3D RGB space than two colors with different hues, but very similar saturation and brightness levels.  In other words, a blue and a green may be closer in 3D RGB space than two shades of a Red.  In this application, ensuring team colors differ, hue differences should weigh much more heavily than brightness and saturation. </p>\n\n<p>So I would convert the color mapping from RGB to hue, saturation, and brightness levels, and then check just the hue values for sufficient distance.</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/HSV_color_space\" rel=\"nofollow\">Wikipedia has an explanation for converting RGB to HSV.</a> <a href=\"http://en.literateprograms.org/RGB_to_HSV_color_space_conversion_%28C%29\" rel=\"nofollow\">LiteratePrograms has some sample code.</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here is pgras' algorithm in Java:</p>\n\n<pre><code>public double ColourDistance(Color c1, Color c2)\n{\n    double rmean = ( c1.getRed() + c2.getRed() )/2;\n    int r = c1.getRed() - c2.getRed();\n    int g = c1.getGreen() - c2.getGreen();\n    int b = c1.getBlue() - c2.getBlue();\n    double weightR = 2 + rmean/256;\n    double weightG = 4.0;\n    double weightB = 2 + (255-rmean)/256;\n    return Math.sqrt(weightR*r*r + weightG*g*g + weightB*b*b);\n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<p>We are building a sports application and would like to incorporate team colors in various portions of the app.  </p>\n\n<p>Now each team can be represented using several different colors.  </p>\n\n<p>What I would like to do is to perform a check to verify whether the two team colors are within a certain range of each other, so that I do not display two similar colors.</p>\n\n<p>So, if team 1's primary team color has a value of rgb(255,0,0) (or #FF0000), and team 2's primary color is similar, say rgb(250,0,0), then we would choose a different color for one of the teams.</p>\n\n<p>If possible, what approach could I take to perform the check?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1396956902,
            "question_id": 2103368,
            "score": 19,
            "tags": [
                "java",
                "javascript",
                "algorithm",
                "colors"
            ],
            "title": "Color Logic Algorithm"
        }
    ]
}
