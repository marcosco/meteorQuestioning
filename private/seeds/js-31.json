{
    "items": [
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Probably the simplest way to solve this is to create a directive on your app with the same name as the third party directive.  Both directives will run and you can specify their run order using the <code>priority</code> property (higher priority runs first).</p>\n\n<p>The two directives will share scope and you can access and modify the scope of the third party directive via your directive's <code>link</code> method.</p>\n\n<p><strong>Option 2:</strong> You can also access a third party directive's scope by simply putting your own arbitrarily named directive on the same element with it (assuming neither directive uses isolate scope). <em>All non-isolate scope directives on an element will share scope.</em></p>\n\n<p><strong>Further Reading:</strong> Scroll to the section on extending directives <a href=\"https://github.com/angular/angular.js/wiki/Understanding-Directives\">https://github.com/angular/angular.js/wiki/Understanding-Directives</a></p>\n\n<p><strong>Note:</strong> My previous answer was for modifying a third party service, not a directive.</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>While this is not the direct answer to your question you might want to know that the latest version (in master) of <a href=\"http://angular-ui.github.io/bootstrap/\">http://angular-ui.github.io/bootstrap/</a> added support for disabling tabs. This feature was added through:\n<a href=\"https://github.com/angular-ui/bootstrap/commit/2b78dd16abd7e09846fa484331b5c35ece6619a2\">https://github.com/angular-ui/bootstrap/commit/2b78dd16abd7e09846fa484331b5c35ece6619a2</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Use <code>$provide</code>'s <a href=\"http://docs.angularjs.org/api/auto/object/%24provide#decorator\"><code>decorator()</code></a> to, well, decorate the third party's directive.</p>\n\n<p>In our case, we can extend the directive's scope like so:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>app.config(function($provide) {\n    $provide.decorator('paneDirective', function($delegate) {\n        var directive = $delegate[0];\n        angular.extend(directive.scope, {\n            disabled:'@'\n        });\n        return $delegate;\n    });\n});\n</code></pre>\n\n<p>First, we request to decorate the <code>pane</code> directive by passing its name, concatenated with <code>Directive</code> as the first argument, then we retrieve it from the callback parameter (which is an array of directives matching that name).</p>\n\n<p>Once we got it, we can obtain its scope object and extend it as needed. Notice that all of this has to be done in the <code>config</code> block.</p>\n\n<p><sub><strong>A quick note:</strong> It has been suggested to simply add a directive with the same name, then set its priority level. Aside from being unsemantic (<em>which's <a href=\"http://unsemantic.com/\">not even a word</a>, I know&hellip;</em>), it poses issues, e.g. what if the third-party directive's priority level changes?</sub></p>\n\n<hr>\n\n<p><strong>TL;DR</strong>, gimme tha demo!</p>\n\n<p><a href=\"http://plnkr.co/edit/MJB37B3Xf3khiCEIwOZ3?p=preview\"><kbd><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>Big Demo Button</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;</kbd></a></p>\n",
                    "is_accepted": false,
                    "score": 25
                }
            ],
            "body": "<p>I'd like to make a minor modification to a 3rd party directive (specifically <a href=\"http://angular-ui.github.io/bootstrap/\">Angular UI Bootstrap</a>).  I simply want to add to the scope of the <code>pane</code> directive:</p>\n\n<pre><code>angular.module('ui.bootstrap.tabs', [])\n.controller('TabsController', ['$scope', '$element', function($scope, $element) {\n  // various methods\n}])\n.directive('tabs', function() {\n  return {\n    // etc...\n  };\n})\n.directive('pane', ['$parse', function($parse) {\n  return {\n    require: '^tabs',\n    restrict: 'EA',\n    transclude: true,\n    scope:{\n      heading:'@',\n      disabled:'@' // &lt;- ADDED SCOPE PROPERTY HERE\n    },\n    link: function(scope, element, attrs, tabsCtrl) {\n      // link function\n    },\n    templateUrl: 'template/tabs/pane.html',\n    replace: true\n  };\n}]);\n</code></pre>\n\n<p>But I also want to keep Angular-Bootstrap up to date with Bower.  As soon as I run <code>bower update</code>, I'll overwrite my changes.</p>\n\n<p>So how do I go about extending this directive separately from this bower component?</p>\n",
            "last_activity_date": 1422511830,
            "question_id": 17005122,
            "score": 43,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-directive",
                "bower"
            ],
            "title": "Extending Angular Directive"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Take a look at the <a href=\"http://www.pengoworks.com/workshop/jquery/calculation/calculation.plugin.htm\" rel=\"nofollow\">calculation plugin</a>, maybe it can help you with your problems.\nThey offer a number of math functions, like min, max and avg on DOM-elements.</p>\n\n<p>Examples:</p>\n\n<pre><code>$(\"input[name^='min']\").min();\n$(\"input[name^='max']\").max();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use <a href=\"http://ejohn.org/blog/fast-javascript-maxmin/\">Fast JavaScript Max/Min - John Resig</a></p>\n\n<p>Example with three logos of google, yahoo and bing.</p>\n\n<p>HTML</p>\n\n<pre><code>&lt;img src=\"http://www.google.co.in/intl/en_com/images/srpr/logo1w.png\" alt=\"Google Logo\" /&gt;&lt;br/&gt;\n&lt;img src=\"http://l.yimg.com/a/i/ww/met/yahoo_logo_in_061509.png\" alt=\"Yahoo Logo\" /&gt;&lt;br/&gt;\n&lt;img src=\"http://www.bing.com/fd/s/a/h1.png\" alt=\"Bing Logo\" /&gt;\n</code></pre>\n\n<p>Javascript</p>\n\n<pre><code>$(document).ready(function(){\n    // Function to get the Max value in Array\n    Array.max = function( array ){\n        return Math.max.apply( Math, array );\n    };\n\n    // Function to get the Min value in Array\n    Array.min = function( array ){\n       return Math.min.apply( Math, array );\n    };\n\n    //updated as per Sime Vidas comment.\n    var widths= $('img').map(function() {\n        return $(this).width();\n    }).get();\n\n    alert(\"Max Width: \" + Array.max(widths));\n    alert(\"Min Width: \" + Array.min(widths));\n});\n</code></pre>\n\n<p>P.S: <a href=\"http://jsfiddle.net/naveen/HkxJg/\">jsfiddle here</a></p>\n",
                    "is_accepted": false,
                    "score": 66
                },
                {
                    "body": "<p>The <a href=\"http://docs.jquery.com/Plugins/Authoring\" rel=\"nofollow\">Plugins/Authoring page</a> actually has an example for determining the tallest element.</p>\n\n<p>It's basically what you have here, just rolled into a plugin for easy access. Maybe you could appropriate it for your uses.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Rolled up as a plugin to return min-max of width and height:</p>\n\n<pre><code>// Functions to get the Min &amp; Max value in Array\n\nif (!Array.min) { Array.min = function( array ){return Math.min.apply( Math, array )} }\nif (!Array.max) { Array.max = function( array ){return Math.max.apply( Math, array )} }\n\n(function( $ ){     // Standard jQuery closure to hide '$' from other libraries.\n\n    // jQuery plug-in to get the min and max widths of a set of elements\n\n    $.fn.dimensionsMinMax = function(whnx) {\n\n    /*\n    ################################################################################\n\n    Name\n    ====\n\n        dimensionsMinMax(whnx) - jQuery plug-in to get min &amp; max width &amp; height\n\n    Parameters\n    ==========\n\n        whnx - A 4-element array to receive the min and max values of the elements:\n            whnx[0] = minimum width;\n            whnx[1] = maximum width;\n            whnx[2] = minimum height;\n            whnx[3] = maximum height.\n\n    Returns\n    =======\n\n        this - so it can be \"chained\".\n\n    Example\n    =======\n\n        var minmax = new Array(4);\n        var number_of_images = $('img').dimensionsMinMax(minmax).class('abc').length;\n        console.log('number of images = ', number_of_images);\n        console.log('width  range = ', minmax[0], ' to ', minmax[1]);\n        console.log('height range = ', minmax[2], ' to ', minmax[3]);\n\n    ################################################################################  \n    */\n        var  widths = new Array(this.length);\n        var heights = new Array(this.length);\n\n        this.each(function(i){\n            $this      = $(this);\n             widths[i] = $this.width();\n            heights[i] = $this.height(); \n        });\n\n        whnx[0] = Array.min( widths);\n        whnx[1] = Array.max( widths);\n        whnx[2] = Array.min(heights);\n        whnx[3] = Array.max(heights);\n\n        return this;\n    }\n\n})( jQuery );   // End of standard jQuery closure.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I like the elegant solution posted as a <code>.map()</code> example in the jQuery docs on how to <a href=\"http://api.jquery.com/map/#example-2\" rel=\"nofollow\">equalize div heights</a>. I basically adapted it to work with widths and made <a href=\"http://jsfiddle.net/Mottie/EHMSJ/1/\" rel=\"nofollow\">a demo</a>.</p>\n\n<pre><code>$.fn.limitWidth = function(max){\n  var limit = (max) ? 'max' : 'min';\n  return this.width( Math[limit].apply(this, $(this).map(function(i,e){\n   return $(e).width();\n  }).get() ) );\n};\n\n// Use the function above as follows\n$('.max-width').limitWidth(true); // true flag means set to max\n$('.min-width').limitWidth();     // no flag/false flag means set to min\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I wrote a simple plugin to do exactly this - see <a href=\"http://gregbrown.co.nz/code/jquery-aggregate\" rel=\"nofollow\">gregbrown.co.nz/code/jquery-aggregate</a> . With it installed, you could do: </p>\n\n<p><code>var maxWidth = $('img').aggregate('width', 'max');</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use <code>apply</code> outside the context of OO, no need to extend the prototype:</p>\n\n<pre><code>var maxHeight = Math.max.apply( null,\n        $('img').map(function(){ return $(this).height(); }).get() );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You can use native \"sort\" function to have more control over which elements are compared</p>\n\n<pre><code>Array.prototype.deepMax = function(comparator){\n  if(typeof comparator === 'function'){\n    var sorted = this.slice(0).sort(comparator);\n    return sorted[sort.length - 1];\n  }\n  return Math.max.apply(Math, this);\n};\n</code></pre>\n\n<p>and you can call it like</p>\n\n<pre><code>var maxWidth = $('img').deepMax(function(a, b){\n  //-1 if a &lt; b; +1 otherwise\n  return $(a).width() - $(b).width();\n});\n</code></pre>\n\n<p>OR</p>\n\n<p>you can use <strong>_.max</strong> of <a href=\"http://underscorejs.org/#max\" rel=\"nofollow\">Underscore</a> which is can be implemented like...</p>\n\n<pre><code>Array.prototype.max = function(iterator){\n  if(!iterator &amp;&amp; obj[0] === +obj[0])\n    return Math.max.apply(Math, this);\n  var result = -Infinity, lastComputed = -Infinity;\n  this.forEach(function(value, index){\n    var computed = iterator ? iterator(value, index, this) : value;\n    computed &gt; lastComputed &amp;&amp; (result = value, lastComputed = computed);\n  });\n  return result;\n};\n\nvar maxWidth = $('img').max(function(val){ return $(val).width();});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a simple way to find the min/max property from an array of elements in jQuery?</p>\n\n<p>I constantly find myself dynamically resizing groups of elements based on the minimum and maximum counterparts.  Most of the time this pertains to the width and/or height of an element but I'm sure this could be applied to any property of an element.</p>\n\n<p>I usually do something like this:</p>\n\n<pre><code>var maxWidth = 0;\n\n$('img').each(function(index){\nif ($(this).width() &gt; maxWidth)\n{\nmaxWidth = $(this).width();\n}\n});\n</code></pre>\n\n<p>But it seems like you should be able to do something like this:</p>\n\n<pre><code>var maxWidth = $('img').max('width');\n</code></pre>\n\n<p>Does this functionality exist in jQuery or can someone explain how to create a basic plugin that does this?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1391752283,
            "question_id": 5052673,
            "score": 42,
            "tags": [
                "javascript",
                "jquery",
                "arrays"
            ],
            "title": "jQuery min/max property from array of elements"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>What server technology do you use and is there a particular product you use for authentication?</p>\n\n<p>Since the browser is only doing its job, I believe you have to change things on the server side to not return a 401 status code. This could be done using custom authentication forms that simply return the form again when the authentication fails.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I don't think this is possible -- if you use the browser's HTTP client implementation, it will always pop up that dialog. Two hacks come to mind:</p>\n\n<ol>\n<li><p>Maybe Flash handles this differently (I haven't tried yet), so having a flash movie make the request might help.</p></li>\n<li><p>You can set up a 'proxie' for the service that you're accessing on your own server, and have it modify the authentication headers a bit, so that the browser doesn't recognise them.</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>In Mozilla you can achieve it with the following script when you create the XMLHttpRequest object:</p>\n\n<pre><code>xmlHttp=new XMLHttpRequest();\nxmlHttp.mozBackgroundRequest = true;\nxmlHttp.open(\"GET\",URL,true,USERNAME,PASSWORD);\nxmlHttp.send(null);\n</code></pre>\n\n<p>The 2nd line prevents the dialog box....</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In Mozilla land, setting the mozBackgroundRequest parameter of XMLHttpRequest (<a href=\"https://developer.mozilla.org/en/XMLHttpRequest#Attributes\" rel=\"nofollow\">docs</a>) to true suppresses those dialogs and causes the requests to simply fail.  However, I don't know how good cross-browser support is (including whether the the quality of the error info on those failed requests is very good across browsers.)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>jan.vdbergh has the truth, if you can change the 401 on server side for another status code, the browser won't catch and paint the pop-up.\nAnother solution could be change the WWW-Authenticate header for another custom header. I dont't believe why the different browser can't support it, in a few versions of Firefox we can do the xhr request with mozBackgroundRequest, but in the other browsers?? here, there is an interesting <a href=\"http://code.google.com/p/chromium/issues/detail?can=2&amp;start=0&amp;num=100&amp;q=&amp;colspec=ID%20Pri%20Mstone%20ReleaseBlock%20OS%20Area%20Feature%20Status%20Owner%20Summary&amp;groupby=&amp;sort=&amp;id=31582\" rel=\"nofollow\">link</a> with this issue in Chromium.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I\u00b4ve been at the same issue and found this link in a comment here on stackoverflow (not my blog):</p>\n\n<p><a href=\"http://loudvchar.blogspot.ca/2010/11/avoiding-browser-popup-for-401.html\" rel=\"nofollow\">http://loudvchar.blogspot.ca/2010/11/avoiding-browser-popup-for-401.html</a></p>\n\n<p>Hope it will help you.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I encountered the same issue here, and the backend engineer at my company implemented a behavior that is apparently considered a good practice : when a call to a URL returns a 401, if the client has set the header <code>X-Requested-With: XMLHttpRequest</code>, the server drops the <code>www-authenticate</code> header in its response. </p>\n\n<p>The side effect is that the default authentication popup does not appear.</p>\n\n<p>Make sure that your API call has the <code>X-Requested-With</code> header set to <code>XMLHttpRequest</code>. If so there is nothing to do except changing the server behavior according to this good practice...</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>My web application has a login page that submits authentication credentials via an AJAX call. If the user enters the correct username and password, everything is fine, but if not, the following happens:</p>\n\n<ol>\n<li>The web server determines that although the request included a well-formed Authorization header, the credentials in the header do not successfully authenticate.</li>\n<li>The web server returns a 401 status code and includes one or more WWW-Authenticate headers listing the supported authentication types.</li>\n<li>The browser detects that the response to my call on the XMLHttpRequest object is a 401 and the response includes WWW-Authenticate headers. It then pops up an authentication dialog asking, again, for the username and password.</li>\n</ol>\n\n<p>This is all fine up until step 3. I don't want the dialog to pop up, I want want to handle the 401 response in my AJAX callback function. (For example, by displaying an error message on the login page.) I want the user to re-enter their username and password, of course, but I want them to see my friendly, reassuring login form, not the browser's ugly, default authentication dialog.</p>\n\n<p>Incidentally, I have no control over the server, so having it return a custom status code (i.e., something other than a 401) is not an option.</p>\n\n<p>Is there any way I can suppress the authentication dialog? In particular, can I suppress the Authentication Required dialog in Firefox 2 or later? Is there any way to suppress the Connect to <em>[host]</em> dialog in IE 6 and later?</p>\n\n<p><hr /></p>\n\n<p><strong>Edit</strong><br />\n<em>Additional information from the author (Sept. 18):</em><br />\nI should add that the real problem with the browser's authentication dialog popping up is that it give insufficient information to the user.</p>\n\n<p>The user has just entered a username and password via the form on the login page, he believes he has typed them both correctly, and he has clicked the submit button or hit enter. His expectation is that he will be taken to the next page or perhaps told that he has entered his information incorrectly and should try again. However, he is instead presented with an unexpected dialog box.</p>\n\n<p>The dialog makes no acknowledgment of the fact he just <em>did</em> enter a username and password. It does not clearly state that there was a problem and that he should try again. Instead, the dialog box presents the user with cryptic information like \"The site says: '<em>[realm]</em>'.\" Where <em>[realm]</em> is a short realm name that only a programmer could love.</p>\n\n<p>Web broswer designers take note: no one would ask how to suppress the authentication dialog if the dialog itself were simply more user-friendly. The <em>entire</em> reason that I am doing a login form is that our product management team rightly considers the browsers' authentication dialogs to be awful.</p>\n",
            "last_activity_date": 1385479903,
            "question_id": 86105,
            "score": 34,
            "tags": [
                "javascript",
                "ajax",
                "http-authentication"
            ],
            "title": "How can I supress the browser&#39;s authentication dialog?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The prototype object is meant to be used on <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Working_with_Objects#Using_a_Constructor_Function\"><em>constructor functions</em></a>, basically functions that will be called using the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Operators/Special_Operators/new_Operator\">new  operator</a> to create new object instances.</p>\n\n<p>Functions in JavaScript are <a href=\"http://en.wikipedia.org/wiki/First-class_function\">first-class</a> objects, which means you can add members to them and treat them just like ordinary objects:</p>\n\n<pre><code>var STORE = {\n   item : function() {\n  }\n};\n\nSTORE.item.add = function() { alert('test 123'); };\nSTORE.item.add();\n</code></pre>\n\n<p>A typical use of the prototype object as I said before, is when you instantiate an object by calling a constructor function with the new operator, for example:</p>\n\n<pre><code>function SomeObject() {} // a constructor function\nSomeObject.prototype.someMethod = function () {};\n\nvar obj = new SomeObject();\n</code></pre>\n\n<p>All the instances of SomeObject will inherit the members from the <code>SomeObject.prototype</code>, because those members will be accessed through the prototype chain.</p>\n\n<p>Every function in JavaScript has a prototype object because there is no way to know which functions are intended to be used as constructors.</p>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>You can use JSON revivers to turn your JSON into class objects at parse time.  The EcmaScript 5 draft has adopted the JSON2 reviver scheme described at <a href=\"http://JSON.org/js.html\" rel=\"nofollow\">http://JSON.org/js.html</a></p>\n\n<pre><code>var myObject = JSON.parse(myJSONtext, reviver);\n</code></pre>\n\n<blockquote>\n  <p>The optional reviver parameter is a\n  function that will be called for every\n  key and value at every level of the\n  final result. Each value will be\n  replaced by the result of the reviver\n  function. This can be used to reform\n  generic objects into instances of\n  pseudoclasses, or to transform date\n  strings into Date objects.</p>\n</blockquote>\n\n<pre><code>myData = JSON.parse(text, function (key, value) {\n    var type;\n    if (value &amp;&amp; typeof value === 'object') {\n        type = value.type;\n        if (typeof type === 'string' &amp;&amp; typeof window[type] === 'function') {\n            return new (window[type])(value);\n        }\n    }\n    return value;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<pre><code>STORE = {\n   item : function() {\n  }\n};\nSTORE.item.prototype.add = function() { alert('test 123'); };\nSTORE.item.add();\n</code></pre>\n\n<p>I have been trying to figure out what's wrong with this quite a while. Why doesn't this work? However, it works when I use the follow:</p>\n\n<pre><code>STORE.item.prototype.add();\n</code></pre>\n",
            "last_activity_date": 1419550124,
            "question_id": 1592384,
            "score": 30,
            "tags": [
                "javascript",
                "prototype",
                "object-literal"
            ],
            "title": "Adding Prototype to JavaScript Object Literal"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Jeremy already has this one, but let me add some important details and caveats:</p>\n\n<ol>\n<li>At 39k gzipped (compare to jQuery at 29k), <code>coffee-script.js</code> is a big file; so unless you're actually letting your users run their own CoffeeScript, you really shouldn't use it in production.</li>\n<li>As mentioned in the documentation, each CoffeeScript snippet will be in its own anonymous closure. So your example snippet wouldn't do anything\u2014<code>squares</code> wouldn't be visible outside of the script. Instead, you'd want to change it to <code>window.squares = ...</code>.</li>\n<li>All CoffeeScript code, whether external or inline, will run <em>after</em> all JavaScript code on the page. That's because <code>coffee-script.js</code> doesn't read your <code>&lt;script type=\"text/coffeescript&gt;</code> tags until after the document is ready, by which time your JavaScripts have already run.</li>\n<li>Remote CoffeeScripts are loaded via <code>XMLHTTPRequest</code>, which means that they must be hosted on the same domain as your site. (Certain browsers\u2014Chrome, at least\u2014also have a problem with doing <code>XMLHTTPRequest</code>s on <code>file://</code> paths.)</li>\n<li>Currently, the order in which different remote CoffeeScripts run is not guaranteed. I submitted a patch for this, but it's not officially a part of CoffeeScript yet. See <a href=\"https://github.com/jashkenas/coffee-script/pull/1058\">this pull request</a>.</li>\n</ol>\n\n<p>So, you might want to look at some alternatives for serving CoffeeScript as compiled JavaScript instead. If you're developing for a Ruby or Python server, there are plugins available. I've tried to list them all at <a href=\"http://github.com/jashkenas/coffee-script/wiki/Web-framework-plugins\">http://github.com/jashkenas/coffee-script/wiki/Web-framework-plugins</a>.</p>\n\n<p>If you're developing a site without a backend, a tool I highly recommend looking at is <a href=\"https://github.com/middleman/middleman\">Middleman</a>, which lets you work with CoffeeScript (as well as Haml and Sass, if you want) during development, then compile and minify it for production deployment.</p>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>The answer is yes. I won't repeat @Trevor's excellent answer, but rather just provide an example of what you're thinking about:</p>\n\n<p><a href=\"http://forgivingworm.wordpress.com/2010/09/27/running-coffeescript-in-browser/\" rel=\"nofollow\">http://forgivingworm.wordpress.com/2010/09/27/running-coffeescript-in-browser/</a></p>\n\n<p>Basically you</p>\n\n<ol>\n<li>Tag your coffeescript with the <strong>text/coffeescript</strong></li>\n<li>Include coffee-script.js after all coffeescript on the page (the\ncompiler will evaluate and compile all coffeescript in order)</li>\n</ol>\n\n<p>Sample HTML below</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;In-Browser test&lt;/title&gt;\n&lt;script type=\u201dtext/javascript\u201d src=\u201dhttp://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js&amp;#8221;&gt; &lt;/script&gt;\n&lt;script type=\u201dtext/coffeescript\u201d&gt;\n$ -&gt; $(\u2018#header\u2018).css \u2018background-color\u2018, \u2018green\u2018\n&lt;/script&gt;\n&lt;script type=\u201dtext/javascript\u201d src=\u201dhttp://github.com/jashkenas/coffee-script/raw/master/extras/coffee-script.js&amp;#8221;&gt; &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1 id=\u201dheader\u201d style=\u201dcolor:white\u201d&gt;CoffeeScript is alive!&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"/&gt;\n  &lt;title&gt;CoffeScript on browser&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;script type=\"text/coffeescript\"&gt;\n  alert 'It works!'\n&lt;/script&gt;\n&lt;script src=\"http://cdnjs.cloudflare.com/ajax/libs/coffee-script/1.7.1/coffee-script.min.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<ul>\n<li>CoffeeScript has to be loaded after the script you want to run.</li>\n<li>if using <code>src</code> you must be able to access the file via <code>XMLHTTPRequest</code>, in particular it fails on browsers with <code>file://</code>.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to send CoffeeScript to the client's browser and have it compiled to JavaScript <em>there</em>?</p>\n\n<pre><code>&lt;script type=\"text/coffeescript\"&gt;\n    square = (x) -&gt; x * x\n    list = [1, 2, 3, 4, 5]        \n    squares = (square num for num in list)\n&lt;/script&gt;\n</code></pre>\n\n<p>The CoffeeScript compiler is written in JavaScript, so can I send it to the client to compile/run this code in the client's browser?</p>\n",
            "last_activity_date": 1407365966,
            "question_id": 5170473,
            "score": 29,
            "tags": [
                "javascript",
                "coffeescript"
            ],
            "title": "Is there a way to send CoffeeScript to the client&#39;s browser and have it compiled to JavaScript *there*?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>It's possible to check only the file extension, but user can easily rename virus.exe to virus.jpg and \"pass\" the validation.</p>\n\n<p>For what it's worth, here is the code to check file extension and abort if does not meet one of the valid extensions: (choose invalid file and try to submit to see the alert in action)</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var _validFileExtensions = [\".jpg\", \".jpeg\", \".bmp\", \".gif\", \".png\"];    \r\nfunction Validate(oForm) {\r\n    var arrInputs = oForm.getElementsByTagName(\"input\");\r\n    for (var i = 0; i &lt; arrInputs.length; i++) {\r\n        var oInput = arrInputs[i];\r\n        if (oInput.type == \"file\") {\r\n            var sFileName = oInput.value;\r\n            if (sFileName.length &gt; 0) {\r\n                var blnValid = false;\r\n                for (var j = 0; j &lt; _validFileExtensions.length; j++) {\r\n                    var sCurExtension = _validFileExtensions[j];\r\n                    if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {\r\n                        blnValid = true;\r\n                        break;\r\n                    }\r\n                }\r\n                \r\n                if (!blnValid) {\r\n                    alert(\"Sorry, \" + sFileName + \" is invalid, allowed extensions are: \" + _validFileExtensions.join(\", \"));\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n  \r\n    return true;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;form onsubmit=\"return Validate(this);\"&gt;\r\n  File: &lt;input type=\"file\" name=\"my file\" /&gt;&lt;br /&gt;\r\n  &lt;input type=\"submit\" value=\"Submit\" /&gt;\r\n&lt;/form&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Note, the code will allow user to send without choosing file... if it's required, remove the line <code>if (sFileName.length &gt; 0) {</code> and it's associate closing bracket. The code will validate any file input in the form, regardless of its name.</p>\n\n<p>This can be done with jQuery in less lines, but I'm comfortable enough with \"raw\" JavaScript and the final result is the same.</p>\n\n<p>In case you have more files, or want to trigger the check upon changing the file and not only in form submission, use such code instead:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var _validFileExtensions = [\".jpg\", \".jpeg\", \".bmp\", \".gif\", \".png\"];    \r\nfunction ValidateSingleInput(oInput) {\r\n    if (oInput.type == \"file\") {\r\n        var sFileName = oInput.value;\r\n         if (sFileName.length &gt; 0) {\r\n            var blnValid = false;\r\n            for (var j = 0; j &lt; _validFileExtensions.length; j++) {\r\n                var sCurExtension = _validFileExtensions[j];\r\n                if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {\r\n                    blnValid = true;\r\n                    break;\r\n                }\r\n            }\r\n             \r\n            if (!blnValid) {\r\n                alert(\"Sorry, \" + sFileName + \" is invalid, allowed extensions are: \" + _validFileExtensions.join(\", \"));\r\n                oInput.value = \"\";\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>File 1: &lt;input type=\"file\" name=\"file1\" onchange=\"ValidateSingleInput(this);\" /&gt;&lt;br /&gt;\r\nFile 2: &lt;input type=\"file\" name=\"file2\" onchange=\"ValidateSingleInput(this);\" /&gt;&lt;br /&gt;\r\nFile 3: &lt;input type=\"file\" name=\"file3\" onchange=\"ValidateSingleInput(this);\" /&gt;&lt;br /&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>This will show alert and reset the input in case of invalid file extension.</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Here is a more reusable way, assuming you use jQuery</p>\n\n<p>Library function (does not require jQuery):</p>\n\n<pre><code>function stringEndsWithValidExtension(stringToCheck, acceptableExtensionsArray, required) {\n    if (required == false &amp;&amp; stringToCheck.length == 0) { return true; }\n    for (var i = 0; i &lt; acceptableExtensionsArray.length; i++) {\n        if (stringToCheck.toLowerCase().endsWith(acceptableExtensionsArray[i].toLowerCase())) { return true; }\n    }\n    return false;\n}\n\n\nString.prototype.startsWith = function (str) { return (this.match(\"^\" + str) == str) }\n\nString.prototype.endsWith = function (str) { return (this.match(str + \"$\") == str) }\n</code></pre>\n\n<p>Page function (requires jQuery (barely)):</p>\n\n<pre><code>$(\"[id*='btnSaveForm']\").click(function () {\n    if (!stringEndsWithValidExtension($(\"[id*='fileUploader']\").val(), [\".png\", \".jpeg\", \".jpg\", \".bmp\"], false)) {\n        alert(\"Photo only allows file types of PNG, JPG and BMP.\");\n        return false;\n    }\n    return true;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>I like this example:</strong>   </p>\n\n<pre><code>&lt;asp:FileUpload ID=\"fpImages\" runat=\"server\" title=\"maximum file size 1 MB or less\" onChange=\"return validateFileExtension(this)\" /&gt;\n\n&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\n    function ValidateFileUpload(Source, args) {\n        var fuData = document.getElementById('&lt;%= fpImages.ClientID %&gt;');\n        var FileUploadPath = fuData.value;\n\n        if (FileUploadPath == '') {\n            // There is no file selected \n            args.IsValid = false;\n        }\n        else {\n            var Extension = FileUploadPath.substring(FileUploadPath.lastIndexOf('.') + 1).toLowerCase();\n            if (Extension == \"gif\" || Extension == \"png\" || Extension == \"bmp\" || Extension == \"jpeg\") {\n                args.IsValid = true; // Valid file type\n                FileUploadPath == '';\n            }\n            else {\n                args.IsValid = false; // Not valid file type\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>check that if file is selected or not</p>\n\n<pre><code>       if (document.myform.elements[\"filefield\"].value == \"\")\n          {\n             alert(\"You forgot to attach file!\");\n             document.myform.elements[\"filefield\"].focus();\n             return false;  \n         }\n</code></pre>\n\n<p>check the file extension</p>\n\n<pre><code>  var res_field = document.myform.elements[\"filefield\"].value;   \n  var extension = res_field.substr(res_field.lastIndexOf('.') + 1).toLowerCase();\n  var allowedExtensions = ['doc', 'docx', 'txt', 'pdf', 'rtf'];\n  if (res_field.length &gt; 0)\n     {\n          if (allowedExtensions.indexOf(extension) === -1) \n             {\n               alert('Invalid file Format. Only ' + allowedExtensions.join(', ') + ' are allowed.');\n               return false;\n             }\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>None of the existing answers seemed quite compact enough for the simplicity of the request.  Checking if a given file input field has an extension from a set can be accomplished as follows:</p>\n\n<pre><code>function hasExtension(inputID, exts) {\n    var fileName = document.getElementById(inputID).value;\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test(fileName);\n}\n</code></pre>\n\n<p>So example usage might be (where <code>upload</code> is the <code>id</code> of a file input):</p>\n\n<pre><code>if (!hasExtension('upload', ['.jpg', '.gif', '.png']) {\n    // ... block upload\n}\n</code></pre>\n\n<p>Or as a jQuery plugin:</p>\n\n<pre><code>$.fn.hasExtension = function(exts) {\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test($(this).val());\n}\n</code></pre>\n\n<p>Example usage:</p>\n\n<pre><code>if (!$('#upload').hasExtension(['.jpg', '.png', '.gif'])) {\n    // ... block upload\n}\n</code></pre>\n\n<p>The <code>.replace(/\\./g, '\\\\.')</code> is there to escape the dot for the regexp so that basic extensions can be passed in without the dots matching any character.</p>\n\n<p>There's no error checking on these to keep them short, presumably if you use them you'll make sure the input exists first and the extensions array is valid!</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n        function file_upload() {\n            var imgpath = document.getElementById(\"&lt;%=FileUpload1.ClientID %&gt;\").value;\n            if (imgpath == \"\") {\n                alert(\"Upload your Photo...\");\n                document.file.word.focus();\n                return false;\n            }\n            else {\n                // code to get File Extension..\n\n                var arr1 = new Array;\n                arr1 = imgpath.split(\"\\\\\");\n                var len = arr1.length;\n                var img1 = arr1[len - 1];\n                var filext = img1.substring(img1.lastIndexOf(\".\") + 1);\n                // Checking Extension\n                if (filext == \"bmp\" || filext == \"gif\" || filext == \"png\" || filext == \"jpg\" || filext == \"jpeg\" ) {\n                    alert(\"Successfully Uploaded...\")\n                    return false;\n                }\n                else {\n                    alert(\"Upload Photo with Extension ' bmp , gif, png , jpg , jpeg '\");\n                    document.form.word.focus();\n                    return false;\n                }\n            }\n        }\n\n        function Doc_upload() {\n            var imgpath = document.getElementById(\"&lt;%=FileUpload2.ClientID %&gt;\").value;\n            if (imgpath == \"\") {\n                alert(\"Upload Agreement...\");\n                document.file.word.focus();\n                return false;\n            }\n            else {\n                // code to get File Extension..\n\n                var arr1 = new Array;\n                arr1 = imgpath.split(\"\\\\\");\n                var len = arr1.length;\n                var img1 = arr1[len - 1];\n                var filext = img1.substring(img1.lastIndexOf(\".\") + 1);\n                // Checking Extension\n                if (filext == \"txt\" || filext == \"pdf\" || filext == \"doc\") {\n                    alert(\"Successfully Uploaded...\")\n                    return false;\n                }\n                else {\n                    alert(\"Upload File with Extension ' txt , pdf , doc '\");\n                    document.form.word.focus();\n                    return false;\n                }\n            }\n        }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're needing to test remote urls in an input field, you can try testing a simple regex with the types that you're interested in.</p>\n\n<pre><code>$input_field = $('.js-input-field-class');\n\nif ( !(/\\.(gif|jpg|jpeg|tiff|png)$/i).test( $input_field.val() )) {\n  $('.error-message').text('This URL is not a valid image type. Please use a url with the known image types gif, jpg, jpeg, tiff or png.');\n  return false;\n}\n</code></pre>\n\n<p>This will capture anything <strong>ending</strong> in .gif, .jpg, .jpeg, .tiff or .png</p>\n\n<p>I should note that some popular sites like Twitter append a size attribute to the end of their images. For instance, the following would fail this test even though it's a valid image type:</p>\n\n<pre><code>https://pbs.twimg.com/media/BrTuXT5CUAAtkZM.jpg:large\n</code></pre>\n\n<p>Because of that, this isn't a perfect solution. But it will get you to about 90% of the way.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am uploading images to a servlet. The validation whether the uploaded file is an image is done in server side only, by checking the magic numbers in the file header. Is there any way to validate the extensions in client side before submitting the form to servlet? As soon as I hit enter it starts uploading. </p>\n\n<p>I am using Javascript and jQuery in client side.</p>\n",
            "last_activity_date": 1424962989,
            "question_id": 4234589,
            "score": 26,
            "tags": [
                "javascript",
                "jquery",
                "validation",
                "file-upload"
            ],
            "title": "Validation of file extension before uploading file"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>function doAjaxCall() {\n   $.ajaxSetup({complete: onRequestCompleted});\n   $.get(yourUrl,yourData,yourCallback);\n}\n\nfunction onRequestCompleted(xhr,textStatus) {\n   if (xhr.status == 302) {\n      location.href = xhr.getResponseHeader(\"Location\");\n   }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I don't think so. The <a href=\"http://www.w3.org/TR/2006/WD-XMLHttpRequest-20060405/#xmlhttprequest\" rel=\"nofollow\">W3C</a> says that HTTP redirects with certain status codes, including 302, must be transparently followed.</p>\n\n<p>As an experiment, I tried doing Ajax requests from various browsers (Firefox 3.5, Chrome, IE8, IE7, IE6) to a server giving a 302 status code, and showing the status in the browser's request object. In every case, it showed up as 200.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The accepted answer does not work for the reasons given. I posted a comment with a link to a question that described a hack to get round the problem of the 302 being transparently handled by the browser:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/199099/how-to-manage-a-redirect-request-after-a-jquery-ajax-call\">http://stackoverflow.com/questions/199099/how-to-manage-a-redirect-request-after-a-jquery-ajax-call</a></p>\n\n<p>However, it is a bit of a dirty hack and after much digging around I found what I think is a better solution - use <a href=\"http://en.wikipedia.org/wiki/JSON\">JSON</a>. In this case, you can make all responses to ajax requests have the code 200 and, in the body of the response, you add some sort of JSON object which your ajax response handler can then use in the appropriate manner.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Rather than asking the Javascript code to Handle 302, it would be better to return a 500 with custom error code+ message on event of 302</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In my problem reason was:</p>\n\n<p>i was using <strong>localhost/Home/Test</strong> addres for testing the page. But ajax request code using  <strong>127.0.0.1/Home/AjaxRequest</strong> for url parameter. When the urls are different this error occurs.</p>\n\n<p>maybe it helps someone :) </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The best solve is:</p>\n\n<p>set the variable with a attribute of any object example</p>\n\n<pre><code>&lt;html&gt;\n\u00b7\n\u00b7\n     &lt;span url=\"http://www.google.com\"&gt;&lt;/span&gt;\n\u00b7\n\u00b7\n&lt;/html&gt;\n\n$('.example').on('click', function(){\n     $url = $(this).attr('url');\n\n     $.get($url, function(data){ alert(data); })\n})\n</code></pre>\n\n<p>If the url is seted directly in the js, You will should find a error 302, I don't know because reason occur this error, but if you get the url of a attribute, this error not ocurre</p>\n",
                    "is_accepted": false,
                    "score": -5
                }
            ],
            "body": "<p>I use jQuery to make an AJAX POST request to my server, which can return HTTP response with status 302. Then JavaScript just sends GET request to this URL, while I'd like to redirect user to URL in this response. Is this possible?</p>\n",
            "last_activity_date": 1358379341,
            "question_id": 373087,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "http-status-code-302"
            ],
            "title": "Catching 302 FOUND in JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If you want to color \"Alex Thomas\" to red you can do</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;p id='txt'&gt;Alex Thomas&lt;/p&gt;\n&lt;input type='button' id='btn' value='click' /&gt;\n</code></pre>\n\n<p><strong>JS</strong></p>\n\n<pre><code>$('#click').click(function(){\n  $('#txt').attr('color','Red');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>IE prior to 9 doesn't support <code>window.getSelection()</code>. You can use <code>document.selection</code> instead (see <a href=\"http://msdn.microsoft.com/en-us/library/ms535869%28v=VS.85%29.aspx\">this msdn page</a> for the description). This selection object has a method <code>createRange()</code> that returns a <code>TextRange</code> object (see <a href=\"http://msdn.microsoft.com/en-us/library/ms535872%28v=VS.85%29.aspx\">this msdn page</a> for details). </p>\n\n<p>Note that both the <code>selection</code> and <code>textrange</code> objects are Microsofts own implementation and do not follow the W3C standards. You can read more about the <code>textrange</code> and <code>range</code> issues on <a href=\"http://www.quirksmode.org/dom/range_intro.html\">www.quirksmode.org/dom/range_intro.html</a>.</p>\n\n<p>The following implementation works in IE:</p>\n\n<pre><code>$('#click').click(function(){\n    var range = document.selection.createRange();\n    range.pasteHTML(\"&lt;span style='color: red'&gt;\" + range.htmlText + \"&lt;/span&gt;\");\n});\n</code></pre>\n\n<p>It's not nearly as nice as the other implementation since you have to work with strings instead of the dom. There is a little hack where you paste <code>&lt;span id=\"myUniqueId\"&gt;&lt;/span&gt;</code> as a placeholder, and afterwards replace it using the dom. You still have to work with <code>range.htmlText</code> or <code>range.text</code> though.</p>\n\n<p>BTW: the above implementation is obviously IE only. You have to use some browser capability detection to decide which version to use.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>Test this one here: <a href=\"http://jsfiddle.net/6BrWe/\" rel=\"nofollow\">http://jsfiddle.net/6BrWe/</a></p>\n\n<p>It is a bit of a hack and not so pretty but should work in IE and other browsers - I have not done a lot of cross browser testing though :)</p>\n\n<pre><code>$('#click').click(function() {\n    var whatBrowser = getIt();\n    if (whatIsIt == 'notIE' &amp;&amp; whatBrowser) {\n        notIE(whatBrowser);\n    }\n    else if (whatIsIt == \"isIE\"&amp;&amp; whatBrowser) {\n        isIE(whatBrowser);\n    };\n});\n\nvar whatIsIt = \"\";\n\nfunction getIt() {\n    if (window.getSelection) {\n        whatIsIt = \"notIE\";\n        return window.getSelection();\n    }\n    else if (document.getSelection) {\n        whatIsIt = \"notIE\";\n        return document.getSelection();\n    }\n    else {\n        var selection = document.selection &amp;&amp; document.selection.createRange();\n        if (selection.text) {\n            whatIsIt = \"isIE\";\n            return selection;\n        };\n        return false;\n    };\n    return false;\n};\n\nfunction isIE(selection) {\n    if (selection) {\n        var selectionContents = selection.text;\n        if (selectionContents) {\n            selection.pasteHTML('&lt;span class=\"reddy\"&gt;' + selectionContents + '&lt;/span&gt;');\n        };\n    };\n};\n\nfunction notIE(selection) {\n    var range = window.getSelection().getRangeAt(0);\n    var selectionContents = range.extractContents();\n    var span = document.createElement(\"span\");\n    span.className= \"reddy\";\n    span.appendChild(selectionContents);\n    range.insertNode(span);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For a crossbrowser solution see this question on StackOverflow: <a href=\"http://stackoverflow.com/q/3076052/220060\">Is there a cross-browser solution for getSelection()?</a></p>\n\n<p>This question is not quite a duplicate of this one, so I think it is useful to link the question in this answer instead. I made this answer community wiki.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can someone help me get this code working in IE please:</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;p&gt;Alex Thomas&lt;/p&gt;\n&lt;button id=\"click\"&gt;Click&lt;/button&gt;\n</code></pre>\n\n<p><strong>JS</strong></p>\n\n<pre><code>$('#click').click(function(){\n    var range = window.getSelection().getRangeAt(0);\n    var selectionContents = range.extractContents();\n    var span = document.createElement(\"span\");\n    span.style.color = \"red\";\n    span.appendChild(selectionContents);\n    range.insertNode(span);\n});\n</code></pre>\n\n<p>Coded up here: <a href=\"http://jsfiddle.net/WdrC2/\">http://jsfiddle.net/WdrC2/</a></p>\n\n<p>Thanks in advance...</p>\n",
            "last_activity_date": 1350404621,
            "question_id": 5421892,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "internet-explorer"
            ],
            "title": "getSelection() not working in IE"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Deferred objects are great for this. <a href=\"http://api.jquery.com/category/deferred-object/\" rel=\"nofollow\">jQuery provides an implementation</a>. </p>\n\n<p>Example:</p>\n\n<pre><code>var deferreds = [];\n\n['aaa','bbb','ccc'].forEach(function(name){\n    var def = new $.Deferred();\n    deferreds.push(def);\n    conn.collection(name).drop(function(err) {\n        console.log('dropped');\n        def.resolve();\n    });\n});\n\n$.when.apply($, deferreds).then(function() {\n    console.log('all dropped');\n});\n</code></pre>\n\n<p>Other implementations:</p>\n\n<ul>\n<li><a href=\"http://closure-library.googlecode.com/svn-history/r1369/docs/class_goog_async_Deferred.html\" rel=\"nofollow\">Google Closure Library</a></li>\n<li><a href=\"https://github.com/heavylifters/deferred-js\" rel=\"nofollow\">HeavyLifters Deferred Library</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I see you are using <code>mongoose</code> so you are talking about server-side JavaScript. In that case I advice looking at <a href=\"https://github.com/caolan/async\">async module</a> and use <code>async.parallel(...)</code>. You will find this module really helpful - it was developed to solve the problem you are struggling with. Your code may look like this</p>\n\n<pre><code>var async = require('async');\n\nvar calls = [];\n\n['aaa','bbb','ccc'].forEach(function(name){\n    calls.push(function(callback) {\n        conn.collection(name).drop(function(err) {\n            if (err)\n                return callback(err);\n            console.log('dropped');\n            callback(null, name);\n        });\n    }\n});\nasync.parallel(calls, function(err, result) {\n    /* this code will run after all calls finished the job or\n       when any of the calls passes an error */\n    if (err)\n        return console.log(err);\n    console.log(result);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>The way to do it is to pass the tasks a callback that updates a shared counter. When the shared counter reaches zero you know that all tasks have finished so you can continue with your normal flow.</p>\n\n<pre><code>var ntasks_left_to_go = 4;\n\nvar callback = function(){\n    ntasks_left_to_go -= 1;\n    if(ntasks_left_to_go &lt;= 0){\n         console.log('All tasks have completed. Do your stuff');\n    }\n}\n\ntask1(callback);\ntask2(callback);\ntask3(callback);\ntask4(callback);\n</code></pre>\n\n<p>Of course, there are many ways to make this kind of code more generic or reusable and any of the <a href=\"http://stackoverflow.com/questions/9432587/what-is-the-correct-way-to-chain-async-calls-in-javascript/9432771#9432771\">many async programing libraries</a> out there should have at least one function to do this kind of thing.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Use <a href=\"https://github.com/kriskowal/q\">Q</a> promises.</p>\n\n<pre><code>var Q = require('q');\nvar mongoose = require('mongoose');\n\nmongoose.connect('your MongoDB connection string');\nvar conn = mongoose.connection;\n\nvar promises = ['aaa','bbb','ccc'].map(function(name){\n    var collection = conn.collection(name);\n    return Q.ninvoke(collection, 'drop')\n      .then(function() { console.log('dropped ' + name); });\n});\n\nQ.all(promises)\n.then(function() { console.log('all dropped'); })\n.fail(console.error);\n</code></pre>\n\n<p>This drops each collection, printing \u201cdropped\u201d after each one, and then prints \u201call dropped\u201d when complete. If an error occurs, it is displayed to <code>stderr</code>.</p>\n\n<p><strong>Update</strong></p>\n\n<p>Here is a version that uses <a href=\"https://github.com/petkaantonov/bluebird\">Bluebird</a>, another very popular promise library for Node.js:</p>\n\n<pre><code>var Promise = require('bluebird');\nvar mongoose = Promise.promisifyAll(require('mongoose'));\n\nmongoose.connect('your MongoDB connection string');\nvar conn = mongoose.connection;\n\nvar promises = ['aaa', 'bbb', 'ccc'].map(function(name) {\n  return conn.collection(name).dropAsync().then(function() {\n    console.log('dropped ' + name);\n  });\n});\n\nPromise.all(promises)\n.then(function() { console.log('all dropped'); })\n.error(console.error);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>With <code>deferred</code> (another promise/deferred implementation) you can do:</p>\n\n<pre><code>// Setup 'pdrop', promise version of 'drop' method\nvar deferred = require('deferred');\nmongoose.Collection.prototype.pdrop =\n    deferred.promisify(mongoose.Collection.prototype.drop);\n\n// Drop collections:\ndeferred.map(['aaa','bbb','ccc'], function(name){\n    return conn.collection(name).pdrop()(function () {\n      console.log(\"dropped\");\n    });\n}).end(function () {\n    console.log(\"all dropped\");\n}, null);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Expanding upon @freakish answer, async also offers a each method, which seems especially suited for your case:</p>\n\n<pre><code>var async = require('async');\n\nasync.each(['aaa','bbb','ccc'], function(name, callback) {\n    conn.collection(name).drop( callback );\n}, function(err) {\n    if( err ) { return console.log(err); }\n    console.log('all dropped');\n});\n</code></pre>\n\n<p>IMHO, this makes the code both more efficient and more legible. I've taken the liberty of removing the <code>console.log('dropped')</code> - if you want it, use this instead:</p>\n\n<pre><code>var async = require('async');\n\nasync.each(['aaa','bbb','ccc'], function(name, callback) {\n    // if you really want the console.log( 'dropped' ),\n    // replace the 'callback' here with an anonymous function\n    conn.collection(name).drop( function(err) {\n        if( err ) { return callback(err); }\n        console.log('dropped');\n        callback()\n    });\n}, function(err) {\n    if( err ) { return console.log(err); }\n    console.log('all dropped');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>All answers are quite old. Since the beginning of 2013 Mongoose started to support <a href=\"http://mongoosejs.com/docs/api.html#promise-js\" rel=\"nofollow\">promises</a> gradually for all queries, so that would be the recommended way of structuring several async calls in the required order going forward I guess.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I do this without external libaries:</p>\n\n<pre><code>var yourArray = ['aaa','bbb','ccc'];\nvar counter = [];\n\nyourArray.forEach(function(name){\n    conn.collection(name).drop(function(err) {\n        counter.push(true);\n        console.log('dropped');\n        if(counter.length === yourArray.length){\n            console.log('all dropped');\n        }\n    });                \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to drop some mongodb collections, but that's an asynchronous task. The code will be:</p>\n\n<pre><code>var mongoose = require('mongoose');\n\nmongoose.connect('mongo://localhost/xxx');\n\nvar conn = mongoose.connection;\n\n['aaa','bbb','ccc'].forEach(function(name){\n    conn.collection(name).drop(function(err) {\n        console.log('dropped');\n    });\n});\nconsole.log('all dropped');\n</code></pre>\n\n<p>The console displays:</p>\n\n<pre><code>all dropped\ndropped\ndropped\ndropped\n</code></pre>\n\n<p>What is the simplest way to make sure <code>all dropped</code> will be printed after all collections has been dropped? Any 3rd-party can be used to simplify the code.</p>\n",
            "last_activity_date": 1410300451,
            "question_id": 10551499,
            "score": 19,
            "tags": [
                "javascript",
                "node.js",
                "asynchronous",
                "mongoose",
                "synchronous"
            ],
            "title": "Simplest way to wait some asynchronous tasks complete, in Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Do you want to get the time in Germany, or the time for the user's timezone, wherever they are? If the latter, the <code>Date()</code> function defaults to work in the local timezone.</p>\n\n<pre><code>var d = new Date();    // defaults to the current time in the current timezone\nif (d.getHours() &lt; 12) {\n    alert (\"Good morning.\");\n} else {\n    alert (\"Good afternoon.\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can get the local timezone offset of the client to get the GMT time and then add the offset hours of the Germany timezone (Central European Time GMT+1):</p>\n\n<pre><code>function getDate(offset){\n  var now = new Date();\n  var hour = 60*60*1000;\n  var min = 60*1000;\n  return new Date(now.getTime() + (now.getTimezoneOffset() * min) + (offset * hour));\n}\n\n//...\n\nvar dateCET = getDate(1); // Central European Time is GMT +1\n\nif (dateCET.getHours() &lt; 12) {\n    alert (\"Good morning.\");\n} else {\n    alert (\"Good afternoon.\");\n}\n</code></pre>\n\n<p><strong>Update:</strong> I agree with @Josh, the above code is completely client dependent. Let's try to do it better:</p>\n\n<pre><code>$(document).ready(function(){\n  var timezone = \"Europe/Berlin\";\n  $.getJSON(\"http://json-time.appspot.com/time.json?tz=\"+timezone+\"&amp;callback=?\",\n    function(data){\n      if (data.hour &lt; 12) {\n        alert (\"Good morning in \"+timezone);\n      } else {\n        alert (\"Good afternoon in \"+timezone);\n      }\n    })\n});\n</code></pre>\n\n<p>We are now taking advantage of <a href=\"http://remysharp.com/2007/10/08/what-is-jsonp/\">JSONP</a> to do Cross-Domain requests to the <a href=\"http://simonwillison.net/2008/Jun/21/jsontime/\">jsontime</a> server, this server exposes a complete JSON API to query time and timezone information.</p>\n\n<p>You can play with the code <a href=\"http://jsbin.com/ozuku/edit\">here</a> and you can explore the JSONP API <a href=\"http://json-time.appspot.com/\">here</a>.</p>\n\n<p>Hurray!, no server-side code!</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>You need to inject the date/time from your web server into a hidden field on the page, and then you can access that with jQuery and load the natural <a href=\"http://www.w3schools.com/jsref/jsref%5Fobj%5Fdate.asp\" rel=\"nofollow\">Javascript Date</a> object.  You do <strong>not</strong> want to rely on the client-side date/time because it is out of your control and could be set to something outrageous.  Trust me.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am using jQuery and I need to get the local time for Germany.</p>\n\n<p>Anyone coming to my website from any country should be able to know what time it is in Germany.</p>\n\n<p>If the time is between 0:00 and 12:00 I need to make an alert reading: \"Good Morning\".</p>\n\n<p>If the time is between 12:00 and 17:00 I need to make an alert reading: \"Good Afternoon\".</p>\n\n<p>How can I implement this in jQuery?</p>\n",
            "last_activity_date": 1335822641,
            "question_id": 660927,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "plugins",
                "time"
            ],
            "title": "How can I obtain the local time in jQuery?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<h2>TL;DR: DEMO: <a href=\"http://jsfiddle.net/KtbYR/5/\">http://jsfiddle.net/KtbYR/5/</a></h2>\n\n<p><code>YT_ready</code>, <code>getFrameID</code> and <code>onYouTubePlayerAPIReady</code> are functions as defined in <strong><a href=\"http://stackoverflow.com/questions/7988476/listening-for-youtube-event-in-jquery/7988536#7988536\">this answer</a></strong>. Both methods can be implemented without any preloaded library. In my previous answer, I showed a method to implement the feature for a single frame.</p>\n\n<p>In this answer, I focus on multiple frames.</p>\n\n<p><strong>HTML example code</strong> (important tags and attributes are capitalized, <code>&lt;iframe src id&gt;</code>):</p>\n\n<pre><code>&lt;div&gt;\n  &lt;img class='thumb' src='http://i2.cdnds.net/11/34/odd_alan_partridge_bio_cover.jpg'&gt;\n  &lt;IFRAME ID=\"frame1\" SRC=\"http://www.youtube.com/embed/u1zgFlCw8Aw?enablejsapi=1\" width=\"640\" height=\"390\" frameborder=\"0\"&gt;&lt;/IFRAME&gt;\n&lt;/div&gt;\n&lt;div&gt;\n  &lt;img class='thumb' src='http://i2.cdnds.net/11/34/odd_alan_partridge_bio_cover.jpg'&gt;\n  &lt;IFRAME ID=\"frame2\" SRC=\"http://www.youtube.com/embed/u1zgFlCw8Aw?enablejsapi=1\" width=\"640\" height=\"390\" frameborder=\"0\"&gt;&lt;/IFRAME&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>JavaScript code (<code>YT_ready</code>, <code>getFrameID</code>, <code>onYouTubePlayerAPIReady</code> and the <em>YouTube Frame API</em> script loader are defined <a href=\"http://stackoverflow.com/questions/7988476/listening-for-youtube-event-in-jquery/7988536#7988536\">here</a>)</strong></p>\n\n<pre><code>var players = {}; //Define a player storage object, to expose methods,\n                  //  without having to create a new class instance again.\nYT_ready(function() {\n    $(\".thumb + iframe[id]\").each(function() {\n        var identifier = this.id;\n        var frameID = getFrameID(identifier);\n        if (frameID) { //If the frame exists\n            players[frameID] = new YT.Player(frameID, {\n                events: {\n                    \"onReady\": createYTEvent(frameID, identifier)\n                }\n            });\n        }\n    });\n});\n\n// Returns a function to enable multiple events\nfunction createYTEvent(frameID, identifier) {\n    return function (event) {\n        var player = players[frameID]; // Set player reference\n        var the_div = $('#'+identifier).parent();\n        the_div.children('.thumb').click(function() {\n            var $this = $(this);\n            $this.fadeOut().next().addClass('play');\n            if ($this.next().hasClass('play')) {\n                player.playVideo();\n            }\n        });\n    }\n}\n</code></pre>\n\n<p>In my previous answer, I bound the <code>onStateChange</code> event. In this example, I used the <code>onReady</code> event, because you want to call the functions only once, at initialization.</p>\n\n<p>This example works as follows:</p>\n\n<ul>\n<li><p>The following methods are defined in <a href=\"http://stackoverflow.com/questions/7988476/listening-for-youtube-event-in-jquery/7988536#7988536\">this answer</a>.</p>\n\n<ol>\n<li>The <em>YouTube Frame API</em> is loaded from <a href=\"http://youtube.com/player_api\">http://youtube.com/player_api</a>.</li>\n<li>When this external script has finished loading, <code>onYoutubePlayerAPIReady</code> is called, which in his turn activates all functions as defined using <code>YT_ready</code></li>\n</ol></li>\n<li><p>The declaration of the following methods are shown here, but implemented using <a href=\"http://stackoverflow.com/questions/7988476/listening-for-youtube-event-in-jquery/7988536#7988536\">this answer</a>. Explanation based on the example:</p>\n\n<ol>\n<li>Loops through each <code>&lt;iframe id&gt;</code> object, which is placed right after <code>&lt;.. class=\"thumb\"&gt;</code>.</li>\n<li>At each frame element, the <code>id</code> is retrieved, and stored in the <code>identifier</code> variable.</li>\n<li>The internal ID of the iframe is retrieved through <code>getFrameID</code>. This ensures that the <code>&lt;iframe&gt;</code> is properly formatted for the API. <em>In this example code, the returned ID is equal to <code>identifier</code>, because I have already attached an ID to the <code>&lt;iframe&gt;</code>.</em></li>\n<li>When the <code>&lt;iframe&gt;</code> exists, and a valid YouTube video, a new player instance is created, and the reference is stored in the <code>players</code> object, accessible by key <code>frameID</code>.</li>\n<li>At the creation of the player instance, a *<em><code>onReady</code></em> event is defined. This method will be invoked when the API is fully initialized for the frame.</li>\n<li><p><strong><code>createYTEvent</code></strong><br />\nThis method returns a dynamically created function, which adds functionality for separate players. The most relevant parts of the code are:</p>\n\n<pre><code>function createYTEvent(frameID, identifier) {\n    return function (event) {\n        var player = players[frameID]; // Set player reference\n        ...\n                player.playVideo();\n    }\n}\n</code></pre>\n\n<ul>\n<li><code>frameID</code> is the ID of the frame, used to enable the <em>YouTube Frame API</em>.</li>\n<li><code>identifier</code> is the ID as defined in <code>YT_ready</code>, not necessarily an <code>&lt;iframe&gt;</code> element. <code>getFrameID</code> will attempt to find the closest matching frame for a given id. That is, it returns the ID of a given <code>&lt;iframe&gt;</code> element, or: If the given element is not an <code>&lt;iframe&gt;</code>, the function looks for a child which is a <code>&lt;iframe&gt;</code>, and returns the ID of this frame. If the frame does not exists, the function will postfix the given ID by <code>-frame</code>.</li>\n<li>players[playerID]` refers to the initialized player instance. </li>\n</ul></li>\n</ol></li>\n</ul>\n\n<h2>Make sure that you <em>also</em> check <a href=\"http://stackoverflow.com/questions/7988476/listening-for-youtube-event-in-jquery/7988536#7988536\">this answer</a>, because the core functionality of this answer is based on that.</h2>\n\n<p><a href=\"http://stackoverflow.com/search?q=user%3A938089+%5byoutube-api%5d&amp;submit=search\">Other YouTube Frame API answers</a>. In these answers, I showed various implementations of the YouTube Frame/JavaScript API.</p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>I'm trying to understand how to target an existing iframe using the YouTube API (i.e. without constructing an iframe with the script).</p>\n\n<p>As usual, Google does not give enough API examples, but explains that it IS possible, here <a href=\"http://code.google.com/apis/youtube/iframe_api_reference.html\">http://code.google.com/apis/youtube/iframe_api_reference.html</a></p>\n\n<p>Here is an example of what I'm trying to do - the video underneath the thumbnail should play. I am almost there, but only the first video plays...</p>\n\n<p><a href=\"http://jsfiddle.net/SparrwHawk/KtbYR/2/\">http://jsfiddle.net/SparrwHawk/KtbYR/2/</a></p>\n",
            "last_activity_date": 1329991656,
            "question_id": 8948403,
            "score": 6,
            "tags": [
                "javascript",
                "youtube-api",
                "youtube-javascript-api"
            ],
            "title": "YouTube API Target (multiple) existing iframe(s)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>In jQuery before 1.8, try using <code>$(\"#element\").data(\"events\")</code></p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>There is also jQuery extension: <a href=\"http://james.padolsey.com/javascript/debug-jquery-events-with-listhandlers/\">listHandlers</a></p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>I just discovered visual event 2:</p>\n\n<p><a href=\"http://www.sprymedia.co.uk/article/Visual+Event+2\" rel=\"nofollow\">http://www.sprymedia.co.uk/article/Visual+Event+2</a></p>\n\n<p>go under the \"make it go section\" and drag the text link to your bookmark toolbar\ngo to a page that has events and click on the bookmark</p>\n\n<p>tested in FF Mac</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>When debugging, if you want to just see if there's an event, I recommend using <a href=\"http://www.sprymedia.co.uk/article/Visual+Event+2\">Visual Event</a> or the <em>Elements\" section of Chrome's Developer Tools: select an element and look for \"Event Listeners</em> on the bottom right.</p>\n\n<p>In your code, if you are using jQuery before version 1.8, you can use: </p>\n\n<pre><code>$(selector).data(\"events\")\n</code></pre>\n\n<p>to get the events. As of version 1.8, this is discontinued (see <a href=\"http://bugs.jquery.com/ticket/10589\">this bug ticket</a>). You can use:</p>\n\n<pre><code>$._data(element, \"events\")\n</code></pre>\n\n<p>but this is not recommended since it is an internal jQuery structure, and could change in future releases.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/446892/how-to-find-event-listeners-on-a-dom-node\">This question</a> has some answers which may be useful, but none of them are particularly elegant in the same way that <code>$(selector).data(\"events\")</code> was. </p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Without jQuery:</p>\n\n<p>if the listeners were added using elem.addEventListener() method, it is not easy to list these listeners. You can override the EventTarget.addEventListener() method by wrapping it with your own. Then you will have the information, what listeners were registered.</p>\n\n<pre><code>var f = EventTarget.prototype.addEventListener; // store original\nEventTarget.prototype.addEventListener = function(type, fn, capture) {\n  this.f = f;\n  this.f(type, fn, capture); // call original method\n  alert('Added Event Listener: on' + type);\n}\n</code></pre>\n\n<p>Working example you can find at <a href=\"http://jsfiddle.net/tomas1000r/RDW7F/\">http://jsfiddle.net/tomas1000r/RDW7F/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>Tried to search online, but does not look like I can formulate search query properly.</p>\n\n<p>So as simple as it sounds, how can I, either with jquery or just javascript list all the handlers or event listeners that are attached to element(s)/document/window or present in dom.</p>\n\n<p>Just wondering.</p>\n\n<p>Thank you in advance.</p>\n",
            "last_activity_date": 1390508791,
            "question_id": 2382994,
            "score": 60,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events"
            ],
            "title": "How to check if any JavaScript event listeners/handlers attached to an element/document?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.datejs.com/\" rel=\"nofollow\">Date.js</a> can do it all.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Check out <a href=\"http://www.datejs.com/\">Date.js</a></p>\n\n<pre><code>Date.today().previous().monday()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Using the <code>getDay</code> method of Date objects, you can know the number of day of the week (being 0=Sunday, 1=Monday, etc).</p>\n\n<p>You can then subtract that number of days plus one, for example:</p>\n\n<pre><code>function getMonday(d) {\n  d = new Date(d);\n  var day = d.getDay(),\n      diff = d.getDate() - day + (day == 0 ? -6:1); // adjust when day is sunday\n  return new Date(d.setDate(diff));\n}\n\ngetMonday(new Date()); // Mon Nov 08 2010\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 74
                },
                {
                    "body": "<p>Not sure how it compares for performance, but this works.</p>\n\n<pre><code>var today = new Date();\nvar day = today.getDay() || 7; // Get current day number, converting Sun. to 7\nif( day !== 1 )                // Only manipulate the date if it isn't Mon.\n    today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1\n                                         //   multiplied by negative 24\nalert(today); // will be Monday\n</code></pre>\n\n<p>Or as a function:</p>\n\n<pre><code>getMonday( date ) {\n    var day = date.getDay() || 7;  \n    if( day !== 1 ) \n        date.setHours(-24 * (day - 1)); \n    return date;\n}\n\ngetMonday(new Date());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Check out: <strong><a href=\"http://momentjs.com/\" rel=\"nofollow\">moment.js</a></strong></p>\n\n<p>Example:</p>\n\n<pre><code>moment().day(-7); // last Sunday (0 - 7)\nmoment().day(7); // next Sunday (0 + 7)\nmoment().day(10); // next Wednesday (3 + 7)\nmoment().day(24); // 3 Wednesdays from now (3 + 7 + 7 + 7)\n</code></pre>\n\n<p>Bonus: works with node.js too</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'm using this</p>\n\n<pre><code>function get_next_week_start() {\n   var now = new Date();\n   var next_week_start = new Date(now.getFullYear(), now.getMonth(), now.getDate()+(8 - now.getDay()));\n   return next_week_start;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need the fastest way to get the first day of the week. For example today is 11 of november and thursday, i need to convert that date to 8 of november (monday). I need the fastest method for MongoDB map function, any ideas? </p>\n",
            "last_activity_date": 1412236338,
            "question_id": 4156434,
            "score": 31,
            "tags": [
                "javascript",
                "algorithm"
            ],
            "title": "JavaScript - get the first day of the week from current date"
        },
        {
            "answer_count": 23,
            "answers": [
                {
                    "body": "<p>short and easy recursive function (you could do it with a loop, too, but i don't think that would make any difference in performance):</p>\n\n<pre><code>function factorial (n){\n  if (n==0 || n==1){\n    return 1;\n  }\n  return factorial(n-1)*n;\n} \n</code></pre>\n\n<p>for a very large n, you could use the <a href=\"http://en.wikipedia.org/wiki/Stirling%27s_approximation\" rel=\"nofollow\">stirlings approximation</a> - but that will only give you an approximate value.</p>\n\n<p><strong>EDIT:</strong> a comment on why i'm getting a downvote for this would have been nice...</p>\n\n<p><strong>EDIT2:</strong> this would be the soulution using a loop (wich would be the better choice):</p>\n\n<pre><code>function factorial (n){\n  j = 1;\n  for(i=1;i&lt;=n;i++){\n    j = j*i;\n  }\n  return j;\n}\n</code></pre>\n\n<p>i think the best solution would be to use the cached values, as Margus mentioned and use the <a href=\"http://en.wikipedia.org/wiki/Stirling%27s_approximation\" rel=\"nofollow\">stirlings approximation</a> for larger values (assumed you have to be <em>realy fast</em> and don't have to be <em>that</em> exact on such big numbers).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can <a href=\"http://www.wolframalpha.com/input/?i=(1...100)!\" rel=\"nofollow\">search for (1...100)! on WolframAlpha</a> to pre-calculate the factorial sequence.</p>\n\n<p>The first 100 numbers are:</p>\n\n<pre><code>1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000, 20922789888000, 355687428096000, 6402373705728000, 121645100408832000, 2432902008176640000, 51090942171709440000, 1124000727777607680000, 25852016738884976640000, 620448401733239439360000, 15511210043330985984000000, 403291461126605635584000000, 10888869450418352160768000000, 304888344611713860501504000000, 8841761993739701954543616000000, 265252859812191058636308480000000, 8222838654177922817725562880000000, 263130836933693530167218012160000000, 8683317618811886495518194401280000000, 295232799039604140847618609643520000000, 10333147966386144929666651337523200000000, 371993326789901217467999448150835200000000, 13763753091226345046315979581580902400000000, 523022617466601111760007224100074291200000000, 20397882081197443358640281739902897356800000000, 815915283247897734345611269596115894272000000000, 33452526613163807108170062053440751665152000000000, 1405006117752879898543142606244511569936384000000000, 60415263063373835637355132068513997507264512000000000, 2658271574788448768043625811014615890319638528000000000, 119622220865480194561963161495657715064383733760000000000, 5502622159812088949850305428800254892961651752960000000000, 258623241511168180642964355153611979969197632389120000000000, 12413915592536072670862289047373375038521486354677760000000000, 608281864034267560872252163321295376887552831379210240000000000, 30414093201713378043612608166064768844377641568960512000000000000, 1551118753287382280224243016469303211063259720016986112000000000000, 80658175170943878571660636856403766975289505440883277824000000000000, 4274883284060025564298013753389399649690343788366813724672000000000000, 230843697339241380472092742683027581083278564571807941132288000000000000, 12696403353658275925965100847566516959580321051449436762275840000000000000, 710998587804863451854045647463724949736497978881168458687447040000000000000, 40526919504877216755680601905432322134980384796226602145184481280000000000000, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 138683118545689835737939019720389406345902876772687432540821294940160000000000000, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 507580213877224798800856812176625227226004528988036003099405939480985600000000000000, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 1982608315404440064116146708361898137544773690227268628106279599612729753600000000000000, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 8247650592082470666723170306785496252186258551345437492922123134388955774976000000000000000, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 36471110918188685288249859096605464427167635314049524593701628500267962436943872000000000000000, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 171122452428141311372468338881272839092270544893520369393648040923257279754140647424000000000000000, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 850478588567862317521167644239926010288584608120796235886430763388588680378079017697280000000000000000, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 4470115461512684340891257138125051110076800700282905015819080092370422104067183317016903680000000000000000, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 24809140811395398091946477116594033660926243886570122837795894512655842677572867409443815424000000000000000000, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 145183092028285869634070784086308284983740379224208358846781574688061991349156420080065207861248000000000000000000, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 894618213078297528685144171539831652069808216779571907213868063227837990693501860533361810841010176000000000000000000, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 5797126020747367985879734231578109105412357244731625958745865049716390179693892056256184534249745940480000000000000000000, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 39455239697206586511897471180120610571436503407643446275224357528369751562996629334879591940103770870906880000000000000000000, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 281710411438055027694947944226061159480056634330574206405101912752560026159795933451040286452340924018275123200000000000000000000, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 2107757298379527717213600518699389595229783738061356212322972511214654115727593174080683423236414793504734471782400000000000000000000, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 16507955160908461081216919262453619309839666236496541854913520707833171034378509739399912570787600662729080382999756800000000000000000000, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 135200152767840296255166568759495142147586866476906677791741734597153670771559994765685283954750449427751168336768008192000000000000000000000, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 1156772507081641574759205162306240436214753229576413535186142281213246807121467315215203289516844845303838996289387078090752000000000000000000000, 108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000, 10329978488239059262599702099394727095397746340117372869212250571234293987594703124871765375385424468563282236864226607350415360000000000000000000000, 991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000, 96192759682482119853328425949563698712343813919172976158104477319333745612481875498805879175589072651261284189679678167647067832320000000000000000000000, 9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000, 933262154439441526816992388562667004907159682643816214685929638952175999932299156089414639761565182862536979208272237582511852109168640000000000000000000000, 93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000\n</code></pre>\n\n<p>If you still want to calculate the values yourself, you can use <a href=\"http://en.wikipedia.org/wiki/Memoization\" rel=\"nofollow\">memoization</a>:</p>\n\n<pre><code>var f = [];\nfunction factorial (n) {\n  if (n == 0 || n == 1)\n    return 1;\n  if (f[n] &gt; 0)\n    return f[n];\n  return f[n] = factorial(n-1) * n;\n} \u200b\n</code></pre>\n\n<h2>Edit: 21.08.2014</h2>\n\n<h3>Solution 2</h3>\n\n<p>I thought it would be useful to add a working example of <strong>lazy</strong> <strong>iterative</strong> <strong>factorial function</strong> that uses <strong>big numbers</strong> to get <strong>exact</strong> result with <strong>memoization</strong> and <strong>cache</strong> as comparison</p>\n\n<pre><code>var f = [new BigNumber(\"1\"), new BigNumber(\"1\")];\nvar i = 2;\nfunction factorial(n)\n{\n  if (typeof f[n] != 'undefined')\n    return f[n];\n  var result = f[i-1];\n  for (; i &lt;= n; i++)\n      f[i] = result = result.multiply(i.toString());\n  return result;\n}\nvar cache = 100;\n//due to memoization following line will cache first 100 elements\nfactorial(cache);\n</code></pre>\n\n<p>I assume you would use <a href=\"http://stackoverflow.com/questions/500431/what-is-the-scope-of-variables-in-javascript\">some kind of closure</a> to limit variable name visibility.</p>\n\n<p><strong>Ref</strong> : <a href=\"http://jsfromhell.com/classes/bignumber\" rel=\"nofollow\">BigNumber</a>\n<strong>Sandbox</strong> : <a href=\"http://jsfiddle.net/margusmartsepp/tcfpvc1k/5/\" rel=\"nofollow\">JsFiddle</a></p>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>You should use a loop. </p>\n\n<p>Here are two versions benchmarked by calculating the factorial of 100 for 10.000 times.</p>\n\n<p><strong>Recursive</strong></p>\n\n<pre><code>function rFact(num)\n{\n    if (num === 0)\n      { return 1; }\n    else\n      { return num * rFact( num - 1 ); }\n}\n</code></pre>\n\n<p><strong>Iterative</strong> </p>\n\n<pre><code>function sFact(num)\n{\n    var rval=1;\n    for (var i = 2; i &lt;= num; i++)\n        rval = rval * i;\n    return rval;\n}\n</code></pre>\n\n<p>Live at : <a href=\"http://jsfiddle.net/xMpTv/\">http://jsfiddle.net/xMpTv/</a></p>\n\n<p><strong>My results show:</strong><br>\n- <strong>Recursive</strong> ~ 150 milliseconds<br>\n- <strong>Iterative</strong> ~ 5 milliseconds..</p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>I still think Margus's answer is the best one. However if you want to calculate the factorials of numbers within the range 0 to 1 (ie the gamma function) as well, then you cannot use that approach because the lookup table will have to contain infinite values.</p>\n\n<p>However, you <em>can</em> approximate the values of the factorials, and it's pretty fast, faster than recursively calling itself or looping it at least (especially when values start to get bigger).</p>\n\n<p>A good approximation method is Lanczos's one</p>\n\n<p>Here is an implementation in JavaScript (ported from a calculator I wrote months ago):</p>\n\n<pre><code>function factorial(op) {\n // Lanczos Approximation of the Gamma Function\n // As described in Numerical Recipes in C (2nd ed. Cambridge University Press, 1992)\n var z = op + 1;\n var p = [1.000000000190015, 76.18009172947146, -86.50532032941677, 24.01409824083091, -1.231739572450155, 1.208650973866179E-3, -5.395239384953E-6];\n\n var d1 = Math.sqrt(2 * Math.PI) / z;\n var d2 = p[0];\n\n for (var i = 1; i &lt;= 6; ++i)\n  d2 += p[i] / (z + i);\n\n var d3 = Math.pow((z + 5.5), (z + 0.5));\n var d4 = Math.exp(-(z + 5.5));\n\n d = d1 * d2 * d3 * d4;\n\n return d;\n}\n</code></pre>\n\n<p>You can now do cool stuff like <code>factorial(0.41)</code>, etc however accuracy might be a little off, after all, it is an approximation of the result.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>The code to calculate factorial depends on your requirements.  </p>\n\n<ol>\n<li>Are you concerned about overflow?  </li>\n<li>What range of inputs will you have?  </li>\n<li>Is it more important for you to minimize size or time? </li>\n<li>What are you going to do with the factorial?  </li>\n</ol>\n\n<p>Regarding points 1 and 4, it is often more useful to have a function to evaluate the <em>log</em> of the factorial directly rather than to have a function to evaluate factorial itself.</p>\n\n<p>Here's a <a href=\"http://www.johndcook.com/blog/2010/08/16/how-to-compute-log-factorial/\" rel=\"nofollow\">blog post</a> that discusses these issues.  Here is some <a href=\"http://www.johndcook.com/csharp_log_factorial.html\" rel=\"nofollow\">C# code for computing log factorial</a> that would be trivial to port to JavaScript.  But it may not be best for your needs depending on your answers to the questions above.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Lookup table is the obvious way to go, if you're working with natural numbers.\nTo calculate any factorial in real-time, you can speed it with a cache, saving the numbers you've calculated before. Something like:</p>\n\n<pre><code>factorial = (function() {\n    var cache = {},\n        fn = function(n) {\n            if (n === 0) {\n                return 1;\n            } else if (cache[n]) {\n                return cache[n];\n            }\n            return cache[n] = n * fn(n -1);\n        };\n    return fn;\n}();\n</code></pre>\n\n<p>You can precalculate some values in order to speed it even more.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Just for completeness, here is a recursive version that would allow \ntail call optimization. I'm not sure if tail call optimizations are performed in JavaScript though..</p>\n\n<pre><code>function rFact(n, acc)\n{\n    if (n == 0 || n == 1) return acc; \n    else return rFact(n-1, acc*n); \n}\n</code></pre>\n\n<p>To call it:</p>\n\n<pre><code>rFact(x, 1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is an iterative solution that uses less stack space and save previously computed values in a self-memoizing way:</p>\n\n<pre><code>Math.factorial = function(n){\n    if(this.factorials[n]){ // memoized\n        return this.factorials[n];\n    }\n    var total=1;\n    for(var i=n; i&gt;0; i--){\n        total*=i;\n    }\n    this.factorials[n] = total; // save\n    return total;\n};\nMath.factorials={}; // store\n</code></pre>\n\n<p>Also note that I am adding this to the Math object which is an object literal so there is no prototype.  Rather just binding these to the function directly.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I came across this post. Inspired by all contributions here I came up with my own version, which has two features that I haven't seen discussed before:\n1) A check to ensure the argument is a non-negative integer\n2) Making a unit out of the cache and the function to make it one self contained bit of code.\nFor fun, I tried to make it as compact as possible. Some may find that elegant, others may think it terribly obscure. Anyway, here it is:</p>\n\n<pre><code>var fact;\n(fact = function(n){\n    if ((n = parseInt(n)) &lt; 0 || isNaN(n)) throw \"Must be non-negative number\";\n    var cache = fact.cache, i = cache.length - 1;\n    while (i &lt; n) cache.push(cache[i++] * i);\n    return cache[n];\n}).cache = [1];\n</code></pre>\n\n<p>You can either pre fill the cache, or allow it to be filled as the calls go by. But the initial element (for fact(0) must be present or it will break. </p>\n\n<p>Enjoy :)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I believe the following is the most sustainable and efficient piece of code from the comments above. You can use this in your global application js architecture... and, not worry about writing it in multiple namespaces (since its a task which probably doesn't need much augmenting). I've included 2 method names (based on preference) but both can be used as they're just references.</p>\n\n<pre><code>Math.factorial = Math.fact = function(n) {\n    if (isNaN(n)||n&lt;0) return undefined;\n    var f = 1; while (n &gt; 1) {\n        f *= n--;\n    } return f;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>// if you don't want to update the Math object, use `var factorial = ...`\nMath.factorial = (function() {\n    var f = function(n) {\n        if (n &lt; 1) {return 1;}  // no real error checking, could add type-check\n        return (f[n] &gt; 0) ? f[n] : f[n] = n * f(n -1);\n    }\n    for (i = 0; i &lt; 101; i++) {f(i);} // precalculate some values\n    return f;\n}());\n\nfactorial(6); // 720, initially cached\nfactorial[6]; // 720, same thing, slightly faster access, \n              // but fails above current cache limit of 100\nfactorial(100); // 9.33262154439441e+157, called, but pulled from cache\nfactorial(142); // 2.6953641378881614e+245, called\nfactorial[141]; // 1.89814375907617e+243, now cached\n</code></pre>\n\n<p>This does the caching of the first 100 values on the fly, and does not introduce an external variable into scope for the cache, storing the values as properties of the function object itself, which means that if you know <code>factorial(n)</code> has already been calculated, you can simply refer to it as <code>factorial[n]</code>, which is slightly more efficient.  Running these first 100 values will take sub-millisecond time in modern browsers.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Behold, the memoizer, which takes any single-argument function and memoizes it. Turns out to be marginally faster than @xPheRe's <a href=\"http://stackoverflow.com/a/3959682/36537\">solution</a>, including the limit on the size of the cache and associated checking, because I use shortcircuiting and so on.</p>\n\n<pre><code>function memoize(func, max) {\n    max = max || 5000;\n    return (function() {\n        var cache = {};\n        var remaining = max;\n        function fn(n) {\n            return (cache[n] || (remaining-- &gt;0 ? (cache[n]=func(n)) : func(n)));\n        }\n        return fn;\n    }());\n}\n\nfunction fact(n) {\n    return n&lt;2 ? 1: n*fact(n-1);\n}\n\n// construct memoized version\nvar memfact = memoize(fact,170);\n\n// xPheRe's solution\nvar factorial = (function() {\n    var cache = {},\n        fn = function(n) {\n            if (n === 0) {\n                return 1;\n            } else if (cache[n]) {\n                return cache[n];\n            }\n            return cache[n] = n * fn(n -1);\n        };\n    return fn;\n}());\n</code></pre>\n\n<p>Approximately 25x faster on my machine in Chrome than the recursive version, and 10% faster than xPheRe's.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is an implementation which calculates both positive and negative factorials.\nIt's fast and simple.</p>\n\n<pre><code>var factorial = function(n) {\n  return n &gt; 1\n    ? n * factorial(n - 1)\n    : n &lt; 0\n        ? n * factorial(n + 1)\n        : 1;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's one I made myself, don't use numbers over 170 or under 2.</p>\n\n<pre><code>function factorial(x){\n if((!(isNaN(Number(x)))) &amp;&amp; (Number(x)&lt;=170) &amp;&amp; (Number(x)&gt;=2)){\n  x=Number(x);for(i=x-(1);i&gt;=1;--i){\n   x*=i;\n  }\n }return x;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is my solution:</p>\n\n<pre><code>function fac(n){\n    return(n&lt;2)?1:fac(n-1)*n;\n}\n</code></pre>\n\n<p>It's the simplest way <em>(less characters / lines)</em> I've found, only a function with one code line.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is my code</p>\n\n<pre><code>function factorial(num){\n    var result = num;\n    for(i=num;i&gt;=2;i--){\n        result = result * (i-1);\n    }\n    return result;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This will return the factorial of n</p>\n\n<p><code>function f(n){ var e = n; if (e == 1 | e == 0) return 1; while (n--){ if (n &lt; 1) break; e*=n;} return e}</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>var factorial = (function() {\n    var cache = [1];\n    return function(value) {\n        for (var index = cache.length; index &lt;= value; index++) {\n            cache[index] = index * cache[index - 1]\n        }\n        return cache[value];\n    }\n})();\n</code></pre>\n\n<p>I find this useful in same cases:</p>\n\n<pre><code>function factorialDivision(n, d) {\n    var value = 1;\n    for (d++ &lt; n) {\n        value *= d;\n    }\n    return value;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Since a factorial is simply degenerative multiplication from the number given down to 1, it would indeed be easier to just loop through the multiplication:</p>\n\n<pre><code>Math.factorial = function(n) {\n\n  if (n === 0||n === 1) {\n\n    return 1;\n\n  } else {\n\n    for(var i = n; i &gt; 0; --i) { //always make sure to decrement the value BEFORE it's tacked onto the original as a product\n      n *= i;\n    }\n\n    return n;\n\n  }\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Cached loop should be fastest (at least when called multiple times)</p>\n\n<pre><code>var factorial = (function() {\n  var x =[];\n\n  return function (num) {\n    if (x[num] &gt;0) return x[num];\n    var rval=1;\n    for (var i = 2; i &lt;= num; i++) {\n        rval = rval * i;\n        x[i] = rval;\n    }\n    return rval;\n  }\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function findFact() {\n  result = 1; //Variable declared earlier\n  operation = \" ! \"; //Variable declared earlier\n  for(var i = 0;i&lt;x;i++) { //Variable declared earlier (x is user input)\n    result*=(x-i);\n  }\n  write(x.toString() + operation + \" = \" + result.toString()); //Function I made myself\n  result = 0;\n}\n</code></pre>\n\n<p>I find this code fairly simple to comprehend; it runs a for loop, multiplying \"result\" by x (the number), then x-1, then x-2, and so on. Similarly, you could use <code>1x2x3x4...xn</code> rather than <code>nxn-1x...x2x1</code> with</p>\n\n<pre><code>function findFact() {\n  result = 1;//Variable declared earlier\n  operation = \" ! \";//Variable declared earlier\n  for(var i = 1;i&lt;=x;i++) {//Variable declared earlier (x is user input)\n    result*=(x-i);\n  }\n  write(x.toString() + operation + \" = \" + result.toString());//Function I made myself\n  result = 0;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code> used closure  for this with the helper (getFact) , I think this approach is neat hope this helps  \n\n\n    factorial of n : using closures*/\n\n    function getFact(num) {\n\n        if (num &gt; 1)\n            return num * getFact(num - 1);\n        else\n            return 1;\n\n    }\n\n\n    function makeFact(fn) {\n        return function(num) {\n            return fn(num);\n        }\n\n\n    }\n\n   makeFact(getFact)(5) //120\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var factorial = function(numToBeFactored)\n    {\n        if (numToBeFactored == 0)\n                return 1;\n            var numLength = 0;\n            var numBeingFactored = 1;\n        /*goes through the loop numToBeFactored times and each time multiplies numBeingFactored by one less than the last loop*/\n            for (numLength = 0; numLength &lt; numToBeFactored; numLength++)\n            {\n                numBeingFactored *= (numToBeFactored - numLength);\n            }\n            return numBeingFactored;\n    };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Looking for a really fast implementation of <strong>factorial</strong> function in JavaScript.\nAny suggests?</p>\n",
            "last_activity_date": 1423493828,
            "question_id": 3959211,
            "score": 31,
            "tags": [
                "javascript",
                "math",
                "factorial"
            ],
            "title": "Fast factorial function in JavaScript"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p><a href=\"http://jsfiddle.net/8zLLn/\">http://jsfiddle.net/8zLLn/</a></p>\n\n<pre><code>  $('#configreset').click(function(){\n        $('#configform')[0].reset();\n  });\n</code></pre>\n\n<p>Put it in JS fiddle. Worked as intended. </p>\n\n<p>So, none of the aforementioned issues are at fault here. Maybe you're having a conflicting ID issue? Is the click actually executing?</p>\n\n<p>Edit: (because I'm a sad sack without proper commenting ability) It's not an issue directly with your code. It works fine when you take it out of the context of the page that you're currently using, so, instead of it being something with the particular jQuery/javascript &amp; attributed form data, it has to be something else. I'd start bisecting the code around it out and try to find where it's going on. I mean, just to 'make sure', i suppose you could...</p>\n\n<pre><code>console.log($('#configform')[0]);\n</code></pre>\n\n<p>in the click function and make sure it's targeting the right form...</p>\n\n<p>and if it is, it has to be something that's not listed here.</p>\n\n<p>edit part 2: One thing you could try (if it's not targeting it correctly) is use <a href=\"http://api.jquery.com/reset-selector/\">\"input:reset\"</a> instead of what you are using... also, i'd suggest because it's not the target that's incorrectly working to find out what the actual click is targeting. Just open up firebug/developer tools, whathave you, toss in </p>\n\n<pre><code>console.log($('#configreset'))\n</code></pre>\n\n<p>and see what pops up. and then we can go from there.</p>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<p>Your code should work.  Make sure <code>static/jquery-1.9.1.min.js</code> exists.  Also, you can try reverting to <code>static/jquery.min.js</code>.  If that fixes the problem then you've pinpointed the problem.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A reset button doesn't need any script at all (or name or id):</p>\n\n<pre><code>&lt;input type=\"reset\"&gt;\n</code></pre>\n\n<p>and you're done. But if you really <strong>must</strong> use script, note that every form control has a <em>form</em> property that references the form it's in, so you could do:</p>\n\n<pre><code>&lt;input type=\"button\" onclick=\"this.form.reset();\"&gt;\n</code></pre>\n\n<p>But a reset button is a far better choice.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I've finally solve the problem!!\n@RobG was right about the <code>form</code> tag and <code>table</code> tag. <strong>the <code>form</code> tag should be placed outside the table.</strong> with that, </p>\n\n<pre><code>&lt;td&gt;&lt;input type=\"reset\" id=\"configreset\" value=\"Reset\"&gt;&lt;/td&gt;\n</code></pre>\n\n<p>works without the need of jquery or anything else. simple click on the button and tadaa~ the whole form is reset ;) brilliant!</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>You can just add an input type = reset with an id = resetform like this</p>\n\n<pre><code>&lt;html&gt;\n&lt;form&gt;\n&lt;input type = 'reset' id = 'resetform' value = 'reset'/&gt;\n&lt;!--Other items in the form can be placed here--&gt;\n&lt;/form&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>then with jquery you simply use the .click() function on the element with the id = resetform as follows</p>\n\n<pre><code>&lt;script&gt; \n$('#resetform').click();\n&lt;/script&gt;\n</code></pre>\n\n<p>and the form resets\nNote: You can also hide the reset button with id = resetform using your css</p>\n\n<pre><code>&lt;style&gt;\n#resetform\n{\ndisplay:none;\n}\n&lt;/style&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>According to this post <a href=\"http://forwebonly.com/how-to-reset-an-html-form-with-jquery/\">here</a>, jQuery has no <code>reset()</code> method; but native JavaScript does. So, convert the jQuery element to a JavaScript object by either using : </p>\n\n<pre><code>$(\"#formId\")[0].reset()\n// or\n$(\"#formId\").get(0).reset()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>Reseting the form to it\u2019s initial values is one of those things you do often. </p>\n\n<p>Doing this task with <code>jQuery</code> is really easy:</p>\n\n<pre><code>$('#FormID').each (function(){\n  this.reset();\n});\n</code></pre>\n\n<p>The thing is, that the code above iterates through each element of the form, and calls to the DOM \u201creset\u201d JavaScript method. In fact, the <em>\u201creset\u201d</em> function does not exist in <code>jQuery</code>.</p>\n\n<p>It would be much more simple to do something like <code>$(\u201c#FormID\u201d).reset()</code>. Fortunately creating that function in <code>jQuery</code> only will take a minute of programming:</p>\n\n<pre><code>jQuery.fn.reset = function () {\n  $(this).each (function() { this.reset(); });\n}\n</code></pre>\n\n<p>Using the code above, reseting a form would be just one call (as desired):</p>\n\n<pre><code>$(\"#FormID\").reset();\n</code></pre>\n\n<p>May be using the name <em>\u201creset\u201d</em> is too generic to be applied to any object (it will only work on forms), but I think it has a lot of sense to name it <em>\u201creset\u201d</em>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I use this simple code:</p>\n\n<pre><code>//reset form \n$(\"#mybutton\").click(function(){\n    $(\"#myform\").find('input:text, input:password, input:file, select, textarea').val('');\n    $(\"#myform\").find('input:radio, input:checkbox').removeAttr('checked').removeAttr('selected');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you may try using trigger()  <a href=\"http://api.jquery.com/reset-selector/\">Reference Link</a></p>\n\n<pre><code>$('#form_id').trigger(\"reset\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<pre><code>&lt;button type=\"reset\"&gt;Reset&lt;/reset&gt;\n</code></pre>\n\n<p>Simplest way I can think off that is robust. Place within the form tag.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$(\"#form\").closest('form').find(\"input[type=text], textarea\").val(\"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I had working code that could reset my form when I click on a reset button. However after my code is getting longer, I realize that it doesn't work anymore. </p>\n\n<pre><code> &lt;div id=\"labels\"&gt;\n        &lt;table class=\"config\"&gt;\n            &lt;thead&gt;\n                &lt;tr&gt;\n                    &lt;th colspan=\"4\"; style= \"padding-bottom: 20px; color:#6666FF; text-align:left; font-size: 1.5em\"&gt;Control Buttons Configuration&lt;/th&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Index&lt;/th&gt;\n                    &lt;th&gt;Switch&lt;/th&gt;\n                    &lt;th&gt;Response Number&lt;/th&gt;\n                    &lt;th&gt;Description&lt;/th&gt;\n                &lt;/tr&gt;\n            &lt;/thead&gt;\n            &lt;tbody&gt;\n\n                &lt;form id=\"configform\" name= \"input\" action=\"#\" method=\"get\"&gt;\n                &lt;tr&gt;&lt;td style=\"text-align: center\"&gt;1&lt;/td&gt;\n                    &lt;td&gt;&lt;img src= \"static/switch.png\" height=\"100px\" width=\"108px\"&gt;&lt;/td&gt;\n                    &lt;td id=\"small\"&gt;&lt;input style=\"background: white; color: black;\" type=\"text\" value=\"\" id=\"number_one\"&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;input style=\"background: white; color: black;\" type=\"text\"  id=\"label_one\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td style=\"text-align: center\"&gt;2&lt;/td&gt;\n                    &lt;td&gt;&lt;img src= \"static/switch.png\" height=\"100px\" width=\"108px\"&gt;&lt;/td&gt;\n                    &lt;td id=\"small\"&gt;&lt;input style=\"background: white; color: black;\" type=\"text\" id = \"number_two\" value=\"\"&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;input style=\"background: white; color: black;\" type=\"text\"  id = \"label_two\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td style=\"text-align: center\"&gt;3&lt;/td&gt;\n                    &lt;td&gt;&lt;img src= \"static/switch.png\" height=\"100px\" width=\"108px\"&gt;&lt;/td&gt;\n                    &lt;td id=\"small\"&gt;&lt;input style=\"background: white; color: black;\" type=\"text\" id=\"number_three\" value=\"\"&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;input style=\"background: white; color: black;\" type=\"text\" id=\"label_three\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td style=\"text-align: center\"&gt;4&lt;/td&gt;\n                    &lt;td&gt;&lt;img src= \"static/switch.png\" height=\"100px\" width=\"108px\"&gt;&lt;/td&gt;\n                    &lt;td id=\"small\"&gt;&lt;input style=\"background: white; color: black;\" type=\"text\" id=\"number_four\" value=\"\"&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;input style=\"background: white; color: black;\" type=\"text\" id=\"label_three\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;input type=\"submit\" id=\"configsubmit\" value=\"Submit\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;input type=\"reset\" id=\"configreset\" value=\"Reset\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n\n                &lt;/form&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n\n    &lt;/div&gt;\n</code></pre>\n\n<p>And my jQuery:</p>\n\n<pre><code> $('#configreset').click(function(){\n            $('#configform')[0].reset();\n });\n</code></pre>\n\n<p>Is there some source that I should include in my codes in order for the <code>.reset()</code> method to work? Previously I was using:</p>\n\n<pre><code>&lt;script src=\"static/jquery.min.js\"&gt;\n&lt;/script&gt;\n&lt;script src=\"static/jquery.mobile-1.2.0.min.js\"&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>and the <code>.reset()</code> method was working. </p>\n\n<p>Currently I'm using</p>\n\n<pre><code>&lt;script src=\"static/jquery-1.9.1.min.js\"&gt;&lt;/script&gt;      \n&lt;script src=\"static/jquery-migrate-1.1.1.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"static/jquery.mobile-1.3.1.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Could it possibly be one of the reason?</p>\n",
            "last_activity_date": 1424843450,
            "question_id": 16452699,
            "score": 27,
            "tags": [
                "javascript",
                "jquery",
                "forms",
                "reset"
            ],
            "title": "How to reset a form using jQuery with .reset() method"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>its a combination of both javascript and css</p>\n\n<p><a href=\"http://jscrollpane.kelvinluck.com/basic.html\">http://jscrollpane.kelvinluck.com/basic.html</a></p>\n\n<p>Live Demo is here</p>\n\n<p><a href=\"http://demo.takien.com/index.php?page=scrollable_area\">http://demo.takien.com/index.php?page=scrollable_area</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p><a href=\"http://www.noupe.com/javascript/30-javascriptajax-techniques-for-sliders-scrollers-and-scrollbars.html\" rel=\"nofollow\">This link</a> should get you started.  Long story short, a custom css-styled div is used in conjunction with JavaScript to catch click-and-drag events on the custom div.  Wired up to these events are methods that scroll the contents of whatever div the custom-scroller has been attached to.</p>\n\n<p>I'm all about the learning experience -- but after you've learned how it works, I recommend using a library (of which there are many) to do it.  It's one of those \"don't reinvent\" things...</p>\n\n<p><strong>EDIT</strong>\nIf you want to skip the learning phase altogether, jassi9911 posted a <a href=\"http://jscrollpane.kelvinluck.com/basic.html\" rel=\"nofollow\">link</a> to a jQuery plugin that's dead-simple to use.  Good stuff.</p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>If you're looking for a Facebook like scroll bar, then I'd highly recommend you take a look at this one:</p>\n\n<p><a href=\"http://rocha.la/jQuery-slimScroll\">http://rocha.la/jQuery-slimScroll</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I solved this problem by adding another div as a sibling to the scrolling content div.  It's height is set to the radius of the curved borders.  There will be design issues if you have content that you want nudged to the very bottom, or text you want to flow into this new div, etc,. but for my UI this thin div is no problem.</p>\n\n<p>The real trick is to have the following structure:</p>\n\n<pre><code>&lt;div class=\"window\"&gt;\n &lt;div class=\"title\"&gt;Some title text&lt;/div&gt;\n &lt;div class=\"content\"&gt;Main content area&lt;/div&gt;\n &lt;div class=\"footer\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Important CSS highlights:</p>\n\n<ul>\n<li>Your CSS would define the content region with a height and overflow to allow the scrollbar(s) to appear.</li>\n<li>The window class gets the same diameter corners as the title and footer</li>\n<li>The drop shadow, if desired, is only given to the window class</li>\n<li>The height of the footer div is the same as the radius of the bottom corners</li>\n</ul>\n\n<p>Here's what that looks like:</p>\n\n<p><img src=\"http://i.stack.imgur.com/9KMb6.png\" alt=\"Bottom right corner\"></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Facebook uses a very clever technique I described in context of my scrollbar plugin jsFancyScroll:</p>\n\n<p>The scrolled content is actually scrolled natively by the browser scrolling mechanisms while the native scrollbar is hidden by using overflow definitions and the custom scrollbar is kept in sync by bi-directional event listening.</p>\n\n<p>Feel free to use my plugin for your project: :)</p>\n\n<p><a href=\"https://github.com/leoselig/jsFancyScroll/\" rel=\"nofollow\">https://github.com/leoselig/jsFancyScroll/</a></p>\n\n<p>I highly recommend it over plugins such as TinyScrollbar that come with terrible performance issues!</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm wonder how the custom scrollbar on Facebook has been made.</p>\n\n<p>Is it only css or some javascript as well?</p>\n\n<p>If yes can i have an idea of what the code looks like?</p>\n",
            "last_activity_date": 1406672823,
            "question_id": 9945547,
            "score": 24,
            "tags": [
                "javascript",
                "html",
                "css",
                "scrollbar"
            ],
            "title": "How to create a custom scrollbar on a div"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I think you need to try using <code>-webkit-transform</code> or <code>webkitTransform</code> instead of <code>webkit-transform</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code> el.style[\"-webkit-transition\"] = \"-webkit-transform 500ms linear\";\n el.style[\"webkit-transform\"] = \"translate3d(30px, 30px, 0px)\";\n</code></pre>\n\n<p>Your missing the - on the second line, this could be the problem.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Use <code>el.style.WebkitTransform</code> (uppercase W).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Solved it myself through trial and error. Thought I'd report back if someone else stumbles upon this problem. It shall still be noted that this problem did not occur before Chrome updated itself to Chrome 13 (13.0.782.107m).</p>\n\n<p>The trick here seems to be to add a <code>translate3d</code> operation to the underlying <code>&lt;div&gt;</code> (<code>sq2</code>) element upon declaration (or atleast before animating <code>sq1</code>). </p>\n\n<p>Otherwise, the <code>translate3d</code> operation on the overlying <code>&lt;div&gt;</code> (<code>sq1</code>) will cause rendering to ignore the <code>z-index</code> and place <code>sq1</code> below <code>sq2</code>. I'm guessing that this is because <code>sq1</code> is defined before <code>sq2</code> in the DOM, therefore <code>sq2</code> will be rendered above it.</p>\n\n<p>So, the solution seems to be to put <code>translate3d</code> in the definition of the <code>&lt;div&gt;</code>:s (add it to both just to be clear):</p>\n\n<pre><code>HTML:\n&lt;div id=\"sq1\" style=\"z-index:10; -webkit-transform: translate3d(0px, 0px, 0px);\"&gt;\n&lt;div id=\"sq2\" style=\"z-index:5; -webkit-transform: translate3d(0px, 0px, 0px);\"&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>This should only affect any elements which are positioned as absolute or relative. In order to remedy the issue, you can apply the following css statement to every element which is positioned this way and is causing issues:</p>\n\n<p>-webkit-transform: translate3d(0,0,0);</p>\n\n<p>This will apply the transform to the element without actually doing a transformation, but affecting it's render order so it is above the element causing the issue.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p><strong>Update</strong></p>\n\n<p>Sorry for failing to add the minor detail that we also layer a lot of <code>div</code> elements on top of each other with <code>z-index</code>.\nAfter working more with this problem, it seems that the <code>webkit-transform</code> actually messes with the <code>z-index</code> ordering, and that the actual problem is not related to the animations themselves.</p>\n\n<p><strong>End update</strong></p>\n\n<p>I am currently in a project where we develop an application which is quite heavy on CSS3 animations. We're animating a lot of <code>div</code> elements around with <code>-webkit-transform</code> and <code>-webkit-transition</code>.</p>\n\n<p>All is well, until today where all of the to-be-animated elements of the page disappeared. It seems that Google Chrome has updated from <strong>12.xx</strong> to <strong>13.0.782.107m</strong> and now, all of a sudden, CSS3 properties with <code>-webkit</code> prefixes has stopped working, and elements which have this property applied to them just doesn't show anymore. Removing the <code>-webkit-transform</code> property through the Chrome debugger makes the elements visible again.</p>\n\n<p>Has anyone else experienced the same issues, or know how to solve this problem?</p>\n\n<p>I might add that I've tried to remove just the <code>-webkit</code> prefixes (leaving just <code>transform</code>), which then shows the missing elements, but then that won't animate the elements at all, as the CSS3 property <code>transform</code> is not supported.</p>\n\n<p>I have also tried using <code>el.style.webkitTransform</code> and <code>el.style.WebkitTransform</code>, with no success.</p>\n\n<p>Will pass some example code to explain. The desired result of this is to move <code>sq1</code> away and reveal <code>sq2</code>.</p>\n\n<pre><code>HTML:\n&lt;div id=\"sq1\" style=\"z-index:10;\"&gt;\n&lt;div id=\"sq2\" style=\"z-index:5;\"&gt;\n\nJS\n/* fetch the element */\nvar el = document.getElementById(\"sq1\");\n/* apply CSS */\nel.style[\"-webkit-transition\"] = \"-webkit-transform 500ms linear\";\nel.style[\"-webkit-transform\"] = \"translate3d(30px, 30px, 0px)\";\n</code></pre>\n",
            "last_activity_date": 1393501890,
            "question_id": 6953497,
            "score": 23,
            "tags": [
                "javascript",
                "css",
                "google-chrome",
                "css3",
                "webkit"
            ],
            "title": "webkit-transform overwrites z-index ordering in Chrome 13"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The venerable <a href=\"http://www.datejs.com/\" rel=\"nofollow\">DateJS</a> library has a formatting routine (it overrides \".toString()\").  You could also do one yourself pretty easily because the \"Date\" methods give you all the numbers you need.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>While JS does possess enough basic tools to do this, it's pretty clunky.</p>\n\n<pre><code>/**\n * You first need to create a formatting function to pad numbers to two digits\u2026\n **/\nfunction twoDigits(d) {\n    if(0 &lt;= d &amp;&amp; d &lt; 10) return \"0\" + d.toString();\n    if(-10 &lt; d &amp;&amp; d &lt; 0) return \"-0\" + (-1*d).toString();\n    return d.toString();\n}\n\n/**\n * \u2026and then create the method to output the date string as desired.\n * Some people hate using prototypes this way, but if you are going\n * to apply this to more than one Date object, having it as a prototype\n * makes sense.\n **/\nDate.prototype.toMysqlFormat = function() {\n    return this.getUTCFullYear() + \"-\" + twoDigits(1 + this.getUTCMonth()) + \"-\" + twoDigits(this.getUTCDate()) + \" \" + twoDigits(this.getUTCHours()) + \":\" + twoDigits(this.getUTCMinutes()) + \":\" + twoDigits(this.getUTCSeconds());\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<pre><code>var date;\ndate = new Date();\ndate = date.getUTCFullYear() + '-' +\n    ('00' + (date.getUTCMonth()+1)).slice(-2) + '-' +\n    ('00' + date.getUTCDate()).slice(-2) + ' ' + \n    ('00' + date.getUTCHours()).slice(-2) + ':' + \n    ('00' + date.getUTCMinutes()).slice(-2) + ':' + \n    ('00' + date.getUTCSeconds()).slice(-2);\nconsole.log(date);\n</code></pre>\n\n<p>or even shorter:</p>\n\n<pre><code>new Date().toISOString().slice(0, 19).replace('T', ' ');\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>2012-06-22 05:40:06\n</code></pre>\n\n<p>For more advanced use cases, including controlling the timezone, consider using <a href=\"http://momentjs.com/\">http://momentjs.com/</a>:</p>\n\n<pre><code>moment().format('YYYY-MM-DD HH:mm:ss');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 54
                }
            ],
            "body": "<p>Does anyone know how to convert JS dateTime to MySQL datetime? Also is there a way to add a specific number of minutes to JS datetime and then pass it to MySQL datetime?</p>\n",
            "last_activity_date": 1416246866,
            "question_id": 5129624,
            "score": 19,
            "tags": [
                "javascript",
                "mysql"
            ],
            "title": "Convert JS date time to MySQL datetime"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>A good example of doing this without using Ajax is given <a href=\"http://www.codeproject.com/KB/aspnet/Simple_Progress_bar.aspx\" rel=\"nofollow\">at CodeProject by Nilesh Thakkar</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>ASP.NET File Upload with <em>Real-Time</em> Progress Bar</p>\n\n<p><a href=\"http://mattberseth.com/blog/2008/07/aspnet_file_upload_with_realti_1.html\" rel=\"nofollow\">http://mattberseth.com/blog/2008/07/aspnet_file_upload_with_realti_1.html</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here are a couple of versions of what you're looking for for some common JavaScript toolkits.</p>\n\n<ul>\n<li>Mootools - <a href=\"http://digitarald.de/project/fancyupload/\">http://digitarald.de/project/fancyupload/</a></li>\n<li>Extjs - <a href=\"http://extjs.com/learn/Extension:UploadForm\">http://extjs.com/learn/Extension:UploadForm</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Some good .NET-specific help for doing progress bars can be found in Dino Esposito's MSDN Magazine articles from last July and August:</p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/magazine/cc163393.aspx\" rel=\"nofollow\"><strong>Context-Sensitive Feedback with AJAX (July '07)</strong></a><br />\n<a href=\"http://msdn.microsoft.com/en-us/magazine/cc163380.aspx\" rel=\"nofollow\"><strong>Canceling Server Tasks with ASP.NET AJAX (August '07)</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are interested how all this generally works client-site, this is it:</p>\n\n<p>All the solutions hook up the form via javascript and change the forms target to a newly created, invisible IFRAME. Then they are free to use AJAX to request some status about the file from the server.</p>\n\n<p>The IFRAME trick is needed because all the scripts running in the window that is doing the upload will hang until the the request is completed at which time the file is fully uploaded. </p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I've tried various techniques and had most success with <a href=\"http://swfupload.org\" rel=\"nofollow\">SWFUpload</a>.</p>\n\n<p>You create and interact with an SWFUpload object using Javascript, but uses a (hidden) Flash file for file selection, uploading and upload progress monitoring. You can specify a wide range of Javascript event handlers (<code>uploadStarted</code>, <code>uploadProgress</code>, <code>uploadError</code> etc.) that the Flash will call during the upload progress making it very flexible. It also implements a file queue, so it works well for single or multiple files.</p>\n\n<p><em>Links:</em></p>\n\n<ul>\n<li><a href=\"http://demo.swfupload.org/Documentation/#methods\" rel=\"nofollow\">API documentation</a></li>\n<li><a href=\"http://demo.swfupload.org/\" rel=\"nofollow\">Demos</a></li>\n<li><a href=\"http://code.google.com/p/swfupload/downloads/list\" rel=\"nofollow\">Downloads</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jQuery UI Progressbar - <a href=\"http://jqueryui.com/demos/progressbar/\" rel=\"nofollow\">http://jqueryui.com/demos/progressbar/</a></p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I would like display something more meaningful that animated gif while users upload file to my web application. What possibilities do I have? </p>\n\n<p><em>Edit: I am using .Net but I don't mind if somebody shows me platform agnostic version.</em></p>\n",
            "last_activity_date": 1251468772,
            "question_id": 49564,
            "score": 18,
            "tags": [
                ".net",
                "javascript",
                "ajax"
            ],
            "title": "How to implement file upload progress bar on web?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<h2>The answer in 2013</h2>\n\n<blockquote>\n  <p>Is JSON.parse supported by all major browsers?</p>\n</blockquote>\n\n<p>Pretty much, yes (<a href=\"http://caniuse.com/#search=JSON.parse\">source</a>). Even IE8 has it (provided you're not in IE7 emulation mode). If you need to support IE7 and earlier, read on.</p>\n\n<h2>The original answer from 2011</h2>\n\n<p>No, older browsers (IE7 for instance) mostly don't have it. (More: <a href=\"http://caniuse.com/#search=JSON.parse\">http://caniuse.com/#search=JSON.parse</a>)</p>\n\n<p>However, just a small script is all you need. The inventor of JSON, Douglas Crockford, has no fewer than three for you to choose from on <a href=\"https://github.com/douglascrockford/JSON-js/\">his Github page</a>:</p>\n\n<ul>\n<li><code>json2.js</code>: Provides both <code>JSON.parse</code> and <code>JSON.stringify</code>. Parsing uses a few regexes to defend against script injection attacks and then passes the result to <code>eval</code>. This isn't generally considered a very good idea.</li>\n<li><code>json_parse.js</code>: A recursive-descent parser that doesn't use <code>eval</code>.</li>\n<li><code>json_parse_state.js</code>: A state-machine parser that doesn't use <code>eval</code>.</li>\n</ul>\n\n<p>Use what suits you. :-)</p>\n\n<p>Just about any major library (like <a href=\"http://jquery.com\">jQuery</a>, <a href=\"http://prototypejs.org\">Prototype</a>, <a href=\"http://developer.yahoo.com/yui/\">YUI</a>, <a href=\"http://code.google.com/closure/library\">Closure</a>, or <a href=\"http://en.wikipedia.org/wiki/List_of_JavaScript_libraries\">any of several others</a>) will also provide JSON parsing, although in some cases it may well be a thin veneer on <code>eval</code>.</p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>I am afraid not. You can however use <a href=\"https://github.com/douglascrockford/JSON-js\" rel=\"nofollow\">json2 script written by Douglas Crockford</a>.</p>\n\n<p>Here is what John Resig (creator of jQuery) has to say about it:</p>\n\n<blockquote>\n  <p>JSON2.js - Late last year Crockford\n  quietly released a new version of his\n  JSON API that replaced his existing\n  API. The important difference was that\n  it used a single base object (JSON)\n  instead of extending all native object\n  prototypes (booo!).</p>\n</blockquote>\n\n<p><a href=\"http://ejohn.org/blog/the-state-of-json/\" rel=\"nofollow\">http://ejohn.org/blog/the-state-of-json/</a></p>\n\n<p><a href=\"https://github.com/douglascrockford/JSON-js\" rel=\"nofollow\">You can download json2.js here :)</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/891299/browser-native-json-support-window-json\">Browser-native JSON support (window.JSON)</a>  </p>\n</blockquote>\n\n\n\n<p>Specifically, is <code>JSON.parse(...)</code> supported by IE7+, Firefox 2+, Chrome, Safari?</p>\n\n<p>See: <a href=\"http://www.json.org/js.html\">JSON in JavaScript</a></p>\n",
            "last_activity_date": 1393431904,
            "question_id": 4908875,
            "score": 12,
            "tags": [
                "javascript",
                "json",
                "parsing",
                "cross-browser"
            ],
            "title": "Is JSON.parse supported by all major browsers?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You should probably insert an absolutely position element at the end of the 'range.' This works differently in different browsers, so your best bet might be to sniff.</p>\n\n<p>And since you asked: this is how the new york times does it in their 'altClickToSearch.js' file:</p>\n\n<pre><code>function insertButton() {\n\nselectionButton = new Element(\n        'span', {\n          'className':'nytd_selection_button',\n          'id':'nytd_selection_button',\n          'title':'Lookup Word',\n          'style': 'margin:-20px 0 0 -20px; position:absolute; background:url(http://graphics8.nytimes.com/images/global/word_reference/ref_bubble.png);width:25px;height:29px;cursor:pointer;_background-image: none;filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\"http://graphics8.nytimes.com/images/global/word_reference/ref_bubble.png\", sizingMethod=\"image\");'\n        }\n    )\n\nif (Prototype.Browser.IE) {\n  var tmp = new Element('div');\n  tmp.appendChild(selectionButton);\n  newRange = selection.duplicate();\n  newRange.setEndPoint( \"StartToEnd\", selection);\n  newRange.pasteHTML(tmp.innerHTML);\n  selectionButton = $('nytd_selection_button');\n}\nelse {\n  var range = selection.getRangeAt(0);\n  newRange = document.createRange();\n  newRange.setStart(selection.focusNode, range.endOffset);\n  newRange.insertNode(selectionButton);\n}\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could position a marker span at the end of the selection, get its coordinates using jQuery, place your button at those coordinates and remove the marker span.</p>\n\n<p>The following should get you started:</p>\n\n<pre><code>var markSelection = (function() {\n    var markerTextChar = \"\\ufeff\";\n    var markerTextCharEntity = \"&amp;#xfeff;\";\n\n    var markerEl, markerId = \"sel_\" + new Date().getTime() + \"_\" + Math.random().toString().substr(2);\n\n    var selectionEl;\n\n    return function() {\n        var sel, range;\n\n        if (document.selection &amp;&amp; document.selection.createRange) {\n            // Clone the TextRange and collapse\n            range = document.selection.createRange().duplicate();\n            range.collapse(false);\n\n            // Create the marker element containing a single invisible character by creating literal HTML and insert it\n            range.pasteHTML('&lt;span id=\"' + markerId + '\" style=\"position: relative;\"&gt;' + markerTextCharEntity + '&lt;/span&gt;');\n            markerEl = document.getElementById(markerId);\n        } else if (window.getSelection) {\n            sel = window.getSelection();\n\n            if (sel.getRangeAt) {\n                range = sel.getRangeAt(0).cloneRange();\n            } else {\n                // Older WebKit doesn't have getRangeAt\n                range.setStart(sel.anchorNode, sel.anchorOffset);\n                range.setEnd(sel.focusNode, sel.focusOffset);\n\n                // Handle the case when the selection was selected backwards (from the end to the start in the\n                // document)\n                if (range.collapsed !== sel.isCollapsed) {\n                    range.setStart(sel.focusNode, sel.focusOffset);\n                    range.setEnd(sel.anchorNode, sel.anchorOffset);\n                }\n            }\n\n            range.collapse(false);\n\n            // Create the marker element containing a single invisible character using DOM methods and insert it\n            markerEl = document.createElement(\"span\");\n            markerEl.id = markerId;\n            markerEl.appendChild( document.createTextNode(markerTextChar) );\n            range.insertNode(markerEl);\n        }\n\n        if (markerEl) {\n            // Lazily create element to be placed next to the selection\n            if (!selectionEl) {\n                selectionEl = document.createElement(\"div\");\n                selectionEl.style.border = \"solid darkblue 1px\";\n                selectionEl.style.backgroundColor = \"lightgoldenrodyellow\";\n                selectionEl.innerHTML = \"&amp;lt;- selection\";\n                selectionEl.style.position = \"absolute\";\n\n                document.body.appendChild(selectionEl);\n            }\n\n            // Find markerEl position http://www.quirksmode.org/js/findpos.html\n        var obj = markerEl;\n        var left = 0, top = 0;\n        do {\n            left += obj.offsetLeft;\n            top += obj.offsetTop;\n        } while (obj = obj.offsetParent);\n\n            // Move the button into place.\n            // Substitute your jQuery stuff in here\n            selectionEl.style.left = left + \"px\";\n            selectionEl.style.top = top + \"px\";\n\n            markerEl.parentNode.removeChild(markerEl);\n        }\n    };\n})();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                }
            ],
            "body": "<p>I need to position an absolute positioned button<br />\nnext to user's selected text. just like what IE8 does internally.</p>\n\n<p>I'm binding a <strong>jquery event mouseup</strong> to the Document, and get<br/>\nthe selected text. but I'm currently out of ideas how to know where the<br/>\nactual selection is positioned, without wrapping it in some element, <br />\nbecause selection of text can be across several elements, and it would mess <br />\nthe structure if I would wrap it.</p>\n",
            "last_activity_date": 1371682872,
            "question_id": 1589721,
            "score": 12,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How can I position an element next to user text selection?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The easiest option for you would be to proxy the call through the server loading the javascript.  So some.js would make a call to the hosting server, and that server would forward the request to abc.com.</p>\n\n<p>of course, if that's not an option because you don't control the hoster, there are some options, but it seems mired in cross browser difficulties:\n<a href=\"http://ajaxian.com/archives/how-to-make-xmlhttprequest-calls-to-another-server-in-your-domain\" rel=\"nofollow\">http://ajaxian.com/archives/how-to-make-xmlhttprequest-calls-to-another-server-in-your-domain</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<blockquote>\n  <p>Will some.js be able to use XMLHttpRequest to post data to abc.com? In other words, is abc.com implicitly trusted because we loaded Javascript from there?</p>\n</blockquote>\n\n<p>No, because the script is loaded on to a seperate domain it will not have access...</p>\n\n<p>If you trust the data source then maybe JSONP would be the better option. JSONP involves dynamically adding new SCRIPT elements to the page with the SRC set to another domain, with a callback set as a parameter in the query string. For example:</p>\n\n<pre><code>function getJSON(URL,success){\n    var ud = 'json'+(Math.random()*100).toString().replace(/\\./g,'');\n    window[ud]= function(o){\n        success&amp;&amp;success(o);\n    };\n    document.getElementsByTagName('body')[0].appendChild((function(){\n        var s = document.createElement('script');\n        s.type = 'text/javascript';\n        s.src = URL.replace('callback=?','callback='+ud);\n        return s;\n    })());\n}\n\ngetJSON('http://YOUR-DOMAIN.com/script.php?dataName=john&amp;dataAge=99&amp;callback=?',function(data){\n    var success = data.flag === 'successful';\n    if(success) {\n        alert('The POST to abc.com WORKED SUCCESSFULLY');\n    }\n});\n</code></pre>\n\n<p>So, you'll need to host your own script which could use PHP/CURL to post to the abc.com domain and then will output the response in JSONP format:</p>\n\n<p>I'm not too great with PHP, but maybe something like this:</p>\n\n<pre><code>&lt;?php\n    /* Grab the variables */\n    $postURL = $_GET['posturl'];\n    $postData['name'] = $_GET['dataName'];\n    $postData['age'] = $_GET['dataAge'];\n\n    /* Here, POST to abc.com */\n    /* MORE INFO: http://uk3.php.net/curl &amp; http://www.askapache.com/htaccess/sending-post-form-data-with-php-curl.html */\n\n    /* Fake data (just for this example:) */\n    $postResponse = 'blahblahblah';\n    $postSuccess = TRUE;\n\n    /* Once you've done that, you can output a JSONP response */\n    /* Remember JSON format == 'JavaScript Object Notation' - e.g. {'foo':{'bar':'foo'}} */\n    echo $_GET['callback'] . '({';\n    echo \"'flag':' . $postSuccess . ',\";\n    echo \"'response':' . $postResponse . '})\";\n\n?&gt;\n</code></pre>\n\n<p>So, your server, which you have control over, will act as a medium between the client and abc.com, you'll send the response back to the client in JSON format so it can be understood and used by the JavaScript...</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>You could use <a href=\"http://easyxss.net\" rel=\"nofollow\">easyXSS</a>. Its a library that enables you to pass data, and to call methods across the domain boundry. Its quite easy and you should be able to use it.\nThere are many examples on the code.google.com site </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had looked around for solutions but did not find any. Even Firefox by default does not allow cross domain scripting</p>\n\n<p>If you are using Apache. here is the solution</p>\n\n<p><a href=\"http://www.skill-guru.com/blog/2011/02/04/adding-access-control-allow-origin-to-server-for-cross-domain-scripting/\" rel=\"nofollow\">Cross site XMLHttprequest solution</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to provide a piece of Javascript code that will work on any website where it is included, but it always needs to get more data (or even modify data) on the server where the Javascript is hosted. I know that there are security restrictions in place for obvious reasons.</p>\n\n<p>Consider index.html hosted on xyz.com containing the following:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://abc.com/some.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Will some.js be able to use XMLHttpRequest to post data to abc.com? In other words, is abc.com implicitly trusted because we loaded Javascript from there?</p>\n",
            "last_activity_date": 1362470681,
            "question_id": 395045,
            "score": 11,
            "tags": [
                "javascript",
                "ajax",
                "xmlhttprequest",
                "xss"
            ],
            "title": "Cross-site XMLHttpRequest"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Probably you are looking for something described in this post:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/742271/generating-pdf-files-with-javascript\">Generating PDF files with Javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can use autoPrint() and set output to 'dataurlnewwindow' like this:</p>\n\n<pre><code>    function printPDF(){\n    var printDoc = new jsPDF();\n\n\n    };\n\n\n    printDoc.fromHTML($('#pdf').get(0), 10, 10, {\n        'width': 180\n    });\n\n    printDoc.autoPrint()\n    printDoc.output(\"dataurlnewwindow\") // this opens a new popup,  after this the PDF opens the print window view but there are browser inconsistencies with how this is handled\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>jsPDF is able to use plugins.</strong> In order to enable it to print HTML, you have to include certain plugins and therefore have to do the following:</p>\n\n<ol>\n<li>Go to <a href=\"https://github.com/MrRio/jsPDF\" rel=\"nofollow\">https://github.com/MrRio/jsPDF</a> and download the latest Version.</li>\n<li>Include the following Scripts in your project:\n<ul>\n<li>jspdf.js</li>\n<li>jspdf.plugin.from_html.js</li>\n<li>jspdf.plugin.split_text_to_size.js</li>\n<li>jspdf.plugin.standard_fonts_metrics.js</li>\n</ul></li>\n</ol>\n\n<p>If you want to ignore certain elements, you have to mark them with an ID, which you can then ignore in a special element handler of jsPDF. Therefore your HTML should look like this:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;p id=\"ignorePDF\"&gt;don't print this to pdf&lt;/p&gt;\n    &lt;div&gt;\n      &lt;p&gt;&lt;font size=\"3\" color=\"red\"&gt;print this to pdf&lt;/font&gt;&lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Then you use the following JavaScript code to open the created PDF in a PopUp:</p>\n\n<pre><code>var doc = new jsPDF();          \nvar elementHandler = {\n  '#ignorePDF': function (element, renderer) {\n    return true;\n  }\n};\nvar source = window.document.getElementsByTagName(\"body\")[0];\ndoc.fromHTML(\n    source,\n    15,\n    15,\n    {\n      'width': 180,'elementHandlers': elementHandler\n    });\n\ndoc.output(\"dataurlnewwindow\");\n</code></pre>\n\n<p>For me this created a nice and tidy PDF that only included the line 'print this to pdf'.</p>\n\n<p>Please note that the special element handlers only deal with IDs in the current version, which is also stated in a <a href=\"https://github.com/MrRio/jsPDF/issues/34\" rel=\"nofollow\">GitHub Issue</a>. It states: </p>\n\n<blockquote>\n  <p>Because the matching is done against every element in the node tree, my desire was to make it as fast as possible. In that case, it meant \"Only element IDs are matched\" The element IDs are still done in jQuery style \"#id\", but it does not mean that all jQuery selectors are supported.</p>\n</blockquote>\n\n<p>Therefore replacing '#ignorePDF' with class selectors like '.ignorePDF' did not work for me. Instead you will have to add the same handler for each and every element, which you want to ignore like:</p>\n\n<pre><code>var elementHandler = {\n  '#ignoreElement': function (element, renderer) {\n    return true;\n  },\n  '#anotherIdToBeIgnored': function (element, renderer) {\n    return true;\n  }\n};\n</code></pre>\n\n<p>From the <a href=\"http://mrrio.github.io/jsPDF/examples/basic.html\" rel=\"nofollow\">examples</a> it is also stated that it is possible to select tags like 'a' or 'li'. That might be a little bit to unrestrictive for the most usecases though:</p>\n\n<blockquote>\n  <p>We support special element handlers. Register them with jQuery-style\n  ID selector for either ID or node name. (\"#iAmID\", \"div\", \"span\" etc.)\n  There is no support for any other type of selectors (class, of\n  compound) at this time.</p>\n</blockquote>\n\n<p><strong>One very important thing to add is that you lose all your style information (CSS). Luckily jsPDF is able to nicely format h1, h2, h3 etc., which was enough for my purposes. Additionalyl it will only print text within text nodes, which means that it will not print the values of textareas and the like. Example:</strong></p>\n\n<pre><code>&lt;body&gt;\n  &lt;ul&gt;\n    &lt;!-- This is printed as the element contains a textnode --&gt;        \n    &lt;li&gt;Print me!&lt;/li&gt;\n  &lt;/ul&gt;\n  &lt;div&gt;\n    &lt;!-- This is not printed because jsPDF doesn't deal with the value attribute --&gt;\n    &lt;input type=\"textarea\" value=\"Please print me, too!\"&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>I was able to get jsPDF to print dynamically created tables from a div.</p>\n\n<pre><code>$(document).ready(function() {\n\n        $(\"#pdfDiv\").click(function() {\n\n    var pdf = new jsPDF('p','pt','letter');\n    var specialElementHandlers = {\n    '#rentalListCan': function (element, renderer) {\n        return true;\n        }\n    };\n\n    pdf.addHTML($('#rentalListCan').first(), function() {\n        pdf.save(\"caravan.pdf\");\n    });\n    });\n});\n</code></pre>\n\n<p>Works great with Chrome and Firefox... formatting is all blown up in IE.</p>\n\n<p>I also included these:</p>\n\n<pre><code>&lt;script src=\"js/jspdf.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"js/jspdf.plugin.from_html.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"js/jspdf.plugin.addhtml.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"//mrrio.github.io/jsPDF/dist/jspdf.debug.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"http://html2canvas.hertzen.com/build/html2canvas.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"./libs/FileSaver.js/FileSaver.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"./libs/Blob.js/Blob.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"./libs/deflate.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"./libs/adler32cs.js/adler32cs.js\"&gt;&lt;/script&gt;\n\n    &lt;script type=\"text/javascript\" src=\"js/jspdf.plugin.addimage.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/jspdf.plugin.sillysvgrenderer.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/jspdf.plugin.split_text_to_size.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/jspdf.plugin.standard_fonts_metrics.js\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have the following html code:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;body&gt;\n        &lt;p&gt;don't print this to pdf&lt;/p&gt;\n        &lt;div id=\"pdf\"&gt;\n            &lt;p&gt;&lt;font size=\"3\" color=\"red\"&gt;print this to pdf&lt;/font&gt;&lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>All I want to do is to print to pdf whatever is found in the div with an id of \"pdf\".  This must be done using JavaScript.  The \"pdf\" document should then be automatically downloaded with a filename of \"foobar.pdf\"</p>\n\n<p>I've been using jspdf to do this, but the only function it has is \"text\" which accepts only string values.  I want to submit HTML to jspdf, not text.  </p>\n",
            "last_activity_date": 1426161127,
            "question_id": 18191893,
            "score": 9,
            "tags": [
                "javascript",
                "jspdf"
            ],
            "title": "Generate pdf from HTML in div using Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Use the innerHTML and outerHTML values of the element in the <a href=\"https://developers.google.com/chrome-developer-tools/docs/heap-profiling#views_dom\" rel=\"nofollow\">Detached DOM tree</a> view of the <a href=\"https://developers.google.com/chrome-developer-tools/docs/heap-profiling-dom-leaks\" rel=\"nofollow\">Heap Profiler</a> to map objects in memory to your code and track down memory leaks.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>update:</strong>\nLets use <strong>Record Heap Allocations</strong> profile type.</p>\n\n<ol>\n<li>open devtools profiler</li>\n<li>do a warm-up action</li>\n<li>start profiler</li>\n<li>repeat action a few times</li>\n<li>if the action has a leak you will see the same number of groups of blue bars in the overview pane</li>\n<li>stop the profiler</li>\n<li>select one group of these blue bars in the overview</li>\n<li>look into the list of objects</li>\n</ol>\n\n<p>See screencast <a href=\"http://youtu.be/ZKzw3VEqifw\">Javascript Memory Leak detection (Chrome DevTools)</a></p>\n\n<p><strong>was:</strong>\nYou can use the next scenario for fining memory leaks.</p>\n\n<ol>\n<li>open devtools profiler</li>\n<li>do an action that makes a leak</li>\n<li>take a heap snapshot</li>\n<li>repeat steps 2 and 3 tree times</li>\n<li>select the latest heap snapshot</li>\n<li>change filter \"All Object\" to \"Objects between Snapshot 1 and 2\"</li>\n</ol>\n\n<p>After that you will see objects a set of leaked objects.\nYou can select an object and look at the list of retainers in Object's retaining tree</p>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>I have a webapplication which has a memory leack somewhere and I am unable to detect it. I already tried the Chrome developer tools which normally work great, but I am unable to track down the lines of code which are responsible. The Chrome tools just give me too much information and I can't relate the objects in memory to my code. </p>\n\n<p>Are there any other tools that might be helpful?</p>\n",
            "last_activity_date": 1409739008,
            "question_id": 11969062,
            "score": 9,
            "tags": [
                "javascript",
                "memory-leaks",
                "google-chrome-devtools"
            ],
            "title": "Tool to track down JavaScript memory leak"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>To call  method of objective c in JS:</p>\n\n<p>the below url helps in doing that</p>\n\n<p><a href=\"http://stackoverflow.com/questions/9826792/how-to-invoke-objective-c-method-from-javascript-and-send-back-data-to-javascrip\">How to invoke Objective C method from Javascript and send back data to Javascript in iOS?</a></p>\n\n<p>There is no way of executing , we make workaround by a navigation to other page and during the navigation , a webview delegate will watch for prefix of the navigation and execute the \nmethod we  specified </p>\n\n<p>sample.html</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n\n    &lt;script type='text/javascript'&gt;\n        function getText()\n        {\n            return document.getElementById('txtinput').value;\n        }\n       function locationChange()\n        {\n            window.location  = 'ios:webToNativeCall';\n        }\n        &lt;/script&gt;\n&lt;/head&gt;\n    &lt;body  style='overflow-x:hidden;overflow-y:hidden;'&gt;\n        &lt;h2 style = \"font-size:16px;\" align='center' &gt;Hi Welcome to Webpage&lt;/h2&gt;\n        &lt;br/&gt;\n       &lt;p align='center' style = \"font-size:12px;\"&gt; Please Click the button after entering the text&lt;/p&gt;\n        &lt;br/&gt;\n\n    &lt;center&gt;\n        &lt;input type='text' style='width:90px;height:30px;' id='txtinput'/&gt;\n    &lt;/center&gt;\n        &lt;br/&gt;\n        &lt;center&gt;\n\n        &lt;input type='button' style='width:90px;height:30px;' onclick='locationChange()' value='click me'&gt;\n            &lt;/center&gt;\n\n\n    &lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>objective -c code</p>\n\n<p>when you click button in html page the below delegate will fired and navigation cancelled because we return NO and respective method is called</p>\n\n<pre><code>- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType\n{\n    if ([[[request URL] absoluteString] hasPrefix:@\"ios:\"]) {\n\n            // Call the given selector\n        [self performSelector:@selector(webToNativeCall)];        \n            // Cancel the location change\n        return NO;\n    }\n    return YES;\n\n}\n\n- (void)webToNativeCall\n{\n    NSString *returnvalue =  [self.webviewForHtml stringByEvaluatingJavaScriptFromString:@\"getText()\"];\n\n    self.valueFromBrowser.text = [NSString stringWithFormat:@\"From browser : %@\", returnvalue ];\n\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>I have .html file in my iOS app. HTML file has few div blocks with onClick methods.\nWhen I tap on these blocks I invoke some javascript code in web view, but I need also know about these events in my source code.</p>\n\n<p>For example when I tap on web element and onClick is called I need to invoke some method in the code e.g. <code>- (void)didTouchedWebElementWithId</code></p>\n\n<p>Can I do this stuff. Thanks.</p>\n",
            "last_activity_date": 1406529383,
            "question_id": 15537320,
            "score": 6,
            "tags": [
                "javascript",
                "ios",
                "uiwebview"
            ],
            "title": "Invoke method in objective c code from HTML code using UIWebView"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use this regex:</p>\n\n<pre><code>^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&amp;*-]).{8,}$\n</code></pre>\n\n<p>This regex will enforce these rules:</p>\n\n<ul>\n<li>At least one upper case english letter</li>\n<li>At least one lower case english letter</li>\n<li>At least one digit</li>\n<li>At least one special character</li>\n<li>Minimum 8 in length</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>just a small improvement for @anubhava answer, since special character are limited to the ones in the keyboard, use this for any special character:</p>\n\n<p><code>^(?=.*?[A-Z])(?=(.*[a-z]){1,})(?=(.*[\\d]){1,})(?=(.*[\\W]){1,})(?!.*\\s).{8,}$</code></p>\n\n<p>This regex will enforce these rules:</p>\n\n<ul>\n<li>At least one upper case english letter </li>\n<li>At least one lower case english letter</li>\n<li>At least one digit </li>\n<li>At least one special character</li>\n<li>Minimum 8 in length</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Minimum 8 characters at least 1 Alphabet and 1 Number:</p>\n\n<pre><code>\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n</code></pre>\n\n<p>Minimum 8 characters at least 1 Alphabet, 1 Number and 1 Special Character:</p>\n\n<pre><code>\"^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&amp;])[A-Za-z\\d$@$!%*#?&amp;]{8,}$\"\n</code></pre>\n\n<p>Minimum 8 characters at least 1 Uppercase Alphabet, 1 Lowercase Alphabet and 1 Number:</p>\n\n<pre><code>\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$\"\n</code></pre>\n\n<p>Minimum 8 characters at least 1 Uppercase Alphabet, 1 Lowercase Alphabet, 1 Number and 1 Special Character:</p>\n\n<pre><code>\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&amp;])[A-Za-z\\d$@$!%*?&amp;]{8,}\"\n</code></pre>\n\n<p>Minimum 8 and Maximum 10 characters at least 1 Uppercase Alphabet, 1 Lowercase Alphabet, 1 Number and 1 Special Character:</p>\n\n<pre><code>\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&amp;])[A-Za-z\\d$@$!%*?&amp;]{8,10}\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Import this Javascript File <code>jquery.validate.min.js</code></p>\n\n<p>You can use this Method:</p>\n\n<pre><code>$.validator.addMethod(\"pwcheck\", function (value) {    \n    return /[\\@\\#\\$\\%\\^\\&amp;\\*\\(\\)\\_\\+\\!]/.test(value) &amp;&amp; /[a-z]/.test(value) &amp;&amp; /[0-9]/.test(value) &amp;&amp; /[A-Z]/.test(value)\n});\n</code></pre>\n\n<ol>\n<li>At least one upper case English letter</li>\n<li>At least one lower case English letter</li>\n<li>At least one digit</li>\n<li>At least one special character</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I want a regular expression to check that</p>\n\n<p>Password Must be contain at least 8 characters, including at least 1 number and\n includes both lower and uppercase letters and special characters (e.g., #, ?, !)</p>\n\n<p>Cannot be your old password or contain your username, \"password\", or \"websitename\"</p>\n\n<p>And here is my validation expression which is for 8 characters including 1 uppercase letter, 1 lowercase letter, 1 number or special character.</p>\n\n<pre><code>(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\n</code></pre>\n\n<p>How can I write it for <strong>password must be 8 characters including 1 uppercase letter, 1 special character and alphanumeric characters</strong>?</p>\n",
            "last_activity_date": 1418223403,
            "question_id": 19605150,
            "score": 5,
            "tags": [
                "javascript",
                "asp.net",
                "regex"
            ],
            "title": "Regex for Password Must be contain at least 8 characters, least 1 number and both lower and uppercase letters and special characters"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Yes, I believe you can retrieve the current domain name with location.href. Another possibility is to create a link  element, set the src to / and then retrieving the canonical URL (this will retrieve the base URL if you use one, and not necessarily the domain name).</p>\n\n<p>Also see this post: <a href=\"http://stackoverflow.com/questions/2639070/get-the-full-uri-from-the-href-property-of-a-link\">http://stackoverflow.com/questions/2639070/get-the-full-uri-from-the-href-property-of-a-link</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var comp = new RegExp(location.host);\n\n$('a').each(function(){\n   if(comp.test($(this).attr('href'))){\n       // a link that contains the current host           \n       $(this).addClass('local');\n   }\n   else{\n       // a link that does not contain the current host\n       $(this).addClass('external');\n   }\n});\n</code></pre>\n\n<p>Note: this is just a quick &amp; dirty example. It would match all href=\"#anchor\" links\nas external too. It might be improved by doing some extra RegExp checking.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>And the no-jQuery way</p>\n\n<pre><code>var nodes = document.getElementsByTagName(\"a\"), i = nodes.length;\nvar regExp = new RegExp(\"//\" + location.host + \"($|/)\");\nwhile(i--){\n    var href = nodes[i].href;\n    var isLocal = (href.substring(0,4) === \"http\") ? regExp.test(href) : true;\n    alert(href + \" is \" + (isLocal ? \"local\" : \"not local\"));\n}\n</code></pre>\n\n<p>All hrefs not beginning with <code>http</code> (http://, https://) are automatically treated as local </p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<pre><code>var external = RegExp('^((f|ht)tps?:)?//(?!' + location.host + ')');\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>external.test('some url'); // =&gt; true or false\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You forgot one, what if you use a relative path.</p>\n\n<p>forexample: /test</p>\n\n<pre><code>        hostname = new RegExp(location.host);\n            // Act on each link\n            $('a').each(function(){\n\n            // Store current link's url\n            var url = $(this).attr(\"href\");\n\n            // Test if current host (domain) is in it\n            if(hostname.test(url)){\n               // If it's local...\n               $(this).addClass('local');\n            }\n            else if(url.slice(0, 1) == \"/\"){\n                $(this).addClass('local'); \n            }\n            else if(url.slice(0, 1) == \"#\"){\n                // It's an anchor link\n                $(this).addClass('anchor'); \n            }\n            else {\n               // a link that does not contain the current host\n               $(this).addClass('external');                        \n            }\n        });\n</code></pre>\n\n<p>There are also the issue of file downloads .zip (local en external) which could use the classes \"local download\" or  \"external download\". But didn't found a solution for it yet.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This works...</p>\n\n<pre><code>$(document).ready(function(){ \n  $(\"a[href*='http://']:not([href*='\"+window.location.hostname+\"'])\").addClass(\"ExternalLink\").attr(\"target\",\"_blank\"); \n});\n</code></pre>\n\n<p>You can then define your own CSS for the class \"ExternalLink\".</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know this post is old but it still shows at the top of results so I wanted to offer another approach. I see all the regex checks on an anchor element, but why not just use location.host and this.host? </p>\n\n<p>in jQuery</p>\n\n<pre><code>$('a').each(function () {\n    if (this.host !== location.host) {\n        // external\n    }\n    else {\n        // internal\n    }\n});\n</code></pre>\n\n<p>or plain JS</p>\n\n<pre><code>var links = document.getElementsByTagName('a');\nfor (var i = links.length - 1; i &gt; 0; i--) {\n    if (links[i].host !== location.host) {\n        // external\n    }\n    else {\n        // internal\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Here's a jQuery selector for only external links:</p>\n\n<pre><code>$('a[href^=\"(http:|https:)?//\"])') \n</code></pre>\n\n<p>A jQuery selector only for internal links (not including hash links within the same page) needs to be a bit more complicated:</p>\n\n<pre><code>$('a:not([href^=\"(http:|https:)?//\"],[href^=\"#\"],[href^=\"mailto:\"])')\n</code></pre>\n\n<p>Additional filters can be placed inside the <code>:not()</code> condition and separated by additional commas as needed.</p>\n\n<p><a href=\"http://jsfiddle.net/mblase75/Pavg2/\" rel=\"nofollow\">http://jsfiddle.net/mblase75/Pavg2/</a></p>\n\n<hr>\n\n<p>Alternatively, we can filter internal links using the vanilla JavaScript <code>href</code> property, which is always an absolute URL:</p>\n\n<pre><code>$('a').filter( function(i,el) {\n    return el.href.indexOf(location.protocol+'//'+location.hostname)===0;\n})\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mblase75/7z6EV/\" rel=\"nofollow\">http://jsfiddle.net/mblase75/7z6EV/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>How do I test to see if some links are external or internal? Please note:</p>\n\n<ol>\n<li>I cannot hard code the local domain.</li>\n<li>I cannot test for \"http\". I could just as easily be linking to my own site with an http absolute link.</li>\n<li>I want to use jQuery / javascript, not css.</li>\n</ol>\n\n<p>I suspect the answer lies somewhere in location.href, but the solution evades me.</p>\n\n<p>Thanks!</p>\n\n<hr>\n\n<p>Update: Thanks to jAndy, I've got a slightly modified version of what he answered:</p>\n\n<pre><code>        hostname = new RegExp(location.host);\n        // Act on each link\n        $('a').each(function(){\n\n            // Store current link's url\n            var url = $(this).attr(\"href\");\n\n            // Test if current host (domain) is in it\n            if(hostname.test(url)){\n               // If it's local...\n               $(this).addClass('local');\n            }\n            else if(url.slice(0, 1) == \"#\"){\n                // It's an anchor link\n                $(this).addClass('anchor'); \n            }\n            else {\n               // a link that does not contain the current host\n               $(this).addClass('external');                        \n            }\n        });\n</code></pre>\n",
            "last_activity_date": 1413919018,
            "question_id": 2910946,
            "score": 34,
            "tags": [
                "javascript",
                "jquery",
                "location",
                "href"
            ],
            "title": "Test if links are external with jQuery / javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You could just strip out the html tags, and then put everything inside the html element:</p>\n\n<pre><code>$('html').html(myString.replace(/&lt;html&gt;(.*)&lt;\\/html&gt;/, \"$1\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The document.open/write/close methods will do what you want:</p>\n\n<pre><code>var newDoc = document.open(\"text/html\", \"replace\");\nnewDoc.write(myString);\nnewDoc.close();\n</code></pre>\n\n<p>Unless you pass in the replace parameter, the document.open call adds page history. So users would have to click back twice to go to the previous page.</p>\n",
                    "is_accepted": true,
                    "score": 65
                },
                {
                    "body": "<p>Another variation to try might be</p>\n\n<pre><code>$('html').replaceWith(myString);\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/replaceWith/\" rel=\"nofollow\">http://api.jquery.com/replaceWith/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a string which looks like:</p>\n\n<pre><code>&lt;html&gt;&lt;head&gt;&lt;title&gt;example&lt;/title&gt;&lt;/head&gt;&lt;body&gt;some example text&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>I get this string returned as a result to an AJAX request.</p>\n\n<p>I would like the browser to render and display that string.  The idea would be to do something like: </p>\n\n<pre><code>$('html').parent().html(myString);\n</code></pre>\n\n<p>Well, that doesn't work.  I've attempted to use an IFRAME but I haven't figured out how to get that to work either.</p>\n\n<p><strong>Note:</strong> It is impossible for me to change this string.  It is also impossible for me to regenerate this string in a subsequent call to the server (otherwise I could just redirect the browser to that url).</p>\n",
            "last_activity_date": 1346777241,
            "question_id": 1236360,
            "score": 33,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How do I replace the entire HTML node using jQuery"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Java is to Javascript what Car is to Carpet.</p>\n\n<blockquote>\n  <p>\"The language's name is the result of a co-marketing deal between Netscape and Sun, in exchange for Netscape bundling Sun's Java runtime with their then-dominant browser.\"</p>\n  \n  <p><code>-</code> <a href=\"http://en.wikipedia.org/wiki/JavaScript#History\">http://en.wikipedia.org/wiki/JavaScript#History</a></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>It was a marketing ploy cooked up by Netscape since Java was the big buzz word at the time.  Originally it was called LiveScript.  Which was probably a better name in hindsight.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It was originally called Mocha, renamed to LiveScript, and then renamed to JavaScript.  JavaScript itself is a trademark of Sun Microsystems -- the official standard is just called <em>ECMAScript</em>.</p>\n\n<p>Further confusing the matter, Microsoft has decided to call their version JScript.  JScript is not at all related to J++, a Microsoft-implemented Java whose name undoubtedly is designed to cause confusion with C++.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>From an <a href=\"http://www.infoworld.com/d/developer-world/javascript-creator-ponders-past-future-704\">interview</a> made to its creator <a href=\"http://en.wikipedia.org/wiki/Brendan_Eich\">Brendan Eich</a>:</p>\n\n<p><strong>InfoWorld:</strong> As I understand it, JavaScript started out as Mocha, then became LiveScript and then became JavaScript when Netscape and Sun got together. But it actually has nothing to do with Java or not much to do with it, correct?</p>\n\n<p><strong>Eich:</strong> That\u2019s right. It was all within six months from May till December (1995) that it was Mocha and then LiveScript. And then in early December, Netscape and <strong>Sun</strong> did a license agreement and it became JavaScript. And the idea was to make it a complementary scripting language to go with Java, with the compiled language.</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>We were obsessed with naming things after coffee in the 90's.</p>\n\n<p><em>I know... what were we thinking?!</em></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://tim.oreilly.com/pub/a/javascript/2001/04/06/js_history.html\">Marketing reasons</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The language has similarities to C-adjecents to which Java counts aswell.</p>\n\n<p>It was first named Mocha but later renamed to LiveScript and finally to JavaScript due to marketing reasons. To accomodate the Java trend during that time there was an interface between LiveScript and Java called LiveConnect. This connection was intented to be expressed with the new name \"JavaScript\".</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>The project was originally called <em>Mocha</em>, then renamed to <em>LiveScript</em>, and finally to JavaScript when Netscape and Sun did a license agreement. The idea at the time was to make it a scripting language complimentary to Java.</p>\n\n<p><a href=\"http://www.infoworld.com/d/developer-world/javascript-creator-ponders-past-future-704\">My Source</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It's just a historical mistake. (and according to me there's no real valid reason to name JavaScript as JavaScript)</p>\n\n<p>They have similar names because market was crazy about these new technologies when they were starting to come out (actually Netscape was about to include Java inside Netscape) and they accidentally chose to change LiveScript name to JavaScript. I wrote accidentally because they have nothing in common (apart from being two programming languages) so there's no a real, analytic reason for this similarity.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>JavaScript, was originally named Mocha, later it was renamed to LiveScript, and then to JavaScript.</p>\n\n<p>The LiveScript to JavaScript name change came because Netscape and Sun did a license agreement.</p>\n\n<p>The language was then submitted for standarization to the <a href=\"http://www.ecma-international.org/\">ECMA International</a> Organization. By that time, Netscape didn't allow the use of the \"JavaScript\" name, so the standarized language is named <a href=\"http://www.ecmascript.org/\">ECMAScript</a>.</p>\n\n<p>JavaScript isn't actually an open name. Now it's a <a href=\"http://www.sun.com/suntrademarks/#J\">trademark</a> of Sun (now Oracle).</p>\n\n<p>There still a lot of confusion, some people still think that JavaScript, JScript, and ECMAScript are three different languages.</p>\n\n<p>ECMAScript is the \"standards\" name for the language. </p>\n\n<p>JavaScript is technically a \"dialect\" of ECMAScript, the Mozilla Foundation can use \"JavaScript\" as the name of their implementations (currently present on the <a href=\"https://developer.mozilla.org/en/Rhino\">Rhino</a> and <a href=\"https://developer.mozilla.org/en/SpiderMonkey\">SpiderMonkey</a> engines).</p>\n\n<p>In the early days, Microsoft decided also to do what Netscape was doing on their own browser, and they developed <a href=\"http://msdn.microsoft.com/en-us/library/hbxc2t98%28VS.85%29.aspx\">JScript</a>, which is also an ECMAScript dialect, but was named in this way to avoid trademark issues.</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>At the time Javascript or Livescript was launched into market the Sun MicroSystems was busy with the java creation so they named it as javascript.\nAlso it uses some basic construts of the java.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Since JavaScript is not derived from Java, why does it have \"Java\" in the name?</p>\n",
            "last_activity_date": 1344033433,
            "question_id": 2018731,
            "score": 32,
            "tags": [
                "java",
                "javascript"
            ],
            "title": "Why is JavaScript called JavaScript, since it has nothing to do with Java?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Functions are also objects, so <code>$.each</code> can be defined in a similar way as an Object.</p>\n\n<p>JavaScript is a prototypical language. For jQuery, this means that every instance of <code>$</code> inherits methods from <code>jQuery.prototype</code>.<sup>See Notes</sup></p>\n\n<p>A very rough demo, to achieve the similar behaviour:</p>\n\n<pre><code>(function() { // Closure to not leak local variables to the global scope\n    function f(a, b) {\n        //Do something\n    }\n    // Prototype. All properties of f.prototype are inherited by instances of f.\n    // An instance of f can be obtained by:    new f, new f(), Object.create(f)\n    f.prototype.removeClass = function(a) {\n        return a;\n    };\n    function $(a, b) {\n        return new f(a, b); // &lt;--- \"new f\" !  \n    } \n    $.each = function(a) {\n        alert(a);             \n    };\n    window.$ = $; // Publish public methods\n})();\n\n//Tests (these do not represent jQuery methods):\n$.each(\"Foo\");                   // Alerts \"Foo\" (alert defined at $.each)\nalert($().removeClass('Blabla'));// Alerts \"Blabla\"\n</code></pre>\n\n<h2>Notes</h2>\n\n<p>jQuery's root method is defined as follows (only relevants parts are shown):</p>\n\n<pre><code>(function(win) {\n    var jQuery = function (selector, context) {\n        return new jQuery.fn.init(selector, context, rootjQuery);\n    };\n    //$.fn = jQuery.fn is a shorthand for defining \"jQuery plugins\".\n    jQuery.fn = jQuery.prototype = {\n        constructor: jQuery,\n        init: function( /* ..parameters.. */ ) { \n            //.... sets default properties...\n        }\n        //....other methods, such as size, get, etc...\n        //.... other properties, such as selector, length, etc...\n    };\n    jQuery.fn.removeClass = function() { // (Actually via jQuery.fn.extend)\n        // ... method logic...\n    };  //...lots of other stuff...\n\n    win.$ = win.jQuery = jQuery; //Publish method\n})(window);\n</code></pre>\n\n<p>The advantage of the <code>prototype</code> method is that it's very easy to chain methods and properties. For example:</p>\n\n<pre><code>$(\"body\").find(\"div:first\").addClass(\"foo\");\n</code></pre>\n\n<p>A method to implement this feature could be:</p>\n\n<pre><code>$.fn.find = function(selector) {\n    ...\n    return $(...);\n};\n</code></pre>\n\n<p>If you're interested in jQuery's real implementation, have a look at the annotated source code:</p>\n\n<ul>\n<li><a href=\"https://github.com/jquery/jquery/blob/master/src/core.js#L1\">jQuery core</a> - Definitions of the constructor and base methods.</li>\n<li><code>jQuery.fn.extend</code> is used to <a href=\"https://github.com/jquery/jquery/blob/master/src/attributes.js#L13\">add <code>removeClass</code>, etc. to jQuery</a>.</li>\n<li><a href=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.js\">jQuery 1.7.1</a>.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>All functions work this way.</p>\n\n<pre><code>function fn() {\n    alert(\"hi mom\");\n}\n\nfn.foo = \"bar\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>In JavaScript, functions are a type of object. Specifically, functions are instances of the Function object which is derived from Object. jQuery takes advantage of that fact and hangs some \"static\" methods from the jQuery function object.</p>\n\n<p>jQuery's creator John Resig has a nice tutorial on this subject at <a href=\"http://ejohn.org/apps/learn/\" rel=\"nofollow\">http://ejohn.org/apps/learn/</a>. That might give you some ideas about how to leverage this feature of JavaScript in your own code.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p><code>jQuery</code> or <code>$</code> seems to be a function:</p>\n\n<pre><code>typeof $; // \"function\"\n</code></pre>\n\n<p>And it acts like one:</p>\n\n<pre><code>$('div').removeClass(); // $ constructs a new object with some methods like removeClass\n</code></pre>\n\n<p>But when I drop the function parentheses it behaves like an object:</p>\n\n<pre><code>$.each(/* parameters */); // $ is an object with some methods like each\n</code></pre>\n\n<p>I'd like to know how this is possible and how I can implement this behaviour to my own functions.</p>\n",
            "last_activity_date": 1333699518,
            "question_id": 8734115,
            "score": 26,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How can jQuery behave like an object and a function?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>They both have similar behaviors.</p>\n\n<p>The parentheses encapsulating the function declaration tell the JavaScript engine to execute the code immediately after it's parsed. In the first example, you're creating a function object then invoking it with the parentheses that follow. In the second example, you are telling the JavaScript engine to create the function object and invoke it immediately.</p>\n\n<p>Example:</p>\n\n<pre><code>// creates a function object\nvar f1 = (function() { alert('foo'); }); \n\n// creates a function object and executes it immediately\nvar f2 = (function() { alert('foo'); }()); \n</code></pre>\n\n<p>The difference is that f1 gives you a function object. f2 creates and invokes an anonymous function.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><strong>This is done for readability.</strong></p>\n\n<p>There isn't a real functional difference between the two examples you've given, but both of them are very close to a simple function declaration, which <em>is</em> different. The parenthesis are added for readability, in order to distinguish them.</p>\n\n<p><strong>Here is what each of your snippets do:</strong></p>\n\n<p>In the first of your two snippets, the first parenthesis will be evaluated as the value of the enclosed function. Then this value will be called as a function. So ultimately the function will be executed, which is probably what you care about.</p>\n\n<p>In your second snippet, the outer parenthesis will be evaluated as containing a function which is declared inline and immediately executed. Again, the function will be executed, which is still probably what you care about.</p>\n\n<p>Both of these will execute the same function, so there won't be any significant difference. </p>\n\n<p><strong>The difference between a snippet like yours and a simple function declaration:</strong></p>\n\n<p>The functions you've given are also identical to the following. I've just added a function name and assigned the return value for syntactical accuracy, which you can ignore for now.</p>\n\n<pre><code>// javascript...\nvar val = \n  function myFooFunc () { \n    alert(\"foo\"); \n  }();\n</code></pre>\n\n<p>However, this would be easily mistaken for a simple function declaration, which is different:</p>\n\n<pre><code>// javascript...\nfunction myFooFunc () { \n  alert(\"foo\"); \n}\n</code></pre>\n\n<p>Notice that the only real difference here is that this last function declaration is not executed immediately. The others are. So that is a very different behavior (the simple declaration may be executed later if it is called by name, or it may not ever execute at all). It's often hard to see that difference in the syntax right away, however, especially if the function body grows to be very long and requires scrolling on the screen.</p>\n\n<p><strong>Why are functions executed immediately?</strong></p>\n\n<p>When a function is immediately executed after it is declared, the value is often being returned to something (it may be part of an assignment statement). Sometimes the function is being executed right away because it contains inner functions and is being used to provide functional scope to the inclosed statements.</p>\n\n<p>Essentially, people wrap parenthesis around the \"executed immediately\" form (both of your snippets, and the first one of my two) in order to give a visual cue to other developers that the function is being called immediately. It's just easier to read, since you might not catch the parenthesis until you got to the end of the function (or notice them at all).</p>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>What is the difference between these two javascript function calls?</p>\n\n<pre><code>(function(){alert(\"foo\")})()\n</code></pre>\n\n<p>versus this:</p>\n\n<pre><code>(function(){alert(\"foo\")}()) \n</code></pre>\n",
            "last_activity_date": 1310428776,
            "question_id": 6645766,
            "score": 26,
            "tags": [
                "javascript"
            ],
            "title": "Why are parenthesis used to wrap a javascript function call?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I wouldn't recommend using Javascript to detect mobile devices for the simple reason that many of them do not support Javascript, so your detection code is not guaranteed to work on all devices.</p>\n\n<p>Usually the detection is done server-side using a descriptor file like <a href=\"http://wurfl.sourceforge.net/\" rel=\"nofollow\" rel=\"nofollow\">WURFL</a> which will not only help you detect the various mobile user-agents, but also their capabilities, screen sizes, color depths, etc. That way you can serve up a different configuration of assets (javascript files, image sizes, etc.) depending on the mobile device.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have published the last version of \"Apache Mobile Filter\", this open source project has in the first 8 months, more than 1100 downloads from sourceforge and I suppose the same from CPAN.</p>\n\n<p>The Apache Mobile Filter allows you to access WURFL from any programming language, not just Java and php that is traditionally used for dynamic mobile web sites.</p>\n\n<p>The module detects the mobile device and passes the WURFL capabilities on to the other web application as environment variables. It can also be used to resize images on the fly to adapt to the screen size of the mobile device.</p>\n\n<p>Try it and let me know your opinion.</p>\n\n<p>For more info: <a href=\"http://www.idelfuschini.it/it/apache-mobile-filter-v2x.html\" rel=\"nofollow\">http://www.idelfuschini.it/it/apache-mobile-filter-v2x.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://www.hand-interactive.com/resources/detect-mobile-javascript.htm\" rel=\"nofollow\">http://www.hand-interactive.com/resources/detect-mobile-javascript.htm</a></p>\n\n<pre><code>var deviceBB = \"blackberry\";\n\n//Initialize our user agent string to lower case. \nvar uagent = navigator.userAgent.toLowerCase();\n\n//************************** // Detects if the current browser is a BlackBerry of some sort. \n\nfunction DetectBlackBerry() {    \nif (uagent.search(deviceBB) &gt; -1)\n      return true;    else\n      return false; \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have this code from K2F, it is in <strong>PHP</strong>, you will have to convert it to javascript.</p>\n\n<p>Shouldn't be too much of a hassle. Knowing constants (text bits) should help you a lot.</p>\n\n<pre><code>/**\n * A simple class used to detect whether page&lt;br&gt;\n * is being viewed from a mobile device or not.\n * @copyright 2010 Covac Software\n * @author Christian Sciberras\n * @version 01/05/2010\n */\nclass Mobile {\n    public static function is_mobile(){\n        $user_agent = $_SERVER['HTTP_USER_AGENT']; // get the user agent value - this should be cleaned to ensure no nefarious input gets executed\n        $accept     = $_SERVER['HTTP_ACCEPT']; // get the content accept value - this should be cleaned to ensure no nefarious input gets executed\n        return false\n            || (preg_match('/ipad/i',$user_agent))\n            || (preg_match('/ipod/i',$user_agent)||preg_match('/iphone/i',$user_agent))\n            || (preg_match('/android/i',$user_agent))\n            || (preg_match('/opera mini/i',$user_agent))\n            || (preg_match('/blackberry/i',$user_agent))\n            || (preg_match('/(pre\\/|palm os|palm|hiptop|avantgo|plucker|xiino|blazer|elaine)/i',$user_agent))\n            || (preg_match('/(iris|3g_t|windows ce|opera mobi|windows ce; smartphone;|windows ce; iemobile)/i',$user_agent))\n            || (preg_match('/(mini 9.5|vx1000|lge |m800|e860|u940|ux840|compal|wireless| mobi|ahong|lg380|lgku|lgu900|lg210|lg47|lg920|lg840|lg370|sam-r|mg50|s55|g83|t66|vx400|mk99|d615|d763|el370|sl900|mp500|samu3|samu4|vx10|xda_|samu5|samu6|samu7|samu9|a615|b832|m881|s920|n210|s700|c-810|_h797|mob-x|sk16d|848b|mowser|s580|r800|471x|v120|rim8|c500foma:|160x|x160|480x|x640|t503|w839|i250|sprint|w398samr810|m5252|c7100|mt126|x225|s5330|s820|htil-g1|fly v71|s302|-x113|novarra|k610i|-three|8325rc|8352rc|sanyo|vx54|c888|nx250|n120|mtk |c5588|s710|t880|c5005|i;458x|p404i|s210|c5100|teleca|s940|c500|s590|foma|samsu|vx8|vx9|a1000|_mms|myx|a700|gu1100|bc831|e300|ems100|me701|me702m-three|sd588|s800|8325rc|ac831|mw200|brew |d88|htc\\/|htc_touch|355x|m50|km100|d736|p-9521|telco|sl74|ktouch|m4u\\/|me702|8325rc|kddi|phone|lg |sonyericsson|samsung|240x|x320|vx10|nokia|sony cmd|motorola|up.browser|up.link|mmp|symbian|smartphone|midp|wap|vodafone|o2|pocket|kindle|mobile|psp|treo)/i',$user_agent))\n            || ((strpos($accept,'text/vnd.wap.wml')&gt;0)||(strpos($accept,'application/vnd.wap.xhtml+xml')&gt;0))\n            || (isset($_SERVER['HTTP_X_WAP_PROFILE'])||isset($_SERVER['HTTP_PROFILE']))\n            || (in_array(strtolower(substr($user_agent,0,4)),array('1207'=&gt;'1207','3gso'=&gt;'3gso','4thp'=&gt;'4thp','501i'=&gt;'501i','502i'=&gt;'502i','503i'=&gt;'503i','504i'=&gt;'504i','505i'=&gt;'505i','506i'=&gt;'506i','6310'=&gt;'6310','6590'=&gt;'6590','770s'=&gt;'770s','802s'=&gt;'802s','a wa'=&gt;'a wa','acer'=&gt;'acer','acs-'=&gt;'acs-','airn'=&gt;'airn','alav'=&gt;'alav','asus'=&gt;'asus','attw'=&gt;'attw','au-m'=&gt;'au-m','aur '=&gt;'aur ','aus '=&gt;'aus ','abac'=&gt;'abac','acoo'=&gt;'acoo','aiko'=&gt;'aiko','alco'=&gt;'alco','alca'=&gt;'alca','amoi'=&gt;'amoi','anex'=&gt;'anex','anny'=&gt;'anny','anyw'=&gt;'anyw','aptu'=&gt;'aptu','arch'=&gt;'arch','argo'=&gt;'argo','bell'=&gt;'bell','bird'=&gt;'bird','bw-n'=&gt;'bw-n','bw-u'=&gt;'bw-u','beck'=&gt;'beck','benq'=&gt;'benq','bilb'=&gt;'bilb','blac'=&gt;'blac','c55/'=&gt;'c55/','cdm-'=&gt;'cdm-','chtm'=&gt;'chtm','capi'=&gt;'capi','cond'=&gt;'cond','craw'=&gt;'craw','dall'=&gt;'dall','dbte'=&gt;'dbte','dc-s'=&gt;'dc-s','dica'=&gt;'dica','ds-d'=&gt;'ds-d','ds12'=&gt;'ds12','dait'=&gt;'dait','devi'=&gt;'devi','dmob'=&gt;'dmob','doco'=&gt;'doco','dopo'=&gt;'dopo','el49'=&gt;'el49','erk0'=&gt;'erk0','esl8'=&gt;'esl8','ez40'=&gt;'ez40','ez60'=&gt;'ez60','ez70'=&gt;'ez70','ezos'=&gt;'ezos','ezze'=&gt;'ezze','elai'=&gt;'elai','emul'=&gt;'emul','eric'=&gt;'eric','ezwa'=&gt;'ezwa','fake'=&gt;'fake','fly-'=&gt;'fly-','fly_'=&gt;'fly_','g-mo'=&gt;'g-mo','g1 u'=&gt;'g1 u','g560'=&gt;'g560','gf-5'=&gt;'gf-5','grun'=&gt;'grun','gene'=&gt;'gene','go.w'=&gt;'go.w','good'=&gt;'good','grad'=&gt;'grad','hcit'=&gt;'hcit','hd-m'=&gt;'hd-m','hd-p'=&gt;'hd-p','hd-t'=&gt;'hd-t','hei-'=&gt;'hei-','hp i'=&gt;'hp i','hpip'=&gt;'hpip','hs-c'=&gt;'hs-c','htc '=&gt;'htc ','htc-'=&gt;'htc-','htca'=&gt;'htca','htcg'=&gt;'htcg','htcp'=&gt;'htcp','htcs'=&gt;'htcs','htct'=&gt;'htct','htc_'=&gt;'htc_','haie'=&gt;'haie','hita'=&gt;'hita','huaw'=&gt;'huaw','hutc'=&gt;'hutc','i-20'=&gt;'i-20','i-go'=&gt;'i-go','i-ma'=&gt;'i-ma','i230'=&gt;'i230','iac'=&gt;'iac','iac-'=&gt;'iac-','iac/'=&gt;'iac/','ig01'=&gt;'ig01','im1k'=&gt;'im1k','inno'=&gt;'inno','iris'=&gt;'iris','jata'=&gt;'jata','java'=&gt;'java','kddi'=&gt;'kddi','kgt'=&gt;'kgt','kgt/'=&gt;'kgt/','kpt '=&gt;'kpt ','kwc-'=&gt;'kwc-','klon'=&gt;'klon','lexi'=&gt;'lexi','lg g'=&gt;'lg g','lg-a'=&gt;'lg-a','lg-b'=&gt;'lg-b','lg-c'=&gt;'lg-c','lg-d'=&gt;'lg-d','lg-f'=&gt;'lg-f','lg-g'=&gt;'lg-g','lg-k'=&gt;'lg-k','lg-l'=&gt;'lg-l','lg-m'=&gt;'lg-m','lg-o'=&gt;'lg-o','lg-p'=&gt;'lg-p','lg-s'=&gt;'lg-s','lg-t'=&gt;'lg-t','lg-u'=&gt;'lg-u','lg-w'=&gt;'lg-w','lg/k'=&gt;'lg/k','lg/l'=&gt;'lg/l','lg/u'=&gt;'lg/u','lg50'=&gt;'lg50','lg54'=&gt;'lg54','lge-'=&gt;'lge-','lge/'=&gt;'lge/','lynx'=&gt;'lynx','leno'=&gt;'leno','m1-w'=&gt;'m1-w','m3ga'=&gt;'m3ga','m50/'=&gt;'m50/','maui'=&gt;'maui','mc01'=&gt;'mc01','mc21'=&gt;'mc21','mcca'=&gt;'mcca','medi'=&gt;'medi','meri'=&gt;'meri','mio8'=&gt;'mio8','mioa'=&gt;'mioa','mo01'=&gt;'mo01','mo02'=&gt;'mo02','mode'=&gt;'mode','modo'=&gt;'modo','mot '=&gt;'mot ','mot-'=&gt;'mot-','mt50'=&gt;'mt50','mtp1'=&gt;'mtp1','mtv '=&gt;'mtv ','mate'=&gt;'mate','maxo'=&gt;'maxo','merc'=&gt;'merc','mits'=&gt;'mits','mobi'=&gt;'mobi','motv'=&gt;'motv','mozz'=&gt;'mozz','n100'=&gt;'n100','n101'=&gt;'n101','n102'=&gt;'n102','n202'=&gt;'n202','n203'=&gt;'n203','n300'=&gt;'n300','n302'=&gt;'n302','n500'=&gt;'n500','n502'=&gt;'n502','n505'=&gt;'n505','n700'=&gt;'n700','n701'=&gt;'n701','n710'=&gt;'n710','nec-'=&gt;'nec-','nem-'=&gt;'nem-','newg'=&gt;'newg','neon'=&gt;'neon','netf'=&gt;'netf','noki'=&gt;'noki','nzph'=&gt;'nzph','o2 x'=&gt;'o2 x','o2-x'=&gt;'o2-x','opwv'=&gt;'opwv','owg1'=&gt;'owg1','opti'=&gt;'opti','oran'=&gt;'oran','p800'=&gt;'p800','pand'=&gt;'pand','pg-1'=&gt;'pg-1','pg-2'=&gt;'pg-2','pg-3'=&gt;'pg-3','pg-6'=&gt;'pg-6','pg-8'=&gt;'pg-8','pg-c'=&gt;'pg-c','pg13'=&gt;'pg13','phil'=&gt;'phil','pn-2'=&gt;'pn-2','pt-g'=&gt;'pt-g','palm'=&gt;'palm','pana'=&gt;'pana','pire'=&gt;'pire','pock'=&gt;'pock','pose'=&gt;'pose','psio'=&gt;'psio','qa-a'=&gt;'qa-a','qc-2'=&gt;'qc-2','qc-3'=&gt;'qc-3','qc-5'=&gt;'qc-5','qc-7'=&gt;'qc-7','qc07'=&gt;'qc07','qc12'=&gt;'qc12','qc21'=&gt;'qc21','qc32'=&gt;'qc32','qc60'=&gt;'qc60','qci-'=&gt;'qci-','qwap'=&gt;'qwap','qtek'=&gt;'qtek','r380'=&gt;'r380','r600'=&gt;'r600','raks'=&gt;'raks','rim9'=&gt;'rim9','rove'=&gt;'rove','s55/'=&gt;'s55/','sage'=&gt;'sage','sams'=&gt;'sams','sc01'=&gt;'sc01','sch-'=&gt;'sch-','scp-'=&gt;'scp-','sdk/'=&gt;'sdk/','se47'=&gt;'se47','sec-'=&gt;'sec-','sec0'=&gt;'sec0','sec1'=&gt;'sec1','semc'=&gt;'semc','sgh-'=&gt;'sgh-','shar'=&gt;'shar','sie-'=&gt;'sie-','sk-0'=&gt;'sk-0','sl45'=&gt;'sl45','slid'=&gt;'slid','smb3'=&gt;'smb3','smt5'=&gt;'smt5','sp01'=&gt;'sp01','sph-'=&gt;'sph-','spv '=&gt;'spv ','spv-'=&gt;'spv-','sy01'=&gt;'sy01','samm'=&gt;'samm','sany'=&gt;'sany','sava'=&gt;'sava','scoo'=&gt;'scoo','send'=&gt;'send','siem'=&gt;'siem','smar'=&gt;'smar','smit'=&gt;'smit','soft'=&gt;'soft','sony'=&gt;'sony','t-mo'=&gt;'t-mo','t218'=&gt;'t218','t250'=&gt;'t250','t600'=&gt;'t600','t610'=&gt;'t610','t618'=&gt;'t618','tcl-'=&gt;'tcl-','tdg-'=&gt;'tdg-','telm'=&gt;'telm','tim-'=&gt;'tim-','ts70'=&gt;'ts70','tsm-'=&gt;'tsm-','tsm3'=&gt;'tsm3','tsm5'=&gt;'tsm5','tx-9'=&gt;'tx-9','tagt'=&gt;'tagt','talk'=&gt;'talk','teli'=&gt;'teli','topl'=&gt;'topl','hiba'=&gt;'hiba','up.b'=&gt;'up.b','upg1'=&gt;'upg1','utst'=&gt;'utst','v400'=&gt;'v400','v750'=&gt;'v750','veri'=&gt;'veri','vk-v'=&gt;'vk-v','vk40'=&gt;'vk40','vk50'=&gt;'vk50','vk52'=&gt;'vk52','vk53'=&gt;'vk53','vm40'=&gt;'vm40','vx98'=&gt;'vx98','virg'=&gt;'virg','vite'=&gt;'vite','voda'=&gt;'voda','vulc'=&gt;'vulc','w3c '=&gt;'w3c ','w3c-'=&gt;'w3c-','wapj'=&gt;'wapj','wapp'=&gt;'wapp','wapu'=&gt;'wapu','wapm'=&gt;'wapm','wig '=&gt;'wig ','wapi'=&gt;'wapi','wapr'=&gt;'wapr','wapv'=&gt;'wapv','wapy'=&gt;'wapy','wapa'=&gt;'wapa','waps'=&gt;'waps','wapt'=&gt;'wapt','winc'=&gt;'winc','winw'=&gt;'winw','wonu'=&gt;'wonu','x700'=&gt;'x700','xda2'=&gt;'xda2','xdag'=&gt;'xdag','yas-'=&gt;'yas-','your'=&gt;'your','zte-'=&gt;'zte-','zeto'=&gt;'zeto','acs-'=&gt;'acs-','alav'=&gt;'alav','alca'=&gt;'alca','amoi'=&gt;'amoi','aste'=&gt;'aste','audi'=&gt;'audi','avan'=&gt;'avan','benq'=&gt;'benq','bird'=&gt;'bird','blac'=&gt;'blac','blaz'=&gt;'blaz','brew'=&gt;'brew','brvw'=&gt;'brvw','bumb'=&gt;'bumb','ccwa'=&gt;'ccwa','cell'=&gt;'cell','cldc'=&gt;'cldc','cmd-'=&gt;'cmd-','dang'=&gt;'dang','doco'=&gt;'doco','eml2'=&gt;'eml2','eric'=&gt;'eric','fetc'=&gt;'fetc','hipt'=&gt;'hipt','http'=&gt;'http','ibro'=&gt;'ibro','idea'=&gt;'idea','ikom'=&gt;'ikom','inno'=&gt;'inno','ipaq'=&gt;'ipaq','jbro'=&gt;'jbro','jemu'=&gt;'jemu','java'=&gt;'java','jigs'=&gt;'jigs','kddi'=&gt;'kddi','keji'=&gt;'keji','kyoc'=&gt;'kyoc','kyok'=&gt;'kyok','leno'=&gt;'leno','lg-c'=&gt;'lg-c','lg-d'=&gt;'lg-d','lg-g'=&gt;'lg-g','lge-'=&gt;'lge-','libw'=&gt;'libw','m-cr'=&gt;'m-cr','maui'=&gt;'maui','maxo'=&gt;'maxo','midp'=&gt;'midp','mits'=&gt;'mits','mmef'=&gt;'mmef','mobi'=&gt;'mobi','mot-'=&gt;'mot-','moto'=&gt;'moto','mwbp'=&gt;'mwbp','mywa'=&gt;'mywa','nec-'=&gt;'nec-','newt'=&gt;'newt','nok6'=&gt;'nok6','noki'=&gt;'noki','o2im'=&gt;'o2im','opwv'=&gt;'opwv','palm'=&gt;'palm','pana'=&gt;'pana','pant'=&gt;'pant','pdxg'=&gt;'pdxg','phil'=&gt;'phil','play'=&gt;'play','pluc'=&gt;'pluc','port'=&gt;'port','prox'=&gt;'prox','qtek'=&gt;'qtek','qwap'=&gt;'qwap','rozo'=&gt;'rozo','sage'=&gt;'sage','sama'=&gt;'sama','sams'=&gt;'sams','sany'=&gt;'sany','sch-'=&gt;'sch-','sec-'=&gt;'sec-','send'=&gt;'send','seri'=&gt;'seri','sgh-'=&gt;'sgh-','shar'=&gt;'shar','sie-'=&gt;'sie-','siem'=&gt;'siem','smal'=&gt;'smal','smar'=&gt;'smar','sony'=&gt;'sony','sph-'=&gt;'sph-','symb'=&gt;'symb','t-mo'=&gt;'t-mo','teli'=&gt;'teli','tim-'=&gt;'tim-','tosh'=&gt;'tosh','treo'=&gt;'treo','tsm-'=&gt;'tsm-','upg1'=&gt;'upg1','upsi'=&gt;'upsi','vk-v'=&gt;'vk-v','voda'=&gt;'voda','vx52'=&gt;'vx52','vx53'=&gt;'vx53','vx60'=&gt;'vx60','vx61'=&gt;'vx61','vx70'=&gt;'vx70','vx80'=&gt;'vx80','vx81'=&gt;'vx81','vx83'=&gt;'vx83','vx85'=&gt;'vx85','wap-'=&gt;'wap-','wapa'=&gt;'wapa','wapi'=&gt;'wapi','wapp'=&gt;'wapp','wapr'=&gt;'wapr','webc'=&gt;'webc','whit'=&gt;'whit','winw'=&gt;'winw','wmlb'=&gt;'wmlb','xda-'=&gt;'xda-',)))\n        ;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I wrote a JS script called \"<strong>redirection_mobile.js</strong>\" to solve this issue. It detects the User Agent and redirects to a mobile version if you're accessing a site from a mobile device. </p>\n\n<p>In some case you want to redirect from a mobile device to a desktop version (like with a link \"Go to the main site\"), the script will handle that and once you finish your session, you'll access to the mobile version again. </p>\n\n<p>You can find the source code on github here <strong>https://github.com/sebarmeli/JS-Redirection-Mobile-Site</strong> and you can read more details in one of my articles here:</p>\n\n<p><a href=\"http://blog.sebarmeli.com/2010/11/02/how-to-redirect-your-site-to-a-mobile-version-through-javascript/\" rel=\"nofollow\">http://blog.sebarmeli.com/2010/11/02/how-to-redirect-your-site-to-a-mobile-version-through-javascript/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The very last place I recommend browser sniffing code is mobile. It's the wild west out there right now and nobody is reading from the same rule book. I've heard rumors some browsers are mimicking other user agents to avoid sniffing code that excludes them just like IE used to back in the '90s.</p>\n\n<p>Test by method and google progressive enhancement if you don't already know what it means. Some browser implementations of JS are so messed up they're not worth trying to accomodate and should be served versions of a site that work without JS, IMO.</p>\n\n<p>Just look at what JQuery's core team considers C-grade (not worth supporting) on their graded compatibility tables. And yes, I believe this applies to both the core and the JQ mobile library (which is kind of like JQ ui for mobile, not JQ core for mobile - still needs core to work).</p>\n\n<p><a href=\"http://jquerymobile.com/gbs/\" rel=\"nofollow\">http://jquerymobile.com/gbs/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Plug in <a href=\"http://www.handsetdetection.com\" rel=\"nofollow\">Handset Detection</a>. You can use Javascript, PHP or most popular scripting languages. We deal with the pain so you don't have to :-) Disclaimer - i work there.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You probably have a normal site and you want to redirect to a mobile site if certain conditions are met, like the screen is very small, or the content is zoomed out to fit on a large \"virtual\" screen in a small physical space. So, why not check for those conditions instead of testing a zillion UA strings.</p>\n\n<p>Try something like this:</p>\n\n<p>For the UA to report the screen's physical pixel size, this tag must be present in the html page. *</p>\n\n<pre><code>&lt;meta name=\"viewport\" \n      content=\"width=device-width, initial-scale=1, maximum-scale=1\" /&gt;\n</code></pre>\n\n<p>Now, just get the size of the screen and redirect if needed. Use a slight delay. **</p>\n\n<pre><code>setTimeout(function(){\n  if ((screen.width &lt; 480) || (screen.height &lt; 480)) {\n    location.replace('/mobile/');\n  }\n}, 100);\n</code></pre>\n\n<p>That's pretty much it. Since this page already has the viewport tag set up for mobile, you could also do the inverse, show mobile here and redirect to full site if screen is bigger.</p>\n\n<p>Edit: I'm not sure why this question has been closed; as far as I can tell it fits the SO format pretty well. Voted to reopen.</p>\n\n<p><sup>* Inserting it with javascript doesn't seem to work (someone please correct me if you figure out a way). If it isn't present, the phone will report a virtual screen size that is larger than the actual screen. It also doesn't seem to work in iframes, only top level windows (which makes sense because iframes will need to be scaled the same amount as the outer window, they share the same viewport).</sup></p>\n\n<p><sup>** Some mobile browsers keep the viewport size from the last loaded page, so they report a large virtual screen size for a few milliseconds, until they notice the meta tag I guess. I couldn't find an early event to hook this into, please comment if you have a better way of doing this. 50 ms delay worked fine in all my tests, 100 should be mostly safe. </sup></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Here is a mobile detection Javascript which I can guarantee to work very well even with thin clients like Opera MIni (disclaimer: I wrote it):</p>\n\n<p><a href=\"https://github.com/miohtama/detectmobile.js\" rel=\"nofollow\">https://github.com/miohtama/detectmobile.js</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a way to detect mobile devices using Javascript?  Also, I researched that there are such an XML which contains user-agents that could help to identify the mobile handsets.</p>\n",
            "last_activity_date": 1392436957,
            "question_id": 743129,
            "score": 25,
            "tags": [
                "javascript",
                "mobile",
                "user-agent",
                "browser-detection"
            ],
            "title": "Mobile detection"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>With IE you have onpaste</p>\n\n<p>With Mozilla you can look into\noninput\nand</p>\n\n<pre><code>elementReference.addEventListener(\"DOMCharacterDataModified\", function(e){ foo(e);}, false);\n</code></pre>\n\n<p>There is no easy as pie solution.</p>\n\n<p>Eric</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>A cheap hack (that works) that you can try is:</p>\n\n<ul>\n<li>jQuery's mouseleave function.</li>\n</ul>\n\n<p>I've noticed with IE8 that if you right-click in a text box and then select 'paste', it delays the \"mouseleave\" event until the paste has finished. So it consistently fires right after the paste! :) Works for me and got me out of trouble perfectly actually.</p>\n\n<p>This is only for an intranet app, I haven't tested in Firefox etc.</p>\n\n<p>Cheers</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>$('#controlId').bind('paste', null, function(e) {\n    if(!e.keyCode){\n       /*\n          since no key was down at the time of the event we can assume it was\n          from the toolbar or right click menu, and not a ctrl+v\n       */\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I like this solution:</p>\n\n<pre><code>$('#txt_field').bind('input propertychange', function() {\n   console.log($(this).val());\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Use <code>setTimeout()</code>, set small timeout till .val() func can get populated.</p>\n\n<pre><code>$(document).on('paste blur keyup', '#controlId', function(event) {\n    var element = $(event.target);\n    setTimeout(function() {\n        var text = $(element).val();\n        // do something with text\n    }, 100);\n});\n</code></pre>\n\n<p>Source: <a href=\"http://stackoverflow.com/questions/686995/catch-paste-input\">Catch paste input</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a way to detect a right click followed by paste with JavaScript on IE and Firefox ?</p>\n\n<p>Update:</p>\n\n<p>I decided to use Jquery to do it:</p>\n\n<pre><code>$('#controlId').bind('paste', null, function() {\n    // code\n});\n</code></pre>\n\n<p>It's not exactly what I was looking (because it gets fired on 'ctrl + v' as well as in 'right click + paste' but I can work around it.</p>\n\n<p>Tested it on Chrome, Firefox 3, IE 7 and IE 6 and it's working</p>\n",
            "last_activity_date": 1413198942,
            "question_id": 441631,
            "score": 24,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to detect right mouse click + paste using JavaScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Sorry man. Well in that case its something like this\n<code></p>\n\n<pre><code>// A label for the current year.\n  var title = svg.append(\"text\")\n     .attr(\"class\", \"title\")\n     .attr(\"dy\", \".71em\")\n     .text(2000);\n</code></pre>\n\n<p></code></p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>SVG text element does not support text-wrapping, so there are two options: </p>\n\n<ul>\n<li>split the text into multiple SVG text elements</li>\n<li>use an overlay HTML div on top of the SVG</li>\n</ul>\n\n<p>See Mike Bostock's comment on this <a href=\"https://github.com/mbostock/d3/issues/60#issuecomment-856549\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I ended up using the following code to break each <em>x</em>-axis label across lines:</p>\n\n<pre><code>var insertLinebreaks = function (d) {\n    var el = d3.select(this);\n    var words = d.split(' ');\n    el.text('');\n\n    for (var i = 0; i &lt; words.length; i++) {\n        var tspan = el.append('tspan').text(words[i]);\n        if (i &gt; 0)\n            tspan.attr('x', 0).attr('dy', '15');\n    }\n};\n\nsvg.selectAll('g.x.axis g text').each(insertLinebreaks);\n</code></pre>\n\n<p>Note that this assumes that the labels have already been created. (If you follow <a href=\"http://bl.ocks.org/3048450\">the canonical histogram example</a> then the labels will have been set up in just the way you need.) There also isn't any real line-breaking logic present; the function converts every space into a newline. This fits my purposes fine but you may need to edit the <code>split()</code> line to be smarter about how it partitions the parts of the string into lines.</p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>use <code>&lt;tspan&gt;</code></p>\n\n<p>and in nv.d3</p>\n\n<p>nv.models.axis = function() {</p>\n\n<p>...</p>\n\n<pre><code>      .select('text')\n            .attr('dy', '0em')\n            .attr('y', -axis.tickPadding())\n            .attr('text-anchor', 'middle')\n            .text(function(d,i) {\n              var v = fmt(d);\n              return ('' + v).match('NaN') ? '' : v;\n            });\n</code></pre>\n\n<p>change all occurrences of .text( to .html(</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There's also <a href=\"http://bl.ocks.org/mbostock/7555321#index.html\" rel=\"nofollow\">this</a> answer on wrapping long labels.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;style&gt;\n\n.bar {\n  fill: steelblue;\n}\n\n.bar:hover {\n  fill: brown;\n}\n\n.title {\n  font: bold 14px \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.axis {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path {\n  display: none;\n}\n\n&lt;/style&gt;\n&lt;body&gt;\n&lt;script src=\"http://d3js.org/d3.v3.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n\nvar margin = {top: 80, right: 180, bottom: 80, left: 180},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1, .3);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(8, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  x.domain(data.map(function(d) { return d.name; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"text\")\n      .attr(\"class\", \"title\")\n      .attr(\"x\", x(data[0].name))\n      .attr(\"y\", -26)\n      .text(\"Why Are We Leaving Facebook?\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\".tick text\")\n      .call(wrap, x.rangeBand());\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.name); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); });\n});\n\nfunction wrap(text, width) {\n  text.each(function() {\n    var text = d3.select(this),\n        words = text.text().split(/\\s+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        lineHeight = 1.1, // ems\n        y = text.attr(\"y\"),\n        dy = parseFloat(text.attr(\"dy\")),\n        tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n    while (word = words.pop()) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n      if (tspan.node().getComputedTextLength() &gt; width) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n      }\n    }\n  });\n}\n\nfunction type(d) {\n  d.value = +d.value;\n  return d;\n}\n\n&lt;/script&gt;\n</code></pre>\n\n<p>and the data file \"data.tsv\":</p>\n\n<pre><code>name    value\nFamily in feud with Zuckerbergs .17\nCommitted 671 birthdays to memory   .19\nEx is doing too well    .10\nHigh school friends all dead now    .15\nDiscovered how to \u201clike\u201d things mentally    .27\nNot enough politics .12\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using D3 to generate a bar chart (I adapted the code from <a href=\"http://bl.ocks.org/3885304\">this example</a>). The labels I'm using on the <em>x</em>-axis are a couple of words long each, and since this makes all of the labels overlap I need to break these labels across lines. (It'll be fine if I can replace all of the spaces in each label with newlines.)</p>\n\n<p>I originally tried this by replacing the spaces with literal newlines (<code>&amp;#xA;</code>) and setting <code>xml:space=\"preserve\"</code> on the labels' <code>&lt;text&gt;</code> elements. Unfortunately, it turns out that SVG doesn't respect this property. Next I tried to wrap each word in a <code>&lt;tspan&gt;</code> that I could later style. I passed each label through this function:</p>\n\n<pre><code>function (text) {\n    return '&lt;tspan&gt;' + text.replace(/ /g, '&lt;/tspan&gt;&lt;tspan&gt;') + '&lt;/tspan&gt;';\n}\n</code></pre>\n\n<p>but this just puts literal <code>&lt;tspan&gt;</code>s into the output. How can I wrap my text labels in <code>tspan</code>s (or do something else) so that my labels don't overlap?</p>\n",
            "last_activity_date": 1415936314,
            "question_id": 13241475,
            "score": 23,
            "tags": [
                "javascript",
                "svg",
                "d3.js"
            ],
            "title": "How do I include newlines in labels in D3 charts?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The main differences between the two are:</p>\n\n<ol>\n<li>Body.Onload() event will be called only after the DOM and associated resources like images got loaded, but jQuery's document.ready() event will be called once the DOM is loaded i.e., it wont wait for the resources like images to get loaded. Hence, the functions in jQuery's ready event will get executed once the HTML structure is loaded without waiting for the resources.</li>\n<li>We can have multiple document.ready() in a page but Body.Onload() event cannot.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>the <code>load</code> event (a.k.a \"onload\") on the window and/or body element will fire once <em>all</em> the content of the page has been loaded -- this includes all images, scripts, etc... everything.</p>\n\n<p>In contrast, jquery's <code>$(document).ready(...)</code> function will use a browser-specific mechanism to ensure that your handler is called as soon as possible after the HTML/XML dom is loaded and accessible.  This is the earliest point in the page load process where you can safely run script that intends to access elements in the page's html dom.  This point arrives earlier (often much earlier) than the final <code>load</code> event, because of the additional time required to load secondary resources (like images, and such).</p>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<ol>\n<li><p>We can have more than one <code>document.ready()</code> function in a page where we can have only one body onload function.</p></li>\n<li><p>document.ready() function is called as soon as DOM is loaded where <code>body.onload()</code> function is called when everything gets loaded on the page that includes DOM, images and all associated resources of the page.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><code>document.ready()</code> function is different from body <code>onload()</code> function for 2 reasons.</p>\n\n<ol>\n<li>We can have more than one <code>document.ready()</code> function in a page where we can have only one body <code>unload</code> function.</li>\n<li><code>document.ready()</code> function is called as soon as DOM is loaded where <code>body.onload()</code> function is called when everything gets loaded on the page that includes DOM, images and all associated resources of the page.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>body.onload() cares about both HTML structure and assoicated resources where as document.ready() cares only about the HTML structure.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can you list the difference between <code>onload()</code> and <code>$(document).ready(function(){..})</code> functions in the using jQuery? </p>\n",
            "last_activity_date": 1412057712,
            "question_id": 4395780,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "onload"
            ],
            "title": "Difference between onload() and $.ready?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you're open to a PHP solution:</p>\n\n<pre><code>&lt;td&gt;&lt;img src='&lt;?PHP\n  $path1 = \"path/to/your/image.jpg\";\n  $path2 = \"alternate/path/to/another/image.jpg\";\n\n  echo file_exists($path1) ? $path1 : $path2; \n  ?&gt;' alt='' /&gt;\n&lt;/td&gt;\n</code></pre>\n\n<p>////EDIT \nOK, here's a JS version:</p>\n\n<pre><code>&lt;table&gt;&lt;tr&gt;\n&lt;td&gt;&lt;img src='' id='myImage' /&gt;&lt;/td&gt;\n&lt;/tr&gt;&lt;/table&gt;\n\n&lt;script type='text/javascript'&gt;\n  document.getElementById('myImage').src = \"newImage.png\";\n\n  document.getElementById('myImage').onload = function() { \n    alert(\"done\"); \n  }\n\n  document.getElementById('myImage').onerror = function() { \n    alert(\"Inserting alternate\");\n    document.getElementById('myImage').src = \"alternate.png\"; \n  }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have got the solution for my query:</p>\n\n<p>i have done something like this:</p>\n\n<pre><code>cell.innerHTML=\"&lt;img height=40 width=40 alt='' src='&lt;%=request.getContextPath()%&gt;/writeImage.htm?' onerror='onImgError(this);' onLoad='setDefaultImage(this);'&gt;\"\n\nfunction setDefaultImage(source){\n        var badImg = new Image();\n        badImg.src = \"video.png\";\n        var cpyImg = new Image();\n        cpyImg.src = source.src;\n\n        if(!cpyImg.width)\n        {\n            source.src = badImg.src;\n        }\n\n    }\n\n\n    function onImgError(source){\n        source.src = \"video.png\";\n        source.onerror = \"\"; \n        return true; \n    } \n</code></pre>\n\n<p>This way its working in all browers.</p>\n\n<p>Thanks\nJyoti</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think this is very nice and short</p>\n\n<pre><code>&lt;img src=\"imagenotfound.gif\" alt=\"Image not found\" onError=\"this.src='imagefound.gif';\" /&gt;\n</code></pre>\n\n<p>But, be careful. The user's browser will be stuck in an endless loop if the onerror image itself generates an error.</p>\n\n<hr>\n\n<p><strong>EDIT</strong>\nTo avoid endless loop, remove the <code>onError</code> from it at once.</p>\n\n<pre><code>&lt;img src=\"imagenotfound.gif\" alt=\"Image not found\" onError=\"this.onerror=null;this.src='imagefound.gif';\" /&gt;\n</code></pre>\n\n<p>By calling <code>this.onerror=null</code> it will remove the onError then try to get the alternate image.</p>\n\n<hr>\n\n<p><strong>NEW</strong>\nI would like to add a jQuery way, if this can help anyone.</p>\n\n<pre><code>&lt;script&gt;\n$(document).ready(function()\n{\n    $(\".backup_picture\").error(function(){\n        $(this).attr('src', './images/nopicture.png');\n    });\n});\n&lt;/script&gt;\n\n&lt;img class='backup_picture' src='./images/nonexistent_image_file.png' /&gt;\n</code></pre>\n\n<p>You simply need to add class='backup_picture' to any img tag that you want a backup picture to load if it tries to show a bad image.</p>\n",
                    "is_accepted": false,
                    "score": 81
                }
            ],
            "body": "<p>I need to show an alternate image in cell of table if source image is not found.\nCurrently below code is used to do so.</p>\n\n<pre><code>cell.innerHTML=\"&lt;img height=40 width=40 src='&lt;%=request.getContextPath()%&gt;/writeImage.htm' onError='ImgErrorVideo(this);'&gt;\" \nfunction ImgErrorVideo(source){\n        source.src = \"video.png\";\n        source.onerror = \"\"; \n        return true; \n}\n</code></pre>\n\n<p>Now the problem is that the above is solution is working in Internet Explorer but not in mozilla.</p>\n\n<p>Please tell me some solution which works in all browsers.</p>\n\n<p>Thanks\nJyoti</p>\n",
            "last_activity_date": 1418916703,
            "question_id": 3984287,
            "score": 20,
            "tags": [
                "javascript",
                "html",
                "image"
            ],
            "title": "how to show alternate image if source image is not found? (onerror working in IE but not in mozilla)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Here's one sample: <a href=\"http://jsfiddle.net/CUUfb/1/\" rel=\"nofollow\">http://jsfiddle.net/CUUfb/1/</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>please refer  : <strong><a href=\"http://api.jquery.com/scrollTop/\"><code>.scrollTop()</code></a></strong>, You can give a try to the solution here : <strong><a href=\"http://jsfiddle.net/y430ovjt/\">http://jsfiddle.net/y430ovjt/</a></strong></p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$(function() {\r\n  var wtf    = $('#scroll');\r\n  var height = wtf[0].scrollHeight;\r\n  wtf.scrollTop(height);\r\n});</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code> #scroll {\r\n   width: 200px;\r\n   height: 300px;\r\n   overflow-y: scroll;\r\n }</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;div id=\"scroll\"&gt;\r\n    &lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt;blah&lt;br/&gt;halb&lt;br/&gt; &lt;center&gt;&lt;b&gt;Voila!! You have already reached the bottom :)&lt;b&gt;&lt;/center&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>Scrolling with animation:</p>\n\n<p><strong>Your DIV:</strong></p>\n\n<pre><code>&lt;div class='messageScrollArea' style='height: 100px;overflow: auto;'&gt;\n      Hello World! Hello World! Hello World! Hello World! Hello World! Hello\n      Hello World! Hello World! Hello World! Hello World! Hello World! Hello\n      Hello World! Hello World! Hello World! Hello World! Hello World! Hello\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>jQuery part:</strong></p>\n\n<pre><code>jQuery(document).ready(function(){       \n    var $t = $('.messageScrollArea');\n    $t.animate({\"scrollTop\": $('.messageScrollArea')[0].scrollHeight}, \"slow\");\n});\n</code></pre>\n\n<p>\u200b<a href=\"http://jsfiddle.net/3Wx3U/\">http://jsfiddle.net/3Wx3U/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>No need to calculate the actual height of the contents; you can just scroll down <em>a lot</em>:</p>\n\n<pre><code>$(function () {\n  $('.messageScrollArea').scrollTop(1E10);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>//note: use of stop function to prevent animation build-ups if called repeatedly\n//subtracting container height brings scrollTo position to container bottom\nscrollUp = function() {\n    $(\"#scroller\").stop().animate({ scrollTop: 0 }, \"slow\");\n}\n\nscrollDown = function() {\n    var scroller = $('#scroller');\n    var height = scroller[0].scrollHeight - $(scroller).height();\n\n    $(scroller).stop().animate({ scrollTop: height }, \"slow\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a div with a scrollbar on the right when there is a lot of text in it. I tried to use this code to scroll to the bottom of a div when the page loads, but I am not having much luck. How can it be achieved?</p>\n\n<p>Style:</p>\n\n<pre><code>div.messageScrollArea{\n    width: 100%;\n    max-height: 300px;\n    overflow: auto;\n}\n</code></pre>\n\n<p>JavaScript code:</p>\n\n<pre><code>$(document).ready(function () {\n    var objDiv = $('.messageScrollArea');\n    if (objDiv.length &gt; 0){\n        objDiv[0].scrollTop = objDiv[0].scrollHeight;\n    }\n});\n</code></pre>\n",
            "last_activity_date": 1416553738,
            "question_id": 3742346,
            "score": 20,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Use jQuery to scroll to the bottom of a div with lots of text"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If you want it cross-browser, your best bet is to do it on the server. You could have an API that takes a file URL and returns you the EXIF data; <a href=\"http://php.net/manual/en/book.exif.php\" rel=\"nofollow\">PHP has a module for that</a>. </p>\n\n<p>This could be done using <a href=\"http://en.wikipedia.org/wiki/Ajax_%28programming%29\" rel=\"nofollow\">Ajax</a> so it would be seamless to the user. If you don't care about cross-browser compatibility, and can rely on <a href=\"http://en.wikipedia.org/wiki/HTML5\" rel=\"nofollow\">HTML5</a> file functionality, look into the library <a href=\"https://github.com/bennoleslie/jsjpegmeta\" rel=\"nofollow\">JsJPEGmeta</a> that will allow you to get that data in native JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use <a href=\"http://www.nihilogic.dk/labs/binaryajax/binaryajax.js\">this library</a> in combination with the HTML5 File API: <a href=\"http://jsfiddle.net/xQnMd/1/\">http://jsfiddle.net/xQnMd/1/</a>.</p>\n\n<pre><code>$(\"input\").change(function() {\n    var file = this.files[0];  // file\n        fr   = new FileReader; // to read file contents\n\n    fr.onloadend = function() {\n        // get EXIF data\n        var exif = EXIF.readFromBinaryFile(new BinaryFile(this.result));\n\n        // alert a value\n        alert(exif.Make);\n    };\n\n    fr.readAsBinaryString(file); // read the file\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Firefox 26 supports <code>image-orientation: from-image</code>: images are displayed portrait or landscape, depending on EXIF data. (See <a href=\"http://sethfowler.org/blog/2013/09/13/new-in-firefox-26-css-image-orientation\">sethfowler.org/blog/2013/09/13/new-in-firefox-26-css-image-orientation</a>.)</p>\n\n<p>There is also <a href=\"https://code.google.com/p/chromium/issues/detail?id=158753\">a bug to implement this in Chrome</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"https://github.com/blueimp/JavaScript-Load-Image\" rel=\"nofollow\">https://github.com/blueimp/JavaScript-Load-Image</a> is a modern javascript library that can not only extract the exif orientation flag - it can also correctly mirror/rotate JPEG images on the client side.</p>\n\n<p>I just solved the same problem with this library: <a href=\"http://stackoverflow.com/questions/20600800/js-client-side-exif-orientation-rotate-and-mirror-jpeg-images/20600801\">JS Client-Side Exif Orientation: Rotate and Mirror JPEG Images</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'd like to rotate photos based on their orignal rotation, as set by the camera in JPEG EXIF image data. The trick is that all this should happen in the browser, using JavaScript and <code>&lt;canvas&gt;</code>.</p>\n\n<p>How could JavaScript access JPEG, a local file API object, local <code>&lt;img&gt;</code> or remote <code>&lt;img&gt;</code>, EXIF data to read the rotation information?</p>\n\n<p>Server-side answers are not OK; I am looking for <strong>a client-side</strong> solution. </p>\n",
            "last_activity_date": 1387147662,
            "question_id": 7584794,
            "score": 19,
            "tags": [
                "javascript",
                "jpeg",
                "exif",
                "html5-canvas"
            ],
            "title": "Accessing JPEG EXIF rotation data in JavaScript on the client side"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>var curr = new Date; // get current date\nvar first = curr.getDate() - curr.getDay(); // First day is the day of the month - the day of the week\nvar last = first + 6; // last day is the first day + 6\n\nvar firstday = new Date(curr.setDate(first)).toUTCString();\nvar lastday = new Date(curr.setDate(last)).toUTCString();\n\nfirstday\n\"Sun, 06 Mar 2011 12:25:40 GMT\"\nlastday\n\"Sat, 12 Mar 2011 12:25:40 GMT\"\n</code></pre>\n\n<p>This works for firstday = sunday of this week and last day = saturday for this week. Extending it to run Monday to sunday is trivial.</p>\n\n<p>Making it work with first and last days in different months is left as an exercise for the user</p>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>You could do something like this</p>\n\n<pre><code>var today = new Date();\nvar startDay = 0; \nvar weekStart = new Date(today.getDate() - (7 + today.getDay() - startDay) % 7);\nvar weekEnd = new Date(today.getDate() + (7 - today.getDay() - startDay) % 7);\n</code></pre>\n\n<p>Where <code>startDay</code> is a number from 0 to 6 where 0 stands for Sunday (ie 1 = Monday, 2 = Tuesday, etc).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's a quick way to get first and last day, for any start day. \nknowing that:  </p>\n\n<p>1 day = 86,400,000 milliseconds.  </p>\n\n<p>JS dates values are in milliseconds    </p>\n\n<p>Recipe: figure out how many days you need to remove to get the your week's start day (multiply by 1 day's worth of milliseconds). All that is left after that is to add 6 days to get your end day.\n</p>\n\n<pre><code>var startDay = 1; //0=sunday, 1=monday etc.\nvar d = now.getDay(); //get the current day\nvar weekStart = new Date(now.valueOf() - (d&lt;=0 ? 7-startDay:d-startDay)*86400000); //rewind to start day\nvar weekEnd = new Date(weekStart.valueOf() + 6*86400000); //add 6 days to get last day\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>You can also use following lines of code to get first and last date of the week:</p>\n\n<pre><code>var curr = new Date;\nvar firstday = new Date(curr.setDate(curr.getDate() - curr.getDay()));\nvar lastday = new Date(curr.setDate(curr.getDate() - curr.getDay()+6));\n</code></pre>\n\n<p>Hope it will be useful..</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>krtek's method has some wrong,I tested this</p>\n\n<pre><code>var startDay = 0; \nvar weekStart = new Date(today.getDate() - (7 + today.getDay() - startDay) % 7);\nvar weekEnd = new Date(today.getDate() + (6 - today.getDay() - startDay) % 7);\n</code></pre>\n\n<p>it works</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>SetDate</code> will sets the day of the month. Using <code>setDate</code> during start and end of the month,will result in  wrong week</p>\n\n<pre><code>var curr = new Date(\"08-Jul-2014\"); // get current date\nvar first = curr.getDate() - curr.getDay(); // First day is the day of the month - the day of the week\nvar last = first + 6; // last day is the first day + 6\nvar firstday = new Date(curr.setDate(first)); // 06-Jul-2014\nvar lastday = new Date(curr.setDate(last)); //12-Jul-2014\n</code></pre>\n\n<p>If u setting Date is 01-Jul-2014, it will show firstday as 29-Jun-2014 and lastday as 05-Jun-2014 instead of 05-Jul-2014</p>\n\n<p>So overcome this issue i used</p>\n\n<pre><code>var curr = new Date();\nday = curr.getDay();\nfirstday = new Date(curr.getTime() - 60*60*24* day*1000); //will return firstday (ie sunday) of the week\nlastday = new Date(curr.getTime() + 60 * 60 *24 * 6 * 1000); //adding (60*60*6*24*1000) means adding six days to the firstday which results in lastday (saturday) of the week\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Be careful with the accepted answer, it does not set the time to 00:00:00 and 23:59:59, so you can have problems.</p>\n\n<p>I recommend using Moment.js to deal with dates. For your case:</p>\n\n<pre><code>var startOfWeek = moment().startOf('week').toDate();\nvar endOfWeek   = moment().endOf('week').toDate();\n</code></pre>\n\n<p>This is just a small use case, it's really simple to do a lot of complex operations.</p>\n\n<p>You can see learn more here: <a href=\"http://momentjs.com/\" rel=\"nofollow\">http://momentjs.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have <code>today = new Date();</code> object. I need to get first and last day of the current week. I need both variants for Sunday and Monday as a start and end day of the week. I am little bit confuse now with a code. Can your help me?</p>\n",
            "last_activity_date": 1418173890,
            "question_id": 5210376,
            "score": 19,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "How to get first and last day of the week in JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>See <a href=\"http://groups.google.com/group/jquery-en/browse%5Fthread/thread/432a0d9caae734db\" rel=\"nofollow\">this</a>. </p>\n\n<p>As for why you would ever use click or bind instead of live, the answer is because you don't need the extra functionality. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<blockquote>\n  <p>If not, why would you ever use click\n  or bind('click')?</p>\n</blockquote>\n\n<p>Because <a href=\"http://docs.jquery.com/Events/live\" rel=\"nofollow\">$.live()</a> has some significant disadvantages</p>\n\n<blockquote>\n  <ul>\n  <li>Live events do not bubble in the traditional manner and <strike><strong>cannot be\n  stopped using stopPropagation</strong></strike> <em>(This changed in jquery 1.4.4)</em> or\n  stopImmediatePropagation. For example,\n  take the case of two click events -\n  one bound to \"li\" and another \"li a\".\n  Should a click occur on the inner\n  anchor BOTH events will be triggered.\n  This is because when a\n  $(\"li\").bind(\"click\", fn); is bound\n  you're actually saying \"Whenever a\n  click event occurs on an LI element -\n  or inside an LI element - trigger this\n  click event.\" To stop further\n  processing for a live event, fn must\n  return false.</li>\n  <li>Live events currently only work when used against a selector. For\n  example, this would work: $(\"li\n  a\").live(...) but this would not:\n  $(\"a\", someElement).live(...) and\n  neither would this:\n  $(\"a\").parent().live(...).</li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I love the new live event in jQuery 1.3.  The question I have is the performance of this event.  I know the advantages of using live over click/bind('click') but is there a performance hit for using it over click/bind('click')?</p>\n\n<p>If not, why would you ever use click or bind('click')?</p>\n",
            "last_activity_date": 1360274757,
            "question_id": 1368223,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "events"
            ],
            "title": "Performance difference between jQuery&#39;s .live(&#39;click&#39;, fn) and .click(fn)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>by using <a href=\"https://developer.mozilla.org/En/DOM%3aelement.replaceChild\">replaceChild()</a>:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div&gt;\n    &lt;a id=\"myAnchor\" href=\"http://www.stackoverflow\"&gt;StackOverflow&lt;/a&gt;\n  &lt;/div&gt;\n&lt;script type=\"text/JavaScript\"&gt;\n  var myAnchor = document.getElementById(\"myAnchor\");\n  var mySpan = document.createElement(\"span\");\n  mySpan.innerHTML = \"replaced anchor!\";\n  myAnchor.parentNode.replaceChild(mySpan, myAnchor);\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 90
                },
                {
                    "body": "<pre><code>var a = A.parentNode.replaceChild(document.createElement(\"span\"), A);\n</code></pre>\n\n<p>a is the replaced A element.</p>\n",
                    "is_accepted": false,
                    "score": 22
                }
            ],
            "body": "<p>for an element in DOM,such as an \"A\" element,how to replace it with a \"span\" instead?</p>\n",
            "last_activity_date": 1316067752,
            "question_id": 843680,
            "score": 57,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "How to replace Dom element in place using javascript?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I'm not sure if this works and it is completely untested, but try this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    function goBack() {\n        history.back();\n    }\n\n    if (history.length &gt; 0) { //if there is a history...\n        document.getElementsByTagName('button')[].onclick=\"goBack()\"; //assign function \"goBack()\" to all buttons onClick\n    } else {\n        die();\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>And somewhere in HTML:</p>\n\n<pre><code>&lt;button value=\"Button1\"&gt; //These buttons have no action\n&lt;button value=\"Button2\"&gt;\n</code></pre>\n\n<h2>EDIT:</h2>\n\n<p>What you can also do is to research what browsers support the back function (I think they all do) and use the standard JavaScript browser detection object found, and described thoroughly, on <a href=\"http://www.w3schools.com/js/js_browser.asp\" rel=\"nofollow\">this page</a>. Then you can have 2 different pages: one for the \"good browsers\" compatible with the back button and one for the \"bad browsers\" telling them to go update their browser</p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>Check if <code>window.history.length</code> is equal to 0.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can't directly check whether the back button is usable. You can look at <code>history.length&gt;0</code>, but that will hold true if there are pages <em>ahead</em> of the current page as well. You can only be <em>sure</em> that the back button is unusable when <code>history.length===0</code>.</p>\n\n<p>If that's not good enough, about all you can do is call <code>history.back()</code> and, if your page is still loaded afterwards, the back button is unavailable! Of course that means if the back button <em>is</em> available, you've just navigated away from the page. You aren't allowed to cancel the navigation in <code>onunload</code>, so about all you can do to stop the back actually happening is to return something from <code>onbeforeunload</code>, which will result in a big annoying prompt appearing. It's not worth it.</p>\n\n<p>In fact it's normally a Really Bad Idea to be doing anything with the history. History navigation is for browser chrome, not web pages. Adding \u201cgo back\u201d links typically causes more user confusion than it's worth.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The only accurate way would be checking the property:</p>\n\n<pre><code>history.previous\n</code></pre>\n\n<p><strong>However</strong>, the problem with this is that in most browsers this is considered a security violation and usually just returns <strong>undefined</strong>.</p>\n\n<pre><code>history.length\n</code></pre>\n\n<p>Is a property that others have suggested...<br>\n<strong>However</strong>, the length doesn't work completely because it doesn't indicate where in the history you are.  Additionally, it doesn't always start at the same number.  IE, for example, starts at 0 while Google Chrome starts at 1 (because of the landing page).</p>\n\n<p><img src=\"http://i.stack.imgur.com/kwE95.png\" alt=\"alt text\"></p>\n\n<p>Most of the time a link is added that calls:</p>\n\n<pre><code>history.back();\n</code></pre>\n\n<p>or  </p>\n\n<pre><code> history.go(-1);\n</code></pre>\n\n<p>and it's just expected that if you can't go back then clicking the link does nothing.</p>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>There is another way to check - check the referrer. The first page usually will have an empty referrer...</p>\n\n<pre><code>if (document.referrer == \"\") {\n    window.close()\n} else {\n    history.back()\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p><strong>this seems to do the trick:</strong></p>\n\n<pre><code>function goBackOrClose() {  \n\n    window.history.back();\n    window.close(); \n\n    //or if you are not interested in closing the window, do something else here\n    //e.g. \n    theBrowserCantGoBack();\n\n}\n</code></pre>\n\n<p>Call history.back() and then window.close(). If the browser is able to go back in history it won't be able to get to the next statement. If it's not able to go back, it'll close the window.</p>\n\n<p>However, please note that if the page has been reached by typing a url, then firefox wont allow the script to close the window.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Although this is an old question, I think this will help people with the same question in the future.</p>\n\n<p>My code let the browser go back one page, and if that fails it loads a fallback url. It also detect hashtags changes.</p>\n\n<p>When the back button wasn't available, the fallback url will be loaded after 500 ms, so the browser has time enough to load the previous page. Loading the fallback url right after <code>window.history.go(-1);</code> would cause the browser to use the fallback url, because the js script didn't stop yet.</p>\n\n<pre><code>function historyBackWFallback(fallbackUrl) {\n    fallbackUrl = fallbackUrl || '/';\n    var prevPage = window.location.href;\n\n    window.history.go(-1);\n\n    setTimeout(function(){ if (window.location.href == prevPage) window.location.href = fallbackUrl; }, 500);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here is how i did it. </p>\n\n<p>I used the <strong>'beforeunload' event</strong> to set a boolean. Then I set a timeout to watch if the 'beforeunload' fired.</p>\n\n<pre><code>var $window = $(window),\n    $trigger = $('.select_your_link'),\n    fallback = 'your_fallback_url';\n    hasHistory = false;\n\n$window.on('beforeunload', function(){\n    hasHistory = true;\n});\n\n$trigger.on('click', function(){\n\n    window.history.go(-1);\n\n    setTimeout(function(){\n        if (!hasHistory){\n            window.location.href = fallback;\n        }\n    }, 200);\n\n    return false;\n});\n</code></pre>\n\n<p>Seems to work in major browsers (tested FF, Chrome, IE11 so far).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>history.length</code> is useless as it does not show if user can go back in history.\nAlso different browsers uses initial values 0 or 1 - it depends on browser.</p>\n\n<p>The working solution is to use <code>$(window).on('beforeunload'</code> event, but I'm not sure that it will work if page is loaded via ajax and uses pushState to change window history.</p>\n\n<p>So I've used next solution:</p>\n\n<pre><code>var currentUrl = window.location.href;\nwindow.history.back();\nsetTimeout(function(){\n    // if location was not changed in 100 ms, then there is no history back\n    if(currentUrl === window.location.href){\n        // redirect to site root\n        window.location.href = '/';\n    }\n}, 100);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want using javascript to see if there is history or not, I mean if the back button is available on the browser or not.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1419344868,
            "question_id": 3588315,
            "score": 52,
            "tags": [
                "javascript"
            ],
            "title": "How to check if the user can go back in browser history or not"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You are missing a function declaration.</p>\n\n<p>In <a href=\"http://www.movable-type.co.uk/scripts/latlong.html\">this case</a> <code>toRad()</code> must be defined first as:</p>\n\n<pre><code>/** Converts numeric degrees to radians */\nif (typeof(Number.prototype.toRad) === \"undefined\") {\n  Number.prototype.toRad = function() {\n    return this * Math.PI / 180;\n  }\n}\n</code></pre>\n\n<p>according to the code segment all at the <a href=\"http://www.movable-type.co.uk/scripts/latlong.html\">bottom of the page</a></p>\n",
                    "is_accepted": true,
                    "score": 91
                },
                {
                    "body": "<p>Or in my case this didn't work. It may because i needed to call toRad() inside jquery. Im not 100% sure, so i did this: </p>\n\n<pre><code>function CalcDistanceBetween(lat1, lon1, lat2, lon2) {\n    //Radius of the earth in:  1.609344 miles,  6371 km  | var R = (6371 / 1.609344);\n    var R = 3958.7558657440545; // Radius of earth in Miles \n    var dLat = toRad(lat2-lat1);\n    var dLon = toRad(lon2-lon1); \n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n            Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * \n            Math.sin(dLon/2) * Math.sin(dLon/2); \n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n    var d = R * c;\n    return d;\n}\n\nfunction toRad(Value) {\n    /** Converts numeric degrees to radians */\n    return Value * Math.PI / 180;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Why not simplify the above equation and same a few computations?</p>\n\n<p><code>Math.sin(dLat/2) * Math.sin(dLat/2) = (1.0-Math.cos(dLat))/2.0</code></p>\n\n<p><code>Math.sin(dLon/2) * Math.sin(dLon/2) = (1.0-Math.cos(dLon))/2.0</code></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I changed a couple of things:</p>\n\n<pre><code>if (!Number.prototype.toRad || (typeof(Number.prototype.toRad) === undefined)) {\n</code></pre>\n\n<p>and, I noticed there was no checking for the <code>arguments</code>. You should make sure the args are defined AND probably do a <code>parseInt(arg, 10)</code> / <code>parseFloat</code> on there.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I needed to calculate a lot of distances between the points for my project, so I went ahead and tried to optimize the code, I have found here. On average in different browsers my new implementation <strong>runs almost 3 times faster</strong> then mentioned here.</p>\n\n<pre><code>function distance(lat1, lon1, lat2, lon2) {\n  var R = 6371; // Radius of the earth in km\n  var dLat = (lat2 - lat1) * Math.PI / 180;  // deg2rad below\n  var dLon = (lon2 - lon1) * Math.PI / 180;\n  var a = \n     0.5 - Math.cos(dLat)/2 + \n     Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n     (1 - Math.cos(dLon))/2;\n\n  return R * 2 * Math.asin(Math.sqrt(a));\n}\n</code></pre>\n\n<p>You can play with my jsPerf (which was vastly improved thanks to Bart) and see the <a href=\"http://jsperf.com/haversine-salvador/8\" rel=\"nofollow\">results here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I was having the same problem.. looking at Casper's answer, I just did a quick-fix: <code>Ctrl+H</code> (Find and Replace),\nreplaced all instances of <code>.toRad()</code>\nwith <code>* Math.PI / 180</code> . That worked for me. </p>\n\n<p>No idea on the browser performance speeds etc, though.. My use case only needs this when the user clicks on a map.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to find the distance between two points (for which I've latitudes &amp; longitudes) using the technique described here at <a href=\"http://stackoverflow.com/questions/27928/how-do-i-calculate-distance-between-two-latitude-longitude-points\">How do I calculate distance between two latitude-longitude points?</a></p>\n\n<p>The codes are as below \nJavascript:</p>\n\n<pre><code>var R = 6371; // Radius of the earth in km\nvar dLat = (lat2-lat1).toRad();  // Javascript functions in radians\nvar dLon = (lon2-lon1).toRad(); \nvar a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n        Math.cos(lat1.toRad()) * Math.cos(lat2.toRad()) * \n        Math.sin(dLon/2) * Math.sin(dLon/2); \nvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \nvar d = R * c; // Distance in km\n</code></pre>\n\n<p>But when I try to implement it, an error shows up saying <code>Uncaught TypeError: Object 20 has no Method 'toRad'</code>.</p>\n\n<p>Do I need a special library or something to get .toRad() working? because it seems to be\nscrewing up on the second line.</p>\n",
            "last_activity_date": 1422541309,
            "question_id": 5260423,
            "score": 45,
            "tags": [
                "javascript",
                "geolocation"
            ],
            "title": "toRad() Javascript function throwing error"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<pre><code>var array_of_functions = [\n    first_function,\n    second_function,\n    third_function,\n    forth_function\n]\n</code></pre>\n\n<p>and then when you want to execute a given function in the array:</p>\n\n<pre><code>array_of_functions[0]('a string');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 82
                },
                {
                    "body": "<p>Without more detail of what you are trying to accomplish, we are kinda guessing. But you might be able to get away with using object notation to do something like this...</p>\n\n<pre><code>var myFuncs = {\n  firstFunc: function(string) {\n    // do something\n  },\n\n  secondFunc: function(string) {\n    // do something\n  },\n\n  thirdFunc: function(string) {\n    // do something\n  }\n}\n</code></pre>\n\n<p>and to call one of them...</p>\n\n<pre><code>myFuncs.firstFunc('a string')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Or just:</p>\n\n<pre><code>var myFuncs = {\n  firstFun: function(string) {\n    // do something\n  },\n\n  secondFunc: function(string) {\n    // do something\n  },\n\n  thirdFunc: function(string) {\n    // do something\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I think this is what the original poster meant to accomplish:</p>\n\n<pre><code>var array_of_functions = [\n    function() { first_function('a string') },\n    function() { second_function('a string') },\n    function() { third_function('a string') },\n    function() { fourth_function('a string') }\n]\n\nfor (i = 0; i &lt; array_of_functions.length; i++) {\n    array_of_functions[i]();\n}\n</code></pre>\n\n<p>Hopefully this will help others (like me 20 minutes ago :-) looking for any hint about how to call JS functions in an array.</p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>This is correct</p>\n\n<pre><code>var array_of_functions = {\n            \"all\": function(flag) { \n                console.log(1+flag); \n              },\n                \"cic\": function(flag) { \n                console.log(13+flag); \n              }                     \n        };\n\narray_of_functions.all(27);\narray_of_functions.cic(7);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would complement this thread by posting an easier way to execute various functions within an Array using the <code>shift()</code> Javascript method <a href=\"http://blog.kevinchisholm.com/javascript/executing-javascript-functions-using-shift/\" rel=\"nofollow\">originally described here</a></p>\n\n<pre><code>  var a = function(){ console.log(\"this is function: a\") }\n  var b = function(){ console.log(\"this is function: b\") }\n  var c = function(){ console.log(\"this is function: c\") }\n\n  var foo = [a,b,c];\n\n  while (foo.length){\n     foo.shift().call();\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>/* PlanetGreeter */\n\nclass PlanetGreeter {\n    hello   : { () : void; } [] = [];\n    planet_1 : string = \"World\";\n    planet_2 : string = \"Mars\";\n    planet_3 : string = \"Venus\";\n    planet_4 : string = \"Uranus\";\n    planet_5 : string = \"Pluto\";\n    constructor() {\n        this.hello.push( () =&gt; { this.greet(this.planet_1); } );\n        this.hello.push( () =&gt; { this.greet(this.planet_2); } );\n        this.hello.push( () =&gt; { this.greet(this.planet_3); } );\n        this.hello.push( () =&gt; { this.greet(this.planet_4); } );\n        this.hello.push( () =&gt; { this.greet(this.planet_5); } );\n    } \n    greet(a: string) : void { alert(\"Hello \" + a); }\n    greetRandomPlanet() : void { \n        this.hello [ Math.floor( 5 * Math.random() ) ] (); \n    } \n} \nnew PlanetGreeter().greetRandomPlanet();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Maybe it can helps to someone. </p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head lang=\"en\"&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;&lt;/title&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        window.manager = {\n            curHandler: 0,\n            handlers  : []\n        };\n\n        manager.run = function (n) {\n            this.handlers[this.curHandler](n);\n        };\n\n        manager.changeHandler = function (n) {\n            if (n &gt;= this.handlers.length || n &lt; 0) {\n                throw new Error('n must be from 0 to ' + (this.handlers.length - 1), n);\n            }\n            this.curHandler = n;\n        };\n\n        var a = function (n) {\n            console.log(\"Handler a. Argument value is \" + n);\n        };\n\n        var b = function (n) {\n            console.log(\"Handler b. Argument value is \" + n);\n        };\n\n        var c = function foo(n) {\n            for (var i=0; i&lt;n; i++) {\n                console.log(i);\n            }\n        };\n\n        manager.handlers.push(a);\n        manager.handlers.push(b);\n        manager.handlers.push(c);\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;input type=\"button\" onclick=\"window.manager.run(2)\" value=\"Run handler with parameter 2\"&gt;\n&lt;input type=\"button\" onclick=\"window.manager.run(4)\" value=\"Run handler with parameter 4\"&gt;\n&lt;p&gt;\n&lt;div&gt;\n    &lt;select name=\"featured\" size=\"1\" id=\"item1\"&gt;\n        &lt;option value=\"0\"&gt;First handler&lt;/option&gt;\n        &lt;option value=\"1\"&gt;Second handler&lt;/option&gt;\n        &lt;option value=\"2\"&gt;Third handler&lt;/option&gt;\n    &lt;/select&gt;\n    &lt;input type=\"button\" onclick=\"manager.changeHandler(document.getElementById('item1').value);\" value=\"Change handler\"&gt;\n&lt;/div&gt;\n&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's basically the same as <code>Darin Dimitrov's</code> but it shows how you could use it do dynamically create and store functions and arguments.\nI hope it's useful for you :)</p>\n\n<pre><code>var argsContainer = ['hello', 'you', 'there'];\nvar functionsContainer = [];\n\nfor (var i = 0; i &lt; argsContainer.length; i++) {\nvar currentArg = argsContainer[i]; \n\n  functionsContainer.push(function(currentArg){\n    console.log(currentArg);\n  });\n};\n\nfor (var i = 0; i &lt; functionsContainer.length; i++) {\n  functionsContainer[i](argsContainer[i]);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code>var array_of_functions = [\n    first_function('a string'),\n    second_function('a string'),\n    third_function('a string'),\n    forth_function('a string')\n]\n\narray_of_functions[0];\n</code></pre>\n\n<p>That does not work as intended because each function in the array is executed when the array is created.</p>\n\n<p>What is the proper way of executing any function in the array by doing:</p>\n\n<pre><code>array_of_functions[0];  // or, array_of_functions[1] etc.\n</code></pre>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1426170906,
            "question_id": 4908378,
            "score": 41,
            "tags": [
                "javascript",
                "arrays",
                "function"
            ],
            "title": "Javascript Array of Functions"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You need to wrap it in the pseudo element <code>&lt;text&gt;</code>. This will switch the parser back to html mode and it will then parse the javascript as part of the html and not c#. The reason it happens is the <code>@for()</code> is a c# block and anything treated within is also considered c# until it's escaped by an html tag. Since you probably don't want an html tag razor provides the <code>&lt;text&gt;</code> tag to switch modes.</p>\n\n<p>If you notice the difference in your asp.net webforms you end the <code>&lt;% for</code> line with a <code>%&gt;</code> which takes it out of c# mode. If you download the razor highlighter extension for visual studio 2010 it will help you see when code is treated as code and html is treated as html.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var jqGridIdList = \"@Url.Action(\"getidlist\", \"office\", new { area = \"reports\" })\";\n\n    var availableIds = [];\n    @for(var i = 0; i &lt; Model.Data.Count (); i++) {\n        &lt;text&gt;availableIds.push({ value : \"@Model.Data.ElementAt(i).Text\", label : \"@Model.Data.ElementAt(i).Text\" });&lt;/text&gt;\n    }\n&lt;/script&gt;\n</code></pre>\n\n<h2>Update for latest version</h2>\n\n<p>You can now use the <code>@:</code> syntax for even more readability</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var jqGridIdList = \"@Url.Action(\"getidlist\", \"office\", new { area = \"reports\" })\";\n\n    var availableIds = [];\n    @for(var i = 0; i &lt; Model.Data.Count (); i++) {\n        @:availableIds.push({ value : \"@Model.Data.ElementAt(i).Text\", label : \"@Model.Data.ElementAt(i).Text\" });\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 74
                }
            ],
            "body": "<p>As a test I'm converting a proof-of-concept app we've written from Web Forms to Razor, simply so we can evaluate it.</p>\n\n<p>I've run into one problem so far that's making my head hurt..generating client-side Javascript...</p>\n\n<h3>Web-Forms</h3>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var jqGridIdList = \"&lt;%: Url.Action (\"getidlist\", \"office\", new { area = \"reports\" }) %&gt;\";\n\n    var availableIds = [];\n    &lt;% for (var i = 0; i &lt; Model.Data.Count (); i++) { %&gt;\n    availableIds.push({ value : \"&lt;%: Model.Data.ElementAt (i).Text %&gt;\", label : \"&lt;%: Model.Data.ElementAt (i).Text %&gt;\" });\n    &lt;% } %&gt;\n&lt;/script&gt;\n</code></pre>\n\n<h3>Razor Syntax</h3>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var jqGridIdList = \"@Url.Action(\"getidlist\", \"office\", new { area = \"reports\" })\";\n\n    var availableIds = [];\n    @for(var i = 0; i &lt; Model.Data.Count (); i++) {\n    availableIds.push({ value : \"@Model.Data.ElementAt(i).Text\", label : \"@Model.Data.ElementAt(i).Text\" });\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>The compiler gives me the following error on the 'availableIds.push' line:</p>\n\n<p>Compiler Error Message: CS1525: Invalid expression term '{'</p>\n\n<p>It's obviously trying to compile it as C#...but how do I stop it?</p>\n\n<p>Thanks,<br />\nKieron</p>\n",
            "last_activity_date": 1317230878,
            "question_id": 4045308,
            "score": 41,
            "tags": [
                "javascript",
                "razor",
                "asp.net-mvc-3"
            ],
            "title": "Razor Syntax and Javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>Create links using JavaScript:</strong></p>\n\n<pre><code>&lt;script language=\"javascript\"&gt;\n&lt;!--\ndocument.write(\"&lt;a href=\\\"www.example.com\\\"&gt;\");\ndocument.write(\"Your Title\");\ndocument.write(\"&lt;/a&gt;\");\n//--&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>OR</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\ndocument.write('Your Title'.link('http://www.example.com'));\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>OR</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nnewlink = document.createElement('a');\nnewlink.innerHTML = 'Google';\nnewlink.setAttribute('title', 'Google');\nnewlink.setAttribute('href', 'http://google.com');\ndocument.body.appendChild(newlink);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>&lt;html&gt;\n&lt;head&gt;&lt;/head&gt;\n&lt;body&gt;\n&lt;script&gt;\n\nvar a = document.createElement('a');\nvar linkText = document.createTextNode(\"my title text\");\na.appendChild(linkText);\na.title = \"my title text\";\na.href = \"http://example.com\";\ndocument.body.appendChild(a);\n\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 72
                },
                {
                    "body": "<p>Dynamically create a hyperlink with raw JavaScript:</p>\n\n<pre><code>   var anchorElem = document.createElement('a');\n   anchorElem.setAttribute(\"href\", yourLink);\n   anchorElem.innerHTML = yourLinkText;\n\n   document.body.appendChild(anchorElem); // append your new link to the body\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There are a couple of ways:</p>\n\n<p>If you want to use raw Javascript (without a helper like JQuery), then you could do something like:</p>\n\n<pre><code>var link = \"http://google.com\";\nvar element = document.createElement(\"a\");\nelement.setAttribute(\"href\", link);\nelement.innerHTML = \"your text\";\n\n// and append it to where you'd like it to go:\ndocument.body.appendChild(element);\n</code></pre>\n\n<p>The other method is to write the link directly into the document:</p>\n\n<pre><code>document.write(\"&lt;a href='\" + link + \"'&gt;\" + text + \"&lt;/a&gt;\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<h2>With JavaScript</h2>\n\n<ol>\n<li><pre><code>var a = document.createElement('a');\na.setAttribute('href',desiredLink);\na.innerHTML = desiredText;\n// apend the anchor to the body\n// of course you can append it almost to any other dom element\ndocument.getElementsByTagName('body')[0].appendChild(a);\n</code></pre></li>\n<li><pre><code>document.getElementsByTagName('body')[0].innerHTML += '&lt;a href=\"'+desiredLink+'\"&gt;'+desiredText+'&lt;/a&gt;';\n</code></pre>\n\n<p>or, as suggested by <a href=\"http://stackoverflow.com/users/1414/travis\">@travis</a> : </p>\n\n<pre><code>document.getElementsByTagName('body')[0].innerHTML += desiredText.link(desiredLink);\n</code></pre></li>\n<li><pre><code>&lt;script type=\"text/javascript\"&gt;\n//note that this case can be used only inside the \"body\" element\ndocument.write('&lt;a href=\"'+desiredLink+'\"&gt;'+desiredText+'&lt;/a&gt;');\n&lt;/script&gt;\n</code></pre></li>\n</ol>\n\n<h2>With JQuery</h2>\n\n<ol>\n<li><pre><code>$('&lt;a href=\"'+desiredLink+'\"&gt;'+desiredText+'&lt;/a&gt;').appendTo($('body'));\n</code></pre></li>\n<li><pre><code>$('body').append($('&lt;a href=\"'+desiredLink+'\"&gt;'+desiredText+'&lt;/a&gt;'));\n</code></pre></li>\n<li><pre><code>var a = $('&lt;a /&gt;');\na.attr('href',desiredLink);\na.text(desiredText);\n$('body').append(a);\n</code></pre></li>\n</ol>\n\n<p>In all the above examples you can append the anchor to any element, not just to the 'body', and <code>desiredLink</code> is a variable that holds the address that your anchor element points to, and <code>desiredText</code> is a variable that holds the text that will be displayed in the anchor element.</p>\n",
                    "is_accepted": false,
                    "score": 20
                }
            ],
            "body": "<p>I have a string for a title and a string for a link.  I'm not sure how to put the two together to create a link on a page using Javascript.  Any help is appreciated.</p>\n\n<p>EDIT1: Adding more detail to the question.\nThe reason I'm trying to figure this out is because I have an RSS feed and have a list of titles ands URLs.  I would like to link the titles to the URL to make the page useful.</p>\n\n<p>EDIT2: I am using jQuery but am completely new to it and wasn't aware it could help in this situation.</p>\n",
            "last_activity_date": 1405515988,
            "question_id": 4772774,
            "score": 38,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "dom",
                "hyperlink"
            ],
            "title": "How do I create a link using javascript?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Well, in IE6 it seems to sort on the nested array's [0] item:</p>\n\n<pre><code>function sortSelect(selectToSort) {\n    var arrOptions = [];\n\n    for (var i = 0; i &lt; selectToSort.options.length; i++)  {\n        arrOptions[i] = [];\n        arrOptions[i][0] = selectToSort.options[i].value;\n        arrOptions[i][1] = selectToSort.options[i].text;\n        arrOptions[i][2] = selectToSort.options[i].selected;\n    }\n\n    arrOptions.sort();\n\n    for (var i = 0; i &lt; selectToSort.options.length; i++)  {\n        selectToSort.options[i].value = arrOptions[i][0];\n        selectToSort.options[i].text = arrOptions[i][1];\n        selectToSort.options[i].selected = arrOptions[i][2];\n    }\n}\n</code></pre>\n\n<p>I'll see if this works in other browsers...</p>\n\n<p>Edit: it works in Firefox too, woo hoo!</p>\n\n<p>Is there an easier way than this though? is there some method built into javascript or jQuery that sorts selects that I am missing, or is this the best way?</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><code>Array.sort()</code> defaults to converting each element to a string, and comparing those values. So <code>[\"value\", \"text\", \"selected\"]</code> gets sorted as <code>\"value, text, selected\"</code>. Which will probably work fine, most of the time. </p>\n\n<p>If you do want to sort on value alone, or interpret value as a number, then you can pass a comparison function into sort():</p>\n\n<pre><code>arrOptions.sort(function(a,b) { return new Number(a[0]) - new Number(b[0]); });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There's <a href=\"http://dev.jquery.com/ticket/255\">a closed jQuery ticket</a> for a sort that should work, but just wasn't included in the core.</p>\n\n<pre><code>jQuery.fn.sort = function() {\n  return this.pushStack( [].sort.apply( this, arguments ), []);\n};\n</code></pre>\n\n<p>Referenced from <a href=\"http://groups.google.com/group/jquery-en/browse_thread/thread/e0d6c199552dd1f7/2f05ad6d400dd962?lnk=gst&amp;q=array+sorting\">a Google Groups thread</a>, I think you just pass in a function that is used to sort, like so</p>\n\n<pre><code>function sortSelect(selectToSort) {\n    jQuery(selectToSort.options).sort(function(a,b){ \n        return a.value &gt; b.value ? 1 : -1; \n    });\n}\n</code></pre>\n\n<p>Hope it helps!</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>bdukes I like your answer but it would not sort a select list in place for me? </p>\n\n<p>Instead the options had to be pulled into a temporary array, sorted, then the list rebuilt:</p>\n\n<pre><code>var my_options = $(\"#my_select option\");\nvar selected = $(\"#my_select\").val(); /* preserving original selection, step 1 */\n\nmy_options.sort(function(a,b) {\n    if (a.text &gt; b.text) return 1;\n    else if (a.text &lt; b.text) return -1;\n    else return 0\n})\n\n$(\"#my_select\").empty().append( my_options );\n$(\"#my_select\").val(selected); /* preserving original selection, step 2 */\n</code></pre>\n\n<p>Update 2 aug 2012:</p>\n\n<p>See TJ Ellis's helpful comments below re: case-sensitivity and preserving original selection.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/sort\" rel=\"nofollow\" title=\"Mozilla&#39;s sort documentation\">Mozilla's sort documentation</a> (specifically the compareFunction) and <a href=\"http://en.wikipedia.org/wiki/Sorting_algorithm\" rel=\"nofollow\">Wikipedia's Sorting Algorithm page</a> are relevant.</p>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>I've just wrapped Mark's idea in a jquery function</p>\n\n<pre><code>$('#your_select_box').sort_select_box();\n</code></pre>\n\n<p>JQuery function:    </p>\n\n<pre><code>$.fn.sort_select_box = function(){\n    var my_options = $(\"#\" + this.attr('id') + ' option');\n    my_options.sort(function(a,b) {\n        if (a.text &gt; b.text) return 1;\n        else if (a.text &lt; b.text) return -1;\n        else return 0\n    })\n   return my_options;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<pre><code>var arrOptions = [];\nvar i = 0;\nsel.find(\"option\").each(function(){\n    arrOptions[i] = [];\n    arrOptions[i][0] = jQuery(this).text(); \n    arrOptions[i][1] = jQuery(this);\n    i += 1;\n});\narrOptions.sort();\nfor(var i=0;i&lt;arrOptions.length;i++){\n    sel.append(arrOptions[i][1]);       \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Modified Tom's answer above slightly so that it actually modifies the contents of the select box to be sorted, rather than just returning the sorted elements.</p>\n\n<pre><code>$('#your_select_box').sort_select_box();\n</code></pre>\n\n<p>jQuery function:</p>\n\n<pre><code>$.fn.sort_select_box = function(){\n    // Get options from select box\n    var my_options = $(\"#\" + this.attr('id') + ' option');\n    // sort alphabetically\n    my_options.sort(function(a,b) {\n        if (a.text &gt; b.text) return 1;\n        else if (a.text &lt; b.text) return -1;\n        else return 0\n    })\n   //replace with sorted my_options;\n   $(this).empty().append( my_options );\n\n   // clearing any selections\n   $(\"#\"+this.attr('id')+\" option\").attr('selected', false);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Remember: if you want to use context selector, just concatenate the ID will not work</p>\n\n<pre><code>$.fn.sort_select_box = function(){\n    var my_options = $(\"option\", $(this));\n    my_options.sort(function(a,b) {\n        if (a.text &gt; b.text) return 1;\n        else if (a.text &lt; b.text) return -1;\n        else return 0\n    });\n    $(this).empty().append(my_options);\n}\n\n// Usando:\n$(\"select#ProdutoFornecedorId\", $($context)).sort_select_box();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is a better solution.\nDeclare a global function to JQuery</p>\n\n<pre><code>$.fn.sortSelect = function() {\n    var op = this.children(\"option\");\n    op.sort(function(a, b) {\n        return a.text &gt; b.text ? 1 : -1;\n    })\n    return this.empty().append(op);\n}\n</code></pre>\n\n<p>And call the function from the code.</p>\n\n<pre><code>$(\"#my_select\").sortSelect();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The solution I mentioned in my comment to @Juan Perez</p>\n\n<pre><code>$.fn.sortOptions = function(){\n    $(this).each(function(){\n        var op = $(this).children(\"option\");\n        op.sort(function(a, b) {\n            return a.text &gt; b.text ? 1 : -1;\n        })\n        return $(this).empty().append(op);\n    });\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>$(\"select\").sortOptions();\n</code></pre>\n\n<p>This can still be improved on, but I didn't need to add any more bells or whistles :)</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I have jQuery but I'm not sure if it has any built-in sorting helpers. I could make a 2d array of each item's <code>text</code>, <code>value</code>, and <code>selected</code> properties, but I don't think that javascript's built in <code>Array.sort()</code> would work correctly.</p>\n",
            "last_activity_date": 1412064121,
            "question_id": 45888,
            "score": 36,
            "tags": [
                "javascript",
                "jquery",
                "arrays",
                "sorting",
                "html-select"
            ],
            "title": "What is the most efficient way to sort an Html Select&#39;s Options by value, while preserving the currently selected item?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Script elements at the top of the document are available sooner (so you can bind event handlers and have JS run as soon as an element becomes available), but they do block parsing of the rest of the page.</p>\n\n<p>Script elements at the bottom aren't (so you can't) and there isn't any significant page left, so it doesn't matter if that is blocked.</p>\n\n<p>Which is <em>best</em> depends on the relative <del>importance</del> priority (which has to be determined on a case-by-case basis) of having the JS running Vs. having the HTML rendering.</p>\n\n<p>Note that a script element at the bottom must appear <strong>inside</strong> the body element. So it should be:</p>\n\n<pre><code>&lt;script&gt;...&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>and not</p>\n\n<pre><code>&lt;/body&gt;&lt;script&gt;...&lt;/script&gt;&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Performance of the script itself will definitely be the same.</p>\n\n<p>The placement is important though, as explained in the article you linked, since the browser will \"halt\" (or \"freeze\") downloads and rendering of the page when it encounters a <code>&lt;script&gt;</code> tag. So it's probably best to let the browser render the page and apply CSS styles, and <em>then</em> include your <code>.js</code>. It will look smoother to the user.</p>\n\n<p>Also, including the script at the bottom probably means right before you close the <code>&lt;body</code> tag.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes, it does affect the performance of the webpage loading.</p>\n\n<p>The problem is, normal <code>&lt;script&gt;</code> tags are blocking so everything after the script tag has to wait till the script tag is done loading and parsing before the rest of the page can load.</p>\n\n<p>Now someone will probably note that if you use <code>async=\"true\"</code> in your script tag, it won't block. But that's only supported by a couple of browsers yet so that won't help the general case yet.</p>\n\n<p>Either way, in general it's a good idea to place your script tags at the bottom of the page so they won't hold up other parts of the page.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Javascript assets, by default, tend to block any other parallel downloads from occurring. So, you can imagine if you have plenty of <code>&lt;script&gt;</code> tags in the head, calling on multiple external scripts will block the <code>HTML</code> from loading, thus greeting the user with a blank white screen, because no other content on your page will load <em>until</em> the JS files have completely loaded. </p>\n\n<p>In order to combat this issue, many developers have opted to placing JS at the bottom of the HTML page (before the <code>&lt;/body&gt;</code> tag). This seems logical because, most of the time JS is not required until the user begins interacting with the site. Placing JS files at the bottom also enables progressive rendering.</p>\n\n<p>Alternatively, you can choose to load Javascript files asynchronously. There are plenty of existing methods which this can be accomplished by:</p>\n\n<p><a href=\"http://stevesouders.com/hpws2/couple-xhr-eval.php?t=1282313391\"><strong>XHR Eval</strong></a></p>\n\n<pre><code>var xhrObj = getXHRObject();\nxhrObj.onreadystatechange = \n  function() { \n    if ( xhrObj.readyState != 4 ) return;\n    eval(xhrObj.responseText);\n  };\nxhrObj.open('GET', 'A.js', true);\nxhrObj.send('');\n</code></pre>\n\n<p><strong>Script DOM Element</strong></p>\n\n<pre><code>var se = document.createElement('script');\nse.src = 'http://anydomain.com/A.js';\ndocument.getElementsByTagName('head')\n[0].appendChild(se);\n</code></pre>\n\n<p><strong>Meebo Iframed JS</strong></p>\n\n<pre><code>var iframe = document.createElement('iframe');\ndocument.body.appendChild(iframe);\nvar doc = iframe.contentWindow.document;\ndoc.open().write('&lt;body onload=\"insertJS()\"&gt;');\ndoc.close();\n</code></pre>\n\n<p>To name a few...</p>\n\n<p><strong>Note</strong>: Only a maximum of five scripts can be loaded in parallel in current browsers.</p>\n\n<hr />\n\n<p>For<code>IE</code> there is the <a href=\"http://www.w3.org/TR/REC-html40/interact/scripts.html#adef-defer\"><code>defer</code></a> attribute you can use like so:</p>\n\n<pre><code>&lt;script defer src=\"jsasset.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<blockquote>\n  <p>When set, this boolean attribute\n  provides a hint to the user agent that\n  the script is not going to generate\n  any document content (e.g., no\n  \"document.write\" in javascript) and\n  thus, the user agent can continue\n  parsing and rendering.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>Yes, it does affect the performance of the web page.</p>\n\n<p>The problem with JavaScript is that is blocks the execution/loading of the rest of the page. If you have something that takes a long time in your JavaScript then it will prevent the rest of the page from loading:</p>\n\n<p>See these examples:</p>\n\n<ul>\n<li>Script at top, blocks whole page: <a href=\"http://jsfiddle.net/jonathon/wcQqn/\">http://jsfiddle.net/jonathon/wcQqn/</a></li>\n<li>Script in the middle, blocks bottom: <a href=\"http://jsfiddle.net/jonathon/wcQqn/1\">http://jsfiddle.net/jonathon/wcQqn/1</a> </li>\n<li>Script at bottom, blocks nothing: <a href=\"http://jsfiddle.net/jonathon/wcQqn/3/\">http://jsfiddle.net/jonathon/wcQqn/3/</a></li>\n</ul>\n\n<p>You can see the effect the alert has on the rendering of the rest of the page. Any JavaScript that you put into the top of your page will have the same effect. In general, it is better to put anything critical to the layout of your page (i.e. menu plugins or something). Anything that requires a user interaction (popup handlers) or doesn't involve the user at all (Google Analytics) should go to the bottom of the page.</p>\n\n<p>You can get lazy loaders that will inject your <code>script</code> tags into your code. Since the code isn't on the HTML, you can be sure that your whole page has rendered correctly and that the JS you're including will not block anything.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Firstly script tags not inside body/head elements create invalid HTML and might even cause some exceptions in some browsers.</p>\n\n<p>Script tags inside the head element will be loaded and interpreted before any HTML is rendered, this blocks HTML/CSS rendering.</p>\n\n<p>Script tags at the bottom of the body tag, will not block HTML/CSS and since you can only play around with the DOM on DomReady, this is the best position to put your JavaScript. As a side note, you won't even need to use a domReady event wrapper.</p>\n\n<p>Alternatively, you can also use libraries like <a href=\"http://labjs.com/\" rel=\"nofollow\">LABJS</a> and <a href=\"http://requirejs.org\" rel=\"nofollow\">RequireJS</a> to kickstart your JavaScript from the head tag (minimal HTML/CSS blocking). Any scripts loaded through either of these libraries will run in paralel to HTML/CSS rendering.</p>\n\n<pre><code>&lt;head&gt;\n   &lt;script data-main=\"INITSCRIPT.js\" src=\"require.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>INITSCRIPT.js</p>\n\n<pre><code>require( [ \"jQuery\" , \"somePlugin\" ] , function(){\n   $(document).ready(function(){\n      $(\"#someId\").somePlugin();   \n   });\n} );\n</code></pre>\n\n<p>In the above example, only the load and interpretation of require.js will block HTML/CSS rendering, which usually is insignificant. After which jQuery and somePlugin will be loaded in paralel, so HTML/CSS renders just nicely.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>So I know this is an old discussion, but I've been reading about this topic and reading other answers on StackOverflow...</p>\n\n<p>It actually doesn't matter where you put the jQuery tag anymore: </p>\n\n<blockquote>\n  <p>Finally, a word about persistent folklore. You may have encountered\n  the frequently repeated advice to \u201calways place JavaScript at the\n  bottom of the page just before the closing  tag\u201d. This was once\n  true because web browsers loaded scripts sequentially and blocked\n  loading and rendering until each script was complete. This is no\n  longer true; modern browsers do \u201cpreload scanning\u201d and begin loading\n  all scripts in parallel, whether listed in the head element or at the\n  bottom of the page. External JavaScript often is loaded asynchronously\n  and is written so it won\u2019t execute until the page is loaded and the\n  DOM is ready. Loading a script in the head element is no longer a bad\n  practice.</p>\n</blockquote>\n\n<p><a href=\"http://railsapps.github.io/rails-javascript-include-external.html\" rel=\"nofollow\">http://railsapps.github.io/rails-javascript-include-external.html</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>If the script tag is above or below the body in a HTML page, does it matter for the performance of a website?</p>\n\n<p>And what if used in between like this:</p>\n\n<pre><code>&lt;body&gt;\n..blah..blah..\n&lt;script language=\"JavaScript\" src=\"JS_File_100_KiloBytes\"&gt;\nfunction f1() {\n.. some logic reqd. for manipulating contents in a webpage\n}\n&lt;/script&gt;\n... some text here too ...\n&lt;/body&gt; \n</code></pre>\n\n<p>Or is this better?:</p>\n\n<pre><code>&lt;script language=\"JavaScript\" src=\"JS_File_100_KiloBytes\"&gt;\nfunction f1() {\n.. some logic reqd. for manipulating contents in a webpage\n}\n&lt;/script&gt;\n&lt;body&gt;\n..blah..blah..\n..call above functions on some events like onclick,onfocus,etc..\n&lt;/body&gt; \n</code></pre>\n\n<p>Or this one?:</p>\n\n<pre><code>  &lt;body&gt;\n    ..blah..blah..\n    ..call above functions on some events like onclick,onfocus,etc..\n&lt;script language=\"JavaScript\" src=\"JS_File_100_KiloBytes\"&gt;\n    function f1() {\n    .. some logic reqd. for manipulating contents in a webpage\n    }\n    &lt;/script&gt;\n    &lt;/body&gt; \n</code></pre>\n\n<p>Need not tell everything is again in the <code>&lt;html&gt;</code> tag!!</p>\n\n<p>How does it affect performance of webpage while loading? Does it really?\nWhich one is the best, either out of these 3 or some other which you know? </p>\n\n<p>And one more thing, I googled a bit on this, from which I went here: <a href=\"https://developer.yahoo.com/performance/rules.html\" rel=\"nofollow\">Best Practices for Speeding Up Your Web Site</a> and it suggests <a href=\"https://developer.yahoo.com/blogs/ydn/high-performance-sites-rule-6-move-scripts-bottom-7200.html\" rel=\"nofollow\">put scripts at the bottom</a>, but traditionally many people put it in <code>&lt;head&gt;</code> tag which is above the <code>&lt;body&gt;</code> tag. I know it's NOT a rule but many prefer it that way. If you don't believe it, just <em>view source</em> of this page! And tell me what's the better style for best performance.</p>\n",
            "last_activity_date": 1407779446,
            "question_id": 4396849,
            "score": 34,
            "tags": [
                "javascript",
                "html",
                "performance",
                "optimization"
            ],
            "title": "Does the &lt;script&gt; tag position in HTML affects performance of the webpage?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Would it work if you did something like this:</p>\n\n<pre><code>var myObject = window[classNameString];\n</code></pre>\n\n<p>..?</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>If MyClass is global, you can access it as a property of window object (assuming your code runs in a browser) using subscript notation.</p>\n\n<pre><code>var myObject = new window[\"MyClass\"]();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>BTW: window is the reference to the global Object in browser JavaScript. Which is also <code>this</code>, and should work even in non-browser environments if you are in the global scope. </p>\n\n<pre><code>var obj = new this[classNameString]();\n</code></pre>\n\n<p>However, there really is no reason to use a string. JavaScript functions are themselves objects, just like strings which are objects also.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Here's a more robust solution that will work with namespaced functions:</p>\n\n<pre><code>var stringToFunction = function(str) {\n  var arr = str.split(\".\");\n\n  var fn = (window || this);\n  for (var i = 0, len = arr.length; i &lt; len; i++) {\n    fn = fn[arr[i]];\n  }\n\n  if (typeof fn !== \"function\") {\n    throw new Error(\"function not found\");\n  }\n\n  return  fn;\n};\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>my = {};\nmy.namespaced = {};\n(my.namespaced.MyClass = function() {\n  console.log(\"constructed\");\n}).prototype = {\n  do: function() {\n    console.log(\"doing\");\n  }\n};\n\nvar MyClass = stringToFunction(\"my.namespaced.MyClass\");\nvar instance = new MyClass();\ninstance.do();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Here is improved version of Yuriy's method that also handles objects.</p>\n\n<pre><code>var stringToObject = function(str, type) {\n    type = type || \"object\";  // can pass \"function\"\n    var arr = str.split(\".\");\n\n    var fn = (window || this);\n    for (var i = 0, len = arr.length; i &lt; len; i++) {\n        fn = fn[arr[i]];\n    }\n    if (typeof fn !== type) {\n        throw new Error(type +\" not found: \" + str);\n    }\n\n    return  fn;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Here's what I'm trying to do -- this is pseudo code and doesn't work. Does anyone know how to accomplish this for reals:</p>\n\n<pre><code>// Define the class\nMyClass = Class.extend({});\n\n// Store the class name in a string\nvar classNameString = 'MyClass';\n\n// Instantiate the object using the class name string\nvar myObject = new classNameString();\n</code></pre>\n",
            "last_activity_date": 1367872426,
            "question_id": 1366127,
            "score": 30,
            "tags": [
                "javascript",
                "oop"
            ],
            "title": "Instantiate a JavaScript Object Using a String to Define the Class Name"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>why not disable the button ?Any specific reason that you want to disable this listner alone ?\nBTB, from your code, I see that you are making an ajax call. SO you specifically want to block user until the call comes back ? If yes, you can try <a href=\"http://malsup.com/jquery/block/\">blockUI</a>, a jQuery plugin</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I'd suggest disabling the button, then re-enabling it in your Ajax completion routines (success <em>or</em> failure, remember). If you're worried about the browser not respecting your disabling the button, you can back that with your own flag on the button (e.g., set an attribute called <code>data-disabled</code>, using the <code>data-</code> prefix as good practice and to be HTML5 compatible). But barring actually running into a problems with browsers not disabling the button, I'd probably consider that good enough.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>for how long do you want to disable the click event listener? one way is to unbind the event listener using jQuery's <code>unbind</code> <a href=\"http://docs.jquery.com/Events/unbind\">http://docs.jquery.com/Events/unbind</a>.\nbut it's best-practice not to unbind an event only to rebind it later. use a boolean instead.</p>\n\n<pre><code>var active = true;\n$(\".btnRemove\").click(function(){\n   if(!active){\n       return;\n   }\n   active = false;\n   $(this).attr(\"src\", \"/url/to/ajax-loader.gif\");\n   $.ajax({\n        type: \"GET\",\n        url: \"/url/to/django/view/to/remove/item/\" + this.id,\n        dataType: \"json\",\n        success: function(returned_data){\n        active = true; // activate it again !\n        $.each(returned_data, function(i, item){\n              // do stuff                       \n     });\n   }\n});\n</code></pre>\n\n<p><strong>edit:</strong> to be safe you should also care about the other ajax completion routines (there are only three: <code>success</code>, <code>error</code>, <code>complete</code> <a href=\"http://docs.jquery.com/Ajax/jQuery.ajax#options\">see docs</a>) or else <code>active</code> might stay false.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>There are a lot of ways to do it. For example:</p>\n\n<pre><code>$(\".btnRemove\").click(function() {\n    var $this = $(this);\n    if ($this.data(\"executing\")) return;\n    $this\n        .data(\"executing\", true)\n        .attr(\"src\", \"/url/to/ajax-loader.gif\");\n    $.get(\"/url/to/django/view/to/remove/item/\" + this.id, function(returned_data) {\n        // ... do your stuff ...\n        $this.removeData(\"executing\");\n    });\n});\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$(\".btnRemove\").click(function() {\n    var handler = arguments.callee;\n    var $this = $(this)\n        .off(\"click\", handler)\n        .attr(\"src\", \"/url/to/ajax-loader.gif\");\n    $.get(\"/url/to/django/view/to/remove/item/\" + this.id, function(returned_data) {\n        // ... do your stuff ...\n        $this.click(handler);\n    });\n});\n</code></pre>\n\n<p>We can also use event delegation for clearer code and better performance:</p>\n\n<pre><code>$(document).on(\"click\", \".btnRemove:not(.unclickable)\", function() {\n    var $this = $(this)\n        .addClass(\"unclickable\")\n        .attr(\"src\", \"/url/to/ajax-loader.gif\");\n    $.get(\"/url/to/django/view/to/remove/item/\" + this.id, function(returned_data) {\n        // ... do your stuff ...\n        $this.removeClass(\"unclickable\");\n    });\n});\n</code></pre>\n\n<p>If we don't need to re-enable the handler after it has been executed, then we can use the <code>.one()</code> method. It binds handlers that are to be executed only once. See jQuery docs: <a href=\"http://api.jquery.com/one\" rel=\"nofollow\">http://api.jquery.com/one</a></p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>You could make the action within the click based upon a boolean value. When it's clicked, change the boolean value and uset setTimeout() to change it back after a few seconds. That would effectively limit the user to clicking the button only once every few seconds.</p>\n\n<pre><code>var isEnabled = true;\n\n$(\"a.clickMe\").click(function(e){\n  e.preventDefault();\n  if (isEnabled == true) {\n    isEnabled = false; // disable future clicks for now\n    do_Something();\n    setTimeout(function(){\n      isEnabled = true;\n    }, 3000); // restore functionality after 3 seconds\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>var ajaxAction = function() {\n    var ele = $(this);\n    ele.unbind(\"click\", ajaxAction);\n    ele.attr(\"src\", \"/url/to/ajax-loader.gif\");\n    $.ajax({\n        type: \"GET\",\n        url: \"/url/to/django/view/to/remove/item/\" + this.id,\n        dataType: \"json\",\n        success: function(returned_data) {\n            $.each(returned_data, function(i, item) {\n            });\n        },\n        complete: function() {\n            ele.bind(\"click\", ajaxAction);\n        }\n    });\n}\n$(\".btnRemove\").click(ajaxAction);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would setup a global variable to keep track of AJAX requests...</p>\n\n<pre><code>var myApp = {\n  ajax: null\n}\n</code></pre>\n\n<p>And then have this little bit of magic to stop simultaneous requests...</p>\n\n<pre><code>// Fired when an AJAX request begins\n$.ajaxStart(function() { myApp.ajax = 1 });\n\n// Fired when an AJAX request completes\n$.ajaxComplete(function() { myApp.ajax = null });\n\n// Fired before an AJAX request begins\n$.ajaxSend(function(e, xhr, opt) {\n  if(myApp.ajax != null) {\n    alert(\"A request is currently processing. Please wait.\");\n    xhr.abort();\n  }\n});\n</code></pre>\n\n<p>With this approach, you should not have to go back through your code and modify every single one of your AJAX calls.  (something I call an \"append\" solution)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I would use a class eg 'ajax-running'. The click event would only be executed if the clicked element does not have the 'ajax-running' class. As soon you ajax call finishes you can remove the 'ajax-running' class so it can be clicked again.</p>\n\n<pre><code>$(\".btnRemove\").click(function(){\n    var $button\t\t\t= $(this);\n    var is_ajaxRunning \t= $button.hasClass('ajax-running');\n    if( !is_ajaxRunning ){\n    \t$.ajax({\n    \t\t...\n    \t\tsuccess: function(returned_data) {\n    \t\t\t...\n    \t\t\t$button.removeClass('ajax-running');\n    \t\t});\n    \t};\n    }\t\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you are posting via ajax, you can disable the button on click and enable it after the process completes. But if you are posting back, you cannot just disable the button. Disabling the button causes the server side click event not to fire. So just hide the button on click and show user friendly message. The post on <a href=\"http://dotnetspidor.blogspot.com/2010/01/disable-button-in-asp-net-web-page-to.html\" rel=\"nofollow\">how to disable asp.net button on postback</a> helps.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I temporarily disable the onclick event listener, (jQuery preferred), after the event has been fired?</p>\n\n<p>Example:</p>\n\n<p>After the user clicks on the button and fires this function below, I want to disabled the onclick listener, therefore not firing the same command to my django view.</p>\n\n<pre><code>$(\".btnRemove\").click(function(){\n   $(this).attr(\"src\", \"/url/to/ajax-loader.gif\");\n   $.ajax({\n        type: \"GET\",\n        url: \"/url/to/django/view/to/remove/item/\" + this.id,\n        dataType: \"json\",\n        success: function(returned_data){\n            $.each(returned_data, function(i, item){\n              // do stuff                       \n     });\n   }\n});\n</code></pre>\n\n<p>Thanks a lot,</p>\n\n<p>Aldo</p>\n",
            "last_activity_date": 1420571666,
            "question_id": 1921855,
            "score": 26,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "events",
                "onclick"
            ],
            "title": "jQuery - How can I temporarily disable the onclick event listener after the event has been fired?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>No, i doubt you can do it within javascript. But with Firefox's User Agent Switcher you can test whatever useragent you want, so why not just use that?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>navigator.userAgent</code> is a read-only string property, so its not possible to edit it</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try:</p>\n\n<pre><code>navigator.__defineGetter__('userAgent', function(){\n    return 'foo' // customized user agent\n});\n\nnavigator.userAgent; // 'foo'\n</code></pre>\n\n<p>Tried it in FF2 and FF3.</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>I guess I'd take a dependency injection approach. Instead of:</p>\n\n<pre><code>function myFunction() {\n    var userAgent = navigator.userAgent;\n    // do stuff with userAgent\n}\n</code></pre>\n\n<p>Maybe do something like:</p>\n\n<pre><code>function myFunction(userAgent) {\n    // do stuff with userAgent\n}\n\nfunction getUserAgent() {\n    window.userAgentReal = +window.userAgentReal || 0;\n    return [ navigator.userAgent ][window.userAgentReal++];\n}\n\nfunction getUserAgentMock() {\n    window.nextUserAgentMock = +window.nextUserAgentMock || 0;\n    return [\n        'test user agent1',\n        'test user agent2',\n        'test user agent3'\n    ][window.nextUserAgentMock++];\n}\n\nvar userAgent;\nwhile (userAgent = getUserAgent()) {\n    myFunction(userAgent);\n}\n</code></pre>\n\n<p>Then you can \"mock out\" <code>getUserAgent()</code> by doing:</p>\n\n<pre><code>function getUserAgentReal() { // formerly not 'Real'\n    // ...\n}\n\nfunction getUserAgent() { // formerly 'Mock'\n    // ...\n}\n</code></pre>\n\n<p>This design still isn't completely automated (you have to manually rename the getter to perform your testing), and it adds a bunch of complexity to something as simple as operating on <code>navigator.userAgent</code>, and I'm not sure how you'd actually identify any bugs in <code>myFunction</code>, but I just figured I'd throw it out there to give you some ideas how this might be dealt with.</p>\n\n<p>Maybe the idea of \"dependency injection\" presented here can somehow be integrated with FireUnit.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Adding on to <a href=\"http://stackoverflow.com/questions/1307013/mocking-a-useragent-in-javascript/1307088#1307088\">Crescent Fresh's solution</a>, redefining the <code>navigator.userAgent</code> getter doesn't seem to work in Safari 5.0.5 (on Windows 7 &amp; Mac OS X 10.6.7).</p>\n\n<p>Need to create a new object that inherits from the <code>navigator</code> object and define a new <code>userAgent</code> getter to hide the original <code>userAgent</code> getter in <code>navigator</code>:</p>\n\n<pre><code>var __originalNavigator = navigator;\nnavigator = new Object();\nnavigator.__proto__ = __originalNavigator;\nnavigator.__defineGetter__('userAgent', function () { return 'Custom'; });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Using Object.defineProperty should add several more browsers to the mix:</p>\n\n<pre><code>if (navigator.__defineGetter__) {\n    navigator.__defineGetter__(\"userAgent\", function () { \n        return \"ua\"; \n    });\n} else if (Object.defineProperty) { \n    Object.defineProperty(navigator, \"userAgent\", { \n        get: function () { \n            return \"ua\";\n        }\n    });\n}\n</code></pre>\n\n<p>This code should work (and was tested) in <strong>Firefox 1.5+</strong>, <strong>Chrome 6+</strong>, <strong>Opera 10.5+</strong> and <strong>IE9+</strong>. Unfortunately Safari on any platform doesn't allow changing the userAgent.</p>\n\n<p>Edit: Safari doesn't allow changing the userAgent, but one can replace the whole <strong>navigator</strong> object, as pointed out in another solution above.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Change navigator.userAgent on Firefox and Opera via defineGetter</p>\n\n<pre><code>navigator.__defineGetter__('userAgent', function(){\n    return( \"iPhone 5\" );\n});\n\nalert( navigator.userAgent ); //iPhone 5\n</code></pre>\n\n<p>Change navigator.userAgent on IE and Opera via object instance</p>\n\n<pre><code>var navigator = new Object; \nnavigator.userAgent = 'iPhone 5';\n\nalert( navigator.userAgent ); //iPhone5\n</code></pre>\n\n<p>Good thing is, if you work on IE webbrowser control, you can double spoof both HTTP request and JavaScript navigator.userAgent via execScript</p>\n\n<pre><code>WebBrowser1.Navigate \"http://example.com\", , , , \"User-Agent: iPhone 5\" &amp; vbCrLf\n\nWebBrowser1.Document.parentWindow.execScript (\"var navigator=new Object;navigator.userAgent='iPhone 5';\")\nWebBrowser1.Document.parentWindow.execScript (\"alert(navigator.userAgent);\") 'iPhone 5\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>The following solution works in Chrome, Firefox, Safari, IE9+ and also with iframes:</p>\n\n<pre><code>function setUserAgent(window, userAgent) {\n    if (window.navigator.userAgent != userAgent) {\n        var userAgentProp = { get: function () { return userAgent; } };\n        try {\n            Object.defineProperty(window.navigator, 'userAgent', userAgentProp);\n        } catch (e) {\n            window.navigator = Object.create(navigator, {\n                userAgent: userAgentProp\n            });\n        }\n    }\n}\n</code></pre>\n\n<p>Examples:</p>\n\n<pre><code>setUserAgent(window, 'new user agent');\nsetUserAgent(document.querySelector('iframe').contentWindow, 'new user agent');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Crescent Fresh's answer is correct. But there is an issue: <code>__defineGetter__</code> is deprecated:</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/<strong>defineGetter</strong></a></p>\n\n<blockquote>\n  <p><strong>Deprecated</strong> \n  This feature has been removed from the Web standards.\n  Though some browsers may still support it, it is in the process of\n  being dropped. Do not use it in old or new projects. Pages or Web apps\n  using it may break at any time.</p>\n</blockquote>\n\n<p>You should use <code>defineProperty</code> instead:</p>\n\n<pre><code>Object.defineProperty(navigator, \"userAgent\", { \n    get: function () { \n        return \"foo\"; // customized user agent\n    }\n});\n\nnavigator.userAgent; // 'foo'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking for a way to programmatically change navigator.userAgent on the fly. In my failed attempt to get an automated javascript unit tester, I gave up and attempted to begin using fireunit. Immediately, I've slammed into one of the walls of using an actual browser for javascript testing.</p>\n\n<p>Specifically, I need to change navigator.userAgent to simulate a few hundred userAgent strings to ensure proper detection and coverage on a given function. navigator.userAgent is readonly, so I seem stuck! How can I mock navigator.userAgent? User Agent Switcher (plugin) can switch FF's useragent, but can I do it within javascript?</p>\n",
            "last_activity_date": 1425213489,
            "question_id": 1307013,
            "score": 26,
            "tags": [
                "javascript",
                "unit-testing",
                "user-agent"
            ],
            "title": "Mocking a useragent in javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You will need to do an Ajax call I suspect. Here is an example of an Ajax called made by jQuery to get you started. The Code logs in a user to my system but returns a bool as to whether it was successful or not. Note the ScriptMethod and WebMethod attributes on the code behind method.</p>\n\n<p>in markup:</p>\n\n<pre><code> var $Username = $(\"#txtUsername\").val();\n            var $Password = $(\"#txtPassword\").val();\n\n            //Call the approve method on the code behind\n            $.ajax({\n                type: \"POST\",\n                url: \"Pages/Mobile/Login.aspx/LoginUser\",\n                data: \"{'Username':'\" + $Username + \"', 'Password':'\" + $Password + \"' }\", //Pass the parameter names and values\n                contentType: \"application/json; charset=utf-8\",\n                dataType: \"json\",\n                async: true,\n                error: function (jqXHR, textStatus, errorThrown) {\n                    alert(\"Error- Status: \" + textStatus + \" jqXHR Status: \" + jqXHR.status + \" jqXHR Response Text:\" + jqXHR.responseText) },\n                success: function (msg) {\n                    if (msg.d == true) {\n                        window.location.href = \"Pages/Mobile/Basic/Index.aspx\";\n                    }\n                    else {\n                        //show error\n                        alert('login failed');\n                    }\n                }\n            });\n</code></pre>\n\n<p>In Code Behind:</p>\n\n<pre><code>/// &lt;summary&gt;\n/// Logs in the user\n/// &lt;/summary&gt;\n/// &lt;param name=\"Username\"&gt;The username&lt;/param&gt;\n/// &lt;param name=\"Password\"&gt;The password&lt;/param&gt;\n/// &lt;returns&gt;true if login successful&lt;/returns&gt;\n[WebMethod, ScriptMethod]\npublic static bool LoginUser( string Username, string Password )\n{\n    try\n    {\n        StaticStore.CurrentUser = new User( Username, Password );\n\n        //check the login details were correct\n        if ( StaticStore.CurrentUser.IsAuthentiacted )\n        {\n            //change the status to logged in\n            StaticStore.CurrentUser.LoginStatus = Objects.Enums.LoginStatus.LoggedIn;\n\n            //Store the user ID in the list of active users\n            ( HttpContext.Current.Application[ SessionKeys.ActiveUsers ] as Dictionary&lt;string, int&gt; )[ HttpContext.Current.Session.SessionID ] = StaticStore.CurrentUser.UserID;\n\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n    catch ( Exception ex )\n    {\n        return false;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There are several options. You can use the <a href=\"http://www.geekzilla.co.uk/View7B75C93E-C8C9-4576-972B-2C3138DFC671.htm\" rel=\"nofollow\">WebMethod</a> attribute, for your purpose.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm going to go right ahead and offer a solution using jQuery, which means you will need to import the library if you haven't already...</p>\n\n<p>Import the jQuery library in your page mark-up:</p>\n\n<pre><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Then create another *.js script file (I call mine <code>ExecutePageMethod</code>, since that is the only method it is going to expose) and import it:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"/ExecutePageMethod.js\" &gt;&lt;/script&gt;\n</code></pre>\n\n<p>Within the newly added file, add the following code (I remember pulling this from elsewhere, so someone else deserves credit for it really):</p>\n\n<pre><code>function ExecutePageMethod(page, fn, paramArray, successFn, errorFn) {\n    var paramList = '';\n    if (paramArray.length &gt; 0) {\n        for (var i = 0; i &lt; paramArray.length; i += 2) {\n            if (paramList.length &gt; 0) paramList += ',';\n            paramList += '\"' + paramArray[i] + '\":\"' + paramArray[i + 1] + '\"';\n        }\n    }\n    paramList = '{' + paramList + '}';\n    $.ajax({\n        type: \"POST\",\n        url: page + \"/\" + fn,\n        contentType: \"application/json; charset=utf-8\",\n        data: paramList,\n        dataType: \"json\",\n        success: successFn,\n        error: errorFn\n    });\n}\n</code></pre>\n\n<p>You will then need to augment your .NET page method with the appropriate attributes, as such:</p>\n\n<pre><code>[WebMethod]\n[ScriptMethod(ResponseFormat = ResponseFormat.Json)]\npublic static string MyMethod()\n{\n    return \"Yay!\";\n}\n</code></pre>\n\n<p>Now, within your page mark-up, within a <code>script</code> block or from another script file, you can call the method, like so:</p>\n\n<pre><code>ExecutePageMethod(\"PageName.aspx\", \"MyMethod\", [], OnSuccess, OnFailure);\n</code></pre>\n\n<p>Obviously you will need to implement the <code>OnSuccess</code> and <code>OnFailure</code> methods.</p>\n\n<p>To consume the results, say in the <code>OnSuccess</code> method, you can use the parseJSON method, which, if the results become more complex (in the case or returning an array of types, for instance) this method will parse it into objects:</p>\n\n<pre><code>function OnSuccess(result) {\n    var parsedResult = jQuery.parseJSON(result.d);\n}\n</code></pre>\n\n<p>This <code>ExecutePageMethod</code> code is particularly useful since it it reusable, so rather than having to manage an <code>$.ajax</code> call for each page method you might want to execute, you just need to pass the page, method name and arguments to this method.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>PageMethod an easier and faster approach for Asp.Net AJAX\nWe can easily improve user experience and performance of web applications by unleashing the power of AJAX. One of the best things which I like in AJAX is PageMethod. </p>\n\n<p>PageMethod is a way through which we can expose server side page's method in java script. This brings so many opportunities we can perform lots of operations without using slow and annoying post backs.</p>\n\n<p>In this post I am showing the basic use of ScriptManager and PageMethod. In this example I am creating a User Registration form, in which user can register against his email address and password. Here is the markup of the page which I am going to develop:-</p>\n\n<pre><code>&lt;body&gt;\n    &lt;form id=\"form1\" runat=\"server\"&gt;\n    &lt;div&gt;\n        &lt;fieldset style=\"width: 200px;\"&gt;\n            &lt;asp:Label ID=\"lblEmailAddress\" runat=\"server\" Text=\"Email Address\"&gt;&lt;/asp:Label&gt;\n            &lt;asp:TextBox ID=\"txtEmail\" runat=\"server\"&gt;&lt;/asp:TextBox&gt;\n            &lt;asp:Label ID=\"lblPassword\" runat=\"server\" Text=\"Password\"&gt;&lt;/asp:Label&gt;\n            &lt;asp:TextBox ID=\"txtPassword\" runat=\"server\"&gt;&lt;/asp:TextBox&gt;\n        &lt;/fieldset&gt;\n        &lt;div&gt;\n        &lt;/div&gt;\n        &lt;asp:Button ID=\"btnCreateAccount\" runat=\"server\" Text=\"Signup\"  /&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>To setup page method, first you have to drag a script manager on your page.</p>\n\n<pre><code>&lt;asp:ScriptManager ID=\"ScriptManager1\" runat=\"server\" EnablePageMethods=\"true\"&gt;\n&lt;/asp:ScriptManager&gt;\n</code></pre>\n\n<p>Also notice that I have changed EnablePageMethods=\"true. This will tell ScriptManager that I am going to call Page Methods from client side. </p>\n\n<p>Now Next step is to Create a Server Side function. Here is the function which I created, this function validates user's input:-</p>\n\n<pre><code>[WebMethod]\npublic static string RegisterUser(string email, string password)\n{\n    string result = \"Congratulations!!! your account has been created.\";\n    if (email.Length == 0)//Zero length check\n    {\n        result = \"Email Address cannot be blank\";\n    }\n    else if (!email.Contains(\".\") || !email.Contains(\"@\")) //some other basic checks\n    {\n        result = \"Not a valid email address\";\n    }\n    else if (!email.Contains(\".\") || !email.Contains(\"@\")) //some other basic checks\n    {\n        result = \"Not a valid email address\";\n    }\n\n    else if (password.Length == 0)\n    {\n        result = \"Password cannot be blank\";\n    }\n    else if (password.Length &lt; 5)\n    {\n        result = \"Password canonot be less than 5 chars\";\n    }\n\n    return result;\n}\n</code></pre>\n\n<p>To tell script manager that this method is accessible through javascript we need to ensure two things. First this method should be 'public static'. Second there should be a [WebMethod] tag above method as written in above code.</p>\n\n<p>Now I have created server side function which creates account. Now we have to call it from client side. Here is how we can call that function from client side:-</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function Signup() {\n        var email = document.getElementById('&lt;%=txtEmail.ClientID %&gt;').value;\n        var password = document.getElementById('&lt;%=txtPassword.ClientID %&gt;').value;\n\n        PageMethods.RegisterUser(email, password, onSucess, onError);\n\n        function onSucess(result) {\n            alert(result);\n        }\n\n        function onError(result) {\n            alert('Cannot process your request at the moment, please try later.');\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>To call my server side method Register user, ScriptManager generates a proxy function which is available in PageMethods. My server side function has two paramaters i.e. email and password, after that parameters we have to give two more function names which will be run if method is successfully executed (first parameter i.e. onSucess) or method is failed (second parameter i.e. result).</p>\n\n<p>Now every thing seems ready, and now I have added OnClientClick=\"Signup();return false;\" on my Signup button. So here complete code of my aspx page :-</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head runat=\"server\"&gt;\n    &lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=\"form1\" runat=\"server\"&gt;\n    &lt;div&gt;\n        &lt;asp:ScriptManager ID=\"ScriptManager1\" runat=\"server\" EnablePageMethods=\"true\"&gt;\n        &lt;/asp:ScriptManager&gt;\n        &lt;fieldset style=\"width: 200px;\"&gt;\n            &lt;asp:Label ID=\"lblEmailAddress\" runat=\"server\" Text=\"Email Address\"&gt;&lt;/asp:Label&gt;\n            &lt;asp:TextBox ID=\"txtEmail\" runat=\"server\"&gt;&lt;/asp:TextBox&gt;\n            &lt;asp:Label ID=\"lblPassword\" runat=\"server\" Text=\"Password\"&gt;&lt;/asp:Label&gt;\n            &lt;asp:TextBox ID=\"txtPassword\" runat=\"server\"&gt;&lt;/asp:TextBox&gt;\n        &lt;/fieldset&gt;\n        &lt;div&gt;\n        &lt;/div&gt;\n        &lt;asp:Button ID=\"btnCreateAccount\" runat=\"server\" Text=\"Signup\" OnClientClick=\"Signup();return false;\" /&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    function Signup() {\n        var email = document.getElementById('&lt;%=txtEmail.ClientID %&gt;').value;\n        var password = document.getElementById('&lt;%=txtPassword.ClientID %&gt;').value;\n\n        PageMethods.RegisterUser(email, password, onSucess, onError);\n\n        function onSucess(result) {\n            alert(result);\n        }\n\n        function onError(result) {\n            alert('Cannot process your request at the moment, please try later.');\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>The <a href=\"http://jayrock.berlios.de/\" rel=\"nofollow\">Jayrock RPC library</a> is a great tool for doing this in a nice familliar way for C# developers. It allows you to create a .NET class with the methods you require, and add this class as a script (in a roundabout way) to your page. You can then create a js object of your type and call methods as you would any other object.</p>\n\n<p>It essentially hides away ajax implementation and presents RPC in a familliar format. Mind you the best option really is to use ASP.NET MVC and use jQuery ajax calls to action methods - much more concise and less messing about!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Does anyone know how to call a server-side c# method using javascript? What i need to do is to stop imports if Cancel is chosen or to continue importing if ok is chosen. I am using visual studio 2010 and c# as my programming lanaguage</p>\n\n<p>This is my code:</p>\n\n<pre><code>private void AlertWithConfirmation()            \n{                 \n    Response.Write(\n        \"&lt;script type=\\\"text/javascript\\\"&gt;\" +     \n            \"if (window.confirm('Import is currently in progress. Do you want to continue with importation? If yes choose OK, If no choose CANCEL')) {\" +     \n                \"window.alert('Imports have been cancelled!');\" +     \n            \"} else {\" +   \n                \"window.alert('Imports are still in progress');\" +     \n            \"}\" +      \n        \"&lt;/script&gt;\");   \n}\n</code></pre>\n",
            "last_activity_date": 1313570834,
            "question_id": 7089760,
            "score": 15,
            "tags": [
                "c#",
                "javascript",
                "asp.net"
            ],
            "title": "how to call an ASP.NET c# method using javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You know instead of fetching the same item multiple times, why not just reuse it:</p>\n\n<pre><code>var form = $('#theuploadform');\nform.attr(\"action\", \"/ajax/user.asmx/Upload\");\nform.attr(\"method\", \"post\");\n// and so on\n</code></pre>\n\n<p>What kind of error are you having? can you post it?</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Since you cannot set the attribute yourself here is a work around:</p>\n\n<p>Put the form in an iframe, and attach an onchange event to the input button.\nwhen the user select a file, you trigger the necessary code to upload the file (submit), then the parent window can close the iframe.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found the solution. This code works:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    $(document).ready(function () {\n\n        $(\"#formsubmit\").click(function () {\n\n            var iframe = $('&lt;iframe name=\"postiframe\" id=\"postiframe\" style=\"display: none\"&gt;&lt;/iframe&gt;');\n\n            $(\"body\").append(iframe);\n\n            var form = $('#theuploadform');\n            form.attr(\"action\", \"/upload.aspx\");\n            form.attr(\"method\", \"post\");\n\n            form.attr(\"encoding\", \"multipart/form-data\");\n            form.attr(\"enctype\", \"multipart/form-data\");\n\n            form.attr(\"target\", \"postiframe\");\n            form.attr(\"file\", $('#userfile').val());\n            form.submit();\n\n            $(\"#postiframe\").load(function () {\n                iframeContents = this.contentWindow.document.body.innerHTML;\n                $(\"#textarea\").html(iframeContents);\n            });\n\n            return false;\n\n        });\n\n    });\n\n&lt;/script&gt;\n\n\n&lt;form id=\"theuploadform\"&gt;\n    &lt;input id=\"userfile\" name=\"userfile\" size=\"50\" type=\"file\" /&gt;\n    &lt;input id=\"formsubmit\" type=\"submit\" value=\"Send File\" /&gt;\n&lt;/form&gt;\n\n&lt;div id=\"textarea\"&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>Your form target should be the same as iframe name, for example:</p>\n\n<pre><code>&lt;form target=\"frame\" \n      action=\"http://posttestserver.com/post.php?dir=example\" \n      method=\"post\"\n      enctype=\"multipart/form-data\"&gt;\n    &lt;input name=\"file\" type=\"file\"/&gt;\n&lt;/form&gt;\n\n&lt;iframe name=\"frame\"&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p>And after this you can attach event to input button to listen for 'change'.\nFurthemore you can get progress from server using jsonp and all of this will work in any browser event IE3+. Something like this:</p>\n\n<pre><code>$('input').change(function () {\n    $('form').submit();\n});\n\n$.getJSON('/echo/jsonp/?callback=?', function(e, progress) {\n    console.log(progress);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's not an official plugin, however here's an example on how you could wrap the form's submitting logic into a plugin.</p>\n\n<p>Example:</p>\n\n<pre><code>&lt;form method=\"post\" enctype=\"multipart/form-data\"&gt;\n    &lt;input name=\"file\" type=\"file\" /&gt;\n\n    &lt;input type=\"text\" name=\"test\" /&gt;\n\n    &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;script&gt;\n    $('form').submit(function (e) {\n\n        //prevent default submit\n        e.preventDefault();\n\n        //submit through frame\n        $(this).frameSubmit({\n            done: function (form, frame, options) {\n                console.log('done!');\n            },\n            fail: function (form, frame, options) {\n                console.log('fail!');\n            },\n            always: function (form, frame, options) {\n                console.log('always!');\n            }\n\n            //custom hasError implementation if needed\n            //by default if the frame's body HTML contains the text \"unexpected error\" or \"server error\"\n            //it is treated as an error\n            /*,hasError: function (frame) {\n                return false;\n            }*/\n        });\n    });\n\n&lt;/script&gt;\n</code></pre>\n\n<p>PLUGIN</p>\n\n<pre><code>!function ($, doc) {\n    var _frameCount = 0,\n        _callbackOptions = ['done', 'fail', 'always'],\n        _hasFailed = function (frame) {\n            var frameHtml = $(frame).contents().find('body').html();\n\n            return /(server|unexpected)\\s+error/i.test(frameHtml);\n        },\n        _createFrame = function () {\n            return $('&lt;iframe&gt;').prop('name', 'jq-frame-submit-' + _frameCount++).hide().appendTo(doc.body);\n        };\n\n    $.fn.extend({\n        frameSubmit: function (options) {\n\n            return this.each(function () {\n                var deferred = $.Deferred(),\n                    form = this,\n                    initialTarget = form.target,\n                    hasTarget = form.hasAttribute('target'),\n                    hasFailed = options.hasFailed || _hasFailed,\n\n                    //The initial frame load will fire a load event so we need to\n                    //wait until it fires and then submit the form in order to monitor\n                    //the form's submission state.\n                    $frame = _createFrame().one('load', function () {\n                        $frame.one('load', function () {\n                            deferred[hasFailed(this) ? 'reject' : 'resolve'](form, this, options);\n                            $frame.remove();\n                        });\n\n                        form.submit();\n\n                        //restore initial target attribute's value\n                        if (hasTarget) form.target = initialTarget;\n                        else form.removeAttribute('target');\n                    });\n\n                //attach handlers to the deferred\n                $.each(_callbackOptions, function (i, optName) {\n                    options[optName] &amp;&amp; deferred[optName](options[optName]);\n                });\n\n                //make sure the form gets posted the to iframe\n                form.target = $frame.prop('name');\n            });\n        }\n    });\n}(jQuery, document);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is a good plugin to upload files using ajax</p>\n\n<p><a href=\"http://jquery.malsup.com/form/#file-upload\" rel=\"nofollow\">http://jquery.malsup.com/form/#file-upload</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Im building a file upload with jQuery, but Im getting a jQuery error trying to set the attributes of the form:</p>\n\n<pre><code>$(document).ready(function () {\n            $(\"#formsubmit\").click(function () {\n\n                var iframe = $('&lt;iframe name=\"postframe\" id=\"postframe\" class=\"hidden\" src=\"about:none\" /&gt;');\n\n                $('div#iframe').append(iframe);\n\n                $('#theuploadform').attr(\"action\", \"/ajax/user.asmx/Upload\")\n                $('#theuploadform').attr(\"method\", \"post\")\n                $('#theuploadform').attr(\"userfile\", $('#userfile').val())\n                $('#theuploadform').attr(\"enctype\", \"multipart/form-data\")\n                $('#theuploadform').attr(\"encoding\", \"multipart/form-data\")\n                $('#theuploadform').attr(\"target\", \"postframe\")\n                $('#theuploadform').submit();\n                //need to get contents of the iframe\n                $(\"#postframe\").load(\n            function () {\n                iframeContents = $(\"iframe\")[0].contentDocument.body.innerHTML;\n                $(\"div#textarea\").html(iframeContents);\n            }\n        );\n\n\n\n&lt;div id=\"uploadform\"&gt;\n    &lt;form id=\"theuploadform\" action=\"\"&gt;\n        &lt;input id=\"userfile\" name=\"userfile\" size=\"50\" type=\"file\" /&gt;\n        &lt;input id=\"formsubmit\" type=\"submit\" value=\"Send File\" /&gt;\n    &lt;/form&gt;\n&lt;/div&gt;\n\n&lt;div id=\"iframe\" style=\"width: 0px; height: 0px; display: none;\"&gt;\n&lt;/div&gt;\n\n&lt;div id=\"textarea\"&gt;\n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1408709931,
            "question_id": 7909161,
            "score": 13,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery iframe file upload"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I hope this will be useful. By doing photo upload to FB only with the help of javascript you can use the following method. Required thing here are imageData(which is base64 format of image) and the mime type. </p>\n\n<pre><code>try{\n        blob = dataURItoBlob(imageData,mimeType);\n}catch(e){console.log(e);}\nvar fd = new FormData();\nfd.append(\"access_token\",accessToken);\nfd.append(\"source\", blob);fd.append(\"message\",\"Kiss\");\ntry{\n   $.ajax({\n        url:\"https://graph.facebook.com/\" + &lt;&lt;userID received on getting user details&gt;&gt; + \"/photos?access_token=\" + &lt;&lt;user accessToken&gt;&gt;,\n        type:\"POST\",\n        data:fd,\n        processData:false,\n        contentType:false,\n        cache:false,\n        success:function(data){\n            console.log(\"success \" + data);\n        },\n        error:function(shr,status,data){\n            console.log(\"error \" + data + \" Status \" + shr.status);\n        },\n        complete:function(){\n            console.log(\"Ajax Complete\");\n        }\n    });\n\n}catch(e){console.log(e);}\n\nfunction dataURItoBlob(dataURI,mime) {\n    // convert base64 to raw binary data held in a string\n    // doesn't handle URLEncoded DataURIs\n\n    var byteString = window.atob(dataURI);\n\n    // separate out the mime component\n\n\n    // write the bytes of the string to an ArrayBuffer\n    //var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(byteString.length);\n    for (var i = 0; i &lt; byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n\n    // write the ArrayBuffer to a blob, and you're done\n    var blob = new Blob([ia], { type: mime });\n\n    return blob;\n}\n</code></pre>\n\n<p>//EDIT AJAX SYNTAX</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>The code above didn't quite work for me (Missing comma after type:\"POST\", and data URI to blob function reported errors. I got the following code to work in Firefox and Chrome</p>\n\n<pre><code>function PostImageToFacebook(authToken)\n{\nvar canvas = document.getElementById(\"c\");\nvar imageData  = canvas.toDataURL(\"image/png\");\ntry{\n    blob = dataURItoBlob(imageData);\n}catch(e){console.log(e);}\nvar fd = new FormData();\nfd.append(\"access_token\",authToken);\nfd.append(\"source\", blob);\nfd.append(\"message\",\"Photo Text\");\ntry{\n$.ajax({\n    url:\"https://graph.facebook.com/me/photos?access_token=\" + authToken,\n    type:\"POST\",\n    data:fd,\n    processData:false,\n    contentType:false,\n    cache:false,\n    success:function(data){\n        console.log(\"success \" + data);\n    },\n    error:function(shr,status,data){\n        console.log(\"error \" + data + \" Status \" + shr.status);\n    },\n    complete:function(){\n    console.log(\"Posted to facebook\");\n    }\n});\n\n}catch(e){console.log(e);}\n}\n\nfunction dataURItoBlob(dataURI) {\nvar byteString = atob(dataURI.split(',')[1]);\nvar ab = new ArrayBuffer(byteString.length);\nvar ia = new Uint8Array(ab);\nfor (var i = 0; i &lt; byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n}\nreturn new Blob([ab], { type: 'image/png' });\n}\n</code></pre>\n\n<p>Here's the code at GitHub\n<a href=\"https://github.com/DanBrown180/html5-canvas-post-to-facebook-base64\" rel=\"nofollow\">https://github.com/DanBrown180/html5-canvas-post-to-facebook-base64</a></p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>Dan's Answer works the best. Something else that might be helpful in this scenario is the optional argument for posting photos: 'no_story'. This arg defaults to true forcing the photo-post to skip the user's wall. By adding </p>\n\n<pre><code>fd.append(\"no_story\", false);\n</code></pre>\n\n<p>you can update the user's wall with the photo-post.</p>\n\n<p>I would have just left this as a comment but... 50 Rep for comments.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I did something very similar to your question. I had a webcam-snapshot that needed to be POSTed to a Facebook Fan Page. \nThe setup was in a restaurant where people could take a picture and it would be posted onto the Restaurants Page. People would then see a QR code to the posted facebook-photo which they could choose to share on their own profile. \nHope this can help somebody because I searched a lot to get to this working SOLUTION</p>\n\n<p><strong>Note:</strong> My image is BASE64 encoded already.</p>\n\n<pre><code>//imageData is a base64 encoded JPG\nfunction postSocial(imageData, message){       \n        var ia = toUInt8Array(imageData);\n        postImageToFacebook(mAccessTokenPage, \"imageName\", \"image/jpeg\",ia, message);\n}\n\nfunction toUInt8Array(dataURI) {\n        // convert base64 to raw binary data held in a string\n        // doesn't handle URLEncoded DataURIs\n        var byteString = window.atob(dataURI);\n\n        // write the bytes of the string to an ArrayBuffer\n        //var ab = new ArrayBuffer(byteString.length);\n        var ia = new Uint8Array(byteString.length);\n        for (var i = 0; i &lt; byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        return ia;\n    }\n\nfunction postImageToFacebook( authToken, filename, mimeType, imageData, message ) {        \n        // this is the multipart/form-data boundary we'll use\n        var boundary = '----ThisIsTheBoundary1234567890';\n\n        // let's encode our image file, which is contained in the var\n        var formData = '--' + boundary + '\\r\\n'\n        formData += 'Content-Disposition: form-data; name=\"source\"; filename=\"' + filename + '\"\\r\\n';\n        formData += 'Content-Type: ' + mimeType + '\\r\\n\\r\\n';\n        for ( var i = 0; i &lt; imageData.length; ++i )\n        {\n            formData += String.fromCharCode( imageData[ i ] &amp; 0xff );\n        }\n        formData += '\\r\\n';\n        formData += '--' + boundary + '\\r\\n';\n        formData += 'Content-Disposition: form-data; name=\"message\"\\r\\n\\r\\n';\n        formData += message + '\\r\\n'\n        formData += '--' + boundary + '--\\r\\n';\n\n        var xhr = new XMLHttpRequest();\n        xhr.open( 'POST', https://graph.facebook.com/ + {PAGE_ID} + \"/photos?access_token=\" + authToken, true );\n        xhr.onload = function() {\n            // ... Fill in your own\n            //Image was posted \n           console.log(xhr.responseText);\n        };\n        xhr.onerror = function(){\n            console.log(\"Error while sending the image to Facebook\");\n        };\n        xhr.setRequestHeader( \"Content-Type\", \"multipart/form-data; boundary=\" + boundary );\n        xhr.sendAsBinary( formData );\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Im trying to upload a base64 image to a FaceBook page using Node.js. I have managed to get the upload working with all the multipart data etc should I read the file from the filesystem (ie. using fs.readFileSync('c:\\a.jpg')</p>\n\n<p>However, should I use the base64 encoded image and try upload it, it give me the following error : <code>{\"error\":{\"message\":\"(#1) An unknown error occurred\",\"type\":\"OAuthException\",\"code\":1}}</code></p>\n\n<p>I have tried converting it to binary by <code>new Buffer(b64string, 'base64');</code> and uploading that, but no luck.</p>\n\n<p>I have been struggling with this for 3 days now, so anyhelp would be greatly appreciated.</p>\n\n<p>Edit : If anyone also knows how I could convert the base64 to binary and successfully upload it, that would also work for me.</p>\n\n<p>Thanks very much</p>\n\n<p>Edit : Code Snippet</p>\n\n<pre><code>var postDetails = separator + newlineConstant + 'Content-Disposition: form-data;name=\"access_token\"' + newlineConstant + newlineConstant + accessToken + newlineConstant + separator;\n\npostDetails = postDetails + newlineConstant + 'Content-Disposition: form-data; name=\"message\"' + newlineConstant + newlineConstant + message + newlineConstant;\n\n//Add the Image information\nvar fileDetailsString = '';\nvar index = 0;\nvar multipartBody = new Buffer(0);\nimages.forEach(function (currentImage) {\n    fileDetailsString = fileDetailsString + separator + newlineConstant + 'Content-Disposition: file; name=\"source\"; filename=\"Image' + index + '\"' + newlineConstant + 'Content-Type: image/jpeg' + newlineConstant + newlineConstant;\n    index++;\n\n    multipartBody = Buffer.concat([multipartBody, new Buffer(fileDetailsString), currentImage]); //This is what I would use if Bianry data was passed in \n\n    currentImage = new Buffer (currentImage.toString('base64'), 'base64'); // The following lines are what I would use for base64 image being passed in (The appropriate lines would be enabled/disabled if I was using Binary/base64)\n    multipartBody = Buffer.concat([multipartBody, new Buffer(fileDetailsString), currentImage]);\n});\n\nmultipartBody = Buffer.concat([new Buffer(postDetails), multipartBody, new Buffer(footer)]);\n</code></pre>\n",
            "last_activity_date": 1419375641,
            "question_id": 16214300,
            "score": 11,
            "tags": [
                "javascript",
                "node.js",
                "facebook-graph-api",
                "encoding",
                "base64"
            ],
            "title": "Upload Base64 Image Facebook Graph API"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You could try to retrieve the mouse coordinates in your click event and then retrieve an element by hiding your overlay, use <code>document.elementFromPoint(x, y)</code> and then redisplay the overlay.</p>\n\n<p>See this SO question for more info about elementFromPoint: </p>\n\n<p><a href=\"http://stackoverflow.com/questions/1569775/how-do-i-find-the-dom-node-that-is-at-a-given-x-y-position-hit-test\">How do I find the DOM node that is at a given (X,Y) position? (Hit test)</a></p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>You could assign a mouse click event to the covering div, then iterate through all elements that you know might be underneath, inspecting their position, width, and height to see if that location of the mouse click was within their borders, and if it was, call their onclick event.</p>\n\n<p>To make the subset of possible elements smaller, you could give clickable elements that might be under the div, a special class.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I see you are using \"rain.24.png\" is the overlay animated? As in you are repositioning the images to simulate rain? If this is the case, then it might be best to stop/hide the animated on mousedown and then get the activate your function on the underlying elements using mouseup.</p>\n\n<p>If that isn't the case, then use Vincent's answer to get the element, then call the associated function or use <a href=\"http://docs.jquery.com/Events/trigger\" rel=\"nofollow\">trigger</a> to simulate the click</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This can be solved using CSS:</p>\n\n<pre><code>div { pointer-events:none; }\n</code></pre>\n\n<p>More information here: <a href=\"https://developer.mozilla.org/en-US/docs/CSS/pointer-events\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/CSS/pointer-events</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Is it possible to pass mouse clicks through an overlaying element: -</p>\n\n<pre><code>&lt;div style=\"z-index: 100; background: url('../images/rain.24.png'); width: 100%; height: 100%; top: 0; bottom: 0; left: 0; right: 0;\"&gt;&amp;nbsp;&lt;/div&gt;\n</code></pre>\n\n<p>...pass mouse clicks beneath it to underlaying elements (e.g. a web page with images, links, etc)?</p>\n\n<p>Thinking of another way to word this... Is there any way of creating a purely aesthetic overlay/layer in HTML(5), CSS(3) and/or JavaScript/jQuery?</p>\n\n<p>Thanks in advance, and sorry if this question isn't too clear.</p>\n\n<p>Peace.</p>\n",
            "last_activity_date": 1422043561,
            "question_id": 1737480,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "html5",
                "css3"
            ],
            "title": "Passing mouse clicks through an overlaying element &lt;div&gt;"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<ol>\n<li><p>Set the position to \"absolute\". This will allow \"top\" and \"left\" to position the divs from (0, 0). Using \"relative\" will position the divs from where they would normally be laid out.</p></li>\n<li><p>Change the center point of your circle from (0, 0) to something else, like (250, 250).</p>\n\n<pre><code>circleArray[i].posx = 250 + Math.round((150*Math.cos(i*(2*Math.PI/15)))) + 'px';\ncircleArray[i].posy = 250 + Math.round((150*Math.sin(i*(2*Math.PI/15)))) + 'px';\ncircleArray[i].style.position = \"absolute\";\n</code></pre></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>First of all, the equation for a co-ordinate on a circle is simply:  </p>\n\n<pre><code>(x, y) = (r * cos(\u03b8), r * sin(\u03b8))\n</code></pre>\n\n<p>where, <code>r</code> is the radius of a circle and <code>\u03b8</code> is the angle in radians.</p>\n\n<hr>\n\n<p>The reason why your code is creating an eccentric ellipse is because when you assign the <code>.top</code> and <code>.left</code> CSS values, you are not considering that it will actually take the top-left corner as its reference. I've fixed your code and now it creates a perfect circle.</p>\n\n<h3>Changes made to your code:</h3>\n\n<ol>\n<li><p>Added an array <code>theta</code> that holds all the angles.</p>\n\n<pre><code>var theta = [0, Math.PI / 6, Math.PI / 4, Math.PI / 3, Math.PI / 2, 2 * (Math.PI / 3), 3 * (Math.PI / 4), 5 * (Math.PI / 6), Math.PI, 7 * (Math.PI / 6), 5 * (Math.PI / 4), 4 * (Math.PI / 3), 3 * (Math.PI / 2), 5 * (Math.PI / 3), 7 * (Math.PI / 4), 11 * (Math.PI / 6)];\n</code></pre>\n\n<p>The image below shows all the angles I've used.</p>\n\n<p><img src=\"http://i.stack.imgur.com/IYxKm.gif\" alt=\"enter image description here\"></p></li>\n<li><p>Added an array <code>colors</code> that holds different colors.</p>\n\n<pre><code>var colors = ['red', 'green', 'purple', 'black', 'orange', 'yellow', 'maroon', 'grey', 'lightblue', 'tomato', 'pink', 'maroon', 'cyan', 'magenta', 'blue', 'chocolate', 'DarkSlateBlue'];\n</code></pre></li>\n<li><p>Made changes to your trigonometric equations.</p>\n\n<pre><code>circleArray[i].posx = Math.round(radius * (Math.cos(theta[i]))) + 'px';\ncircleArray[i].posy = Math.round(radius * (Math.sin(theta[i]))) + 'px';\n</code></pre></li>\n<li><p>Changed the way <code>.top</code> and <code>.left</code> are assigned.</p>\n\n<pre><code>circleArray[i].style.top = ((mainHeight / 2) - parseInt(circleArray[i].posy.slice(0, -2))) + 'px';\ncircleArray[i].style.left = ((mainHeight / 2) + parseInt(circleArray[i].posx.slice(0, -2))) + 'px';\n</code></pre>\n\n<p>where <code>mainHeight</code> is the height of the <code>#main</code> <code>div</code>.</p></li>\n</ol>\n\n<hr>\n\n<h1>[1] 16 <code>div</code>s</h1>\n\n<h2>Demo on <a href=\"http://jsfiddle.net/fxdqq8ch/1/\">Fiddle</a></h2>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var setup = function() {\r\n  var radius = 150;\r\n  var main = document.getElementById('main');\r\n  var mainHeight = parseInt(window.getComputedStyle(main).height.slice(0, -2));\r\n  var theta = [0, Math.PI / 6, Math.PI / 4, Math.PI / 3, Math.PI / 2, 2 * (Math.PI / 3), 3 * (Math.PI / 4), 5 * (Math.PI / 6), Math.PI, 7 * (Math.PI / 6), 5 * (Math.PI / 4), 4 * (Math.PI / 3), 3 * (Math.PI / 2), 5 * (Math.PI / 3), 7 * (Math.PI / 4), 11 * (Math.PI / 6)];\r\n  var circleArray = [];\r\n  var colors = ['red', 'green', 'purple', 'black', 'orange', 'yellow', 'maroon', 'grey', 'lightblue', 'tomato', 'pink', 'maroon', 'cyan', 'magenta', 'blue', 'chocolate', 'DarkSlateBlue'];\r\n  for (var i = 0; i &lt; 16; i++) {\r\n    var circle = document.createElement('div');\r\n    circle.className = 'circle number' + i;\r\n    circleArray.push(circle);\r\n    circleArray[i].posx = Math.round(radius * (Math.cos(theta[i]))) + 'px';\r\n    circleArray[i].posy = Math.round(radius * (Math.sin(theta[i]))) + 'px';\r\n    circleArray[i].style.position = \"absolute\";\r\n    circleArray[i].style.backgroundColor = colors[i];\r\n    circleArray[i].style.top = ((mainHeight / 2) - parseInt(circleArray[i].posy.slice(0, -2))) + 'px';\r\n    circleArray[i].style.left = ((mainHeight / 2) + parseInt(circleArray[i].posx.slice(0, -2))) + 'px';\r\n    main.appendChild(circleArray[i]);\r\n  }\r\n};\r\nsetup();</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>div#main {\r\n  height: 300px;\r\n  width: 300px;\r\n  position: absolute;\r\n  margin: 0 auto;\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  left: 50%;\r\n}\r\ndiv.circle {\r\n  position: absolute;\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 2px solid black;\r\n  border-radius: 50%;\r\n}\r\nbody {\r\n  margin: 0 auto;\r\n  background: papayawhip;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"main\"&gt;&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<hr>\n\n<h1>[2] 15 <code>div</code>s Positioned Evenly</h1>\n\n<h2>Demo on <a href=\"http://jsfiddle.net/yfcu87og/1/\">Fiddle</a></h2>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var setup = function() {\r\n  var radius = 150;\r\n  var main = document.getElementById('main');\r\n  var mainHeight = parseInt(window.getComputedStyle(main).height.slice(0, -2));\r\n  var theta = [0, (2 * (Math.PI / 15)), (4 * (Math.PI / 15)), (2 * (Math.PI / 5)), (8 * (Math.PI / 15)), (2 * (Math.PI / 3)), (4 * (Math.PI / 5)), (14 * (Math.PI / 15)), (16 * (Math.PI / 15)), (6 * (Math.PI / 5)), (4 * (Math.PI / 3)), (22 * (Math.PI / 15)), (8 * (Math.PI / 5)), (26 * (Math.PI / 15)), (28 * (Math.PI / 15))];\r\n  var circleArray = [];\r\n  var colors = ['red', 'green', 'purple', 'black', 'orange', 'yellow', 'maroon', 'grey', 'lightblue', 'tomato', 'pink', 'maroon', 'cyan', 'magenta', 'blue', 'chocolate', 'DarkSlateBlue'];\r\n  for (var i = 0; i &lt; 15; i++) {\r\n    var circle = document.createElement('div');\r\n    circle.className = 'circle number' + i;\r\n    circleArray.push(circle);\r\n    circleArray[i].posx = Math.round(radius * (Math.cos(theta[i]))) + 'px';\r\n    circleArray[i].posy = Math.round(radius * (Math.sin(theta[i]))) + 'px';\r\n    circleArray[i].style.position = \"absolute\";\r\n    circleArray[i].style.backgroundColor = colors[i];\r\n    circleArray[i].style.top = ((mainHeight / 2) - parseInt(circleArray[i].posy.slice(0, -2))) + 'px';\r\n    circleArray[i].style.left = ((mainHeight / 2) + parseInt(circleArray[i].posx.slice(0, -2))) + 'px';\r\n    main.appendChild(circleArray[i]);\r\n  }\r\n};\r\nsetup();</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>div#main {\r\n  height: 300px;\r\n  width: 300px;\r\n  position: absolute;\r\n  margin: 0 auto;\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  left: 50%;\r\n}\r\ndiv.circle {\r\n  position: absolute;\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 2px solid black;\r\n  border-radius: 50%;\r\n}\r\nbody {\r\n  margin: 0 auto;\r\n  background: papayawhip;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"main\"&gt;&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<hr>\n\n<h1>[3] Even Better - 24 <code>div</code>s</h1>\n\n<h2>Demo on <a href=\"http://jsfiddle.net/t9x4n04f/1/\">Fiddle</a></h2>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var setup = function() {\r\n  var radius = 150;\r\n  var main = document.getElementById('main');\r\n  var mainHeight = parseInt(window.getComputedStyle(main).height.slice(0, -2));\r\n  var theta = [0, Math.PI / 12, Math.PI / 6, Math.PI / 4, Math.PI / 3, 5 * (Math.PI / 12), Math.PI / 2, 7 * (Math.PI / 12), 2 * (Math.PI / 3), 3 * (Math.PI / 4), 5 * (Math.PI / 6), 11 * (Math.PI / 12), Math.PI, 13 * (Math.PI / 12), 7 * (Math.PI / 6), 5 * (Math.PI / 4), 4 * (Math.PI / 3), 17 * (Math.PI / 12), 3 * (Math.PI / 2), 19 * (Math.PI / 12), 5 * (Math.PI / 3), 7 * (Math.PI / 4), 11 * (Math.PI / 6), 23 * (Math.PI / 12)];\r\n  var circleArray = [];\r\n  var colors = ['red', 'green', 'purple', 'black', 'orange', 'yellow', 'maroon', 'grey', 'lightblue', 'tomato', 'pink', 'maroon', 'cyan', 'magenta', 'blue', 'chocolate', 'darkslateblue', 'coral', 'blueviolet', 'burlywood', 'cornflowerblue', 'crimson', 'darkgoldenrod', 'olive', 'sienna'];\r\n  for (var i = 0; i &lt;= 23; i++) {\r\n    var circle = document.createElement('div');\r\n    circle.className = 'circle number' + i;\r\n    circleArray.push(circle);\r\n    circleArray[i].posx = Math.round(radius * (Math.cos(theta[i]))) + 'px';\r\n    circleArray[i].posy = Math.round(radius * (Math.sin(theta[i]))) + 'px';\r\n    circleArray[i].style.position = \"absolute\";\r\n    circleArray[i].style.backgroundColor = colors[i];\r\n    circleArray[i].style.top = ((mainHeight / 2) - parseInt(circleArray[i].posy.slice(0, -2))) + 'px';\r\n    circleArray[i].style.left = ((mainHeight / 2) + parseInt(circleArray[i].posx.slice(0, -2))) + 'px';\r\n    main.appendChild(circleArray[i]);\r\n  }\r\n};\r\nsetup();</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>div#main {\r\n  height: 300px;\r\n  width: 300px;\r\n  position: absolute;\r\n  margin: 0 auto;\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  left: 50%;\r\n}\r\ndiv.circle {\r\n  position: absolute;\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 2px solid black;\r\n  border-radius: 50%;\r\n}\r\nbody {\r\n  margin: 0 auto;\r\n  background: papayawhip;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"main\"&gt;&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<hr>\n\n<h1>[4] And it keeps getting better - Dynamically Position any number of <code>div</code>s evenly</h1>\n\n<h2>Demo on <a href=\"http://jsfiddle.net/cy8otm6d/5/\">Fiddle</a></h2>\n\n<p>The function <code>generate(n, r, id)</code> takes three arguments: <code>n</code> - number of <code>div</code>s, <code>r</code> - radius and <code>id</code> - <code>main</code> in our case.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var theta = [];\r\n\r\nvar setup = function(n, r, id) {\r\n  var main = document.getElementById(id);\r\n  var mainHeight = parseInt(window.getComputedStyle(main).height.slice(0, -2));\r\n  var circleArray = [];\r\n  var colors = ['red', 'green', 'purple', 'black', 'orange', 'yellow', 'maroon', 'grey', 'lightblue', 'tomato', 'pink', 'maroon', 'cyan', 'magenta', 'blue', 'chocolate', 'darkslateblue', 'coral', 'blueviolet', 'burlywood', 'cornflowerblue', 'crimson', 'darkgoldenrod', 'olive', 'sienna', 'red', 'green', 'purple', 'black', 'orange', 'yellow', 'maroon', 'grey', 'lightblue', 'tomato', 'pink', 'maroon', 'cyan', 'magenta', 'blue', 'chocolate', 'darkslateblue', 'coral', 'blueviolet', 'burlywood', 'cornflowerblue', 'crimson', 'darkgoldenrod', 'olive', 'sienna'];\r\n  for (var i = 0; i &lt; n; i++) {\r\n    var circle = document.createElement('div');\r\n    circle.className = 'circle number' + i;\r\n    circleArray.push(circle);\r\n    circleArray[i].posx = Math.round(r * (Math.cos(theta[i]))) + 'px';\r\n    circleArray[i].posy = Math.round(r * (Math.sin(theta[i]))) + 'px';\r\n    circleArray[i].style.position = \"absolute\";\r\n    circleArray[i].style.backgroundColor = colors[i];\r\n    circleArray[i].style.top = ((mainHeight / 2) - parseInt(circleArray[i].posy.slice(0, -2))) + 'px';\r\n    circleArray[i].style.left = ((mainHeight / 2) + parseInt(circleArray[i].posx.slice(0, -2))) + 'px';\r\n    main.appendChild(circleArray[i]);\r\n  }\r\n};\r\n\r\nvar generate = function(n, r, id) {\r\n  var frags = 360 / n;\r\n  for (var i = 0; i &lt;= n; i++) {\r\n    theta.push((frags / 180) * i * Math.PI);\r\n  }\r\n  setup(n, r, id)\r\n}\r\ngenerate(40, 150, 'main');</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>div#main {\r\n  height: 300px;\r\n  width: 300px;\r\n  position: absolute;\r\n  margin: 0 auto;\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  left: 50%;\r\n}\r\ndiv.circle {\r\n  position: absolute;\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 2px solid black;\r\n  border-radius: 50%;\r\n}\r\nbody {\r\n  margin: 0 auto;\r\n  background: papayawhip;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"main\"&gt;&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<hr>\n\n<h1>[5] Dynamically Position any number of <code>div</code>s on an Ellipse</h1>\n\n<p>The equation for a co-ordinate on an ellipse is:</p>\n\n<p><code>(x, y) = (r<sub>x</sub> * cos(\u03b8), r<sub>y</sub> * sin(\u03b8))</code></p>\n\n<p>where, <code>r<sub>x</sub></code> is the radius along X-axis and <code>r<sub>y</sub></code> is the radius along Y-axis.</p>\n\n<hr>\n\n<p>In this case, the function <code>generate(n, rx, ry, id)</code> takes four arguments, where <code>n</code> is the number of <code>div</code>s, <code>rx</code> and <code>ry</code> are the radii along the X and Y-axis respectively and finally <code>id</code> is the <code>id</code> of the <code>div</code> that you want to append your elliptically arranged <code>div</code>s in.</p>\n\n<h2>Demo on <a href=\"http://jsfiddle.net/55ukqboa/1/\">Fiddle</a></h2>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var theta = [];\r\n\r\nvar setup = function(n, rx, ry, id) {\r\n  var main = document.getElementById(id);\r\n  var mainHeight = parseInt(window.getComputedStyle(main).height.slice(0, -2));\r\n  var circleArray = [];\r\n  var colors = ['red', 'green', 'purple', 'black', 'orange', 'yellow', 'maroon', 'grey', 'lightblue', 'tomato', 'pink', 'maroon', 'cyan', 'magenta', 'blue', 'chocolate', 'darkslateblue', 'coral', 'blueviolet', 'burlywood', 'cornflowerblue', 'crimson', 'darkgoldenrod', 'olive', 'sienna', 'red', 'green', 'purple', 'black', 'orange', 'yellow', 'maroon', 'grey', 'lightblue', 'tomato', 'pink', 'maroon', 'cyan', 'magenta', 'blue', 'chocolate', 'darkslateblue', 'coral', 'blueviolet', 'burlywood', 'cornflowerblue', 'crimson', 'darkgoldenrod', 'olive', 'sienna'];\r\n  for (var i = 0; i &lt; n; i++) {\r\n    var circle = document.createElement('div');\r\n    circle.className = 'circle number' + i;\r\n    circleArray.push(circle);\r\n    circleArray[i].posx = Math.round(rx * (Math.cos(theta[i]))) + 'px';\r\n    circleArray[i].posy = Math.round(ry * (Math.sin(theta[i]))) + 'px';\r\n    circleArray[i].style.position = \"absolute\";\r\n    circleArray[i].style.backgroundColor = colors[i];\r\n    circleArray[i].style.top = ((mainHeight / 2) - parseInt(circleArray[i].posy.slice(0, -2))) + 'px';\r\n    circleArray[i].style.left = ((mainHeight / 2) + parseInt(circleArray[i].posx.slice(0, -2))) + 'px';\r\n    main.appendChild(circleArray[i]);\r\n  }\r\n};\r\n\r\nvar generate = function(n, rx, ry, id) {\r\n  var frags = 360 / n;\r\n  for (var i = 0; i &lt;= n; i++) {\r\n    theta.push((frags / 180) * i * Math.PI);\r\n  }\r\n  setup(n, rx, ry, id)\r\n}\r\ngenerate(16, 150, 75, 'main');</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>div#main {\r\n  height: 300px;\r\n  width: 300px;\r\n  position: absolute;\r\n  margin: 0 auto;\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  left: 50%;\r\n}\r\ndiv.circle {\r\n  position: absolute;\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 2px solid black;\r\n  border-radius: 50%;\r\n}\r\nbody {\r\n  margin: 0 auto;\r\n  background: papayawhip;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"main\"&gt;&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<h2>Other approach without JS</h2>\n\n<p>chipChocolate.py's anser is pretty complete but there is an other way to achieve your aim. It is simpler and doesn't require JS.</p>\n\n<p>The point is to think <strong>\"circle\" and rotation</strong> rather than rely on <code>[x,y]</code> coordinates :</p>\n\n<p>You need to nest all the elements and apply a rotation to them. As they are nested the <code>n + 1</code> element will rotate according to it's direct parent's rotation. Here is a <strong><a href=\"http://jsfiddle.net/webtiki/xcyq50yv/\">DEMO</a></strong> : </p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.circle, .circle div {\r\n    width:24px; height:300px;\r\n    position:absolute;\r\n    left:50%; top:50px;\r\n}\r\n.circle:before, .circle div:before {\r\n    content:'';\r\n    display:block;\r\n    width:20px; height:20px;\r\n    border: 2px solid black;\r\n    border-radius: 100%;\r\n}\r\n.circle div {\r\n    top:0; left:0;\r\n    -webkit-transform : rotate(24deg);\r\n    -ms-transform : rotate(24deg);\r\n    transform : rotate(24deg);\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div class=\"circle\"&gt;\r\n    &lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;\r\n    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>The diameter of the circle is controled by the height of the elements (in the demo <code>height:300px</code>) you can make that a percentage to make the circle responsive (see below).</p>\n\n<p>The rotation must be set according to the number of elements you want around the circle. In the demo 15 elements so <code>rotation = 360 / 15 = 24deg</code>.</p>\n\n<p>If you have a dynamic number of elements, you may use JS to add them and to calculate the rotation angle needed.</p>\n\n<hr>\n\n<h2>Responsive example</h2>\n\n<p><strong><a href=\"http://jsfiddle.net/webtiki/xcyq50yv/3/\">DEMO</a></strong></p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.circle{\r\n    position:relative;\r\n    width:5%;padding-bottom:50%;\r\n    margin-left:47.5%;\r\n}\r\n.circle div {\r\n    position:absolute;\r\n    top:0; left:0;\r\n    width:100%; height:100%;\r\n    -webkit-transform : rotate(24deg);\r\n    -ms-transform : rotate(24deg);\r\n    transform : rotate(24deg);\r\n}\r\n.circle:before, .circle div:before {\r\n    content:'';\r\n    position:absolute;\r\n    top:0; left:0;\r\n    width:100%; padding-bottom:100%;\r\n    border-radius: 100%;\r\n    border: 2px solid teal;\r\n    background:gold;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div class=\"circle\"&gt;\r\n    &lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;\r\n    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I am trying to position 15 <code>div</code> elements evenly in a circle with a radius of <code>150px</code>. I'm using the following code, which seems to give an oddly eccentric ellipse that overlaps.</p>\n\n<h2><a href=\"http://jsfiddle.net/4qt5uaz1/3/\" rel=\"nofollow\">Fiddle</a></h2>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>// Hold a global reference to the div#main element.  Initially assign it ... somewhere useful :)\r\nvar main = document.getElementById('main');\r\nvar circleArray = [];\r\n\r\n// Move a circle based on the distance of the approaching mouse\r\nvar moveCircle = function(circle, dx, dy) {\r\n\r\n};\r\n\r\n// Look at all the circle elements, and figure out if any of them have to move.\r\nvar checkMove = function() {\r\n\r\n};\r\nvar setup = function() {\r\n  for (var i = 0; i &lt; 15; i++) {\r\n    //create element, add it to the array, and assign it's coordinates trigonometrically.\r\n    //Then add it to the \"main\" div\r\n    var circle = document.createElement('div');\r\n    circle.className = 'circle number' + i;\r\n    circleArray.push(circle);\r\n    circleArray[i].posx = Math.round((150 * Math.cos(i * (2 * Math.PI / 15)))) + 'px';\r\n    circleArray[i].posy = Math.round((150 * Math.sin(i * (2 * Math.PI / 15)))) + 'px';\r\n    circleArray[i].style.position = \"relative\";\r\n    circleArray[i].style.top = circleArray[i].posy;\r\n    circleArray[i].style.left = circleArray[i].posx;\r\n    main.appendChild(circleArray[i]);\r\n  }\r\n};\r\nsetup();\r\nwindow.addEventListener('load', function() {\r\n\r\n});</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>div {\r\n  box-sizing: border-box;\r\n}\r\ndiv#main {\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n}\r\ndiv.circle {\r\n  position: absolute;\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 2px solid black;\r\n  border-radius: 10px;\r\n  -webkit-border-radius: 10px;\r\n  -moz-border-radius: 10px;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"main\"&gt;&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Any suggestions as to what I might be doing wrong?</p>\n",
            "last_activity_date": 1420642618,
            "question_id": 26599782,
            "score": 9,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "Positioning divs in a circle using JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can do this by providing a function to the <code>source</code> option of autocomplete:</p>\n\n<pre><code>var availableTags = [ /* Snip */];\n\nfunction split(val) {\n    return val.split(/@\\s*/);\n}\n\nfunction extractLast(term) {\n    return split(term).pop();\n}\n\n$(\"#tags\")\n// don't navigate away from the field on tab when selecting an item\n.bind(\"keydown\", function(event) {\n    if (event.keyCode === $.ui.keyCode.TAB &amp;&amp; $(this).data(\"autocomplete\").menu.active) {\n        event.preventDefault();\n    }\n}).autocomplete({\n    minLength: 0,\n    source: function(request, response) {\n        var term = request.term,\n            results = [];\n\n        /* If the user typed an \"@\": */\n        if (term.indexOf(\"@\") &gt;= 0) {\n            term = extractLast(request.term);\n            /* If they've typed anything after the \"@\": */\n            if (term.length &gt; 0) {\n                results = $.ui.autocomplete.filter(\n                availableTags, term);\n            /* Otherwise, tell them to start typing! */\n            } else {\n                results = ['Start typing...'];\n            }\n        }\n        /* Call the callback with the results: */\n        response(results);\n    },\n    focus: function() {\n        // prevent value inserted on focus\n        return false;\n    },\n    select: function(event, ui) {\n        var terms = split(this.value);\n        // remove the current input\n        terms.pop();\n        // add the selected item\n        terms.push(ui.item.value);\n        // add placeholder to get the comma-and-space at the end\n        terms.push(\"\");\n        this.value = terms.join(\"\");\n        return false;\n    }\n});\n</code></pre>\n\n<p>Here's a working example: <a href=\"http://jsfiddle.net/BfAtM/2/\">http://jsfiddle.net/BfAtM/2/</a></p>\n\n<p>Note that this is <em>almost</em> identical to <a href=\"http://jqueryui.com/demos/autocomplete/#multiple\">this demo</a>, except for the requirement for the user to type \"@\". That code is located inside the <code>source</code> option argument.</p>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>As of the date of this note, I recommend the <strong>jquery.mentionsInput</strong> plugin. It supports @mention tagging just like on facebook, complete with avatars and either local or ajax data. </p>\n\n<p><a href=\"http://podio.github.com/jquery-mentions-input/\" rel=\"nofollow\">http://podio.github.com/jquery-mentions-input/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using jquery UI AutoComplete to allow users to tag friends using @mentions.  By default, the autocomplete suggestions appear when as soon you put focus on the textbox.  How can you make the suggestions appear only when you type \"@\"?  This is the code I have so far:</p>\n\n<pre><code>var availableTags = [\n            \"ActionScript\",\n            \"AppleScript\",\n            \"Asp\",\n            \"BASIC\",\n            ];\n$(\"#tags\").autocomplete({\n    source: availableTags,\n    minLength: 0\n});\n</code></pre>\n",
            "last_activity_date": 1350415938,
            "question_id": 5972958,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "jquery-plugins",
                "autocomplete",
                "jquery-autocomplete"
            ],
            "title": "Implementing jquery UI autocomplete to show suggestions when you type &quot;@&quot;"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If you have all the content in the array then remove all the content from the wrapper div <em>container</em> in your code. then start adding the received divs one by one:</p>\n\n<pre><code> var v = $(ar[0]).append(ar[1]).append(ar[2]);\n $(\"#container\").html(v);\n</code></pre>\n\n<p>If this does not works then look into <a href=\"http://stackoverflow.com/questions/158070/jquery-how-to-position-one-element-relative-to-another\">this thread</a> that discusses about positioning elements relative to other elements.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>[Edit], This is tested and works:</p>\n\n<pre><code>var order = [3,2,1,4];\nvar container = $(\"#container\");\nvar children = container.children();\ncontainer.empty();\nfor (var i = 0; i &lt; order.length; i++){\n    container.append(children[order[i]-1])\n}\n</code></pre>\n\n<p>The i-1 is necessary since your ordering starts at 1 but arrays are indexed from 0.</p>\n\n<p>Thanks to J-P and Russ Cam for making me look at it again.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>My plugin version - <strong><a href=\"http://jsbin.com/ihuqo\">Working Demo</a></strong></p>\n\n<p>Takes an array and optional id prefix and reorders elements whose ids correspond to the order of (id prefix) + values inside the array. Any values in the array that don't have an element with the corresponding id will be ignored, and any child elements that do not have an id within the array will be removed.</p>\n\n<pre><code>(function($) {\n\n$.fn.reOrder = function(array, prefix) {\n  return this.each(function() {\n    prefix = prefix || \"\";\n\n    if (array) {    \n      for(var i=0; i &lt; array.length; i++) \n        array[i] = $('#' + prefix + array[i]);\n\n      $(this).empty();  \n\n      for(var i=0; i &lt; array.length; i++)\n        $(this).append(array[i]);      \n    }\n  });    \n}\n})(jQuery);\n</code></pre>\n\n<p>Code from the demo</p>\n\n<p><strong>jQuery</strong></p>\n\n<pre><code> $(function() {\n  $('#go').click(function() {\n\n    var order = $('#order').val() == \"\"? null: $('#order').val().split(\",\");\n    $('#container').reOrder(order, 'someid');\n  });\n});\n\n(function($) {\n\n$.fn.reOrder = function(array, prefix) {\n  return this.each(function() {\n    prefix = prefix || \"\";\n\n    if (array) {    \n      for(var i=0; i &lt; array.length; i++) \n        array[i] = $('#' + prefix + array[i]);\n\n      $(this).empty();  \n\n      for(var i=0; i &lt; array.length; i++)\n        $(this).append(array[i]);      \n    }\n  });    \n}\n})(jQuery);\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"&gt;\n&lt;head&gt;\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;title&gt;reOrder Demo&lt;/title&gt;\n&lt;meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;style type=\"text/css\" media=\"screen\"&gt;\nbody { background-color: #fff; font: 16px Helvetica, Arial; color: #000; }\ndiv.style { width: 200px; height: 100px; border: 1px solid #000000; margin: 5px; }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"container\"&gt;\n&lt;div id=\"someid1\" class=\"style\" style=\"background-color:green;\"&gt;div1&lt;/div&gt;\n&lt;div id=\"someid2\" class=\"style\" style=\"background-color:blue;\"&gt;div2&lt;/div&gt;\n&lt;div id=\"someid3\" class=\"style\" style=\"background-color:red;\"&gt;div3&lt;/div&gt;\n&lt;div id=\"someid4\" class=\"style\" style=\"background-color:purple;\"&gt;div4&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;Pass in a comma separated list of numbers 1-4 to reorder divs&lt;/p&gt;\n&lt;input id=\"order\" type=\"text\" /&gt;\n&lt;input id=\"go\" type=\"button\" value=\"Re-Order\" /&gt;\n\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>Here's a jQuery-less solution:</p>\n\n<pre><code>function appendNodesById(parent, ids) {\n    for(var i = 0, len = ids.length; i &lt; len; ++i)\n    \tparent.appendChild(document.getElementById(ids[i]));\n}\n\nappendNodesById(document.getElementById('container'),\n    ['someid4', 'someid2', 'someid3', 'someid1']);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have the following structure:</p>\n\n<pre><code>&lt;div id=\"container\"&gt;\n&lt;div id=\"someid1\" style=\"float:right\"&gt;&lt;/div&gt;\n&lt;div id=\"someid2\" style=\"float:right\"&gt;&lt;/div&gt;\n&lt;div id=\"someid3\" style=\"float:right\"&gt;&lt;/div&gt;\n&lt;div id=\"someid4\" style=\"float:right\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Now someid is acually a unique id for that div. Now i receive an array which has a different order say someid 3,2,1,4, then how do i move these divs around to match the new order using jQuery?</p>\n\n<p>Thankyou very much for your time.</p>\n",
            "last_activity_date": 1243803170,
            "question_id": 929519,
            "score": 9,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Dynamically arranging divs using jQuery"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can use <code>download</code> attribute supported by modern browsera for <code>a</code> anchor element. First modify your HTML by adding an invisible anchor:</p>\n\n<pre><code>&lt;a id=\"dlink\"  style=\"display:none;\"&gt;&lt;/a&gt;\n\n&lt;input type=\"button\" onclick=\"tableToExcel('tablename', 'name', 'myfile.xls')\" value=\"Export to Excel\"&gt;\n</code></pre>\n\n<p>Notice also that the call to function <code>tableToExcel</code> now has 3rd parameter - where you specify file name.</p>\n\n<p>Now use this modified code of your original function:</p>\n\n<pre><code>var tableToExcel = (function () {\n        var uri = 'data:application/vnd.ms-excel;base64,'\n        , template = '&lt;html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"&gt;&lt;head&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&lt;x:ExcelWorkbook&gt;&lt;x:ExcelWorksheets&gt;&lt;x:ExcelWorksheet&gt;&lt;x:Name&gt;{worksheet}&lt;/x:Name&gt;&lt;x:WorksheetOptions&gt;&lt;x:DisplayGridlines/&gt;&lt;/x:WorksheetOptions&gt;&lt;/x:ExcelWorksheet&gt;&lt;/x:ExcelWorksheets&gt;&lt;/x:ExcelWorkbook&gt;&lt;/xml&gt;&lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;table&gt;{table}&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;'\n        , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }\n        , format = function (s, c) { return s.replace(/{(\\w+)}/g, function (m, p) { return c[p]; }) }\n        return function (table, name, filename) {\n            if (!table.nodeType) table = document.getElementById(table)\n            var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML }\n\n            document.getElementById(\"dlink\").href = uri + base64(format(template, ctx));\n            document.getElementById(\"dlink\").download = filename;\n            document.getElementById(\"dlink\").click();\n\n        }\n    })()\n</code></pre>\n\n<p>Notice last 3 code lines: Instead of assigning URL to window - they assign it to the new anchor, then use new <code>download</code> attribute to force download as the given file name and then simple call <code>click()</code> method of the anchor.</p>\n\n<p>Give it a try.</p>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<p>I'm trying to use this script to save a html table to an excel file. And it works fine, however it doesn't come up in the proper name, but rather with a random string.\nAnd I can't see why =/</p>\n\n<p>I call it with</p>\n\n<pre><code>&lt;input type=\"button\" onclick=\"tableToExcel('tablename', 'name')\" value=\"Export to Excel\"&gt;\n</code></pre>\n\n<p>code</p>\n\n<pre><code>var tableToExcel = (function() {\nvar uri = 'data:application/vnd.ms-excel;base64,'\n, template = '&lt;html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"&gt;&lt;head&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&lt;x:ExcelWorkbook&gt;&lt;x:ExcelWorksheets&gt;&lt;x:ExcelWorksheet&gt;&lt;x:Name&gt;{worksheet}&lt;/x:Name&gt;&lt;x:WorksheetOptions&gt;&lt;x:DisplayGridlines/&gt;&lt;/x:WorksheetOptions&gt;&lt;/x:ExcelWorksheet&gt;&lt;/x:ExcelWorksheets&gt;&lt;/x:ExcelWorkbook&gt;&lt;/xml&gt;&lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;table&gt;{table}&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;'\n, base64 = function(s) { return window.btoa(unescape(encodeURIComponent(s))) }\n, format = function(s, c) { return s.replace(/{(\\w+)}/g, function(m, p) { return c[p]; }) }\nreturn function(table, name) {\nif (!table.nodeType) table = document.getElementById(table)\nvar ctx = {worksheet: name || 'Worksheet', table: table.innerHTML}\nwindow.location.href = uri + base64(format(template, ctx))\n}\n})()\n</code></pre>\n",
            "last_activity_date": 1412184092,
            "question_id": 17126453,
            "score": 6,
            "tags": [
                "javascript",
                "html",
                "excel",
                "table"
            ],
            "title": "HTML Table to Excel Javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can always use a <code>type=text</code> and <code>display:none;</code> since Angular ignores hidden elements. As OP says, normally you wouldn't do this, but this seems like a special case.</p>\n\n<pre><code>&lt;input type=\"text\" name=\"someData\" ng-model=\"data\" style=\"display: none;\"/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>You cannot use double binding with hidden field.\nThe solution is to use brackets :</p>\n\n<pre><code>&lt;input type=\"hidden\" name=\"someData\" value=\"{{data}}\" /&gt; {{data}}\n</code></pre>\n\n<p>EDIT : See this thread on github : <a href=\"https://github.com/angular/angular.js/pull/2574\">https://github.com/angular/angular.js/pull/2574</a></p>\n\n<p>EDIT:</p>\n\n<p>Since Angular 1.2, you can use 'ng-value' directive to bind an expression to the value attribute of input. This directive should be used with input radio or checkbox but works well with hidden input.</p>\n\n<p>Here is the solution using ng-value:</p>\n\n<pre><code>&lt;input type=\"hidden\" name=\"someData\" ng-value=\"data\" /&gt;\n</code></pre>\n\n<p>Here is a fiddle using ng-value with an hidden input: <a href=\"http://jsfiddle.net/6SD9N\">http://jsfiddle.net/6SD9N</a></p>\n",
                    "is_accepted": true,
                    "score": 109
                },
                {
                    "body": "<p>I've found a nice solution written by Mike on <a href=\"http://www.sapiensworks.com/blog/post/2013/06/22/Binding-AngularJs-Model-to-Hidden-Fields.aspx\" rel=\"nofollow\">sapiensworks</a>. It is as simple as using a directive that watches for changes on your model:</p>\n\n<pre><code>.directive('ngUpdateHidden',function() {\n    return function(scope, el, attr) {\n        var model = attr['ngModel'];\n        scope.$watch(model, function(nv) {\n            el.val(nv);\n        });\n    };\n})\n</code></pre>\n\n<p>and then bind your input:</p>\n\n<pre><code>&lt;input type=\"hidden\" name=\"item.Name\" ng-model=\"item.Name\" ng-update-hidden /&gt;\n</code></pre>\n\n<p>But the solution provided by tymeJV could be better as input hidden doesn't fire change event in javascript as yycorman told on <a href=\"http://stackoverflow.com/questions/6533087/jquery-detect-value-change-on-hidden-input-field\">this</a> post, so when changing the value through a jQuery plugin will still work.</p>\n\n<p><strong>Edit</strong>\nI've changed the directive to apply the a new value back to the model when change event is triggered, so it will work as an input text.</p>\n\n<pre><code>.directive('ngUpdateHidden', function () {\n    return {\n        restrict: 'AE', //attribute or element\n        scope: {},\n        replace: true,\n        require: 'ngModel',\n        link: function ($scope, elem, attr, ngModel) {\n            $scope.$watch(ngModel, function (nv) {\n                elem.val(nv);\n            });\n            elem.change(function () { //bind the change event to hidden input\n                $scope.$apply(function () {\n                    ngModel.$setViewValue(  elem.val());\n                });\n            });\n        }\n    };\n})\n</code></pre>\n\n<p>so when you trigger <code>$(\"#yourInputHidden\").trigger('change')</code> event with jQuery, it will update the binded model as well.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In the controller:</p>\n\n<pre><code>$scope.entityId = $routeParams.entityId;\n</code></pre>\n\n<p>In the view:</p>\n\n<pre><code>&lt;input type=\"hidden\" name=\"entityId\" ng-model=\"entity.entityId\" ng-init=\"entity.entityId = entityId\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>For a specific use case I have to submit a single form the \"old way\". Means, I use a form with action=\"\". The response is streamed, so I am not reloading the page. I am completely aware that a typical AngularJS app would not submit a form that way, but so far I have no other choice.</p>\n\n<p>That said, i tried to populate some hidden fields from Angular:</p>\n\n<pre><code>&lt;input type=\"hidden\" name=\"someData\" ng-model=\"data\" /&gt; {{data}}\n</code></pre>\n\n<p>Please note, the correct value in data is shown.</p>\n\n<p>The form looks like a standard form:</p>\n\n<pre><code>&lt;form id=\"aaa\" name=\"aaa\" action=\"/reports/aaa.html\" method=\"post\"&gt;\n...\n&lt;input type=\"submit\" value=\"Export\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>If i hit submit, no value is sent to the server. If I change the input field to type \"text\" it works as expected. My assumption is the hidden field is not really populated, while the text field actually is shown due two-way-binding.</p>\n\n<p>Any ideas how I can submit a hidden field populated by AngularJS?</p>\n",
            "last_activity_date": 1404341691,
            "question_id": 18446359,
            "score": 63,
            "tags": [
                "javascript",
                "forms",
                "angularjs"
            ],
            "title": "AngularJS does not send hidden field value"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Unfortunately none of your links work :(</p>\n\n<p>Some insight though, attr is for all attributes. Prop is for properties.</p>\n\n<p>In older jQuerys (&lt;1.6), we just had attr. To get to DOM properties such as nodeName, selectedIndex, or defaultValue you had to do something like:</p>\n\n<pre><code>var elem = $(\"#foo\")[0];\nif ( elem ) {\n  index = elem.selectedIndex;\n}\n</code></pre>\n\n<p>That sucked, so we got <code>prop</code>:</p>\n\n<pre><code>index = $(\"#foo\").prop(\"selectedIndex\");\n</code></pre>\n\n<p>This was great, but annoyingly this wasn't backward compatible, as</p>\n\n<pre><code>&lt;input type=\"checkbox\" checked&gt;\n</code></pre>\n\n<p>has no attribute of <code>checked</code>, but it does have a property called `checked.</p>\n\n<p>So, in the final build of 1.6, <code>attr</code> does also do <code>prop</code> so that things didn't break. Some people wanted this to be a clean break, but I think that the right decision was made as things didn't break all over the place!</p>\n\n<p>Regarding:</p>\n\n<blockquote>\n  <p>Prop: The value in it's current state after any modifications via JavaScript</p>\n  \n  <p>Attr: The value as it was defined in the html on page load.</p>\n</blockquote>\n\n<p>This isn't always true, as many times the attribute is actually changed, but for properties such as checked, there isn't an attribute to change, so you need to use prop.</p>\n\n<p>References:</p>\n\n<p><a href=\"http://blog.jquery.com/2011/05/03/jquery-16-released/\">http://blog.jquery.com/2011/05/03/jquery-16-released/</a></p>\n\n<p><a href=\"http://ejohn.org/blog/jquery-16-and-attr\">http://ejohn.org/blog/jquery-16-and-attr</a></p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>I have tried this</p>\n\n<pre><code>console.log(element.prop(property));\nconsole.log(element.attr(property));\n</code></pre>\n\n<p>and it outputs as below</p>\n\n<pre><code>http://fiddle.jshell.net/test/\n/test/ \n</code></pre>\n\n<p>this may indicates that the <code>action</code> is normalized only when it is <strong>read</strong> with <code>prop</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is a clear case to see differences between .prop and .attr</p>\n\n<p>consider the HTML below :</p>\n\n<pre><code>&lt;form name=\"form\" action=\"#\"&gt;\n    &lt;input type=\"text\" name=\"action\" value=\"myvalue\" /&gt;\n    &lt;input type=\"submit\" /&gt;\n&lt;/form&gt;\n&lt;pre id=\"return\"&gt;\n&lt;/pre&gt;\n</code></pre>\n\n<p>and the JS below using jQuery :</p>\n\n<pre><code>$(document).ready(function(){\n    $(\"#return\").append(\"$('form').prop('action') : \" + $('form').prop('action') + '\\r\\n');\n    $(\"#return\").append(\"$('form').attr('action') : \" + $('form').attr('action') + '\\r\\n');\n    $(\"#return\").append(\"document.form.action : \" + document.form.action);\n});\n</code></pre>\n\n<p>$('form').prop('action') will return document.form.action node => HTMLInputElement <br>\n$('form').attr('action') will return action attribute => #</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>since jquery 1.6.1+ attr() returns/changes property like before 1.6. thus your tests do not make much sense.</p>\n\n<p>be aware of minor changes in return values. </p>\n\n<p>e.g. </p>\n\n<p>attr(\u2018checked\u2019): before 1.6 true/false is returend, since 1.6.1. \u201cchecked\u201d/undefined is returned.</p>\n\n<p>attr(\u2018selected\u2019): before 1.6 true/false is returned, since 1.6.1 \u201cselected\u201d/undefined is returned</p>\n\n<p>a detailed overview to this topic in german can be found here:</p>\n\n<p><a href=\"http://mabraham.de/jquery-prop-attr-val-richtig-verwenden/\" rel=\"nofollow\">http://mabraham.de/jquery-prop-attr-val-richtig-verwenden/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Now this isn't just another <em>What's the difference question</em>, I have <a href=\"http://jsfiddle.net/ZC3Lf/\">done some tests(http://jsfiddle.net/ZC3Lf/)</a> modifying the <code>prop</code> and <code>attr</code> of <code>&lt;form action=\"/test/\"&gt;&lt;/form&gt;\u200b</code>  with the output being:</p>\n\n<blockquote>\n  <p><strong>1) prop Modification test</strong><br>\n  Prop: <code>http://fiddle.jshell.net/test/1</code><br>\n  Attr: <code>http://fiddle.jshell.net/test/1</code>  </p>\n  \n  <p><strong>2) Attr Modification test</strong><br>\n  Prop: <code>http://fiddle.jshell.net/test/1</code><br>\n  Attr: <code>/test/1</code>  </p>\n  \n  <p><strong>3) Attr then Prop Modification test</strong><br>\n  Prop: <code>http://fiddle.jshell.net/test/11</code><br>\n  Attr: <code>http://fiddle.jshell.net/test/11</code>  </p>\n  \n  <p><strong>4) Prop then Attr Modification test</strong><br>\n  Prop: <code>http://fiddle.jshell.net/test/11</code><br>\n  Attr: <code>http://fiddle.jshell.net/test/11</code></p>\n</blockquote>\n\n<p>Now I am confused about a couple of things, as far as my knowledge goes:<br>\n<strong>Prop:</strong> The value in it's current state after any modifications via JavaScript<br>\n<strong>Attr</strong> The value as it was defined in the html on page load.</p>\n\n<p>Now if this is correct, </p>\n\n<ul>\n<li>Why does modifying the <code>prop</code> seem to make the <code>action</code> fully qualified, and conversely why does modifying the attribute not?</li>\n<li>Why does modifying the <code>prop</code> in <code>1)</code> modify the attribute, that one makes no sense to me? </li>\n<li>Why does modifying the <code>attr</code> in <code>2)</code> modify the property, are they meant to be linked that way?</li>\n</ul>\n\n<p><hr /></p>\n\n<h1>Test Code</h1>\n\n<p><strong>HTML</strong><br>\n    </p>\n\n<p><strong>JavaScript</strong>  </p>\n\n<pre><code>var element = $('form');\nvar property = 'action';\n\n/*You should not need to modify below this line */\n\nvar body = $('body');\nvar original = element.attr(property);\n\nbody.append('&lt;h1&gt;Prop Modification test&lt;/h1&gt;');\nelement.prop(property, element.prop(property) + 1);\n\nbody.append('Prop: '+element.prop(property)+'&lt;br /&gt;');\nbody.append('Attr: '+element.attr(property)+'&lt;hr /&gt;');\n\n//reset\nelement.prop(property, original);\nelement.attr(property, original);\n\nbody.append('&lt;h1&gt;Attr Modification test&lt;/h1&gt;');\nelement.attr(property, element.attr(property) + 1);\n\nbody.append('Prop: '+element.prop(property)+'&lt;br /&gt;');\nbody.append('Attr: '+element.attr(property)+'&lt;hr /&gt;');\n\n//reset\nelement.prop(property, original);\nelement.attr(property, original);\n\nbody.append('&lt;h1&gt;Attr then Prop Modification test&lt;/h1&gt;');\nelement.attr(property, element.attr(property) + 1);\nelement.prop(property, element.prop(property) + 1);\n\nbody.append('Prop: '+element.prop(property)+'&lt;br /&gt;');\nbody.append('Attr: '+element.attr(property)+'&lt;hr /&gt;');\n\n//reset\nelement.prop(property, original);\nelement.attr(property, original);\n\nbody.append('&lt;h1&gt;Prop then Attr Modification test&lt;/h1&gt;');\nelement.prop(property, element.prop(property) + 1);\nelement.attr(property, element.attr(property) + 1);\n\nbody.append('Prop: '+element.prop(property)+'&lt;br /&gt;');\nbody.append('Attr: '+element.attr(property)+'&lt;hr /&gt;');\n</code></pre>\n",
            "last_activity_date": 1406464545,
            "question_id": 13247058,
            "score": 49,
            "tags": [
                "javascript",
                "jquery",
                "attr",
                "prop"
            ],
            "title": "jQuery attr vs prop?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>A shiv just <code>createElement</code>'s the HTML5 elements. It has nothing to do with JSON. Try getting an actual JSON parser like json2.js from Crockford.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To answer the question in the title directly, yes IE8 supports <code>JSON.stringify()</code> natively.</p>\n\n<p>IE8 is the first version of IE to get this support, and the functionality is explained in detail by the dev team here:\n<a href=\"http://blogs.msdn.com/b/ie/archive/2008/09/10/native-json-in-ie8.aspx\">http://blogs.msdn.com/b/ie/archive/2008/09/10/native-json-in-ie8.aspx</a></p>\n\n<p>The answer the second part of the question, yes you would need to include alternate functionality for IE6/IE7.  Something like Modernizr can make it easy to check this.</p>\n\n<p>Also note if the user is in Compatibility View in IE8, the JSON object will not be available.</p>\n",
                    "is_accepted": false,
                    "score": 54
                },
                {
                    "body": "<p>If you try <code>JSON.stringify()</code> using IE 8 you need to ensure it is not working in compatibility mode. \nSee <a href=\"http://stackoverflow.com/questions/4715373/json-not-defined-internet-explorer-8\">JSON Not Defined (Internet Explorer 8)</a></p>\n\n<p>You'll need to add</p>\n\n<pre><code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=8\" /&gt;\n</code></pre>\n\n<p>to your page</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>You don't need to use conditionals to determine whether to include <a href=\"https://github.com/douglascrockford/JSON-js\" rel=\"nofollow\">json2.js</a> or not.  Take a look at the source code:</p>\n\n<pre><code>var JSON;\nif (!JSON) {\n    JSON = {};\n}\n\nif (typeof JSON.stringify !== 'function') {\n    JSON.stringify = function (value, replacer, space) {\n        // Code\n    }\n}\n\nif (typeof JSON.parse !== 'function') {\n    JSON.parse = function (text, reviver) {\n        // Code\n    }\n}\n</code></pre>\n\n<p>What this does is first check to see if <code>JSON</code> already exists as an object.  If not, then it creates a new object to house the JSON functions.  Then, it checks for a native implementation of <code>.stringify()</code> or <code>.parse()</code> exist.  If not, then it creates those functions.  </p>\n\n<p>Bottom line: if a native implementation exists, including <code>json2.js</code> will not overwrite the native implementation.  Otherwise, it'll add that functionality, so there's no reason you need to use conditionals, unless you are trying to minimize requests.  </p>\n\n<p><i><sub>(It might also be noted that IE10 does not support conditional statements, so I'd recommend against relying on them unless there isn't any alternative.)</sub></i></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><strong>There's a better solution...</strong></p>\n\n<p>This doesn't directly answer your question, it provides a complete solution to your problem instead.</p>\n\n<p>The <strong><a href=\"http://code.google.com/p/jquery-json/\" rel=\"nofollow\">jquery-json</a></strong> library provides a wrapper that uses the native JSON object implementation if it's available and falls back to it's own JSON implementation if it isn't. Meaning it'll work in any browser.</p>\n\n<p><strong>Here's the Usage Example from the Project's home page:</strong></p>\n\n<pre><code>var thing = {plugin: 'jquery-json', version: 2.3};\n\nvar encoded = $.toJSON( thing );\n// '{\"plugin\":\"jquery-json\",\"version\":2.3}'\nvar name = $.evalJSON( encoded ).plugin;\n// \"jquery-json\"\nvar version = $.evalJSON(encoded).version;\n// 2.3\n</code></pre>\n\n<p>The usage is very simple: toJSON stringifies the JS source; evalJSON converts JSON string data back to JavaScript objects.</p>\n\n<p>Of you look at the source, the implementation is surprisingly simple but it works very well. I have used it personally in a few projects.</p>\n\n<p>There's no need to do browser detection if it works in every browser.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>put following code in your js file ; </p>\n\n<pre><code>var JSON = JSON || {};\n\n// implement JSON.stringify serialization\nJSON.stringify = JSON.stringify || function (obj) {\n\nvar t = typeof (obj);\nif (t != \"object\" || obj === null) {\n\n    // simple data type\n    if (t == \"string\") obj = '\"'+obj+'\"';\n    return String(obj);\n\n}\nelse {\n\n    // recurse array or object\n    var n, v, json = [], arr = (obj &amp;&amp; obj.constructor == Array);\n\n    for (n in obj) {\n        v = obj[n]; t = typeof(v);\n\n        if (t == \"string\") v = '\"'+v+'\"';\n        else if (t == \"object\" &amp;&amp; v !== null) v = JSON.stringify(v);\n\n        json.push((arr ? \"\" : '\"' + n + '\":') + String(v));\n    }\n\n    return (arr ? \"[\" : \"{\") + String(json) + (arr ? \"]\" : \"}\");\n}\n};\n\n// implement JSON.parse de-serialization\nJSON.parse = JSON.parse || function (str) {\nif (str === \"\") str = '\"\"';\neval(\"var p=\" + str + \";\");\nreturn p;\n };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I need to use:</p>\n\n<pre><code>JSON.stringify()\n</code></pre>\n\n<p>which should be supported by Chrome, Safari, and Firefox. I think IE8 also has support for the JSON object. I think IE7 and 6 do not, so I'm doing this:</p>\n\n<pre><code>&lt;!--[if lt IE 8]&gt;\n    &lt;script src=\"http://www.json.org/json2.js\"&gt;&lt;/script&gt;\n&lt;![endif]--&gt;\n</code></pre>\n\n<p>so, I think this will import the external JavaScript only if IE6 &amp; 7. I looked at the URL where the script is hosted, they are including only if the IE version is less than 9:</p>\n\n<pre><code>http://code.google.com/p/html5shiv/\n&lt;!--[if lt IE 9]&gt;\n    &lt;script src=\"http://www.json.org/json2.js\"&gt;&lt;/script&gt;\n&lt;![endif]--&gt;\n</code></pre>\n\n<p>so should I be including this for IE 8 too?</p>\n",
            "last_activity_date": 1405691847,
            "question_id": 3326893,
            "score": 47,
            "tags": [
                "javascript"
            ],
            "title": "Is JSON.stringify() supported by IE 8?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You need to use <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify</code></a> to first serialize your object to JSON, and then specify the content-type so your server understands it's JSON. This should do the trick:</p>\n\n<pre><code>$.ajax({\n    url: url,\n    type: \"POST\",\n    data: JSON.stringify(data),\n    contentType: \"application/json\",\n    complete: callback\n});\n</code></pre>\n\n<p>Note that the <code>JSON</code> object is natively available in browsers that support JavaScript 1.7 / ECMAScript 5 or later. If you need legacy support you can use <a href=\"https://github.com/douglascrockford/JSON-js\">json2</a>.</p>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>No, the <a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\"><code>dataType</code> option</a> is for parsing the received data.</p>\n\n<p>To post JSON, you will need to stringify it yourself via <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/JSON/stringify\" rel=\"nofollow\"><code>JSON.stringify</code></a> and set the <code>processData</code> option to <code>false</code>.</p>\n\n<pre><code>$.ajax({\n    url: url,\n    type: \"POST\",\n    data: JSON.stringify(data),\n    processData: false,\n    contentType: \"application/json; charset=UTF-8\",\n    complete: callback\n});\n</code></pre>\n\n<p>Note that not all browsers support the <code>JSON</code> object, and although jQuery has <code>.parseJSON</code>, it has no stringifier included; you'll need another polyfill library.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>If you are sending this back to asp.net and need the data in request.form[] then you'll need to set the content type to \"application/x-www-form-urlencoded; charset=utf-8\"</p>\n\n<p>Original post <a href=\"http://stackoverflow.com/questions/14095041/jquery-ajax-call-for-posting-data-to-asp-net-page-not-get-but-post\">here</a></p>\n\n<p>Secondly get rid of the Datatype, if your not expecting a return the POST will wait for about 4 minutes before failing. See <a href=\"http://stackoverflow.com/questions/1969476/ajax-success-event-not-working\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can someone explain in an easy way how to make <code>jQuery</code> send actual <code>json</code> in stead of a <code>querystring</code>?</p>\n\n<pre><code>$.ajax({\n    url      : url,\n    dataType : 'json', // I was pretty sure this would do the trick\n    data     : data,\n    type     : 'POST',\n    complete : callback // etc\n});\n</code></pre>\n\n<p>This will in fact convert your carefully prepared <code>json</code> to a <code>querystring</code>. One of the annoying things is that any <code>array: []</code> in your object will be converted to <code>array[]: []</code>, probably because of limitations of the <code>querysting</code>.</p>\n\n<p><strong>-update-</strong></p>\n\n<p>The proper method can be found in the answers below:</p>\n\n<pre><code>$.ajax({\n    url        : url,\n    dataType   : 'json',\n    contentType: 'application/json; charset=UTF-8', // This is the money shot\n    data       : data,\n    type       : 'POST',\n    complete   : callback // etc\n});\n</code></pre>\n\n<p><strong>Please note</strong> that this requires proper <a href=\"https://developer.mozilla.org/en-US/docs/HTTP_access_control\">CORS</a> headers server-side, and contrary to some examples on the net, <em>Allow-Headers</em> <strong>cannot</strong> use wildcards. (<em>Allow-Origin</em> can.)</p>\n\n<pre><code>{\n    Content-Type                 : 'application/json', \n    Access-Control-Allow-Origin  : '*', \n    Access-Control-Allow-Headers : 'Content-Type' // You cannot use '*'\n}\n</code></pre>\n\n<p><strong>-update-</strong></p>\n\n<p><strong>Please note</strong> that <code>jQuery</code> will now send TWO requests, one to complete the handshake and one with the actual content. This is for your own security, somehow.</p>\n\n<p>So keep in mind if you want your server to be versatile, using a <strong>QueryString</strong> sends only <strong>one request</strong>. Using true <strong>JSON</strong> sends at least <strong>two requests</strong>, one for the handshake.</p>\n\n<p>This was messing with my head, so I thought I'd let you (the potential reader) know in advance.</p>\n",
            "last_activity_date": 1388468296,
            "question_id": 12693947,
            "score": 42,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "query-string"
            ],
            "title": "jQuery ajax, how to send JSON instead of QueryString"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The difference is that in the first example, the program will block in the first line. The next line (<code>console.log</code>) will have to wait.</p>\n\n<p>In the second example, the <code>console.log</code> will be executed WHILE the query is being processed. That is, the query will be processed in the background, while your program is doing other things, and once the query data is ready, you will do whatever you want with it.</p>\n\n<p>So, in a nutshell:</p>\n\n<p>The first example will block, while the second wont.</p>\n\n<p>The output of the following two examples:</p>\n\n<pre><code>//example 1\nvar result = database.query(\"SELECT * FROM hugetable\");\nconsole.log(\"query finished\");\nconsole.log(\"Next line\");\n\n\n//example 2\ndatabase.query(\"SELECT * FROM hugetable\", function(rows) {\n    console.log(\"query finished\");\n});\nconsole.log(\"Next line\");\n</code></pre>\n\n<p>Would be:</p>\n\n<ol>\n<li><code>query finished</code><br>\n<code>Next line</code></li>\n<li><code>Next line</code><br>\n<code>query finished</code></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>The main difference is with asynchronous programming, you don't stop execution otherwise. You can continue executing other code while the 'request' is being made.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In the synchronous case, the console.log command is not executed until the SQL query has finished executing.</p>\n\n<p>In the asynchronous case, the console.log command will be directly executed. The result of the query will then be stored by the \"callback\" function sometime afterwards.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This would become a bit more clear if you add a line to both examples:</p>\n\n<pre><code>var result = database.query(\"SELECT * FROM hugetable\");\nconsole.log(result.length);\nconsole.log(\"Hello World\");\n</code></pre>\n\n<p>The second one:</p>\n\n<pre><code>database.query(\"SELECT * FROM hugetable\", function(rows) {\n   var result = rows;\n   console.log(result.length);\n});\nconsole.log(\"Hello World\");\n</code></pre>\n\n<p>Try running these, and you\u2019ll notice that the first (synchronous) example, the result.length will be printed out BEFORE the 'Hello World' line.\nIn the second (the asynchronous) example, the result.length will (most likely) be printed AFTER the \"Hello World\" line.</p>\n\n<p>That's because in the second example, the <code>database.query</code> is run asynchronously in the background, and the script continues straightaway with the \"Hello World\". The <code>console.log(result.length)</code> is only executed when the database query has completed.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The difference between these two approaches is as follows:</p>\n\n<p><strong>Synchronous way:</strong>\nIt waits for each operation to complete, after that only it executes the next operation.\nFor your query:\nThe <code>console.log()</code> command will not be executed until &amp; unless the query has finished executing to get all the result from Database.</p>\n\n<p><strong>Asynchronous way:</strong>\nIt never waits for each operation to complete, rather it executes all operations in the first GO only. The result of each operation will be handled once the result is available.\nFor your query:\nThe <code>console.log()</code> command will be executed soon after the <code>Database.Query()</code> method. While the Database query runs in the background and loads the result once it is finished retrieving the data.</p>\n\n<p><strong>Use cases</strong></p>\n\n<ol>\n<li><p>If your operations are not doing very heavy lifting like querying huge data from DB then go ahead with Synchronous way otherwise Asynchronous way.</p></li>\n<li><p>In Asynchronous way you can show some Progress indicator to the user while in background you can continue with your heavy weight works. This is an ideal scenario for GUI apps.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>The function makes the second one asynchronous.</p>\n\n<p>The first one forces the program to wait for each line to finish it's run before the next one can continue. The second one allows each line to run together (and independently) at once.</p>\n\n<p>Languages and frameworks (js, node.js) that allow asynchronous or concurrency is great for things that require real time transmission (eg. chat, stock applications).</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been reading <a href=\"http://www.nodebeginner.org/\">nodebegginer</a>\nAnd I came across the following two pieces of code.</p>\n\n<p>The first one:</p>\n\n<pre><code>    var result = database.query(\"SELECT * FROM hugetable\");\n    console.log(\"Hello World\");\n</code></pre>\n\n<p>The second one.</p>\n\n<pre><code>    database.query(\"SELECT * FROM hugetable\", function(rows) {\n       var result = rows;\n    });\n    console.log(\"Hello World\");\n</code></pre>\n\n<p>I get what they're supposed to do, they query the database to retrieve the answer to the query. And then console.log('Hello world').</p>\n\n<p>The first one is supposedly synchronous code. \nAnd the second one is asynchronous code.</p>\n\n<p>The difference between the two pieces is very vague to me. What would the output be?</p>\n\n<p>Googling on asynchronous programming didn't help me either. </p>\n",
            "last_activity_date": 1425027250,
            "question_id": 16336367,
            "score": 29,
            "tags": [
                "javascript",
                "node.js",
                "asynchronous",
                "synchronous"
            ],
            "title": "What is the difference between synchronous and asynchronous programming (in node.js)"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>What's wrong with:</p>\n\n<pre><code>new Date(1293034567877);\n</code></pre>\n\n<p>This returns for me \"Wed Dec 22 2010 16:16:07 GMT+0000 (GMT Standard Time)\".</p>\n\n<p>Or do you need to get the number out the json?</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>This answer from <a href=\"http://stackoverflow.com/questions/206384/how-to-format-json-date/2316066#2316066\">Roy Tinker here</a>:</p>\n\n<pre><code>var date = new Date(parseInt(jsonDate.substr(6)));\n</code></pre>\n\n<p>As he says: <em>The substr function takes out the \"\\/Date(\" part, and the parseInt function gets the integer and ignores the \")\\/\" at the end. The resulting number is passed into the Date constructor.</em></p>\n\n<p>Another option is to simply format your information properly on the ASP side such that JavaScript can easily read it. Consider doing this for your dates:</p>\n\n<pre><code>DateTime.Now()\n</code></pre>\n\n<p>Which should return a format like this:</p>\n\n<pre><code>7/22/2008 12:11:04 PM\n</code></pre>\n\n<p>If you pass this into a JavaScript <code>Date</code> constructor like this:</p>\n\n<pre><code>var date = new Date('7/22/2008 12:11:04 PM');\n</code></pre>\n\n<p>The variable <code>date</code> now holds this value:</p>\n\n<pre><code>Tue Jul 22 2008 12:11:04 GMT-0700 (Pacific Daylight Time)\n</code></pre>\n\n<p>Naturally, you can format this <code>DateTime</code> object into whatever sort of string/int the JS <code>Date</code> constructor accepts.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>There is no standard JSON representation of dates.  You should do what @jAndy suggested and not serialize a <code>DateTime</code> at all; just send an RFC 1123 date string <code>ToString(\"r\")</code> or a seconds-from-Unix-epoch number, or something else that you can use in the JavaScript to construct a <code>Date</code>.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>I've not used .Net for things like this. If you were able to get it to print something like the following out it should work.</p>\n\n<p>Note, unless you're parsing that JSON <em>string</em> by some other means or only expect users to have modern browers with a built in JSON parser you need to use a JS framework or JSON2 to parse the JSON string outputted by the server into a real JSON object.</p>\n\n<pre><code>// JSON received from server is in string format\nvar jsonString = '{\"date\":1251877601000}';\n\n//use JSON2 or some JS library to parse the string\nvar jsonObject =  JSON.parse( jsonString );\n\n//now you have your date!\nalert( new Date(jsonObject.date) );\n</code></pre>\n\n<hr>\n\n<p><a href=\"http://en.wikipedia.org/wiki/JSON\" rel=\"nofollow\">Wiki Link</a></p>\n\n<blockquote>\n  <p>Modern browsers, such as Firefox 3.5 and Internet Explorer 8, include special features for parsing JSON. As native browser support is more efficient and secure than eval(), it is expected that native JSON support will be included in the next ECMAScript standard.[6]</p>\n</blockquote>\n\n<hr>\n\n<p><a href=\"https://github.com/douglascrockford/JSON-js\" rel=\"nofollow\">Link to JSON2 file</a></p>\n\n<p><a href=\"http://www.jsfiddle.net/subhaze/BjAyZ/\" rel=\"nofollow\">Live Example</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>//\n// formats a .net date into a javascript compatible date\n//\nfunction FormatJsonDate(jsonDt) \n{              \n    var MIN_DATE = -62135578800000; // const\n\n    var date = new Date(parseInt(jsonDt.substr(6, jsonDt.length-8)));                                                       \n    return date.toString() == new Date(MIN_DATE).toString() ? \"\" : (date.getMonth() + 1) + \"\\\\\" + date.getDate() + \"\\\\\" + date.getFullYear(); \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>The JSON.parse function accepts an optional DateTime reviver function.  You can use a function like this:</p>\n\n<pre><code>dateTimeReviver = function (key, value) {\n    var a;\n    if (typeof value === 'string') {\n        a = /\\/Date\\((\\d*)\\)\\//.exec(value);\n        if (a) {\n            return new Date(+a[1]);\n        }\n    }\n    return value;\n}\n</code></pre>\n\n<p>Then call </p>\n\n<pre><code>JSON.parse(somejsonstring,dateTimeReviver)\n</code></pre>\n\n<p>And your dates will come out right</p>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>You can convert Json Date to Normal date format in Javascript.</p>\n\n<p>var date = new Date(parseInt(jsonDate.substr(6)));</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The answer to this question is, use nuget to obtain JSON.NET then use this inside your <code>JsonResult</code> method:</p>\n\n<pre><code>JsonConvert.SerializeObject(/* JSON OBJECT TO SEND TO VIEW */);\n</code></pre>\n\n<p>inside your view simple do this in <code>javascript</code>:</p>\n\n<pre><code>JSON.parse(/* Converted JSON object */)\n</code></pre>\n\n<p>If it is an ajax call:</p>\n\n<pre><code>var request = $.ajax({ url: \"@Url.Action(\"SomeAjaxAction\", \"SomeController\")\", dataType: \"json\"});\nrequest.done(function (data, result) { var safe = JSON.parse(data); var date = new Date(safe.date); });\n</code></pre>\n\n<p>Once <code>JSON.parse</code> has been called, you can put the JSON date into a <code>new Date</code> instance because <code>JsonConvert</code> creates a proper ISO time instance</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know this is a very old thread but I wish to post this to help those who bump into this like I did.</p>\n\n<p>if you don't care about using a 3rd party script, you can use <a href=\"http://momentjs.com/docs/#/parsing/asp-net-json-date/\" rel=\"nofollow\">moment,js</a>\nThen you can use .format() to format it to anything you want it to.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a following piece of JSON:  </p>\n\n<pre><code>\\/Date(1293034567877)\\/\n</code></pre>\n\n<p>which is a result of this .NET code:</p>\n\n<pre><code>var obj = DateTime.Now;\nvar serializer = new System.Web.Script.Serialization.JavaScriptSerializer();\nserializer.Serialize(obj).Dump();\n</code></pre>\n\n<p>Now the problem I am facing is how to create a Date object from this in JavaScript.\nAll I could find was incredible regex solution (many containing bugs).</p>\n\n<p>It is hard to believe there is no elegant solution as this is all in JavaScrip, I mean JavaScript code trying to read JSON (JavaScript Object Notation) which is supposed to be a JavaScript code and at this moment it turns out it's not cause JavaScript cannot do a good job here.</p>\n\n<p>I've also seen some eval solutions which I could not make to work (besides being pointed out as security threat).</p>\n\n<p>Is there really no way to do it in an elegant way?</p>\n\n<p>Similar question with no real answer:<br>\n<a href=\"http://stackoverflow.com/questions/1367899/how-to-parse-asp-net-json-date-format-with-gwt\">How to parse ASP.NET JSON Date format with GWT</a></p>\n",
            "last_activity_date": 1404140726,
            "question_id": 4511705,
            "score": 29,
            "tags": [
                "javascript",
                "json",
                "datetime"
            ],
            "title": "How to parse JSON to receive a Date object in JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>jQuery has an <a href=\"http://api.jquery.com/jQuery.ajaxSetup/\"><code>AjaxSetup()</code></a> function that allows you to register global ajax handlers such as <code>beforeSend</code> and <code>complete</code> for all ajax calls as well as allow you to access the <code>xhr</code> object to do the progress that you are looking for</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Something like this for <code>$.ajax</code> (HTML5 only though):</p>\n\n<pre><code>$.ajax({\n    xhr: function() {\n        var xhr = new window.XMLHttpRequest();\n        xhr.upload.addEventListener(\"progress\", function(evt) {\n            if (evt.lengthComputable) {\n                var percentComplete = evt.loaded / evt.total;\n                //Do something with upload progress here\n            }\n       }, false);\n\n       xhr.addEventListener(\"progress\", function(evt) {\n           if (evt.lengthComputable) {\n               var percentComplete = evt.loaded / evt.total;\n               //Do something with download progress\n           }\n       }, false);\n\n       return xhr;\n    },\n    type: 'POST',\n    url: \"/\",\n    data: {},\n    success: function(data){\n        //Do something on success\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>I tried about three different ways of intercepting the construction of the Ajax object:  </p>\n\n<ol>\n<li>My first attempt used <code>xhrFields</code>, but that only allows for one listener, only attaches to download (not upload) progress, and requires what seems like unnecessary copy-and-paste.  </li>\n<li>My second attempt attached a <code>progress</code> function to the returned promise, but I had to maintain my own array of handlers.  I could not find a good object to attach the handlers because one place I'd access to the XHR and another I'd have access to the jQuery XHR, but I never had access to the deferred object (only its promise).  </li>\n<li>My third attempt gave me direct access to the XHR for attaching handlers, but again required to much copy-and-paste code.  </li>\n<li>I wrapped up my third attempt and replaced jQuery's <code>ajax</code> with my own.  The only potential shortcoming is you can no longer use your own <code>xhr()</code> setting.  You can allow for that by checking to see if <code>options.xhr</code> is a function.</li>\n</ol>\n\n<p>I actually call my <code>promise.progress</code> function <code>xhrProgress</code> so I can easily find it later.  You might want to name it something else to separate your upload and download listeners.  I hope this helps someone even if the original poster already got what he needed.</p>\n\n<pre><code>(function extend_jQuery_ajax_with_progress( window, jQuery, undefined )\n{\nvar $originalAjax = jQuery.ajax;\njQuery.ajax = function( url, options )\n{\n    if( typeof( url ) === 'object' )\n    {options = url;url = undefined;}\n    options = options || {};\n\n    // Instantiate our own.\n    var xmlHttpReq = $.ajaxSettings.xhr();\n    // Make it use our own.\n    options.xhr = function()\n    {return( xmlHttpReq );};\n\n    var $newDeferred = $.Deferred();\n    var $oldPromise = $originalAjax( url, options )\n    .done( function done_wrapper( response, text_status, jqXHR )\n    {return( $newDeferred.resolveWith( this, arguments ));})\n    .fail( function fail_wrapper( jqXHR, text_status, error )\n    {return( $newDeferred.rejectWith( this, arguments ));})\n    .progress( function progress_wrapper()\n    {\n        window.console.warn( \"Whoa, jQuery started actually using deferred progress to report Ajax progress!\" );\n        return( $newDeferred.notifyWith( this, arguments ));\n    });\n\n    var $newPromise = $newDeferred.promise();\n    // Extend our own.\n    $newPromise.progress = function( handler )\n    {\n        xmlHttpReq.addEventListener( 'progress', function download_progress( evt )\n        {\n            //window.console.debug( \"download_progress\", evt );\n            handler.apply( this, [evt]);\n        }, false );\n        xmlHttpReq.upload.addEventListener( 'progress', function upload_progress( evt )\n        {\n            //window.console.debug( \"upload_progress\", evt );\n            handler.apply( this, [evt]);\n        }, false );\n        return( this );\n    };\n    return( $newPromise );\n};\n})( window, jQuery );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In plain javascript is very simple: need just to attach the callback to <code>{XMLHTTPRequest}.onprogress</code></p>\n\n<pre><code>var xhr = new XMLHttpRequest();\n\nxhr.onprogress = function(e){\n    if (e.lengthComputable)\n        var percent = (e.loaded / e.total) * 100;\n};\n\nxhr.open('GET', 'http://www...', true);\nxhr.onreadystatechange = function() {\n    ...\n};\nxhr.send(null);\n</code></pre>\n\n<p>but I'm doing an ajax site that download html data with JQuery (<code>$.get()</code> or <code>$.ajax()</code>) and I was wondering which is the best way to get the progress of a request in order to display it with a little progress bar but curiously, I'm not finding anything usefull in JQuery documentation...</p>\n",
            "last_activity_date": 1391450943,
            "question_id": 19126994,
            "score": 26,
            "tags": [
                "javascript",
                "ajax",
                "jquery",
                "xmlhttprequest"
            ],
            "title": "What is the cleanest way to get the progress of JQuery ajax request?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>This is a bug in Chrome 35 reported in issue #377860.</p>\n\n<p>Update: This bug was merged into <a href=\"https://code.google.com/p/chromium/issues/detail?id=373182\">issue #373182</a>. You can click the star to tell the devs you think this issue should get fixed and also get notified of changes.</p>\n\n<p>Typically the chromium team releases an update every 2 weeks so you can expect a fix soon since this is marked as <em>Pri-1</em> which I assume means highest priority.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Here is a bit that worked for me (in Chrome and Firefox).  I'm building a xls file out of a table.</p>\n\n<pre><code>  function downloadInnerHtml(filename,elId,mimeType){\n    var elHtml='&lt;table border=\"1\"&gt;'+document.getElementById(elId).innerHTML+'&lt;/table&gt;';\n    var link=document.createElement('a');\n    mimeType=mimeType || 'application/xls';\n\n    var blob=new Blob([elHtml],{type:mimeType});\n    var url=URL.createObjectURL(blob);\n    link.href=url;\n\n    link.setAttribute('download', filename);\n    link.innerHTML = \"Export to CSV\";\n    document.body.appendChild(link);\n    link.click();\n  }\n\n  $(document).on(\"click\",\"#exportButton\",function(){\n    var date=new Date();\n    var mm=date.getMonth()+1;\n    var dd=date.getDate();\n    var yy=date.getFullYear();\n    var timeStamp=yy+\"\"+((mm&lt;10)?\"0\"+mm:mm)+\"\"+((dd&lt;10)?\"0\"+dd:dd);\n    var fileName=timeStamp+'_Employees.xls';\n    downloadInnerHtml(fileName,'mainEmployeeTable','application/xls');\n  });\n</code></pre>\n\n<p>Hope that helps someone else...</p>\n\n<p>--Charles</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For me worked:</p>\n\n<pre><code>var content = \"some content\";\nvar link = document.createElement('a');\nvar blob = new Blob([\"\\ufeff\", content]);\nvar url = URL.createObjectURL(blob);\nlink.href = url;\nlink.setAttribute('download', 'file.csv');\nlink.click();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>So you should change this:</p>\n\n<pre><code>// Data URI\ncsvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);\n\n$(this)\n    .attr({\n    'download': filename,\n        'href': csvData,\n        'target': '_blank'\n});\n</code></pre>\n\n<p>To This</p>\n\n<pre><code>// Data URI\n//csvData = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv), //old way\nblob = new Blob([csv], { type: 'text/csv' }); //new way\nvar csvUrl = URL.createObjectURL(blob);\n\n$(this)\n.attr({\n    'download': filename,\n    'href': csvUrl\n});\n</code></pre>\n\n<p>And it should work!</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>append anchor tag using string add tag information in string and then append, it works for me for google chrome</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to <a href=\"http://jsfiddle.net/terryyounghk/KPEGU/\">refer to this code</a> where a we are downloading a CSV file on click of a link. </p>\n\n<pre><code>$(document).ready(function () {\n\n    function exportTableToCSV($table, filename) {\n\n        var $rows = $table.find('tr:has(td)'),\n\n            // Temporary delimiter characters unlikely to be typed by keyboard\n            // This is to avoid accidentally splitting the actual contents\n            tmpColDelim = String.fromCharCode(11), // vertical tab character\n            tmpRowDelim = String.fromCharCode(0), // null character\n\n            // actual delimiter characters for CSV format\n            colDelim = '\",\"',\n            rowDelim = '\"\\r\\n\"',\n\n            // Grab text from table into CSV formatted string\n            csv = '\"' + $rows.map(function (i, row) {\n                var $row = $(row),\n                    $cols = $row.find('td');\n\n                return $cols.map(function (j, col) {\n                    var $col = $(col),\n                        text = $col.text();\n\n                    return text.replace('\"', '\"\"'); // escape double quotes\n\n                }).get().join(tmpColDelim);\n\n            }).get().join(tmpRowDelim)\n                .split(tmpRowDelim).join(rowDelim)\n                .split(tmpColDelim).join(colDelim) + '\"',\n\n            // Data URI\n            csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);\n\n        $(this)\n            .attr({\n            'download': filename,\n                'href': csvData,\n                'target': '_blank'\n        });\n    }\n\n    // This must be a hyperlink\n    $(\".export\").on('click', function (event) {\n        // CSV\n        exportTableToCSV.apply(this, [$('#dvData&gt;table'), 'export.csv']);\n\n        // IF CSV, don't do event.preventDefault() or return false\n        // We actually need this to be a typical hyperlink\n    });\n});\n</code></pre>\n\n<p>But somehow, the downloaded file is named as <code>download</code> without extension in Chrome v35.0.1916.114 , one workaround was to change data:application/csv to data:text/csv, but that only helped in getting the extension correct in the downloaded file i.e. it now downloads as <code>download.csv</code>. </p>\n\n<p>The issue with the download attribute still remains. I wanted to name my file as <code>export.csv</code>, but it still gives me <code>download.csv</code>.</p>\n",
            "last_activity_date": 1423936056,
            "question_id": 23816005,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "html5",
                "google-chrome"
            ],
            "title": "Anchor tag download attribute not working :Bug in Chrome 35.0.1916.114"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>You could use <a href=\"http://www.w3schools.com/jsref/jsref_getTimezoneOffset.asp\" rel=\"nofollow\">getTimezoneOffset</a> to get the offset between the local date and the GMT one, and then do the math. But this will only be as accurate as the user's clock.</p>\n\n<p>If you want an accurate time, you should connect to a <a href=\"http://support.ntp.org/bin/view/Main/WebHome\" rel=\"nofollow\">NTP server</a>. Because of the <a href=\"https://developer.mozilla.org/En/Same_origin_policy_for_JavaScript\" rel=\"nofollow\">Same Origin Policy</a>, you can't make a request with JS to another server then yours. I'd suggest you to create a server-side script that connects to the NTP server (in PHP, or whatever language you want) and return the accurate date. Then, use an AJAX request to read this time.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>First, to get the accurate GMT time you need a source that you trust.  This means some server somewhere.  Javascript can generally only make HTTP calls, and only to the server hosting the page in question (same origin policy).  Thus that server has to be your source for GMT time.</p>\n\n<p>I would configure your webserver to use NTP to synchronize its clock with GMT, and have the webserver tell the script what time it is, by writing a variable to the page.  Or else make and XmlHttpRequest back to the server when you need to know the time.  The downside is that this will be inaccurate due to the latency involved: the server determines the time, writes it to the response, the response travels over the network, and the javascript executes whenever the client's cpu gives it a timeslice, etc.  On a slow link you can expect seconds of delay if the page is big.  You might be able to save some time by determining how far off from GMT the user's clock is, and just adjusting all the time calculations by that offset.  Of course if the user's clock is slow or fast (not just late or early) or if the user changes the time on their PC then your offset is blown.</p>\n\n<p>Also keep in mind that the client can change the data so don't trust any timestamps they send you.</p>\n\n<p><strong>Edit</strong>:\n<a href=\"http://stackoverflow.com/questions/489581/getting-the-current-gmt-world-time/489846#489846\">JimmyP's answer</a> is very simple and easy to use: use Javascript to add a <code>&lt;script&gt;</code> element which calls a url such as <a href=\"http://json-time.appspot.com/time.json?tz=GMT\">http://json-time.appspot.com/time.json?tz=GMT</a>.  This is easier than doing this yourself because the json-time.appspot.com server works as a source of GMT time, and provides this data in a way that lets you work around the same-origin policy.  I would recommend that for simple sites.  However it has one major drawback: the json-time.appspot.com site can execute arbitrary code on your user's pages.  This means that if the operators of that site want to profile your users, or hijack their data, they can do that trivially.  Even if you trust the operators you need to also trust that they have not been hacked or compromised.  For a business site or any site with high reliability concerns I'd recommend hosting the time solution yourself.  </p>\n\n<p><strong>Edit 2</strong>:\n<a href=\"http://stackoverflow.com/questions/489581/getting-the-current-gmt-world-time/489846#489846\">JimmyP's answer</a> has a comment which suggests that the json-time app has some limitations in terms of the number of requests it can support.  This means if you need reliability you should host the time server yourself.  However, it should be easy enough to add a page on your server which responds with the same format of data.  Basically your server takes a query such as</p>\n\n<pre><code>http://json-time.appspot.com/time.json?tz=America/Chicago&amp;callback=foo\n</code></pre>\n\n<p>and returns a string such as</p>\n\n<pre><code>foo({\n \"tz\": \"America\\/Chicago\", \n \"hour\": 15, \n \"datetime\": \"Thu, 09 Apr 2009 15:07:01 -0500\", \n \"second\": 1, \n \"error\": false, \n \"minute\": 7\n})\n</code></pre>\n\n<p>Note the <code>foo()</code> which wraps the JSON object; this corresponds to the callback=foo in the query.  This means when the script is loaded into the page it will call your foo function, which can do whatever it wants with the time.  Server-side programming for this example is a separate question.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>You can use JSON[P] and access a time API:</p>\n\n<p>(The code below should work perfectly, just tested it...)</p>\n\n<pre><code>function getTime(zone, success) {\n    var url = 'http://json-time.appspot.com/time.json?tz=' + zone,\n        ud = 'json' + (+new Date());\n    window[ud]= function(o){\n        success &amp;&amp; success(new Date(o.datetime));\n    };\n    document.getElementsByTagName('head')[0].appendChild((function(){\n        var s = document.createElement('script');\n        s.type = 'text/javascript';\n        s.src = url + '&amp;callback=' + ud;\n        return s;\n    })());\n}\n\ngetTime('GMT', function(time){\n    // This is where you do whatever you want with the time:\n    alert(time);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Like <a href=\"http://stackoverflow.com/users/7867\">Mr. Shiny and New</a> said, you need a server somewhere with correct time. It can be the server where you site are or some other server that sends the correct time in a format that you can read.</p>\n\n<p>If you want to use the date several times on your page, one or more seconds apart, you probably don't want to get the time from the server every time, but instead cache the difference and use the clients clock. If that is the case, here is one of many solutions:</p>\n\n<pre><code>var MyDate = new function() {\n    this.offset = 0;\n    this.calibrate = function (UTC_msec) {\n        //Ignore if not a finite number\n        if (!isFinite(UTC_msec)) return;\n\n        // Calculate the difference between client and provided time\n        this.offset = UTC_msec - new Date().valueOf();\n\n        //If the difference is less than 60 sec, use the clients clock as is.\n        if (Math.abs(this.offset) &lt; 60000) this.offset = 0;\n    }\n    this.now = function () {\n        var time = new Date();\n        time.setTime(this.offset + time.getTime());\n        return time;\n    }\n}();\n</code></pre>\n\n<p>Include it on your page and let your server side script produce a row like:</p>\n\n<pre><code>MyDate.calibrate(1233189138181);\n</code></pre>\n\n<p>where the number is the current time in milliseconds since 1 Jan 1970. You can also use your favorite framework for AJAX and have it call the function above. Or you can use the solution <a href=\"http://stackoverflow.com/users/21677/\">JimmyP</a> suggested. I have rewritten JimmyPs solution to be included in my solution. Just copy and paste the following inside the function above:</p>\n\n<pre><code>    this.calibrate_json = function (data) {\n        if (typeof data === \"object\") {\n            this.calibrate (new Date(data.datetime).valueOf() );\n        } else {\n            var script = document.createElement(\"script\");\n            script.type=\"text/javascript\";\n            script.src=(data||\"http://json-time.appspot.com/time.json?tz=UTC\") +\n                \"&amp;callback=MyDate.calibrate_json\";\n            document.getElementsByTagName('head')[0].appendChild(script);\n        }\n    }\n    this.calibrate_json(); //request calibration with json\n</code></pre>\n\n<p>Notice that if you change the name of the function from <em>MyDate</em> you have to update the callback in *this.calibrate_json* on the line <em>script.src</em>.</p>\n\n<p>Explanation:</p>\n\n<p><em>Mydate.offset</em> is the current offset between the server time and the clients clock in milliseconds.</p>\n\n<p><em>Mydate.calibrate( x );</em> is a function that sets a new offset. It expects the input to be the current time in milliseconds since 1 Jan 1970. If the difference between the server and client clock is less than 60 seconds, the clients clock will be used.</p>\n\n<p><em>Mydate.now()</em> is a function that returns a date object that has the current calibrated time.</p>\n\n<p>*Mydate.calibrate_json( data )* is a function that either takes an url to a resource that gives back a datetime reply, or an object with the current time (used as a callback). If nothing is supplied, it will use a default url to get the time. The url must have a question mark \"?\" in it.</p>\n\n<p>Simple example of how to update an element with the current time every second:</p>\n\n<pre><code>setInterval(\n    function () {\n        var element = document.getElementById(\"time\");\n        if (!element) return;\n        function lz(v) {\n            return v &lt; 10 ? \"0\" + v : v;\n        }\n        var time = MyDate.now();\n        element.innerHTML = time.getFullYear() + \"-\" +\n            lz(time.getMonth() + 1) + \"-\" +\n            lz(time.getDate()) + \" \" +\n            lz(time.getHours()) + \":\" +\n            lz(time.getMinutes()) + \":\" +\n            lz(time.getSeconds())\n        ;\n},1000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Why don't you send the time with every page? For example somewhere in the html:</p>\n\n<pre><code>&lt;span id=\"time\" style=\"display:none;\"&gt;\n    2009-03-03T23:32:12\n&lt;/span&gt;\n</code></pre>\n\n<p>Then you could run a Javascript while the site loads and interpret the date. This would reduce the amount of work the network has to do. You can store the corresponding local time and calculate the offset every time you need it.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>We've used an API from EarthTools with much success:</p>\n\n<p><a href=\"http://www.earthtools.org/webservices.htm#timezone\" rel=\"nofollow\">EarthTools</a></p>\n\n<p>The service returns XML with information such as the current GMT &amp; timezone offsets (when supplying a latitude &amp; longitude).  We used a WebClient in conjunction with an XMLDocument in the VB backend of our ASP.NET page to read &amp; interpret the XML.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I stumbled upon another solution for those who do not have access to the server side of things. <a href=\"http://stackoverflow.com/questions/4904487/getting-default-server-time-in-jquery/4904541#4904541\">An answer</a> to the question <a href=\"http://stackoverflow.com/questions/4904487/getting-default-server-time-in-jquery\">Getting the default server time in jQuery?</a>.</p>\n\n<p>Basically, you can grab the \"Date\" header by doing an AJAX HEAD request to \"/\". Not all servers support this and it may take some jiggery-pockery to get it working with a particular server.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/4904487/getting-default-server-time-in-jquery/4904541#4904541\">Check out the real answer</a> for more details.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Your can do this in PHP</p>\n\n<pre><code>&lt;?php\n$json = file_get_contents( \"http://json-time.appspot.com/time.json?tz=GMT\" );\n$obj = json_decode($json);\n$timenow= $obj-&gt;{'datetime'};\n$hournow= $obj-&gt;{'hour'}; \n$minutenow= $obj-&gt;{'minute'}; \n$secondnow= $obj-&gt;{'second'}; \n?&gt;\n</code></pre>\n\n<p><code>$timenow</code> contains your full date &amp; time: \"Mon, 05 Mar 2012 01:57:51 +0000\", <code>$hournow</code>: \"1\"\n<code>$minutenow</code>: \"57\".</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A little addition to <a href=\"http://stackoverflow.com/a/489637/706466\">Mr. Shiny and New</a> and <a href=\"http://stackoverflow.com/a/489846/706466\">James</a> answers</p>\n\n<p>Here is a PHP script which you can place on own server and use instead of json-time.appspot.com</p>\n\n<pre><code>&lt;?php\nheader('Content-Type: application/json');\nheader(\"Expires: Tue, 01 Jan 1990 00:00:00 GMT\");\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\nheader(\"Cache-Control: post-check=0, pre-check=0\", false);\nheader(\"Pragma: no-cache\");\n\n$error = \"false\";\n$tz = $_GET['tz'];\n\nif ( !in_array($tz, DateTimeZone::listIdentifiers())) {\n   $error = 'invalid time zone';\n   $tz = 'UTC';\n}\n\ndate_default_timezone_set($tz);\n\n?&gt;\n&lt;?php echo htmlspecialchars($_GET['callback'], ENT_QUOTES, 'UTF-8' ); ?&gt;({\n \"tz\": \"&lt;?php echo $tz ?&gt;\",\n \"hour\": &lt;?php echo date('G'); ?&gt;,\n \"datetime\": \"&lt;?php echo date(DATE_RFC2822); ?&gt;\",\n \"second\": &lt;?php echo intval(date('s')); ?&gt;,\n \"error\": \"&lt;?php echo $error; ?&gt;\",\n \"minute\": &lt;?php echo intval(date('i')); ?&gt;\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If your javascript is served from web server then you can use this simple function to request time from this server. It will work if server returns Date header in HTTP response.</p>\n\n<pre><code>function getServerTime()\n{\n    var req = new XMLHttpRequest();\n    req.open('GET', document.location, false);\n    req.send(null);\n    return new Date(req.getResponseHeader(\"Date\"));\n}\n</code></pre>\n\n<p>Bacause of caching this may return wrong time. To fix this you can use random URL:</p>\n\n<pre><code>req.open('GET', \"/time?r=\" + Math.floor(Math.random()*10000000), false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>if you have server access and trust it's clock put this above any scripts that need it:</p>\n\n<pre><code>&lt;script&gt;var gmt_time = '&lt;?php echo gmdate('Y-m-d H:i:s'); ?&gt;';&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can i get the current time?  (in JavaScript)</p>\n\n<p>Not the time of your computer like:</p>\n\n<pre><code>now = new Date;\nnow_string = addZero(now.getHours()) + \":\" + addZero(now.getMinutes()) + \":\" + addZero(now.getSeconds());\n</code></pre>\n\n<p>But the real accurate world time?</p>\n\n<p>Do i need to connect to to a server (most likely yes, which one? and how can i retrieve time from it?)</p>\n\n<p>All the searches I do from google return the <code>(new Date).getHours()</code>.</p>\n\n<p>Edit:</p>\n\n<p>I want to avoid showing an incorrect time if the user has a wrong time in his computer.</p>\n",
            "last_activity_date": 1405731941,
            "question_id": 489581,
            "score": 22,
            "tags": [
                "javascript"
            ],
            "title": "Getting the current GMT world time"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>window</code> is the global object in a browser, and you can use a <code>for..in</code> loop to loop through its properties:</p>\n\n<pre><code>if(!Array.isArray) {\n    Array.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n}\n\nfor(var x in window) {\n    if(Array.isArray(window[x])) {\n        console.log('Found array ' + x + ' in ' + window + ', it has the value ' + window[x] + '!');\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>Object.keys( window );\n</code></pre>\n\n<p>This will give you an Array of all <em>enumerable</em> properties of the <code>window</code> object, (which are global variables).</p>\n\n<p>For older browsers, include <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys\">the compatibility patch from MDN</a>.</p>\n\n<hr>\n\n<p>To see its values, then clearly you'll just want a typical enumerator, like <code>for-in</code>.</p>\n\n<hr>\n\n<p>You should note that I mentioned that these methods will only give you <strong><em>enumerable</em></strong> properties. Typically those will be ones that are not built-in by the environment.</p>\n\n<p>It is possible to add <em>non-enumerable</em> properties in ES5 supported browsers. These will not be included in <code>Object.keys</code>, or when using a <code>for-in</code> statement.</p>\n\n<hr>\n\n<p>As noted by <a href=\"http://stackoverflow.com/users/419970/raynos\">@Raynos</a>, you can  <code>Object.getOwnPropertyNames( window )</code> for non-enumerables. I didn't know that. Thanks @Raynos!</p>\n\n<p>So to see the values that include enumerables, you'd want to do this:</p>\n\n<pre><code>var keys = Object.getOwnPropertyNames( window ),\n    value;\n\nfor( var i = 0; i &lt; keys.length; ++i ) {\n    value = window[ keys[ i ] ];\n    console.log( value );\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>Since all global variables are properties of the <code>window</code> object, you can get them using:</p>\n\n<pre><code>for(var key in window) { // all properties\n    if(Array.isArray(window[key])) { // only arrays\n        console.log(key, window[key]); // log key + value\n    }\n}\n</code></pre>\n\n<p>Since all default/inherited properties are not plain arrays (mostly host objects or functions), the <code>Array.isArray</code> check is sufficient.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To get \"globals\" object you can use this function:</p>\n\n<pre><code>function globals() { return this; }\n</code></pre>\n\n<p>Here is the test:\n<a href=\"http://jsfiddle.net/EERuf/\" rel=\"nofollow\">http://jsfiddle.net/EERuf/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a way in Javascript to get a list or dump the contents of all global variables declared by Javascript/jQuery script on a page? I am particularly interested in arrays. If I can get the array names, it will be enough to me. Seeing its values is a bonus.</p>\n",
            "last_activity_date": 1322932786,
            "question_id": 8369338,
            "score": 20,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Javascript - dumping all global variables"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Per the spec (<a href=\"http://www.w3.org/TR/DOM-Level-3-Core/core.html#Level-2-Core-DOM-createDocument\" rel=\"nofollow\">doc</a>), one may use the <code>createHTMLDocument</code> method of <code>DOMImplementation</code>, accessible via <code>document.implementation</code> as follows:</p>\n\n<pre><code>var doc = document.implementation.createHTMLDocument('My title');  \nvar body = document.createElementNS('http://www.w3.org/1999/xhtml', 'body'); \ndoc.documentElement.appendChild(body);\n// and so on\n</code></pre>\n\n<ul>\n<li>jsFiddle: <a href=\"http://jsfiddle.net/9Fh7R/\" rel=\"nofollow\">http://jsfiddle.net/9Fh7R/</a></li>\n<li>MDN document for <code>DOMImplementation</code>: <a href=\"https://developer.mozilla.org/en/DOM/document.implementation\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/document.implementation</a></li>\n<li>MDN document for <code>DOMImplementation.createHTMLDocument</code>: <a href=\"https://developer.mozilla.org/En/DOM/DOMImplementation.createHTMLDocument\" rel=\"nofollow\">https://developer.mozilla.org/En/DOM/DOMImplementation.createHTMLDocument</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There are two methods defined in specifications, <a href=\"http://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument\"><code>createDocument</code></a> from DOM Core Level 2 and <a href=\"http://www.w3.org/TR/html5/dom.html#dom-domhtmlimplementation-createhtmldocument\"><code>createHTMLDocument</code></a> from HTML5.  The former creates an XML document (including XHTML), the latter creates a HTML document.  Both reside, as functions, on the <code>DOMImplementation</code> interface.</p>\n\n<pre><code>var impl    = document.implementation,\n    xmlDoc  = impl.createDocument(namespaceURI, qualifiedNameStr, documentType),\n    htmlDoc = impl.createHTMLDocument(title);\n</code></pre>\n\n<p>In reality, these methods are rather young and only implemented in recent browser releases.  According to <a href=\"http://quirksmode.org\">http://quirksmode.org</a> and <a href=\"https://developer.mozilla.org/en/DOM/DOMImplementation.createHTMLDocument\">MDN</a>, the following browsers support <code>createHTMLDocument</code>:</p>\n\n<ul>\n<li>Chrome 4</li>\n<li>Opera 10</li>\n<li>Firefox 4</li>\n<li>Internet Explorer 9</li>\n<li>Safari 4</li>\n</ul>\n\n<p>Interestingly enough, you can (kind of) create a HTML document in older versions of Internet Explorer, using <code>ActiveXObject</code>:</p>\n\n<pre><code>var htmlDoc = new ActiveXObject(\"htmlfile\");\n</code></pre>\n\n<p>The resulting object will be a new document, which can be manipulated just like any other document.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>The following works in most common browsers, but not some. This is how simple it <strong>should</strong> be (but isn't):</p>\n\n<pre><code>// Fails if UA doesn't support parseFromString for text/html (e.g. IE)\nfunction htmlToDoc(markup) {\n  var parser = new DOMParser();\n  return parser.parseFromString(markup, \"text/html\");\n}\n\nvar htmlString = \"&lt;title&gt;foo bar&lt;/title&gt;&lt;div&gt;a div&lt;/div&gt;\";\nalert(htmlToDoc(htmlString).title);\n</code></pre>\n\n<p>To account for user agent vagaries, the following may be better (please note attribution):</p>\n\n<pre><code>/*\n * DOMParser HTML extension\n * 2012-02-02\n *\n * By Eli Grey, http://eligrey.com\n * Public domain.\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n *\n * Modified to work with IE 9 by RobG\n * 2012-08-29\n *\n * Notes:\n *\n *  1. Supplied markup should be avalid HTML document with or without HTML tags and\n *     no DOCTYPE (DOCTYPE support can be added, I just didn't do it)\n *\n *  2. Host method used where host supports text/html\n */\n\n/*! @source https://gist.github.com/1129031 */\n/*! @source https://developer.mozilla.org/en-US/docs/DOM/DOMParser */\n\n/*global document, DOMParser*/\n\n(function(DOMParser) {\n    \"use strict\";\n\n    var DOMParser_proto;\n    var real_parseFromString;\n    var textHTML;         // Flag for text/html support\n    var textXML;          // Flag for text/xml support\n    var htmlElInnerHTML;  // Flag for support for setting html element's innerHTML\n\n    // Stop here if DOMParser not defined\n    if (!DOMParser) return;\n\n    // Firefox, Opera and IE throw errors on unsupported types\n    try {\n        // WebKit returns null on unsupported types\n        textHTML = !!(new DOMParser).parseFromString('', 'text/html');\n\n    } catch (er) {\n      textHTML = false;\n    }\n\n    // If text/html supported, don't need to do anything.\n    if (textHTML) return;\n\n    // Next try setting innerHTML of a created document\n    // IE 9 and lower will throw an error (can't set innerHTML of its HTML element)\n    try {\n      var doc = document.implementation.createHTMLDocument('');\n      doc.documentElement.innerHTML = '&lt;title&gt;&lt;/title&gt;&lt;div&gt;&lt;/div&gt;';\n      htmlElInnerHTML = true;\n\n    } catch (er) {\n      htmlElInnerHTML = false;\n    }\n\n    // If if that failed, try text/xml\n    if (!htmlElInnerHTML) {\n\n        try {\n            textXML = !!(new DOMParser).parseFromString('', 'text/xml');\n\n        } catch (er) {\n            textHTML = false;\n        }\n    }\n\n    // Mess with DOMParser.prototype (less than optimal...) if one of the above worked\n    // Assume can write to the prototype, if not, make this a stand alone function\n    if (DOMParser.prototype &amp;&amp; (htmlElInnerHTML || textXML)) { \n        DOMParser_proto = DOMParser.prototype;\n        real_parseFromString = DOMParser_proto.parseFromString;\n\n        DOMParser_proto.parseFromString = function (markup, type) {\n\n            // Only do this if type is text/html\n            if (/^\\s*text\\/html\\s*(?:;|$)/i.test(type)) {\n                var doc, doc_el, first_el;\n\n                // Use innerHTML if supported\n                if (htmlElInnerHTML) {\n                    doc = document.implementation.createHTMLDocument(\"\");\n                    doc_el = doc.documentElement;\n                    doc_el.innerHTML = markup;\n                    first_el = doc_el.firstElementChild;\n\n                // Otherwise use XML method\n                } else if (textXML) {\n\n                    // Make sure markup is wrapped in HTML tags\n                    // Should probably allow for a DOCTYPE\n                    if (!(/^&lt;html.*html&gt;$/i.test(markup))) {\n                        markup = '&lt;html&gt;' + markup + '&lt;\\/html&gt;'; \n                    }\n                    doc = (new DOMParser).parseFromString(markup, 'text/xml');\n                    doc_el = doc.documentElement;\n                    first_el = doc_el.firstElementChild;\n                }\n\n                // RG: I don't understand the point of this, I'll leave it here though \n                //     In IE, doc_el is the HTML element and first_el is the HEAD.\n                //\n                // Is this an entire document or a fragment?\n                if (doc_el.childElementCount == 1 &amp;&amp; first_el.localName.toLowerCase() == 'html') {\n                    doc.replaceChild(first_el, doc_el);\n                }\n\n                return doc;\n\n            // If not text/html, send as-is to host method\n            } else {\n                return real_parseFromString.apply(this, arguments);\n            }\n        };\n    }\n}(DOMParser));\n\n// Now some test code\nvar htmlString = '&lt;html&gt;&lt;head&gt;&lt;title&gt;foo bar&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div&gt;a div&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;';\nvar dp = new DOMParser();\nvar doc = dp.parseFromString(htmlString, 'text/html');\n\n// Treat as an XML document and only use DOM Core methods\nalert(doc.documentElement.getElementsByTagName('title')[0].childNodes[0].data);\n</code></pre>\n\n<p>Don't be put off by the amount of code, there are a lot of comments, it can be shortened quite a bit but becomes less readable.</p>\n\n<p>Oh, and if the markup is valid XML, life is much simpler:</p>\n\n<pre><code>var stringToXMLDoc = (function(global) {\n\n  // W3C DOMParser support\n  if (global.DOMParser) {\n    return function (text) {\n      var parser = new global.DOMParser();\n      return parser.parseFromString(text,\"application/xml\");\n    }\n\n  // MS ActiveXObject support\n  } else {\n    return function (text) {\n      var xmlDoc;\n\n      // Can't assume support and can't test, so try..catch\n      try {\n        xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n        xmlDoc.async=\"false\";\n        xmlDoc.loadXML(text);\n      } catch (e){}\n      return xmlDoc;\n    }\n  }\n}(this));\n\n\nvar doc = stringToXMLDoc('&lt;books&gt;&lt;book title=\"foo\"/&gt;&lt;book title=\"bar\"/&gt;&lt;book title=\"baz\"/&gt;&lt;/books&gt;');\nalert(\n  doc.getElementsByTagName('book')[2].getAttribute('title')\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Assuming you are trying to create a fully parsed Document object from a string of markup and a content-type you also happen to know (maybe because you got the html from an xmlhttprequest, and thus got the content-type in its <code>Content-Type</code> http header; probably usually <code>text/html</code>) \u2013 it should be this easy:</p>\n\n<pre><code>var doc = (new DOMParser).parseFromString(markup, mime_type);\n</code></pre>\n\n<p>in an ideal future world where browser <code>DOMParser</code> implementations are as strong and competent as their document rendering is \u2013 maybe that's a good pipe dream requirement for future <code>HTML6</code> standards efforts. It turns out no current browsers do, though.</p>\n\n<p>You probably have the easier (but still messy) problem of having a string of html you want to get a fully parsed <code>Document</code> object for. Here is another take on how to do that, which also ought to work in all browsers \u2013 first you make a HTML <code>Document</code> object:</p>\n\n<pre><code>var doc = document.implementation.createHTMLDocument('');\n</code></pre>\n\n<p>and then <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#dynamic-markup-insertion\">populate it with your html fragment</a>:</p>\n\n<pre><code>doc.open();\ndoc.write(html);\ndoc.close();\n</code></pre>\n\n<p>Now you should have a fully parsed DOM in doc, which you can run <code>alert(doc.title)</code> on, slice with css selectors like <code>doc.querySelectorAll('p')</code> or ditto XPath using <code>doc.evaluate</code>.</p>\n\n<p>This actually works in modern WebKit browsers like Chrome and Safari (I just tested in Chrome 22 and Safari 6 respectively) \u2013 here is an example that takes the current page's source code, recreates it in a new document variable <code>src</code>, reads out its title, overwrites it with a html quoted version of the same source code and shows the result in an iframe: <a href=\"http://codepen.io/johan/full/KLIeE\">http://codepen.io/johan/full/KLIeE</a></p>\n\n<p>Sadly, I don't think any other contemporary browsers have quite as solid implementations yet.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>An updated answer for 2014, as the DOMparser has evolved. This works in all current browsers I can find, and should work too in earlier versions of IE, using ecManaut's document.implementation.createHTMLDocument('') approach above.</p>\n\n<p>Essentially, IE, Opera, Firefox can all parse as \"text/html\". Safari parses as \"text/xml\".</p>\n\n<p>Beware of intolerant XML parsing, though. The Safari parse will break down at non-breaking spaces and other HTML characters (French/German accents) designated with ampersands. Rather than handle each character separately, the code below replaces all ampersands with meaningless character string \"j!J!\". This string can subsequently be re-rendered as an ampersand when displaying the results in a browser (simpler, I have found, than trying to handle ampersands in \"false\" XML parsing).</p>\n\n<pre><code>function parseHTML(sText) {\ntry {\n\n    console.log(\"Domparser: \" + typeof window.DOMParser);\n\n    if (typeof window.DOMParser !=null) {\n        // modern IE, Firefox, Opera  parse text/html\n        var parser = new DOMParser();\n        var doc = parser.parseFromString(sText, \"text/html\");\n        if (doc != null) {\n            console.log(\"parsed as HTML\");\n            return doc\n\n        }\n        else {\n\n            //replace ampersands with harmless character string to avoid XML parsing issues\n            sText = sText.replace(/&amp;/gi, \"j!J!\");\n            //safari parses as text/xml\n            var doc = parser.parseFromString(sText, \"text/xml\");\n            console.log(\"parsed as XML\");\n            return doc;\n        }\n\n    } \n    else  {\n        // older IE \n        doc= document.implementation.createHTMLDocument('');\n        doc.write(sText);           \n        doc.close;\n        return doc; \n    }\n} catch (err) {\n    alert(\"Error parsing html:\\n\" + err.message);\n}\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Basically that's the question, how is one supposed to construct a <a href=\"http://dom.spec.whatwg.org/#interface-document\">Document</a> object from a string of HTML dynamically in javascript?</p>\n",
            "last_activity_date": 1411862187,
            "question_id": 8227612,
            "score": 18,
            "tags": [
                "javascript",
                "dom",
                "xmlhttprequest",
                "document",
                "specifications"
            ],
            "title": "How to create Document objects with JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Try this function:</p>\n\n<pre><code>$('body,html').bind('scroll mousedown wheel DOMMouseScroll mousewheel keyup', function(e){\n if ( e.which &gt; 0 || e.type == \"mousedown\" || e.type == \"mousewheel\"){\n  $(\"html,body\").stop();\n }\n})\n</code></pre>\n\n<p>Also, did you see <a href=\"http://www.learningjquery.com/2007/09/animated-scrolling-with-jquery-12\">this tutorial</a>?</p>\n\n<p>Update: Modern browsers now use <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla_event_reference/wheel\">\"wheel\"</a> as the event, so I've included it in the code above.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>You could set a variable to indicate that your call to animate was active, then check that variable inside the scroll handler.</p>\n\n<pre><code>window.IsAutoScrolling = true;\n$(\"html,body\").stop().animate({ \"scrollTop\": y }, 1000);\n// Do something to set IsAutoScrolling = false, when the animation is done.\n\n$(window).scroll(e){  \nif(!window.IsAutoScrolling){  \n    $(\"html,body\").stop();  \n}  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<h2>UPDATE:</h2>\n\n<p>Here is a <a href=\"http://jsbin.com/eqafi/3\">jsbin example</a> demonstrating the problem.</p>\n\n<p><strong>UPDATE 2:</strong><br>\nAnd here is <a href=\"http://jsbin.com/eqafi/4\">the fixed version</a> thanks to <a href=\"http://stackoverflow.com/users/145346/fudgey\">fudgey</a>.</p>\n\n<hr>\n\n<p>Basically, I have the following javascript which scrolls the window to an anchor on the page:</p>\n\n<pre><code> // get anchors with href's that start with \"#\"\n $(\"a[href^=#]\").live(\"click\", function(){\n     var target = $($(this).attr(\"href\"));\n     // if the target exists: scroll to it...\n     if(target[0]){\n         // If the page isn't long enough to scroll to the target's position\n         // we want to scroll as much as we can. This part prevents a sudden \n         // stop when window.scrollTop reaches its maximum.\n         var y = Math.min(target.offset().top, $(document).height() - $(window).height());\n         // also, don't try to scroll to a negative value...\n         y=Math.max(y,0);\n         // OK, you can scroll now...\n         $(\"html,body\").stop().animate({ \"scrollTop\": y }, 1000);\n     }\n     return false;\n });\n</code></pre>\n\n<p>It works perfectly......until I manually try to scroll the window. When the scrollbar or mousewheel is scrolled I need to stop the current scroll animation...but I'm not sure how to do this.</p>\n\n<p>This is probably my starting point...</p>\n\n<pre><code>$(window).scroll(e){\n    if(IsManuallyScrolled(e)){\n        $(\"html,body\").stop();\n    }\n} \n</code></pre>\n\n<p>...but I'm not sure how to code the <code>IsManuallyScrolled</code> function. I've checked out <code>e</code> (the <code>event</code> object) in Google Chrome's console and AFAIK there is not way to  differentiate between a manual scroll and jQuery's <code>animate()</code> scroll.</p>\n\n<p><strong>How can I differentiate between a <em>manual</em> scroll and one called via jQuery's <code>$.fn.animate</code> function?</strong></p>\n",
            "last_activity_date": 1361367946,
            "question_id": 2834667,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "scroll",
                "scrollbar",
                "mousewheel"
            ],
            "title": "How can I differentiate a manual scroll (via mousewheel/scrollbar) from a Javascript/jQuery scroll?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>View the source of this page: <a href=\"http://mg.to/test/dynaframe.html\">http://mg.to/test/dynaframe.html</a> It appears to do exactly what you want to do.</p>\n\n<pre><code>$(function() {\n\tvar $frame = $('&lt;iframe style=\"width:200px; height:100px;\"&gt;');\n\t$('body').html( $frame );\n\tsetTimeout( function() {\n\t\tvar doc = $frame[0].contentWindow.document;\n\t\tvar $body = $('body',doc);\n\t\t$body.html('&lt;h1&gt;Test&lt;/h1&gt;');\n\t}, 1 );\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Yes I know that is possible but the main problem is that we cannot handle a frame from outside it i has already loaded some other thing.</p>\n\n<pre><code>$(function() {\n        var $frame = $('&lt;iframe style=\"width:200px; height:100px;\"&gt;');\n        $('body').html( $frame );\n        setTimeout( function() {\n                var doc = $frame[0].contentWindow.document;\n                var $body = $('body',doc);\n                $body.html('&lt;h1&gt;Test&lt;/h1&gt;');\n        }, 1 );\n});\n</code></pre>\n\n<p>but if we start as </p>\n\n<pre><code>&lt;iframe src=\"http:/www.hamrobrt.com\"&gt;\n&lt;---Your Script to put as you like---&gt;\n</code></pre>\n\n<p>Then its impossible to hit that out.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No it's not. You would modify the script like this:</p>\n\n<pre><code>$(function() {\n    var $frame = $('iframe');\n    setTimeout( function() {\n            var doc = $frame[0].contentWindow.document;\n            var $body = $('body',doc);\n            $body.html('&lt;h1&gt;Test&lt;/h1&gt;');\n    }, 1 );\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can do it without jQuery also:</p>\n\n<pre><code>var iframe = document.getElementById('iframeID');\niframe = (iframe.contentWindow) ? iframe.contentWindow : (iframe.contentDocument.document) ? iframe.contentDocument.document : iframe.contentDocument;\niframe.document.open();\niframe.document.write('Hello World!');\niframe.document.close();\n</code></pre>\n\n<p>jQuery's html strips body, html and head tags from the inserted HTML.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<pre><code>iframeElementContainer =   document.getElementById('BOX_IFRAME').contentDocument;\niframeElementContainer.open();\niframeElementContainer.writeln(\"&lt;html&gt;&lt;body&gt;hello&lt;/body&gt;&lt;/html&gt;\");\niframeElementContainer.close();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can I create an empty iframe as a placeholder to later insert html into it?</p>\n\n<p>In otherwords, suppose I have an empty iframe with an id, </p>\n\n<p>How do I insert html in it?</p>\n\n<p>I'm using jquery, if that makes it easier.</p>\n",
            "last_activity_date": 1407149941,
            "question_id": 620881,
            "score": 15,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "iframe"
            ],
            "title": "putting html inside an iframe (using javascript)"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Add a random query string to the <code>src</code></p>\n\n<p>You could either do this manually by incrementing the querystring each time you make a change:</p>\n\n<pre><code>&lt;script src=\"test.js?version=1\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Or if you are using a server side language, you could automatically generate this:</p>\n\n<p>ASP.NET:</p>\n\n<pre><code>&lt;script src=\"test.js?rndstr=&lt;%= getRandomStr() %&gt;\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>You can append a queryString to your src and change it only when you will release an updated version:</p>\n\n<pre><code>&lt;script src=\"test.js?v=1\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>In this way the browser will use the cached version until a new version will be specified (v=2, v=3...)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can add a random (or datetime string) as query string to the url that points to your script. Like so: </p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"test.js?q=123\"&gt;&lt;/script&gt; \n</code></pre>\n\n<p>Every time you refresh the page you need to make sure the value of 'q' is changed.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;script src=\"test.js?random=&lt;?php echo uniqid(); ?&gt;\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>you <code>meta</code>-tags just affect the html-page viewed, not the includet files like your <code>test.js</code>. one possibility would be to do:</p>\n\n<pre><code>&lt;script src=\"test.js?version=1.0\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>and change ther version-number if you change the js-file.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://www.mnot.net/cache_docs/\" rel=\"nofollow\">Configure your webserver</a> to send caching control HTTP headers for the script.</p>\n\n<p>Fake headers in the HTML documents:</p>\n\n<ol>\n<li>Aren't as well supported as real HTTP headers</li>\n<li>Apply to the HTML document, not to resources that it links to</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a simple html:</p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;head&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;meta http-equiv='cache-control' content='no-cache'&gt;\n&lt;meta http-equiv='expires' content='0'&gt;\n&lt;meta http-equiv='pragma' content='no-cache'&gt;\n&lt;script src=\"test.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>In test.js I changed a Javascript function, but my browser is caching this file. How to disable cache for script src? </p>\n\n<p>Update: How to add a random script using javascript ? </p>\n",
            "last_activity_date": 1367944412,
            "question_id": 7413234,
            "score": 14,
            "tags": [
                "javascript",
                "caching"
            ],
            "title": "How to prevent caching of my Javascript file?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You should preload your images into code.</p>\n\n<pre><code>var image = new Image();\nimage.src = \"path\";\n</code></pre>\n\n<p>when you want to use:</p>\n\n<pre><code>nextimg_img.attr('src', image.src);\n</code></pre>\n\n<p>Then when you swap the src out just swap from the preloaded image objects. That should do the trick to avoid redownloading.</p>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>I am creating a slideshow of animations using animated GIFs. I'm crossfading from one animation to the next. The problem is: the only way I have discovered to ensure that the GIF starts animating from the first frame is to reload it each time it's shown. The GIFs are 200KB or so each, which is way too much bandwidth for a continuous slideshow.</p>\n\n<p>Here's my current code. <code>img</code> and <code>nextimg</code> are <code>&lt;div&gt;</code> tags containing a single <code>&lt;img&gt;</code> each. <code>nextimg_img</code> is the <code>&lt;img&gt;</code> tag corresponding to the next image to be displayed.</p>\n\n<pre><code>var tmp = nextimg_img.attr('src');\nnextimg_img.attr('src', '');\nsetTimeout(function() { nextimg_img.attr('src', tmp); }, 0);\nimg.fadeOut('slow');\nnextimg.fadeIn('slow');\n</code></pre>\n\n<p>The idea is that it sets the <code>src</code> attribute of the next image to <code>''</code>, then sets it back to the source of the GIF to be displayed.</p>\n\n<p>This works &mdash; it restarts the animation from the beginning &mdash; but the GIFs seem to be redownloaded every time they are displayed.</p>\n\n<p>EDIT: it's a looping slideshow, and I'm trying to avoid reloading the GIFs from the net when they get shown the second/third/subsequent time.</p>\n",
            "last_activity_date": 1395119073,
            "question_id": 3191922,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "gif",
                "animated-gif"
            ],
            "title": "Restart an animated GIF from JavaScript without reloading the image"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You might be better off using a tool like <a href=\"http://seleniumhq.org/\">Selenium</a> to automate the scraping using a web browser, so the JS executes and the page renders just like it would for a real user.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>You could also try defining <a href=\"http://groups.csail.mit.edu/uid/chickenfoot/\" rel=\"nofollow\">Chickenfoot</a> page triggers on the pages in question, executing whatever operations you want on the page and saving the results of the operation to a local file, and calling Firefox from the command line inside your program, followed by reading the file.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The <a href=\"http://code.google.com/p/pyv8/\">PyV8</a> package nicely wraps <a href=\"http://code.google.com/apis/v8/\">Google's V8 Javascript engine</a> for Python.  It's particularly nice because not only can you call from Python to Javascript code, but you can call back from Javascript to Python code.  This makes it quite straightforward to implement the usual browser-supplied objects (that is, everything in the Javascript global namespace: \"window\", \"document\", and so on), which you'd need to do if you were going to make a Javascript-capable Python browser emulator thing, possibly by hooking this up with <a href=\"http://wwwsearch.sourceforge.net/mechanize/\">mechanize</a>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>i recommend that you take a look at some of the options available to you at <a href=\"http://wiki.python.org/moin/WebBrowserProgramming\" rel=\"nofollow\">http://wiki.python.org/moin/WebBrowserProgramming</a> - surprisingly this is coming up as a common question (i've found three on stackoverflow today, by searching for the words \"python browser\" on google).  if you do the same you'll find the other answers i gave.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>you may try zope browser</p>\n\n<p><a href=\"http://pypi.python.org/pypi?:action=display&amp;name=zope.testbrowser\" rel=\"nofollow\">http://pypi.python.org/pypi?:action=display&amp;name=zope.testbrowser</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is also spynner \" a stateful programmatic web browser module for Python with Javascript/AJAX support based on the QtWebkit framework\" : <a href=\"http://code.google.com/p/spynner/\" rel=\"nofollow\">http://code.google.com/p/spynner/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>My favorite is <a href=\"http://dev.umaclan.com/projects/pyphantomjs\">PyPhantomJS</a>. It's written using Python and PyQt4. It's completely headless and you can control it completely from JavaScript.</p>\n\n<p>However, if you are looking to actually see the page, you can use <code>QWebView</code> from PyQt4 as well.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I want to screen-scrape a web-site that uses JavaScript. </p>\n\n<p>There is <a href=\"http://wwwsearch.sourceforge.net/mechanize/\">mechanize</a>, the programmatic web browser for Python. However, it (understandably) doesn't interpret javascript. Is there any programmatic browser for Python which does? If not, is there any JavaScript implementation in Python that I could use to attempt to create one?</p>\n",
            "last_activity_date": 1309987148,
            "question_id": 1916711,
            "score": 12,
            "tags": [
                "javascript",
                "python",
                "browser",
                "screen-scraping",
                "mechanize"
            ],
            "title": "Programmatic Python Browser with JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try this.</p>\n\n<pre><code>setTimeout(function() { playNote(currentaudio.id,noteTime) }, delay);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Because the second one you're telling it to call the playNote function <strong>first</strong> and then pass the return value from it to setTimeout.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The first form that you list works, since it will evaluate a string at the end of <code>delay</code>. Using <code>eval()</code> is generally not a good idea, so you should avoid this.</p>\n\n<p>The second method doesn't work, since you immediately execute a function object with <strong><a href=\"http://docstore.mik.ua/orelly/webprog/jscript/ch05_10.htm\">the function call operator <code>()</code></a></strong>. What ends up happening is that <code>playNote</code> is executed immediately if you use the form <code>playNote(...)</code>, so nothing will happen at the end of the delay.</p>\n\n<p>Instead, you have to pass an anonymous function to setTimeout, so the correct form is:</p>\n\n<pre><code>setTimeout(function() { playNote(currentaudio.id,noteTime) }, delay);\n</code></pre>\n\n<p>Note that you are passing <code>setTimeout</code> an entire function expression, so it will hold on to the anonymous function and only execute it at the end of the delay.</p>\n\n<p>You can also pass <code>setTimeout</code> a reference, since a reference isn't executed immediately, but then you can't pass arguments:</p>\n\n<pre><code>setTimeout(playNote, delay);\n</code></pre>\n\n<hr>\n\n<p><strong>Note:</strong></p>\n\n<p>For repeated events you can use <strong><a href=\"https://developer.mozilla.org/en/DOM/window.setInterval\"><code>setInterval()</code></a></strong> and you can set <code>setInterval()</code> to a variable and use the variable to stop the interval with <strong><a href=\"https://developer.mozilla.org/en/DOM/window.clearInterval\"><code>clearInterval()</code></a></strong>.</p>\n\n<p>You say you use <code>setTimeout()</code> in a <code>for</code> loop. In many situations, it is better to use <code>setTimeout()</code> in a recursive function. This is because in a <code>for</code> loop, the variables used in the <code>setTimeout()</code> will not be the variables as they were when <code>setTimeout()</code> began, but the variables as they are after the delay when the function is fired.</p>\n\n<p>Just use a recursive function to sidestep this entire problem.</p>\n\n<h2>Using recursion to deal with variable delay times:</h2>\n\n<pre><code>  // Set original delay\nvar delay = 500;\n\n  // Call the function for the first time, to begin the recursion.\nplayNote(xxx, yyy);\n\n  // The recursive function\nfunction playNote(theId, theTime)\n{\n    // Do whatever has to be done\n    // ...\n\n    // Have the function call itself again after a delay, if necessary\n    //   you can modify the arguments that you use here. As an\n    //   example I add 20 to theTime each time. You can also modify\n    //   the delay. I add 1/2 a second to the delay each time as an example.\n    //   You can use a condition to continue or stop the recursion\n\n    delay += 500;\n\n    if (condition)\n    { setTimeout(function() { playNote(theID, theTime + 20) }, delay); }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>Don't use string-timeouts. It's effective an <code>eval</code>, which is a Bad Thing. It works because it's converting <code>currentaudio.id</code> and <code>noteTime</code> to the string representations of themselves and hiding it in the code. This only works as long as those values have <code>toString()</code>s that generate JavaScript literal syntax that will recreate the value, which is true for <code>Number</code> but not for much else.</p>\n\n<pre><code>setTimeout(playNote(currentaudio.id, noteTime), delay);\n</code></pre>\n\n<p>that's a function call. <code>playNote</code> is called immediately and the returned result of the function (probably <code>undefined</code>) is passed to <code>setTimeout()</code>, not what you want.</p>\n\n<p>As other answers mention, you can use an inline function expression with a closure to reference <code>currentaudio</code> and <code>noteTime</code>:</p>\n\n<pre><code>setTimeout(function() {\n    playNote(currentaudio.id, noteTime);\n}, delay);\n</code></pre>\n\n<p>However, if you're in a loop and <code>currentaudio</code> or <code>noteTime</code> is different each time around the loop, you've got the Closure Loop Problem: the same variable will be referenced in every timeout, so when they're called you'll get the same value each time, the value that was left in the variable when the loop finished earlier.</p>\n\n<p>You can work around this with <em>another</em> closure, taking a copy of the variable's value for each iteration of the loop:</p>\n\n<pre><code>setTimeout(function() {\n    return function(currentaudio, noteTime) {\n        playNote(currentaudio.id, noteTime);\n    };\n}(currentaudio, noteTime), delay);\n</code></pre>\n\n<p>but this is getting a bit ugly now. Better is <code>Function#bind</code>, which will partially-apply a function for you:</p>\n\n<pre><code>setTimeout(playNote.bind(window, currentaudio.id, noteTime), delay);\n</code></pre>\n\n<p>(<code>window</code> is for setting the value of <code>this</code> inside the function, which is a feature of <code>bind()</code> you don't need here.)</p>\n\n<p>However this is an ECMAScript Fifth Edition feature which not all browsers support yet. So if you want to use it you have to first hack in support, eg.:</p>\n\n<pre><code>// Make ECMA262-5 Function#bind work on older browsers\n//\nif (!('bind' in Function.prototype)) {\n    Function.prototype.bind= function(owner) {\n        var that= this;\n        if (arguments.length&lt;=1) {\n            return function() {\n                return that.apply(owner, arguments);\n            };\n        } else {\n            var args= Array.prototype.slice.call(arguments, 1);\n            return function() {\n                return that.apply(owner, arguments.length===0? args : args.concat(Array.prototype.slice.call(arguments)));\n            };\n        }\n    };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Simply put...</p>\n\n<p>why does</p>\n\n<pre><code>setTimeout('playNote('+currentaudio.id+', '+noteTime+')', delay);\n</code></pre>\n\n<p>work perfectly, calling the function after the the specified delay, but</p>\n\n<pre><code>setTimeout(playNote(currentaudio.id,noteTime), delay);\n</code></pre>\n\n<p>calls the function playNote all at the same time?</p>\n\n<p>(these setTimeout()s are in a for loop)</p>\n\n<p>or, if my explanation is too hard to read, what is the difference between the two functions?</p>\n",
            "last_activity_date": 1355514764,
            "question_id": 3800512,
            "score": 9,
            "tags": [
                "javascript",
                "settimeout"
            ],
            "title": "Calling functions with setTimeout()"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Only if the remote server supports <a href=\"http://bob.pythonmac.org/archives/2005/12/05/remote-json-jsonp/\" rel=\"nofollow\">JSONP</a> or <a href=\"https://developer.mozilla.org/en/HTTP_access_control\" rel=\"nofollow\">HTTP <code>Access-Control</code></a> headers. </p>\n\n<p><em>Public</em> JSON API's (like the ones provided by Google.com, Facebook.com, etc) often do.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You need to use a method that is called as <a href=\"http://remysharp.com/2007/10/08/what-is-jsonp/\">JSONP</a>.</p>\n\n<p>One of the best ways is to use jQuery to reduce the code and worries between your page and the server, and all you need to do is:</p>\n\n<pre><code>$.ajax({\n  dataType: 'jsonp',\n  data: 'id=10',\n  jsonp: 'jsonp_callback',\n  url: 'http://myotherserver.com/getdata',\n  success: function () {\n    // do stuff\n  },\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>Can I use XMLHttpRequests in JavaScript to request a file on a different server than the one from where the request was made?</p>\n\n<p>Thank you.</p>\n",
            "last_activity_date": 1392563324,
            "question_id": 3897641,
            "score": 8,
            "tags": [
                "javascript",
                "ajax",
                "request"
            ],
            "title": "Can AJAX request data from a remote server?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You have to first register the JavaScriptInterface on your webview.\nJavaScriptInterFace can be a inner class as shown below. This class will have a function that you can call from html page( via javaScript ) and inside this function you can write code to change activity.</p>\n\n<p>Here is the working solution for you:</p>\n\n<pre><code>public class JavascriptInterfaceActivity extends Activity {\n    /** Called when the activity is first created. */\n\n\n    WebView wv;\n\n    JavaScriptInterface JSInterface;\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.main);\n        wv = (WebView)findViewById(R.id.webView1);\n\n        wv.getSettings().setJavaScriptEnabled(true);\n        // register class containing methods to be exposed to JavaScript\n\n        JSInterface = new JavaScriptInterface(this);\n        wv.addJavascriptInterface(JSInterface, \"JSInterface\"); \n\n        wv.loadUrl(\"file:///android_asset/myPage.html\");\n\n    }\n\n\n    public class JavaScriptInterface {\n        Context mContext;\n\n        /** Instantiate the interface and set the context */\n        JavaScriptInterface(Context c) {\n            mContext = c;\n        }\n\n        public void changeActivity()\n        {\n            Intent i = new Intent(JavascriptInterfaceActivity.this, nextActivity.class);\n            startActivity(i);\n            finish();\n        }\n    }\n}\n</code></pre>\n\n<p>Here is the html page</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction displaymessage()\n{\nJSInterface.changeActivity();\n}\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;form&gt;\n&lt;input type=\"button\" value=\"Click me!\" onclick=\"displaymessage()\" /&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Hope this helps...</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>You also need to add the <strong>@JavascriptInterface</strong> annotation on top of your changeActivity method in your android code, should you run on Android 4.2 or higher.\nSee this <a href=\"http://stackoverflow.com/questions/14031635/android-4-2-1-webview-and-javascript-interface-breaks\">link</a> for more.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>im trying to start an activity from a javascript interface in my webview .\nthis example show a toast , how could i call a class instead of a toast please.</p>\n\n<pre><code>public class JavaScriptInterface {\nContext mContext;\n\n/** Instantiate the interface and set the context */\nJavaScriptInterface(Context c) {\n    mContext = c;\n}\n\n/** Show a toast from the web page */\npublic void showToast(String toast) {\n    Toast.makeText(mContext, toast, Toast.LENGTH_SHORT).show();\n}\n}\n</code></pre>\n\n<p>this for the html page.</p>\n\n<pre><code>&lt;input type=\"button\" value=\"Say hello\" onClick=\"showAndroidToast('Hello Android!')\" /&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nfunction showAndroidToast(toast) {\n    Android.showToast(toast);\n}\n</code></pre>\n\n<p></p>\n\n<p>and thanks in advance.</p>\n",
            "last_activity_date": 1392840448,
            "question_id": 10472839,
            "score": 7,
            "tags": [
                "javascript",
                "android",
                "webview"
            ],
            "title": "using javascript in android webview"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<h1>Intro</h1>\n\n<p>All information found here can also be found in my blog <a href=\"http://www.gajotres.net/page-events-order-in-jquery-mobile/\"><strong>ARTICLE</strong></a>, you will also find working examples.</p>\n\n<h2>- A: Initialization</h2>\n\n<p>A1 - Phonegap app/framework initialization with the <strong><em>deviceReady</em></strong> event.</p>\n\n<p><em>Example:</em></p>\n\n<pre><code>document.addEventListener(\"deviceReady\", yourCallbackFunction, false);\n\nfunction deviceReady() {\n\n}\n</code></pre>\n\n<p>More about pause even can be found here: <a href=\"http://docs.phonegap.com/en/1.0.0/phonegap_events_events.md.html\">http://docs.phonegap.com/en/1.0.0/phonegap_events_events.md.html</a></p>\n\n<p>A2 - jQuery Mobile app/framework initialization with the <strong><em>mobileinit</em></strong> event.</p>\n\n<p><em>Example:</em></p>\n\n<pre><code>$(document).on(\"mobileinit\", function () {\n\n});\n</code></pre>\n\n<p>How to check if both frameworks are successfully loaded: <a href=\"http://stackoverflow.com/a/12821151/1848600\">http://stackoverflow.com/a/12821151/1848600</a></p>\n\n<h2>- B: Change page</h2>\n\n<p>First all events can be found here: <a href=\"http://jquerymobile.com/test/docs/api/events.html\">http://jquerymobile.com/test/docs/api/events.html</a></p>\n\n<p>Lets say we have a page A and a page B, this is a unload/load order:</p>\n\n<pre><code>1. page B - event pagebeforecreate\n\n2. page B - event pagecreate\n\n3. page B - event pageinit\n\n4. page A - event pagebeforehide\n\n5. page B - event pagebeforeshow\n\n6. page A - event pageremove\n\n7. page A - event pagehide\n\n8. page B - event pageshow\n</code></pre>\n\n<h2>- C: Minimize app</h2>\n\n<p>Phonegap handles this with a <strong><em>pause</em></strong> event.</p>\n\n<p><em>Example:</em></p>\n\n<pre><code>document.addEventListener(\"pause\", yourCallbackFunction, false);\n</code></pre>\n\n<p>More about pause even can be found here: <a href=\"http://docs.phonegap.com/en/1.0.0/phonegap_events_events.md.html\">http://docs.phonegap.com/en/1.0.0/phonegap_events_events.md.html</a></p>\n\n<h2>- D: Restore app</h2>\n\n<p>Phonegap handles this with a <strong><em>resume</em></strong> event.</p>\n\n<p><em>Example:</em></p>\n\n<pre><code>document.addEventListener(\"resume\", yourCallbackFunction, false);\n</code></pre>\n\n<p>More about pause even can be found here: <a href=\"http://docs.phonegap.com/en/1.0.0/phonegap_events_events.md.html\">http://docs.phonegap.com/en/1.0.0/phonegap_events_events.md.html</a></p>\n\n<h2>- Final words</h2>\n\n<p>There are few other phonegap and jQM events and you can find them in links mentioned above. </p>\n\n<p>Something you should not use in jQM app:</p>\n\n<pre><code>$(document).ready(function(){\n\n});\n</code></pre>\n\n<p>Reason:</p>\n\n<blockquote>\n  <p>The first thing you learn in jQuery is to call code inside the\n  $(document).ready() function so everything will execute as soon as the\n  DOM is loaded. However, in jQuery Mobile, Ajax is used to load the\n  contents of each page into the DOM as you navigate, and the DOM ready\n  handler only executes for the first page. To execute code whenever a\n  new page is loaded and created, you can bind to the pageinit event.\n  This event is explained in detail at the bottom of this page.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>I have to build fast a prototype for an application and I would like to know exactly where to insert various application logic.</p>\n\n<p>Could you iterate the events and the order in which they trigger when using PhoneGap and jQueryMobile?</p>\n\n<p>It would be great to have a clear understanding of events/order for:</p>\n\n<ul>\n<li>A: <strong><em>When you open the application for the first time</em></strong>. </li>\n<li>B: <strong><em>When you change page</em></strong> (I guess there won't be some of the events\nanymore).</li>\n<li>C: <strong><em>When you \"minimize\" the app</em></strong> (Ex: when you click a link in the app \nwhich takes you to sms/call, or you just press device's home button).</li>\n<li>D: <strong><em>When you restore the app</em></strong> (Ex: hitting the \"back\" button, or just<br>\n\"maximize\" it somehow).</li>\n</ul>\n",
            "last_activity_date": 1400663205,
            "question_id": 14010140,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "jquery-mobile",
                "cordova"
            ],
            "title": "jQuery Mobile : What is the order of page events triggering?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><a href=\"http://api.jquery.com/change/\" rel=\"nofollow\">.change()</a> is what you're after</p>\n\n<pre><code>$(\"#testbox\").keyup(function() {\n   $(this).blur();\n   $(this).focus(); \n   $(this).val($(this).val()); // fix for IE putting cursor at beginning of input on focus\n}).change(function() {\n   alert(\"change fired\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I came up with this for autosaving a textarea. It uses a combination of the <code>.keyUp()</code> jQuery method to see if the content has changed. And then I update every 5 seconds because I don't want the form getting submitted every time it's changed!!!!</p>\n\n<pre><code>var savePost = false;\n\njQuery(document).ready(function() { \n    setInterval('autoSave()', 5000)\n    $('input, textarea').keyup(function(){\n        if (!savePost) {\n            savePost = true;    \n        }\n    })\n})\n\n\nfunction autoSave() {\n    if (savePost) {\n        savePost = false;\n        $('#post_submit, #task_submit').click();            \n    }\n}\n</code></pre>\n\n<p>I know it will fire even if the content hasn't changed but it was easier that hardcoding which keys I didn't want it to work for.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is how I would do it:  <a href=\"http://jsfiddle.net/Pggpt/\" rel=\"nofollow\">http://jsfiddle.net/JesseAldridge/Pggpt/1/</a></p>\n\n<pre><code>$('#input1').keyup(function(){\n    if($('#input1').val() != $('#input1').attr('prev_val'))\n        $('#input2').val('change')\n    else\n        $('#input2').val('no change')\n    $('#input1').attr('prev_val', $('#input1').val())\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In most browsers, you can use the HTML5 <code>input</code> event for text-type <code>&lt;input&gt;</code> elements:</p>\n\n<pre><code>$(\"#testbox\").on(\"input\", function() {\n    alert(\"Value changed!\");\n});\n</code></pre>\n\n<p>This doesn't work in IE &lt; 9, but there is a workaround: the <code>propertychange</code> event.</p>\n\n<pre><code>$(\"#testbox\").on(\"propertychange\", function(e) {\n    if (e.originalEvent.propertyName == \"value\") {\n        alert(\"Value changed!\");\n    }\n});\n</code></pre>\n\n<p>IE 9 supports both, so in that browser it's better to prefer the standards-based <code>input</code> event. This conveniently fires first, so we can remove the handler for <code>propertychange</code> the first time <code>input</code> fires.</p>\n\n<p>Putting it all together (<a href=\"http://jsfiddle.net/AFahj/50/\">jsFiddle</a>):</p>\n\n<pre><code>var propertyChangeUnbound = false;\n$(\"#testbox\").on(\"propertychange\", function(e) {\n    if (e.originalEvent.propertyName == \"value\") {\n        alert(\"Value changed!\");\n    }\n});\n\n$(\"#testbox\").on(\"input\", function() {\n    if (!propertyChangeUnbound) {\n        $(\"#testbox\").unbind(\"propertychange\");\n        propertyChangeUnbound = true;\n    }\n    alert(\"Value changed!\");\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                }
            ],
            "body": "<p>I want to do something when a keypress changes the input of a textbox. I figure the <code>keypress</code> event would be best for this, but how do I know if it caused a change? I need to filter out things like pressing the arrow keys, or modifiers... I don't think hardcoding all the values is the best approach.</p>\n\n<p>So how should I do it?</p>\n",
            "last_activity_date": 1362159412,
            "question_id": 6488171,
            "score": 6,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Catch only keypresses that change input?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>&lt;select name=\"name\"&gt;\n   &lt;option &lt;?php if ($_GET['name'] == 'a') { ?&gt;selected=\"true\" &lt;?php }; ?&gt;value=\"a\"&gt;a&lt;/option&gt;\n   &lt;option &lt;?php if ($_GET['name'] == 'b') { ?&gt;selected=\"true\" &lt;?php }; ?&gt;value=\"b\"&gt;b&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>To avoid many if-else structures, let javascript do the trick automatically:</p>\n\n<pre><code> &lt;select name=\"name\" id=\"name\"&gt;\n  &lt;option value=\"a\"&gt;a&lt;/option&gt;\n  &lt;option value=\"b\"&gt;b&lt;/option&gt;\n &lt;/select&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n  document.getElementById('name').value = \"&lt;?php echo $_GET['name'];?&gt;\";\n&lt;/script&gt;\n\n &lt;select name=\"location\" id=\"location\"&gt;\n  &lt;option value=\"x\"&gt;x&lt;/option&gt;\n  &lt;option value=\"y\"&gt;y&lt;/option&gt;\n &lt;/select&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n  document.getElementById('location').value = \"&lt;?php echo $_GET['location'];?&gt;\";\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Js only solution:</p>\n\n<pre><code>var tmpParams = decodeURIComponent(window.location.search.substr(1)).split(\"&amp;\");\nfor (var i = 0; i &lt; tmpParams.length; i++) {\n    var tmparr = tmpParams[i].split(\"=\");\n    var tmp = document.getElementsByName(tmparr[0])[0];\n    if (!!tmp){\n        document.getElementsByName(tmparr[0])[0].value = tmparr[1];\n    }\n}\n</code></pre>\n\n<p>or if you are using jquery you can replace</p>\n\n<pre><code> var tmp = document.getElementsByName(tmparr[0])[0];\n if (!!tmp){\n     document.getElementsByName(tmparr[0])[0].value = tmparr[1];\n }\n</code></pre>\n\n<p>with:</p>\n\n<pre><code> $('*[name=\"'+tmparr[0]+'\"]').val(tmparr[1]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Since wordpress already uses jquery you can try something like this:</p>\n\n<pre><code>var POST=&lt;?php echo json_encode($_POST); ?&gt;;\nfor(k in POST){\n  $(\"#\"+k).val(POST[k]);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>After trying al this \"solves\" nothing work. Did some research on w3school before and remember there was explanation of keeping values about radio. But it also works for Select option. See here an example. Just try it out and play with it.</p>\n\n<pre><code>&lt;?php\n$example = $_POST[\"example\"];\n?&gt;\n&lt;form method=\"post\"&gt;        \n&lt;select name=\"example\"&gt;\n    &lt;option &lt;?php if (isset($example) &amp;&amp; $example==\"a\") echo \"selected\";?&gt;&gt;a&lt;/option&gt;\n    &lt;option &lt;?php if (isset($example) &amp;&amp; $example==\"b\") echo \"selected\";?&gt;&gt;b&lt;/option&gt;\n    &lt;option &lt;?php if (isset($example) &amp;&amp; $example==\"c\") echo \"selected\";?&gt;&gt;c&lt;/option&gt;\n&lt;/select&gt;\n&lt;input type=\"submit\" name=\"submit\" value=\"submit\" /&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>&lt;form method=\"get\" action=\"\"&gt;\n &lt;select name=\"name\" value=\"&lt;?php echo $_GET['name'];?&gt;\"&gt;\n   &lt;option value=\"a\"&gt;a&lt;/option&gt;\n   &lt;option value=\"b\"&gt;b&lt;/option&gt;\n &lt;/select&gt;\n &lt;select name=\"location\" value=\"&lt;?php echo $_GET['location'];?&gt;\"&gt;\n   &lt;option value=\"x\"&gt;x&lt;/option&gt;\n   &lt;option value=\"y\"&gt;y&lt;/option&gt;\n &lt;/select&gt;\n   &lt;input type=\"submit\" value=\"Submit\" class=\"submit\" /&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code>&lt;form method=\"get\" action=\"\"&gt;\n   &lt;select name=\"name\"&gt;\n      &lt;option value=\"a\"&gt;a&lt;/option&gt;\n      &lt;option value=\"b\"&gt;b&lt;/option&gt;\n   &lt;/select&gt;\n   &lt;select name=\"location\"&gt;\n      &lt;option value=\"x\"&gt;x&lt;/option&gt;\n      &lt;option value=\"y\"&gt;y&lt;/option&gt;\n   &lt;/select&gt;\n   &lt;input type=\"submit\" value=\"Submit\" class=\"submit\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>On submitting the form, how do I make sure that the selected values remain selected in the dropdowns? This form is inside wordpress (PHP).</p>\n",
            "last_activity_date": 1421832793,
            "question_id": 2246227,
            "score": 6,
            "tags": [
                "php",
                "javascript",
                "html",
                "wordpress",
                "forms"
            ],
            "title": "Keep values selected after form submission"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>window.onload = yourfunction;\n</code></pre>\n\n<p>Or with jQuery if you want:</p>\n\n<pre><code>$(function(){\n   yourfunction;\n});\n</code></pre>\n\n<p>If you want to call more than one function on page load, take a look at this article for more information:</p>\n\n<ul>\n<li><a href=\"http://www.webreference.com/programming/javascript/onloads/\">Using Multiple JavaScript Onload Functions</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p><strong>Your original question was unclear, assuming Kevin's edit/interpretation is correct then this first option doesn't apply</strong></p>\n\n<p>The typical options is using the <code>onload</code> event:</p>\n\n<pre><code>&lt;body onload=\"javascript:SomeFunction()\"&gt;\n....\n</code></pre>\n\n<p>You can also place your javascript at the very end of the body; it won't start executing until the doc is complete.</p>\n\n<pre><code>&lt;body&gt;\n  ...\n  &lt;script type=\"text/javascript\"&gt;\n    SomeFunction();\n  &lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>And, another options, is to consider using a JS framework which intrinsically does this:</p>\n\n<pre><code>// jQuery\n$(document).ready( function () {\n  SomeFunction();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you want the onload method to take parameters, you can do something similar to this:</p>\n\n<pre><code>window.onload = function() {\n  yourFunction(param1, param2);\n};\n</code></pre>\n\n<p>This binds onload to an anonymous function, that when invoked, will run your desired function, with whatever parameters you give it. And, of course, you can run more than one function from inside the anonymous function.</p>\n",
                    "is_accepted": true,
                    "score": 85
                },
                {
                    "body": "<p>Another way to do this is by using event listeners, here how you use them:</p>\n\n<pre><code>document.addEventListener(\"DOMContentLoaded\", function() {\n  you_function(...);\n});\n</code></pre>\n\n<p>Explanation:</p>\n\n<p><strong>DOMContentLoaded</strong> It means when the DOM Objects of the document are fully loaded and seen by JavaScript, also this could have been \"click\", \"focus\"...</p>\n\n<p><strong>function()</strong> Anonymous function, will be invoked when the event occurs.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Try the code below:</p>\n\n<pre><code>&lt;script src=\"js/jquery-1.11.0.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n\n    $(document).ready(function () {\n        yourFunction();\n    });\nfunction yourFunction(){\n //some code\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Traditionally, to call a JavaScript function once the page has loaded, you'd add an <code>onload</code> attribute to the body containing a bit of JavaScript (usually only calling a function):</p>\n\n<pre><code>&lt;body onload=\"foo()\"&gt;\n</code></pre>\n\n<p>When the page has loaded, I want to run some JavaScript code to dynamically populate portions of the page with data from the server. I can't use the <code>onload</code> attribute since I'm using JSP fragments, which have no <code>body</code> element I can add an attribute to.</p>\n\n<p>Is there any other way to call a JavaScript function on load? I'd rather not use jQuery as I'm not very familiar with it.</p>\n",
            "last_activity_date": 1403080935,
            "question_id": 3842614,
            "score": 46,
            "tags": [
                "javascript",
                "onload"
            ],
            "title": "How do I call a JavaScript function on page load?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use <a href=\"http://api.jquery.com/ajaxStop/\"><code>.ajaxStop()</code></a> like this:</p>\n\n<pre><code>$(function() {\n  $(document).ajaxStop(function() {\n    $(this).unbind(\"ajaxStop\"); //prevent running again when other calls finish\n    LoadContact();\n  });\n  LoadCategories($('#Category'));\n  LoadPositions($('#Position'));\n  LoadDepartments($('#Department'));\n});\n</code></pre>\n\n<p>This will run when all current requests are finished then unbind itself so it doesn't run if future ajax calls in the page execute.  Also, make sure to put it before your ajax calls, so it gets bound early enough, it's more important with <a href=\"http://api.jquery.com/ajaxStart/\"><code>.ajaxStart()</code></a>, but best practice to do it with both.</p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p><em>But, I don't want to have to put a bunch of flags in the end of the drop down population callbacks, that I then check, and have to have a recursive setTimeout call checking, prior to calling LoadContact();</em><br>\nNo need for setTimeout. You just check in each callback that all three lists are populated (or better setup a counter, increase it in each callback and wait till it's equal to 3) and then call LoadContact from callback. Seems pretty easy to me.</p>\n\n<p>ajaxStop approach might work to, I'm just not very familiar with it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're on Jquery 1.5 or later, I suspect the Deferred object is your best bet:\n<a href=\"http://api.jquery.com/category/deferred-object/\">http://api.jquery.com/category/deferred-object/</a></p>\n\n<p>The helper method, when, is also quite nice:\n<a href=\"http://api.jquery.com/jQuery.when/\">http://api.jquery.com/jQuery.when/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Expanding on <a href=\"http://stackoverflow.com/a/10954247/2077574\">Tom Lianza's answer</a>, <a href=\"http://api.jquery.com/jQuery.when/\" rel=\"nofollow\"><code>$.when()</code></a> is now a much better way to accomplish this than using <code>.ajaxStop()</code>. </p>\n\n<p>The only caveat is that you need to be sure the asynchronous methods you need to wait on return a <a href=\"http://api.jquery.com/category/deferred-object/\" rel=\"nofollow\"><code>Deferred object</code></a>. Luckily jQuery ajax calls already do this by default. So to implement the scenario from the question, the methods that need to be waited on would look something like this:</p>\n\n<pre><code>function LoadCategories(argument){\n    var deferred = $.ajax({\n       // ajax setup\n    }).then(function(response){ \n       // optional callback to handle this response \n    });\n    return deferred;\n}\n</code></pre>\n\n<p>Then to call LoadContact() after all three ajax calls have returned and optionally executed their own individual callbacks:</p>\n\n<pre><code>// setting variables to emphasize that the functions must return deferred objects\nvar deferred1 = LoadCategories($('#Category'));\nvar deferred2 = LoadPositions($('#Position'));\nvar deferred3 = LoadDepartments($('#Department'));\n\n$.when(deferred1, deferred2, deferred3).then(LoadContact);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>So, I have a page that loads and through jquery.get makes several requests to populate drop downs with their values.</p>\n\n<pre><code>$(function() {\n    LoadCategories($('#Category'));\n    LoadPositions($('#Position'));\n    LoadDepartments($('#Department'));\n\n    LoadContact();\n};\n</code></pre>\n\n<p>It then calls LoadContact(); Which does another call, and when it returns it populates all the fields on the form.  The problem is that often, the dropdowns aren't all populated, and thus, it can't set them to the correct value.</p>\n\n<p>What I need to be able to do, is somehow have LoadContact only execute once the other methods are complete and callbacks done executing.</p>\n\n<p>But, I don't want to have to put a bunch of flags in the end of the drop down population callbacks, that I then check, and have to have a recursive setTimeout call checking, prior to calling LoadContact();</p>\n\n<p>Is there something in jQuery that allows me to say, \"Execute this, when all of these are done.\"?</p>\n\n<p><strong>More Info</strong>\nI am thinking something along these lines</p>\n\n<pre><code>$().executeAfter(\n    function () {   // When these are done\n        LoadCategories($('#Category'));\n        LoadPositions($('#Position'));\n        LoadDepartments($('#Department'));\n    },\n    LoadContact // Do this\n);\n</code></pre>\n\n<p>...it would need to keep track of the ajax calls that happen during the execution of the methods, and when they are all complete, call LoadContact;</p>\n\n<p>If I knew how to intercept ajax that are being made in that function, I could probably write a jQuery extension to do this. </p>\n\n<p><strong>My Solution</strong></p>\n\n<pre><code>;(function($) {\n    $.fn.executeAfter = function(methods, callback) {\n\n        var stack = [];\n\n        var trackAjaxSend = function(event, XMLHttpRequest, ajaxOptions) {\n            var url = ajaxOptions.url;\n\n            stack.push(url);\n        }\n\n        var trackAjaxComplete = function(event, XMLHttpRequest, ajaxOptions) {\n            var url = ajaxOptions.url;\n\n            var index = jQuery.inArray(url, stack);\n\n            if (index &gt;= 0) {\n                stack.splice(index, 1);\n            }\n\n            if (stack.length == 0) {\n                callback();\n                $this.unbind(\"ajaxComplete\");\n            }\n        }\n\n        var $this = $(this);\n\n        $this.ajaxSend(trackAjaxSend)\n        $this.ajaxComplete(trackAjaxComplete)\n\n        methods();\n        $this.unbind(\"ajaxSend\");\n    };\n})(jQuery);\n</code></pre>\n\n<p>This binds to the ajaxSend event while the methods are being called and keeps a list of urls (<strong>need a better unique id though</strong>) that are called.  It then unbinds from ajaxSend so only the requests we care about are tracked.  It also binds to ajaxComplete and removes items from the stack as they return.  When the stack reaches zero, it executes our callback, and unbinds the ajaxComplete event.</p>\n",
            "last_activity_date": 1404424108,
            "question_id": 2768293,
            "score": 37,
            "tags": [
                "javascript",
                "jquery",
                "asynchronous",
                "callback"
            ],
            "title": "Waiting on multiple asynchronous calls to complete before continuing"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>As <a href=\"http://javascript.crockford.com/code.html\">Douglas Crockford suggests</a> - </p>\n\n<blockquote>\n  <p>Put a ; (semicolon) at the end of every simple statement. Note that an assignment statement which is assigning a function literal or object literal is still an assignment statement and must end with a semicolon.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Because JavaScript does nasty things to you when it guesses where to put semicolons.  It's better to be explicit and let the interpreter know exactly what you meant than it is to let the idiot box guess on your behalf.</p>\n\n<p>References:</p>\n\n<ul>\n<li><a href=\"http://www.webmasterworld.com/forum91/521.htm\">http://www.webmasterworld.com/forum91/521.htm</a></li>\n<li><a href=\"http://www.howtocreate.co.uk/tutorials/javascript/semicolons\">http://www.howtocreate.co.uk/tutorials/javascript/semicolons</a></li>\n<li><a href=\"http://robertnyman.com/2008/10/16/beware-of-javascript-semicolon-insertion/\">http://robertnyman.com/2008/10/16/beware-of-javascript-semicolon-insertion/</a></li>\n</ul>\n\n<p>...and a cast of thousands.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Because</p>\n\n<ul>\n<li>Debugging the subtle bugs that occur when you don't is a waste of time you could be spending doing something cool</li>\n<li><a href=\"http://www.crockford.com/javascript/jsmin.html\" rel=\"nofollow\">Minifiers</a>/<a href=\"http://dean.edwards.name/packer/3/\" rel=\"nofollow\">packers</a>/<a href=\"http://developer.yahoo.com/yui/compressor/\" rel=\"nofollow\">compressors</a> rely on it</li>\n<li>It makes it clearer to someone maintaining the code later what you intend</li>\n<li>Not all code maintainers understand the rules for automatic insertion well enough to maintain code with them left out</li>\n<li>Not all implementations get the rules for automatic insertion quite right</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you asked, because you come from a Python background: The difference is:</p>\n\n<ul>\n<li><p>in Python you <em>shouldn't</em> terminate lines with anything, but <a href=\"http://docs.python.org/reference/simple_stmts.html#simple-statements\" rel=\"nofollow\">are allowed</a> to use the semicolon, if you must</p></li>\n<li><p>in JavaScript you <em>should</em> terminate the lines with a semicolon, but <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf#page=38\" rel=\"nofollow\">are allowed (PDF, page 26, point 7.9)</a> to omit it, if it's unambiguous</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>It looks like there are very few reasons, or, actually, edge cases, when one would want to use semicolons.</p>\n\n<p><a href=\"http://aresemicolonsnecessaryinjavascript.com/\">http://aresemicolonsnecessaryinjavascript.com/</a> &lt;- this is down now, use </p>\n\n<p><a href=\"https://github.com/aresemicolonsnecessaryinjavascript/aresemicolonsnecessaryinjavascript.github.com\">https://github.com/aresemicolonsnecessaryinjavascript/aresemicolonsnecessaryinjavascript.github.com</a></p>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>Are there any reasons, apart from subjective visual perception and cases where you have multiple statements on the same line, to use semicolon at the end of statements in Javascript?</p>\n\n<p>It looks like that there's plenty of evidence suggesting that use of semicolons is highly optional and is required in only few of the specific cases.</p>\n",
            "last_activity_date": 1373875261,
            "question_id": 2399935,
            "score": 30,
            "tags": [
                "javascript",
                "formatting",
                "coding-style",
                "semicolon"
            ],
            "title": "Why use semicolon?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>use jQuery, or filter the results from getElementsByTag</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You could write your own. Something like:</p>\n\n<pre><code>function GEBCN(cn){\n    if(document.getElementsByClassName) // Returns NodeList here\n        return document.getElementsByClassName(cn);\n\n    cn = cn.replace(/ *$/, '');\n\n    if(document.querySelectorAll) // Returns NodeList here\n        return document.querySelectorAll((' ' + cn).replace(/ +/g, '.'));\n\n    cn = cn.replace(/^ */, '');\n\n    var classes = cn.split(/ +/), clength = classes.length;\n    var els = document.getElementsByTagName('*'), elength = els.length;\n    var results = [];\n    var i, j, match;\n\n    for(i = 0; i &lt; elength; i++){\n        match = true;\n        for(j = clength; j--;)\n            if(!RegExp(' ' + classes[j] + ' ').test(' ' + els[i].className + ' '))\n                match = false;\n        if(match)\n            results.push(els[i]);\n    }\n\n    // Returns Array here\n    return results;\n}\n</code></pre>\n\n<p>Will work pretty well, but you could write a faster one if you want to. Then you can just change:</p>\n\n<pre><code>document.getElementsByClassName('verdana14 toAdd');\n</code></pre>\n\n<p>To:</p>\n\n<pre><code>GEBCN('verdana14 toAdd');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Use <code>document.querySelectorAll('.verdana14.toAdd')</code>.</p>\n\n<p><em>Update:</em> FWIW, I\u2019ve written a related <a href=\"http://tanalin.com/en/blog/2014/03/get-elements-by-class-name-ie8/\">blog post</a>.</p>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p><code>getElementsByClassName</code> method is not supported by IE8.</p>\n\n<p>You should use <code>document.querySelectorAll('.classname')</code> (works in IE8+) or a library that implements that functionality - like:</p>\n\n<ul>\n<li><code>jQuery</code></li>\n<li><code>Moo Tools</code></li>\n<li><code>DOJO</code></li>\n<li><code>YUI</code></li>\n<li><p><code>Prototype</code></p>\n\n<p>... Among others...</p></li>\n</ul>\n\n<hr>\n\n<p><code>querySelectorAll</code> support:</p>\n\n<p><a href=\"http://www.quirksmode.org/dom/w3c_core.html#t13\">http://www.quirksmode.org/dom/w3c_core.html#t13</a></p>\n\n<p><code>getElementsByClassName</code> support:</p>\n\n<p><a href=\"http://www.quirksmode.org/dom/w3c_core.html#t11\">http://www.quirksmode.org/dom/w3c_core.html#t11</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>you may try using jquery as it have alternative class selector to get the elements by there class names.\n$(\".testclass\").each... it will give you required elements by class names</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I wrote this small library (less than 1kb) that uses native methods to retrieve dom elements. If you check out the className method, you'll find the answer to your question.</p>\n\n<p><a href=\"https://github.com/tujamaica/Find/blob/master/find.js\" rel=\"nofollow\">Find JS on Github</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I know \"getElementsByClassName\" is not supporte by IE8. Do you know what can I use instead? I am getting annoying by error \"Object doesn't support this property or method\".\nThe HTML code is:</p>\n\n<pre><code>function sumar() {\nvar elems = document.getElementsByClassName('verdana14 toAdd');\nvar myLength = elems.length;\ntotal = 0;\nfor (var i = 0; i &lt; myLength; ++i) {\n   if (elems[i].value!=\"\") {\n       total += parseInt(elems[i].value,10);\n       }\n    }\n\nvar promedio = total/myLength;\nparseFloat(document.getElementById('promediocal').value = promedio.toFixed(2));\n}\n</code></pre>\n\n<p>This the input text that calls the javascript function:</p>\n\n<pre><code>&lt;input name='AE_EA_1_BIV_003_2' type='text' class='verdana14 toAdd' id='AE_EA_1_BIV_003_2' style='width:50px' onChange='sumar()'/&gt;\n&lt;input name='AE_EA_1_BIV_003_3' type='text' class='verdana14 toAdd' id='AE_EA_1_BIV_003_3' style='width:50px' onChange='sumar()'/&gt;\n&lt;input name='AE_EA_1_BIV_003_4' type='text' class='verdana14 toAdd' id='AE_EA_1_BIV_003_4' style='width:50px' onChange='sumar()'/&gt;\n</code></pre>\n",
            "last_activity_date": 1409856877,
            "question_id": 9568969,
            "score": 28,
            "tags": [
                "javascript",
                "internet-explorer-8"
            ],
            "title": "getElementsByClassName &amp; IE8: Object doesn&#39;t support this property or method"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You can use the native javascript Date object to keep track of dates. It will give you the current date, let you keep  track of calendar specific stuff and even help you manage different timezones. You can add and substract days/hours/seconds to change the date you are working with or to calculate new dates.</p>\n\n<p>take a look at this object reference to learn more:</p>\n\n<p><a href=\"http://www.w3schools.com/jsref/jsref_obj_date.asp\" rel=\"nofollow\">Date</a></p>\n\n<p>Hope that helps!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>startdate.setDate(startdate.getDate() - daysToSubtract);\n\n\nstartdate.setDate(startdate.getDate() + daysToAdd);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p><strong>Demo Simple</strong> <a href=\"http://jsfiddle.net/2YkeK/\">http://jsfiddle.net/2YkeK/</a></p>\n\n<p><strong>Another Demo with date picker</strong> <a href=\"http://jsfiddle.net/2qzjg/\">http://jsfiddle.net/2qzjg/</a></p>\n\n<p>Good link: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FDate\">ref for Date Link here</a></p>\n\n<p>Extra stuff that might come handy.</p>\n\n<pre><code>getDate()   Returns the day of the month (from 1-31)\ngetDay()    Returns the day of the week (from 0-6)\ngetFullYear()   Returns the year (four digits)\ngetHours()  Returns the hour (from 0-23)\ngetMilliseconds()   Returns the milliseconds (from 0-999)\ngetMinutes()    Returns the minutes (from 0-59)\ngetMonth()  Returns the month (from 0-11)\ngetSeconds()    Returns the seconds (from 0-59)\n</code></pre>\n\n<p>Hope it helps, cheers!</p>\n\n<p><strong>code</strong></p>\n\n<pre><code>var date = new Date('2011','01','02');\nalert('the original date is '+date);\nvar newdate = new Date(date);\n\nnewdate.setDate(newdate.getDate() - 7); // minus the date\n\nvar nd = new Date(newdate);\nalert('the new date is '+nd);\u200b\n</code></pre>\n\n<p><strong>In Datepicker</strong></p>\n\n<pre><code>$(\"#in\").datepicker({\n    minDate: 0,\n    onSelect: function(dateText, inst) {\n       var actualDate = new Date(dateText);\n       var newDate = new Date(actualDate.getFullYear(), actualDate.getMonth(), actualDate.getDate()+1);\n        $('#out').datepicker('option', 'minDate', newDate );\n    }\n});\n\n$(\"#out\").datepicker();\u200b\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>May be this could help</p>\n\n<pre><code>    &lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n        function AddDays(toAdd) {\n            if (!toAdd || toAdd == '' || isNaN(toAdd)) return;\n            var d = new Date();\n            d.setDate(d.getDate() + parseInt(toAdd));\n\n            document.getElementById(\"result\").innerHTML = d.getDate() + \"/\" + d.getMonth() + \"/\" + d.getFullYear();\n        }\n\nfunction SubtractDays(toAdd) {\n            if (!toAdd || toAdd == '' || isNaN(toAdd)) return;\n            var d = new Date();\n            d.setDate(d.getDate() - parseInt(toAdd));\n\n            document.getElementById(\"result\").innerHTML = d.getDate() + \"/\" + d.getMonth() + \"/\" + d.getFullYear();\n        }\n    &lt;/script&gt;\n    ---------------------- UI ---------------\n        &lt;div id=\"result\"&gt;\n        &lt;/div&gt;\n        &lt;input type=\"text\" value=\"0\" onkeyup=\"AddDays(this.value);\" /&gt;\n        &lt;input type=\"text\" value=\"0\" onkeyup=\"SubtractDays(this.value);\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The JavaScript <code>Date</code> object can help here.</p>\n\n<p>The first step is to convert those strings to <code>Date</code> instances. That's easily done:</p>\n\n<pre><code>var str = \"06/07/2012\"; // E.g., \"mm/dd/yyyy\";\nvar dt = new Date(parseInt(str.substring(6), 10),        // Year\n                  parseInt(str.substring(0, 2), 10) - 1, // Month (0-11)\n                  parseInt(str.substring(3, 5), 10));    // Day\n</code></pre>\n\n<p>Then you can do all sorts of useful calculations. JavaScript dates understand leap years and such. They use an idealized concept of \"day\" which is <em>exactly</em> 86,400 seconds long. Their underlying value is the number of milliseconds since The Epoch (midnight, Jan 1st, 1970); it can be a negative number for dates prior to The Epoch.</p>\n\n<p>More on the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date\" rel=\"nofollow\">MDN page on <code>Date</code></a>.</p>\n\n<p>You might also consider using a library like <a href=\"http://momentjs.com\" rel=\"nofollow\">MomentJS</a>, which will help with parsing, doing date math, formatting...</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Working with dates in javascript is always a bit of a hassle. I always end up using a library. Moment.js and XDate are both great:</p>\n\n<p><a href=\"http://momentjs.com/\" rel=\"nofollow\">http://momentjs.com/</a></p>\n\n<p><a href=\"http://arshaw.com/xdate/\" rel=\"nofollow\">http://arshaw.com/xdate/</a></p>\n\n<p>Fiddle:</p>\n\n<p><a href=\"http://jsfiddle.net/39fWa/\" rel=\"nofollow\">http://jsfiddle.net/39fWa/</a></p>\n\n<pre><code>var $output = $('#output'),\n    tomorrow = moment().add('days', 1);\n\n$('&lt;pre /&gt;').appendTo($output).text(tomorrow);\n\ntomorrow = new XDate().addDays(-1);\n\n$('&lt;pre /&gt;').appendTo($output).text(tomorrow);\n</code></pre>\n\n<p>\u200b</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>//In order to get yesterday's date in mm/dd/yyyy.\n\n\nfunction gimmeYesterday(toAdd) {\n            if (!toAdd || toAdd == '' || isNaN(toAdd)) return;\n            var d = new Date();\n            d.setDate(d.getDate() - parseInt(toAdd));\nvar yesterDAY = (d.getMonth() +1) + \"/\" + d.getDate() + \"/\" + d.getFullYear();\n$(\"#endDate\").html(yesterDAY);\n        }\n$(document).ready(function() {\ngimmeYesterday(1);\n});\n</code></pre>\n\n<p>you can try here: <a href=\"http://jsfiddle.net/ZQAHE/\" rel=\"nofollow\">http://jsfiddle.net/ZQAHE/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>All these functions for adding date are wrong. You are passing the wrong month to the Date function. More information about the problem : \n<a href=\"http://www.domdigger.com/blog/?p=9\" rel=\"nofollow\">http://www.domdigger.com/blog/?p=9</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You need to use <code>getTime()</code> and <code>setTime()</code> to add or substract the time in a javascript Date object.  Using <code>setDate()</code> and <code>getDate()</code> will lead to errors when reaching the limits of the months 1, 30, 31, etc..</p>\n\n<p>Using setTime allows you to set an offset in milliseconds, and let the Date object figure the rest:</p>\n\n<pre><code>var now=new Date();\nvar yesterdayMs = now.getTime() - 1000*60*60*24*1; // Offset by one day;\nnow.setTime( yesterdayMs );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I want to let users easily add and subtract dates using javascript in order to browse their entries by date.</p>\n\n<p>The dates are in the format: \"mm/dd/yyyy\". I want them to be able to click a \"Next\" button, and if the date is: \" 06/01/2012\" then on clicking next, it should become: \"06/02/2012\". If they click the 'prev' button then it should become, \"05/31/2012\".</p>\n\n<p>It needs to keep track of leap years, number of days in the month, etc.</p>\n\n<p>Any ideas?</p>\n\n<p>P.S using ajax to get the date from the server isn't an option, its a bit laggy and not the experience for the user that the client wants.</p>\n",
            "last_activity_date": 1382116304,
            "question_id": 10931288,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "date",
                "jquery-ui-datepicker"
            ],
            "title": "How to add/subtract dates with javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can use the same DOM methods as with any other element:</p>\n\n<pre><code>var source= document.createElement('source');\nsource.type= 'audio/ogg';\nsource.src= 'audio/song.ogg';\naudio.appendChild(source);\nsource= document.createElement('source');\nsource.type= 'audio/mpeg';\nsource.src= 'audio/song.mp3';\naudio.appendChild(source);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Why add multiple files with JavaScript when you can just detect the types supported?  I would suggest instead detecting the best type then just setting the <code>src</code>.</p>\n\n<pre><code>var source= document.createElement('source');\nif (audio.canPlayType('audio/mpeg;')) {\n    source.type= 'audio/mpeg';\n    source.src= 'audio/song.mp3';\n} else {\n    source.type= 'audio/ogg';\n    source.src= 'audio/song.ogg';\n}\naudio.appendChild(source);\n</code></pre>\n\n<p>Add as many checks as you have file types.</p>\n",
                    "is_accepted": true,
                    "score": 31
                }
            ],
            "body": "<p>A lot of examples demonstrate multiple source tags nested in the audio tag, as a method to overcome codec compatibility across different browsers. Something like this -</p>\n\n<pre><code>&lt;audio controls=\"controls\"&gt;\n  &lt;source src=\"song.ogg\" type=\"audio/ogg\" /&gt;\n  &lt;source src=\"song.mp3\" type=\"audio/mpeg\" /&gt;\n  Your browser does not support the audio element.\n&lt;/audio&gt;\n</code></pre>\n\n<p>While with JavaScript, I'm also allowed to create an audio element like this -</p>\n\n<pre><code>var new_audio = document.createElement(\"audio\");\n</code></pre>\n\n<p>Where I can set its source by the <code>.src</code> property - <code>new_audio.src=\"....\";</code></p>\n\n<p>I failed to find how to add multiple sources in an audio element through JavaScript, something similar to source tags shown in the HTML snippet.</p>\n\n<p>Do I manipulate the <code>new_audio</code> and add the <code>&lt;source...</code> tags inside it, just like one would manipulate any other DOM element? I'm doing this right now and it works, which is -</p>\n\n<pre><code>new_audio.innerHTML = \"&lt;source src='audio/song.ogg' type='audio/ogg' /&gt;\";\nnew_audio.play();\n</code></pre>\n\n<p>I wonder if there is a more appropriate way to do it?</p>\n",
            "last_activity_date": 1319802470,
            "question_id": 4053262,
            "score": 25,
            "tags": [
                "javascript",
                "html5",
                "html5-audio"
            ],
            "title": "How can I add multiple sources to an HTML5 audio tag, programmatically?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>IE8 only supports <code>querySelectorAll()</code> in standards mode. From <a href=\"http://msdn.microsoft.com/en-us/library/ff462057.aspx#selectorapi\">MSDN</a>:</p>\n\n<blockquote>\n  <p>The Selectors API is defined as part of the <a href=\"http://www.w3.org/TR/selectors-api\">Selectors API</a> specification and is only available to Web pages displayed in IE8 standards mode.</p>\n</blockquote>\n\n<p>Chances are your page doesn't have a proper DOCTYPE declaration; you will need to add one.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Check that your page isn't in Quirks mode or Compatibility mode. You can use the F12 dev tools to confirm this. Press F12 and look in the top-right corner of the resulting window. If you see \"Compatibility\" or \"Quirks\" in the mode description, then you've found the problem.</p>\n\n<ul>\n<li><p><strong>Quirks mode:</strong> this is usually triggered by a missing or broken Doctype. If this is the case, make sure your page starts with the following:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n</code></pre></li>\n<li><p><strong>Compatibility mode (IE7 mode):</strong> This may be triggered if you're viewing the page locally (ie running it on your local machine, eg for testing, or on your local network). In this case, you are being hit by an IE config setting that you should disable. Go to the Tools menu, and pick the Comaptibility View Settings option. Untick the compatibility options, and the page should start working.</p>\n\n<p>Compat mode may also be triggered (or avoided) by an <code>X-UA-Compatibility</code> meta tag. If you're having trouble with compatibility mode, this is a good way to avoid it: Add the following line to your code:</p>\n\n<pre><code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n</code></pre></li>\n</ul>\n\n<p>Either (or both) of the above could be the problem, but my guess is that the problem is compatibility mode. The compat-mode-on-intranet-sites setting is suprisingly little known, and catches a lot of people out, even some seasoned developers.</p>\n",
                    "is_accepted": true,
                    "score": 27
                }
            ],
            "body": "<p>I tried to use <code>document.querySelectorAll()</code>, but IE8 throw error, that </p>\n\n<blockquote>\n  <p>Object doesn't support this property or method</p>\n</blockquote>\n\n<pre><code>var titleCheckBox = document.querySelectorAll(\"\");\n</code></pre>\n\n<p>Here <a href=\"http://www.quirksmode.org/dom/w3c_core.html#t13\">http://www.quirksmode.org/dom/w3c_core.html#t13</a> written, that IE8 support this method. \nWhat I doing wrong?</p>\n",
            "last_activity_date": 1370357437,
            "question_id": 16920365,
            "score": 20,
            "tags": [
                "javascript",
                "internet-explorer-8",
                "w3c",
                "selectors-api"
            ],
            "title": "IE8 does not support querySelectorAll"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Perhaps <a href=\"http://stackoverflow.com/questions/1063813/listener-for-property-value-changes-in-a-javascript-object\">this post</a> would help...? That is however, only for specific properties and Gecko based browsers... If you need support for other browsers, its buggy, but you could look into the onpropertychange. Here's the <a href=\"http://msdn.microsoft.com/en-us/library/ms536956%28v=vs.85%29.aspx\" rel=\"nofollow\">MSDN Page</a>. Hope that helps a bit...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Looking through the nowjs source code, I believe they do this by continuously monitoring the <code>now</code> object and pushing changes between client and server whenever they are detected. I admit I haven't fully grokked their code yet, however.</p>\n\n<p>In a browser, this would be done with some fun <code>setInterval</code> hacks.</p>\n\n<p><strong>EDIT</strong>: yes, that is indeed what they do: <a href=\"https://github.com/Flotype/now/blob/master/lib/client/now.js#L368\">line 368</a> of the client <code>now.js</code>. They do <a href=\"https://github.com/Flotype/now/blob/master/lib/client/now.js#L164\">some more tricks</a> so that once a new property is detected, future access to it is caught by getters and setters, but those modifications are only made every 1000 ms in a <code>setTimeout</code>.</p>\n\n<p>Another piece of evidence that this is impossible in current JavaScript is that <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony:proxies\">the proxies proposal for ECMAScript Harmony</a> is designed explicitly to enable such scenarios, implying very strongly that they can't be done currently. Recent Mozilla browsers have <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Proxy\">a prototype proxies implementation</a>, if perhaps that's enough. And apparently <a href=\"http://code.google.com/p/v8/issues/detail?id=1543\">V8 is working to add support</a>, which could be enough depending on what version of V8 Node is using these days.</p>\n\n<p><strong>EDIT2</strong>: oh cool, on the <em>server</em> side apparently nowjs does use proxies! Which likely means they are mature enough in Node for your usage. See what they do at <a href=\"https://github.com/Flotype/now/blob/master/lib/proxy.js\">https://github.com/Flotype/now/blob/master/lib/proxy.js</a>. Or just do <code>var Proxy = require(\"nodejs-proxy\")</code> and hope they follow the spec so you can take advantage of the documentation from MDC and elsewhere.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>In Firefox, you can use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/watch\" rel=\"nofollow\" title=\"Object.watch\">Object.watch</a>. If you look at this thread, <a href=\"http://stackoverflow.com/questions/1029241/javascript-object-watch-for-all-browsers\">Javascript Object.Watch for all browsers?</a>, there's an example of using it something like it in all browsers.</p>\n\n<p>Ooops, I just realized you want to watch all properties, not a specific property... The solution above is to watch a specific property.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How do I emulate PHP-style __get() and __set() magic getter/setters in JavaScript? A lot of people say that this is currently impossible. I am almost certain that it is possible because projects like nowjs (http://nowjs.com) do something like this.</p>\n\n<p>I know that you can utilize <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special/get\">get</a> and <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special/set\">set</a>, but these don't work when you're not sure what the property name will be. For example, <strong>what if you wanted an event handler to execute when a new property is created</strong>?</p>\n\n<p>Example of what I'd want to do:</p>\n\n<pre><code>var obj = {};\nnotify(obj, function(key, value) {\n   //key is now the name of the property being set.\n   //value is the value of the property about to be set\n   console.log(\"setting \" + key + \" to \" + value);\n});\nobj.foo = 2; //prints \"setting foo to 2\"\nobj.bar = {a: 2}; //prints \"setting bar to [Object]\"\n//Notice that notify() worked even though 'foo' and 'bar' weren't even defined yet!\n</code></pre>\n\n<p>(The question is similar to the following questions:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/6216553/is-there-a-way-to-monitor-changes-to-an-object\">Is there a way to monitor changes to an object?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/994143/JavaScript-getter-for-all-properties\">JavaScript getter for all properties</a></li>\n</ul>\n\n<p>)</p>\n\n<p><strong>EDIT:</strong> It looks like this feature is called \"dynamic proxies\" and should appear in the ECMAScript \"Harmony\" standard (probably ES6). You can read more <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony%3aproxies\">here</a>. A new 'Proxy' Object is introduced with a couple methods (I.e. Create() and createFunction() ).</p>\n\n<p>One could do this:</p>\n\n<pre><code>//Constructing an object proxy (proto is optional)\nvar proxy = Proxy.create(handler, proto);\nproxy.foo = 2; //Triggers 'set' function in the handler (read about it)\n</code></pre>\n\n<p>Bottom line here: it doesn't work in most browsers, but an implementation is available for Node.js: <a href=\"https://github.com/samshull/node-proxy\">node-proxy</a>.</p>\n",
            "last_activity_date": 1355284658,
            "question_id": 6985582,
            "score": 20,
            "tags": [
                "javascript",
                "node.js",
                "setter",
                "getter"
            ],
            "title": "Monitor All JavaScript Object Properties (magic getters and setters)"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>To remove <em>just the tags, and not the content</em>, which is how PHP's <code>strip_tags()</code> behaves, you can do:</p>\n\n<pre><code>var whitelist = \"p\"; // for more tags use the multiple selector, e.g. \"p, img\"\n$(\"#text *\").not(whitelist).each(function() {\n    var content = $(this).contents();\n    $(this).replaceWith(content);\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/JEnvr/3/\"><strong>Try it out here.</strong></a></p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<h2>UPDATE</h2>\n\n<p>Use the following to strip tags while keeping content</p>\n\n<pre><code>$('#text').find('p').contents().unwrap();\n</code></pre>\n\n<p>This will strip <code>p</code> tag where <code>p</code> is a child element of '#text'.  </p>\n\n<h2>Check working example at <a href=\"http://jsfiddle.net/YWCsH/\" rel=\"nofollow\">http://jsfiddle.net/YWCsH/</a></h2>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Not an actual answer, but a word of caution (depending on what you're trying to do with this):</p>\n\n<p>IMHO, in almost <strong>all</strong> cases, input sanitization should be done on the server side (in this case, using the native PHP functions). If your intent is to <strong>replace</strong> PHP functionality with client-side functionality, I would <em>strongly</em> advise against it.</p>\n\n<p>Why?</p>\n\n<p>Just because you're authoring a website, it doesn't mean that:</p>\n\n<ol>\n<li>Your users have JavaScript enabled. If you aren't submitting your form strictly through script (using submit buttons, etc), it still allows users to submit invalid data (such as &lt;script&gt; tags, etc.)</li>\n<li>Requests may not actually be initiated by a browser at all, circumventing any JS-based input sanitization.</li>\n</ol>\n\n<p>Again, not really answering your question, but a word of caution based on where you could possibly be headed based on your question :)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To remove all tags you can use</p>\n\n<pre><code>$('&lt;div&gt;Content&lt;/div&gt;').text()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>You can try this, probably best solution: <a href=\"http://phpjs.org/functions/strip_tags/\" rel=\"nofollow\">http://phpjs.org/functions/strip_tags/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just use a regular expression:</p>\n\n<pre><code>html.replace( /&lt;.*?&gt;/g, '' );\n</code></pre>\n\n<p>Done. :)</p>\n\n<p>For the <code>p</code> tag:</p>\n\n<pre><code>html.replace( /&lt;[^p].*?&gt;/g, '' );\n</code></pre>\n\n<p>For other tags, it gets more complicated.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>This worked for me:</p>\n\n<pre><code>function strip_tags( str ) {\n    str=str.toString();\n    return str.replace(/&lt;\\/?[^&gt;]+&gt;/gi, '');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a jQuery version of this function?</p>\n\n<blockquote>\n  <p>string <strong>strip_tags</strong>( string $str [,\n  string $allowable_tags ] )</p>\n</blockquote>\n\n<p>strip all tags and content inside them from a string except the ones defined in the allowable tags string.</p>\n\n<p>like:</p>\n\n<pre><code>var stripped = strip_tags($('#text').html(), '&lt;p&gt;&lt;em&gt;&lt;i&gt;&lt;b&gt;&lt;strong&gt;&lt;code&gt;');\n</code></pre>\n\n<p>from:</p>\n\n<pre><code>&lt;div id=\"text\"&gt;\n  &lt;p&gt; paragraph &lt;/p&gt;\n  &lt;div&gt; should be stripped &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1409043412,
            "question_id": 5601903,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "strip-tags"
            ],
            "title": "jQuery (almost) equivalent of PHP&#39;s strip_tags()"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Nope.  The browser does it however it does it, and you get no control over scaling algorithms.</p>\n\n<p>However, I'm sure there is a canvas based solution you could make, but it would probably involve copying pixels out of a source image and strategically drawing them into the canvas.  It would be tricky, but possible (and slow).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>im not sure but maybe you can use imagedata. try this function..</p>\n\n<pre><code>function imageToImageData(image) {\n     var canvas = document.createElement(\"canvas\");\n     canvas.width = image.width;\n     canvas.height = image.height;\n     var ctx = canvas.getContext(\"2d\");\n     ctx.drawImage(image, 0, 0);\n     return ctx.getImageData(0, 0, canvas.width, canvas.height);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The only way I can think of is via canvas.  You can try simply drawing the image to a canvas and then scaling the canvas -- I <em>think</em> that you won't get anti-aliasing this way.  If you still do, you can try either scaling the image in the draw call or if <em>that</em> doesn't work, you could use <code>getImageData</code> and <code>putImageData</code> to scale the image \"by hand\"</p>\n\n<p>update: first method works: <a href=\"http://jsfiddle.net/nUVJt/3/\" rel=\"nofollow\">http://jsfiddle.net/nUVJt/3/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The Canvas documentation explicitly does not specify a scaling method - in my own tests it did indeed anti-alias the image quite badly in Firefox.</p>\n\n<p>The code below copies pixel by pixel from a source image (which must be from the same Origin or from a Data URI) and scales it by the specified factor.</p>\n\n<p>An extra off-screen canvas (<code>src_canvas</code>) is required to receive the original source image, and its image data is then copied pixel by pixel into an on-screen canvas.</p>\n\n<pre><code>var img = new Image();\nimg.src = ...;\nimg.onload = function() {\n\n    var scale = 8;\n\n    var src_canvas = document.createElement('canvas');\n    src_canvas.width = this.width;\n    src_canvas.height = this.height;\n\n    var src_ctx = src_canvas.getContext('2d');\n    src_ctx.drawImage(this, 0, 0);\n    var src_data = src_ctx.getImageData(0, 0, this.width, this.height).data;\n\n    var dst_canvas = document.getElementById('canvas');\n    dst_canvas.width = this.width * scale;\n    dst_canvas.height = this.height * scale;\n    var dst_ctx = dst_canvas.getContext('2d');\n\n    var offset = 0;\n    for (var y = 0; y &lt; this.height; ++y) {\n        for (var x = 0; x &lt; this.width; ++x) {\n            var r = src_data[offset++];\n            var g = src_data[offset++];\n            var b = src_data[offset++];\n            var a = src_data[offset++] / 100.0;\n            dst_ctx.fillStyle = 'rgba(' + [r, g, b, a].join(',') + ')';\n            dst_ctx.fillRect(x * scale, y * scale, scale, scale);\n        }\n    }\n};\n</code></pre>\n\n<p>Working demo at <a href=\"http://jsfiddle.net/alnitak/LwJJR/\">http://jsfiddle.net/alnitak/LwJJR/</a></p>\n\n<p><strong>EDIT</strong> a more optimal demo is available at <a href=\"http://jsfiddle.net/alnitak/j8YTe/\">http://jsfiddle.net/alnitak/j8YTe/</a> that also uses a raw image data array for the destination canvas.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I've gotten this to work for canvas</p>\n\n<pre><code>var canvas = document.getElementById(\"canvas\"),\n    context = canvas.getContext('2d');\ncontext.webkitImageSmoothingEnabled = context.imageSmoothingEnabled = context.mozImageSmoothingEnabled = context.oImageSmoothingEnabled = false;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>So I ran across this recently: <a href=\"http://www.nicalis.com/index.php\" rel=\"nofollow\">http://www.nicalis.com/index.php</a></p>\n\n<p>And I was curious: Is there a way to do this sort of thing with smaller images? I mean, it's pixel art, and rather than using an image with each pixel quadrupled in size couldn't we stretch them with the code? So I started trying to make it happen.</p>\n\n<p>I tried CSS, Javascript, and even HTML, none of which worked. They all blur up really badly (like this: <a href=\"http://jsfiddle.net/nUVJt/2/\" rel=\"nofollow\">http://jsfiddle.net/nUVJt/2/</a>), which brings me to my question: Can you stretch an image in-browser without any antialiasing?</p>\n\n<p>I'm open to any suggestions, whether it's using a canvas, jQuery, CSS3, or whatever.</p>\n\n<p>Thanks for the help!</p>\n\n<p><strong>EDIT:</strong> There's a better way to do this now! A slightly less hackish way! Here's the magic:</p>\n\n<pre><code>.pixelated {\n    image-rendering: -moz-crisp-edges;\n    image-rendering: -o-crisp-edges;\n    image-rendering: -webkit-optimize-contrast;\n    -ms-interpolation-mode: nearest-neighbor;\n    image-rendering: pixelated;\n}\n</code></pre>\n\n<p>And that'll stop the anti-aliasing in all the modern browsers. It'll even work in IE7-8, but not in 9, and I don't know of any way of doing it in 9, unfortunately (aside from the canvas hack outlined below). \nIt's not even funny how much faster it is doing it this way than with JS. Here's more info on those: <a href=\"https://developer.mozilla.org/en-US/docs/CSS/Image-rendering\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/CSS/Image-rendering</a></p>\n\n<p><strong>EDIT2:</strong> Because this isn't an official spec yet, it's not very reliable. Chrome and FF both seem to have stopped supporting it since I wrote the above (according to <a href=\"http://vaughnroyko.com/state-of-nearest-neighbor-interpolation-in-canvas/\" rel=\"nofollow\">this article</a> which was mentioned below), which is really annoying. We're probably going to have to wait a few more years before we really can start using this in CSS, which is really unfortunate.</p>\n\n<p><strong>FINAL EDIT:</strong> There is an official way to do this now! There's a new property called <code>image-rendering</code>. It's in the <a href=\"http://dev.w3.org/csswg/css-images-3/#the-image-rendering\" rel=\"nofollow\">CSS3 spec</a>. Support is <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/image-rendering#Browser_compatibility\" rel=\"nofollow\">super spotty</a> right now, but <a href=\"https://www.chromestatus.com/feature/5118058116939776\" rel=\"nofollow\">Chrome just added support</a> so before too long we\u2019ll be able to just say <code>image-rendering: pixelated;</code> and it\u2019ll work all the places (yaayy evergreen browsers!)</p>\n",
            "last_activity_date": 1424097258,
            "question_id": 8597081,
            "score": 19,
            "tags": [
                "javascript",
                "css",
                "image",
                "image-manipulation"
            ],
            "title": "How to stretch images with no antialiasing"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You <em>almost</em> had it, you need to set the <code>this</code> reference inside of the old <code>size</code> function to be the <code>this</code> reference in the override function, like this:</p>\n\n<pre><code>var oSize = jQuery.fn.size;\njQuery.fn.size = function() {\n    alert(this.length);\n\n    // Now go back to jQuery's original size()\n    return oSize.apply(this, arguments);\n};\n</code></pre>\n\n<p>The way this works is <code>Function</code> instances have a method called <code>apply</code>, whose purpose is to arbitrarily override the inner <code>this</code> reference inside of the function's body.</p>\n\n<p>So, as an example:</p>\n\n<pre><code>var f = function() { console.log(this); }\nf.apply(\"Hello World\", null); //prints \"Hello World\" to the console\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>The following is variation of the other answer.</p>\n\n<pre><code>(function(jQuery){\n  window['console'] = window['console']||{log:function(){},debug: function(){}};\n  var oSize = jQuery.fn.size;\n  jQuery.fn.size = function() {\n    console.log(this.length);\n\n    return oSize.apply(this, null);\n  };\n})(jQuery)\n</code></pre>\n\n<p>to your second question posed in the comments of the other answer.</p>\n\n<pre><code>(function(jQuery){\n  var _o_init = jQuery.fn.init;\n  jQuery.fn.init = function(selector, context) { \n  // check the existence of the console within the global scope to not cause a \n  // reference exception\n    console.log(\"Function Call : init\"); \n    return _o_init.apply(this, arguments); \n  }\n})(jQuery)\n</code></pre>\n\n<p>By the way, this is a terrible idea since jQuery internally uses init like a million times a second for things like live and delegate, not to mention any event handlers that reference $().</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can override plugins method by prototype it in a separate file without modifying original source file as below::</p>\n\n<pre><code>(function ($) {\n    $.ui.draggable.prototype._mouseDrag = function(event, noPropagation) {\n\n         // Your Code\n    },\n\n    $.ui.resizable.prototype._mouseDrag = function(event) {\n            // Your code\n    }   \n}(jQuery));\n</code></pre>\n\n<p>Now put your logic here or original code with your new idea that is needed in your project.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there way to override jQuery's core functions ?\nSay I wanted to add an alert(this.length) in size: function()\nInstead of adding it in the source </p>\n\n<pre><code>size: function() {\n    alert(this.length)\n    return this.length;\n},\n</code></pre>\n\n<p>I was wondering if it would be possible to do something like this :</p>\n\n<pre><code>if (console)\n{\n    console.log(\"Size of div = \" + $(\"div\").size());\n    var oSize = jQuery.fn.size;\n    jQuery.fn.size = function()\n    {\n        alert(this.length);\n\n        // Now go back to jQuery's original size()\n        return oSize(this);        \n    }\n    console.log(\"Size of div = \" + $(\"div\").size());\n}\n</code></pre>\n",
            "last_activity_date": 1384492500,
            "question_id": 4536788,
            "score": 19,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Override jQuery functions"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>If another function needs to use a variable you pass it to the function as an argument.</p>\n\n<p>Also global variables are not inherently nasty and evil.  As long as they are used properly there is no problem with them.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>To make a variable calculated in function A visible in function B, you have three choices:</p>\n\n<ul>\n<li>make it a global,</li>\n<li>make it an object property, or</li>\n<li>pass it as a parameter when calling B from A.</li>\n</ul>\n\n<p>If your program is fairly small then globals are not so bad.  Otherwise I would consider using the third method:</p>\n\n<pre><code>function A()\n{\n    var rand_num = calculate_random_number();\n    B(rand_num);\n}\n\nfunction B(r)\n{\n    use_rand_num(r);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>If there's a chance that you will reuse this code, then I would probably make the effort to go with an object-oriented perspective.  Using the global namespace can be dangerous -- you run the risk of hard to find bugs due to variable names that get reused.  Typically I start by using an object-oriented approach for anything more than a simple callback so that I don't have to do the re-write thing. Any time that you have a group of related functions in javascript, I think, it's a candidate for an object-oriented approach.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What you're looking for is technically known as currying.</p>\n\n<pre><code>function getMyCallback(randomValue)\n{\n    return function(otherParam)\n    {\n        return randomValue * otherParam //or whatever it is you are doing.\n    }\n\n}\n\nvar myCallback = getMyCallBack(getRand())\n\nalert(myCallBack(1));\nalert(myCallBack(2));\n</code></pre>\n\n<p>The above isn't exactly a curried function but it achieves the result of maintaining an existing value without adding variables to the global namespace or requiring some other object repository for it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't know specifics of your issue, but if the function needs the value then it can be a parameter passed through the call.</p>\n\n<p>Globals are considered bad because globals state and multiple modifiers can create hard to follow code and strange errors.  To many actors fiddling with something can create chaos. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think your best bet here may be to define a <em>single</em> global-scoped variable, and dumping your variables there:</p>\n\n<pre><code>var MyApp = {}; // Globally scoped object\n\nfunction foo(){\n    MyApp.color = 'green';\n}\n\nfunction var(){\n    alert(MyApp.color); // Alerts 'green'\n}\n</code></pre>\n\n<p>No one should yell at you for doing something like the above.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Consider using namespaces:</p>\n\n<pre><code>(function() {\n    var local_var = 'foo';\n    global_var = 'bar'; // this.global_var and window.global_var also work\n\n    function local_function() {}\n    global_function = function() {};\n})();\n</code></pre>\n\n<p>Both <code>local_function</code> and <code>global_function</code> have access to all local and global variables.</p>\n\n<p><strong>Edit</strong>: Another common pattern:</p>\n\n<pre><code>var ns = (function() {\n    // local stuff\n    function foo() {}\n    function bar() {}\n    function baz() {} // this one stays invisible\n\n    // stuff visible in namespace object\n    return {\n        foo : foo,\n        bar : bar\n    };\n})();\n</code></pre>\n\n<p>The <code>return</code>ed properties can now be accessed via the namespace object, e.g. <code>ns.foo</code>, while still retaining access to local definitions.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can completely control the execution of javascript functions (and pass variables between them) using custom jQuery events....I was told that this wasn't possible all over these forums, but I got something working that does exactly that (even using an ajax call).  </p>\n\n<p>Here's the answer (IMPORTANT: it's not the checked answer but rather the answer by me \"Emile\"):</p>\n\n<p><a href=\"http://stackoverflow.com/questions/3531080/how-to-get-a-variable-returned-across-multiple-functions-javascript-jquery\">http://stackoverflow.com/questions/3531080/how-to-get-a-variable-returned-across-multiple-functions-javascript-jquery</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Another approach is one that I picked up from a Douglas Crockford forum post(<a href=\"http://bytes.com/topic/javascript/answers/512361-array-objects\" rel=\"nofollow\">http://bytes.com/topic/javascript/answers/512361-array-objects</a>). Here it is...</p>\n\n<p>Douglas Crockford wrote:</p>\n\n<p>Jul 15 '06 </p>\n\n<p>\"If you want to retrieve objects by id, then you should use an object, not an\narray. Since functions are also objects, you could store the members in the\nfunction itself.\"</p>\n\n<pre><code>function objFacility(id, name, adr, city, state, zip) {\n\n    return objFacility[id] = {\n\n        id: id,\n        name: name,\n        adr: adr,\n        city: city,\n        state: state,\n        zip: zip\n\n    }\n}\n\nobjFacility('wlevine', 'Levine', '23 Skid Row', 'Springfield', 'Il', 10010);\n</code></pre>\n\n<p>\"The object can be obtained with\" </p>\n\n<pre><code>objFacility.wlevine\n</code></pre>\n\n<p>The objects properties are now accessable from within any other function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found this to be extremely helpful in relation to the original question:</p>\n\n<p>Return the value you wish to use in functionOne, then call functionOne within functionTwo,  then place the result into a fresh var and reference this new var within functionTwo. This should enable you to use the var declared in functionOne, within functionTwo.</p>\n\n<pre><code>function functionOne() {\n  var variableThree = 3;\n  return variableThree;\n}\n\nfunction functionTwo() {\n  var variableOne = 1;\n  var var3 = functionOne();\n\n  var result = var3 - variableOne;\n\n  console.log(variableOne);\n  console.log(var3);\n  console.log('functional result: ' + result);\n}\n\nfunctionTwo();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've heard from a variety of places that global variables are inherently nasty and evil, but when doing some non-object oriented Javascript, I can't see how to avoid them. Say I have a function which generates a number using a complex algorithm using random numbers and stuff, but I need to keep using that particular number in some other function which is a callback or something and so can't be part of the same function. </p>\n\n<p>If the originally generated number is a local variable, it won't be accessible from, there. If the functions were object methods, I could make the number a property but they're not and it seems somewhat overcomplicated to change the whole program structure to do this. Is a global variable really so bad?</p>\n",
            "last_activity_date": 1402560258,
            "question_id": 407048,
            "score": 18,
            "tags": [
                "javascript",
                "global-variables"
            ],
            "title": "Accessing variables from other functions without using global variables"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>from the sourcecode at\n<a href=\"http://mozilla.github.com/pdf.js/build/pdf.js\">http://mozilla.github.com/pdf.js/build/pdf.js</a></p>\n\n<pre><code>/**\n * This is the main entry point for loading a PDF and interacting with it.\n * NOTE: If a URL is used to fetch the PDF data a standard XMLHttpRequest(XHR)\n * is used, which means it must follow the same origin rules that any XHR does\n * e.g. No cross domain requests without CORS.\n *\n * @param {string|TypedAray|object} source Can be an url to where a PDF is\n * located, a typed array (Uint8Array) already populated with data or\n * and parameter object with the following possible fields:\n *  - url   - The URL of the PDF.\n *  - data  - A typed array with PDF data.\n *  - httpHeaders - Basic authentication headers.\n *  - password - For decrypting password-protected PDFs.\n *\n * @return {Promise} A promise that is resolved with {PDFDocumentProxy} object.\n */\n</code></pre>\n\n<p>So a standard XMLHttpRequest(XHR) is used for retrieving the document. \nThe Problem with this is that XMLHttpReqeuests do not support data: uris (eg. data:application/pdf;base64,JVBERi0xLjUK...).</p>\n\n<p>But there is the possibility of passing a typed Javascript Array to the function.\nThe only thing you need to do is to convert the base64 string to a Uint8Array. You can use this function found at <a href=\"https://gist.github.com/1032746\">https://gist.github.com/1032746</a></p>\n\n<pre><code>var BASE64_MARKER = ';base64,';\n\nfunction convertDataURIToBinary(dataURI) {\n  var base64Index = dataURI.indexOf(BASE64_MARKER) + BASE64_MARKER.length;\n  var base64 = dataURI.substring(base64Index);\n  var raw = window.atob(base64);\n  var rawLength = raw.length;\n  var array = new Uint8Array(new ArrayBuffer(rawLength));\n\n  for(i = 0; i &lt; rawLength; i++) {\n    array[i] = raw.charCodeAt(i);\n  }\n  return array;\n}\n</code></pre>\n\n<p><strong>tl;dr</strong></p>\n\n<pre><code>var pdfAsDataUri = \"data:application/pdf;base64,JVBERi0xLjUK...\"; // shortened\nvar pdfAsArray = convertDataURIToBinary(pdfAsDataUri);\nPDFJS.getDocument(pdfAsArray)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                }
            ],
            "body": "<p>I'm trying to render a page from a pdf with pdf.js</p>\n\n<p>Normally, using a url, I can do this:</p>\n\n<pre><code>PDFJS.getDocument(\"http://www.server.com/file.pdf\").then(function getPdfHelloWorld(pdf) {\n  //\n  // Fetch the first page\n  //\n  pdf.getPage(1).then(function getPageHelloWorld(page) {\n    var scale = 1.5;\n    var viewport = page.getViewport(scale);\n\n    //\n    // Prepare canvas using PDF page dimensions\n    //\n    var canvas = document.getElementById('the-canvas');\n    var context = canvas.getContext('2d');\n    canvas.height = viewport.height;\n    canvas.width = viewport.width;\n\n    //\n    // Render PDF page into canvas context\n    //\n    page.render({canvasContext: context, viewport: viewport});\n  });\n});\n</code></pre>\n\n<p>But in this case, I have the file in base64 rather than an url:</p>\n\n<pre><code>data:application/pdf;base64,JVBERi0xLjUKJdDUxdgKNSAwIG9iaiA8PAovTGVuZ3RoIDE2NjUgICAgICAKL0ZpbHRlciAvRmxhdGVEZWNvZGUKPj4Kc3RyZWFtCnjarVhLc9s2...\n</code></pre>\n\n<p>How this can be done?</p>\n",
            "last_activity_date": 1395947652,
            "question_id": 12092633,
            "score": 17,
            "tags": [
                "javascript",
                "pdf",
                "canvas",
                "base64",
                "pdf.js"
            ],
            "title": "Pdf.js: rendering a pdf file using a base64 file source instead of url"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Don't make it an Array if it is not an Array, make it an object:</p>\n\n<pre><code>var saveData = {};\nsaveData.a = 2;\nsaveData.c = 1;\n\n// equivalent to...\nvar saveData = {a: 2, c: 1}\n\n// equivalent to....\nvar saveData = {};\nsaveData['a'] = 2;\nsaveData['c'] = 1;\n</code></pre>\n\n<p>Doing it the way you are doing it with Arrays is just taking advantage of Javascript's treatment of Arrays and not really the right way of doing it.</p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>You can iterate the key/value pairs of the saveData object to build an array of the pairs, then use join(\"&amp;\") on the resulting array: </p>\n\n<pre><code>var a = [];\nfor (key in saveData) {\n    a.push(key+\"=\"+saveData[key]);\n}\nvar serialized = a.join(\"&amp;\") // a=2&amp;c=1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If the array is already defined, you can create a json object by looping through the elements of the array which you can then post to the server, but if you are creating the array as for the case above, just create a json object instead as sugested by <a href=\"http://stackoverflow.com/users/16417/paolo-bergantino\">Paolo Bergantino</a></p>\n\n<pre><code>    var saveData = Array();\n    saveData[\"a\"] = 2;\n    saveData[\"c\"] = 1;\n\n    //creating a json object\n    var jObject={};\n    for(i in saveData)\n    {\n        jObject[i] = saveData[i];\n    }\n\n    //Stringify this object and send it to the server\n\n    jObject= YAHOO.lang.JSON.stringify(jObject);\n    $.ajax({\n            type:'post',\n           cache:false,\n             url:\"salvaPreventivo.php\",\n            data:{jObject:  jObject}\n    });\n\n    // reading the data at the server\n    &lt;?php\n    $data = json_decode($_POST['jObject'], true);\n    print_r($data);\n    ?&gt;\n\n    //for jObject= YAHOO.lang.JSON.stringify(jObject); to work,\n    //include the follwing files\n\n    //&lt;!-- Dependencies --&gt;\n    //&lt;script src=\"http://yui.yahooapis.com/2.9.0/build/yahoo/yahoo-min.js\"&gt;&lt;/script&gt;\n\n    //&lt;!-- Source file --&gt;\n    //&lt;script src=\"http://yui.yahooapis.com/2.9.0/build/json/json-min.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Hope this helps</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>When using the data on the server, your characters can reach with the addition of slashes eg\nif string = {\"hello\"}\ncomes as string = {\\ \"hello \\\"}\nto solve the following function can be used later to use json decode.</p>\n\n<pre><code>&lt;?php\nfunction stripslashes_deep($value)\n{\n    $value = is_array($value) ?\n                array_map('stripslashes_deep', $value) :\n                stripslashes($value);\n\n    return $value;\n}\n\n$array = $_POST['jObject'];\n$array = stripslashes_deep($array);\n\n$data = json_decode($array, true);\nprint_r($data);\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is actuly a difference between array object and JSON object. Instead of creating array object and converting it into a json object(with JSON.stringify(arr)) you can do this:</p>\n\n<pre><code>var sels = //Here is your array of SELECTs\nvar json = { };\n\nfor(var i = 0, l = sels.length; i &lt; l; i++) {\n  json[sels[i].id] = sels[i].value;\n}\n</code></pre>\n\n<p>There is no need of converting it into JSON because its already a json object. \nTo view the same use <code>json.toSource();</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>in my app i need to send an javascript Array object to php script via ajax post. Something like this:</p>\n\n<pre><code>var saveData = Array();\nsaveData[\"a\"] = 2;\nsaveData[\"c\"] = 1;\nalert(saveData);\n$.ajax({\n    type: \"POST\",\n    url: \"salvaPreventivo.php\",\n    data:saveData,\n    async:true\n    });\n</code></pre>\n\n<p>Array's indexes are strings and not int, so for this reason something like saveData.join('&amp;') doesn't work.</p>\n\n<p>Ideas?</p>\n\n<p>Thanks in advance</p>\n",
            "last_activity_date": 1378800871,
            "question_id": 713884,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "arrays",
                "json"
            ],
            "title": "Convert js Array() to JSon object for use with JQuery .ajax"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>Use the <a href=\"http://www.getfirebug.com\">Firebug</a> extension for Firefox, or the built-in Web Inspector in any WebKit browser (Chrome or Safari). In IE8, you can use the built-in Developer ToolS.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>Dreamweaver as I write it and Firebug for more indepth debugging. alert()s are pretty useful too.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For IE (which I don't suggest using), the latest version (IE8) includes <a href=\"http://msdn.microsoft.com/en-us/library/dd565628(VS.85).aspx\" rel=\"nofollow\">developer tools</a>.</p>\n\n<p><img src=\"http://www.sitepoint.com/wp-content/uploads/2009/04/056-ie8-dev.png\" alt=\"IE8 developer tools\"></p>\n\n<p>For Firefox, there's an extension called <a href=\"http://getfirebug.com/\" rel=\"nofollow\">Firebug</a> that has DOM manipulation, a JS console, and more.</p>\n\n<p><img src=\"http://grab.by/Ags\" alt=\"firebug DOM inspector\">\n<img src=\"http://grab.by/Agv\" alt=\"firebug JS debugger\"></p>\n\n<p><a href=\"http://webkit.org/\" rel=\"nofollow\">WebKit</a> (used in Safari and Chrome) has a built-in Web Inspector that includes a JS debugger, along with a DOM outline and manipulation tools, and a JS console.</p>\n\n<p><img src=\"http://grab.by/Ag5\" alt=\"webkit DOM inspector\">\n<img src=\"http://grab.by/Afy\" alt=\"webkit JS debugger\">\n<img src=\"http://grab.by/Ag6\" alt=\"webkit network profiler\">\n<img src=\"http://grab.by/Ag7\" alt=\"webkit resource info\"></p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>You really need a crossbrowser toolkit. Here's mine:</p>\n\n<ul>\n<li>Gecko (Firefox) : <a href=\"http://getfirebug.com/\">Firebug</a></li>\n<li>Opera : <a href=\"http://www.opera.com/dragonfly/\">Dragonfly</a></li>\n<li>WebKit (Safari / Chrome) : <a href=\"http://trac.webkit.org/wiki/Web%20Inspector\">Web Inspector</a></li>\n<li>IE : <a href=\"http://www.microsoft.com/downloads/details.aspx?familyid=2f465be0-94fd-4569-b3c4-dffdf19ccd99&amp;displaylang=en\">Microsoft script debugger</a></li>\n</ul>\n\n<p><strong>EDIT:</strong></p>\n\n<p>IE 8 added some <a href=\"http://msdn.microsoft.com/en-us/library/dd565628%28VS.85%29.aspx\">developer tools</a>, but I haven't used them to any great extent.</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>If you haven't done JS development in a while I recommend saving yourself a lot of time debugging cross browser issues by browsing the compatibility tables on Peter-Paul Koch's excellent <a href=\"http://www.quirksmode.org/\">quirksmode</a> site.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I think a Visual Studio / IE8 combo is excellent. Beats Firebug for JavaScript debugging, IMO (and you, of course, use a framework like <a href=\"http://www.jquery.com\" rel=\"nofollow\">jQuery</a> to handle crossbrowser issues).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As others have pointed out, most javascript debugging tools come as part of a browser because they are tightly integrated with the Javascript engine itself. This is probably a good thing because you will want to debug each browser separately if you run into a browser-specific quirk.</p>\n\n<p>In the <em>Internet Explorer</em> world, you have two options:</p>\n\n<ol>\n<li>As Ryan Lynch pointed out, the Microsoft Script Debugger is a separate debugging environment that talks with IE. If you have Visual Studio Web Developer Edition, the tool should already be available to you. You can attach directly to IE from within VS.</li>\n<li><strong>Recommended:</strong> Use a debugger that runs in the browser. IE8 has Developer Tools built-in (press F12) or download the <a href=\"http://projects.nikhilk.net/WebDevHelper/\" rel=\"nofollow\">Web Development Helper</a> for earlier versions. Both provide a good light-weight environment right inside IE. They also help to debug CSS layout and other aspects of a website. </li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Firebug for FireFox and AJAX Dynatrace for IE <a href=\"http://ajax.dynatrace.com/pages/\" rel=\"nofollow\">http://ajax.dynatrace.com/pages/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I realize I'm answering a question you didn't ask, but have you tried jQuery? It's a javascript library that abstracts a lot of the DOM manipulation stuff for you so you don't have to worry so much about cross-browser compatibility issues. There are other similar libraries out there, but I believe jQuery has the biggest following at the moment. <a href=\"http://jquery.com/\" rel=\"nofollow\">http://jquery.com/</a></p>\n\n<p>I use Firebug in Firefox every day. In addition to debugging Javascript (and by extension, jQuery or any other js library), it's a great for CSS debugging.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://aptana.org/\" rel=\"nofollow\">Aptana</a> is a great dev platform that allows you to debug both FireFox and IE.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you need IE7 debugging, use IE8 in compatibility view with developer tools.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you use Visual Studio, I <em>highly</em> recommend debugging with IE, despite what others say. When you hit a <code>debugger</code> statement in IE and you have debugging enabled, you'll get a pop-up to start debugging in Visual Studio. </p>\n\n<p>I don't like Firebug anymore, I don't know where it went wrong, but it's become highly unreliable (ignoring <code>debugger</code> statements) and really can't compete with VS as far as debugging is concerned. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I use <a href=\"https://addons.mozilla.org/en-US/firefox/addon/216/\" rel=\"nofollow\">Javascript Debugger plugin</a> to debug errors that are not easy to figure out in firebug. You can set up break points and step through problem area to see variable values..etc. It's a very useful tool.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>real programmers use printf() traces for debugging (kidding).</p>\n\n<pre><code>var de =true, bug =console.log||alert||(de=false)\n\nde&amp;&amp;bug( \"Enjoy!\")\n</code></pre>\n\n<p>When not in debug mode, just do de=false. Minimal performance penalty</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I use firebug most of the time with the following firebug plugins.</p>\n\n<ul>\n<li><p><a href=\"http://firerainbow.binaryage.com/\" rel=\"nofollow\"><strong>FireRainbow</strong></a>, FireRainbow enables javascript syntax highlighting for Firebug. This is really cool. Saves a lot of time.</p></li>\n<li><p><a href=\"https://addons.mozilla.org/en-US/firefox/addon/6149/\" rel=\"nofollow\">FirePHP</a>,FirePHP enables you to log to your Firebug Console using a simple PHP method call.</p></li>\n<li><p><strong><a href=\"http://www.command-tab.com/2008/01/19/widerbug-widescreen-firebug/\" rel=\"nofollow\">Widerbug</a></strong>, can leverage wide screens for js debugging/development. Obsolete now as it is supported in Firebug 1.9 right out of the box.</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I argue to use build-in browser debugger for performance reason. Firefox and Chrome one are good enough.</p>\n\n<p>They allow browse DOM, show dynamically generated sources, show network activity, profile JS, etc.</p>\n\n<p>But don't miss <code>printf</code>-approach with:</p>\n\n<pre><code>console.log(\"this is %o, event is %o, host is %s\", this, e, location.host);\n</code></pre>\n\n<p>and:</p>\n\n<pre><code>console.log(\"%s\", new Error().stack);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Haven't touch javascript for 3 years. Just got a javascript project and wanted to know any new ways or tools emerged these years to debug javascript? \nI used alert 3 years ago.   </p>\n\n<p>I am using IE  </p>\n",
            "last_activity_date": 1382428493,
            "question_id": 1739221,
            "score": 16,
            "tags": [
                "javascript",
                "debugging"
            ],
            "title": "What is a good Javascript debugging tool?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>It is not a best practice to write multiline strings in Javascript.</p>\n\n<p>But, you can do that with the <code>\\</code> terminator:</p>\n\n<pre><code>var str= \"&lt;strong&gt;English Comprehension&lt;\\/strong&gt;\\\n                &lt;br\\/&gt;\\\n                &lt;ul&gt;\\\n                &lt;li&gt;  Synonyms/Antonyms/Word Meaning (Vocabulary)&lt;\\/li&gt;\\\n                &lt;li&gt;  Complete the Sentence (Grammar)&lt;\\/li&gt;\\\n                &lt;li&gt;  Spot error/Correct sentence (Grammar/sentence construction)&lt;\\/li&gt;\\\n                &lt;li&gt;  Sentence Ordering (Comprehension skills)&lt;\\/li&gt;\\\n                &lt;li&gt;  Questions based on passage (Comprehension skills)&lt;\\/li&gt;\\\n                &lt;\\/ul&gt;\\\n                &lt;br\\/&gt;\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can't split a string across lines like that in javascript. You could accomplish the same readability by making each line a separate string and concatenating them with the plus sign like so:</p>\n\n<pre><code>var str = \"&lt;strong&gt;English Comprehension&lt;/strong&gt;\"\n    + \"&lt;br /&gt;\"\n    + \"&lt;ul&gt;\"\n    + \"&lt;li&gt;Synonyms/Antonyms/Word Meaning (Vocabulary)&lt;/li&gt;\"\n</code></pre>\n\n<p>and so on...</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Remove the newlines, it will work. GOTCHA to keep in mind ;)\nSee it simple works all fine here without newlines:\n<a href=\"http://jsfiddle.net/87dYh/\" rel=\"nofollow\">http://jsfiddle.net/87dYh/</a></p>\n\n<pre><code>var str= \"&lt;strong&gt;English Comprehension&lt;\\/strong&gt;&lt;br\\/&gt;&lt;ul&gt;  &lt;li&gt;  Synonyms/Antonyms/Word Meaning (Vocabulary)&lt;\\/li&gt;                  &lt;li&gt;  Complete the Sentence (Grammar)&lt;\\/li&gt;                   &lt;li&gt;  Spot error/Correct sentence (Grammar/sentence construction)&lt;\\/li&gt;     &lt;li&gt;  Sentence Ordering (Comprehension skills)&lt;\\/li&gt;                  &lt;li&gt;  Questions based on passage (Comprehension skills)&lt;\\/li&gt;                 &lt;\\/ul&gt;              &lt;br\\/&gt;\";\n\nalert(str);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If using multiline string in JavaScript you must use '\\' in the end of each line:</p>\n\n<pre><code>var str = \"abc\\\ndef\\\nghi\\\njkl\";\n</code></pre>\n\n<p>Also beware extra whitespace if your code is indented.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>A good way to concatenate strings in javascript is fallowing:</p>\n\n<pre><code>var stringBuilder = [];\n\nstringBuilder.push(\"&lt;strong&gt;English Comprehension&lt;/strong&gt;\");\nstringBuilder.push(\"&lt;br /&gt;\");\nstringBuilder.push(\"&lt;ul&gt;\");\n...\nvar resultString = stringBuilder.join(\"\");\n</code></pre>\n\n<p>This method faster than </p>\n\n<pre><code>var str = \"a\"+\"b\" +\"c\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I suggest to do it differently... have hidden element with that HTML e.g.</p>\n\n\n\n<pre><code>&lt;div id=\"myHiddenDiv\" style=\"display: none;\"&gt;&lt;strong&gt;English Comprehension&lt;/strong&gt;\n&lt;br /&gt;\n...\n&lt;/div&gt;\n</code></pre>\n\n<p>Then simply read its inner HTML:</p>\n\n<pre><code>var str = document.getElementById(\"myHiddenDiv\").innerHTML;\n</code></pre>\n\n<p>The big advantage is that you won't have to fight your way with literal strings and it's much easier to edit, the downside is that you add another element to the DOM. Your choice. :)</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>My code was a response.write() where I needed to insert html to be outputted POST SUbmit on a form within an Iframe.  When copying my code over from an text editor the carraige return carried over into the code window.  Once I deleted my returns and whitespace between tags so that the code looked like a block paragraph that fixed the issue:</p>\n\n<pre><code>(\"loremIPSUM.&lt;br&gt;&lt;br&gt;&lt;h2&gt;Title&lt;/h2&gt;&lt;br&gt;loremIPSUM:&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href='http://url1'&gt;lnk1&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href='http://url2'&gt;loremIPSUMlnk2&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href='http://url3'&gt;loremIPSUM&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href='url4'&gt;IF THE case id is: \"&lt;/a&gt;\"+value)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you want to maintain your data in one block of string, try:</p>\n\n<pre><code>var str= \"&lt;strong&gt;English Comprehension&lt;/strong&gt;\\n\\\n                &lt;br /&gt;\\n\\\n                &lt;ul&gt;\\n\\\n                &lt;li&gt;  Synonyms/Antonyms/Word Meaning (Vocabulary)&lt;/li&gt;\\n\\\n                &lt;li&gt;  Complete the Sentence (Grammar)&lt;/li&gt;\\n\\\n                &lt;li&gt;  Spot error/Correct sentence (Grammar/sentence construction)&lt;/li&gt;\\n\\\n                &lt;li&gt;  Sentence Ordering (Comprehension skills)&lt;/li&gt;\\n\\\n                &lt;li&gt;  Questions based on passage (Comprehension skills)&lt;/li&gt;\\n\\\n                &lt;/ul&gt;\\n\\\n                &lt;br /&gt;\";\n</code></pre>\n\n<p>notice the <code>\\n\\</code> at the end of each line.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>The following code:</p>\n\n<pre><code>var str= \"&lt;strong&gt;English Comprehension&lt;\\/strong&gt;\n                    &lt;br\\/&gt;\n                    &lt;ul&gt;\n                    &lt;li&gt;  Synonyms/Antonyms/Word Meaning (Vocabulary)&lt;\\/li&gt;\n                    &lt;li&gt;  Complete the Sentence (Grammar)&lt;\\/li&gt;\n                    &lt;li&gt;  Spot error/Correct sentence (Grammar/sentence construction)&lt;\\/li&gt;\n                    &lt;li&gt;  Sentence Ordering (Comprehension skills)&lt;\\/li&gt;\n                    &lt;li&gt;  Questions based on passage (Comprehension skills)&lt;\\/li&gt;\n                    &lt;\\/ul&gt;\n                    &lt;br\\/&gt;\";\n</code></pre>\n\n<p>Gives the error: \"unterminated string literal\". Whats the problem?</p>\n",
            "last_activity_date": 1391492843,
            "question_id": 5296402,
            "score": 15,
            "tags": [
                "javascript"
            ],
            "title": "unterminated string literal"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>If all you want to do is insert some content at the cursor, there's no need to find its position explicitly. The following function will insert a DOM node (element or text node) at the cursor position in all the mainstream desktop browsers:</p>\n\n<pre><code>function insertNodeAtCursor(node) {\n    var range, html;\n    if (window.getSelection &amp;&amp; window.getSelection().getRangeAt) {\n        range = window.getSelection().getRangeAt(0);\n        range.insertNode(node);\n    } else if (document.selection &amp;&amp; document.selection.createRange) {\n        range = document.selection.createRange();\n        html = (node.nodeType == 3) ? node.data : node.outerHTML;\n        range.pasteHTML(html);\n    }\n}\n</code></pre>\n\n<p>If you would rather insert an HTML string:</p>\n\n<pre><code>function insertHtmlAtCursor(html) {\n    var range, node;\n    if (window.getSelection &amp;&amp; window.getSelection().getRangeAt) {\n        range = window.getSelection().getRangeAt(0);\n        node = range.createContextualFragment(html);\n        range.insertNode(node);\n    } else if (document.selection &amp;&amp; document.selection.createRange) {\n        document.selection.createRange().pasteHTML(html);\n    }\n}\n</code></pre>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Following the OP's comments, I suggest using my own <a href=\"http://code.google.com/p/rangy/\">Rangy</a> library, which adds a wrapper to IE <code>TextRange</code> object that behaves like a DOM Range. A <a href=\"http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html\">DOM Range</a> consists of a start and end boundary, each of which is expressed in terms of a node and an offset within that node, and a bunch of methods for manipulating the Range. The <a href=\"https://developer.mozilla.org/En/DOM/Range\">MDC article</a> should provide some introduction.</p>\n",
                    "is_accepted": false,
                    "score": 26
                }
            ],
            "body": "<p>I am writing a autocompleter for a content editable DIV (need to render html content in the text box. So preferred to use contenteditable DIV over TEXTAREA). Now I need to find the cursor position when there is a keyup/keydown/click event in the DIV. So that I can insert the html/text at that position. I am clueless how I can find it by some computation or is there a native browser functionality that would help me find the cursor position in a contententeditable DIV.</p>\n",
            "last_activity_date": 1300980164,
            "question_id": 2213376,
            "score": 15,
            "tags": [
                "javascript",
                "autocomplete",
                "contenteditable",
                "cursor-position"
            ],
            "title": "How to find cursor position in a contenteditable DIV?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can use something like this in the page that opens the new window:</p>\n\n<pre><code>var newWindow = null;\n\nfunction launchApplication()\n{\n  // open the new window only if newWindow is null (not opened yet)\n  // or if it was closed\n  if ((newWindow == null) || (newWindow.closed))\n    newWindow = window.open(...);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You could check like this:</p>\n\n<pre><code>if(!winref || winref.closed)\n{\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'd do it like this - basically store all the referenced opened windows on the function itself.  When the function fires, check if the window doesn't exist or has been close - of so, launch the popup.  Otherwise, focus on the existing popup window for that request.</p>\n\n<pre><code>function launchApplication(l_url, l_windowName)\n{\n  if ( typeof launchApplication.winRefs == 'undefined' )\n  {\n    launchApplication.winRefs = {};\n  }\n  if ( typeof launchApplication.winrefs[l_windowName] == 'undefined' || launchApplication.winrefs[l_windowName].closed )\n  {\n    var l_width = screen.availWidth;\n    var l_height = screen.availHeight;\n\n    var l_params = 'status=1' +\n                   ',resizable=1' +\n                   ',scrollbars=1' +\n                   ',width=' + l_width +\n                   ',height=' + l_height +\n                   ',left=0' +\n                   ',top=0';\n\n    launchApplication.winrefs[l_windowName] = window.open(l_url, l_windowName, l_params);\n    launchApplication.winrefs[l_windowName].moveTo(0,0);\n    launchApplication.winrefs[l_windowName].resizeTo(l_width, l_height);\n  } else {\n    launchApplication.winrefs[l_windowName].focus()\n  }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>You need to perform 2 tests... 1 check if the popup window is defined, and 2 check if it was closed.</p>\n\n<pre><code>if(typeof(winRef) == 'undefined' || winRef.closed){\n  //create new\n  winRef = window.open(....);\n} else {\n  //it exists, load new content (if necs.)\n  winRef.location.href = 'your new url';\n  //give it focus (in case it got burried)\n  winRef.focus();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Try checking:</p>\n\n<p>if (!winref || winref.closed || !winref.document) {\n}</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Working code</p>\n\n<pre><code>var newwindow = null;\nfunction popitup(url) {\n    if ((newwindow == null) || (newwindow.closed)) {\n        newwindow=window.open(url,'Buy','width=950,height=650,scrollbars=yes,resizable=yes');\n        newwindow.focus();\n    } else {\n        newwindow.location.href = url;\n        newwindow.focus();    \n    }\n}  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have an application that opens a new window on clicking a link. This spawns a page that holds a Java applet. The problem I am having is that clicking the same link reloads the page, which resets the Java application. Is there any way to trap this? Two solutions that would be acceptable are:</p>\n\n<ol>\n<li>Allow multiple windows to be opened from the click handler</li>\n<li>Ignore subsequent requests if the window is already open</li>\n</ol>\n\n<p>Apologies for being a Javascript newbie - it's not really my main thing.</p>\n\n<p>The code attached to the handler is</p>\n\n<pre><code>function launchApplication(l_url, l_windowName)\n{\n  var l_width = screen.availWidth;\n  var l_height = screen.availHeight;\n\n  var l_params = 'status=1' +\n                 ',resizable=1' +\n                 ',scrollbars=1' +\n                 ',width=' + l_width +\n                 ',height=' + l_height +\n                 ',left=0' +\n                 ',top=0';\n\n  winRef = window.open(l_url, l_windowName, l_params);\n  winRef.moveTo(0,0);\n  winRef.resizeTo(l_width, l_height);\n}\n</code></pre>\n\n<p>EDIT:</p>\n\n<p>Thanks for the replies - I modified the suggestions slightly so that I could have more than one URL opened via the function.</p>\n\n<p>EDIT2:\nThere is another version of this code at <a href=\"http://stackoverflow.com/questions/528941/how-can-i-check-for-an-open-url-in-another-window\">Check for a URL open on another window</a></p>\n\n<pre><code>var g_urlarray = [];\n\nArray.prototype.has = function(value) {\n    var i;\n    for (var i in this) {\n    \tif (i === value) {\n    \t\treturn true;\n    \t}\n    }\n    return false;\n};\n\n\nfunction launchApplication(l_url, l_windowName)\n{\n  var l_width = screen.availWidth;\n  var l_height = screen.availHeight;\n  var winRef;\n\n  var l_params = 'status=1' +\n                 ',resizable=1' +\n                 ',scrollbars=1' +\n                 ',width=' + l_width +\n                 ',height=' + l_height +\n                 ',left=0' +\n    \t ',top=0';\n  if (g_urlarray.has(l_url)) {\n    winRef = g_urlarray[l_url];\n  }\n  alert(winRef);\n  if (winRef == null || winRef.closed) {\n      winRef = window.open(l_url, l_windowName, l_params);\n      winRef.moveTo(0,0);\n      winRef.resizeTo(l_width, l_height);\n      g_urlarray[l_url] = winRef;\n  }\n}\n</code></pre>\n",
            "last_activity_date": 1336317532,
            "question_id": 528671,
            "score": 15,
            "tags": [
                "javascript",
                "popup",
                "window"
            ],
            "title": "JavaScript window.open only if the window does not already exist"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>have a look at <a href=\"http://www.appelsiini.net/projects/viewport\">this plugin</a></p>\n\n<p>It give's you the option to do the following selectors</p>\n\n<pre><code>$(\":in-viewport\")\n$(\":below-the-fold\")\n$(\":above-the-top\")\n$(\":left-of-screen\")\n$(\":right-of-screen\")\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>To check if an element is in the current veiwport:</p>\n\n<pre><code>function elementInViewport(el) {\n  var top = el.offsetTop;\n  var left = el.offsetLeft;\n  var width = el.offsetWidth;\n  var height = el.offsetHeight;\n\n  while(el.offsetParent) {\n    el = el.offsetParent;\n    top += el.offsetTop;\n    left += el.offsetLeft;\n  }\n\n  return (\n    top &gt;= window.pageYOffset &amp;&amp;\n    left &gt;= window.pageXOffset &amp;&amp;\n    (top + height) &lt;= (window.pageYOffset + window.innerHeight) &amp;&amp;\n    (left + width) &lt;= (window.pageXOffset + window.innerWidth)\n  );\n}\n</code></pre>\n\n<p>(<a href=\"http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\">Source</a>)</p>\n\n<p>For a more robust method, I'd recommend <a href=\"http://www.appelsiini.net/projects/viewport\">Viewport Selectors</a>, which allow you to just do:</p>\n\n<pre><code>$(\"#elem:in-viewport\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>My solution is using the given code example, and it will show you an overall idea of how to determine whether the li element is visible. Check out the <a href=\"http://jsfiddle.net/ATx4j/\" rel=\"nofollow\">jsFiddle</a> which contains code from your question.</p>\n\n<p>The jQuery .offset() method allows us to retrieve the current position of an element relative to the document. If you click on an li element inside the draggable, your offset from the top will be between 0 and 500 and the offset from the left should be between 0 and 500. If you call the offset function of an item that is not currently visible, the offset will either be less than 0 or greater than 500 from either the top or left offset.</p>\n\n<p>If its not a daunting task I always like to code what I need from 'scrath' it gives me more flexibility when having to modify or debug, hence why I would recommend looking into using jQuery's offset function instead of using a plugin. If what you are trying to accomplish is fairly simple, using your own function will give you one less library to load.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"https://github.com/sakabako/scrollMonitor\" rel=\"nofollow\">https://github.com/sakabako/scrollMonitor</a></p>\n\n<pre><code>var scrollMonitor = require(\"./scrollMonitor\"); // if you're not using require, you can use the scrollMonitor global.\nvar myElement = document.getElementById(\"itemToWatch\");\n\nvar elementWatcher = scrollMonitor.create( myElement );\n\nelementWatcher.enterViewport(function() {\n    console.log( 'I have entered the viewport' );\n});\nelementWatcher.exitViewport(function() {\n    console.log( 'I have left the viewport' );\n});\n\nelementWatcher.isInViewport - true if any part of the element is visible, false if not.\nelementWatcher.isFullyInViewport - true if the entire element is visible [1].\nelementWatcher.isAboveViewport - true if any part of the element is above the viewport.\nelementWatcher.isBelowViewport - true if any part of the element is below the viewport.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I m using  (checks whether an element is at least partially in the view) following code: </p>\n\n<pre><code>var winSize;\n\nfunction getWindowSize() {\n            var winW,WinH = 0;\n            if (document.body &amp;&amp; document.body.offsetWidth) {\n                winW = document.body.offsetWidth;\n                winH = document.body.offsetHeight;\n            }\n            if (document.compatMode == 'CSS1Compat' &amp;&amp;\n                document.documentElement &amp;&amp;\n                document.documentElement.offsetWidth) {\n                winW = document.documentElement.offsetWidth;\n                winH = document.documentElement.offsetHeight;\n            }\n            if (window.innerWidth &amp;&amp; window.innerHeight) {\n                winW = window.innerWidth;\n                winH = window.innerHeight;\n            }\n            return {w:winW, h:winH};\n        }\n\nwinSize = getWindowSize();    \n\nfunction inView(element) {\n                var box = element.getBoundingClientRect();\n                if ((box.bottom &lt; 0) || (box.top &gt; winSize.h)){\n                    return false;\n                }\n                return true;\n            }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a very big draggable <code>div</code> in my window. This <code>div</code> has a smaller window.</p>\n\n<pre><code>&lt;div id=\"draggable-area\" style=\"width:500px;height:500px;overflow:hidden\"&gt;\n &lt;div id=\"draggable\" style=\"width:5000px;height:5000px\"&gt;\n     &lt;ul&gt;\n         &lt;li&gt;&lt;/li&gt;\n         &lt;li&gt;&lt;/li&gt;\n         &lt;li&gt;&lt;/li&gt;\n         &lt;li&gt;&lt;/li&gt;\n         &lt;li&gt;&lt;/li&gt;\n         ....\n     &lt;/ul&gt;\n  &lt;/div&gt;\n&lt;/div&gt;  \n</code></pre>\n\n<p>How can I know if the <code>li</code> element is visible in the user viewport (I mean really visible, not in the overflow area)?</p>\n",
            "last_activity_date": 1420189349,
            "question_id": 8229291,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "viewport"
            ],
            "title": "How to check if an element is in the view of the user with jquery"
        }
    ]
}
