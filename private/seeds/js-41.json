{
    "items": [
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The method jQuery (v1.10) uses to find this is:</p>\n\n<pre><code>var doc = document.documentElement;\nvar left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\nvar top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\n</code></pre>\n\n<p>That is:</p>\n\n<ul>\n<li>It tests for <code>window.pageXOffset</code> first and uses that if it exists.</li>\n<li>Otherwise, it uses <code>document.documentElement.scrollLeft</code>.</li>\n<li>It then subtracts <code>document.documentElement.clientLeft</code> if it exists.</li>\n</ul>\n\n<p>The subtraction of <code>document.documentElement.clientLeft</code> / <code>Top</code> only appears to be required to correct for situations where you have applied a border (not padding or margin, but actual border) to the root element, and at that, possibly only in certain browsers.</p>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p>Maybe more simple; ( mii.dom.js: <a href=\"https://github.com/qeremy/mii/blob/master/mii.dom.js#L426\">https://github.com/qeremy/mii/blob/master/mii.dom.js#L426</a> )</p>\n\n<pre><code>var top  = window.pageYOffset || document.documentElement.scrollTop,\n    left = window.pageXOffset || document.documentElement.scrollLeft;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 60
                },
                {
                    "body": "<p>Using pure javascript you can use <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/window.scrollX\" rel=\"nofollow\">Window.scrollX</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY\" rel=\"nofollow\">Window.scrollY</a></p>\n\n<pre><code>window.addEventListener(\"scroll\", function(event) {\n    var top = this.scrollY,\n        left =this.scrollX;\n}, false);\n</code></pre>\n\n<p><strong>Notes</strong></p>\n\n<blockquote>\n  <p>The pageXOffset property is an alias for the scrollX property, and The\n  pageYOffset property is an alias for the scrollY property:</p>\n</blockquote>\n\n<pre><code>window.pageXOffset == window.scrollX; // always true\nwindow.pageYOffset == window.scrollY; // always true\n</code></pre>\n\n<p>Here is a quick demo </p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>window.addEventListener(\"scroll\", function(event) {\r\n  \r\n    var top = this.scrollY,\r\n        left = this.scrollX;\r\n  \r\n    var horizontalScroll = document.querySelector(\".horizontalScroll\"),\r\n        verticalScroll = document.querySelector(\".verticalScroll\");\r\n    \r\n    horizontalScroll.innerHTML = \"Scroll X: \" + left + \"px\";\r\n      verticalScroll.innerHTML = \"Scroll Y: \" + top + \"px\";\r\n  \r\n}, false);</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>*{box-sizing: border-box}\r\n:root{height: 200vh;width: 200vw}\r\n.wrapper{\r\n    position: fixed;\r\n    top:20px;\r\n    left:0px;\r\n    width:320px;\r\n    background: black;\r\n    color: green;\r\n    height: 64px;\r\n}\r\n.wrapper div{\r\n    display: inline;\r\n    width: 50%;\r\n    float: left;\r\n    text-align: center;\r\n    line-height: 64px\r\n}\r\n.horizontalScroll{color: orange}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div class=wrapper&gt;\r\n    &lt;div class=horizontalScroll&gt;Scroll (x,y) to &lt;/div&gt;\r\n    &lt;div class=verticalScroll&gt;see me in action&lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>function FastScrollUp()\n{\n     window.scroll(0,0)\n};\n\nfunction FastScrollDown()\n{\n     $i = document.documentElement.scrollHeight ; \n     window.scroll(0,$i)\n};\n var step = 20;\n var h,t;\n var y = 0;\nfunction SmoothScrollUp()\n{\n     h = document.documentElement.scrollHeight;\n     y += step;\n     window.scrollBy(0, -step)\n     if(y &gt;= h )\n       {clearTimeout(t); y = 0; return;}\n     t = setTimeout(function(){SmoothScrollUp()},20);\n\n};\n\n\nfunction SmoothScrollDown()\n{\n     h = document.documentElement.scrollHeight;\n     y += step;\n     window.scrollBy(0, step)\n     if(y &gt;= h )\n       {clearTimeout(t); y = 0; return;}\n     t = setTimeout(function(){SmoothScrollDown()},20);\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm hoping to find a way to get the windows position (relative to the total page width/height) so I can use it to force a scroll from one section to another. However, there seems to be a tremendous amount of options when it comes to guessing which object holds the true X/Y for your browser.</p>\n\n<p>Which of these do I need to make sure IE 6+, FF 2+, and Chrome/Safari work?</p>\n\n<pre><code>window.innerWidth\nwindow.innerHeight\nwindow.pageXOffset\nwindow.pageYOffset\ndocument.documentElement.clientWidth\ndocument.documentElement.clientHeight\ndocument.documentElement.scrollLeft\ndocument.documentElement.scrollTop\ndocument.body.clientWidth\ndocument.body.clientHeight\ndocument.body.scrollLeft\ndocument.body.scrollTop\n</code></pre>\n\n<p>And are there any others? Once I know where the window is I can set an event chain that will slowly call <code>window.scrollBy(x,y);</code> until it reaches that point.</p>\n",
            "last_activity_date": 1425107912,
            "question_id": 3464876,
            "score": 42,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript get window X/Y position for scroll"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use a node.js extension to provide bindings for your C++ code. Here is one tutorial that covers that: </p>\n\n<p><a href=\"http://syskall.com/how-to-write-your-own-native-nodejs-extension\">http://syskall.com/how-to-write-your-own-native-nodejs-extension</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Look at <a href=\"https://github.com/rbranson/node-ffi\">node-ffi</a>.</p>\n\n<blockquote>\n  <p>node-ffi is a Node.js addon for loading and calling dynamic libraries using pure JavaScript. It can be used to create bindings to native libraries without writing any C++ code.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>You could use <a href=\"http://emscripten.org\" rel=\"nofollow\">emscripten</a> to compile C++ code into js.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a fresh answer to that question now. <a href=\"http://www.swig.org/\" rel=\"nofollow\">SWIG</a>, as of version 3.0 seems to provide <a href=\"http://www.swig.org/Doc3.0/Javascript.html#Javascript\" rel=\"nofollow\">javascript interface generators</a> for Node.js, Webkit and v8.</p>\n\n<p>I've been using SWIG extensively for Java and Python for a while, and once you understand how SWIG works, there is almost no effort(compared to ffi or the equivalent in the target language) needed for interfacing C++ code to the languages that SWIG supports.</p>\n\n<p>As a small example, say you have a library with the header myclass.h:</p>\n\n<pre><code>#include&lt;iostream&gt;\n\nclass MyClass {\n        int myNumber;\npublic:\n        MyClass(int number): myNumber(number){}\n        void sayHello() {\n                std::cout &lt;&lt; \"Hello, my number is:\" \n                &lt;&lt; myNumber &lt;&lt;std::endl;\n        }\n};\n</code></pre>\n\n<p>In order to use this class in node, you simply write the following SWIG interface file (mylib.i):</p>\n\n<pre><code>%module \"mylib\"\n%{\n#include \"myclass.h\"\n%}\n%include \"myclass.h\"\n</code></pre>\n\n<p>Create the binding file binding.gyp:</p>\n\n<pre><code>{\n  \"targets\": [\n    {\n      \"target_name\": \"mylib\",\n      \"sources\": [ \"mylib_wrap.cxx\" ]\n    }\n  ]\n}\n</code></pre>\n\n<p>Run the following commands:</p>\n\n<pre><code>swig -c++ -javascript -node mylib.i\nnode-gyp build\n</code></pre>\n\n<p>Now, running node from the same folder, you can do:</p>\n\n<pre><code>&gt; var mylib = require(\"./build/Release/mylib\")\n&gt; var c = new mylib.MyClass(5)\n&gt; c.sayHello()\nHello, my number is:5\n</code></pre>\n\n<p>Even though we needed to write 2 interface files for such a small example, note how we didn't have to mention the <code>MyClass</code> constructor nor the <code>sayHello</code> method anywhere, SWIG discovers these things, and automatically generates natural interfaces.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>This is the question. How can I use a C++ library from node.js?</p>\n",
            "last_activity_date": 1421308277,
            "question_id": 9629677,
            "score": 41,
            "tags": [
                "javascript",
                "c++",
                "node.js",
                "binding"
            ],
            "title": "How can I use a C++ library from node.js?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The upcoming (and currently in-development) v0.4.0a grunt has the <a href=\"https://github.com/cowboy/grunt/blob/devel/docs/api_file.md#gruntfilewatchfiles\">grunt.file.watchFiles</a> object, which was designed expressly for this purpose. The grunt-coffee plugin may have added support for this feature already, I'm not sure.</p>\n\n<p>Either way, if you're interested in trying an in-development version of grunt in your project, check out the <a href=\"https://github.com/cowboy/grunt/blob/master/docs/faq.md#when-will-i-be-able-to-use-in-development-feature-x-%E2%9A%91\">When will I be able to use in-development feature 'X'?</a> FAQ entry.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>In this <a href=\"https://github.com/gruntjs/grunt-contrib-watch/issues/22#issuecomment-15871732\" rel=\"nofollow\">issue</a>, Kyle Robinson suggests using the <code>watch</code>event. It's very important to set watch task <code>nospawn</code> property to <code>true</code> to make it work. I modified his solution to selectively run the tasks:</p>\n\n<pre><code>grunt.event.on('watch', function(action, filepath) {\n    if (minimatch(filepath, grunt.config('watch.stylesheets.files'))) {\n        grunt.config('compass.dist.options.specify', [filepath]);\n    }\n\n    if (minimatch(filepath, grunt.config('watch.scripts.files'))) {\n        var uglifySrc = filepath.replace(grunt.config('uglify.dist.cwd'), '');\n        grunt.config('jshint.dist.src', [filepath]);\n        grunt.config('uglify.dist.src', [uglifySrc]);\n    }\n});\n</code></pre>\n\n<p>Here is the complete solution: <a href=\"https://gist.github.com/luissquall/5408257\" rel=\"nofollow\">https://gist.github.com/luissquall/5408257</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>So new to Grunt 0.4 is more named tasks</p>\n\n<p>Let us give you an example!</p>\n\n<pre><code>watch: {\n    package1: {\n        files: [\n            './modules/package1/**/*.coffee'\n        ],\n        tasks: ['coffee:package3']\n    },\n    package2: {\n        files: [\n            './test_packages/package2/**/*.coffee'\n        ],\n        tasks: ['coffee:package3']\n    },\n    package3: {\n        files: [\n            './test_packages/package3/**/*.coffee'\n        ],\n        tasks: ['coffee:package3']\n    },\n}\n</code></pre>\n\n<p>To run all those watch tasks, simply do\n    grunt.registerTask('default', ['myInitialBuild', 'watch']);</p>\n\n<p>Where <code>myInitialBuild</code> is whatever initial build (all of the files) then follow it up with a watch on each package.  In reality you could do this for every file but that sounds sucky.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I got this working when compiling my less files. You should be able to mess with this configuration a little bit to git it working with the coffeescript plugin. The portion of interest is the <code>grunt.event.on('watch', ...)</code>. In this event handler I'm updating the <code>files</code> property in the less command to only contain the changed file.</p>\n\n<pre><code>path = require('path');\n\nmodule.exports = function(grunt) {\n\n  // Project configuration.\n  grunt.initConfig({\n\n    pkg: grunt.file.readJSON('package.json'),\n\n    less: {\n      development: {\n        options: {\n          paths: [\"./library/less\"],\n        },\n        files: [\n          { src: \"./library/less/bootstrap.less\", dest: \"./library/css/bootstrap.css\"},\n          { src: \"./library/less/app.less\", dest: \"./library/css/app.css\"}\n        ]\n      }\n    },\n\n    watch: {\n      styles: {\n        files: \"./library/less/*\",\n        tasks: [\"less\"],\n        options: {\n          nospawn: true,\n        },\n      },\n    },\n  });\n\n  // Event handling\n  grunt.event.on('watch', function(action, filepath){\n    // Update the config to only build the changed less file.\n    grunt.config(['less', 'development', 'files'], [\n      {src: filepath, dest: './library/css/' + path.basename(filepath, '.less') + '.css'}\n    ]);\n  });\n\n  // Load the plugins\n  grunt.loadNpmTasks('grunt-contrib-less');\n  grunt.loadNpmTasks('grunt-contrib-watch');\n\n  // Tasks\n  grunt.registerTask('default', ['watch']);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The task grunt-contrib-watch now supports this.</p>\n\n<p><a href=\"https://npmjs.org/package/grunt-contrib-watch\" rel=\"nofollow\">https://npmjs.org/package/grunt-contrib-watch</a> -> look for \"Compiling Files As Needed\"</p>\n\n<pre><code>grunt.initConfig({\n  watch: {\n    scripts: {\n      files: ['lib/*.js'],\n      tasks: ['jshint'],\n      options: {\n        nospawn: true,\n      },\n    },\n  },\n  jshint: {\n    all: ['lib/*.js'],\n  },\n});\n\n// on watch events configure jshint:all to only run on changed file\ngrunt.event.on('watch', function(action, filepath) {\n  grunt.config(['jshint', 'all'], filepath);\n});\n</code></pre>\n\n<p>This should prevent the tasks from compiling all files every time when something changes.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>None of these answers worked very well for me. Here is my solution if anyone is interested (I know I'm a little late in replying to this question).</p>\n\n<p><a href=\"https://gist.github.com/ryansmith94/8569178\" rel=\"nofollow\">https://gist.github.com/ryansmith94/8569178</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"https://github.com/tschaub/grunt-newer\" rel=\"nofollow\">https://github.com/tschaub/grunt-newer</a> looks like exactly for similar tasks:</p>\n\n<blockquote>\n  <p>Configure Grunt tasks to run with newer files only.</p>\n  \n  <p>Synopsis: The newer task will configure another task to run with src\n  files that are a) newer than the dest files or b) newer than the last\n  successful run (if there are no dest files). See below for examples\n  and more detail.</p>\n</blockquote>\n\n<p>You can prepend easily to any task. In your case:</p>\n\n<pre><code>  grunt.loadNpmTasks('grunt-newer');\n  grunt.registerTask('default', 'newer:coffee');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In learning how to use <a href=\"https://github.com/cowboy/grunt\">grunt</a>, I am trying to make a simple coffee-script watcher/compiler. The problem is, if I tell the <code>watch</code> task to watch several files, and one changes, it is going to pass all of the files to the <code>coffee</code> command. This means when you change 1 file, it's going to recompile <em>all</em> of the files matching the <code>src</code> pattern. Instead, I want to only recompile the single file that changed that matches the <code>src</code> pattern.</p>\n\n<p>Here is the <code>grunt.js</code>:</p>\n\n<pre><code>module.exports = function(grunt) {\n  grunt.initConfig({\n    coffee: {\n      app: {\n        src: ['test/cases/controller/*.coffee'],\n        dest: 'tmp',\n        options: {\n          bare: true,\n          preserve_dirs: true\n        }\n      }\n    },\n    watch: {\n      files: ['&lt;config:coffee.app.src&gt;'],\n      tasks: ['coffee:app']\n    }\n  });\n\n  grunt.loadNpmTasks('grunt-coffee');\n  grunt.registerTask('default', 'coffee');\n};\n</code></pre>\n\n<p>This is using <a href=\"https://github.com/avalade/grunt-coffee\">grunt-coffee</a>, which is basically this: <a href=\"https://gist.github.com/2373159\">https://gist.github.com/2373159</a>.</p>\n\n<p>When I run <code>grunt watch</code>, and I save a file in <code>test/cases/controller/*.coffee</code>, it compiles <em>all</em> of the matching files (putting them in <code>tmp/*</code>).</p>\n\n<p>How do you instead <em>only compile the <strong>changed</strong> file</em> using grunt?</p>\n",
            "last_activity_date": 1395480427,
            "question_id": 12063266,
            "score": 38,
            "tags": [
                "javascript",
                "node.js",
                "gruntjs"
            ],
            "title": "How do you watch multiple files, but only run task on changed file, in Grunt.js?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I got the jQuery code completion in Juno. Just follow the following steps:</p>\n\n<p>1) Install the <a href=\"https://code.google.com/a/eclipselabs.org/p/jsdt-jquery/\">JSDT jQuery Integration plugin</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/L5Evj.png\" alt=\"enter image description here\"></p>\n\n<hr>\n\n<p>2) Go to Project Explorer--> JavaScript Resources</p>\n\n<p><img src=\"http://i.stack.imgur.com/s0nkX.png\" alt=\"enter image description here\"></p>\n\n<hr>\n\n<p>3) Right click on it and go to properties.</p>\n\n<hr>\n\n<p>4) Select \"Add JavaScript library\"</p>\n\n<p><img src=\"http://i.stack.imgur.com/kcOoE.png\" alt=\"enter image description here\"></p>\n\n<hr>\n\n<p>5) Select  \"jQuery Library\"</p>\n\n<p><img src=\"http://i.stack.imgur.com/Ezptb.png\" alt=\"enter image description here\"></p>\n\n<hr>\n\n<p>6) You will get code completion as follows</p>\n\n<p><img src=\"http://i.stack.imgur.com/Xx51h.png\" alt=\"enter image description here\"></p>\n\n<p>Enjoy.</p>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>Much simpler thanks to <a href=\"http://stackoverflow.com/questions/11731884/jquery-autocompletion-with-eclipse-juno-java-ee#comment-26821787\">logic8 comment</a> is to add it from </p>\n\n<p><code>help &gt; Install new software</code></p>\n\n<p>and enter <code>http://svn.codespot.com/a/eclipselabs.org/jsdt-jquery/updatesite</code></p>\n\n<p>Tada!!</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I've read several DATED information on how to enable jQuery (specially auto completion) support for Eclipse. Either using Aptana or other plugins.</p>\n\n<p>I've tried Aptana 3 version plugin, but I get nothing but problems.</p>\n\n<p>Can someone please explain on how to achieve this? </p>\n\n<p>Maybe nowadays there are better options from Aptana.</p>\n\n<p>Tried with Eclipse Indigo and Helios, and still Aptana Web tools pkg. does not work.</p>\n",
            "last_activity_date": 1409451141,
            "question_id": 11731884,
            "score": 32,
            "tags": [
                "javascript",
                "jquery",
                "eclipse",
                "aptana"
            ],
            "title": "jQuery Autocompletion with Eclipse Juno Java EE"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Take a look at <a href=\"http://www.pixastic.com/lib/\">Pixastic</a></p>\n\n<blockquote>\n  <p>Pixastic is an experimental library which allows you to perform a variety of operations on images using just a bit of JavaScript. The effects supported out of the box include desaturation/greyscale, invert, flipping, brightness/contrast adjustment, hue/saturation, emboss, blur, and many more.</p>\n</blockquote>\n\n<p>Demo can be found <a href=\"http://editor.pixastic.com/\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"http://www.pixastic.com\" rel=\"nofollow\">Pixastic</a> is the only one I know of, but not all its methods are fully cross browser compatible - they rely on features of the HTML5 <em>canvas</em> element which are unavailable in Internet Explorer, even with exCanvas.</p>\n\n<p>A few demos:</p>\n\n<ul>\n<li><a href=\"http://www.pixastic.com/lib/docs/actions/noise/\" rel=\"nofollow\">Noise</a></li>\n<li><a href=\"http://www.pixastic.com/lib/docs/actions/blur/\" rel=\"nofollow\">Blur</a></li>\n<li><a href=\"http://www.pixastic.com/lib/docs/actions/emboss/\" rel=\"nofollow\">Emboss</a></li>\n<li><a href=\"http://www.pixastic.com/lib/docs/actions/mosaic/\" rel=\"nofollow\">Mosaic</a></li>\n</ul>\n\n<p>Other links:</p>\n\n<ul>\n<li><a href=\"http://www.pixastic.com/lib/docs/\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"https://github.com/jseidelin/pixastic\" rel=\"nofollow\">GitHub project page</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Try to look to the <a href=\"http://processingjs.org/\">Processing.js library</a>.\nThis is a quotation from theirs site:</p>\n\n<blockquote>\n  <p>Processing.js is the sister project of\n  the popular Processing visual\n  programming language, designed for the\n  web.</p>\n</blockquote>\n\n<p>As far as I know it has more contributors than Pixastic project does and theirs <a href=\"http://processingjs.org/exhibition\">demos</a> are really promising.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p><a href=\"http://camanjs.com/\">CamanJS</a> is the most flexible non-interactive (API, not point-and-click) JavaScript library for image manipulation, that I came across so far.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>have a look at the <a href=\"https://github.com/zhijie/psx\" rel=\"nofollow\">PSX</a> imageprocessing library, it contains a javascript and ios version.\nthe <a href=\"http://toys.lzhj.me/psx/\" rel=\"nofollow\">demo site</a> shows what it can do.\nPSX is the most powerful javascript image processing library ever.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I need some kick-ass effects for my web site, like gaussian blur, noise, convolution filters, morphological operations etc.\nAll effects must be applied dynamically (no pre-renderend images) and being changed over time.</p>\n\n<p>What is the most powerful image processing library, implemented in JavaScript ?</p>\n",
            "last_activity_date": 1413186818,
            "question_id": 3351122,
            "score": 32,
            "tags": [
                "javascript",
                "image-processing"
            ],
            "title": "What is the best JavaScript image processing library?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I've read the Capybara readme at <a href=\"https://github.com/jnicklas/capybara\">https://github.com/jnicklas/capybara</a> and it solved my issue.</p>\n\n<blockquote>\n  <p>Transactional fixtures only work in the default Rack::Test driver, but\n  not for other drivers like Selenium. Cucumber takes care of this\n  automatically, but with Test::Unit or RSpec, you may have to use the\n  database_cleaner gem. See <a href=\"https://groups.google.com/d/msg/ruby-capybara/JI6JrirL9gM/R6YiXj4gi_UJ\">this explanation</a> (and code for <a href=\"http://opinionatedprogrammer.com/2011/02/capybara-and-selenium-with-rspec-and-rails-3/#comment-220\">solution 2</a>\n  and <a href=\"http://pastie.org/1745020\">solution 3</a>) for details.</p>\n</blockquote>\n\n<p>But basically its a threading issue that involves Capybara having its own thread when running the non-Rack driver, that makes the transactional fixtures feature to use a second connection in another context. So the driver thread is never in the same context of the running rspec. </p>\n\n<p>Luckily this can be easily solve (at least it solved for me) doing a dynamic switching in th DatabaseCleaner strategy to use:</p>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>RSpec.configure do |config|\n  config.use_transactional_fixtures = false\n\n  config.before :each do\n    if Capybara.current_driver == :rack_test\n      DatabaseCleaner.strategy = :transaction\n    else\n      DatabaseCleaner.strategy = :truncation\n    end\n    DatabaseCleaner.start\n  end\n\n  config.after do\n    DatabaseCleaner.clean\n  end\nend\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 79
                },
                {
                    "body": "<p>There is another way to deal with this problem now described and discussed here: <a href=\"http://stackoverflow.com/questions/8774227/why-not-use-shared-activerecord-connections-for-rspec-selenium\">Why not use shared ActiveRecord connections for Rspec + Selenium?</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>A variation of <a href=\"http://stackoverflow.com/a/8698940/358804\">brutuscat's answer</a> that fixed our feature specs (which all use Capybara):</p>\n\n<pre><code>config.before(:suite) do\n  DatabaseCleaner.clean_with(:truncation)\nend\n\nconfig.before(:each) do\n  # set the default\n  DatabaseCleaner.strategy = :transaction\nend\n\nconfig.before(:each, type: :feature) do\n  DatabaseCleaner.strategy = :truncation\nend\n\nconfig.before(:each) do\n  DatabaseCleaner.start\nend\n\nconfig.append_after(:each) do\n  DatabaseCleaner.clean\nend\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm new to Capybara and testing on Rails in general, so please forgive me if this is a simple answer.</p>\n\n<p>I've got this test</p>\n\n<pre><code>it \"should be able to edit an assignment\" do\n    visit dashboard_path\n    select(@project.client + \" - \" + @project.name, :from =&gt; \"assignment_project_id\")\n    select(@team_member.first_name + \" \" + @team_member.last_name, :from =&gt; \"assignment_person_id\")\n    click_button \"Create assignment\"\n    page.should have_content(@team_member.first_name)\nend\n</code></pre>\n\n<p>it passes as is, but if I add :js => true it fails with</p>\n\n<pre><code>cannot select option, no option with text 'Test client - Test project' in select box 'assignment_project_id'\n</code></pre>\n\n<p>I'm using FactoryGirl to create the data, and as the test passes without JS, I know that part is working. </p>\n\n<p>I've tried with the default JS driver, and with the :webkit driver (with capybara-webkit installed)</p>\n\n<p>I guess I don't understand enough what turning on JS for Capybara is doing.</p>\n\n<p>Why would the test fail with JS on?</p>\n",
            "last_activity_date": 1421911426,
            "question_id": 8178120,
            "score": 29,
            "tags": [
                "javascript",
                "ruby-on-rails-3",
                "capybara"
            ],
            "title": "Capybara with :js =&gt; true causes test to fail"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>To copy without EOF use binary mode:</p>\n\n<pre><code>copy /B *.js compiled.js /Y\n</code></pre>\n\n<p>If the resulting file still has EOFs, that might have come from one of original files,\nit can be fixed by this variant:</p>\n\n<pre><code>copy /A *.js compiled.js /B /Y\n</code></pre>\n\n<p>/A removes trailing EOFs from original files if any and /B prevents appending EOF to the resulting file. If an EOF is not at the end, the source file will be truncated at it. The order of switches is important. If you write  </p>\n\n<pre><code>copy /A *.js /B compiled.js /Y\n</code></pre>\n\n<p>- EOFs in source files won't be removed but still resulting EOF won't be appended.  </p>\n\n<p>Try it yourself, thats where I get it. DOS commands are weird.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>We have created a mechanism consisting of the following parts:</p>\n\n<ul>\n<li>minfication (for js and css)</li>\n<li>aggregation in packages</li>\n<li>caching (http status 304 stuff)</li>\n<li>sending out original files for in development mode</li>\n</ul>\n\n<p>It may be too much for your needs, but as to answer your question what others do, here is how it works:</p>\n\n<ol>\n<li>A request comes in at, say,\n/css.aspx?package=core</li>\n<li>We do a lookup of the packagename in a xml configuration file (which\nfor instance declares that the\npackage \"core\" contains the files\n/js/mootools.js and\n/js/swfobject.js)</li>\n<li>We check if minification is enabled. For instance, in a\ndevelopment environment we don't\nwant the minified js contents to be\nserved out, but instead write the\noriginal files. For js this is done\nby document.writes of script\nincludes, and for css we write import rules.</li>\n<li>If minification is required (in production env) we do a check on the if-modified-since header from the request. If this client already has the minified contents, we send http header 304. If the client does require the contents, we check if we have minified contents in cache and serve that. Otherwise, we minify and send the result.</li>\n</ol>\n\n<p>All this is broken up in separate services. There is a cache service injected in the jsminificationwriter service. This makes use of the original minificationservice that solely takes care of the minification rules.</p>\n\n<p>What's nice in this approach is:</p>\n\n<ul>\n<li>It forces our development teams to think in js/css \"packages\" and therefore properly split up functionality and distribute them over the pages that require them.</li>\n<li>During development you are perfectly able to debug, getting proper files and line numbers.</li>\n<li>You can hook up any other minification service implementation such as YUI and so forth. JsMin was only our first take.</li>\n<li>It's a general approach that works for different content types.</li>\n</ul>\n\n<p>Hope this helps. I can post some code fragments to illustrate it more if you like.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can also do:</p>\n\n<pre><code>type *.js &gt; compiled.js\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I recommend using Apache Ant and YUI Compressor.</p>\n\n<p><a href=\"http://ant.apache.org/\">http://ant.apache.org/</a></p>\n\n<p><a href=\"http://yui.github.com/yuicompressor/\">http://yui.github.com/yuicompressor/</a></p>\n\n<p>Put something like this in the Ant build xml.\nIt will create two files, application.js and application-min.js.</p>\n\n<pre><code>&lt;target name=\"concatenate\" description=\"Concatenate all js files\"&gt;\n    &lt;concat destfile=\"build/application.js\"&gt;\n        &lt;fileset dir=\"src/js\" includes=\"*.js\" /&gt;\n    &lt;/concat&gt;\n&lt;/target&gt;\n\n&lt;target name=\"compress\" depends=\"concatenate\" description=\"Compress application.js to application-min.js\"&gt;\n    &lt;apply executable=\"java\" parallel=\"false\"&gt;\n        &lt;filelist dir=\"build\" files=\"application.js\" /&gt;\n        &lt;arg line=\"-jar\" /&gt;\n        &lt;arg path=\"path/to/yuicompressor-2.4.2.jar\" /&gt;\n        &lt;srcfile /&gt;\n        &lt;arg line=\"-o\" /&gt;\n        &lt;mapper type=\"glob\" from=\"*.js\" to=\"build/*-min.js\" /&gt;\n        &lt;targetfile /&gt;\n    &lt;/apply&gt;\n&lt;/target&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>I'll second yuicompressor, but I use /packer/</p>\n\n<p><a href=\"http://johannburkard.de/blog/programming/javascript/automate-javascript-compression-with-yui-compressor-and-packer.html\" rel=\"nofollow\">http://johannburkard.de/blog/programming/javascript/automate-javascript-compression-with-yui-compressor-and-packer.html</a></p>\n\n<p>It's been really excellent for me.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In asp.net AJAX, you can use the 'CompositeScript' tag. This will combile all your scripts into 1 big js file, saving bandwidth by reducing the number of http 304s and possibly http 401s.</p>\n\n<p>Sample:</p>\n\n<pre><code> &lt;asp:ScriptManager ID=\"ScriptManager1\" runat=\"server\"&gt;\n        &lt;CompositeScript&gt;\n            &lt;Scripts&gt;\n                &lt;asp:ScriptReference Path=\"~/Scripts/Script1.js\" /&gt;\n                &lt;asp:ScriptReference Path=\"~/Scripts/Script2.js\" /&gt;\n                &lt;asp:ScriptReference Path=\"~/Scripts/Script3.js\" /&gt;\n            &lt;/Scripts&gt;\n        &lt;/CompositeScript&gt;\n    &lt;/asp:ScriptManager&gt;\n</code></pre>\n\n<p>For more info, see here:\n<a href=\"http://msdn.microsoft.com/en-us/library/cc488552.aspx\">http://msdn.microsoft.com/en-us/library/cc488552.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can also try <a href=\"http://alexo.github.com/wro4j\" rel=\"nofollow\">wro4j</a> (web resource optimizer for java), which can be used as a build tool (maven plugin), runtime solution (using filter) or command line tool. It allows you to easily keep resources organized and handle the merging for you using a dozen of compressors for resources of bot types: js and css.</p>\n\n<p>Defining resources to merge is easy as:</p>\n\n<pre><code>&lt;groups xmlns=\"http://www.isdc.ro/wro\"&gt;\n  &lt;group name=\"all\"&gt;\n    &lt;css&gt;/asset/*.css&lt;/css&gt;\n    &lt;js&gt;/asset/*.js&lt;/js&gt;\n  &lt;/group&gt;\n&lt;/groups&gt;  \n</code></pre>\n\n<p>Disclaimer: I'm a commiter of this project.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Install the compressor uglifyjs on your machine:</p>\n\n<pre><code>sudo npm -g install uglify-js\n</code></pre>\n\n<p>Then the following command can be used to concatenate and compress all js files.</p>\n\n<pre><code>cat myAppDir/*.js | uglifyjs &gt; build/application.js\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is a very old question, but I want to mention that there are also ways to concatenate javascript using javascript! with nodejs obviously... For example there are tools published as npm modules like\n<a href=\"https://www.npmjs.org/package/concat\" rel=\"nofollow\">this</a> and there are also <a href=\"https://www.npmjs.org/package/grunt-contrib-concat\" rel=\"nofollow\">grunt</a> and <a href=\"https://www.npmjs.org/package/gulp-concat\" rel=\"nofollow\">gulp</a> plugins too.</p>\n\n<p>I also want to mention a very, VERY, interesting technique that is being used in huge projects like jQuery and Modernizr. Both of this projects are entirely developed with requirejs modules and then they use the <a href=\"http://requirejs.org/docs/optimization.html\" rel=\"nofollow\">requirejs optimizer</a> as a very smart concatenator. The interesting thing is that, as you can see, nor jQuery neither Modernizr needs on requirejs to work, and this happen because they erase the requirejs syntatic ritual in order to get rid of requirejs in their code. So they end up with a standalone library that was developed with requirejs modules!. Thanks to this they are able to perform cutsom builds of their libraries, among other advantages. <a href=\"http://augustoaltman.tumblr.com/post/103432024045/from-requirejs-modules-to-standalone-javascript\" rel=\"nofollow\">Here</a> is a blog post that explains all this more in detail.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to create a compiled JavaScript file for my website.  For development I would prefer to keep the JavaScript in separate files and just as part of my automated scripts  concatenate the files into one and run the compressor over it.</p>\n\n<p>My problem is that if I use the old DOS copy command it also puts in the EOF markers which the compressor complains about:</p>\n\n<p>copy /A *.js compiled.js /Y</p>\n\n<p>What are other people doing?</p>\n",
            "last_activity_date": 1417136933,
            "question_id": 301442,
            "score": 28,
            "tags": [
                "javascript",
                "batch-file",
                "compression"
            ],
            "title": "How do I concatenate JavaScript files into one file?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>IIRC Canvas is a raster style bitmap. it wont be zoomable because there's no stored information to zoom to.</p>\n\n<p>Your best bet is to keep two copies in memory (zoomed and non) and swap them on mouse click.  </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you have a source image or canvas element and your 400x400 canvas you want to draw into you can use the drawImage method to achieve zooming.</p>\n\n<p>So for example, the full view might be like this</p>\n\n<pre><code>ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);</code></pre>\n\n<p>And a zoomed view might be like this</p>\n\n<pre><code>ctx.drawImage(img, img.width / 4, img.height / 4, img.width / 2, img.height / 2, 0, 0, canvas.width, canvas.height);</code></pre>\n\n<p>The first parameter to drawImage is the image element or canvas element to draw, the next 4 are the x, y, width and height to sample from the source and the last 4 parameters are the x, y, width and height of the region to draw in the canvas. It will then handle the scaling for you.</p>\n\n<p>You would just need to pick the width and height for the source sample based on the zoom level and the x and y based on where the mouse is clicked minus half the calculated width and height (but you will need to ensure the rectangle isn't out of bounds).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Building on the suggestion of using drawImage you could also combine this with scale function.</p>\n\n<p>So before you draw the image scale the context to the zoom level you want:</p>\n\n<pre><code>ctx.scale(2, 2) // Doubles size of anything draw to canvas.\n</code></pre>\n\n<p>I've created a small example here <a href=\"http://jsfiddle.net/mBzVR/4/\">http://jsfiddle.net/mBzVR/4/</a> that uses drawImage and scale to zoom in on mousedown and out on mouseup.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Just try this out:</p>\n\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n    &lt;head&gt;\n    &lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.js\"&gt;&lt;/script&gt;\n        &lt;style&gt;\n            body {\n                margin: 0px;\n                padding: 0px;\n            }\n\n            #wrapper {\n                position: relative;\n                border: 1px solid #9C9898;\n                width: 578px;\n                height: 200px;\n            }\n\n            #buttonWrapper {\n                position: absolute;\n                width: 30px;\n                top: 2px;\n                right: 2px;\n            }\n\n            input[type =\n            \"button\"] {\n                padding: 5px;\n                width: 30px;\n                margin: 0px 0px 2px 0px;\n            }\n        &lt;/style&gt;\n        &lt;script&gt;\n            function draw(scale, translatePos){\n                var canvas = document.getElementById(\"myCanvas\");\n                var context = canvas.getContext(\"2d\");\n\n                // clear canvas\n                context.clearRect(0, 0, canvas.width, canvas.height);\n\n                context.save();\n                context.translate(translatePos.x, translatePos.y);\n                context.scale(scale, scale);\n                context.beginPath(); // begin custom shape\n                context.moveTo(-119, -20);\n                context.bezierCurveTo(-159, 0, -159, 50, -59, 50);\n                context.bezierCurveTo(-39, 80, 31, 80, 51, 50);\n                context.bezierCurveTo(131, 50, 131, 20, 101, 0);\n                context.bezierCurveTo(141, -60, 81, -70, 51, -50);\n                context.bezierCurveTo(31, -95, -39, -80, -39, -50);\n                context.bezierCurveTo(-89, -95, -139, -80, -119, -20);\n                context.closePath(); // complete custom shape\n                var grd = context.createLinearGradient(-59, -100, 81, 100);\n                grd.addColorStop(0, \"#8ED6FF\"); // light blue\n                grd.addColorStop(1, \"#004CB3\"); // dark blue\n                context.fillStyle = grd;\n                context.fill();\n\n                context.lineWidth = 5;\n                context.strokeStyle = \"#0000ff\";\n                context.stroke();\n                context.restore();\n            }\n\n            window.onload = function(){\n                var canvas = document.getElementById(\"myCanvas\");\n\n                var translatePos = {\n                    x: canvas.width / 2,\n                    y: canvas.height / 2\n                };\n\n                var scale = 1.0;\n                var scaleMultiplier = 0.8;\n                var startDragOffset = {};\n                var mouseDown = false;\n\n                // add button event listeners\n                document.getElementById(\"plus\").addEventListener(\"click\", function(){\n                    scale /= scaleMultiplier;\n                    draw(scale, translatePos);\n                }, false);\n\n                document.getElementById(\"minus\").addEventListener(\"click\", function(){\n                    scale *= scaleMultiplier;\n                    draw(scale, translatePos);\n                }, false);\n\n                // add event listeners to handle screen drag\n                canvas.addEventListener(\"mousedown\", function(evt){\n                    mouseDown = true;\n                    startDragOffset.x = evt.clientX - translatePos.x;\n                    startDragOffset.y = evt.clientY - translatePos.y;\n                });\n\n                canvas.addEventListener(\"mouseup\", function(evt){\n                    mouseDown = false;\n                });\n\n                canvas.addEventListener(\"mouseover\", function(evt){\n                    mouseDown = false;\n                });\n\n                canvas.addEventListener(\"mouseout\", function(evt){\n                    mouseDown = false;\n                });\n\n                canvas.addEventListener(\"mousemove\", function(evt){\n                    if (mouseDown) {\n                        translatePos.x = evt.clientX - startDragOffset.x;\n                        translatePos.y = evt.clientY - startDragOffset.y;\n                        draw(scale, translatePos);\n                    }\n                });\n\n                draw(scale, translatePos);\n            };\n\n\n\n            jQuery(document).ready(function(){\n               $(\"#wrapper\").mouseover(function(e){\n                  $('#status').html(e.pageX +', '+ e.pageY);\n               }); \n            })  \n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body onmousedown=\"return false;\"&gt;\n        &lt;div id=\"wrapper\"&gt;\n            &lt;canvas id=\"myCanvas\" width=\"578\" height=\"200\"&gt;\n            &lt;/canvas&gt;\n            &lt;div id=\"buttonWrapper\"&gt;\n                &lt;input type=\"button\" id=\"plus\" value=\"+\"&gt;&lt;input type=\"button\" id=\"minus\" value=\"-\"&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;h2 id=\"status\"&gt;\n        0, 0\n        &lt;/h2&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Works perfect for me with zooming and mouse movement.. you can customize it to mouse wheel up &amp; down \nNjoy!!!</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>Is there any easy way how to zoom in and back out in canvas (JavaScript)? Basically I have a 400x400px canvas and I'd like to be able to zoom in with 'mousedown' (2x) and go back with 'mouseup'.</p>\n\n<p>Spent last two days googling, but no luck so far.  :(</p>\n\n<p>Thanks for help.</p>\n",
            "last_activity_date": 1343114130,
            "question_id": 3420975,
            "score": 26,
            "tags": [
                "javascript",
                "canvas"
            ],
            "title": "HTML5 Canvas: Zooming"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>What jhaynie is saying in your linked question is that Titanium interprets your JS code and converts it into something that is almost identical to Objective-C.</p>\n\n<p>In a web application, the browser reads and interprets your Javascript and runs associated native code (perhaps C++) internally. For instance, the browser might say, \"This script is executing <code>getElementById()</code>, so I'll run my own C++ methods to accomplish that.\" What Titanium is doing is figuring out what that JS->C++ (or in this case, JS->Objective-C) would be in advance, and compiling that. It still leaves an interpreter open where necessary for your dynamic code, but it will convert and compile what it can.</p>\n\n<p>That means you won't find anything that looks similar to what you originally wrote in your script. Anything that must be left to an interpreter is still processed and converted, and your symbols will change (e.g. a call to <code>myTestFunction()</code> might be converted to <code>A()</code>, or <code>10001101001101</code> :P).</p>\n\n<hr>\n\n<p>The <em>usual</em> use of Javascript is to have it interpreted real-time by a running program. That's not what's going on here, and that's why you can't see any trace of your script.</p>\n\n<p>\n    <li>\n        <strong>Javascript is pre-processed</strong><br /><br />\n        Titanium performs the interpretation of your script as any other program would do (such as a web browser). It figures out what dependencies your script has on the Titanium API and sets that stuff up. It then maps your symbols directly into (in the case of the iPhone) Objective-C.<br /><br />\n        A program usually would read in your script (which is a simply a String), interprets it, and runs C code to accomplish what your script asked for. Titanium does this before-hand to figure out what C code should be run, and does the conversion in advance.<br /><br />\n    </li>\n    <li>\n        <strong>Code is compiled where possible</strong><br /><br />\n        Based on the interpretation of your code and its dependencies on the Titanium API, Titanium figures out what code can be directly compiled, and what must not be compiled in order to allow for they full dynamics of Javascript. I don't know how it chooses what does and doesn't get compiled, but you could check out the source if you want to know that much detail.<br /><br />\n        Code that must still be interpretted (left as a script) is still converted into symbols that result in more efficient mapping to native code. So it's still an interpreted script, but that doesn't mean it's still Javascript. This means that these parts of your script will still run faster than usual Javascript.<br /><br />\n        For iPhone, the compilable C is compiled with GCC to create a native binary.<br /><br />\n    </li>\n    <li>\n        <strong>You have a runnable app*</strong><br /><br />\n        Now you have an app that you can run on your mobile device. Your compilable code has been compiled and runs at lightning speed, while the rest is converted and still interpreted in a more efficient way which runs at near lightning speed. :P\n    </li>\n<br /></p>\n\n<p>I hope this makes sense now, because it's all I've got! :D</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Titanium is not a wrapper around a web view as stated before (though that accurately explains how Phonegap works).  Jeff's answer, linked in the question, is a technically correct explanation of how Titanium works, but here's the best version I've heard so far, from <a href=\"http://www.arcaner.com/\">Marshall Culpepper</a>:</p>\n\n<p>It's true that Titanium Mobile used the WebView (in both Android and iOS) in the pre-1.0 days. However, this is no longer true and hasn't been since our 1.0 release is March 2010.</p>\n\n<p>Since 1.0, we've shipped two separate Javascript runtimes with our apps, and we are running the Javascript code directly <strong>without</strong> a WebView. Your entire app from start to finish is now controlled by JS, and we provide a comprehensive set of Native APIs that enable this. Everything from UI widgets (yes, including WebView), Core APIs like Networking, Filesystem, Database, all the way to OS-specific things like JS Activities in Android. On the JS runtime front, we're shipping a forked version of WebKit's JavaScriptCore in iOS and a snapshot of Rhino 1.7 R3 CVS for Android. What we actually do with your javascript source is dependent on the platform, but generally it breaks up like this:</p>\n\n<ul>\n<li>Source is statically analyzed to find references to Titanium modules</li>\n<li>Localization strings (strings.xml), App metadata (tiapp.xml), and density specific images all generate platform specific analogs.</li>\n<li>In iOS:\n<ul>\n<li>An XCode project / configuration is generated</li>\n<li>JS Source is base64'd and inlined as a variable into a generated C file</li>\n<li>xcodebuild is used to generate the final binaries</li>\n<li>provisioning profiles, signing keys etc are applied</li>\n<li>iTunes and some other glue are used to send the IPA to your iOS device</li>\n</ul></li>\n<li>In Android:\n<ul>\n<li>An Android / Eclipse project is generated</li>\n<li>In \"Development\" mode, JS source is packaged as APK assets</li>\n<li>In \"Distribution\" (production) mode, when you're ready to ship the app, we compile the JS to Java bytecode using the Rhino JSC compiler. You can also enable this during development mode by setting \"ti.android.compilejs\" to \"true\" in tiapp.xml, see: <a href=\"http://developer.appcelerator.com/question/100201/enable-android-byte-code-compile\">http://developer.appcelerator.com/question/100201/enable-android-byte-code-compile</a></li>\n<li>dex, aapt, and other Android SDK tools are used to build and generate the final APK</li>\n<li>adb and keytool are used for pushing the APK out to the emulator and/or device</li>\n</ul></li>\n</ul>\n\n<p>There are many more details that I could dive into specifically on each of these points, but the point I wanted to drive home is that we no longer use the WebView as our Javascript engine. You <strong>can</strong> however still embed WebViews, and we provide some simple integration that allows you to call Titanium APIs from an embedded WebView.</p>\n",
                    "is_accepted": true,
                    "score": 40
                }
            ],
            "body": "<p>I installed Titanium from appcelerator and built the \"KitchenSink\" example application.</p>\n\n<p>All works well, I'm just wondering where does the javascript code ends up in a built app.</p>\n\n<p>I grep-ed the Xcode project and also the result application as I found it in <code>Library/Application Support/iPhone Simulator/....KitchenSink.app</code>, but I can't find any function names from <code>.js</code> files, not even string texts used within the application.</p>\n\n<p>Nearest information I found is an answer here : <a href=\"http://stackoverflow.com/questions/2444001/how-does-appcelerator-titanium-mobile-work\">How Does Appcelerator Titanium Mobile Work?</a> but I  do not understand clearly how the process works.</p>\n\n<p>Is the javascript code being compiled into a binary code (what compiler is used then?), or is it just transformed in some special data-format and interpreted in a running application ?</p>\n\n<p><strong>Update:</strong></p>\n\n<p>This is what I can see in a build/android directory of KitchenSink:</p>\n\n<pre><code>michal:bin mac$ find . -name table_view_layout\\*\n./assets/Resources/examples/table_view_layout.js\n./assets/Resources/examples/table_view_layout_2.js\n./assets/Resources/examples/table_view_layout_3.js\n./assets/Resources/examples/table_view_layout_4.js\n./assets/Resources/examples/table_view_layout_5.js\n./classes/org/appcelerator/generated/examples/table_view_layout.class\n./classes/org/appcelerator/generated/examples/table_view_layout_2.class\n./classes/org/appcelerator/generated/examples/table_view_layout_3.class\n./classes/org/appcelerator/generated/examples/table_view_layout_4.class\n./classes/org/appcelerator/generated/examples/table_view_layout_5.class\nmichal:bin mac$ unzip -t app.apk | grep table_view_layout\n    testing: assets/Resources/examples/table_view_layout.js   OK\n    testing: assets/Resources/examples/table_view_layout_2.js   OK\n    testing: assets/Resources/examples/table_view_layout_3.js   OK\n    testing: assets/Resources/examples/table_view_layout_4.js   OK\n    testing: assets/Resources/examples/table_view_layout_5.js   OK\n</code></pre>\n\n<p>I didn't look into app.apk before, all I could see were these class files corresponding to each of the javascript files. Therefore I assumed that on Android javascript is being compiled for JVM. Why can't these be found in app.apk ?</p>\n",
            "last_activity_date": 1295992861,
            "question_id": 4217551,
            "score": 24,
            "tags": [
                "javascript",
                "iphone",
                "android",
                "objective-c",
                "titanium"
            ],
            "title": "What happens to JavaScript code after app is compiled using Titanium Mobile"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You could have a look at <a href=\"http://www.davidpirek.com/blog/html-beautifier-jquery-plugin\" rel=\"nofollow\">David Pireks approach</a> - even though I think this is far from perfect.. (dependent on <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a>)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Is this what you want:</p>\n\n<p><a href=\"http://www.textfixer.com/html/uncompress-html-code.php\" rel=\"nofollow\">http://www.textfixer.com/html/uncompress-html-code.php</a></p>\n\n<p>Here's the link to the decompressing javascript:</p>\n\n<p><a href=\"http://www.textfixer.com/js/uncompress-html-code.js\" rel=\"nofollow\">http://www.textfixer.com/js/uncompress-html-code.js</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You may find this to be useful:</p>\n\n<p><a href=\"http://github.com/einars/js-beautify\">http://github.com/einars/js-beautify</a></p>\n\n<p>It is the source code powering the site <a href=\"http://jsbeautifier.org/\">http://jsbeautifier.org/</a></p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>Writing the HTML on one line would download faster to the browser, so I am not sure I would want it formatted.  Maybe an option for a formatted version or an optimized version.</p>\n\n<p>As for the question... you could do an AJAX call after so many actions and send the code to the server to be formatted and shown in a different box on the screen.  Basically it would be a real time version of this site, <a href=\"http://infohound.net/tidy/\" rel=\"nofollow\">http://infohound.net/tidy/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>jQuery creator John Resig wrote a fast and lightweight <a href=\"http://ejohn.org/blog/pure-javascript-html-parser/\" rel=\"nofollow\">HTML parser in javascript</a>.  If you're looking for a solution which you can add directly to your CMS then you could write a simple beautifier using this parser as a base.  All you'd need to do is reoutput the elements adding spaces and line breaks as you like, using the built in api:</p>\n\n<pre><code>HTMLParser(htmlString, {\n  start: function(tag, attrs, unary) {},\n  end: function(tag) {},\n  chars: function(text) {},\n  comment: function(text) {}\n});\n</code></pre>\n\n<p>An added benefit of this approach is that you could use the same HTMLParser to read HTML back into your WYSIWYG, or otherwise interact with your user's HTML tree.  HTMLParser also comes prebuilt with an HTMLtoDOM method.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I believe that both chrome and firebug's debugging code display engines are written in JS. That's probably heavier duty than you really want to be messing with though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is <a href=\"http://w3c.github.io/tidy-html5/\" rel=\"nofollow\">tidy-html5</a> that does exactly what you want. It's a portable application that takes invalid HTML as an input, and outputs nicely formatted markup.</p>\n\n<p>It has been <a href=\"https://www.npmjs.org/package/tidy-html5\" rel=\"nofollow\">compiled to javascript</a>.</p>\n\n<p>See <a href=\"http://lovasoa.github.io/tidy-html5/demo.html\" rel=\"nofollow\">the <strong>demo</strong></a> and download <a href=\"http://lovasoa.github.io/tidy-html5/tidy.js\" rel=\"nofollow\"><strong>tidy.js</strong></a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I format/tidy/beautify HTML in JavaScript? <a href=\"https://github.com/PANmedia/raptor-dependencies/blob/master/beautify-html.js\" rel=\"nofollow\">I have tried doing a search/replace for angle brackets (<code>&lt;</code>, <code>&gt;</code>) and indenting accordingly.</a> But of course it does not take into account when the is JS or CSS etc inside the HTML. </p>\n\n<p>Perhaps there maybe a HTML formatter/tidier/ beautifier library out there already to do this.</p>\n\n<p>The reason I want to do this is I have made a content editor (CMS) which has both WYSIWYG and source code views. The problem the code written by the WYSIWYG editor is normally a single line. So I would like a JavaScript that could format this into a more readable form on demand.</p>\n\n<p>Here what I have so far:</p>\n\n<pre><code>function getIndent(level) {\n    var result = '',\n        i = level * 4;\n    if (level &lt; 0) {\n        throw \"Level is below 0\";\n    }\n    while (i--) {\n        result += ' ';\n    }\n    return result;\n}\n\nfunction style_html(html) {\n    html = html.trim();\n    var result = '',\n        indentLevel = 0,\n        tokens = html.split(/&lt;/);\n    for (var i = 0, l = tokens.length; i &lt; l; i++) {\n        var parts = tokens[i].split(/&gt;/);\n        if (parts.length === 2) {\n            if (tokens[i][0] === '/') {\n                indentLevel--;\n            }\n            result += getIndent(indentLevel);\n            if (tokens[i][0] !== '/') {\n                indentLevel++;\n            }\n\n            if (i &gt; 0) {\n                result += '&lt;';\n            }\n\n            result += parts[0].trim() + \"&gt;\\n\";\n            if (parts[1].trim() !== '') {\n                result += getIndent(indentLevel) + parts[1].trim().replace(/\\s+/g, ' ') + \"\\n\";\n            }\n\n            if (parts[0].match(/^(img|hr|br)/)) {\n                indentLevel--;\n            }\n        } else {\n            result += getIndent(indentLevel) + parts[0] + \"\\n\";\n        }\n    }\n    return result;\n}\n</code></pre>\n",
            "last_activity_date": 1418082204,
            "question_id": 3913355,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "htmltidy",
                "beautifier"
            ],
            "title": "How to format/tidy/beautify in JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use <code>$.ajax</code> to load the other page into a variable, then create a temporary element and use <code>.html()</code> to set the contents to the value returned. Loop through the  element's children of nodeType 1 and keep their first children's nodeValues. If the external page is not on your web server you will need to proxy the file with your own web server.</p>\n\n<p>Something like this:</p>\n\n<pre><code>$.ajax({\n     url: \"/thePageToScrape.html\",\n     dataType: 'text',\n     success: function(data) {\n          var elements = $(\"&lt;div&gt;\").html(data)[0].getElementsByTagName(\"ul\")[0].getElementsByTagName(\"li\");\n          for(var i = 0; i &lt; elements.length; i++) {\n               var theText = elements[i].firstChild.nodeValue;\n               // Do something here\n          }\n     }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<pre><code>$.get(\"/path/to/other/page\",function(data){\n  $('#data').append($('li',data));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If this is for the same domain then no problem - the jQuery solution is good.</p>\n\n<p>But otherwise you can't access content from an arbitrary website because this is considered a security risk. See <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\" rel=\"nofollow\">same origin policy</a>. </p>\n\n<p>There are of course server side workarounds such as a web proxy or <a href=\"https://developer.mozilla.org/en/http_access_control\" rel=\"nofollow\">CORS headers</a>.\nOf if you're lucky they will support jsonp.</p>\n\n<p>But if you want a client side solution to work with an arbitrary website and web browser then you are out of luck. There is a <a href=\"http://www.w3.org/TR/cors/\" rel=\"nofollow\">proposal to relax this policy</a>, but this won't effect current web browsers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use YQL or Yahoo pipes to make the cross domain request for the raw page html content. The yahoo pipe or YQL query will spit this back as a JSON that can be processed by jquery to extract and display the required data.</p>\n\n<p>On the downside: YQL and Yahoo pipes OBEY the robots.txt file for the target domain\nand if the page is to long the Yahoo Pipes regex commands will not run.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You may want to consider pjscrape:</p>\n\n<p><a href=\"http://nrabinowitz.github.io/pjscrape/\" rel=\"nofollow\">http://nrabinowitz.github.io/pjscrape/</a></p>\n\n<p>It allows you to do this from the command-line, using javascript and jQuery. It does this by using PhantomJS, which is a headless webkit browser (it has no window, and it exists only for your script's usage, so you can load complex websites that use AJAX and it will work just as if it were a real browser).</p>\n\n<p>The examples are self-explanatory and I believe this works on all platforms (including Windows).</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have been playing with the idea of using a simple screen-scraper using jQuery and I am wondering if the following is possible.</p>\n\n<p>I have simple HTML page and am making an attempt (if this is possible) to grab the contents of all of the list items from another page, like so:</p>\n\n<p><strong>Main Page:</strong></p>\n\n<pre><code>&lt;!-- jQuery --&gt;\n&lt;script type='text/javascript'&gt;\n$(document).ready(function(){\n$.getJSON(\"[URL to other page]\",\n  function(data){\n\n    //Iterate through the &lt;li&gt; inside of the URL's data\n    $.each(data.items, function(item){\n      $(\"&lt;li/&gt;\").value().appendTo(\"#data\");\n    });\n\n  });\n});\n&lt;/script&gt;\n\n&lt;!-- HTML --&gt;\n&lt;html&gt;\n    &lt;body&gt;\n       &lt;div id='data'&gt;&lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>Other Page:</strong></p>\n\n<pre><code>//Html\n&lt;body&gt;\n    &lt;p&gt;&lt;b&gt;Items to Scrape&lt;/b&gt;&lt;/p&gt;   \n    &lt;ul&gt;\n        &lt;li&gt;I want to scrape what is here&lt;/li&gt;\n        &lt;li&gt;and what is here&lt;/li&gt;\n        &lt;li&gt;and here as well&lt;/li&gt;\n        &lt;li&gt;and append it in the main page&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p><strong>So, is it possible using jQuery to pull all of the list item contents from an external page and append them inside of a div?</strong></p>\n",
            "last_activity_date": 1380259357,
            "question_id": 5667880,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "screen-scraping"
            ],
            "title": "Simple Screen Scraping using jQuery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>From the <a href=\"https://developer.mozilla.org/en-US/docs/Web/Reference/Events/DOMContentLoaded\">Mozilla Developer Center</a>:</p>\n\n<blockquote>\n  <p>The DOMContentLoaded event is fired when the document has been\n  completely loaded and parsed, without waiting for stylesheets, images,\n  and subframes to finish loading (the load event can be used to detect\n  a fully-loaded page).</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p>The <code>DOMContentLoaded</code> event will fire as soon as the DOM hierarchy has been fully constructed, the <code>load</code> event will do it when all the images and sub-frames have finished loading.</p>\n\n<p>This event will work on most modern browsers, <strike>but not on IE</strike> including IE9 and above. There are some <a href=\"http://stackoverflow.com/questions/1795089/need-help-with-jquery-to-javascript/1795167#1795167\">workarounds</a> to mimic this event on older versions of IE, like the used on the jQuery library, they attach the <em>IE specific</em> <a href=\"http://msdn.microsoft.com/en-us/library/ms536957%28VS.85%29.aspx\"><code>onreadystatechange</code></a> event.</p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p><code>DOMContentLoaded</code>==<code>window.onDomReady()</code></p>\n\n<p><code>Load</code>==<code>window.onLoad()</code></p>\n\n<blockquote>\n  <p>A page can't be manipulated safely until the document is \"ready.\" jQuery detects this state of readiness for you. Code included inside $( document ).ready() will only run once the page Document Object Model (DOM) is ready for JavaScript code to execute. Code included inside $( window ).load(function() { ... }) will run once the entire page (images or iframes), not just the DOM, is ready.</p>\n</blockquote>\n\n<p>See: <a href=\"http://learn.jquery.com/using-jquery-core/document-ready/\">http://learn.jquery.com/using-jquery-core/document-ready/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><strong>See the difference yourself:</strong></p>\n\n<p><a href=\"http://ie.microsoft.com/Testdrive/HTML5/DOMContentLoaded/Default.html\">DEMO</a></p>\n\n<p><strong>From <a href=\"http://ie.microsoft.com/Testdrive/HTML5/DOMContentLoaded/Default.html\">Microsoft IE</a></strong></p>\n\n<blockquote>\n  <p>The DOMContentLoaded event fires when parsing of the current page is complete; the load event fires when all files have finished loading from all resources, including ads and images. DOMContentLoaded is a great event to use to hookup UI functionality to complex web pages.</p>\n</blockquote>\n\n<p><strong>From <a href=\"https://developer.mozilla.org/en-US/docs/Web/Reference/Events/DOMContentLoaded\">Mozilla Developer Network</a></strong></p>\n\n<blockquote>\n  <p>The DOMContentLoaded event is fired when the document has been completely loaded and parsed, without waiting for stylesheets, images, and subframes to finish loading (the load event can be used to detect a fully-loaded page).</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<ul>\n<li><p><strong>domContentLoaded</strong>: marks the point when both the DOM is ready and \nthere are no stylesheets that are blocking JavaScript execution - \nmeaning we can now (potentially) construct the render tree. Many\nJavaScript frameworks wait for this event before they start executing their own logic. For this reason the browser captures the EventStart and EventEnd timestamps to allow us to track how long this execution \ntook. </p></li>\n<li><p><strong>loadEvent</strong>: as a final step in every page load the browser fires\nan \u201conload\u201d event which can trigger additional application logic.</p></li>\n</ul>\n\n<p><a href=\"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/measure-crp\" rel=\"nofollow\">source</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What is the difference between the DOMContentLoaded and the Load event?</p>\n",
            "last_activity_date": 1403202877,
            "question_id": 2414750,
            "score": 56,
            "tags": [
                "javascript",
                "browser"
            ],
            "title": "Difference between DOMContentLoaded and Load events"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>//Month is 1 based\nfunction daysInMonth(month,year) {\n    return new Date(year, month, 0).getDate();\n}\n\n//July\ndaysInMonth(7,2009); //31\n//February\ndaysInMonth(2,2009); //28\ndaysInMonth(2,2008); //29\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 144
                },
                {
                    "body": "<p>The following takes any valid datetime value and returns the number of days in the associated month... it eliminates the ambiguity of both other answers... </p>\n\n<pre><code> // pass in any date as parameter anyDateInMonth\nfunction daysInMonth(anyDateInMonth) {\n    return new Date(anyDateInMonth.getYear(), \n                    ++anyDateInMonth.getMonth(), \n                    0).getDate();}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>Date.prototype.monthDays= function(){\n    var d= new Date(this.getFullYear(), this.getMonth()+1, 0);\n    return d.getDate();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Another possible option would be to use <strong><a href=\"http://www.datejs.com/\" rel=\"nofollow\">Datejs</a></strong></p>\n\n<p>Then you can do</p>\n\n<pre><code>Date.getDaysInMonth(2009, 9)     \n</code></pre>\n\n<p>Although adding a library just for this function is overkill, it's always nice to know all the options you have available to you :)</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/315760/what-is-the-best-way-to-determine-the-number-of-days-in-a-month-with-javascript\">What is the best way to determine the number of days in a month with javascript?</a>  </p>\n</blockquote>\n\n\n\n<p>Say I have the month as a number and a year.</p>\n",
            "last_activity_date": 1373055628,
            "question_id": 1184334,
            "score": 47,
            "tags": [
                "javascript"
            ],
            "title": "Get number days in a specified month using javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Yes - this is possible. In order to do it, you need to assign a tabindex...</p>\n\n<pre><code>&lt;div tabindex=\"0\"&gt;Hello World&lt;/div&gt;\n</code></pre>\n\n<p>A tabindex of 0 will put the tag \"in the natural tab order of the page\". A higher number will give it a specific order of priority, where 1 will be the first, 2 second and so on.</p>\n\n<p>You can also give a tabindex of -1, which will make the div only focus-able by script, not the user.</p>\n",
                    "is_accepted": false,
                    "score": 90
                },
                {
                    "body": "<p>To make the border flash you can do this:</p>\n\n<pre><code>function focusTries() {\n    document.getElementById('tries').style.border = 'solid 1px #ff0000;'\n    setTimeout ( clearBorder(), 1000 );\n}\n\nfunction clearBorder() {\n    document.getElementById('tries').style.border = '';\n}\n</code></pre>\n\n<p>This will make the border solid red for 1 second then remove it again.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>window.location.hash = '#tries';\n</code></pre>\n\n<p>This will scroll to the element in question, essentially \"focus\"ing it.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>I wanted to suggest something like Michael Shimmin's but without hardcoding things like the element, or the CSS that is applied to it. </p>\n\n<p>I'm only using jQuery for add/remove class, if you don't want to use jquery, you just need a replacement for add/removeClass</p>\n\n<p>--Javascript</p>\n\n<pre><code>function highlight(el, durationMs) { \n  el = $(el);\n  el.addClass('highlighted');\n  setTimeout(function() {\n    el.removeClass('highlighted')\n  }, durationMs || 1000);\n}\n\nhighlight(document.getElementById('tries'));\n</code></pre>\n\n<p>--CSS</p>\n\n<pre><code>#tries {\n    border: 1px solid gray;\n}\n\n#tries.highlighted {\n    border: 3px solid red;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>document.getElementById('tries').scrollIntoView()</code> works. This works better than <code>window.location.hash</code>  when you have fixed positioning.</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<pre><code>&lt;div id=\"inner\" tabindex=\"0\"&gt;\n    this div can now have focus and recieve keyboard events\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to focus on a <code>&lt;div&gt;</code> using javascript <code>focus()</code> function?</p>\n\n<p>I have a <code>&lt;div&gt;</code> tag</p>\n\n<pre><code>&lt;div id=\"tries\"&gt;You have 3 tries left&lt;/div&gt;\n</code></pre>\n\n<p>I am trying to focus on the above <code>&lt;div&gt;</code> using :</p>\n\n<pre><code>document.getElementById('tries').focus();\n</code></pre>\n\n<p>But it doesn't work. could someone suggest something....?</p>\n",
            "last_activity_date": 1423644327,
            "question_id": 3656467,
            "score": 38,
            "tags": [
                "javascript",
                "focus"
            ],
            "title": "Is it possible to focus on a &lt;div&gt; using javascript focus() function?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Well in pure javascript my thinking is that you would first have to collate them inside a collection.  </p>\n\n<pre><code>var divs = document.getElementsByTagName(\"div\");\n//divs now contain each and every div element on the page\nvar selectionDiv = document.getElementById(\"MySecondDiv\");\n</code></pre>\n\n<p>So basically with selectionDiv iterate through the collection to find its index, and then obviously -1 = previous +1 = next within bounds</p>\n\n<pre><code>for(var i = 0; i &lt; divs.length;i++)\n{\n   if(divs[i] == selectionDiv)\n   {\n     var previous = divs[i - 1];\n     var next = divs[i + 1];\n   }\n}\n</code></pre>\n\n<p>Please be aware though as I say that extra logic would be required to check that you are within the bounds i.e. you are not at the end or start of the collection.</p>\n\n<p>This also will mean that say you have a div which has a child div nested.  The next div would not be a sibling but a child, So if you only want siblings on the same level as the target div then definately use nextSibling checking the <strong>tagName</strong> property.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Really depends on the overall structure of your document.</p>\n\n<p>If you have:</p>\n\n<pre><code>&lt;div&gt;&lt;/div&gt;\n&lt;div&gt;&lt;/div&gt;\n&lt;div&gt;&lt;/div&gt;\n</code></pre>\n\n<p>it may be as simple as traversing through using</p>\n\n<pre><code>mydiv.nextSibling();\nmydiv.previousSibling();\n</code></pre>\n\n<p>However, if the 'next' div could be anywhere in the document you'll need a more complex solution. You could try something using</p>\n\n<pre><code>document.getElementsByTagName('div');\n</code></pre>\n\n<p>and running through these to get where you want somehow.</p>\n\n<p>If you are doing lots of complex DOM traversing such as this I would recommend looking into a library such as jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>use the <a href=\"https://developer.mozilla.org/En/DOM/Node.nextSibling\"><code>nextSibling</code></a> and <a href=\"https://developer.mozilla.org/En/DOM/Node.previousSibling\"><code>previousSibling</code></a> properties:</p>\n\n<pre><code>&lt;div id=\"foo1\"&gt;&lt;/div&gt;\n&lt;div id=\"foo2\"&gt;&lt;/div&gt;\n&lt;div id=\"foo3\"&gt;&lt;/div&gt;\n\ndocument.getElementById('foo2').nextSibling; // #foo3\ndocument.getElementById('foo2').previousSibling; // #foo1\n</code></pre>\n\n<p>However in some browsers (I forget which) you also need to check for whitespace and comment nodes:</p>\n\n<pre><code>var div = document.getElementById('foo2');\nvar nextSibling = div.nextSibling;\nwhile(nextSibling &amp;&amp; nextSibling.nodeType != 1) {\n    nextSibling = nextSibling.nextSibling\n}\n</code></pre>\n\n<p>Libraries like jQuery handle all these cross-browser checks for you out of the box.</p>\n",
                    "is_accepted": false,
                    "score": 102
                },
                {
                    "body": "<p>There is a attribute on every HTMLElement, \"previousElementSibling\".</p>\n\n<p>Ex:</p>\n\n<pre><code>&lt;div id=\"a\"&gt;A&lt;/div&gt;\n&lt;div id=\"b\"&gt;B&lt;/div&gt;\n&lt;div id=\"c\"&gt;c&lt;/div&gt;\n\n&lt;div id=\"result\"&gt;Resultado: &lt;/div&gt;\n</code></pre>\n\n<hr>\n\n<pre><code>var b = document.getElementById(\"c\").previousElementSibling;\n\ndocument.getElementById(\"result\").innerHTML += b.innerHTML;\n</code></pre>\n\n<p>Live: <a href=\"http://jsfiddle.net/QukKM/\">http://jsfiddle.net/QukKM/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This will be easy...\nits an pure javascript code</p>\n\n<pre><code>    &lt;script&gt;\n           alert(document.getElementById(\"someElement\").previousElementSibling.innerHTML);\n    &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>How do I get the next element in html using javascript?\nSuppose I have three <code>div</code>s and I get a reference to one in js code, I want to get which is the next div and which is the previous.</p>\n",
            "last_activity_date": 1388732268,
            "question_id": 574904,
            "score": 37,
            "tags": [
                "javascript",
                "html",
                "dom"
            ],
            "title": "Get next/previous element using Javascript"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>In javascript you can implement the function just once and invoke the function without the parameters <code>myFunc()</code>  You then check to see if options is 'undefined'</p>\n\n<pre><code>function myFunc(options){\n if(typeof options != 'undefined'){\n  //code\n }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Because javascript has no type checking on arguments or required qty of arguments, you can just have one implementation of <code>myFunc()</code> that can adapt to what arguments were passed to it by checking the type, presence or quantity of arguments.</p>\n\n<p>jQuery does this all the time.  You can make some of the arguments optional or you can branch in your function depending upon what arguments are passed to it.</p>\n\n<p>In implementing these types of overloads, you have several different techniques you can use:</p>\n\n<ol>\n<li>You can check for the presence of any given argument by checking to see if the declared argument name value is <code>undefined</code>.</li>\n<li>You can check the total quantity or arguments with <code>arguments.length</code>.</li>\n<li>You can check the type of any given argument.</li>\n<li>For variable numbers of arguments, you can use the <code>arguments</code> pseudo-array to access any given argument with <code>arguments[i]</code>.</li>\n</ol>\n\n<p>Here are some examples:</p>\n\n<p>Let's look at jQuery's <code>obj.data()</code> method.  It supports four different forms of usage:</p>\n\n<pre><code>obj.data(\"key\");\nobj.data(\"key\", value);\nobj.data();\nobj.data(object);\n</code></pre>\n\n<p>Each one triggers a different behavior and, without using this dynamic form of overloading, would require four separate functions.</p>\n\n<p>Here's how one can discern between all these options in English and then I'll combine them all in code:</p>\n\n<pre><code>// get the data element associated with a particular key value\nobj.data(\"key\");\n</code></pre>\n\n<p>If the first argument passed to <code>.data()</code> is a string and the second argument is <code>undefined</code>, then the caller must be using this form.</p>\n\n<hr>\n\n<pre><code>// set the value associated with a particular key\nobj.data(\"key\", value);\n</code></pre>\n\n<p>If the second argument is not undefined, then set the value of a particular key.</p>\n\n<hr>\n\n<pre><code>// get all keys/values\nobj.data();\n</code></pre>\n\n<p>If no arguments are passed, then return all keys/values in a returned object.</p>\n\n<hr>\n\n<pre><code>// set all keys/values from the passed in object\nobj.data(object);\n</code></pre>\n\n<p>If the type of the first argument is a plain object, then set all keys/values from that object.</p>\n\n<hr>\n\n<p>Here's how you could combine all of those in one set of javascript logic:</p>\n\n<pre><code> // method declaration for .data()\n data: function(key, value) {\n     if (arguments.length === 0) {\n         // .data()\n         // no args passed, return all keys/values in an object\n     } else if (typeof key === \"string\") {\n         // first arg is a string, look at type of second arg\n         if (typeof value !== \"undefined\") {\n             // .data(\"key\", value)\n             // set the value for a particular key\n         } else {\n             // .data(\"key\")\n             // retrieve a value for a key\n         }\n     } else if (typeof key === \"object\") {\n         // .data(object)\n         // set all key/value pairs from this object\n     } else {\n         // unsupported arguments passed\n     }\n },\n</code></pre>\n\n<hr>\n\n<p>The key to this technique is to make sure that all forms of arguments you want to accept are uniquely identifiable and there is never any confusion about which form the caller is using.  This generally requires ordering the arguments appropriately and making sure that there is enough uniqueness in the type and position of the arguments that you can always tell which form is being used.</p>\n\n<p>For example, if you have a function that takes three string arguments:</p>\n\n<pre><code>obj.query(\"firstArg\", \"secondArg\", \"thirdArg\");\n</code></pre>\n\n<p>You can easily make the third argument optional and you can easily detect that condition, but you cannot make only the second argument optional because you can't tell which of these the caller means to be passing because there is no way to identify if the second argument is meant to be the second argument or the second argument was omitted so what's in the second argument's spot is actually the third argument:</p>\n\n<pre><code>obj.query(\"firstArg\", \"secondArg\");\nobj.query(\"firstArg\", \"thirdArg\");\n</code></pre>\n\n<p>Since all three arguments are the same type, you can't tell the difference between different arguments so you don't know what the caller intended.  With this calling style, only the third argument can be optional.  If you wanted to omit the second argument, it would have to be passed as <code>null</code> (or some other detectable value) instead and your code would detect that:</p>\n\n<pre><code>obj.query(\"firstArg\", null, \"thirdArg\");\n</code></pre>\n\n<hr>\n\n<p>Here's a jQuery example of optional arguments.  both arguments are optional and take on default values if not passed:</p>\n\n<pre><code>clone: function( dataAndEvents, deepDataAndEvents ) {\n    dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n    deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n    return this.map( function () {\n        return jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n    });\n},\n</code></pre>\n\n<p>Here's a jQuery example where the argument can be missing or any one of three different types which gives you four different overloads:</p>\n\n<pre><code>html: function( value ) {\n    if ( value === undefined ) {\n        return this[0] &amp;&amp; this[0].nodeType === 1 ?\n            this[0].innerHTML.replace(rinlinejQuery, \"\") :\n            null;\n\n    // See if we can take a shortcut and just use innerHTML\n    } else if ( typeof value === \"string\" &amp;&amp; !rnoInnerhtml.test( value ) &amp;&amp;\n        (jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value )) &amp;&amp;\n        !wrapMap[ (rtagName.exec( value ) || [\"\", \"\"])[1].toLowerCase() ] ) {\n\n        value = value.replace(rxhtmlTag, \"&lt;$1&gt;&lt;/$2&gt;\");\n\n        try {\n            for ( var i = 0, l = this.length; i &lt; l; i++ ) {\n                // Remove element nodes and prevent memory leaks\n                if ( this[i].nodeType === 1 ) {\n                    jQuery.cleanData( this[i].getElementsByTagName(\"*\") );\n                    this[i].innerHTML = value;\n                }\n            }\n\n        // If using innerHTML throws an exception, use the fallback method\n        } catch(e) {\n            this.empty().append( value );\n        }\n\n    } else if ( jQuery.isFunction( value ) ) {\n        this.each(function(i){\n            var self = jQuery( this );\n\n            self.html( value.call(this, i, self.html()) );\n        });\n\n    } else {\n        this.empty().append( value );\n    }\n\n    return this;\n},\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Overloading a function in JavaScript can be done in many ways. All of them involve a single master function that either performs all the processes, or delegates to sub-functions/processes.</p>\n\n<p>One of the most common simple techniques involves a simple switch:</p>\n\n<pre><code>function foo(a, b) {\n    switch (arguments.length) {\n    case 0:\n        //do basic code\n        break;\n    case 1:\n        //do code with `a`\n        break;\n    case 2:\n    default:\n        //do code with `a` &amp; `b`\n        break;\n    }\n}\n</code></pre>\n\n<p>A more elegant technique would be to use an array (or object if you're not making overloads for <em>every</em> argument count):</p>\n\n<pre><code>fooArr = [\n    function () {\n    },\n    function (a) {\n    },\n    function (a,b) {\n    }\n];\nfunction foo(a, b) {\n    return fooArr[arguments.length](a, b);\n}\n</code></pre>\n\n<p>That previous example isn't very elegant, anyone could modify <code>fooArr</code>, and it would fail if someone passes in more than 2 arguments to <code>foo</code>, so a better form would be to use a module pattern and a few checks:</p>\n\n<pre><code>var foo = (function () {\n    var fns;\n    fns = [\n        function () {\n        },\n        function (a) {\n        },\n        function (a, b) {\n        }\n    ];\n    function foo(a, b) {\n        var fnIndex;\n        fnIndex = arguments.length;\n        if (fnIndex &gt; foo.length) {\n            fnIndex = foo.length;\n        }\n        return fns[fnIndex].call(this, a, b);\n    }\n    return foo;\n}());\n</code></pre>\n\n<p>Of course your overloads might want to use a dynamic number of parameters, so you could use an object for the <code>fns</code> collection.</p>\n\n<pre><code>var foo = (function () {\n    var fns;\n    fns = {};\n    fns[0] = function () {\n    };\n    fns[1] = function (a) {\n    };\n    fns[2] = function (a, b) {\n    };\n    fns.params = function (a, b /*, params */) {\n    };\n    function foo(a, b) {\n        var fnIndex;\n        fnIndex = arguments.length;\n        if (fnIndex &gt; foo.length) {\n            fnIndex = 'params';\n        }\n        return fns[fnIndex].apply(this, Array.prototype.slice.call(arguments));\n    }\n    return foo;\n}());\n</code></pre>\n\n<hr>\n\n<p>My personal preference tends to be the <code>switch</code>, although it does bulk up the master function. A common example of where I'd use this technique would be a accessor/mutator method:</p>\n\n<pre><code>function Foo() {} //constructor\nFoo.prototype = {\n    bar: function (val) {\n        switch (arguments.length) {\n        case 0:\n            return this._bar;\n        case 1:\n            this._bar = val;\n            return this;\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p><a href=\"https://github.com/jrf0110/leFunc\" rel=\"nofollow\">https://github.com/jrf0110/leFunc</a></p>\n\n<pre><code>var getItems = leFunc({\n  \"string\": function(id){\n    // Do something\n  },\n  \"string,object\": function(id, options){\n    // Do something else\n  },\n  \"string,object,function\": function(id, options, callback){\n    // Do something different\n    callback();\n  },\n  \"object,string,function\": function(options, message, callback){\n    // Do something ca-raaaaazzzy\n    callback();\n  }\n});\n\ngetItems(\"123abc\"); // Calls the first function - \"string\"\ngetItems(\"123abc\", {poop: true}); // Calls the second function - \"string,object\"\ngetItems(\"123abc\", {butt: true}, function(){}); // Calls the third function - \"string,object,function\"\ngetItems({butt: true}, \"What what?\" function(){}); // Calls the fourth function - \"object,string,function\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I am using a bit different overloading approach based on arguments number.\nHowever i believe John Fawcett's approach is also good.\nHere the example, code based on John Resig's (jQuery's Author) explanations.</p>\n\n<pre><code>// o = existing object, n = function name, f = function.\n    function overload(o, n, f){\n        var old = o[n];\n        o[n] = function(){\n            if(f.length == arguments.length){\n                return f.apply(this, arguments);\n            }\n            else if(typeof o == 'function'){\n                return old.apply(this, arguments);\n            }\n        };\n    }\n</code></pre>\n\n<p>usability:</p>\n\n<pre><code>var obj = {};\noverload(obj, 'function_name', function(){ /* what we will do if no args passed? */});\noverload(obj, 'function_name', function(first){ /* what we will do if 1 arg passed? */});\noverload(obj, 'function_name', function(first, second){ /* what we will do if 2 args passed? */});\noverload(obj, 'function_name', function(first,second,third){ /* what we will do if 3 args passed? */});\n//... etc :)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://www.bobjs.com\" rel=\"nofollow\">bob.js framework</a> has a little different mechanism to support overloads. This includes both defining the overloaded function bodies as well as defining the conditions to distinguish between the overloads:</p>\n\n<pre><code>var notify = new bob.fn.overloadFunction([ \n    { \n        condition: function(msg) { return bob.utils.isString(msg); }, \n        overload: function(msg) { \n            console.log(msg); \n        } \n    }, \n    { \n        condition: function(bSayHello) { return bob.utils.isBoolean(bSayHello); }, \n        overload: function(bSayHello, msg) { \n            msg = bSayHello ? 'Hello: ' + msg : msg; \n            console.log(msg); \n        } \n    } \n]); \n</code></pre>\n\n<p>However, the end result is quite clean:</p>\n\n<pre><code>notify('Simple sentence.'); \n// Output: \n// Simple sentence. \nnotify(true, 'Greeting sentence.'); \n// Output: \n// Hello: Greeting sentence. \nnotify(123); \n// JavaScript Error: \n// \"No matching overload found.\" \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I tried to develop an elegant solution to this problem described <a href=\"http://stamat.wordpress.com/2013/04/10/javascript-function-overloading/\" rel=\"nofollow\">here</a>. And you can find the demo <a href=\"http://jsfiddle.net/stamat/Geh5r/\" rel=\"nofollow\">here</a>. The usage looks like this:</p>\n\n<pre><code>var out = def({\n    'int': function(a) {\n        alert('Here is int '+a);\n    },\n\n    'float': function(a) {\n        alert('Here is float '+a);\n    },\n\n    'string': function(a) {\n        alert('Here is string '+a);\n    },\n\n    'int,string': function(a, b) {\n        alert('Here is an int '+a+' and a string '+b);\n    },\n    'default': function(obj) {\n        alert('Here is some other value '+ obj);\n    }\n\n});\n\nout('ten');\nout(1);\nout(2, 'robot');\nout(2.5);\nout(true);\n</code></pre>\n\n<p>The methods used to achieve this:</p>\n\n<pre><code>var def = function(functions, parent) {\n return function() {\n    var types = [];\n    var args = [];\n    eachArg(arguments, function(i, elem) {\n        args.push(elem);\n        types.push(whatis(elem));\n    });\n    if(functions.hasOwnProperty(types.join())) {\n        return functions[types.join()].apply(parent, args);\n    } else {\n        if (typeof functions === 'function')\n            return functions.apply(parent, args);\n        if (functions.hasOwnProperty('default'))\n            return functions['default'].apply(parent, args);        \n    }\n  };\n};\n\nvar eachArg = function(args, fn) {\n var i = 0;\n while (args.hasOwnProperty(i)) {\n    if(fn !== undefined)\n        fn(i, args[i]);\n    i++;\n }\n return i-1;\n};\n\nvar whatis = function(val) {\n\n if(val === undefined)\n    return 'undefined';\n if(val === null)\n    return 'null';\n\n var type = typeof val;\n\n if(type === 'object') {\n    if(val.hasOwnProperty('length') &amp;&amp; val.hasOwnProperty('push'))\n        return 'array';\n    if(val.hasOwnProperty('getDate') &amp;&amp; val.hasOwnProperty('toLocaleTimeString'))\n        return 'date';\n    if(val.hasOwnProperty('toExponential'))\n        type = 'number';\n    if(val.hasOwnProperty('substring') &amp;&amp; val.hasOwnProperty('length'))\n        return 'string';\n }\n\n if(type === 'number') {\n    if(val.toString().indexOf('.') &gt; 0)\n        return 'float';\n    else\n        return 'int';\n }\n\n return type;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I like to add sub functions within a parent function to achieve the ability to differentiate between argument groups for the same functionality.</p>\n\n<pre><code>var doSomething = function() {\n    var foo;\n    var bar;\n};\n\ndoSomething.withArgSet1 = function(arg0, arg1) {\n    var obj = new doSomething();\n    // do something the first way\n    return obj;\n};\n\ndoSomething.withArgSet2 = function(arg2, arg3) {\n    var obj = new doSomething();\n    // do something the second way\n    return obj;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>What you are trying to achieve is best done using the function's local <strong>arguments</strong> variable.</p>\n\n<pre><code>function foo() {\n    if (arguments.length === 0) {\n        //do something\n    }\n    if (arguments.length === 1) {\n        //do something else\n    }\n}\n\nfoo(); //do something\nfoo('one'); //do something else\n</code></pre>\n\n<p>You can find a better explanation of how this works <a href=\"http://www.justinbar.net/post/add-parameters-to-an-existing-javascript-function\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Check this out:</p>\n\n<p><a href=\"http://www.codeproject.com/Articles/688869/Overloading-JavaScript-Functions\" rel=\"nofollow\">http://www.codeproject.com/Articles/688869/Overloading-JavaScript-Functions</a></p>\n\n<p>Basically in your class, you number your functions that you want to be overloaded and then with one function call you add function overloading, fast and easy.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Since JavaScript doesn't have function overload <em>options object</em> can be used instead.  If there are one or two required arguments, it's better to keep them separate from the options object.  Here is an example on how to use options object and populated values to default value in case if value was not passed in options object.</p>\n\n<pre><code>function optionsObjectTest(x, y, opts) {\n    opts = opts || {}; // default to an empty options object\n\n    var stringValue = opts.stringValue || \"string default value\";\n    var boolValue = !!opts.boolValue; // coerces value to boolean with a double negation pattern\n    var numericValue = opts.numericValue === undefined ? 123 : opts.numericValue;\n\n    return \"{x:\" + x + \", y:\" + y + \", stringValue:'\" + stringValue + \"', boolValue:\" + boolValue + \", numericValue:\" + numericValue + \"}\";\n</code></pre>\n\n<p>}</p>\n\n<p><a href=\"http://jsfiddle.net/vlad_bezden/4ZqH7/\" rel=\"nofollow\">here</a> is an example on how to use options object</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For this you need to create a function that adds the function to an object, then it will execute depending on the amount of arguments you send to the function:</p>\n\n<pre><code>&lt;script &gt; \n//Main function to add the methods\nfunction addMethod(object, name, fn) {\n  var old = object[name];\n  object[name] = function(){\n    if (fn.length == arguments.length)\n      return fn.apply(this, arguments)\n    else if (typeof old == 'function')\n      return old.apply(this, arguments);\n  };\n}\n\n\n\ufffc  var ninjas = {\n   values: [\"Dean Edwards\", \"Sam Stephenson\", \"Alex Russell\"]\n};\n\n//Here we declare the first function with no arguments passed\n  addMethod(ninjas, \"find\", function(){\n    return this.values;\n});\n\n//Second function with one argument\n  addMethod(ninjas, \"find\", function(name){\n    var ret = [];\n    for (var i = 0; i &lt; this.values.length; i++)\n      if (this.values[i].indexOf(name) == 0)\n        ret.push(this.values[i]);\n    return ret;\n  });\n\n//Third function with two arguments\n  addMethod(ninjas, \"find\", function(first, last){\n    var ret = [];\n    for (var i = 0; i &lt; this.values.length; i++)\n      if (this.values[i] == (first + \" \" + last))\n        ret.push(this.values[i]);\n    return ret;\n  });\n\n\n//Now you can do:\nninjas.find();\nninjas.find(\"Sam\");\nninjas.find(\"Dean\", \"Edwards\")\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You cannot do method overloading in strict sense. Not like the way it is supported in <code>java</code> or <code>c#</code>.</p>\n\n<p><strong>The issue is that JavaScript does NOT natively support method overloading. So, if it sees/parses two or more functions with a same names it\u2019ll just consider the last defined function and overwrite the previous ones.</strong></p>\n\n<p>One of the way I think is suitable for most of the case is follows - </p>\n\n<p>Lets say you have method </p>\n\n<pre><code>function foo(x)\n{\n} \n</code></pre>\n\n<p>Instead of overloading method <strong>which is not possible in javascript</strong> you can define a new method </p>\n\n<pre><code>fooNew(x,y,z)\n{\n}\n</code></pre>\n\n<p>and then modify the 1st function as follows -</p>\n\n<pre><code>function foo(x)\n{\n  if(arguments.length==2)\n  {\n     return fooNew(arguments[0],  arguments[1]);\n  }\n} \n</code></pre>\n\n<p>If you have many such overloaded method consider using <code>switch</code> than just <code>if-else</code> statements.</p>\n\n<p>(<a href=\"http://opensourceforgeeks.blogspot.in/2014/09/method-overloading-in-javascript.html\" rel=\"nofollow\">more details</a>)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Classical (non-js) approach to overloading:</p>\n\n<pre><code>function myFunc(){\n //code\n}\n\nfunction myFunc(overloaded){\n //other code\n}\n</code></pre>\n\n<p>Javascript wont let more than one function be defined with the same name. As such, things like this show up:</p>\n\n<pre><code>function myFunc(options){\n if(options[\"overloaded\"]){\n  //code\n }\n}\n</code></pre>\n\n<p>Is there a better workaround for function overloading in javascript other than passing an object with the overloads in it?</p>\n\n<p>Passing in overloads can quickly cause a function to become too verbose because each possible overload would then need a conditional statement. Using functions to accomplish the <code>//code</code> inside of those conditional statements can cause tricky situations with scopes.</p>\n",
            "last_activity_date": 1414363773,
            "question_id": 10855908,
            "score": 33,
            "tags": [
                "javascript"
            ],
            "title": "How to overload functions in javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If you only need to exclude out <code>enter</code>, <code>escape</code> and <code>spacebar</code> keys, you can do the following:</p>\n\n<pre><code>$(\"#text1\").keyup(function(event) {\nif (event.keyCode != '13' &amp;&amp; event.keyCode != '27' &amp;&amp; event.keyCode != '32') {\n     alert('test');\n   }\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/syen81/75gw7/\" rel=\"nofollow\">See it actions here.</a></p>\n\n<p>You can refer to the <a href=\"http://www.expandinghead.net/keycode.html\" rel=\"nofollow\">complete list of keycode here</a> for your further modification.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong>Note:</strong> In hindsight this was a quick and dirty answer, and may not work in all situations. To have a reliable solution, see <a href=\"http://stackoverflow.com/questions/3977642/how-to-know-if-keyup-is-a-character-key-jquery/3977843#answer-3978257\">Tim Down's answer</a> (copy pasting that here as this answer is still getting views and <em>gasp</em> upvotes):</p>\n\n<blockquote>\n  <p>You can't do this reliably with the keyup event. If you want to know\n  something about the character that was typed, you have to use the\n  keypress event instead.</p>\n  \n  <p>The following example will work all the time in most browsers but\n  there are some edge cases that you should be aware of. For what is in\n  my view the definitive guide on this, see\n  <a href=\"http://unixpapa.com/js/key.html\" rel=\"nofollow\">http://unixpapa.com/js/key.html</a>.</p>\n\n<pre><code>$(\"input\").keypress(function(e) {\n    if (e.which !== 0) {\n        alert(\"Charcter was typed. It was: \" + String.fromCharCode(e.which));\n    }\n});\n</code></pre>\n  \n  <p><code>keyup</code> and <code>keydown</code> give you information about the physical key that\n  was pressed. On standard US/UK keyboards in their standard layouts, it\n  looks like there is a correlation between the <code>keyCode</code> property of\n  these events and the character they represent. However, this is not\n  reliable: different keyboard layouts will have different mappings.</p>\n</blockquote>\n\n<hr>\n\n<p><strong>The following was the original answer, but is not correct and may not work reliably in all situations.</strong></p>\n\n<p><strike>To match the keycode with a word character (eg., <code>a</code> would match. <code>space</code> would not)</p>\n\n<pre><code>$(\"input\").keyup(function(event)\n{ \n    var c= String.fromCharCode(event.keyCode);\n    var isWordcharacter = c.match(/\\w/);\n}); \n</code></pre>\n\n<p>Ok, that was a quick answer. The approach is the same, but beware of keycode issues, see this <a href=\"http://www.quirksmode.org/js/keys.html\" rel=\"nofollow\">article</a> in quirksmode.\n</strike></p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>You can't do this reliably with the <code>keyup</code> event. <strong>If you want to know something about the character that was typed, you have to use the <code>keypress</code> event instead.</strong></p>\n\n<p>The following example will work all the time in most browsers but there are some edge cases that you should be aware of. For what is in my view the definitive guide on this, see <a href=\"http://unixpapa.com/js/key.html\">http://unixpapa.com/js/key.html</a>.</p>\n\n<pre><code>$(\"input\").keypress(function(e) {\n    if (e.which !== 0) {\n        alert(\"Charcter was typed. It was: \" + String.fromCharCode(e.which));\n    }\n});\n</code></pre>\n\n<p><code>keyup</code> and <code>keydown</code> give you information about the physical key that was pressed. On standard US/UK keyboards in their standard layouts, it looks like there is a correlation between the <code>keyCode</code> property of these events and the character they represent. However, this is not reliable: different keyboard layouts will have different mappings.</p>\n",
                    "is_accepted": false,
                    "score": 50
                },
                {
                    "body": "<p>I wanted to do exactly this, and I thought of a solution involving <em>both</em> the <strong>keyup</strong> and the <strong>keypress</strong> events.</p>\n\n<p>(I haven't tested it in all browsers, but I used the information compiled at <a href=\"http://unixpapa.com/js/key.html\" rel=\"nofollow\">http://unixpapa.com/js/key.html</a>)</p>\n\n<p><em>Edit: rewrote it as a jQuery plugin.</em></p>\n\n<pre><code>(function($) {\n    $.fn.normalkeypress = function(onNormal, onSpecial) {\n        this.bind('keydown keypress keyup', (function() {\n            var keyDown = {}, // keep track of which buttons have been pressed\n                lastKeyDown;\n            return function(event) {\n                if (event.type == 'keydown') {\n                    keyDown[lastKeyDown = event.keyCode] = false;\n                    return;\n                }\n                if (event.type == 'keypress') {\n                    keyDown[lastKeyDown] = event; // this keydown also triggered a keypress\n                    return;\n                }\n\n                // 'keyup' event\n                var keyPress = keyDown[event.keyCode];\n                if ( keyPress &amp;&amp;\n                     ( ( ( keyPress.which &gt;= 32 // not a control character\n                           //|| keyPress.which == 8  || // \\b\n                           //|| keyPress.which == 9  || // \\t\n                           //|| keyPress.which == 10 || // \\n\n                           //|| keyPress.which == 13    // \\r\n                           ) &amp;&amp;\n                         !( keyPress.which &gt;= 63232 &amp;&amp; keyPress.which &lt;= 63247 ) &amp;&amp; // not special character in WebKit &lt; 525\n                         !( keyPress.which == 63273 )                            &amp;&amp; //\n                         !( keyPress.which &gt;= 63275 &amp;&amp; keyPress.which &lt;= 63277 ) &amp;&amp; //\n                         !( keyPress.which === event.keyCode &amp;&amp; // not End / Home / Insert / Delete (i.e. in Opera &lt; 10.50)\n                            ( keyPress.which == 35  || // End\n                              keyPress.which == 36  || // Home\n                              keyPress.which == 45  || // Insert\n                              keyPress.which == 46  || // Delete\n                              keyPress.which == 144    // Num Lock\n                              )\n                            )\n                         ) ||\n                       keyPress.which === undefined // normal character in IE &lt; 9.0\n                       ) &amp;&amp;\n                     keyPress.charCode !== 0 // not special character in Konqueror 4.3\n                     ) {\n\n                    // Normal character\n                    if (onNormal) onNormal.call(this, keyPress, event);\n                } else {\n                    // Special character\n                    if (onSpecial) onSpecial.call(this, event);\n                }\n                delete keyDown[event.keyCode];\n            };\n        })());\n    };\n})(jQuery);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This helped for me:</p>\n\n<pre><code>$(\"#input\").keyup(function(event) {\n        //use keyup instead keypress because:\n        //- keypress will not work on backspace and delete\n        //- keypress is called before the character is added to the textfield (at least in google chrome) \n        var searchText = $.trim($(\"#input\").val());\n\n        var c= String.fromCharCode(event.keyCode);\n        var isWordCharacter = c.match(/\\w/);\n        var isBackspaceOrDelete = (event.keyCode == 8 || event.keyCode == 46);\n\n        // trigger only on word characters, backspace or delete and an entry size of at least 3 characters\n        if((isWordCharacter || isBackspaceOrDelete) &amp;&amp; searchText.length &gt; 2)\n        { ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>How to know if .keyup() is a character key (jQuery)</p>\n\n<pre><code>$(\"input\").keyup(function() {\n\nif (key is a character) { //such as a b A b c 5 3 2 $ # ^ ! ^ * # ...etc not enter key or shift or Esc or space ...etc\n/* Do stuff */\n}\n\n});\n</code></pre>\n",
            "last_activity_date": 1399474252,
            "question_id": 3977642,
            "score": 27,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "keyboard",
                "keycode"
            ],
            "title": "How to know if .keyup() is a character key (jQuery)"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><code>live()</code> is jQuery's shortcut to <a href=\"http://briancrescimanno.com/2008/05/19/an-introduction-to-javascript-event-delegation/\" rel=\"nofollow\">event delegation</a>. To answer your question, see <a href=\"http://www.quirksmode.org/blog/archives/2008/04/delegating%5Fthe.html\" rel=\"nofollow\">Delegating the focus and blur events</a>.</p>\n\n<p>It's pretty ingenious: for standards compliant browsers he uses <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-flow-capture\" rel=\"nofollow\">event capturing</a> to trap those events. For IE he uses IE's proprietary <code>focusin</code> (for <code>focus</code>) and <code>focusout</code> (for <code>blur</code>) events, which do bubble, allowing traditional event delegation.</p>\n\n<p>I'll leave the porting of it to jQuery as an exercise.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Working solution:</strong></p>\n\n<pre><code>(function(){\n\n    var special = jQuery.event.special,\n        uid1 = 'D' + (+new Date()),\n        uid2 = 'D' + (+new Date() + 1);\n\n    jQuery.event.special.focus = {\n        setup: function() {\n            var _self = this,\n                handler = function(e) {\n                    e = jQuery.event.fix(e);\n                    e.type = 'focus';\n                    if (_self === document) {\n                        jQuery.event.handle.call(_self, e);\n                    }\n                };\n\n            jQuery(this).data(uid1, handler);\n\n            if (_self === document) {\n                /* Must be live() */\n                if (_self.addEventListener) {\n                    _self.addEventListener('focus', handler, true);\n                } else {\n                    _self.attachEvent('onfocusin', handler);\n                }\n            } else {\n                return false;\n            }\n\n        },\n        teardown: function() {\n            var handler = jQuery(this).data(uid1);\n            if (this === document) {\n                if (this.removeEventListener) {\n                    this.removeEventListener('focus', handler, true);\n                } else {\n                    this.detachEvent('onfocusin', handler);\n                }\n            }\n        }\n    };\n\n    jQuery.event.special.blur = {\n        setup: function() {\n            var _self = this,\n                handler = function(e) {\n                    e = jQuery.event.fix(e);\n                    e.type = 'blur';\n                    if (_self === document) {\n                        jQuery.event.handle.call(_self, e);\n                    }\n                };\n\n            jQuery(this).data(uid2, handler);\n\n            if (_self === document) {\n                /* Must be live() */\n                if (_self.addEventListener) {\n                    _self.addEventListener('blur', handler, true);\n                } else {\n                    _self.attachEvent('onfocusout', handler);\n                }\n            } else {\n                return false;\n            }\n\n        },\n        teardown: function() {\n            var handler = jQuery(this).data(uid2);\n            if (this === document) {\n                if (this.removeEventListener) {\n                    this.removeEventListener('blur', handler, true);\n                } else {\n                    this.detachEvent('onfocusout', handler);\n                }\n            }\n        }\n    };\n\n})();\n</code></pre>\n\n<p>Tested in IE/FF/Chrome. Should work exactly as you intended.</p>\n\n<p>UPDATE: Teardowns now work.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>one more addition: this solution does not support more than one parameter.</p>\n\n<p>i tried:</p>\n\n<pre><code>$(el).live(\"focus blur\",  function(e) {\n  if (e.type == \"focus\") {\n</code></pre>\n\n<p>etc.</p>\n\n<p>and it only fired the blur event.</p>\n\n<p>nevertheless this solution has been helpful.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This functionality is now included in jQuery core (as of 1.4.1).</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>they have been added on jquery 1.4.1   ... now .live() function supports fucus and blur events =)  Greetings</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Looks like the problem is when checking the event.type it returns \"focusin\" &amp; \"focusout\"</p>\n\n<pre><code>$('input').live(\"focus blur\", function(event){\n    if (event.type == \"focusin\") {\n        console.log(event.type);\n    }else{\n        console.log(event.type);\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p><strong>Update:</strong> As of jQuery 1.4, <code>$.live()</code> now supports <em>focusin</em> and <em>focusout</em> events.</p>\n\n<hr>\n\n<p><a href=\"http://www.jquery.com\">jQuery</a> currently<sup>1</sup> doesn't support \"blur\" or \"focus\" as arguments for the <a href=\"http://docs.jquery.com/Events/live\">$.live()</a> method. What type of work-around could I implement to achieve the following:</p>\n\n<pre><code>$(\"textarea\")\n  .live(\"focus\", function() { foo = \"bar\"; })\n  .live(\"blur\",  function() { foo = \"fizz\"; });\n</code></pre>\n\n<p><sup><strong>1</strong>. 07/29/2009, version 1.3.2</sup></p>\n",
            "last_activity_date": 1386296710,
            "question_id": 1199293,
            "score": 26,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Simulating &quot;focus&quot; and &quot;blur&quot; in jQuery .live() method"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Use <code>fileReader.readAsDataURL( fileObject )</code>, this will encode it to base64, which you can safely  upload to your server.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>(Following is a late but complete answer)</p>\n\n<h2>FileReader methods support</h2>\n\n<hr>\n\n<p><code>FileReader.readAsBinaryString()</code> is <strong>deprecated. Don't use it!</strong> It's no longer in the <a href=\"http://www.w3.org/TR/FileAPI/#dfn-filereader\">W3C File API working draft</a>:</p>\n\n<pre><code>void abort();\nvoid readAsArrayBuffer(Blob blob);\nvoid readAsText(Blob blob, optional DOMString encoding);\nvoid readAsDataURL(Blob blob);\n</code></pre>\n\n<p>NB: Note that <code>File</code> is a kind of extended <code>Blob</code> structure.</p>\n\n<p>Mozilla still implements <code>readAsBinaryString()</code> and describe it in <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader\">MDN FileApi documentation</a>:</p>\n\n<pre><code>void abort();\nvoid readAsArrayBuffer(in Blob blob); Requires Gecko 7.0\nvoid readAsBinaryString(in Blob blob);\nvoid readAsDataURL(in Blob file);\nvoid readAsText(in Blob blob, [optional] in DOMString encoding);\n</code></pre>\n\n<p>The reason behind <code>readAsBinaryString()</code> deprecation is in y opinion the following: The standard for Javascript strings are <code>DOMString</code> which only accept UTF-8 characters, NOT random binary data. So don't use readAsBinaryString(), that's not safe and ECMAScript-compliant at all.</p>\n\n<p>We know that <strong>Javascript strings are not supposed to store binary data</strong> but Mozilla in some sort can. That's dangerous in my opinion. <code>Blob</code> and <code>typed arrays</code> (<code>ArrayBuffer</code> and the not-yet-implemented but not necessary <code>StringView</code>) were invented for one purpose: allow the use of pure binary data, without UTF-8 strings restrictions.</p>\n\n<h2>XMLHttpRequest upload support</h2>\n\n<hr>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest?redirectlocale=en-US&amp;redirectslug=DOM%2FXMLHttpRequest#send%28%29\"><code>XMLHttpRequest.send()</code></a> has the following invocations options:</p>\n\n<pre><code>void send();\nvoid send(ArrayBuffer data);\nvoid send(Blob data);\nvoid send(Document data);\nvoid send(DOMString? data);\nvoid send(FormData data);\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest?redirectlocale=en-US&amp;redirectslug=DOM%2FXMLHttpRequest#sendAsBinary%28%29\"><code>XMLHttpRequest.sendAsBinary()</code></a> has the following invocations options:</p>\n\n<pre><code>void sendAsBinary(   in DOMString body );\n</code></pre>\n\n<p>sendAsBinary() is NOT a standard and may not be supported in Chrome.</p>\n\n<h2>Solutions</h2>\n\n<hr>\n\n<p>So you have several options:</p>\n\n<ol>\n<li><code>send()</code> the <code>FileReader.result</code> of <code>FileReader.readAsArrayBuffer ( fileObject )</code>. It is more complicated to manipulate  (you'll have to make a separate send() for it) but it's the <strong>RECOMMENDED APPROACH</strong>.</li>\n<li><code>send()</code> the <code>FileReader.result</code> of <code>FileReader.readAsDataURL( fileObject )</code>. It generates useless overhead and compression latency, requires a decompression step on the server-side BUT it's easy to manipulate as a string in Javascript.</li>\n<li>Being non-standard and <code>sendAsBinary()</code> the <code>FileReader.result</code> of <code>FileReader.readAsBinaryString( fileObject  )</code></li>\n</ol>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest?redirectlocale=en-US&amp;redirectslug=DOM%2FXMLHttpRequest#send%28%29\">MDN</a> states that:</p>\n\n<blockquote>\n  <p>The best way to send binary content (like in files upload) is using\n  ArrayBuffers or Blobs in conjuncton with the send() method. However,\n  if you want to send a stringifiable raw data, use the sendAsBinary()\n  method instead, or the StringView (Non native) typed arrays superclass.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p>The best way in browsers that support it, is to send the file as a Blob, or using FormData if you want a multipart form. You do not need a FileReader for that. This is both simpler and more efficient than trying to read the data.</p>\n\n<p>If you specifically want to send it as <code>multipart/form-data</code>, you can use a FormData object:</p>\n\n<pre><code>var xmlHttpRequest = new XMLHttpRequest();\nxmlHttpRequest.open(\"POST\", '/pushfile', true);\nvar formData = new FormData();\n// This should automatically set the file name and type.\nformData.append(\"file\", file);\n// Sending FormData automatically sets the Content-Type header to multipart/form-data\nxmlHttpRequest.send(formData);\n</code></pre>\n\n<p>You can also send the data directly, instead of using <code>multipart/form-data</code>. See the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#send()\" rel=\"nofollow\">documentation</a>. Of course, this will need a server-side change as well.</p>\n\n<pre><code>// file is an instance of File, e.g. from a file input.\nvar xmlHttpRequest = new XMLHttpRequest();\nxmlHttpRequest.open(\"POST\", '/pushfile', true);\n\nxmlHttpRequest.setRequestHeader(\"Content-Type\", file.type);\n\n// Send the binary data.\n// Since a File is a Blob, we can send it directly.\nxmlHttpRequest.send(file);\n</code></pre>\n\n<p>For browser support, see: <a href=\"http://caniuse.com/#feat=xhr2\" rel=\"nofollow\">http://caniuse.com/#feat=xhr2</a> (most browsers, including IE 10+).</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Trying to use fileReader.readAsBinaryString to upload a PNG file to the server via AJAX, stripped down code (fileObject is the object containing info on my file);</p>\n\n<pre><code>var fileReader = new FileReader();\n\nfileReader.onload = function(e) {\n    var xmlHttpRequest = new XMLHttpRequest();\n    //Some AJAX-y stuff - callbacks, handlers etc.\n    xmlHttpRequest.open(\"POST\", '/pushfile', true);\n    var dashes = '--';\n    var boundary = 'aperturephotoupload';\n    var crlf = \"\\r\\n\";\n\n    //Post with the correct MIME type (If the OS can identify one)\n    if ( fileObject.type == '' ){\n        filetype = 'application/octet-stream';\n    } else {\n        filetype = fileObject.type;\n    }\n\n    //Build a HTTP request to post the file\n    var data = dashes + boundary + crlf + \"Content-Disposition: form-data;\" + \"name=\\\"file\\\";\" + \"filename=\\\"\" + unescape(encodeURIComponent(fileObject.name)) + \"\\\"\" + crlf + \"Content-Type: \" + filetype + crlf + crlf + e.target.result + crlf + dashes + boundary + dashes;\n\n    xmlHttpRequest.setRequestHeader(\"Content-Type\", \"multipart/form-data;boundary=\" + boundary);\n\n    //Send the binary data\n    xmlHttpRequest.send(data);\n}\n\nfileReader.readAsBinaryString(fileObject);\n</code></pre>\n\n<p>Examining the first few lines of a file before upload (using VI) gives me</p>\n\n<p><img src=\"http://i.stack.imgur.com/cSULu.png\" alt=\"enter image description here\"></p>\n\n<p>The same file after upload shows</p>\n\n<p><img src=\"http://i.stack.imgur.com/lPjoG.png\" alt=\"enter image description here\"></p>\n\n<p>So it looks like a formatting/encoding issue somewhere, I tried using a simple UTF8 encode function on the raw binary data</p>\n\n<pre><code>    function utf8encode(string) {\n        string = string.replace(/\\r\\n/g,\"\\n\");\n        var utftext = \"\";\n\n        for (var n = 0; n &lt; string.length; n++) {\n\n            var c = string.charCodeAt(n);\n\n            if (c &lt; 128) {\n                utftext += String.fromCharCode(c);\n            }\n            else if((c &gt; 127) &amp;&amp; (c &lt; 2048)) {\n                utftext += String.fromCharCode((c &gt;&gt; 6) | 192);\n                utftext += String.fromCharCode((c &amp; 63) | 128);\n            }\n            else {\n                utftext += String.fromCharCode((c &gt;&gt; 12) | 224);\n                utftext += String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128);\n                utftext += String.fromCharCode((c &amp; 63) | 128);\n            }\n\n        }\n\n        return utftext;\n    )\n</code></pre>\n\n<p>Then in the original code</p>\n\n<pre><code>//Build a HTTP request to post the file\nvar data = dashes + boundary + crlf + \"Content-Disposition: form-data;\" + \"name=\\\"file\\\";\" + \"filename=\\\"\" + unescape(encodeURIComponent(file.file.name)) + \"\\\"\" + crlf + \"Content-Type: \" + filetype + crlf + crlf + utf8encode(e.target.result) + crlf + dashes + boundary + dashes;\n</code></pre>\n\n<p>which gives me the output of</p>\n\n<p><img src=\"http://i.stack.imgur.com/J5pva.png\" alt=\"enter image description here\"></p>\n\n<p>Still not what the raw file was =(</p>\n\n<p>How do I encode/load/process the file to avoid the encoding issues, so the file being received in the HTTP request is the same as the file before it was uploaded.</p>\n\n<p>Some other possibly useful information, if instead of using fileReader.readAsBinaryString() I use fileObject.getAsBinary() to get the binary data, it works fine. But getAsBinary only works in Firefox. I've been testing this in Firefox and Chrome, both on Mac, getting the same result in both. The backend uploads are being handled by the <a href=\"http://www.grid.net.ru/nginx/upload.en.html\">NGINX Upload Module</a>, again running on Mac. The server and client are on the same machine. The same thing is happening with any file I try to upload, I just chose PNG because it was the most obvious example.</p>\n",
            "last_activity_date": 1416922508,
            "question_id": 7431365,
            "score": 23,
            "tags": [
                "javascript",
                "encoding",
                "upload",
                "filereader"
            ],
            "title": "fileReader.readAsBinaryString to upload files"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>From the <a href=\"https://docs.angularjs.org/api/ng/service/$http#post\" rel=\"nofollow\">$http</a> docs  this should work..  </p>\n\n<pre><code>  $http.post(url, data,{headers: {'Content-Type': 'application/x-www-form-urlencoded'}})\n    .success(function(response) {\n         // your code...\n     });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If it is a form try changing the header to:</p>\n\n<pre><code>headers[ \"Content-type\" ] = \"application/x-www-form-urlencoded; charset=utf-8\";\n</code></pre>\n\n<p>and if it is not a form and a simple json then try this header:</p>\n\n<pre><code>headers[ \"Content-type\" ] = \"application/json\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think you need to do is to transform your data from object not to JSON string, but to url params.</p>\n\n<p><a href=\"http://www.bennadel.com/blog/2615-posting-form-data-with-http-in-angularjs.htm\">From Ben Nadel's blog</a>.</p>\n\n<blockquote>\n  <p>By default, the $http service will transform the outgoing request by\n  serializing the data as JSON and then posting it with the content-\n  type, \"application/json\". When we want to post the value as a FORM\n  post, we need to change the serialization algorithm and post the data\n  with the content-type, \"application/x-www-form-urlencoded\".</p>\n</blockquote>\n\n<p>Example <a href=\"http://stackoverflow.com/a/14868725/454252\">from here</a>.</p>\n\n<pre><code>$http({\n    method: 'POST',\n    url: url,\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n    transformRequest: function(obj) {\n        var str = [];\n        for(var p in obj)\n        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n        return str.join(\"&amp;\");\n    },\n    data: {username: $scope.userName, password: $scope.password}\n}).success(function () {});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>you need to post plain javascript object, nothing else</p>\n\n<pre><code>           var request = $http({\n                method: \"post\",\n                url: \"process.cfm\",\n                transformRequest: transformRequestAsFormPost,\n                data: { id: 4, name: \"Kim\" }\n            });\n\n            request.success(\n                function( data ) {\n                    $scope.localData = data;\n                }\n            );\n</code></pre>\n\n<p>if you have php as back-end then you will need to do some more modification.. checkout <a href=\"http://victorblog.com/2012/12/20/make-angularjs-http-service-behave-like-jquery-ajax/\" rel=\"nofollow\">this link</a> for fixing php server side</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This worked for me. I use angular for front-end and laravel php for back-end. In my project, angular web sends json data to laravel back-end.</p>\n\n<p>This is my angular controller.</p>\n\n<pre><code>var angularJsApp= angular.module('angularJsApp',[]);\nangularJsApp.controller('MainCtrl', function ($scope ,$http) {\n\n    $scope.userName =\"Victoria\";\n    $scope.password =\"password\"\n\n\n       $http({\n            method :'POST',\n            url:'http://api.mywebsite.com.localhost/httpTest?callback=JSON_CALLBACK',\n            data: { username :  $scope.userName , password: $scope.password},\n            headers: {'Content-Type': 'application/json'}\n        }).success(function (data, status, headers, config) {\n            console.log('status',status);\n            console.log('data',status);\n            console.log('headers',status);\n        });\n\n});\n</code></pre>\n\n<p>This is my php back-end laravel controller.</p>\n\n<pre><code>public function httpTest(){\n        if (Input::has('username')) {\n            $user =Input::all();\n            return  Response::json($user)-&gt;setCallback(Input::get('callback'));\n        }\n    }\n</code></pre>\n\n<p>This is my laravel routing</p>\n\n<pre><code>Route::post('httpTest','HttpTestController@httpTest');\n</code></pre>\n\n<p>The result in browser is</p>\n\n<blockquote>\n  <p>status 200<br>\n  data JSON_CALLBACK({\"username\":\"Victoria\",\"password\":\"password\",\"callback\":\"JSON_CALLBACK\"});\n  httpTesting.js:18 headers function (c){a||(a=sc(b));return\n  c?a[K(c)]||null:a}</p>\n</blockquote>\n\n<p>There is chrome extension called postman. You can use to test your back-end url whether it is working or not.\n<a href=\"https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm?hl=en\" rel=\"nofollow\">https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm?hl=en</a></p>\n\n<p>hopefully, my answer will help you.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am new to <code>angularJS</code>, and for a start, I thought to develop a new application using only <code>AngularJS</code>.</p>\n\n<p>I am trying to make an <code>AJAX</code> call to the server side, using <code>$http</code> from my Angular App.</p>\n\n<p>For sending the parameters, I tried following:</p>\n\n<pre><code>$http({\n    method: \"post\",\n    url: URL,\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n    data: $.param({username: $scope.userName, password: $scope.password})\n}).success(function(result){\n    console.log(result);\n});\n</code></pre>\n\n<p>This is working but, it is using <code>jQuery</code> as well near, <strong><code>$.param</code></strong>. For removing dependency on <code>jQuery</code>, I tried,</p>\n\n<pre><code>data: {username: $scope.userName, password: $scope.password}\n</code></pre>\n\n<p>But this seemed to fail. Then I tried <code>params</code>:</p>\n\n<pre><code>params: {username: $scope.userName, password: $scope.password}\n</code></pre>\n\n<p>But this also seemed to fail. Then I tried <code>JSON.stringify</code>:</p>\n\n<pre><code>data: JSON.stringify({username: $scope.userName, password: $scope.password})\n</code></pre>\n\n<p>I found these possible answers to my quest, but was unsuccessful. Am I doing something wrong.? I am sure, AngularJS would provide this functionality. But how.?</p>\n",
            "last_activity_date": 1425108882,
            "question_id": 24710503,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "angularjs"
            ],
            "title": "How do I POST urlencoded form data with $http in AngularJS?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I would assume you'd have to grab the response like this. I don't think you need a callback.</p>\n\n<pre><code>function confirm() {\n        var response = jConfirm('are you sure?', 'Confirmation Dialog');\n        if (response) {\n            alert(result);\n        }\n        else {\n            //wait for response\n            alert('hi');\n        }\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since the callback is asynchronous (at least, in the sense that it's waiting on the user to do something), it might be easier to handle what you need to inside the callback:</p>\n\n<pre><code>function confirm() {\n    jConfirm('are you sure?', 'Confirmation Dialog', function(r) {\n        if (r) doSomething();\n    });\n}\n</code></pre>\n\n<hr>\n\n<p>@klogan [comments]</p>\n\n<p>I assume you got these from <a href=\"http://abeautifulsite.net/notebook/87\" rel=\"nofollow\">here</a>?</p>\n\n<p>The page gives you your answer: (look under <strong>Usage</strong>)</p>\n\n<blockquote>\n  <p><em>These methods do not return the same values as confirm() and prompt(). You must access the resulting values using a callback function. (See the demo for more details.)</em></p>\n</blockquote>\n\n<hr>\n\n<p>@klogan</p>\n\n<p>The point I'm trying to make is that there isn't really an easy way to accomplish what you want. You're trying to correlate <strong>procedural</strong> and <strong>event-driven</strong> programming -- something JavaScript doesn't help you do.</p>\n\n<p><strike><i>\nThe simplest (though, <strong><em>risky</em></strong>) solution is to use a pseudo-infinite-loop. But, if <code>callback</code> never gets called, you now have an actual infinite loop. And, depending on the JavaScript engine, you might kill the browser waiting.</p>\n\n<p>Point: <strong><em>Your best bet is to avoid</em></strong> <strike>this</strike> <strong><em>trying to force event-driven into procedural.</em></strong></p>\n\n<pre><code>function confirm() {\n    var result = false;\n    var response = false;\n\n    jConfirm('are you sure?', 'Confirmation Dialog',\n      function(r) {\n        result = r;\n        response = true;\n    });\n\n    while(!response) continue; // wait\n    return result;\n}\n</code></pre>\n\n<p></i></strike></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Technically, <strong>yes</strong>, but I wouldn't do that on a website.</p>\n\n<p>Take a look at <a href=\"http://neilmix.com/narrativejs/doc/index.html\" rel=\"nofollow\">Narrative JavaScript</a>, which is based off <a href=\"http://en.wikipedia.org/wiki/Narcissus_%28JavaScript_engine%29\" rel=\"nofollow\">Narcissus</a>.</p>\n\n<blockquote>\n  <p>Narrative JavaScript is a small extension to the JavaScript language that enables blocking capabilities for asynchronous event callbacks. This makes asynchronous code refreshingly readable and comprehensible. </p>\n</blockquote>\n\n<p><a href=\"http://seleniumhq.org/\" rel=\"nofollow\">Selenium</a> uses this technology.</p>\n\n<hr>\n\n<h2>Update</h2>\n\n<p>Check out <a href=\"http://web.archive.org/web/20090408072615/http://www.xucia.com/strands-doc/index.html\" rel=\"nofollow\">JavaScript Strands</a>:</p>\n\n<blockquote>\n  <p>JavaScript Strands adds coroutine and\n  cooperative threading support to the\n  JavaScript language to enable blocking\n  capabilities for asynchronous event\n  callbacks. This makes code that\n  utilizes asynchronous operation much\n  more linear, readable, and manageable.\n  Strands is built upon Narrative\n  JavaScript written by Neil Mix, and\n  much of Narrative JavaScript has\n  remained in Strands including much of\n  this documentation.</p>\n  \n  <p>In JavaScript your code can't simply\n  wait until an event has fired -- the\n  event must always be handled by a\n  separate, asynchronous event handler.\n  Sometimes this is fine, but it often\n  forces what ought to be a simple\n  sequence of statements into gnarly\n  contortions. It also breaks the\n  ability to encapsulate functionality\n  because calling functions must know to\n  provide a callback handler. Strands\n  provides the ability to suspend and\n  resume threads of execution. Execution\n  can suspend resume when the event is\n  finished. This allows you to write\n  hard-to-read asynchronous event\n  handling in simple, linear, readable\n  code that encapsulates implementation.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>jConfirm('are you sure?', 'Confirmation Dialog',\n    function(r) {\n        result = r;\n        response = true;\n        return r;\n    }\n);\nif (response == true) {\n</code></pre>\n\n<p>This betrays a misunderstanding of the sequence of events that occurs using asynchronous code. Just because you've written it inline doesn't mean it's going to execute strictly top-to-bottom.</p>\n\n<ol>\n<li>jConfirm is called, receiving a function as one of its parameters, which it remembers.</li>\n<li>jConfirm displays its UI on the page and returns immediately.</li>\n<li>The 'if (response==true)' line executes. Really this should just read 'if (response)', the boolean comparison is superfluous. But in any case response is of course false. Your function gives up and exits, giving control back to the browser.</li>\n<li>The user clicks jConfirm's UI.</li>\n<li>jConfirm only now jumps into action and calls back the function you gave it and it remembered earlier.</li>\n<li>Your nested function sets response true, far too late for the 'if (response==true)' condition to do anything with it.</li>\n</ol>\n\n<p>You have written \"//wait for response\" as an alternative, but there is no JavaScript code you can write that will actually do that. Your function must return to give control back to the browser, before the browser can fire the click events on the jConfirm UI that make processing proceed.</p>\n\n<p>Ways to make asynchronous code work in a synchronous context (and vice versa) exist - in particular threads and coroutines (and their limited relation generators). But JavaScript has none of these features, so you must write your code to fit the synchronous-or-asynchronous model your library is using.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>You've just hit a big limitation in JavaScript. Once your code enters the asynchronous world, there is no way to get back to a classic procedural execution flow.</p>\n\n<p>In your example, the solution would be to make a loop waiting for the response to be filled. The problem is that JavaScript does not provide any instruction that will allow you to loop indefinitely without taking 100% of the processing power. So you will end up blocking the browser, sometimes to the point where your user won't be able to answer the actual question.</p>\n\n<p>The only solution here is to stick to the asynchronous model and keep it. My advice is that you should add a callback to any function that must do some asynchronous work, so that the caller can execute something at the end of your function.</p>\n\n<pre><code>function confirm(fnCallback) \n{\n    jConfirm('are you sure?', 'Confirmation Dialog', function(r) \n    {\n    \t// Do something with r \n\n        fnCallback &amp;&amp; fnCallback(r); // call the callback if provided\n    });\n}\n\n// in the caller\n\nalert('begin');\n\nconfirm(function(r)\n{\n    alert(r);\n\n    alert('end');\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I think I have come up with a possible solution to this problem. I was reading this article:\n<a href=\"http://treasure4developer.wordpress.com/2008/06/23/calling-postback-event-from-javascript/\" rel=\"nofollow\">http://treasure4developer.wordpress.com/2008/06/23/calling-postback-event-from-javascript/</a></p>\n\n<p>Basically the idea is that you force the postback from javascript, at first I found that the postback would work but wouldn't call my button event, but after reading the article I found that I could detect if it was javascript postback and just call a method to do the processing</p>\n\n<p>Regards DotnetShadow</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>How the dudes said, there is no way! but... how we use to say in my country (Brazil), le gambi:</p>\n\n<p>we can do something like it:</p>\n\n<pre><code>&lt;h:commandLink styleClass=\"linkValor xExcluir\" value=\"x\"  \n                     onclick=\"if(confirmar('Confirmar excluir.','Deseja realmente excluir este registro?', this)) return true; else return false;\"\n                     action=\"#{mBeanPesquisarLinhas.excluir}\"/&gt;\n</code></pre>\n\n<p>and the javascript:</p>\n\n<pre><code>function confirmar(titulo, msg, elemento) { \n\n    if ($(elemento).attr('sim')) {      \n        $(elemento).removeAttr('sim');      \n        return true;\n    } else if ($(elemento).attr('nao')) {       \n        $(elemento).removeAttr('nao');      \n        return false;\n    } else {\n        $(\"#dialog-confirm\").html('&lt;p&gt;' + msg + '&lt;/p&gt;').dialog({\n            resizable : false,\n            height : 200,\n            modal : true,\n            title : titulo,\n            buttons : {\n                \"Sim\" : function() {\n                    $(this).dialog(\"close\");\n                    $(elemento).attr('sim', 'sim');\n                    $(elemento).click();\n                },\n                \"N\u00e3o\" : function() {\n                    $(this).dialog(\"close\");\n                    $(elemento).attr('nao', 'nao');\n                    $(elemento).click();\n                }\n            }\n        });\n    }\n\n    return false;\n}\n</code></pre>\n\n<p>it's the same problem but using jquery-ui.</p>\n\n<p>Bye and I hope this can help somebody.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This thing works. Needs jQuery.</p>\n\n<pre><code>function myconfirm(kyssa, elm, e){ // neG\n    if(jQuery('#confirmquestion').data('result')){\n        var V = jQuery('#confirmquestion').data('result');\n        jQuery('#confirmquestion').remove(); \n        return V == 'Y' ? true : false;         \n    }else if(!jQuery('#confirmquestion').length){\n        jQuery('body').append('&lt;div id=\"confirmquestion\"&gt;'+\n        '&lt;h4&gt;Kinnitus&lt;/h4&gt;'+\n        '&lt;div id=\"kyssa\"&gt;'+kyssa+'&lt;/div&gt;'+\n        '&lt;center&gt;'+\n        '&lt;button onclick=\"jQuery(\\'#confirmquestion\\').data(\\'result\\', \\'Y\\');\"&gt;Jah&lt;/button&gt;&amp;nbsp;'+\n        '&lt;button onclick=\"jQuery(\\'#confirmquestion\\').data(\\'result\\', \\'N\\');\"&gt;Ei&lt;/button&gt;&lt;/div&gt;'+\n        '&lt;/center&gt;');\n        jQuery('#confirmquestion button').click(function(){\n            jQuery(elm).trigger(e.type);\n        })\n    }       \n    return false;\n}\n\nonChange=\"if(myconfirm(\\'Saada kiri: \\'+jQuery(this).find(\\'option:selected\\').html()+\\' ?\\', this, event)) { ... }\"\n</code></pre>\n\n<p>CSS</p>\n\n<pre><code>#confirmquestion{\n    border:1px solid #999;\n    background:white;\n    padding-bottom: 30px;\n    position:fixed;\n    width:300px;\n    font-size:12px;\n    top:45%;\n    left:50%;\n    margin-left:-150px;\n}\n\n#confirmquestion h4 {\n    background:blue;\n    color:white;\n    margin:0;\n    padding: 2px 5px;\n    border-bottom:#777; \n    text-align:center;\n}\n\n#confirmquestion #kyssa {\n    padding: 30px 25px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Think about callbacks as sending messages and it will result in better structure in your code. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to use the jQuery alerts dialog library from <a href=\"http://abeautifulsite.net/notebook/87\">http://abeautifulsite.net/notebook/87</a> instead of the default alerts (which look pretty awful in my opinion). This seems to be a great library, but there is not an example of how to use the jConfirm library.</p>\n\n<p>I need to do something like this:</p>\n\n<pre><code>function confirm() {\n        var result = false;\n        var response = false;\n        jConfirm('are you sure?', 'Confirmation Dialog',\n          function(r) {\n            result = r;\n            response = true;\n            return r;\n        });\n        if (response == true) {\n            alert(result);\n            return result;\n        }\n        else {\n            //wait for response\n            alert('hi');\n        }\n    }\n</code></pre>\n\n<p>and my call from my .net button:\n</p>\n\n<p>I've posted a comment on the plugin's website (just this morning) and did Google searches for javascript and waiting for a callback to complete with no results.</p>\n\n<p>Any ideas on how to use the callback correctly to get the result, before the rest of the javascript executes?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1363122510,
            "question_id": 436608,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "dialog",
                "callback",
                "confirm"
            ],
            "title": "Can you wait for javascript callback?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Give a look to the following article published just a couple of days ago by Dustin Diaz, Twitter Engineer on @anywhere:</p>\n\n<ul>\n<li><a href=\"http://www.dustindiaz.com/async-method-queues/\">Asynchronous method queue chaining in JavaScript</a></li>\n</ul>\n\n<p>He talks about a really nice technique that allows you to implement a fluent interface on asynchronous methods, basically methods chained together independent of a callback, using a really simple Queue implementation. </p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>The AJAX synchronous issue, I believe, has already been abstracted away by libraries such as jQuery (i.e. its <a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\">ajax call</a> which allows you to specify async or synch operation through the <em>async</em> property). The synchronous mode, if chosen, hides the asynchronous nature of the implementation.</p>\n\n<p>jQuery is also an example of a fluent interface and chaining. There are other libraries that do the same.  Saves you reinventing the wheel - gets you rolling right away with what you are looking for. </p>\n\n<p>If this works as an answer then you get some good automatic browser compatibility across these features. That stuff takes a long while to build out from scratch. </p>\n\n<p>I see Twitter's new Anywhere API notes jQuery - maybe everything is already there if you do some digging. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm developing <a href=\"http://github.com/coolaj86/futures\" rel=\"nofollow\">FutureJS</a> which was originally based on <a href=\"http://github.com/coolaj86/futures/blob/master/crockford_promise.js\" rel=\"nofollow\">Crockford's promises</a> (<a href=\"http://www.slideshare.net/douglascrockford/crockford-on-javascript-act-iii-function-the-ultimate\" rel=\"nofollow\">original slides</a>). The current goal is to be the Async Toolbox of JavaScript and eliminate chaining clutter.</p>\n\n<h2>Futures.chainify(providers, consumers, context, params)</h2>\n\n<p>Asynchronous method queueing allows you to chain actions on data which may or may not be readily available.\nThis is how Twitter's @Anywhere api works.</p>\n\n<p>You might want a model which remotely fetches data in this fashion:</p>\n\n<pre><code>Contacts.all(params).randomize().limit(10).display();\nContacts.one(id, params).display();\n</code></pre>\n\n<p>Which could be implemented like so:</p>\n\n<pre><code>var Contacts = Futures.chainify({\n  // Providers must be promisables\n  all: function(params) {\n    var p = Futures.promise();\n    $.ajaxSetup({ error: p.smash });\n    $.getJSON('http://graph.facebook.com/me/friends', params, p.fulfill);\n    $.ajaxSetup({ error: undefined });\n    return p.passable();\n  },\n  one: function(id, params) {\n    var p = Futures.promise();\n    $.ajaxSetup({ error: p.smash });\n    $.getJSON('http://graph.facebook.com/' + id, params, p.fulfill);\n    $.ajaxSetup({ error: undefined });\n    return p.passable();\n  }\n},{\n  // Consumers will be called in synchronous order\n  // with the `lastResult` of the previous provider or consumer.\n  // They should return either lastResult or a promise\n  randomize: function(data, params) {\n    data.sort(function(){ return Math.round(Math.random())-0.5); // Underscore.js\n    return Futures.promise(data); // Promise rename to `immediate`\n  },\n  limit: function(data, n, params) {\n    data = data.first(n);\n    return Futures.promise(data);\n  },\n  display: function(data, params) {\n    $('#friend-area').render(directive, data); // jQuery+PURE\n    // always return the data, even if you don't modify it!\n    // otherwise your results could be unexpected\n    return data;\n  }\n});\n</code></pre>\n\n<p>Things to know:</p>\n\n<ul>\n<li><code>providers</code> - promisables which return data</li>\n<li><code>consumers</code> - functions which use and or change data\n<ul>\n<li>the first argument must be <code>data</code></li>\n<li>when returning a promisable the next method in the chain will not execute until the promise is fulfilled</li>\n<li>when returning a \"literal object\" the next method in the chain will use that object</li>\n<li>when returning <code>undefined</code> (or not returning anything) the next method in the chain will use the defined object</li>\n</ul></li>\n<li><code>context</code> - <code>apply()</code>d to each provider and consumer, thus becoming the <code>this</code> object</li>\n<li><code>params</code> - reserved for future use</li>\n</ul>\n\n<p>Alternatively you could use synchronous callback chaining - what you may have seen elsewhere as chain().next() or then():</p>\n\n<pre><code>Futures.sequence(function(callback) {\n\n    $.getJSON(\"http://example.com\", {}, callback);\n\n}).then(function(callback, result, i, arr) {\n\n    var data = transform_result(result);\n    $.getJSON(\"http://example.com\", data, callback);\n\n}).then(...)\n</code></pre>\n\n<p>I named it <code>sequence</code> rather than <code>chain</code> since _.js already has a method named <code>chain</code> and I'd like to use _.methodName for my library as well.</p>\n\n<p><a href=\"http://coolaj86.github.com/futures/\" rel=\"nofollow\">Take a peek</a> and <a href=\"http://groups.google.com/group/futures-javascript\" rel=\"nofollow\">let me know what you think</a>.</p>\n\n<p>FuturesJS will work alongside jQuery, Dojo, etc without issue. There are no dependencies. It will work with Node.js (and Rhino when using env.js).</p>\n\n<p>=8^D</p>\n\n<p>P.S. As to the ORM / MVC fix - you can check out <a href=\"http://JavaScriptMVC.com\" rel=\"nofollow\">JavaScriptMVC</a> and <a href=\"http://SproutCore.com\" rel=\"nofollow\">SproutCore</a>. I'm also working on my own solution called TriforceJS, but I don't have anything ready for release yet.</p>\n\n<p>P.P.S Example of <code>promisables</code></p>\n\n<pre><code>var doStuff = function (httpResult) {\n    // do stuff\n  },\n  doMoreStuff = function (httpResult) {\n    // do more stuff\n  };\n\nfunction fetchRemoteData(params) {\n  var promise = Futures.promise();\n  $.getJSON(\"www.example.com\", params, promise.fulfill, 'jsonp');\n  return promise;\n}\n\np = fetchRemoteData(params);\np.when(doStuff);\np.when(doMoreStuff);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>How would I design an API to hide the asynchronous nature of AJAX and HTTP requests, or basically delay it to provide a fluent interface. To show an example from Twitter's new <a href=\"http://platform.twitter.com/js-api.html\">Anywhere</a> API:</p>\n\n<pre><code>// get @ded's first 20 statuses, filter only the tweets that\n// mention photography, and render each into an HTML element\nT.User.find('ded').timeline().first(20).filter(filterer).each(function(status) {\n    $('div#tweets').append('&lt;p&gt;' + status.text + '&lt;/p&gt;');\n});\n\nfunction filterer(status) {\n    return status.text.match(/photography/);\n}\n</code></pre>\n\n<p>vs this (asynchronous nature of each call is clearly visible)</p>\n\n<pre><code>T.User.find('ded', function(user) {\n    user.timeline(function(statuses) {\n        statuses.first(20).filter(filterer).each(function(status) {\n            $('div#tweets').append('&lt;p&gt;' + status.text + '&lt;/p&gt;');\n        });\n    });\n});\n\nfunction filterer(status) {\n    return status.text.match(/photography/);\n}\n</code></pre>\n\n<p>It finds the user, gets their tweet timeline, filters only the first 20 tweets, applies a custom filter, and ultimately uses the callback function to process each tweet. </p>\n\n<p>I am guessing that a well designed API like this should work like a query builder (think ORMs) where each function call builds the query (HTTP URL in this case), until it hits a looping function such as each/map/etc., the HTTP call is made and the passed in function becomes the callback.</p>\n\n<p>An easy development route would be to make each AJAX call synchronous, but that's probably not the best solution. I am interested in figuring out a way to make it asynchronous, and still hide the asynchronous nature of AJAX.</p>\n",
            "last_activity_date": 1283921496,
            "question_id": 2796375,
            "score": 18,
            "tags": [
                "javascript",
                "ajax",
                "asynchronous",
                "fluent-interface"
            ],
            "title": "Designing a fluent Javascript interface to abstract away the asynchronous nature of AJAX"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You'll have better luck if your <code>list</code> is an array of objects (as opposed to an array of primitives). This works fine even though a new scope is created with <code>ng-repeat</code>:</p>\n\n<pre><code>&lt;div ng-repeat=\"item in list\"&gt;\n    &lt;label&gt;Input {{$index+1}}:&lt;/label&gt;\n    &lt;input ng-model=\"item.value\" type=\"text\"/&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>with a controller of:</p>\n\n<pre><code>function TestController($scope) {\n    $scope.list = [ { value: 'value 1' }, { value: 'value 2' }, { value: 'value 3' } ];\n}\u200b\n</code></pre>\n\n<p>See <a href=\"http://jsfiddle.net/gHFhk/\">this fiddle</a> as an example.</p>\n\n<p>On the other hand if you are trying to bind to an array of strings the new scope will cause a problem as the values you are modifying will not be tied to the original array string primitives (as in <a href=\"http://jsfiddle.net/bxD2P/\">this fiddle</a> example).</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>The reason that databinding to a primitive \"item\" doesn't work is because of the way ng-repeat creates the child scopes for each item.  For each item, ng-repeat has the new child scope prototypically inherit from the parent scope (see dashed lines in picture below), <strong>and then</strong> it assigns the item's value to a new property on the child scope (red items in picture below).  The name of the new property is the loop variable's name.  From the <a href=\"https://github.com/angular/angular.js/blob/master/src/ng/directive/ngRepeat.js\">ng-repeat source code</a>:</p>\n\n<pre><code>childScope = scope.$new();\n...\nchildScope[valueIdent] = value;\n</code></pre>\n\n<p>If item is a primitive, the new child scope property is essentially assigned a copy of the primitive's value.  This child scope property is not visible to the parent scope, and changes you make to the input field are stored in this child scope property. E.g., suppose we have in the parent scope</p>\n\n<pre><code>$scope.list = [ 'value 1', 'value 2', 'value 3' ];\n</code></pre>\n\n<p>And in the HTML:</p>\n\n<pre><code>&lt;div ng-repeat=\"item in list\"&gt;\n</code></pre>\n\n<p>Then, the first child scope would have the following <code>item</code> property, with a primitive value (<code>value 1</code>):</p>\n\n<pre><code>item: \"value 1\"\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/kUPSP.png\" alt=\"ng-repeat with primitives\"></p>\n\n<p>Because of the ng-model databinding, changes you make to the form's input field are stored in that child scope property.</p>\n\n<p>You can verify this by logging the child scope to the console.  Add to your HTML, inside the ng-repeat:</p>\n\n<pre><code>&lt;a ng-click=\"showScope($event)\"&gt;show scope&lt;/a&gt;\n</code></pre>\n\n<p>Add to your controller:</p>\n\n<pre><code>$scope.showScope = function(e) {\n    console.log(angular.element(e.srcElement).scope());\n}\n</code></pre>\n\n<p><hr> \nWith @Gloopy's approach, each child scope still gets a new \"item\" property, but because list is now an array of objects, <code>childScope[valueIdent] = value;</code> results in the item property's value being set to a reference to one of the array objects (not a copy).</p>\n\n<p><img src=\"http://i.stack.imgur.com/qicdl.png\" alt=\"ng-repeat with objects\"></p>\n\n<p>Using the showScope() technique, you'll see that the child scope <code>item</code> property's value references one of the array objects -- it is no longer a primitive value.</p>\n\n<p>See also <a href=\"https://github.com/angular/angular.js/issues/1267\">don't bind to primitives in ng-repeat child scopes</a> and<br>\n<a href=\"http://stackoverflow.com/questions/14049480/what-are-the-nuances-of-scope-prototypal-prototypical-inheritance-in-angularjs\">What are the nuances of scope prototypal / prototypical inheritance in AngularJS?</a> (which contains pictures of what the scopes look like when using ng-repeat).</p>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>Here's a way to do it.  I used textareas and a different structure to my repeaters, but the main concept is:</p>\n\n<ul>\n<li>display a simple value based on index. (not bound)</li>\n<li>on blur update the model</li>\n<li>on model update re-render</li>\n</ul>\n\n<p>It is essentially, faking the binding.</p>\n\n<p>Working fiddle - <a href=\"http://jsfiddle.net/VvnWY/4/\" rel=\"nofollow\">http://jsfiddle.net/VvnWY/4/</a></p>\n\n<p>The html:</p>\n\n<pre><code>  &lt;script type=\"text/ng-template\" id=\"textareas.html\"&gt;\n    &lt;textarea ng-if=\"strings\" ng-repeat=\"str in strings\" ng-blur=\"blur( $event, $index )\"&gt;{{strings[$index]}}&lt;/textarea&gt;\n  &lt;/script&gt;\n\n&lt;div ng-controller=\"MyCtrl\"&gt;\n    Here's a few strings: &lt;br /&gt;\n    &lt;div ng-repeat=\"str in strings\"&gt;{{strings[$index]}}&lt;/div&gt;\n\n    Here's the strings as editable (twice so that you can see the updates from a model change): &lt;br /&gt;\n    &lt;form-textareas strings=\"strings\"&gt;&lt;/form-textareas&gt;\n    &lt;form-textareas strings=\"strings\"&gt;&lt;/form-textareas&gt;\n\n&lt;/div&gt;\n</code></pre>\n\n<p>The JS:</p>\n\n<pre><code>var myApp = angular.module('myApp',[]);\nangular.module('myApp', [])\n  .controller('MyCtrl', ['$scope', function($scope) {\n    $scope.strings = [ \"foo\", \"bar\", \"cow\" ];\n   }])\n  .directive('formTextareas', function() {\n    return {\n        restrict: \"E\",\n        scope: {\n            strings: '='\n        },\n        templateUrl: \"textareas.html\",\n        link: function( $scope ){\n            $scope.blur = function( $event, $index ){\n                $scope.strings[ $index ] = $event.currentTarget.value;\n            };\n        }\n    };\n  })\n;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Consider using the <code>ngList</code> directive <a href=\"https://docs.angularjs.org/api/ng/directive/ngList\" rel=\"nofollow\">https://docs.angularjs.org/api/ng/directive/ngList</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found an interesting way of doing this, and it's allowing me to work on an array of primitives.</p>\n\n<p>I'm using AngularJS 1.2.1, which is the only version I can make this work in.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div ng-repeat=\"item in list\"&gt;\n    &lt;label&gt;Input {{$index+1}}:&lt;/label&gt;\n    &lt;input ng-model=\"item\" type=\"text\" ng-blur=\"editItem($index, item)\"/&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>$scope.editItem = function(idx, eItem) {\n    $scope.list[idx] = eItem;\n};\n</code></pre>\n\n<p>Link:\n<a href=\"http://jsfiddle.net/bxD2P/10/\" rel=\"nofollow\">http://jsfiddle.net/bxD2P/10/</a> (thank you to Gloopy for the starter Fiddle)</p>\n\n<p>I'm sure there are easy ways of poking holes in how this works, and I would love to hear them. It would allow me to shore up my code.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm learning angularjs and I want to be able let the user enter many inputs. When these inputs are entered the <code>list</code> array elements should change accordingly. I wanted to try using ngRepeat directive but I read that since it creates a new scope I cannot databind:</p>\n\n<pre><code>&lt;div ng-repeat=\"item in list\"&gt;\n    &lt;label&gt;Input {{$index+1}}:&lt;/label&gt;\n    &lt;input ng-model=\"item\" type=\"text\"/&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I was wondering if I should be using a custom directive to do this or approach it differently. </p>\n",
            "last_activity_date": 1412877024,
            "question_id": 12977894,
            "score": 16,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "What is the angularjs way to databind many inputs?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<pre><code>function js_to_as( str ){\n     if (me &amp;&amp; me.onChange)\n         me.onChange(str);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try something like this:</p>\n\n<pre><code>if (typeof me.onChange != \"undefined\") { \n    // safe to use the function\n}\n</code></pre>\n\n<p>or better yet (as per UpTheCreek upvoted comment)</p>\n\n<pre><code>if (typeof me.onChange === \"function\") { \n    // safe to use the function\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 255
                },
                {
                    "body": "<p>With no conditions</p>\n\n<pre><code>me.onChange=function(){};\n\nfunction getID( swfID ){\n     if(navigator.appName.indexOf(\"Microsoft\") != -1){\n          me = window[swfID];\n     }else{\n          me = document[swfID];\n     }\n}\n\nfunction js_to_as( str ){\n     me.onChange(str);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Edit: I do not pretend to know the reason(s) why this answer is the accepted one. Please instead use the solution proposed in Andrew Hare's answer: <a href=\"http://stackoverflow.com/a/1042154/42346\">http://stackoverflow.com/a/1042154/42346</a></p>\n\n<hr>\n\n<p>Here is one way to handle this kind of situation:</p>\n\n<pre><code>function js_to_as( str ){\n    try {\n        me.onChange(str);\n    }\n    catch(err) {\n        // Handle error(s) here\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>I would suspect that <code>me</code> is not getting correctly assigned onload.</p>\n\n<p>Moving the get_ID call into the onclick event should take care of it.</p>\n\n<p>Obviously you can further trap as previously mentioned:</p>\n\n<pre><code>function js_to_as( str) {\n  var me = get_ID('jsExample');\n  if (me &amp;&amp; me.onChange) {\n    me.onChange(str);\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'll go 1 step further to make sure the property is indeed a function</p>\n\n<pre><code>function js_to_as( str ){\n     if (me &amp;&amp; me.onChange &amp;&amp; typeof me.onChange === 'function') {\n         me.onChange(str);\n     }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you're using eval to convert a string to function, and you want to check if this eval'd method exists, you'll want to use <strong>typeof</strong> and your function string inside an <strong>eval</strong>:</p>\n\n<pre><code>var functionString = \"nonexsitantFunction\"\neval(\"typeof \" + functionString) // returns \"undefined\" or \"function\"\n</code></pre>\n\n<p>Don't reverse this and try a <strong>typeof</strong> on <strong>eval</strong>. If you do a ReferenceError will be thrown:</p>\n\n<pre><code>var functionString = \"nonexsitantFunction\"\ntypeof(eval(functionString)) // returns ReferenceError: [function] is not defined\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I had this problem.</p>\n\n<pre><code>if (obj &amp;&amp; typeof obj === 'function') { ... }\n</code></pre>\n\n<p>kept throwing a reference error if obj happened to be undefined.</p>\n\n<p>In the end I did the following:</p>\n\n<pre><code>if (typeof obj !== 'undefined' &amp;&amp; typeof obj === 'function') { ... }\n</code></pre>\n\n<p>Hope this helps someone!</p>\n\n<p>EDIT:</p>\n\n<p>A colleague pointed out to me that checking if it's !== 'undefined' and then === 'function' is redundant of course.</p>\n\n<p>Simpler:</p>\n\n<pre><code>if (typeof obj === 'function') { ... }\n</code></pre>\n\n<p>Much cleaner and works great.</p>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p>Try <code>typeof</code> -- Look for <code>'undefined'</code> to say it doesn't exist, <code>'function'</code> for a function. <a href=\"http://jsfiddle.net/3rjAL/\" rel=\"nofollow\">JSFiddle for this code</a></p>\n\n<pre><code>function thisishere() {\n    return false;\n}\nalert(\"thisishere() is a \" + typeof thisishere);\nalert(\"thisisnthere() is \" + typeof thisisnthere);\n</code></pre>\n\n<p>Or as an if:</p>\n\n<pre><code>if (typeof thisishere === 'function') {\n    // function exists\n}\n</code></pre>\n\n<p>Or with a return value, on a single line:</p>\n\n<pre><code>var exists = (typeof thisishere === 'function') ? \"Value if true\" : \"Value if false\";\nvar exists = (typeof thisishere === 'function') // Returns true or false\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I always check like this:</p>\n\n<pre><code>if(!myFunction){return false;}\n</code></pre>\n\n<p>just place it before any code that uses this function</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>How about:</p>\n\n<pre><code>if('functionName' in Obj){\n    //code\n}\n</code></pre>\n\n<p>e.g. </p>\n\n<pre><code>var color1 = new String(\"green\");\n\"length\" in color1 // returns true\n\"indexOf\" in color1 // returns true\n\"blablabla\" in color1 // returns false\n</code></pre>\n\n<p>or as for your case:</p>\n\n<pre><code>if('onChange' in me){\n    //code\n}\n</code></pre>\n\n<p>See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/in\" rel=\"nofollow\">MDN docs</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I followed this guide to create a new a js to flash communication:\n<a href=\"http://www.actionscript.org/resources/articles/638/1/Basics-of-using-the-ExternalInterface/Page1.html\">http://www.actionscript.org/resources/articles/638/1/Basics-of-using-the-ExternalInterface/Page1.html</a></p>\n\n<p>So my code looks like:</p>\n\n<pre><code>function getID( swfID ){\n     if(navigator.appName.indexOf(\"Microsoft\") != -1){\n          me = window[swfID];\n     }else{\n          me = document[swfID];\n     }\n}\n\nfunction js_to_as( str ){\n     me.onChange(str);\n}\n</code></pre>\n\n<p>Now sometimes, my onChange does not load, but currently, firebug displays a \"me.onChange is not a function\" error and completely stops. I want it to degrade gracefully because this is not the most important feature in my program. I tried typeof but that still gives the same error.</p>\n\n<p>Any suggestions on how to make sure that it exists and then only execute onChange?</p>\n\n<p>Thank you for your time.</p>\n\n<p><strong>UPDATE</strong> None of the methods below except try catch one work.</p>\n",
            "last_activity_date": 1423585701,
            "question_id": 1042138,
            "score": 82,
            "tags": [
                "javascript"
            ],
            "title": "Javascript check if function exists"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I've found the solution. If you execute FB.login without user action, webkit blocks the popups.</p>\n\n<p>For instance, I used an invite system on my project. There was a input/text to enter invitation code. I checked the invitation code is available with an ajax/post request. if it is available, I run FB.login(). As you guess, browser blocked popup and tons of errors appeared at js console.</p>\n\n<p>So you must run FB.login() after a user action. I'll put a facebook login button between ajax/post and FB.login(). Users'll have to click it -thats sucks- but they'll not see a problem.</p>\n\n<p>Btw, problem occures in a few days. I think it's about trust system of browser. When you're developing it, you visit lots of times, browser thinks it's reliable at first. I'm not sure about this part but my solution works.</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>M\u00fccahit Y\u0131lmaz is correct. Take the example I pasted below and if you use the setTimeout() method it fails, other wise it works. I still get the warning message in a loop until I properly login but it's a small price to pay. I'm sure users won't see it.</p>\n\n<pre><code>$(document).ready(function() {\n$(\"#facebook_link\").click(function() {\n    //setTimeout(fb);\n    fb();\n    return false;\n});\n\nfunction fb() {\n    FB.getLoginStatus(function(response) {\n        if (response.session) {\n            // logged in and connected user, someone you know\n            gotResponse(response);\n        } else {\n            // no user session available, someone you dont know\n            FB.login(function(response) {\n                if (response.session) {\n                    // user successfully logged in\n                    gotResponse(response);\n                } else {\n                    // user cancelled login, do nothing\n                }\n            });\n        }\n    });\n}\n\nfunction gotResponse(response) {\n    console.dir(response);\n}\n</code></pre>\n\n<p>});</p>\n\n<p>It's easy to reproduce: login to facebook in another tab, then try this code and you'll see no warnings. Logout, then try the code and you get the warnings. It's because it hits the .login block.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In my case it was because of facebook JS loaded multiple times at single page: one for login and second for \"like\" button. Removing reference in \"like\" module saves the day.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I had this problem with a chrome browser and it was due to my chrome settings.  I had the browser set to disallow 3rd parties sites from setting cookie data.  Allowing Pop-ups was not an issue for me.  When the facebook iFrame is created it must set a cookie that it then uses to track if the user needs to login.  If that cookie isn't allowed to be set then the site fails.  One thing that would be useful in the facebook api would be a setting that shows when something is failing.  I do not see that as an event that one can subscribe to and assign a callback.</p>\n\n<p>Here is a link to the FB javascript sdk on subscriptions.  Any response on finding a callback for failed requests would be appreciated.<br>\n<a href=\"https://developers.facebook.com/docs/reference/javascript/FB.Event.subscribe/\" rel=\"nofollow\">https://developers.facebook.com/docs/reference/javascript/FB.Event.subscribe/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>M\u00fccahit Y\u0131lmaz's solution worked for me, as well. I didn't need to access the user's information, so I removed the login script from the sample app. Also removed the Welcome message and any information requiring info stored in the <code>$basic</code> variable.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In my case the problem was related to <code>&lt;div id=\"fb-root\"&gt;&lt;/div&gt;</code> tag. I wasn't putting it immediatly after the opening <code>&lt;body&gt;</code> tag, <a href=\"http://developers.facebook.com/docs/howtos/login/getting-started/\" rel=\"nofollow\">as recommended by the docs</a>.</p>\n\n<p>After putting it in the right place, the \"Unsafe JavaScript...\" error stopped.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Removing the 'xfbml : true' option from my FB.init call fixed this for me.</p>\n\n<p>I was having the problem in the default internet browser on Android Jelly Bean</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>And in my case the problem was related to type of protocol: \nfrom:</p>\n\n<pre><code>&lt;div class=\"fb-like-box\" data-href=\"https://www.facebook.com/xxxxxx\"\n</code></pre>\n\n<p>to:</p>\n\n<pre><code>&lt;div class=\"fb-like-box\" data-href=\"http://www.facebook.com/xxxxxx\"\n</code></pre>\n\n<p>as my web store didnt use https I removed 's' from data-href attribute of the likebox.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>My sample Facebook app was working great yesterday in Chrome. The page integrates Silverlight ad Facebook via the JavaScript SDK. I can check basic login status, login to Facebook, get your name and log out.</p>\n\n<p>Today, with no changes on my part, it's broken in Chrome with a JavaScript error that's very common on Google search results, but no real answers. It still works great in IE and Firefox.</p>\n\n<p>Here's the public URL:</p>\n\n<p><a href=\"http://www.andrewdothay.net/prj/facebook/\">http://www.andrewdothay.net/prj/facebook/</a></p>\n\n<p>When you open the JavaScript console in Chrome, it throws tons of these errors:</p>\n\n<hr>\n\n<p>Unsafe JavaScript attempt to access frame with URL </p>\n\n<p><a href=\"http://www.facebook.com/login.php?api_key=151352704876752&amp;cancel_url=http%3A%2F%2Fstatic.ak.fbcdn.net%2Fconnect%2Fxd_proxy.php%23cb%3Df1175dd3f%26origin%3Dhttp%253A%252F%252Fwww.andrewdothay.net%252Ff304d89d8%26relation%3Dopener%26transport%3Dpostmessage%26frame%3Df3760623c%26result%3DxxRESULTTOKENxx&amp;channel_url=http%3A%2F%2Fwww.andrewdothay.net%2Fprj%2Ffacebook%2F&amp;display=popup&amp;fbconnect=1&amp;locale=en_US&amp;method=auth.login&amp;next=http%3A%2F%2Fstatic.ak.fbcdn.net%2Fconnect%2Fxd_proxy.php%23cb%3Df3c546942%26origin%3Dhttp%253A%252F%252Fwww.andrewdothay.net%252Ff304d89d8%26relation%3Dopener%26transport%3Dpostmessage%26frame%3Df3760623c%26result%3DxxRESULTTOKENxx&amp;return_session=1&amp;sdk=joey&amp;session_version=3&amp;v=1.0\">http://www.facebook.com/login.php?api_key=151352704876752&amp;cancel_url=http%3A%2F%2Fstatic.ak.fbcdn.net%2Fconnect%2Fxd_proxy.php%23cb%3Df1175dd3f%26origin%3Dhttp%253A%252F%252Fwww.andrewdothay.net%252Ff304d89d8%26relation%3Dopener%26transport%3Dpostmessage%26frame%3Df3760623c%26result%3DxxRESULTTOKENxx&amp;channel_url=http%3A%2F%2Fwww.andrewdothay.net%2Fprj%2Ffacebook%2F&amp;display=popup&amp;fbconnect=1&amp;locale=en_US&amp;method=auth.login&amp;next=http%3A%2F%2Fstatic.ak.fbcdn.net%2Fconnect%2Fxd_proxy.php%23cb%3Df3c546942%26origin%3Dhttp%253A%252F%252Fwww.andrewdothay.net%252Ff304d89d8%26relation%3Dopener%26transport%3Dpostmessage%26frame%3Df3760623c%26result%3DxxRESULTTOKENxx&amp;return_session=1&amp;sdk=joey&amp;session_version=3&amp;v=1.0</a> from frame with URL <a href=\"http://www.andrewdothay.net/prj/facebook/\">http://www.andrewdothay.net/prj/facebook/</a>. </p>\n\n<p>Domains, protocols and ports must match.</p>\n\n<hr>\n\n<p>Any ideas on what's going on with Chrome here? </p>\n\n<hr>\n\n<p><strong>Update</strong></p>\n\n<p>I discovered that Chrome on today's machine was blocking the login pop-up when I was calling FB.login(), but I know I wasn't getting those 190 error messages in the JavaScript console yesterday.</p>\n\n<p>So, when I allow pop-ups in Chrome, it does work for an end user, but all those new error messages are killing my diagnostic experience as a developer.</p>\n",
            "last_activity_date": 1398773285,
            "question_id": 3577947,
            "score": 59,
            "tags": [
                "javascript",
                "facebook",
                "google-chrome"
            ],
            "title": "Facebook gives &quot;Unsafe JavaScript attempt to access frame with URL&quot; error in Chrome"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The first and third are equivalent and create a new array. The second creates a new empty object, not an array.</p>\n\n<pre><code>var myArray = []; //create a new array\nvar myArray = {}; //creates **a new empty object**\nvar myArray = new Array(); //create a new array\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 65
                },
                {
                    "body": "<p><code>var myObject = {};</code> is equivalent to var <code>myObject = new Object();</code> </p>\n\n<p>So, the second example is not an <code>Array</code> but a general <code>Object</code>.</p>\n\n<p>This can get confusing as <code>Array</code> is a class and <code>Object</code> is a class - more precisely <code>Array</code> is a sub-class of <code>Object</code>. So, by and large, <code>Object</code> semantics are applicable to an <code>Array</code>:</p>\n\n<pre><code>var o = [];\no.push('element1');\no.push('element2');\no['property1'] = 'property value';  // define a custom property.\nconsole.log(o.property1);\nconsole.log(o.length);  // Outputs '2' as we've only push()'ed two elements onto the Array\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                }
            ],
            "body": "<p>What is the difference between each of the following array definitions.</p>\n\n<pre><code>var myArray = [];\nvar myArray = {};\nvar myArray = new Array();\n</code></pre>\n",
            "last_activity_date": 1383757352,
            "question_id": 5129544,
            "score": 52,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "JavaScript arrays braces vs brackets"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You can do it like this:</p>\n\n<pre><code>// step 1 \nvar one = \"1\" + \"2\" + \"3\"; // string value \"123\"\n\n// step 2\nvar two = parseInt(one); // integer value 123\n\n// step 3\nvar three = 123 + 100; // integer value 223\n\n// step 4\nvar four = three.toString(); // string value \"223\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Step (1) Concatenate \"1\", \"2\", \"3\" into \"123\"</p>\n\n<pre><code> \"1\" + \"2\" + \"3\"\n</code></pre>\n\n<p>Step (2) Convert \"123\" into 123</p>\n\n<pre><code> parseInt(\"123\", 10)\n</code></pre>\n\n<p>Step (3) Add 123 + 100 = 223</p>\n\n<pre><code> 123 + 100\n</code></pre>\n\n<p>Step (4) Covert 223 into \"223\"</p>\n\n<pre><code> (223).toString() \n</code></pre>\n\n<p>Put it all together:</p>\n\n<pre><code> (parseInt(\"1\" + \"2\" + \"3\", 10) + 100).toString()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>You want to become familiar with <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/parseInt\">parseInt</a>() and <a href=\"https://developer.mozilla.org/en-US/docs/toString\">toString</a>().</p>\n\n<p>And useful in your toolkit will be to look at a variable to find out what type it is - <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/typeof\">typeof</a>:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    /**\n     * print out the value and the type of the variable passed in\n     */\n\n    function printWithType(val) {\n        document.write('&lt;pre&gt;');\n        document.write(val);\n        document.write(' ');\n        document.writeln(typeof val);\n        document.write('&lt;/pre&gt;');\n    }\n\n    var a = \"1\", b = \"2\", c = \"3\", result;\n\n    // Step (1) Concatenate \"1\", \"2\", \"3\" into \"123\"\n    // - concatenation operator is just \"+\", as long\n    //   as all the items are strings, this works\n    result = a + b + c;\n    printWithType(result); //123 string\n\n    // - If they were not strings you could do\n    result = a.toString() + b.toString() + c.toString();\n    printWithType(result); // 123 string\n\n    // Step (2) Convert \"123\" into 123\n    result = parseInt(result,10);\n    printWithType(result); // 123 number\n\n    // Step (3) Add 123 + 100 = 223\n    result = result + 100;\n    printWithType(result); // 223 number\n\n    // Step (4) Convert 223 into \"223\"\n    result = result.toString(); //\n    printWithType(result); // 223 string\n\n    // If you concatenate a number with a \n    // blank string, you get a string    \n    result = result + \"\";\n    printWithType(result); //223 string\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 77
                },
                {
                    "body": "<p>These questions come up all the time due to JavaScript's typing system. People think they are getting a number when they're getting the string of a number.</p>\n\n<p>Here are some things you might see that take advantage of the way JavaScript deals with strings and numbers. Personally, I wish JavaScript had used some symbol other than <strong>+</strong> for string concatenation.</p>\n\n<p>Step (1) Concatenate \"1\", \"2\", \"3\" into \"123\"</p>\n\n<pre><code>result = \"1\" + \"2\" + \"3\";\n</code></pre>\n\n<p>Step (2) Convert \"123\" into 123</p>\n\n<pre><code>result = +\"123\";\n</code></pre>\n\n<p>Step (3) Add 123 + 100 = 223</p>\n\n<pre><code>result = 123 + 100;\n</code></pre>\n\n<p>Step (4) Convert 223 into \"223\"</p>\n\n<pre><code>result = \"\" + 223;\n</code></pre>\n\n<p>If you know WHY these work, you're less likely to get into trouble with JavaScript expressions.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>To convert a string to a number, subtract 0.\nTo convert a number to a string, add \"\" (the empty string).</p>\n\n<p>5 + 1 will give you 6</p>\n\n<p>(5 + \"\") + 1 will give you \"51\"</p>\n\n<p>(\"5\" - 0) + 1 will give you 6</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>parseInt is misfeatured like scanf:</p>\n\n<p><PRE>\nparseInt(\"12 monkeys\", 10) is a number with value '12'\n+\"12 monkeys\"              is a number with value 'NaN'\nNumber(\"12 monkeys\")       is a number with value 'NaN'\n</PRE></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>r = (\"1\"+\"2\"+\"3\")           // step1 | build string ==&gt; \"123\"\nr = +r                      // step2 | to number    ==&gt; 123\nr = r+100                   // step3 | +100         ==&gt; 223\nr = \"\"+r                    // step4 | to string    ==&gt; \"223\"\n\n//in one line\nr = \"\"+(+(\"1\"+\"2\"+\"3\")+100);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Simplest is\nwhen you want to make a integer a string do</p>\n\n<pre><code>var a,b, c;\na = 1;\nb = a.toString(); // This will give you string\n</code></pre>\n\n<p>Now, from the variable b which is of type string we can get the integer</p>\n\n<pre><code>c = b *1; //This will give you integer value of number :-)\n</code></pre>\n\n<p>If you want to check above is a number. If you are not sure if b contains integer\nthen you can use </p>\n\n<pre><code>if(isNaN(c*1)) {\n  //NOt a number\n}\nelse //number\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I do the following in JavaScript?</p>\n\n<ol>\n<li><p>Concatenate \"1\", \"2\", \"3\" into \"123\"</p></li>\n<li><p>Convert \"123\" into 123</p></li>\n<li><p>Add 123 + 100 = 223</p></li>\n<li><p>Covert 223 into \"223\"</p></li>\n</ol>\n",
            "last_activity_date": 1404599669,
            "question_id": 971039,
            "score": 51,
            "tags": [
                "javascript",
                "string",
                "numbers"
            ],
            "title": "JavaScript string and number conversion"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The security error is unlikely to break your page. It looks like the error is happening from within the YouTube frame, which means that in the worst case the content of the frame will be messed up.</p>\n\n<p>A frame/iframe from an external page cannot, under any circumstances effect the content of the parent document unless they are from the same domain and port number. It is one of the hard rules of browser security.</p>\n\n<p>The error must be elsewhere in your markup. Any chance of seeing some example markup?</p>\n\n<p>[edit]</p>\n\n<p>The error could also be in the embed code markup. Or, if any script tags are included directly on the page (not in the iframe) it could be there.</p>\n\n<p>Usually when problems like this happens it is because of an unclosed tag somewhere but it could be Javascript as well.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>If you are having an issue resolving that JavaScript error, you can try using YouTube's old embed code. It's an option on every YouTube video once you click on embed. You will not have that error because it does not use iframes. The code would look something like this:</p>\n\n<pre><code>&lt;object width=\"560\" height=\"315\"&gt;\n    &lt;param name=\"movie\" value=\"http://www.youtube.com/v/9DXL9vIUbWg?version=3&amp;amp;hl=en_US&amp;amp;rel=0\"&gt;&lt;/param&gt;\n    &lt;param name=\"allowFullScreen\" value=\"true\"&gt;&lt;/param&gt;\n    &lt;param name=\"allowscriptaccess\" value=\"always\"&gt;&lt;/param&gt;\n    &lt;embed src=\"http://www.youtube.com/v/9DXL9vIUbWg?version=3&amp;amp;hl=en_US&amp;amp;rel=0\" type=\"application/x-shockwave-flash\" width=\"560\" height=\"315\" allowscriptaccess=\"always\" allowfullscreen=\"true\"&gt;&lt;/embed&gt;\n&lt;/object&gt;\n</code></pre>\n\n<p>Hope this helps. </p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The <em>Unsafe JavaScript attempt to access frame</em> error has nothing to do with your page not rendering. Broken markup (e.g. a missing <code>&lt;/iframe&gt;</code>) is the most probable reason.</p>\n\n<p>As for the <em>Unsafe JavaScript attempt to access frame</em> error, you have a few options:</p>\n\n<ol>\n<li><p>Easiest solution is to use the <strong>IFrame Player API</strong> instead of manually adding iframe tags. The API is a piece of JavaScript that <em>generates</em> the iframe tag for you and adds the parameters that will (or should) eliminate the frame access error. Here are the instructions for using <a href=\"https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player\" rel=\"nofollow\">IFrame Player API to load a player</a>.</p></li>\n<li><p>The manual solution is to build the <code>&lt;iframe&gt;</code> tags and append the <code>&amp;origin=http://example.com</code> parameter to the URLs. Quote:</p></li>\n</ol>\n\n<blockquote>\n  <p>As an extra security measure, you should also include the origin\n  parameter to the URL, specifying the URL scheme (http:// or https://)\n  and full domain of your host page as the parameter value. While origin\n  is optional, including it protects against malicious third-party\n  JavaScript being injected into your page and hijacking control of your\n  YouTube player.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I voted for Jonathan Torres' answer, because his code stopped the Javascript warnings. However I then discovered errors when I validated the code.</p>\n\n<p>So my answer is this...</p>\n\n<p>Tick the \"Use old embed code\" checkbox when using YouTube's embed code so you're not using the iframe.</p>\n\n<p>To make the code validate you need to add....</p>\n\n<pre><code>type=\"movie\"\n</code></pre>\n\n<p>and</p>\n\n<pre><code>data=\"http://SAME YOUTUBE URL USED IN THE FIRST PARAM ELEMENT/\"\n</code></pre>\n\n<p>to the <i>OBJECT</i> element. Then make the <i>PARAM</i> elements self-closing (but not the <i>EMBED</i> element).</p>\n\n<p>This should make your YouTube code look like this...</p>\n\n<pre><code>&lt;object width=\"560\" height=\"315\" type=\"movie\" data=\"http://www.youtube.com/v/9DXL9vIUbWg?version=3&amp;amp;hl=en_US&amp;amp;rel=0\"&gt;\n&lt;param name=\"movie\" value=\"http://www.youtube.com/v/9DXL9vIUbWg?version=3&amp;amp;hl=en_US&amp;amp;rel=0\"&gt;&lt;/param&gt;&lt;param name=\"allowFullScreen\" value=\"true\" /&gt;\n&lt;param name=\"allowscriptaccess\" value=\"always\" /&gt;\n&lt;embed src=\"http://www.youtube.com/v/9DXL9vIUbWg?version=3&amp;amp;hl=en_US&amp;amp;rel=0\" type=\"application/x-shockwave-flash\" width=\"560\" height=\"315\" allowscriptaccess=\"always\" allowfullscreen=\"true\"&gt;&lt;/embed&gt;\n&lt;/object&gt;\n</code></pre>\n\n<p>You then ought to get no Javascript warnings and your code should validate.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>for me it worked by using the code here:\n<a href=\"https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player\" rel=\"nofollow\">https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player</a></p>\n\n<p>the lines i fixed see the words market with 2 asterix **  <strong>code</strong>:</p>\n\n<p><strong>from this:</strong></p>\n\n<pre><code>var tag = document.createElement('script');\n          tag.src = \"**http://www.youtube.com/player_api**\";\n          var firstScriptTag = document.getElementsByTagName('script')[0];\n          firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n          var players = new Array();\n          function **onYouTubePlayerAPIReady()** {\n\n        var ids = $('div.video div');\n\n        for(var i=0; i &lt; ids.length; i++) {\n            players.push(new YT.Player('**yt**'+i, {\n                height: '400',\n                width: '596',\n                videoId: $(ids[i]).attr('rel'),\n                events: {\n                    'onReady': onPlayerReady,\n                    'onStateChange': onPlayerStateChange\n                }\n            }));\n        }\n\n      }\n</code></pre>\n\n<p><strong>to this:</strong></p>\n\n<pre><code>var tag = document.createElement('script');\n  tag.src = \"**https://www.youtube.com/iframe_api**\";\n  var firstScriptTag = document.getElementsByTagName('script')[0];\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n  var players = new Array();\n  function **onYouTubeIframeAPIReady()** {\n\n    var ids = $('div.video div');\n\n    for(var i=0; i &lt; ids.length; i++) {\n        players.push(new YT.Player('**player**'+i, {\n            height: '400',\n            width: '596',\n            videoId: $(ids[i]).attr('rel'),\n            events: {\n                'onReady': onPlayerReady,\n                'onStateChange': onPlayerStateChange\n            }\n        }));\n    }\n\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>We have a Wicket app with a page that includes an embedded Youtube video. The video embeds and plays fine, but apparently it causes the rest of the page to not render- it seems that the DOM elements coming <em>after</em> the embed simply don't show up on the page, despite being in the markup.</p>\n\n<p>Looking at the error console in Chrome reveals:</p>\n\n<blockquote>\n  <p>Unsafe JavaScript attempt to access\n  frame with URL\n  <a href=\"http://example.com/detail/COMMUNICATION/search/com-sonyericsson-hanashi\">http://example.com/detail/COMMUNICATION/search/com-sonyericsson-hanashi</a>\n  from frame with URL\n  <a href=\"http://www.youtube.com/embed/eJY7_De5opI?enablejsapi=1&amp;autohide=1&amp;showinfo=1\">http://www.youtube.com/embed/eJY7_De5opI?enablejsapi=1&amp;autohide=1&amp;showinfo=1</a>.\n  Domains, protocols and ports must\n  match.</p>\n</blockquote>\n\n<p>I've googled this a fair amount, and people seem to be saying that <a href=\"http://stackoverflow.com/questions/5806249/error-loading-youtube-video-in-modal-dialog-with-chrome/5806337#5806337\">it's innocuous</a> and to ignore it. That just seems wrong, and in our case it actually breaks the page. </p>\n\n<p>If we change our app so that the video is embedded dynamically via an ajax callback (user clicks a Wicket AjaxLink) we still get the error in the console, but at least the page renders fully. Unfortunately this won't work for us, as we need the video to be loaded by default when the user first hits the page.</p>\n\n<p><strong>Edit</strong>: I should add that although the error message was taken from the Chrome console, the bug seems to affect every browser I've tried: Chrome, Safari and Firefox.</p>\n",
            "last_activity_date": 1368544483,
            "question_id": 6346176,
            "score": 50,
            "tags": [
                "javascript",
                "iframe",
                "youtube",
                "wicket"
            ],
            "title": "Youtube embed: Unsafe JavaScript attempt to access frame"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>var s = '/Controller/Action?id=11112&amp;value=4444';\ns = s.substring(0, s.indexOf('?'));\ndocument.write(s);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/L4hna/\">Sample here</a></p>\n\n<p><strong>Edit:</strong> </p>\n\n<p>I should also mention that native string functions are much faster than regular expressions, which should only really be used when necessary (this isn't one of those cases).</p>\n\n<p><strong>2nd Edit:</strong></p>\n\n<p>Updated code to account for no '?':</p>\n\n<pre><code>var s = '/Controller/Action';\nvar n = s.indexOf('?');\ns = s.substring(0, n != -1 ? n : s.length);\ndocument.write(s);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/L4hna/1/\">http://jsfiddle.net/L4hna/1/</a></p>\n",
                    "is_accepted": true,
                    "score": 94
                },
                {
                    "body": "<pre><code>var href = \"/Controller/Action?id=11112&amp;value=4444\";\nhref = href.replace(/\\?.*/,'');\nhref ; //# =&gt; /Controller/Action\n</code></pre>\n\n<p>This will work if it finds a '?' and if it doesn't</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It can easly be done using JavaScript for reference see link\n<a href=\"http://www.pageresource.com/jscript/jstring1.htm\" rel=\"nofollow\">JS String</a></p>\n\n<p>EDIT \nit can easly done as. ;)</p>\n\n<pre><code>var url=\"/Controller/Action?id=11112&amp;value=4444 \";\nvar parameter_Start_index=url.indexOf('?');\nvar action_URL = url.substring(0, parameter_Start_index);\nalert('action_URL : '+action_URL);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can also use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split\"><code>split()</code></a> function. This seems to be the easiest one that comes to my mind :).</p>\n\n<pre><code>url.split('?')[0]\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/5LmLW/\">jsFiddle Demo</a></p>\n\n<p>One advantage is this method will work even if there is no <code>?</code> in the string - it will return the whole string.</p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>Worked for me:</p>\n\n<pre><code>      var first = regexLabelOut.replace(/,.*/g, \"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you also want to keep \"?\" and just remove everything <em>after</em> that particular character, you can do:</p>\n\n<pre><code>var str = \"/Controller/Action?id=11112&amp;value=4444\",\n    stripped = str.substring(0, str.indexOf('?') + '?'.length);\n\n// output: /Controller/Action?\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to remove everything after a certain character or just choose everything up to that character?  I'm getting the value from an href and up to the \"?\", and it's always going to be a different amount of characters.</p>\n\n<pre><code>like /Controller/Action?id=11112&amp;value=4444\n</code></pre>\n\n<p>I want the href to be <code>/Controller/Action</code> only, so I want to remove everything after the \"?\".</p>\n\n<p>I'm using this now:</p>\n\n<pre><code> $('.Delete').click(function (e) {\n            e.preventDefault();\n            var id = $(this).parents('tr:first').attr('id');                \n            var url = $(this).attr('href');\n            alert(url);\n</code></pre>\n",
            "last_activity_date": 1418931781,
            "question_id": 5631384,
            "score": 44,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Remove everything after a certain character"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>Update 4:</strong> Plugin for responsive layouts <a href=\"https://github.com/elclanrs/jquery.columns\" rel=\"nofollow\">https://github.com/elclanrs/jquery.columns</a> (in the works)</p>\n\n<p>I gave this a (long) try. First here's the CSS example: <a href=\"http://jsbin.com/orajac/1/edit#css\" rel=\"nofollow\">http://jsbin.com/orajac/1/edit#css</a>. (resize the output panel). Notice that the <code>font-size</code> doesn't work with viewport units, at least on latest Chrome. </p>\n\n<p>And here's my attempt at doing this with jQuery. The jQuery demo which works with the font as well is at <a href=\"http://jsbin.com/izosuy/1/edit#javascript\" rel=\"nofollow\">http://jsbin.com/izosuy/1/edit#javascript</a>. Haven't tested it extensively but it seems to work with most properties since it's just converting the values to pixel and then by calling the plugin on <code>window.resize</code> it keeps updating.</p>\n\n<p><strong>Update:</strong> Updated code to work with many browsers. Test locally if you're using anything other than Chrome because jsBin acts a bit weird with <code>window.resize</code>.</p>\n\n<p><strong>Update 2:</strong> Extend native <code>css</code> method.</p>\n\n<p><strong>Update 3:</strong> Handle window.resize event inside of the plugin so the integration is now seamless.</p>\n\n<p><strong>The gist (to test locally):</strong> <a href=\"https://gist.github.com/4341016\" rel=\"nofollow\">https://gist.github.com/4341016</a></p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>/*\r\n * CSS viewport units with jQuery\r\n * http://www.w3.org/TR/css3-values/#viewport-relative-lengths\r\n */\r\n;(function( $, window ){\r\n\r\n  var $win = $(window)\r\n    , _css = $.fn.css;\r\n\r\n  function viewportToPixel( val ) {\r\n    var percent = val.match(/[\\d.]+/)[0] / 100\r\n      , unit = val.match(/[vwh]+/)[0];\r\n    return (unit == 'vh' ? $win.height() : $win.width()) * percent +'px';\r\n  }\r\n\r\n  function parseProps( props ) {\r\n    var p, prop;\r\n    for ( p in props ) {\r\n      prop = props[ p ];\r\n      if ( /[vwh]$/.test( prop ) ) {\r\n        props[ p ] = viewportToPixel( prop );\r\n      }\r\n    }\r\n    return props;\r\n  }\r\n\r\n  $.fn.css = function( props ) {\r\n    var self = this\r\n      , update = function() {\r\n          return _css.call( self, parseProps( $.extend( {}, props ) ) );\r\n        };\r\n    $win.resize( update ).resize();\r\n    return update();\r\n  };\r\n\r\n}( jQuery, window ));\r\n\r\n// Usage:\r\n$('div').css({\r\n  height: '50vh',\r\n  width: '50vw',\r\n  marginTop: '25vh',\r\n  marginLeft: '25vw',\r\n  fontSize: '10vw'\r\n});</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p><a href=\"https://github.com/saabi/vminpoly\" rel=\"nofollow\">Vminpoly</a> is the only polyfill I know of \u2014\u00a0it's under develpment but works as of this post. There are static polyfills as part of the <a href=\"https://github.com/elclanrs/jquery.columns\" rel=\"nofollow\">Jquery Columns</a> and <a href=\"https://github.com/LeaVerou/prefixfree\" rel=\"nofollow\">-prefix-free</a> projects as well.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I am facing this issue with the Android 4.3 stock browser (doesn't support vw,vh, etc). \nThe way I solved this is using 'rem' as a font-size unit and dynamically changing the &lt; html >'s font-size with javascript</p>\n\n<pre><code>function viewport() {\n    var e = window, a = 'inner';\n    if (!('innerWidth' in window )) {\n        a = 'client';\n        e = document.documentElement || document.body;\n    }\n    return { width : e[ a+'Width' ] , height : e[ a+'Height' ] };\n}\njQuery(window).resize(function(){\n    var vw = (viewport().width/100);\n    jQuery('html').css({\n        'font-size' : vw + 'px'\n    });\n});\n</code></pre>\n\n<p>and in your css you can use 'rem' instead of px,ems,etc</p>\n\n<pre><code>.element {\n    font-size: 2.5rem; /* this is equivalent to 2.5vw */\n}\n</code></pre>\n\n<p>Here's a demo of the code : <a href=\"http://jsfiddle.net/4ut3e/\">http://jsfiddle.net/4ut3e/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I wrote small helper to deal with this problem. It's supported on all main browsers and uses jQuery.<br/>\nHere it is:</p>\n\n<p>SupportVhVw.js</p>\n\n<pre><code>function SupportVhVw() {\n\n    this.setVh = function(name, vh) {\n\n        jQuery(window).resize( function(event) {\n            scaleVh(name, vh);\n        });\n\n        scaleVh(name, vh);\n    }\n\n    this.setVw = function(name, vw) {\n\n        jQuery(window).resize( function(event) {\n            scaleVw(name, vw);\n        });\n\n        scaleVw(name, vw);\n    }\n\n    var scaleVw = function(name, vw) {\n\n        var scrWidth = jQuery(document).width();\n        var px = (scrWidth * vw) / 100;\n        var fontSize = jQuery(name).css('font-size', px + \"px\");\n    }\n\n\n    var scaleVh = function(name, vh) {\n\n        var scrHeight = jQuery(document).height();\n\n        var px = (scrHeight * vh) / 100;\n        var fontSize = jQuery(name).css('font-size', px + \"px\");\n    }\n};\n</code></pre>\n\n<p>Simple example how to use it in HTML:</p>\n\n<pre><code>&lt;head&gt;\n\n    &lt;title&gt;Example&lt;/title&gt;\n\n    &lt;!-- Import all libraries --&gt;\n    &lt;script type=\"text/javascript\" src=\"js/libs/jquery-1.10.2.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/libs/SupportVhVw.js\"&gt;&lt;/script&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n\n                    &lt;div id=\"textOne\"&gt;Example text one (vh5)&lt;/div&gt;\n                    &lt;div id=\"textTwo\"&gt;Example text two (vw3)&lt;/div&gt;\n                    &lt;div id=\"textThree\" class=\"textMain\"&gt;Example text three (vh4)&lt;/div&gt;\n                    &lt;div id=\"textFour\" class=\"textMain\"&gt;Example text four (vh4)&lt;/div&gt;\n\n            &lt;script type=\"text/javascript\"&gt;\n\n                    // Init object\n                    var supportVhVw = new SupportVhVw();\n\n                    // Scale all texts\n                    supportVhVw.setVh(\"#textOne\", 5);\n                    supportVhVw.setVw(\"#textTwo\", 3);\n                    supportVhVw.setVh(\".textMain\", 4);\n\n            &lt;/script&gt;\n\n&lt;/body&gt;\n</code></pre>\n\n<p>It's available on GitHub:<br/>\n<a href=\"https://github.com/kgadzinowski/Support-Css-Vh-Vw\" rel=\"nofollow\">https://github.com/kgadzinowski/Support-Css-Vh-Vw</a>\n<br/><br/>\nExample on JSFiddle:\n<a href=\"http://jsfiddle.net/5MMWJ/2/\" rel=\"nofollow\">http://jsfiddle.net/5MMWJ/2/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've published a tiny lib that eases viewport-relative dimensions usage. Keep in mind it's not a polyfill, so it requires that you apply classes on the elements you want to resize. For instance, <code>&lt;div class=\"vh10 vw30\"&gt;hello&lt;/div&gt;</code> will fill 10% of the height and 30% of the width.</p>\n\n<p>Check it out: <a href=\"https://github.com/joaocunha/v-unit\" rel=\"nofollow\">https://github.com/joaocunha/v-unit</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<blockquote>\n  <p>Note: Ok while I was typing this question I came across <a href=\"http://stackoverflow.com/questions/6921142/scaling-a-web-layout-with-the-viewport\">this</a>\n  question which suggests to use <code>@media query</code> but was asked back in\n  2011...</p>\n</blockquote>\n\n<p>As you know CSS3 introduces new <a href=\"http://www.w3.org/TR/css3-values/#viewport-relative-lengths\">Viewport-percentage length units</a>, <code>vh</code> and <code>vw</code>, which I feel are really useful for a solid responsive layout, so my question is, is there any JavaScript/jQuery alternative for this? More over apart from using it for font sizes, is it safe to use for sizing elements? Like example</p>\n\n<pre><code>div {\n   height: 6vh;\n   width: 20vh;  /* Note am using vh for both, do I need to use vw for width here? */\n}\n</code></pre>\n",
            "last_activity_date": 1417776899,
            "question_id": 13948713,
            "score": 33,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "css3"
            ],
            "title": "Is there any cross-browser javascript for making vh and vw units work"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>To get the distribution you want, I think you can use this formula:</p>\n\n<pre><code>var value = Math.floor(-900 + 1000*Math.exp(i/10.857255959));\n</code></pre>\n\n<p>Here's a self-contained page that will print the values you'll get for your 0-100 slider, having passed them through that formula:</p>\n\n<pre><code>&lt;html&gt;&lt;body&gt;&lt;script&gt;\nfor (var i = 0; i &lt;= 100; i++) {\n    var value = Math.floor(-900 + 1000*Math.exp(i/10.857255959));\n    document.write(value + \"&lt;br&gt;\");\n}\n&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>The numbers go from 100 to 10,000,000 in what looks to my mathematically-rusty eye to be the distribution you want.  8-)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use a function like this:</p>\n\n<pre><code>function logslider(position) {\n  // position will be between 0 and 100\n  var minp = 0;\n  var maxp = 100;\n\n  // The result should be between 100 an 10000000\n  var minv = Math.log(100);\n  var maxv = Math.log(10000000);\n\n  // calculate adjustment factor\n  var scale = (maxv-minv) / (maxp-minp);\n\n  return Math.exp(minv + scale*(position-minp));\n}\n</code></pre>\n\n<p>The resulting values match a logarithmic scale:</p>\n\n<pre><code>js&gt; logslider(0);\n100.00000000000004\njs&gt; logslider(10);\n316.22776601683825\njs&gt; logslider(20);\n1000.0000000000007\njs&gt; logslider(40);\n10000.00000000001\njs&gt; logslider(60);\n100000.0000000002\njs&gt; logslider(100);\n10000000.000000006\n</code></pre>\n\n<p>The reverse function would, with the same definitions for <code>minp</code>, <code>maxp</code>, <code>minv</code>, <code>maxv</code> and <code>scale</code>, calculate a slider position from a value like this:</p>\n\n<pre><code>function logposition(value) {\n   // set minv, ... like above\n   // ...\n   return (Math.log(value)-minv) / scale + minp;\n}\n</code></pre>\n\n<p><br></p>\n\n<p>All together, wrapped in a class and as a functional code snippet, it would look like this:<div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>// Generic class:\r\n\r\nfunction LogSlider(options) {\r\n   options = options || {};\r\n   this.minpos = options.minpos || 0;\r\n   this.maxpos = options.maxpos || 100;\r\n   this.minlval = Math.log(options.minval || 1);\r\n   this.maxlval = Math.log(options.maxval || 100000);\r\n\r\n   this.scale = (this.maxlval - this.minlval) / (this.maxpos - this.minpos);\r\n}\r\n\r\nLogSlider.prototype = {\r\n   // Calculate value from a slider position\r\n   value: function(position) {\r\n      return Math.exp((position - this.minpos) * this.scale + this.minlval);\r\n   },\r\n   // Calculate slider position from a value\r\n   position: function(value) {\r\n      return this.minpos + (Math.log(value) - this.minlval) / this.scale;\r\n   }\r\n};\r\n\r\n\r\n// Usage:\r\n\r\nvar logsl = new LogSlider({maxpos: 20, minval: 100, maxval: 10000000});\r\n\r\n$('#slider').on('change', function() {\r\n   var val = logsl.value(+$(this).val());\r\n   $('#value').val(val.toFixed(0));\r\n});\r\n\r\n$('#value').on('keyup', function() {\r\n   var pos = logsl.position(+$(this).val());\r\n   $('#slider').val(pos);\r\n});\r\n\r\n$('#value').val(\"1000\").trigger(\"keyup\");</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n\r\nInput value or use slider:\r\n&lt;input id=\"value\" /&gt;\r\n&lt;input id=\"slider\" type=\"range\" min=\"0\" max=\"20\" /&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": true,
                    "score": 74
                },
                {
                    "body": "<p>Not quite answering the question, but for people interested, the reverse maping the last line is</p>\n\n<pre><code>return (Math.log(value)-minv)/scale + min;\n</code></pre>\n\n<p>just to document.</p>\n\n<p>NOTE the value must be > 0.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have a slider with steps 0-100;</p>\n\n<p>I want the range to be from 100 to 10,000,000.</p>\n\n<p>I've seen some functions scattered around the net but they're all in C++; i need it in javascript.</p>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1412075392,
            "question_id": 846221,
            "score": 31,
            "tags": [
                "javascript",
                "slider",
                "logarithm"
            ],
            "title": "Logarithmic slider"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>A few ideas comes to mind:</p>\n\n<hr>\n\n<h2>Idea #1</h2>\n\n<p>You can make it so that a short burst is <strong>idempotent</strong>. For example, you could say:</p>\n\n<pre><code>function now() {\n    return (new Date()).getTime();\n}\n\nvar autopagerInterval = 8000;\n\nfunction startAutopager() {\n    var startImage = getCurrentImageNumber();\n    var startTime = now();\n\n    var autopager = setInterval(\n        function() {\n            var timeSinceStart = now() - startTime();\n            var targetImage = getCurrentImageNumber + Math.ceil(timeSinceStart/autopagerInterval);\n            if (getCurrentImageNumber() != targetImage)\n                setImageNumber(targetImage);  // trigger animation, etc.\n        },\n        autopagerInterval\n    );\n    return autopager;\n}\n</code></pre>\n\n<p>This way even if the function runs 1000 times, it will still run in only a few milliseconds and animate only once.</p>\n\n<p><strong>note</strong>: If the user leaves the page and comes back, it will have scrolled. This is probably not what the original poster wants, but I leave this solution up since it is sometimes what you want.</p>\n\n<hr>\n\n<h2>Idea #2</h2>\n\n<p>Another way to add idempotence (while still keeping your <code>nextImage()</code> function and not having it scroll to the bottom of the page) would be to have the function set a mutex lock which disappears after a second (cleared by another timeout). Thus even if the setInterval function was called 1000 times, only the first instance would run and the others would do nothing.</p>\n\n<pre><code>var locked = false;\nvar autopager = window.setInterval(function(){\n    if (!locked) {\n        locked = true;\n        window.setTimeout(function(){\n            locked=false;\n        }, 1000);\n        nextImage();\n    }\n}, 8000);\n</code></pre>\n\n<p><strong>edit: this may not work, see below</strong></p>\n\n<hr>\n\n<h2>Idea #3</h2>\n\n<p>I tried the following test:</p>\n\n<pre><code>function f() {\n    console.log((new Date()) + window.focus());\n    window.setTimeout(f, 1000);\n}\nf();\n</code></pre>\n\n<p>It seems to indicate that the function is being called every second. This is odd... but I think this means that the callbacks <em>are</em> being called, but that the <em>page renderer</em> refuses to update the page in any graphical way while the tab is unfocused, delaying all operations until the user returns, but operations keep piling up.</p>\n\n<p>Also the <code>window.focus()</code> function doesn't say if the window has focus; it GIVES focus to the window, and is thus irrelevant.</p>\n\n<p>What we want is probably this: <a href=\"http://stackoverflow.com/questions/2720658/how-to-detect-when-a-tab-is-focused-or-not-in-chrome-with-javascript\">How to detect when a tab is focused or not in Chrome with Javascript?</a> -- you can unset your interval when the window loses focus (blur), and reset it when it gains focus.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/questions/2720658/how-to-detect-when-a-tab-is-focused-or-not-in-chrome-with-javascript\">How to detect when a tab is focused or not in Chrome with Javascript?</a></p>\n\n<pre><code>window.addEventListener('focus', function() {\n    document.title = 'focused';\n},false);\n\nwindow.addEventListener('blur', function() {\n    document.title = 'not focused';\n},false);\n</code></pre>\n\n<p>To apply to your situation:</p>\n\n<pre><code>var autopager;\nfunction startAutopager() {\n    autopager = window.setInterval(nextImage, 8000);\n}\nfunction stopAutopager() {\n    window.clearInterval(autopager);\n}\n\nwindow.addEventListener('focus', startAutopager);    \nwindow.addEventListener('blur', stopAutopager);\n</code></pre>\n\n<p>Note that in the latest version of Chromium, there is either a bug or a 'feature' which is making this less reliable, requiring that the user has clicked at least once anywhere in the window. See linked question above for details.</p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>I had faced similar issue, somehow this code below works fine for me. </p>\n\n<pre><code>            var t1= window.setInterval('autoScroll()', 8000);\n\n    window.addEventListener('focus', function() {\n        focused = true;\n        window.clearInterval(t1);\n        t1 = window.setInterval('autoScroll()', 8000);\n    },false);\n\n    window.addEventListener('blur', function() {\n        focused = false;\n        window.clearInterval(t1);\n    },false)\n\n\n\nfunction autoScroll()\n\n    {\n\n        if ( running == true){\n            if ( focused = true){\n                forwardSlide();\n            }\n\n\n        }\n\n        else {\n\n            running = true;\n\n        }\n\n\n\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't know exactly what is going on in your function nextImage(), but I had a similar issue. I was using animate() with setInterval() on a jQuery image slider that I created, and I was experiencing the same thing as you when I switched to a different tab and back again. In my case the animate() function was being queued, so once the window regained focus the slider would go crazy. To fix this I just stopped the animate() function from queuing.</p>\n\n<p>There are a couple ways you can do this. the easiest is with .stop(), but this issue and ways to fix it are documented in the jQuery docs. Check this page near the bottom under the heading additional notes: <a href=\"http://api.jquery.com/animate/\" rel=\"nofollow\">http://api.jquery.com/animate/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I post an answer here: <a href=\"http://stackoverflow.com/questions/5927284/how-can-i-make-setinterval-also-work-when-a-tab-is-inactive-in-chrome/7387953#7387953\">How can I make setInterval also work when a tab is inactive in Chrome?</a></p>\n\n<p>Just do this:</p>\n\n<pre><code>setInterval(function() {\n    $(\"#your-image-container\").stop(true,true);\n    nextImage();\n\n}, 1000);\n</code></pre>\n\n<p>inactive browser tabs buffer some of the setInterval or setTimeout functions. \nstop(true,true) - will stop all buffered events and execute immadietly only last animation.</p>\n\n<p>The window.setTimeout() method now clamps to send no more than one timeout per second in inactive tabs. In addition, it now clamps nested timeouts to the smallest value allowed by the HTML5 specification: 4 ms (instead of the 10 ms it used to clamp to).</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>If you are using Soh Tanaka's image slider then just add this...to solve your Google Chrome issue:</p>\n\n<p><code>$(\".image_reel\").stop(true, true).fadeOut(300).animate({ left: -image_reelPosition}, 500 ).fadeIn(300);</code></p>\n\n<p>Take note of the .stop() function. Ignore the fading in and out stuff, that's what I used on my version </p>\n\n<p>Thanks</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a jQuery slider on my site and the code going to the next slide is in a function called nextImage. I used setInterval to run my function on a timer, and it does exactly what I want: it runs my slides on a timer. BUT, if I go to the site in Chrome, switch to another tab and return, the slider runs through the slides continuously until it 'catches up'. Does anyone know of a way to fix this. The following is my code.</p>\n\n<pre><code>setInterval(function() {\nnextImage();\n}, 8000);\n</code></pre>\n",
            "last_activity_date": 1337065506,
            "question_id": 6183463,
            "score": 29,
            "tags": [
                "javascript",
                "jquery",
                "google-chrome",
                "slider"
            ],
            "title": "When using setInterval, if I switch tabs in Chrome and go back, the slider goes crazy catching up"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This tests if <code>obj</code>'s <code>length</code> property is a number.</p>\n\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators#Unary_plus_%28.2B%29\" rel=\"nofollow\">unary <code>+</code> operator</a> converts its operand to a number, and the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators#Identity_.2F_strict_equality_%28.3D.3D.3D%29\" rel=\"nofollow\">strict equality operator</a> compares the result with the original <code>length</code> property without performing type coercion.</p>\n\n<p>Therefore, the expression will only be <code>true</code> if <code>obj.length</code> is an actual number (not e.g. a string that can be converted to a number).</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>It's another way of writing <code>if (typeof obj.length == 'number')</code>. Why they do it that way, it's anyone's guess. Probably trying to be clever at the expense of readability. Which is not too uncommon these days, unfortunately...</p>\n\n<p>Although it might be so that it can be compressed more by minifiers (<a href=\"http://developer.yahoo.com/yui/compressor/\">YUI Compressor</a>, <a href=\"http://closure-compiler.appspot.com/home\">Closure Compiler</a>, <a href=\"https://github.com/mishoo/UglifyJS\">UglifyJS</a>, etc):</p>\n\n<p><code>(a.length===+a.length)</code> <strong>vs</strong>\n<code>(typeof a.length=='number')</code></p>\n\n<p>Doing it their way would save 5 bytes, each instance.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p><code>+obj.length</code> turn <code>obj.length</code> to number.\nI think this is to test whether <code>obj.length</code> is a number.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think the main reason they are testing if obj.length is a number - is to differentiate obj type of Object from [object Array] (it would work also with String and Function objects). \nThe [object Object] has no length property.</p>\n\n<p>so if </p>\n\n<pre><code>obj = {a:1, b:2}; //obj.length = undefined\n\nobj.length === +obj.length\nundefined === NaN //false - you know that your obj has type Object\n// (or some other object, but not Array, !String and !Function)\n// so, you need to determine size of the obj in some way\n// or use for in loop to iterate over your obj\n</code></pre>\n\n<p>regards</p>\n\n<p>P.S.: IMO it answers the second part of the \"why do they use it\" question</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>In underscore.js source in many places I came across</p>\n\n<pre><code>if (obj.length === +obj.length)\n</code></pre>\n\n<p>Can someone explain, why do they use it?</p>\n",
            "last_activity_date": 1401919653,
            "question_id": 9188998,
            "score": 27,
            "tags": [
                "javascript",
                "underscore.js"
            ],
            "title": "obj.length === +obj.length in javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use the <a href=\"http://dev.w3.org/html5/webstorage/#dom-storage-key\"><code>key</code></a> method.  <code>localStorage.key(index)</code> returns the <code>index</code>th key (the order is implementation-defined but constant until you add or remove keys).</p>\n\n<pre><code>for (var i = 0; i &lt; localStorage.length; i++){\n    $('body').append(localStorage.getItem(localStorage.key(i)));\n}\n</code></pre>\n\n<p>If the order matters, you could store a JSON-serialized array:</p>\n\n<pre><code>localStorage.setItem(\"words\", JSON.stringify([\"Lorem\", \"Ipsum\", \"Dolor\"]));\n</code></pre>\n\n<p>The draft spec claims that any object that supports <a href=\"http://dev.w3.org/html5/spec/common-dom-interfaces.html#safe-passing-of-structured-data\">structured clone</a> can be a value.  But this doesn't seem to be supported yet.</p>\n\n<p>EDIT: To load the array, add to it, then store:</p>\n\n<pre><code>var words = JSON.parse(localStorage.getItem(\"words\"));\nwords.push(\"hello\");\nlocalStorage.setItem(\"words\", JSON.stringify(words));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>This works for me in Chrome:</p>\n\n<pre><code>for(var key in localStorage) {\n  $('body').append(localStorage.getItem(key));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Building on the previous answer here is a function that will loop through the local storage by key without knowing the key values. </p>\n\n<pre><code>function showItemsByKey() {\n   var typeofKey = null;\n   for (var key in localStorage) {\n       typeofKey = (typeof localStorage[key]);\n       console.log(key, typeofKey);\n   }\n}\n</code></pre>\n\n<p>If you examine the console output you will see the items added by your code all have a typeof string. Whereas the built-in items are either functions { [native code] } or in the case of the length property a number. You could use the typeofKey variable to filter just on the strings so only your items are displayed.</p>\n\n<p>Note this works even if you store a number or boolean as the value as they are both stored as strings.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In addition to all the other answers, you can use <strong>$.each</strong> function:</p>\n\n<pre><code>$.each(localStorage, function(key, value){\n\n  // key magic\n  // value magic\n\n});\n</code></pre>\n\n<p>Eventually, get the object with:</p>\n\n<blockquote>\n  <p><strong>JSON</strong>.parse(localStorage.getItem(localStorage.key(key)));</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>So, I was thinking I could just loop through localStorage like a normal object as it has a length. How can I loop through this?</p>\n\n<pre><code>localStorage.setItem(1,'Lorem');\nlocalStorage.setItem(2,'Ipsum');\nlocalStorage.setItem(3,'Dolor');\n</code></pre>\n\n<p>If I do a <code>localStorage.length</code> it returns <code>3</code> which is correct. So I'd assume a <code>for...in</code> loop would work.</p>\n\n<p>I was thinking something like:</p>\n\n<pre><code>for (x in localStorage){\n    $('body').append(localStorage[x]);\n}\n</code></pre>\n\n<p>But no avail. Any ideas?</p>\n\n<p>The other idea I had was something like</p>\n\n<pre><code>localStorage.setItem(1,'Lorem|Ipsum|Dolor')\nvar split_list = localStorage.getItem(1).split('|');\n</code></pre>\n\n<p>In which the <code>for...in</code> does work.</p>\n",
            "last_activity_date": 1422144152,
            "question_id": 3138564,
            "score": 26,
            "tags": [
                "javascript",
                "html5",
                "loops",
                "object",
                "local-storage"
            ],
            "title": "Looping through localStorage in HTML5 and JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You cannot set the window.location.href without reloading the page in javascript for security   reasons.</p>\n\n<p>From what I've seen some people are saying Google will index # urls but they will be not considered separate pages and I think that is not what you want. I also have very little experience with SEO. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can change the <code>location.hash</code> property, it will change the current anchor identifier without navigating away form the page, for example you could:</p>\n\n<pre><code>&lt;a href=\"http://mysite.com/cats\" id=\"cats\" class=\"ajaxLink\"&gt;Cats&lt;/a&gt;\n&lt;a href=\"http://mysite.com/dogs\" id=\"dogs\" class=\"ajaxLink\"&gt;Dogs&lt;/a&gt;\n</code></pre>\n\n<p>Then:</p>\n\n<pre><code>$('.ajaxLink').click(function (e) {\n  location.hash = this.id; // get the clicked link id\n  e.preventDefault(); // cancel navigation\n\n  // get content with Ajax...\n});\u200b\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>Google will index a hash if it has an exclamation mark in the form: <code>#!dogs</code></p>\n\n<p>It then assumes that these are AJAX-oriented:</p>\n\n<ul>\n<li><a href=\"http://www.google.com/support/webmasters/bin/answer.py?hl=en&amp;answer=174993\" rel=\"nofollow\">Google's FAQ about AJAX</a></li>\n<li><a href=\"https://developers.google.com/webmasters/ajax-crawling/docs/getting-started\" rel=\"nofollow\">Google's guide on how to make AJAX website crawlable</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>BenMills, noone mentioned location.href, it's about location.hash which does not require page reload.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Although simplicity is best, but if you just want to automate this process or make it genericise then you can use this lite plugin <a href=\"https://github.com/arpitremarkable/jquery.hashTag.js\" rel=\"nofollow\">jquery.hashTag.js</a></p>\n\n<pre><code>$('a').hashTag({\n    source: function() {\n      return $(this).attr('id');\n    }\n  });\n</code></pre>\n\n<p>Just put this snippet inside $(document).ready.</p>\n\n<p>It will do rest of the work itself.\nLike auto clicking on the link whose id was provided as the hash.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to build an ajax site without sacrificing SEO. My question is:\nIf I have link on my page like this:</p>\n\n<pre><code>   &lt;a href=\"http://mysite.com/cats\" id=\"cats\"&gt;Cats&lt;/a&gt;\n   &lt;a href=\"http://mysite.com/dogs\" id=\"dogs\"&gt;Dogs&lt;/a&gt;\n</code></pre>\n\n<p>...when each link is clicked I would like to update the address bar with the corresponding hashtag. So, if \"Cats\" link is clicked the current location will be <a href=\"http://mysite.com/#cats\">http://mysite.com/#cats</a> and I can use this to show my ajax content. If javascript is off or user is search engine, they will go directly to /cats</p>\n",
            "last_activity_date": 1391348811,
            "question_id": 2366481,
            "score": 26,
            "tags": [
                "javascript",
                "ajax"
            ],
            "title": "Attaching hashtag to URL with javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If the child takes the full width of the container excluding scrollbar (the default), then you can subtract the widths:</p>\n\n<pre><code>var child = document.querySelector(\".somethingBig\");\nvar scrollbarWidth = child.parentNode.offsetWidth - child.offsetWidth;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This function should give you width of scrollbar</p>\n\n<pre><code>function getScrollbarWidth() {\n    var outer = document.createElement(\"div\");\n    outer.style.visibility = \"hidden\";\n    outer.style.width = \"100px\";\n    outer.style.msOverflowStyle = \"scrollbar\"; // needed for WinJS apps\n\n    document.body.appendChild(outer);\n\n    var widthNoScroll = outer.offsetWidth;\n    // force scrollbars\n    outer.style.overflow = \"scroll\";\n\n    // add innerdiv\n    var inner = document.createElement(\"div\");\n    inner.style.width = \"100%\";\n    outer.appendChild(inner);        \n\n    var widthWithScroll = inner.offsetWidth;\n\n    // remove divs\n    outer.parentNode.removeChild(outer);\n\n    return widthNoScroll - widthWithScroll;\n}\n</code></pre>\n\n<p>Basic steps here are:</p>\n\n<ol>\n<li>Create hidden div (outer) with width set to '100px' and get offset width (should be 100) </li>\n<li>Force scroll bars to appear in div (outer) using CSS overflow property</li>\n<li>Create new div (inner) and append to outer, set its width to '100%' and get offset width</li>\n<li>Calculate scrollbar width based on gathered offsets</li>\n</ol>\n\n<p>Working example here: <a href=\"http://jsfiddle.net/UU9kg/17/\">http://jsfiddle.net/UU9kg/17/</a></p>\n\n<p><strong>Update</strong></p>\n\n<p>If you're using this on a Windows 8 (metro) App make sure you set the <a href=\"http://msdn.microsoft.com/en-us/library/windows/apps/hh441298.aspx\">-ms-overflow-style</a> property of the 'outer' div to <code>scrollbar</code>, otherwise the width will not be correctly detected. (code updated)</p>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>I've used next function to get scrollbar height/width:</p>\n\n<pre><code>function getBrowserScrollSize(){\n\n    var css = {\n        \"border\":  \"none\",\n        \"height\":  \"200px\",\n        \"margin\":  \"0\",\n        \"padding\": \"0\",\n        \"width\":   \"200px\"\n    };\n\n    var inner = $(\"&lt;div&gt;\").css($.extend({}, css));\n    var outer = $(\"&lt;div&gt;\").css($.extend({\n        \"left\":       \"-1000px\",\n        \"overflow\":   \"scroll\",\n        \"position\":   \"absolute\",\n        \"top\":        \"-1000px\"\n    }, css)).append(inner).appendTo(\"body\")\n    .scrollLeft(1000)\n    .scrollTop(1000);\n\n    var scrollSize = {\n        \"height\": (outer.offset().top - inner.offset().top) || 0,\n        \"width\": (outer.offset().left - inner.offset().left) || 0\n    };\n\n    outer.remove();\n    return scrollSize;\n}\n</code></pre>\n\n<p>This jQuery-based solutions works in IE7+ and all other modern browsers (including mobile devices where scrollbar height/width will be 0).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's an easy way using jQuery.</p>\n\n<pre><code>var scrollbarWidth = jQuery('div.withScrollBar').get(0).scrollWidth - jQuery('div.withScrollBar').width();\n</code></pre>\n\n<p>Basically we subtract the scrollable width from the overall width and that should provide the scrollbar's width. Of course, you'd want to cache the jQuery('div.withScrollBar') selection so you're not doing that part twice.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The following HTML will display a scroll bar on the right inside edge of div.container.</p>\n\n<p>Is it possible to determine the width of that scroll bar?</p>\n\n<pre><code>&lt;div class=\"container\" style=\"overflow-y:auto; height:40px;\"&gt;\n  &lt;div class=\"somethingBig\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1416902787,
            "question_id": 13382516,
            "score": 25,
            "tags": [
                "javascript"
            ],
            "title": "Getting scroll bar width using JavaScript"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>It is good practice to have separate different javascript files for different pages</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>You can follow your approach, but suppose your \"cocktail\" javascript file has 20k lines of code, and you include it in all you html files, even those that show a \"404\" or \"500\", wouldn't it use more unnecessary bandwidth?</p>\n\n<p>I opt for using different js for each HTML page and whatever is used across multiple pages dump it in a \"utils.js\" or whatever you want to call it, example</p>\n\n<pre><code>\\www\n  \\pages\n    \\index.html\n    \\dashboard.html\n    \\account.html\n    \\ ...\n  \\scripts\n    \\index.js &lt;- for index.html\n    \\dashboard.js &lt;- for dashboard.html\n    \\account.js &lt;- for account.html\n    \\ ...\n    \\utils.js|shared.js|sharedlib.js &lt;- used by all pages\n</code></pre>\n\n<p>so basically it will result in:</p>\n\n<ul>\n<li>1 request for the html</li>\n<li>1 for the page script</li>\n<li>1 for the shared script, if used</li>\n<li>n for css's, but I assume is 1</li>\n</ul>\n\n<p>This is just my two cents..</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Similar <a href=\"http://stackoverflow.com/questions/555696/put-javascript-in-one-js-file-or-break-it-out-into-multiple-js-files\">questions</a> have been already asked and the correct answer was and always will be </p>\n\n<blockquote>\n  <p>It depends on the situation.</p>\n</blockquote>\n\n<p>However, if your concern is about <a href=\"http://code.google.com/speed/page-speed/docs/rtt.html\">minimizing the round-trip time</a> (RTT) then it is certain that </p>\n\n<blockquote>\n  <p>Combining external scripts into as few files as possible cuts down on\n  RTTs and delays in downloading other resources.</p>\n</blockquote>\n\n<p>It is good to keep it <strong>as few as possible</strong>, but you don't necessarily have to keep it into one file strictly.</p>\n\n<p>Let's take a look at why it is so.</p>\n\n<blockquote>\n  <p>While partitioning code into modular software components is a good\n  engineering practice, importing modules into an HTML page one at a\n  time can drastically increase page load time. First, for clients with\n  an empty cache, the browser must issue an HTTP request for each\n  resource, and incur the associated round trip times. Secondly, most\n  browsers prevent the rest of the page from from being loaded while a\n  JavaScript file is being downloaded and parsed.</p>\n</blockquote>\n\n<p>These images show it more clearly why combining a number of JavaScript files into fewer output files can dramatically reduce latency:</p>\n\n<p><img src=\"http://i.stack.imgur.com/PPDjP.png\" alt=\"All files are downloaded serially, and take a total of 4.46 seconds to complete\">\n<em>All files are downloaded serially, and take a total of 4.46 seconds to complete.</em></p>\n\n<p>After collapsing the 13 js files into 2 files:\n<img src=\"http://i.stack.imgur.com/UMYEk.png\" alt=\"The same 729 kilobytes now take only 1.87 seconds to download\">\n<em>The same 729 kilobytes now take only 1.87 seconds to download</em></p>\n\n<p><strong>Edit after Clarification given by Siku-Siku.Com:</strong>\nSorry! I totally misunderstood your question. I don't know of any <strong>better</strong> way for making a particular (chunk of) script run only when the corresponding page is loaded. I think your way is good enough.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>In our organization we have a good guideline as :</p>\n\n<ul>\n<li>one utility.js for the most of the generalized functions and</li>\n<li>some page specific javascript files that could be same for one or\nmore pages.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Your suggestion seems OK. I would however use an <a href=\"http://ejohn.org/blog/html-5-data-attributes/\" rel=\"nofollow\">HTML 5 data- attribute</a> to tag every page like this:</p>\n\n<pre><code>&lt;body data-title=\"my_page_title\"&gt;\n</code></pre>\n\n<p>You can then write conditional javascript code by checking this property (jQuery 1.4.3 onwards):</p>\n\n<pre><code>if ($(\"body\").data(\"title\") === \"my_page_title\") {\n    // Place the logic pertaining to the page with title 'my_page_title' here...\n}\n</code></pre>\n\n<p>This allows you to systematically group all code for a certain page in a sensible way</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Your question is asking how to only load chunks of your scripts based upon a particular page.  However, since your stated goal is minimizing http requests (and traffic, I assume), I think my unique (complicated) implementation is at least relevant to this question, if not a good alternative/complement to your approach.</p>\n\n<p>I use this in an embedded application where I combine all javascript files into one large one for reducing http requests.  I had to figure out a caching method as well.  A 120kb javascript file in addition to several decently-sized images take a while to load when using a barebones 50kb webserver.</p>\n\n<p>First off, I use <a href=\"http://developer.yahoo.com/yui/compressor/\" rel=\"nofollow\">YUI Compressor</a> to compress my javascript files, as that's an easy way to save bandwidth.</p>\n\n<p>A cool \"feature\" I discovered was if you link to anything (css, js, img) like the following, you'll simply load the file and ignore the parameters past the '?' in 'src':</p>\n\n<pre><code>&lt;script type=\"text/Javascript\" src=\"js/all.js?2382a97f099f42cc43c1b616cd24f281\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Now, that seemingly random jumble of numbers and letters is actually the md5 checksum of the javascript file!  I then modified my server's response header for the correlated extensions (css, js, img, etc) to never expire.  This header is not sent for html files, as we always want the latest versions of those.</p>\n\n<pre><code>Cache-Control:max-age=290304000\n</code></pre>\n\n<p>This means clients will load the javascript file once and only once until the checksum changes.  Caching works by looking up the entire request, including file parameters.</p>\n\n<p>I'm actually compiling my html/js/css/image files in with C code, so I have a perl script automatically insert those md5 checksums into the html files before compiling.  This obviously won't work in your case, but you can use any number of ways to handle it, as long as you have a server-side language to aid you.  For example, you can have php calculate the checksum on-the-fly, or you can have php store the checksums in a database or flat file to easily look them up.  In order to flag php to recalculate the checksum, you could check the filetime, or delete the database entries/flat file.</p>\n\n<p>I realize this is a lot of upfront work and might not be what you're after, but it works <strong>wonderfully</strong> for me.  The performance gains for me are incredible.  The first page load is awfully slow (8.5 seconds), but after that, all your scripts, css, and images are all cached now.  New page loads within the same application drop to ~300ms.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Another option is that you could have, within the HTML code</p>\n\n<pre><code>&lt;script&gt;\n    callYourJSFunctionHere();  /*Things you would want to happen on Page load*/\n&lt;/script&gt;\n</code></pre>\n\n<p>This will follow the normal flow of the page.  Therefore if you are playing with elements on the page, you will need to place this <code>&lt;script&gt;</code> portion at the bottom of the page, after all the elements have been loaded by the browser.</p>\n\n<p>I'm not 100% sure this is more efficient then the current solution you have, but on the other hand, it will be telling someone looking at your HTML page what JavaScript will be run when the page loads.  This might be helpful in terms of maintenance down the road.... no so much a guessing game as to what script runs when the page loads.</p>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is going to be a high level overview, but I recommend using <a href=\"http://documentcloud.github.com/backbone/\" rel=\"nofollow\">Backbone</a> to organize the logic for each \"view\" (or page.) I use a root element and change the class of that element to switch between the other views (or states) of the layout. You can then organize the secondary styles by class and keep a primary style under the ID.</p>\n\n<p>HTML</p>\n\n<pre><code>&lt;div id=\"layout\" class=\"default\"&gt;\n    &lt;!-- PUT DEFAULT HTML IN HERE --&gt;\n&lt;/div&gt;\n&lt;script id=\"shareTemplate\" type=\"text/html\"&gt;\n    &lt;!-- PUT SHARE HTML IN HERE --&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>CSS</p>\n\n<pre><code>#layout {\n    /* primary style */\n}\n\n#layout.share {\n   /* secondary style */\n}\n</code></pre>\n\n<p>JavaScript</p>\n\n<pre><code>window.LayoutView = Backbone.View.extend({\n\n    el: \"#layout\",\n\n    shareTemplate: _.template($(\"#shareTemplate\").html()),\n\n    initialize: function() {\n        this.render(shareTemplate, data);\n        this.el.className = \"share\";\n    },\n\n    render: function(template, data) {\n        $(this.el).html(template(data));\n        return this;\n    }\n\n});\n\nwindow.Layout = new LayoutView;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As you've rightly mentioned, the idea of splitting / combining files really <em>does</em> depend on the situation.</p>\n\n<p><strong>I don't think there can be a better solution</strong> for what you're doing, as I have seen many big websites implement a similar strategy albeit more for CSS than js.</p>\n\n<p>Eg (An excerpt from facebook):</p>\n\n<pre><code>&lt;body class=\"hasLeftCol home fbx hasSlimHeader safari4 win Locale_en_US defaultScrollbar\"&gt;\n</code></pre>\n\n<p>There is one more great advantage you can reap out of this. You can selectively apply some JS code into groups of pages using the class attribute.</p>\n\n<p>ie. </p>\n\n<pre><code>if $('body.pagesThatHaveThisClass').length &gt; 0)\n{.... code ...}\n\nif $('body#singlePageWithThisId').length &gt; 0)\n{.... code ...}\n</code></pre>\n\n<p>Else, there is a technique that many JS/jQ based menus use to automatically give a different style to the current page. You can match the window.location to specific a address.</p>\n\n<p>ie.</p>\n\n<pre><code>if (window.top.location.href == 'http://domain.com/mypage1.html')\n{ .... code ....}\n</code></pre>\n\n<p>or even</p>\n\n<pre><code>switch (window.top.location.href)\n{\n   case 'http://domain.com/mypage1.html' :\n    { .... code ....}\n\n   case 'http://domain.com/mypage2.html' :\n    { .... code ....}\n\n}\n</code></pre>\n\n<p>I would still prefer your technique as you can group code for multiple pages together. The only reason I can think of for using the second method is when the JS people don't have access to the HTML of the page to change the class / id etc.</p>\n\n<p>Hope this is what you were looking for!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>How about testing <code>window.location</code>? That seems the obvious way for me.</p>\n\n<p>Or as you already seem to do, test for the required elements to be there. That is a rather robust method, I see nothing wrong with that.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Ok. Lets hope, code example will say it better, than wall of text:</p>\n\n<hr>\n\n<p>your <code>one-and-only.js</code> file:</p>\n\n<pre><code>var MY_SITE = {\n    // you have one namespace-object where you hold all your stuff\n    main_page: {\n        // inside you have smaller chunks, for specific pages or widgets\n        // this one is for main page\n        _init: function () {\n        ... \n        },\n        ... \n        showSplashScreen: function () {\n        ...\n        }      \n    },\n    ... \n    // but there are other pages\n    contacts: { ... },\n    // or widgets\n    cool_menu: { ... },\n    // and maybe you want to put common functions into dedicated block\n    global_utilities: { ... },\n    // and of course - the loader\n    _start: function () {\n        // here we simply call one _init of the page module that was specified \n        this[PAGE_TYPE]._init(); \n        // and more tricky stuff - we can search the page for elements\n        // that contain special data-attribute, collect them\n        var widgets = $('[data-our-widget]').each().getAttributeValue( 'data-or-widget' );\n       // and then _init each of those widgets just like we did with main page \n        widgets.forEach( function (v) {\n            this[v]._init();\n        }\n    }\n};\ndocument.on('ready', MY_SITE.start); // here we assume some random js framework\n</code></pre>\n\n<p>your <code>&lt;script&gt;</code> tags on the page:</p>\n\n<pre><code>&lt;script&gt;var PAGE_TYPE = 'main_page';&lt;/script&gt;\n&lt;script src=\"one-and-only.js\" /&gt;\n</code></pre>\n\n<p>your <em>'magic'</em> elements on the page:</p>\n\n<pre><code>&lt;div id=\"whatever\" data-our-widget=\"cool_menu\"&gt; ... &lt;/div&gt;\n</code></pre>\n\n<hr>\n\n<p><strong>Disclaimer:</strong> <em>This is high level overview! Implementation details may and should vary, depending on <strong>your</strong> needs.</em></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Based on the assumption that all of the different pages on your site is categorically or at least logically grouped into different \"view models\", with a different view model for a different type of page (e.g. \"search results\", \"blogposts\", \"front page\", \"single blogpost\", etcetera), you could have a single javascript file that contains the scripts in common for all of your site, and one specific for each view model (if you deem it necessary).</p>\n\n<p>You could then have the server insert the name of the view model into, for instance, a HTML data-tag, for later use by JavaScript, and an additional script tag after the main script library.</p>\n\n<p>For instance:</p>\n\n<pre><code>&lt;head&gt;\n  &lt;!--\n    Two JavaScript files, one for the common functionality,\n    and one for the view model specfic\n  --&gt;\n  &lt;script type=\"text/javascript\" src=\"path/to/scriptslib.js\"&gt;&lt;/script&gt;\n  &lt;script type=\"text/javascript\" src=\"path/to/viewmodel.front_page.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body data-view-model=\"front_page\"&gt;\n  ...\n&lt;/body&gt;\n</code></pre>\n\n<p>In <code>scriptslib.js</code>:</p>\n\n<pre><code>var\n  GlobalSettings = {},\n  ViewModel = {};\n\n$(function () {\n  // Save the view model in a variable when the body's been loaded\n  GlobalSettings.viewModel = $(\"body\").attr(\"data-view-model\");\n  // Assuming that the viewmodel JavaScript file has been loaded, call a method that it'll have by convention here\n  ViewModel.initialize();\n  // Additionally, you can later test for specific view models and perform necessary actions, if needed\n  if (viewModel === \"front_page\") {\n    // ...\n  }\n});\n</code></pre>\n\n<p>Then, in <code>viewmodel.front_page.js</code> (or any other view model file):</p>\n\n<pre><code>ViewModel.FrontPage = {\n  // data and methods specific for this view model\n}\nViewModel.initialize = function () {\n  // do stuff specific for this view model\n  this.FrontPage.someFunction();\n};\n</code></pre>\n\n<p>Note, that the way I've described the approach here is for sites that rely on page reloads for shifting between pages. If you were using Ajax to shift between pages, you'd want JavaScript to dynamically load the new view models and execute them.</p>\n\n<p>Hope this could work for you ;)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I like <a href=\"http://paulirish.com/2009/markup-based-unobtrusive-comprehensive-dom-ready-execution/\">Paul Irish's approach</a>... you don't have to follow it exactly, but the general idea is a very solid one.</p>\n\n<p>It might look something like this for your example</p>\n\n<p><strong>Html</strong></p>\n\n<pre><code>&lt;body id=\"share\"&gt;\n</code></pre>\n\n<p><strong>Your page specific javascript</strong></p>\n\n<pre><code>YourNamespace = {\n  share : {\n    init : function(){\n      // Place the logic pertaining to the page with ID 'share' here...\n    }\n  }\n}\n</code></pre>\n\n<p><strong>Paul Irish's Javascript that makes the magic happen</strong></p>\n\n<pre><code>UTIL = { \n  fire : function(func,funcname, args){\n    var namespace = YourNamespace;  // indicate your obj literal namespace here\n\n    funcname = (funcname === undefined) ? 'init' : funcname;\n    if (func !== '' &amp;&amp; namespace[func] &amp;&amp; typeof namespace[func][funcname] == 'function'){\n      namespace[func][funcname](args);\n    }\n  }, \n\n  loadEvents : function(){\n    var bodyId = document.body.id;\n\n    // hit up common first.\n    UTIL.fire('common');\n\n    // do all the classes too.\n    $.each(document.body.className.split(/\\s+/),function(i,classnm){\n      UTIL.fire(classnm);\n      UTIL.fire(classnm,bodyId);\n    });\n\n    UTIL.fire('common','finalize');\n  }\n};\n\n// kick it all off here \n$(document).ready(UTIL.loadEvents);\n</code></pre>\n\n<p>So the line you see directly above will kick off the following</p>\n\n<pre><code>YourNamespace.common.init()\nYourNamespace.share.init()\nYourNamespace.common.finalize()\n</code></pre>\n\n<p>Have a read of his blog post and a few of the variations linked from it.</p>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>I typically put all the JavaScript scripts into one file e.g. <code>scripts.js</code> (the less HTTP request, the better). So, as expected, some scripts are needed for some pages, some aren't.</p>\n\n<p>To target a specific page, I use something like:</p>\n\n<pre><code>if ($(\"body#share\").length &gt; 0) {\n    // Place the logic pertaining to the page with ID 'share' here...\n}\n\n// The file / script continues...\n</code></pre>\n\n<p>Other or better suggestions? Thanks!</p>\n\n<p><strong>Clarification:</strong> I was <em>not</em> looking for the pros / cons between consolidating multiple JS files into one big file and keeping multiple separate JS files. The answer for this is surely 'depends on the situation' (we know that). My question is, assuming all my JS logic is placed into one big file, how do I make a particular (chunk of) script runs <em>only</em> when the corresponding page is loaded? One way I used to do is using <code>if ($('#id-of-target-element')) { /* run the script */}</code>; is there a better way?</p>\n",
            "last_activity_date": 1327910449,
            "question_id": 8410298,
            "score": 23,
            "tags": [
                "javascript",
                "filesystems"
            ],
            "title": "One JS File for Multiple Pages"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.tvidesign.co.uk/blog/improve-your-jquery-25-excellent-tips.aspx\" rel=\"nofollow\">jQuery - 25 Excellent Tips</a></p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p><a href=\"http://broofa.com/Tools/JSLitmus/\">JSLitmus</a> looks like something I might try out.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>By using Firebug you can go into console tab, then click the firebug-icon in the upper left corner (called \"Firebug options\"). Then click on the option \"Profile Javascript\", after that just do what you want to measure, for example clicking on a javascript button, draging a Jquery dragable object or what ever you want that runs a bit of javascript code. When you have executed the javascript you want to measure go back to the same menu option and once again click \"Profile javascript\" (so that it gets unchecked). Now the console tab will be filled up with all the actions you previously ran aswell as the time it took to execute each method etc (and total time aswell).</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'll say right off the bat that this question is NOT about load times; I know about YSlow, the Firebug profiler, and whatever best practices and tools googlage reveals about page component load times.</p>\n\n<p>I am asking what good profiling tools or libraries or add-ons there are for measuring actual execution of Javascript (specifically jQuery), insofar as improving actual user experience goes.  For example, measuring the time from click to visible result on-screen, or helping to determine why a jQuery-based hover effect has slow responsiveness.</p>\n\n<p>We are noticing that when the page/DOM grows relatively large (say, 70kb to 150kb worth of HTML, excluding external CSS, JS and images), and/or has very deep nesting (14-25 levels from &lt;body&gt; to deepest tag), jQuery events fire more slowly, or the whole JS user experience gets sluggish.</p>\n\n<p>I also have googled and learned about best practices for selectors (e.g. selecting by id is much faster than selecting with classes), I will be implementing these practices.  However, once all jQuery is fully loaded, and all events hooked, we still need to improve the actual event firing and execution.</p>\n\n<p>I have implemented some event delegation already, and I do get the sense that having fewer hooked DOM elements makes things slightly better, but the overall experience still needs improvement with large pages.  I should mention that, since the site is AJAX heavy (lots is loaded via AJAX as opposed to initial HTTP hit), we are making heavy use of livequery instead of the plain jQuery event hooks.  I should also mention that we are slightly more focused on IE(7+) performance, but also require good Firefox performance.</p>\n\n<p>As I develop and make changes, I figure I need a way to measure speeds pre- and post-change, so I can have concrete numbers on whether or not a change improves anything.</p>\n\n<p>Any tips, tools, libs, blog posts, URLs?</p>\n",
            "last_activity_date": 1363309269,
            "question_id": 400836,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "optimization",
                "performance"
            ],
            "title": "Javascript (jQuery) performance measurement and best practices (not load time)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Using PhoneGap the webpage is opened using the <em>file://</em> protocol</p>\n\n<p>With <em>file://</em> protocol no origin is set to the WebSocket connection, so the browser will raise that security exception if the server doesn't set the <em>Access-Control-Allow-Origin</em> header to the response enabling <a href=\"http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\">CORS</a></p>\n\n<p>Consider using some PhoneGap plugin like the following, which uses native code to handle the connection, but enables a (hopefully standard-compatible) WebSocket API inside the webviews</p>\n\n<p>Android: <a href=\"https://github.com/anismiles/websocket-android-phonegap\">https://github.com/anismiles/websocket-android-phonegap</a></p>\n\n<p>iPhone: <a href=\"https://github.com/remy/PhoneGap-Plugin-WebSocket\">https://github.com/remy/PhoneGap-Plugin-WebSocket</a></p>\n\n<p>Those plugins are just the first ones I found, not sure how much they are actively developed and stable</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>So if the webpage opened with the file:// url protocol in PhoneGap was to send the header \"Access-Control-Allow-Origin: *\"  -- theoretically it should all work with socket.io?</p>\n\n<p>(it's possible to do so through NSURLProtocol, but I didn't want to go down this rabbit hole without knowing the fix)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You have to add the socketio host to the \"ExternalHosts\" key in PhoneGap.plist.</p>\n\n<p>See <a href=\"http://wiki.phonegap.com/w/page/41631150/PhoneGap%20for%20iOS%20FAQ\">Faq</a>:</p>\n\n<blockquote>\n  <p>Q. Links to and imported files from external hosts don't load?</p>\n  \n  <p>A. The latest code has the new white-list feature. If you are referencing external hosts,\n  you will have to add the host in PhoneGap.plist under the \"ExternalHosts\" key. Wildcards are ok.\n  So if you are connecting to \"<a href=\"http://phonegap.com\">http://phonegap.com</a>\", you have to add \"phonegap.com\" to the list (or use the wildcard \"*.phonegap.com\"\n  which will match subdomains as well). (Note: If    you open the plist\n  file in Xcode, you won't need to fiddle with the XML syntax.)</p>\n</blockquote>\n\n<p>For android you have to edit cordova.xml and add access to the socketio host:</p>\n\n<pre><code>&lt;access origin=\"HOST*\"/&gt; \n</code></pre>\n\n<hr>\n\n<p>index.html (with socketio example):</p>\n\n<pre><code>...\n&lt;script src=\"HOST/socket.io/socket.io.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n    var socket = io.connect('HOST');\n    socket.on('news', function (data) {\n        socket.emit('my other event', { my: 'data' });\n    });\n&lt;/script&gt;\n...\n</code></pre>\n\n<hr>\n\n<p>app.js (server side javascript / basic socketio example):</p>\n\n<pre><code>var io = require('socket.io').listen(80);\n\nio.sockets.on('connection', function (socket) {\n\nsocket.emit('news', { hello: 'world' });\n    socket.on('my other event', function (data) {\n        console.log(data);\n    });\n});\n</code></pre>\n\n<hr>\n\n<p>The HOST you have to replace with hostname of your socket.io server!</p>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>When I try to use Socket.io with PhoneGap I get this error: </p>\n\n<p>(on iOS where socket.io should be supported)</p>\n\n<pre><code>Origin null is not allowed by Access-Control-Allow-Origin.\n</code></pre>\n\n<p>This is because my app is served via <code>file://</code> protocol. What can I do to get around this?</p>\n\n<p>Thanks!!</p>\n",
            "last_activity_date": 1366371179,
            "question_id": 10738073,
            "score": 17,
            "tags": [
                "javascript",
                "node.js",
                "cordova",
                "socket.io"
            ],
            "title": "Socket.io + PhoneGap"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>You have found Meteor.render but what you are missing is the template loading.\nIn the docs it mentions that you can call Template.foo() to return the HTML for a template.</p>\n\n<p><a href=\"http://docs.meteor.com/#template_call\" rel=\"nofollow\">http://docs.meteor.com/#template_call</a></p>\n\n<p>Putting that together you access the template foo or any other using bracket access so:</p>\n\n<pre><code>var templateName = \"foo\";\nvar fragment = Meteor.render( function() {\n    return Template[ templateName ](); // this calls the template and returns the HTML.\n});\n</code></pre>\n\n<p>Then fragment is your Reactive fragment, so that your template can continue to receive live updates. Your fragment now needs placing in the web page (I use jQuery, so this example does as well):</p>\n\n<pre><code>$(\"#htmlnode\").html( fragment );\n</code></pre>\n\n<p>$(\"#htmlnode\") is just a node in your DOM where you want the template rendered. And you now have the rendered content in your web page.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I'm just doing it like this, no jQuery required:</p>\n\n<p><strong>EDITED</strong></p>\n\n<pre><code>Template.mainContent.showContentFromRouter = function() {\n    return Template[Meteor.Router.page()]();\n};\n</code></pre>\n\n<p>In this case I'm using the Meteor Router, and return whatever template that I choose to (from the Router), but you could just do this:</p>\n\n<pre><code>Template.mainContent.showDynamicContent = function() {\n    return Template['someTemplateYouveDefined']();\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Meteor 0.8.x Legacy</strong></p>\n\n<p>Using <a href=\"http://stackoverflow.com/a/12986397/792406\">Joc's</a> answer as a guide, \nI've achieved similar using <a href=\"http://docs.meteor.com/#template_call\" rel=\"nofollow\">http://docs.meteor.com/#template_call</a>, but using a helper instead, as suggested by the docs:</p>\n\n<blockquote>\n  <p>When called inside a template helper, the body of Meteor.render, or other settings where reactive HTML is being generated, the resulting HTML is annotated so that it renders as reactive DOM elements</p>\n</blockquote>\n\n<p>My client.js looks a bit like this:</p>\n\n<pre><code>Template.myPageTemplate.helpers({\n  dynamicTemplate: function() {\n    // conditional logic can be added here to determine which template to render\n    return Template.myDynamicTemplate();\n  }\n});\n</code></pre>\n\n<p>and my html looks like this:</p>\n\n<pre><code>&lt;template name=\"myPageTemplate\"&gt;\n  &lt;h1&gt;My Template&lt;/h1&gt;\n  {{{dynamicTemplate}}}\n&lt;/template&gt;\n\n&lt;template name=\"myDynamicTemplate\"&gt;\n  &lt;h1&gt;My Dynamic Template&lt;/h1&gt;\n&lt;/template&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Update for blaze:</p>\n\n<p><a href=\"https://github.com/meteor/meteor/wiki/Using-Blaze#templatefoo-is-not-a-function-and-does-not-return-a-string\" rel=\"nofollow\">https://github.com/meteor/meteor/wiki/Using-Blaze#templatefoo-is-not-a-function-and-does-not-return-a-string</a></p>\n\n<p>Dynamically render a template with a given data context</p>\n\n<p>Old:</p>\n\n<pre><code>{{dynamicTemplate name=\"templateName\" data=dataContext}}\n\nTemplate.foo.dynamicTemplate = function (opts) {\n  return Template[opts.name](opts.data);\n};\n</code></pre>\n\n<p>New: (Notably, in Blaze, keyword arguments to inclusion or block helpers are bundled into a single object which becomes the new data context)</p>\n\n<pre><code>{{&gt; dynamicTemplate name=\"templateName\" data=dataContext}}\n\n&lt;template name=\"dynamicTemplate\"&gt;\n  {{#with chooseTemplate name}}\n    {{#with ../data}}  {{! original 'data' argument to DynamicTemplate}}\n      {{&gt; ..}}         {{! return value from chooseTemplate(name) }}\n    {{/with}}\n  {{/with}}\n&lt;/template&gt;\n\nTemplate.dynamicTemplate.chooseTemplate = function (name) {\n  return Template[name];\n}\n</code></pre>\n\n<p>By the way, I don't really played with it, but this is what I took from the new blaze docs. So I think it should be the way to do it ;)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Based on hillmark's answer, this is the easiest it could get:</p>\n\n<pre><code>Template.main.template = function() {\n  if (some_condition) {\n    return Template.A();\n  } else {\n    return Template.B();\n  }\n};\n</code></pre>\n\n<p>With the corresponding .html</p>\n\n<pre><code>&lt;body&gt;\n    {{&gt; main}}\n&lt;/body&gt;\n\n&lt;template name=\"main\"&gt;\n    {{{template}}}\n&lt;/template&gt;\n\n&lt;template name=\"A\"&gt;\n    &lt;h1&gt;Template A&lt;/h1&gt;\n&lt;/template&gt;\n\n&lt;template name=\"B\"&gt;\n    &lt;h1&gt;Template B&lt;/h1&gt;\n&lt;/template&gt;\n</code></pre>\n\n<p><strong>Edit</strong>\nDoesn't work in Meteor 0.8.0</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>for me the easiest way was to just create a function get_dynamic_template, so something like:</p>\n\n<pre><code>var a= get_dynamic_template(template_name,data);\n</code></pre>\n\n<p>which returns what can be rendered as a normal variable {{a}}</p>\n\n<p>The code for this function is quite simple:</p>\n\n<pre><code>var get_dynamic_template = function(template_name,data)\n{\n\n      return function(){\n        return new Handlebars.SafeString(\n          UI.toHTML(\n               Template[template_name].extend({data: function () { return data; }}))\n          );\n      };\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p><strong>Meteor 0.9.x New API</strong></p>\n\n<p>Dan Dascalescu pointed out Meteor now has built-in dynamic templates! This is nice because you do not need to include the extra code as seen in previous versions.</p>\n\n<pre><code>{{&gt; Template.dynamic template=template [data=data] }}\n</code></pre>\n\n<p><strong>For Meteor 0.8.x Legacy</strong></p>\n\n<p>Dynamic Template <em>Without</em> Data: Boris Kotov's updated Blaze (0.8.0) answer is on the right track (taken from the latest docs), but it doesn't work as-is for me. I got the following to work:</p>\n\n<pre><code>{{&gt; dynamicTemplate name=myDynName}}\n\n&lt;template name=\"dynamicTemplate\"&gt;\n    {{#with chooseTemplate name}}\n        {{&gt; template}}\n   {{/with}}\n&lt;/template&gt;\n\nTemplate.dynamicTemplate.chooseTemplate = function (name) {\n    return { template: Template[name] };\n};\n</code></pre>\n\n<p>I hope there is a simpler solution, but I needed to wrap the Template in a JSON as shown. Maybe this will help someone else to move forward.</p>\n\n<p>Dynamic Template <em>With</em> Data: If you have and want data to be dynamic, be sure to make a helper method that can react. Be sure to do a Session.set() somewhere to see the effect.</p>\n\n<pre><code>// Inside \"myContainingTemplate\"\n{{&gt; dynamicTemplateWithData name=myDynName data=myDataHelper}}\n\n&lt;template name=\"dynamicTemplateWithData\"&gt;\n    {{#with chooseTemplate name}}\n        {{#with ../data}}\n            {{&gt; ..}}\n        {{/with}}\n    {{/with}}\n&lt;/template&gt;\n\nTemplate.dynamicTemplateWithData.chooseTemplate = function (name) {\n    return Template[name];\n};\n\nTemplate.myContainingTemplate.helpers({\n    myDataHelper: function () {\n        Session.get('myReactiveKey');\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>This would handl dynamic templates both with and without data: \n(requires Blaze/ Meteor 0.8)</p>\n\n<pre><code>{{&gt; dynamicTemplate name=templateName}}\n\n&lt;template name=\"dynamicTemplate\"&gt;\n    {{#with chooseTemplate name }}\n        {{#if ../data}}\n            {{#with ../data }}\n                {{&gt; .. }}\n            {{/with}}\n        {{else}}\n            {{&gt; this}}\n        {{/if}}\n    {{/with}}\n&lt;template name=\"dynamicTemplate\"&gt;\n</code></pre>\n\n<p>template javascript:</p>\n\n<pre><code>Template.dynamicTemplate.chooseTemplate = function (name) {\n    return Template[name];\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>From <a href=\"https://github.com/meteor/meteor/wiki/Using-Blaze\" rel=\"nofollow\">https://github.com/meteor/meteor/wiki/Using-Blaze</a></p>\n\n<pre><code>{{&gt; post}}\n\nTemplate.foo.helpers({\n  post: function () {\n    return Template[this.postName];\n  }\n});\n</code></pre>\n\n<p>Template inclusions now search the namespace of helpers and data for template objects, so it's easy to programmatically choose which template to use. This is a powerful feature, and will allow patterns like assigning one template as a helper of another so that it can be overridden.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Here's how to dynamically render templates, as of Meteor 0.9.4 - 1.0. All other answers were obsolete at the time of this writing.</p>\n\n<p>Let's say you're editing a bunch of records, or creating a new one, and want to render either the <code>update</code> template, or the <code>new</code> template, based on some Session variables.</p>\n\n<p>There are two ways to do this:</p>\n\n<p>1) This is the <strong>officially recommended method for Meteor 0.9.4 or newer</strong>:</p>\n\n<pre><code>&lt;template name=\"records\"&gt;\n  {{&gt; Template.dynamic template=whichOne}}\n&lt;/template&gt;\n\n&lt;template name=\"recordUpdate\"&gt;\n  ...\n&lt;/template&gt;\n\n&lt;template name=\"recordNew\"&gt;\n  ...\n&lt;/template&gt;\n\nTemplate.records.helpers({\n  whichOne: function () {\n    return Session.get('edit') ? 'recordUpdate' : 'recordNew'\n    // note that we return a string - per http://docs.meteor.com/#template_dynamic\n  }\n});\n</code></pre>\n\n<p>2) This works in various Meteor versions, but isn't recommended officially because it's unclear that the template is chosen dynamically:</p>\n\n<pre><code>&lt;template name=\"records\"&gt;\n  {{&gt; whichOne}}\n&lt;/template&gt;\n\n{{! Note how \"whichOne\" is indistinguishable from a constant template name... }}\n{{  ...like \"recordUpdate\" or \"recordNew\" below. }}\n\n&lt;template name=\"recordUpdate\"&gt;\n  ...\n&lt;/template&gt;\n\n&lt;template name=\"recordNew\"&gt;\n  ...\n&lt;/template&gt;\n\nTemplate.records.helpers({\n  whichOne: function () {\n    return Session.get('edit') ? Template.recordUpdate : Template.recordNew\n    // note that we return a Template object, not a string\n  }\n});\n</code></pre>\n\n<p>In any case, to pass data to the template, use:</p>\n\n<pre><code>{{&gt; Template.dynamic template=whichOne data=myData}}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>I would like the ability to load templates dynamically without explicitly specifying the template.</p>\n\n<p>As an example:</p>\n\n<pre><code>&lt;template name=\"foo\"&gt;\n&lt;/template&gt;\n</code></pre>\n\n<p>where 'foo' is the template, I would like the ability to load it dynamically by calling some method:</p>\n\n<pre><code>Meteor.render(Meteor.loadTemplate('foo'));\n</code></pre>\n\n<p>Is this possible?</p>\n",
            "last_activity_date": 1424822760,
            "question_id": 12968808,
            "score": 10,
            "tags": [
                "javascript",
                "meteor"
            ],
            "title": "Dynamically loading templates in Meteor.js"
        },
        {
            "answer_count": 16,
            "answers": [
                {
                    "body": "<p><code>\\n</code> will put a new line in - <code>\\n</code> being a control code for new line.</p>\n",
                    "is_accepted": true,
                    "score": 221
                },
                {
                    "body": "<pre><code>alert(\"some text\\nmore text in a new line\");\n</code></pre>\n\n<p>Output:</p>\n\n<blockquote>\n  <p><code>some text</code><br>\n  <code>more text in a new line</code></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Just to inform, the \\n only works with double quotes.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>you have to use double quotes to display special char like \\n \\t etc... in js alert box\nfor exemple in php script:</p>\n\n<pre><code>$string = 'Hello everybody \\n this is an alert box';\necho \"&lt;script&gt;alert(\\\"$string\\\")&lt;/script&gt;\";\n</code></pre>\n\n<p>But a second possible problem arrives when you want to display a string specified in double quoted. </p>\n\n<p>see <a href=\"http://www.php.net/manual/en/language.types.string.php\">link text</a></p>\n\n<p>If the string is enclosed in double-quotes (\"), PHP will interpret more escape sequences for special characters</p>\n\n<p>escape sequences \\n is transformed as 0x0A ASCII Escaped character and this character is not displayed in the alert box. The solution consists in to escape this special sequence:</p>\n\n<pre><code>$s = \"Hello everybody \\\\n this is an alert box\";\necho \"&lt;script&gt;alert(\\\"$string\\\")&lt;/script&gt;\";\n</code></pre>\n\n<p>if you don't know how the string is enclosed you have to transform special characters to their escape sequences</p>\n\n<pre><code>$patterns = array(\"/\\\\\\\\/\", '/\\n/', '/\\r/', '/\\t/', '/\\v/', '/\\f/');\n$replacements = array('\\\\\\\\\\\\', '\\n', '\\r', '\\t', '\\v', '\\f');\n$string = preg_replace($patterns, $replacements, $string);\necho \"&lt;script&gt;alert(\\\"$string\\\")&lt;/script&gt;\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Just in case this helps anyone, when doing this from C# code behind I had to use a double escape character or I got an \"unterminated string constant\" JavaScript error:</p>\n\n<pre><code>ScriptManager.RegisterStartupScript(this, this.GetType(), \"scriptName\", \"alert(\\\"Line 1.\\\\n\\\\nLine 2.\\\");\", true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In C# I did:</p>\n\n<pre><code>alert('Text\\\\n\\\\nSome more text');\n</code></pre>\n\n<p>It display as:</p>\n\n<blockquote>\n  <p>Text  </p>\n  \n  <p>Some more text</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Works with <code>\\n</code> but if the script is into a java tag you must write <code>\\\\\\n</code></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;alert('text\\ntext');&lt;/script&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;h:commandButton action=\"#{XXXXXXX.xxxxxxxxxx}\" value=\"XXXXXXXX\" \n    onclick=\"alert('text\\\\\\ntext');\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>alert(\"text \" + '\\n' + \"new Line Text\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>A new line character in javascript can be achieved by using <code>\\n</code></p>\n\n<p>This can be done using </p>\n\n<pre><code>alert(\"first line \\n second line \\n third line\");\n</code></pre>\n\n<p>Output :</p>\n\n<blockquote>\n  <p>first line</p>\n  \n  <p>second line</p>\n  \n  <p>third line</p>\n</blockquote>\n\n<p>here is a <a href=\"http://jsfiddle.net/3bVpr/\" rel=\"nofollow\">jsfiddle</a> prepared for the same.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>List of Special Character codes in JavaScript:</p>\n\n<pre><code>Code    Outputs\n\\'  single quote\n\\\"  double quote\n\\\\  backslash\n\\n  new line\n\\r  carriage return\n\\t  tab\n\\b  backspace\n\\f  form feed\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Thanks for the hints.  Using the \"+\" sign is the only way I could get it to work.  This is the last line of a function that adds some numbers.  I'm just learning JavaScript myself:</p>\n\n<pre><code>alert(\"Line1: The sum is  \" + sum + \"\\n\" + \"Line 2\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>\\n</code> won't work if you're inside java code though:</p>\n\n<pre><code>&lt;% System.out.print(\"&lt;script&gt;alert('Some \\n text')&lt;/script&gt;\"); %&gt;\n</code></pre>\n\n<p>I know its not an answer, just thought it was important.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I used: \"\\n\\r\" - it only works in double quotes though.</p>\n\n<pre><code>var fvalue = \"foo\";\nvar svalue = \"bar\";\nalert(\"My first value is: \" + fvalue + \"\\n\\rMy second value is: \" + svalue);\n\nwill alert as:\n\nMy first value is: foo\nMy second value is: bar\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>use the new line character of a javascript instead of '\\n'.. \neg: \"Hello\\nWorld\" use \"Hello\\x0AWorld\" \nIt works great!!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Java Script is a Object Based Programming Language.How ever we are using in java same way we can use in javascript also.</p>\n\n<p>Use \\n to print in next line.</p>\n\n<p>For Ex: alert(\"hello ! \\n JavaScript learners\");</p>\n\n<p>then it will print like</p>\n\n<p>hello !</p>\n\n<p>JavaScript learners</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>alert(line1+\"\\n\"+line2);</p>\n\n<p>worked for me..\nThe output is:</p>\n\n<p>line1 printed here</p>\n\n<p>and line2 printed here</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do you put in a new line into a JavaScript alert box? </p>\n",
            "last_activity_date": 1423039170,
            "question_id": 1841452,
            "score": 165,
            "tags": [
                "javascript"
            ],
            "title": "New line in JavaScript alert box"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>First time I've answered my own question. After a little more experimentation:</p>\n\n<pre><code>$(\"[id$=\" + endOfIdToMatch + \"]\").each(function () {\n   alert($(this).attr(tagName));\n});\n</code></pre>\n\n<p>works!</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Just one jQuery too much:</p>\n\n<pre><code>$(\"[id$=\" + endOfIdToMatch + \"]\").each(function () {\n    alert(this.tagName);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 88
                },
                {
                    "body": "<p>tagName what a nice tip. I would like to suggest also to use tagName.toLowerCase() since the value returned depends on the document type (HTML or XML/XHTML).</p>\n\n<p>See: <a href=\"http://reference.sitepoint.com/javascript/Element/tagName\" rel=\"nofollow\">http://reference.sitepoint.com/javascript/Element/tagName</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Consider this solution without using <em>each()</em>:</p>\n\n<pre><code>var elements = $(\"[id$=\" + endOfIdToMatch + \"]\");\nvar vals = elements.is(\"input\").val();\nvar htmls = elements.is(\"label\").html();\nvar contents = vals.concat(htmls);\n</code></pre>\n\n<p><a href=\"http://docs.jquery.com/Traversing/is\">Have a look at the documentation for <em>is</em>.</a></p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>you could also use something like this:</p>\n\n<pre><code>if ($(this).is('input:checkbox'))\n</code></pre>\n\n<p>replace \"this\" with whatever instance you need and 'checkbox' with whatever input type you need.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>This the best way to Get the element type</p>\n\n<pre><code>function tgetelementType( elmentid )\n{\n\n    var TypeName = $('#' + elmentid).get(0).tagName;\n    var TypeName2 = $('#' + elmentid).get(0).type;\n\n\n    if($('#' + elmentid).get(0).tagName== \"INPUT\")\n    {\n       return $('#' + elmentid).get(0).type.toUpperCase()\n    }\n    else \n    {\n        return $('#' + elmentid).get(0).tagName.toUpperCase() ; \n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>in jquery 1.6 use prop()</p>\n\n<h3>Example</h3>\n\n<pre><code>var el = $('body');\n\nif (el.prop('tagName') === 'BODY') {\n    console.log('found body')\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>$(\"[id$=\" + endOfIdToMatch + \"]\").each(function(){\n    var $this=jQuery(this),ri='';\n    switch (this.tagName.toLowerCase()){\n        case 'label':\n            ri=$this.html();\n            break;\n        case 'input':\n            if($this.attr('type')==='text'){ri=$this.val();}\n            break;\n        default:\n            break;\n    }\n    return ri;\n})\n</code></pre>\n\n<p>The question is, what do you intend to do after you've determined the tag name?  You could just as easily filter the jquery list using an additional selector combined with .end() to do the same thing:</p>\n\n<pre><code>$(\"[id$=\" + endOfIdToMatch + \"]\")\n    .find(\"input:text\")\n    .each(function(){\n         /* do something with all input:text elements */\n    })\n    .end()\n    .find(\"label\")\n    .each(function(){\n        /* do something with label elements */\n    })\n    .end()\n</code></pre>\n\n<p>This could still be chained if you needed to do further things with this particular collection of elements...just like the example above.</p>\n\n<p>In either case, you'd have to do something with the values while inside the <code>each()</code> statements</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yet another solution, arguably more elegant, is to write two separate functions for each element type:</p>\n\n<pre><code>$(\"input#\" + id).each(function() { alert(this + \" is an input\"); });\n$(\"label#\" + id).each(function() { alert(this + \" is a label\"); });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm matching ASP.Net generated elements by ID name, but I have some elements which may render as text boxes or labels depending on the page context. I need to figure out whether the match is to a textbox or label in order to know whether to get the contents by val() or by html().</p>\n\n<pre><code>$(\"[id$=\" + endOfIdToMatch + \"]\").each(function () {\n    //determine whether $(this) is a textbox or label\n    //do stuff\n});\n</code></pre>\n\n<p>I found a solution that doesn't work, it just returns \"undefined\":</p>\n\n<pre><code>$(\"[id$=\" + endOfIdToMatch + \"]\").each(function () {\n    alert($(this).tagName);\n});\n</code></pre>\n\n<p>What am I missing?</p>\n",
            "last_activity_date": 1329956607,
            "question_id": 341900,
            "score": 67,
            "tags": [
                "asp.net",
                "javascript",
                "jquery",
                "html"
            ],
            "title": "How can I determine the element type of a matched element in jQuery?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Update:  Well, <code>document.execCommand</code> is documented in <a href=\"https://developer.mozilla.org/en/Rich-Text%5FEditing%5Fin%5FMozilla#Executing%5FCommands\" rel=\"nofollow\">the Mozilla DOM documentation</a>, but its description there looks slightly different from the MSDN documentation.</p>\n\n<p>I'm still pretty sure it's not in the ECMA-262 standard.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is for 'design mode' where the browser effectively turns the document into an editor.  The execCommand API originated with IE and was later <a href=\"http://www.w3.org/html/wg/drafts/html/master/editing.html#editing-apis\" rel=\"nofollow\">added to HTML5.</a> Exactly which commands are supported, as well as their behavior varies across browsers. Clipboard access is considered a security risk.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Yes, I have used it in IE, Chrome, Safari.  If it works for these browser then it should work for the rest. Anyway, the execCommand method of the document object is used to execute commands relating to the built in Rich Text Editing features in the browser. The syntax of the execCommand is as follow: document.execCommand(command, uiBool, argument)</p>\n\n<p>The command parameter is the command to execute - bold, underline, font, etc.</p>\n\n<p>Then you have the uiBool which is the boolean value that specifies whether or not the default user interface should be shown.</p>\n\n<p>And the last parameter is the argument use for some commands that requires that we pass an argument. If no argument is required by the command we pass a value of \"null\" as the third parameter.</p>\n\n<p>Example:  document.getElementById(\"whateverID\").document.execCommand('bold', false, null);</p>\n\n<p>or: document.getElementById(\"whateverID\").document.execCommand('bold', false, );</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I just stumble on a piece of code which I never saw before (granted I can't call myself a JS expert):</p>\n\n<p><code>document.execCommand('Copy');</code></p>\n\n<p>which seems to copy the clipboard contents to the element in focus.</p>\n\n<p><strong>Q: Is this functionality available cross-browser?</strong></p>\n\n<p><hr></p>\n\n<p><strong>Edit 1</strong>: I found this interesting <a href=\"http://www.quirksmode.org/dom/execCommand.html\">link</a>. The page shows a compatibility matrix for <code>document.execCommand</code>.</p>\n",
            "last_activity_date": 1404997930,
            "question_id": 1817441,
            "score": 49,
            "tags": [
                "javascript",
                "cross-browser"
            ],
            "title": "Javascript: document.execCommand cross-browser?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><a href=\"http://api.jquery.com/ready/\" rel=\"nofollow\"><strong>.ready()</strong></a> - Specify a function to execute when the DOM is fully loaded.</p>\n\n<pre><code>$(document).ready(function() {\n  // Handler for .ready() called.\n});\n</code></pre>\n\n<p>Here is a List of <a href=\"http://api.jquery.com/category/manipulation/\" rel=\"nofollow\"><strong>all jQuery Methods</strong></a></p>\n\n<p>Read on <a href=\"http://www.learningjquery.com/2006/09/introducing-document-ready\" rel=\"nofollow\"><strong>Introducing $(document).ready()</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In simple words,</p>\n\n<blockquote>\n  <p><code>$(document).ready</code> is an event which fires up when <code>document</code> is\n  ready.</p>\n</blockquote>\n\n<p>Suppose you have placed your jQuery code in <code>head</code> section and trying to access a <code>dom</code> element (an anchor, an img etc), you will not be able to access it because <code>html</code> is interpreted from top to bottom and your html elements are not present when your jQuery code runs.</p>\n\n<p>To overcome this problem, we place every jQuery/javascript code (which uses DOM) inside <code>$(document).ready</code> function which gets called when all the <code>dom</code> elements can be accessed.</p>\n\n<p>And this is the reason, when you place your jQuery code at the bottom (after all dom elements, just before <code>&lt;/body&gt;</code>) , <strong>there is no need for <code>$(document).ready</code></strong></p>\n\n<p>There is no need to place <code>on</code> method inside <code>$(document).ready</code> only when you use <code>on</code> method on <code>document</code> because of the same reason I explained above.</p>\n\n<pre><code>    //No need to put inside $(document).ready\n    $(document).on('click','a',function () {\n    })\n\n    // Need to put inside $(document).ready if placed inside &lt;head&gt;&lt;/head&gt;\n    $('.container').on('click','a',function () {\n    });\n</code></pre>\n\n<p><strong>EDIT</strong></p>\n\n<p>From comments,</p>\n\n<ol>\n<li><p><code>$(document).ready</code> does not wait for images or scripts. Thats the big difference between <code>$(document).ready</code> and <code>$(document).load</code></p></li>\n<li><p>Only code that accesses the DOM should be in ready handler. If it's a plugin, it shouldn't be in the ready event.</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>To be realistic, <code>document.ready</code> is not needed for anything else than manipulating the DOM accurately and it's not always needed or the best option. What I mean is that when you develop a large jQuery plugin for example you hardly use it throughout the code because you're trying to keep it DRY, so you abstract as much as possible in methods that manipulate the DOM but are meant to be invoked later on. When all your code is tightly integrated the only method exposed in <code>document.ready</code> is usually <code>init</code> where all the DOM magic happens. Hope this answers your question.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You should bind all actions in document.ready, because you should wait till the document is fully loaded.</p>\n\n<p>But, you should create functions for all actions and call them from within the document.ready. When you create functions (your global objects), call them whenever you want. So once your new data is loaded and new elements created, call those functions again.</p>\n\n<p>These functions are the ones where you've bound the events and action items.</p>\n\n<pre><code>$(document).ready(function(){\nbindelement1();\nbindelement2();\n});\n\nfunction bindelement1(){\n$('el1').on('click',function...);\n//you might make an ajax call here, then under complete of the AJAX, call this function or any other function again\n}\n\nfunction bindelement2(){\n$('el2').on('click',function...);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Answers:</p>\n\n<blockquote>\n  <p>jQuery's .on() method: I use the .on() method for AJAX quite a bit\n  (dynamically creating DOM elements). Should the .on() click handlers\n  always be inside document.ready?</p>\n</blockquote>\n\n<p>No, not always. If you load your JS in the document head you will need to. If you are creating the elements after the page loads via AJAX, you will need to. You will not need to if the script is below the html element you are adding a handler too.</p>\n\n<blockquote>\n  <p>Performance: Is it more performant to keep various javascript/jQuery\n  objects inside or outside document.ready (also, is the performance difference significant?)?</p>\n</blockquote>\n\n<p>It depends. It will take the same amount of time to attach the handlers, it just depends if you want it to happen immediately as the page is loading or if you want it to wait until the entire doc is loaded. So it will depend what other things you are doing on the page.</p>\n\n<blockquote>\n  <p>Object scope: AJAX-loaded pages can't access objects that were inside\n  the prior page's document.ready, correct? They can only access objects\n  which were outside document.ready (i.e., truly \"global\" objects)?</p>\n</blockquote>\n\n<p>It's essentially it's own function so it can only access vars declared at a global scope (outside/above all functions) or with <code>window.myvarname = '';</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Before you can safely use jQuery you need to ensure that the page is in a state where it's <strong>ready</strong> to be manipulated. With jQuery, we accomplish this by putting our code in a function, and then passing that function to <a href=\"http://api.jquery.com/ready/\" rel=\"nofollow\"><code>$(document).ready()</code></a>. The function we pass can just be an <a href=\"http://helephant.com/2008/08/23/javascript-anonymous-functions/\" rel=\"nofollow\">anonymous function</a>.</p>\n\n<pre><code>$(document).ready(function() {  \n    console.log('ready!');  \n});\n</code></pre>\n\n<p>This will run the function that we pass to .ready() once the document is ready. What's going on here? We're using $(document) to create a jQuery object from our page's document, and then calling the .ready() function on that object, passing it the function we want to execute.</p>\n\n<p>Since this is something you'll find yourself doing a lot, there's a shorthand method for this if you prefer \u2014 the $() function does double duty as an alias for $(document).ready() if you pass it a function:</p>\n\n<pre><code>$(function() {  \n    console.log('ready!');  \n});  \n</code></pre>\n\n<p>This is a good reading: <a href=\"http://jqfundamentals.com/chapter/jquery-basics\" rel=\"nofollow\">Jquery Fundamentals</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>he ready event occurs when the DOM (document object model) has been loaded.</p>\n\n<p>Because this event occurs after the document is ready, it is a good place to have all other jQuery events and functions. Like in the example above.</p>\n\n<p>The ready() method specifies what happens when a ready event occurs.</p>\n\n<p>Tip: The ready() method should not be used together with .</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I was told to use document.ready when I first started to use Javascript/jQuery but I never really learned why.</p>\n\n<p>Might someone provide some basic guidelines on when it makes sense to wrap javascript/jquery code inside jQuery's <code>document.ready</code>? </p>\n\n<p>Some topics I'm interested in:</p>\n\n<ol>\n<li>jQuery's <code>.on()</code> method: I use the <code>.on()</code> method for AJAX quite a bit (typically on dynamically created DOM elements). Should the <code>.on()</code> click handlers <strong>always</strong> be <strong>inside</strong> <code>document.ready</code>?</li>\n<li>Performance: Is it more performant to keep various javascript/jQuery objects <strong>inside</strong> or <strong>outside</strong> document.ready (also, is the performance difference significant?)?</li>\n<li>Object scope: AJAX-loaded pages can't access objects that were <strong>inside</strong> the prior page's document.ready, correct? They can only access objects which were <strong>outside</strong> document.ready (i.e., truly \"global\" objects)? </li>\n</ol>\n\n<p><strong>Update:</strong> To follow a best practice, all my javascript (the jQuery library and my app's code) is at the <strong>bottom</strong> of my HTML page and I'm using the <code>defer</code> attribute on the jQuery-containing scripts on my AJAX-loaded pages so that I can access the jQuery library on these pages.</p>\n",
            "last_activity_date": 1421656522,
            "question_id": 13062246,
            "score": 43,
            "tags": [
                "javascript",
                "jquery",
                "dom",
                "event-handling",
                "document.ready"
            ],
            "title": "When should I use jQuery&#39;s document.ready function?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You can try with focus() function on the selected text - the selection dissapears.</p>\n\n<pre><code>$('#someEl').focus();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just, write something like:</p>\n\n<pre><code>var domNode = $('#theDiv');\nif (jQuery.browser.msie) {\n   domNode.get(0).onselectstart = function () { return false; };\n} else\n{\n    domNode.get(0).onmousedown = function(e){e.preventDefault()}\n}\n</code></pre>\n\n<p><hr>\n<strong>EDIT:</strong></p>\n\n<p>Searching on the internet, I found a blog post with a great ideia, see:\n<a href=\"http://aleembawany.com/2009/01/20/disable-selction-on-menu-items-with-this-jquery-extension/\">http://aleembawany.com/2009/01/20/disable-selction-on-menu-items-with-this-jquery-extension/</a></p>\n\n<p>So, you can insert into your js file:</p>\n\n<pre><code>jQuery.fn.extend({ \n        disableSelection : function() { \n                return this.each(function() { \n                        this.onselectstart = function() { return false; }; \n                        this.unselectable = \"on\"; \n                        jQuery(this).css('user-select', 'none'); \n                        jQuery(this).css('-o-user-select', 'none'); \n                        jQuery(this).css('-moz-user-select', 'none'); \n                        jQuery(this).css('-khtml-user-select', 'none'); \n                        jQuery(this).css('-webkit-user-select', 'none'); \n                }); \n        } \n}); \n</code></pre>\n\n<p>and use it instead:</p>\n\n<pre><code>// disable selection on #theDiv object\n$('#theDiv').disableSelection(); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>There is a CSS3 property for that.</p>\n\n<pre><code>#yourTable {\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 62
                },
                {
                    "body": "<p>I simply remove the selection that is made using the shift key. This might show a little flicker though</p>\n\n<pre><code>if (event.shiftKey) {\n    window.getSelection().removeAllRanges()\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just one note on the answer from Cleiton above - the code sample seems to work well, but in order to be a good citizen in the jQuery world, you should return the jQuery object at the end of the function so that it's chainable - a simple one-line addition fixes that up:</p>\n\n<pre><code>jQuery.fn.extend({\n    disableSelection : function() {\n            this.each(function() {\n                    this.onselectstart = function() { return false; };\n                    this.unselectable = \"on\";\n                    jQuery(this).css('-moz-user-select', 'none');\n            });\n            return this;\n    }\n});\n</code></pre>\n\n<p>Cheers, hope this is helpful.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>onselectstart does not cover situation when selection started in one div in which selection is allowed, and continuing into another div in which selection should not be allowed. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you have Jquery UI on your pages, just use</p>\n\n<pre><code>    $(\"element-selector\").disableSelection();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a table, and I'm allowing users to 'select' multiple rows. This is all handled using jQuery events and some CSS to visually indicate the row is 'selected'. When the user presses shift, it is possible to select multiple rows. Sometimes this cause text to become highlighted. Is there anyway to prevent this? </p>\n",
            "last_activity_date": 1414728561,
            "question_id": 1319126,
            "score": 35,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Prevent Highlight of Text Table"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Several of IE's host object functions aren't really JavaScript functions and so don't have <code>apply</code> or <code>call</code>. (<code>alert</code>, for example.)</p>\n\n<p>So you'll have to do it the hard way:</p>\n\n<pre><code>function debug()\n  var index;\n\n  if(!window.console) { \n    window.console = { log: function() { /* do something */ } };\n  }\n  for (index = 0; index &lt; arguments.length; ++index) {\n      console.log(arguments[index]);\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Ok, it works when you write it this way:</p>\n\n<pre><code>function debug()\n  if(!window.console) { \n    window.console = {};\n    console.log = function() { /* do something */ };\n  }\n  console.log.apply(console, arguments);\n}\n</code></pre>\n\n<p>Odd behaviour... but if you write it this way 'console.log' gets recognized as a function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The second part of an answer <a href=\"http://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function/5473193#5473193\">I gave recently</a> answers this question too.  I don't consider this a duplicate of that one so, for convenience, I'll paste it here:</p>\n\n<blockquote>\n  <p>The console object is not part of any standard and is an extension to the Document Object Model. Like other DOM objects, it is considered a host object and is not required to inherit from Object, nor its methods from Function, like native ECMAScript functions and objects do. This is the reason apply and call are undefined on those methods. In IE 9, most DOM objects were improved to inherit from native ECMAScript types. As the developer tools are considered an extension to IE (albeit, a built-in extension), they clearly didn't receive the same improvements as the rest of the DOM.</p>\n  \n  <p>For what it's worth, you can still use some Function.prototype methods on console methods with a little bind() magic:</p>\n\n<pre><code>var log = Function.prototype.bind.call(console.log, console);\nlog.apply(console, [\"this\", \"is\", \"a\", \"test\"]);\n//-&gt; \"thisisatest\"\n</code></pre>\n</blockquote>\n\n<p>So you could fix up all the <code>console</code> methods <strong>for IE 9</strong> in the same manner:</p>\n\n<pre><code>if (Function.prototype.bind &amp;&amp; window.console &amp;&amp; typeof console.log == \"object\"){\n    [\n      \"log\",\"info\",\"warn\",\"error\",\"assert\",\"dir\",\"clear\",\"profile\",\"profileEnd\"\n    ].forEach(function (method) {\n        console[method] = this.bind(console[method], console);\n    }, Function.prototype.call);\n}\n</code></pre>\n\n<p>This replaces the \"host\" functions with native functions that call the \"host\" functions.  You can get it working in Internet Explorer 8 by including the compatibility implementations for <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/function/bind#Compatibility\"><code>Function.prototype.bind</code></a> and <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/array/foreach#Compatibility\"><code>Array.prototype.forEach</code></a> in your code, or rewriting the above snippet to incorporate the techniques used by those methods.</p>\n\n<h2>See also</h2>\n\n<ul>\n<li><a href=\"http://whattheheadsaid.com/2011/04/internet-explorer-9s-problematic-console-object\">Internet Explorer 9's problematic console object</a> - my blog, whattheheadsaid.com</li>\n<li><a href=\"https://connect.microsoft.com/IE/feedback/details/585896/console-log-typeof-is-object-instead-of-function\"><code>console.log</code> typeof is \"object\" instead of \"function\"</a> - Microsoft Connect (Live account required)</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p>There is also Paul Irish's way of doing it. It is simpler than some of the answers above, but makes log always output an array (even if only one argument was passed in):</p>\n\n<pre><code>// usage: log('inside coolFunc',this,arguments);\n// http://paulirish.com/2009/log-a-lightweight-wrapper-for-consolelog/\nwindow.log = function(){\n  log.history = log.history || [];   // store logs to an array for reference\n  log.history.push(arguments);\n  if(this.console){\n    console.log( Array.prototype.slice.call(arguments) );\n  }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The reason I came to this question was that I as trying to 'spicy' the console.log function for a specific module, so I'd have more localized and insightful debug info by playing a bit with the arguments, IE 9 broke it.</p>\n\n<p>@Andy E answer is great and helped me with lots of insight about apply. I just don't take the same approach to support IE9, so my solution is running the console only on \"modern browsers\" (being that modern means whatever browsers that behave the way I expect =)</p>\n\n<pre><code>var C = function() {\n  var args = Array.prototype.slice.call(arguments);\n  var console = window.console;\n  args[0]  = \"Module X: \"+args[0];\n  if( typeof console == 'object' &amp;&amp; console.log &amp;&amp; console.log.apply ){\n    console.log.apply(console, args);\n  }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I came across the same IE trouble and made a routine for it.\nIt is not as fancy as all the above implementations, but it works in ALL modern browsers.</p>\n\n<p>I tested it with Firefox (Firebug), IE 7,8,9 Chrome and Opera.\nIt makes use of the evil EVAL, but you will only want to debug in development.\nAfterwards you will replace the code with <code>debug = function () {};</code></p>\n\n<p>So here it is.</p>\n\n<p>Regards, Hans</p>\n\n<pre><code>(function(ns) {\n  var msgs = [];\n\n  // IE compatiblity\n  function argtoarr (args,from) {\n    var a = [];\n    for (var i = from || 0; i&lt;args.length; i++) a.push(args[i]);\n    return a;    \n  }\n\n  function log(arg) {\n    var params = \"\", format = \"\", type , output,\n        types = {\n            \"number\" : \"%d\",\n            \"object\" : \"{%o}\",\n            \"array\" : \"[%o]\"\n        };\n    for (var i=0; i&lt;arg.length; i++) {\n        params += (params ? \",\" : \"\")+\"arg[\"+i+\"]\";\n        type = types[toType(arg[i])] || \"%s\";\n        if (type === \"%d\" &amp;&amp; parseFloat(arg[i]) == parseInt(arg[i], 10)) type = \"%f\";\n        format += (format ? \",\" : \"\")+type;\n    }\n    // opera does not support string format, so leave it out\n    output = \"console.log(\"+(window.opera ? \"\" : \"'%f',\".replace(\"%f\",format))+\"%p);\".replace(\"%p\",params);\n    eval(output);\n  }\n\n  ns.debug = function () {\n    msgs.push(argtoarr(arguments));\n    if (console !== undefined) while (msgs.length&gt;0) log(msgs.shift());\n  }\n\n})(window);\n</code></pre>\n\n<p>Oops forgot my toType function, here it is.</p>\n\n<pre><code>function toType(obj) {\n    if (obj === undefined) return \"undefined\";\n    if (obj === null) return \"null\";\n    var m = obj.constructor;\n    if (!m) return \"window\";\n    m = m.toString().match(/(?:function|\\[object)\\s*([a-z|A-Z|0-9|_|@]*)/);\n    return m[1].toLowerCase();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Looks like I've re-invented the wheel, but somehow this isn't working in Internet Explorer 9, but does in IE6.</p>\n\n<pre><code>function debug()\n  if(!window.console) { \n    window.console = { log: function() { /* do something */ } };\n  }\n  console.log.apply(console, arguments);\n}\n</code></pre>\n\n<p>Related:\n<a href=\"http://stackoverflow.com/questions/4638450/apply-question-for-javascript\">Apply() question for javascript</a></p>\n\n<p>F12 Debugger tells me that this \"object\" (console.log) does not support method 'apply'.\nIs it not even recognized as a function? \nAny other pointers or ideas?</p>\n",
            "last_activity_date": 1364646129,
            "question_id": 5538972,
            "score": 33,
            "tags": [
                "javascript",
                "debugging",
                "console",
                "internet-explorer-9"
            ],
            "title": "console.log.apply not working in IE9"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I think that the format you're using is just unproper to do what you want. Getting all datas contained in the window object to a single JSON string suppose you keep this string in memory during you're building her causing issues you encountered.</p>\n\n<p>You need a format givin you the ability to send datas as it is parsed from the window object in order to free memory on the fly. For that matter, you should use something like CSV, Text or VarStream ( <a href=\"https://github.com/nfroidure/VarStream\" rel=\"nofollow\">https://github.com/nfroidure/VarStream</a> ).</p>\n\n<p>You could also iterate throught object and try to JSON.stringify them in a try ... catch. If the try is a success, you send the JSON file, if it fails, you iterate througt the object properties with the same try ... catch etc... But it's a ugly workaround i do not encourage you to use.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could just maintain the depth you're at:</p>\n\n<pre><code>function stringify(obj, currentDepth, maxDepth) {\n  if (currentDepth == maxDepth) return '[Warning: max level reached]'\n  var str = '{';\n  for (var key in obj) {\n    str += key + ': ' + typeof obj == 'object' ?\n        stringify(obj[key], currentDepth + 1, maxDepth) :\n        obj[key];\n  }\n  return str + '}'\n}\n</code></pre>\n\n<p>(just example- obviously this snippet doesn't detect recursion)</p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>I did what I initially feared I'll have to do : I took Crockford's code and modified it for my needs. Now it builds JSON but handles</p>\n\n<ul>\n<li>cycles</li>\n<li>too deep objects</li>\n<li>too long arrays</li>\n<li>exceptions (accessors that can't legally be accessed)</li>\n</ul>\n\n<p>In case anybody needs it, I made a GitHub repository : <a href=\"https://github.com/Canop/JSON.prune\">JSON.prune on GitHub</a></p>\n\n<p>Here is the code :</p>\n\n<pre><code>// JSON.pruned : a function to stringify any object without overflow\n// example : var json = JSON.pruned({a:'e', c:[1,2,{d:{e:42, f:'deep'}}]})\n// two additional optional parameters :\n//   - the maximal depth (default : 6)\n//   - the maximal length of arrays (default : 50)\n// GitHub : https://github.com/Canop/JSON.prune\n// This is based on Douglas Crockford's code ( https://github.com/douglascrockford/JSON-js/blob/master/json2.js )\n(function () {\n    'use strict';\n\n    var DEFAULT_MAX_DEPTH = 6;\n    var DEFAULT_ARRAY_MAX_LENGTH = 50;\n    var seen; // Same variable used for all stringifications\n\n    Date.prototype.toPrunedJSON = Date.prototype.toJSON;\n    String.prototype.toPrunedJSON = String.prototype.toJSON;\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        };\n\n    function quote(string) {\n        escapable.lastIndex = 0;\n        return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n            var c = meta[a];\n            return typeof c === 'string'\n                ? c\n                : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n        }) + '\"' : '\"' + string + '\"';\n    }\n\n    function str(key, holder, depthDecr, arrayMaxLength) {\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            partial,\n            value = holder[key];\n        if (value &amp;&amp; typeof value === 'object' &amp;&amp; typeof value.toPrunedJSON === 'function') {\n            value = value.toPrunedJSON(key);\n        }\n\n        switch (typeof value) {\n        case 'string':\n            return quote(value);\n        case 'number':\n            return isFinite(value) ? String(value) : 'null';\n        case 'boolean':\n        case 'null':\n            return String(value);\n        case 'object':\n            if (!value) {\n                return 'null';\n            }\n            if (depthDecr&lt;=0 || seen.indexOf(value)!==-1) {\n                return '\"-pruned-\"';\n            }\n            seen.push(value);\n            partial = [];\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = Math.min(value.length, arrayMaxLength);\n                for (i = 0; i &lt; length; i += 1) {\n                    partial[i] = str(i, value, depthDecr-1, arrayMaxLength) || 'null';\n                }\n                v = partial.length === 0\n                    ? '[]'\n                    : '[' + partial.join(',') + ']';\n                return v;\n            }\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    try {\n                        v = str(k, value, depthDecr-1, arrayMaxLength);\n                        if (v) partial.push(quote(k) + ':' + v);\n                    } catch (e)\u00a0{ \n                        // this try/catch due to some \"Accessing selectionEnd on an input element that cannot have a selection.\" on Chrome\n                    }\n                }\n            }\n            v = partial.length === 0\n                ? '{}'\n                : '{' + partial.join(',') + '}';\n            return v;\n        }\n    }\n\n    JSON.pruned = function (value, depthDecr, arrayMaxLength) {\n        seen = [];\n        depthDecr = depthDecr || DEFAULT_MAX_DEPTH;\n        arrayMaxLength = arrayMaxLength || DEFAULT_ARRAY_MAX_LENGTH;\n        return str('', {'': value}, depthDecr, arrayMaxLength);\n    };\n\n}());\n</code></pre>\n\n<p>An example of what can be done :</p>\n\n<pre><code>var json = JSON.pruned(window);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>You can simply use a <a href=\"https://developer.mozilla.org/en-US/docs/Using_native_JSON\" rel=\"nofollow\">Censor</a> function like in the example below:</p>\n\n<pre><code>function censor(key, value) {\n  if (typeof(value) == \"string\") {\n    return undefined;\n  }\n  return value;\n}\n\nvar foo = {foundation: \"Mozilla\", model: \"box\", week: 45, transport: \"car\", month: 7};\nvar jsonString = JSON.stringify(foo, censor);\n</code></pre>\n\n<p>The output is <code>{\"week\":45,\"month\":7}</code>.</p>\n\n<p>So as for your example, you have to return undefined if you have a value object, which is a window.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've revised @dystroy's answer, adding:</p>\n\n<ul>\n<li>Indentation for sub-properties.</li>\n<li>An indication of where circular references point to.</li>\n</ul>\n\n\n\n<pre><code>/**\n * Returns the JSON representation of an object.\n *\n * @param {value} object the object\n * @param {number} objectMaxDepth for objects, the maximum number of times to recurse into descendants\n * @param {number} arrayMaxLength for arrays, the maximum number of elements to enumerate\n * @param {string} indent the string to use for indentation\n * @return {string} the JSON representation\n */\nvar toJSON = function(object, objectMaxDepth, arrayMaxLength, indent)\n{\n    \"use strict\";\n\n    /**\n     * Escapes control characters, quote characters, backslash characters and quotes the string.\n     *\n     * @param {string} string the string to quote\n     * @returns {String} the quoted string\n     */\n    function quote(string)\n    {\n        escapable.lastIndex = 0;\n        var escaped;\n        if (escapable.test(string))\n        {\n            escaped = string.replace(escapable, function(a)\n            {\n                var replacement = replacements[a];\n                if (typeof (replacement) === \"string\")\n                    return replacement;\n                // Pad the unicode representation with leading zeros, up to 4 characters.\n                return \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n            });\n        }\n        else\n            escaped = string;\n        return \"\\\"\" + escaped + \"\\\"\";\n    }\n\n    /**\n     * Returns the String representation of an object.\n     * \n     * Based on &lt;a href=\"https://github.com/Canop/JSON.prune/blob/master/JSON.prune.js\"&gt;https://github.com/Canop/JSON.prune/blob/master/JSON.prune.js&lt;/a&gt;\n     *\n     * @param {string} path the fully-qualified path of value in the JSON object\n     * @param {type} value the value of the property\n     * @param {string} cumulativeIndent the indentation to apply at this level\n     * @param {number} depth the current recursion depth\n     * @return {String} the JSON representation of the object, or \"null\" for values that aren't valid\n     * in JSON (e.g. infinite numbers).\n     */\n    function toString(path, value, cumulativeIndent, depth)\n    {\n        switch (typeof (value))\n        {\n            case \"string\":\n                return quote(value);\n            case \"number\":\n                {\n                    // JSON numbers must be finite\n                    if (isFinite(value))\n                        return String(value);\n                    return \"null\";\n                }\n            case \"boolean\":\n                return String(value);\n            case \"object\":\n                {\n                    if (!value)\n                        return \"null\";\n                    var valueIndex = values.indexOf(value);\n                    if (valueIndex !== -1)\n                        return \"Reference =&gt; \" + paths[valueIndex];\n                    values.push(value);\n                    paths.push(path);\n                    if (depth &gt; objectMaxDepth)\n                        return \"...\";\n\n                    // Make an array to hold the partial results of stringifying this object value.\n                    var partial = [];\n\n                    // Is the value an array?\n                    var i;\n                    if (Object.prototype.toString.apply(value) === \"[object Array]\")\n                    {\n                        // The value is an array. Stringify every element\n                        var length = Math.min(value.length, arrayMaxLength);\n\n                        // Whether a property has one or multiple values, they should be treated as the same\n                        // object depth. As such, we do not increment the object depth when recursing into an\n                        // array.\n                        for (i = 0; i &lt; length; ++i)\n                        {\n                            partial[i] = toString(path + \".\" + i, value[i], cumulativeIndent + indent, depth,\n                                arrayMaxLength);\n                        }\n                        if (i &lt; value.length)\n                        {\n                            // arrayMaxLength reached\n                            partial[i] = \"...\";\n                        }\n                        return \"\\n\" + cumulativeIndent + \"[\" + partial.join(\", \") + \"\\n\" + cumulativeIndent +\n                            \"]\";\n                    }\n\n                    // Otherwise, iterate through all of the keys in the object.\n                    for (var subKey in value)\n                    {\n                        if (Object.prototype.hasOwnProperty.call(value, subKey))\n                        {\n                            var subValue;\n                            try\n                            {\n                                subValue = toString(path + \".\" + subKey, value[subKey], cumulativeIndent + indent,\n                                    depth + 1);\n                                partial.push(quote(subKey) + \": \" + subValue);\n                            }\n                            catch (e)\n                            {\n                                // this try/catch due to forbidden accessors on some objects\n                                if (e.message)\n                                    subKey = e.message;\n                                else\n                                    subKey = \"access denied\";\n                            }\n                        }\n                    }\n                    var result = \"\\n\" + cumulativeIndent + \"{\\n\";\n                    for (i = 0; i &lt; partial.length; ++i)\n                        result += cumulativeIndent + indent + partial[i] + \",\\n\";\n                    if (partial.length &gt; 0)\n                    {\n                        // Remove trailing comma\n                        result = result.slice(0, result.length - 2) + \"\\n\";\n                    }\n                    result += cumulativeIndent + \"}\";\n                    return result;\n                }\n            default:\n                return \"null\";\n        }\n    }\n\n    if (indent === undefined)\n        indent = \"  \";\n    if (objectMaxDepth === undefined)\n        objectMaxDepth = 0;\n    if (arrayMaxLength === undefined)\n        arrayMaxLength = 50;\n    // Matches characters that must be escaped\n    var escapable =\n        /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n    // The replacement characters\n    var replacements =\n        {\n            \"\\b\": \"\\\\b\",\n            \"\\t\": \"\\\\t\",\n            \"\\n\": \"\\\\n\",\n            \"\\f\": \"\\\\f\",\n            \"\\r\": \"\\\\r\",\n            \"\\\"\": \"\\\\\\\"\",\n            \"\\\\\": \"\\\\\\\\\"\n        };\n    // A list of all the objects that were seen (used to avoid recursion)\n    var values = [];\n    // The path of an object in the JSON object, with indexes corresponding to entries in the\n    // \"values\" variable.\n    var paths = [];\n    return toString(\"root\", object, \"\", 0);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here's my stringifier to stripped JSON for safe logging of objects with cyclical references, DOM elements, angular scopes, or window.</p>\n\n<p>Prevents <code>TypeError: Converting circular structure to JSON</code> by replacing circular references with ''.</p>\n\n<p>Prevents <code>RangeError: Maximum call stack size exceeded</code>.\nHowever, it's recommended to use maxDepth or filterObjects anyway, because serializing very deep objects costs both time and space, which may lower its usability for general logging,         and even make the test browser disconnect when used in tests.</p>\n\n<p>Optionally:</p>\n\n<ul>\n<li>limits object inspection depth (not implemented yet),</li>\n<li>filters objects (like window, test framework, test runner),</li>\n<li>filters DOM elements,</li>\n<li>filters angular object $attributes.</li>\n</ul>\n\n<p>Source+comments: <a href=\"https://gist.github.com/iki/9371373\" rel=\"nofollow\">https://gist.github.com/iki/9371373</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need a function building a JSON valid string from any argument but :</p>\n\n<ul>\n<li>avoiding recursivity problem by not adding objects twice</li>\n<li>avoiding call stack size problem by truncating past a given depth</li>\n</ul>\n\n<p>Generally it should be able to process big objects, at the cost of truncating them.</p>\n\n<p>As reference, this code fails :</p>\n\n<pre><code>var json = JSON.stringify(window);\n</code></pre>\n\n<p>Avoiding recursivity problem is simple enough :</p>\n\n<pre><code>var seen = [];\nreturn JSON.stringify(o, function(_, value) {\n    if (typeof value === 'object' &amp;&amp; value !== null) {\n        if (seen.indexOf(value) !== -1) return;\n        else seen.push(value);\n    }\n    return value;\n});\n</code></pre>\n\n<p>But for now, apart copying and changing <a href=\"https://github.com/douglascrockford/JSON-js/blob/master/json2.js\" rel=\"nofollow\">Douglas Crockford's code</a> to keep track of the depth, I didn't find any way to avoid stack overflow on very deep objects like <code>window</code> or any <code>event</code>. Is there a simple solution ?</p>\n",
            "last_activity_date": 1418717350,
            "question_id": 13861254,
            "score": 28,
            "tags": [
                "javascript",
                "json",
                "stringify"
            ],
            "title": "JSON.stringify deep objects"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This happens because the <code>fitBounds()</code> needs to snap to a viewport that fits the map canvas using the maximum zoom level possible. On the other hand, the viewport returned by the geocoder is not dependent on the size, layout or zoom level of the map canvas. Therefore the <code>fitBounds()</code> method adjusts the map's viewport in order to view the passed <code>LatLngBounds</code> in full at the centre of the map.</p>\n\n<p>You may want to check the following example for a clearer demonstation:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt; \n&lt;head&gt; \n   &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/&gt; \n   &lt;title&gt;Google Maps fitBounds Demo&lt;/title&gt; \n   &lt;script src=\"http://maps.google.com/maps/api/js?sensor=false\" \n           type=\"text/javascript\"&gt;&lt;/script&gt; \n&lt;/head&gt; \n&lt;body&gt; \n   &lt;div id=\"map\" style=\"width: 500px; height: 350px\"&gt;&lt;/div&gt; \n\n   &lt;script type=\"text/javascript\"&gt; \n      var myOptions = { mapTypeId: google.maps.MapTypeId.ROADMAP };\n      var map = new google.maps.Map(document.getElementById(\"map\"), myOptions);\n      var geocoder = new google.maps.Geocoder();\n\n      geocoder.geocode({'address': 'RU'}, function (results, status) {\n         var ne = results[0].geometry.viewport.getNorthEast();\n         var sw = results[0].geometry.viewport.getSouthWest();\n\n         map.fitBounds(results[0].geometry.viewport);               \n\n         var boundingBoxPoints = [\n            ne, new google.maps.LatLng(ne.lat(), sw.lng()),\n            sw, new google.maps.LatLng(sw.lat(), ne.lng()), ne\n         ];\n\n         var boundingBox = new google.maps.Polyline({\n            path: boundingBoxPoints,\n            strokeColor: '#FF0000',\n            strokeOpacity: 1.0,\n            strokeWeight: 2\n         });\n\n         boundingBox.setMap(map);\n      }); \n   &lt;/script&gt; \n&lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n\n<p>Below are some screenshots for various countries from the above example. The red bounding box is the viewport returned by the geocoder. Note the difference between the bounding box and the actual viewport, as adjusted by <code>fitBounds()</code>:</p>\n\n<p>Country: US</p>\n\n<p><img src=\"http://i.imgur.com/R5qETMR.png\" alt=\"US\"></p>\n\n<p>Country: RU</p>\n\n<p><img src=\"http://i.imgur.com/awC1l0h.png\" alt=\"RU\"></p>\n\n<p>Country: IT</p>\n\n<p><img src=\"http://i.imgur.com/jSriTdc.png\" alt=\"IT\"></p>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p>Just to let you know in what way this can be customized, I have prepared a sample of what you can do if you prefer to loose some of the boundingBox in the viewport</p>\n\n<ul>\n<li><p>a sample with just <code>fitBounds</code>: <a href=\"http://jsbin.com/cakuhaca/1/edit\" rel=\"nofollow\">http://jsbin.com/cakuhaca/1/edit</a></p></li>\n<li><p>a sample for when you don't care that all the viewport is visible and always zoom in one more level: <a href=\"http://jsbin.com/rofupidi/1/edit\" rel=\"nofollow\">http://jsbin.com/rofupidi/1/edit</a></p></li>\n<li><p>a sample when you care only if the stip of the bounding box that you are loosing is more than X pixels in horizontally or vertically <a href=\"http://jsbin.com/rezapuye/1/edit\" rel=\"nofollow\">http://jsbin.com/rezapuye/1/edit</a></p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm using the geocoder from Google API v3 to display a map of a country. I get the recommended viewport for the country but when I want to fit the map to this viewport, it does not work (see the bounds before and after calling the fitBounds function in the code below).</p>\n\n<p>What am I doing wrong?</p>\n\n<p>How can I set the viewport of my map to <code>results[0].geometry.viewport</code>?</p>\n\n<pre><code>var geocoder = new google.maps.Geocoder();\ngeocoder.geocode(\n    {'address': '{{countrycode}}'},\n    function(results, status) {\n        var bounds = new google.maps.LatLngBounds();\n        bounds = results[0].geometry.viewport;\n        console.log(bounds);          // ((35.173, -12.524), (45.244, 5.098))\n        console.log(map.getBounds()); // ((34.628, -14.683), (58.283, 27.503))\n        map.fitBounds(bounds);               \n        console.log(map.getBounds()); // ((25.740, -24.806), (52.442, 17.380))\n    }\n);\n</code></pre>\n",
            "last_activity_date": 1406198584,
            "question_id": 2494756,
            "score": 27,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3",
                "fitbounds"
            ],
            "title": "fitbounds() in Google maps api V3 does not fit bounds"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can extract the scroll position using <a href=\"http://api.jquery.com/scrollTop/\"><code>jQuery's .scrollTop() method</code></a></p>\n\n<pre><code>$(window).scroll(function (event) {\n    var scroll = $(window).scrollTop();\n    // Do something\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p>You are looking for the <code>window.scrollTop()</code> function.</p>\n\n<pre><code>$(window).scroll(function() {\n    var height = $(window).scrollTop();\n\n    if(height  &gt; some_number) {\n        // do something\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>Check here DEMO <a href=\"http://jsfiddle.net/yeyene/Uhm2J/\">http://jsfiddle.net/yeyene/Uhm2J/</a></p>\n\n<pre><code>function getData() {\n    $.getJSON('Get/GetData?no=1', function (responseText) {\n\u00a0 \u00a0     //Load some data from the server\n    })\n};\n\n$(window).scroll(function() {\n   if($(window).scrollTop() + $(window).height() == $(document).height()) {\n       alert(\"bottom!\");\n       // getData();\n   }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<pre><code>$(window).scroll( function() { \n var scrolled_val = $(document).scrollTop().valueOf();\n alert(scrolled_val+ ' = scroll value');\n});\n</code></pre>\n\n<p>This is another way of getting the value of scroll. </p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am having following jQuery functionality in my website, what it does that is it uses <code>window.scroll()</code>  function to recognize when the windows changes scroll position changes and at the change call few function to load data from server.</p>\n\n<p>The problem is the <code>.scroll()</code> function is called as soon as there is even a little change in the scroll position and load data at the bottom however what I wish to achieve is load new data when the scroll/page position reaches at the bottom, like is happens for Facebook feed.</p>\n\n<p>But I am not sure how to detect scroll position using jQuery?</p>\n\n<pre><code>function getData() {\n$.getJSON('Get/GetData?no=1', function (responseText) {\n    //Load some data from the server\n})\n};\n\n$(window).scroll(function () {\n    getData();\n});\n</code></pre>\n",
            "last_activity_date": 1407455984,
            "question_id": 17441065,
            "score": 24,
            "tags": [
                "javascript",
                "jquery",
                "scroll"
            ],
            "title": "How to detect scroll position of page using jQuery"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>The pop-up window does not have any close event that you can listen to.</p>\n\n<p>On the other hand, there is a closed property that is set to true when the window gets closed.</p>\n\n<p>You can set a timer to check that closed property and do it like this:</p>\n\n<pre><code>var win = window.open('foo.html', 'windowName',\"width=200,height=200,scrollbars=no\");   \nvar timer = setInterval(function() {   \n    if(win.closed) {  \n        clearInterval(timer);  \n        alert('closed');  \n    }  \n}, 1000); \n</code></pre>\n\n<p>See this <a href=\"http://jsfiddle.net/zuul/namuj/\">working Fiddle example</a>!</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>You can access parent window using '<a href=\"https://developer.mozilla.org/en/DOM/window.opener\">window.opener</a>', so, write something like the following in the child window:</p>\n\n<pre><code>&lt;script&gt;\n    window.onunload = refreshParent;\n    function refreshParent() {\n        window.opener.location.reload();\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 73
                },
                {
                    "body": "<p>on your child page, put these:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function refreshAndClose() {\n        window.opener.location.reload(true);\n        window.close();\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>and</p>\n\n<pre><code>&lt;body onbeforeunload=\"refreshAndClose();\"&gt;\n</code></pre>\n\n<p>but as a good UI design, you should use a Close <code>button</code> because it's more user friendly. see code below.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function () {\n        $('#btn').click(function () {\n            window.opener.location.reload(true);\n            window.close();\n        });\n    });\n&lt;/script&gt;\n\n&lt;input type='button' id='btn' value='Close' /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If your app runs on an HTML5 enabled browser. You can use <a href=\"https://developer.mozilla.org/en/DOM/window.postMessage\" rel=\"nofollow\">postMessage</a>. The example given there is quite similar to yours. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>window.open will return a reference to the newly created window, provided the URL opened complies with <a href=\"http://www.mozilla.org/projects/security/components/same-origin.html\" rel=\"nofollow\">Same Origin Policy</a>. </p>\n\n<p>This should work:</p>\n\n<pre><code>function windowClose() {\n    window.location.reload();\n}\n\nvar foo = window.open(\"foo.html\",\"windowName\", \"width=200,height=200,scrollbars=no\");\nfoo.onbeforeunload= windowClose;\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I use this: </p>\n\n<pre><code>&lt;script language='javascript'&gt;\nvar t;\nfunction doLoad() {\nt = setTimeout(\"window.close()\",1000);\n}\n\n&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction refreshAndClose() {\n    window.opener.location.reload(true);\n    window.close();\n}\n&lt;/script&gt;\n&lt;body onbeforeunload=\"refreshAndClose();\" onLoad='doLoad()''&gt;\n</code></pre>\n\n<p>when the window closes it then refreshes the parent window.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can reach main page with parent command (parent is the window) after the step you can make everything...</p>\n\n<pre><code>    function funcx() {\n        var result = confirm('bla bla bla.!');\n        if(result)\n            //parent.location.assign(\"http://localhost:58250/Ekocc/\" + document.getElementById('hdnLink').value + \"\");\n            parent.location.assign(\"http://blabla.com/\" + document.getElementById('hdnLink').value + \"\");\n    } \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use this in parrent page</p>\n\n<pre><code>&lt;script&gt;\n  window.onunload = refreshParent;\n function refreshParent() {\n    window.opener.location.reload();\n}\n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I opened a popup window by window.open in JavaScript, i want to refresh parent page when I close this popup window.(onclose event?) how can I do that?</p>\n\n<pre><code>window.open(\"foo.html\",\"windowName\", \"width=200,height=200,scrollbars=no\");\n</code></pre>\n",
            "last_activity_date": 1414989465,
            "question_id": 10792408,
            "score": 24,
            "tags": [
                "javascript",
                "html",
                "javascript-events"
            ],
            "title": "Open popup and refresh parent page on close popup"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You can use the <code>name</code> attr:  </p>\n\n<pre><code>&lt;script type=\"text/javascript\" &gt;\n{\nwindow.name =\"This is my session\";\n}\n&lt;/script&gt; \n</code></pre>\n\n<p>You still have to develop for yourself the format to use, or use a wrapper from an already existing library (mootools, Dojo etc).<br>\nYou can also use cookies, but they are more heavy on performance, as they go back and forth from the client to the server, and are specific to one domain.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think you misunderstood the concept of session, session is a server side per-user-data-store which allows you to save user data on the server side.</p>\n\n<p>thus, you have 2 options, resort to use cookies, which will give the illusion of session(but not quite the same), you can access cookies very simply by document.cookie .</p>\n\n<p>but, if you want your server be aware of the session, you need to use some sort of server request probably the best way is to use AJAX to do this.</p>\n\n<p>I would recommend you to re-read the definition of sessions.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can store and read string information in a cookie.</p>\n\n<p>If it is a session id coming from the server, the server can generate this cookie. And when another request is sent to the server the cookie will come too. Without having to do anything in the browser.</p>\n\n<p>However if it is javascript that creates the session Id. You can create a cookie with javascript, with a function like:</p>\n\n<pre><code>function writeCookie(name,value,days) {\n    var date, expires;\n    if (days) {\n        date = new Date();\n        date.setTime(date.getTime()+(days*24*60*60*1000));\n        expires = \"; expires=\" + date.toGMTString();\n            }else{\n        expires = \"\";\n    }\n    document.cookie = name + \"=\" + value + expires + \"; path=/\";\n}\n</code></pre>\n\n<p>Then in each page you need this session Id you can read the cookie, with a function like:</p>\n\n<pre><code>function readCookie(name) {\n    var i, c, ca, nameEQ = name + \"=\";\n    ca = document.cookie.split(';');\n    for(i=0;i &lt; ca.length;i++) {\n        c = ca[i];\n        while (c.charAt(0)==' ') {\n            c = c.substring(1,c.length);\n        }\n        if (c.indexOf(nameEQ) == 0) {\n            return c.substring(nameEQ.length,c.length);\n        }\n    }\n    return '';\n}\n</code></pre>\n\n<p>The read function work from any page or tab of the same domain that has written it, either if the cookie was created from the page in javascript or from the server.</p>\n\n<p>To store the id:</p>\n\n<pre><code>var sId = 's234543245';\nwriteCookie('sessionId', sId, 3);\n</code></pre>\n\n<p>To read the id:</p>\n\n<pre><code>var sId = readCookie('sessionId')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<pre><code>function writeCookie(name,value,days) {\n    var date, expires;\n    if (days) {\n        date = new Date();\n        date.setTime(date.getTime()+(days*24*60*60*1000));\n        expires = \"; expires=\" + date.toGMTString();\n            }else{\n        expires = \"\";\n    }\n    document.cookie = name + \"=\" + value + expires + \"; path=/\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I assume you are using ASP.NET MVC (C#), if not then this answer is not in your issue.</p>\n\n<p>Is it impossible to assign session values directly through javascript? No, there is a way to do that.</p>\n\n<p>Look again your code:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" &gt;\n{\nSession[\"controlID\"] =\"This is my session\";\n}\n&lt;/script&gt; \n</code></pre>\n\n<p>A little bit change:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" &gt;\n{\n  &lt;%Session[\"controlID\"] = \"This is my session\";%&gt;\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>The session \"controlID\" has created, but what about the value of session? is that persistent or can changeable via javascript?</p>\n\n<p>Let change a little bit more:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" &gt;\n{\n  var strTest = \"This is my session\"; \n  &lt;%Session[\"controlID\"] = \"'+ strTest +'\";%&gt;\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>The session is created, but the value inside of session will be \"'+ strTest +'\" but not \"This is my session\". If you try to write variable directly into server code like:</p>\n\n<pre><code>&lt;%Session[\"controlID\"] = strTest;%&gt;\n</code></pre>\n\n<p>Then an error will occur in you page \"There is no parameter strTest in current context...\". Until now it is still seem impossible to assign session values directly through javascript.</p>\n\n<p>Now I move to a new way. Using WebMethod at code behind to do that. Look again your code with a little bit change:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" &gt;\n{\n var strTest = \"This is my session\"; \n PageMethods.CreateSessionViaJavascript(strTest);\n}\n&lt;/script&gt; \n</code></pre>\n\n<p>In code-behind page. I create a WebMethod:</p>\n\n<pre><code>[System.Web.Services.WebMethod]\npublic static string CreateSessionViaJavascript(string strTest)\n{\n    Page objp = new Page();\n    objp.Session[\"controlID\"] = strTest; \n    return strTest;\n}\n</code></pre>\n\n<p>After call the web method to create a session from javascript. The session \"controlID\" will has value \"This is my session\".</p>\n\n<p>If you use the way I have explained, then please add this block of code inside form tag of your aspx page. The code help to enable page methods.</p>\n\n<pre><code>&lt;asp:ScriptManager EnablePageMethods=\"true\" ID=\"MainSM\" runat=\"server\" ScriptMode=\"Release\" LoadScriptsBeforeUI=\"true\"&gt;&lt;/asp:ScriptManager&gt;\n</code></pre>\n\n<p>Source: <a href=\"http://www.codeproject.com/Questions/341573/JavaScript-How-to-Set-values-to-Session-in-Javascr\">JavaScript - How to Set values to Session in Javascript</a></p>\n\n<p>Happy codding,\nTri</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can store and read string information in a cookie.</p>\n\n<p>If it is a session id coming from the server, the server can generate this cookie. And when another request is sent to the server the cookie will come too. Without having to do anything in the browser.</p>\n\n<p>However if it is javascript that creates the session Id. You can create a cookie with javascript, with a function like:</p>\n\n<p>The read function work from any page or tab of the same domain that has written it, either if the cookie was created from the page in javascript or from the server.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use Local storage.</p>\n\n<p>local storage is same as session. the data will be removed when you close the browser.</p>\n\n<pre><code>&lt;script&gt; \nlocalStorage.setItem('lastname','Smith');\n\nalert(localStorage.getItem('lastname'));\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Do not putting an expire date, will create a session cookie.</p>\n\n<p>See <a href=\"http://stackoverflow.com/a/532660/1901857\">http://stackoverflow.com/a/532660/1901857</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>how to create session in javascript?</p>\n\n<p>i try like this </p>\n\n<pre><code>&lt;script type=\"text/javascript\" &gt;\n{\nSession[\"controlID\"] =\"This is my session\";\n}\n&lt;/script&gt; \n</code></pre>\n\n<p>hoping your support\nAlex</p>\n",
            "last_activity_date": 1419521478,
            "question_id": 2257631,
            "score": 16,
            "tags": [
                "javascript"
            ],
            "title": "how create a session using javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"https://github.com/mozilla/pdf.js/\" rel=\"nofollow\">https://github.com/mozilla/pdf.js/</a></p>\n\n<p>for a live demo <a href=\"http://mozilla.github.io/pdf.js/\" rel=\"nofollow\">http://mozilla.github.io/pdf.js/</a></p>\n\n<p>it's probably what you want, but I can't see the point of this since modern browsers include such functionality, also it will run terribly slow on low-powered devices like mobile devices that, by the way, have their own optimized plugins and apps.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This question demonstrates an approach that might be helpful to you: <a href=\"http://stackoverflow.com/questions/975652/silent-print-a-embedded-pdf\">Silent print a embedded PDF</a></p>\n\n<p>It uses the <code>&lt;embed&gt;</code> tag to embed the PDF in the document:</p>\n\n<pre><code>&lt;embed\n    type=\"application/pdf\"\n    src=\"path_to_pdf_document.pdf\"\n    id=\"pdfDocument\"\n    width=\"100%\"\n    height=\"100%\"&gt;\n&lt;/embed&gt;\n</code></pre>\n\n<p>Then you call the <code>.print()</code> method on the element in Javascript when the PDF is loaded:</p>\n\n<pre><code>function printDocument(documentId) {\n    var doc = document.getElementById(documentId);\n\n    //Wait until PDF is ready to print    \n    if (typeof doc.print === 'undefined') {    \n        setTimeout(function(){printDocument(documentId);}, 1000);\n    } else {\n        doc.print();\n    }\n}\n</code></pre>\n\n<p>You could place the embed in a hidden iframe and print it from there, giving you a seamless experience.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Here is a function to print a PDF from an iframe.</p>\n\n<p>You just need to pass the URL of the PDF to the function. It will create an iframe and trigger print once the PDF is load.</p>\n\n<p>Note that the function doesn't destroy the iframe. Instead, it reuses it each time the function is call. It's hard to destroy the iframe because it is needed until the printing is done, and the print method doesn't has callback support (as far as I know).</p>\n\n<pre><code>printPdf = function (url) {\n  var iframe = this._printIframe;\n  if (!this._printIframe) {\n    iframe = this._printIframe = document.createElement('iframe');\n    document.body.appendChild(iframe);\n\n    iframe.style.display = 'none';\n    iframe.onload = function() {\n      setTimeout(function() {\n        iframe.focus();\n        iframe.contentWindow.print();\n      }, 1);\n    };\n  }\n\n  iframe.src = url;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am building a list of PDFs in HTML. In the list I'd like to include a download link and a print button/link. Is there some way to directly open the Print dialog for the PDF without the user seeing the PDF or opening a PDF viewer?</p>\n\n<p>Some variation of downloading the PDF into a hidden iframe and triggering it to print with JavaScript?</p>\n",
            "last_activity_date": 1402495004,
            "question_id": 16239513,
            "score": 15,
            "tags": [
                "javascript",
                "pdf"
            ],
            "title": "Print PDF directly from JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It's been some time since I have had to deal with chrome's extensions. I remember it was quite a struggle before I got how things worked. In order for your extension to communicate with the browser it's easy you use your javascript/background file, and to communicate with the webpage you need to use <code>chrome.tabs.executeScript</code> but that's really tricky and can be a real pain in the butt. I suggest you take <a href=\"https://developer.chrome.com/extensions/getstarted.html\" rel=\"nofollow\">google's tour on extensions</a> and give their api a really good overlook, everything's in there! I wish you good luck and I hope this answer has helped you! :P</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>The Google documentation has everything, but it's hard to pull all the information together.  There are two main types of scripts:<br>\n1. Background scripts have full access to the Chrome api's, but can't interact with the target webpage.<br>\n2. Content scripts can interact with each other and with the webpage's DOM (but not its scripts, from which it's isolated), but have only limited access to the Chrome api's.<br>\nBoth run whenever you load a new page (unless you've used \"matches\" to restrict where the content script runs).</p>\n\n<p>You can communicate between the two via <a href=\"http://developer.chrome.com/extensions/messaging.html\" rel=\"nofollow\">message passing</a>.  This is more easily done from content scripts than from background scripts because you need to know the tab's id for the latter.</p>\n\n<p>Other scripts (<code>browserAction.js</code>, <code>pageAction.js</code>, <code>optionsPage.js</code>) only run when their corresponding html page is opened (as if you are opening the webpage in your browser window, which is what you're really doing).  They are similar to background scripts in restrictions and abilities.</p>\n\n<p>Try to avoid the need to interact with a page's scripts.  The best way I know of is to interact through the shared DOM (literally writing javascript code inside html comments).  But the target of your extension isn't designed for this, so you'll have to include you're own script that does this into the webpage.  Use a content script to write the script element into the document (its <code>src</code> is<br>\n<a href=\"http://developer.chrome.com/extensions/extension.html#method-getURL\" rel=\"nofollow\"><code>chrome.extension.getURL(\"myscript.js\")</code></a>,<br>\nand you'll need to have<br>\n<code>\"web_accessible_resources\": [\"myscript.js\"]</code><br>\nin your manifest.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h1>Three different contexts</h1>\n\n<p>As a Chrome extension developer, you can distinguish three different environments.</p>\n\n<ol>\n<li><strong>Extension code</strong>, runs in the process of your Chrome extension<br>\n<ul>\n<li><a href=\"https://developer.chrome.com/extensions/background_pages.html\">Background</a> / <a href=\"https://developer.chrome.com/extensions/event_pages.html\">event</a> page</li>\n<li><a href=\"https://developer.chrome.com/extensions/browser_action.html\">Browser action</a> / <a href=\"https://developer.chrome.com/extensions/page_action.html\">page action</a> popup</li>\n<li>The page within an <a href=\"https://developer.chrome.com/extensions/experimental.infobars.html\">info bar</a>.</li>\n<li>Tabs whose top-level frame is a document from your extension, such as the <a href=\"https://developer.chrome.com/extensions/options.html\">options page</a>.</li>\n</ul></li>\n<li><a href=\"https://developer.chrome.com/extensions/content_scripts.html\"><strong>Content scripts</strong></a>, running in the tab's process.</li>\n<li><strong>Non-extension code</strong> running in the tab's process (<a href=\"http://stackoverflow.com/a/9517879/938089?building-a-chrome-extension-inject-code-in-a-page-using-a-content-script\">injected by content scripts</a>).</li>\n</ol>\n\n<p>Note that when a non-extension page embeds <code>&lt;iframe src=\"chrome-extension://EXTENSIONID/page.htm\"&gt;</code>, then <code>page.htm</code> is not seen as a part of the extension, because all frames in a tab share the same process, in this case a non-extension process <sup><a href=\"http://www.chromium.org/developers/design-documents/multi-process-architecture\">Chrome is a multi-process application</a></sup>.</p>\n\n<h1>Accessing the <code>window</code> object within an extension process</h1>\n\n<p>Because all extension code runs in the same process, they can access each other global <code>window</code> object. This feature is not well-known, but allows one to directly manipulate JavaScript and DOM objects within the same extension process. It's generally better to not use this method, but use the <a href=\"https://developer.chrome.com/extensions/messaging.html\">message passing</a> APIs instead.</p>\n\n<pre><code>// To access the `window` of a background page, use\nvar bgWindowObject = <a href=\"https://developer.chrome.com/extensions/extension.html#method-getBackgroundPage\">chrome.extension.getBackgroundPage()</a>;\n// To access the `window` of an event or background page, use:\n<a href=\"https://developer.chrome.com/extensions/runtime.html#method-getBackgroundPage\">chrome.runtime.getBackgroundPage</a>(function(bgWindowObject) {\n    // Do something with `bgWindow` if you want\n});\n\n// To access the `window` of the badge's popup page (only if it's open!!!), use\nvar popupWindowObject = <a href=\"https://developer.chrome.com/extensions/extension.html#method-getViews\">chrome.extension.getViews({type:'popup'})[0]</a>;\n\n// To access the `window` of the options page (called /options.html), use\nvar allWindowObjects = <a href=\"https://developer.chrome.com/extensions/extension.html#method-getViews\">chrome.extension.getViews({type:'tab'})</a>;\nvar popupWindowObjects = allWindowObjects.filter(function(windowObject) {\n    return windowObject.location.pathname == '/options.html';\n});\n// Example: Get the `window` object of the first options page:\nvar popupWindowObject = popupWindowObjects[0];\n</code></pre>\n\n<p>To keep this section short, I have intentionally limited the code example to a demonstration of accessing other global <code>window</code> objects. You could use these methods to define a global method, set a global variable, call a global function, etc.<br>\n... provided that the page is open. Someone <a href=\"http://stackoverflow.com/questions/17103903/howto-send-a-message-from-content-script-to-inactive-popup-chrome-extension\">thought</a> that the popup's <code>window</code> is always available. This is not true, when the popup is closed, the global object is disposed!</p>\n\n<h1>Communication by <a href=\"https://developer.chrome.com/extensions/messaging.html\">message passing</a></h1>\n\n<p>A message channel always has two ends: The sender and a receiver.<br>\nTo become a receiver, bind an event listener using the <a href=\"https://developer.chrome.com/extensions/runtime.html#event-onMessage\"><code>chrome.runtime.onMessage.addListener</code></a> method. This can be done by extension code and content scripts.</p>\n\n<p>To pass messages within the extension, use <a href=\"https://developer.chrome.com/extensions/runtime.html#method-sendMessage\"><code>chrome.runtime.sendMessage</code></a>. If you want to send a message to another tab, call <a href=\"https://developer.chrome.com/extensions/tabs.html#method-sendMessage\"><code>chrome.tabs.sendMessage</code></a>. The target tab is specified by including an integer (<code>tabId</code>) as its first argument. Note that a background page can only send a message to one tab. To reach all tabs, the method has to be called for every tab. For instance:</p>\n\n<pre><code><a href=\"https://developer.chrome.com/extensions/tabs.html#method-query\">chrome.tabs.query</a>({}, function(tabs) {\n    for (var i=0; i&lt;tabs.length; i++) {\n        <a href=\"https://developer.chrome.com/extensions/tabs.html#method-sendMessage\">chrome.tabs.sendMessage</a>(tabs[i].id, \"some message\");\n    }\n});</code></pre>\n\n<p>Content scripts can only call <a href=\"https://developer.chrome.com/extensions/runtime.html#method-sendMessage\"><code>chrome.runtime.sendMessage</code></a> to send a message to extension code. If you want to send a message from a content script to another content script, a background / event page should is needed, which takes a message and sends it to the desired tab. See <a href=\"http://stackoverflow.com/questions/11597416/how-to-transfer-data-between-the-content-scripts-of-two-different-tabs/11599150#11599150\">this answer</a> for an example.</p>\n\n<p>The <code>sendMessage</code> methods accept an optional function, which is received as a third argument to the <code>onMessage</code> event.</p>\n\n<pre><code>chrome.runtime.onMessage.addListener(function(message, sender, sendResponse) {\n    if (message === 'message') sendResponse('the response');\n});\nchrome.runtime.sendMessage('message', function(response) {\n    console('sendResponse was called with: ' + response);\n});\n</code></pre>\n\n<p>The previous example shows obvious behaviour. Things get trickier when you want to send a response asynchronously, for instance if you want to perform an AJAX request to fetch some data. When the <code>onMessage</code> function returns without having called <code>sendResponse</code>, Chrome will immediately invoke <code>sendResponse</code>. Since <code>sendResponse</code> can be called only once, you will receive the following error:</p>\n\n<blockquote>\n  <p>Could not send response: The chrome.runtime.onMessage listener must return true if you want to send a response after the listener returns  (message was sent by extension <em>EXTENSION ID HERE</em>)</p>\n</blockquote>\n\n<p>Do as the error suggest, add <code>return true;</code> inside your onMessage event listener:</p>\n\n<pre><code>chrome.runtime.onMessage.addListener(function(message, sender, sendResponse) {\n    setTimeout(function() { // Example: asynchronous invocation of sendResponse\n        sendResponse('async response');\n    }, 200);\n    return true;\n});\n</code></pre>\n\n<p>I've explained the practical application of simple one-time message passing in this section. If you want to know more about long-lived message channels or cross-extension messaging, read the <a href=\"https://developer.chrome.com/extensions/messaging.html\">tutorial from the official documentation</a>.</p>\n\n<p>The message passing API has undergone several name changes. Keep this in mind if you read old examples. The history and compatibility notes can be found <a href=\"http://stackoverflow.com/questions/11811554/chrome-extension-port-error-could-not-establish-connection-receiving-end-does/11811936#11811936\">here</a>.</p>\n\n<h1>Communication between a content script and the page</h1>\n\n<p>It's possible to communicate with the page. Apsillers has created an excellent answer which explains how to set up a communication channel between a (non-extension) page and a content script. Read his answer at <a href=\"http://stackoverflow.com/questions/10526995/can-a-site-invoke-a-browser-extension/10527809#10527809\">Can a site invoke a browser extension?</a>.</p>\n\n<p>The advantage of apsiller's method over the <a href=\"https://developer.chrome.com/extensions/content_scripts.html#host-page-communication\">one from the documentation</a> is that a custom event is used. The documentation uses <code>window.postMessage</code> to send a message to the page, but this could cause conflict with badly coded pages which do not expect the message events.</p>\n",
                    "is_accepted": true,
                    "score": 34
                }
            ],
            "body": "<p>I think chrome extensions are overall quite simple and very powerful, but one thing that always confuses me is trying to communicate between the various script that code may run in. There's the code that runs when referenced from the \"default_popup\" page of the browser action, the code in the \"scripts\" property of \"background\" and the content scripts. </p>\n\n<p>In what context are scripts in these categories run, and how can each communicate with the others?</p>\n",
            "last_activity_date": 1372079860,
            "question_id": 17246133,
            "score": 10,
            "tags": [
                "javascript",
                "google-chrome",
                "google-chrome-extension"
            ],
            "title": "Contexts and methods for communication between the browser action, background scripts, and content scripts of chrome extensions?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I think I've got a working solution.</p>\n\n<pre class=\"lang-html prettyprint-override\"><code> &lt;!-- links will work as expected where javascript is disabled--&gt;\n &lt;a class=\"intent\"   \n    href=\"http://facebook.com/someProfile\"   \n    data-scheme=\"fb://profile/10000\"&gt;facebook&lt;/a&gt;\n</code></pre>\n\n<p>And my javascript works like this.<br>\n<em>note: there's a little jQuery mixed in there, but you don't need to use it if you don't want to.</em></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>(function () {\n\n    // tries to execute the uri:scheme\n    function goToUri(uri, href) {\n        var start, end, elapsed;\n\n        // start a timer\n        start = new Date().getTime();\n\n        // attempt to redirect to the uri:scheme\n        // the lovely thing about javascript is that it's single threadded.\n        // if this WORKS, it'll stutter for a split second, causing the timer to be off\n        document.location = uri;\n\n        // end timer\n        end = new Date().getTime();\n\n        elapsed = (end - start);\n\n        // if there's no elapsed time, then the scheme didn't fire, and we head to the url.\n        if (elapsed &lt; 1) {\n            document.location = href;\n        }\n    }\n\n    $('a.intent').on('click', function (event) {\n        goToUri($(this).data('scheme'), $(this).attr('href'));\n        event.preventDefault();\n    });\n})();\n</code></pre>\n\n<p>I also threw this up as a <a href=\"https://gist.github.com/ChaseFlorell/5119047\">gist</a> that you can fork and mess with. You can also include the <a href=\"https://gist.github.com/ChaseFlorell/5119047\">gist</a> in a jsfiddle if you so choose.</p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>I am hoping there might be some way of detecting whether or not an uri:scheme is registered on a mobile device from within the browser.</p>\n\n<p>IE: I'd like to check if the facebook, twitter, pinterest apps are installed and can be launched from their associated uri:scheme.</p>\n\n<pre><code>if(fb_isInstalled) {\n    // href=\"fb://profile/....\"\n} else {\n    // href=\"http://m.facebook.com/...\"\n}\n</code></pre>\n\n<p>Basically if the user has installed facebook, then launch the app, but fall back to the mobile version of the fb website if the app is not installed.</p>\n",
            "last_activity_date": 1395728865,
            "question_id": 13675535,
            "score": 10,
            "tags": [
                "javascript",
                "mobile-browser"
            ],
            "title": "How to launch apps (facebook/twitter/etc) from mobile browser but fall back to hyperlink if the app isn&#39;t installed"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Javascript:</p>\n\n<pre><code>// Check\ndocument.getElementById(\"checkbox\").checked = true;\n\n//  Uncheck\ndocument.getElementById(\"checkbox\").checked = false;\n</code></pre>\n\n<p>jQuery (1.6+):</p>\n\n<pre><code>// Check\n$(\"#checkbox\").prop(\"checked\", true);\n\n//  Uncheck\n$(\"#checkbox\").prop(\"checked\", false);\n</code></pre>\n\n<p>jQuery (1.5-):</p>\n\n<pre><code>// Check\n$(\"#checkbox\").attr(\"checked\", true);\n\n//  Uncheck\n$(\"#checkbox\").attr(\"checked\", false);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 200
                },
                {
                    "body": "<p>to check:</p>\n\n<pre><code>document.getElementById(\"id of checkbox\").checked = true;\n</code></pre>\n\n<p>to uncheck:</p>\n\n<pre><code>document.getElementById(\"id of checkbox\").checked = false;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>To check: <code>document.getElementById('id').checked = true;</code></p>\n\n<p>To uncheck: <code>document.getElementById('id').checked = false;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can a checkbox be checked/unchecked using JavaScript or jQuery?</p>\n",
            "last_activity_date": 1410965607,
            "question_id": 8206565,
            "score": 87,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Check/Uncheck checkbox with javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><code>localStorage</code> and <code>sessionStorage</code> both extend <code>Storage</code>. There is no difference between them except for the intended \"non-persistence\" of <code>sessionStorage</code>.</p>\n",
                    "is_accepted": true,
                    "score": 81
                },
                {
                    "body": "<p>performance wise, my (crude) measurements found no difference on 1000 writes and reads</p>\n\n<p>security wise, intuitively it would seem the localStore might be shut down before the sessionStore, but have no  concrete evidence - maybe someone else does?</p>\n\n<p>functional wise, concur with digitalFresh above</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The only difference is that localStorage has a different expiration time, <code>sessionStorage</code> will only be accessible while and by the window that created it is open. <br /><code>localStorage</code> lasts until you delete it or the user deletes it.<br />\nLets say that you wanted to save a login username and password you would want to use <code>sessionStorage</code>over <code>localStorage</code> for security reasons (ie. another person accessing their account at a later time). <br />But if you wanted to save a user's settings on their machine you would  probably want <code>localStorage</code>. All in all:<br /></p>\n\n<p><code>localStorage</code> - use for long term use.<br />\n<code>sessionStorage</code> - use when you need to store somthing that changes or somthing temporary </p>\n\n<p>While localStorage and sessionStorage are great for short term/short storage \nif you wanted to store longer things I would recommend JavaScript FileSystem \nObject extravaganza!(Not really called that) It's great for storing longer files\nand directories.</p>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>sessionStorage is the same as localStorage, except that it stores the data for only one session, and it will be removed when the user closes the browser window that created it</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Ya session storage and local storage are same in behaviour except one that is local storage will store the data until and unless the user delete the cache and cookies and session storage data will retain in the system until we close the session i,e until we close the session storage created window.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Few other points which might be helpful to understand differences between local and session storage</p>\n\n<ol>\n<li><p>Both local storage and session storage are scoped to document origin, so</p>\n\n<p><a href=\"https://mydomain.com/\">https://mydomain.com/</a> <br/>\n<a href=\"http://mydomain.com/\">http://mydomain.com/</a> <br/>\n<a href=\"https://mydomain.com:8080/\">https://mydomain.com:8080/</a></p>\n\n<p>All of the above URL's will <strong><em>not</em></strong> share the same storage. (Notice path of the web page does not affect the web storage)</p></li>\n<li><p>Session storage is different even for the document with same origin policy open in different tabs, so same web page open in two different tabs <strong><em>cannot</em></strong> share the same session storage.</p></li>\n<li><p>Both local and session storage are also scoped by <strong><em>browser vendors</em></strong>. So storage data saved by IE cannot be read by Chrome or FF.</p></li>\n</ol>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 33
                }
            ],
            "body": "<p>Apart being non persistent and scoped only to the current window are there any benefits performance, data access etc. on Session Storage over Local Storage?</p>\n",
            "last_activity_date": 1418759425,
            "question_id": 5523140,
            "score": 78,
            "tags": [
                "javascript",
                "html5",
                "local-storage",
                "session-storage"
            ],
            "title": "local storage vs. session storage"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Calls to <code>parseInt</code> should always specify a base in the second argument:</p>\n\n<pre><code>parseInt(\"08\", 10);\n</code></pre>\n\n<p>Earlier versions of JavaScript treat strings starting with <code>0</code> as octal (when no base is specified) and neither <code>08</code> nor <code>09</code> are valid octal numbers. </p>\n\n<p>From the Mozilla <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\" rel=\"nofollow\">documentation</a>:</p>\n\n<blockquote>\n  <p>If radix is undefined or 0, JavaScript assumes the following:</p>\n  \n  <ul>\n  <li>If the input string begins with \"0x\" or \"0X\", radix is 16\n  (hexadecimal). </li>\n  <li>If the input string begins with \"0\", radix is eight\n  (octal). This feature is non-standard, and some implementations\n  deliberately do not support it (instead using the radix 10).  For this\n  reason <strong>always specify a radix when using parseInt</strong>. </li>\n  <li>If the input string\n  begins with any other value, the radix is 10 (decimal).</li>\n  </ul>\n  \n  <p>If the first character cannot be converted to a number, parseInt returns NaN.</p>\n</blockquote>\n\n<p>And from the <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf\" rel=\"nofollow\">ECMAScript 3</a> standard:</p>\n\n<blockquote>\n  <p>When radix is 0 or <strong>undefined</strong> and the string's number begins with a <strong>0</strong>\n  digit not followed by an <strong>x</strong> or <strong>X</strong>, then the implementation may, at its\n  discretion, interpret the number either as being octal or as being\n  decimal. Implementations are encouraged to interpret numbers in this\n  case as being decimal.</p>\n</blockquote>\n\n<p>The latest version of JavaScript (<a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\" rel=\"nofollow\">ECMAScript 5</a>) <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/parseInt#ECMAScript_5_Removes_Octal_Interpretation\" rel=\"nofollow\">abandons this behavior</a>, but you should <em>still specify the radix</em> to satisfy older browsers.</p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>This is because if a number starts with a '0', it's treated as base 8 (octal).</p>\n\n<p>You can force the base by passing the base as the 2nd parameter.</p>\n\n<pre><code>parseInt(\"09\", 10) // 9\n</code></pre>\n\n<p>According to <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\">the docs</a>, the 2nd parameter is optional, but it's <em>not always</em> assumed to be 10, as you can see from your example.</p>\n",
                    "is_accepted": true,
                    "score": 117
                },
                {
                    "body": "<p>There is a Radix parameter</p>\n\n<pre><code>parseInt(value, base)\n</code></pre>\n\n<p>Where base is the radix.</p>\n\n<p>In this case you are evaluating base10 (decimal) numbers,\ntherefore use</p>\n\n<pre><code>parseInt(value, 10);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>This doesn't seem to be completely valid in new browsers. Internet Explorer 9 and 10 will return 8 if you execute 'parseInt(\"08\")' whereas Internet Explorer 8 and previous versions will return 0 (IE10 in quirks mode will also return 0).</p>\n\n<p>The latest version of Chrome also returns 8 so they must have changed the interpretation recently.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Tip: As you now know when default to octal has been deprecated. Here is how you would fix it in legacy browsers</p>\n\n<pre><code>// ES-5 15.1.2.2\nif (parseInt('08') !== 8 || parseInt('0x16') !== 22) {\n    parseInt = (function (origParseInt) {\n        var hexRegex = /^0[xX]/;\n        return function parseIntES5(str, radix) {\n            str = String(str).trim();\n            if (!Number(radix)) {\n                radix = hexRegex.test(str) ? 16 : 10;\n            }\n            return origParseInt(str, radix);\n        };\n    }(parseInt));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Javascript's parseInt function does not seem to completely work.</p>\n\n<pre><code>parseInt(\"01\") returns 1\nparseInt(\"02\") returns 2\nparseInt(\"03\") returns 3\nparseInt(\"04\") returns 4\nparseInt(\"05\") returns 5\nparseInt(\"06\") returns 6\nparseInt(\"07\") returns 7\nparseInt(\"08\") returns 0\nparseInt(\"09\") returns 0\n</code></pre>\n\n<p>You can't explain that. <a href=\"http://jsfiddle.net/UdbNd/\">Give it a try. (jsFiddle)</a></p>\n\n<p><strong>Edit</strong> Since this question was asked and answered, the \"feature\" of defaulting to octal radix has been deprecated. [<a href=\"http://www.w3schools.com/jsref/jsref_parseint.asp\">1</a>] [<a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/parseInt\">2</a>]</p>\n",
            "last_activity_date": 1414506240,
            "question_id": 8763396,
            "score": 72,
            "tags": [
                "javascript"
            ],
            "title": "Javascript parseInt() with leading zeros"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Looks like google.load is adding the script to the page using a document.write(), which if used after the page loads, wipes out the html. </p>\n\n<p>This explains more in-depth:\n<a href=\"http://groups.google.com/group/google-ajax-search-api/browse_thread/thread/e07c2606498094e6\">http://groups.google.com/group/google-ajax-search-api/browse_thread/thread/e07c2606498094e6</a></p>\n\n<p>Using one of the ideas, you could use a callback for the load to force it use append rather than doc.write:</p>\n\n<pre><code>setTimeout(function(){google.load('visualization', '1', {'callback':'alert(\"2 sec wait\")', 'packages':['corechart']})}, 2000);\n</code></pre>\n\n<p>This demonstrates the 2 second wait with the delayed alert window</p>\n",
                    "is_accepted": true,
                    "score": 79
                },
                {
                    "body": "<p>Note: The following is good for avoiding a time delay - it's just in time. The example can be used generally by all scripts (needing it), but was particularly used with Greasemonkey. It also uses the Google chart API as an example, but this solution goes beyond to other Google APIs and can be used anywhere you need to wait for a script to load.</p>\n\n<p>Using google.load with a callback did not solve the issue when using Greasemonkey to add a Google chart. In the process (Greasemonkey injected into page), the www.google.com/jsapi script node is added. After adding this element for Google's jsapi javascript, the injected (or page) script is ready to use the the google.load command (which needs to be loaded in the added node), but this jsapi script did not load yet. Setting the a timeout worked, but the timeout was merely a workaround for the Google jsapi script load's timing race with the injected/page script. Moving around where a script executes the google.load (and possibly google.setOnLoadCallback) can affect the timing race situation. The following proffers a solution that waits for the google script element to load before calling google.load. Here is an example:</p>\n\n<pre><code>// ********* INJECTED SCRIPT *********//\n// add element\nvar gscript = document.createElement('script');\ngscript.setAttribute(\"type\", \"application/javascript\");\ngscript.setAttribute(\"id\", \"XX-GMPlusGoogle-XX\");\ndocument.body.appendChild(gscript);\n\n// event listener setup     \ngscript.addEventListener(\"load\",    \n    function changeCB(params) {\n        gscript.removeEventListener(\"load\", changeCB);\n        google.load(\"visualization\", \"1\", {packages:[\"corechart\"], \"callback\": \n            function drawChart() {\n                var data;\n                // set the durationChart data (not in example)\n                data = new google.visualization.arrayToDataTable(durationChart);\n\n                var options = {\n                    title:\"Chart Title\",\n                    legend: {position:\"none\"},\n                    backgroundColor:\"white\",\n                    colors:[\"white\",\"Blue\"],\n                    width: window.innerWidth || document.body.clientWidth,\n                    height: window.innerHeight || document.body.clientHeight,\n                    vAxis: {title: \"Durations\", baselineColor: \"black\", textStyle:{fontSize:12}},\n                    hAxis: {title: \"Days Since First Instance\"},\n                    height: ((cnt &gt; 5)? cnt * 50 : 300),\n                    isStacked: true\n                }; // options\n\n\n                // put chart into your div element\n                var chart = new google.visualization.BarChart(document.getElementById('XX-ChartDiv-XX'));\n                chart.draw(data, options);\n            } // drawChart function\n        }); //packages within google.load &amp; google load\n    } // callback changeCB\n);\n\n// can use SSL as \"https://www.google.com/jsapi\";\ngscript.src = \"http://www.google.com/jsapi\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You just have to define a callback, and it will not clear the page (maybe the older versions of google.load() did, but apparently the new ones do not if used with callback). Here a simplified example when I'm loading the \"google.charts\" lib:</p>\n\n<pre><code>if(google) {\n    google.load('visualization', '1.0', {\n        packages: ['corechart'],\n        callback: function() {\n            // do stuff, if you wan't - it doesn't matter, because the page isn't blank!\n        }\n    } )\n}\n</code></pre>\n\n<p>When doing it whitout callback(), I still get the blank page too - but with callback, it's fixed for me.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>You don't need to set timeout. There is another way:</p>\n\n<pre><code>$.getScript(\"https://www.google.com/jsapi\", function () {\n     google.load('visualization', '1', { 'callback': 'alert()', 'packages': ['corechart'] });\n});\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code> function () {\n     google.load('visualization', '1', { 'callback': 'alert()', 'packages': ['corechart'] });\n }\n</code></pre>\n\n<p>will be executed \u200b\u200bafter successful load JSAPI script, then alert() will be executed \u200b\u200bafter successful google.load()</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Well, this looks strange but I'm not able to find a solution.</p>\n\n<p>Why in the world does this fiddle <a href=\"http://jsfiddle.net/carlesso/PKkFf/\">http://jsfiddle.net/carlesso/PKkFf/</a> show the page content and, then when google.load occurs, the page goes blank?</p>\n\n<p>It works well if the google.load is done immediately, but having it delayed does not work at all.</p>\n\n<p>Here the page source for the lazier (or smarter) of you:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;Ciao&lt;/title&gt;\n    &lt;script type=\"text/javascript\" src=\"https://www.google.com/jsapi\"&gt;&lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Test&lt;/h1&gt;\n    &lt;div id=\"quicivanno\"&gt;\n      &lt;p&gt;ciao&lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n  &lt;script type=\"text/javascript\"&gt;\n       setTimeout(function() {google.load('visualization', '1.0', {'packages':['corechart']});}, 2000);\n  &lt;/script&gt;\n&lt;/html&gt;\u200b\n</code></pre>\n",
            "last_activity_date": 1420475663,
            "question_id": 9519673,
            "score": 67,
            "tags": [
                "javascript",
                "google-visualization",
                "google-loader"
            ],
            "title": "Why does google.load cause my page to go blank?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://api.jquery.com/hide/\"><code>hide()</code></a> sets the matched elements' CSS <code>display</code> property to <code>none</code>.</p>\n\n<p><a href=\"http://api.jquery.com/remove/\"><code>remove()</code></a> removes the matched elements from the DOM completely.</p>\n\n<p><a href=\"http://api.jquery.com/detach/\"><code>detach()</code></a> is like <code>remove()</code>, but keeps the stored data and events associated with the matched elements.</p>\n\n<p>To re-insert a detached element into the DOM, simply insert the returned <code>jQuery</code> set from <code>detach()</code>:</p>\n\n<pre><code>var span = $('span').detach();\n\n...\n\nspan.appendTo('body');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 77
                },
                {
                    "body": "<p><code>hide()</code> sets the matched element's display to none.</p>\n\n<p><code>detach()</code> removes the matched elements, including all text and child nodes.</p>\n\n<p>This method stores all the data associated with the element and so can be used to restore the element's data as well as event handlers.</p>\n\n<p><code>remove()</code> also removes the matched elements, including all text and child nodes.</p>\n\n<p>However, in this case only the element's data can be restored, not its event handlers can't.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>In jQuery ,there are three methods for removing elements from DOM.These three methods are .empty(),.remove() and.detach().All these methods are used for removing elements from DOM but\nthey all are different</p>\n\n<p>Hide()\nHide the matched elements.With no parameters, the .hide() method is the simplest way to hide an HTML element:</p>\n\n<pre><code>$( \".box\" ).hide();\n</code></pre>\n\n<p><strong>.EMPTY()</strong></p>\n\n<p>The empty() methods removes all child nodes and content from the selected elements.This method does not remove the element itself,or its attributes..</p>\n\n<p><strong>Note</strong></p>\n\n<p>.empty() method does not accept any argument\nTo avoid memory leaks, jQuery removes other constructs such as data and event handlers from the child elements before removing the elements themselves.</p>\n\n<p><strong>Example</strong> </p>\n\n<pre><code>&lt;div class=\"content\"&gt;\n&lt;div class=\"hai\"&gt;Hai&lt;/div&gt;\n&lt;div class=\"goodevening\"&gt;good evening&lt;/div&gt;\n&lt;/div&gt;\n$(\"div.hai\").empty() \n</code></pre>\n\n<p>This will result in a DOM structure with the Hai text deleted </p>\n\n<pre><code>&lt;div class=\"content\"&gt;\n&lt;div class=\"hai\"&gt;&lt;/div&gt;\n&lt;div class=\"goodevening\"&gt;good evening&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>If we had any number of nested elements inside , they would be removed, too.</p>\n\n<p><strong>REMOVE()</strong> </p>\n\n<p>The remove() method removes the selected elements, including all text and child nodes. This method also removes data and events of the selected elements.</p>\n\n<p><strong>Note</strong>\nUse.remove() when you want to remove the element itsel,as well as everything inside it.In addition to this,all bound events and jQuery data associated with the elements are removed</p>\n\n<p><strong>EXAMPLE</strong></p>\n\n<pre><code>Consider the following html\n&lt;div class=\"content\"&gt;\n&lt;div class=\"hai\"&gt;Hai&lt;/div&gt;\n&lt;div class=\"goodevening\"&gt;good evening&lt;/div&gt;\n&lt;/div&gt;\n$( \".hai\" ).remove(); \n</code></pre>\n\n<p>This will result in a DOM structure with the  element deleted:</p>\n\n<pre><code>&lt;div class=\"content\"&gt;\n&lt;div class=\"goodevening\"&gt;good evening&lt;/div&gt;\n&lt;/div\n</code></pre>\n\n<p>If we had any number of nested elements inside , they would be removed, too. Other jQuery constructs such as data or event handlers are erased as well.</p>\n\n<p><strong>DETACH()</strong></p>\n\n<p>The detach() method removes the selected elements, including all text and child nodes. However, it keeps data and events.\nThis method also keeps a copy of the removed elements, which allows them to be reinserted at a later time.</p>\n\n<p><strong>Note</strong></p>\n\n<p>detach() method is useful when removed elements are to be reinserted into the DOM at a later time</p>\n\n<p>Example </p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n\n&lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;p&gt;Hai!&lt;/p&gt;Good &lt;p&gt;Afternoo&lt;/p&gt;\n&lt;button&gt;Attach/detach paragraphs&lt;/button&gt;\n&lt;script&gt;\n$( \"p\" ).click(function() {\n$( this ).toggleClass( \"off\" );\n});\nvar p;\n$( \"button\" ).click(function() {\nif ( p ) {\np.appendTo( \"body\" );\np = null;\n} else {\np = $( \"p\" ).detach();\n}\n});\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>For more info visit:<a href=\"http://www.scriptcafe.in/2014/03/what-is-difference-between-jquery_15.html\" rel=\"nofollow\">http://www.scriptcafe.in/2014/03/what-is-difference-between-jquery_15.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is the functional difference between these three <code>jQuery</code> methods:</p>\n\n<ul>\n<li>detach()</li>\n<li>hide()</li>\n<li>remove()</li>\n</ul>\n",
            "last_activity_date": 1396006050,
            "question_id": 4942070,
            "score": 44,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Differences between detach(), hide() and remove() - jQuery"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Is there a preformance difference in\n  Javascript between a switch statement\n  and an if...else if....else?</p>\n</blockquote>\n\n<p>I don't think so, <code>switch</code> is useful/short if you want prevent multiple <code>if-else</code> conditions.</p>\n\n<blockquote>\n  <p>Is the behavior of switch and\n  if...else if...else different across\n  browsers? (FireFox, IE, Chrome, Opera,\n  Safari)</p>\n</blockquote>\n\n<p>Behavior is same across all browsers :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<ol>\n<li>If there is a difference, it'll never be large enough to be noticed.</li>\n<li>N/A</li>\n<li>No, they all function identically.</li>\n</ol>\n\n<p>Basically, use whatever makes the code most readable. There are definitely places where one or the other constructs makes for cleaner, more readable and more maintainable. This is far more important that perhaps saving a few nanoseconds in JavaScript code.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<ol>\n<li>Workbenching might result some very small differences in some cases but the way of processing is browser dependent anyway so not worth bothering</li>\n<li>Because of different ways of processing</li>\n<li>You can't call it a browser if the behavior would be different anyhow</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Answering in generalities:</p>\n\n<ol>\n<li>Yes, usually.</li>\n<li><a href=\"http://oreilly.com/server-administration/excerpts/even-faster-websites/writing-efficient-javascript.html\">See More Info Here</a> </li>\n<li>Yes, because each has a different JS processing engine, however, in running a test on the site below, the Swtich always out performed the if, elseif on a large number of iterations.</li>\n</ol>\n\n<p><a href=\"http://home.earthlink.net/~kendrasg/info/js_opt/jsOptMain.html\">Really old test site</a></p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>A switch statement is essentially the same as a series of \"if\" and \"else-if\" statements.\nt's simple to use, logical in syntax.</p>\n\n<p>Consider following example </p>\n\n<pre><code>var a =4 ;\nif (a==1)\n  alert(\"\"+a)\nelse if (a==2)\n  alert(\"\"+a)\nelse if (a==3)\n  alert(\"\"+a)\nelse if (a==4)\n  alert(\"\"+a)\n\n\nswitch(a){\ncase 1:\n      alert(\"\"+a)\nbreak\ncase 2:\n      alert(\"\"+a)\nbreak\ncase 3:\n      alert(\"\"+a)\nbreak\ncase 4:\n      alert(\"\"+a)\n</code></pre>\n\n<p>they both take similar execution time but switch-case looks more developer friendly.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Other than syntax, a switch can be implemented using a tree which makes it <code>O(log n)</code>, while a <em>if/else</em> has to be implemented with an <code>O(n)</code> procedural approach. More often they are both processed procedurally and the only difference is syntax, and moreover does it really matter -- unless you're statically typing 10k cases of if/else anyway? </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Sometimes it's better to use neither.  For example, in a \"dispatch\" situation, Javascript lets you do things in a completely different way:</p>\n\n<pre><code>function dispatch(funCode) {\n  var map = {\n    'explode': function() {\n      prepExplosive();\n      if (flammable()) issueWarning();\n      doExplode();\n    },\n\n    'hibernate': function() {\n      if (status() == 'sleeping') return;\n      // ... I can't keep making this stuff up\n    },\n    // ...\n  };\n\n  var thisFun = map[funCode];\n  if (thisFun) thisFun();\n}\n</code></pre>\n\n<p>Setting up multi-way branching by creating an object has a lot of advantages. You can add and remove functionality dynamically. You can create the dispatch table from data. You can examine it programmatically. You can build the handlers with other functions.</p>\n\n<p>There's the added overhead of a function call to get to the equivalent of a \"case\", but the advantage (when there are lots of cases) of a hash lookup to find the function for a particular key.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>The performance difference between a <code>switch</code> and <code>if...else if...else</code> is small, they basically do the same work. One difference between them that may make a difference is that the expression to test is only evaluated once in a <code>switch</code> while it's evaluated for each <code>if</code>. If it's costly to evaluate the expression, doing it one time is of course faster than doing it a hundred times.</p>\n\n<p>The difference in implementation of those commands (and all script in general) differs quite a bit between browsers. It's common to see rather big performance differences for the same code in different browsers.</p>\n\n<p>As you can hardly performance test all code in all browsers, you should go for the code that fits best for what you are doing, and try to reduce the amount of work done rather than optimising how it's done.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It turns out that if-else if generally faster than switch</p>\n\n<p><a href=\"http://jsperf.com/switch-if-else/46\" rel=\"nofollow\">http://jsperf.com/switch-if-else/46</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Guys I have a couple of questions:</p>\n\n<ol>\n<li>Is there a performance difference in Javascript between a switch statement and an if...else if....else?   </li>\n<li>If so why?</li>\n<li>Is the behavior of switch and if...else if...else different across browsers? (FireFox, IE, Chrome, Opera, Safari)</li>\n</ol>\n\n<p>The reason for asking this question is it seems that I get better performance on a switch statement with approx 1000s cases in Firefox. </p>\n\n<hr>\n\n<p><strong>Edited</strong>\nUnfortuantly this is not my code the Javascript is being produced serverside from a compiled library and I have no access to the code. The method that is producing the javascript is called </p>\n\n<pre><code>CreateConditionals(string name, string arrayofvalues, string arrayofActions)\n</code></pre>\n\n<p>note arrayofvalues is a comma separated list.</p>\n\n<p>what it produces is</p>\n\n<pre><code>function [name] (value) {\n  if (value == [value from array index x]) {\n     [action from array index x]\n  }\n}\n</code></pre>\n\n<p>Note: where [name] = the name passed into the serverside function</p>\n\n<p>Now I changed the output of the function to be inserted into a TextArea wrote some javascript code to parse through the function and convert it to a set of case statments. \nfinally I run the function and it runs fine but performance differs in IE and Firefox.</p>\n",
            "last_activity_date": 1378372794,
            "question_id": 2922948,
            "score": 40,
            "tags": [
                "javascript",
                "cross-browser",
                "conditional-statements"
            ],
            "title": "Javascript switch vs. if...else if...else"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>clearTimeout() and feed the reference of the setTimeout, which will be a number. Then re-invoke it:</p>\n\n<pre><code>var initial;\n\nfunction invocation() {\n    alert('invoked')\n    initial = window.setTimeout( \n    function() {\n        document.body.style.backgroundColor = 'black'\n    }, 5000);\n}\n\ninvocation();\n\ndocument.body.onclick = function() {\n    alert('stopped')\n    clearTimeout( initial )\n    // re-invoke invocation()\n}\n</code></pre>\n\n<p>In this example, if you don't click on the body element in 5 seconds the background color will be black.</p>\n\n<p>Reference: </p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/DOM/window.clearTimeout\">https://developer.mozilla.org/en/DOM/window.clearTimeout</a></li>\n<li><a href=\"https://developer.mozilla.org/En/Window.setTimeout\">https://developer.mozilla.org/En/Window.setTimeout</a></li>\n</ul>\n\n<p>Note: setTimeout and clearTimeout are not ECMAScript native methods, but Javascript methods of the global window namespace.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>var myTimer = setTimeout(..., 115000);\nsomething.click(function () {\n    clearTimeout(myTimer);\n    myTimer = setTimeout(..., 115000);\n});\n</code></pre>\n\n<p>Something along those lines!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can store a reference to that timeout, and then call <a href=\"https://developer.mozilla.org/en/DOM/window.clearTimeout\"><code>clearTimeout</code></a> on that reference.</p>\n\n<pre><code>// in the example above, assign the result\nvar timeoutHandle = window.setTimeout(...);\n\n// in your click function, call clearTimeout\nwindow.clearTimeout(timeoutHandle);\n\n// then call setTimeout again to reset the timer\ntimeoutHandle = window.setTimeout(...);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 80
                },
                {
                    "body": "<p>You will have to remember the timeout \"Timer\", cancel it, then restart it:</p>\n\n<pre><code>g_timer = null;\n\n$(document).ready(function() {\n    startTimer();\n});\n\nfunction startTimer() {\n    g_timer = window.setTimeout(function() {\n        window.location.href = 'file.php';\n    }, 115000);\n}\n\nfunction onClick() {\n    clearTimeout(g_timer);\n    startTimer();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$(function() {\n\n    (function(){\n\n    \tvar pthis = this;\n    \tthis.mseg = 115000;\n    \tthis.href = 'file.php'\n\n    \tthis.setTimer = function() { \n    \t\treturn (window.setTimeout( function() {window.location.href = this.href;}, this.mseg));\n    \t};\n    \tthis.timer = pthis.setTimer();\n\n    \tthis.clear = function(ref) { clearTimeout(ref.timer); ref.setTimer(); };\n    \t$(window.document).click( function(){pthis.clear.apply(pthis, [pthis])} );\n\n    })();\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>here is a fiddle i created for someone in #jquery based off this response, enjoy.</p>\n\n<p><a href=\"http://jsfiddle.net/andrewboudreau/6KfGs/\" rel=\"nofollow\">http://jsfiddle.net/andrewboudreau/6KfGs/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This timer will fire a \"Hello\" alertbox after 30 seconds. However, everytime you click the reset timer button it clears the timerHandle then re-sets it again. Once it's fired, the game ends.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var timerHandle = setTimeout(\"alert('Hello')\",3000);\n    function resetTimer() {\n        window.clearTimeout(timerHandle);\n        timerHandle = setTimeout(\"alert('Hello')\",3000);\n    }\n&lt;/script&gt;\n\n&lt;body&gt;\n    &lt;button onclick=\"resetTimer()\"&gt;Reset Timer&lt;/button&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To reset the timer, you would need to set and clear out the timer variable</p>\n\n<pre><code>$time_out_handle = 0;\nwindow.clearTimeout($time_out_handle);\n$time_out_handle = window.setTimeout( function(){---}, 60000 );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have the following:</p>\n\n<pre><code>window.setTimeout(function() {\n    window.location.href = 'file.php';\n}, 115000);\n</code></pre>\n\n<p>How can I, via a .click function, reset the counter midway through the countdown?</p>\n",
            "last_activity_date": 1378243486,
            "question_id": 1472705,
            "score": 38,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Resetting a setTimeout"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You could perhaps use <a href=\"http://msdn.microsoft.com/en-us/library/6db0hwky%28v=VS.100%29.aspx\" rel=\"nofollow\">visual studio templates</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>great question, I've been thinking about this for quite some time. The only solutions that have popped up in my mind are hosting the files on the web and using them like a cdn or using symlinks. You could add a code snippet into your visual studio to reference them.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The correct solution is embedding javascript/css files in your project. You can do this by using <a href=\"http://scottonwriting.net/sowblog/archive/2010/10/28/just-where-is-webresource-axd.aspx\" rel=\"nofollow\">WebResources.axd</a>. This is the official way microsoft embeds js in its controls. (Like validation controls)   </p>\n\n<p>You can find a good tutorial on: <a href=\"http://www.4guysfromrolla.com/articles/080906-1.aspx\" rel=\"nofollow\">http://www.4guysfromrolla.com/articles/080906-1.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use proper version control. </p>\n\n<p>Keep the js in one location and then just <code>git pull</code> (or the equivelant Mercurial / Bazaar) them back into your code whenever you've updated your javascript.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>In the end, this is how I've achieved it. It may not be to everyone's taste - but worked a treat for me.</p>\n\n<p>Note: In all of our projects, static resources are in a root directory called 'Assets', so for example JavaScript is always in /Assets/js/ and CSS /Assets/css/.</p>\n\n<p><strong>Solution</strong></p>\n\n<ol>\n<li>In the project that is going to 'import' the common code, I simply add the common .js file 'As Link' within /Assets/js/.</li>\n<li>Go to that new addition's Properties and set 'Copy to Output Directory' to 'Copy if newer'. </li>\n<li>Now I simply edit the project's post-build event command line to the following:\n<strong>xcopy /Y /E \"$(TargetDir)\\Assets\" \"$(ProjectDir)\\Assets\"</strong></li>\n</ol>\n\n<p>When the project builds, it copies the imported files to \\bin\\Assets\\js - the post-build event then takes a copy of those over to the project directory - in time for the site to use them.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>This blog post describes an alternative solution to the answer by @beardtwizzle:</p>\n\n<p><a href=\"http://consultingblogs.emc.com/jamesdawson/archive/2008/06/03/using-linked-files-with-web-application-projects.aspx\" rel=\"nofollow\">http://consultingblogs.emc.com/jamesdawson/archive/2008/06/03/using-linked-files-with-web-application-projects.aspx</a></p>\n\n<p>The idea is similar:</p>\n\n<ol>\n<li>Add the shared file to to web project as a link </li>\n<li>Modify the _CopyWebApplication build step in the project, so that the linked files are copied correct destination path.</li>\n</ol>\n\n<p>So instead of a post build event the files are copied by a modified build step. For me this solution feels a little bit cleaner (but this may well be a matter of taste). Anyway I just added this to our solution and it works great so far!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know this issue is ancient, but still wanted to put forward my solution because it is a bit simpler than beardtwizzle's.</p>\n\n<p>You can ensure that Visual Studio copies all linked files to where you placed the link in Visual Studio's Solution Explorer by adding this at the end of your .csproj file:</p>\n\n<pre><code>  &lt;Target Name=\"CopyLinkedContentFiles\" BeforeTargets=\"Build\"&gt;\n    &lt;Copy SourceFiles=\"%(Content.Identity)\" \n          DestinationFiles=\"%(Content.Link)\" \n          SkipUnchangedFiles='true' \n          OverwriteReadOnlyFiles='true' \n          Condition=\"'%(Content.Link)' != ''\" /&gt;\n  &lt;/Target&gt;\n</code></pre>\n\n<p>I've described how this works in my blog post at\n<a href=\"http://mattperdeck.com/post/Copying-linked-content-files-at-each-build-using-MSBuild.aspx\">http://mattperdeck.com/post/Copying-linked-content-files-at-each-build-using-MSBuild.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>I can also see this question is ancient, but thought I would add my two cents...</p>\n\n<p>I have a javascript file in a separate project. I added a linked reference and this works well for publishing, but doesn't work in IIS Express or Casinni. I tried adding custom routing to catch the missing file and manually remap it, but it is bit of a hack and for some reason stopped working when I upgraded to MVC 5.1, so rather than fix the hack, I found a better way:</p>\n\n<p><code>System.Web.Optimization</code> has javascript bundles.</p>\n\n<p>In your shared project, set the <code>Copy To Output Directory</code> to 'Copy Always' and <code>Build Action</code> to 'Content' on your js file. This means your js files end up in the bin folder of your website project. They cannot be served from there (IIS wont serve anything in the bin folder for obvious security reasons), but they can be included in bundles</p>\n\n<pre><code>using System.Web;\nusing System.Web.Optimization;\n\npublic class BundleConfig\n{\n    public static void RegisterBundles(BundleCollection bundles)\n    {   \n        bundles.Add(new ScriptBundle(\"~/bundles/externalLibrary\").Include(\n                    \"~/bin/scripts/externalLibrary.js\"\n                    ));\n    }\n}\n</code></pre>\n\n<p>You then need to add this to Application_Start in your global.asax file (right next to register routes)</p>\n\n<pre><code>BundleConfig.RegisterBundles(System.Web.Optimization.BundleTable.Bundles);\n</code></pre>\n\n<p>then use your bundle link this in your razor cshtml:</p>\n\n<pre><code>&lt;script type='text/javascript' src='@System.Web.Optimization.BundleTable.Bundles.ResolveBundleUrl(\"~/bundles/externalLibrary\")'&gt;&lt;/script&gt;\n</code></pre>\n\n<p>you will need the nuget package for <a href=\"https://www.nuget.org/packages/microsoft.aspnet.web.optimization/\" rel=\"nofollow\">microsoft.aspnet.web.optimization</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Anyone that stumbles across this question here in the future should know that there are now Shared Projects in Visual Studio to solve this problem. Universal Windows projects use them by default and you can create your own by downloading and installing the VS extension here: <a href=\"https://visualstudiogallery.msdn.microsoft.com/315c13a7-2787-4f57-bdf7-adae6ed54450\" rel=\"nofollow\">https://visualstudiogallery.msdn.microsoft.com/315c13a7-2787-4f57-bdf7-adae6ed54450</a></p>\n\n<p>They work with all types of code language projects including C# or JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>We're beginning work on a couple of fully JavaScript-dependent web apps (our previous apps have been ASP.NET MVC, with JavaScript 'goodness' sprinkled over-the-top).</p>\n\n<p>We have a few files that will be shared across the board, and it would be nice to store these files in a Common project, and 'Add As Link' them into individual projects (as would be possible with compiled code).</p>\n\n<p>Obviously this doesn't work with something like JavaScript as the file isn't actually 'there' in the correct location.</p>\n\n<p><strong>Does anyone have any suggestions on keeping a single version of a shared JavaScript file, for use across multiple projects?</strong></p>\n",
            "last_activity_date": 1422420318,
            "question_id": 6107464,
            "score": 36,
            "tags": [
                "javascript",
                "visual-studio-2010"
            ],
            "title": "Handling common JavaScript files in Visual Studio 2010"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.jslint.com/\">JSLint</a> has historically been the main tool for this, but several more now exist:</p>\n\n<ul>\n<li><a href=\"http://jshint.com/\">JSHint</a> - a fork of JSLint that is said to be a little less opinionated</li>\n<li><a href=\"https://developers.google.com/closure/utilities/\">Closure Linter</a> - a linter that checks against the <a href=\"http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml\">Google Javascript Style Guide</a></li>\n<li><a href=\"https://github.com/eslint/eslint\">ESLint</a> - a more flexible tool, but newer, and not yet as stable.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>I have found JSLint which helps correct a lot of common errors and such; however, I'm hoping to find something that I can add my own rules and such to help automate some coding standards stuff that my company is wanting to implement into JavaScript.</p>\n\n<p><a href=\"http://www.jslint.com/\" rel=\"nofollow\">http://www.jslint.com/</a></p>\n\n<p>I need to look into it's extensibility model more.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There's a few tools on the <a href=\"http://en.wikipedia.org/wiki/List_of_tools_for_static_code_analysis\" rel=\"nofollow\">list of tools for static code analysis</a> at wikipedia that has JavaScript support, you can allso see <a href=\"http://en.wikipedia.org/wiki/JavaScript#Debugging\" rel=\"nofollow\">JavaScript Debugging</a> if any of the tools mentioned would help. There's allso a few good tools at <a href=\"http://developer.yahoo.com/yui/\" rel=\"nofollow\">YUI</a> (Yahoo! Developer Network), as well as a lot of helpful components.</p>\n\n<p>I've allways used JSLint myself, and that's the only analysis tool for JS I've tried. I've grown more and more fond of JavaScript, but good tools is still a problem. :(</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I use Aptana for JavaScript file analysis.   It catches alot of goofs (if condition with a single =).   It also describes the class layout.   I believe it has a jslint implementation embedded in it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In the interest of keeping this question up-to-date, there is a fork of JSLint called <a href=\"http://jshint.com/\">JSHint</a>. An explanation of why JSHint was created can be found <a href=\"http://anton.kovalyov.net/2011/02/20/why-i-forked-jslint-to-jshint/\">here</a>, but to summarize:</p>\n\n<blockquote>\n  <p>JSHint is a fork of JSLint, the tool\n  written and maintained by Douglas\n  Crockford. JSLint served me well for\n  quite some time but in the past few\n  months it has gotten uncomfortably\n  opinionated and hostile towards your\n  code. It is quickly transforming from\n  a tool that helps developers to\n  prevent bugs to a tool that makes sure\n  you write your code like Douglas\n  Crockford.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>If you haven't found it yet, you should take a look at Google Closure Compiler. Compiles your JavaScript and finds errors in code. <a href=\"http://code.google.com/closure/compiler/docs/gettingstarted_api.html\" rel=\"nofollow\">http://code.google.com/closure/compiler/docs/gettingstarted_api.html</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://jsanalyse.codeplex.com/\" rel=\"nofollow\">JSAnalyse</a> has just been published on codeplex. It is a tool which analyses the dependencies between javascript files. You can even define the allowed dependencies and <code>JSAnalysis</code> checks whether the defined rules are fulfilled or not. That allows to keep track about the <code>javascript</code> dependencies even in big projects and to have a clean architecture.</p>\n\n<p><code>JSAnalyse</code> can be executed as a command line tool or configured via the <code>Visual Studio Layer Diagramm</code>. It is also easy to integrate into the build. With gated check-ins you can keep the dependencies under control.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There exist a parser called ECMAScript parsing infrastructure for multipurpose analysis (esprima) located at <a href=\"http://esprima.org/\" rel=\"nofollow\">http://esprima.org/</a> with several example tools that can be used in some analysis</p>\n\n<p><a href=\"http://esprima.org/\" rel=\"nofollow\">ECMAScript parsing infrastructure for multipurpose analysis </a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I tried out ESlint and found it good..you can also add custom rules there..Here is the github repo: <a href=\"https://github.com/nzakas/eslint\" rel=\"nofollow\">https://github.com/nzakas/eslint</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Apart from JSLint, JSHint, ESLint, Plato, Google Closure-Linter there's another tool named Esprima.\nHere is the link for it: <a href=\"http://esprima.org/\" rel=\"nofollow\">http://esprima.org/</a></p>\n\n<p>Also, this is the github link for the tool Esprima: <a href=\"https://github.com/ariya/esprima\" rel=\"nofollow\">https://github.com/ariya/esprima</a></p>\n\n<p>I faced installation issues while trying out Google Closure-Linter for Windows. But, it does mention on the web page that its support for Windows is experimental. All other tools are easy to use.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Does anyone know of a good, extensible source code analyzer that examines JavaScript files? </p>\n",
            "last_activity_date": 1395415803,
            "question_id": 331326,
            "score": 32,
            "tags": [
                "javascript",
                "code-analysis"
            ],
            "title": "JavaScript Source Code Analyzer"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>You should read up on <a href=\"http://www.alfajango.com/blog/the-difference-between-jquerys-bind-live-and-delegate/\" rel=\"nofollow\">the difference between <code>live</code> and <code>bind</code></a>.</p>\n\n<p>In a nutshell, <code>live</code> uses event delegation, allowing you to bind to elements that exist now and in the future.</p>\n\n<p>In contrast, handlers attached via <code>bind</code> (and its shortcuts, like <code>click</code>) attach handlers <em>directly</em> to the DOM elements matching the selector, and therefore are only bound to elements that exist now.</p>\n\n<p>A consequence of <code>live</code>'s flexibility is decreased performance, so only use it when you need the functionality it provides.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<h2>Okay,</h2>\n\n<ul>\n<li><a href=\"http://api.jquery.com/live/\" rel=\"nofollow\"><code>$(\"a\").live()</code></a> --> It will apply to all <code>&lt;a&gt;</code>, even if it is created after this is called.</li>\n<li><a href=\"http://api.jquery.com/bind/\" rel=\"nofollow\"><code>$(\"a\").click()</code></a> --> It will only apply to all <code>&lt;a&gt;</code> before this is called. (This is a shortcut of <code>bind()</code>, and <code>on()</code> in 1.7)</li>\n<li><a href=\"http://api.jquery.com/on/\" rel=\"nofollow\"><code>$(\"a\").on()</code></a> --> Provides all functionality required for attaching event handlers. (Newest in jQuery 1.7)</li>\n</ul>\n\n<p><a href=\"http://api.jquery.com\" rel=\"nofollow\"><strong><em>Quotes</em></strong></a>:</p>\n\n<blockquote>\n  <p>As of jQuery 1.7, the .live() method is deprecated. Use .on() to attach event handlers. Users of older versions of jQuery should use .delegate() in preference to .live().<br>This method provides a means to attach delegated event handlers to the document element of a page, which simplifies the use of event handlers when content is dynamically added to a page. See the discussion of direct versus delegated events in the .on() method for more information.</p>\n</blockquote>\n\n\n\n<blockquote>\n  <p>The .on() method attaches event handlers to the currently selected set of elements in the jQuery object. As of jQuery 1.7, the .on() method provides all functionality required for attaching event handlers.</p>\n</blockquote>\n\n\n\n<blockquote>\n  <p>For earlier versions, the .bind() method is used for attaching an event handler directly to elements. </p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>$.click() is merely a shortcut for either bind or on. From jQuery docs:</p>\n\n<blockquote>\n  <p>In the first two variations, this method is a shortcut for .bind(\"click\", handler), as well as for .on(\"click\", handler) as of jQuery 1.7. In the third variation, when .click() is called without arguments, it is a shortcut for .trigger(\"click\"). </p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>When you need to bind some event handlers to <code>dynamically added elements</code> you have to use <code>live</code> (deprecated) or <code>on</code> make  the it working. Simply <code>$('element').click(...);</code> won't work on any dynamically added element in to the DOM.</p>\n\n<p>More on <a href=\"http://www.alfajango.com/blog/the-difference-between-jquerys-bind-live-and-delegate/\" rel=\"nofollow\">The Difference Between jQuery\u2019s .bind(), .live(), and .delegate()</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>$el.click(fn)</code> is a shortcut for <code>$el.on('click', fn)</code></p>\n\n<p>See <a href=\"http://api.jquery.com/click/\" rel=\"nofollow\">http://api.jquery.com/click/</a> and <a href=\"http://api.jquery.com/on/\" rel=\"nofollow\">http://api.jquery.com/on/</a> for more info.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>click()</code> is a shortcut to the non delegation method of <code>on()</code>. So:</p>\n\n<pre><code>$(\".close-box\").click() === $(\".close-box\").on('click')\n</code></pre>\n\n<p>To delegate events with <code>on()</code>, ie. in dynamic created objects you can do:</p>\n\n<pre><code>$(document).on('click', '.close-box') // Same as $('.close-box').live()\n</code></pre>\n\n<p>But, <code>on()</code> introduces delegation in any static element, not just <code>document</code> as <code>live()</code> does, so:</p>\n\n<pre><code>$(\"#closestStaticElement\").on('click', '.close-box')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Because you might have a dynamically generated elements (for example coming from an AJAX call), you might want to have the same click handler that was previously bound to the same element selector, you then \"delegate\" the click event using <code>on()</code> with selector argument</p>\n\n<p>To demonstrate:</p>\n\n<p><a href=\"http://jsfiddle.net/AJRw3/\">http://jsfiddle.net/AJRw3/</a></p>\n\n<p><code>on()</code> can also be synonymous with <code>click()</code> if you don't have a selector specified:</p>\n\n<pre><code>$('.elementClass').click(function() { // code \n});\n</code></pre>\n\n<p>is synonymous with</p>\n\n<pre><code>$('.elementClass').on('click', function() { // code\n});\n</code></pre>\n\n<p>In the sense that it only add the handler one time to all elements with class <code>elementClass</code>. If you have a new <code>elementClass</code> coming from, for example <code>$('&lt;div class=\"elementClass\" /&gt;')</code>, the handler won't be bound on that new element, you need to do:</p>\n\n<pre><code>$('#container').on('click', '.elementClass', function() { // code\n});\n</code></pre>\n\n<p>Assuming <code>#container</code> is <code>.elementClass</code>'s ancestor</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>The <code>.on()</code> method attaches event handlers to the currently selected set of elements in the jQuery object. The <code>click()</code> method binds an event handler to the \"click\" JavaScript event, or triggers that event on an element.</p>\n\n<p>In the plain <code>.click(...</code> if the target of the selector changes on the fly (e.g via some ajax response) then you'd need to assign the behavior again.</p>\n\n<p>The <code>.on(...</code> is very new (jQuery 1.7) and it can cover the live scenario using delegated events which is a faster way to attach behavior anyway.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are a lot of answers, each touching on a few points - hopefully this can give you your answer, with a good explanation of what's what and how to use it.</p>\n\n<p>Using <code>click()</code> is an alias to <code>bind('click' ...)</code>.  Using <code>bind()</code> takes the DOM as it is when the event listener is being set up and binds the function to each of the matching elements in the DOM.  That is to say if you use <code>$('a').click(...)</code> you will bind the function supplied to the click event of every anchor tag in the DOM found when that code runs.</p>\n\n<p>Using <code>live()</code> was the old way in jQuery; it was used to bind events just like <code>bind()</code> does, but it doesn't just bind them to elements in the DOM when the code runs - it also listens to changes in the DOM and will bind events to any future-matched elements as well.  This is useful if you're doing DOM manipulation and you need an event to exist on some elements that may get removed/updated/added to the DOM later but don't exist when the DOM is first loaded.</p>\n\n<p>The reason that <code>live()</code> is now depreciated is because it was poorly implemented.  In order to use <code>live()</code>, you had to be able to select at least one element in the DOM initially (I believe).  It also caused a copy of the function to run to be bound to each element - and if you have 1000 elements, that's a lot of copied functions.</p>\n\n<p>The creation of the <code>on()</code> function was to overcome those problems.  It lets you bind a single event listener to an object that will not change in the DOM (so you can't use <code>on()</code> on an element that will be removed/added to the DOM later - bind it to a parent object), and simply apply an element \"filter\" so that the function is only run when it is bubbled up to an element that matches the selector.  This means you have just one function that exists (not a bunch of copies) bound to a single element - a much better approach to adding \"live\" events in the DOM.</p>\n\n<p>... and that is what the differences are, and why each function exists and why <code>live()</code> is depreciated.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>In <code>on</code> method, event handler is attached to the parent element instead of target.</p>\n\n<p>example: <code>$(document).on(\"click\", \".className\", function(){});</code></p>\n\n<p>In above example, click event handler is attached to document.\nAnd it uses event bubbling to know whether someone clicked on the target element.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Currently with jQuery when I need to do something when a Click occurs I will do it like this... </p>\n\n<pre><code>$(\".close-box\").click( function() {\n    MoneyBox.closeBox();\n    return false;\n});\n</code></pre>\n\n<p>I was looking at some code someone else has on a project and they do it like this...</p>\n\n<pre><code>$(\".close-box\").live(\"click\", function () {\n    MoneyBox.closeBox();\n    return false;\n});\n</code></pre>\n\n<p>Notice it seems to do the same thing as far as I can tell except they are using the live() function which is now Deprecated and jQuery docs say to use <code>on()</code> instead but either way why use live/on() instead of my first example?</p>\n",
            "last_activity_date": 1408364137,
            "question_id": 10082031,
            "score": 30,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Why use jQuery on() instead of click()"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Here's a post on <a href=\"http://pietschsoft.com/post/2008/02/Simple-JavaScript-Object-Reflection-API-(NET-Style).aspx\" rel=\"nofollow\">JS reflection</a>. It should do what you're looking for.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>From <a href=\"http://www.javascriptkit.com/jsref/looping.shtml\" rel=\"nofollow\">here</a>:</p>\n\n<p>Example 1: This example writes out all the properties of the \"navigator\" object, plus their values:</p>\n\n<pre><code>for (var myprop in navigator){\n document.write(myprop+\": \"+navigator[myprop]+\"&lt;br&gt;\")\n}\n</code></pre>\n\n<p>Just replace 'navigator' with whatever object you are interested in and you should be good to go.</p>\n\n<p>As mentioned by Anthony in the comments section - This returns all attributes not just methods as the question asked for.</p>\n\n<p>Oops!  That'll teach me to try and answer a question in a language I don't know.  Still, I think the code is useful - just not what was required.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Take a gander at this code:-</p>\n\n<pre><code>function writeLn(s)\n{\n\t//your code to write a line to stdout\n\tWScript.Echo(s)\n}\n\nfunction Base() {}\nBase.prototype.methodA = function() {}\nBase.prototype.attribA = \"hello\"\n\nvar derived = new Base()\nderived.methodB = function() {}\nderived.attribB = \"world\";\n\nfunction getMethods(obj)\n{\n\tvar retVal = {}\n\n\tfor (var candidate in obj)\n    {\n\t\tif (typeof(obj[candidate]) == \"function\")\n\t\t\tretVal[candidate] = {func: obj[candidate], inherited: !obj.hasOwnProperty(candidate)}\n    }\n\treturn retVal\n}\n\nvar result = getMethods(derived)\nfor (var name in result)\n{\n\twriteLn(name + \" is \" + (result[name].inherited ? \"\" : \"not\") + \" inherited\")\n}\n</code></pre>\n\n<p>The getMethod function returns the set of methods along with whether the method is one that has been inherited from a prototype.</p>\n\n<p>Note that if you intend to use this on objects that are supplied from the context such as browser/DOM object then it won't work IE.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Since methods in JavaScript are just properties that are functions, the for..in loop will enumerate them with an exception - it won't enumerate built-in methods. As far as I know, there is no way to enumerate built-in methods. And you can't declare your own methods or properties on an object that aren't enumerable this way.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Sure:</p>\n\n<pre><code>function getMethods(obj) {\n  var result = [];\n  for (var id in obj) {\n    try {\n      if (typeof(obj[id]) == \"function\") {\n        result.push(id + \": \" + obj[id].toString());\n      }\n    } catch (err) {\n      result.push(id + \": inaccessible\");\n    }\n  }\n  return result;\n}\n</code></pre>\n\n<p>Using it:</p>\n\n<pre><code>alert(getMethods(document).join(\"\\n\"));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 40
                }
            ],
            "body": "<p>Is there a way to print all methods of an object in javascript?</p>\n",
            "last_activity_date": 1222772255,
            "question_id": 152483,
            "score": 30,
            "tags": [
                "javascript"
            ],
            "title": "Is there a way to print all methods of an object in javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can use <code>{{ variable }}</code> anywhere in your template, not just in the HTML part. So this should work:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script&gt;\nvar someJavaScriptVar = '{{ geocode[1] }}';\n&lt;/script&gt;\n&lt;body&gt;\n&lt;p&gt;Hello World&lt;/p&gt;\n&lt;button onclick=\"alert('Geocode: {{ geocode[0] }} ' + someJavaScriptVar)\" /&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Think of it as a two-stage process: First, Jinja (the template engine Flask uses) generates your text output. This gets sent to the user who executes the JavaScript he sees. If you want your Flask variable to be available in JavaScript as an array, you have to generate an array definition in your output:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script&gt;\nvar myGeocode = ['{{ geocode[0] }}', '{{ geocode[1] }}'];\n&lt;/script&gt;\n&lt;body&gt;\n&lt;p&gt;Hello World&lt;/p&gt;\n&lt;button onclick=\"alert('Geocode: ' + myGeocode[0] + ' ' + myGeocode[1])\" /&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Jinja also offers more advanced constructs from Python, so you can shorten it to:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script&gt;\nvar myGeocode = [{{ ', '.join(geocode) }}];\n&lt;/script&gt;\n&lt;body&gt;\n&lt;p&gt;Hello World&lt;/p&gt;\n&lt;button onclick=\"alert('Geocode: ' + myGeocode[0] + ' ' + myGeocode[1])\" /&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>You can also use <code>for</code> loops, <code>if</code> statements and many more, see the <a href=\"http://jinja.pocoo.org/docs/\">Jinja2 documentation</a> for more.</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>This is an old question, but another way to go about getting pretty much any python object into a javascript object is to use good old JSON. Jinja2 provides a filter for this: <a href=\"http://flask.pocoo.org/docs/templating/#standard-filters\" rel=\"nofollow\"><code>tojson</code></a>. mensi's answer could be simplified and generalized to:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;script&gt;\n      var myGeocode = {{ geocode|tojson }};\n    &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;Hello World&lt;/p&gt;\n    &lt;button onclick=\"alert('Geocode: ' + myGeocode[0] + ' ' + myGeocode[1])\" /&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>This works equally well for <code>dict</code>s:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;script&gt;\n      var data = {{ data_in_dict|tojson }};\n    &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;Hello World&lt;/p&gt;\n    &lt;button onclick=\"alert('Data: ' + data.foo + ' ' + data.bar)\" /&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I am using Flask for a small personal project. Said project makes a call to an API that then returns a  dictionary. I want to pass information from this dict to Javascript in the view. I am using the Google Maps API in the JS, specifically, so I'd like to pass it a list of tuples with the long/lat information. </p>\n\n<p>Below is some example code.</p>\n\n<pre><code>from flask import Flask\nfrom flask import render_template\napp = Flask(__name__)\n\nimport foo_api\n\napi = foo_api.API('API KEY')\n\n@app.route('/')\ndef get_data():\n    events = api.call(get_event, arg0, arg1)\n    geocode = event['latitude'], event['longitude']\n    return render_template('get_data.html', geocode=geocode)\n</code></pre>\n\n<p>I know that render_template will pass these variables to the view so they can be used in HTML, but how could I pass them to javascript in the view? </p>\n",
            "last_activity_date": 1422881840,
            "question_id": 11178426,
            "score": 25,
            "tags": [
                "javascript",
                "python",
                "flask"
            ],
            "title": "How can I pass data from Python (Flask framework) to Javascript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Firebug or Google's Page Speed for Firefox have profiling tools.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use <a href=\"http://getfirebug.com/index.html\">Firebug</a>. To quote from <a href=\"http://getfirebug.com/js.html\">http://getfirebug.com/js.html</a>:</p>\n\n<blockquote>\n  <p>To use the profiler, just go to the Console tab and click the \"Profile\" button. Then use your app for a bit or reload the page and then click the \"Profile\" button again. You'll then see a detailed report that shows what functions were called and how much time each one took.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I would suggest taking a look at the profiler in <a href=\"http://getfirebug.com/\" rel=\"nofollow\">Firebug</a>, and the <a href=\"http://www.outofhanwell.com/ieleak/index.php?title=Main_Page\" rel=\"nofollow\">Drip</a> plugin for IE to help look for memory leaks.</p>\n\n<p>Also, just keep in mind that most javascript memory leaks come from circular references between DOM objects and javascript objects not being broken when the DOM object is unloaded.  To prevent that, I would suggest avoiding creating references to javascript objects in DOM object properties (ie, avoid something like <code>document.getElementById('foo').bar = myObject;</code>).  If you must create these circular references, be sure to break them yourself in a function that runs when the page unloads, or when removing the DOM objects prior to unload.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Another simple way to test a specific piece of code is to add a timer around it.</p>\n\n<pre><code>var testStart = new Date();\n\n// code to be tested here\n\n$('#jstest').html(\"selected function: \"+ (new Date() - testStart) + \" milliseconds\");\n</code></pre>\n\n<p>Where jstest is a span element somewhere visible on your page.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Google Chrome also has profile options</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Regarding memory consumption</strong></p>\n\n<p>Memory leaks in JavaScript are usually ignored except when they turn into browser memory leaks (that is, even after the user navigates away from the page, the memory continues allocated and there's no way to free it). The reason for this is that while your web application may have some memory leaks, users will go from one page into another so the leaks are minimized. However they may not restart the browser, so browser memory leaks may be serious. Some JavaScript code is known to cause memory leaks on certain browsers, being Internet Explorer probably the worst in this area. For it you may find <a href=\"http://ajaxian.com/archives/microsoft-javascript-memory-leak-detector\">Microsoft JavaScript Memory Leak Detector</a> to be very useful.</p>\n\n<p><strong>Regarding times</strong></p>\n\n<p>IE, Chrome and Safari have built in profilers in the web development tools that ship with the browser. For Firefox you may use Firebug. Also useful may be, since you're using jQuery which means your profiling report will be filled with anonymous functions and alike, making it quite unreadable, <a href=\"http://ejohn.org/blog/deep-profiling-jquery-apps/\">John Resig's jQuery profiling plugin</a>, which will give you a clearer output on the matter.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>This post by John Resig (jQuery) may be helpful for detecting memory leaks in IE:</p>\n\n<p><a href=\"http://ejohn.org/blog/deep-tracing-of-internet-explorer/\" rel=\"nofollow\">http://ejohn.org/blog/deep-tracing-of-internet-explorer/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Though chrome has profiling options inbuilt it does not give precise information about the object.So i prefer using leak-finder-for-javascript tool which helped me in my code.</p>\n\n<p><a href=\"https://code.google.com/p/leak-finder-for-javascript/\" rel=\"nofollow\">https://code.google.com/p/leak-finder-for-javascript/</a></p>\n\n<p>I hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/855126/what-is-the-best-way-to-profile-javascript-execution\">What is the best way to profile javascript execution?</a>  </p>\n</blockquote>\n\n\n\n<p>I have a few scripts that use jQuery, and I think I have a memory leak in one of them.</p>\n\n<p>How one could profile and find what parts of the scripts that I have are using the most memory/CPU?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1346911639,
            "question_id": 2140716,
            "score": 25,
            "tags": [
                "javascript",
                "performance",
                "memory-leaks",
                "profiling"
            ],
            "title": "How to profile and and get Javascript performance"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>jQuery provides that:</p>\n\n<pre><code>if ($.browser.webkit){\n    ...\n}\n</code></pre>\n\n<p>Further reading at <a href=\"http://api.jquery.com/jQuery.browser/\" rel=\"nofollow\">http://api.jquery.com/jQuery.browser/</a></p>\n\n<p><strong>Update</strong></p>\n\n<p>As noted in other answers/comments, it's always better to check for feature support than agent info. jQuery also provides an object for that: <code>jQuery.support</code>. Check <a href=\"http://api.jquery.com/jQuery.support/\" rel=\"nofollow\">the documentation</a> to see the detailed list features to check for.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Instead of detecting a browser, you should rather detect a feature (whether it's supported or not). This is what <a href=\"http://modernizr.com/\" rel=\"nofollow\">Modernizr</a> does.</p>\n\n<p>Of course there are cases where you still need to check the browser because you need to work around an issue and not to detect a feature. Specific <code>WebKit</code> check which does not use jQuery <code>$.browser</code>:</p>\n\n<pre><code>var isWebKit = !!window.webkitURL;\n</code></pre>\n\n<p>As some of the comments suggested the above approach doesn't work for older Safari versions. Updating with another approach suggested in comments and by another answer:</p>\n\n<pre><code>var isWebKit = 'WebkitAppearance' in document.documentElement.style;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<blockquote>\n  <p>I am trying to detect the chrome and safari browser using jquery or javascript.</p>\n</blockquote>\n\n<p>Use <code>jQuery.browser</code></p>\n\n<blockquote>\n  <p>I thought we are not supposed to use jQuery.browser.</p>\n</blockquote>\n\n<p>That's because detecting browsers is a bad idea. It is still the best way to detect the browser (when jQuery is involved) if you really intend to do that.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you dont want to use <code>$.browser</code>, take a look at <strong>case 1</strong>, otherwise maybe <strong>case 2</strong> and <strong>3</strong> can help you just to get <strong>informed</strong> because it is not recommended to use <code>$.browser</code> (the user agent can be spoofed using this). An alternative can be using <code>jQuery.support</code> that will detect feature support and not agent info.</p>\n\n<p>But...</p>\n\n<p>If you insist on getting browser type <em>(just Chrome or Safari)</em> but not using <code>$.browser</code>, <strong>case 1</strong> is what you looking for...</p>\n\n<hr>\n\n<h2>This fits your requirement:</h2>\n\n<p><strong>Case 1:</strong> <em>(No jQuery and no $.browser, just javascript)</em></p>\n\n<p><strong>Live Demo:</strong> <a href=\"http://jsfiddle.net/oscarj24/DJ349/\">http://jsfiddle.net/oscarj24/DJ349/</a></p>\n\n<pre><code>var isChrome = /Chrome/.test(navigator.userAgent) &amp;&amp; /Google Inc/.test(navigator.vendor);\nvar isSafari = /Safari/.test(navigator.userAgent) &amp;&amp; /Apple Computer/.test(navigator.vendor);\n\nif (isChrome) alert(\"You are using Chrome!\");\nif (isSafari) alert(\"You are using Safari!\");\n</code></pre>\n\n<hr>\n\n<p>These cases I used in times before and worked well but they are not recommended...</p>\n\n<p><strong>Case 2:</strong> <em>(Using jQuery and $.browser, this one is tricky)</em></p>\n\n<p><strong>Live Demo:</strong> <a href=\"http://jsfiddle.net/oscarj24/gNENk/\">http://jsfiddle.net/oscarj24/gNENk/</a></p>\n\n<pre><code>$(document).ready(function(){\n\n    /* Get browser */\n    $.browser.chrome = /chrome/.test(navigator.userAgent.toLowerCase());\n\n    /* Detect Chrome */\n    if($.browser.chrome){\n        /* Do something for Chrome at this point */\n        /* Finally, if it is Chrome then jQuery thinks it's \n           Safari so we have to tell it isn't */\n        $.browser.safari = false;\n    }\n\n    /* Detect Safari */\n    if($.browser.safari){\n        /* Do something for Safari */\n    }\n\n});\n</code></pre>\n\n<p><strong>Case 3:</strong> <em>(Using jQuery and $.browser, \"elegant\" solution)</em></p>\n\n<p><strong>Live Demo:</strong> <a href=\"http://jsfiddle.net/oscarj24/uJuEU/\">http://jsfiddle.net/oscarj24/uJuEU/</a></p>\n\n<pre><code>$.browser.chrome = $.browser.webkit &amp;&amp; !!window.chrome;\n$.browser.safari = $.browser.webkit &amp;&amp; !window.chrome;\n\nif ($.browser.chrome) alert(\"You are using Chrome!\");\nif ($.browser.safari) alert(\"You are using Safari!\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>/WebKit/.test(navigator.userAgent) \u2014 that's it.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<h2>The best way currently would be:</h2>\n\n<pre><code>// var isWebkit = 'webkitRequestAnimationFrame' in window; // deprecated\nvar isWebkit = 'WebkitAppearance' in document.documentElement.style\n</code></pre>\n\n<p>So simple, yet so effective.</p>\n\n<p>I would expect this prefixed name to stick around for quite some time, so I would say it's safe to use it for at least a year or two. Chrome team is notoriously slow at making changes, although there are rummers about them making a new engine, a fork of webkit which will be given it's own name, but those problems are for the future us.</p>\n\n<p>By the way, most of the answers here are obsolete, there is no more jQuery.browser, and why would anyone even use jQuery or would sniff the userAgent is beyond me.</p>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p>you can use this minified jQuery snippet to detect if your user is viewing using a mobile device. If you need to test for a specific device I\u2019ve included a collection of JavaScript snippets below which can be used to detect various mobile handheld devices such as iPad, iPhone, iPod, iDevice, Andriod, Blackberry, WebOs and Windows Phone.</p>\n\n<pre><code>/**\n * jQuery.browser.mobile (http://detectmobilebrowser.com/)\n * jQuery.browser.mobile will be true if the browser is a mobile device\n **/\n\n    (function(a){jQuery.browser.mobile=/android.+mobile|avantgo|bada/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)/|plucker|pocket|psp|symbian|treo|up.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|/(k|l|u)|50|54|e-|e/|-[a-w])|libw|lynx|m1-w|m3ga|m50/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(di|rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|xda(-|2|g)|yas-|your|zeto|zte-/i.test(a.substr(0,4))})(navigator.userAgent||navigator.vendor||window.opera);\n</code></pre>\n\n<p><strong>Example Usage:</strong></p>\n\n<pre><code>if(jQuery.browser.mobile)\n{\nconsole.log(\u2018You are using a mobile device!\u2019);\n}\nelse\n{\nconsole.log(\u2018You are not using a mobile device!\u2019);\n}\n</code></pre>\n\n<p><strong>Detect iPad</strong></p>\n\n<pre><code>var isiPad = /ipad/i.test(navigator.userAgent.toLowerCase());\nif (isiPad)\n{\n\u2026\n}\n</code></pre>\n\n<p><strong>Detect iPhone</strong></p>\n\n<pre><code>var isiPhone = /iphone/i.test(navigator.userAgent.toLowerCase());\nif (isiPhone)\n{\n\u2026\n}\n</code></pre>\n\n<p><strong>Detect iPod</strong></p>\n\n<pre><code>var isiPod = /ipod/i.test(navigator.userAgent.toLowerCase());\nif (isiPod)\n{\n\u2026\n}\n</code></pre>\n\n<p><strong>Detect iDevice</strong></p>\n\n<pre><code>var isiDevice = /ipad|iphone|ipod/i.test(navigator.userAgent.toLowerCase());\n\nif (isiDevice)\n{\n\u2026\n}\n</code></pre>\n\n<p><strong>Detect Andriod</strong></p>\n\n<pre><code>var isAndroid = /android/i.test(navigator.userAgent.toLowerCase());\n\nif (isAndroid)\n{\n\u2026\n}\n</code></pre>\n\n<p><strong>Detect Blackberry</strong></p>\n\n<pre><code>var isBlackBerry = /blackberry/i.test(navigator.userAgent.toLowerCase());\n\nif (isBlackBerry)\n{\n\u2026\n}\n</code></pre>\n\n<p><strong>Detect WebOs</strong></p>\n\n<pre><code>var isWebOS = /webos/i.test(navigator.userAgent.toLowerCase());\n\nif (isWebOS)\n{\n\u2026\n}\n</code></pre>\n\n<p><strong>Detect Windows Phone</strong></p>\n\n<pre><code>var isWindowsPhone = /windows phone/i.test(navigator.userAgent.toLowerCase());\n\nif (isWindowsPhone)\n{\n\u2026\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a modern and clever way to detect browsers by rendering engine properties (yes), coming from this visually-awkward blog (SFW): <a href=\"http://xeemez.blogspot.com/2013/08/how-to-detect-safari-chrome-ie-firefox.html\" rel=\"nofollow\">http://xeemez.blogspot.com/2013/08/how-to-detect-safari-chrome-ie-firefox.html</a></p>\n\n<p>I added the bulletproof <code>isBlink</code> check, because only checking for Opera or Chrome could result in ambiguity regarding which rendering engine is used.</p>\n\n<pre><code>isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') &gt;= 0, // Opera 8.0+ (UA detection to detect Blink/v8-powered Opera)\nisFirefox = typeof InstallTrigger !== 'undefined', // Firefox 1.0+\nisSafari = Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') &gt; 0, // At least Safari 3+: \"[object HTMLElementConstructor]\"\nisIE = /*@cc_on!@*/ false || document.documentMode, // At least IE6\nisChrome = !browser.isIE &amp;&amp; !!window.chrome &amp;&amp; !browser.isOpera, // Chrome 1+\nisBlink = (browser.isChrome || browser.isOpera) &amp;&amp; window.CSS;\n</code></pre>\n\n<p>As for reliability:</p>\n\n<ol>\n<li>Firefox 0.8 - 21, I tested on v29 too and it's fine</li>\n<li>Chrome 1.0 - 27, tested on v35 too, confirmed working</li>\n<li>Opera 8.0 - 15.0, tested on v12 (Presto) and v21 (Blink) too, confirmed working</li>\n<li>Safari 3.0 - 6.0, tested, confirmed</li>\n<li>IE 6 - 11, tested, confirmed</li>\n</ol>\n\n<p>I checked all browsers on my Win 8 machine and all detectors worked, without any false positives.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to detect the chrome and safari browser using jquery or javascript. \nI thought we are not supposed to use jQuery.browser. Are there any suggestions here? Thanks a lot!</p>\n",
            "last_activity_date": 1421224850,
            "question_id": 12625876,
            "score": 23,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to detect chrome and safari browser (webkit)"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Use:</p>\n\n<pre><code>document.getElementById(\"resultFrame\").contentWindow.Reset();\n</code></pre>\n\n<p>to access the Reset function in the iframe</p>\n\n<p><code>document.getElementById(\"resultFrame\")</code>\nwill get the iframe in your code, and <code>contentWindow</code> will get the window object in the iframe. Once you have the child window, you can refer to javascript in that context.</p>\n\n<p>Also see <a href=\"http://stackoverflow.com/questions/251420/invoking-javascript-in-iframe-from-parent-page\">HERE</a>  in particular the answer from bobince.</p>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p><code>objectframe.contentWindow.Reset()</code> you need reference to the top level element in the frame first.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Call</p>\n\n<pre><code>window.frames['resultFrame'].Reset();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>When you access resultFrame through document.all it only pulls it as an HTML element, not a window frame. You get the same issue if you have a frame fire an event using a \"this\" self-reference.</p>\n\n<p>Replace:</p>\n\n<pre><code>document.all.resultFrame.Reset();\n</code></pre>\n\n<p>With:</p>\n\n<pre><code>window.frames.resultFrame.Reset();\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>document.all.resultFrame.contentWindow.Reset();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Instead of getting the frame from the document, try getting the frame from the window object.</p>\n\n<p>in the above example change this:</p>\n\n<pre><code>if (typeof (document.all.resultFrame.Reset) == \"function\")\n    document.all.resultFrame.Reset();\nelse\n    alert(\"resultFrame.Reset NOT found\");\n</code></pre>\n\n<p>to</p>\n\n<pre><code>if (typeof (window.frames[0].Reset) == \"function\")\n    window.frames[0].Reset();\nelse\n    alert(\"resultFrame.Reset NOT found\");\n</code></pre>\n\n<p>the problem is that the scope of the javascript inside the iframe is not exposed through the DOM element for the iframe.  only window objects contain the javascript scoping information for the frames.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>For even more robustness:</p>\n\n<pre><code>function getIframeWindow(iframe_object) {\n  var doc;\n\n  if (iframe_object.contentWindow) {\n    return iframe_object.contentWindow;\n  }\n\n  if (iframe_object.window) {\n    return iframe_object.window;\n  } \n\n  if (!doc &amp;&amp; iframe_object.contentDocument) {\n    doc = iframe_object.contentDocument;\n  } \n\n  if (!doc &amp;&amp; iframe_object.document) {\n    doc = iframe_object.document;\n  }\n\n  if (doc &amp;&amp; doc.defaultView) {\n   return doc.defaultView;\n  }\n\n  if (doc &amp;&amp; doc.parentWindow) {\n    return doc.parentWindow;\n  }\n\n  return undefined;\n}\n</code></pre>\n\n<p>and </p>\n\n<pre><code>...\nvar el = document.getElementById('targetFrame');\n\ngetIframeWindow(el).reset();\n...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have problem calling a javascript function in an iframe from the parent page. Here is my two pages:</p>\n\n<p><strong>mainPage.html</strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;MainPage&lt;/title&gt;\n    &lt;script type=\"text/javascript\"&gt;\n    \tfunction Reset() \n    \t{\n    \t\tif (document.all.resultFrame)\n    \t\t\talert(\"resultFrame found\");\n    \t\telse\n    \t\t\talert(\"resultFrame NOT found\");\n\n    \t\tif (typeof (document.all.resultFrame.Reset) == \"function\")\n    \t\t\tdocument.all.resultFrame.Reset();\n    \t\telse\n    \t\t\talert(\"resultFrame.Reset NOT found\");\n    \t}\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    MainPage&lt;br&gt;\n    &lt;input type=\"button\" onclick=\"Reset()\" value=\"Reset\"&gt;&lt;br&gt;&lt;br&gt;\n    &lt;iframe height=\"100\" id=\"resultFrame\" src=\"resultFrame.html\"&gt;&lt;/iframe&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>resultFrame.html</strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;ResultPage&lt;/title&gt;\n    &lt;script type=\"text/javascript\"&gt;\n    \tfunction Reset() \n    \t{\n    \t\talert(\"reset (in resultframe)\");\n    \t}\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    ResultPage\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>(I know that <code>document.all</code> isn't recommended but this page should only be viewed with IE internally and I don't think that's the problem)</p>\n\n<p>When I press the Reset-button I get \"resultFrame found\" and \"resultFrame.Reset NOT found\". It seems to have a reference to the frame but can't call the function on the frame, why is that?</p>\n",
            "last_activity_date": 1407238239,
            "question_id": 1600488,
            "score": 23,
            "tags": [
                "javascript",
                "iframe"
            ],
            "title": "Calling javascript function in iframe"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You didn't publish your code, and I suspect you do something wrong. it is possible to change the size by assigning width and height attributes using numbers:</p>\n\n<pre><code>canvasNode.width  = 200; // in pixels\ncanvasNode.height = 100; // in pixels\n</code></pre>\n\n<p>At least it works for me. Make sure you don't assign strings (e.g., \"2cm\", \"3in\", or \"2.5px\"), and don't mess with styles.</p>\n\n<p>Actually this is a publicly available knowledge &mdash; you can read all about it in <a href=\"http://www.whatwg.org/specs/web-apps/current-work/#the-canvas-element\">the HTML canvas spec</a> &mdash; it is very small and unusually informative. This is the whole DOM interface:</p>\n\n<pre><code>interface HTMLCanvasElement : HTMLElement {\n           attribute unsigned long width;\n           attribute unsigned long height;\n\n  DOMString toDataURL();\n  DOMString toDataURL(in DOMString type, [Variadic] in any args);\n\n  DOMObject getContext(in DOMString contextId);\n};\n</code></pre>\n\n<p>As you can see it defines 2 attributes <code>width</code> and <code>height</code>, and both of them are <code>unsigned long</code>.</p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>This worked for me just now:</p>\n\n<pre><code>&lt;canvas id=\"c\" height=\"100\" width=\"100\" style=\"border:1px solid red\"&gt;&lt;/canvas&gt;\n&lt;script&gt;\nvar c = document.getElementById('c');\nalert(c.height + ' ' + c.width);\nc.height = 200;\nc.width = 200;\nalert(c.height + ' ' + c.width);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Yes you have to redraw everything on canvas</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just had the same problem as you, but found out about the toDataURL method, which proved useful.</p>\n\n<p>The gist of it is to turn your current canvas into a dataURL, change your canvas size, and then draw what you had back into your canvas from the dataURL you saved.</p>\n\n<p>So here's my code:</p>\n\n<pre><code>var oldCanvas = canvas.toDataURL(\"image/png\");\nvar img = new Image();\nimg.src = oldCanvas;\nimg.onload = function (){\n    canvas.height += 100;\n    ctx.drawImage(img, 0, 0);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Here's my effort to give a more complete answer (building on @john's answer).</p>\n\n<p>The initial issue I encountered was changing the width and height of a canvas node (using styles), resulted in the contents just being \"zoomed\" or \"shrunk.\" This was not the desired effect.</p>\n\n<p>So, say you want to draw two rectangles of arbitrary size in a canvas that is 100px by 100px.</p>\n\n<pre><code>&lt;canvas width=\"100\" height=\"100\"&gt;&lt;/canvas&gt;\n</code></pre>\n\n<p>To ensure that the rectangles will not exceed the size of the canvas and therefore not be visible, you need to ensure that the canvas is big enough.</p>\n\n<pre><code>var $canvas = $('canvas'),\n    oldCanvas,\n    context = $canvas[0].getContext('2d');\n\nfunction drawRects(x, y, width, height)\n{\n  if (($canvas.width() &lt; x+width) || $canvas.height() &lt; y+height)\n  {\n    oldCanvas = $canvas[0].toDataURL(\"image/png\")\n    $canvas[0].width = x+width;\n    $canvas[0].height = y+height;\n\n    var img = new Image();\n    img.src = oldCanvas;\n    img.onload = function (){\n      context.drawImage(img, 0, 0);\n    };\n  }\n  context.strokeRect(x, y, width, height);\n}\n\n\ndrawRects(5,5, 10, 10);\ndrawRects(15,15, 20, 20);\ndrawRects(35,35, 40, 40);\ndrawRects(75, 75, 80, 80);\n</code></pre>\n\n<p>Finally, here's the jsfiddle for this: <a href=\"http://jsfiddle.net/Rka6D/4/\" rel=\"nofollow\">http://jsfiddle.net/Rka6D/4/</a> .</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Note that if your canvas is statically declared you should use the <code>width</code> and <code>height</code> attributes, not the style, <em>eg.</em> this will work:</p>\n\n<pre><code>&lt;canvas id=\"c\" height=\"100\" width=\"100\" style=\"border:1px\"&gt;&lt;/canvas&gt;\n&lt;script&gt;\n    document.getElementById('c').width = 200;\n&lt;/script&gt;\n</code></pre>\n\n<p>But this will <strong>not</strong> work:</p>\n\n<pre><code>&lt;canvas id=\"c\" style=\"width: 100px; height: 100px; border:1px\"&gt;&lt;/canvas&gt;\n&lt;script&gt;\n    document.getElementById('c').width = 200;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Prototypes can be a hassle to work with, and from the <code>_PROTO</code> part of the error it appears your error is caused by, say, <code>HTMLCanvasElement.prototype.width</code>, possibly as an attempt to resize all the canvases at once.</p>\n\n<p>As a suggestion, if you are trying to resize a number of canvases at once, you could try:</p>\n\n<pre><code>&lt;canvas&gt;&lt;/canvas&gt;\n&lt;canvas&gt;&lt;/canvas&gt;\n&lt;canvas&gt;&lt;/canvas&gt;\n&lt;script type=\"text/javascript\"&gt;\n    ...\n&lt;/script&gt;\n</code></pre>\n\n<p>In the JavaScript, instead of invoking a prototype, try this:</p>\n\n<pre><code>$$ = function(){\n    return document.querySelectorAll.apply(document,arguments);\n}\nfor(var i in $$('canvas')){\n    canvas = $$('canvas')[i];\n    canvas.width = canvas.width+100;\n    canvas.height = canvas.height+100;\n}\n</code></pre>\n\n<p>This would resize all the canvases by adding 100 px to their size, as is demonstrated in <a href=\"http://jsfiddle.net/aP8Jm/\" rel=\"nofollow\">this example</a>\n<hr>\nHope this helped.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;div id=\"canvasdiv\" style=\"margin: 5px; height: 100%; width: 100%;\"&gt;\n    &lt;canvas id=\"mycanvas\" style=\"border: 1px solid red;\"&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n&lt;script&gt;\n$(function(){\n    InitContext();\n});\nfunction InitContext()\n{\nvar $canvasDiv = $('#canvasdiv');\n\nvar canvas = document.getElementById(\"mycanvas\");\ncanvas.height = $canvasDiv.innerHeight();\ncanvas.width = $canvasDiv.innerWidth();\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a canvas element defined statically in the html with a width and height. If I attempt to use JavaScript to resize it dynamically (setting a new width and height - either on the attributes of the canvas or via the style properties) I get the following error in Firefox:</p>\n\n<blockquote>\n  <p>uncaught exception: [Exception... \"Illegal operation on WrappedNative prototype object\"  nsresult: \"0x8057000c (NS_ERROR_XPC_BAD_OP_ON_WN_PROTO)\"  location: \"JS frame :: file:///home/russh/Desktop/test.html :: onclick :: line 1\"  data: no]</p>\n</blockquote>\n\n<p>Is it possible to resize this element or do I have to destroy it and create a new element on the fly? </p>\n",
            "last_activity_date": 1359966282,
            "question_id": 331052,
            "score": 23,
            "tags": [
                "javascript",
                "html",
                "canvas",
                "dhtml"
            ],
            "title": "How to resize html canvas element?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You should use the library <a href=\"https://github.com/douglascrockford/JSON-js\"><code>json2.js</code></a>. It is the basis for the standard <code>JSON.stringify(...)</code> that some browsers include natively.</p>\n\n<p>You can find the page it originated from here: <a href=\"http://www.json.org/js.html\">http://www.json.org/js.html</a></p>\n\n<p>The script automatically makes sure it only adds a <code>JSON.stringify(...)</code> method if it doesn't already exist so there is no danger including it in a browser that has it.</p>\n",
                    "is_accepted": true,
                    "score": 36
                }
            ],
            "body": "<p>In JavaScript, what are the alternatives of <code>JSON.stringify()</code> for browsers that do not have native JSON support? Thanks</p>\n",
            "last_activity_date": 1348152017,
            "question_id": 1480393,
            "score": 22,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "Alternatives of JSON.stringify() in JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>From what I can tell, a webpage includes the JavaScript file from Google, then that script dynamically adds an image to the page (<a href=\"http://www.google-analytics.com/__utm.gif\">http://www.google-analytics.com/__utm.gif</a>) which contains the information required for logging.</p>\n\n<p>SOP does not apply to scripts, images or CSS files that are dynamically added to a page. This is why you much trust whatever JavaScript files you include in your webpages, as they will have complete control over the page.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Ryan Doherty is correct. The Google Analytics javascript code draws a transparent 1px-by-1px gif image name __utm.gif on your page. When the request (which is located on Google's servers) for this image is made, information is appended as GET parameters. Google captures this data and begins processing it. Usually within 3-6 hours, you'll see the data show up in your GA reports. </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Perhaps I am missing something, but I am just learning javascript.</p>\n\n<p>My understanding of Single Origin Policy is that Google Analytics should not be able to send data back to Google.</p>\n\n<p>How is it able to transmit send data to Google without violating the policy?</p>\n",
            "last_activity_date": 1234812745,
            "question_id": 414451,
            "score": 22,
            "tags": [
                "javascript",
                "google-analytics"
            ],
            "title": "How does Google Analytics send data back to Google?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use the <a href=\"http://bclary.com/2004/11/07/#a-11.2.1\">bracket notation</a> to access the member with a string containing the identifier:</p>\n\n<pre><code>var target = 'next';\n$(\"foobar\")[target]();    // identical to $(\"foobar\").next()\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>If you're wanting to use jQuery, the answer is quite elegant. Because jQuery is an object (which can be accessed like an array) - you can use $(\"selector\")target.</p>\n\n<p>Examples:</p>\n\n<pre><code>var target = 'next';\njQuery(\"selector\")[target]();\n</code></pre>\n\n<p>This will work if you know that you can trust the input. However, if you're not sure of this, you should check that the function exists before trying to run it otherwise you'll get an error.</p>\n\n<pre><code>var target = 'doesNotExist';\nif (jQuery.isFunction(target)) {\n  jQuery('selector')[target]();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>In my case I needed to get the value from a rel attribute and then parse it as a function, this worked for me.</p>\n\n<pre><code>$jq('#mainbody form').submit(function(e){\n    var formcheck = $jq(this).attr('rel');\n    if (typeof window[formcheck] === 'function'){\n        formok = window[formcheck]();\n        e.preventDefault();\n    }\n});\nfunction maincheck(){\n    alert(\"Checked\");\n    return false;\n}\n</code></pre>\n\n<p>and the form</p>\n\n<pre><code>&lt;div id=\"mainbody\"&gt;\n&lt;form action=\"mainpage.php\" method=\"post\" rel=\"maincheck\"&gt;\n&lt;input type=\"hidden\" name=\"formaction\" value=\"testpost\"&gt;\n&lt;label&gt;Field 1 &lt;input type=\"text\" name=\"field1\" value=\"&lt;?=$_POST['field1'];?&gt;\"&gt;&lt;/label&gt;&lt;br&gt;\n&lt;label&gt;Field 2 &lt;input type=\"text\" name=\"field2\" value=\"&lt;?=$_POST['field2'];?&gt;\"&gt;&lt;/label&gt;&lt;br&gt;\n&lt;input type=\"submit\" value=\"Submit Form\"&gt;\n&lt;/form&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Is it possible to call a function by using the strings ?</p>\n\n<p>(i.e) I have a variable <code>var target = 'next';</code>. Using this string I want to call the jquery method <code>next()</code> . Should i use <code>target + '()'</code> (this is bit foolish) to call <code>next()</code> ?</p>\n\n<p>I know it can be done using <code>conditional</code> statements. Since it is a string got from users, but it is difficult to use conditional statements for all that.</p>\n\n<p>In my jQuery plugin, users will pass the value <code>prev</code>, <code>siblings</code> etc as options, so that the respective jQuery methods will be executed. </p>\n\n<p>How do I implement this ?</p>\n",
            "last_activity_date": 1393090568,
            "question_id": 3326078,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "string",
                "function",
                "methods"
            ],
            "title": "jQuery call function from a string"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You need a function to get the <a href=\"http://www.quirksmode.org/js/findpos.html\">position of the canvas element</a>:</p>\n\n<pre><code>function findPos(obj) {\n    var curleft = 0, curtop = 0;\n    if (obj.offsetParent) {\n        do {\n            curleft += obj.offsetLeft;\n            curtop += obj.offsetTop;\n        } while (obj = obj.offsetParent);\n        return { x: curleft, y: curtop };\n    }\n    return undefined;\n}\n</code></pre>\n\n<p>And calculate the current position of the cursor relative to that:</p>\n\n<pre><code>$('#canvas').mousemove(function(e) {\n    var pos = findPos(this);\n    var x = e.pageX - pos.x;\n    var y = e.pageY - pos.y;\n    var coordinateDisplay = \"x=\" + x + \", y=\" + y;\n    writeCoordinateDisplay(coordinateDisplay);\n});\n</code></pre>\n\n<p>The values of <code>offsetLeft</code> and <code>offsetTop</code> are relative to <code>offsetParent</code>, which is your <code>div</code> node. When you remove the <code>div</code> they're relative to the <code>body</code>, so there is no offset to subtract.</p>\n\n<p>Similary, <code>e.pageX</code> and <code>e.pageY</code> give the position of the cursor relative to the document. That's why we subtract the canvas's offset from those values to arrive at the true position.</p>\n\n<p>An alternative for <em>positioned</em> elements is to directly use the values of <code>e.layerX</code> and <code>e.layerY</code>. This is less reliable than the method above for two reasons:</p>\n\n<ol>\n<li>These values are also relative to the entire document when the event does not take place inside a positioned element</li>\n<li>They are not part of any standard</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p>I'm having trouble in getting the mouse position w.r.t canvas.</p>\n\n<p>There are two cases:</p>\n\n<p>1) If there is <strong>no div element surrounding the canvas div</strong> then I was able to get the mouse position.</p>\n\n<p>2) When the canvas is wrapped in a <code>div</code> then <code>offsetLeft</code> and <code>offsetTop</code> do not work as expected</p>\n\n<p>What accounts for this difference?</p>\n",
            "last_activity_date": 1361298709,
            "question_id": 5085689,
            "score": 17,
            "tags": [
                "javascript",
                "html5",
                "canvas"
            ],
            "title": "Tracking mouse position in canvas when no surrounding element exists"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>To write the most fool-proof parser, follow the exact rules for <a href=\"http://www.w3.org/TR/CSS2/syndata.html#tokenization\">tokenization</a> and CSS <a href=\"http://www.w3.org/TR/CSS2/grammar.html#grammar\">grammar</a> as defined in the spec. Note that you don't have to implement the spec by the ink. You can start with small parts and CSS that you will most likely encounter, and then expand from there. Even better, skip the entire process altogether and go with @Matthew's solution unless this is a learning exercise.</p>\n\n<p>There are various lexical scanners and parser generators available for JavaScript. The entire grammar is available on w3's website. Why do the re-work when you can simply use that and the parser generators to generate the parser in JavaScript.</p>\n\n<ol>\n<li><a href=\"http://zaa.ch/2k\">Jison</a></li>\n<li><a href=\"http://pegjs.majda.cz/\">Peg.js</a></li>\n<li><a href=\"http://code.google.com/p/cruiser/wiki/Parse\">Cruiser.Parse</a></li>\n<li><a href=\"http://matt.might.net/articles/lexing-and-syntax-highlighting-in-javascript/\">McLexer</a></li>\n<li><a href=\"http://jscc.jmksf.com/\">JS/CC</a></li>\n</ol>\n\n<p>The production rules for CSS are given below.</p>\n\n<pre><code>stylesheet\n  : [ CHARSET_SYM STRING ';' ]?\n    [S|CDO|CDC]* [ import [ CDO S* | CDC S* ]* ]*\n    [ [ ruleset | media | page ] [ CDO S* | CDC S* ]* ]*\n  ;\nimport\n  : IMPORT_SYM S*\n    [STRING|URI] S* media_list? ';' S*\n  ;\nmedia\n  : MEDIA_SYM S* media_list LBRACE S* ruleset* '}' S*\n  ;\nmedia_list\n  : medium [ COMMA S* medium]*\n  ;\nmedium\n  : IDENT S*\n  ;\npage\n  : PAGE_SYM S* pseudo_page?\n    '{' S* declaration? [ ';' S* declaration? ]* '}' S*\n  ;\npseudo_page\n  : ':' IDENT S*\n  ;\noperator\n  : '/' S* | ',' S*\n  ;\ncombinator\n  : '+' S*\n  | '&gt;' S*\n  ;\nunary_operator\n  : '-' | '+'\n  ;\nproperty\n  : IDENT S*\n  ;\nruleset\n  : selector [ ',' S* selector ]*\n    '{' S* declaration? [ ';' S* declaration? ]* '}' S*\n  ;\nselector\n  : simple_selector [ combinator selector | S+ [ combinator? selector ]? ]?\n  ;\nsimple_selector\n  : element_name [ HASH | class | attrib | pseudo ]*\n  | [ HASH | class | attrib | pseudo ]+\n  ;\nclass\n  : '.' IDENT\n  ;\nelement_name\n  : IDENT | '*'\n  ;\nattrib\n  : '[' S* IDENT S* [ [ '=' | INCLUDES | DASHMATCH ] S*\n    [ IDENT | STRING ] S* ]? ']'\n  ;\npseudo\n  : ':' [ IDENT | FUNCTION S* [IDENT S*]? ')' ]\n  ;\ndeclaration\n  : property ':' S* expr prio?\n  ;\nprio\n  : IMPORTANT_SYM S*\n  ;\nexpr\n  : term [ operator? term ]*\n  ;\nterm\n  : unary_operator?\n    [ NUMBER S* | PERCENTAGE S* | LENGTH S* | EMS S* | EXS S* | ANGLE S* |\n      TIME S* | FREQ S* ]\n  | STRING S* | IDENT S* | URI S* | hexcolor | function\n  ;\nfunction\n  : FUNCTION S* expr ')' S*\n  ;\n/*\n * There is a constraint on the color that it must\n * have either 3 or 6 hex-digits (i.e., [0-9a-fA-F])\n * after the \"#\"; e.g., \"#000\" is OK, but \"#abcd\" is not.\n */\nhexcolor\n  : HASH S*\n  ;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>There is a CSS parser written in Javascript called <a href=\"http://glazman.org/JSCSSP/\">JSCSSP</a></p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>You can easily use the Browser's own CSSOM to parse CSS:</p>\n\n<pre><code>var rulesForCssText = function (styleContent) {\n    var doc = document.implementation.createHTMLDocument(\"\"),\n        styleElement = document.createElement(\"style\");\n\n   styleElement.textContent = styleContent;\n    // the style will only be parsed once it is added to a document\n    doc.body.appendChild(styleElement);\n\n    return styleElement.sheet.cssRules;\n};\n</code></pre>\n\n<p>For each rule returned you can look at the properties in <code>rule.style</code>. See <a href=\"http://jsfiddle.net/v2JsZ/\">http://jsfiddle.net/v2JsZ/</a> for an example.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>My very simple parser. Handle alert function by yourself.</p>\n\n<pre><code>function parseCss(str) {\n    var buff = \"\";\n\n    var blockOpen = false;\n    var selBuff = \"\";\n\n    var keyBuff = \"\";\n\n    var valOpen = false;\n\n    for(var i in str) {\n        var pol = str[i];\n\n        if(pol==\"\\t\") continue;\n\n        if(pol == \"{\")\n        {\n            blockOpen = true;\n            selBuff = buff;\n            buff = \"\";\n            continue;\n        }\n\n        if(blockOpen)\n        {\n            if(pol == \"}\")\n            {\n                blockOpen = valOpen = false;\n                selBuff = keyBuff = buff = \"\";\n                continue;\n            }\n\n            if(!valOpen)\n            {\n                if(pol == \":\") {\n                    valOpen = true;\n                    keyBuff = buff;\n                    buff = \"\";\n                    continue;\n                }\n            }\n            else\n            {\n                if(pol == \"\\n\" || pol==\";\" || str[i] == \"}\"){\n                    alert({key:keyBuff, value:buff, selector:selBuff});\n\n                    valOpen = false;\n                    keyBuff = buff = \"\";\n                }\n            }\n        }\n\n        pol == \"\\n\" ? buff = \"\" : buff += pol;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm trying to implement parsing of CSS in JavaScript so that:</p>\n\n<pre><code>a {\n  color: red;\n}\n</code></pre>\n\n<p>is parsed into the object:</p>\n\n<pre><code>{\n  'a' {\n    'color': 'red'\n  }\n}\n</code></pre>\n\n<p>First off, is there a JavaScript / jQuery <strong>library</strong> I can use?</p>\n\n<p>My implementation is pretty basic, so I'm sure it is not fool-proof by any means. For example, it works fine for basic CSS, but for a property of the type:</p>\n\n<pre><code>background: url(data:image/png;base64, ....);\n</code></pre>\n\n<p>It fails because I am using <code>split(';')</code> to separate <code>property:value</code> pairs. Here, <code>;</code> occurs in the <code>value</code>, so it splits at that point too.</p>\n\n<p>Is there an alternate way to do this?</p>\n\n<p>Here is the code:</p>\n\n<pre><code>parseCSS: function(css) {\n    var rules = {};\n    css = this.removeComments(css);\n    var blocks = css.split('}');\n    blocks.pop();\n    var len = blocks.length;\n    for (var i = 0; i &lt; len; i++)\n    {\n        var pair = blocks[i].split('{');\n        rules[$.trim(pair[0])] = this.parseCSSBlock(pair[1]);\n    }\n    return rules;\n},\n\nparseCSSBlock: function(css) { \n    var rule = {};\n    var declarations = css.split(';');\n    declarations.pop();\n    var len = declarations.length;\n    for (var i = 0; i &lt; len; i++)\n    {\n        var loc = declarations[i].indexOf(':');\n        var property = $.trim(declarations[i].substring(0, loc));\n        var value = $.trim(declarations[i].substring(loc + 1));\n\n        if (property != \"\" &amp;&amp; value != \"\")\n            rule[property] = value;\n    }\n    return rule;\n},\n\nremoveComments: function(css) {\n    return css.replace(/\\/\\*(\\r|\\n|.)*\\*\\//g,\"\");\n}\n</code></pre>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1384027227,
            "question_id": 3326494,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "parsing"
            ],
            "title": "Parsing CSS in JavaScript / jQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>From the <code>document.getElementsByTagName</code> I guess you are running the javascript in a browser.</p>\n\n<p>The traditional way to expose functionality to javascript running in the browser is calling a remote URL using AJAX. The X in AJAX is for XML, but nowadays everybody uses JSON instead of XML.</p>\n\n<p>For example, using jQuery you can do something like:</p>\n\n<pre><code>$.getJSON('http://example.com/your/webservice?param1=x&amp;param2=y', \n    function(data, textStatus, jqXHR) {\n        alert(data);\n    }\n)\n</code></pre>\n\n<p>You will need to implement a python webservice on the server side. For simple webservices I like to use <a href=\"http://flask.pocoo.org/\">Flask</a>.</p>\n\n<p>A typical implementation looks like:</p>\n\n<pre><code>@app.route(\"/your/webservice\")\ndef my_webservice():\n    return jsonify(result=some_function(**request.args)) \n</code></pre>\n\n<p>You can run IronPython (kind of Python.Net) in the browser with <a href=\"http://www.voidspace.org.uk/ironpython/silverlight/index.shtml#ironpython-silverlight\">silverlight</a>, but I don't know if NLTK is available for IronPython.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Typically you would accomplish this using an ajax request that'll look similar to the below.</p>\n\n<pre><code>var xhr = new XMLHttpRequest();\nxhr.open(\"GET\", \"pythoncode.py?text=\" + text, true);\nxhr.responseType = \"JSON\";\nxhr.onload = function(e) {\n  var arrOfStrings = JSON.parse(xhr.response);\n}\nxhr.send();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>All you need is to make an ajax request to your pythoncode.\nYou can do this with jquery <a href=\"http://api.jquery.com/jQuery.ajax/\">http://api.jquery.com/jQuery.ajax/</a>, or use just javascript</p>\n\n<pre><code>$.ajax({\n  type: \"POST\",\n  url: \"~/pythoncode.py\",\n  data: { param: text}\n}).done(function( o ) {\n   // do something\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I'd like to call a <code>Python</code> function from <code>Javascript</code> code, because there isn't an alternative in <code>Javascript</code> for doing what I want. Is this possible? Could you adjust the below snippet to work?</p>\n\n<p>Javascript part:</p>\n\n<pre><code>var tag = document.getElementsByTagName(\"p\")[0];\ntext = tag.innerHTML;\n// Here I would like to call the Python interpreter with Python function\narrOfStrings = openSomehowPythonInterpreter(\"~/pythoncode.py\", \"processParagraph(text)\");\n\n~/pythoncode.py\n</code></pre>\n\n<p>contains functions using advanced libraries that don't have an easy to write equivalent in Javascript</p>\n\n<pre><code>import nltk # is not in Javascript\ndef processParagraph(text):\n  ...\n  nltk calls\n  ...\n  return lst # returns a list of strings (will be converted to `Javascript` array)\n</code></pre>\n",
            "last_activity_date": 1351768696,
            "question_id": 13175510,
            "score": 11,
            "tags": [
                "javascript",
                "python",
                "function",
                "integration"
            ],
            "title": "Call Python function from Javascript code"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If your XSLT is using <code>xsl:include</code> you might receive weird unexplainable errors but always with the same end result: your transformation failing. </p>\n\n<p>See this chromium bug report and please support it!\n<a href=\"http://code.google.com/p/chromium/issues/detail?id=8441\">http://code.google.com/p/chromium/issues/detail?id=8441</a></p>\n\n<p>The bug is actually in webkit though. For more info <a href=\"http://www.experts-exchange.com/Web_Development/Web_Languages-Standards/XSLT/Q_24311395.html\">here's</a> another link which goes into more detail why it doesn't work.</p>\n\n<p>The only way around this is to pre-process the stylesheet so that it injects the included stylesheets. Which is what a crossbrowser XSLT library like Sarissa will do for you automatically.</p>\n\n<p>If your looking for jQuery solution:<br>\n<a href=\"http://plugins.jquery.com/project/Transform/\">http://plugins.jquery.com/project/Transform/</a> is a cross browser XSL plug-in. I've succesfully used this to get <code>xsl:include</code> working in the past without much hassle. You don't have to rewrite your xsl's this plugin will pre-process them for you. Definitely worth looking at as it's more lightweight then Sarissa.</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script language=\"javascript\" src=\"jquery-1.3.2.min.js\"&gt;&lt;/script&gt; \n&lt;script language=\"javascript\" src=\"jquery.transform.js\"&gt;&lt;/script&gt;  \n&lt;script type=\"text/javascript\"&gt;\nfunction loadXML(file)\n{\n    var xmlDoc = null;\n    try //Internet Explorer\n    {\n        xmlDoc=new ActiveXObject(\"Microsoft.XMLDOM\");\n        xmlDoc.async=false;\n        xmlDoc.load(file);\n    }\n    catch(e)\n    {\n        try //Firefox, Mozilla, Opera, etc.\n        {\n            xmlDoc=document.implementation.createDocument(\"\",\"\",null);\n            xmlDoc.async=false;\n            xmlDoc.load(file);\n        }\n        catch(e)\n        {\n            try //Google Chrome\n            {\n                var xmlhttp = new window.XMLHttpRequest();\n                xmlhttp.open(\"GET\",file,false);\n                xmlhttp.send(null);\n                xmlDoc = xmlhttp.responseXML.documentElement;\n            }\n            catch(e)\n            {\n            error=e.message;\n            }\n        }\n    }\n    return xmlDoc;\n}\nfunction xslTransform(xmlObject, xslObject)\n{\n    try \n    {\n        $(\"body\").append(\"&lt;div id='test'&gt;&lt;/div&gt;\");\n        var a = $(\"#test\").transform({ xmlobj: xmlObject, xslobj: xslObject });\n    }\n    catch (exception) \n    {\n        if (typeof (exception) == \"object\" &amp;&amp; exception.message) \n            alert(exception.message);\n        else alert(exception);\n    }\n}\nvar xmlObject = loadXML(\"input.xml\");\nvar xslObject = loadXML(\"transform.xsl\");\n$(document).ready(function()  \n{\n    xslTransform(xmlObject, xslObject);\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>This test html page works both in Chrome/FireFox/IE. </p>\n\n<p>input.xml is just a simple xml file containing <code>&lt;root /&gt;</code>\ntransform.xsl is the stripped down xsl you posted.</p>\n\n<p><strong>EDIT</strong>   </p>\n\n<p>It does however seem the $.transform has problems importing stylesheets from included files:</p>\n\n<p>Here's how to fix this:</p>\n\n<p>Locate </p>\n\n<pre><code>var safariimportincludefix = function(xObj,rootConfig) {\n</code></pre>\n\n<p>in <code>jquery.transform.js</code> and replace the entire function with this:</p>\n\n<pre><code>var safariimportincludefix = function(xObj,rootConfig) {\n    var vals = $.merge($.makeArray(xObj.getElementsByTagName(\"import\")),$.makeArray(xObj.getElementsByTagName(\"include\")));\n\n    for(var x=0;x&lt;vals.length;x++) {\n        var node = vals[x];\n        $.ajax({\n            passData : { node : node, xObj : xObj, rootConfig : rootConfig},\n            dataType : \"xml\",\n            async : false,\n            url : replaceref(node.getAttribute(\"href\"),rootConfig),\n            success : function(xhr) {\n                try {\n                    var _ = this.passData;\n                    xhr = safariimportincludefix(xhr,_.rootConfig);\n\n                    var imports = $.merge(childNodes(xhr.getElementsByTagName(\"stylesheet\")[0],\"param\"),childNodes(xhr.getElementsByTagName(\"stylesheet\")[0],\"template\"));\n                    var excistingNodes = [];\n                    try \n                    {\n                        var sheet = _.xObj;\n                        var params = childNodes(sheet,\"param\");\n                        var stylesheets = childNodes(sheet,\"template\");\n                        existingNodes = $.merge(params,stylesheets);\n                    }\n                    catch(exception) \n                    {\n                        var x = exception;\n                    }\n                    var existingNames = [];\n                    var existingMatches = [];\n                    for(var a=0;a&lt;existingNodes.length;a++) {\n                        if(existingNodes[a].getAttribute(\"name\")) {\n                            existingNames[existingNodes[a].getAttribute(\"name\")] = true;\n                        } else {\n                            existingMatches[existingNodes[a].getAttribute(\"match\")] = true;\n                        }\n                    }\n\n                    var pn = _.node.parentNode;\n                    for(var y=0;y&lt;imports.length;y++) {\n                        if(!existingNames[imports[y].getAttribute(\"name\")] &amp;&amp; !existingMatches[imports[y].getAttribute(\"match\")]) {\n                            var clonednode = _.xObj.ownerDocument.importNode(imports[y],true);\n                            //pn.insertBefore(clonednode,_.xObj);\n                            pn.insertBefore(clonednode,childNodes(_.xObj,\"template\")[0]);\n                        }\n                    }\n                    pn.removeChild(_.node);\n                } catch(ex) { \n\n                }\n            }\n        });\n    }\n\n    return xObj;\n};\n</code></pre>\n\n<p>Now using the previously pasted test index.html use this for <code>transform.xsl</code>:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;xsl:stylesheet version=\"1.0\"\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n    &gt;\n        &lt;xsl:include href=\"include.xsl\" /&gt;\n    &lt;xsl:output method=\"html\"/&gt;\n    &lt;xsl:template match=\"/\"&gt;\n            &lt;xsl:call-template name=\"giveMeAnIncludedHeader\" /&gt;\n    &lt;/xsl:template&gt;\n&lt;/xsl:stylesheet&gt;\n</code></pre>\n\n<p>And this for <code>include.xsl</code></p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n    &lt;xsl:template name=\"giveMeAnIncludedHeader\"&gt;\n        &lt;h1&gt;Test&lt;/h1&gt;\n    &lt;/xsl:template&gt;\n&lt;/xsl:stylesheet&gt;\n</code></pre>\n\n<p>With the previously posted fix in <code>jquery.transform.js</code> this will now insert the included <code>&lt;h1&gt;Test&lt;/h1&gt;</code> on all the browsers.</p>\n\n<p>You can see it in action here: <a href=\"http://www.mpdreamz.nl/xsltest\">http://www.mpdreamz.nl/xsltest</a></p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>This is not an answer to the original question but during my search over internet looking for a <strong>sample xslt transformation that works on chrome</strong> I found links to this thread many times. I was looking for a solution that doesn't use any open-source or third party libraries/plugins and works well with silverlight.</p>\n\n<p>The problem with chrome and safari is the limitation that prevents loading xml files directly. The suggested workaround at <a href=\"http://www.mindlence.com/WP/?p=308\" rel=\"nofollow\">http://www.mindlence.com/WP/?p=308</a> is to load the xml file via any other method and pass it as a string to the xslt processor.</p>\n\n<p>With this approach I was able to perform xsl transformations in javascript and pass on the result to silverlight app via HTML Bridge.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have the following code that applies a XSLT style </p>\n\n<pre><code>Test.Xml.xslTransform = function(xml, xsl) {\n    try {\n        // code for IE\n        if (window.ActiveXObject) {\n            ex = xml.transformNode(xsl);\n            return ex;\n        }\n        // code for Mozilla, Firefox, Opera, etc.\n        else if (document.implementation &amp;&amp; document.implementation.createDocument) {\n            xsltProcessor = new XSLTProcessor();\n            xsltProcessor.importStylesheet(xsl);\n            resultDocument = xsltProcessor.transformToFragment(xml, document);\n            return resultDocument;\n        }\n    } catch (exception) {\n        if (typeof (exception) == \"object\") {\n            if (exception.message) {\n                alert(exception.message);\n            }\n        } else {\n            alert(exception);\n        }\n    }\n</code></pre>\n\n<p>The code is working in IE and firefox but not in Chrome and Safari. Any ideas why?</p>\n\n<p><strong>Update</strong></p>\n\n<pre><code>ResultDocument = xsltProcessor.transformToFragment(xml, document);\n</code></pre>\n\n<p>The line above is returning null. No error is being thrown.</p>\n\n<p><strong>Update</strong></p>\n\n<p>The code is not working as the xslt file contains xsl:include. Need to find a way to get the include working I will paste progress here</p>\n\n<p><strong>Update</strong></p>\n\n<p>It has been recomended that I use the <a href=\"http://plugins.jquery.com/project/Transform/\">http://plugins.jquery.com/project/Transform/</a> plugin. I am trying to use the client side libary as the example of include works here (http://daersystems.com/jquery/transform/).</p>\n\n<p>The code works in IE but still not in chrome.</p>\n\n<pre><code>Test.Xml.xslTransform = function(xml, xsl) {\n        try {\n                $(\"body\").append(\"&lt;div id='test' style='display:none;'&gt;&lt;/div&gt;\");\n                var a = $(\"#test\").transform({ xmlobj: xml, xslobj: xsl });\n                return a.html();\n        }\n        catch (exception) {\n            if (typeof (exception) == \"object\") {\n                if (exception.message) {\n                    alert(exception.message);\n                }\n            } else {\n                alert(exception);\n            }\n\n        }\n    }\n</code></pre>\n\n<p>xml and xsl are both objects being passed in.</p>\n\n<p><strong>Update</strong></p>\n\n<p>I tried changing the XSL file to being something very simple with no include and Chrome is still not applying the stylesheet and IE is. The XSL that is being brought in as an object is:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;xsl:stylesheet version=\"1.0\"\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n    xmlns:rs=\"urn:schemas-microsoft-com:rowset\"\n    xmlns:z=\"#RowsetSchema\"\n    xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"\n    xmlns:msxsl=\"urn:schemas-microsoft-com:xslt\" exclude-result-prefixes=\"msxsl\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n    xmlns:spsoap=\"http://schemas.microsoft.com/sharepoint/soap/\"\n    &gt;\n    &lt;xsl:output method=\"html\"/&gt;\n    &lt;xsl:template match=\"/\"&gt;\n        &lt;h1&gt;test&lt;/h1&gt;\n    &lt;/xsl:template&gt;\n\n&lt;/xsl:stylesheet&gt;\n</code></pre>\n\n<p><strong>Update</strong></p>\n\n<p>The end result that I want is for the xsl to be applied to the xml file. The xsl file has in it includes. I want the trasnfer to happen on the client ideally.</p>\n\n<p><strong>Updated</strong>\n<em>Rupert could you update the question with the xml and how you're calling Test.Xml.xslTransform ?</em></p>\n\n<p>I got the xml using ie8</p>\n\n<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"&gt;&lt;soap:Body&gt;&lt;SearchListItemsResponse xmlns=\"http://schemas.microsoft.com/sharepoint/soap/\"&gt;&lt;SearchListItemsResult&gt;&lt;listitems xmlns:s=\"uuid:BDC6E3F0-6DA3-11d1-A2A3-00AA00C14882\" xmlns:dt=\"uuid:C2F41010-65B3-11d1-A29F-00AA00C14882\" xmlns:rs=\"urn:schemas-microsoft-com:rowset\" xmlns:z=\"#RowsetSchema\"&gt;\n                    &lt;rs:data ItemCount=\"1\"&gt;\n                        &lt;z:row ows_Title=\"Test\" ows_FirstName=\"Test 4\" ows_UniqueId=\"74;#{1A16CF3E-524D-4DEF-BE36-68A964CC24DF}\" ows_FSObjType=\"74;#0\" ows_MetaInfo=\"74;#\" ows_ID=\"74\" ows_owshiddenversion=\"10\" ows_Created=\"2009-12-29 12:21:01\" ows_FileRef=\"74;#Lists/My List Name/74_.000\" ReadOnly=\"False\" VerificationRequired=\"0\"/&gt;\n                    &lt;/rs:data&gt;\n                &lt;/listitems&gt;&lt;/SearchListItemsResult&gt;&lt;/SearchListItemsResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;\n</code></pre>\n\n<p>The code is being called as follows:</p>\n\n<pre><code>xsl = Test.Xml.loadXMLDoc(\"/_layouts/xsl/xsl.xslt\");\nvar doc = Test.Xml.xslTransform(xData.responseXML, xsl);\n</code></pre>\n\n<p>xData is the xml returned by a web service.</p>\n",
            "last_activity_date": 1290484484,
            "question_id": 2042178,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "xslt",
                "safari",
                "google-chrome"
            ],
            "title": "Chrome and Safari XSLT using JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Replace the comma with a dot. </p>\n\n<p>This will only return 554:</p>\n\n<pre><code>var value = parseFloat(\"554,20\")\n</code></pre>\n\n<p>This will return 554.20:</p>\n\n<pre><code>var value = parseFloat(\"554.20\")\n</code></pre>\n\n<p>So in the end, you can simply use:</p>\n\n<pre><code>var fValue = parseFloat(document.getElementById(\"textfield\").value.replace(\",\",\".\"))\n</code></pre>\n\n<p>Don't forget that <code>parseInt()</code> should only be used to parse integers (no floating points). In your case it will only return 554. Additionally, calling parseInt() on a float will not round the number: it will take its floor (closest lower integer).</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>If they're meant to be separate values, try this:</p>\n\n<pre><code>var values = \"554,20\".split(\",\")\nvar v1 = parseFloat(values[0])\nvar v2 = parseFloat(values[1])\n</code></pre>\n\n<p>If they're meant to be a single value (like in French, where one-half is written 0,5)</p>\n\n<pre><code>var value = parseFloat(\"554,20\".replace(\",\", \".\"));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 169
                },
                {
                    "body": "<p>Have you ever tried to do this? :p</p>\n\n<pre><code>var str = '3.8';ie\nalert( +(str) + 0.2 );\n</code></pre>\n\n<p>+(string) will cast string into float.</p>\n\n<p>Handy!</p>\n\n<p>So in order to solve your problem, you can do something like this:</p>\n\n<pre><code>var floatValue = +(str.replace(/,/,'.'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>If you extend String object like this..</p>\n\n<pre><code>String.prototype.float = function() { \n  return parseFloat(this.replace(',', '.')); \n}\n</code></pre>\n\n<p>.. you can run it like this</p>\n\n<pre><code>\"554,20\".float()\n&gt; 554.20\n</code></pre>\n\n<p>works with dot as well</p>\n\n<pre><code>\"554.20\".float()\n&gt; 554.20\n\ntypeof \"554,20\".float()\n&gt; \"number\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>@GusDeCool or anyone else trying to replace more than one thousands separators, one way to do it is a regex global replace: <code>/foo/g</code>.  Just remember that <code>.</code> is a metacharacter, so you have to escape it or put it in brackets (<code>\\.</code> or <code>[.]</code>).  Here's one option:</p>\n\n<pre><code>var str = '6.000.000';\nstr.replace(/[.]/g,\",\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am trying to parse two values from a datagrid.<br>\nThe fields are numeric, and when they have a comma (ex. 554,20), I can't get the numbers after the comma.<br>\nI've tried <code>parseInt</code> and <code>parseFloat</code>. How can I do this?</p>\n",
            "last_activity_date": 1389651576,
            "question_id": 642650,
            "score": 119,
            "tags": [
                "javascript",
                "parsing",
                "floating-point"
            ],
            "title": "How to convert string into float in javascript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>like this:</p>\n\n<pre><code>var foo = 45;\nvar bar = '' + foo;\n</code></pre>\n\n<p>Actually, even though I typically do it like this for simple convenience, over 1,000s of iterations it appears for raw speed there is an advantage for <code>.toString()</code></p>\n\n<p>See Performance tests here (not by me, but found when I went to write my own):\n<a href=\"http://jsperf.com/number-to-string/2\">http://jsperf.com/number-to-string/2</a></p>\n\n<p>Fastest based on the JSPerf test above: <code>str = num.toString();</code></p>\n\n<p><em>It should be noted</em> that the difference in speed is not overly significant when you consider that it can do the conversion any way <strong>1 Million times in 0.1 seconds</strong>.</p>\n\n<p><strong>Update:</strong> The speed seems to differ greatly by browser.  In Chrome <code>num + ''</code> seems to be fastest based on this JSPerf test (different than above test) <a href=\"http://jsperf.com/scunliffe-number-to-string\">http://jsperf.com/scunliffe-number-to-string</a></p>\n\n<p><strong>Update 2:</strong> Again based on my test above it should be noted that Firefox 20.0.1 executes the <code>.toString()</code> about 100 times slower than the <code>'' + num</code> sample.</p>\n",
                    "is_accepted": true,
                    "score": 99
                },
                {
                    "body": "<p>In my opinion <code>n.toString()</code> takes the price for it's clarity, and I don't think it carries any extra overhead. </p>\n",
                    "is_accepted": false,
                    "score": 64
                },
                {
                    "body": "<p>I like the first two since they're easier to read. I tend to use <code>String(n)</code> but it is just a matter of style than anything else.</p>\n\n<p>That is unless you have a line as</p>\n\n<pre><code>var n = 5;\nconsole.log (\"the number is: \" + n);\n</code></pre>\n\n<p>which is very self explanatory</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The simplest way to convert any variable to a string is to add an empty string to that variable.  </p>\n\n<pre><code>5.41 + ''    // Result: the string '5.41'\nMath.PI + '' // Result: the string '3.141592653589793'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think is depend on situation but anyway you can use the .toString() method it is very clear to understand</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Explicit conversions are very clear to someone that's new to the language.  Using type coercion, as others have suggested, leads to ambiguity if a developer is not aware of the coercion rules.  Ultimately developer time is more costly than CPU time, so I'd optimize for the former at the cost of the latter.  That being said, in this case the difference is likely negligible, but if not I'm sure there are some decent JavaScript compressors that will optimize this sort of thing.</p>\n\n<p>So, for the above reasons I'd go with: <code>n.toString()</code> or <code>String(n)</code>.  <code>String(n)</code> is probably a better choice because it won't fail if <code>n</code> is null or undefined.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>If I had to take everything into consideration, I will suggest following   </p>\n\n<pre><code>var myint = 1;\nvar mystring = myint + '';\n/*or int to string*/\nmyint = myint + ''\n</code></pre>\n\n<p>IMHO, its the fastest way to convert to string. Correct me if I am wrong.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you need to to <strong>format</strong> the result to a specific <strong>number of decimal places,</strong> for example to represent currency, you need something like the <code>toFixed()</code> method.</p>\n\n<pre><code>number.toFixed( [digits] )\n</code></pre>\n\n<p><code>digits</code> is the number of digits to display after the decimal place.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What's the \"best\" way to convert a number to a string (in terms of speed advantage, clarity advantage, memory advantage, etc) ?</p>\n\n<p>Some examples:</p>\n\n<ol>\n<li><p><code>String(n)</code></p></li>\n<li><p><code>n.toString()</code></p></li>\n<li><p><code>\"\"+n</code></p></li>\n<li><p><code>n+\"\"</code></p></li>\n</ol>\n",
            "last_activity_date": 1424827002,
            "question_id": 5765398,
            "score": 88,
            "tags": [
                "javascript",
                "string",
                "performance",
                "coding-style",
                "numbers"
            ],
            "title": "What&#39;s the best way to convert a number to a string in JavaScript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>It doesn't seem like you can access this in browser.  The search input is a Webkit HTML wrapper for the Cocoa NSSearchField.  The cancel button seems to be contained within the browser client code with no external reference available from the wrapper.</p>\n\n<p>Sources:<br/></p>\n\n<ul>\n<li><a href=\"http://weblogs.mozillazine.org/hyatt/archives/2004_07.html#005890\" rel=\"nofollow\">http://weblogs.mozillazine.org/hyatt/archives/2004_07.html#005890</a></li>\n<li><a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#text-state-and-search-state\" rel=\"nofollow\">http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#text-state-and-search-state</a></li>\n<li><a href=\"http://dev.w3.org/html5/markup/input.search.html#input.search\" rel=\"nofollow\">http://dev.w3.org/html5/markup/input.search.html#input.search</a></li>\n</ul>\n\n<p>Looks like you'll have to figure it out through mouse position on click with something like:</p>\n\n<pre><code>$('input[type=search]').bind('click', function(e) {\n  var $earch = $(this);\n  var offset = $earch.offset();\n\n  if (e.pageX &gt; offset.left + $earch.width() - 16) { // X button 16px wide?\n    // your code here\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Actually, there is a \"search\" event that is fired whenever the user searches, or when the user clicks the \"x\". This is especially useful because it understands the \"incremental\" attribute.</p>\n\n<p>Now, having said that, I'm not sure if you can tell the difference between clicking the \"x\" and searching, unless you use an \"onclick\" hack. Either way, hopefully this helps.</p>\n\n<blockquote>\n  <p>References:</p>\n  \n  <p><a href=\"http://help.dottoro.com/ljdvxmhr.php\">http://help.dottoro.com/ljdvxmhr.php</a></p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>Using Pauan's response, it's mostly possible.  Ex.</p>\n\n<pre><code>&lt;head&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        function OnSearch(input) {\n            if(input.value == \"\") {\n                alert(\"You either clicked the X or you searched for nothing.\");\n            }\n            else {\n                alert(\"You searched for \" + input.value);\n            }\n        }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    Please specify the text you want to find and press ENTER!\n    &lt;input type=\"search\" name=\"search\" onsearch=\"OnSearch(this)\"/&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>It made sense to me that clicking the X should count as a change event.  I already had the onChange event all setup to do what I needed it to do.  So for me, the fix was to simply do this jQuery line:</p>\n\n<p><code>\n$('#search').click(function(){ $(this).change(); });\n</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Found this post and I realize it's a bit old, but I <em>think</em> I might have an answer.  This handles the click on the cross, backspacing and hitting the ESC key.  I am sure it could probably be written better - I'm still relatively new to javascript.  Here is what I ended up doing - I am using jQuery (v1.6.4):</p>\n\n<pre><code>var searchVal = \"\"; //create a global var to capture the value in the search box, for comparison later\n$(document).ready(function() {\n  $(\"input[type=search]\").keyup(function(e) {\n    if (e.which == 27) {  // catch ESC key and clear input\n      $(this).val('');\n    }\n    if (($(this).val() === \"\" &amp;&amp; searchVal != \"\") || e.which == 27) {\n      // do something\n      searchVal = \"\";\n    }\n    searchVal = $(this).val();\n  });\n  $(\"input[type=search]\").click(function() {\n    if ($(this).val() != filterVal) {\n      // do something\n      searchVal = \"\";\n    }\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Bind <code>search</code>-event the search box as given below-</p>\n\n<pre><code>$('input[type=search]').on('search', function () {\n    // search logic here\n    // this function will be executed on click of X (clear button)\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I want to add a \"late\" answer, because I struggled with <code>change</code>, <code>keyup</code> and <code>search</code> today, and maybe what I found in the end may be useful for others too.\nBasically, I have a search-as-type panel, and I just wanted to react properly to the press of the little X (under Chrome and Opera, FF does not implement it), and clear a content pane as a result.</p>\n\n<p>I had this code:</p>\n\n<pre><code> $(some-input).keyup(function() { \n    // update panel\n }\n $(some-input).change(function() { \n    // update panel\n }\n $(some-input).on(\"search\", function() { \n    // update panel\n }\n</code></pre>\n\n<p>(They are separate because I wanted to check when and under which circumstances each was called).</p>\n\n<p>It turns out that Chrome and Firefox react differently. \nIn particular, Firefox treats <code>change</code> as \"every change to the input\", while Chrome treats it as \"when focus is lost AND the content is changed\".\nSo, on Chrome the \"update panel\" function was called once, on FF twice for every keystroke (one in <code>keyup</code>, one in <code>change</code>)</p>\n\n<p>Additionally, clearing the field with the small X (which is not present under FF) fired the <code>search</code> event under Chrome: no <code>keyup</code>, no <code>change</code>.</p>\n\n<p>The conclusion? Use <code>input</code> instead:</p>\n\n<pre><code> $(some-input).on(\"input\", function() { \n    // update panel\n }\n</code></pre>\n\n<p>It works with the same behaviour under all the browsers I tested, reacting at every change in the input content (copy-paste with the mouse, autocompletion and \"X\" included).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The search  or onclick works... but the issue I found was with the older browsers - the search fails.  Lots of plugins (jquery ui autocomplete or fancytree filter) have blur and focus handlers.  Adding this to an autocomplete input box worked for me(used this.value == \"\" because it was faster to evaluate).  The blur then focus kept the cursor in the box when you hit the little 'x'.  </p>\n\n<p>The PropertyChange and input worked for both IE 10 and IE 8 as well as other browsers:</p>\n\n<pre><code>$(\"#INPUTID\").on(\"propertychange input\", function(e) { \n    if (this.value == \"\") $(this).blur().focus(); \n});\n</code></pre>\n\n<p>For FancyTree filter extension, you can use a reset button and force it's click event as follows:</p>\n\n<pre><code>var TheFancyTree = $(\"#FancyTreeID\").fancytree(\"getTree\");\n\n$(\"input[name=FT_FilterINPUT]\").on(\"propertychange input\", function (e) {\n    var n,\n    leavesOnly = false,\n    match = $(this).val();\n    // check for the escape key or empty filter\n    if (e &amp;&amp; e.which === $.ui.keyCode.ESCAPE || $.trim(match) === \"\") {\n        $(\"button#btnResetSearch\").click();\n        return;\n    }\n\n    n = SiteNavTree.filterNodes(function (node) {\n        return MatchContainsAll(CleanDiacriticsString(node.title.toLowerCase()), match);\n        }, leavesOnly);\n\n    $(\"button#btnResetSearch\").attr(\"disabled\", false);\n    $(\"span#SiteNavMatches\").text(\"(\" + n + \" matches)\");\n}).focus();\n\n// handle the reset and check for empty filter field... \n// set the value to trigger the change\n$(\"button#btnResetSearch\").click(function (e) {\n    if ($(\"input[name=FT_FilterINPUT]\").val() != \"\")\n        $(\"input[name=FT_FilterINPUT]\").val(\"\");\n    $(\"span#SiteNavMatches\").text(\"\");\n    SiteNavTree.clearFilter();\n}).attr(\"disabled\", true);\n</code></pre>\n\n<p>Should be able to adapt this for most uses.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In HTML5, the <code>search</code> input type appears with a little X on the right that will clear the textbox (at least in Chrome, maybe others). Is there a way to detect when this X is clicked in javascript or jQuery other than, say, detecting when the box is clicked at all or doing some sort of location click-detecting (x-position/y-position)?</p>\n",
            "last_activity_date": 1421769285,
            "question_id": 2977023,
            "score": 73,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "javascript-events",
                "html5"
            ],
            "title": "How do you detect the clearing of a &quot;search&quot; HTML5 input?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>CoffeeScript uses function declarations (aka \"named functions\") in just one place: <code>class</code> definitions. For instance,</p>\n\n<pre><code>class Foo\n</code></pre>\n\n<p>compiles to</p>\n\n<pre><code>var Foo;\nFoo = (function() {\n  function Foo() {}\n  return Foo;\n})();\n</code></pre>\n\n<p>The reason CoffeeScript doesn't use function declarations elsewhere, according to the <a href=\"https://github.com/jashkenas/coffee-script/wiki/faq\">FAQ</a>:</p>\n\n<blockquote>\n  <p>Blame Microsoft for this one. Originally every function that could have a sensible name retrieved for it was given one, but IE versions 8 and down have scoping issues where the named function is treated as both a declaration and an expression. See <a href=\"http://kangax.github.com/nfe/#jscript-memory-management\">this</a> for more information.</p>\n</blockquote>\n\n<p>In short: Using function declarations carelessly can lead to inconsistencies between IE (pre-9) and other JS environments, so CoffeeScript eschews them.</p>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>No, you can't define a function in coffee script and have it generate a function declaration in coffee script</p>\n\n<p>Even if you just write</p>\n\n<pre><code>-&gt; 123\n</code></pre>\n\n<p>the generated JS will be wrapped in parens, thus making it a function expression</p>\n\n<pre><code>(function() {\n  return 123;\n});\n</code></pre>\n\n<p>My guess is that this is because function declarations get \"hoisted\" to the top of the enclosing scope which would break up the logical flow of the coffeescript source.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>One thing to keep in mind with CoffeeScript is that you can always kick back to JavaScript.  While CoffeeScript doesn't support named function declarations, you can always drop back to JavaScript to do it.</p>\n\n<p><a href=\"http://jsbin.com/iSUFazA/11/edit\" rel=\"nofollow\">http://jsbin.com/iSUFazA/11/edit</a></p>\n\n<pre><code># http://jsbin.com/iSUFazA/11/edit\n# You cannot call a variable function prior to declaring it!\n# alert csAddNumbers(2,3) # bad!\n\n# CoffeeScript function\ncsAddNumbers = (x,y) -&gt; x+y\n\n# You can call a named function prior to\n# delcaring it\nalert \"Calling jsMultiplyNumbers: \" + jsMultiplyNumbers(2,3) # ok!\n\n# JavaScript named function\n# Backticks FTW!\n`function jsMultiplyNumbers(x,y) { return x * y; }`\n</code></pre>\n\n<p>You can also write a big fat function in CoffeeScript and then just use the backticks trick to have JavaScript call the other function:</p>\n\n<pre><code># Coffeescript big function\ncsSomeBigFunction = (x,y) -&gt;\n   z = x + y\n   z = z * x * y\n   # do other stuff\n   # keep doing other stuff\n\n# Javascript named function wrapper\n`function jsSomeBigFunction(x,y) { return csSomeBigFunction(x,y); }`\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Yes you can:</p>\n\n<pre><code>hello()\n\n`function hello() {`\nconsole.log 'hello'\ndothings()\n`}`\n</code></pre>\n\n<p>You escape pure JS via the backtick `</p>\n\n<p>Note that you can't indent on your function body. </p>\n\n<p>Cheers</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>While this is an older post, I wanted to add something to the conversation for future Googlers.</p>\n\n<p>OP is correct in that we cannot declare functions in pure CoffeeScript (excluding the idea of using back-ticks to escape pure JS inside the CoffeeScript file).</p>\n\n<p>But what we can do is bind the function to the window and essentially end up with something we can call as though it was a named function.  I am not stating this <em>is</em> a named function, I'm providing a way to do what I imagine OP wants to actually do (call a function like foo(param) somewhere in the code) using pure CoffeeScript.</p>\n\n<p>Here is an example of a function attached to the window in coffeescript:</p>\n\n<pre><code>window.autocomplete_form = (e) -&gt;\n    autocomplete = undefined\n    street_address_1 = $('#property_street_address_1')\n    autocomplete = new google.maps.places.Autocomplete(street_address_1[0], {})\n    google.maps.event.addListener autocomplete, \"place_changed\", -&gt;\n        place = autocomplete.getPlace()\n\n        i = 0\n\n        while i &lt; place.address_components.length\n            addr = place.address_components[i]\n            st_num = addr.long_name if addr.types[0] is \"street_number\"\n            st_name = addr.long_name if addr.types[0] is \"route\"\n\n            $(\"#property_city\").val addr.long_name if addr.types[0] is \"locality\"\n            $(\"#property_state\").val addr.short_name if addr.types[0] is \"administrative_area_level_1\"\n            $(\"#property_county\").val (addr.long_name).replace(new RegExp(\"\\\\bcounty\\\\b\", \"gi\"), \"\").trim() if addr.types[0] is \"administrative_area_level_2\"\n            $(\"#property_zip_code\").val addr.long_name if addr.types[0] is \"postal_code\"\n            i++\n\n        if st_num isnt \"\" and (st_num?) and st_num isnt \"undefined\"\n            street1 = st_num + \" \" + st_name\n        else\n            street1 = st_name\n\n        street_address_1.blur()\n        setTimeout (-&gt;\n            street_address_1.val(\"\").val street1\n            return\n            ), 10\n        street_address_1.val street1\n        return\n</code></pre>\n\n<p>This is using Google Places to return address information to auto-populate a form.</p>\n\n<p>So we have a partial in a Rails app which is being loaded into a page.  This means the DOM is already created, and if we call the function above on initial page load (before the ajax call renders the partial), jQuery won't see the $('#property_street_address_1') element (trust me - it didn't).  </p>\n\n<p>So we need to delay the google.maps.places.Autocomplete() until after the element is present on the page.</p>\n\n<p>We can do this via the Ajax callback on successful load of the partial:</p>\n\n<pre><code>            url = \"/proposal/\"+property_id+\"/getSectionProperty\"\n            $(\"#targ-\"+target).load url, (response, status, xhr) -&gt;\n                if status is 'success'\n                    console.log('Loading the autocomplete form...')\n                    window.autocomplete_form()\n                    return\n\n            window.isSectionDirty = false\n</code></pre>\n\n<p>So here, essentially, we're doing the same thing as calling foo() </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>defineFct = (name, fct)-&gt;\n  eval(\"var x = function #{name}() { return fct.call(this, arguments); }\")\n  return x\n</code></pre>\n\n<p>Now the following will print \"true\":</p>\n\n<pre><code>foo = defineFct('foo', ()-&gt;'foo')\nconsole.log(foo() == foo.name)\n</code></pre>\n\n<p>I don't actually use this, but do sometimes wish coffee functions had names for introspection.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I notice that in CoffeeScript, if I define a function using:</p>\n\n<pre><code>a = (c) -&gt; c=1\n</code></pre>\n\n<p>I can only get the <strong>function expression</strong>:</p>\n\n<pre><code>var a;\na = function(c) {\n    return c = 1;\n};\n</code></pre>\n\n<p>But, personally I often use <strong>function declaration</strong>,for example:</p>\n\n<pre><code>function a(c) {\n    return c = 1;\n}\n</code></pre>\n\n<p>I do use the first form, but I'm wondering if there is a way in CoffeeScript generating a function declaration. If there is no such way, I would like to know why CoffeeScript avoid doing this. I don't think JSLint would holler an error for declaration, as long as the function is declared at the top of the scope.</p>\n",
            "last_activity_date": 1413853544,
            "question_id": 6548750,
            "score": 50,
            "tags": [
                "javascript",
                "coffeescript",
                "jslint",
                "function-declaration"
            ],
            "title": "Function declaration in CoffeeScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en/DOM/window.location#Location_object\">According to MDC:</a></p>\n\n<blockquote>\n  <p>The difference from the <code>assign()</code> method is that after using <code>replace()</code> the current page will not be saved in session history, meaning the user won't be able to use the Back button to navigate to it.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>The difference is how history is handled. \"Replace\" won't give you history, \"assign\" will.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Using <code>window.location.assign(\"url\")</code> will just cause a new document to load. Using <code>window.location.replace(\"url\")</code> will replace the current document and replace the current History with that URL making it so you can't go back to the previous document loaded.</p>\n\n<p>Reference: <a href=\"http://www.exforsys.com/tutorials/javascript/javascript-location-object.html\">http://www.exforsys.com/tutorials/javascript/javascript-location-object.html</a></p>\n",
                    "is_accepted": true,
                    "score": 59
                }
            ],
            "body": "<p>What is the difference between <code>window.location.assign()</code> and <code>window.location.replace()</code>, when both redirect to a new page?</p>\n",
            "last_activity_date": 1351688968,
            "question_id": 4505798,
            "score": 49,
            "tags": [
                "javascript",
                "window.location"
            ],
            "title": "Difference between window.location.assign() and window.location.replace()"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>This <a href=\"https://web.archive.org/web/20100910071318/http://docs.jquery.com/UI/Accordion\">was originally discussed</a> in the <a href=\"http://docs.jquery.com/UI/Accordion\">jQuery UI documentation for Accordion</a>:</p>\n\n<blockquote>\n  <p><strong>NOTE: If you want multiple sections\n  open at once, don't use an accordion</strong></p>\n  \n  <p>An accordion doesn't allow more than\n  one content panel to be open at the\n  same time, and it takes a lot of\n  effort to do that. If you are looking\n  for a widget that allows more than one\n  content panel to be open, don't use\n  this. Usually it can be written with a\n  few lines of jQuery instead, something\n  like this:</p>\n\n<pre><code>jQuery(document).ready(function(){\n  $('.accordion .head').click(function() {\n      $(this).next().toggle();\n      return false;\n  }).next().hide();\n});\n</code></pre>\n  \n  <p>Or animated:</p>\n\n<pre><code>jQuery(document).ready(function(){\n  $('.accordion .head').click(function() {\n      $(this).next().toggle('slow');\n      return false;\n  }).next().hide();\n});\n</code></pre>\n</blockquote>\n\n<p>\"I may be an idiot\" - You're not an idiot if you don't read the documentation, but if you're having problems, it usually speeds up finding a solution.</p>\n",
                    "is_accepted": true,
                    "score": 57
                },
                {
                    "body": "<p>I have done a jQuery plugin that has the same look of jQuery UI Accordion and can keep all tabs\\sections open</p>\n\n<p>you can find it here <br></p>\n\n<p><a href=\"http://anasnakawa.wordpress.com/2011/01/25/jquery-ui-multi-open-accordion/\" rel=\"nofollow\">http://anasnakawa.wordpress.com/2011/01/25/jquery-ui-multi-open-accordion/</a><br></p>\n\n<p>works with the same markup</p>\n\n<pre><code>&lt;div id=\"multiOpenAccordion\"&gt;\n        &lt;h3&gt;&lt;a href=\"#\"&gt;tab 1&lt;/a&gt;&lt;/h3&gt;\n        &lt;div&gt;Lorem ipsum dolor sit amet&lt;/div&gt;\n        &lt;h3&gt;&lt;a href=\"#\"&gt;tab 2&lt;/a&gt;&lt;/h3&gt;\n        &lt;div&gt;Lorem ipsum dolor sit amet&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Javascript code</p>\n\n<pre><code>$(function(){\n        $('#multiOpenAccordion').multiAccordion();\n       // you can use a number or an array with active option to specify which tabs to be opened by default:\n       $('#multiOpenAccordion').multiAccordion({ active: 1 });\n       // OR\n       $('#multiOpenAccordion').multiAccordion({ active: [1, 2, 3] });\n\n       $('#multiOpenAccordion').multiAccordion({ active: false }); // no opened tabs\n});\n</code></pre>\n\n<p>UPDATE:\nthe plugin has been updated to support default active tabs option</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Pretty simple:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    (function($) {\n        $(function() {\n            $(\"#accordion &gt; div\").accordion({ header: \"h3\", collapsible: true });\n        })\n    })(jQuery);\n&lt;/script&gt;\n\n&lt;div id=\"accordion\"&gt;\n    &lt;div&gt;\n        &lt;h3&gt;&lt;a href=\"#\"&gt;First&lt;/a&gt;&lt;/h3&gt;\n        &lt;div&gt;Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet.&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n        &lt;h3&gt;&lt;a href=\"#\"&gt;Second&lt;/a&gt;&lt;/h3&gt;\n        &lt;div&gt;Phasellus mattis tincidunt nibh.&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n        &lt;h3&gt;&lt;a href=\"#\"&gt;Third&lt;/a&gt;&lt;/h3&gt;\n        &lt;div&gt;Nam dui erat, auctor a, dignissim quis.&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 66
                },
                {
                    "body": "<p>Or even simpler?</p>\n\n<pre><code>&lt;div class=\"accordion\"&gt;\n    &lt;h3&gt;&lt;a href=\"#\"&gt;First&lt;/a&gt;&lt;/h3&gt;\n    &lt;div&gt;Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet.&lt;/div&gt;\n&lt;/div&gt;    \n&lt;div class=\"accordion\"&gt;\n    &lt;h3&gt;&lt;a href=\"#\"&gt;Second&lt;/a&gt;&lt;/h3&gt;\n    &lt;div&gt;Phasellus mattis tincidunt nibh.&lt;/div&gt;\n&lt;/div&gt;         \n&lt;div class=\"accordion\"&gt;\n    &lt;h3&gt;&lt;a href=\"#\"&gt;Third&lt;/a&gt;&lt;/h3&gt;\n    &lt;div&gt;Nam dui erat, auctor a, dignissim quis.&lt;/div&gt;\n&lt;/div&gt;\n&lt;script type=\"text/javascript\"&gt;\n    $(\".accordion\").accordion({ collapsible: true, active: false });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I found a tricky solution. Lets call the same function twice but with different id.</p>\n\n<p><em>JQuery Code</em></p>\n\n<pre><code>$(function() {\n    $( \"#accordion1\" ).accordion({\n        collapsible: true, active: false, heightStyle: \"content\"\n    });\n    $( \"#accordion2\" ).accordion({\n        collapsible: true, active: false, heightStyle: \"content\"\n    });\n});\n</code></pre>\n\n<p><em>HTML Code</em></p>\n\n<pre><code>&lt;div id=\"accordion1\"&gt;\n    &lt;h3&gt;Section 1&lt;/h3&gt;\n    &lt;div&gt;Section one Text&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"accordion2\"&gt;   \n    &lt;h3&gt;Section 2&lt;/h3&gt;\n    &lt;div&gt;Section two Text&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Posted this in a similar thread, but thought it might be relevant here as well.</p>\n\n<p><strong>Achieving this with a single instance of jQuery-UI Accordion</strong></p>\n\n<p>As others have noted, the <code>Accordion</code> widget does not have an API option to do this directly. However, if for some reason you <em>must</em> use the widget (e.g. you're maintaining an existing system), it is possible to achieve this by using the <a href=\"http://api.jqueryui.com/accordion/#event-beforeActivate\" rel=\"nofollow\"><code>beforeActivate</code></a> event handler option to subvert and emulate the default behavior of the widget.</p>\n\n<p>For example:</p>\n\n<pre><code>$('#accordion').accordion({\n    collapsible:true,\n\n    beforeActivate: function(event, ui) {\n         // The accordion believes a panel is being opened\n        if (ui.newHeader[0]) {\n            var currHeader  = ui.newHeader;\n            var currContent = currHeader.next('.ui-accordion-content');\n         // The accordion believes a panel is being closed\n        } else {\n            var currHeader  = ui.oldHeader;\n            var currContent = currHeader.next('.ui-accordion-content');\n        }\n         // Since we've changed the default behavior, this detects the actual status\n        var isPanelSelected = currHeader.attr('aria-selected') == 'true';\n\n         // Toggle the panel's header\n        currHeader.toggleClass('ui-corner-all',isPanelSelected).toggleClass('accordion-header-active ui-state-active ui-corner-top',!isPanelSelected).attr('aria-selected',((!isPanelSelected).toString()));\n\n        // Toggle the panel's icon\n        currHeader.children('.ui-icon').toggleClass('ui-icon-triangle-1-e',isPanelSelected).toggleClass('ui-icon-triangle-1-s',!isPanelSelected);\n\n         // Toggle the panel's content\n        currContent.toggleClass('accordion-content-active',!isPanelSelected)    \n        if (isPanelSelected) { currContent.slideUp(); }  else { currContent.slideDown(); }\n\n        return false; // Cancels the default action\n    }\n});\n</code></pre>\n\n<h2>See a <a href=\"http://jsfiddle.net/soboaz/3gHrv/\" rel=\"nofollow\"><strong>jsFiddle demo</strong></a></h2>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>Just call each section of the accordion as its own accordion.  active: n will be 0 for the first one( so it will display) and 1, 2, 3, 4, etc for the rest.  Since each one is it's own accordion, they will all have only 1 section, and the rest will be collapsed to start.</p>\n\n<pre><code>$('.accordian').each(function(n, el) {\n  $(el).accordion({\n    heightStyle: 'content',\n    collapsible: true,\n    active: n\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Even simpler,have it labeled in each li tag's class attribute and have jquery to loop through each li to initialize the accordion.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Actually was searching the internet for a solution to this for a while. And the accepted answer gives the good \"by the book\" answer. But I didn't want to accept that so I kept searching and found this: </p>\n\n<p><a href=\"http://jsbin.com/eqape/1601/edit\" rel=\"nofollow\">http://jsbin.com/eqape/1601/edit</a> - Live Example</p>\n\n<p>This example pulls in the proper styles and adds the functionality requested at the same time, complete with space to write add your own functionality on each header click. Also allows multiple divs to be in between the \"h3\"s.</p>\n\n<pre><code> $(\"#notaccordion\").addClass(\"ui-accordion ui-accordion-icons ui-widget ui-helper-reset\")\n  .find(\"h3\")\n    .addClass(\"ui-accordion-header ui-helper-reset ui-state-default ui-corner-top ui-corner-bottom\")\n    .hover(function() { $(this).toggleClass(\"ui-state-hover\"); })\n    .prepend('&lt;span class=\"ui-icon ui-icon-triangle-1-e\"&gt;&lt;/span&gt;')\n    .click(function() {\n      $(this).find(\"&gt; .ui-icon\").toggleClass(\"ui-icon-triangle-1-e ui-icon-triangle-1-s\").end()\n\n\n        .next().toggleClass(\"ui-accordion-content-active\").slideToggle();\n        return false;\n    })\n    .next()\n      .addClass(\"ui-accordion-content  ui-helper-reset ui-widget-content ui-corner-bottom\")\n      .hide();\n</code></pre>\n\n<p>HTML code:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;title&gt;Toggle Panels (not accordion) using ui-accordion  styles&lt;/title&gt;\n\n&lt;!-- jQuery UI  |  http://jquery.com/  http://jqueryui.com/  http://jqueryui.com/docs/Theming  --&gt;\n&lt;style type=\"text/css\"&gt;body{font:62.5% Verdana,Arial,sans-serif}&lt;/style&gt;\n&lt;link href=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.1/themes/base/jquery-ui.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.1/jquery-ui.min.js\"&gt;&lt;/script&gt;\n\n\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;h1&gt;Toggle Panels&lt;/h1&gt;\n&lt;div id=\"notaccordion\"&gt;\n  &lt;h3&gt;&lt;a href=\"#\"&gt;Section 1&lt;/a&gt;&lt;/h3&gt;\n  &lt;div class=\"content\"&gt;\n    Mauris mauris  ante, blandit et, ultrices a, suscipit eget, quam. Integer\n    ut neque. Vivamus  nisi metus, molestie vel, gravida in, condimentum sit\n    amet, nunc. Nam a  nibh. Donec suscipit eros. Nam mi. Proin viverra leo ut\n    odio. Curabitur  malesuada. Vestibulum a velit eu ante scelerisque vulputate.\n  &lt;/div&gt;\n  &lt;h3&gt;&lt;a href=\"#\"&gt;Section 2&lt;/a&gt;&lt;/h3&gt;\n  &lt;div&gt;\n    Sed non urna. Donec et ante. Phasellus eu ligula.  Vestibulum sit amet\n    purus. Vivamus hendrerit, dolor at aliquet laoreet,  mauris turpis porttitor\n    velit, faucibus interdum tellus libero ac justo.  Vivamus non quam. In\n    suscipit faucibus urna.\n  &lt;/div&gt;\n  &lt;h3&gt;&lt;a href=\"#\"&gt;Section 3&lt;/a&gt;&lt;/h3&gt;\n  &lt;div class=\"top\"&gt;\n  Top top top top\n  &lt;/div&gt;\n  &lt;div class=\"content\"&gt;\n    Nam enim risus, molestie et, porta ac, aliquam ac,  risus. Quisque lobortis.\n    Phasellus pellentesque purus in massa. Aenean in pede.  Phasellus ac libero\n    ac tellus pellentesque semper. Sed ac felis. Sed  commodo, magna quis\n    lacinia ornare, quam ante aliquam nisi, eu iaculis leo  purus venenatis dui.\n    &lt;ul&gt;\n      &lt;li&gt;List item one&lt;/li&gt;\n      &lt;li&gt;List item two&lt;/li&gt;\n      &lt;li&gt;List item  three&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n  &lt;div class=\"bottom\"&gt;\n  Bottom bottom bottom bottom\n  &lt;/div&gt;\n  &lt;h3&gt;&lt;a href=\"#\"&gt;Section 4&lt;/a&gt;&lt;/h3&gt;\n  &lt;div&gt;\n    Cras dictum. Pellentesque habitant morbi tristique  senectus et netus\n    et malesuada fames ac turpis egestas. Vestibulum ante  ipsum primis in\n    faucibus orci luctus et ultrices posuere cubilia Curae;  Aenean lacinia\n    mauris vel est.\n    Suspendisse eu nisl. Nullam ut libero. Integer  dignissim consequat lectus.\n    Class aptent taciti sociosqu ad litora torquent per  conubia nostra, per\n    inceptos himenaeos.\n  &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;`\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Simple, create multiple accordian div each representating one anchor tag like:</p>\n\n<pre><code>&lt;div&gt;\n&lt;div class=\"accordion\"&gt;\n&lt;a href = \"#\"&gt;First heading&lt;/a&gt;\n&lt;/div&gt;\n&lt;div class=\"accordion\"&gt;\n&lt;a href = \"#\"&gt;First heading&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>It adds up some markup. But works like a pro...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>open jquery-ui-*.js</p>\n\n<p>find <code>$.widget( \"ui.accordion\", {</code> </p>\n\n<p>find <code>_eventHandler: function( event ) {</code> inside</p>\n\n<p>change </p>\n\n<pre><code>var options = this.options,             active = this.active,           clicked = $( event.currentTarget ),             clickedIsActive = clicked[ 0 ] === active[ 0 ],             collapsing = clickedIsActive &amp;&amp; options.collapsible,            toShow = collapsing ? $() : clicked.next(),             toHide = active.next(),             eventData = {\n                oldHeader: active,\n                oldPanel: toHide,\n                newHeader: collapsing ? $() : clicked,\n                newPanel: toShow            };\n</code></pre>\n\n<p>to </p>\n\n<pre><code>var options = this.options,\n    clicked = $( event.currentTarget),\n    clickedIsActive = clicked.next().attr('aria-expanded') == 'true',\n    collapsing = clickedIsActive &amp;&amp; options.collapsible;\n\n    if (clickedIsActive == true) {\n        var toShow = $();\n        var toHide = clicked.next();\n    } else {\n        var toShow = clicked.next();\n        var toHide = $();\n\n    }\n    eventData = {\n        oldHeader: $(),\n        oldPanel: toHide,\n        newHeader: clicked,\n        newPanel: toShow\n    };\n</code></pre>\n\n<p>before <code>active.removeClass( \"ui-accordion-header-active ui-state-active\" );</code></p>\n\n<p>add <code>if (typeof(active) !== 'undefined') {</code> and closing <code>}</code></p>\n\n<p>enjoy</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I may be an idiot, but how do you keep multiple sections in jQuery UI's accordion open?  The demos all have only one open at a time... I'm looking for a collapseable menu type system.</p>\n",
            "last_activity_date": 1425943201,
            "question_id": 3479447,
            "score": 48,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "jquery-ui"
            ],
            "title": "jQuery UI accordion that keeps multiple sections open?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The problem is you are setting the <strong>window.location.hash</strong> to an element's ID attribute. It is the expected behavior for the browser to jump to that element, regardless of whether you \"preventDefault()\" or not.</p>\n\n<p>One way to get around this is to prefix the hash with an arbitrary value like so:</p>\n\n<pre><code>window.location.hash = 'panel-' + id.replace('#', '');\n</code></pre>\n\n<p>Then, all you need to do is to check for the prefixed hash on page load. As an added bonus, you can even smooth scroll to it since you are now in control of the hash value...</p>\n\n<pre><code>$(function(){\n    var h = window.location.hash.replace('panel-', '');\n    if (h) {\n        $('#slider').scrollTo(h, 800);\n    }\n});\n</code></pre>\n\n<p>If you need this to work at all times (and not just on the initial page load), you can use a function to monitor changes to the hash value and jump to the correct element on-the-fly:</p>\n\n<pre><code>var foundHash;\nsetInterval(function() {\n    var h = window.location.hash.replace('panel-', '');\n    if (h &amp;&amp; h !== foundHash) {\n        $('#slider').scrollTo(h, 800);\n        foundHash = h;\n    }\n}, 100);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>Why dont you get the current scroll position, put it in a variable then assign the hash and put the page scroll back to where it was:</p>\n\n<pre><code>var yScroll=document.body.scrollTop;\nwindow.location.hash = id;\ndocument.body.scrollTop=yScroll;\n</code></pre>\n\n<p>this should work</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is a workaround by using the history API on modern browsers with fallback on old ones:</p>\n\n<pre><code>if(history.pushState) {\n    history.pushState(null, null, '#myhash');\n}\nelse {\n    location.hash = '#myhash';\n}\n</code></pre>\n\n<p>Credit goes to <a href=\"http://lea.verou.me/2011/05/change-url-hash-without-page-jump/\">Lea Verou</a></p>\n",
                    "is_accepted": false,
                    "score": 41
                },
                {
                    "body": "<p>Cheap and nasty solution.. Use the ugly #! style.</p>\n\n<p>To set it:</p>\n\n<pre><code>window.location.hash = '#!' + id;\n</code></pre>\n\n<p>To read it:</p>\n\n<pre><code>id = window.location.hash.replace(/^#!/, '');\n</code></pre>\n\n<p>Since it doesn't match and anchor or id in the page, it won't jump.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I'm not sure if you can alter the original element but how about switch from using the id attr to something else like data-id? Then just read the value of data-id for your hash value and it won't jump.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a sliding panel set up on my website.</p>\n\n<p>When it finished animating, I set the hash like so</p>\n\n<pre><code>function() {\n   window.location.hash = id;\n}\n</code></pre>\n\n<p>(this is a callback, and the <code>id</code> is assigned earlier).</p>\n\n<p>This works good, to allow the user to bookmark the panel, and also for the non JavaScript version to work.</p>\n\n<p>However, when I update the hash, the browser jumps to the location. I guess this is expected behaviour.</p>\n\n<p>My question is: how can I prevent this? I.e. how can I change the window's hash, but <strong>not</strong> have the browser scroll to the element if the hash exists? Some sort of <code>event.preventDefault()</code> sort of thing?</p>\n\n<p>I'm using jQuery 1.4 and the <a href=\"http://plugins.jquery.com/project/ScrollTo\">scrollTo plugin</a>.</p>\n\n<p>Many thanks!</p>\n\n<h2>Update</h2>\n\n<p>Here is the code that changes the panel.</p>\n\n<pre><code>$('#something a').click(function(event) {\n    event.preventDefault();\n    var link = $(this);\n    var id = link[0].hash;\n\n    $('#slider').scrollTo(id, 800, {\n        onAfter: function() {\n\n            link.parents('li').siblings().removeClass('active');\n            link.parent().addClass('active');\n            window.location.hash = id;\n\n            }\n    });\n});\n</code></pre>\n",
            "last_activity_date": 1383261385,
            "question_id": 3870057,
            "score": 35,
            "tags": [
                "javascript",
                "jquery",
                "hash",
                "scrollto"
            ],
            "title": "How can I update window.location.hash without jumping the document?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>var first = jQuery.attr('class').split(\" \")[0];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You need to <a href=\"http://www.w3schools.com/jsref/jsref_split.asp\"><code>split</code></a> that into an array:</p>\n\n<pre><code>console.log(jQuery('selector').attr('class').split(' ')[0]);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 68
                }
            ],
            "body": "<p>The element looks like this:</p>\n\n<pre><code>&lt;li class=\"blah active\"&gt; ... &lt;/li&gt;\n</code></pre>\n\n<p><code>jQuery.attr('class')</code> will return both classes.\nHow can I get only the 1st class ('blah' in this case) with jQuery?</p>\n",
            "last_activity_date": 1402902071,
            "question_id": 3203966,
            "score": 35,
            "tags": [
                "javascript",
                "jquery",
                "class"
            ],
            "title": "jQuery - get the first class only from a element"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>You need to use a \"live\" click listener because initially only the single element will exist.</p>\n\n<pre><code>$('.btn_test').live(\"click\", function() { \n   alert('test'); \n});\n</code></pre>\n\n<p>Update: Since live is deprecated, you should use \"on()\":</p>\n\n<pre><code>$(\".btn_test\").on(\"click\", function(){ \n   alert(\"test\");\n});\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/on/\" rel=\"nofollow\">http://api.jquery.com/on/</a></p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>.click binds to what is presently visible to jQuery. You need to use .live:</p>\n\n<pre><code>$('.btn_test').live('click', function() { alert('test'); });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>you need <a href=\"http://api.jquery.com/live/\" rel=\"nofollow\">live listener</a> instead of click:</p>\n\n<pre><code>$('.btn_test').live('click', function() { \n   alert('test'); \n});</code></pre>\n\n<p>The reason being is that the <code>click</code> only assigns the listener to elements when the page is loading. Any new elements added will not have this listener on them. Live adds the click listener to element when the page loads and when they are added afterwards</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>When the document loads you add event listeners to each matching class to listen for the click event on those elements.  The same listener is not automatically added to elements that you add to the Dom later.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Because the event is tied to each matching element in the document ready.  Any new elements added do NOT automatically have the same events tied to them.</p>\n\n<p>You will have to manually bind the event to any new element, after it is added, or use the live listener.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is because you click event is only bound to the existing element at the time of binding. You need to use live or delegate which will bind the event to existing and future elements on the page.</p>\n\n<pre><code>$('.btn_test').live(\"click\", function() { alert('test'); });\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/live/\" rel=\"nofollow\">Jquery Live</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use Jquery <strong>live</strong> instead. Here is the help page for it <a href=\"http://api.jquery.com/live/\" rel=\"nofollow\">http://api.jquery.com/live/</a></p>\n\n<pre><code>$('.btn_test').live(function() { alert('test'); });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>$('.btn_test').click\n</code></pre>\n\n<p>will add the handler for elements which are available on the page (at this point 'test' does not exist!)</p>\n\n<p>you have to either manually add a click handler for this element when you do append, or use a <code>live</code> event handler which will work for every element even if you create it later..</p>\n\n<pre><code>$('.btn_test').live(function() { alert('test'); });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For users coming to this question after 2011, there is a new proper way to do this:</p>\n\n<pre><code>$(document).on('click', '.btn_test', function() { alert('test'); });\n</code></pre>\n\n<p>This is as of jQuery 1.7.</p>\n\n<p>For more information, see <a href=\"http://api.jquery.com/on/\">Direct and delegated events</a></p>\n",
                    "is_accepted": false,
                    "score": 84
                },
                {
                    "body": "<p>Or just run the script at the end of your page</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have same problem like question I was just near to pulling my hair then i got the solution. \nI was using different syntax</p>\n\n<pre><code>$(\".innerImage\").on(\"click\", function(){ \nalert(\"test\");\n});\n</code></pre>\n\n<p>it was not working for me (innerImage is dynamically created dom)\nNow I'm using </p>\n\n<pre><code>$(document).on('click', '.innerImage', function() { alert('test'); });\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/SDJEp/2/\">http://jsfiddle.net/SDJEp/2/</a></p>\n\n<p>thanks @Moshe Katz</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>After jquery 1.7 on method can be used and it really works nice </p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js\"&gt;\n    &lt;/script&gt;\n&lt;script&gt;\n    $(document).ready(function(){\n      $(\"p\").on(\"click\",function(){\n       alert(\"The paragraph was clicked.\");\n       $(\"body\").append(\"&lt;p id='new'&gt;Now click on this paragraph&lt;/p&gt;\");\n    });\n    $(document).on(\"click\",\"#new\",function(){\n       alert(\"On really works.\");\n      });\n    });\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;p&gt;Click this paragraph.&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>see it in action\n<a href=\"http://jsfiddle.net/rahulchaturvedie/CzR6n/\" rel=\"nofollow\">http://jsfiddle.net/rahulchaturvedie/CzR6n/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Here's <code>index.html</code>:</p>\n\n<pre><code>&lt;head&gt;\n  &lt;script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js\"&gt;&lt;/script&gt;\n  &lt;script type=\"text/javascript\"&gt;\n\n    $(document).ready(function() {\n      $('.btn_test').click(function() { alert('test'); });\n    });\n\n    function add(){\n      $('body').append('&lt;a href=\\'javascript:;\\' class=\\'btn_test\\'&gt;test&lt;/a&gt;');\n    }\n\n  &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;a href=\"javascript:;\" class=\"btn_test\"&gt;test1&lt;/a&gt;\n  &lt;a href=\"javascript:;\" onclick=\"add()\"&gt;add&lt;/a&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>If I click on <code>test1</code> link, it shows <code>alert('test')</code>, but if I click on <code>add</code> link then click on <code>test</code>, it doesn't show anything.</p>\n\n<p>Could you explain it?</p>\n",
            "last_activity_date": 1404848658,
            "question_id": 6537323,
            "score": 31,
            "tags": [
                "javascript",
                "jquery",
                "onclick"
            ],
            "title": "jQuery function not binding to newly added dom elements"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The <code>instanceID</code> is declared as an parameter, so we can access it like this </p>\n\n<pre><code>.controller('ViewWorklogCrtl',\n    [       '$scope','$stateParams'\n    function($scope , $stateParams ) {    \n        // \n        $scope.instanceID = $stateParams.instanceID;\n        ...\n</code></pre>\n\n<p>All the other details could be found here <a href=\"https://github.com/angular-ui/ui-router/wiki/URL-Routing\">https://github.com/angular-ui/ui-router/wiki/URL-Routing</a></p>\n\n<p>And the call to <code>ui-sref</code> should be like this</p>\n\n<pre><code>&lt;a ui-sref=\"instance-ticket.worklog({ instanceID:ticket.testnum })\" &gt;..\n</code></pre>\n\n<p>Extend:</p>\n\n<p>In case that we would like to get two parameters, 1) instanceID from the parent 2) testnum from the current, we have to adjust the state defintion like this</p>\n\n<pre><code>.state('instance-ticket', {\n  url: '/ticket/:instanceID',      // instanceID\n  templateUrl: 'partials/instance-ticket',\n  controller: 'ViewTicketCrtl'\n})\n.state('instance-ticket.worklog', {\n  // new param defintion\n  url: '/worklog/:testnum',         // testnum\n  views:{\n    'top-section':{\n      templateUrl:'/partials/ticket.worklog.jade',\n      controller: 'ViewWorklogCrtl'\n      }\n  }\n</code></pre>\n\n<p>And the <code>ui-sref</code></p>\n\n<pre><code>&lt;a ui-sref=\"instance-ticket.worklog({ instanceID:1, ticket.testnum:2 })\" &gt;..\n</code></pre>\n\n<p>And we can access it like this:</p>\n\n<pre><code>.controller('ViewWorklogCrtl',\n    [       '$scope','$stateParams'\n    function($scope , $stateParams ) {    \n        // \n        console.log($stateParams.instanceID)\n        console.log($stateParams.testnum)\n        ...\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>I have written a custom directive to solve this problem...<br>\nYou can clone it from Github:<br>\n<a href=\"https://github.com/JensEger/Angular-Directives/tree/master/ui-router-helper\" rel=\"nofollow\">https://github.com/JensEger/Angular-Directives/tree/master/ui-router-helper</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Hi I am trying to access a parameter in the controller \"ViewWorklogCrtl\" while using ui-router and running into difficulty. </p>\n\n<p>Basically, my parent template contains:</p>\n\n<pre><code>a(ui-sref=\"instance-ticket.worklog({id:{{ticket.testnum}}})\") show\n</code></pre>\n\n<p>and then further down the page:</p>\n\n<pre><code>section(ui-view=\"top-section\")\n</code></pre>\n\n<p>Then in my app.js, containing client-side routing info in short I have:</p>\n\n<pre><code> $stateProvider\n.state('instance-ticket', {\n  url: '/ticket/:instanceID',\n  templateUrl: 'partials/instance-ticket',\n  controller: 'ViewTicketCrtl'\n})\n.state('instance-ticket.worklog', {\n  views:{\n    'top-section':{\n      templateUrl:'/partials/ticket.worklog.jade',\n      controller: 'ViewWorklogCrtl'\n      }\n  }\n  })\n</code></pre>\n\n<p>The template loading is working correctly, the issue and question I can't find an answer to is - how to access \"testnum\" being passed through the ui-sref link, to and within the ViewWorkLogCtrl... Is there a better approach to this? </p>\n\n<p>Much thanks!!!</p>\n",
            "last_activity_date": 1397206810,
            "question_id": 21097820,
            "score": 25,
            "tags": [
                "javascript",
                "angularjs",
                "nested",
                "angular-ui-router"
            ],
            "title": "Angular ui-router - how to access parameters in nested, named view, passed from the parent template?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The general approach is twofold. </p>\n\n<p><strong>Serverside</strong>:</p>\n\n<ol>\n<li>On load of the page, generate a token (using <code>System.Random</code>), save it in the session, and write it to a hidden form field</li>\n<li>On submit, check that the hidden form field equals the session variable (<em>before</em> setting it again)</li>\n<li>Do work</li>\n</ol>\n\n<p><strong>Clientside</strong>:</p>\n\n<p>Similar to what you have, but probably just hide the button, and replace it with some text like 'submitting'.</p>\n\n<p>The important thing to note, client side, is that the user may cancel the post by hitting 'escape', so you should consider what to do here (depending on how far along they are the token won't be used, so you'll need to bring the button back from being disabled/hidden).</p>\n\n<p>Complete example follows:</p>\n\n<p>C# (includes code to see it in action):</p>\n\n<pre><code>&lt;html&gt;\n&lt;head runat=\"server\"&gt;\n    &lt;title&gt;double-click test&lt;/title&gt;\n    &lt;script language=\"c#\" runat=\"server\"&gt;\n    private Random\n        random = new Random();\n\n    private static int\n        TEST = 0;\n\n    public void Page_Load (object sender, EventArgs ea)\n    {\n        SetToken();\n    }\n\n    private void btnTest_Click (object sender, EventArgs ea)\n    {\n        if( IsTokenValid() ){\n            DoWork();\n        } else {\n            // double click\n            ltlResult.Text = \"double click!\";\n        }\n    }\n\n    private bool IsTokenValid ()\n    {\n        bool result = double.Parse(hidToken.Value) == ((double) Session[\"NextToken\"]);\n        SetToken();\n        return result;\n    }\n\n    private void SetToken ()\n    {\n        double next = random.Next();\n\n        hidToken.Value       = next + \"\";\n        Session[\"NextToken\"] = next;\n    }\n\n\n    private void DoWork ()\n    {\n        TEST++;\n        ltlResult.Text = \"DoWork(): \" + TEST + \".\";\n    }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;script language=\"javascript\"&gt;\n        var last = null;\n        function f (obj)\n        {\n            obj.src = \"http://www.gravatar.com/avatar/4659883ec420f39723c3df6ed99971b9?s=32&amp;d=identicon&amp;r=PG\";\n            // Note: Disabling it here produced strange results. More investigation required.\n            last = obj;\n            setTimeout(\"reset()\", 1 * 1000);\n            return true;\n        }\n\n        function reset ()\n        {\n            last.src = \"http://www.gravatar.com/avatar/495ce8981a5127a9fd24bd72e7e3664a?s=32&amp;d=identicon&amp;r=PG\";\n            last.disabled = \"false\";\n        }\n    &lt;/script&gt;\n    &lt;form id=\"form1\" runat=\"server\"&gt;\n        &lt;asp:HiddenField runat=\"server\" ID=\"hidToken\" /&gt;\n        &lt;asp:ImageButton runat=\"server\" ID=\"btnTest\"\n            OnClientClick=\"return f(this);\"\n            ImageUrl=\"http://www.gravatar.com/avatar/495ce8981a5127a9fd24bd72e7e3664a?s=32&amp;d=identicon&amp;r=PG\" OnClick=\"btnTest_Click\" /&gt;\n        &lt;pre&gt;Result: &lt;asp:Literal runat=\"server\" ID=\"ltlResult\" /&gt;&lt;/pre&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>I have solved this by setting a hidden field on the client click before hitting the server.</p>\n\n<p>Then in the server I check the hidden field and if the value is for example something 'FALSE' that might mean I can or cannot of the action.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you have validation on the page, disabling the button client side gets a little tricky. If validation fails, you don't want to disable the button.  Here's a snippet that adds the client side event handler:</p>\n\n<pre><code>private void BuildClickOnceButton(WebControl ctl)\n\n{\n\nSystem.Text.StringBuilder sbValid = new System.Text.StringBuilder();\n\nsbValid.Append(\"if (typeof(Page_ClientValidate) == 'function') { \");\n\nsbValid.Append(\"if (Page_ClientValidate() == false) { return false; }} \");\n\nsbValid.Append(ctl.ClientID + \".value = 'Please wait...';\");\n\nsbValid.Append(ctl.ClientID + \".disabled = true;\");\n\n// GetPostBackEventReference obtains a reference to a client-side script \n// function that causes the server to post back to the page.\n\nsbValid.Append(ClientScript.GetPostBackEventReference(ctl, \"\"));\n\nsbValid.Append(\";\");\n\nctl.Attributes.Add(\"onclick\", sbValid.ToString());\n\n}\n</code></pre>\n\n<p>See this <a href=\"http://forums.asp.net/t/1008333.aspx\" rel=\"nofollow\">asp.net thread</a> for more info.</p>\n\n<p><strong>Update</strong>: the above code would be used to add the OnClientClick handler in code behind. You could also write the javascript in your aspx markup like so:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction disableButton(button)\n{\n    // if there are client validators on the page\n    if (typeof(Page_ClientValidate) == 'function') \n    {\n        // if validation failed return false\n        // this will cancel the click event\n        if (Page_ClientValidate() == false) \n        { \n            return false; \n        }\n    }\n\n    // change the button text (does not apply to an ImageButton)\n    //button.value = \"Please wait ...\";\n    // disable the button\n    button.disabled = true;\n\n    // fire postback\n    __doPostBack(button.id, '');\n}\n&lt;/script&gt;\n\n&lt;asp:ImageButton runat=\"server\" ID=\"VerifyStepContinue\" ImageUrl=\"button.png\" \n    ToolTip=\"Go\" TabIndex=\"98\" CausesValidation=\"true\" OnClick=\"methodName\" \n    OnClientClick=\"return disableButton(this);\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Similar to Silky's client-side response, I usually make two buttons that look alike except that the second button is disabled and hidden.  OnClientClick of the normal button swaps the display styles of the two buttons so that the normal button is hidden and the disabled button is shown.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The double-click feature is a server-side implementation to prevent processing that same request which can be implemented on the client side through JavaScript. The main purpose of the feature is to prevent processing the same request twice. The server-side implementation does this by identifying the repeated request; however, the ideal solution is to prevent this from occurring on the client side.</p>\n\n<p>In the HTML content sent to the client that allows them to submit requests, a small validation JavaScript can be used to check whether the request has already been submitted and if so, prevent the online shopper from submitting the request again. This JavaScript validation function will check the global flag to see if the request has been submitted and, if so; does not resubmit the request. If the double-click feature is disabled on the server, it is highly recommended that the JSP and HTML pages implement this JavaScript prevention.</p>\n\n<p>The following example prevents the form from being submitted more then once by using the onSubmit() action of the form object:</p>\n\n<pre><code>...\n&lt;script&gt;\nvar requestSubmitted = false;\n       function submitRequest() {\n              if (!requestSubmitted ) {\n                     requestSubmitted  = true;\n                     return true;\n              }\n              return false;\n       }\n&lt;/script&gt;\n...\n\n       &lt;FORM method=\"POST\" action=\"Logon\" onSubmit=\"javascript:submitRequest()\"&gt;\n              ......\n       &lt;/FORM&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>having a slight problem with an ASP.net page of mine. If a user were to double click on a \"submit\" button it will write to the database twice (i.e. carry out the 'onclick' method on the imagebutton twice)</p>\n\n<p>How can I make it so that if a user clicks on the imagebutton, just the imagebutton is disabled?</p>\n\n<p>I've tried:</p>\n\n<pre><code>&lt;asp:ImageButton \n     runat=\"server\" \n     ID=\"VerifyStepContinue\" \n     ImageUrl=image src \n     ToolTip=\"Go\" \n     TabIndex=\"98\" \n     CausesValidation=\"true\" \n     OnClick=\"methodName\" \n     OnClientClick=\"this.disabled = true;\" /&gt;\n</code></pre>\n\n<p>But this OnClientClick property completely stops the page from being submitted! Any help?</p>\n\n<p>Sorry, yes, I do have Validation controls... hence the icky problem.</p>\n\n<hr>\n\n<p>Working on this still, up to this point now:</p>\n\n<p>ASP code:</p>\n\n<pre><code> &lt;asp:TextBox ID=\"hidToken\" runat=\"server\" Visible=\"False\" Enabled=\"False\"&gt;&lt;/asp:TextBox&gt;\n ...\n &lt;asp:ImageButton runat=\"server\" ID=\"InputStepContinue\" Name=\"InputStepContinue\" ImageUrl=\"imagesrc\" ToolTip=\"Go\" TabIndex=\"98\" CausesValidation=\"true\" OnClick=\"SubmitMethod\" OnClientClick=\"document.getElementById('InputStepContinue').style.visibility='hidden';\" /&gt;\n</code></pre>\n\n<p>C# code:</p>\n\n<pre><code>         private Random\n    random = new Random();\n\n\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        //Use a Token to make sure it has only been clicked once.\n        if (Page.IsPostBack)\n        {\n            if (double.Parse(hidToken.Text) == ((double)Session[\"NextToken\"]))\n            {\n                InputMethod();\n            }\n            else\n            {\n                // double click\n            }\n        }\n\n        double next = random.Next();\n\n        hidToken.Text = next + \"\";\n        Session[\"NextToken\"] = next;\n</code></pre>\n\n<p>Actually... this nearly works. The double click problem is pretty much fixed (yay!) The image still isn't hidden though.</p>\n",
            "last_activity_date": 1348037708,
            "question_id": 1498269,
            "score": 23,
            "tags": [
                "c#",
                "asp.net",
                "javascript",
                "onclick",
                "double-click"
            ],
            "title": "ASP.Net double-click problem"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I don't think this is the \"best\" solution to detect is a browser supports what you need for your website :</p>\n\n<ul>\n<li>first of all, browsers can lie -- they can send whatever thay want as <code>User-Agent</code>\n<ul>\n<li>And even if a given version of a support should support what you need, Javascript can still be disabled.</li>\n</ul></li>\n<li>second, there are more \"proper\" way to detect what a browser can do or not, when it comes to Javascript.</li>\n</ul>\n\n<p>For the second point, you should test if the browser actually supports what you need -- and not rely on a list such as the browscap one.</p>\n\n<p><br>\nStill, to answer your question about <a href=\"http://php.net/manual/en/misc.configuration.php#ini.browscap\"><code>browscap</code></a> : there is a note at the bottom of the manual page for <a href=\"http://php.net/manual/en/function.get-browser.php\"><code>get_browser</code></a> that says <em>(quoting)</em> :</p>\n\n<blockquote>\n  <p><strong>Note:</strong> In order for this to work, your <a href=\"http://php.net/manual/en/misc.configuration.php#ini.browscap\"><code>browscap</code></a> configuration\n  setting in php.ini must point to the\n  correct location of the <code>browscap.ini</code>\n  file on your system. <code>browscap.ini</code> is\n  not bundled with PHP, but you may find\n  an up-to-date <a href=\"http://tempdownloads.browserscap.com/stream.php?PHP_BrowsCapINI\">\u00bb\n  <code>php_browscap.ini</code></a> file here.\n  <br>While <code>browscap.ini</code> contains\n  information on many browsers, it\n  relies on user updates to keep the\n  database current. The format of the\n  file is fairly self-explanatory.</p>\n</blockquote>\n\n<p>So, you have to :</p>\n\n<ul>\n<li>download the browscap file,</li>\n<li>and set the <code>browscap</code> directive in your <code>php.ini</code> file, so it points to the file you downloaded.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>I know this topic is old, but you can use something like:</p>\n\n<pre><code>&lt;noscript&gt;JavaScript must be enabled&lt;/noscript&gt;\n</code></pre>\n\n<p>to display if JavaScript is not enabled.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You can check the browser by using Browser class download it from <a href=\"https://github.com/cbschuld/Browser.php\" rel=\"nofollow\">Github</a></p>\n\n<p><strong>Configuration</strong> </p>\n\n<pre><code>      include(/your-path/Browser.php);\n$browser = new Browser();\n    if( $browser-&gt;getBrowser() == Browser::BROWSER_IE &amp;&amp; $browser-&gt;getVersion() &gt;= 8 ) \n        {\n            echo \"Your browser is Internet explorer version 8\";                                                                                                                                    \n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using the <code>get_browser()</code> function in an attempt to warn people that their browser doesn't support Javascript. Actually I'm using it to tell them they can use certain parts of a web application I'm building. I've decided to properly use Javascript because I'm tired of listening to developers that are scared of using it and I've seen some great potential in the language. I digress, here is the error.</p>\n\n<blockquote>\n  <p>browscap ini directive not set</p>\n</blockquote>\n\n<p>Now I'd imagine this means I need somthing set it the php.ini. Can someone give me some direction on this one?</p>\n",
            "last_activity_date": 1425447977,
            "question_id": 2036956,
            "score": 22,
            "tags": [
                "php",
                "javascript",
                "ini",
                "browscap"
            ],
            "title": "browscap ini directive not set"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>the trick is to find the button in the webview. Use the following snippet.</p>\n\n<pre><code>- (void)loadWebUIViewWithYoutubeLink {\n    webView.delegate = self;\n    NSString *htmlString = [NSString stringWithFormat:[NSString\n                             stringWithContentsOfFile:[[NSBundle mainBundle]\n        pathForResource:@\"YouTubeTemplate\" ofType:@\"txt\"]],\n                             @\"b85hn8rJvgw\",  @\"b85hn8rJvgw\", nil];\n    [webView loadHTMLString:htmlString baseURL:[NSURL URLWithString:@\"http://youtube.com\"]];\n}\n\n- (UIButton *)findButtonInView:(UIView *)view {\n    UIButton *button = nil;\n\n    if ([view isMemberOfClass:[UIButton class]]) {\n        return (UIButton *)view;\n    }\n\n    if (view.subviews &amp;&amp; [view.subviews count] &gt; 0) {\n        for (UIView *subview in view.subviews) {\n            button = [self findButtonInView:subview];\n            if (button) return button;\n        }\n    }\n\n    return button;\n}\n\n- (void)webViewDidFinishLoad:(UIWebView *)_webView {\n    UIButton *b = [self findButtonInView:_webView];\n    [b sendActionsForControlEvents:UIControlEventTouchUpInside];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>Yes, It works (all comments here) but you have to use youtube old embed src.</p>\n\n<p>Like this:</p>\n\n<p><a href=\"http://www.youtube.com/v/%@?version=3&amp;hl=en_US\" rel=\"nofollow\">http://www.youtube.com/v/%@?version=3&amp;hl=en_US</a></p>\n\n<p>Where %@ is the youtube video ID.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you create your own html file that uses an iframe and then you load the webview to that then you can just put in the command</p>\n\n<pre><code>webView.mediaPlaybackRequiresUserAction=FALSE; \n</code></pre>\n\n<p>and the video will autoplay as long as you have already had your youtube video in the html already start the video. The html file can be found on the source of the following page. \nview-source:http://tylerbiscoe.com/vb/iphone_player.html. If you copy and paste that into the browser you can see what the iframe page will look like. Then use the webView to load your youTube page and then use the command above to get the quicktime player that gets called by ios to auto play after the webview is done loading. The page above has three videos already included and all three will play in series to one another.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I used Saurabh's method but instead of loading a HTML string I was able to just load a normal request and the video still auto-played. </p>\n\n<p>Be sure to set the delegate to nil when you close the webview though or else it will keep trying to play.</p>\n\n<pre><code>- (void)loadVideo\n{\n        NSURLRequest *videoReq = [NSURLRequest requestWithURL:[NSURL URLWithString:@\"http://www.youtube.com/watch?v=J-30wYSsFUY&amp;feature=plcp\"]];\n        [_videoWebView setDelegate:self];\n        [_videoWebView loadRequest:videoReq];\n}\n</code></pre>\n\n<blockquote>\n  <p>// -----THESE 2 FUNCTIONS TAKEN FROM Saurabh Wadhwa's ANSWER ------</p>\n</blockquote>\n\n<pre><code>- (UIButton *)findButtonInView:(UIView *)view {\n    UIButton *button = nil;\n\n    if ([view isMemberOfClass:[UIButton class]]) {\n        return (UIButton *)view;\n    }\n\n    if (view.subviews &amp;&amp; [view.subviews count] &gt; 0) {\n        for (UIView *subview in view.subviews) {\n            button = [self findButtonInView:subview];\n            if (button) return button;\n        }\n    }\n\n    return button;\n}\n\n- (void)webViewDidFinishLoad:(UIWebView *)_webView {\n    UIButton *b = [self findButtonInView:_webView];\n    [b sendActionsForControlEvents:UIControlEventTouchUpInside];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The \"button click\" method mentioned above worked for me in iOS6, but only the first time.  Upon repeat loads, it would not start the video.  All things equal, I figured it must be a caching issue, or a cookie.  Turns out clearing the cookies for youtube made it work for me.</p>\n\n<pre><code>for(NSHTTPCookie *cookie in [[NSHTTPCookieStorage sharedHTTPCookieStorage] cookies]) {\n      NSLog([cookie domain]);\n      if([[cookie domain] isEqualToString:@\".youtube.com\"]) {\n\n          [[NSHTTPCookieStorage sharedHTTPCookieStorage] deleteCookie:cookie];\n      }\n}\n</code></pre>\n\n<p>Hope this can help someone else trying to figure this out for iOS6!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to get a youtube video to autoplay on Safari and/or UIWebView? I've seen this done in an iPhone app, the tableview displays cells that do not have Youtube preview icon (pretty sure it's a UIWebView Though), when you tap the cell it directly goes to video.</p>\n\n<p>Could this be done by faking a tap on the youtube video? If so, how? Would getElementById().click work?</p>\n",
            "last_activity_date": 1365617588,
            "question_id": 3010708,
            "score": 19,
            "tags": [
                "javascript",
                "iphone",
                "uiwebview"
            ],
            "title": "Youtube video autoplay on iPhone&#39;s Safari or UIWebView"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I can't see your demo, but here's a simple \"move the box 1px in the direction of the arrow keys\" example:</p>\n\n<p>CSS:</p>\n\n<pre><code>#wrapper { \n    background-color: gray; \n    height:200px; \n    width: 200px; \n    position:absolute;\n}\n#mover { \n    background-color: white; \n    border: 1px solid red;  \n    height:20px; \n    width: 20px;\n    position:relative;\n}\n</code></pre>\n\n<p>Markup:</p>\n\n<pre><code>&lt;div id=\"wrapper\"&gt;\n    &lt;div id=\"mover\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>JS (using jQuery):</p>\n\n<pre><code>$(\"#wrapper\").keydown(function(event) { \n    var $mover = $(\"#mover\");\n    //if nothing else will move \"mover\", then track the \n    //position instead of recalculating it every time:\n    //   var moverPos = $mover.position();\n    //   var left = moverPos.left;\n    //   var top = moverPos.top;\n    var addTop = function(diff) {\n        $mover.css(\"top\", ($mover.position().top + diff) + \"px\"); \n        //if using tracked position:\n        //   top += diff;\n        //   $mover.css(\"top\", top) + \"px\");\n    };\n\n    var addLeft = function(diff) {\n        $mover.css(\"left\", ($mover.position().left + diff) + \"px\");\n        //if using tracked position:\n        //   left += diff;\n        //   $mover.css(\"left\", left) + \"px\");\n    };\n\n    switch(event.keyCode) {\n        case 37: //left\n            addLeft(-1); break; \n        case 38: //up\n            addTop(-1); break;\n        case 39: //right\n            addLeft(1); break;\n        case 40: //down\n            addTop(1); break;\n    }\n});\n</code></pre>\n\n<p>This is just an example, you may want to add bounds checking, larger movements, smoother animation, number pad support or any number of other things to it, but it should get you started.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>HTML: </p>\n\n<pre><code>&lt;div id=\"pane\"&gt;\n    &lt;div id=\"box\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>#pane {\n    position:relative;\n    width:300px; height:300px;\n    border:2px solid red;\n}\n\n#box {\n    position:absolute; top:140px; left:140px;\n    width:20px; height:20px;          \n    background-color:black;\n}\n</code></pre>\n\n<p>JavaScript: </p>\n\n<pre><code>var pane = $('#pane'),\n    box = $('#box'),\n    w = pane.width() - box.width(),\n    d = {},\n    x = 3;\n\nfunction newv(v,a,b) {\n    var n = parseInt(v, 10) - (d[a] ? x : 0) + (d[b] ? x : 0);\n    return n &lt; 0 ? 0 : n &gt; w ? w : n;\n}\n\n$(window).keydown(function(e) { d[e.which] = true; });\n$(window).keyup(function(e) { d[e.which] = false; });\n\nsetInterval(function() {\n    box.css({\n        left: function(i,v) { return newv(v, 37, 39); },\n        top: function(i,v) { return newv(v, 38, 40); }\n    });\n}, 20);\n</code></pre>\n\n<p>Variable explanations:<br>\n<code>w</code> - the maximal left/top value that the box can have (to stay within bounds)<br>\n<code>x</code> - the distance (in px) that the box moves in each interval<br>\n<code>d</code> - this object stores the information on what key is being pressed. For instance, while the user holds down the LEFT ARROW key, <code>d['37']</code> is <code>true</code>. Otherwise it's <code>false</code>. BTW, <code>37</code> is the key-code for the LEFT ARROW key and this value is stored in the <code>e.which</code> property of the event object. The <code>d</code> object is being updated on each <code>keydown</code> and <code>keyup</code> event. </p>\n\n<p>An setInterval which is executed every 20ms, updates the left and top CSS properties of the box element. The new values are calculated via the <code>newv</code> function.</p>\n\n<p>The <code>newv</code> function will calculate the new left/top value based on a) the old value <code>v</code> and b) the <code>d</code> object. </p>\n\n<p>The expression <code>n &lt; 0 ? 0 : n &gt; w ? w : n</code> ensures that the new value is in the permitted bounds (which are <code>0 to w</code>). If n is &lt; 0, zero will be returned. If n is > w, w will be returned. </p>\n\n<hr>\n\n<h1>Live demo: <a href=\"http://jsfiddle.net/bDMnX/7/\">http://jsfiddle.net/bDMnX/7/</a></h1>\n\n<hr>\n\n<p><strong>Update:</strong> This code has the same functionality as the original code above. The only difference is that I used more meaningful names for my variables and arguments. As you can see, it looks awful - the original version is clearly better. <code>:P</code> </p>\n\n<pre><code>var pane = $('#pane'),\n    box = $('#box'),\n    maxValue = pane.width() - box.width(),\n    keysPressed = {},\n    distancePerIteration = 3;\n\nfunction calculateNewValue(oldValue, keyCode1, keyCode2) {\n    var newValue = parseInt(oldValue, 10)\n                   - (keysPressed[keyCode1] ? distancePerIteration : 0)\n                   + (keysPressed[keyCode2] ? distancePerIteration : 0);\n    return newValue &lt; 0 ? 0 : newValue &gt; maxValue ? maxValue : newValue;\n}\n\n$(window).keydown(function(event) { keysPressed[event.which] = true; });\n$(window).keyup(function(event) { keysPressed[event.which] = false; });\n\nsetInterval(function() {\n    box.css({\n        left: function(index ,oldValue) {\n            return calculateNewValue(oldValue, 37, 39);\n        },\n        top: function(index, oldValue) {\n            return calculateNewValue(oldValue, 38, 40);\n        }\n    });\n}, 20);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>To make it reuse, and a bit convenient, I wrote a plugin for that issue on:</p>\n\n<p><a href=\"https://github.com/rhermann/moveByKeys\" rel=\"nofollow\">https://github.com/rhermann/moveByKeys</a></p>\n\n<p>Have fun with it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>@\u0160ime Vidas: Your first solution is simply marvelous. (i think the second one is redundant =)</p>\n\n<p>May i suggest to make two different functions for the vertical and the horizontal width? Because it\u2019s highly unlikely that you have to move around a div inside a perfect square and i believe it would be nicer to have something like this:</p>\n\n<pre><code>$(function () {\nvar pane = $('#pane'),\nbox = $('#box'),\nwh = pane.width() - box.width(),\nwv = pane.height() - box.height(),\nd = {},\nx = 5;\n\nfunction newh(v,a,b) {\n    var n = parseInt(v, 10) - (d[a] ? x : 0) + (d[b] ? x : 0);\n    return n &lt; 0 ? 0 : n &gt; wh ? wh : n;\n}\n\nfunction newv(v,a,b) {\n    var n = parseInt(v, 10) - (d[a] ? x : 0) + (d[b] ? x : 0);\n    return n &lt; 0 ? 0 : n &gt; wv ? wv : n;\n}\n\n$(window).keydown(function(e) { d[e.which] = true; });\n$(window).keyup(function(e) { d[e.which] = false; });\n\nsetInterval(function() {\n    box.css({\n        left: function(i,v) { return newh(v, 37, 39); },\n        top: function(i,v) { return newv(v, 38, 40); }\n    });\n}, 20);\n});\n</code></pre>\n\n<p>This would have been exactly what i was looking for.</p>\n\n<p>If you had a responsive design based on % values it would be recommendable to adjust your setInterval like this:</p>\n\n<pre><code>setInterval(function() {\n    box.css({\n        left: function(i,v) { return newh(v, 37, 39); },\n        top: function(i,v) { return newv(v, 38, 40); }\n    });\n    wh = pane.width() - box.width();\n    wv = pane.height() - box.height();\n}, 20);\n</code></pre>\n\n<p>if you do that it adjusts your panes height and width and the box still stops at its border.</p>\n\n<p>i made a fiddle of that here <a href=\"http://jsfiddle.net/infidel/JkQrR/1/\" rel=\"nofollow\">http://jsfiddle.net/infidel/JkQrR/1/</a></p>\n\n<p>Thanks a lot.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I would like to move a div with my arrow keys using jQuery.\nSo right, left, down and up.</p>\n\n<p>Found a demo of what I want to accomplish <a href=\"http://atomicrobotdesign.com/blog/htmlcss/move-objects-around-the-canvas-using-the-keyboard-and-jquery/\">here</a></p>\n\n<p>I would like to be able to move a div around in another div.</p>\n\n<p>How can this be done?</p>\n",
            "last_activity_date": 1410163249,
            "question_id": 4950575,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "html"
            ],
            "title": "how to move a div with arrow keys"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>On jQuery for designers there's a well written post about this, this is the jQuery snippet that does the magic. just replace #comment with the selector of the div that you want to float.</p>\n\n<p><strong>Note:</strong> To see the whole article go here: <a href=\"http://jqueryfordesigners.com/fixed-floating-elements/\" rel=\"nofollow\">http://jqueryfordesigners.com/fixed-floating-elements/</a></p>\n\n<pre><code>$(document).ready(function () {\n  var $obj = $('#comment');\n  var top = $obj.offset().top - parseFloat($obj.css('marginTop').replace(/auto/, 0));\n\n  $(window).scroll(function (event) {\n    // what the y position of the scroll is\n    var y = $(this).scrollTop();\n\n    // whether that's below the form\n    if (y &gt;= top) {\n      // if so, ad the fixed class\n      $obj.addClass('fixed');\n    } else {\n      // otherwise remove it\n      $obj.removeClass('fixed');\n    }\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can find an example below. Basically you attach a function to <code>window</code>'s <code>scroll</code> event and trace <code>scrollTop</code> property and if it's higher than desired threshold you apply <code>position: fixed</code> and some other css properties.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>jQuery(function($) {\r\n  function fixDiv() {\r\n    var $cache = $('#getFixed');\r\n    if ($(window).scrollTop() &gt; 100)\r\n      $cache.css({\r\n        'position': 'fixed',\r\n        'top': '10px'\r\n      });\r\n    else\r\n      $cache.css({\r\n        'position': 'relative',\r\n        'top': 'auto'\r\n      });\r\n  }\r\n  $(window).scroll(fixDiv);\r\n  fixDiv();\r\n});</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>body {\r\n  height: 2000px;\r\n  padding-top: 100px;\r\n}\r\n#getFixed {\r\n  color: #c00;\r\n  font: bold 15px arial;\r\n  padding: 10px;\r\n  margin: 10px;\r\n  border: 1px solid #c00;\r\n  width: 200px;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;div id=\"getFixed\"&gt;This div is going to be fixed&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<pre><code>(function($) {\n  var triggers = [];\n  $.fn.floatingFixed = function(options) {\n    options = $.extend({}, $.floatingFixed.defaults, options);\n    var r = $(this).each(function() {\n      var $this = $(this), pos = $this.position();\n      pos.position = $this.css(\"position\");\n      $this.data(\"floatingFixedOrig\", pos);\n      $this.data(\"floatingFixedOptions\", options);\n      triggers.push($this);\n    });\n    windowScroll();\n    return r;\n  };\n\n  $.floatingFixed = $.fn.floatingFixed;\n  $.floatingFixed.defaults = {\n    padding: 0\n  };\n\n  var $window = $(window);\n  var windowScroll = function() {\n    if(triggers.length === 0) { return; }\n    var scrollY = $window.scrollTop();\n    for(var i = 0; i &lt; triggers.length; i++) {\n      var t = triggers[i], opt = t.data(\"floatingFixedOptions\");\n      if(!t.data(\"isFloating\")) {\n        var off = t.offset();\n        t.data(\"floatingFixedTop\", off.top);\n        t.data(\"floatingFixedLeft\", off.left);\n      }\n      var top = top = t.data(\"floatingFixedTop\");\n      if(top &lt; scrollY + opt.padding &amp;&amp; !t.data(\"isFloating\")) {\n        t.css({position: 'fixed', top: opt.padding, left: t.data(\"floatingFixedLeft\"), width: t.width() }).data(\"isFloating\", true);\n      } else if(top &gt;= scrollY + opt.padding &amp;&amp; t.data(\"isFloating\")) {\n        var pos = t.data(\"floatingFixedOrig\");\n        t.css(pos).data(\"isFloating\", false);\n      }\n    }\n  };\n\n  $window.scroll(windowScroll).resize(windowScroll);\n})(jQuery);\n</code></pre>\n\n<p>and then make any div as floating fixed by calling</p>\n\n<pre><code>$('#id of the div').floatingFixed();\n</code></pre>\n\n<p>source: <a href=\"https://github.com/cheald/floatingFixed\" rel=\"nofollow\">https://github.com/cheald/floatingFixed</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I made a mix of the answers here, took the code of @Julian and ideas from the others, seems clearer to me, this is what's left:</p>\n\n<h1><a href=\"http://jsfiddle.net/wq2Ej/\" rel=\"nofollow\">fiddle</a> <a href=\"http://jsfiddle.net/wq2Ej/\" rel=\"nofollow\">http://jsfiddle.net/wq2Ej/</a></h1>\n\n<h1>jquery</h1>\n\n<pre><code>//store the element\nvar $cache = $('.my-sticky-element');\n\n//store the initial position of the element\nvar vTop = $cache.offset().top - parseFloat($cache.css('marginTop').replace(/auto/, 0));\n  $(window).scroll(function (event) {\n    // what the y position of the scroll is\n    var y = $(this).scrollTop();\n\n    // whether that's below the form\n    if (y &gt;= vTop) {\n      // if so, ad the fixed class\n      $cache.addClass('stuck');\n    } else {\n      // otherwise remove it\n      $cache.removeClass('stuck');\n    }\n  });\n</code></pre>\n\n<h1>css:</h1>\n\n<pre><code>.my-sticky-element.stuck {\n    position:fixed;\n    top:0;\n    box-shadow:0 2px 4px rgba(0, 0, 0, .3);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p><a href=\"http://knowyourmeme.com/memes/pizza-is-a-vegetable\">http://knowyourmeme.com/memes/pizza-is-a-vegetable</a></p>\n\n<p>If you scroll down, the div will lock onto the browser (I'm assuming applying a position: fixed; attribute)</p>\n\n<p>How can this be achieved with jQuery?</p>\n",
            "last_activity_date": 1420807247,
            "question_id": 8644248,
            "score": 13,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery: Fix div when browser scrolls to it"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I did something similar last year to animate a drawing in canvas. The paths are all SVG-type paths with curves and lines, so you could take those straight out of your SVG file and put them into the Javascript array.</p>\n\n<p><a href=\"http://www.ashleysheridan.co.uk/coding/javascript/Animated+Glowing+Line+Drawing+in+Canvas\" rel=\"nofollow\">http://www.ashleysheridan.co.uk/coding/javascript/Animated+Glowing+Line+Drawing+in+Canvas</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>So there's this similar question <a href=\"http://stackoverflow.com/questions/4631019/how-to-draw-a-vector-path-progressively-raphael-js/9130243#9130243\">with this answer</a>.</p>\n\n<hr>\n\n<p>I took your path and put it into the code in that answer.</p>\n\n<p><a href=\"http://jsfiddle.net/lollero/THGuz/\" rel=\"nofollow\">jsfiddle demo</a></p>\n\n<p>Html:</p>\n\n<pre><code>&lt;html&gt;\n&lt;style&gt;\n    #canvas\n    {\n    border-style:solid;\n    border-width:1px;\n    }\n&lt;/style&gt;\n&lt;div id=\"canvas\"&gt; \n    &lt;p&gt;Hover over me&lt;/p&gt;        \n&lt;/div&gt;\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p></p>\n\n<p>Javascript <sup>( Note that Jquery 1.8.3 and Raphael 1.5.2 was used in the example )</sup>:</p>\n\n<pre><code>$(function() {\n\nanimateLine = function(canvas, hoverDivName, colorNumber, pathString) {\n    $('#' + hoverDivName).hover(\n\n    function() {\n        var line = canvas.path(pathString).attr({\n            stroke: colorNumber\n        });\n        var length = line.getTotalLength();\n\n        $('path[fill*=\"none\"]').animate({\n            'to': 1\n        }, {\n            duration: 5000,\n            step: function(pos, fx) {\n                var offset = length * fx.pos;\n                var subpath = line.getSubpath(0, offset);\n                canvas.clear();\n                canvas.path(subpath).attr({\n                    'stroke-width': 5,\n                    stroke: colorNumber\n                });\n\n            },\n        });\n    }, function() {\n        $('path[fill*=\"none\"]').stop(true, false).fadeOut();\n    });\n};\n\nvar canvas = Raphael('canvas', 200, 200);\nvar pathString = \"m33,104c1,0 2.1306,-0.8037 23,3c9.07012,1.65314 10,2 24,2c7,0 29,0 33,0c8,0 9,0 11,0c2,0 8,0 11,0c9,0 17,0 18,0c10,0 12,0 20,0c1,0 6,0 7,0c2,0 3.07613,0.38268 4,0c2.61313,-1.08239 2,-3 2,-6c0,-1 0,-2 0,-3c0,-1 0,-2 0,-3c0,-1 0,-2 0,-3c0,-1 0.30745,-3.186 -1,-5c-0.8269,-1.14727 -0.09789,-2.82443 -2,-4c-0.85065,-0.52573 -2.82443,-0.09789 -4,-2c-0.52573,-0.85065 -2.58578,-0.58578 -4,-2c-0.70711,-0.70711 -1.81265,-1.20681 -4,-3c-2.78833,-2.28588 -3.64749,-2.97251 -8,-4c-2.91975,-0.68926 -4.82375,-2.48626 -7,-3c-2.91975,-0.68926 -5.15224,-0.23463 -7,-1c-1.30656,-0.5412 -4.38687,-1.91761 -7,-3c-1.84776,-0.76537 -5.03609,0.37821 -7,0c-5.28799,-1.01837 -8,-3 -9,-3c-2,0 -5.0535,-0.54049 -7,-1c-2.17625,-0.51374 -4.15224,-0.23463 -6,-1c-1.30656,-0.54119 -3,-1 -4,-1c-2,0 -5,-1 -6,-1c-1,0 -3,-2 -6,-2c-2,0 -5,-2 -6,-2c-2,0 -2.02583,-0.67963 -4,-1c-3.12144,-0.50654 -4.15224,-0.23463 -6,-1c-1.30656,-0.54119 -2,-1 -3,-1c-2,0 -3,0 -5,0c-1,0 -2,0 -3,0c-1,0 -2,0 -3,0c-1,0 -2,0 -3,0c-2,0 -3.85273,0.1731 -5,1c-1.81399,1.30745 -5.18601,1.69255 -7,3c-1.14727,0.8269 -1.82375,2.48626 -4,3c-0.97325,0.22975 -1.69344,1.45881 -3,2c-0.92388,0.38268 -1.45951,1.0535 -1,3c0.51374,2.17625 3.07844,2.78985 6,4c2.06586,0.85571 3.38688,1.91761 6,3c1.84776,0.76537 5.2987,-1.05146 7,0c1.90211,1.17557 3.82375,2.48626 6,3c0.97325,0.22975 3.29289,0.29289 4,1c0.70711,0.70711 4,2 9,4c5,2 8,4 11,4c2,0 5,0 7,0c3,0 5,0 7,0c2,0 4,0 7,0c2,0 4,0 8,0c3,0 7,0 10,0c4,0 7,0 12,0c3,0 5,0 6,0c2,0 3,0 5,0c1,0 1.09789,-0.82443 3,-2c0.85065,-0.52573 3.07613,0.38268 4,0c1.30656,-0.5412 0.71022,-2.04291 1,-3c1.04483,-3.45084 2.84723,-5.04132 4,-9c0.88414,-3.03616 1.85194,-5.22836 3,-8c0.5412,-1.30656 1.5405,-2.0535 2,-4c0.51375,-2.17625 2.71413,-4.21167 5,-7c2.68979,-3.28101 4,-6 5,-7c1,-1 2,-2 2,-4c0,-1 0.70711,-2.29289 0,-3c-0.70711,-0.70711 -2.07613,0.38268 -3,0c-1.30656,-0.54119 -2,-1 -4,-1c-3,0 -6.87856,-2.49346 -10,-3c-2.96126,-0.48055 -6.71201,-0.98162 -12,-2c-2.94586,-0.56732 -5,-1 -9,-1c-3,0 -6,-1 -8,-1c-2,0 -5,-3 -7,-3c-2,0 -5.38687,-0.91761 -8,-2c-0.92388,-0.38268 -3.0535,-0.54049 -5,-1c-2.17625,-0.51374 -4.58578,0.41421 -6,-1c-0.70711,-0.70711 -1,-1 -2,-1c-1,0 -2,0 -3,0c-1,0 -2,0 -4,0c-1,0 -2,0 -3,0c-1,0 -2,0 -4,0c-1,0 -2,0 -3,0c-2,0 -3,0 -5,0c-1,0 -2,0 -3,0c-1,0 -3,0 -4,0c-3,0 -5,0 -7,0c-2,0 -4,0 -6,0c-2,0 -3,0 -5,0c-1,0 -2,0 -3,0c-2,0 -4,0 -5,0c-1,0 -2,0 -4,0c-1,0 -2,0 -3,1l-1,0\";\n\nanimateLine(canvas, \"canvas\", \"#000\", pathString);\n\n});\n</code></pre>\n\n<ul>\n<li>I took your path from the [<code>d</code>] attribute and put it inside the <code>pathString</code> variable.</li>\n<li>I also added a line to define the [<code>stroke-width</code>]</li>\n</ul>\n\n<p>I've only played around with raphael quite briefly once, but checking the examples and looking at how the code is constructed ( <code>from page source</code> ) gets you quite far ( I couldn't remember how/where to put the <code>stroke-width</code>, so I checked the method from the page source of this <a href=\"http://raphaeljs.com/helvetica.html\" rel=\"nofollow\">example</a>. ).</p>\n\n<hr>\n\n<p><a href=\"http://raphaeljs.com/\" rel=\"nofollow\">You can find raphael + more info from here.</a></p>\n\n<hr>\n\n<p>Just for fun, <a href=\"http://jsfiddle.net/lollero/THGuz/1/\" rel=\"nofollow\">I made my own path...</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There are three techniques listed in this answer:</p>\n\n<hr>\n\n<p>There is an all-SVG solution that involves progressively modifying the <code>stroke-dasharray</code> for the shape to draw a longer and longer 'dash' followed by an enormous gap.</p>\n\n<h3>Demo: <a href=\"http://phrogz.net/svg/progressively-drawing-svg-path-via-dasharray.html\">http://phrogz.net/svg/progressively-drawing-svg-path-via-dasharray.html</a></h3>\n\n<p>Relevant code:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var distancePerPoint = 1;\nvar drawFPS          = 60;\n\nvar orig = document.querySelector('path'), length, timer;\norig.addEventListener('mouseover',startDrawingPath,false);\norig.addEventListener('mouseout', stopDrawingPath, false);\n\nfunction startDrawingPath(){\n  length = 0;\n  orig.style.stroke = '#f60';\n  timer = setInterval(increaseLength,1000/drawFPS);\n}\n\nfunction increaseLength(){\n  var pathLength = orig.getTotalLength();\n  length += distancePerPoint;\n  orig.style.strokeDasharray = [length,pathLength].join(' ');\n  if (length &gt;= pathLength) clearInterval(timer);\n}\n\nfunction stopDrawingPath(){\n  clearInterval(timer);\n  orig.style.stroke = '';\n  orig.style.strokeDasharray = '';\n}\n</code></pre>\n\n<hr>\n\n<p>Alternatively, you can still use all SVG and choose to build the SVG path one command at a time:</p>\n\n<h3>Demo: <a href=\"http://phrogz.net/svg/progressively-cloning-svg-path.html\">http://phrogz.net/svg/progressively-cloning-svg-path.html</a></h3>\n\n<p>Relevant code:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// Assumes 'orig' and dup' are SVG paths\nfunction addNextPathSegment(){\n  var nextIndex   = dup.pathSegList.numberOfItems;\n  if (nextIndex&lt;orig.pathSegList.numberOfItems){\n    var nextSegment = orig.pathSegList.getItem(nextIndex);\n    var segmentDup  = cloneSVGPathSeg( dup, nextSegment );\n    dup.pathSegList.appendItem( segmentDup );\n  }\n}\n\nfunction cloneSVGPathSeg( path, seg ){\n  switch(seg.pathSegTypeAsLetter){\n    case 'M': return path.createSVGPathSegMovetoAbs(seg.x,seg.y);                                                     break;\n    case 'm': return path.createSVGPathSegMovetoRel(seg.x,seg.y);                                                     break;\n    case 'L': return path.createSVGPathSegLinetoAbs(seg.x,seg.y);                                                     break;\n    case 'l': return path.createSVGPathSegLinetoRel(seg.x,seg.y);                                                     break;\n    case 'H': return path.createSVGPathSegLinetoHorizontalAbs(seg.x);                                                 break;\n    case 'h': return path.createSVGPathSegLinetoHorizontalRel(seg.x);                                                 break;\n    case 'V': return path.createSVGPathSegLinetoVerticalAbs(seg.y);                                                   break;\n    case 'v': return path.createSVGPathSegLinetoVerticalRel(seg.y);                                                   break;\n    case 'C': return path.createSVGPathSegCurvetoCubicAbs(seg.x,seg.y,seg.x1,seg.y1,seg.x2,seg.y2);                   break;\n    case 'c': return path.createSVGPathSegCurvetoCubicRel(seg.x,seg.y,seg.x1,seg.y1,seg.x2,seg.y2);                   break;\n    case 'S': return path.createSVGPathSegCurvetoCubicSmoothAbs(seg.x,seg.y,seg.x2,seg.y2);                           break;\n    case 's': return path.createSVGPathSegCurvetoCubicSmoothRel(seg.x,seg.y,seg.x2,seg.y2);                           break;\n    case 'Q': return path.createSVGPathSegCurvetoQuadraticAbs(seg.x,seg.y,seg.x1,seg.y1);                             break;\n    case 'q': return path.createSVGPathSegCurvetoQuadraticRel(seg.x,seg.y,seg.x1,seg.y1);                             break;\n    case 'T': return path.createSVGPathSegCurvetoQuadraticSmoothAbs(seg.x,seg.y);                                     break;\n    case 't': return path.createSVGPathSegCurvetoQuadraticSmoothRel(seg.x,seg.y);                                     break;\n    case 'A': return path.createSVGPathSegArcAbs(seg.x,seg.y,seg.r1,seg.r2,seg.angle,seg.largeArcFlag,seg.sweepFlag); break;\n    case 'a': return path.createSVGPathSegArcRel(seg.x,seg.y,seg.r1,seg.r2,seg.angle,seg.largeArcFlag,seg.sweepFlag); break;\n    case 'z':\n    case 'Z': return path.createSVGPathSegClosePath();                                                                break;\n  }\n}\n</code></pre>\n\n<hr>\n\n<p>Finally, you may choose to draw your path to an HTML5 canvas by sampling the SVG path periodically and drawing to the canvas. (Note that the SVG path does not need to be displayed for this to happen; you can build an SVG path element entirely in JavaScript and sample it):</p>\n\n<h3>Demo: <a href=\"http://phrogz.net/svg/progressively-drawing-svg-path.html\">http://phrogz.net/svg/progressively-drawing-svg-path.html</a></h3>\n\n<p>Relevant code:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function startDrawingPath(){\n  points = [];\n  timer = setInterval(buildPath,1000/drawFPS);\n}\n\n// Assumes that 'orig' is an SVG path\nfunction buildPath(){\n  var nextPoint = points.length * distancePerPoint;\n  var pathLength = orig.getTotalLength();\n  if (nextPoint &lt;= pathLength){\n    points.push(orig.getPointAtLength(nextPoint));\n    redrawCanvas();\n  } else stopDrawingPath();\n}\n\nfunction redrawCanvas(){\n  clearCanvas();\n  ctx.beginPath();\n  ctx.moveTo(points[0].x,points[0].y);\n  for (var i=1;i&lt;points.length;i++) ctx.lineTo(points[i].x,points[i].y);\n  ctx.stroke();\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Using Phrogz excellent technique I created a very basic GreenSock animation using TweenLite to tween the length value to getTotalLength() value.</p>\n\n<p>As you can see in the demo, hooking this into a tween engine gives you tons of control and it involves very little code.</p>\n\n<pre><code>var orig = document.querySelector('path'), length, timer;\n\nvar obj = {length:0,\n           pathLength:orig.getTotalLength()};\n\norig.style.stroke = '#f60';\n\nvar t = TweenMax.to(obj, 10, {length:obj.pathLength, onUpdate:drawLine, ease:Linear.easeNone})\n\nfunction drawLine() {\n  orig.style.strokeDasharray = [obj.length,obj.pathLength].join(' ');\n  updateSlider();\n}\n</code></pre>\n\n<p>Much respect to Phrogz for the awesome idea and code.</p>\n\n<p><a href=\"http://codepen.io/GreenSock/pen/zLiux\" rel=\"nofollow\">http://codepen.io/GreenSock/pen/zLiux</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I want to animate a progressive drawing of a line using only css with svg/canvas and js maximum. An idea of the line I want to draw can be found <a href=\"http://jsfiddle.net/6btNN/\" rel=\"nofollow\">here</a></p>\n\n<pre><code>&lt;svg width=\"640\" height=\"480\" xmlns=\"http://www.w3.org/2000/svg\"&gt;\n &lt;!-- Created with SVG-edit - http://svg-edit.googlecode.com/ --&gt;\n &lt;g&gt;\n  &lt;title&gt;Layer 1&lt;/title&gt;\n  &lt;path d=\"m33,104c1,0 2.1306,-0.8037 23,3c9.07012,1.65314 10,2 24,2c7,0 29,0 33,0c8,0 9,0 11,0c2,0 8,0 11,0c9,0 17,0 18,0c10,0 12,0 20,0c1,0 6,0 7,0c2,0 3.07613,0.38268 4,0c2.61313,-1.08239 2,-3 2,-6c0,-1 0,-2 0,-3c0,-1 0,-2 0,-3c0,-1 0,-2 0,-3c0,-1 0.30745,-3.186 -1,-5c-0.8269,-1.14727 -0.09789,-2.82443 -2,-4c-0.85065,-0.52573 -2.82443,-0.09789 -4,-2c-0.52573,-0.85065 -2.58578,-0.58578 -4,-2c-0.70711,-0.70711 -1.81265,-1.20681 -4,-3c-2.78833,-2.28588 -3.64749,-2.97251 -8,-4c-2.91975,-0.68926 -4.82375,-2.48626 -7,-3c-2.91975,-0.68926 -5.15224,-0.23463 -7,-1c-1.30656,-0.5412 -4.38687,-1.91761 -7,-3c-1.84776,-0.76537 -5.03609,0.37821 -7,0c-5.28799,-1.01837 -8,-3 -9,-3c-2,0 -5.0535,-0.54049 -7,-1c-2.17625,-0.51374 -4.15224,-0.23463 -6,-1c-1.30656,-0.54119 -3,-1 -4,-1c-2,0 -5,-1 -6,-1c-1,0 -3,-2 -6,-2c-2,0 -5,-2 -6,-2c-2,0 -2.02583,-0.67963 -4,-1c-3.12144,-0.50654 -4.15224,-0.23463 -6,-1c-1.30656,-0.54119 -2,-1 -3,-1c-2,0 -3,0 -5,0c-1,0 -2,0 -3,0c-1,0 -2,0 -3,0c-1,0 -2,0 -3,0c-2,0 -3.85273,0.1731 -5,1c-1.81399,1.30745 -5.18601,1.69255 -7,3c-1.14727,0.8269 -1.82375,2.48626 -4,3c-0.97325,0.22975 -1.69344,1.45881 -3,2c-0.92388,0.38268 -1.45951,1.0535 -1,3c0.51374,2.17625 3.07844,2.78985 6,4c2.06586,0.85571 3.38688,1.91761 6,3c1.84776,0.76537 5.2987,-1.05146 7,0c1.90211,1.17557 3.82375,2.48626 6,3c0.97325,0.22975 3.29289,0.29289 4,1c0.70711,0.70711 4,2 9,4c5,2 8,4 11,4c2,0 5,0 7,0c3,0 5,0 7,0c2,0 4,0 7,0c2,0 4,0 8,0c3,0 7,0 10,0c4,0 7,0 12,0c3,0 5,0 6,0c2,0 3,0 5,0c1,0 1.09789,-0.82443 3,-2c0.85065,-0.52573 3.07613,0.38268 4,0c1.30656,-0.5412 0.71022,-2.04291 1,-3c1.04483,-3.45084 2.84723,-5.04132 4,-9c0.88414,-3.03616 1.85194,-5.22836 3,-8c0.5412,-1.30656 1.5405,-2.0535 2,-4c0.51375,-2.17625 2.71413,-4.21167 5,-7c2.68979,-3.28101 4,-6 5,-7c1,-1 2,-2 2,-4c0,-1 0.70711,-2.29289 0,-3c-0.70711,-0.70711 -2.07613,0.38268 -3,0c-1.30656,-0.54119 -2,-1 -4,-1c-3,0 -6.87856,-2.49346 -10,-3c-2.96126,-0.48055 -6.71201,-0.98162 -12,-2c-2.94586,-0.56732 -5,-1 -9,-1c-3,0 -6,-1 -8,-1c-2,0 -5,-3 -7,-3c-2,0 -5.38687,-0.91761 -8,-2c-0.92388,-0.38268 -3.0535,-0.54049 -5,-1c-2.17625,-0.51374 -4.58578,0.41421 -6,-1c-0.70711,-0.70711 -1,-1 -2,-1c-1,0 -2,0 -3,0c-1,0 -2,0 -4,0c-1,0 -2,0 -3,0c-1,0 -2,0 -4,0c-1,0 -2,0 -3,0c-2,0 -3,0 -5,0c-1,0 -2,0 -3,0c-1,0 -3,0 -4,0c-3,0 -5,0 -7,0c-2,0 -4,0 -6,0c-2,0 -3,0 -5,0c-1,0 -2,0 -3,0c-2,0 -4,0 -5,0c-1,0 -2,0 -4,0c-1,0 -2,0 -3,1l-1,0\" id=\"svg_1\" stroke-width=\"5\" stroke=\"#000000\" fill=\"none\"/&gt;\n &lt;/g&gt;\n&lt;/svg&gt;\n</code></pre>\n",
            "last_activity_date": 1417464715,
            "question_id": 14275249,
            "score": 6,
            "tags": [
                "javascript",
                "css",
                "css3",
                "canvas",
                "svg"
            ],
            "title": "How can I animate a progressive drawing of svg path?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There are multiple ways listed <a href=\"http://detectmobilebrowsers.com/\" rel=\"nofollow\">here</a>, including PHP.</p>\n\n<p>The jQuery one sets the variable <code>jQuery.browser.mobile</code>:</p>\n\n<pre><code>/**\n * jQuery.browser.mobile (http://detectmobilebrowser.com/)\n *\n * jQuery.browser.mobile will be true if the browser is a mobile device\n *\n **/\n</code></pre>\n\n<p>After this you can redirect with ordinary JS, like this:</p>\n\n<pre><code>if(jQuery.browser.mobile) window.location = 'mobile_url';\n</code></pre>\n\n<p><strike>Remember that it's not good to redirect the user on every page. Either make a separate mobile site or do it server-side (with e.g. PHP).</strike></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use something like <a href=\"http://deviceatlas.com/\" rel=\"nofollow\">Device Atlas</a> to pick up if it is a mobile device and then send the appropriate version of the page.</p>\n\n<p>There are other hacks you can do to look at the devices user agent too.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Detecting Smartphones Using JavaScript:\n<a href=\"http://www.hand-interactive.com/resources/detect-mobile-javascript.htm\">http://www.hand-interactive.com/resources/detect-mobile-javascript.htm</a></p>\n\n<p>Detecting Mobile Devices Using PHP:\n<a href=\"http://www.hand-interactive.com/resources/detect-mobile-php.htm\">http://www.hand-interactive.com/resources/detect-mobile-php.htm</a></p>\n\n<p>iPhone &amp; iPod Detection Using JavaScript</p>\n\n<p><a href=\"http://davidwalsh.name/detect-iphone\">http://davidwalsh.name/detect-iphone</a></p>\n\n<pre><code>if((navigator.userAgent.match(/iPhone/i)) || (navigator.userAgent.match(/iPod/i))) {\n   if (document.cookie.indexOf(\"iphone_redirect=false\") == -1) window.location = \"http://graves-incorporated.com/test_sites/solera_mobile/\";\n}\n</code></pre>\n\n<p>The PHP</p>\n\n<pre><code>if(strstr($_SERVER['HTTP_USER_AGENT'],'iPhone') || strstr($_SERVER['HTTP_USER_AGENT'],'iPod'))\n{\n  header('Location: http://yoursite.com/iphone');\n  exit();\n}\n</code></pre>\n\n<p>You can get the javascript here: <a href=\"https://github.com/sebarmeli/JS-Redirection-Mobile-Site\">https://github.com/sebarmeli/JS-Redirection-Mobile-Site</a></p>\n\n<p>Documentation here: <a href=\"http://blog.sebarmeli.com/2010/11/02/how-to-redirect-your-site-to-a-mobile-version-through-javascript/\">http://blog.sebarmeli.com/2010/11/02/how-to-redirect-your-site-to-a-mobile-version-through-javascript/</a> </p>\n\n<h2>Here is one more mobile detection Javascript: <a href=\"https://github.com/miohtama/detectmobile.js\">https://github.com/miohtama/detectmobile.js</a></h2>\n\n<p>Make a javascript file and paste this code:</p>\n\n<pre><code>(function(a,b){if(/android.+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|e\\-|e\\/|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(di|rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|xda(\\-|2|g)|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))window.location=b})(navigator.userAgent||navigator.vendor||window.opera,'http://graves-incorporated.com/test_sites/solera_mobile/');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>For those of you looking for a serverside solution since that is way more efficient check this link I just found, which is a quite comprehensive list of user agents you can check to redirect on : <a href=\"http://detectmobilebrowsers.com/\" rel=\"nofollow\">http://detectmobilebrowsers.com/</a></p>\n\n<p>For those of you that don't know the user agent is part of the header of the request and describes the client software that oriniganated the request. Basicly its a string that you can use to identify which device requested your web page.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\n        if (screen.width &lt;= 720) {\n        window.location = \"mobile/index.php\";\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I just made my first jQuery mobile site.</p>\n\n<p>I want to have people that view my \"Full Site\" with a mobile phone automatically get transferred to the \"MOBILE SITE\".  But also have the ability to click a link to view the Full site if they want.</p>\n\n<p>I have no idea where to start.  Is there some JavaScript I could use or something?</p>\n\n<p>If you want to see what the sites look like, here is the Full Site: <a href=\"http://www.solera-restaurant.com\" rel=\"nofollow\">http://www.solera-restaurant.com</a> and the mobile site is still on my testing server: <a href=\"http://graves-incorporated.com/test_sites/solera_mobile/\" rel=\"nofollow\">http://graves-incorporated.com/test_sites/solera_mobile/</a></p>\n",
            "last_activity_date": 1413823209,
            "question_id": 9511526,
            "score": 6,
            "tags": [
                "javascript",
                "html",
                "css",
                "css3",
                "jquery-mobile"
            ],
            "title": "Auto Mobile Site Redirect"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>While I myself would be waiting here for an answer, I wonder if it can be done via CSS:</p>\n\n<pre><code>@media only screen and (orientation:portrait){\n#wrapper {width:1024px}\n}\n\n@media only screen and (orientation:landscape){\n#wrapper {width:1024px}\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>@Golmaal really answered this, I'm just being a bit more verbose.</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n    #warning-message { display: none; }\n    @media only screen and (orientation:portrait){\n        #wrapper { display:none; }\n        #warning-message { display:block; }\n    }\n    @media only screen and (orientation:landscape){\n        #warning-message { display:none; }\n    }\n&lt;/style&gt;\n\n....\n\n&lt;div id=\"wrapper\"&gt;\n    &lt;!-- your html for your website --&gt;\n&lt;/div&gt;\n&lt;div id=\"warning-message\"&gt;\n    this website is only viewable in landscape mode\n&lt;/div&gt;\n</code></pre>\n\n<p>You have no control over the user moving the orientation however you can at least message them. This example will hide the wrapper if in portrait mode and show the warning message and then hide the warning message in landscape mode and show the portrait.</p>\n\n<p>I don't think this answer is any better than @Golmaal , only a compliment to it. If you like this answer, make sure to give @Golmaal the credit.</p>\n\n<p><strong>Update</strong></p>\n\n<p>I've been working with PhoneGap a lot recently and it turns out you CAN control it when you have access to the native features.</p>\n",
                    "is_accepted": false,
                    "score": 49
                },
                {
                    "body": "<p><strong>Try this It may be more appropriate for you</strong></p>\n\n<pre><code> &lt;!DOCTYPE HTML&gt;\n &lt;html&gt;\n   &lt;head&gt;\n     &lt;style type=\"text/css\"&gt;\n         #container { display:block; }\n         @media only screen and (orientation:portrait){\n            #container {  \n                  -webkit-transform: rotate(90deg);\n                  -moz-transform: rotate(90deg);\n                  -o-transform: rotate(90deg);\n                  -ms-transform: rotate(90deg);\n                  transform: rotate(90deg);\n                 }\n\n         }\n         @media only screen and (orientation:landscape){\n            #container {  \n                  -webkit-transform: rotate(0deg);\n                  -moz-transform: rotate(0deg);\n                  -o-transform: rotate(0deg);\n                  -ms-transform: rotate(0deg);\n                  transform: rotate(0deg);\n                 }\n         }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n      &lt;div id=\"container\"&gt;\n           &lt;!-- your html for your website --&gt;\n           &lt;H1&gt;This text is always in Landscape Mode&lt;/H1&gt;\n      &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>This will automatically manage even rotation.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I want to show my web-site in landscape mode only, is it possibile? It does not matter what the orientation is of device in user's hand but the web site will always be in landscape mode. I have seen iPhone application working like that but can this be done for a web-site?</p>\n",
            "last_activity_date": 1425392693,
            "question_id": 8738072,
            "score": 35,
            "tags": [
                "javascript",
                "html5",
                "mobile-browser"
            ],
            "title": "forcing web-site to show in landscape mode only"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I know this question is old, but I ran into the same problem. This worked for me:</p>\n\n<pre><code>window.open('', '_self', ''); //bug fix\nwindow.close();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 82
                },
                {
                    "body": "<p>if previously you open some other window by window.open()</p>\n\n<p>this don't work:</p>\n\n<pre><code>window.open(...)\nwindow.open('', '_self', '');\nwindow.close();\n</code></pre>\n\n<p>but work:</p>\n\n<pre><code>window.open(...);\nsetTimeout(function(){\n    window.open('', '_self', '');\n    window.close();\n}, 100);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Something like this should also work:</p>\n\n<p>setTimeout(function() {\n    window.close();\n},50);</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think it's working in Chrome Kiosk ( Fullscreen ) mode. Tried successfully.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>top.window.close() works for me. Tested on IE, FF, Chrome, Safari and Opera.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This worked for me</p>\n\n<p>var win = window.open(\"about:blank\", \"_self\");\nwin.close();</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Im trying to close a child window with javascript and in firefox everything works fine but in chrome the window doesnt close</p>\n\n<p>here is what im using</p>\n\n<pre><code>$(document).ready(function() {\n    if (window.opener &amp;&amp; !window.opener.closed)\n        window.opener.location = \"http://www.website.com\"\n    window.close();\n});\n</code></pre>\n\n<p>I tried a suggestion on <a href=\"http://www.google.com/support/forum/p/Chrome/thread?tid=23c03746e3aa03f9&amp;hl=en\">google</a>, but to no avail.</p>\n\n<p>Anyone having a similar issue or know of a work-around?</p>\n",
            "last_activity_date": 1417648856,
            "question_id": 2032640,
            "score": 35,
            "tags": [
                "javascript",
                "google-chrome"
            ],
            "title": "problem with window.close and chrome"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>No, but you can have your own setTimeout/setInterval for animation in your function.</p>\n\n<p>Say your question looks like this:</p>\n\n<pre><code>function myQuestion() {\n  // animate the progress bar for 1 sec\n  animate( \"progressbar\", 1000 );\n\n  // do the question stuff\n  // ...\n}\n</code></pre>\n\n<p>And your animation will be handled by these 2 functions:</p>\n\n<pre><code>function interpolate( start, end, pos ) {\n  return start + ( pos * (end - start) );\n}\n\nfunction animate( dom, interval, delay ) {\n\n      interval = interval || 1000;\n      delay    = delay    || 10;\n\n  var start    = Number(new Date());\n\n  if ( typeof dom === \"string\" ) {\n    dom = document.getElementById( dom );\n  }\n\n  function step() {\n\n    var now     = Number(new Date()),\n        elapsed = now - start,\n        pos     = elapsed / interval,\n        value   = ~~interpolate( 0, 500, pos ); // 0-500px (progress bar)\n\n    dom.style.width = value + \"px\";\n\n    if ( elapsed &lt; interval )\n      setTimeout( step, delay );\n  }\n\n  setTimeout( step, delay );\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Javascript's event stacks don't operate how you would think.</p>\n\n<p>When a timeout event is created, it is added to the event queue, but other events may take priority while that event is being fired, delay the execution time and postponing runtime.  </p>\n\n<p><strong><em>Example:</em></strong>  You create a timeout with a delay of 10 seconds to alert something to the screen.  It will be added to the event stack and will be executed after all current events are fired (causing some delay).  Then, when the timeout is processed, the browser still continues to capture other events add them to the stack, which causes further delays in the processing.  If the user clicks, or does a lot of ctrl+typing, their events take priority over the current stack.  Your 10 seconds can turn into 15 seconds, or longer.  </p>\n\n<hr>\n\n<p>That being said, there are many ways to fake how much time has passed.  One way is to execute a setInterval right after you add the setTimeout to the stack.  </p>\n\n<p><strong><em>Example:</em></strong> Perform a settimeout with a 10 second delay (store that delay in a global). Then perform a setInterval that runs every second to subtract 1 from the delay and output the delay remaining.  Because of how the event stack can influence actual time (described above), this still won't be accurate, but does give a count.</p>\n\n<hr>\n\n<p>In short, there is no real way to get the remaining time.  There are only ways to try and convey an estimate to the user.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you can't modify the library code, you'll need to redefine setTimeout to suit your purposes.  Here's an example of what you could do:</p>\n\n<pre><code>(function () {\nvar nativeSetTimeout = window.setTimeout;\n\nwindow.bindTimeout = function (listener, interval) {\n    function setTimeout(code, delay) {\n        var elapsed = 0,\n            h;\n\n        h = window.setInterval(function () {\n                elapsed += interval;\n                if (elapsed &lt; delay) {\n                    listener(delay - elapsed);\n                } else {\n                    window.clearInterval(h);\n                }\n            }, interval);\n        return nativeSetTimeout(code, delay);\n    }\n\n    window.setTimeout = setTimeout;\n    setTimeout._native = nativeSetTimeout;\n};\n}());\nwindow.bindTimeout(function (t) {console.log(t + \"ms remaining\");}, 100);\nwindow.setTimeout(function () {console.log(\"All done.\");}, 1000);\n</code></pre>\n\n<p>This is not production code, but it should put you on the right track.  Note that you can only bind one listener per timeout.  I haven't done extensive testing with this, but it works in Firebug.</p>\n\n<p>A more robust solution would use the same technique of wrapping setTimeout, but instead use a map from the returned timeoutId to listeners to handle multiple listeners per timeout.  You might also consider wrapping clearTimeout so you can detach your listener if the timeout is cleared.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Just for the record, there is a way to get the time left in node.js:</p>\n\n<pre><code>var timeout = setTimeout(function() {}, 3600 * 1000);\n\nsetInterval(function() {\n    console.log('Time left: '+getTimeLeft(timeout)+'s');\n}, 2000);\n\nfunction getTimeLeft(timeout) {\n    return Math.ceil((timeout._idleStart + timeout._idleTimeout - Date.now()) / 1000);\n}\n</code></pre>\n\n<p>Prints:</p>\n\n<pre><code>$ node test.js \nTime left: 3599s\nTime left: 3597s\nTime left: 3595s\nTime left: 3593s\n</code></pre>\n\n<p>This doesn't seem to work in firefox through, but since node.js is javascript, I thought this remark might be helpful for people looking for the node solution.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>If anyone's looking back on this. I've come out with a timeout and interval manager that can get you the time left in a timeout or interval as well as do some other stuff. I'll be adding to it to make it more nifty and more accurate, but it seems to work fairly well as is (although I have some more ideas to make it even more accurate):</p>\n\n<p><a href=\"https://github.com/vhiremath4/Tock\" rel=\"nofollow\">https://github.com/vhiremath4/Tock</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I wrote this function and I use it alot:</p>\n\n<pre><code>function timer(callback, delay) {\n    var id, started, remaining = delay, running\n\n    this.start = function() {\n        running = true\n        started = new Date()\n        id = setTimeout(callback, remaining)\n    }\n\n    this.pause = function() {\n        running = false\n        clearTimeout(id)\n        remaining -= new Date() - started\n    }\n\n    this.getTimeLeft = function() {\n        if (running) {\n            this.pause()\n            this.start()\n        }\n\n        return remaining\n    }\n\n    this.getStateRunning = function() {\n        return running\n    }\n\n    this.start()\n}\n</code></pre>\n\n<p>Make a timer:</p>\n\n<pre><code>a = new timer(function() {\n    // What ever\n}, 3000)\n</code></pre>\n\n<p>So if you want the time remaining just do:</p>\n\n<pre><code>a.getTimeLeft()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I'm writing some Javascript that interacts with library code that I don't own, and can't (reasonably) change.  It creates Javascript timeouts used for showing the next question in a series of time-limited questions.  This isn't real code because it is obfuscated beyond all hope.  Here's what the library is doing:</p>\n\n<pre><code>....\n// setup a timeout to go to the next question based on user-supplied time\nvar t = questionTime * 1000\ntest.currentTimeout = setTimeout( showNextQuestion(questions[i+1]), t );\n</code></pre>\n\n<p>I want to put a progress bar onscreen that fills towards <code>questionTime * 1000</code> by interrogating the timer created by <code>setTimeout</code>.  The only problem is, there seems to be no way to do this.  Is there a <code>getTimeout</code> function that I'm missing?  The only information on Javascript timeouts that I can find is related only to creation via <code>setTimeout( function, time)</code> and deletion via <code>clearTimeout( id )</code>.</p>\n\n<p>I'm looking for a function that returns either the time remaining before a timeout fires, or the time elapsed after a timeout has been called.  My progress bar code looks like this:</p>\n\n<pre><code>var  timeleft = getTimeout( test.currentTimeout ); // I don't know how to do this\nvar  $bar = $('.control .bar');\nwhile ( timeleft &gt; 1 ) {\n    $bar.width(timeleft / test.defaultQuestionTime * 1000);\n}\n</code></pre>\n\n<p>tl;dr: <strong>How do I find the time remaining before a javascript setTimeout()?</strong></p>\n\n<hr>\n\n<p>Here's the solution I'm using now.  I went through the library section that's in charge of tests, and unscrambled the code (terrible, and against my permissions).</p>\n\n<pre><code>// setup a timeout to go to the next question based on user-supplied time\nvar t = questionTime * 1000\ntest.currentTimeout = mySetTimeout( showNextQuestion(questions[i+1]), t );\n</code></pre>\n\n<p>and here's my code:</p>\n\n<pre>// wrapper for setTimeout\nfunction mySetTimeout( func, timeout ) {\n    timeouts[ n = setTimeout( func, timeout ) ] = {\n        start: new Date().getTime(),\n        end: new Date().getTime() + timeout\n        t: timeout\n    }\n    return n;\n}</pre>\n\n<p>This works pretty spot-on in any browser that isn't IE 6.  Even the original iPhone, where I expected things to get asynchronous.</p>\n",
            "last_activity_date": 1399920409,
            "question_id": 3144711,
            "score": 34,
            "tags": [
                "javascript",
                "timeout",
                "settimeout"
            ],
            "title": "Javascript: find the time left in a setTimeout()?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>You can include a <a href=\"http://www.dustindiaz.com/getelementsbyclass/\">getElementsByClass</a> function, or you can use <a href=\"http://docs.jquery.com/Selectors/class#class\">a jQuery selector</a>.</p>\n\n<p><strong>UPDATE:</strong> The <a href=\"http://www.robertnyman.com/2008/05/27/the-ultimate-getelementsbyclassname-anno-2008/\">implementation</a> mentioned by @<a href=\"http://stackoverflow.com/questions/210377/get-all-elements-in-an-html-document-with-a-specific-css-class#210393\">Shog9</a> is probably better than that above.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There is no such thing as a CSS class. CSS has rule-sets and selectors (including the class selector).</p>\n\n<p>Do you mean an HTML class? The usual way is to loop over every element in the document (<code>using document.getElementsByTagName('*')</code> (for efficiency, use a specific tag name if you know the class will only be applied to elements of a certain type) and test the <code>className</code> property of each (noting that the property contains a space separated list of class names, not a single class name).</p>\n\n<p>A number of libraries (such as <a href=\"http://docs.jquery.com/Selectors/\" rel=\"nofollow\">jQuery</a> or <a href=\"http://developer.yahoo.com/yui/docs/YAHOO.util.Dom.html#method_getElementsByClassName\" rel=\"nofollow\">YUI</a>) have functions to simply this.</p>\n\n<p>Do you mean a CSS selector? This gets more complex, and turning to a library is almost certainly the right thing to do here. Again, jQuery or <a href=\"http://developer.yahoo.com/yui/selector/\" rel=\"nofollow\">YUI</a> are decent choices.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>1) Get all elements in the document (document.getElementsByTagName('*'))<br />\n2) Do a regular expression match on the element's className attribute for each element</p>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>The below answer is now pushing four years old, so it's worth noting that native browser support for <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/document.getElementsByClassName\"><code>getElementsByClassName()</code></a> has gotten a <em>lot</em> better. But if you must support older browsers, then...</p>\n\n<p>Use one that's already been written. Most major JS libraries include one in some form or another, but if you aren't using one of them then i can recommend Robert Nyman's excellent implementation:</p>\n\n<p><a href=\"http://code.google.com/p/getelementsbyclassname/\">http://code.google.com/p/getelementsbyclassname/</a><br>\n<a href=\"http://www.robertnyman.com/2008/05/27/the-ultimate-getelementsbyclassname-anno-2008/\">http://www.robertnyman.com/2008/05/27/the-ultimate-getelementsbyclassname-anno-2008/</a></p>\n\n<p>There are just too many ways to make this (conceptually-simple) routine <em>slow and buggy</em> to justify writing your own implementation at this point.</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>Use <a href=\"http://docs.jquery.com/Selectors\" rel=\"nofollow\">jquery</a>, it can't be more convenient.</p>\n\n<p>$(\".theclass\")\nor\n$(\".theclass\"),makeArray() if you want a native JS array</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just to do some follow up, I based my code on the the Robert Nyman implementation posted by Shog9, but departed a little from his exact version, for three reasons:  </p>\n\n<ol>\n<li>He allowed you to select a root element and tag type to filter your results.  I don't need that functionality and so by removing it I was able to simplify the code significantly.</li>\n<li>The first thing his code does is see if the function in question already exists, and if it does he provides his own implementation anyway.  That just seemed... odd.  I understand he was adding functionality to the original, but again: I'm not using those features.</li>\n<li>I wanted an additional bit of syntactic sugar- to be able to call it like I would call <code>document.getElementById()</code> or <code>document.getElementsByTagName()</code>.</li>\n</ol>\n\n<p>Note that I still relied mostly on his code.  His javascript skills are obviously far beyond my own.  I did try to factor out some redundant variables, but that's about it.</p>\n\n<p>With that in mind, here is what I ended up with (<em>seems</em> to work in IE6, IE7, Firefox 3, and Chrome <strong>see new note at the end</strong>):</p>\n\n<pre><code> if (!document.getElementsByClassName)\n    document.getElementsByClassName = function (className)\n{\n    var classes = className.split(\" \");\n    var classesToCheck = \"\";\n    var returnElements = [];\n    var match, node, elements;\n\n    if (document.evaluate)\n    {    \n        var xhtmlNamespace = \"http://www.w3.org/1999/xhtml\";\n        var namespaceResolver = (document.documentElement.namespaceURI === xhtmlNamespace)? xhtmlNamespace:null;\n\n        for(var j=0, jl=classes.length; j&lt;jl;j+=1)\n            classesToCheck += \"[contains(concat(' ', @class, ' '), ' \" + classes[j] + \" ')]\"; \n\n        try\n        {\n            elements = document.evaluate(\".//*\" + classesToCheck, document, namespaceResolver, 0, null);\n        }\n        catch(e)\n        {\n            elements = document.evaluate(\".//*\" + classesToCheck, document, null, 0, null);\n        }\n\n        while ((match = elements.iterateNext()))\n            returnElements.push(match);\n    }\n    else\n    {\n        classesToCheck = [];\n        elements = (document.all) ? document.all : document.getElementsByTagName(\"*\");\n\n        for (var k=0, kl=classes.length; k&lt;kl; k+=1)\n            classesToCheck.push(new RegExp(\"(^|\\\\s)\" + classes[k] + \"(\\\\s|$)\"));\n\n        for (var l=0, ll=elements.length; l&lt;ll;l+=1)\n        {\n            node = elements[l];\n            match = false;\n            for (var m=0, ml=classesToCheck.length; m&lt;ml; m+=1)\n            {\n                match = classesToCheck[m].test(node.className);\n                if (!match) break;\n            }\n            if (match) returnElements.push(node);\n        } \n    }\n    return returnElements;\n}\n</code></pre>\n\n<p><strong>Update:</strong><br>\nOne new note on this. I've since re-read the notes on the original implementation, and I understand now that my code could fall down in the case where the existing browser has it's own implementation, because the default implementations return a nodelist where this returns an array.  This includes the more recent firefox and safari, and opera browsers.  Most of the time that won't matter, but in some situations it could.  That explains item #2 from list above.</p>\n\n<p>What that means is that while my code technically does work everywhere, it could result in subtly different (read: hard to debug) behavior in different places, and that's not good.  I <em>should</em> fix this to either also return a nodelist or override the supplied method to return an array (which is what the original did).  Probably the former would be simpler, but that latter would be <em>better</em>.</p>\n\n<p>However, it's working at the moment in the local intranet environment (pretty much all IE), so for the time being I'll leave the fix as an exercise for the reader.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Keep in mind that atleast FF3 already has a native implementation of getElementsByClassName afaik.</p>\n\n<p>If you're going to implement your own solution, maybe you should try to find a xpath-solution since all modern browser have native support for xpath.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If using a framework, they all have selections using CSS Selectors.\nOtherwise.</p>\n\n<pre><code>var getElementsByClassName = function(cls, sc){\n    //Init\n    var elements, i, results = [], curClass;  \n\n    //Default scope is document\n    sc = sc || document;\n\n    //Get all children of the scope node\n    elements = sc.getElementsByTagName('*');\n    for( i=0; i &lt; elements.length; i++ ){\n        curClass = elements[i].getAttribute('class');\n        if(curClass != null){\n            curClass = curClass.split(\" \");\n            for( j=0; j &lt; curClass.length; j++){\n                if(curClass[j] === cls){\n                    results.push( elements[i] );\n                    break;\n                }\n            }\n        }\n    }\n\n    return results;\n};\n</code></pre>\n\n<p>Just wrote it right now, just for you. :) Feel free to use.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you want to do something for all the element with same id in a document.\nAlthough simple but sometime mind dont give green signals</p>\n\n<pre><code>var x = document.getElementById(elementid);\nwhile(x){\ndocument.removechild(x);\nx = document.getElementById(elementid);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>@shog9, @user28742, @bdukes - \nI'm doing some custom development in SharePoint for a modular thing (custom field definition) I hope can be re-used across many sites. </p>\n\n<p>Since I can't know ahead of time if any given SharePoint site will have jQuery or any other library available to it --- I still need to write things in raw javascript so I can have a degree of confidence that the functionality I'm trying to achieve will stand on it's own.</p>\n\n<p>Thanks Dmitri for your particular implementation. Short enough for my purposes.</p>\n\n<p>In other recent efforts, I had to modify a e-commerce store (of my client's choosing) and some of my attempts to get jQuery rigged into it actually conflicted with whatever custom libraries they had previously rigged. I could have been persistent, and banged out a way to implement jQuery into their proprietary system.. or.. even more quickly.. just write some good ol' fashioned javascript.</p>\n\n<p>Libaries ARE NOT ALWAYS THE BEST ANSWER!!!!!!!!!!!!!!!!  </p>\n\n<p>(and I love jQuery more than my grandmother)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What's the best way to get an array of all elements in an html document with a specific CSS class using javascript?</p>\n\n<p>No javascript frameworks like jQuery allowed here right now, and I could loop all the elements and check them manually myself.  I'm hoping for something a little more elegant.</p>\n",
            "last_activity_date": 1422971135,
            "question_id": 210377,
            "score": 33,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "Get All Elements in an HTML document with a specific CSS Class"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It means you created an anonymous function, and call it with parameter <code>1</code>.</p>\n\n<p>It is just the same as:</p>\n\n<pre><code>function foo(x) {\n    delete x;\n    return x;\n}\nfoo(1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The reason that you still get 1 returned is that the <strong>delete keyword is for removing properties of objects</strong>. The rest is as others have commented, anything wrapped in brackets executes as a function, and the second set of brackets are the arguments passed to that block. </p>\n\n<p>Here's the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/delete\" rel=\"nofollow\">MDN reference for delete</a>, and the <a href=\"https://developer.mozilla.org/en/JavaScript/Guide/Closures\" rel=\"nofollow\">MDN reference for closures</a>, which discusses also anonymous functions. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>People normally call these \"Immediately Invoked Function Expressions\" or \"Self Executing Functions\".</p>\n\n<p>The point of doing this is that variables declared inside that function do not leak to the outside.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are a few things going on here. First is the <a href=\"http://en.wikipedia.org/wiki/Immediately-invoked_function_expression\">immediately invoked function expression</a> (IIFE) pattern:</p>\n\n<pre><code>(function() {\n  // some code\n})();\n</code></pre>\n\n<p>This provides a way to execute some JS code in it's own scope. It's usually used so that any variables created within the function won't affect the global scope. You could use this instead:</p>\n\n<pre><code>function foo() {\n  // some code\n}\nfoo();\n</code></pre>\n\n<p>But this requires giving a name to the function, which is not always necessary. Using a named function also means at some future point the function could be called again which might not be desirable. By using an anonymous function in this manner you ensure it's only executed once.</p>\n\n<p>This syntax is invalid:</p>\n\n<pre><code>function() {\n  // some code\n}();\n</code></pre>\n\n<p>Because you have to wrap the function in parens in order to make it parse as an expression. More info here: <a href=\"http://benalman.com/news/2010/11/immediately-invoked-function-expression/\">http://benalman.com/news/2010/11/immediately-invoked-function-expression/</a></p>\n\n<p>So to recap quickly on the IIFE pattern</p>\n\n<pre><code>(function() {\n  // some code\n})();\n</code></pre>\n\n<p>Allows 'some code' to be executed immediately, as if it was just written inline, but also within its own scope so as not to affect the global namespace (and thus potentially interfere with or be interfered with by, other scripts).</p>\n\n<p>You can pass arguments to your function just as you would a normal function, eg</p>\n\n<pre><code>(function(x) {\n  // some code\n})(1);\n</code></pre>\n\n<p>So we're passing the value '1' as the first argument to the function, which receives it as a locally scoped variable, named x.</p>\n\n<p>Secondly, you have the guts of the function code itself:</p>\n\n<pre><code>delete x;\nreturn x;\n</code></pre>\n\n<p>The delete operator will remove properties from objects. It doesn't delete variables. So;</p>\n\n<pre><code>var foo = {'bar':4, 'baz':5};\ndelete foo.bar;\nconsole.log(foo);\n</code></pre>\n\n<p>Results in this being logged:</p>\n\n<pre><code>{'baz':5}\n</code></pre>\n\n<p>Whereas,</p>\n\n<pre><code>var foo = 4;\ndelete foo;\nconsole.log(foo);\n</code></pre>\n\n<p>will log the value 4, because foo is a variable not a property and so it can't be deleted.</p>\n\n<p>Many people assume that delete can delete variables because of the way autoglobals work. If you assign to a variable without declaring it first, it will not actually become a variable, but a property on the global object:</p>\n\n<pre><code>bar = 4; // note the lack of 'var'. Bad practice! Don't ever do this!\ndelete bar;\nconsole.log(bar); // error - bar is not defined.\n</code></pre>\n\n<p>This time the delete works because you're not delete-ing a variable but a property on the global object. In effect, the previous snippet is equivalent to this:</p>\n\n<pre><code>window.bar = 4;\ndelete window.bar;\nconsole.log(window.bar);\n</code></pre>\n\n<p>And now you can see how it's analagous to the foo object example and not the foo variable example.</p>\n",
                    "is_accepted": true,
                    "score": 77
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/8228281/what-is-this-construct-in-javascript\">What is this construct in javascript?</a>  </p>\n</blockquote>\n\n\n\n<p>I came across this bit of Javascript code but have no idea what to make out of it. Why do I get \"1\" when I run this code? What is this strange little appendix of (1) and why is the function wrapped in parentheses?   </p>\n\n<pre><code>(function(x){\n    delete x;\n    return x;\n})(1);\n</code></pre>\n\n<p>Thanks :-)</p>\n",
            "last_activity_date": 1411597586,
            "question_id": 9053842,
            "score": 27,
            "tags": [
                "javascript",
                "function",
                "syntax",
                "parentheses",
                "iife"
            ],
            "title": "Advanced Javascript: Why is this function wrapped in parentheses?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Try using the Mousewheel and DOMMouseScroll events instead. See <a href=\"http://www.quirksmode.org/dom/events/scroll.html\" rel=\"nofollow\">http://www.quirksmode.org/dom/events/scroll.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>More about in <a href=\"http://www.switchonthecode.com/tutorials/javascript-tutorial-the-scroll-wheel\" rel=\"nofollow\">Javascript Tutorial - The Scroll Wheel</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As far as I know it is impossible (without any work) to tell whenever scroll event has been issued by \"user\" or by other means.</p>\n\n<p>You could try (as others mentioned) catch mousewheel events, then probably trying to catch keydown event on any keys that can trigger scroll (arrows, space etc.) while checking what element is currently focused, since you for example can't scroll using arrow keys while typing in an input field. \nIn general that would be complex and messy script.</p>\n\n<p>Depending on situation you're dealing with you could I guess \"revert the logic\", and instead of detecting user issued scroll events just hook in into any scrolls made programatically and treat any scroll events <strong>not</strong> made by your code as made by an user. \nLike I said it depends on a situation, and what you're trying to achive.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Unfortunately, there is no direct way of telling that. </p>\n\n<p>I would say if you can <strong>redesign</strong> your app so that it doesn't depend on this type of flow, go for that.</p>\n\n<p>If not, a <em>workaround</em> I can think of is to keep track of user initiated scrolls and check that to see if the scroll was triggered by the browser or by the user.</p>\n\n<p>Here's an example that I put together which does this pretty well (except for browsers where jQuery history has problems with). </p>\n\n<p>You need to run this locally to be able to test it fully (jsFiddle/jsbin are not good fits as they iFrame the contents).</p>\n\n<p>Here's the <strong>test cases</strong> that I validated:</p>\n\n<ul>\n<li>Page loads - <code>userScroll</code> is <code>false</code></li>\n<li>Scroll using mouse/keyboard - <code>userScroll</code> becomes <code>true</code></li>\n<li>Click on the link to jump to page bottom - <code>userScroll</code> becomes <code>false</code></li>\n<li>Click Back/Forward - <code>userScroll</code> becomes <code>false</code>;</li>\n</ul>\n\n<hr>\n\n<pre><code>&lt;!DOCTYPE html&gt; \n&lt;html lang=\"en\"&gt; \n&lt;head&gt; \n    &lt;meta charset=\"utf-8\" /&gt; \n    &lt;script src=\"http://code.jquery.com/jquery-1.6.1.min.js\"&gt;&lt;/script&gt; \n    &lt;script type=\"text/javascript\" src=\"https://raw.github.com/tkyk/jquery-history-plugin/master/jquery.history.js\"&gt;&lt;/script&gt; \n&lt;/head&gt; \n&lt;body&gt; \n    &lt;span&gt; hello there &lt;/span&gt;&lt;br/&gt; \n    &lt;a href=\"#bottom\"&gt; click here to go down &lt;/a&gt; \n    &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt; \n    &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt; \n    &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt; \n    &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt; \n    &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt; \n    &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt; \n    &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt; \n    &lt;a name=\"bottom\"&gt; just sitting &lt;/a&gt; \n&lt;/body&gt; \n&lt;script type=\"text/javascript\"&gt; \n\nvar userScroll = false;     \n\nfunction mouseEvent(e) { \n    userScroll = true; \n} \n\n\n$(function() { \n\n    // reset flag on back/forward \n    $.history.init(function(hash){ \n        userScroll = false; \n    }); \n\n    $(document).keydown(function(e) { \n        if(e.which == 33        // page up \n           || e.which == 34     // page dn \n           || e.which == 32     // spacebar\n           || e.which == 38     // up \n           || e.which == 40     // down \n           || (e.ctrlKey &amp;&amp; e.which == 36)     // ctrl + home \n           || (e.ctrlKey &amp;&amp; e.which == 35)     // ctrl + end \n          ) { \n            userScroll = true; \n        } \n    }); \n\n    // detect user scroll through mouse\n    // Mozilla/Webkit \n    if(window.addEventListener) {\n        document.addEventListener('DOMMouseScroll', mouseEvent, false); \n    }\n\n    //for IE/OPERA etc \n    document.onmousewheel = mouseEvent; \n\n\n    // to reset flag when named anchors are clicked\n    $('a[href*=#]').click(function() { \n        userScroll = false;\n    }); \n\n      // detect browser/user scroll\n    $(document).scroll( function(){  \n        console.log('Scroll initiated by ' + (userScroll == true ? \"user\" : \"browser\"));\n    });\n}); \n&lt;/script&gt; \n&lt;/html&gt;\n</code></pre>\n\n<p><strong>Notes:</strong></p>\n\n<ul>\n<li>This doesn't track scrolling when the user drags the scrollbar with mouse. This can be added with some more code, which I left as an exercise for you.</li>\n<li><code>event.keyCodes</code> may vary by OS, so you may have to change that appropriately.</li>\n</ul>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>You can check the scroll position on ready. When you fire the on scroll event check to make sure the scroll position is different than it was when the page loaded. Lastly be sure to clear out the stored value once the page is scrolled.</p>\n\n<pre><code>$(function () {\n    var loadScrollTop = ($(document).scrollTop() &gt; 0 ? $(document).scrollTop() : null);\n    $(document).scroll(function (e) {\n        if ( $(document).scrollTop() !== loadScrollTop) {\n            // scroll code here!\n        }\n        loadScrollTop = null;\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Found this very useful. Here's a coffeescript version for those so inclined.</p>\n\n<pre><code>$ -&gt;\n  S.userScroll = false\n\n  # reset flag on back/forward\n  if $.history?\n    $.history.init (hash) -&gt;\n      S.userScroll = false\n\n  mouseEvent = (e)-&gt;\n    S.userScroll = true\n\n  $(document).keydown (e) -&gt;\n    importantKey =  (e.which == 33 or        # page up\n      e.which == 34 or    # page dn\n      e.which == 32 or    # spacebar\n      e.which == 38 or    # up\n      e.which == 40 or    # down\n      (e.ctrlKey and e.which == 36) or    # ctrl + home\n      (e.ctrlKey and e.which == 35)    # ctrl + end\n    )\n    if importantKey\n      S.userScroll = true;\n\n  # Detect user scroll through mouse\n  # Mozilla/Webkit\n  if window.addEventListener\n      document.addEventListener('DOMMouseScroll', mouseEvent, false);\n\n  # for IE/OPERA etc\n  document.onmousewheel = mouseEvent;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yes, it is 100% possible. I'm current using this in an application where IE is not a requirement - client facing only. When my Backbone app initiates an animation where scroll is changed - scroll occurs but does not trigger these event captures. This is tested in FF, Safari &amp; Chrome latest.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$('html, body').bind('scroll mousedown wheel DOMMouseScroll mousewheel keyup', function(evt) {\n  // detect only user initiated, not by an .animate though\n    if (evt.type === 'DOMMouseScroll' || evt.type === 'keyup' || evt.type === 'mousewheel') {\n    // up\n    if (evt.originalEvent.detail &lt; 0 || (evt.originalEvent.wheelDelta &amp;&amp; evt.originalEvent.wheelDelta &gt; 0)) { \n    // down.\n    } else if (evt.originalEvent.detail &gt; 0 || (evt.originalEvent.wheelDelta &amp;&amp; evt.originalEvent.wheelDelta &lt; 0)) { \n  }\n}\n}); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>if you're using JQuery than there's a better answer, apparently - i'm just trying it out myself.</p>\n\n<p>see: <a href=\"http://stackoverflow.com/questions/11049287/detect-jquery-event-trigger-by-user-or-call-by-code\">Detect jquery event trigger by user or call by code</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Regarding to:</p>\n\n<blockquote>\n  <p>Specifically, when using the back button a browser may jump to the last known scroll position.</p>\n</blockquote>\n\n<p>That fires very soon, after the page is rendered. You can just delay listenting to the scroll event by 1 second or so.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to tell whether a scroll event was done by the browser or by the user? Specifically, when using the back button a browser may jump to the last known scroll position. If I bind to scroll event how can I tell whether this was caused by user or browser? </p>\n\n<pre><code>$(document).scroll( function(){ \n    //who did this?!\n});\n</code></pre>\n\n<p>I see three types of situations that cause scrolling in a browser.</p>\n\n<ol>\n<li>The user performs some action. For example, uses mousewheel, arrow keys, page up/down keys, home/end keys.</li>\n<li>The browser scrolls automatically. For example, when using the back button in your browser it will jump to the last known scroll position automatically.</li>\n<li>Javascript scrolls. For example, <code>element.scrollTo(x,y)</code>.</li>\n</ol>\n",
            "last_activity_date": 1418590379,
            "question_id": 7035896,
            "score": 23,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Detect whether scroll event was created by user"
        }
    ]
}
