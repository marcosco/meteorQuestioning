{
    "items": [
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><code>content</code> doesn't support HTML, only text. You should probably use jQuery or something like that. </p>\n\n<p>Another problem with your code is <code>\"</code> inside a <code>\"</code> block. You should mix <code>'</code> and <code>\"</code> (<code>class='headingDetail'</code>).</p>\n\n<p>If <code>content</code> did support HTML you could end up in an infinite loop where <code>content</code> is added inside <code>content</code>.</p>\n",
                    "is_accepted": true,
                    "score": 72
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1672879/can-you-use-the-after-pseudo-element-to-add-html\">Can you use the :after pseudo element to add html?</a>  </p>\n</blockquote>\n\n\n\n<p>I'm wondering if the following is possible. I know it doesnt work, but maybe I'm not writing it in the correct syntax.</p>\n\n<pre><code>li.first div.se_bizImg:before{\n    content: \"&lt;h1&gt;6 Businesses Found &lt;span class=\"headingDetail\"&gt;(view all)&lt;/span&gt;&lt;/h1&gt;\";\n}\n</code></pre>\n\n<p>Anyway of doing this?</p>\n",
            "last_activity_date": 1320731643,
            "question_id": 5865937,
            "score": 47,
            "tags": [
                "html",
                "css",
                "css-selectors"
            ],
            "title": "Using :before and :after CSS selector to insert Html"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>may be you can write like this:</p>\n\n<pre><code>#graphic { \n background-image: url(image.jpg); \n background-position: 0 -50px; \n width: 200px; \n height: 100px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can put the graphic in a pseudoelement with it's own dimensional context:</p>\n\n<pre><code>#graphic {\n  width: 200px;\n  height: 100px;\n  position: relative;\n}\n#graphic:before {\n  content: '';\n  position: absolute;\n  z-index: -1;\n  width: 200px;\n  height: 50px;\n  background-image: url(image.jpg);\n}\n</code></pre>\n\n<p>Here's a jsfiddle: <a href=\"http://jsfiddle.net/blineberry/BhbrL/1023/\">http://jsfiddle.net/blineberry/BhbrL/1023/</a></p>\n\n<p>Usual disclaimer about incompatibility with IE7 and lower applies. These browsers do not recognize <code>:before</code>.</p>\n",
                    "is_accepted": true,
                    "score": 62
                }
            ],
            "body": "<p>I have this HTML:</p>\n\n<pre><code>&lt;div id=\"graphic\"&gt;lorem ipsum&lt;/div&gt;\n</code></pre>\n\n<p>with this CSS:</p>\n\n<pre><code>#graphic { background-image: url(image.jpg); width: 200px; height: 100px;}\n</code></pre>\n\n<p>The background image I'm applying is 200x100 px, but I only want to display a cropped portion of the background image of 200x50 px.</p>\n\n<p><code>background-clip</code> does not appear to be the right CSS property for this. What can I use instead?</p>\n\n<p><code>background-position</code> should not be used, because I'm using the above CSS in a sprite context where the image part I want to show is smaller than the element on which the CSS is defined.</p>\n",
            "last_activity_date": 1409237023,
            "question_id": 7777159,
            "score": 40,
            "tags": [
                "css",
                "css-sprites"
            ],
            "title": "Clip/Crop background-image with CSS"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You have a dropdown in the top menu where you can switch the css validation. It's called Cascading stylesheet version for validation. If you can't see it right click on the menu and check Style sheet so it will show.</p>\n\n<p><img src=\"http://i.imgur.com/u5SKKGC.png\" alt=\"screenshot\"></p>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p>If you want to validate for CSS 3.0 in Visual Studio 2010, you need to install the Visual Studio 2010 Service Pack 1 and then install the \"CSS 3 Intellisense Schema\"</p>\n\n<p><a href=\"http://visualstudiogallery.msdn.microsoft.com/7211bcac-091b-4a32-be2d-e797be0db210/view/Discussions\">http://visualstudiogallery.msdn.microsoft.com/7211bcac-091b-4a32-be2d-e797be0db210/view/Discussions</a></p>\n\n<p>Then you will see \"CSS 3.0\" in the drop down that easwee mentioned.</p>\n",
                    "is_accepted": false,
                    "score": 59
                }
            ],
            "body": "<p>I'm editing a simple CSS file in VS2010 and the editor seems to have a rather limited understanding of CSS, for example:</p>\n\n<pre><code>#my-rule {\n     position:relative;\n}\n</code></pre>\n\n<p>generates a warning: <code>Validation(CSS 1.0): 'position' is not a known CSS property name</code> </p>\n\n<p>I'm guessing that there is an option some where to change the CSS validation to CSS 2.1 or some thing close, but can't for the life of me find it.</p>\n",
            "last_activity_date": 1422396608,
            "question_id": 3931801,
            "score": 39,
            "tags": [
                "css",
                "visual-studio-2010",
                "visual-studio",
                "editor"
            ],
            "title": "Is it possible to change CSS Validation scheme in VS2010"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Add a <code>margin-top:20px;</code> to <code>#restart</code>. Or whatever size gap you feel is appropriate. If it's an inline-element you'll have to add <code>display:block</code> or <code>display:inline-block</code> although I don't think <code>inline-block</code> works on older versions of IE.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>If <code>#restart</code> is an inline element (eg <code>&lt;span&gt;</code>, <code>&lt;em&gt;</code> etc) then you can turn it into a block element using:</p>\n\n<pre><code>#restart { display: block; }\n</code></pre>\n\n<p>This will have the effect of ensuring a line break both before and after the element.</p>\n\n<p>There is not a way to have CSS insert something that acts like a line break <em>only</em> before an element and not after. You could perhaps cause a line-break before as a side-effect of other changes, for example <code>float: left</code>, or <code>clear: left</code> after a floated element, or even something crazy like <code>#restart:before { content: 'a load of non-breaking spaces'; }</code> but this probably isn't a good idea in the general case.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>There are two reasons why you cannot add generated content via CSS in the way you want:</p>\n\n<ol>\n<li><p>generated content accepts content and not markup.  Markup will not be evaluated but displayed only.</p></li>\n<li><p><code>:before</code> and <code>:after</code> generated content is added within the element, so even adding a space or letter and defining it as <code>block</code> will not work.</p></li>\n</ol>\n\n<p>There is an <code>::outside</code> pseudo element that might do what you want.  However, there appears to be no browser support.  (Read more here: <a href=\"http://www.w3.org/TR/css3-content/#wrapping\">http://www.w3.org/TR/css3-content/#wrapping</a>)</p>\n\n<p>Best bet is use a bit of jQuery here:</p>\n\n<pre><code>$('&lt;br /&gt;').insertBefore('#restart');\n</code></pre>\n\n<p><strong>Example:</strong> <a href=\"http://jsfiddle.net/jasongennaro/sJGH9/1/\">http://jsfiddle.net/jasongennaro/sJGH9/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>It's possible using the <code>\\A</code> <a href=\"http://novicenotes.com/bookmarks/css_generated_content_ascii_line-feed_control_character/\">escape sequence</a> in the psuedo-element generated content. <a href=\"http://www.w3.org/TR/CSS2/generate.html#x18\">Read more</a> in the CSS2 spec.</p>\n\n<pre><code>#restart:before { content: '\\A'; }\n</code></pre>\n\n<p>You may also need to add <code>white-space:pre;</code> to <code>#restart</code>.</p>\n\n<p>note: <code>\\A</code> denotes the end of a line.</p>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>Yes, totally doable but it is definitely a total hack (people may give you dirty looks for writing such code).</p>\n\n<p>Here is the HTML:</p>\n\n<pre><code>&lt;div&gt;lorem ipdum dolor sit &lt;span id=\"restart\"&gt;amit e pluribus unum&lt;/span&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Here is the CSS:</p>\n\n<pre><code>#restart:before { content: 'hiddentext'; font-size:0; display:block; line-height:0; }\n</code></pre>\n\n<p>Here is the fiddle:\n<a href=\"http://jsfiddle.net/AprNY/\" rel=\"nofollow\">http://jsfiddle.net/AprNY/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Just put a unicode newline character within the before pseudo element:</p>\n\n<pre><code>#restart:before { content: '\\00000A'; }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Instead of manually adding a line break somehow, you can do implement <code>border-bottom: 1px solid #ff0000</code> which will take the element's border and only render <code>border-&lt;side&gt;</code> of whichever side you specify. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This works for me:</p>\n\n<pre><code>#restart:before {\n    content: ' ';\n    clear: right;\n    display: block;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try the following:</p>\n\n<pre><code>#restart::before {\n  content: '';\n  display: block;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I feel like I saw a way, using the CSS content property, to insert a line break tag before an element. Obviously this doesn't work:</p>\n\n<pre><code>#restart:before { content: '&lt;br/&gt;'; }\n</code></pre>\n\n<p>But how do you do this?</p>\n",
            "last_activity_date": 1417648869,
            "question_id": 7363766,
            "score": 32,
            "tags": [
                "css",
                "css3"
            ],
            "title": "How to insert a line break before an element using CSS"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>from bytes:</p>\n\n<p>\"Margin is that space between the edge of an element's box and the edge of the complete box, such as the margin of a letter. 'top' displaces the element's margin edge from the containing blocks box, such as that same piece of paper inside a cardboard box, but it is not up against the edge of the container.\"</p>\n\n<p>My understanding is that margin-top creates a margin on the element, and top sets the top edge of the element below the top edge of the containing element at the offset.</p>\n\n<p>you can try it here:</p>\n\n<p><a href=\"http://w3schools.com/css/tryit.asp?filename=trycss_position_top\" rel=\"nofollow\">http://w3schools.com/css/tryit.asp?filename=trycss_position_top</a></p>\n\n<p>just replace top with margin-top to see the difference. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>\"top\" is for tweak an element with use of \"position\" property.\nmargin-top is for measuring the external distance to the element, in relation to the previous one.</p>\n\n<p>Also, top behavior can differ depending on the type of position, absolute, relative or fixed.</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>You'd use margin, if you wanted to move a (block) element away from other elements in the document flow. That means it'd push the following elements away / further down. Be aware that vertical margins of adjacent elements collapse.</p>\n\n<p>If you wanted the element to have no effect on the surrounding elements, you'd use positioning (abs., rel.) and the top, bottom, left, right settings.</p>\n\n<p>With relative positioning, the element will still occupy it's original space as when positioned statically. With absolute positioning, you completely remove the element from the (static) document flow, and may then position it freely - but <em>relative</em> to the next best non-statically positioned element wrapped around it.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Margin applies and extends / contracts the element's normal boundary but when you call top you are ignoring the element's regular position and floating it to a specific position.</p>\n\n<p>Example:</p>\n\n<p>html:</p>\n\n<pre><code>&lt;div id=\"some_element\"&gt;content&lt;/div&gt;\n</code></pre>\n\n<p>css:</p>\n\n<pre><code>#some_element {margin-top: 50%}\n</code></pre>\n\n<p>Means the element will begin displaying html at the 50% height of its container (i.e. the div displaying the word \"content\" would be displayed at 50% height of its containing div or html node directly before div#some_element) but if you open your browser's inspector (f12 on Windows or cmd+alt+i on mac) and mouse over the element you will see it's boundaries highlighted and notice the element has been pushed down rather than re-positioned.</p>\n\n<p>Top on the other hand:</p>\n\n<pre><code>#some_element {top: 50%}\n</code></pre>\n\n<p>Will actually reposition the element meaning it will still display at 50% of its container but it will reposition the element so its edge starts at 50% of its containing element. In other words, there will be a gap between the edges of the element and its container.</p>\n\n<p>Cheers!</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm not sure if I fully understand the difference between these two.</p>\n\n<p>Can someone explain why I would use one over the other and how they differ?</p>\n",
            "last_activity_date": 1422789813,
            "question_id": 4036176,
            "score": 29,
            "tags": [
                "css",
                "css-position"
            ],
            "title": "CSS: Top vs Margin-top"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Use this CSS:</p>\n\n<pre><code>#container {\n    width: 400px;\n    border: 1px solid red;\n}\n\n#fixed {\n    position: fixed;\n    width: inherit;\n    border: 1px solid green;\n}\n</code></pre>\n\n<p>The #fixed element will inherit it's parent width, so it will be 100% of that.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Fixed positioning is supposed to define everything in relation to the viewport, so <code>position:fixed</code> is always going to do that. Try using <code>position:relative</code> on the child div instead. \n(I realize you might need the fixed positioning for other reasons, but if so - you can't really make the width match it's parent with out JS without <code>inherit</code>)</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I\u00b4m not sure as to what the second problem is (based on your edit), but if you apply <code>width:inherit</code> to all inner divs, it works: <a href=\"http://jsfiddle.net/4bGqF/9/\">http://jsfiddle.net/4bGqF/9/</a></p>\n\n<p>You might want to look into a javascript solution for browsers that you need to support and that don\u00b4t support <code>width:inherit</code></p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Here is the trick I've used.</p>\n\n<p>E.g. I had this HTML:</p>\n\n<pre><code>&lt;div class=\"head\"&gt;\n\n&lt;div id=\"fx\"&gt;123&lt;/div&gt;\n\n&lt;/div&gt;\n</code></pre>\n\n<p>and to make <code>#fx</code> fixed inside .head,  so the workaround is to add an additional div as a container for <code>#fx</code> with position:absolute like this:</p>\n\n<pre><code>&lt;div class=\"head\"&gt;\n    &lt;div class=\"area_for_fix\"&gt;\n        &lt;div id=\"fx\"&gt;123&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Here is the CSS:</p>\n\n<pre><code>.head{\n        min-width:960px;\n        width:960px;\n        nax-width:1400px;\n        height:300px;\n        border: 1px solid #000;\n        **position:relative;**\n        margin:0 auto;\n        margin-top:50px;\n        padding:20px;\n        text-align:right;\n        height:1500px;\n    }\n\n    .area_for_fix{\n\n        **position:absolute;**\n        right:0;\n        width:150px;\n        height:200px;\n        background-color:red;\n    }\n\n\n    #fx{\n        width:150px;\n        height:75px;\n        background-color:#ccc;\n        **position:fixed;**\n\n\n\n\n    }\n</code></pre>\n\n<p>Important: to not set <code>top</code> and <code>left</code> for <code>#fx</code>,  set these attributes on <code>.area_for_fix</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can also solve it by jquery:</p>\n\n<pre><code>var new_width = $('#container').width();\n$('#fixed').width(new_width); \n</code></pre>\n\n<p>This was so helpful to me because my layout was responsive, and the <code>inherit</code> solution wasn't working with me!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is a little hack that we ran across while fixing some redraw issues on a large app.</p>\n\n<p>Use -webkit-transform: translateZ(0); on the parent. Of course this is specific to Chrome.</p>\n\n<p><a href=\"http://jsfiddle.net/senica/bCQEa/\" rel=\"nofollow\">http://jsfiddle.net/senica/bCQEa/</a></p>\n\n<pre><code>-webkit-transform: translateZ(0);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Note that <code>position:fixed</code> does not seem to play nice with <code>right</code> and <code>left</code>.  If your element's original css is <code>position:absolute; right:0;</code> and you change the position to fixed via a script, you should also set <code>right:auto</code> and position your element in another way if you want it to stay inside the containing element's width.</p>\n\n<p>I realize this doesn't directly address the fiddle in the original question, but hopefully it's helpful to someone troubleshooting the same basic issue.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to give a div (position: fixed) the width of 100% (relating to it's parent div). But I've got some problems...</p>\n\n<p>EDIT:\n<strong>The first problem is sovled by using inherit, but it still doesn't work. I think the problem is that I'm using multiple divs that take the 100%/inherit width.\nYou can find the second problem on the jsfiddle update: <a href=\"http://jsfiddle.net/4bGqF/7/\">http://jsfiddle.net/4bGqF/7/</a></strong></p>\n\n<p>Fox example</p>\n\n<pre><code>#container {\n    width: 800px;\n}\n\n#fixed {\n    position: fixed;\n    width: 100%;\n}\n</code></pre>\n\n<p>and the html</p>\n\n<pre><code>&lt;div id=\"container\"&gt;\n    &lt;div id=\"fixed\"&gt;Sitename&lt;/div&gt;\n    &lt;p&gt;\n        blaat\n    &lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Or you can try it out: <a href=\"http://jsfiddle.net/4bGqF/\">http://jsfiddle.net/4bGqF/</a></p>\n\n<p>The problems seems to be that the <strong>fixed element is always taking the width of the window/document</strong>. Does anyone know how the fix this?</p>\n\n<p>I can't give my fixed element a fixed with, because I'm using the jScrollPane plugin. It depends on the content whether there's a scrollbar or not.</p>\n\n<p>Thanks a lot!</p>\n\n<p>PS: The text of the 2 divs are on top of each other. This is just an example so that doesn't really matter.</p>\n",
            "last_activity_date": 1411489494,
            "question_id": 5873565,
            "score": 24,
            "tags": [
                "jquery",
                "css",
                "jquery-plugins"
            ],
            "title": "Set width of a &quot;Position: fixed&quot; div relative to parent div"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You need to have two div elements, one inside the other, and use a cross browser rounded corner css, like this:</p>\n\n<pre><code>.small-rounded {\n    border: 1px solid ##000;\n    -moz-border-radius-topleft: 5px; -webkit-border-top-left-radius: 5px;\n    -moz-border-radius-topright: 5px; -webkit-border-top-right-radius: 5px;\n    -moz-border-radius-bottomleft: 5px; -webkit-border-bottom-left-radius: 5px;\n    -moz-border-radius-bottomright: 5px; -webkit-border-bottom-right-radius: 5px;\n    border-radius: 5px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Inner border calculations</strong></p>\n\n<p>First, you'll need to remove <code>-vendor-background-clip: padding-box</code> or set them to <code>border-box</code> the default in order to achieve the inner border radius.</p>\n\n<p>The inner border radius is calculated as the difference of the outer border radius (<code>border-radius</code>) and the border width (<code>border-width</code>) such that </p>\n\n<p><code>inner border radius = outer border radius - border width</code></p>\n\n<p>Whenever the <code>border-width</code> is greater than the <code>border-radius</code>, the inner border radius is negative and you get some awkward inverted corners. Currently, I don't believe there is a property for adjusting the <code>inner-border-radius</code>, so you'll need to calculate it manually.</p>\n\n<p>In your case:</p>\n\n<p><code>inner border radius = 6px - 5px = 1px</code></p>\n\n<p>Your new CSS should be:</p>\n\n<pre><code>.radius-all { border-radius: 6px; -moz-border-radius: 6px; -webkit-border-radius: 6px; }\n.template-bg { background: #FFF; }\n.template-border { border: 5px solid rgba(255, 255, 255, 0.2); }\n</code></pre>\n\n<p>Simply subtract the <code>border-radius</code> (6px) values from the <code>border-width</code> value (5px) in order to achieve your desired inner-border-radius: </p>\n\n<hr>\n\n<p><strong>Code that works for me</strong></p>\n\n<p>Tested on Firefox 3.x, Google Chrome, and Safari 5.0</p>\n\n<pre><code> .radius-all { border-radius: 10px; -moz-border-radius: 10px; -webkit-border-radius: 10px; }\n.template-bg { background: #FFF; }\n.template-border { border: 5px solid rgba(0, 0, 0, 0.2); } /* Note that white on white does not distinguish a border */\n</code></pre>\n\n<hr>\n\n<p><strong>Adding color overlays in JavaScript</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var bodyBgColor = document.getElementsByTagName('body')[0].style.backgroundColor;;\n\n    // insert opacity decreasing code here for hexadecimal\n\n    var header = document.getElementsByTagName('header')[0];\n    header.style.backgroundColor = bodyBgColor;\n&lt;/script&gt;\n</code></pre>\n\n<p>I'm not entirely sure how to do hexadecimal arithmetic in JavaScript but I'm sure you can find an algorithm in Google.</p>\n\n<hr>\n\n<p><strong>Applying General Borders</strong></p>\n\n<p>Are you using a separate box <code>&lt;div&gt;</code> for your border through its <code>background</code> property? If so, you'll need to apply <code>border-radius</code> and its vendor specific properties on both the border box and the inner box:</p>\n\n<pre><code>&lt;div id=\"border-box\" style=\"border-radius: 5px;\"&gt;\n    &lt;div id=\"inner-box\" style=\"border-radius: 5px;\"&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>A much more efficient way would simply have the inner-box manage its own border:</p>\n\n<pre><code>&lt;div id=\"inner-box\" style=\"border: 4px solid blue; border-radius: 5px\"&gt;\n    &lt;!-- Content --&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS-wise, you could just declare a <code>.rounded-border</code> class and apply it to every box that will have rounded borders:</p>\n\n<pre><code>.rounded-borders {\n    border-radius: 5px;\n    -moz-border-radius: 5px;\n    -webkit-border-radius: 5px;\n    -khtml-border-radius: 5px;\n}\n</code></pre>\n\n<p>And apply the class to any boxes that will have rounded borders:</p>\n\n<pre><code>&lt;div id=\"border-box\" class=\"rounded-borders\"&gt;\n    &lt;div id=\"inner-box\" class=\"rounded-borders\"&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>For a single box element, you'll still be required to declare the border size in order to be shown:</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n    #inner-box { border: 4px solid blue; }\n&lt;/style&gt;\n\n&lt;div id=\"inner-box\" class=\"rounded-borders\"&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Another solution is to have matching inner and outer borders combined with <code>border-radius</code> is to \"fake\" the border using the <a href=\"https://developer.mozilla.org/en/CSS/box-shadow\"><em><code>&lt;spread-radius&gt;</code></em></a> value of the <code>box-shadow</code> property. This produces a solid shadow which can easily pass for a regular border.</p>\n\n<p>For instance, to achieve a 4px border and a 4px white border radius, try this:</p>\n\n<pre><code>/* rounded corners */\n-webkit-border-radius: 4px;\n-moz-border-radius: 4px;\nborder-radius: 4px;\n\n/* drop shadow */\n-webkit-box-shadow: 0px 0px 0px 4px #fff;\n-moz-box-shadow: 0px 0px 0px 4px #fff;\nbox-shadow: 0px 0px 0px 4px #fff;\n</code></pre>\n\n<p>If you want to add a \"real\" drop shadow to the entire container, you can simply chain your shadow statements like so:</p>\n\n<pre><code>/* drop shadow */\n-webkit-box-shadow: 0px 0px 0px 4px rgba(255,255,255,1.0),\n        1px 1px 8px 0 rgba(0,0,0,0.4);\n-moz-box-shadow: 0px 0px 0px 4px rgba(255,255,255,1.0),\n        1px 1px 8px 0 rgba(0,0,0,0.4);\nbox-shadow: 0px 0px 0px 4px rgba(255,255,255,1.0),\n        1px 1px 8px 0 rgba(0,0,0,0.4);\n</code></pre>\n\n<p><strong>Note:</strong> Keep in mind here that the order of the statements is the order in which it will be rendered.</p>\n\n<p>The only thing to beware of is that the initial \"faux border\" will overlap the first X pixels (where X is the width of the border) of any shadow you want beneath it (and combine, if you're using RGBa opacity on it below 100%.)</p>\n\n<p>So it won't work in <em>all</em> situations, but it'll get the majority. I use this pretty frequently when regular borders are not ideal.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Since there is no such thing as <code>inner-border-radius</code> for CSS, the browsers default it to <code>border-radius - border-width</code>.  If you don't like that, the typical solution is to create two divs with borders to mimic the inner border radius but this solution brings in more design into the html.  It is also a pain if it's a common border template used through out the site.  </p>\n\n<p>I managed to figure a way to keep it all in css by producing the inner div using <code>:after</code> and <code>content: \"\"</code>.  So for your case it would be:</p>\n\n<pre><code>.template-border {\n    position: relative;\n    border-radius: 5px;\n    background-color: #000;\n    border: 10px solid #000;\n    z-index: -2;\n}\n\n.template-border:after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: 5px;\n    background-color: #FFF;\n    z-index: -1;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I guess the title is kind of hard to understand, so I'll explain.\nI am trying to achieve this effect:</p>\n\n<p><img src=\"http://i.stack.imgur.com/S3ZSK.png\" alt=\"enter image description here\"></p>\n\n<p>(a box which has rounded corners and its border, which also has rounded borders).</p>\n\n<p>I've managed to do this, by using the <code>background-clip</code> property:</p>\n\n<p><img src=\"http://i.stack.imgur.com/slXp5.png\" alt=\"enter image description here\"></p>\n\n<p>(rounded corners for border but <strong>not</strong> for inner box)</p>\n\n<p>The question is, how can I achieve rounded corners for the inner box?</p>\n\n<p>Thank you!</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>The HTML I am using:</p>\n\n<pre><code>&lt;header class=\"body template-bg template-border radius-all\"&gt;\n        &lt;nav&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Link 1&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Link 2&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Link 3&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Link 4&lt;/a&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n</code></pre>\n\n<p>And the CSS:</p>\n\n<pre><code>.radius-all {border-radius:10px; -moz-border-radius:10px; -webkit-border-radius:10px;}\n.template-bg {background:#FFF; -moz-background-clip: padding; -webkit-background-clip: padding; background-clip: padding-box;}\n.template-border {border:5px solid rgba(255, 255, 255, 0.2);}\n</code></pre>\n",
            "last_activity_date": 1362999830,
            "question_id": 4839613,
            "score": 24,
            "tags": [
                "css",
                "css3",
                "rounded-corners"
            ],
            "title": "How to make round corners to both inside of a box and its border?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Try full URLs with <strong>https://...</strong> . As https is slower because of the enlarging and uncompressable files, there are some tricks to deliver mixed http/https content, without getting an \"insecure content\" warning. You might search for them. Never needed to use such tricks.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I seem to remember certain versions of IE cannot use an @fontface font hosted outside the site's domain (If the page is at <a href=\"http://a.domain.tld/page.html\" rel=\"nofollow\">http://a.domain.tld/page.html</a> - font must also be in the <a href=\"http://a.domain.tld/\" rel=\"nofollow\">http://a.domain.tld/</a>) for one reason or another. Put the EOT file on your domain and try again maybe.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/5065362/ie9-blocks-download-of-cross-origin-web-font\">IE9 blocks download of cross-origin web font</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Did you try directly downloading the EOT file over https? The SSL certificate appears to be bad (mismatched), which could very well be your problem.</p>\n\n<p>You should also make sure that there is a cross-domain policy set up for those files so while it may not be a factor in this issue, it could cause problems for certain browsers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This sounds like a problem with your CDN. You can verify this by changing your host file to have your SSL domain point to whatever IP your non-SSL traffic is served over. If the font renders, you'll need to call up your CDN and figure out what their servers are doing to font files.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Ok, as far as I can tell this is an IE8 bug.  I created a workaround that at least works on Apache - use mod_rewrite to force HTTP for requests ending in '.eot' or '.eot?' and force HTTPS for all other requests.  In your .htaccess file, do:</p>\n\n<pre><code>&lt;IfModule mod_rewrite.c&gt;\n  RewriteEngine on\n\n  # if HTTPS request, force to HTTP if file ends in '.eot' or '.eot?'\n  RewriteCond %{SERVER_PORT} 443\n  RewriteCond %{REQUEST_URI} ^.*\\.eot\\??$\n  RewriteRule (.*) http://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]\n\n  # if HTTP request, force to HTTPS if file does NOT end in '.eot' or '.eot?'\n  RewriteCond %{SERVER_PORT} 80\n  RewriteCond %{REQUEST_URI} !.*\\.eot\\??$\n  RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]\n\n&lt;/IfModule&gt;\n</code></pre>\n\n<p>Not exactly pretty and I'm sure it adds some server overhead, running the string comparison every single request, but it fixes the issue :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I ran into this problem with HTTPS, but not HTTP. For some reason IE would continue through the different font options, ignoring <code>200 OK</code> responses.</p>\n\n<p>In my case, the problem was the HTTP header <code>Cache-Control: no-cache</code> for the font. While this will work fine with HTTP, over HTTPS it causes Internet Explorer to ignore the downloaded font.</p>\n\n<p>My best guess is that it's a variation of this behaviour:\n<a href=\"http://support.microsoft.com/kb/815313\">http://support.microsoft.com/kb/815313</a></p>\n\n<p>So, if you're seeing IE work through each font in the Developer Tools network view, it might be worth checking if you have a <code>Cache-Control</code> header and removing it.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Hi I've just run into the same problem and I've found a fix, hope this can help others. </p>\n\n<p>It is a bug in IE &lt;= 8 as commented. You can see some information on the problem here <a href=\"https://communities.bmc.com/thread/88899\" rel=\"nofollow\">https://communities.bmc.com/thread/88899</a>. Basically the problem is downloading a file in IE over https with Cache: no-cache headers being set, try remove the cache headers to see if that is your problem.</p>\n\n<p>This answer may also help <a href=\"http://stackoverflow.com/questions/3415370/ie-unable-to-download-from-unable-to-open-this-internet-site-the-request\">IE : Unable to download * from *. Unable to open this Internet site. The requested site is either unavailable or cannot be found</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know this is an old thread but I just had to weigh in. We had the same issue with EOT and WOFF fonts in all versions of Internet Explorer (7-11) not loading over HTTPS. After hours of trial and error and comparing our headers with other working sites we found it was the <code>vary</code> header that was messing things up. Unsetting that header for those file types fixed our issue right away.</p>\n\n<pre><code>&lt;FilesMatch \"\\.(woff)$\"&gt;\n    Header unset Vary\n&lt;/FilesMatch&gt;\n\n&lt;FilesMatch \"\\.(eot)$\"&gt;\n    Header unset Vary\n&lt;/FilesMatch&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Wanted to share my situation and solution in hopes it helps the next person.</p>\n\n<p>My fonts were being delivered over <strong>HTTPS</strong> via <strong>Amazon CloudFront</strong>, which was configured to serve static assets from our application that lives behind an <strong>Elastic Load Balancer</strong>.</p>\n\n<p>The fonts had the following headers:</p>\n\n<pre><code>Access-Control-Allow-Origin: *\nCache-Control: public, max-age=100000\nCache-Control: no-cache=\"set-cookie\"\n</code></pre>\n\n<p>Based on other answers and things I could find on the internet, I would've expected this to work, since it was setting a <code>max-age</code> and had proper <code>CORS</code> configuration.  However, IE9 still would not render the fonts.</p>\n\n<p>The issue turned out to be the <code>Cache-Control: no-cache=\"set-cookie\"</code> header, which surprised me because that just says to not cache the <code>Set-Cookie</code> header (unless I'm mistaken).</p>\n\n<p>It took me awhile to figure out where that header was coming from.  This header was being added by our <strong>ELB</strong> because we are using sticky sessions via cookies, and I guess the load balancer is configured to use this <code>Cache-Control</code> header when it is setup that way.</p>\n\n<p>So turning off sticky sessions removed the header, and caused the fonts to render.  We were able to turn off sticky sessions for HTTP requests, and leave them on for HTTPS requests, which is fine because we force SSL for any non-static assets, but happily serve static assets to CloudFront with or without SSL.</p>\n\n<p>Hope someone else can find this information useful.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<h2>Summary</h2>\n\n<p>I'm running into an issue using @font-face over HTTPS in IE 7,8,9 - it simply is not loading. It does not matter whether the containing HTML page is hosted on HTTPS or not, <strong>when I try to load the EOT font over HTTP it works, HTTPS it doesn't</strong>. Has anyone seen this behavior? </p>\n\n<p>The server hosting the font is sending the proper content-type=\"application/vnd.ms-fontobject\"</p>\n\n<p>I've tried multiple fonts, so it's not specific to the font.</p>\n\n<p>The fonts were generated over at <a href=\"http://www.fontsquirrel.com/fontface/generator\">Font Squirrel</a></p>\n\n<h2>CSS Syntax</h2>\n\n<pre><code>@font-face {\nfont-family: 'GothamCondensedBold';\nsrc:url('path/to/fontgothmbcd-webfont.eot');\nsrc:url('path/to/fontgothmbcd-webfont.eot?#iefix') format('embedded-opentype'),\n    url('path/to/fontgothmbcd-webfont.woff') format('woff'),\n    url('path/to/fontgothmbcd-webfont.ttf') format('truetype'),\n    url('path/to/fontgothmbcd-webfont.svg#GothamCondensedBold') format('svg');\nfont-weight: normal;\nfont-style: normal;\n}\n</code></pre>\n\n<h2>Sample Page</h2>\n\n<p><a href=\"http://gregnettles.net/dev/font-face-test.html\">http://gregnettles.net/dev/font-face-test.html</a></p>\n",
            "last_activity_date": 1422342001,
            "question_id": 7748140,
            "score": 22,
            "tags": [
                "css",
                "internet-explorer",
                "https",
                "font-face"
            ],
            "title": "@font-face EOT not loading over HTTPS"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You could use the <a href=\"http://jquery.com\">jQuery</a> library to select your head element and append HTML to it, in a manner like:</p>\n\n<pre><code>$('head').append('&lt;link rel=\"stylesheet\" href=\"style2.css\" type=\"text/css\" /&gt;');\n</code></pre>\n\n<p>You can find a complete tutorial for this problem <a href=\"http://www.rickardnilsson.net/post/2008/08/02/Applying-stylesheets-dynamically-with-jQuery.aspx\">here</a></p>\n\n<p>Using jQuery is very easy and I suggest using it, in the case you're not already are.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If you don't want to rely on a javascript library, you can use <code>document.write()</code> to spit out the required css, wrapped in <code>style</code> tags, straight into the document <code>head</code>:</p>\n\n<pre><code>&lt;head&gt;\n  &lt;script type=\"text/javascript\"&gt;\n    document.write(\"&lt;style&gt;body { background-color:#000 }&lt;/style&gt;\");\n  &lt;/script&gt;\n  # other stuff..\n&lt;/head&gt;\n</code></pre>\n\n<p>This way you avoid firing an extra HTTP request.</p>\n\n<p>There are other solutions that have been suggested / added / removed, but I don't see any point in overcomplicating something that already works fine cross-browser. Good luck!</p>\n\n<p><a href=\"http://jsbin.com/oqede3/edit\">http://jsbin.com/oqede3/edit</a></p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Here's a function that will dynamically create a CSS rule in all major browsers.  <code>createCssRule</code> takes a selector (e.g. \"p.purpleText\"), a rule (e.g. \"color: purple;\") and optionally a <code>Document</code> (the current document is used by default):</p>\n\n<pre><code>var addRule;\n\nif (typeof document.styleSheets != \"undefined\" &amp;&amp; document.styleSheets) {\n    addRule = function(selector, rule) {\n        var styleSheets = document.styleSheets, styleSheet;\n        if (styleSheets &amp;&amp; styleSheets.length) {\n            styleSheet = styleSheets[styleSheets.length - 1];\n            if (styleSheet.addRule) {\n                styleSheet.addRule(selector, rule)\n            } else if (typeof styleSheet.cssText == \"string\") {\n                styleSheet.cssText = selector + \" {\" + rule + \"}\";\n            } else if (styleSheet.insertRule &amp;&amp; styleSheet.cssRules) {\n                styleSheet.insertRule(selector + \" {\" + rule + \"}\", styleSheet.cssRules.length);\n            }\n        }\n    }\n} else {\n    addRule = function(selector, rule, el, doc) {\n        el.appendChild(doc.createTextNode(selector + \" {\" + rule + \"}\"));\n    };\n}\n\nfunction createCssRule(selector, rule, doc) {\n    doc = doc || document;\n    var head = doc.getElementsByTagName(\"head\")[0];\n    if (head &amp;&amp; addRule) {\n        var styleEl = doc.createElement(\"style\");\n        styleEl.type = \"text/css\";\n        styleEl.media = \"screen\";\n        head.appendChild(styleEl);\n        addRule(selector, rule, styleEl, doc);\n        styleEl = null;\n    }\n};\n\ncreateCssRule(\"body\", \"background-color: purple;\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>A simple non-jQuery solution, albeit with a bit of a hack for IE:</p>\n\n<pre><code>var css = \".lightbox { width: 400px; height: 400px; border: 1px solid #333}\";\n\nvar htmlDiv = document.createElement('div');\nhtmlDiv.innerHTML = '&lt;p&gt;foo&lt;/p&gt;&lt;style&gt;' + css + '&lt;/style&gt;';\ndocument.getElementsByTagName('head')[0].appendChild(htmlDiv.childNodes[1]);\n</code></pre>\n\n<p>It seems IE does not allow setting <code>innerText</code>, <code>innerHTML</code> or using <code>appendChild</code> on <code>style</code> elements. Here is a <a href=\"http://www.quirksmode.org/bugreports/archives/2006/01/IE_wont_allow_documentcreateElementstyle.html\">bug report</a> which demonstrates this, although I think it identifies the problem incorrectly. The workaround above is from the comments on the bug report and has been tested in IE6 and IE9.</p>\n\n<p>Whether you use this, document.write or a more complex solution will really depend on your situation.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>Is there a way to add css from a string in the javascript file to the head of a document with javascript?</p>\n\n<p>Let's say we have a webpage, which has a lightbox script, this script requires a css file to function. </p>\n\n<p>Now adding this css file with <code>&lt;link&gt;</code> will make the css file download even for people that don't have js enabled. </p>\n\n<p>I know that I can dynamically load the css file with the script, but that also means that there will be 2 http requests, and in cases where there is little to no css in the file I find this inefficient. </p>\n\n<p>So I thought to myself, what if you could put the css that you have in the css file, into the script, have the script parse the css and add it into the head, or even better just have the script add the css directly into the <code>&lt;head&gt;</code> of the document. </p>\n\n<p>But I have found nothing online that suggests that this is possible, so is it possible to add css to the head with js?</p>\n\n<p><strong>edit:</strong></p>\n\n<p>I edited roryf's answer to work cross browser (except IE5)</p>\n\n<p>Javascript:</p>\n\n<pre><code> function addcss(css){\n    var head = document.getElementsByTagName('head')[0];\n    var s = document.createElement('style');\n    s.setAttribute('type', 'text/css');\n    if (s.styleSheet) {   // IE\n        s.styleSheet.cssText = css;\n    } else {                // the world\n        s.appendChild(document.createTextNode(css));\n    }\n    head.appendChild(s);\n }\n</code></pre>\n",
            "last_activity_date": 1421422135,
            "question_id": 3922139,
            "score": 20,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "Add CSS to &lt;head&gt; with JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Here is the solution</p>\n\n<pre><code>$gutter: 10;\n\n@each $i in $gutter {\n  .g#{$i}{\n     background: red;\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>$gutter: 10;\n\n.grid#{$gutter} {\n    background: red;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>To add to @glortho's answer: From the <a href=\"http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#interpolation_\">Sass Reference on \"Interpolation\"</a>:</p>\n\n<blockquote>\n  <p>You can also use SassScript variables in selectors and property names using #{} interpolation syntax:</p>\n</blockquote>\n\n<pre><code>$gutter: 10;\n\n.grid#{$gutter} {\n    background: red;\n}\n</code></pre>\n\n<p>While the answer you gave yourself solves the problem, the <a href=\"http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#each-directive\">@each</a> directive is not needed to make interpolation work \u2013 and as your <code>$gutter</code> only contains one value, there's no need for a loop.</p>\n\n<p>You could however use a <a href=\"http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#lists\">Sass list</a> and <a href=\"http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#each-directive\">@each</a></p>\n\n<pre><code>$grid: 10, 40, 120, 240;\n\n@each $i in $grid {\n  .g#{$i}{\n    width: #{$i}px;\n  }\n}\n</code></pre>\n\n<p>to generate the following output</p>\n\n<pre><code>.g10  { width: 10px; }\n.g40  { width: 40px; }\n.g120 { width: 120px; }\n.g240 { width: 240px; }\n</code></pre>\n\n<p><a href=\"https://gist.github.com/1464180\">or even more</a>.</p>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>I have this variable:</p>\n\n<pre><code>$gutter: 10;\n</code></pre>\n\n<p>I want to use it in a selector like so SCSS:</p>\n\n<pre><code>.grid+$gutter {\n    background: red;\n}\n</code></pre>\n\n<p>so the output becomes CSS:</p>\n\n<pre><code>.grid10 {\n    background: red;\n}\n</code></pre>\n\n<p>But this doesn't work. Is it possible?</p>\n",
            "last_activity_date": 1400559341,
            "question_id": 12743837,
            "score": 19,
            "tags": [
                "css",
                "variables",
                "sass"
            ],
            "title": "Can I use variables for selectors?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>The spacing causes the images to move as they are inline elements. If you want them to stack up, you could use the unordered list (as twitter does) as this will put each image inside a block element.</p>\n\n<p>Inline elements are displayed inline with text.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>try to add <code>img {margin:0;padding:0;float:left}</code></p>\n\n<p>in other words remove any default <code>margin</code> and <code>padding</code> of browsers for <code>img</code> and <code>float</code> them.</p>\n\n<p>Demo: <a href=\"http://jsfiddle.net/PZPbJ/\">http://jsfiddle.net/PZPbJ/</a></p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>You can also make all anchors to float-left and set margin-left to -1</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are serving your pages with Apache then you can use the Google PageSpeed Module. This has options that you can use to collapse whitespace:</p>\n\n<p><a href=\"http://code.google.com/speed/page-speed/docs/filter-whitespace-collapse.html\" rel=\"nofollow\">http://code.google.com/speed/page-speed/docs/filter-whitespace-collapse.html</a></p>\n\n<p>You do not have to use the more 'dangerous' options of PageSpeed.</p>\n\n<p>Also see the answers in this question for how to remove whitespace in CSS:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/2628050/ignore-whitespace-in-html\">Ignore whitespace in HTML</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you for some reason want to do it:</p>\n\n<ul>\n<li>without using <code>float</code>s, and;</li>\n<li>without collapsing the whitespace in your HTML (which is the easiest solution, and for what it's worth, what Twitter is doing)</li>\n</ul>\n\n<p>You can use the solution from here:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/5078239/how-to-remove-the-space-between-inline-block-elements/5078297#5078297\">How to remove the space between inline-block elements?</a></p>\n\n<p>I've refined it slightly since then.</p>\n\n<p><strong>See:</strong> <a href=\"http://jsfiddle.net/JVd7G/\">http://jsfiddle.net/JVd7G/</a></p>\n\n<p><code>letter-spacing: -1px</code> is to fix Safari.</p>\n\n<pre><code>div {\n    font-size: 0;\n    letter-spacing: -1px\n}\n\n&lt;div style=\"margin: 0; padding: 0; border: 0;\"&gt;\n    &lt;a href=\"/view/foo1\"&gt;&lt;img src=\"http://dummyimage.com/64x64/444/fff\" alt=\"Foo1\" /&gt;&lt;/a&gt;\n    &lt;a href=\"/view/foo2\"&gt;&lt;img src=\"http://dummyimage.com/64x68/888/fff\" alt=\"Foo2\" /&gt;&lt;/a&gt;\n    &lt;a href=\"/view/foo3\"&gt;&lt;img src=\"http://dummyimage.com/64x72/bbb/fff\" alt=\"Foo3\" /&gt;&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Simplest solution that doesn't muck with layout and preserves code formatting:</p>\n\n<pre><code>&lt;div style=\"margin: 0; padding: 0; border: 0;\"&gt;\n       &lt;a href=\"/view/foo1\"&gt;&lt;img src=\"foo1.jpg\" alt=\"Foo1\" /&gt;&lt;/a&gt;&lt;!--\n    --&gt;&lt;a href=\"/view/foo2\"&gt;&lt;img src=\"foo2.jpg\" alt=\"Foo2\" /&gt;&lt;/a&gt;&lt;!--\n    --&gt;&lt;a href=\"/view/foo3\"&gt;&lt;img src=\"foo3.jpg\" alt=\"Foo3\" /&gt;&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>It looks like using a table is the correct way to go about this, as whitespaces have no effect between cells.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Add <code>style=\"display:block\"</code> to your <code>img</code> tags.</p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I have a div with a bunch of image tags inside, here is an example:</p>\n\n<pre><code>&lt;div style=\"margin: 0; padding: 0; border: 0;\"&gt;\n    &lt;a href=\"/view/foo1\"&gt;&lt;img src=\"foo1.jpg\" alt=\"Foo1\" /&gt;&lt;/a&gt;\n    &lt;a href=\"/view/foo2\"&gt;&lt;img src=\"foo2.jpg\" alt=\"Foo2\" /&gt;&lt;/a&gt;\n    &lt;a href=\"/view/foo3\"&gt;&lt;img src=\"foo3.jpg\" alt=\"Foo3\" /&gt;&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Because there is whitespace between the tags, browsers will display some whitespace between the images (Chrome decides on 4px). How can I tell the browser to show NO whitespace whatsoever between the images, without placing the > and &lt; directly next to each other? I know letter-spacing applies in addition to what the browser decides to use, so that's useless even with a negative value. Basically I'm going for something like Twitter has at the bottom of their home page. I looked at their code and they're using an unordered list. I could just do that but I'd like the technical explanation for why there appears to be no way to eliminate the white space from between these images.</p>\n",
            "last_activity_date": 1378266440,
            "question_id": 6213354,
            "score": 19,
            "tags": [
                "html",
                "css",
                "whitespace",
                "removing-whitespace"
            ],
            "title": "How can I eliminate spacing between inline elements in CSS?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>@font-face {\n  font-family: \"Your typeface\";\n  src: url(\"type/filename.eot\");\n  src: local(\"\u263a\"),\n    url(\"type/filename.woff\") format(\"woff\"),\n    url(\"type/filename.otf\") format(\"opentype\"),\n    url(\"type/filename.svg#filename\") format(\"svg\");\n  }\n</code></pre>\n\n<p>more here\n<a href=\"http://nicewebtype.com/notes/2009/10/30/how-to-use-css-font-face/\" rel=\"nofollow\">http://nicewebtype.com/notes/2009/10/30/how-to-use-css-font-face/</a></p>\n\n<p>simple solution in your HTML</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n@font-face {\n    font-family: \"Ace Crikey\";\n    src: url(ace.ttf);\n}\n.ace {\n    font-family: \"Ace Crikey\";\n    font-size: 230%;\n}\n&lt;/style&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use Gimp or other graphic-software and make some GIFs of the needed icons from the Wingdings font.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use unicode characters such as </p>\n\n<h1>&#9998;</h1>\n\n<p><a href=\"http://www.fileformat.info/info/unicode/char/270e/index.htm\">http://www.fileformat.info/info/unicode/char/270e/index.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>To quote a website:</p>\n\n<blockquote>\n  <p>There was an endless debate between the people that said Mozilla should support the symbol font in its default configuration because that is a valuable ability and standards lawyers who said no, because they believe that support violates the HTML standard. So far, the obstructionists have prevailed.</p>\n</blockquote>\n\n<p><a href=\"http://hutchinson.belmont.ma.us/tth/Wfonts.html\" rel=\"nofollow\">http://hutchinson.belmont.ma.us/tth/Wfonts.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Mozilla and Opera are standard-compiliant. \nWingdings is not standard (what a surprise coming from Microsoft) because not mapped to Unicode, and so should never be used on a website.</p>\n\n<p>However, do not despair, most symbols are available in Unicode : check <a href=\"http://www.alanwood.net/demos/wingdings.html\" rel=\"nofollow\">http://www.alanwood.net/demos/wingdings.html</a> </p>\n\n<p><strong>Important addendum (october 2014) :</strong> As of <a href=\"http://www.unicode.org/versions/Unicode7.0.0/\" rel=\"nofollow\">Unicode v7</a>, released on June 16, 2014, all characters from Webdings and Wingdings have been added to Unicode. See the comment below.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>The Wingdings characters <em>can</em> be accessed in a Unicode-compliant manner, via the \"Private Use Area\" (codepoints <code>U+E000</code> to <code>U+F7FF</code>). These character codes are reserved for any font-specific symbols not part of the regular Unicode character set, and indeed Wingdingds maps all of its symbols to the subrange <code>U+F021</code> to <code>U+F0FF</code>.</p>\n\n<p>For instance, the triangular flag, which is mapped to <code>P</code> = <code>0x50</code> in legacy encoding, can be accessed via <code>U+F050</code> = <code>\uf050</code> = <code>&amp;amp;#xF050;</code> (HTML) = <code>\\F050</code> (CSS).</p>\n\n<p>I'm not sure about other browsers, but it does work in Firefox 12.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I was using the Wingdings font in the CSS for some symbols like a pencil and a home icon. </p>\n\n<p>It worked on IE, Chrome and Safari but not in Firefox and Opera. I googled it but did not find any better solution.</p>\n\n<p>Why doesn't it work in Firefox? I do need to use those icons, is there any way to use Wingdings in Firefox?</p>\n",
            "last_activity_date": 1412420138,
            "question_id": 7862569,
            "score": 18,
            "tags": [
                "html",
                "css",
                "firefox",
                "opera",
                "fontfamily"
            ],
            "title": "Wingdings font family does not seem to work on Firefox and Opera"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here you go:</p>\n\n<pre><code>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head runat=\"server\"&gt;\n&lt;title&gt;bluantinoo CSS Grayscale Bg Image Sample&lt;/title&gt;\n&lt;style type=\"text/css\"&gt;\n    div {\n        border: 1px solid black;\n        padding: 5px;\n        margin: 5px;\n        width: 600px;\n        height: 600px;\n        float: left;\n        color: white;\n    }\n     .grayscale {\n         background: url(yourimagehere.jpg);\n         -moz-filter: url(\"data:image/svg+xml;utf8,&lt;svg xmlns=\\'http://www.w3.org/2000/svg\\'&gt;&lt;filter id=\\'grayscale\\'&gt;&lt;feColorMatrix type=\\'matrix\\' values=\\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale\");\n         -o-filter: url(\"data:image/svg+xml;utf8,&lt;svg xmlns=\\'http://www.w3.org/2000/svg\\'&gt;&lt;filter id=\\'grayscale\\'&gt;&lt;feColorMatrix type=\\'matrix\\' values=\\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale\");\n         -webkit-filter: grayscale(100%);\n         filter: gray;\n         filter: url(\"data:image/svg+xml;utf8,&lt;svg xmlns=\\'http://www.w3.org/2000/svg\\'&gt;&lt;filter id=\\'grayscale\\'&gt;&lt;feColorMatrix type=\\'matrix\\' values=\\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale\");\n     }\n\n    .nongrayscale {\n        background: url(yourimagehere.jpg);\n    }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"nongrayscale\"&gt;\n        this is a non-grayscale of the bg image\n    &lt;/div&gt;\n    &lt;div class=\"grayscale\"&gt;\n        this is a grayscale of the bg image\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Tested it in FireFox, Chrome and IE. I've also attached an image to show my results of my implementation of this.<img src=\"http://i.stack.imgur.com/A767O.jpg\" alt=\"Grayscale Background Image in DIV Sample\"></p>\n\n<p><strong>EDIT:</strong> Also, if you want the image to just toggle back and forth with jQuery, here's the page source for that...I've included the web link to jQuery and and image that's online so you should just be able to copy/paste to test it out:</p>\n\n<pre><code>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head runat=\"server\"&gt;\n&lt;title&gt;bluantinoo CSS Grayscale Bg Image Sample&lt;/title&gt;\n&lt;script src=\"http://code.jquery.com/jquery-1.11.0.min.js\"&gt;&lt;/script&gt;\n&lt;style type=\"text/css\"&gt;\n    div {\n        border: 1px solid black;\n        padding: 5px;\n        margin: 5px;\n        width: 600px;\n        height: 600px;\n        float: left;\n        color: white;\n    }\n     .grayscale {\n         background: url(http://www.polyrootstattoo.com/images/Artists/Buda/40.jpg);\n         -moz-filter: url(\"data:image/svg+xml;utf8,&lt;svg xmlns=\\'http://www.w3.org/2000/svg\\'&gt;&lt;filter id=\\'grayscale\\'&gt;&lt;feColorMatrix type=\\'matrix\\' values=\\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale\");\n         -o-filter: url(\"data:image/svg+xml;utf8,&lt;svg xmlns=\\'http://www.w3.org/2000/svg\\'&gt;&lt;filter id=\\'grayscale\\'&gt;&lt;feColorMatrix type=\\'matrix\\' values=\\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale\");\n         -webkit-filter: grayscale(100%);\n         filter: gray;\n         filter: url(\"data:image/svg+xml;utf8,&lt;svg xmlns=\\'http://www.w3.org/2000/svg\\'&gt;&lt;filter id=\\'grayscale\\'&gt;&lt;feColorMatrix type=\\'matrix\\' values=\\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale\");\n     }\n\n    .nongrayscale {\n        background: url(http://www.polyrootstattoo.com/images/Artists/Buda/40.jpg);\n    }\n&lt;/style&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        $(document).ready(function () {\n            $(\"#image\").mouseover(function () {\n                $(\".nongrayscale\").removeClass().fadeTo(400,0.8).addClass(\"grayscale\").fadeTo(400, 1);\n            });\n            $(\"#image\").mouseout(function () {\n                $(\".grayscale\").removeClass().fadeTo(400, 0.8).addClass(\"nongrayscale\").fadeTo(400, 1);\n            });\n        });\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"image\" class=\"nongrayscale\"&gt;\n        rollover this image to toggle grayscale\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>You don't need to use complicated coding really!</p>\n\n<p>Greyscale Hover:</p>\n\n<p>-webkit-filter: grayscale(100%);</p>\n\n<p>Greyscale \"Hover-out\":</p>\n\n<p>-webkit-filter: grayscale(0%);</p>\n\n<hr>\n\n<p>I simply made my css class have a separate hover class and added in the second greyscale. It's really simple if you really don't like complexity.</p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I've searched a lot on the web but I cannot find a cross browser solution to fade a css backgrund image to greyscale and back.</p>\n\n<p>The only working solution is to apply CSS3 filter greyscale:</p>\n\n<pre><code>-webkit-filter: grayscale(100%);\n</code></pre>\n\n<p>but this works just with Chrome v.15+ and Safari v.6+\n(as you can see here: <a href=\"http://css3.bradshawenterprises.com/filters/\">http://css3.bradshawenterprises.com/filters/</a>)</p>\n\n<p>Many pages online speaks about this solution to grey out elements:</p>\n\n<pre><code>filter: url(\"data:image/svg+xml;utf8,&lt;svg xmlns=\\'http://www.w3.org/2000/svg\\'&gt;&lt;filter id=\\'grayscale\\'&gt;&lt;feColorMatrix type=\\'matrix\\' values=\\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale\"); /* Firefox 10+, Firefox on Android */\nfilter: gray; /* IE6-9 */\n</code></pre>\n\n<p>(as you can see here:<a href=\"http://www.karlhorky.com/2012/06/cross-browser-image-grayscale-with-css.html\">http://www.karlhorky.com/2012/06/cross-browser-image-grayscale-with-css.html</a>)</p>\n\n<p>But actually it does not seem to work for css background images, as the webkit filter do.</p>\n\n<p>Are there any solution (maybe with jquery?) to hack this lack of support for filter on less advanced browsers?</p>\n",
            "last_activity_date": 1418961680,
            "question_id": 16340159,
            "score": 16,
            "tags": [
                "css",
                "image",
                "background",
                "cross-browser",
                "grayscale"
            ],
            "title": "Greyscale Background Css Images"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You will need to use Javascript to do this.</p>\n\n<p>But just adjust the box class to adjust the margins of all the boxes at once.</p>\n\n<pre><code>// Calculate how many boxes can fit into one row\nvar columns = Math.floor(parentWidth / boxWidth);\n\n// Calculate the space to distribute the boxes evenly\nvar space = (parentWidth - (boxWidth * columns)) / columns;\n\n$('.boxClass').css('margin', space / 2);\n</code></pre>\n\n<p>-</p>\n\n<p>Example: <a href=\"http://jsfiddle.net/VLr45/1/\">http://jsfiddle.net/VLr45/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<blockquote>\n  <p>So my question is: can I realize something like this without\n  JavaScript?</p>\n</blockquote>\n\n<p>I went through the same exercise recently and finally gave up and used JavaScript. Even abandoning IE 7 and 8 (which isn't practical) I couldn't find a pure CSS solution. I guess you could hack together a long list of media queries to accomplish this in a limited fashion.</p>\n\n<p>I ended up writing a little (about 1K minified) library which handles width, height, proportionate scaling, max widths, scrolling, consistent margins and padding, etc.</p>\n\n<p>Here is a rough example using my own code: <a href=\"http://jsfiddle.net/CmZju/2/\" rel=\"nofollow\">http://jsfiddle.net/CmZju/2/</a>. I've placed a couple hundred elements in the example.</p>\n\n<blockquote>\n  <p>I would prefer a CSS-only solution, because I will have possibly up to\n  hundreds of divs on one page.</p>\n</blockquote>\n\n<p>The layout engine of the browser will have to perform the same (or similar) calculations that you do. Granted, it is highly optimized but I would test your JS solution on a few old PCs and a few mobile devices before discounting it as too slow. </p>\n\n<p>It looks like you are using absolute positioning. My informal tests show absolute layout to be significantly faster than float calculation. This makes sense if you think about the work that the browser must do to calculate a relatively sized and floated item, versus just drawing an element at a specific place with specific dimensions.</p>\n\n<p>If you wanted to really look at optimizing performance, you could only manipulate the content that was visible. This would be <em>much</em> more difficult than just resizing everything and would probably only be relevant if you had thousands of items on a page.</p>\n\n<p>If you end up going the script route, you might want to take a look at <a href=\"http://masonry.desandro.com/\" rel=\"nofollow\">jQuery Masonry</a> for additional ideas. I have heard good things about it and it gave me some good ideas for my own library.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Perhaps <a href=\"http://masonry.desandro.com/\" rel=\"nofollow\">MASONRY</a> can help with the placement?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The <em>closest</em> pure CSS solution is based on <code>text-align: justify</code>.</p>\n\n<p>Here are two of my answers showing the technique:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/6865194/fluid-width-with-equally-spaced-divs/6880421#6880421\">Fluid width with equally spaced DIVs</a></li>\n<li><a href=\"http://stackoverflow.com/questions/7041927/how-to-set-auto-margin-boxes-in-flexible-width-design-using-css/7042563#7042563\">How to set auto-margin boxes in flexible-width design using CSS?</a></li>\n</ul>\n\n<p>Here's a demo using your HTML/CSS: <a href=\"http://jsfiddle.net/thirtydot/5CJ5e/\">http://jsfiddle.net/thirtydot/5CJ5e/</a> (or <a href=\"http://jsfiddle.net/thirtydot/5CJ5e/show/\">fullscreen</a>)</p>\n\n<p>There's a difference in the way your JavaScript and this CSS handles the last row if there's a different number of boxes compared to the other rows.</p>\n\n<p>Your JavaScript does this: </p>\n\n<p><img src=\"http://i.stack.imgur.com/tjI5i.png\" alt=\"\"></p>\n\n<p>My CSS does this:</p>\n\n<p><img src=\"http://i.stack.imgur.com/k4Ea2.png\" alt=\"\"></p>\n\n<p>If what the CSS does with a different number of boxes on the last row is unacceptable, you <em>could</em> add some extra invisible boxes to complete the row:</p>\n\n<p><a href=\"http://jsfiddle.net/thirtydot/5CJ5e/1/\">http://jsfiddle.net/thirtydot/5CJ5e/1/</a> (or <a href=\"http://jsfiddle.net/thirtydot/5CJ5e/1/show/\">fullscreen</a>)</p>\n\n<p>Doing this has the issue that the invisible boxes increase the height of the containing element. If this is a problem, I can't think of a way to fix it without using a little JavaScript:</p>\n\n<p><a href=\"http://jsfiddle.net/thirtydot/5CJ5e/2/\">http://jsfiddle.net/thirtydot/5CJ5e/2/</a> (or <a href=\"http://jsfiddle.net/thirtydot/5CJ5e/2/show/\">fullscreen</a>)</p>\n\n<p>Of course, since JavaScript is now being used, you might as well use it to add the invisible boxes in the first place (instead of sullying the HTML):</p>\n\n<p><a href=\"http://jsfiddle.net/thirtydot/5CJ5e/5/\">http://jsfiddle.net/thirtydot/5CJ5e/5/</a> (or <a href=\"http://jsfiddle.net/thirtydot/5CJ5e/5/show/\">fullscreen</a>)</p>\n\n<p><sub>(<a href=\"http://jsfiddle.net/thirtydot/5CJ5e/4/\">I also wrote a more complicated JavaScript fix</a> for this in an earlier revision, before the idea of invisible boxes was brought to me. There should be no reason to use my old fix now.)</sub></p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>I have multiple divs with a fixed width and height (think about some sort of catalog view with article pictures). Now I want to show them similar to the behavior of float:left. This ensures that the larger your browser window is, the more divs are shown in one row.</p>\n\n<p>The downside of the float:left solution is, that there is a big white gap on the right side, until another div will fit. Now I have the job to distribute the divs evenly one the page, and instead of a big white gap on the right side, there should be evenly distributed gaps between the single divs.</p>\n\n<p>A solution in JavaScript is easy: <a href=\"http://dl.dropbox.com/u/2719942/css/columns.html\">http://dl.dropbox.com/u/2719942/css/columns.html</a></p>\n\n<p>You can see, if you resize the browser window, it behaves similar to float:left, but the space is evenly distributed between the boxes. The column and row count is dynamically calculated with JavaScript:</p>\n\n<pre><code>  function updateLayout() {\n    var boxes = document.getElementsByClassName('box');\n    var boxWidth = boxes[0].clientWidth;\n    var boxHeight = boxes[0].clientHeight;\n    var parentWidth = boxes[0].parentElement.clientWidth;\n\n    // Calculate how many boxes can fit into one row\n    var columns = Math.floor(parentWidth / boxWidth);\n\n    // Calculate the space to distribute the boxes evenly\n    var space = (parentWidth - (boxWidth * columns)) / columns;\n\n    // Now let's reorder the boxes to their new positions\n    var col = 0;\n    var row = 0;\n    for (var i = 0; i &lt; boxes.length; i++) {\n      boxes[i].style.left = (col * (boxWidth + space)) + \"px\";\n      boxes[i].style.top = (row * boxHeight) + \"px\";\n\n      if (++col &gt;= columns) {\n        col = 0;\n        row++;\n      }\n    }\n  }\n</code></pre>\n\n<p>Now I wonder if there is a solution without JavaScript? I would prefer a CSS-only solution, because I will have possibly up to hundreds of divs on one page.</p>\n\n<p>I looked into <a href=\"http://www.w3.org/TR/css3-flexbox/\">CSS3 Flexible Box Layout</a>, but this seems to be only useful for fixed column layouts. In my example, the column count gets calculated dynamically. Then I tried <a href=\"http://www.w3.org/TR/css3-multicol/\">CSS3 Multi-column Layout</a>, which I could get something similar working, but the divs are aligned vertically, cut off in the inside, and the browser support isn't there yet. This seems more useful for text, but in my case I have fixed divs with pictures, that shouldn't get cut off.</p>\n\n<p>So my question is: can I realize something like this without JavaScript?</p>\n",
            "last_activity_date": 1336768077,
            "question_id": 10548417,
            "score": 16,
            "tags": [
                "javascript",
                "html",
                "css",
                "css3"
            ],
            "title": "How to distribute floated elements evenly with a dynamic column and row count in CSS?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It's not by design, there's an <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=459144\">outstanding defect in Firefox</a> about this.  Should work OK in any WebKit browser.  In Firefox you either have to add border radius to the contained element too, or <a href=\"http://www.boogdesign.com/b2evo/index.php/2009/09/02/firefox-img-rounded-corners-svg?blog=2\">use some sort of hack</a>.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>If you remove <code>position: relative;</code> on both elements the outer element clip the child around the rounded corners. Not sure why, and if it is a bug.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I came here looking for an answer because I had a similar problem in Chrome 18.</p>\n\n<p>I was trying to have a rounded box with two elements inside of it - title and index number - with index number positioned absolutely at the bottom left corner of the box.</p>\n\n<p>What I noticed was if I had the HTML like this, the title element would bleed outside the rounded corners (border-radius) even though overflow was set to hidden on the parent element:</p>\n\n<pre><code>&lt;a&gt;\n    &lt;div style=\"overflow:hidden; border-radius:15px; position:relative;\"&gt;\n        &lt;div id=\"title\" style=\"text-align:center;\"&gt;Box Title&lt;/div&gt;\n        &lt;div id=\"index\" style=\"position:absolute; top:80px;\"&gt;1&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/a&gt;\n</code></pre>\n\n<p>But if I moved the relative positioning up one parent element everything looked good:</p>\n\n<pre><code>&lt;a style=\"position:relative;\"&gt;\n    &lt;div style=\"overflow:hidden; border-radius:15px;\"&gt;\n        &lt;div id=\"title\" style=\"text-align:center;\"&gt;Box Title&lt;/div&gt;\n        &lt;div id=\"index\" style=\"position:absolute; top:80px;\"&gt;1&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just wanted to chime in on this one since I found this with a similar problem.</p>\n\n<p>In a div with its overflow set to scroll, the border-radius didn't clip the content while scrolling unless the content was scrolled to the absolute top or bottom. Even then, the clipping only sometimes reappeared if I scrolled the document to the absolute top or bottom as well.</p>\n\n<p>On a lark I added a transparent border to the element and that seemed to enforce the clipping on the corners. Since I already had some space around the element, I just cut that in half and applied the remainder to the border thickness. Not ideal, but I ended up with the result I wanted.</p>\n\n<p>Tested in Chrome, Safari and Firefox on Mac.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a div with border-radius set to some value (let's say 10px), and a nested div that is the full width and height of its parent. </p>\n\n<pre><code>&lt;!-- ... --&gt;\n&lt;style type=\"text/css\"&gt;\ndiv.parent {\n    display: block;\n    position: relative;\n    width: 100px;\n    height: 100px;\n    border-radius: 10px;\n    background: #0000ff;\n    overflow: hidden;\n}\ndiv.inner {\n    display: block;\n    position: relative;\n    width: 100%;\n    height: 100%;\n    background: #ff0000;\n}\n&lt;/style&gt;\n&lt;!-- ... --&gt;\n&lt;div class=\"parent\"&gt;\n    &lt;div class=\"inner\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- ... --&gt;\n</code></pre>\n\n<p>I noticed that the parent does not clip the child around the rounded corners, in spite of overflow being set to hidden. Another stackoverflow thread indicates that this behavior is \"by design\":</p>\n\n<blockquote>\n  <p><a href=\"http://stackoverflow.com/questions/587814/how-do-i-prevent-an-image-from-overflowing-a-rounded-corner-box-with-css3\">http://stackoverflow.com/questions/587814/how-do-i-prevent-an-image-from-overflowing-a-rounded-corner-box-with-css3</a></p>\n</blockquote>\n\n<p>However, upon digging up the working draft for CSS3 backgrounds and borders...</p>\n\n<blockquote>\n  <p><a href=\"http://www.w3.org/TR/css3-background/#corner-clipping\">http://www.w3.org/TR/css3-background/#corner-clipping</a></p>\n</blockquote>\n\n<p>...I couldn't help but notice the following description under the \"corner clipping\" section:</p>\n\n<blockquote>\n  <p>Other effects that clip to the border\n  or padding edge (such as \u2018overflow\u2019\n  other than \u2018visible\u2019) also must clip\n  to the curve. The content of replaced\n  elements is always trimmed to the\n  content edge curve</p>\n</blockquote>\n\n<p>So what am I missing? Is the content supposed to be clipped to the corners? Am I looking at outdated information? Am I doing it wrong?</p>\n",
            "last_activity_date": 1367424509,
            "question_id": 3248734,
            "score": 15,
            "tags": [
                "html",
                "css",
                "css3"
            ],
            "title": "CSS3 border-radius clipping issues"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The difference between using <code>position: fixed</code> and <a href=\"http://ryanfait.com/sticky-footer/\">Ryan Fait's method</a> is pretty fundamental.</p>\n\n<p>When using <code>position: fixed</code>, the footer is <strong>always visible</strong>, and that's not what a sticky footer is trying to do.<br>\nThe meaning of a sticky footer is to stay sticked to the bottom, <em>except</em> if the content is longer than the viewport height. In <em>that</em> case, the sticky footer will act like a normal footer, appearing just below the page content.</p>\n\n<p>On <a href=\"http://www.mcemperor.nl/pub/stickyfooter\">http://www.mcemperor.nl/pub/stickyfooter</a>, you can see the effect of a sticky footer.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I've seen <a href=\"http://ryanfait.com/sticky-footer/\">Ryan Fait's</a> method for sticky footer as well as one <a href=\"http://www.cssstickyfooter.com/\">here</a> and <a href=\"http://www.lwis.net/journal/2008/02/08/pure-css-sticky-footer/\">here</a>.</p>\n\n<p>Why are these people making templates for sticky footers when <code>#footer{position:fixed; bottom:0;}</code> will suffice? </p>\n\n<p>EDIT: </p>\n\n<p>I will add that using <code>position: fixed;</code> for a footer does break <code>margin: auto;</code> centering in (at least) some browsers, thus creating the need for a wrapper tag. Part of my problem with the above mentioned methods is the extra tags which are confusing, syntactically incorrect (for the \"HTML purists\") and it eats bandwidth. However, a single wrapper around the footer is still, in my opinion, better than a whole jumbled page template to have to start with. And, \"my\" way is still more straightforward and eats less bandwidth.</p>\n",
            "last_activity_date": 1408856892,
            "question_id": 2269369,
            "score": 15,
            "tags": [
                "html",
                "css",
                "footer",
                "sticky-footer"
            ],
            "title": "Why not used position:fixed for a &quot;sticky&quot; footer?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use <code>display:inline-block</code> with <code>white-space:nowrap</code>. Write like this:</p>\n\n<pre><code>.scrolls {\n    overflow-x: scroll;\n    overflow-y: hidden;\n    height: 80px;\n    white-space:nowrap\n}\n.imageDiv img {\n    box-shadow: 1px 1px 10px #999;\n    margin: 2px;\n    max-height: 50px;\n    cursor: pointer;\n    display:inline-block;\n    *display:inline;/* For IE7*/\n    *zoom:1;/* For IE7*/\n    vertical-align:top;\n }\n</code></pre>\n\n<p>Check this <a href=\"http://jsfiddle.net/YbrX3/\">http://jsfiddle.net/YbrX3/</a></p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>check this link\nhere i change display:inline-block\n    <a href=\"http://cssdesk.com/gUGBH\" rel=\"nofollow\">http://cssdesk.com/gUGBH</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use this code to  generate horizontal scrolling blocks contents.  I got this from here <a href=\"http://www.htmlexplorer.com/2014/02/horizontal-scrolling-webpage-content.html\" rel=\"nofollow\">http://www.htmlexplorer.com/2014/02/horizontal-scrolling-webpage-content.html</a></p>\n\n<pre><code>&lt;html&gt;\n&lt;title&gt;HTMLExplorer Demo: Horizontal Scrolling Content&lt;/title&gt;\n&lt;head&gt;\n&lt;style type=\"text/css\"&gt;\n#outer_wrapper {  \n    overflow: scroll;  \n    width:100%;\n}\n#outer_wrapper #inner_wrapper {\n    width:6000px; /* If you have more elements, increase the width accordingly */\n}\n#outer_wrapper #inner_wrapper div.box { /* Define the properties of inner block */\n    width: 250px;\n    height:300px;\n    float: left;\n    margin: 0 4px 0 0;\n    border:1px grey solid;\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;div id=\"outer_wrapper\"&gt;\n    &lt;div id=\"inner_wrapper\"&gt;\n        &lt;div class=\"box\"&gt;\n            &lt;!-- Add desired content here --&gt;\n            HTMLExplorer.com - Explores HTML, CSS, Jquery, XML, PHP, JSON, Javascript \n        &lt;/div&gt;\n        &lt;div class=\"box\"&gt;\n             &lt;!-- Add desired content here --&gt;\n            HTMLExplorer.com - Explores HTML, CSS, Jquery, XML, PHP, JSON, Javascript \n        &lt;/div&gt;\n        &lt;div class=\"box\"&gt;\n            &lt;!-- Add desired content here --&gt;\n            HTMLExplorer.com - Explores HTML, CSS, Jquery, XML, PHP, JSON, Javascript \n        &lt;/div&gt;\n        &lt;div class=\"box\"&gt;\n            &lt;!-- Add desired content here --&gt;\n            HTMLExplorer.com - Explores HTML, CSS, Jquery, XML, PHP, JSON, Javascript \n        &lt;/div&gt;\n        &lt;div class=\"box\"&gt;\n             &lt;!-- Add desired content here --&gt;\n            HTMLExplorer.com - Explores HTML, CSS, Jquery, XML, PHP, JSON, Javascript \n        &lt;/div&gt;\n        &lt;div class=\"box\"&gt;\n            &lt;!-- Add desired content here --&gt;\n            HTMLExplorer.com - Explores HTML, CSS, Jquery, XML, PHP, JSON, Javascript \n        &lt;/div&gt;\n        &lt;!-- more boxes here --&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm trying to create a <code>&lt;div&gt;</code> with a series of photos which are horizontally scrollable only. </p>\n\n<p>It should look something like this <a href=\"http://cssdesk.com/L6Dsa\">LINK</a>; </p>\n\n<p>However the above is only achieved by specifying a width for the <code>&lt;div&gt;</code> which contains the photos (so they don't 'word-wrap'). If I don't put a width - it looks like this;<a href=\"http://cssdesk.com/zLQZ3\">LINK</a></p>\n\n<p>What can I do using CSS to prevent putting in a fixed width as the images may vary. </p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1392141179,
            "question_id": 9925754,
            "score": 14,
            "tags": [
                "html",
                "css",
                "horizontal-scrolling"
            ],
            "title": "CSS horizontal scroll"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>Answer #1:</strong> No.</p>\n\n<p>Semi-colons are required only <strong>between</strong> declarations.</p>\n\n<blockquote>\n  <p>A declaration-block (also called a\n  {}-block in the following text) starts\n  with a left curly brace ({) and ends\n  with the matching right curly brace\n  (}). In between there must be a list\n  of zero or more semicolon-separated\n  (;) declarations.</p>\n</blockquote>\n\n<p>Source: <a href=\"http://www.w3.org/TR/css3-syntax/#rule-sets\">http://www.w3.org/TR/css3-syntax/#rule-sets</a></p>\n\n<blockquote>\n  <p>The value of the style attribute must\n  match the syntax of the contents of a\n  CSS declaration block (excluding the\n  delimiting braces)</p>\n</blockquote>\n\n<p>Source: <a href=\"http://www.w3.org/TR/css-style-attr/#syntax\">http://www.w3.org/TR/css-style-attr/#syntax</a></p>\n\n<p>Since you have only one declaration, there is nothing to separate, so no semicolons are needed.</p>\n\n<p>However, the CSS syntax allows for <strong>empty declarations</strong>, which means that you can add leading and trailing semicolons as you like. For instance, this is valid CSS:</p>\n\n<pre><code>.foo { ;;;display:none;;;color:black;;; }\n</code></pre>\n\n<p>and is equivalent to this: </p>\n\n<pre><code>.foo { display:none;color:black }\n</code></pre>\n\n<hr>\n\n<p><strong>Answer #2:</strong> No.</p>\n\n<blockquote>\n  <p>A declaration is either empty or\n  consists of a property, followed by a\n  colon (:), followed by a value. Around\n  each of these there may be <strong>whitespace</strong>.</p>\n</blockquote>\n\n<p>Source: <a href=\"http://www.w3.org/TR/css3-syntax/#declarations\">http://www.w3.org/TR/css3-syntax/#declarations</a></p>\n\n<p>You can add spaces in order to improve readability, but they have no relevance. </p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p><strong>Question 1</strong>: Yes (if you have more than one inline-style specified. Even it's not required for the last one, it's a good practice to append <code>;</code> after each one).</p>\n\n<p><a href=\"http://www.tizag.com/cssT/inline.php\" rel=\"nofollow\">Quote</a>: </p>\n\n<blockquote>\n  <p>The normal rules of CSS apply inside\n  the style attribute. Each CSS\n  statement must be separated with a\n  semicolon \";\" and colons appear\n  between the CSS property and its\n  value.</p>\n</blockquote>\n\n<p><strong>Question 2</strong>: No, but you can add it to be easier to read. For instance, Eclipse formatting automatically adds this space. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Q1: No, but I always include a trailing semicolon. Some years ago that semicolon could be a reason to a wrong render (or lack of) by some browsers. I guess nowadays is not a problem.</p>\n\n<p>Q2: No, both ways means the same. Your election to include an space after the colon should be based on personal preferences for legibility.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Question #1 - When specifying an inline style in an HTML element, is it necessary to include a trailing semi-colon? For example ...</p>\n\n<pre><code>&lt;div style=\"padding:10px;\"&gt;content&lt;/div&gt;\n</code></pre>\n\n<p>Question #2 - When specifying an inline style should a space be inserted after the colon separating attribute name from attribute value?</p>\n\n<pre><code>&lt;div style=\"padding: 10px;\"&gt;content&lt;/div&gt;\n</code></pre>\n\n<p>vs.</p>\n\n<pre><code>&lt;div style=\"padding:10px;\"&gt;content&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1303315112,
            "question_id": 5732486,
            "score": 14,
            "tags": [
                "css"
            ],
            "title": "Inline CSS formatting best practices - Two questions"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There are some workarounds I've discovered for this, such as adding a hash before position:</p>\n\n<pre><code>#position: absolute;\n</code></pre>\n\n<p>That hack was found here: <a href=\"http://www.jakpsatweb.cz/css/css-vertical-center-solution.html\" rel=\"nofollow\">Vertical Centering in CSS</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<blockquote>\n  <p>Everything works as expected until I add \"position: absolute\". Now it\n  can't place my content in the middle any more? Why not?</p>\n</blockquote>\n\n<p><code>position: absolute</code> forces <code>display: block</code>, read number two <a href=\"http://www.w3.org/TR/CSS2/visuren.html#dis-pos-flo\">here</a>.</p>\n\n<p>As for a workaround, I think you'll have to wrap it in another element:</p>\n\n<pre><code>&lt;div class=\"table-cell-wrapper\"&gt;\n    &lt;div class=\"table-cell\"&gt;\n        My text, should be align middle\n    &lt;/div&gt;\n&lt;/div&gt;\n\n.table-cell-wrapper {\n    position: absolute;\n}\n.table-cell {\n    height: 200px;\n    width: 200px;\n    vertical-align: middle;\n    background: #eee;\n    display: table-cell;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>here is the solution:</p>\n\n<pre><code>&lt;div style=\"position: absolute; /*your position*/\"&gt;\n    &lt;div class=\"table-cell\"&gt;\n        My text, should be align middle\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p><a href=\"http://jsfiddle.net/fQv97/\">http://jsfiddle.net/fQv97/</a></p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div class=\"table-cell\"&gt;\n    My text, should be align middle\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>.table-cell {\n    height: 200px;\n    width: 200px;\n    vertical-align: middle;\n    background: #eee;\n    display: table-cell;\n    position: absolute;\n}\n</code></pre>\n\n<p><strong>Problem</strong></p>\n\n<p>The text should be placed in the middle of my \"table cell\". Everything works as expected until I add \"position: absolute\". Now it can't place my content in the middle any more? Why not? It still knows my height and width because I set it in my CSS.</p>\n\n<p>Any clever workaround for this?</p>\n",
            "last_activity_date": 1326814330,
            "question_id": 8896965,
            "score": 13,
            "tags": [
                "css",
                "table",
                "vertical-alignment",
                "css-tables"
            ],
            "title": "CSS - Vertical align table-cell don&#39;t work with position absolute"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It is possible with the <a href=\"http://www.quirksmode.org/css/selector_attribute.html\">attribute selector</a>:</p>\n\n<pre><code>a[rel=external] {\n\n}\n</code></pre>\n\n<p><strong>Note:</strong> This is selector is <a href=\"http://www.quirksmode.org/css/contents.html#t13\"><em>not supported in IE6.</em></a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Use the <a href=\"http://reference.sitepoint.com/css/attributeselector\" rel=\"nofollow\">attribute selector</a>:</p>\n\n<pre><code>a[rel=\"external\"] {\n    color: red\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/thirtydot/yUmJk/\" rel=\"nofollow\">http://jsfiddle.net/thirtydot/yUmJk/</a></p>\n\n<p>Works in all modern browsers, and IE7+</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As Felix pointed out, you can style it via CSS with an attribute selector, but these won't work in some older browsers including IE6. The safer option is to do something like this, using jQuery:</p>\n\n<pre><code>$(document).ready(function()\n{ \n    $('a[rel=external]').addClass('external_link');\n})\n</code></pre>\n\n<p>and style the <code>.external_link</code> class appropriately.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Felix Kling and thirtydot suggested to use the <code>[att=val]</code> attribute selector (<code>a[rel=\"external\"]</code>). <strong>But</strong> this will only work if <code>external</code> is the <em>only</em> <code>rel</code> value. </p>\n\n<p>If you want to style links that could have 1 or more <code>rel</code> values, you should use the <code>[att~=val]</code> attribute selector:</p>\n\n<p><code>a[rel~=\"external\"]</code> (note the <a href=\"http://en.wikipedia.org/wiki/Tilde\">tilde</a> character)</p>\n\n<p>An example for such a link could be:</p>\n\n<pre><code>&lt;a href=\"http://google.com\" rel=\"external nofollow\"&gt;LINK&lt;/a&gt;\n</code></pre>\n\n<hr>\n\n<p>See <a href=\"http://www.w3.org/TR/css3-selectors/#attribute-representation\">http://www.w3.org/TR/css3-selectors/#attribute-representation</a> for the specification.</p>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<pre><code>&lt;a href=\"http://google.com\" rel=\"external\"&gt; LINK &lt;/a&gt;\n</code></pre>\n\n<p>is it possible to add css rules for rel=\"external\" ?</p>\n",
            "last_activity_date": 1396601570,
            "question_id": 5608808,
            "score": 13,
            "tags": [
                "css",
                "hyperlink"
            ],
            "title": "CSS - style a link based on its &quot;rel&quot; attribute?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try</p>\n\n<pre><code>&lt;div id=\"closelink\"&gt;\n   &lt;a href=\"\"&gt;Close&lt;/a&gt;\n   Click to close\n&lt;/div&gt;\n\n\n#closelink {\n    position: relative;\n    left: -9999px;\n}\n\n#closelink a {\n    position: relative;\n    left: 9999px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The <code>visibility</code> attribute can be overriden on children elements, so you are able to do this:</p>\n\n<pre><code>&lt;div id=\"closelink\"&gt;\n  &lt;a href=\"\"&gt;Close&lt;/a&gt;\n  Click to close\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>#closelink {\n    visibility:collapse;\n}\n\n#closelink a{\n    visibility:visible;\n}\n</code></pre>\n\n<p>And the result is this: <a href=\"http://jsfiddle.net/pavloschris/Vva84/\">http://jsfiddle.net/pavloschris/Vva84/</a></p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>It works but you can use <code>visibility:hidden</code> instead of <code>visibility:collapse</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To avoid the child element breaking to a new line (as happens with just using visibility: hidden/collapse; and visibility: visible), and to avoid drawing a 9999px block in the browser (generally frowned upon as it is unnecessary overhead), try this:</p>\n\n<pre><code>&lt;div id=\"closelink\"&gt;\n    &lt;a href=\"\"&gt;Close&lt;/a&gt;\n    Click to close\n&lt;/div&gt;\n\n\n#closelink {\n    position: relative;\n    visibility: hidden;\n}\n\n#closelink a {\n    position: absolute;\n    left: 0;\n    top: 0;\n    visibility: visible;\n}\n</code></pre>\n\n<p>You can adjust your <code>left: 0</code> value to provide some padding.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm having a little trouble with CSS and can't seem to find a solution. I have this HTML</p>\n\n<pre><code>&lt;div id=\"closelink\"&gt;\n  &lt;a href=\"\"&gt;Close&lt;/a&gt;\n  Click to close\n&lt;/div&gt;\n</code></pre>\n\n<p>Now I want to hide the text \u00abClick to close\u00bb only, without hiding neither the div, nor the link within it.</p>\n\n<p>Can this be done? (Come on, you can use CSS to create whole animations, I refuse to believe it can't be used to do something this easy...)</p>\n\n<p>Thanks everyone!</p>\n",
            "last_activity_date": 1392843231,
            "question_id": 15196630,
            "score": 12,
            "tags": [
                "css",
                "textnode"
            ],
            "title": "Hide text node in element, but not children"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Add the following to the <code>RegisterRoutes(RouteCollection routes)</code> method of the <code>Global.asax</code> file</p>\n\n<pre><code>routes.IgnoreRoute(\"pie.htc\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As a side note (and maybe it will fix your issue anyway) if you don't want to have the .htc file at your root, you can do the following to get around the relative pathing issues inherent with behaviors. It's not the prettiest solution, but it works well -</p>\n\n<p>In your css, define the behavior as:<code>behavior: url(CSS3PIE);</code></p>\n\n<p>Then in your Global.asax.cs have the following code:</p>\n\n<pre><code>protected void Application_BeginRequest(Object sender, EventArgs e)\n{\n    CheckForCSSPIE();\n}\n\nprivate void CheckForCSSPIE()\n{\n    if (!Regex.IsMatch(Request.Url.ToString(), \"CSS3PIE\"))\n    {\n        return;\n    }\n\n    const string appRelativePath = \"~/Content/css/PIE.htc\";\n    var path = VirtualPathUtility.ToAbsolute(appRelativePath);\n    Response.Clear();\n    Response.StatusCode = (int)HttpStatusCode.MovedPermanently;\n    Response.RedirectLocation = path;\n    Response.End();\n}\n</code></pre>\n\n<p>It will simply look for any request matching \"CSS3PIE\" and return the .htc file from the correct location.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>In your stylesheet, add the following <code>behavior</code>:</p>\n\n<pre><code>behavior: url(\"/Content/PIE/PIE.css\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been trying to use the <a href=\"http://css3pie.com/\">Css3pie</a> in my MVC project to render rounded corner panel but have no luck so far.</p>\n\n<p>I follow the sample with normal html page and it works perfectly but not in my MVC project.\nI think it is something to do with the path of the 'pie.htc' file that is being confused in MVC</p>\n\n<p>I place the 'pie.htc' file in project folder (root) and in my css file, i use:\nbehavior: url(/PIE.htc);</p>\n\n<p>I think the MVC router needs to be modified to accept htc file extension?\nSorry im new with MVC. Has anyone tried pie.htc and have it working in MVC project, please help?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1348827029,
            "question_id": 4870870,
            "score": 12,
            "tags": [
                "css",
                "asp.net-mvc",
                "asp.net-mvc-2",
                "css3pie"
            ],
            "title": "css3pie in MVC, where to place the pie.htc file?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The problem goes away for me when I remove the <code>background-size</code> property. I think it was the scaling of the large image that was causing the problem. If that doesn't work, just remove the background image altogether. However, I've never heard of a large background image causing lag before.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>I had the same problem and solved it using this jQuery plugin :\n<a href=\"http://srobbin.com/jquery-plugins/jquery-backstretch/\">http://srobbin.com/jquery-plugins/jquery-backstretch/</a></p>\n\n<p>It doesn't use any CSS3 property but it works fine and doesn't have any performance issue on Chrome 13 or Firefox 6.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I changed the background of my discussion forum using the CSS below</p>\n\n<p><a href=\"http://forum.antinovaordemmundial.com\" rel=\"nofollow\">http://forum.antinovaordemmundial.com</a></p>\n\n<pre><code>html {\n    background: url(http://antinovaordemmundial.com/mystuff/logo_blog.jpg) no-repeat center center fixed;\n    background-image: url(http://antinovaordemmundial.com/mystuff/logo_blog.jpg);\n    background-repeat-x: no-repeat;\n    background-repeat-y: no-repeat;\n    background-attachment: fixed;\n    background-position-x: 50%;\n    background-position-y: 50%;\n    background-origin: initial;\n    background-clip: initial;\n    background-color: initial;\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n}\n</code></pre>\n\n<p>The image is 1600x711 and 88k. The scrolling of the pages are now very slow. Is the CSS problematic or the image should be smaller somehow?</p>\n\n<p>Edit: I tried changing to:</p>\n\n<pre><code>body {        \n    color: #000;\n    font-family: Verdana, Arial, Sans-Serif;\n    font-size: 13px;\n    text-align: center; /* IE 5 fix */\n    line-height: 1.4;\n    background-attachment: fixed;\n    background-clip: initial;\n    background-color: #51010E;\n    background-image: url(http://antinovaordemmundial.com/mystuff/logo_blog.jpg);\n    background-origin: initial;\n    background-position: initial initial;\n    background-repeat: initial initial;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 0;\n    padding-bottom: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-top: 0;\n}\n</code></pre>\n\n<p>But it is still very slow on scrolling.</p>\n",
            "last_activity_date": 1407972106,
            "question_id": 7033979,
            "score": 10,
            "tags": [
                "css",
                "background",
                "vertical-scrolling",
                "smooth-scrolling"
            ],
            "title": "My fixed background made scrolling the site very slow, what can I do to improve it?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Try:</p>\n\n<pre><code>selector {\n    -moz-border-radius: 3px;\n    -webkit-border-radius: 3px;\n    border-radius: 3px;\n}\n</code></pre>\n\n<p>This will work in Firefox, Safari, Chrome and any other CSS3-compatible browser. It may be easier to make a separate class for this - there are 3 statements which are needed for full compatibility.  </p>\n\n<p>Also, try <a href=\"http://www.cssjuice.com/25-rounded-corners-techniques-with-css/\">here (cssjuice.com)</a> for some more techniques using images.  </p>\n\n<p>I'm not completely sure whether this will work with a table, but if you're in complete control - don't use a <code>&lt;table&gt;</code> for layout. Please.</p>\n\n<p>(Note - I think its fine to use the table tag for tabular data, just not where DIVs should be used.)</p>\n\n<p><strong>Update</strong>: to apply to one corner only:</p>\n\n<pre><code>-moz-border-radius-topleft: 3px;\n/* ... */\n-webkit-border-top-left-radius: 3px;\n</code></pre>\n\n<p>Continue for <code>topright</code> or <code>top-right</code>.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>The only way to have support for all browsers is to use image backgrounds on the anchor tags, usually combined with an image on it's container tag as well.</p>\n\n<p>For instance with HTML like this:</p>\n\n<pre><code>&lt;ul&gt;\n &lt;li&gt;&lt;a href=\"\"&gt;something&lt;/a&gt;&lt;/li&gt;\n&lt;ul&gt;\n</code></pre>\n\n<p>I would place one image on the anchor tag, and one on the li, so that the element can be variable width and still have rounded corners.  </p>\n\n<p>There are CSS3 features and JS solutions that may also work, but are not completely cross browser compatible. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try the CSS 3 selectors:</p>\n\n<pre><code>.element {\nborder-radius:5px\n}\n</code></pre>\n\n<p>For Safari, Google Chrome (Webkit) and Mozilla use the following two selectors (although Mozilla supports the CSS 3 selector (not sure if the other one does):</p>\n\n<pre><code>.element {\n-webkit-border-radius:5px;\n-moz-border-radius:5px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can round them through CSS but only for <a href=\"http://west-wind.com/weblog/posts/819880.aspx\" rel=\"nofollow\">supported browsers</a>.</p>\n\n<p>Your other non-image options are script-based like <a href=\"http://www.atblabs.com/jquery.corners.html\" rel=\"nofollow\">jQuery Corners</a> or a similar script.</p>\n\n<p>Both of these methods have caveats (IE support, visitors with JavaScript disabled, etc.). If you're set on using them, I would focus on getting them to work with CSS in the browsers that support it and just make sure that it looks acceptable without them in IE.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you don't have to work with all browsers, consider using border-radius.  See <a href=\"http://www.css3.info/preview/rounded-border/\" rel=\"nofollow\">http://www.css3.info/preview/rounded-border/</a> for more information. Newer Mozilla and Webkit-based browsers support either this tag or moz-border-radius and -webkit-border-radius. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is a way that isn't browser dependent (that I know of, it works on the popular browsers.)  It doesn't use a table, so you'll have to put the table in the most deeply nested div and it is lengthy and heavy, but it works.  The images referred to in the code below are the rounded corners you draw yourself.  The radius of the corner is 44px.</p>\n\n<p>This is a variation on: <a href=\"http://www.webcredible.co.uk/user-friendly-resources/css/css-round-corners-boxes.shtml\" rel=\"nofollow\">http://www.webcredible.co.uk/user-friendly-resources/css/css-round-corners-boxes.shtml</a></p>\n\n<pre><code>&lt;div class=\"tl\"&gt;\n    &lt;div class=\"tr\"&gt;\n        &lt;div class=\"bl\"&gt;\n            &lt;div class=\"br\"&gt;\n                &lt;div class=\"t\"&gt;\n                    &lt;div class=\"b\"&gt;\n                        &lt;div class=\"l\"&gt;\n                            &lt;div class=\"r\"&gt;\n                                &lt;div&gt;Do or do not, there is no try&lt;/div&gt;\n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n.tl\n{\n    font-family: Verdana, Arial;\n    font-size: 16px;\n    position: relative;\n    left: 30px; \n}\n\n.tl, .tr, .bl, .br\n{\n    width: 655px;\n    height: 250px;\n}\n\n.t\n{\n    width: 567px;\n    height: 250px;    \n    margin: 0 0 0 44px;\n}\n\n.b\n{\n    width: 567px;\n    height: 250px;    \n}\n\n.l\n{\n    width: 655px;\n    height: 162px;    \n    margin: 44px 0 0 -44px; \n}\n\n.r\n{\n    width: 655px;\n    height: 162px; \n}\n\n.bl\n{\n    background: url(/images/front/rcbla.png) 0 100% no-repeat;\n}\n\n.br\n{\n    background: url(/images/front/rcbra.png) 100% 100% no-repeat;\n}\n\n.tl\n{\n    background: url(/images/front/rctla.png) 0 0 no-repeat;\n}\n\n.tr\n{\n    background: url(/images/front/rctra.png) 100% 0 no-repeat;\n} \n\n.t\n{\n    background: url(/images/front/adot.png) 0 0 repeat-x;\n}\n\n.b\n{\n    background: url(/images/front/adot.png) 0 100% repeat-x;\n}\n\n.l\n{\n    background: url(/images/front/adot.png) 0 0 repeat-y;\n}\n\n.r\n{\n    background: url(/images/front/adot.png) 100% 0 repeat-y;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm assuming that rounded corner CSS above wouldn't work in IE6. Something you may want to keep in mind.</p>\n\n<p>Three stacked divs with background images is the easiest approach.</p>\n\n<pre><code>&lt;div class=\"top\"&gt;&amp;nbsp;&lt;/div&gt;\n&lt;div class=\"mid\"&gt; &lt;!-- content --&gt; &lt;/div&gt;\n&lt;div class=\"bottom\"&gt;&amp;nbsp;&lt;/div&gt;\n</code></pre>\n\n<p>The background for your div with id mid would be vertically tiled through CSS. Works in IE6.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I tend to go with the <code>border-radius</code> option person-b covered earlier. </p>\n\n<p>If I absolutely have to support IE (i.e. it's a fundamental part of the design and not just a little enhancement), I've had some success with <a href=\"http://www.dillerdesign.com/experiment/DD%5Froundies/\" rel=\"nofollow\">dd_Roundies</a>, which makes use of VML to get the job done.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Check out <a href=\"http://www.easyimg.com\" rel=\"nofollow\" title=\"www.easyimg.com\">www.easyimg.com</a>, simple solution that does not require css hacks or hours in photoshop.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've seen a lot of codes for this but it appears non of them work very well or at all. I've used pictures for rounded corners but I need the code so that it will round the border of a <code>&lt;table&gt;</code>. The only solutions I've found for this problem are to have images In the cells around the border. Anything else I can try?</p>\n",
            "last_activity_date": 1253853364,
            "question_id": 1127227,
            "score": 10,
            "tags": [
                "html",
                "css"
            ],
            "title": "CSS Rounded corners"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<h3>Update</h3>\n\n<p>As of January 2015, this now works again with the release of Firefox 35. See the answer below for historical reference.</p>\n\n<p>&nbsp;</p>\n\n<hr>\n\n<hr>\n\n<hr>\n\n<p>&nbsp;</p>\n\n<h1>Background</h1>\n\n<p>The hack that was used is this:</p>\n\n<pre><code>select {\n    -moz-appearance: none;\n    text-indent: 0.01px;\n    text-overflow: '';\n}\n</code></pre>\n\n<p>In my testing, on FF 29, <code>-moz-appearance:none;</code> had no affect. What caused the arrow box to not appear was the second two lines. It said that any overflow is to be replaced by an empty string, and then it used text-indent to cause the <code>select</code> to overflow. Since the arrow box is rendered as a single element, similar to a single letter, this caused it to be replaced by the empty string.</p>\n\n<h1>What Happened</h1>\n\n<p>Someone at Mozilla noticed that if you have padding on a dropdown <code>select</code>, the arrow doesn't change size. <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=963970\" rel=\"nofollow\"><strong>According to the bug report</strong></a>, this issue has now been fixed:</p>\n\n<p><img src=\"http://i.stack.imgur.com/NQxRq.png\" alt=\"enter image description here\"></p>\n\n<p>The problem is that this has divorced the arrow from normal CSS rules. I've tried <code>padding</code>, <code>text-indent</code>, <code>margin</code>, <code>white-space</code>, <code>text-wrap</code>, and a few more, and I can't find anything that will affect it. <a href=\"https://gist.github.com/joaocunha/6273016#comment-1222888\" rel=\"nofollow\"><strong>Elsewhere around</strong></a> <a href=\"http://stackoverflow.com/questions/23680116/how-can-i-hide-a-select-arrow-in-firefox-30\"><strong>the internet</strong></a>, people are saying the same thing, unfortunately.</p>\n\n<h1>What Now</h1>\n\n<ol>\n<li><p>We have a few options. You can use an overlay combined with <code>pointer-events:none</code> to style the dropdown however you want: <a href=\"http://red-team-design.com/making-html-dropdowns-not-suck/\" rel=\"nofollow\"><strong>Tutorial</strong></a></p></li>\n<li><p>You can create a completely separate dropdown to replace <code>select</code>, using Javascript: <a href=\"http://tympanus.net/codrops/2012/10/04/custom-drop-down-list-styling/\" rel=\"nofollow\"><strong>Tutorial</strong></a></p></li>\n</ol>\n\n<p>We can also watch the <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=649849\" rel=\"nofollow\"><strong>request on Firefox's Bugzilla</strong></a>, and hope that someday they will create a non-hacky way to do this. <strong>PLEASE NOTE</strong>: Don't go there and start posting comments about wanting it. Part of the reason it's been so delayed is that people threw a fit. It may help to <a href=\"https://bugzilla.mozilla.org/page.cgi?id=voting/user.html&amp;bug_id=649849#vote_649849\" rel=\"nofollow\"><strong>vote for the issue</strong></a>.</p>\n\n<hr>\n\n<h1>Update Sept. 2014</h1>\n\n<p>This is now being <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=649849#c152\" rel=\"nofollow\"><strong>actively worked on</strong></a> for Firefox. 2 patches have been submitted and have been awaiting review for a week. Most probably scenario is that this makes it into FF35 Aurora, and we have a few weeks for it to get reviewed and approved before the cutoff date (Firefox operates on a 6 week release schedule). It could also be delayed, and it could even theoretically be \"uplifted\", meaning patched in the current Aurora and Beta versions, to get released sooner.</p>\n\n<hr>\n\n<h1>Update Oct. 2014</h1>\n\n<p>This how now been <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=649849#c161\" rel=\"nofollow\"><strong>officially resolved</strong></a>! Kind of. A patch to allow users to hide the dropdown arrow element has been committed and will be shipped with <a href=\"https://developer.mozilla.org/en-US/Firefox/Releases/35\" rel=\"nofollow\"><strong>Firefox 35</strong></a> in January 2015.</p>\n\n<p>This will only allow users to hide the arrow. To style it is another issue, which has been spun off into <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1076846\" rel=\"nofollow\"><strong>another bug ticket</strong></a> which will be considered in the future.</p>\n\n<hr>\n\n<h1>Update Jan. 2015</h1>\n\n<p>This has now been fixed! <a href=\"https://developer.mozilla.org/en-US/Firefox/Releases/35\" rel=\"nofollow\">Firefox 35</a> came out on January 13, and you can now use <code>-moz-appearance:none</code> to remove the arrow.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>Although it's a quite dirty hack, you can fix this by adding another overlay element above the arrow down in the CSS of your select wrapper (in my case .form-control-select):</p>\n\n<pre><code>/* The arrow */\n.form-control-select:after {\n    content: \"\\f078\";\n    z-index: 3;\n    pointer-events: none;\n    position: absolute;\n    right: 10px;\n    top: 9px;\n    padding: 6px 7px;\n    font-size: 10px;\n}\n\n/* the white overlay to hide Firefox' arrow */    \n.form-control-select:before {\n    position: absolute;\n    right: 1px;\n    top: 2px;\n    bottom: 1px;\n    width: 20px;\n    background: #fff;\n    content: \"\";\n    z-index: 2;\n    border: 1px solid transparent;\n    border-bottom-right-radius: 3px;\n    border-top-right-radius: 1px;\n    pointer-events: none; \n}\n</code></pre>\n\n<p>My HTML:</p>\n\n<pre><code>&lt;div class=\"form-control-select\"&gt;\n  &lt;select class=\"form-control\"&gt;\n    &lt;option value=\"1\"&gt;one&lt;/option&gt;\n    &lt;option value=\"2\"&gt;two&lt;/option&gt;\n  &lt;/select&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yes ! Is good ! Thks</p>\n\n<p><a href=\"http://jsfiddle.net/wiloud/mzbv7/\">JS FIDDLE</a></p>\n\n<pre><code>.customSelect {\nfont-size: inherit;\nmargin: 0;\npadding: 0.5em;\nbackground-color: transparent;\ncolor: #393939;\nopacity:1;\n-moz-appearance: none;\nborder: 0 none;\nborder-radius: 0px;\nborder:1px solid #B1B2B3;\npadding-right: 2.5em;\n</code></pre>\n\n<p>}</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>.SelectBox select {\n   background: transparent;\n   width: 182px;\n   padding-right: 29px;\n   font-size: 100%;\n   text-indent: 0.01px;\n   text-overflow: \"\";\n   border: none;\n   height: 17.5px;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.SelectBox {\n   width: 154px;\n   height: 15.8px;\n   overflow: hidden;\n   background: url(\"Images/Arrow.png\") no-repeat 141px center #ffffff;\n   border-radius:2px;\n   border: 1px solid #B90F22;\n}\n\n&lt;div class=\"SelectBox\"&gt;\n   &lt;select&gt;\n        &lt;option&gt;1&lt;/option&gt;\n        &lt;option&gt;2&lt;/option&gt;\n        &lt;option&gt;3&lt;/option&gt;\n        &lt;option&gt;4&lt;/option&gt;\n   &lt;/select&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>This seems to work fine in every major browser but IE. IE is falling back to the default dropdown so that shouldn't be too much of a problem.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The response provide by Mozilla Firefox to this issue is just unacceptable. The browser is broken and is nothing more than an open sore for malicious code.  They promote the V29-30 browser as a security update, but it took over a week since the release date for a notification to appear for V30.</p>\n\n<p>My own response will be to do nothing and I encourage all other developers to do the same. Eventually users will get tired of the design inconsistencies and abandon Mozilla Firefox like they have been in even greater numbers.</p>\n\n<p>If a reasonable support request is meet with sheer contempt and other browsers can do it but Mozilla Firefox no longer can.   It\u2019s not me that has to fix my code, but Mozilla Firefox has to fix theirs!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use this solution for firefox, using vendor pseudo class :-moz-any() and pointer events only for mozilla and do not affect other browsers, because both is valid since version 3.6.</p>\n\n<p>here is a jsbin example\n<a href=\"http://jsbin.com/pozomu/4/edit\" rel=\"nofollow\">http://jsbin.com/pozomu/4/edit</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I fixed my this issue by giving some style to div and select individually.</p>\n\n<p>Anyone can change his width and other style properties a/c to needs. :)</p>\n\n<p>Here is the js fiddle for it.  <a href=\"http://jsfiddle.net/mzbv7/108/\" rel=\"nofollow\">JSFIDDLE</a>\ntested on all the browsers.</p>\n\n<p>select::-ms-expand for IE and -webkit-user-select: none for chrome.</p>\n\n<pre><code> &lt;div  class=\"common-dropdown-small-div\" style=\"width: 220px\"&gt;\n    &lt;select id=\"select\" class=\"common-dropdown-project-select\"&gt;\n        &lt;option&gt;\n            apple\n        &lt;/option&gt;\n        &lt;option&gt;\n            blackberry\n        &lt;/option&gt;\n        &lt;option&gt;\n           pumpkin\n        &lt;/option&gt;\n    &lt;/select&gt;\n&lt;/div&gt;\n.common-dropdown-small-div{\n  border: 1px solid rgb(208, 208, 208);\n  border-radius: 5px !important;\n  overflow: hidden; \n}\n\n.common-dropdown-project-select{\n  width: 100% !important;\n  background-image: url(\"http://upload.wikimedia.org/wikipedia/en/f/f1/Down_Arrow_Icon.png\");\n  background-position: 97% 60%, 0 0 ! important;\n  background-repeat: no-repeat;\n  background-size: 25px 16px;\n  border: none  ! important;    \n  outline : medium none !important;\n  display: inline-flex !important;\n  height: 33px !important;\n  vertical-align: top;\n  -webkit-appearance: none;\n}\n\nselect::-ms-expand {\n  display: none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One option is to wrap the <code>select</code> elements in container elements with <code>overflow: hidden</code>.  Increase the width of the <code>select</code> elements to push the down arrow to the right and out of the picture.  Then add a border to the container elements that matches the <code>select</code> elements.</p>\n\n<pre><code>.select-container {\n    overflow: hidden;\n    display: inline-block;\n    height: 33px;\n    border-right: 1px solid #B3B6BD;\n}\n\n.select-container select {\n    width: 113%;\n}\n</code></pre>\n\n<p>The problem is that that this will affect styles set on <code>focus</code> or validation errors, which is why I ended up doing what totas suggested and covering the arrows with pseudo-elements.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have always used the \"trick\":</p>\n\n<pre><code>select {\n    -moz-appearance: none;\n    text-indent: 0.01px;\n    text-overflow: '';\n}\n</code></pre>\n\n<p>to do custom select boxes on FF but since version 30 is released this stopped working completely. I have tried to find if this was deprecated but couldn't find anything. Is there a workaround, or another method to replace this?</p>\n",
            "last_activity_date": 1421775169,
            "question_id": 23920990,
            "score": 9,
            "tags": [
                "html",
                "css",
                "firefox"
            ],
            "title": "Firefox 30 is not hiding select box arrows anymore"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can do this with jquery plugins:</p>\n\n<p><a href=\"http://www.webdevelopmentstuff.com/109/jquery-fonteffect-plugin.html\" rel=\"nofollow\">http://www.webdevelopmentstuff.com/109/jquery-fonteffect-plugin.html</a>\nor maybe the cufon plugin has it too, you should check that out.\nIt could be done also with raphael plugin or svg and vml but a pure Css crossbrowser solution is hard to find.</p>\n\n<p>only for chrome,safari:</p>\n\n<p>-webkit-mask-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0,0,0,1)), color-stop(50%, rgba(0,0,0,.5)), to(rgba(0,0,0,1)));<br>\n    }  </p>\n\n<p>...for the rest of the browsers you have to use some javascript.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>\t&lt;style type=\"text/css\"&gt;\r\n\t\th1 {\r\n\t\t\tfont-family: \"Myriad Pro\", sans-serif;\r\n\t\t\tfont-size: 40px;\r\n\t\t\tfont-weight: normal;\r\n\t\t}\r\n\t\t\r\n\t\t/* --- start of magic ;-) --- */\r\n\t\t.white-gradient {\r\n\t\t\tposition: relative;\r\n\t\t}\r\n\t\t.white-gradient:after {\r\n\t\t\tcontent: '';\r\n\t\t\tdisplay: block;\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 0;\r\n\t\t\tleft: 0;\r\n\t\t\theight: 100%;\r\n\t\t\twidth: 100%;\r\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#00ffffff',GradientType=0 );\r\n\t\t\tbackground: -webkit-gradient(linear, left top, left bottom, color-stop(0%, rgba(255,255,255,1)), color-stop(100%, rgba(255,255,255,0)));\r\n\t\t\tbackground: -webkit-linear-gradient(top, rgba(255,255,255,1) 0%,rgba(255,255,255,0) 100%);\r\n\t\t\tbackground:    -moz-linear-gradient(top, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%);\r\n\t\t\tbackground:     -ms-linear-gradient(top, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%);\r\n\t\t\tbackground:      -o-linear-gradient(top, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%);\r\n\t\t\tbackground:         linear-gradient(top, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%);\r\n\t\t}\r\n\t\t/* --- end of magic ;-) --- */\r\n\t&lt;/style&gt;\r\n\t\r\n\t&lt;h1 class=\"white-gradient\"&gt;Pure CSS text gradient without any graphics&lt;/h1&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I found the best way to do this is to use SVG gradients, it's easy to do and doesn't require any images, below is some code that creates a simple text gradient using SVG.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>    &lt;svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"&gt;\r\n      &lt;defs&gt;\r\n        &lt;linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"&gt;\r\n          &lt;stop offset=\"0%\" style=\"stop-color:#FF6600;stop-opacity:1\" /&gt;\r\n          &lt;stop offset=\"100%\" style=\"stop-coloR:#FFF000;stop-opacity:1\" /&gt;\r\n        &lt;/linearGradient&gt;\r\n      &lt;/defs&gt;\r\n      &lt;text fill=\"url(#grad1)\" font-size=\"60\" font-family=\"Verdana\" x=\"50\" y=\"100\"&gt;\r\n    SVG Text Gradient&lt;/text&gt;\r\n    &lt;/svg&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>You can change the x and y values to create a horizontal/vertical or diagonal gradient, you can also apply styles to it using a CSS stylesheet, all it takes is an extra line of code between the defs tags.</p>\n\n<pre><code>  &lt;link href=\"style.css\" type=\"text/css\" rel=\"stylesheet\" \n          xmlns=\"http://www.w3.org/1999/xhtml\"/&gt;\n</code></pre>\n\n<p>This method works in the latest versions of Chrome, IE, Firefox and Safari. You can also apply radial gradients, blurs and filters, for more information go to <a href=\"http://www.w3schools.com/svg/svg_grad_linear.asp\">W3 Schools</a>.</p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I have tried a lot for text gradient. I have found the code for safari and chrome but it is not compatible in other browsers. I want to make it work without using the background image. If u have any proper solution, kindly provide.</p>\n",
            "last_activity_date": 1412965684,
            "question_id": 8005447,
            "score": 9,
            "tags": [
                "css",
                "css3",
                "linear-gradients"
            ],
            "title": "Cross browser text gradient in pure css without using background image"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>One trick is to overlay one or more static images or boxes and fix their position, then resize the scrollable area of your entire page, your inner <code>&lt;div&gt;</code>, such that its width fits in the \"viewable area\" exposed (i.e. not covered) by your overlaid area (you could use padding to achieve this).</p>\n\n<p>I've made a <a href=\"http://dev.NOVALISTIC.com/demos/small_scroll_area.php\">demo page</a> to illustrate this. It does involve extra markup per my suggestion though; I'd wager that more sophisticated CSS is used to achieve the same effect with the same base markup provided by CSS Zen Garden, but my answer is just another simpler way of going about it.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>BoltClock answer is good when the surrounding of the div is fixed always, but when you want to use the scroll bars of the page when the div (like a modal dialog) appear on the fly it can't be used.</p>\n\n<p>For this situations you can disable and hide the page scroll bars by applying this style to the body:</p>\n\n<pre><code>body {overflow:hidden}\n</code></pre>\n\n<p>The given div must fill the whole page and have scroll bars: </p>\n\n<pre><code>div {position:fixed; top:0; left:0; width:100%; height:100%; overflow-y:scroll}\n</code></pre>\n\n<p>now the div scroll bars appears exactly where page scroll bar existed and it's content would be scrollable.</p>\n\n<p>when the div is closed the body overflow style must be reset.</p>\n\n<p>look at this jsfiddle: <a href=\"http://jsfiddle.net/rahbari/kxoexa5s/\" rel=\"nofollow\">http://jsfiddle.net/rahbari/kxoexa5s/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'd like to use a div within my page that does not take up the whole screen use the scroll bars on the edge of the screen when its content overflows. I know that sounds confusing, so here's an example: <a href=\"http://www.csszengarden.com/?cssfile=/202/202.css&amp;page=1\">http://www.csszengarden.com/?cssfile=/202/202.css&amp;page=1</a></p>\n\n<p>I would have posted code, but I'm not sure where to start on that. Could someone point me in the right direction with the HTML &amp; CSS?</p>\n",
            "last_activity_date": 1422697168,
            "question_id": 5383394,
            "score": 9,
            "tags": [
                "html",
                "css",
                "scroll",
                "positioning"
            ],
            "title": "How to make inner div use window scroll bar?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The following should do what you want.</p>\n\n<pre><code>@keyframes marquee {\n    from  { text-indent:  100% }\n    to    { text-indent: -100% }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>With a small change of the markup, here's my approach (I've just inserted a <code>span</code> inside the paragraph):</p>\n\n<p>Example Fiddle: <a href=\"http://jsfiddle.net/MaY5A/1/\">http://jsfiddle.net/MaY5A/1/</a> (borders included only for debug purpose, tested on firefox and chrome)</p>\n\n<hr>\n\n<p>Markup</p>\n\n<pre><code>&lt;p class=\"microsoft marquee\"&gt;&lt;span&gt;Windows 8 and ...&lt;/span&gt;&lt;/p&gt;\n</code></pre>\n\n<p>CSS</p>\n\n<pre><code>.marquee {\n    width: 450px;\n    margin: 0 auto;\n    white-space: nowrap;\n    overflow: hidden;\n    box-sizing: border-box;\n}\n\n.marquee span {\n    display: inline-block;\n    padding-left: 100%;  /* show the marquee just outside the paragraph */\n    animation: marquee 15s linear infinite;\n}\n\n.marquee span:hover {\n    animation-play-state: paused\n}\n\n/* Make it move */\n@keyframes marquee {\n    0%   { transform: translate(0, 0); }\n    100% { transform: translate(-100%, 0); }\n}\n</code></pre>\n\n<p>No hardcoded values &mdash; dependent on paragraph width  &mdash; have been inserted</p>\n\n<p>The animation applies the CSS3 <code>transform</code> property (use prefixes where needed) so it performs well.  </p>\n\n<p>If you need to insert an initial delay just once, then also set an <code>animation-delay</code>. If you need instead to insert a small delay at <em>every</em> loop then try to play with an higher <code>padding-left</code> (e.g. <code>150%</code>)</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>I think you should go for some javascript text slider which work fine with all the browser. I liked this one and you can do more stuffs with the same:</p>\n\n<p><a href=\"http://jscroller2.markusbordihn.de/example/endless/\" rel=\"nofollow\">http://jscroller2.markusbordihn.de/example/endless/</a></p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I'm creating a marquee effect with CSS3 animation. Here are my codes.</p>\n\n<p>HTML tag:</p>\n\n<pre><code>&lt;div id=\"caption\"&gt;\n    The quick brown fox jumps over the lazy dog. The quick brown fox jumps over the lazy dog. the quick brown fox jumps over the lazy dog.\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>#caption\n{\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    font-size: 20px;\n    line-height: 30px;\n    height:30px;\n    width: 100%;\n    white-space: nowrap;\n    -moz-animation:  caption 50s linear 0s infinite;\n    -webkit-animation:  caption 50s linear 0s infinite;\n}\n@-moz-keyframes caption { 0% { margin-left:120%; } 100% { margin-left:-4200px; }  }\n@-webkit-keyframes caption { 0% { margin-left:120%; } 100% { margin-left:-4200px; }  }\n</code></pre>\n\n<p>Now I can get the basic marquee effect, but the codes is not wise enough.</p>\n\n<p>I wonder if there is a way to avoid using specific values like <code>margin-left:-4200px;</code>, so that it can adapt text in any length.</p>\n\n<p>Also, it doesn't perform smoothly in Firefox and Safari, performs well in Chrome.</p>\n\n<p>Here is a similar demo: <a href=\"http://jsfiddle.net/jonathansampson/XxUXD/\">http://jsfiddle.net/jonathansampson/XxUXD/</a>, it uses <code>text-indent</code> but still with specific values.</p>\n\n<p>Any advice will be appreciated.</p>\n\n<p>Fred</p>\n",
            "last_activity_date": 1403085603,
            "question_id": 21233033,
            "score": 8,
            "tags": [
                "css",
                "html5",
                "css3"
            ],
            "title": "CSS3 Marquee Effect"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Unfortunately, no.\nIn 2013, there is no way to do it with pure CSS.</p>\n\n<hr>\n\n<p><em><strong>Update</strong>: thanks to <a href=\"http://stackoverflow.com/users/924299\">showdev</a> for linking to the obsolete spec of <a href=\"http://www.w3.org/TR/css3-hyperlinks/\" rel=\"nofollow\">CSS3 Hyperlinks</a>, and yes, no browser has implemented it. So the answer still stands valid.</em></p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>As c69 mentioned there is no way to do it with pure CSS.</p>\n\n<p>but you can use HTML instead:</p>\n\n<p>use</p>\n\n<pre><code>&lt;head&gt;\n    &lt;base target=\"_blank\"&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>in your</p>\n\n<pre><code>&lt;head&gt;\n</code></pre>\n\n<p>tag for making all of page links which not include target attribute to be opened in a new blank window.\notherwise you can set target attribute for each link like this:</p>\n\n<pre><code>    &lt;a href=\"/yourlink.html\" target=\"_blank\"&gt;test-link&lt;/a&gt;\n</code></pre>\n\n<p>and it will override</p>\n\n<pre><code>&lt;head&gt;\n    &lt;base target=\"_blank\"&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>tag if it was defined previously.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Another way to use target=\"_blank\" is:</p>\n\n<pre><code>onclick=\"this.target='_blank'\"\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>&lt;a href=\"http://www.url.com\" onclick=\"this.target='_blank'\"&gt;Your Text&lt;a&gt;\n</code></pre>\n\n<p>I hope it helps somebody.</p>\n\n<p>Blessings :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One could run the following <a href=\"http://www.grymoire.com/Unix/Sed.html\" rel=\"nofollow\"><code>sed</code></a> command once the (X)HTML has been created:</p>\n\n<pre><code>sed -i 's|href=\"http|target=\"_blank\" href=\"http|g' index.html\n</code></pre>\n\n<p>It will add <code>target=\"_blank\"</code> to all external hyperlinks. Variations are also possible.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is actually javascript but related/relevant because .querySelectorAll targets by CSS syntax:</p>\n\n<pre><code>var i_will_target_self = document.querySelectorAll(\"ul.menu li a#example\")\n</code></pre>\n\n<p>this example uses css to target links in a menu with id = \"example\"</p>\n\n<p>that creates a variable which is a collection of the elements we want to change, but we still have actually change them by setting the new target (\"_blank\"):</p>\n\n<pre><code>for (var i = 0; i &lt; 5; i++) {\ni_will_target_self[i].style.target = \"_blank\";\n}\n</code></pre>\n\n<p>That code assumes that there are 5 or less elements. That can be changed easily by changing the phrase \"i &lt; 5.\"</p>\n\n<p>read more here: <a href=\"http://xahlee.info/js/js_get_elements.html\" rel=\"nofollow\">http://xahlee.info/js/js_get_elements.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I know this is stupid question but I just thought to share with you guys. I am developing a site in Wordpress and i made some external links in his top menu. Now I want to open that links in new window so is there any way to open that links in new tab like <code>target=\"_blank\"</code>is there any similer CSS property or anything else.</p>\n",
            "last_activity_date": 1422497415,
            "question_id": 17281486,
            "score": 8,
            "tags": [
                "css",
                "css3"
            ],
            "title": "Use target=&quot;_blank&quot; in css"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>After combing through the webkit Bugzilla, I found someone who had the same issue and found a workaround.</p>\n\n<pre><code>.face.back {\n    background-color: #125672;\n    -moz-transform: rotateY(180deg);\n    -webkit-transform: rotateY(180deg);\n}\n</code></pre>\n\n<p>Becomes:</p>\n\n<pre><code>.face.back {\n    background-color: #125672;\n    -moz-transform: rotateY(180deg);\n    -webkit-transform: rotateY(180deg) translateZ(1px);\n}\n</code></pre>\n\n<p>The addition of the translateZ to the transform makes the left side of the element clickable.</p>\n\n<p>Here is a link to the bug: <a href=\"https://bugs.webkit.org/show_bug.cgi?id=54371\">https://bugs.webkit.org/show_bug.cgi?id=54371</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>I used this code below</p>\n\n<pre><code>&lt;style&gt;    \n.outer div {\n        float: left;\n        -webkit-perspective: 200px;\n        -webkit-transform-style: preserve-3d;\n    }\n.outer a {\n        -webkit-transition: all 1.0s ease-in-out;\n        background:#0F6;\n        width:100px;\n        height:100px;\n        display:block;\n        -webkit-transform: rotateY(45deg);\n    }\n.outer div:hover a {\n        -webkit-transform: none;\n    }\n&lt;/style&gt;\n\n&lt;div class=\"outer\"&gt;\n    &lt;div&gt;\n        &lt;a href=\"http://www.google.com/\"&gt;&lt;/a&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>This solution works for me in chrome. <a href=\"http://jsfiddle.net/jaxweb/7qtLD/7/\" rel=\"nofollow\">http://jsfiddle.net/jaxweb/7qtLD/7/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've been working with transforms and transitions to create animated UI components without Javascript and really enjoying the results, but I've come across a disturbing issue that appears to be unique to webkit browsers.</p>\n\n<p><strong>On an element which I have rotated, an anchor that spans 100% of the width of the element is only accessible on the right 50% of the element.</strong></p>\n\n<p>This problem does not exist using -moz-transform in Firefox, but is 100% reproducible in both Chrome and Safari using -webkit-transform.</p>\n\n<p>Here is the code:</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;webkit spincard test bed&lt;/title&gt;\n&lt;style type=\"text/css\"&gt;\n    #card-lists{\nwidth:100%;\nfloat:left;\n}\n#card-lists ul{\nlist-style:none;\n}\n#card-lists ul li{\nwidth:230px;\nheight:236px;\n}\n.non-mobile #card-lists ul.card-list li .flipcard-container:hover .flipcard,\n.non-mobile #card-lists ul.card-list li .flipcard-container.hover .flipcard{\n    -moz-transform: rotateY(180deg);\n    -webkit-transform: rotateY(180deg);\n    -moz-transform-style: preserve-3d;\n    -moz-transition: all 0s linear 0s;\n    -webkit-transform-style: preserve-3d;\n    -webkit-transition: all 0s linear 0s;\n}\n.non-mobile #card-lists ul.card-list li .flipcard{\n    -moz-transform: rotateY(0deg);\n    -moz-transition: all 0s linear 0s;\n    -webkit-transform: rotateY(0deg);\n    -webkit-transition: all 0s linear 0s;\n    width:230px;\n    height:236px;\n}\n.face {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    -moz-backface-visibility: hidden;\n    -webkit-backface-visibility: hidden;\n}\n.face.back {\nbackground-color: #125672;\n    -moz-transform: rotateY(180deg);\n    -webkit-transform: rotateY(180deg);\n}\n.face.front {\n    background-color:#000;\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body class=\"non-mobile\"&gt;\n&lt;div id=\"card-lists\"&gt;\n&lt;ul class=\"card-list\" id=\"cardes-list-total\"&gt;\n    &lt;li&gt;\n    &lt;div class=\"flipcard-container\"&gt;\n        &lt;div class=\"flipcard\"&gt;\n            &lt;div class=\"front face\"&gt;\n                &lt;a href=\"#\"&gt;\n                &lt;div style=\"width:100%; height:100%;\"&gt;\n                &lt;/div&gt;\n                &lt;/a&gt;\n            &lt;/div&gt;\n            &lt;div class=\"back face\"&gt;\n                &lt;a href=\"#\"&gt;\n                &lt;div style=\"width:100%; height:100%;\"&gt;\n                &lt;/div&gt;\n                &lt;/a&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Any help anyone could offer would be greatly appreciated as I've already spent an inordinate amount of time on the issue.</p>\n",
            "last_activity_date": 1394223044,
            "question_id": 10886656,
            "score": 8,
            "tags": [
                "css",
                "css3",
                "webkit",
                "css-transitions",
                "css-transforms"
            ],
            "title": "webkit transform blocking link"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Look at this <a href=\"http://blog.goetter.fr/post/36084887039/tes-pas-cap-premiere-edition\" rel=\"nofollow\">http://blog.goetter.fr/post/36084887039/tes-pas-cap-premiere-edition</a> , here is your answer.</p>\n\n<p>Here is your original code modified</p>\n\n<pre><code>h1 {\n    position: relative;\n    font-size: 30px;\n    z-index: 1;\n    overflow: hidden;\n    text-align: center;\n}\nh1:before, h1:after {\n    position: absolute;\n    top: 51%;\n    overflow: hidden;\n    width: 50%;\n    height: 1px;\n    content: '\\a0';\n    background-color: red;\n}\nh1:before {\n    margin-left: -50%;\n    text-align: right;\n}\n.color {\n    background-color: #ccc;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/XWVxk/8/\" rel=\"nofollow\">http://jsfiddle.net/XWVxk/8/</a></p>\n\n<p>Note: the article is not online anymore, here is the last good archived version:\n<a href=\"http://web.archive.org/web/20140213165403/http://blog.goetter.fr/post/36084887039/tes-pas-cap-premiere-edition\" rel=\"nofollow\">http://web.archive.org/web/20140213165403/http://blog.goetter.fr/post/36084887039/tes-pas-cap-premiere-edition</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>This might work:</p>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>.floatClear {\n    clear: both;\n}\n\n#wrapper {\n    text-align: center;\n    position: relative;\n}\n\n#wrapper .line {\n    border-bottom: 2px solid red;\n    position: absolute;\n    width: 100%;\n    top: 15px;\n}\n\n#wrapper .textbox {\n    position: absolute;\n    width: 100%;\n}\n\n#wrapper .textbox .text {\n    background-color: white;\n    margin: 0px auto;\n    padding: 0px 10px;\n    text-align: center;\n    display: inline;\n    font-size: 24px;\n}\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;title&gt;HTML&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"main.css\" type=\"text/css\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"wrapper\"&gt;\n        &lt;div class=\"line\"&gt;&lt;/div&gt;\n        &lt;div class=\"textbox\"&gt;\n            &lt;div class=\"text\"&gt;This is my Title&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>What happens here is you set the text over the line the background and with the background-color plus the side padding so it will hide the line behind the text block.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>needed this a few days ago, but the accepted answer isn't working in IE.</p>\n\n<p>this is what I came up with: works in every major browser (>= ie8)</p>\n\n<p>jsfiddle: <a href=\"http://jsfiddle.net/gKve7/\">http://jsfiddle.net/gKve7/</a></p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;h2 class=\"decorated\"&gt;&lt;span&gt;My Title&lt;/span&gt;&lt;/h2&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>/* headlines with lines */\n.decorated{\n     overflow: hidden;\n     text-align: center;\n }\n.decorated &gt; span{\n    position: relative;\n    display: inline-block;\n}\n.decorated &gt; span:before, .decorated &gt; span:after{\n    content: '';\n    position: absolute;\n    top: 50%;\n    border-bottom: 2px solid;\n    width: 592px; /* half of limiter */\n    margin: 0 20px;\n}\n.decorated &gt; span:before{\n    right: 100%;\n}\n.decorated &gt; span:after{\n    left: 100%;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I am working on some CSS where the design calls for page titles (headings) to be centered with horizontal lines that are vertically centered on either side. Further, there is a background image on the page so the background of the title needs to be transparent. </p>\n\n<p>I have centered the title and I can use pseudo class to create the line. But I need the line disappear when it cross the text of the title. </p>\n\n<p>I considered using a background gradient that goes transparent where the words are, but since each title could be a different length, I wouldn't know where to put the stops. </p>\n\n<p>Here is the CSS so far:\n`  </p>\n\n<pre><code>h1 {  \n    text-align: center;  \n    position: relative;  \n    font-size: 30px;  \n    z-index: 1;  \n}  \n\nh1:after {  \n    content: '';  \n    background-color: red;  \n    height: 1px;  \n    display: block;  \n    position: absolute;  \n    top: 18px;  \n    left: 0;  \n    width: 100%;  \n}  \n</code></pre>\n\n<p>`\nHere is where I'm at: \n<a href=\"http://jsfiddle.net/XWVxk/1/\">http://jsfiddle.net/XWVxk/1/</a></p>\n\n<p>Can this be done with CSS without adding any extra HTML?</p>\n",
            "last_activity_date": 1425959567,
            "question_id": 15557627,
            "score": 7,
            "tags": [
                "html",
                "css",
                "pseudo-class"
            ],
            "title": "CSS Title with Horizontal Line on either side"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<pre><code>option{\n  background-image:url(image.png);\n  background-repeat: no-repeat;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is no way to customise the select as you see it in your screenshot without Javascript. </p>\n\n<p>You can see in <a href=\"http://jsfiddle.net/2XHm7/\" rel=\"nofollow\">this example</a> that you can customise colors, padding and borders, but not the button itself.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Even though you added a background image to the selectbox, you can not hide that handler on right hand side. I would recommend to use this : \n<a href=\"http://jamielottering.github.com/DropKick/\" rel=\"nofollow\">http://jamielottering.github.com/DropKick/</a></p>\n\n<p>You just have to modify the CSS a bit to suit your need. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you just try this <a href=\"http://cssglobe.com/post/8802/custom-styling-of-the-select-elements\" rel=\"nofollow\">..custom-styling-of-the-select-elements..</a> </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>see its css based select menu and you can customize it :- <a href=\"http://jsfiddle.net/XxkSC/553/\" rel=\"nofollow\">http://jsfiddle.net/XxkSC/553/</a></p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;label class=\"custom-select\"&gt;\n    &lt;select&gt;\n        &lt;option&gt;Sushi&lt;/option&gt;\n        &lt;option&gt;Blue cheese with crackers&lt;/option&gt;\n        &lt;option&gt;Steak&lt;/option&gt;\n        &lt;option&gt;Other&lt;/option&gt;\n    &lt;/select&gt;\n&lt;/label&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>label.custom-select {\n    position: relative;\n    display: inline-block;\n\n}\n\n.custom-select select {\n    display: inline-block;\n    padding: 4px 3px 3px 5px;\n    margin: 0;\n    font: inherit;\n    outline:none; /* remove focus ring from Webkit */\n    line-height: 1.2;\n    background: #000;\n    color:white;\n    border:0;\n}\n\n/* Select arrow styling */\n.custom-select:after {\n    content: \"\u25bc\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    font-size: 60%;\n    line-height: 30px;\n    padding: 0 7px;\n    background: #000;\n    color: white;\n    pointer-events: none;\n}\n\n.no-pointer-events .custom-select:after {\n    content: none;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Here is fully customizable select, it's based on radio inputs.\n<a href=\"http://jsfiddle.net/Idered/LufkN/\">http://jsfiddle.net/Idered/LufkN/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>if you want something that work in all major browser include ie7 and above\nyou can use my custom select\n<a href=\"https://github.com/yanivsuzana/new_select\" rel=\"nofollow\">https://github.com/yanivsuzana/new_select</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Can't add a comment to Shailender Arora so i wrote it here\nUsing the <code>pointer-events:none;</code> it will let you click through the arrow and will activate the select field, So the CSS would look like this for that element</p>\n\n<pre><code>.custom-select:after {\n        content: \"\u25bc\";\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        font-size: 60%;\n        line-height: 30px;\n        padding: 0 7px;\n        background: #000;\n        color: white;\n        pointer-events:none;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had a similar issue, I created a jQuery plugin out out of it. Basically lets you style the select box appearance but still maintaining universal design for touch devices which got good support for select dropdowns. Here is the github page: <a href=\"https://github.com/peec/udselect\" rel=\"nofollow\">https://github.com/peec/udselect</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Hey I searched many times that how to create a select element like the below image</p>\n\n<p><img src=\"http://i.stack.imgur.com/QQn9r.jpg\" alt=\"enter image description here\"></p>\n\n<p>My code is </p>\n\n<pre><code>&lt;select&gt;\n    &lt;option&gt;-- Select City --&lt;/optoin&gt;\n    &lt;option&gt;Delhi&lt;/option&gt;\n    &lt;option&gt;Gurgaon&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>This is available in jquery but I want to use pure css.</p>\n\n<p>Thanks in advance ....</p>\n",
            "last_activity_date": 1422060713,
            "question_id": 10185762,
            "score": 6,
            "tags": [
                "html",
                "css"
            ],
            "title": "How to customized select element through css?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Well some Microsoft IE devs saw my tweet and jumped in with a fix already!</p>\n\n<p>Apparently IE10 does not support preserve-3d, and they whipped up <a href=\"http://jsfiddle.net/reybango/ax2Mc/\">this jsFiddle demonstration</a></p>\n\n<p>Big thanks to <a href=\"https://twitter.com/reybango/\">@reybango</a> and <a href=\"https://twitter.com/sgalineau/\">@sgalineau</a> for the help - very much appreciated.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>(This is to comment on why microsoft's 360\u00b0 turn example works.)</p>\n\n<p>First take a look at the example itself, MS's workaround removed the preserve-3d transform-style property from initial code.</p>\n\n<p><strong>Turns out IE10 has no support for preserve-3d</strong>, and they suggest such workaround on msdn:</p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ie/hh673529%28v=vs.85%29.aspx#the_ms_transform_style_property\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/ie/hh673529%28v=vs.85%29.aspx#the_ms_transform_style_property</a></p>\n\n<p>With transform-style set to default 'flat' value, child elements will inherit parent rotation. Thus both card front/back are rotated to 360\u00b0 (= 0\u00b0), the trick here is that back side will appear on top, because it comes later in DOM.</p>\n\n<p>Just to make this a bit more apparent, I added <code>opacity:0.5</code> to back-side for both examples, now you can see what's really going on:</p>\n\n<p><a href=\"http://jsfiddle.net/7FeEz/12/\" rel=\"nofollow\">http://jsfiddle.net/7FeEz/12/</a> </p>\n\n<p><a href=\"http://jsfiddle.net/ax2Mc/71/\" rel=\"nofollow\">http://jsfiddle.net/ax2Mc/71/</a> </p>\n\n<p>So the MS way will work in some scenarios, but not all without real support for preserve-3d</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This seems to be a duplicate of <a href=\"http://stackoverflow.com/questions/13474210/css3-3d-flip-animation-ie10-transform-origin-preserve-3d-workaround/14327666#14327666\">CSS3 - 3D Flip Animation - IE10 transform-origin: preserve-3d workaround</a></p>\n\n<p>The backside-visibility is working on IE10 when it is applied to the element itself (if applied to the parent, it will not work). You should combine it in the same transform property like this: </p>\n\n<pre>\n.back{\n  transform : perspective(1000px) rotateY(0deg);\n}\n.front{\n  transform : perspective(1000px) rotateY(180deg);\n}\n</pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I only have the backface-visibility applied to the child element, and IE10 shows the backface anyway. Removing preserve-3d defeats one of the main visual features of 3d animation, so it's not really a viable workaround.</p>\n\n<p>Unfortunately the demo referred to above by @reybango and @sgalineau changes the effect appearance from a 3d rotation to a simple 2d change in width, so it's not a viable workaround either. </p>\n\n<p>Bottom line is that IE10 needs to be upgraded to support the CSS 3d animation spec as written.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is my solution. <code></code> <a href=\"http://jsfiddle.net/UwUry/531/\" rel=\"nofollow\">http://jsfiddle.net/UwUry/531/</a></p>\n\n<p>I tried on IE 11 and Chrome. It worked like a flip box.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm building a simple pure-css 'card flip' animation, it <em>has</em> to work in IE10, but sadly what I've written doesn't.</p>\n\n<p><a href=\"http://jsfiddle.net/felixthehat/7FeEz/1/\">jsFiddle demo here</a> or <a href=\"https://www.dropbox.com/s/kbp8rh0sbh49ixe/backside%20vis%20test%20case.zip\">sample html zip here</a></p>\n\n<p>I can see that backside-visibility works in IE10 from <a href=\"http://ie.microsoft.com/testdrive/Graphics/hands-on-css3/hands-on_3d-transforms.htm\">their demo here</a> so maybe I've just overlooked something stupid, maybe a fresh pair of eyes might help!</p>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1417649334,
            "question_id": 11400317,
            "score": 5,
            "tags": [
                "css",
                "css3",
                "css-transitions",
                "css-transforms",
                "internet-explorer-10"
            ],
            "title": "backside-visibility not working in IE10 - works fine in webkit"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The biggest reason for suggesting CSS selectors over XPath in IE is performance. IE does not provide a native XPath-over-HTML option as does Firefox and Chrome. It does, however, provide a native CSS selector engine, which will <strong>always</strong> be faster than the JavaScript-only XPath engine implementation used in the IE driver. And the performance comparison isn't even close. I've seen it measured as much as an order of magnitude slower for XPath locators than CSS selectors (though I can't find the citation at the moment). This is particularly true in versions of IE before 9, where the IE JavaScript engine was vastly slower than the Chakra JavaScript engine introduced in 32-bit IE9.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>According to Ashley Wilson's <a href=\"http://sauceio.com/index.php/2011/05/why-css-locators-are-the-way-to-go-vs-xpath/\">report from sauce labs</a>:  </p>\n\n<p>Pros:</p>\n\n<ol>\n<li>They\u2019re faster</li>\n<li>They\u2019re more readable</li>\n<li>CSS is jQuery\u2019s locating strategy</li>\n<li>No one else uses XPATH anyways!</li>\n</ol>\n\n<p>It's a bit outdated, however here are the numbers:</p>\n\n<p><img src=\"http://i.stack.imgur.com/JNCmx.jpg\" alt=\"image from cause lab's web site\"></p>\n\n<p>Personally, I would argue about (2)-nd statement, I must agree with the rest.</p>\n\n<p>Cons:<br>\n- No \"bottom up\" navigation. Xpath has <code>elem\\..\\another_elem</code><br>\n- Is Sizzle injected? Or Browser's CSS locator parser is used? Depends on the browser, and there are inconsistencies.</p>\n\n<p>I'm using Xpath, since I need to use one method only and I have complex queries: Xpath provides me with that.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Using CSS locator is the best option, not only on IE, also on FF and Chrome.\nAlso, xpath is always the worst choice, because it needs to parse the whole page to find a simple element, so if you want performance in your tests and you can avoid it, just do it.</p>\n\n<p>Also, if you are using pageObjects I strongly recommend you to use cacheLookup, so the element will be located just once:</p>\n\n<pre><code>@CacheLookup\n@FindBy(id=\"doLogin\")\nprivate WebElement loginButton;\n</code></pre>\n\n<p>Personally, I do the following:</p>\n\n<ul>\n<li>If element has css class, use this locator</li>\n<li>If element has name or id, use this locator</li>\n<li>If none of the above is present, and you can not use linkText or\nanother locator, go for xpath.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h2>Brevity and Clarity are other reasons, in addition to speed.</h2>\n\n<p>In addition to speed, I find that css is usually shorter and cleaner and easier to read.  For example:</p>\n\n<p>xpath:</p>\n\n<pre><code> //ol[@class='choice-group'//li//label//input\n</code></pre>\n\n<p>vs</p>\n\n<p>css:</p>\n\n<pre><code> css=ol.choices-group li label input\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am working on an application which is compatible only with IE7 and IE8. I didn't know why but some suggested to use CSS over XPath while identifying the elements in IE. When I visited the official Selenium site. I read the message </p>\n\n<blockquote>\n  <p>WebDriver uses a browser\u2019s native XPath capabilities wherever possible. On those browsers that don\u2019t have native XPath support, we have provided our own implementation. This can lead to some unexpected behaviour unless you are aware of the differences in the various xpath engines.</p>\n</blockquote>\n\n<p>I would like to know where I can find the differences in the various xpath engines and in which situations I should use CSS and and in which XPath specifically if I'm using IE. Thanks.</p>\n",
            "last_activity_date": 1374690062,
            "question_id": 13975595,
            "score": 4,
            "tags": [
                "java",
                "css",
                "xpath",
                "selenium",
                "webdriver"
            ],
            "title": "Why one should prefer using CSS over XPath in IE?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Can you make your own custom classes?  Derive from the ASP.NET Button and add a propert for Read only.  Somewhere...probably in the OnPreRender, you can check the new property and set (or not set) the CSSClass property accordingly.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In C# 3 you can add some extension methods.</p>\n\n<pre><code> static class WebControlsExtensions\n {\n     public static void AddCssClass (this WebControl control, string cssClass)\n     {\n         control.CssClass += \" \" + cssClass;\n     }\n     public static void RemoveCssClass (this WebControl control, string cssClass)\n     {\n         control.CssClass = control.CssClass.replace(\" \" + cssClass, \"\");\n     }\n }\n</code></pre>\n\n<p>Usage:-</p>\n\n<pre><code>ctl.AddCssClass(\"ReadOnly\");\nctl.RemoveCssClass(\"ReadOnly\");\n</code></pre>\n\n<p>Note the RemoveCssClass is designed to remove only those classes added by AddCssClass and has the limitation that where 2 additional class names is added the shortest name should not match exactly the start of the longest name.  E.g.,  If you added \"test\" and \"test2\" you can't remove test without corrupting the CssClass.  This could be improved with RegEx by I expect the above to be adequate for your needs.</p>\n\n<p>Note if you don't have C#3 then remove the <code>this</code> keyword from the first parameter and use the static methods in the conventional manner.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I've taken AnthonyWJones original code and amended it so that it works no matter what scenario: </p>\n\n<pre><code>static class WebControlsExtensions\n    {\n        public static void AddCssClass(this WebControl control, string cssClass)\n        {\n            List&lt;string&gt; classes = control.CssClass.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries).ToList();\n\n            classes.Add(cssClass);\n\n            control.CssClass = classes.ToDelimitedString(\" \");\n        }\n\n        public static void RemoveCssClass(this WebControl control, string cssClass)\n        {\n            List&lt;string&gt; classes = control.CssClass.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries).ToList();\n\n            classes.Remove(cssClass);\n\n            control.CssClass = classes.ToDelimitedString(\" \");\n        }\n    }\n\n    static class StringExtensions\n    {\n        public static string ToDelimitedString(this IEnumerable&lt;string&gt; list, string delimiter)\n        {\n            StringBuilder sb = new StringBuilder();\n            foreach (string item in list)\n            {\n                if (sb.Length &gt; 0)\n                    sb.Append(delimiter);\n\n                sb.Append(item);\n            }\n\n            return sb.ToString();\n        }\n    }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>This version checks to make sure the given class isn't already added before adding it.</p>\n\n<pre><code>public static void CssAddClass(this WebControl control, string className)\n{\n    var classNames = control.CssClass.Split\n        (new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n\n    if (classNames.Contains(className))\n    {\n        return;\n    }\n\n    control.CssClass = string.Concat\n        (classNames.Select(name =&gt; name + \" \").ToArray()) + className;\n}\n\npublic static void CssRemoveClass(this WebControl control, string className)\n{\n    var classNames = from name in control.CssClass.\n                         Split(new[] {' '}, StringSplitOptions.RemoveEmptyEntries)\n                     where name != className\n                     select name + \" \";\n\n\n    control.CssClass = string.Concat(classNames.ToArray()).TrimEnd();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I made a version for pre-C#3:</p>\n\n<pre><code>        public static class WebControlsExtensions\n        {\n            public static void AddCssClass(WebControl control, string cssClass)\n            {\n                string[] cssClasses = control.CssClass.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n                List&lt;string&gt; classes = new List&lt;string&gt;(cssClasses);\n\n                if (!classes.Contains(cssClass)) {\n                    classes.Add(cssClass);\n                }\n\n                control.CssClass = StringExtensions.ToDelimitedString(classes, \" \");\n            }\n\n            public static void RemoveCssClass(WebControl control, string cssClass)\n            {\n                string[] cssClasses = control.CssClass.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n                List&lt;string&gt; classes = new List&lt;string&gt;(cssClasses);\n\n                bool removed = true;\n                while (removed) {\n                    removed = classes.Remove(cssClass);\n                }\n\n                control.CssClass = StringExtensions.ToDelimitedString(classes, \" \");\n            }\n    }\n    static class StringExtensions {\n        public static string ToDelimitedString(List&lt;string&gt; list, string delimiter)\n        {\n            StringBuilder sb = new StringBuilder();\n            foreach (string item in list) {\n                if (sb.Length &gt; 0)\n                    sb.Append(delimiter);\n\n                sb.Append(item);\n            }\n\n            return sb.ToString();\n        }\n    }\n</code></pre>\n\n<p>Used like:</p>\n\n<pre><code>WebControlsExtensions.AddCssClass(ctl, \"classname\");\nWebControlsExtensions.RemoveCssClass(ctl, \"classname\");\n</code></pre>\n\n<p>This one will only add a class if it's not already there. It will also remove all instances of a class (if, for some reason, there are multiple in there)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Pure .NET 2.0 (No extensions! No LINQ! No RegEx! No unnecessary WebControl class!).\nThese methods are quite general to be used not for CSS classes only.</p>\n\n<p>Also, look at my <a href=\"https://github.com/nabokov-ef/CssClassManipulator\" rel=\"nofollow\">CssClassManipulator</a>.</p>\n\n<pre><code>public static string AddCssClass(string classContainer, string className)\n    {\n        if (string.IsNullOrEmpty(classContainer)) return className ?? string.Empty;\n        if (string.IsNullOrEmpty(className)) return classContainer;\n\n        var classNames = classContainer.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n        if (Array.Exists(classNames, delegate(string s) { return s.Equals(className); })) return classContainer;\n\n        return classContainer + \" \" + className;\n    }\n\n    public static string RemoveCssClass(string classContainer, string className)\n    {\n        if (string.IsNullOrEmpty(classContainer)) return className ?? string.Empty;\n        if (string.IsNullOrEmpty(className)) return classContainer;\n\n        var classNames = classContainer.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n        int index = Array.FindIndex(classNames, delegate(string s) { return s.Equals(className); });\n        if (index &gt;= 0)\n        {\n            return string.Join(\" \", classNames, 0, index) +\n                (   index + 1 &lt; classNames.Length ?\n                    \" \" + string.Join(\" \", classNames, index + 1, classNames.Length - index - 1)\n                    :\n                    string.Empty    );\n        }\n\n        return classContainer;\n    }\n\n    public static string ToggleCssClass(string classContainer, string className)\n    {\n        if (string.IsNullOrEmpty(classContainer)) return className ?? string.Empty;\n        if (string.IsNullOrEmpty(className)) return classContainer;\n\n        var classNames = classContainer.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n\n        if (Array.Exists(classNames, delegate(string s) { return s.Equals(className); })) return RemoveCssClass(classContainer, className);\n\n        return classContainer + \" \" + className;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Related... if you just want to toggle a Class based upon a condition...</p>\n\n<pre><code>bool disable = true;      // this will vary (true/false) based on UI state\n\nstring newClass = disable ? \"BtnGray\" : \"BtnPink\";\n\nstring currentClass = disable ? \"BtnPink\" : \"BtnGray\";\n\nmyButton.CssClass = myButton.CssClass.Replace( currentClass, newClass );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>It's easy to set CSSClass in the codebehind, but this runs the risk of overwriting existing classes.</p>\n\n<p>I need to set certain elements to ReadOnly = true; and i'd like to apply a style as a visual cue that the item cannot be altered... easy enough </p>\n\n<p>.CSSClass += \" ReadOnlyStyle\";</p>\n\n<p>But then I equally need to change the same element to ReadOnly = false; so I need to remove the CSSClass i set, without killing off any other styles that might be applied.</p>\n\n<p>What's the best way to do this?</p>\n",
            "last_activity_date": 1373647815,
            "question_id": 445967,
            "score": 4,
            "tags": [
                "c#",
                "asp.net",
                "css"
            ],
            "title": "Best way to change CSS Classes from code"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Set <code>#upperDiv</code> any of the following:</p>\n\n<pre><code>overflow: hidden;\nwidth: 100%;\n</code></pre>\n\n<p>or  </p>\n\n<pre><code>float: left;\nwidth: 100%;\n</code></pre>\n\n<p>or create a rule using CSS pseudo-elements (IE8+ compatible) like this</p>\n\n<pre><code>#upperDiv:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n</code></pre>\n\n<p><strong>Best solution</strong><br>\nCreating a reusable class rule like the following.</p>\n\n<pre><code>.group:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n</code></pre>\n\n<p>Now you can apply it to anything that needs this same functionality. For example...</p>\n\n<pre><code>&lt;div id='upperDiv' class=\"group\" ... &gt;\n</code></pre>\n\n<p>P.S. If you require IE 6/7 compatibility, checkout <a href=\"http://css-tricks.com/snippets/css/clear-fix/\" rel=\"nofollow\">this post</a>.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>This is intentional as floats are designed for things like images in paragraphs (where multiple paragraphs can wrap around the image).</p>\n\n<p>Complex Spiral has a <a href=\"http://complexspiral.com/publications/containing-floats/\" rel=\"nofollow\">fuller explanation</a> as to why and Ed Elliot describes a number of <a href=\"http://www.ejeliot.com/blog/59\" rel=\"nofollow\">approaches to making containers expand around floats</a>. I find the <code>overflow: hidden</code> approach works best in most situations.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>After</p>\n\n<blockquote>\n<pre><code> &lt;div id='leftDiv' style='float:left;width:25%;'&gt;\n   content2\n &lt;/div&gt;\n</code></pre>\n</blockquote>\n\n<p>add </p>\n\n<pre><code>     &lt;div style=\"clear:both\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>It will solve your problem.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>you can try this. as soon as height increases than the limit, the scroll will appear</p>\n\n<pre><code>&lt;div id='upperDiv' style='min-height:200px;border: 1px solid #000000;' overflow:'scroll'&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Hi<br>\nassume we have this code:</p>\n\n<pre><code>&lt;div id='upperDiv' style='min-height:200px;border: 1px solid #000000;'&gt;\n     &lt;div id='rightDiv' style='float:right;width:75%;'&gt;\n       content1\n     &lt;/div&gt;  \n     &lt;div id='leftDiv' style='float:left;width:25%;'&gt;\n       content2\n     &lt;/div&gt;\n&lt;/div&gt;\n&lt;div id='lowerDiv' style='height:50px;border: 1px solid #000000;margin-top:5px;'&gt;\n   content3\n&lt;/div&gt;\n</code></pre>\n\n<p>When content of rightDiv and leftDivbe passes the 200px height (the min height) upperDiv doesn't grow! so the content its content overlaps lower div!\nIf i remove float attribute of the large content it grows and there will be problem.\nBut I don't know which Div (rightDiv or leftDiv) passes 200px height!\nHow can I fix this?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1423131231,
            "question_id": 4009931,
            "score": 1,
            "tags": [
                "css",
                "html",
                "height",
                "overlap"
            ],
            "title": "CSS: DIV height problem on float set"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>What about <code>position: relative</code> for the outer div? In the example that hides the inner one. It also won't move it in its layout since you don't specify a top or left.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Make outer <code>&lt;div&gt;</code> to <code>position: relative</code> and inner <code>&lt;div&gt;</code> to <code>position: absolute</code>. It should work for you.</p>\n",
                    "is_accepted": true,
                    "score": 118
                },
                {
                    "body": "<p>You just make <code>div</code>s like this:</p>\n\n<pre><code>&lt;div style=\"width:100px; height: 100px; border:1px solid; overflow:hidden; \"&gt;\n    &lt;br/&gt;\n    &lt;div style=\"position:inherit; width: 200px; height:200px; background:yellow;\"&gt;\n        &lt;br/&gt;\n        &lt;div style=\"position:absolute; width: 500px; height:50px; background:Pink; z-index: 99;\"&gt;\n            &lt;br/&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I hope this code will help you :)</p>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>We have two DIVs, one embedded in the other. If the outer DIV is not positioned absolute then the inner DIV, which is positioned absolute, does not obey the overflow hidden of the outer DIV (<a href=\"http://jsfiddle.net/jGLvk/3/\">example</a>).</p>\n\n<p>Is there any chance to make the inner DIV obey the overflow hidden of the outer DIV without setting the outer DIV to position absolute (cause that will muck up our complete layout)?\nAlso position relative for our inner DIV isn't an option as we need to \"grow out\" of a table TD (<a href=\"http://jsfiddle.net/hNC8H/\">exmple</a>).</p>\n\n<p>Are there any other options?</p>\n",
            "last_activity_date": 1404940066,
            "question_id": 4605715,
            "score": 47,
            "tags": [
                "html",
                "css",
                "layout",
                "overflow",
                "css-position"
            ],
            "title": "Position absolute and overflow hidden"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The documentation for <a href=\"http://api.jquery.com/css/\">css()</a> says that setting the style property to the empty string will remove that property if it does not reside in a stylesheet:</p>\n\n<blockquote>\n  <p>Setting the value of a style property\n  to an empty string \u2014 e.g.\n  <code>$('#mydiv').css('color', '')</code> \u2014 removes\n  that property from an element if it\n  has already been directly applied,\n  whether in the HTML style attribute,\n  through jQuery's <code>.css()</code> method, or\n  through direct DOM manipulation of the\n  style property. It does not, however,\n  remove a style that has been applied\n  with a CSS rule in a stylesheet or\n  <code>&lt;style&gt;</code> element.</p>\n</blockquote>\n\n<p>Since your styles are inline, you can write:</p>\n\n<pre><code>$(selector).css(\"-moz-user-select\", \"\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 92
                },
                {
                    "body": "<p>You can also replace \"-moz-user-select:none\" with \"-moz-user-select:inherit\". This will inherit the style value from any parent style or from the default style if no parent style was defined.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a div with this property <code>style=\"-moz-user-select:none; position:static !important;\"</code>.\nI need to remove the <code>-moz-user-select</code>\nTried with $(selector).css() but I don't know what value to set because it's \"none\".</p>\n",
            "last_activity_date": 1376321278,
            "question_id": 5951365,
            "score": 41,
            "tags": [
                "jquery",
                "css"
            ],
            "title": "how to remove only one style property with jquery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You need CSS to achieve this, e.g.:</p>\n\n<pre><code>#container_2 {\n    -webkit-transform: rotate(90deg);\n    -moz-transform: rotate(90deg);\n    -o-transform: rotate(90deg);\n    -ms-transform: rotate(90deg);\n    transform: rotate(90deg);\n}\n</code></pre>\n\n<p>demo: <a href=\"http://jsbin.com/opamiq/1/\">http://jsbin.com/opamiq/1/</a></p>\n\n<p>(there's 45 degrees rotation in the demo, so you can see the effect)</p>\n",
                    "is_accepted": true,
                    "score": 82
                },
                {
                    "body": "<p>Use following in your CSS    </p>\n\n<pre class=\"lang-css prettyprint-override\"><code>div {\n    -webkit-transform: rotate(90deg); /* Safari and Chrome */\n    -moz-transform: rotate(90deg);   /* Firefox */\n    -ms-transform: rotate(90deg);   /* IE 9 */\n    -o-transform: rotate(90deg);   /* Opera */\n    transform: rotate(90deg);\n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have a <code>&lt;div&gt;</code> that I want that to display perpendicularly - I want to move it to 90 degrees.</p>\n\n<pre><code>&lt;div id=\"container_2\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>How can I do this?</p>\n",
            "last_activity_date": 1407527425,
            "question_id": 14233341,
            "score": 36,
            "tags": [
                "html",
                "css"
            ],
            "title": "How can I rotate an HTML div to 90 degrees?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>input{\n   text-align:center;\n}\n</code></pre>\n\n<p>is all you need.</p>\n\n<p><a href=\"http://jsfiddle.net/LUrjJ/\">Working example</a> in FF6. This method doesn't seem to be cross-browser compatible.</p>\n\n<p>Your previous CSS was attempting to center the text of an input element which had a class of \"placeholder\".</p>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>The HTML5 placeholder element can be styled for those browsers that accept the element, but in diferent ways, as you can see here: <a href=\"http://davidwalsh.name/html5-placeholder-css\" rel=\"nofollow\">http://davidwalsh.name/html5-placeholder-css</a>.</p>\n\n<p>But I don't believe that <code>text-align</code> will be interpreted by the browsers. At least on Chrome, this attribute is ignored. But you can always change other things, like <code>color</code>, <code>font-size</code>, <code>font-family</code> etc. I suggest you rethinking your design whether possible to remove this center behavior.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>If you really want this text centered, you can always use some jQuery code or plugin to simulate the placeholder behavior. Here is a sample of it: <a href=\"http://www.hagenburger.net/BLOG/HTML5-Input-Placeholder-Fix-With-jQuery.html\" rel=\"nofollow\">http://www.hagenburger.net/BLOG/HTML5-Input-Placeholder-Fix-With-jQuery.html</a>.</p>\n\n<p>This way the style will work:</p>\n\n<pre><code>input.placeholder {\n    text-align: center;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you want to change only the placeholder style</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>::-webkit-input-placeholder {\n   text-align: center;\n}\n\n:-moz-placeholder { /* Firefox 18- */\n   text-align: center;  \n}\n\n::-moz-placeholder {  /* Firefox 19+ */\n   text-align: center;  \n}\n\n:-ms-input-placeholder {  \n   text-align: center; \n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 56
                }
            ],
            "body": "<p>How can I centre the input field's placeholder's alignment in a html form?</p>\n\n<p>I am using the following code, but it doesn't work:</p>\n\n<p>CSS -></p>\n\n<pre><code>input.placeholder {\n    text-align: center;\n}\n.emailField {\n    top:413px;\n    right:290px;\n    width: 355px;\n    height: 30px;\n    position: absolute;\n    border: none;\n    font-size: 17;\n    text-align: center;\n}\n</code></pre>\n\n<p>HTML -></p>\n\n<pre><code>&lt;form action=\"\" method=\"POST\"&gt;\n    &lt;input type=\"text\" class=\"emailField\" placeholder=\"support@socialpic.org\" style=\"text-align: center\" name=\"email\" /&gt;\n    &lt;!&lt;input type=\"submit\" value=\"submit\" /&gt;  \n&lt;/form&gt;\n</code></pre>\n",
            "last_activity_date": 1413305788,
            "question_id": 7381446,
            "score": 32,
            "tags": [
                "html",
                "css"
            ],
            "title": "Center HTML Input Text Field Placeholder"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You need to wrap the table inside another element and set the height of that element. Example with inline css:</p>\n\n<pre><code>&lt;div style=\"height: 500px; overflow: auto;\"&gt;\n &lt;table&gt;\n &lt;/table&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Try using the <code>overflow</code> CSS property. There are also separate properties to define the behaviour of just horizontal overflow (<code>overflow-x</code>) and vertical overflow (<code>overflow-y</code>). </p>\n\n<p>Since you only want the vertical scroll, try this:</p>\n\n<pre><code>table {\n  height: 500px;\n  overflow-y: scroll;\n}\n</code></pre>\n\n<hr>\n\n<p><strong>EDIT:</strong></p>\n\n<p>Apparently <code>&lt;table&gt;</code> elements don't respect the <code>overflow</code> property. This appears to be because <code>&lt;table&gt;</code> elements are not rendered as <code>display: block</code> by default (they actually have their own display type). You can force the <code>overflow</code> property to work by setting the <code>&lt;table&gt;</code> element to be a block type:</p>\n\n<pre><code>table {\n  display: block;\n  height: 500px;\n  overflow-y: scroll;\n}\n</code></pre>\n\n<p>Note that this will cause the element to have 100% width, so if you don't want it to take up the entire horizontal width of the page, you need to specify an explicit width for the element as well.</p>\n",
                    "is_accepted": true,
                    "score": 48
                }
            ],
            "body": "<p>I have a table with many rows on my page. I would like to set table's height, say for 500px, such that if the height of the table is bigger than that, a vertical scroll bar will appear. I tried to use CSS <code>height</code> attribute on the <code>table</code>, but it doesn't work.</p>\n",
            "last_activity_date": 1393583801,
            "question_id": 4457274,
            "score": 31,
            "tags": [
                "css",
                "table",
                "height"
            ],
            "title": "CSS: How to specify table&#39;s height such that a vertical scroll bar appears?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You need to use the <a href=\"https://developer.mozilla.org/en/DOM/element.scrollTop\"><code>scrollTop</code></a> property.</p>\n\n<p><code>document.getElementById('box').scrollTop</code></p>\n",
                    "is_accepted": true,
                    "score": 53
                }
            ],
            "body": "<p>Given this HTML snippet:</p>\n\n<pre><code>&lt;div id=\"box\" style=\"overflow:auto; width:200px; height:200px; border:1px solid black;\"&gt;\n1&lt;br&gt;2&lt;br&gt;3&lt;br&gt;4&lt;br&gt;5&lt;br&gt;6&lt;br&gt;7&lt;br&gt;8&lt;br&gt;9&lt;br&gt;10&lt;br&gt;\n11&lt;br&gt;12&lt;br&gt;13&lt;br&gt;14&lt;br&gt;15&lt;br&gt;16&lt;br&gt;17&lt;br&gt;18&lt;br&gt;19&lt;br&gt;20&lt;br&gt;\n21&lt;br&gt;22&lt;br&gt;23&lt;br&gt;24&lt;br&gt;25&lt;br&gt;26&lt;br&gt;27&lt;br&gt;28&lt;br&gt;29&lt;br&gt;30&lt;br&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>You (usually) get a black box with a scrollbar that contains the numbers 1 to 30, each in a new row.</p>\n\n<p>You can scroll up and down inside of that box.</p>\n\n<p>What I need now is a possibility to find out, at which scroll position the box is. Let's just say, each row was 15 pixel high and you scroll down to the number 10, the result I'd like to get is the number 150 (15px * 10 lines).</p>\n\n<p>Where do I find this number?</p>\n\n<p>I have plain JavaScript and jQuery at my hands.</p>\n",
            "last_activity_date": 1359404109,
            "question_id": 344615,
            "score": 31,
            "tags": [
                "javascript",
                "html",
                "css",
                "scroll-position"
            ],
            "title": "Scroll Position of div with &quot;overflow: auto&quot;"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>The class <em>defined</em> <strong>last in the CSS</strong> is what wins in these cases.  The order on the element doesn't matter, this is consistent across all browsers that I'm aware of, I'll try and ind the relevant spec bits.</p>\n\n<p>The <em>entire</em> class doesn't win, the properties individually win, if the <code>.one</code> had a property that <code>.two</code> didn't you would of course see that property on both of these <code>&lt;div&gt;</code> elements.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>It depends on which one is declared last in your stylesheet. For example,</p>\n\n<pre><code>.one { border: 6px dashed green }\n.two { border: 6px dashed orange }\n</code></pre>\n\n<p>vs</p>\n\n<pre><code>.two { border: 6px dashed green }\n.one { border: 6px dashed orange }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>the override will happen in the order in which the classes are declared. so .two always wins </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The order of the class attribute doesn't matter one bit. It depends on several things, in your case it's the order in which your css is written.</p>\n\n<p>Both styles have the same specificity, so the .two style overrides the style of .one because it's lower in the style tag.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think it's clear that no such rule applies. The rule <code>.one</code> has the same specificity as the rule <code>.two</code>, so according to the CSS standard the properties in the <code>.two</code> block override those in the <code>.one</code> because the <code>.two</code> block appears later. No reference is made anywhere to the order of the words in the <code>class</code> attribute.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>When using multiple classes for defining an element stylesheet you can use the <code>!important</code> to override the \"cascating\" of stylesheet.</p>\n\n<pre><code>.one { border: 6px dashed green !important } \n.two { border: 6px dashed orange } \n</code></pre>\n\n<p>It will make your divs green.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>When in doubt, view the page in FireBug.  It will strike out the classes that are overridden and show the order which they are applied in the page.</p>\n\n<p>Also note that inline styles will override those declared in an external stylesheet.  If you want to break the cascading chain af applicability, you can use the <strong>!important</strong> declaration as in  </p>\n\n<pre><code>p {margin: 10px 5px 0 10px !important}\n</code></pre>\n\n<p>This will cause the <strong>!important</strong> declration to override others regardless of position.  Some see it as bad practice, but it can come in handy if used judiciously.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As the other answers have noted, the order declared in the class attribute has no effect - the priority comes from the order of declarations in the CSS file.</p>\n\n<p>However, if you really want to mock up something that allows you to \"fake\" priority in the class attribute, you could try:</p>\n\n<pre><code>   .one-first { border: 6px dashed green }\n      .two-first { border: 6px dashed orange }\n\n   .one { border: 6px dashed green }\n      .two { border: 6px dashed orange }\n</code></pre>\n\n<p>And then </p>\n\n<pre><code>   &lt;div class=\"one-first two\"/&gt;\n</code></pre>\n\n<p>and</p>\n\n<pre><code>   &lt;div class=\"two-first one\"/&gt;\n</code></pre>\n\n<p>Will order the priority with the last one winning (in a similar vein to the CSS proprty that comes last taking priority.)</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Is there a rule in CSS that determines the cascading order when multiple classes are defined on an element? (<code>class=\"one two\"</code> vs <code>class=\"two one\"</code>)</p>\n\n<p>Right now, there seems to be no such effect.</p>\n\n<p>Example:  both divs are orange in color on Firefox</p>\n\n<pre><code>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n   \"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;style&gt;\n      .one { border: 6px dashed green }\n      .two { border: 6px dashed orange }\n    &lt;/style&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n\n  &lt;div class=\"one two\"&gt;\n    hello world\n  &lt;/div&gt;\n\n  &lt;div class=\"two one\"&gt;\n    hello world\n  &lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1391258803,
            "question_id": 3066356,
            "score": 24,
            "tags": [
                "web-standards",
                "css"
            ],
            "title": "Multiple CSS Classes: Properties Overlapping based on the order defined"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Good question and I don't know, but I would suspect the root of the problem is going to lie in HTML and therefore it's rendering engines being originally intended for document semantics as opposed to layout/printing semantics. CSS is exceptionally good at describing paragraphs, headings, and all kinds of document concerns and really weak when it comes to the larger DTP layout tasks which everyone now wants their websites to be.</p>\n\n<p>In a nutshell: I think the problem is that HTML is being tasked for things it was not intended for. Quel surprise.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Conceptually, CSS rules are applied to the elements of a document in the order they appear in the HTML, i.e., in a pre-order traversal of the DOM tree.  Historically, this was so that the CSS could be applied as the document was being loaded, but even with dynamic HTML and dynamic CSS, there are performance advantages to being able to apply the CSS in a single pass.</p>\n\n<p>This is why CSS has no selectors for \"an A followed by a B\" or \"an A which contains a B\", whereas it's possible to say \"an A preceded by a B\" or \"an A contained inside a B\", because in the latter cases, A precedes B in a pre-order traversal.</p>\n\n<p>Vertical centering is difficult because at the time the CSS for the child element (the element to be centered) is processed, the heights of the parent and child elements (the two values required to compute the top offset of the child element) are not known, as they both depend on elements which have not yet been processed.</p>\n\n<p>The dependence on the height of the parent element is overcome by absolute positioning: <code>top: 50%</code>.  This effectively defers calculation of the vertical offset until after the height of the parent element is known.</p>\n\n<p>Similarly, CSS3 transforms can account for the height of the child: <code>transform: translateY(-50%)</code>.  Prior to CSS3, it was common to use negative <code>margin-top</code> instead, but that required setting a fixed height on the child element.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Relative to the page, horizontal alignment in CSS is easy - a <code>margin:0 auto</code> gets you by much of the time, and a <code>text-align:center</code> for some other cases.</p>\n\n<p>My question to the gurus is not how to vertically align, but <strong>why</strong> is it so much more difficult?  Why isn't there <code>margin:auto 0</code>?  I mean, from a programming perspective.</p>\n\n<p>Theoretically, it seems like the same algorithms would apply to both types of centering.</p>\n",
            "last_activity_date": 1420836406,
            "question_id": 3931187,
            "score": 23,
            "tags": [
                "html",
                "css",
                "theory",
                "vertical-alignment"
            ],
            "title": "CSS metaphysics: WHY is page vertical alignment so difficult?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Yes, using <code>transition: all</code> could cause major drawbacks in performance. There can be a lot of cases where the browser would look if it needs to make a transition, even if user won't see it, like the color changes, dimension changes etc.</p>\n\n<p>The simplest example I can think of is this: <a href=\"http://dabblet.com/gist/1657661\">http://dabblet.com/gist/1657661</a> \u2014 try to change the zoom level or the font's size and you'll see that everything become animated.Of course there couldn't be a lot of such user interactions, but there could be some interface changes that can cause the reflow and repaints in some blocks, that could tell the browser to try and animate those changes.</p>\n\n<p>So, in general, it's recommended that you won't use the <code>transition: all</code> and would use the direct transitions instead.</p>\n\n<p>There are some other things that can go wrong with the <code>all</code> transitions, like the splash of animation on page load, where it would at first render the initial styles for blocks and then apply the style with an animation. In a lot of cases it wouldn't be the thing that you want :)</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>I've been using <code>all</code> for cases where I needed to animate more than one rule. For example, if I wanted to change the <code>color</code> &amp; <code>background-color</code> on <code>:hover</code>. </p>\n\n<p>But it turns out that you can target more than one rule for transitions, so you never <em>need</em> to resort to the <code>all</code> setting. </p>\n\n<pre><code>.nav a {\n  transition: color .2s, text-shadow .2s;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a question about rendering speed for the css3 transition property.</p>\n\n<p>Suppose I have a number of elements:</p>\n\n<pre><code>div, span, a {transition: all}\n\ndiv {margin: 2px}\nspan {opacity: .5}\na:hover {background-position: left top}\n\ndiv:hover {margin: -100px}\nspan:hover {opacity: 1}\na:hover {background-position: -5px top}\n</code></pre>\n\n<p>It's much more efficient to target all of the transitions for all of those elements using one declaration <code>div, span, a {transition: all}</code>. But my question is: would it be \"faster\" in terms of the smoothness and quickness of the animation rendering to target each element's specific transition property? For example:</p>\n\n<pre><code>div {margin: 2px; transition: margin .2s ease-in}\nspan {opacity: .5; transition: opacity .2s ease-in}\na {background-position: left top; transition: background .2s ease-in}\n\ndiv:hover {margin: -100px}\nspan:hover {opacity: 1}\na:hover {background-position: -5px top}\n</code></pre>\n\n<p>My logic in asking this is that if the css \"engine\" has to search for \"all\" transition properties even if there is just one single property for an element, that it might slow things down.</p>\n\n<p>Does anyone know if that's the case? Thanks!</p>\n",
            "last_activity_date": 1403253143,
            "question_id": 8947441,
            "score": 21,
            "tags": [
                "css",
                "css3",
                "css-transitions"
            ],
            "title": "CSS3 Transitions: Is &quot;transition: all&quot; slower than &quot;transition: x&quot;?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>minitech is right in that <code>animation-delay</code> specifies the delay before the animation starts and <em>NOT</em> the delay in between iterations.  <a href=\"http://dev.w3.org/csswg/css3-animations/#animation-delay\">The editors draft of the spec</a> describes it well and there was a discussion of this feature you're describing <a href=\"http://lists.w3.org/Archives/Public/www-style/2011May/0549.html\">here</a> which suggesting this iteration delay feature.</p>\n\n<p>While there may be a workaround in JS, you can fake this iteration delay for the progress bar flare using only CSS.  </p>\n\n<p>By declaring the flare div <code>position:absolute</code> and the parent div <code>overflow: hidden</code>, setting the 100% keyframe state greater than the width of the progress bar, and <a href=\"http://cubic-bezier.com/#.14,.38,.2,1.01\">playing around with the cubic-bezier timing function</a> and left offset values, you're able to emulate an <code>ease-in-out</code> or <code>linear</code> timing with a \"delay\". </p>\n\n<p>It'd be interesting to write a less/scss mixin to calculate exactly the left offset and timing function to get this exact, but I don't have the time at the moment to fiddle with it.  Would love to see something like that though!</p>\n\n<p>Here's a demo I threw together to show this off.  (I tried to emulate the windows 7 progress bar and fell a bit short, but it demonstrates what I'm talking about)</p>\n\n<p>Demo: \n<a href=\"http://codepen.io/timothyasp/full/HlzGu\">http://codepen.io/timothyasp/full/HlzGu</a></p>\n\n<pre><code>&lt;!-- HTML --&gt;\n&lt;div class=\"bar\"&gt;\n   &lt;div class=\"progress\"&gt;\n      &lt;div class=\"flare\"&gt;&lt;/div&gt;\n   &lt;/div&gt;\n&lt;/div&gt;\n\n\n/* CSS */\n\n@keyframes progress {\n  from {\n    width: 0px;\n  }\n  to {\n    width: 600px;\n  }\n}\n\n@keyframes barshine {\n  0% {\n    left: -100px;\n  }\n\n  100% {\n    left: 1000px;\n  }\n}\n.flare {\n  animation-name: barshine;\n  animation-duration: 3s;\n  animation-direction: normal;\n  animation-fill-mode: forwards;\n  animation-timing-function: cubic-bezier(.14, .75, .2, 1.01);\n  animation-iteration-count: infinite;\n  left: 0;\n  top: 0;\n  height: 40px;\n  width: 100px;\n  position: absolute;\n  background: -moz-radial-gradient(center, ellipse cover,  rgba(255,255,255,0.69) 0%, rgba(255,255,255,0) 87%); /* FF3.6+ */\n  background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,rgba(255,255,255,0.69)), color-stop(87%,rgba(255,255,255,0))); /* Chrome,Safari4+ */\n  background: -webkit-radial-gradient(center, ellipse cover,  rgba(255,255,255,0.69) 0%,rgba(255,255,255,0) 87%); /* Chrome10+,Safari5.1+ */\n  background: -o-radial-gradient(center, ellipse cover,  rgba(255,255,255,0.69) 0%,rgba(255,255,255,0) 87%); /* Opera 12+ */\n  background: -ms-radial-gradient(center, ellipse cover,  rgba(255,255,255,0.69) 0%,rgba(255,255,255,0) 87%); /* IE10+ */\n  background: radial-gradient(ellipse at center,  rgba(255,255,255,0.69) 0%,rgba(255,255,255,0) 87%); /* W3C */\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#b0ffffff', endColorstr='#00ffffff',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */\n  z-index: 10;\n}\n.progress {\n  animation-name: progress;\n  animation-duration: 10s;\n  animation-delay: 1s;\n  animation-timing-function: linear;\n  animation-iteration-count: infinite;\n  overflow: hidden;\n  position:relative;\n  z-index: 1;\n  height: 100%;\n  width: 100%;\n  border-right: 1px solid #0f9116;\n  background: #caf7ce; /* Old browsers */\n  background: -moz-linear-gradient(top, #caf7ce 0%, #caf7ce 18%, #3fe81e 45%, #2ab22a 96%); /* FF3.6+ */\n  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#caf7ce), color-stop(18%,#caf7ce), color-stop(45%,#3fe81e), color-stop(96%,#2ab22a)); /* Chrome,Safari4+ */\n  background: -webkit-linear-gradient(top, #caf7ce 0%,#caf7ce 18%,#3fe81e 45%,#2ab22a 96%); /* Chrome10+,Safari5.1+ */\n  background: -o-linear-gradient(top, #caf7ce 0%,#caf7ce 18%,#3fe81e 45%,#2ab22a 96%); /* Opera 11.10+ */\n  background: -ms-linear-gradient(top, #caf7ce 0%,#caf7ce 18%,#3fe81e 45%,#2ab22a 96%); /* IE10+ */\n  background: linear-gradient(to bottom, #caf7ce 0%,#caf7ce 18%,#3fe81e 45%,#2ab22a 96%); /* W3C */\nfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#caf7ce', endColorstr='#2ab22a',GradientType=0 ); /* IE6-9 */\n}\n\n.progress:after {\n  content: \"\";\n  width: 100%;\n  height: 29px;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n  z-index: 3;\n  background: -moz-linear-gradient(left, rgba(202,247,206,0) 0%, rgba(42,178,42,1) 100%); /* FF3.6+ */\n  background: -webkit-gradient(linear, left top, right top, color-stop(0%,rgba(202,247,206,0)), color-stop(100%,rgba(42,178,42,1))); /* Chrome,Safari4+ */\n  background: -webkit-linear-gradient(left, rgba(202,247,206,0) 0%,rgba(42,178,42,1) 100%); /* Chrome10+,Safari5.1+ */\n  background: -o-linear-gradient(left, rgba(202,247,206,0) 0%,rgba(42,178,42,1) 100%); /* Opera 11.10+ */\n  background: -ms-linear-gradient(left, rgba(202,247,206,0) 0%,rgba(42,178,42,1) 100%); /* IE10+ */\n  background: linear-gradient(to right, rgba(202,247,206,0) 0%,rgba(42,178,42,1) 100%); /* W3C */\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00caf7ce', endColorstr='#2ab22a',GradientType=1 ); /* IE6-9 */\n}\n\n.bar {\n  margin-top: 30px;\n  height: 40px;\n  width: 600px;\n  position: relative;\n  border: 1px solid #777;\n  border-radius: 3px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I had a similar problem and used </p>\n\n<pre><code>@-webkit-keyframes pan {\n   0%, 10%       { -webkit-transform: translate3d( 0%, 0px, 0px); }\n   90%, 100%     { -webkit-transform: translate3d(-50%, 0px, 0px); }\n}\n</code></pre>\n\n<p>Bit irritating that you have to fake your duration to account for 'delays' at either end. </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This is what you should do. It should work in that you have a 1 second animation, then a 4 second delay between iterations:</p>\n\n<pre><code>@keyframes barshine {\n  0% {\n  background-image:linear-gradient(120deg,rgba(255,255,255,0) 0%,rgba(255,255,255,0.25) -5%,rgba(255,255,255,0) 0%);\n  }\n  20% {\n    background-image:linear-gradient(120deg,rgba(255,255,255,0) 10%,rgba(255,255,255,0.25) 105%,rgba(255,255,255,0) 110%);\n  }\n}\n.progbar {\n  animation: barshine 5s 0s linear infinite;\n}\n</code></pre>\n\n<p>So I've been messing around with this a lot and you can do it without being very hacky. This is the simplest way to put in a delay between animation iterations that's 1. SUPER EASY and 2. just takes a little logic. Check out this dance animation I've made:</p>\n\n<pre><code>.dance{\n  animation-name: dance;\n  -webkit-animation-name: dance;\n\n  animation-iteration-count: infinite;\n  -webkit-animation-iteration-count: infinite;\n  animation-duration: 2.5s;\n  -webkit-animation-duration: 2.5s;\n\n  -webkit-animation-delay: 2.5s;\n  animation-delay: 2.5s;\n  animation-timing-function: ease-in;\n  -webkit-animation-timing-function: ease-in;\n\n}\n@keyframes dance {\n  0% {\n    -webkit-transform: rotate(0deg);\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -ms-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  25% {\n    -webkit-transform: rotate(-120deg);\n    -moz-transform: rotate(-120deg);\n    -o-transform: rotate(-120deg);\n    -ms-transform: rotate(-120deg);\n    transform: rotate(-120deg);\n  }\n  50% {\n    -webkit-transform: rotate(20deg);\n    -moz-transform: rotate(20deg);\n    -o-transform: rotate(20deg);\n    -ms-transform: rotate(20deg);\n    transform: rotate(20deg);\n  }\n  100% {\n    -webkit-transform: rotate(0deg);\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -ms-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n}\n\n@-webkit-keyframes dance {\n  0% {\n    -webkit-transform: rotate(0deg);\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -ms-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  20% {\n    -webkit-transform: rotate(20deg);\n    -moz-transform: rotate(20deg);\n    -o-transform: rotate(20deg);\n    -ms-transform: rotate(20deg);\n    transform: rotate(20deg);\n  }\n  40% {\n    -webkit-transform: rotate(-120deg);\n    -moz-transform: rotate(-120deg);\n    -o-transform: rotate(-120deg);\n    -ms-transform: rotate(-120deg);\n    transform: rotate(-120deg);\n  }\n  60% {\n    -webkit-transform: rotate(0deg);\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -ms-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  80% {\n    -webkit-transform: rotate(-120deg);\n    -moz-transform: rotate(-120deg);\n    -o-transform: rotate(-120deg);\n    -ms-transform: rotate(-120deg);\n    transform: rotate(-120deg);\n  }\n  95% {\n    -webkit-transform: rotate(20deg);\n    -moz-transform: rotate(20deg);\n    -o-transform: rotate(20deg);\n    -ms-transform: rotate(20deg);\n    transform: rotate(20deg);\n  }\n}\n</code></pre>\n\n<p>I actually came here trying to figure out how to put a delay in the animation, when I realized that you just 1. extend the duration of the animation and shirt the proportion of time for each animation. Beore I had them each lasting .5 seconds for the total duration of 2.5 seconds. Now lets say i wanted to add a delay equal to the total duration, so a 2.5 second delay. </p>\n\n<p>You animation time is 2.5 seconds and delay is 2.5, so you change duration to 5 seconds. However, because you doubled the total duration, you'll want to halve the animations proportion. Check the final below. This worked perfectly for me.</p>\n\n<pre><code>@-webkit-keyframes dance {\n  0% {\n    -webkit-transform: rotate(0deg);\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -ms-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  10% {\n    -webkit-transform: rotate(20deg);\n    -moz-transform: rotate(20deg);\n    -o-transform: rotate(20deg);\n    -ms-transform: rotate(20deg);\n    transform: rotate(20deg);\n  }\n  20% {\n    -webkit-transform: rotate(-120deg);\n    -moz-transform: rotate(-120deg);\n    -o-transform: rotate(-120deg);\n    -ms-transform: rotate(-120deg);\n    transform: rotate(-120deg);\n  }\n  30% {\n    -webkit-transform: rotate(0deg);\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -ms-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  40% {\n    -webkit-transform: rotate(-120deg);\n    -moz-transform: rotate(-120deg);\n    -o-transform: rotate(-120deg);\n    -ms-transform: rotate(-120deg);\n    transform: rotate(-120deg);\n  }\n  50% {\n    -webkit-transform: rotate(0deg);\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -ms-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n}\n</code></pre>\n\n<p>In sum:</p>\n\n<p>These are the calcultions you'd probably use to figure out how to change you animation's duration and the % of each part.</p>\n\n<p>desired_duration = x</p>\n\n<p>desired_duration = animation_part_duration1 + animation_part_duration2 + ... (and so on)</p>\n\n<p>desired_delay = y</p>\n\n<p>total duration = x + y</p>\n\n<p>animation_part_duration1_actual = animation_part_duration1 * desired_duration / total_duration</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I've recently discovered how to \"properly\" use CSS animations (previously I dismissed them as not being able to make complex sequences like you could in JavaScript). So now I'm learning about them.</p>\n\n<p>For this effect, I'm trying to have a gradient \"flare\" sweep across a progress bar-like element. Similar to the effect on native Windows Vista/7 progress bars.</p>\n\n<pre><code>@keyframes barshine {\n  from {background-image:linear-gradient(120deg,rgba(255,255,255,0) -10%,rgba(255,255,255,0.25) -5%,rgba(255,255,255,0) 0%);}\n  to {background-image:linear-gradient(120deg,rgba(255,255,255,0) 100%,rgba(255,255,255,0.25) 105%,rgba(255,255,255,0) 110%);}\n}\n.progbar {\n  animation: barshine 1s 4s linear infinite;\n}\n</code></pre>\n\n<p>As you can see, I am trying to have a delay of 4 seconds, followed by the shine sweeping across in 1 second, repeated.</p>\n\n<p>However, it seems that the <code>animation-delay</code> only applies to the first iteration, after which the shine just keeps sweeping across repeatedly.</p>\n\n<p>I \"resolved\" this issue as follows:</p>\n\n<pre><code>@keyframes expbarshine {\n  from {background-image:linear-gradient(120deg,rgba(255,255,255,0) -10%,rgba(255,255,255,0.25) -5%,rgba(255,255,255,0) 0%);}\n  80% {background-image:linear-gradient(120deg,rgba(255,255,255,0) -10%,rgba(255,255,255,0.25) -5%,rgba(255,255,255,0) 0%);}\n  to {background-image:linear-gradient(120deg,rgba(255,255,255,0) 100%,rgba(255,255,255,0.25) 105%,rgba(255,255,255,0) 110%);}\n}\n.progbar {\n  animation: barshine 5s linear infinite;\n}\n</code></pre>\n\n<p><code>from</code> and <code>80%</code> are exactly the same, resulting in a \"delay\" of 80% of the animation length.</p>\n\n<p>This works, but for my next animation, I need the delay to be variable (constant for a particular element, but variable among elements that use the animation), while the animation itself stays exactly the same length.</p>\n\n<p>With the above \"solution\", I would end up with a slower animation when all I want is a longer delay.</p>\n\n<p>Is it possible to have the <code>animation-delay</code> apply to all iterations, rather than just the first?</p>\n",
            "last_activity_date": 1389770162,
            "question_id": 13887889,
            "score": 17,
            "tags": [
                "css",
                "css-animations"
            ],
            "title": "CSS animation delay in repeating"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You can't. Css today simply doesn't allow that.</p>\n\n<p>The logical rendering model is this one :</p>\n\n<blockquote>\n  <p>If the object is a container element, then the effect is as if the contents of the container element were blended against the current background using a mask where the value of each pixel of the mask is .</p>\n</blockquote>\n\n<p>Reference : <a href=\"http://www.w3.org/TR/css3-color/#transparency\" rel=\"nofollow\">http://www.w3.org/TR/css3-color/#transparency</a></p>\n\n<p>The solution is to use a different element composition, usually using fixed or computed positions for what is today defined as a child : it may appear logically and visualy for the user as a child but the element doesn't need to be really a child in your code.</p>\n\n<p>A solution using css : <a href=\"http://jsfiddle.net/dystroy/RVppt/\" rel=\"nofollow\">http://jsfiddle.net/dystroy/RVppt/</a></p>\n\n<p>Another solution with javascript : <a href=\"http://jsfiddle.net/dystroy/WnQJ9/\" rel=\"nofollow\">http://jsfiddle.net/dystroy/WnQJ9/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Check out this blog post on CSS-Tricks for ways to do it:</p>\n\n<ul>\n<li><a href=\"http://css-tricks.com/non-transparent-elements-inside-transparent-elements/\" rel=\"nofollow\">Non-Transparent Elements Inside Transparent Elements</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can't do that, unless you take the child out of the parent and place it via positioning.</p>\n\n<p>The only way I know and it actually works, is to <strong>use a translucid image</strong> (.png with transparency) for the parent's background. The only disavantage is that you can't control the opacity via CSS, other than that it works!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You <strong>can do it</strong> with pseudo-elements: (<a href=\"http://dabblet.com/gist/2867543\">demo on dabblet.com</a>)\n<img src=\"http://i.stack.imgur.com/9luI6.png\" alt=\"enter image description here\"></p>\n\n<p><strong>your markup:</strong></p>\n\n<pre><code>&lt;div class=\"parent\"&gt;\n    &lt;div class=\"child\"&gt; Hello I am child &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>css:</strong></p>\n\n<pre><code>.parent{\n    position: relative;\n}\n\n.parent:before {\n    z-index: -1;\n    content: '';\n    position: absolute;\n\n    opacity: 0.2;\n    width: 400px;\n    height: 200px;\n    background: url('http://img42.imageshack.us/img42/1893/96c75664f7e94f9198ad113.png') no-repeat 0 0; \n}\n\n.child{\n    Color:black;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>May be it's good if you define your <strong>background-image</strong> in the <code>:after</code> pseudo class. Write like this:</p>\n\n<pre><code>.parent{\n    width:300px;\n    height:300px;\n    position:relative;\n    border:1px solid red;\n}\n.parent:after{\n    content:'';\n    background:url('http://www.dummyimage.com/300x300/000/fff&amp;text=parent+image');\n    width:300px;\n    height:300px;\n    position:absolute;\n    top:0;\n    left:0;\n    opacity:0.5;\n}\n.child{\n    background:yellow;\n    position:relative;\n    z-index:1;\n}\n</code></pre>\n\n<p>Check this <a href=\"http://jsfiddle.net/hzSG8/\">http://jsfiddle.net/hzSG8/</a></p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>I know this is old, but just in case it will help someone else. </p>\n\n<pre><code>&lt;div style=\"background-color: rgba(255, 0, 0, 0.5)\"&gt;child&lt;/div&gt; \n</code></pre>\n\n<p>Where <code>rgba</code> is: red, green, blue, and <code>a</code> is for transparency.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>I had the same problem and I fixed by setting transparent png image as background for the parent tag.</p>\n\n<p><a href=\"http://i.stack.imgur.com/2eS18.png\" rel=\"nofollow\">This is the 1px x 1px PNG Image that I have created with 60% Opacity of black background</a> !</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As mentioned by Tom, <code>background-color: rgba(229,229,229, 0.85)</code> can do the trick.\nPlace that on the style of the parent element and child wont be affected.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Hey i am searching in google but i can't fine any perfect answer</p>\n\n<p>I want to Opacity in parent DIV but not Child  DIV</p>\n\n<p>Example </p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div class=\"parent\"&gt;\n&lt;div class=\"child\"&gt;\nHello I am child \n&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>Css</strong></p>\n\n<pre><code>.parent{\nbackground:url('../images/madu.jpg') no-repeat 0 0;\n}\n.child{\nColor:black;\n}\n</code></pre>\n\n<p><strong>Note: --</strong> I want to <strong>background-image</strong> in <code>Parent Div</code> not Color </p>\n",
            "last_activity_date": 1419412310,
            "question_id": 10879045,
            "score": 17,
            "tags": [
                "css",
                "css3",
                "parent-child",
                "opacity"
            ],
            "title": "How to set opacity in parent div and not affect in child div?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Yes, but beware that while CSS syntax is case-insensitive, it does not specify how browsers should handle case when matching CSS rules to HTML class names.  Browsers are known to vary on this issue.</p>\n\n<p>From <a href=\"http://www.w3.org/TR/CSS21/\">the spec</a>, <a href=\"http://www.w3.org/TR/CSS21/syndata.html#characters\">section 4.1.3</a>:</p>\n\n<blockquote>\n  <p>All CSS syntax is case-insensitive within the ASCII range...</p>\n  \n  <p>In CSS, identifiers (including element names, classes, and IDs in selectors) can contain only the characters [a-zA-Z0-9] and ISO 10646 characters U+00A1 and higher, plus the hyphen (-) and the underscore (_); they cannot start with a digit, or a hyphen followed by a digit. Identifiers can also contain escaped characters and any ISO 10646 character as a numeric code (see next item). For instance, the identifier \"B&amp;W?\" may be written as \"B\\&amp;W\\?\" or \"B\\26 W\\3F\".</p>\n  \n  <p>...the case-sensitivity of values of the HTML attributes \"id\" and \"class\", of font names, and of URIs lies outside the scope of this specification.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Sure.  <a href=\"http://www.w3.org/TR/CSS21/syndata.html#characters\" rel=\"nofollow\">Here</a> are the official rules; basically you shouldn't start the name with a number, and you can use letters, numbers, hyphen, underscore, and escaped or encoded characters.</p>\n\n<p>However, as a matter of convention, hyphens are generally used instead of camel case.  </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Yes you can. Just be sure that if you call a class \"fooBar\" in your css file that you use consistent caps when assigning class=\"fooBar\" in your markup.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yes, class names are case sensetive, so that works fine.</p>\n\n<p>However, you should be aware that some browsers get this wrong, and doesn't treat class names as case sensetive. Therefore you should avoid using both the upper case and lower case variations of the same name. The classes <code>imgSuper</code> and <code>imgsuper</code> may be treated as the same by some browsers.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want to name a CSS class and call it imgSuper. Can I use camel-casing in CSS classes?</p>\n",
            "last_activity_date": 1297333685,
            "question_id": 1547986,
            "score": 14,
            "tags": [
                "css",
                "case-sensitive"
            ],
            "title": "Can I use camel-case in CSS class names"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This is one of the situations where it doesn't really make sense until you realise that the alternatives make less sense.</p>\n\n<p>As you probably know, margins specify the distance between elements, it's not an \"outer padding\" that surrounds each element. If two elements with the margin 20px are next to each other, the distance between them is 20px, not 40px.</p>\n\n<p>As the margin is a distance to another element, it makes sense that the distance is from the element to the surrounding elements, not to the boundary of the parent element.</p>\n\n<p>If the margin would be counted to the boundary of the parent element, putting elements in a <code>div</code> element would introduce extra spacing between the elements eventhough the <code>div</code> itself has no margin or padding. The margins around an element should remain the same if you add an unstyled <code>div</code> around it.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>When it could be helpful? </p>\n\n<p>The simplest example: a list of paragraphs and headings, each with a <code>margin-top</code> and <code>margin-bottom</code>. You want a margin on the top and bottom of the article, and between different elements.</p>\n\n<p>With margin collapsing, you can do without setting special margins on the first or last item (NOT a part of the original CSS spec!) or padding the container. </p>\n\n<p>But I agree, on a whole, it's a pointless feature.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Consider a body of text containing multiple paragraphs. You want each paragraph to be separated by 2em, and you want the first paragraph to be separated from the preceding content by 2em, and the last paragraph to be separated from the following content by 2em.</p>\n\n<p>This is easily accomplished with the following CSS, because the top and bottom margins separating the paragraphs will collapse:</p>\n\n<pre><code>p {\n    margin-top: 2em\n    margin-bottom: 2em;\n}\n</code></pre>\n\n<p>If margins didn't collapse, this would result in the margins being separated by a space of 4em, not 2em. Without margin collapsing, the only way to achieve the desired effect would be to set up some additional rules for the first and last paragraphs, which would involve giving them a class or id (which would have to be maintained if the text was ever altered), or wrapping them in an otherwise-unnecessary extra element and using :first-child and :last-child, or... well, you get the idea.</p>\n\n<p>I can guarantee that, if margin collapsing didn't occur, SO would have a lot of duplicate questions asking for workarounds to achieve the consistent spacing that the above rule provides :-)</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Just can't figure out the situation when this clever set of rules can be helpful. They break the simplicity of the box model and provide infinite source of troubles when you combine different pieces of layout together. So what is the reason?</p>\n\n<p><a href=\"http://www.w3.org/TR/css3-box/#collapsing-margins\">Rules</a> for the reference.</p>\n\n<p>Update: Rules are quite logical for sibling elements, but why margins should propagate to parent elements up to the tree? What kind of problems that solves?</p>\n\n<p>For example:</p>\n\n<pre><code>&lt;div style=\"margin: 20px; background-color: red;\"&gt;\n    &lt;div style=\"margin: 20px;\"&gt;\n        &lt;p style=\"margin: 100px;\"&gt;red&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;div style=\"margin: 20px; background-color: blue;\"&gt;blue&lt;/div&gt;\n</code></pre>\n\n<p>Top level divs are spaced from each other by 100px.</p>\n",
            "last_activity_date": 1253189875,
            "question_id": 1438114,
            "score": 13,
            "tags": [
                "css",
                "margin",
                "collapse"
            ],
            "title": "For what reason margin collapse rules were introduced in CSS?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You might try this tool: <a href=\"http://fittextjs.com/\" rel=\"nofollow\">http://fittextjs.com/</a></p>\n\n<p>I haven't used this second tool, but it seems similar: <a href=\"https://github.com/zachleat/BigText\" rel=\"nofollow\">https://github.com/zachleat/BigText</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can use <code>em</code>, <code>%</code>, <code>px</code>. But in combination with <code>media-queries</code> Se this <a href=\"http://www.w3.org/TR/css3-mediaqueries/\">LINK</a> to learn about media-queries. Also, CSS3 have some new values for sizing things relative to the current viewport size: <code>vw</code>, <code>vh</code>, and <code>vmin</code>. See <a href=\"http://css-tricks.com/viewport-sized-typography/\">link</a> about that.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>@media screen and (max-device-width : 320px)\n{\n  body or yourdiv element\n  {\n    font:&lt;size&gt;px/em/cm;\n  }\n}\n@media screen and (max-device-width : 1204px)\n{\n  body or yourdiv element\n  {\n    font:&lt;size&gt;px/em/cm;\n  }\n}\n</code></pre>\n\n<p>You can give it manually according to screen size of screen.Just have a look of different screen size and add manually the font size.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I've developed a nice JS solution - which is suitable for entirely-responsive HTML (i.e. HTML built with percentages)</p>\n\n<ol>\n<li><p>I use only \"em\" to define font-sizes.</p></li>\n<li><p>html font size is set to 10 pixels:</p></li>\n</ol>\n\n<blockquote>\n  <p>html {</p>\n\n<pre><code>  font-size: 100%;\n  font-size: 62.5%;\n}\n</code></pre>\n</blockquote>\n\n<ol>\n<li>I call a font-resizing function on document-ready:</li>\n</ol>\n\n<blockquote>\n  <p>// this requires JQuery</p>\n\n<pre><code>function doResize()\n{\n\n  // FONT SIZE\n  var ww = $('body').width();\n  var maxW = [your design max-width here];\n  ww = Math.min(ww, maxW);\n  var fw = ww*(10/maxW);\n  var fpc = fw*100/16;\n  var fpc = Math.round(fpc*100)/100;\n  $('html').css('font-size',fpc+'%');\n\n}\n</code></pre>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There are several ways to achieve this </p>\n\n<p>Use <strong>media query</strong> but requires font sizes for several breakpoints </p>\n\n<pre><code>    body\n    {\n        font-size: 22px; \n    }\n    h1\n    {\n       font-size:44px;\n    }\n\n    @media (min-width: 768)\n    {\n       body\n       {\n           font-size: 17px; \n       }\n       h1\n       {\n           font-size:24px;\n       }\n    }\n</code></pre>\n\n<p>Use dimensions in <strong>% or em</strong>. Just change the base font size everything will change. Unlike previous one you could just change the body font and not h1 everytime or let base font size to  default of the device and rest all in em </p>\n\n<ol>\n<li><strong>\u201cEms\u201d (em)</strong>: The \u201cem\u201d is a scalable unit. An em is equal to the current font-size, for instance, if the font-size of the document is 12pt, 1em is equal to 12pt. Ems are scalable in nature, so 2em would equal 24pt, .5em would equal 6pt, etc.. </li>\n<li><strong>Percent (%)</strong>: The percent unit is much like the \u201cem\u201d unit, save for a few fundamental differences. First and foremost, the current font-size is equal to 100% (i.e. 12pt = 100%). While using the percent unit, your text remains fully scalable for mobile devices and for accessibility.</li>\n</ol>\n\n<p>see <a href=\"http://kyleschaeffer.com/development/css-font-size-em-vs-px-vs-pt-vs/\" rel=\"nofollow\">kyleschaeffer.com/....</a></p>\n\n<p><strong>CSS3</strong> supports  new dimensions that are relative to view port. But this doesn't work in android </p>\n\n<ol>\n<li>3.2vw = 3.2% of width of viewport</li>\n<li>3.2vh = 3.2% of height of viewport</li>\n<li>3.2vmin = Smaller of 3.2vw or 3.2vh</li>\n<li><p>3.2vmax = Bigger of 3.2vw or 3.2vh</p>\n\n<pre><code>body\n{\n    font-size: 3.2vw;\n}\n</code></pre></li>\n</ol>\n\n<p>see <a href=\"http://css-tricks.com/viewport-sized-typography/\" rel=\"nofollow\">css-tricks.com/....</a> and also look at <a href=\"http://caniuse.com/viewport-units\" rel=\"nofollow\">caniuse.com/....</a> </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a fluid website and the menu is 20% of its width. I want the font size of the menu to be measured properly so it always fits the width of the box and never wrap to the next line.\nI was thinking of using \"em\" as a unit but it is relative to the browser's font size, so when I change resolutions the font size stays the same. </p>\n\n<p>Tried also pts and percentages. Nothing works as I need it...</p>\n\n<p>Give me a hint of how to proceed, please.</p>\n",
            "last_activity_date": 1393228477,
            "question_id": 11777598,
            "score": 12,
            "tags": [
                "css",
                "measurement"
            ],
            "title": "Font size relative to the user&#39;s screen resolution?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can stick the footer to the bottom of the viewport just with:</p>\n\n<pre><code>position: fixed;\nbottom: 0;\n</code></pre>\n\n<p>However that will make it appear even if there's content.</p>\n\n<p>To prevent this, you will need some JavaScript:</p>\n\n<pre><code>(window.onscroll = function() {\n    var foot = document.getElementById('footer');\n    foot.style.position = \"static\";\n    if( foot.offsetTop &lt; document.documentElement.scrollTop + document.body.scrollTop + document.documentElement.offsetHeight - foot.offsetHeight)\n        foot.style.position = \"fixed\";\n})();\n</code></pre>\n\n<p>(The <code>(...)();</code> wrapper makes the onscroll function get called once when the page loads, since that's needed too)<br>\n(The above function is untested, but should work - if it doesn't, let me know and I'll make an actual test page)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The variable height of the footer causes a slight problem but the following should work:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;style type=\"text/css\"&gt;\nhtml { height: 100%; }\nbody { min-height: 100%; }\n.container { min-height: 100%; position: relative; }\n.content { padding-bottom: 200px; }\n.footer { position: absolute; bottom: 0px; background: #ebebeb; text-align: centre; }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=\"container\"&gt;\n    &lt;div class=\"content\"&gt;\n        &lt;p&gt;Content&lt;/p&gt;\n        &lt;p&gt;Content&lt;/p&gt;\n        &lt;p&gt;Content&lt;/p&gt;\n        &lt;p&gt;Content&lt;/p&gt;\n        &lt;p&gt;Content&lt;/p&gt;\n        &lt;p&gt;Content&lt;/p&gt;\n        &lt;p&gt;Content&lt;/p&gt;\n        &lt;p&gt;Content&lt;/p&gt;\n        &lt;p&gt;Content&lt;/p&gt;\n        &lt;p&gt;Content&lt;/p&gt;\n        &lt;p&gt;Content&lt;/p&gt;\n        &lt;p&gt;Content&lt;/p&gt;\n        &lt;p&gt;Content&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;div class=\"footer\"&gt;\n        &lt;p&gt;This is my footer.&lt;/p&gt;\n        &lt;p&gt;This is another line of my footer.&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt; \n</code></pre>\n\n<p>The padding on the bottom of .content means the footer won't ever overlap the content. However, given your footer will be variable sizes I'd use javascript to dynamically set the padding on the bottom of the content once on page load or each time you change the height of the footer:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n$(function() {\n    $(\".content\").css(\"padding-bottom\", parseInt($(\".footer\").height() + 20) + 'px');\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>I know you said pure CSS but I don't think there's a way given the variable height and hiding-sticky conditions. I think this is the least javascript method. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can absolutely do this in pure CSS.  <a href=\"http://pixelsvsbytes.com/blog/2011/09/sticky-css-footers-the-flexible-way/\">Clicky the linky.</a></p>\n\n<p>This concept uses <code>display: table-cell</code> organize your page sections rather than the normal <code>display: block</code>.</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;body class=\"Frame\"&gt;\n    &lt;header class=\"Row\"&gt;&lt;h1&gt;Catchy header&lt;/h1&gt;&lt;/header&gt;\n    &lt;section class=\"Row Expand\"&gt;&lt;h2&gt;Awesome content&lt;/h2&gt;&lt;/section&gt;\n    &lt;footer class=\"Row\"&gt;&lt;h3&gt;Sticky footer&lt;/h3&gt;&lt;/footer&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>.Frame {\n    display: table;\n    height: 100%;\n    width: 100%;\n}\n.Row {\n    display: table-row;\n    height: 1px;\n}\n.Row.Expand {\n    height: auto;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>All other solutions here are out of date and either use JavaScript, or <code>table</code> hacks.</p>\n\n<p>With the advent of the <a href=\"http://philipwalton.github.io/solved-by-flexbox/\">CSS flex model</a>, solving the variable-height sticky footer problem becomes very, very easy: while mostly known for laying out content in the horizontal direction, Flexbox actually works just as well for vertical layout problems. All you have to do is wrap the vertical sections in a flex container and choose which ones you want to expand. They'll automatically take up all the available space in their container.</p>\n\n<p>Note how simple the markup and the CSS are. No table hacks or anything.</p>\n\n<p>The flex model is <a href=\"http://caniuse.com/#search=flex\">supported by all major browsers</a> as well as allegedly IE11+, though my IE doesn't render this snippet correctly yet.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>html, body {\r\n  height: 100%;\r\n  margin: 0; padding: 0;  /* to avoid scrollbars */\r\n}\r\n\r\n#wrapper {\r\n  display: flex;  /* use the flex model */\r\n  min-height: 100%;\r\n  flex-direction: column;  /* learn more: http://philipwalton.github.io/solved-by-flexbox/demos/sticky-footer/ */\r\n}\r\n\r\n#header {\r\n  background: yellow;\r\n  height: 100px;  /* can be variable as well */\r\n}\r\n\r\n#body {\r\n  flex: 1;\r\n  border: 1px solid orange;\r\n}\r\n\r\n#footer{\r\n  background: lime;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"wrapper\"&gt;\r\n  &lt;div id=\"header\"&gt;Title&lt;/div&gt;\r\n  &lt;div id=\"body\"&gt;Body&lt;/div&gt;\r\n  &lt;div id=\"footer\"&gt;\r\n    Footer&lt;br/&gt;\r\n    of&lt;br/&gt;\r\n    variable&lt;br/&gt;\r\n    height&lt;br/&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>The key to note here is the height of the footer is not going to be fixed, but will vary with its content.</p>\n\n<p>When I say \u201csticky footer,\u201d I use it in what I understand to be the common definition of \u201ca footer that is never higher than the bottom of the viewport, but if there is enough content, it will be hidden until the user scrolls down far enough to see it.\u201d</p>\n\n<p>Note also I don\u2019t need to support legacy browsers. If CSS <code>display: table</code> &amp; related properties help here, they are fair game.</p>\n",
            "last_activity_date": 1414197446,
            "question_id": 10825879,
            "score": 12,
            "tags": [
                "css"
            ],
            "title": "How can a variable-height sticky footer be defined in pure CSS?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>This could be caused by the dimensions of your sprite(s). See <a href=\"http://teknocat.org/blog/computer-stuff/web-development/show/6/mobile-safari-background-image-scaling-quirk\" rel=\"nofollow\">http://teknocat.org/blog/computer-stuff/web-development/show/6/mobile-safari-background-image-scaling-quirk</a> for a full description and possible solutions. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Apparently, when you \"scroll\" on an iPhone / iPad, you're not scrolling the page in the same way as you do in a desktop browser. What you're doing is more like moving the whole page within a viewport. (I'm sure someone will correct me if I'm using the wrong terminology here.)</p>\n\n<p>This means that background-position: fixed is still \"supported\" but has no real effect, since the whole page is moving within the viewport rather than the page content scrolling within the page.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I have this problem and I'm addressing it by getting rid of my fixed footer using a separate style as mentioned here: <a href=\"http://stackoverflow.com/questions/2678297/how-to-target-css-to-ipad-but-exclude-safari-4-desktop-using-a-media-query\">how to target css to iPad but exclude Safari 4 desktop using a media query?</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The iPhone/Webkit browser cannot center align background images when placed in the body tag. The only way around this is to remove the background image from your body tag and use an additional DIV as a wrapper.</p>\n\n<pre><code>#wrapper {\n background-color: #000000;\n background-image: url('images/background_top.png');\n background-repeat: no-repeat;\n background-position: center top;\n overflow: auto;\n}\n\n\n&lt;html lang=\"en\"&gt;\n &lt;head&gt;\n  &lt;title&gt;Title&lt;/title&gt;\n  &lt;link rel=\"Stylesheet\" type=\"text/css\" href=\"styles.css\" /&gt;\n &lt;/head&gt;\n &lt;body&gt;\n  &lt;div id=\"wrapper\"&gt;\n    &lt;div id=\"header\"&gt;&lt;/div&gt;\n    &lt;div id=\"main-content\"&gt;&lt;/div&gt;\n    &lt;div id=\"footer\"&gt;&lt;/div&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>It'll work with</p>\n\n<pre><code>background-position-x: 50%;\nbackground-position-y: 0%;\n</code></pre>\n\n<p>and still add</p>\n\n<pre><code>background-position: center top;\n</code></pre>\n\n<p>for other browsers.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Create a wrapper ID to place in the body, then include the following CSS:</p>\n\n<pre><code>#background_wrap {\n    z-index: -1;\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    background-size: cover;\n    background-image: url('../images/compressed/background-mobile.png');\n    background-repeat: no-repeat;\n    background-attachment: scroll;\n}\n</code></pre>\n\n<p>Just ensure that none of your content goes within the div otherwise the whole page will be fixed with no scrolling.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an issue with background-position in mobile safari. It works fine on other desktop browsers, but not on iPhone or iPad.</p>\n\n<pre><code>body {\n background-color: #000000;\n background-image: url('images/background_top.png');\n background-repeat: no-repeat;\n background-position: center top;\n overflow: auto;\n padding: 0px;\n margin: 0px;\n font-family: \"Arial\";\n}\n\n#header {\n width: 1030px;\n height: 215px;\n margin-left: auto;\n margin-right: auto;\n margin-top: 85px;\n background-image: url('images/header.png');\n}\n\n#main-content {\n width: 1000px;\n height: auto;\n margin-left: auto;\n margin-right: auto;\n padding-left: 15px;\n padding-right: 15px;\n padding-top: 15px;\n padding-bottom: 15px;\n background-image: url('images/content_bg.png');\n background-repeat: repeat-y;\n}\n\n#footer {\n width: 100%;\n height: 343px;\n background-image: url('images/background_bottom.png');\n background-position: center;\n background-repeat: no-repeat;\n}\n</code></pre>\n\n<p>Both \"background_top.png\" and \"background_bottom.png\" are shifted too far to the left. I've googled around, and as far as I can tell, background-position <strong><em>IS</em></strong> supported in mobile safari. I've also tried every combination of keywords (\"top\", \"center\", etc.), px, and %. Any thoughts?</p>\n\n<p>Thanks!</p>\n\n<p>Update: here's the markup in the .html file, which displays the design &amp; layout fine in other browsers: (I also updated the above css)</p>\n\n<pre><code>&lt;html lang=\"en\"&gt;\n &lt;head&gt;\n  &lt;title&gt;Title&lt;/title&gt;\n  &lt;link rel=\"Stylesheet\" type=\"text/css\" href=\"styles.css\" /&gt;\n &lt;/head&gt;\n &lt;body&gt;\n  &lt;div id=\"header\"&gt;&lt;/div&gt;\n  &lt;div id=\"main-content\"&gt;&lt;/div&gt;\n  &lt;div id=\"footer\"&gt;&lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Both background images are very wide (~2000px) so as to take up space on any sized browser.</p>\n\n<p>P.S. I know that there's probably a few more efficient CSS shortcuts I could be using, but for now I like having the code organized like I have it for visibility.</p>\n",
            "last_activity_date": 1421142296,
            "question_id": 3183467,
            "score": 12,
            "tags": [
                "css",
                "mobile",
                "safari",
                "background-position"
            ],
            "title": "CSS background-position not working in Mobile Safari (iPhone/iPad)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Your desired behaviour of \"Input with Watermark\" has already been done - it's called the <a href=\"http://developers.whatwg.org/common-input-element-attributes.html#the-placeholder-attribute\"><code>placeholder</code> attribute</a>. It <a href=\"http://caniuse.com/forms\">works in modern browsers</a>.</p>\n\n<p>For older browsers, you should use a <a href=\"http://mathiasbynens.be/demo/placeholder\">jQuery plugin</a> to emulate <code>placeholder</code> for you.</p>\n\n<p>Lastly, to set the colour, you need CSS similar to this:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.placeholder {\n    color: #a8a8a8;\n}\n::-webkit-input-placeholder {\n    color: #a8a8a8;\n}\n:-moz-placeholder {\n    color: #a8a8a8;\n}\n</code></pre>\n\n<p>Unfortunately, you can't combine the above rules; <a href=\"http://stackoverflow.com/questions/10728360/why-can-i-not-group-browser-specific-css-selectors-for-different-browsers\">it won't work</a>.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<pre><code>$(document).ready(function () {\n    $(\":input[data-watermark]\").each(function () {\n        $(this).val($(this).attr(\"data-watermark\"));\n        $(this).css(\"color\",\"#a8a8a8\");\n        $(this).bind(\"focus\", function () {\n            if ($(this).val() == $(this).attr(\"data-watermark\")) $(this).val('');\n            $(this).css(\"color\",\"#000000\");\n        });\n        $(this).bind(\"blur\", function () {\n            if ($(this).val() == '') \n            {\n                $(this).val($(this).attr(\"data-watermark\"));\n                $(this).css(\"color\",\"#a8a8a8\");\n            }\n            else\n            {\n                $(this).css(\"color\",\"#000000\");\n            }\n        });\n    });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Don't override existing value's</p>\n\n<p>I'll had a small problem with this nice solution, but with a little change solved, like to share it.</p>\n\n<p>Just add the <code>if</code> statement on line 3 to prevent override loaded value's.</p>\n\n<pre><code>$(document).ready(function () {\n    $('.watermark').each(function () {\n    // add the line below\n        if (this.value == '') {\n            $(this).val($(this).attr(\"data-watermark\"));\n            $(this).css(\"color\", \"#a8a8a8\");\n            $(this).bind(\"focus\", function () {\n                if ($(this).val() == $(this).attr(\"data-watermark\"))         \n                $(this).val('');\n                $(this).css(\"color\", \"#000000\");\n            });\n            $(this).bind(\"blur\", function () {\n                if ($(this).val() == '') {\n                    $(this).val($(this).attr(\"data-watermark\"));\n                    $(this).css(\"color\", \"#a8a8a8\");\n                }\n                else {\n                    $(this).css(\"color\", \"#000000\");\n                }\n            });\n    // Don't forget the closing bracket\n        }\n    })\n});\n</code></pre>\n\n<p>Hope it's useful.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>easy way we can set the water mark on textbox.</p>\n\n<p>this is css &amp; html</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n    input.watermark { color: #999; } //light silver color\n&lt;/style&gt;\n\n&lt;label&gt;Email : &lt;/lable&gt;\n&lt;input id=\"email\" type=\"text\" /&gt;\n</code></pre>\n\n<p>this is jquery to set &amp; unset water mark when require.</p>\n\n<pre><code>$(document).ready(function() {\n\n    var watermark = 'Puts your email address';\n\n    //init, set watermark text and class\n    $('#email').val(watermark).addClass('watermark');\n\n    //if blur and no value inside, set watermark text and class again.\n    $('#email').blur(function(){\n        if ($(this).val().length == 0){\n            $(this).val(watermark).addClass('watermark');\n        }\n    });\n\n    //if focus and text is watermrk, set it to empty and remove the watermark class\n    $('#email').focus(function(){\n        if ($(this).val() == watermark){\n            $(this).val('').removeClass('watermark');\n        }\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<h3>JS</h3>\n\n<pre><code>$(document).ready(function () {\n    $(\":input[data-watermark]\").each(function () {\n        $(this).val($(this).attr(\"data-watermark\"));\n        $(this).bind('focus', function () {\n            if ($(this).val() == $(this).attr(\"data-watermark\")) $(this).val('');\n        });\n        $(this).bind('blur', function () {\n            if ($(this).val() == '') $(this).val($(this).attr(\"data-watermark\"));\n            $(this).css('color','#a8a8a8');\n        });\n    });\n});\n</code></pre>\n\n<h3>HTML</h3>\n\n<pre><code>&lt;label&gt;Name: &lt;/label&gt;\n&lt;input class=\"input\" type=\"text\" name=\"name\" maxlength=\"\" data-watermark=\"My Name\" /&gt;\n</code></pre>\n\n<h3>CSS</h3>\n\n<pre><code>.input{\n    width:190px;\n    height:16px;\n    padding-top:2px;\n    padding-left:6px;\n    color:#000;\n    font-size: 0.688em;\n    border:#8c9cad 1px solid;\n}\n</code></pre>\n\n<p>What I would like to fix is that whenever the watermarks is in value of the input that the color of the text should be <strong>grey</strong> (<code>#a8a8a8</code>). And when the value is something the user writes, then the color should be <strong>black</strong>.</p>\n\n<p>This is the fiddle: <a href=\"http://jsfiddle.net/qGvAf/\">http://jsfiddle.net/qGvAf/</a></p>\n",
            "last_activity_date": 1400680987,
            "question_id": 7433589,
            "score": 11,
            "tags": [
                "jquery",
                "css"
            ],
            "title": "Input with Watermark (css &amp; Jquery)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>From what I can tell, it comes down to IE9 not interpreting \"min-device-width\" and \"max-device-width\". </p>\n\n<p>According to <a href=\"http://msdn.microsoft.com/library/ms530813.aspx\">http://msdn.microsoft.com/library/ms530813.aspx</a> it does not support those properties, only \"min-width\" and \"max-width\".</p>\n\n<p>In addition, <a href=\"http://www.w3.org/TR/css3-mediaqueries/#error-handling\">http://www.w3.org/TR/css3-mediaqueries/#error-handling</a> states that the browser is supposed to ignore properties that it does not recognize. Not so with IE9 it seems.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Yes, use the <code>@media (max-width: 860px)</code>  instead of <code>max-device-width</code>.</p>\n\n<p>IE 9 just gave me a heart attack. The project media queries did not work. </p>\n\n<p>Then after some minutes of googling, you have to include the CSS in the HTML.\nInline styles only! </p>\n\n<p>What a drag these IE browsers are!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just in case anyone is crawling SO for an answer to this, the above two answers aren't solving the core problem which is answered here - <a href=\"http://stackoverflow.com/questions/6917639/css-media-query-not-working-in-ie-9\">CSS media query not working in IE 9</a></p>\n\n<p>Basically inline CSS3 media queries DO work in IE9 but you have to disable Compatibilty mode -</p>\n\n<pre><code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\"&gt;\n</code></pre>\n\n<p>The above meta tag needs to be placed <strong>before</strong> any other meta tags otherwise IE9 will default to compatibility mode on and will subsequently not work.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I usually add this to my projects and it's been working for me so far:</p>\n\n<pre><code>&lt;!--[if lt IE 9]&gt;\n&lt;script src=\"http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js\"&gt;&lt;/script&gt;\n&lt;script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"&gt;&lt;/script&gt;&lt;![endif]--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm having a strange problem that only occurs with IE9. I'm working on a web page that has a desktop layout, and a mobile layout. Same HTML, different CSS. The problem happens with the code below:</p>\n\n<pre><code>@media only screen and (min-device-width: 768px) and (max-device-width: 1024px), only screen and (max-device-width: 640px)\n</code></pre>\n\n<p>All browsers, with the exception of IE9, show desktop site as needed. Mobile browsers correctly show the mobile layout. The problem with IE9 is that it also shows the mobile layout.</p>\n\n<p>Now if I remove the words \"only\" and \"screen\" from the above code, IE9 then correctly displays the desktop site. The problem is, then the mobile browsers also display the desktop site. I've done some research on this, and haven't seen anything on this issue. </p>\n\n<p>Thanks for reading, </p>\n\n<p>John</p>\n",
            "last_activity_date": 1378842757,
            "question_id": 6418139,
            "score": 11,
            "tags": [
                "css",
                "internet-explorer-9",
                "mobile-website",
                "media-queries"
            ],
            "title": "Media query not working in IE9"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You could use the <code>text-align: center;</code> CSS rule. Example:</p>\n\n<pre><code>&lt;div style=\"text-align: center;\"&gt;I am centered&lt;/div&gt;\n</code></pre>\n\n<p>or with an external rule:</p>\n\n<pre><code>&lt;div class=\"centered\"&gt;I am centered&lt;/div&gt;\n</code></pre>\n\n<p>and in your separate CSS file:</p>\n\n<pre><code>.centered {\n    text-align: center;\n}\n</code></pre>\n\n<p>And here's a <a href=\"http://jsfiddle.net/Quksg/\" rel=\"nofollow\">live demo</a>.</p>\n",
                    "is_accepted": true,
                    "score": -42
                },
                {
                    "body": "<p>For people looking for getting text that is <em>both</em> centered and justified, the following should work:</p>\n\n<pre><code>&lt;div class=\"center-justified\"&gt;...lots and lots of text...&lt;/div&gt;\n</code></pre>\n\n<p>With the following CSS rule (adjust the <code>width</code> property as needed):</p>\n\n<pre><code>.center-justified {\n  text-align: justify;\n  margin: 0 auto;\n  width: 30em;\n}\n</code></pre>\n\n<p>Here's the <a href=\"http://jsfiddle.net/L4pzm/\">live demo</a>.</p>\n\n<h3>What's going on?</h3>\n\n<ol>\n<li><code>text-align: justify;</code> makes sure the text fills the full width of the <code>div</code> it is enclosed in.</li>\n<li><code>margin: 0 auto;</code> is actually a shorthand for four rules:\n<ul>\n<li>The first value is used for the <code>margin-top</code> and <code>margin-bottom</code> rules.\nThe whole thing therefore means <code>margin-top: 0; margin-bottom: 0</code>, i.e. no margins above or below the <code>div</code>.</li>\n<li>The second value is used for the <code>margin-left</code> and <code>margin-right</code> rules.\nSo this rule results in <code>margin-left: auto; margin-right: auto</code>.\nThis is the clever bit: it tells the browser to take whatever space is available on the sides and distribute it evenly on left and right.\nThe result is centered text.<br>\nHowever, this would not work without</li>\n</ul></li>\n<li><code>width: 30em;</code>, which limits the width of the <code>div</code>.\nOnly when the width is restricted is there some whitespace left over for <code>margin: auto</code> to distribute.\nWithout this rule the <code>div</code> would take up all available horizontal space, and you'd lose the centering effect.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>There doesn't appear to be a way. You can fake it by using justify and then wrapping the last line of text in a span and setting just that to text align center. It works ok for small blocks of text but is not a useful approach to large quantities of text or dynamic text.</p>\n\n<p>I suggest finding somebody at Adobe who's involved in their W3C work and nagging them to bring up right/left/center justification in their next meeting. If anyone's gonna be able to push for  basic typography features in CSS it'd be Adobe.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>&lt;div class=\"centered\"&gt;\n&lt;p style=\"text-align: justify;\"&gt;Cras justo odio, dapibus ac facilisis in, egestas eget quam. Nullam id dolor id nibh ultricies vehicula ut id elit. Etiam porta sem malesuada magna mollis euismod. Nullam id dolor id nibh ultricies vehicula ut id elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla vitae elit libero, a pharetra augue. Praesent commodo cursus magna, vel scelerisque&lt;/p&gt;nisl consectetur et.&lt;/div&gt;\n</code></pre>\n\n<p>I was able to achieve the result by wrapping the content in a div tag and applying the attribute text-align: center. Immediately after the div tag I wrapped the content in a paragraph tag and applied attribute, text-align: justify. To make the last line centered, I excluded it from the paragraph tag, which then falls back to attribute applied in the div tag. You just have to strategic about how many words you want on the last line. I've included a demo from fiddle. Hope this helps. </p>\n\n<p><a href=\"http://jsfiddle.net/brownlace/Quksg/137/\" rel=\"nofollow\">Demo - Center Justify Paragraph Text</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>None of this worked for me. I just want to center the first two lines in this paragraph but CENTER doesn't work and CENTER, DIV, SPAN, etc. all \"break\" paragraph (ie, the background formatting goes to h***).</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n&lt;!--\n.blurow {color:blue;}\n--&gt;\n&lt;/style&gt;\n\n&lt;span class=\"blurow\"&gt;\n&lt;b&gt;Tri-League Majors Division Tournament!&lt;/b&gt;&lt;br&gt;\n&lt;br&gt;\n\n&lt;div style=\"padding:0 40px 0 40px;\"&gt;\n&lt;p style=\"font-size: 0.85em; text-align:justify; padding:20px 40px 20px 40px; background-color:#dfc;\"&gt;\nPhillies over the Marlins!&lt;br&gt;\nCongratulations, Coach Princiotto, on a great season.&lt;br&gt;\n&lt;br&gt;\nAnd many thanks to Coaches Charnetski, Clark, Hill, Juan, Lewis, Lomozik, Mowchin and Princiotto for all the hard work and time you folks poured into Little League this year. The impressions you leave make a difference for a lifetime and they are appreciated more than we can say.\n&lt;/p&gt;\n&lt;/div&gt;\n&lt;br&gt;\n&lt;/span&gt;\n</code></pre>\n\n<p>The main background starts out as light yellow. The DIV tag establishes the outer boundary for the P tag which turn sets up an area of different background color for the paragraph; ie, a layered effect.</p>\n\n<p>The majority of the text needs to be justified so text-align was set at justify for the P tag. But the first two lines of text should be centered. Unfortunately, the CENTER tag has been screwed with and while it used to work before, now it just \"breaks\" the paragraph and the entire body of text falls outside the paragraph (ie, outside the desired background color area). Insult to injury, the centering in effect for this part of the page kicks in and centers the entire body of text (which is how we can tell the paragraph has been \"broken\".</p>\n\n<p>So, I'm stuck with no way to center those two lines! Anyone have any ideas that don't involve 200 lines of convoluted CSS coding?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In Firefox, this works :</p>\n\n<pre><code>.center-justified {\n    text-align: justify;\n    -moz-text-align-last: center;\n    text-align-last: center;\n}\n</code></pre>\n\n<p>Here is a compatibility table : <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/text-align-last#Browser_compatibility\">https://developer.mozilla.org/en-US/docs/Web/CSS/text-align-last#Browser_compatibility</a>. Seems to work in IE (no prefix needed), but Webkit browsers don't support it yet :(</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Calculate the length of your text line and create a block which is the same size\nas the line of text.  Center the block.  If you have two lines you will need two blocks if they are different lengths.  You could use a span tag and a br tag if you don't want extra spaces from the blocks.\nYou can also use the pre tag to format inside a block.</p>\n\n<p>And you can do this:\nstyle='text-align:center;' </p>\n\n<p>For vertical see:\n<a href=\"http://www.w3schools.com/cssref/pr_pos_vertical-align.asp\" rel=\"nofollow\">http://www.w3schools.com/cssref/pr_pos_vertical-align.asp</a></p>\n\n<p>Here is the best way for blocks and web page layouts, go here and learn flex the new standard which started in 2009.\n<a href=\"http://www.w3.org/TR/2014/WD-css-flexbox-1-20140325/#justify-content-property\" rel=\"nofollow\">http://www.w3.org/TR/2014/WD-css-flexbox-1-20140325/#justify-content-property</a></p>\n\n<p>Also w3schools has lots of flex examples.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I center-justify text?</p>\n\n<p>Currently, justify does not center the last line.</p>\n",
            "last_activity_date": 1416342481,
            "question_id": 4704896,
            "score": 11,
            "tags": [
                "html",
                "css"
            ],
            "title": "How to Center-Justify text in CSS?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>For those who come after me with the same question, the manual way works like this:</p>\n\n<pre><code>            // Now, here's a list of styles we want to check:\n        var allStyles = [\"azimuth\",\"background\",\"backgroundAttachment\",\"backgroundColor\",\"backgroundImage\",\"backgroundPosition\",\"backgroundRepeat\",\"border\",\"borderBottom\",\"borderBottomColor\",\"borderBottomStyle\",\"borderBottomWidth\",\"borderCollapse\",\"borderColor\",\"borderLeft\",\"borderLeftColor\",\"borderLeftStyle\",\"borderLeftWidth\",\"borderRight\",\"borderRightColor\",\"borderRightStyle\",\"borderRightWidth\",\"borderSpacing\",\"borderStyle\",\"borderTop\",\"borderTopColor\",\"borderTopStyle\",\"borderTopWidth\",\"borderWidth\",\"bottom\",\"captionSide\",\"clear\",\"clip\",\"color\",\"content\",\"counterIncrement\",\"counterReset\",\"cssFloat\",\"cue\",\"cueAfter\",\"cueBefore\",\"cursor\",\"direction\",\"display\",\"elevation\",\"emptyCells\",\"font\",\"fontFamily\",\"fontSize\",\"fontSizeAdjust\",\"fontStretch\",\"fontStyle\",\"fontVariant\",\"fontWeight\",\"height\",\"left\",\"letterSpacing\",\"lineHeight\",\"listStyle\",\"listStyleImage\",\"listStylePosition\",\"listStyleType\",\"margin\",\"marginBottom\",\"marginLeft\",\"marginRight\",\"marginTop\",\"markerOffset\",\"marks\",\"maxHeight\",\"maxWidth\",\"minHeight\",\"minWidth\",\"orphans\",\"outline\",\"outlineColor\",\"outlineStyle\",\"outlineWidth\",\"overflow\",\"padding\",\"paddingBottom\",\"paddingLeft\",\"paddingRight\",\"paddingTop\",\"page\",\"pageBreakAfter\",\"pageBreakBefore\",\"pageBreakInside\",\"pause\",\"pauseAfter\",\"pauseBefore\",\"pitch\",\"pitchRange\",\"playDuring\",\"position\",\"quotes\",\"richness\",\"right\",\"size\",\"speak\",\"speakHeader\",\"speakNumeral\",\"speakPunctuation\",\"speechRate\",\"stress\",\"tableLayout\",\"textAlign\",\"textDecoration\",\"textIndent\",\"textShadow\",\"textTransform\",\"top\",\"unicodeBidi\",\"verticalAlign\",\"visibility\",\"voiceFamily\",\"volume\",\"whiteSpace\",\"widows\",\"width\",\"wordSpacing\",\"zIndex\"];\n        // var allStyles = [\"float\"];\n\n        var setStyles = [];\n\n        // Now we loop through each property, and report those defined\n        $.each(allStyles, function(key, value){\n            if ($this.css(value) !== undefined){\n                setStyles.push(value, $this.css(value))\n            }\n        });\n        alert(setStyles.join(\" &lt;br /&gt; \"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<blockquote>\n  <p>is there any way to get a key/value output of all styling of a dom element?</p>\n</blockquote>\n\n<p>Yes, but don't expect the exact handling of values (units etc.) to be the same cross-browser.</p>\n\n<pre><code>var styles= [];\n\n// The DOM Level 2 CSS way\n//\nif ('getComputedStyle' in window) {\n    var cs= getComputedStyle(element, '');\n    if (cs.length!==0)\n        for (var i= 0; i&lt;cs.length; i++)\n            styles.push([cs.item(i), cs.getPropertyValue(cs.item(i))]);\n\n    // Opera workaround. Opera doesn't support `item`/`length`\n    // on CSSStyleDeclaration.\n    //\n    else\n        for (var k in cs)\n            if (cs.hasOwnProperty(k))\n                styles.push([k, cs[k]]);\n\n// The IE way\n//\n} else if ('currentStyle' in element) {\n    var cs= element.currentStyle;\n    for (var k in cs)\n        styles.push([k, cs[k]]);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>Aside from looping through an array that has each style property declared, is there any way to get a key/value output of all styling of a dom element?</p>\n\n<p>My fallback is iterating through the keys listed on: \n<a href=\"http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSview-getComputedStyle\">http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSview-getComputedStyle</a></p>\n",
            "last_activity_date": 1335759848,
            "question_id": 2558426,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "getComputedStyle (or) $.css(map) &lt;-- to get every style declaration"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Try to create more specific CSS rules for your overrides. </p>\n\n<p>The easiest way is to prepend PrimeFaces CSS definitions by a specific id which is used only on your pages:</p>\n\n<pre><code>#tuxi_site .ui-widget-content .ui-icon {\n   ...\n}\n</code></pre>\n\n<p>Read more about CSS Specificity in \"<a href=\"http://coding.smashingmagazine.com/2007/07/27/css-specificity-things-you-should-know/\" rel=\"nofollow\">CSS Specificity: Things You Should Know</a>\" article.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Basically, you have to use a more well defined (stronger) selector. The more specific your CSS is, the higher importance the interpreter will grant to it. Please see this article on CSS Cascading Order: <a href=\"http://www.w3.org/TR/CSS2/cascade.html\" rel=\"nofollow\">http://www.w3.org/TR/CSS2/cascade.html</a></p>\n\n<p>Or if you are in a rush: <a href=\"http://ww.boogiejack.com/CSS_4.html\" rel=\"nofollow\">http://ww.boogiejack.com/CSS_4.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Make sure your CSS file link comes after the PrimeFaces file in your code.</p>\n\n<pre><code>&lt;link type=\"text/css\" rel=\"stylesheet\" href=\"/showcase-labs/javax.faces.resource/theme.css.jsf?ln=primefaces-aristo\" /&gt;\n&lt;link type=\"text/css\" rel=\"stylesheet\" href=\"/showcase-labs/javax.faces.resource/primefaces.css.jsf?ln=primefaces&amp;amp;v=3.0-SNAPSHOT\" /&gt;\n\n&lt;link type=\"text/css\" rel=\"stylesheet\" href=\"YOURSTYLES.CSS\" /&gt;\n</code></pre>\n\n<p>In addition, while it is not generallythe preferred solution you can add !important after your styles to give them the highest priority: <a href=\"http://www.w3.org/TR/CSS2/cascade.html#important-rules\" rel=\"nofollow\">http://www.w3.org/TR/CSS2/cascade.html#important-rules</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If using primefaces 2.2.1, Use the h:outputStylesheet tag and include it in h:body not in h:head to override primefaces stylesheets, same with h:outputScript.</p>\n\n<p>Example: </p>\n\n<pre><code>&lt;h:body&gt;\n  &lt;h:outputStylesheet library=\"css\" name=\"YOURSTYLES.css\" /&gt;\n  &lt;h:outputScript library=\"javascript\" name=\"YOURSCRIPT.js\" target=\"head\" /&gt;\n&lt;/h:body&gt;\n</code></pre>\n\n<p>If using primefaces 3, follow this blog entry\n<a href=\"http://blog.primefaces.org/?p=1433\">http://blog.primefaces.org/?p=1433</a></p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Adding to what @Ravi already answered: </p>\n\n<p>From primefaces 3.0 on you can customize the order of the resources. However when I tried that it was not working at first. </p>\n\n<p>It turned out that I could not use the JSF component to include css like this: </p>\n\n<pre><code>&lt;f:facet name=\"last\"&gt;\n    &lt;h:outputStylesheet library=\"css\" name=\"bootstrap.css\" /&gt;\n&lt;/f:facet&gt;\n</code></pre>\n\n<p>Instead I had to use:</p>\n\n<pre><code>&lt;f:facet name=\"last\"&gt;\n    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"#{facesContext.externalContext.requestContextPath}/resources/css/bootstrap.css\" /&gt;\n&lt;/f:facet&gt; \n</code></pre>\n\n<p>Only then the ordering started to work.</p>\n\n<p><strong>EDIT</strong>: My answer is superfluous if you put the <code>facet</code> into the <code>body</code> (instead of <code>head</code>). Just like Ravi wrote in his answer. (I must have missed that somehow.)</p>\n\n<p>It also not advisable to do this because then the resources are not processed by the <code>FacesServlet</code> and problems with paths inside of css can come up. Compare this <a href=\"http://stackoverflow.com/a/6926193/332248\">answer</a> from BalusC. </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you want to override primefaces.css, you can do it by creating blank resouces/primefaces/primefaces.css . It's not perfect but working with Primefaces 5.0</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Simply i tried to look the name of a component in generated HTML through FireBug after that i change it in my manually defined css in JSF project, but could not override the PrimeFaces' CSS definition. Thanks in advance for any idea.</p>\n",
            "last_activity_date": 1418818531,
            "question_id": 8578494,
            "score": 10,
            "tags": [
                "css",
                "jsf",
                "primefaces"
            ],
            "title": "How to override stylesheets of PrimeFaces?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use the <code>setInterval</code> method and switch between classes defined in your CSS which have different background-images:</p>\n\n<pre><code>setInterval(function() {\n    var $body = $('body');\n    if($body.hasClass('background1'))\n    {\n        $body.removeClass('background1');\n        $body.addClass('background2');\n    }\n    else {        \n        $body.removeClass('background2');\n        $body.addClass('background1');\n    }\n}, 1000);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/cnY8N/192/\" rel=\"nofollow\">Fiddle</a></p>\n\n<p>This example uses an interval of <code>1000</code> which is one second. You can change this value for whatever period of time you're looking for. </p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Noticed your question asked for a fade so I added a CSS3 property on body:</p>\n\n<pre><code>body\n{\n    transition: background 0.5s linear;\n}\n</code></pre>\n\n<p>The fiddle has been updated.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<h1>Re-UPDATE of the UPDATE:</h1>\n\n<h1><a href=\"http://jsfiddle.net/M2LmH/\" rel=\"nofollow\">Even NEWER Fiddle (without arguments.callee)</a></h1>\n\n<p><em>Changes:</em></p>\n\n<ul>\n<li>Javascript improvements</li>\n<li>CSS corrections (fits full page now)</li>\n<li>Added option for random sequence of images instead of sequential</li>\n<li><a href=\"http://jsfiddle.net/M2LmH/245/\" rel=\"nofollow\">=> Alternate version of NEWER Fiddle &lt;= (if OP's img server is down)</a></li>\n</ul>\n\n<hr>\n\n<h2>BIG UPDATE</h2>\n\n<hr>\n\n<p>Took the meat of this code from <a href=\"http://stackoverflow.com/a/14725952/2780033\">this previous answer</a> and added some bling (using my site background stash lol)</p>\n\n<p><em><a href=\"http://jsfiddle.net/VX2Zw/1/\" rel=\"nofollow\">original fiddle :)</a></em></p>\n\n<h2><a href=\"http://jsfiddle.net/VX2Zw/3/\" rel=\"nofollow\">NEW Super Fiddle</a></h2>\n\n<p><strong>Javascript:</strong></p>\n\n<pre><code>$(document).ready(function () {\n    var img_array = [1, 2, 3, 4, 5],\n        newIndex = 0,\n        index = 0,\n        interval = 5000;\n    (function changeBg() {\n\n        //  --------------------------\n        //  For random image rotation:\n        //  --------------------------\n\n            //  newIndex = Math.floor(Math.random() * 10) % img_array.length;\n            //  index = (newIndex === index) ? newIndex -1 : newIndex;\n\n        //  ------------------------------\n        //  For sequential image rotation:\n        //  ------------------------------\n\n            index = (index + 1) % img_array.length;\n\n        $('body').css('backgroundImage', function () {\n            $('#fullPage').animate({\n                backgroundColor: 'transparent'\n            }, 1000, function () {\n                setTimeout(function () {\n                    $('#fullPage').animate({\n                        backgroundColor: 'rgb(255,255,255)'\n                    }, 1000);\n                }, 3000);\n            });\n            return 'url(http://www.fleeceitout.com/images/field.' + img_array[index] + '.jpg)';\n        });\n        setTimeout(changeBg, interval);\n    })();\n});\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    position: relative;\n    background-image: url(http://www.fleeceitout.com/images/field.2.jpg);\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: 0 0;\n    background-attachment: fixed;\n}\n#fullPage {\n    position: absolute;\n    min-width: 100%;\n    min-height: 100%;\n    top: 0;\n    left: 0;\n    background-color: rgb(255, 255, 255);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Building on the answer from Dan-Nolan (formerly user506980), you can also assign the backgrounds to an array and then call each background from the array with a counter</p>\n\n<p><kbd><a href=\"http://jsfiddle.net/dhtbv1x4/\" rel=\"nofollow\"><strong>jsFiddle Demo</strong></a></kbd></p>\n\n<p>Further, you can assign the setInterval function to a variable, and then use that variable later to stop the repeats.</p>\n\n<pre><code>$(document).ready(function() {\n    var cnt=0, bg;\n    var $body = $('body');\n    var arr = ['bg1.jpg','bg2.jpg','bg3.jpg','bg4.jpg','bg5.jpg','bg6.jpg'];\n\n    var bgrotater = setInterval(function() {\n        if (cnt==5) cnt=0;\n        bg = 'url(\"' + arr[cnt] + '\")';\n        cnt++;\n        $body.css('background-image', bg);\n    }, 1000);\n\n    //To stop the backgrounds from rotating. Note the critical step above\n    //of assigning the setInterval function to a variable, in order to\n    //use it again (below) to stop the repeating function\n    $('#some_button_id').click(function() {\n        clearInterval(bgrotater);\n    });\n\n}); //END document.ready\n</code></pre>\n\n<p><strong>Since I built upon Dan-Nolan's answer, please upvote his answer if you upvote this one.</strong> And I see that Deryck has added his, and it is also correct. Upvote.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Hey i want to fade in a new background image let\u00b4s say every 60 seconds. I\u00b4ve set the background image like this:</p>\n\n<pre><code>body {background-image: url(background.jpg);}\n</code></pre>\n\n<p>Now i want to change it, so after 60seconds it changes to background2.jpg, then after 60 seconds to background3.jpg and so on..</p>\n\n<p>I\u00b4ve found a lot of stuff without changing it in the body but just as an image...\nany quick solutions?</p>\n\n<p>Thank you!</p>\n",
            "last_activity_date": 1424279223,
            "question_id": 20255903,
            "score": 9,
            "tags": [
                "jquery",
                "css",
                "background-image"
            ],
            "title": "Change the body background image with fade effect in jquery"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Padding is essentially added to the width, therefore when you say <code>width:100%</code> and <code>padding: 5px 10px</code> you're actually adding 20px to the 100% width.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Do you want the input fields to be centered?\nA trick to center elements: specify the width of the element and set the margin to auto, eg:</p>\n\n<pre><code>margin : 0px auto;\nwidth:300px\n</code></pre>\n\n<p>A link to your updated fiddle:</p>\n\n<p><a href=\"http://jsfiddle.net/4x2KP/5/\" rel=\"nofollow\">http://jsfiddle.net/4x2KP/5/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Padding is added to the overall width. Because your container has a pixel width, you are better off giving the inputs a pixel width too, but remember to remove the padding and border from the width you set to avoid the same issue.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use the CSS definition <code>box-sizing : border-box</code> so that padding will not affect an elements width or height. You may want to check the <a href=\"http://caniuse.com/css3-boxsizing\">browser compatibility of <code>box-sizing</code></a> (IE8+).</p>\n\n<p>The definition below includes current <a href=\"http://reference.sitepoint.com/css/vendorspecific\">vendor prefixes</a> for various browsers (thanks @BradleyForster).</p>\n\n\n\n<pre><code>input[type=text],\ninput[type=password] {\n    ...\n    -webkit-box-sizing : border-box;\u200c\u200b\n    -moz-box-sizing : border-box;\n    box-sizing : border-box;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/4x2KP/42/\">WORKING EXAMPLE (jsfiddle)</a></p>\n\n<p><hr />\nAlternatively, and possibly more compatible cross-browser, is to wrap the input in a styled <code>&lt;div&gt;</code> and apply padding to the <code>&lt;div&gt;</code> rather than the <code>&lt;input&gt;</code>.</p>\n\n<pre><code>div.input_wrap {\n    position:relative;\n    padding:5px 10px;\n    background-color: rgb(215, 215, 215);\n    border-radius: 2px 2px 2px 2px;\n    border: 1px solid rgb(114, 114, 114);\n    box-shadow: 0 1px 0 rgba(24, 24, 24,0.1);\n}\n\ninput[type=text],\ninput[type=password] {\n    background:none;\n    border:none;\n    width: 100%;\n    height: 30px;\n    line-height: 30px;\n    font-size: 12px;\n    color: rgb(136, 136, 136);\n    outline:none;\n\n}\n\ndiv.input_wrap:hover {\n    background:rgb(242, 242, 242) !important;\n    box-shadow:\n      inset 0 1px 0 rgba(255,255,255,0.3),\n      inset 0 -10px 10px rgba(255,255,255,0.1);\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/4x2KP/8/\">WORKING EXAMPLE (jsfiddle)</a></p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>You also have an error in your css with the exclamation point in this line:</p>\n\n<pre><code>background:rgb(242, 242, 242);!important;\n</code></pre>\n\n<p>remove the semi-colon before it. However, !important should be used rarely and can largely be avoided.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try changing the <code>box-sizing</code> to <code>border-box</code>. The <code>padding</code> is adding to <code>width</code> of your <code>input</code> elements.</p>\n\n<p><a href=\"http://jsfiddle.net/metacode/4x2KP/12/\" rel=\"nofollow\"><strong>See Demo here</strong></a></p>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>input[type=text],\ninput[type=password] {\n    width: 100%;\n    margin-top: 5px;\n    height: 25px;\n    ...\n}\n\ninput {\n    box-sizing: border-box;\n}\n</code></pre>\n\n<p><a href=\"http://css-tricks.com/box-sizing/\" rel=\"nofollow\"><strong>+<code>box-sizing</code></strong></a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to make a login form constituted of two input fields with an inset padding, but those two fields always end up exceeding its parent's boundaries; the issue stems from the added <em>inset</em> padding. What could be done in order to rectify this issue?</p>\n\n<p>JSFiddle snippet: <a href=\"http://jsfiddle.net/4x2KP/\" rel=\"nofollow\">http://jsfiddle.net/4x2KP/</a></p>\n\n<p>N.B.: The code may not be at its cleanest. For instance, the span element that encapsulates the text inputs may not be needed at all.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"mainContainer\"&gt;\n    &lt;div id=\"login\" class=\"loginForm\"&gt;\n        &lt;div class=\"login-top\"&gt;\n        &lt;/div&gt;\n        &lt;form class=\"login-fields\" onsubmit=\"alert('test'); return false;\"&gt;\n            &lt;div id=\"login-email\" class=\"login-field\"&gt;\n                &lt;label for=\"email\" style=\"-moz-user-select: none;-webkit-user-select: none;\" onselectstart=\"return false;\"&gt;E-mail address&lt;/label&gt;\n                &lt;span&gt;&lt;input name=\"email\" id=\"email\" type=\"text\"&gt;&lt;/input&gt;&lt;/span&gt;\n            &lt;/div&gt;\n            &lt;div class=\"spacer\"&gt;&lt;/div&gt;\n            &lt;div id=\"login-password\" class=\"login-field\"&gt;\n                &lt;label for=\"password\" style=\"-moz-user-select: none;-webkit-user-select: none;\" onselectstart=\"return false;\"&gt;Password&lt;/label&gt;\n                &lt;span&gt;&lt;input name=\"password\" id=\"password\" type=\"password\"&gt;&lt;/input&gt;&lt;/span&gt;\n            &lt;/div&gt;\n            &lt;div class=\"login-bottom\"&gt;\n                &lt;input type=\"checkbox\" name=\"remember\" id=\"login-remember\"&gt;&lt;/input&gt;\n                &lt;label for=\"login-remember\" style=\"-moz-user-select: none;-webkit-user-select: none;\" onselectstart=\"return false;\"&gt;Remember my email&lt;/label&gt;\n                &lt;input type=\"submit\" name=\"login-button\" id=\"login-button_normal\" style=\"cursor: pointer\" value=\"Log in\"&gt;&lt;/input&gt;\n            &lt;/div&gt;\n        &lt;/form&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>#mainContainer {\n    line-height: 20px;\n    font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif;\n    background-color: rgba(0,50,94,0.2);\n    margin: 20px auto;\n    display: table;\n    -moz-border-radius: 15px;\n    border-style: solid;\n    border-color: rgb(40, 40, 40);\n    border-radius: 2px 5px 2px 5px / 5px 2px 5px 2px;\n    border-radius: 2px;\n    border-radius: 2px 5px / 5px;\n    box-shadow: 0 5px 10px 5px rgba(0,0,0,0.2);\n}\n\n.loginForm {\n    width: 320px;\n    height: 250px;\n    padding: 10px 15px 25px 15px;\n    overflow: hidden;\n}\n\n.login-fields &gt; .login-bottom input#login-button_normal {\n    float: right;\n    padding: 2px 25px;\n    cursor: pointer;\n    margin-left: 10px;\n}\n\n.login-fields &gt; .login-bottom input#login-remember {\n    float: left;\n    margin-right: 3px;\n}\n\n.spacer {\n    padding-bottom: 10px;\n}\n\n/* ELEMENT OF INTEREST HERE! */\ninput[type=text],\ninput[type=password] {\n    width: 100%;\n    height: 20px;\n    padding: 5px 10px;\n    background-color: rgb(215, 215, 215);\n    line-height: 20px;\n    font-size: 12px;\n    color: rgb(136, 136, 136);\n    border-radius: 2px 2px 2px 2px;\n    border: 1px solid rgb(114, 114, 114);\n    box-shadow: 0 1px 0 rgba(24, 24, 24,0.1);\n}\n\ninput[type=text]:hover,\ninput[type=password]:hover,\nlabel:hover ~ input[type=text],\nlabel:hover ~ input[type=password] {\n    background:rgb(242, 242, 242);!important;\n}\n\ninput[type=submit]:hover {\n  box-shadow:\n    inset 0 1px 0 rgba(255,255,255,0.3),\n    inset 0 -10px 10px rgba(255,255,255,0.1);\n}\n\n\n.login-top {\n    height: 85px;\n}\n\n.login-bottom {\n    padding: 35px 15px 0 0;\n}\n</code></pre>\n",
            "last_activity_date": 1415810716,
            "question_id": 16907518,
            "score": 9,
            "tags": [
                "css",
                "forms",
                "input",
                "width"
            ],
            "title": "CSS Input with width: 100% goes outside parent&#39;s bound"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>By default, Sass will not convert literal color values from their hex values unless you are forcing Sass to interpolate with <code>#{}</code> or a variable. </p>\n\n<p>Using interpolation will return the \"to_sass\" version of the value you're interested in. For example, <code>#{ #fff }</code> will interpolate to \"white\". This also happens during variable replacements: color literals are translated to Color objects when used as variables, then \"to_sass\"ed into your stylesheet.</p>\n\n<p>Furthermore, you may specify the style option <code>compressed</code>, which will return the less byte-length version (i.e. <code>red</code> instead of <code>#f00</code>). Since <code>white</code> is 5 characters long and <code>#fff</code> is only 4, your rule will replace with <code>#fff</code> instead.</p>\n\n<p>There is no way to turn off the reverse HTML4 color name conversion when using variables. As a work-around, you can declare color variables as a string, then use then in styles with the <code>unquote()</code> function.</p>\n\n<pre><code>$color: '#fff';\n.white { color: unquote($color) }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                }
            ],
            "body": "<p>I have a CSS rule like this:</p>\n\n<pre><code>background: #fff url('/assets/img/file.png');\n</code></pre>\n\n<p>It is compiling to:</p>\n\n<pre><code>background: white url(\"/assets/img/file.png\");\n</code></pre>\n\n<p>Is there any way to prevent it from converting it like that? There is JS on my page that looks for RGB values and I don't want to have to convert those strings to RGB in some hacky function.</p>\n",
            "last_activity_date": 1331190422,
            "question_id": 9611571,
            "score": 9,
            "tags": [
                "css",
                "sass"
            ],
            "title": "Can I turn off SASS RGB -&gt; Color Name"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Maybe something like this:</p>\n\n<pre><code>$(\"body\").html(\"&lt;img src='ajax-loader.gif' /&gt;\");\n</code></pre>\n\n<p>Then when the page loads, replace body's content with the actual content and hopefully, fully rendered fonts, you may have to play around with this though...</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>This is down to how the browser behaves.</p>\n\n<p>First off where is your @font declared?  Is it inline to your HTML, declared in a CSS sheet on the page, or (hopefully) declared in an external CSS sheet?</p>\n\n<p>If it is not in an external sheet, try moving it to one (this is better practice anyway usually).</p>\n\n<p>If this doesn't help, you need to ask yourself is the fraction of a second difference really significantly detrimental to the user experience?  If it is, then consider JavaScript, there are a few things you might be able to do, redirects, pauses etc, but these might actually be <em>worse</em> than the original problem.  Worse for users, and worse to maintain.</p>\n\n<p>This link might help:</p>\n\n<p><a href=\"http://paulirish.com/2009/fighting-the-font-face-fout/\" rel=\"nofollow\">http://paulirish.com/2009/fighting-the-font-face-fout/</a></p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Only IE loads first the font and then the rest of the page.\nThe other browsers load things concurrently for a reason. Imagine that there's a problem with the server hosting the font or with the font downloading.\nYou will hang your entire site until the font is loaded. On my opinion a flash of unstyled text is better than not seeing the site at all</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Joni Korpi has a nice article on loading fonts before the rest of the page.</p>\n\n<p><a href=\"http://jonikorpi.com/a-smoother-page-load/\" rel=\"nofollow\">http://jonikorpi.com/a-smoother-page-load/</a></p>\n\n<p>He also uses a loading.gif to alleviate the delay so users won't get frustrated. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>(function() {\n        document.getElementsByTagName(\"html\")[0].setAttribute(\"class\",\"wf-loading\")\n        document.getElementsByTagName(\"html\")[0].setAttribute(\"className\",\"wf-loading\")\n    })();\n</code></pre>\n\n<p>use this method.. use with Webfont.js</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>The best way to detect if fonts are loaded would probably be using FontLoader <a href=\"https://github.com/smnh/FontLoader\" rel=\"nofollow\">https://github.com/smnh/FontLoader</a> or by copying their strategy.</p>\n\n<p>They bind to the scroll event in the browser, because when the font loads it will resize the text.  It uses two containing divs (that will scroll when the height changes) and a separate fallback for IE.</p>\n\n<p>The only alternative is to check the DOM periodically with <code>setInterval</code>, but using javascript events is far faster and superior.</p>\n\n<p>Obviously, you might do something like set the opacity of body to 0 and then display it in once the font loads.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm using @font-face to embed fonts in my website. First the text renders as the system default, and then (once the font file has loaded presumably) the correct font renders a fraction of a second later. Is there a way to minimise/get rid of this delay, by delaying the page rendering until after fonts have loaded or similar.</p>\n",
            "last_activity_date": 1426178702,
            "question_id": 4712242,
            "score": 9,
            "tags": [
                "css",
                "fonts",
                "font-face"
            ],
            "title": "Wait for fonts to load before rendering web page"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The approach I would take is to apply a font-size percentage to the body tag of the html</p>\n\n<pre><code>body\n{\n    font-size: 62.5%;\n}\n</code></pre>\n\n<p>Then for all other elements specify font-size in ems, which generates the size as a scaled up percentage of the inherited font-size</p>\n\n<pre><code>h1\n{\n    font-size: 1.8em;\n}\n\np\n{\n    font-size: 1.2em;\n}\n</code></pre>\n\n<p>I use 62.5% on the body because it is easy to translate this to pixel sizes when specifying other font sizes e.g. 1.2em = 12px, 1.8em = 18px and so on</p>\n\n<p>To then change the font size in the page programatically you just need to change the value of the font-size on the body and the rest of the page will scale up or down accordingly</p>\n\n<p>You can test this by having three divs</p>\n\n<pre><code>&lt;div id=\"sizeUp\"&gt;bigger text&lt;/div&gt;\n&lt;div id=\"normal\"&gt;normal text&lt;/div&gt;\n&lt;div id=\"sizeDown\"&gt;smaller text&lt;/div&gt;\n</code></pre>\n\n<p>In JQuery I believe you can do</p>\n\n<pre><code>$(document).ready(function() {\n\n    $(\"#sizeUp\").click(function() {\n\n        $(\"body\").css(\"font-size\",\"70%\");\n\n    });\n\n    $(\"#normal\").click(function() {\n\n        $(\"body\").css(\"font-size\",\"62.5%\");\n\n    })\n\n    $(\"#sizeDown\").click(function() {\n\n        $(\"body\").css(\"font-size\",\"55%\");\n\n    })\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>The easiest way to change the text size is with css. If you have access to the css file, you can change the size of all text on the page with this:</p>\n\n<pre><code>* {\n    font-size: 110%;\n  }\n</code></pre>\n\n<p>Add it to the top of your styles.css file, it affects all text on the page, and all text that use the styles.css file.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>&lt;p&gt;&lt;a href=\"#\" onclick=\"document.body.style.fontSize='x-small';\"&gt;SMALL&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=\"#\" onclick=\"document.body.style.fontSize='medium';\"&gt;MEDIUM&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=\"#\" onclick=\"document.body.style.fontSize='x-large';\"&gt;BIG&lt;/a&gt;&lt;/p&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Could you not just give control back to the browser so that they could go and change it in the <strong>View Menu > Text Size</strong> settings for the browser?? (Using Internet Explorer as an example)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just resize the font by CTRL-+ and CTRL-- (in Firefox, might be different in other browsers)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>How to increase and reduce font size of div content through jquery?</p>\n\n<pre><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;div class=\"data\"&gt;\n\nsghfhj jhkjik jhbjbjbh \n &lt;/div&gt;\n\n &lt;div &gt;&lt;input type=\"button\" value=\"increase\" class=\"increaseFont\"&gt;&lt;/input&gt;&lt;/div&gt;\n &lt;div&gt;&lt;input type=\"button\" value=\"decrease\" class=\"decreaseFont\"&gt;&lt;/input&gt;&lt;/div&gt;\n\n &lt;script type=\"text/javascript\"&gt;\n $(document).ready(function(){\n  $(\".increaseFont,.decreaseFont\").click(function(){\n  var type=  $(this).val();\n   var curFontSize = $('.data').css('font-size');\n   alert(curFontSize);\n   if(type=='increase'){\n    $('.data').css('font-size', parseInt(curFontSize)+1);\n    }\n   else{\n    $('.data').css('font-size', parseInt(curFontSize)-1);\n   }\n   alert($('.data').css('font-size'));\n\n     });\n\n\n });\n &lt;/script&gt;\n</code></pre>\n\n<p>this is working :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Simply with jQuery and HTML you can add an option to increase/decrease the font size of your text. You have to wrap the content in a div with class <code>kickblogger</code> and target that div to change it's font size using jQuery. Use this script.</p>\n\n<pre><code>&lt;script src=\" https://googledrive.com/host/0Bw5Ph-OwuTz6VkJhZmNlX1lJV0k/\"&gt; &lt;/script&gt;\n</code></pre>\n\n<p>With these buttons.</p>\n\n<pre><code>&lt;input type=\"button\" id=\"btnkickplus\" value=\"A +\" /&gt;\n&lt;input type=\"button\" id=\"btnkickminus\" value=\"A -\" /&gt;\n</code></pre>\n\n<p>\n</p>\n\n<ul>\n<li>Demo - <a href=\"http://jsfiddle.net/3N4Lf/\" rel=\"nofollow\">http://jsfiddle.net/3N4Lf/</a> </li>\n<li>Article -\n<a href=\"http://www.howtokickblogger.com/2013/09/change-text-font-size-on-blogger-using-jquery.html\" rel=\"nofollow\">http://www.howtokickblogger.com/2013/09/change-text-font-size-on-blogger-using-jquery.html</a></li>\n</ul>\n\n<p>:)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I would like to be able to change the size of text in a web page, I guess jQuery can be used, but I have no experience in javascript.</p>\n\n<p>Another problem is that the webpage is a phtml file, and multiple php echo commands are used. And the page is made up of multiple phtml files.</p>\n\n<p>EDIT: I would like to give users 3 choices for different font sizes.</p>\n",
            "last_activity_date": 1379090935,
            "question_id": 891980,
            "score": 9,
            "tags": [
                "jquery",
                "html",
                "css"
            ],
            "title": "Allow users to change font size in a webpage"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I'd use Raphael and Cufon for this sort of thing, although you have to roll your own word-wrapping when you rotate because you'll have to use Raphael's <code>print</code> instead of Cufon's <code>replace</code>. That way the fonts are vectors and the rotations are handled in a purely geometric way.</p>\n\n<p>Current problems with css-rotate go beyond cross-browser compatibility, though--in the browsers that do support it, the results often look like crap. Your site in my Firefox 3.6 looks like an aliased mishmash on uneven baselines. I know you asked a specific question, which I did my best to answer, but my advice to you is to ditch the overhead of js libraries for what you are trying to accomplish here, and just go with a high quality image. You've already invested bandwidth in the \"hanging tags\" backdrop image, so the cost of adding text to that image is minimal, while the cost of whole new js libraries to handle the issue of text rotation for you properly will be quite high. Not the most cutting-edge solution, I'll grant you... but that's where we are today.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Using <a href=\"http://www.useragentman.com/blog/2010/03/09/cross-browser-css-transforms-even-in-ie/\">Sandpaper</a>, you can use this CSS rule:</p>\n\n<pre><code>-sand-transform: rotate(90deg);\n</code></pre>\n\n<p>And it'll work in every browser - even in IE.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>If you want css rotations compatible with old versions of IE, there's a \n<code>filter progid:DXImageTransform.Microsoft.Matrix</code> for that but it can be applied only once and many calculations are involved when you calculate the final matrix out.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am using the CSS3 rule \"rotate\" to rotate a <code>div</code> containing text. You can see the page here: <a href=\"http://vitaminjdesign.com/v2/socialmedia.html\" rel=\"nofollow\">http://vitaminjdesign.com/v2/socialmedia.html</a>. I am looking for cross-browser support for rotating the <code>div</code>; however, this CSS3 rule won't work on IE. Is there a jQuery option or another JavaScript solution that will yield the same result, with cross-browser compatibility?</p>\n",
            "last_activity_date": 1340265883,
            "question_id": 2748727,
            "score": 8,
            "tags": [
                "jquery",
                "css",
                "rotation"
            ],
            "title": "CSS3 rotate alternative?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Nothing like good ol' CSS?</p>\n\n<pre><code>.center &gt; form {\n  width: 300px; // some amount to prevent using 100% width\n  margin: 0 auto;\n}\n</code></pre>\n\n<p>And change <code>.span6</code> to <code>.span12</code></p>\n\n<p>Jsfiddle <a href=\"http://jsfiddle.net/bha64/2/\" rel=\"nofollow\">here</a>.\n\u200b</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The native way for positioning elements in Bootstrap is using <code>offset</code>. I will assume that you are using a 12-column layout.</p>\n\n<h2>Bootstrap 2</h2>\n\n<pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"row\"&gt;\n        &lt;div class=\"span6 offset3\"&gt;\n            &lt;form&gt;\n                ...\n            &lt;/form&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Further information in the <a href=\"http://getbootstrap.com/2.3.2/scaffolding.html#gridSystem\">documentation</a></p>\n\n<h2>Bootstrap 3</h2>\n\n<pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"row\"&gt;\n        &lt;div class=\"col-md-6 col-md-offset-3\"&gt;\n            &lt;form&gt;\n                ...\n            &lt;/form&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Further information in the <a href=\"http://getbootstrap.com/css/#grid-offsetting\">documentation</a></p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Both answers posted are valid and work so I upvoted them. Here is another method i did not see posted.</p>\n\n<p>You can center your form by setting it to <code>display:inline-block</code> and center it within the <code>.center</code> container using <code>text-align:center</code>. This way the form will center regardless of width within that container:</p>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>.center {\n    text-align:center;\n}\n\n.center form {\n    display:inline-block;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Have you tried this?</p>\n\n<pre><code>.center form {\n        display: table;\n        margin: 0 auto;\n    }\n</code></pre>\n\n<p>This is the easy and fast solution for me.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>&lt;div class=\"container\"&gt;\n</code></pre>\n\n<p>you coding for form</p>\n\n<p><code>&lt;/div&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>This is where i found my answer.</p>\n\n<p><a href=\"http://stackoverflow.com/a/15084576/1140407\">http://stackoverflow.com/a/15084576/1140407</a></p>\n\n<pre><code>&lt;div class=\"container\"&gt;\n  &lt;div class=\"row\"&gt;\n    &lt;div class=\"span9 centred\"&gt;\n      This div will be centred.\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>and to CSS:</p>\n\n<pre><code>[class*=\"span\"].centred {\n  margin-left: auto;\n  margin-right: auto;\n  float: none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"row\"&gt;\n        &lt;div class=\"span6 center\"&gt;\n            &lt;form&gt;\n                &lt;table&gt;\n                    &lt;tbody&gt;\n                        &lt;td&gt;foo&lt;/td&gt;\n                    &lt;/tbody&gt;\n                &lt;/table&gt;\n            &lt;/form&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/bha64/\"><strong>JSfiddle</strong></a></p>\n\n<p>Note: I am using an abstracted layer so am unable to change the class of <code>&lt;form&gt;</code>.</p>\n\n<p><strong>How do I get the form centred using Twitter-Bootstrap?</strong></p>\n\n<p>FYI: I have also tried with <code>pagination-centred</code>.</p>\n",
            "last_activity_date": 1403854311,
            "question_id": 12172651,
            "score": 7,
            "tags": [
                "css",
                "html",
                "twitter-bootstrap"
            ],
            "title": "How to center form in twitter bootstrap?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>$('#button_id').hover(\n    function(){\n        $(this).text('Reply!');\n    },\n    function(){\n        $.ajax({\n            url: 'script.php',\n            type: 'post',\n            data: comment_id,\n            success: function(num_replies){\n                $('#button_id').text(num_replies + ' replies');\n            }\n        });\n    }\n);\n</code></pre>\n\n<p>I think you could use this kind of function, when you stop hovering, you feed the ajax call your comment id, and it returns the # of replies for that comment.  You can decide how you want to store/retrieve your comment ID.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would use a combination of jQuery <a href=\"http://api.jquery.com/hover/\" rel=\"nofollow\">.hover()</a> and jQuery <a href=\"http://api.jquery.com/jQuery.data/\" rel=\"nofollow\">.data():</a></p>\n\n<p><a href=\"http://jsfiddle.net/5W4Bd/\" rel=\"nofollow\">http://jsfiddle.net/5W4Bd/</a></p>\n\n<p>HTML: </p>\n\n<pre><code>&lt;div id=\"myDiv\"&gt;default text&lt;/div&gt;\n</code></pre>\n\n<p>javascript:</p>\n\n<pre><code>$('#myDiv')\n    .data('textToggle', 5)\n    .hover(function (e) {\n        var that = $(this);\n\n        // get the text from data attribute\n        var textToSet = that.data('textToggle');\n\n        // save the current text so it can be reverted\n        that.data('textToggle', that.text());\n\n        // set the new text\n        that.text(textToSet);\n    }, function (e) {\n        var that = $(this);\n\n        // get the text from data attribute\n        var textToSet = that.data('textToggle');\n\n        // save the current text so it can be reverted\n        that.data('textToggle', that.text());\n\n        // set the new text\n        that.text(textToSet);\n    });\n</code></pre>\n\n<p>edit: feel free to refactor the anonymous function used as the two callbacks to hover, since they are exactly the same :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes, you can use CSS <code>content</code>. To switch between the normal text and \"Reply!\", put the normal text in a <code>span</code> and hide that when hovering.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;button&gt;&lt;span&gt;3 replies&lt;/span&gt;&lt;/button&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>button {width:6em}\nbutton:hover span {display:none}\nbutton:hover:before {content:\"Reply!\"}\n</code></pre>\n\n<p>jsFiddle:</p>\n\n<p><a href=\"http://jsfiddle.net/4xcw7/2/\">http://jsfiddle.net/4xcw7/2/</a></p>\n\n<p>Edit: this works in IE8, but not in its compatibility mode, so I assume IE7 is out. Would that be a problem?</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>I think this would be a straightforward way to go for it. Use two span inside your button, one with content 'x replies', one with content 'Reply!'. Using CSS and :hover, you just switch which span is shown on hover.</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;button&gt;\n    &lt;span class=\"replies\"&gt;5 Replies&lt;/span&gt;\n    &lt;span class=\"comment\"&gt;Reply!&lt;/span&gt;\n&lt;/button&gt;\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>button .comment { display: none; }\nbutton:hover .replies { display: none; }\nbutton:hover .comment { display: inline; }\n</code></pre>\n\n<p>Check the <a href=\"http://jsfiddle.net/fyDZd/\">JsFiddle</a> example. This works just fine in about everything, as it uses very basic things to achieve an equally basic goal.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If anyone wants to try the same on menu links, (different language text on hover)\nhere is the <a href=\"http://jsfiddle.net/nagendra_rao/YSgKL/2/\" rel=\"nofollow\">jsfiddle example</a></p>\n\n<p>html:</p>\n\n<pre><code>&lt;a align=\"center\" href=\"#\"&gt;&lt;span&gt;kannada&lt;/span&gt;&lt;/a&gt;\n</code></pre>\n\n<p>css:</p>\n\n<pre><code>span {\n    font-size:12px;\n}\na {\n    color:green;\n}\na:hover span {\n    display:none;\n}\na:hover:before {\n    color:red;\n    font-size:24px;\n    content:\"\u0c95\u0ca8\u0ccd\u0ca8\u0ca1\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a system of comments, and each comment has a button that normally displays the number of replies to it. I want that when a user hovers over the button, the text changes from \"3 replies\" to \"Reply!\", and then, when the mouse leaves the button, the text returns to \"3 replies\".</p>\n\n<p>Because the number of replies varies for each comment, I cannot do a simple mouseover/mouseout script. One way to go around it would be to pass the number of replies as a variable, and make a small function to take care of it. But there must be a simpler way. I tried using the :hover thing in css to change the content of the tag (with the css property content), but no luck yet.</p>\n\n<p>Any help appreciated, thanks!</p>\n",
            "last_activity_date": 1366794625,
            "question_id": 9913293,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "Change text on hover, then return to the previous text"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Simple:</p>\n\n<pre><code> div &gt; p\n</code></pre>\n\n<p>affects only <em>direct children.</em></p>\n\n<pre><code> div p\n</code></pre>\n\n<p>affects grandchildren, grandgrandchildren etc. <em>as well.</em> (Won't make a difference in your example)</p>\n\n<p>The child selector <a href=\"http://www.quirksmode.org/css/contents.html\">isn't supported by IE6</a>.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Pekka has explained it in theory in <a href=\"http://stackoverflow.com/questions/3948846/are-div-p-div-p-same/3948857#3948857\">his answer</a>. Based on his answer, and <a href=\"http://stackoverflow.com/questions/3225891/what-does-means-in-css-rules/3225905#3225905\">my answer to another question about the <code>&gt;</code> combinator</a>, I'll provide an illustration, modified to address this question.</p>\n\n<p>Consider the following block of HTML, and your example CSS selectors. <strong>I use a more elaborate example so I can show you the difference between both of your selectors:</strong></p>\n\n<pre><code>&lt;div&gt;\n    &lt;p&gt;The first paragraph.&lt;/p&gt;                 &lt;!-- [1] --&gt;\n    &lt;blockquote&gt;\n        &lt;p&gt;A quotation.&lt;/p&gt;                     &lt;!-- [2] --&gt;\n    &lt;/blockquote&gt;\n    &lt;div&gt;\n        &lt;p&gt;A paragraph after the quotation.&lt;/p&gt; &lt;!-- [3] --&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>Which <code>&lt;p&gt;</code>s are selected by which selectors?</strong></p>\n\n<p>First off, <em>all of them match <code>div p</code></em> because they are <code>&lt;p&gt;</code> elements situated <em>anywhere within</em> a <code>&lt;div&gt;</code> element.</p>\n\n<p>That makes <code>div &gt; p</code> more specific, which begs the next question:</p>\n\n<p><strong>Which <code>&lt;p&gt;</code>s are selected by <code>div &gt; p</code>?</strong></p>\n\n<ol>\n<li><p><strong>Selected</strong></p>\n\n<p>This paragraph <code>&lt;p&gt;</code> is a child, or a direct descendant, of the outermost <code>&lt;div&gt;</code>. That means it's not immediately contained by any other element than a <code>&lt;div&gt;</code>. The hierarchy is as simple as the selector describes, and as such it's selected by <code>div &gt; p</code>.</p></li>\n<li><p><strong>Not selected</strong></p>\n\n<p>This <code>&lt;p&gt;</code> is found in a <code>&lt;blockquote&gt;</code> element, and the <code>&lt;blockquote&gt;</code> element is found in the outermost <code>&lt;div&gt;</code>. The hierarchy would thus look like this:</p>\n\n<pre><code>div &gt; blockquote &gt; p\n</code></pre>\n\n<p>As the paragraph is directly contained by a blockquote, it's <em>not</em> selected by <code>div &gt; p</code>. However, it <em>can</em> match <code>blockquote &gt; p</code> (in other words, it's a child of the <code>&lt;blockquote&gt;</code>).</p></li>\n<li><p><strong>Selected</strong></p>\n\n<p>This paragraph lives in the inner <code>&lt;div&gt;</code>, which is contained by the outer <code>&lt;div&gt;</code>. The hierarchy would look like this:</p>\n\n<pre><code>div &gt; div &gt; p\n</code></pre>\n\n<p>It doesn't matter if there are more <code>&lt;div&gt;</code>s nested within each other, or even if the <code>&lt;div&gt;</code>s are contained by other elements. As long as this paragraph is directly contained by its own <code>&lt;div&gt;</code>, it will be selected by <code>div &gt; p</code>.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>Hey, I've an obvious question.</p>\n\n<p>For code like:</p>\n\n<pre><code>&lt;div&gt;\n     &lt;p&gt;We want to format this text :)&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Some people use selector like:</p>\n\n<pre><code>div &gt; p {\n     something\n}\n</code></pre>\n\n<p>And others:</p>\n\n<pre><code>div p {\n     something\n}\n</code></pre>\n\n<p>What's the difference in this case? In my opinion - none?</p>\n\n<p>And by the way, isn't the descendant item always a child?! What's the difference between the two? I'm reading w3.org but can't get it :)</p>\n\n<p>Thank you!</p>\n",
            "last_activity_date": 1302643710,
            "question_id": 3948846,
            "score": 7,
            "tags": [
                "html",
                "css",
                "css-selectors"
            ],
            "title": "Are &quot;div &gt; p&quot; &amp; &quot;div p&quot; same?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Interesting question. There is a jquery parser over at Daniel Wachsstock's site. <a href=\"http://bililite.com/blog/2009/01/16/jquery-css-parser/\" rel=\"nofollow\">http://bililite.com/blog/2009/01/16/jquery-css-parser/</a></p>\n\n<p>Unfortunately it may not be what you are searching for...but it's worth a try. The following description is taken from his site:</p>\n\n<p>In jQuery you call <code>$(selector).parsecss(callback)</code></p>\n\n<p>which scans all  and  elements in $(selector) or its descendents, parses each one and passes an object (details below) to the callback function.</p>\n\n<p>For instance create a CSS file:</p>\n\n<pre><code>.gallery a {\n  -jquery-lightbox: {overlayBgColor: '#ddd'}\n}\n</code></pre>\n\n<p>and you get</p>\n\n<pre><code>$('.gallery a').lightbox({overlayBgColor: '#ddd'});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>On the client-side, a stylesheet is already an object; it gets parsed into a tree when the page loads.</p>\n\n<p>Lets say you have an HTML page starting with</p>\n\n<pre><code>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt; \n  &lt;head&gt; \n    &lt;link href=\"/styles/global.css\" rel=\"stylesheet\" type=\"text/css\" media=\"screen\"/&gt; \n    &lt;link href=\"/styles/catalog.css\" rel=\"stylesheet\" type=\"text/css\" media=\"screen\"/&gt; \n    &lt;link href=\"/styles/banner.css\" rel=\"stylesheet\" type=\"text/css\" media=\"screen\"/&gt; \n</code></pre>\n\n<p>and <code>global.css</code> contains the lines</p>\n\n<pre><code>#page { background-color: #fff; margin-top: 20px; margin-bottom: 20px; text-align: left; width: 100%; margin-top: 20px; padding: 0px; min-width: 900px; border: none; }\n#header { background-color: transparent; }\n#main { background-color: transparent; margin-left: 10px; margin-right: 10px; padding: 8px 0px 8px 0px;}\n#sidebar { margin-right: 12px; }\n</code></pre>\n\n<p>Then, in order to find what's set for <code>background-color</code> of <code>#page</code>, you'd need to write <code>document.styleSheets[0].cssRules[0].style.backgroundColor</code>, which would return <code>#fff</code> (or <code>rgb(255,  255, 255)</code> on some browsers, I think).</p>\n\n<p>Other useful stuff assuming the above sheets:</p>\n\n<pre><code>document.styleSheets[0].cssRules[3].cssText //\"#sidebar { margin-right: 12px; }\"\ndocument.styleSheets[0].cssRules[2].selectorText //\"#main\"\n</code></pre>\n\n<p>If you had a more complex selector, like <code>#main div.header a, #main div.header a:visited</code>, then the selector text property returns the entire thing, not just the first bit.</p>\n\n<p>Your specific question is \"How can I find out what is set in the stylesheet for a given selector\". Here's one way to approximate it:</p>\n\n<pre><code>function findProperty(selector) {\n   rules = document.styleSheets[0].cssRules\n   for(i in rules) {\n      if(rules[i].selectorText==selector) return rules[i].cssText;\n   }\n   return false;\n}\n\nfindProperty('#sidebar'); //returns \"#sidebar { margin-right: 12px; }\"\n</code></pre>\n\n<p>The thing is that the CSS tree you have access to in this way has already been parsed by the browser (hence the 'approximate' above). If you're in Firefox, you won't see any <code>-webkit</code> styles because mozilla just drops them. Various browsers also tend to have their own way of displaying colors (as above; if your actual .css file has a given color set to <code>#fff</code>, and you check it in JavaScript after it's parsed, you might get back <code>#fff</code>, <code>#ffffff</code> or <code>rgb(255, 255, 255)</code>).</p>\n\n<p>The above will tell you what your browser sees that CSS sheet as; if you want to know what specific ascii characters were contained in the initial .css file, the only reliable way is to look at the file itself, AFAIK.</p>\n\n<p>A reference for the stylesheet object is available <a href=\"http://www.javascriptkit.com/domref/stylesheet.shtml\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>Is there a standard or reliable method already out there for a javascript framework such as jquery to parse a stylesheet into an object?</p>\n\n<p>Two reasons for why I'm wondering:</p>\n\n<ol>\n<li><p>I have seen a couple of questions where someone wanted to know how to get the style attribute that was set by the stylesheet for a selector, not what the selector eventually inherited.</p></li>\n<li><p>If <a href=\"http://sizzlejs.com/\" rel=\"nofollow\">Sizzle</a> does what it is supposed to, this could be a solution for making sure a stylesheet got rendered correctly cross-browser. Basically have jquery parse the stylesheet and set all of the attributes manually (maybe based on browser or known unimplemented selectors.) that way the designers/developers just write a CSS3 stylesheet that is forward compatible and have jquery/sizzle do the work the browser won't.</p></li>\n</ol>\n\n<p>The only downside I see is that this still won't implement CSS3 attributes, but it's a start.</p>\n",
            "last_activity_date": 1322515217,
            "question_id": 2226869,
            "score": 7,
            "tags": [
                "jquery",
                "css",
                "stylesheet",
                "sizzle"
            ],
            "title": "CSS parser/abstracter? How to convert stylesheet into object"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use a <code>checkbox</code> to <em>simulate</em> <strong>onClick</strong> with <strong>CSS</strong>:</p>\n\n<pre><code>input[type=checkbox]:checked + p {\n    display: none;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/t5Nf8/1\" rel=\"nofollow\">JSFiddle</a></p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Adjacent_sibling_selectors\" rel=\"nofollow\">Adjacent sibling selectors</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h2>using <code>label</code> and <code>input checkbox</code>:</h2>\n\n<p><a href=\"http://jsbin.com/Amejum/2/edit\"><strong>LIVE DEMO</strong></a></p>\n\n<pre><code>  &lt;label class=\"collapse\" for=\"_1\"&gt;Collapse 1&lt;/label&gt;\n  &lt;input id=\"_1\" type=\"checkbox\"&gt;\n  &lt;div&gt;Content 1&lt;/div&gt;\n\n  &lt;label class=\"collapse\" for=\"_2\"&gt;Collapse 2&lt;/label&gt;\n  &lt;input id=\"_2\" type=\"checkbox\"&gt;\n  &lt;div&gt;Content 2&lt;/div&gt;\n</code></pre>\n\n<p>\n\n<pre><code>.collapse{\n  font-size: 31px;\n  display:block;\n}\n.collapse + input{\n  display:none;\n}\n.collapse + input + *{\n  display:none;\n}\n.collapse+ input:checked + *{\n  display:block;\n}\n</code></pre>\n\n<p>\n\n<h2>using <code>tabindex</code> and <code>:focus</code></h2>\n\n<p><strong><a href=\"http://jsbin.com/Amejum/1/edit\">LIVE DEMO</a></strong></p>\n\n<pre><code>  &lt;div class=\"collapse\" tabindex=\"1\"&gt;\n     &lt;h2 &gt;Collapse 1 +&lt;/h2&gt;\n     &lt;p&gt;Content 1....&lt;/p&gt;\n  &lt;/div&gt;\n\n  &lt;div class=\"collapse\" tabindex=\"1\"&gt;\n     &lt;h2 &gt;Collapse 2 +&lt;/h2&gt;\n     &lt;p&gt;Content 2....&lt;/p&gt;\n  &lt;/div&gt;\n</code></pre>\n\n<p>\n\n<pre><code>.collapse &gt; * + *{\n  display:none;\n}\n.collapse &gt; *{\n  cursor:pointer;\n}\n.collapse:focus{\n  outline:none;\n}\n.collapse:focus &gt; * + *{\n  display:block; \n}\n</code></pre>\n\n<p>The web page can always use jQuery, you just don't need to pull it from (eg.) googleapis but you can put it on your server in an jquery.js file.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Of course! jQuery is just a library that utilizes javascript after all.</p>\n\n<p>You can use document.getElementById to get the element in question, then change it's height accordingly. through element.style.height.</p>\n\n<pre><code>elementToChange = document.getElementById('collapseableEl');\nelementToChange.style.height = '100%';\n</code></pre>\n\n<p>Wrap that up in a neat little function that caters for toggling back and forth and you have yourself a solution.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want something very similar to Theming collapsible headers located here:</p>\n\n<p><a href=\"http://jquerymobile.com/demos/1.2.0-alpha.1/docs/content/content-collapsible.html\">http://jquerymobile.com/demos/1.2.0-alpha.1/docs/content/content-collapsible.html</a></p>\n\n<p>Without using JQuery, is this possible?</p>\n\n<p>It's for a mobile site but the page is always going to be offline so I dont really want to use jquery. Also giving custom styling to jquery mobile is alot harder than using pure css and styling it yourself.</p>\n",
            "last_activity_date": 1380845055,
            "question_id": 19170781,
            "score": 6,
            "tags": [
                "javascript",
                "html",
                "css",
                "html5",
                "css3"
            ],
            "title": "Show hide divs on click in HTML and CSS without jQuery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>No, there's nothing wrong with either compiler or your code. It's just \"Bootstrap is not meant to be used this way\". Putting a whole less file into namespace is a wise idea but it is incompatible with libraries having selectors using so-called <a href=\"http://lesscss.org/features/#parent-selectors-feature\" rel=\"nofollow\">\"Parent-Selectors\"</a> or similar tricks (i.e. when <code>&amp;</code> is <em>appended</em> to a nested selector).</p>\n\n<p>(<em>Updated</em>) See <a href=\"https://github.com/less/less.js/issues/2052#issuecomment-45681469\" rel=\"nofollow\">#2052</a> and other issues referenced from there for more details.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h2>Your Issue in Detail</h2>\n\n<p>As seven-phases-max described, there are issues with name spacing \"when the <code>&amp;</code> is <em>appended</em> to a nested selector.\" So the Bootstrap code in part has this:</p>\n\n<pre><code>.caret {\n  .btn-default &amp; {\n    border-top-color: @btn-default-color;\n  }\n  .btn-primary &amp;,\n  .btn-success &amp;,\n  .btn-warning &amp;,\n  .btn-danger &amp;,\n  .btn-info &amp; {\n    border-top-color: #fff;\n  }\n}\n</code></pre>\n\n<p>Recall that every instance of <code>&amp;</code> is replaced with the <em>full nesting structure</em>, so when you namespace it as you are, you effectively have this:</p>\n\n<pre><code>.namespace-bs {\n  .caret {\n    .btn-default &amp; {\n      border-top-color: @btn-default-color;\n    }\n    .btn-primary &amp;,\n    .btn-success &amp;,\n    .btn-warning &amp;,\n    .btn-danger &amp;,\n    .btn-info &amp; {\n      border-top-color: #fff;\n    }\n  }\n}\n</code></pre>\n\n<p>And the full nested structure is <code>.namespace .caret</code> at the point of the <code>&amp;</code> replacement, which is why you are seeing the selectors look like <code>.btn-primary .namespace-bs .caret</code> etc.</p>\n\n<h2>Work Around for LESS 1.4+</h2>\n\n<p>The following should work: </p>\n\n<ol>\n<li><p>Compile bootstrap from its LESS code as normal into a <code>bootstrap.css</code> file. This will resolve all LESS into the \"normal\" bootstrap css code, and the <code>&amp;</code> will function as expected and desired wherever it is used.</p></li>\n<li><p>Then in your name spacing LESS file, do this:</p></li>\n</ol>\n\n<pre class=\"lang-css prettyprint-override\"><code>.namespace-bs {\n    @import (less) \"css/bootstrap.css\";\n}\n</code></pre>\n\n<p>What we are doing is importing the compiled <code>bootstrap.css</code> file (which has no more <code>&amp;</code> values in it, as it is fully compiled), but as we import it, <a href=\"http://lesscss.org/#-importing\">we are telling LESS to treat the CSS as LESS code by putting the <code>(less)</code> type casting in</a>. So now, your name space should simply append itself to the full selector string of each selector in the <code>bootstrap.css</code> file, and you should end up with what you desire.</p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>Any idea why there are certain styles breaking when I compile Bootstrap 3 using Crunch / WinLESS.  I'm using this code to namespace bootstrap.</p>\n\n<pre><code>.namespace-bs {\n    @import \"less/bootstrap.less\";\n}\n</code></pre>\n\n<p>For most styles it works great but there are a few that turn out like this:</p>\n\n<pre><code>.btn-primary .namespace-bs .caret,.btn-success .namespace-bs .caret,.btn-warning .namespace-bs .caret,.btn-danger .namespace-bs .caret,.btn-info .namespace-bs .caret{border-top-color:#fff;}\n</code></pre>\n\n<p>When I would expect them to be like this:</p>\n\n<pre><code>.namespace-bs .btn-primary .caret,.namespace-bs .btn-success .caret,.namespace-bs .btn-warning .caret,.namespace-bs .btn-danger .caret,.namespace-bs .btn-info .caret{border-top-color:#fff;}\n</code></pre>\n\n<p>Is there something wrong with my compiler or a bug in the LESS code?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1408784154,
            "question_id": 19793508,
            "score": 5,
            "tags": [
                "css",
                "twitter-bootstrap",
                "less"
            ],
            "title": "Compiling issue in Bootstrap 3 with namespace"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>position: fixed</code> doesnt work in most of the older versions of amongst others iOS and Blackberry. I have tried this fix in most of the mobile browsers and it worked smoothly\nwithout any javascript plugins.</p>\n\n<pre><code>&lt;html&gt;\n &lt;head&gt;\n&lt;style&gt;\n .fixed{\n    position:fixed;\n    top:0px;\n    left:0px;\n    width:320px;\n    height:50px;\n    background:red;\n    -webkit-backface-visibility:hidden; /*Most Important*/\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n     &lt;div class=\"fixed\"&gt;\n     Hi I m Position Fixed \n     &lt;/div&gt;\n    &lt;div&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>If it's only in a mobile browser and you don't need backwards compatibility for iOS and blackberry you would want to use a media query.</p>\n\n<pre><code>@media only screen and (max-device-width : 730px) {\n    .fixed {\n        position:fixed;\n        top:0;\n        left:0;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you can also using position:absolute to make header fixed try IT..</p>\n\n<pre><code>    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0\"&gt;\n    &lt;meta name=\"apple-mobile-web-app-capable\" content=\"yes\" /&gt;\n    &lt;title&gt;Web App Template&lt;/title&gt;\n    &lt;style type=\"text/css\" media=\"all\"&gt;\n        body,ul,li {padding:0;margin:0;border:0;}\n        body {font-family:helvetica;}\n        header{background-color:#deb500;position:absolute;z-index:2;top:0; left:0;width:100%;height:45px;padding:0;}\n        footer {background-color:#c27b00;position:absolute;z-index:2;bottom:0; left:0;width:100%;height:48px;padding:0;border-top:1px solid #444;}\n        header, footer{font-size:20px;text-align:center;color:#f3f3f3;font-weight:bold;text-shadow:0 -1px 0 rgba(0,0,0,0.5);line-height:45px;}\n        #wrapper {position:absolute;z-index:1;top:45px; bottom:48px; left:0;width:100%;background:#aaa;overflow:auto;}\n        #scroll-content {position:absolute;z-index:1;width:100%;padding:0;}\n        ul {list-style:none;padding:0;margin:0;width:100%;text-align:left;}\n        li {padding:0 10px;height:40px;line-height:40px;border-bottom:1px solid #ccc;border-top:1px solid #fff;background-color:#fafafa;font-size:14px;}\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;Web App Template&lt;/header&gt;\n    &lt;div id=\"wrapper\"&gt;\n        &lt;div id=\"scroll-content\"&gt;\n            &lt;ul&gt;\n                &lt;li&gt;Some Stuff&lt;/li&gt;\n                &lt;li&gt;More Stuff&lt;/li&gt;\n                &lt;li&gt;Big Stuff&lt;/li&gt;\n                &lt;li&gt;Small Stuff&lt;/li&gt;\n                &lt;li&gt;Geek Stuff&lt;/li&gt;\n                &lt;li&gt;Nerd Stuff&lt;/li&gt;\n                &lt;li&gt;Fast Stuff&lt;/li&gt;\n                &lt;li&gt;Slow Stuff&lt;/li&gt;\n                &lt;li&gt;Good Stuff&lt;/li&gt;\n                &lt;li&gt;Bad Stuff&lt;/li&gt;\n                &lt;li&gt;Your Stuff&lt;/li&gt;\n                &lt;li&gt;My Stuff&lt;/li&gt;\n                &lt;li&gt;Their Stuff&lt;/li&gt;\n                &lt;li&gt;Our Stuff&lt;/li&gt;\n                &lt;li&gt;Super Stuff&lt;/li&gt;\n                &lt;li&gt;Uber Stuff&lt;/li&gt;\n                &lt;li&gt;Stuff Stuff&lt;/li&gt;\n                &lt;li&gt;French Stuff&lt;/li&gt;\n                &lt;li&gt;German Stuff&lt;/li&gt;\n                &lt;li&gt;English Stuff&lt;/li&gt;\n                &lt;li&gt;American Stuff&lt;/li&gt;\n                &lt;li&gt;Stuff&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/div&gt;   \n    &lt;/div&gt;\n    &lt;footer&gt;Some Footer Content&lt;/footer&gt;\n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to make an element position fixed in <strong>Mobile browser (ios and android)</strong> ?\nElement still scrolls with below code in ios &lt; 5 and android&lt; 4</p>\n\n<pre><code>&lt;html&gt;\n &lt;head&gt;\n&lt;style&gt;\n     .fixed{\n      position:fixed;\n      top:0;\n      left:0;\n    }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n     &lt;div class=\"fixed\"&gt;\n     Hi I m Position Fixed \n     &lt;/div&gt;\n    &lt;div&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n       sample text&lt;br/&gt;\n\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1405084183,
            "question_id": 19254146,
            "score": 5,
            "tags": [
                "javascript",
                "android",
                "css",
                "position"
            ],
            "title": "Position fixed not working in mobile browser"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Setting your height to 100% in a div only means that your div will fill 100% of its container; not 100% of the page.</p>\n\n<p>I would suggest that you would either want to use a min-height declaration on your div or its container or use JavaScript to find the initial height of the user's screen (because everybody will have something slightly different) and set that as an inline style on your div.</p>\n\n<p>Code something along the lines of the following will return the screen dimensions:</p>\n\n<pre><code>var x,y;\nif (self.innerHeight) // all except Explorer\n{\n  x = self.innerWidth;\n  y = self.innerHeight;\n}\nelse if (document.documentElement &amp;&amp; document.documentElement.clientHeight)\n// Explorer 6 Strict Mode\n{\n  x = document.documentElement.clientWidth;\n  y = document.documentElement.clientHeight;\n}\nelse if (document.body) // other Explorers\n{\n  x = document.body.clientWidth;\n  y = document.body.clientHeight;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;html&gt;&lt;body style=\"margin: 0;\"&gt;\n&lt;div style=\"height: 100%; width: 100%; background: #ccc;\"&gt;a&lt;/div&gt;\n&lt;div style=\"background: #777;height: 100%; width: 100%\"&gt;b&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>works for me</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can do this completely with CSS too:</p>\n\n<pre><code>html, body {\n    margin: 0;\n    padding: 0;\n    min-height: 100%;\n    width: 100%;\n}\n\ndiv {\n    height: 100%;\n    width: 100%;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Your css style is looking for an <code>id=\"div\"</code> not a div tag. This should work assuming your div in parented by the <code>&lt;body&gt;</code> or another 100%, 100% html element:</p>\n\n<pre><code>&lt;div id=\"fullViewPort\"&gt;\n    My Content\n&lt;/div&gt;\n\n#fullViewPort {\n    width: 100%;\n    height: 100%;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If I understand correctly (there's <em>some</em> room for confusion here):</p>\n\n<p><a href=\"http://jsfiddle.net/zRpNp/\">http://jsfiddle.net/zRpNp/</a></p>\n\n<pre><code>#screenFiller {\n    position: absolute;\n    top: 0; right: 0; bottom: 0; left: 0;\n    border: 15px solid orange\n}\n</code></pre>\n\n<p>You might be after the <code>position: fixed</code> version: <a href=\"http://jsfiddle.net/zRpNp/1/\">http://jsfiddle.net/zRpNp/1/</a></p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<pre><code> &lt;style&gt;\n    body    {\n        margin:0;\n        padding:0;\n    }\n    #try    {       \n        height:100%;\n        width:100%;\n        margin:0;\n        padding:0;\n        clear:both;\n    }\n    #next   {\n        height:10%;\n    }\n    &lt;/style&gt;\n\n    &lt;body&gt;\n    &lt;div id=\"try\"&gt;hello1&lt;/div&gt;\n    &lt;div id=\"next\"&gt;hello2&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>works for me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>another way to do this with CSS only...</p>\n\n<p><a href=\"http://jsfiddle.net/pxfunc/qQ45K/\" rel=\"nofollow\">http://jsfiddle.net/pxfunc/qQ45K/</a></p>\n\n<pre><code>html, body {height:100%;} /* explicitly set html &amp; body height */\n\n#fillScreen {\n    position:relative;\n    top:0;\n    left:0;\n    height:100%;\n    width:100%;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>i think this is the easiest way... by letting the browser tell he height... using java script</p>\n\n<p>`   </p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;viewport&lt;/title&gt;\n&lt;style type=\"text/css\"&gt;\n  * { padding:0; margin:0; }\n  #test { background:#aaa; height:100%; width:100%; }\n&lt;/style&gt;\n&lt;script type=\"text/javascript\"&gt;\n  window.onload = function() {\n    var height = getViewportHeight();\n    alert(\"This is what it looks like before the Javascript. Click OK to set the          height.\");\n    if(height &gt; 0)\n      document.getElementById(\"test\").style.height = height + \"px\";\n  }\n  function getViewportHeight() {\n    var h = 0;\n    if(self.innerHeight)\n      h = window.innerHeight;\n    else if(document.documentElement &amp;&amp; document.documentElement.clientHeight)\n      h = document.documentElement.clientHeight;\n    else if(document.body) \n      h = document.body.clientHeight;\n  return h;\n  }\n&lt;/script&gt;\n &lt;/head&gt;\n &lt;body&gt;\n  &lt;div id=\"test\"&gt;\n  &lt;h1&gt;Test&lt;/h1&gt;\n  &lt;/div&gt;\n  &lt;/body&gt;\n &lt;/html&gt;`\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Personally I like the pure CSS solution. Just use the <code>vh</code> unit.</p>\n\n<pre><code>#filldiv\n{\n    height: 100vh;\n}\n</code></pre>\n\n<p>That will make the div fill the height of the browser window.\nShown in <a href=\"http://jsfiddle.net/t3w34s5o/1/\" rel=\"nofollow\">this fiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to make a div fit the initial height and width of a users screen.</p>\n\n<p>I think the following crudely drawn diagram explain this better:</p>\n\n<p><img src=\"http://i.stack.imgur.com/ayGZM.png\" alt=\"enter image description here\"></p>\n\n<pre><code>#div\n{\n width: 100%;\n height: 100%;\n}\n</code></pre>\n\n<p>does not seem to work</p>\n",
            "last_activity_date": 1418534428,
            "question_id": 6286128,
            "score": 5,
            "tags": [
                "html",
                "css"
            ],
            "title": "Making a div fit the initial screen"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The View form will be displayed as a HTML table. About wrapping of the text in the table you can read <a href=\"http://stackoverflow.com/questions/6510144/jqgrid-long-text-wrapping/6915486#6915486\">this</a> and <a href=\"http://stackoverflow.com/questions/7246506/how-to-wrap-single-column-header-text-into-multiple-lines-in-jqgrid/7256972#7256972\">this</a> old answers.</p>\n\n<p>In case of View form you can use for example the following CSS style</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>div.ui-jqdialog-content td.form-view-data {\n    white-space: normal !important;\n    height: auto;\n    vertical-align: middle;\n    padding-top: 3px; padding-bottom: 3px\n}\n</code></pre>\n\n<p>In the case the view form with long data can look like</p>\n\n<p><img src=\"http://i.stack.imgur.com/hegWk.png\" alt=\"enter image description here\"></p>\n\n<p>The problem with the wrong left float in the first line of long text will be clear if you examine the corresponding HTML code. You will see <code>&amp;nbsp;</code> at the beginning of every cell with the data. The empty cell has <code>&amp;nbsp;&lt;span&gt;&amp;nbsp;&lt;/span&gt;</code> as the HTML contain. I am not sure whether it's a bug that <code>&amp;nbsp;</code> will be inserted twice, but in case of wrapping of the text the <code>&amp;nbsp;</code> is not good. It can be removed for example with the following code:</p>\n\n<pre><code>beforeShowForm: function ($form){\n    $form.find(\"td.DataTD\").each(function () {\n        var html = $(this).html();  // &amp;nbsp;&lt;span&gt;&amp;nbsp;&lt;/span&gt;\n        if (html.substr(0, 6) === \"&amp;nbsp;\") {\n            $(this).html(html.substr(6));\n        }\n    });\n}\n</code></pre>\n\n<p>The demo shows that after the above changes the long text will be displayed good enough:</p>\n\n<p><img src=\"http://i.stack.imgur.com/bCy4W.png\" alt=\"enter image description here\"></p>\n\n<p>You don't post <em>how you fill</em> the icons from the Status column. I hope, that after the above changes the icon will be look better. If you will still have any problem you can examine the HTML code from the corresponding cell (you can include <code>alert(html)</code> in the code of <code>beforeShowForm</code>) and modify the code so that it will be displayed better.</p>\n\n<p>You can find the demo which I wrote for the answer <a href=\"http://www.ok-soft-gmbh.com/jqGrid/WrappingInViewForm.htm\" rel=\"nofollow\">here</a>. You need just select the row with the long text to display the view form.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Found the answer about \"display:table\" here <a href=\"http://stackoverflow.com/questions/3764699/huge-internet-explorer-8-bug-with-display-table\">HUGE Internet Explorer 8 bug with display: table</a>. \nAnd it worked!<br>\nI use <code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /&gt;</code> in the beginning of the page and voila! </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a JQGRID with some data and Id like to show the row data in a dialog when the users double clicks the row.\nDid that with:</p>\n\n<pre><code>ondblClickRow: function(rowid) {\n    jQuery(this).jqGrid('viewGridRow', rowid);\n}\n</code></pre>\n\n<p>But I had 2 problems with that:</p>\n\n<p>1:  I have an icon in one of the fields and when it shows in the dialog, its position is messed up(see pic below).</p>\n\n<p>2: I have a long text(150 char maximum) in the last field. The dialog is showing it in a long span and it creates an horizontal scroll bar. I wanted it to show the text in a couple of lines or something like a textarea so it creates a vertical scroll bar. \nAlready tried this:    </p>\n\n<pre><code>afterShowForm: function(form) { form.css(\"width\", \"fixed\"); }\n</code></pre>\n\n<p>But it didnt work. </p>\n\n<p>I was thinking about getting the same styling of \"editGridRow\" but something like view only. But it didnt work out too.</p>\n\n<p>Anyone got any idea about how can I solve that?</p>\n\n<p>**</p>\n\n<h2>EDIT:</h2>\n\n<p>**</p>\n\n<p>Sorry guys, heres how I fill the Grid!</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    $(function() {\n        jQuery(\"#gridJson\").jqGrid({ \n\n            url:'Consulta_Dados_Ultimos.asp', \n            datatype: \"json\", \n            colNames:['N\u00b0','Data','Valor','Obs','Status'], \n            colModel:[ \n                        {name:'num_solicit_vale', align:'center', sorttype:'int', width:80}, \n\n                        {name:'data_solicit_vale',index:'data_solicit_vale',width:95,align:'center',sorttype:'date',\n\n                            formatter:'date',formatoptions: {srcformat:'d/m/Y H:i', newformat:'d/m/Y H:i'}}, \n                        {name:'valor',index:'valor',width:80, align:'left', formatter:'currencyFmatter'}, \n\n\n                        {name:'obs_solicit_vale', sortable:false, width:240},\n                        {name:'status_solicit_vale',index:'status_solicit_vale',width:80, formatter:'iconFmatter'}\n                        ],  \n            rowNum:10, \n            rowList: [10,20,30],\n            rownumbers:true, \n            pager: '#pager', \n            sortname: 'data_solicit_vale', \n            viewrecords: true, \n            sortorder: \"desc\", \n            loadonce: true,\n            gridview: true,\n            hidegrid: false,\n            height: 230,\n            autowidth: '100%',\n            shrinkToFit: false,\n            viewrecords: true,\n            caption:\"Consulta Solicitacao Vale Transporte\",\n            jsonReader: {\n                repeatitems: false,\n                root: \"rows\",\n                total: \"total\",\n                records: \"records\",\n                id: \"idsolicit_vale\"\n            },\n            ondblClickRow: function(rowid) {\n                jQuery(this).jqGrid('viewGridRow', rowid);\n            }\n\n\n        }); \n\n        jQuery(\"#gridJson\").jqGrid('navGrid', '#pager', {edit:false,add:false,del:false});\n    });\n</code></pre>\n\n<p>Heres the table:</p>\n\n<pre><code>    &lt;table id=\"gridJson\"/&gt;\n        &lt;thead&gt;\n            &lt;tr align=\"center\"&gt;\n              &lt;th&gt;NUM SOLICIT&lt;/th&gt;\n              &lt;th&gt;VALOR&lt;/th&gt;\n              &lt;th&gt;OBS&lt;/th&gt;\n              &lt;th&gt;STATUS&lt;/th&gt;\n              &lt;th&gt;DATA SOLICIT&lt;/th&gt;\n            &lt;/tr&gt;\n        &lt;/thead&gt;\n     &lt;/table&gt;\n         &lt;div id=\"pager\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>IMAGE : <a href=\"http://i.stack.imgur.com/dphDB.jpg\" rel=\"nofollow\">http://i.stack.imgur.com/dphDB.jpg</a></p>\n\n<p>**</p>\n\n<h2>EDIT:</h2>\n\n<p>**</p>\n\n<p><strong>Solved</strong> those issues but the icon is going weird in internet explorer 8.\nHere's the code of the icon:</p>\n\n<pre><code>    &lt;div class=\"ui-state-attention ui-corner-all\" style=\"display:table\"&gt;\n       &lt;span class=\"ui-icon ui-icon-alert\" title=\"Aguardando\"&gt;&lt;/span&gt;\n    &lt;/div&gt;\n</code></pre>\n\n<p>ICON IN FIREFOX : <img src=\"http://i.stack.imgur.com/8HWuM.jpg\" alt=\"Firefox\">\nICON IN IE8: <img src=\"http://i.stack.imgur.com/PCSZ6.jpg\" alt=\"IE8\"></p>\n",
            "last_activity_date": 1321636069,
            "question_id": 8170090,
            "score": 4,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "jquery-ui",
                "jqgrid"
            ],
            "title": "jqgrid viewGridRow dialog big span and icon"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You could take advantage of the fact that replaces elements may have an intrinsic aspect ratio.\nAccording to the <a href=\"http://www.w3.org/TR/CSS21/visudet.html#inline-replaced-height\" rel=\"nofollow\">spec</a>,</p>\n\n<blockquote>\n  <p>Otherwise, if 'height' has a computed value of 'auto', and the element\n  has an intrinsic ratio then the used value of 'height' is:</p>\n  \n  <p>(used width) / (intrinsic ratio)</p>\n</blockquote>\n\n<p>Therefore, you could</p>\n\n<ul>\n<li>Create a replaced element with the desired intrinsic ratio, and then set <code>width:100%</code> to it.</li>\n<li>Use absolutely positioning to remove all contents from the normal flow of the element, in order to prevent them from increasing the height. Then, make it grow to fill the container.</li>\n</ul>\n\n<p>Then, the container container will have the aspect ratio that you want.</p>\n\n<p>The replaced element could be an image. You could create images of the desired aspect ratio in PHP, or using a third party web service like <a href=\"http://placehold.it/\" rel=\"nofollow\">http://placehold.it/</a></p>\n\n<p>In the following snippet, I use a <a href=\"http://i.stack.imgur.com/Lfmr6.png\" rel=\"nofollow\">2px width and 1px height image</a>&nbsp;(<img src=\"http://i.stack.imgur.com/Lfmr6.png\" alt=\"enter image description here\">):</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.container {\r\n  border: 3px solid blue;\r\n  position: relative;\r\n}\r\n.container &gt; img {\r\n  width: 100%;\r\n  display: block;\r\n  visibility: hidden;\r\n}\r\n.container &gt; .content {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  overflow: auto;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div class=\"container\"&gt;\r\n  &lt;img src=\"http://i.stack.imgur.com/Lfmr6.png\" /&gt;\r\n  &lt;div class=\"content\"&gt;\r\n    &lt;p&gt;01&lt;/p&gt;&lt;p&gt;02&lt;/p&gt;&lt;p&gt;03&lt;/p&gt;&lt;p&gt;04&lt;/p&gt;&lt;p&gt;05&lt;/p&gt;\r\n    &lt;p&gt;06&lt;/p&gt;&lt;p&gt;07&lt;/p&gt;&lt;p&gt;08&lt;/p&gt;&lt;p&gt;09&lt;/p&gt;&lt;p&gt;10&lt;/p&gt;\r\n    &lt;p&gt;11&lt;/p&gt;&lt;p&gt;12&lt;/p&gt;&lt;p&gt;13&lt;/p&gt;&lt;p&gt;14&lt;/p&gt;&lt;p&gt;15&lt;/p&gt;\r\n    &lt;p&gt;16&lt;/p&gt;&lt;p&gt;17&lt;/p&gt;&lt;p&gt;18&lt;/p&gt;&lt;p&gt;19&lt;/p&gt;&lt;p&gt;20&lt;/p&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>You can also use a <code>&lt;canvas&gt;</code> element instead of an image. This way you don't need to create images, but it doesn't work on old browsers (like IE 8 and earlier):</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;div class=\"container\"&gt;\n  &lt;canvas height=\"1\" width=\"2\"&gt;&lt;/canvas&gt;\n  &lt;div class=\"content\"&gt;...&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.container {\r\n  border: 3px solid blue;\r\n  position: relative;\r\n}\r\n.container &gt; canvas {\r\n  width: 100%;\r\n  display: block;\r\n  visibility: hidden;\r\n}\r\n.container &gt; .content {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  overflow: auto;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div class=\"container\"&gt;\r\n  &lt;canvas height=\"1\" width=\"2\"&gt;&lt;/canvas&gt;\r\n  &lt;div class=\"content\"&gt;\r\n    &lt;p&gt;01&lt;/p&gt;&lt;p&gt;02&lt;/p&gt;&lt;p&gt;03&lt;/p&gt;&lt;p&gt;04&lt;/p&gt;&lt;p&gt;05&lt;/p&gt;\r\n    &lt;p&gt;06&lt;/p&gt;&lt;p&gt;07&lt;/p&gt;&lt;p&gt;08&lt;/p&gt;&lt;p&gt;09&lt;/p&gt;&lt;p&gt;10&lt;/p&gt;\r\n    &lt;p&gt;11&lt;/p&gt;&lt;p&gt;12&lt;/p&gt;&lt;p&gt;13&lt;/p&gt;&lt;p&gt;14&lt;/p&gt;&lt;p&gt;15&lt;/p&gt;\r\n    &lt;p&gt;16&lt;/p&gt;&lt;p&gt;17&lt;/p&gt;&lt;p&gt;18&lt;/p&gt;&lt;p&gt;19&lt;/p&gt;&lt;p&gt;20&lt;/p&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Since percentage values of the <code>padding-*</code> properties are calculated with respect to the width of the generated box's containing block, you could:</p>\n\n<ul>\n<li>Add a dummy element with no content but with a percentage in a vertical padding (<code>padding-top</code> or <code>padding-bottom</code>), corresponding to the desired aspect ratio.</li>\n<li>Use absolutely positioning to remove all contents from the normal flow of the element, in order to prevent them from increasing the height. Then, make it grow to fill the container.</li>\n</ul>\n\n<p>This idea is taken from <a href=\"http://ansciath.tumblr.com/post/7347495869/css-aspect-ratio\" rel=\"nofollow\">http://ansciath.tumblr.com/post/7347495869/css-aspect-ratio</a></p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>#container {\r\n  position: relative;\r\n  width: 50%;\r\n}\r\n#dummy {\r\n  padding-top: 75%; /* 4:3 aspect ratio */\r\n}\r\n#element {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: silver;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"container\"&gt;\r\n  &lt;div id=\"dummy\"&gt;&lt;/div&gt;\r\n  &lt;div id=\"element\"&gt;\r\n    some text\r\n  &lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Note vertical margin could be used instead of vertical padding, but then there would be margin collapse. To prevent it, add</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>#container {\n  display: inline-block;\n}\n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>#container {\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 50%;\r\n}\r\n#dummy {\r\n  margin-top: 75%; /* 4:3 aspect ratio */\r\n}\r\n#element {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: silver;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"container\"&gt;\r\n  &lt;div id=\"dummy\"&gt;&lt;/div&gt;\r\n  &lt;div id=\"element\"&gt;\r\n    some text\r\n  &lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Using <code>::before</code> pseudo element, there's no need to use a dummy element:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>#container:before {\n  padding-top: 75%; /* 4:3 aspect ratio */\n  content: ''; /* Enable the pseudo-element */\n  display: block;    \n}\n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>#container {\r\n  position: relative;\r\n  width: 50%;\r\n}\r\n#container:before {\r\n  padding-top: 75%; /* 4:3 aspect ratio */\r\n  content: ''; /* Enable the pseudo-element */\r\n  display: block;    \r\n}\r\n#element {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: silver;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"container\"&gt;\r\n  &lt;div id=\"element\"&gt;\r\n    some text\r\n  &lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>What I have is a standard form in HTML that allows the user to select a \"Width\" option and a \"Height\" option (each with values ranging from 1 to 10). When they send the form, it sends it to a PHP/HTML page where PHP grabs the \"Width\" and \"Height\" variables and assigns it to a width and height of a DIV.</p>\n\n<p>But what I'm trying to do is just use the \"Width\" and \"Height\" variables to assign an aspect ratio to that DIV, and then have that DIV auto-resize to 100% of the container it is inside, but while keeping that same aspect ratio.</p>\n\n<p><strong>Example:</strong>\nUser selects a Width of 4 and a Height of 2, then sends the form. On the receiving PHP page, that DIV (the one receiving the width and height ratios) is inside a container that's 1000px width and 600px height. So now, that DIV resizes to 1000px wide and 500px tall (that would be the aspect ratio of 4 to 2)</p>\n\n<p>Any ideas, codes, scripts would be extremely helpful, thank you very much!</p>\n\n<p>Aaron</p>\n",
            "last_activity_date": 1425585156,
            "question_id": 12170261,
            "score": 3,
            "tags": [
                "php",
                "html",
                "css",
                "forms",
                "autoresize"
            ],
            "title": "How to Auto-Resize a DIV with CSS while keeping Aspect Ratio?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>This should help: <a href=\"http://www.campaignmonitor.com/blog/post/3192/add-a-background-image-to-individual-table-cells/\">http://www.campaignmonitor.com/blog/post/3192/add-a-background-image-to-individual-table-cells/</a></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I have made LOTS of HTML emails and have found that background images are NOT the way to go without using some hack.</p>\n\n<p>Always use an <code>&lt;img&gt;</code> tag in a TD for your images. If you want text on top of an image, include it into the image and repeat the text in the alt attribute of the img tag.</p>\n\n<p>You can see one <a href=\"http://euroworker.no/netmail/iPhone_Oyatel_Nov_2010.html\" rel=\"nofollow\">I have made here</a>. It uses very little CSS and img tags, plus it renders perfectly in almost all Email clients. </p>\n\n<p>Unfortunately with HTML emails we're a bit limited to what we can do, but there are ways around it :)</p>\n\n<p>Hope that help :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Checkout this link for supported HTML and CSS tags in Outlook 2007: </p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/aa338201%28v=office.12%29.aspx\">http://msdn.microsoft.com/en-us/library/aa338201%28v=office.12%29.aspx</a></p>\n\n<p>MS also offers an HTML/CSS Validation Tool for Outlook 2007 at the URL above. That may at least provide you with a method of testing.</p>\n\n<p>I have found that \"Less Is More\", when it comes to HTML emails - simple layout, simple techniques. Since each email client is going to vary, \"dumbing\" it down is the only way to guarantee the broadest reach.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Fortunately, there are formatting tweaks you can employ to address this. The upside is that making your HTML email Outlook 2007 compatible can decrease the chances that it will end up in a recipient\u2019s junk folder. The downside is that you may have to change the way in which you approach formatting parts of your emails, thereby impacting the look and feel of your creatives. Below is a list of key items to look out for, and possible alternatives that are Outlook 2007 compatible.</p>\n\n<ul>\n<li><p>Background images \u2013 Background images will not display in Outlook 2007. This can leave a big, unintended void in your email. You should avoid using background images altogether. Whenever possible, you should use inline image tags instead. If you feel you must use a background image, set an appropriate background color to fill in for the potentially missing image. If you have text overlaying a background image, you can edit the image to include the text and use an image map for any links.</p></li>\n<li><p>Division tags \u2013 \u201cDiv\u201d tags are not fully supported in Outlook 2007. Some of the more commonly used attributes that have been omitted are: float, clear, position, and padding. Without these attributes, positioning with div tags is virtually impossible. Instead, you should control the positioning of your email with a standard table.</p></li>\n<li><p>Forms \u2013 Forms are not supported in Outlook 2007. Outlook 2007 recipients will not be able to submit any forms embedded in an email. If you wish to give recipients the option to fill out a form, place a link to an online version of it within the email.</p></li>\n<li><p>Flash &amp; JavaScript \u2013 It is recommended that you do not attempt to utilize Flash or Javascript on your HTML emails, due to their lack of support in email browsers (including Outlook 2007) and the fact that some filters will tag emails that contain Flash or JavaScript code. Also, most email readers will automatically disable this content as a security measure.</p></li>\n<li><p>Bulleted list with images \u2013 While both ordered and unordered lists are fully supported, lists that use images as bullets instead of standard bullets are not. If you need to use an image for your bullet points, one possible solution is to put your list into a two column table, using the left-hand column to place your bullets.</p></li>\n<li><p>Animated GIFs \u2013 Animated GIFs will not animate in Outlook 2007. The image will appear, but only the first frame of the animation will be displayed.</p></li>\n<li><p>Alt tags - Alt tags are also not supported. This is the text that is shown when an image does not load upon opening an email. However, most email readers do support alt tags, and there is no adverse effect to having them in your Outlook 2007 compatible email (other than the fact that they will not display,) so you can continue to include these in your emails if you wish.</p></li>\n<li><p>Table definitions - As we detailed above, Outlook 2007 renders HTML emails in Microsoft\u00ae Word, which is very sensitive to extra <code>&lt;tr&gt;</code> or <code>&lt;td&gt;</code> tags and does not adjust well to poorly sized tables. Previous Outlook versions would open emails in Internet Explorer, which is very forgiving of poor table definitions. You should ensure that your table definitions are correct and that the data you are placing inside the table fits properly within the defined table width.</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could do   this, <code>inside &lt;td&gt; where you want bg image  place another table</code> and  do this .</p>\n\n<pre><code>&lt;td&gt; &lt; !-- this is table where you want to set bg image --&gt;\n&lt; table background=\"myimg.jpg\"    style=\"background-repeat:no-repeat;\" &gt;\n here goes content\n &lt;/table&gt;\n &lt;/td&gt;\n</code></pre>\n\n<p>this will cover whole    and it works perfectly  in outlook </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This worked for me:</p>\n\n<pre><code>&lt;td background=\"http://www.thiespublishing.com/oneimage.gif\" height=\"402\" width=\"600\" bgcolor=\"#cccccc\"&gt;\n&lt;!--[if gte mso 9]&gt;\n&lt;v:image xmlns:v=\"urn:schemas-microsoft-com:vml\" id=\"theImage\" style='behavior: url(#default#VML); display:inline-block;position:absolute; height:402px; width:600px;top:0;left:0;border:0;z-index:1;' src=\"http://www.thiespublishing.com/oneimage.gif\"/&gt;\n&lt;v:shape xmlns:v=\"urn:schemas-microsoft-com:vml\" id=\"theText\" style='behavior: url(#default#VML); display:inline-block;position:absolute; height:407px; width:610px;top:-5;left:-10;border:0;z-index:2;'&gt;\n&lt;div&gt;\n&lt;![endif]--&gt;\n&lt;!-- This is where you nest a table with the content that will float over the image --&gt;\n&lt;table width=\"600\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\"&gt;\n&lt;tr&gt;\n&lt;td width=\"600\" height=\"402\" valign=\"top\"&gt;\nInsert content here, including additional nested tables.\n&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n&lt;!-- This ends the nested table content --&gt;\n&lt;!--[if gte mso 9]&gt;\n&lt;/div&gt;\n&lt;/v:shape&gt;\n&lt;![endif]--&gt;\n&lt;/td&gt;\n</code></pre>\n\n<p>Source: <a href=\"https://www.campaignmonitor.com/forums/topic/3862/please-test-this-outlook-20072010-background-image-solution/\" rel=\"nofollow\">https://www.campaignmonitor.com/forums/topic/3862/please-test-this-outlook-20072010-background-image-solution/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>Full width table cell background images</h2>\n\n<pre><code>&lt;html xmlns:v=\"urn:schemas-microsoft-com:vml\"&gt;\n    &lt;head&gt;\n    &lt;style&gt;\n    v:* { behavior: url(#default#VML); display: inline-block; }\n    &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;center&gt;\n        &lt;table width=\"100%\" height=\"20\"&gt;\n            &lt;tr&gt;\n                &lt;td bgcolor=\"#dddddd\" style=\"background-image:url('http://placekitten.com/g/500/300');background-repeat:no-repeat;background-position:center;\" background=\"http://placekitten.com/g/500/300\" width=\"100%\" height=\"300\"&gt;\n                &lt;!--[if gte mso 9]&gt;\n                    &lt;v:rect xmlns:v=\"urn:schemas-microsoft-com:vml\" fill=\"true\" stroke=\"false\" style=\"mso-width-percent:1000;height:300px;\"&gt;\n                        &lt;v:fill type=\"frame\" src=\"http://placekitten.com/g/500/300\" color=\"#ffffff\" /&gt;\n                    &lt;/v:rect&gt;\n                &lt;![endif]--&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td bgcolor=\"#33cc99\"&gt;\n                    &lt;table border=\"0\" cellpadding=\"5\" cellspacing=\"0\"&gt;&lt;tr&gt;&lt;td height=\"5\"&gt;&lt;table border=\"0\" cellpadding=\"0\" cellspacing=\"0\"&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td bgcolor=\"#ffff99\" style=\"background-image:url('http://placekitten.com/g/500/300');background-repeat:no-repeat;background-position:center;\" background=\"http://placekitten.com/g/500/300\" width=\"100%\" height=\"300\"&gt;\n                    &lt;!--[if gte mso 9]&gt;\n                        &lt;v:rect xmlns:v=\"urn:schemas-microsoft-com:vml\" fill=\"true\" stroke=\"false\" style=\"mso-width-percent:1000;height:300px;\"&gt;\n                            &lt;v:fill type=\"frame\" src=\"http://placekitten.com/g/500/300\" color=\"#ffffff\" /&gt;\n                        &lt;/v:rect&gt;\n                    &lt;![endif]--&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n        &lt;/table&gt;\n        &lt;/center&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<ul>\n<li>Tested in Outlook 2010 thru Windows 7 VMWare on OSX 10.9.2</li>\n</ul>\n\n<p><img src=\"http://i.stack.imgur.com/Mtjm8.jpg\" alt=\"enter image description here\"></p>\n\n<hr>\n\n<h2>Tiled full width table cell background images</h2>\n\n<pre><code>    &lt;html xmlns:v=\"urn:schemas-microsoft-com:vml\"&gt;\n        &lt;head&gt;\n            &lt;style&gt;\n                v:* { behavior: url(#default#VML); display: inline-block; }\n            &lt;/style&gt;\n        &lt;/head&gt;\n\n        &lt;body&gt;\n\n        &lt;center&gt;\n        &lt;table width=\"100%\"&gt;\n            &lt;tr&gt;\n                &lt;td bgcolor=\"#dddddd\" style=\"background-image:url('http://placekitten.com/g/500/300');background-repeat:no-repeat;background-position:center;\" background=\"http://placekitten.com/g/500/300\" width=\"100%\" height=\"300\"&gt;\n                    &lt;!--[if gte mso 9]&gt;\n                        &lt;v:rect xmlns:v=\"urn:schemas-microsoft-com:vml\" fill=\"true\" stroke=\"false\" style=\"mso-width-percent:1000;height:300px;\"&gt;\n                            &lt;v:fill type=\"tile\" src=\"http://placekitten.com/g/500/300\" color=\"#ffffff\" /&gt;\n                        &lt;/v:rect&gt;\n                    &lt;![endif]--&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n        &lt;/table&gt;\n        &lt;/center&gt;\n\n        &lt;/body&gt;\n    &lt;/html&gt;\n</code></pre>\n\n<ul>\n<li>Tested in Outlook 2010 thru Windows 7 VMWare on OSX 10.9.2</li>\n</ul>\n\n<p><img src=\"http://i.stack.imgur.com/uvgFK.png\" alt=\"enter image description here\"></p>\n\n<hr>\n\n<h2>Specified width table cell background images</h2>\n\n<p>Here is an example, two rows, the first row has 3 columns with 3 separate background images, the second row spans all the way across as one background image.</p>\n\n<pre><code>    &lt;table width=\"600\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: collapse;\"&gt;\n        &lt;tr&gt;\n            &lt;td style=\"width: 300px; height: 80px; background-image: url('http://placekitten.com/g/300/80');\"&gt;\n            &lt;!--[if gte mso 9]&gt;\n                &lt;v:image xmlns:v=\"urn:schemas-microsoft-com:vml\" id=\"theImage\" style='behavior: url(#default#VML); display: inline-block; position: absolute; width: 300px; height: 80px; top: 0; left: 0; border: 0; z-index: 1;' src=\"http://placekitten.com/g/300/80\" /&gt;\n                &lt;v:shape xmlns:v=\"urn:schemas-microsoft-com:vml\" id=\"theText\" style='behavior: url(#default#VML); display: inline-block; position: absolute; width: 300px; height: 80px; top: -5; left: -10; border: 0; z-index: 2;'&gt;\n                &lt;div&gt;\n            &lt;![endif]--&gt;\n                &lt;table width=\"300\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"border-collapse: collapse;\"&gt;\n                    &lt;tr&gt;\n                        &lt;td height=\"80\" align=\"center\" valign=\"top\" style=\"color:#ffffff;font-size:20px;\"&gt;\n                            &lt;span&gt;Text&lt;/span&gt;\n                        &lt;/td&gt;\n                    &lt;/tr&gt;\n                &lt;/table&gt;\n            &lt;!--[if gte mso 9]&gt;\n                &lt;/div&gt;\n                &lt;/v:shape&gt;\n            &lt;![endif]--&gt;\n            &lt;/td&gt;\n            &lt;td style=\"width: 100px; height: 80px; background-image: url('http://placekitten.com/g/100/80');\"&gt;\n            &lt;!--[if gte mso 9]&gt;\n                &lt;v:image xmlns:v=\"urn:schemas-microsoft-com:vml\" id=\"theImage\" style='behavior: url(#default#VML); display: inline-block; position: absolute; width: 100px; height: 80px; top: 0; left: 0; border: 0; z-index: 1;' src=\"http://placekitten.com/g/100/80\" /&gt;\n                &lt;v:shape xmlns:v=\"urn:schemas-microsoft-com:vml\" id=\"theText\" style='behavior: url(#default#VML); display: inline-block; position: absolute; width: 100px; height: 80px; top: -5; left: -10; border: 0; z-index: 2;'&gt;\n                &lt;div&gt;\n            &lt;![endif]--&gt;\n                &lt;table width=\"80\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"border-collapse: collapse;\"&gt;\n                    &lt;tr&gt;\n                        &lt;td height=\"80\" align=\"center\" valign=\"top\"&gt;\n                            &lt;span&gt;Text&lt;/span&gt;\n                        &lt;/td&gt;\n                    &lt;/tr&gt;\n                &lt;/table&gt;\n            &lt;!--[if gte mso 9]&gt;\n                &lt;/div&gt;\n                &lt;/v:shape&gt;\n            &lt;![endif]--&gt;\n            &lt;/td&gt;\n            &lt;td style=\"width: 200px; height: 80px; background-image: url('http://placekitten.com/g/200/100');\"&gt;\n            &lt;!--[if gte mso 9]&gt;\n                &lt;v:image xmlns:v=\"urn:schemas-microsoft-com:vml\" id=\"theImage\" style='behavior: url(#default#VML); display: inline-block; position: absolute; width: 200px; height: 80px; top: 0; left: 0; border: 0; z-index: 1;' src=\"http://placekitten.com/g/200/100\" /&gt;\n                &lt;v:shape xmlns:v=\"urn:schemas-microsoft-com:vml\" id=\"theText\" style='behavior: url(#default#VML); display: inline-block; position: absolute; width: 200px; height: 80px; top: -5; left: -10; border: 0; z-index: 2;'&gt;\n                &lt;div&gt;\n            &lt;![endif]--&gt;\n                &lt;table width=\"200\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"border-collapse: collapse;\"&gt;\n                    &lt;tr&gt;\n                        &lt;td height=\"80\" align=\"center\" valign=\"top\" style=\"color:#ffffff;font-size:20px;\"&gt;\n                            &lt;span&gt;Text&lt;/span&gt;\n                        &lt;/td&gt;\n                    &lt;/tr&gt;\n                &lt;/table&gt;\n            &lt;!--[if gte mso 9]&gt;\n                &lt;/div&gt;\n                &lt;/v:shape&gt;\n            &lt;![endif]--&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;table width=\"600\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: collapse;\"&gt;\n        &lt;tr&gt;\n            &lt;td style=\"width: 600px; height: 150px; background-image: url('http://placekitten.com/g/600/150');\"&gt;\n            &lt;!--[if gte mso 9]&gt;\n                &lt;v:image xmlns:v=\"urn:schemas-microsoft-com:vml\" id=\"theImage\" style='behavior: url(#default#VML); display: inline-block; position: absolute; width: 600px; height: 150px; top: 0; left: 0; border: 0; z-index: 1;' src=\"http://placekitten.com/g/600/150\" /&gt;\n                &lt;v:shape xmlns:v=\"urn:schemas-microsoft-com:vml\" id=\"theText\" style='behavior: url(#default#VML); display: inline-block; position: absolute; width: 600px; height: 150px; top: -5; left: -10; border: 0; z-index: 2;'&gt;\n                &lt;div&gt;\n            &lt;![endif]--&gt;\n                &lt;table width=\"600\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"border-collapse: collapse;\"&gt;\n                    &lt;tr&gt;\n                        &lt;td height=\"150\" align=\"center\" valign=\"top\" style=\"color:#ffffff;font-size:20px;\"&gt;\n                            &lt;span&gt;Text&lt;/span&gt;\n                        &lt;/td&gt;\n                    &lt;/tr&gt;\n                &lt;/table&gt;\n            &lt;!--[if gte mso 9]&gt;\n                &lt;/div&gt;\n                &lt;/v:shape&gt;\n            &lt;![endif]--&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n</code></pre>\n\n<ul>\n<li>Tested in Outlook 2010 thru Windows 7 VMWare on OSX 10.9.2</li>\n</ul>\n\n<p><img src=\"http://i.stack.imgur.com/pNHgr.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been told using tables is the best way to send emails although it's been twice as difficult. I have setup the email in tables, set all of the cells which need backgrounds with the <code>background=\"\"</code> property, as well as using CSS in <code>&lt;style&gt;</code> tags saying the same thing to cover my bases. The body background shows fine in outlook, but the TD backgrounds do not. I've tried also using  but that doesn't work either. I've read that Outlook 2007 doesn't support background images and won't in the future, I'm thinking there has to be a way around it?</p>\n",
            "last_activity_date": 1399141983,
            "question_id": 3587328,
            "score": 3,
            "tags": [
                "html",
                "css",
                "email",
                "outlook-2007"
            ],
            "title": "background image on TD in Outlook 2007"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Use <a href=\"https://developer.mozilla.org/en-US/docs/CSS/Media_queries\">CSS media queries</a> to do this</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can either use CSS media queries, like so:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" media=\"screen and (min-device-width: 700px)\" href=\"css/narrow.css\" /&gt;\n&lt;link rel='stylesheet' media='screen and (min-width: 701px) and (max-width: 900px)' href='css/medium.css' /&gt;\n&lt;link rel=\"stylesheet\" media=\"screen and (max-device-width: 901px)\" href=\"css/narrow.css\" /&gt;\n</code></pre>\n\n<p>Or jQuery, like so:</p>\n\n<pre><code>function adjustStyle(width) {\n    width = parseInt(width);\n    if (width &lt; 701) {\n        $(\"#size-stylesheet\").attr(\"href\", \"css/narrow.css\");\n    } else if ((width &gt;= 701) &amp;&amp; (width &lt; 900)) {\n        $(\"#size-stylesheet\").attr(\"href\", \"css/medium.css\");\n    } else {\n       $(\"#size-stylesheet\").attr(\"href\", \"css/wide.css\"); \n    }\n}\n\n$(function() {\n    adjustStyle($(this).width());\n    $(window).resize(function() {\n        adjustStyle($(this).width());\n    });\n});\n</code></pre>\n\n<p>Both found from: <a href=\"http://css-tricks.com/resolution-specific-stylesheets/\">http://css-tricks.com/resolution-specific-stylesheets/</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>css media queries is the way to go</p>\n\n<pre><code>&lt;link rel='stylesheet' media='screen and (max-width: 700px)' href='css/narrow.css' /&gt;\n&lt;link rel='stylesheet' media='screen and (min-width: 701px) and (max-width: 900px)' href='css/medium.css' /&gt;\n&lt;link rel='stylesheet' media='screen and (min-width: 901px)' href='css/wide.css' /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can do with CSS.</p>\n\n<pre><code>&lt;link rel='stylesheet' media='screen and (max-width: 480px)' href='css/mobile.css' /&gt;\n&lt;link rel='stylesheet' media='screen and (min-width: 481px)' href='css/pc.css' /&gt;\n</code></pre>\n\n<p>For more code &amp; detail </p>\n\n<h2><a href=\"http://sahultd.com/how/css/change-css-style-with-different-device-width\" rel=\"nofollow\">Click Here</a></h2>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>We're developing an open-source web app for arts teachers across the world to work together. We need a nice website that simply adjusts itself based on the active width of the browser, like google.org or barackobama.com does so well.</p>\n\n<p>We can detect the browser, the OS, etc. but don't want to use any of that info. We just want four or five different stylesheets that are triggered when the browser width is adjusted.</p>\n\n<p>So, for example, when you visit the app on a browser using a DESKTOP computer, you see the full app when the browser is full screen. Then, as the browser reduces its width the site immediately and dynamically changes its format to allow for universal compatibility.</p>\n\n<p>We don't want our CSS to change based on browser type or original width, but instead want it to adjust ever millisecond based on the current width of the viewport -- regardless of whether or not it is a \"mobile\" device or a \"tablet\" machine or a \"desktop\" browser.</p>\n\n<p>Curiously, I'm using Google Apps Script to host our web app, so it looks like any meta viewport tags are removed.</p>\n\n<p>How can we introduce four or five different stylesheets based on the width of the current viewing browser window?</p>\n",
            "last_activity_date": 1396761994,
            "question_id": 11962837,
            "score": 2,
            "tags": [
                "javascript",
                "html",
                "css",
                "browser",
                "google-apps-script"
            ],
            "title": "How do I dynamically adjust css stylesheet based on browser width?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>In CSS3 you have:</p>\n\n<pre><code>:nth-last-child(2)\n</code></pre>\n\n<p>See: <a href=\"http://webdesign.about.com/od/styleproperties/p/nth-last-child.htm\">http://webdesign.about.com/od/styleproperties/p/nth-last-child.htm</a></p>\n\n<p><strong>nth-last-child</strong> Browser Support:</p>\n\n<blockquote>\n  <ul>\n  <li>Chrome 2</li>\n  <li>Firefox 3.5</li>\n  <li>Opera 9.5, 10</li>\n  <li>Safari 3.1, 4</li>\n  <li>Internet Explorer 9</li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 76
                },
                {
                    "body": "<p><em><strong>Note:</strong> Posted this answer because OP later stated in comments that he needs to select <strong>the last two elements</strong>, not just the penultimate one.</em></p>\n\n<hr>\n\n<p>The <code>:nth-child</code> CSS3 selector is in fact more capable than you ever imagined!</p>\n\n<p>For example, this will select the last 2 elements of <code>#container</code>:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>#container :nth-last-child(-n+2) {}\n</code></pre>\n\n<p>But this is just the beginning of a beautiful friendship.</p>\n\n<ul>\n<li><p><a href=\"http://webdesign.about.com/b/2010/07/09/learn-how-to-use-the-css-nth-child-expressions.htm\" rel=\"nofollow\">Nice article about what you can do with <code>:nth-child</code> and friends</a>.</p></li>\n<li><p><a href=\"http://caniuse.com/#search=nth\" rel=\"nofollow\"><code>:nth-child</code> Browser Support</a></p></li>\n<li><p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>#container :nth-last-child(-n+2) {\r\n  background-color: cyan;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"container\"&gt;\r\n &lt;div&gt;a&lt;/div&gt;\r\n &lt;div&gt;b&lt;/div&gt;\r\n &lt;div&gt;SELECT THIS&lt;/div&gt;\r\n &lt;div&gt;SELECT THIS&lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 17
                }
            ],
            "body": "<p>I already know of :last-child. But is there a way to select the div:</p>\n\n<pre><code>&lt;div id=\"container\"&gt;\n &lt;div&gt;a&lt;/div&gt;\n &lt;div&gt;b&lt;/div&gt;\n &lt;div&gt;SELECT THIS&lt;/div&gt; &lt;!-- THIS --&gt;\n &lt;div&gt;c&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>NOTE: without jQuery, only with CSS</p>\n",
            "last_activity_date": 1419206357,
            "question_id": 5418744,
            "score": 42,
            "tags": [
                "html",
                "css",
                "css3",
                "css-selectors"
            ],
            "title": "Select second last element with css"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I think color names are more descriptive... And this is a good reason for using it when possible.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Different browsers may not agree on what some color names mean. There are not names for all 16 million 24-bit colors. In fact there are only 17 W3C-standard color names. It's probably OK to use those.</p>\n\n<p>Personally I use a templating system at build time to pre-process my CSS files, so that I can keep a standard set of site colors and refer to them by name. That way I get the best of both worlds: I know exactly what my RGB color values are, but I can use simpler names in the CSS.</p>\n\n<p>(Of course, it's still not possible to know <em>exactly</em> how a color will look on a given user's browser.)</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>in my opinion it's a matter of preference.  if the color is as simple as red, black, grey, blue, white etc.  ill use the word instead of the hex.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I prefer a further optimization, <code>#c00</code> for red.  If you are going to use a primary color, or any color that is similar to <code>#aabbcc</code>, you can use shorthand, <code>#abc</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It really comes down to your coding style.  I stick to hex values for consistency - a color is always formatted as <code>#000</code> or <code>#000000</code>, and I don't have to worry about switching between namd and unnamed colors.</p>\n\n<p>In the end, it's a decision you and your team will have to make on your own.  It's all about your preferences.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Personally, I prefer all colours in a CSS file to be defined in the same way, if possible.</p>\n\n<p>That way I don\u2019t have to think in a different way when I see different colours defined (e.g. <code>red</code>, <code>#cd876f</code> and <code>rgba(255,255,0,0.4)</code>).</p>\n\n<p>I also prefer colour notations that match what I\u2019ll see when identifying the colour in the design I\u2019m implementing. Photoshop\u2019s colour palette gives RGB and hex values, amongst others, but doesn\u2019t give CSS colour names. (Other design tools might do though.)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>personally, i prefer using hexcodes because of 2 reasons</p>\n\n<ol>\n<li>it's easier to copy a hexcode from Photoshop</li>\n<li>you can use hexcodes throughout a stylesheet but you'll have to mix two styles (hexcodes and color names) otherwise. so your stylesheet can be more uniform/consistent.</li>\n</ol>\n\n<p>This assumes you're using colors other that the simple red, black, white etc. In a multi-developer environment, i'd say hexcodes are better because they're more universally consistent (every developer knows exactly what the color is).</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I recommend that you follow the W3C recommendations:</p>\n\n<p>All of them (CSS Level 1, Level 2 and Level 3) indicate that using color names is perfectly acceptable, but the amount of which vary depending on the specification.</p>\n\n<h2>CSS1 Specification</h2>\n\n<p><a href=\"http://www.w3.org/TR/REC-CSS1/#color-units\">CSS1 Specification</a> recommends to use <strong>color names</strong> as a valid substitute to hex codes and RGB codes.</p>\n\n<blockquote>\n  <p><strong>6.3    Color units</strong></p>\n  \n  <p>The suggested list of keyword color names is: aqua, black, blue,\n  fuchsia, gray, green, lime, maroon, navy, olive, purple, red, silver,\n  teal, white, and yellow. These <strong>16 colors</strong> are taken from the Windows\n  VGA palette, and their RGB values are not defined in this\n  specification.</p>\n</blockquote>\n\n<h2>CSS2 Specification</h2>\n\n<p>You can use the color name <code>orange</code> now! The count it up to <strong>17 colors</strong>. <a href=\"http://www.w3.org/TR/CSS21/syndata.html#color-units\">CSS2 Specification</a> for reference.</p>\n\n<h2>CSS3 &amp; X11 Colors</h2>\n\n<p>CSS3 allows for SVG 1.0's <a href=\"http://www.w3.org/TR/css3-color/#svg-color\"><strong>X11 colors</strong></a> to be used for CSS's properties (as well as <code>hsl()</code> values). This expands the amount of color names to <strong>147 colors</strong> according to my count. Any of these colors names can be used in any browser that supports the SVG 1.0 specification, which I believe is <a href=\"http://caniuse.com/#search=svg\">IE9 or newer</a>.</p>\n\n<p>This also mean that the list of colors that provided in the question are mostly <strong><em>not valid</em></strong>.</p>\n\n<h2>Suggested Usage</h2>\n\n<p>If you're seeking to support legacy browsers stick to the web safe original 16 color names since X11 colors are not supported. </p>\n\n<p>Otherwise, using any of the 147 color names specified in the X11 spec you are free to use. All browsers should be abiding the spec in reference to the equivalent hex codes. The time it takes the parser to read the color names is virtually, if not exactly, the same as using a hex value, rgb, or hsl value.</p>\n\n<p>However, just as anything with CSS, you should stick to syntactic norms. Mixing up formats in the same project can be confusing. Try to stick to one or a max of two.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I use color names for prototyping, debugging, and to set up really basic, monochromatic color schemes which are then ripe for theming with hyper-specific hex colors. It makes a theme-able property easy to spot. It's also more human readable; less brain strain when trying to instantly visualize what's going on.</p>\n\n<pre><code>.component {\n    background-color: black;\n    color: white;\n}\n</code></pre>\n\n<p>...then in theming file...</p>\n\n<pre><code>.some-theme .component {\n    background-color: #5f5f5c;\n    color: #fafafc;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>For example writing <code>red</code> is more efficient than <code>#cc0000</code>. It has less characters, takes up less space, and is easier to remember.</p>\n\n<p>Are there any down sides to using <a href=\"http://www.somacon.com/p142.php\">color names</a> over hex codes or RGB values? This includes programming in a multi-developer environment.</p>\n",
            "last_activity_date": 1403651463,
            "question_id": 3230851,
            "score": 38,
            "tags": [
                "css",
                "colors"
            ],
            "title": "Are there any cons to using color names in place of color codes in CSS?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>This may or may not work in your situation, but consider making the image a CSS background. In FF3, the following works just fine:</p>\n\n<pre>\n&lt;div style=\"\n  background-image:   url(big-image.jpg);\n  border-radius:      1em;\n  height:             100px;\n  -moz-border-radius: 1em;\n  width:              100px;\"\n>&lt;/div>\n</pre>\n\n<p>I'm not sure there's another workaround &mdash; if you apply a border to the image itself (say, <code>1em</code> deep), you get the same problem of square corners.</p>\n\n<p><strong>Edit:</strong> although, in the \"adding a border to the image\" case, the image inset is correct, it's just that the image isn't flush with the <code>div</code> element. To check out the results, add <code>style=\"border:1em solid black;border-radius:1em;-moz-border-radius:1em;\"</code> to the <code>img</code> tag (with <code>width</code> and <code>height</code> set appropriately, if necessary).</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>If you make the image a background image instead of contents, the image won't clip the rounded corners (at least in FF3).</p>\n\n<p>You could also add a padding to the div, or margin for the image to add extra padding between the rounded border and the image.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need to specify an exact width and heigth with overflow:hidden, if you want your div to clip your image</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Even when <code>overflow</code> is set to <code>hidden</code>, <code>border-radius</code> does not clip its content. This is by design.</p>\n\n<p>One solution would be to set <code>border-radius</code> on the image as well as its container.</p>\n\n<pre><code>&lt;div style=\"border-radius: 16px; ...\"&gt;\n    &lt;img src=\"big-image.jpg\" style=\"border-radius: 16px; ...\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Another way would be to set the image as the background of the container using <code>background-image</code>; but there are issues with this method in Firefox before version 3 (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=24998\" rel=\"nofollow\">this bug</a>) - not that that need bother you too much.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try this workaround:</p>\n\n<ol>\n<li>The image in <code>img</code> tag is present and there you set the width and height.</li>\n<li>Then hide it with <code>visibility:hidden</code>. The width and height stay intact.</li>\n<li>After that you'll set the same source as background image an it will clipped.</li>\n</ol>\n\n<p></p>\n\n<pre><code>&lt;a class=\"thumb\" href=\"#\" style=\"background-image: url('./img/pic1.jpg');\" title=\"Picture\"&gt;\n  &lt;img border=\"0\" src=\"./img/pic1.jpg\" alt=\"Pic\" height=\"100\" width=\"150\" /&gt;\n&lt;/a&gt;\n\n#page .thumb {\nbackground-repeat: no-repeat;\nbackground-position: left top;\nborder: 3px #e5dacf solid;\ndisplay: block;\nfloat: left;}\n\n#page .thumb img {\ndisplay: block;\nvisibility: hidden;}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>My latest Chrome, Firefox, and Safari clip the image to the container's border-radius (as intended).</p>\n\n<p><a href=\"http://jsfiddle.net/RQYnA/12/embedded/result/\" rel=\"nofollow\">http://jsfiddle.net/RQYnA/12/embedded/result/</a></p>\n\n<p>In Firefox 15, I see the image clipped when the container has <code>{overflow: hidden}</code>. (Clipping of child content seems to have been <a href=\"https://developer.mozilla.org/en-US/docs/CSS/border-radius#Gecko_notes\" rel=\"nofollow\">added in Gecko 2.0.</a>)</p>\n\n<p>In Chrome 23 &amp; Safari 5, I see the image clipped <strong>only</strong> when the container has <code>{position: static; overflow: hidden}</code> and the image has <code>{position: static}</code>.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>A simple <code>border-radius</code> on the <code>img</code> tag works fine in current versions of Safari 5, Chrome 16, Firefox 9:</p>\n\n<pre><code>&lt;div&gt;\n    &lt;img src=\"big-image.jpg\" style=\"border-radius: 1em;\" /&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think this problem occurs when the image or the image's parent is position:absolute. This is understandable as setting absolute takes the element out of the flow of the document.</p>\n\n<p>I'm 90% sure I've seen a fix for this, I'll update this post when I do:D</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is also now background-clip in css3. It works in all the major browsers. The options are border-box, padding-box and content-box. In your case, I think you'll want to use padding-box.</p>\n\n<pre><code>-webkit-background-clip: padding-box;\n-moz-background-clip:    padding; \nbackground-clip:         padding-box;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The extra cropping is usually only within the margin of error of the border thickness. Just let the inner radius be slightly smaller so that the margin of error falls under the border instead of next to is</p>\n\n<pre><code>&lt;div style='border-radius:5px;border:thin solid 1px;'&gt;\n   &lt;img style='border-radius:4px' /&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If I use this code, the image isn't clipped by the div's rounded corners (resulting in the image's square corners covering up the div's rounded ones):</p>\n\n<pre><code>&lt;div style=\"border-radius: 1em; -moz-border-radius: 1em; -webkit-border-radius: 1em; overflow:hidden;\"&gt;\n    &lt;img src=\"big-image.jpg\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Does anyone know how to get a rounded corder div to prevent a child image from overflowing?</p>\n",
            "last_activity_date": 1379451746,
            "question_id": 587814,
            "score": 23,
            "tags": [
                "css",
                "design",
                "css3"
            ],
            "title": "How do I prevent an image from overflowing a rounded corner box with CSS3?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Consider using max-width for html.</p>\n\n<p>keep me posted if it's not working.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>How about setting the width on the content body, and warping the <code>#container</code> around the <code>#menu_bar</code> and <code>#content_body</code>?</p>\n\n<pre><code>body\n    div#container \n       div#menu_bar (absolute positioned)\n          div#links\n          div#full_bar\n       div#content_body (relative positioned + padding [#menu_bar height])\n          ...\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/sdCGp/2/\" rel=\"nofollow\">CSS example</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't think there's any way to prevent scrolling of an element without using JavaScript. With JS, though,  it's pretty easy to set scrollLeft to 0 onscroll. </p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>I had this exact same problem. I solved it by putting <code>overflow-x: hidden;</code> on <strong>both</strong> the <code>body</code> and <code>html</code>.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>html {\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  overflow-x: hidden;\r\n}\r\nbody {\r\n  margin: 0 auto;\r\n  overflow-x: hidden;\r\n  width: 950px;\r\n}\r\n.full {\r\n  background: red;\r\n  color: white;\r\n}\r\n.full,\r\n.f_right {\r\n  margin-right: -3000px !important;\r\n  padding-right: 3000px !important;\r\n}\r\n.full,\r\n.f_left {\r\n  margin-left: -3000px !important;\r\n  padding-left: 3000px !important;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div&gt;\r\n  &lt;div class=\"full\"&gt;\r\n    abc\r\n  &lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 41
                },
                {
                    "body": "<p>From Weaver's Offcanvas demo <a href=\"http://jasonweaver.name/lab/offcanvas/\" rel=\"nofollow\">http://jasonweaver.name/lab/offcanvas/</a> </p>\n\n<p>Wrap content with:</p>\n\n<pre><code>width: 100%; \noverflow: hidden;\n</code></pre>\n\n<p>This limits only the width and has worked in similar occasions also has prevented scrolling while dragging.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try the fixed position html element, but this disable scroll both direction.</p>\n\n<pre><code>html {\n    position: fixed;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found the solution here <a href=\"http://stackoverflow.com/a/9399429/622041\">http://stackoverflow.com/a/9399429/622041</a></p>\n\n<p>You'll <strong>have</strong> to put a <code>#wrapper</code> around your content. <code>overflow:hidden</code> on the <code>body</code> won't work.</p>\n\n<pre><code>#wrapper {position: absolute; width: 100%; overflow-x: hidden}\n</code></pre>\n\n<p>And here the HTML:</p>\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"wrapper\"&gt;\n      &lt;div class=\"yourContent\"&gt; ... &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Overflow on both the <code>&lt;body&gt;</code> and the <code>&lt;html&gt;</code> tags worked for me as well.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p><code>html, body {\n    overflow-x: hidden;\n    width: 100%;\n}</code></p>\n\n<p>Solved the issue for me, except for IE - you can still drag the site to the right if you make an effort to do so.</p>\n\n<p>Using <code>overflow: hidden;</code> removes the vertical scrollbar, so this isn't a solution.</p>\n\n<p>I couldn't manage to find a better solution using JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is another way to fix this issue with one line of code:</p>\n\n<pre><code>body {\n    /* All your regular code including overflow-x: hidden; */\n    position:relative;\n}\n</code></pre>\n\n<p>This solved my issues on webkit (Mac)</p>\n\n<p>Reference: <a href=\"http://www.tonylea.com/2010/safari-overflow-hidden-problem/\" rel=\"nofollow\">http://www.tonylea.com/2010/safari-overflow-hidden-problem/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The problem is:</p>\n\n<p>I have a full width bar menu, which is made by creating a big margin on the right and to the left. This margin should be cropped by <code>overflow-x: hidden</code>, and it is... no scroll bars, everything (visually) is ok...</p>\n\n<p>But, if you drag the page (using Mac Lion) or scroll to the right, the page shows an enormous bar, which should have been cropped by the <code>overflow-x:hidden</code>.</p>\n\n<h2>CSS</h2>\n\n<pre><code>html {\n  margin:0;\n  padding:0;\n  overflow-x:hidden;\n}\nbody {\n  margin: 0 auto;\n  width: 950px;\n}\n\n.full, .f_right {\n  margin-right: -3000px !important;\n  padding-right: 3000px !important;\n}\n\n.full, .f_left {\n  margin-left: -3000px !important;\n  padding-left: 3000px !important;\n}\n</code></pre>\n\n<p>Here is a link: <a href=\"http://jsfiddle.net/NicosKaralis/PcLed/1/\">http://jsfiddle.net/NicosKaralis/PcLed/1/</a></p>\n\n<p>You have to open in draft to see... the jsfiddle css somehow makes it work.</p>\n\n<h3>@Krazer</h3>\n\n<p>i have and structure like this:</p>\n\n<pre><code>body\n  div#container\n    div#menu_bar\n      div#links\n      div#full_bar\n    div#content_body\n    ...\n</code></pre>\n\n<p>the #container is an centered div and has fixed width of 950px,\nthe #full_bar is an bar that extends on the entire window, from one side to the other</p>\n\n<p>if i put width 100% in #full_bar it will get only the inside width and not the width off the window</p>\n",
            "last_activity_date": 1419297722,
            "question_id": 8635799,
            "score": 16,
            "tags": [
                "html",
                "css",
                "overflow"
            ],
            "title": "overflow-x:hidden still can scroll"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>What is wrong with <code>text-align: justify</code>? I think I might be misunderstanding your question.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Here's a script which can do it. It isn't pretty, but maybe you can hack it to meet your needs. (Updated to handle resizing)</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;style&gt;\n#character_justify {\n    position: relative;\n    width: 40%;\n    border: 1px solid red;\n    font-size: 32pt;\n    margin: 0;\n    padding: 0;\n}\n#character_justify * {\n    margin: 0;\n    padding: 0;\n    border: none;\n}\n&lt;/style&gt;\n&lt;script&gt;\nfunction SplitText(node)\n{\n    var text = node.nodeValue.replace(/^\\s*|\\s(?=\\s)|\\s*$/g, \"\");\n\n    for(var i = 0; i &lt; text.length; i++)\n    {\n        var letter = document.createElement(\"span\");\n        letter.style.display = \"inline-block\";\n        letter.style.position = \"absolute\";\n        letter.appendChild(document.createTextNode(text.charAt(i)));\n        node.parentNode.insertBefore(letter, node);\n\n        var positionRatio = i / (text.length - 1);\n        var textWidth = letter.clientWidth;\n\n        var indent = 100 * positionRatio;\n        var offset = -textWidth * positionRatio;\n        letter.style.left = indent + \"%\";\n        letter.style.marginLeft = offset + \"px\";\n\n        //console.log(\"Letter \", text[i], \", Index \", i, \", Width \", textWidth, \", Indent \", indent, \", Offset \", offset);\n    }\n\n    node.parentNode.removeChild(node);\n}\n\nfunction Justify()\n{\n    var TEXT_NODE = 3;\n    var elem = document.getElementById(\"character_justify\");\n    elem = elem.firstChild;\n\n    while(elem)\n    {\n        var nextElem = elem.nextSibling;\n\n        if(elem.nodeType == TEXT_NODE)\n            SplitText(elem);\n\n        elem = nextElem;\n    }\n}\n\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onload=\"Justify()\"&gt;\n&lt;p id=\"character_justify\"&gt;\nSomething&lt;br/&gt;\nLike&lt;br/&gt;\nThis\n&lt;/p&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>I know this is an old topic, but I faced this the other night. And found a suitable solution using tables. </p>\n\n<p>Every letter shall be put into a <code>&lt;td&gt; &lt;/td&gt;</code> I know it looks tedious, but if you wanna do this, it would be for a word or two, right? Or you always can use JS to fill it if is too much. However, this is only CSS and very versatile solution.</p>\n\n<p>Using letter-spacing the letters get distributed properly. You should play around with it, depending on the width of the table.</p>\n\n<pre><code>&lt;html&gt;\n&lt;style type=\"text/css\"&gt;\n#justify{width:300px; letter-spacing:0.5em;  }\n&lt;/style&gt;\n&lt;body&gt;\n&lt;table id=\"justify\"&gt;\n&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td&gt;J&lt;/td&gt;\n&lt;td&gt;U&lt;/td&gt;\n&lt;td&gt;S&lt;/td&gt;\n&lt;td&gt;T&lt;/td&gt;\n&lt;td&gt;I&lt;/td&gt;\n&lt;td&gt;F&lt;/td&gt;\n&lt;td&gt;Y&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Toooooony/29cDL/\" rel=\"nofollow\">See the example here</a> </p>\n\n<p>Crossbrowser safe, virtually nothing shall differ. Is just CSS. </p>\n\n<p>I used it in <a href=\"http://www.tonyborda.com/\" rel=\"nofollow\">My website</a> which is in english and spanish.\nthe subtitle under my name in spanish has an additional letter and it will step out the width. Using the tables explained above, it gets distributed to the same width automatically. Spacing it manually I'd had to define a whole condition for each language to go around that.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is an other aproach using a jQuery snippet I wrote for this question : <a href=\"http://stackoverflow.com/questions/5976289/stretch-text-to-fit-width-of-div\">Stretch text to fit width of div</a> :</p>\n\n<p><strong><a href=\"http://jsfiddle.net/webtiki/9XJbB/\" rel=\"nofollow\">DEMO</a></strong></p>\n\n<p><em>HTML :</em></p>\n\n<pre><code>&lt;div class=\"stretch\"&gt;Something&lt;/div&gt;\n&lt;div class=\"stretch\"&gt;Like&lt;/div&gt;\n&lt;div class=\"stretch\"&gt;This&lt;/div&gt;\n</code></pre>\n\n<p><em>jQuery :</em></p>\n\n<pre><code>$.fn.strech_text = function () {\n    var elmt = $(this),\n        cont_width = elmt.width(),\n        txt = elmt.html(),\n        one_line = $('&lt;span class=\"stretch_it\"&gt;' + txt + '&lt;/span&gt;'),\n        nb_char = elmt.text().length,\n        spacing = cont_width / nb_char,\n        txt_width;\n\n    elmt.html(one_line);\n    txt_width = one_line.width();\n\n    if (txt_width &lt; cont_width) {\n        var char_width = txt_width / nb_char,\n            ltr_spacing = spacing - char_width + (spacing - char_width) / nb_char;\n\n        one_line.css({\n            'letter-spacing': ltr_spacing\n        });\n    } else {\n        one_line.contents().unwrap();\n        elmt.addClass('justify');\n    }\n};\n\n\n$(document).ready(function () {\n    $('.stretch').each(function () {\n        $(this).strech_text();\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Again, I know this is REALLY old, but why not just put a space between each letter and then text-align:justify? Then each letter would be regarded as a 'word' and justified accordingly</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Needed this too, so I've bundled the suggested technique in a simple to use jquery-plugin you can find here: <a href=\"https://github.com/marc-portier/jquery-letterjustify#readme\" rel=\"nofollow\">https://github.com/marc-portier/jquery-letterjustify#readme</a>.</p>\n\n<p>It uses the same procedure at its core, and adds some options to tweak.\nComments welcome.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there a way to automatically justify words using letter spacing, each in its row, to a defined width, using CSS?</p>\n\n<p>For example, \"Something like this\" would look, well, something like this:</p>\n\n<p><img src=\"http://i.stack.imgur.com/axKZ7.png\" alt=\"&quot;Something like this&quot; would look something like this\"></p>\n\n<p>Is there a non-obtrusive way to apply such styling to my text? I believe pure CSS doesn't have this option (at least not with CSS versions before 3, CSS3 seems to have a <code>text-justify</code> property, but it's not well supported yet), so js solutions would be fine also.</p>\n",
            "last_activity_date": 1410720464,
            "question_id": 4355009,
            "score": 16,
            "tags": [
                "css",
                "justify",
                "letter-spacing",
                "text-justify"
            ],
            "title": "CSS text justify with letter spacing"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The best way is to make the file input control <strong>almost</strong> invisible (by giving it a very low opacity - do not do \"<strong>visibility: hidden</strong>\" or \"<strong>display: none</strong>\") and absolutely position something under it - with a lower <strong>z-index</strong>.</p>\n\n<p>This way, the actual control will not be visible, and whatever you put under it will show through. But since the control is positioned above that button, it will still capture the click events (this is why you want to use opacity, not visibility or display - browsers make the element unclickable if you use those to hide it).</p>\n\n<p><a href=\"http://www.shauninman.com/archive/2007/09/10/styling_file_inputs_with_css_and_the_dom\">This article</a> goes in-depth on the technique.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>This isn't technically possible for security purposes, so the user cannot be misled.</p>\n\n<p>However, there are a couple of workarounds - take a look at <a href=\"http://www.quirksmode.org/dom/inputfile.html\" rel=\"nofollow\">http://www.quirksmode.org/dom/inputfile.html</a> for one example.</p>\n\n<p>For the record, this question has already been asked <a href=\"http://stackoverflow.com/questions/94316/how-to-change-the-text-of-the-browse-button-in-the-fileupload-control-systemweb\">here</a> (where I gave the same answer).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Browsers don't really like you to mess around with file inputs, but it's possible to do this. I've seen a couple of techniques, but the simplest is to absolutely position the file input over whatever you want to use as a button, and set its opacity to zero or near-zero. This means that when the user clicks on the image (or whatever you have under there) they're actually clicking on the invisible browse button.</p>\n\n<p>For example:</p>\n\n<pre><code>&lt;input type=\"file\" id=\"fileInput\"&gt;\n&lt;img src=\"...\"&gt;\n\n#fileInput{\n    position: absolute;\n    opacity: 0;\n    -moz-opacity: 0;\n    filter: alpha(opacity=0);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you don't mind using javascript you can set the opasity of the file-input to 0, place your styled control on top via z-index and send clickevents from your button to the file-input. See here for the technique: <a href=\"http://www.quirksmode.org/dom/inputfile.html\" rel=\"nofollow\">http://www.quirksmode.org/dom/inputfile.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use a Flash uploader like <a href=\"http://swfupload.org/\" rel=\"nofollow\">SWFupload</a> to do this, as well.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I know that it's possible to replace the browse button, which is generated in html, when you use input tag with type=\"file\".</p>\n\n<p>I'm not sure what is the best way, so if someone has experience with this please contribute. </p>\n",
            "last_activity_date": 1395260193,
            "question_id": 108149,
            "score": 15,
            "tags": [
                "html",
                "css",
                "file",
                "input"
            ],
            "title": "What is the best way to replace the file browse button in html?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Well, for one thing you'd have to define CSS for all of those custom elements to behave like you want them to (eg. make the <code>&lt;ccommentbox&gt;</code> appear like a list), which causes unnecessary CSS. It also makes it harder for search bots to understand your site.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Elements defined in HTML have known semantics. These can be understood by browsers (especially useful if they don't have CSS support), screen readers, search engines, and any other user agent and then expressed to the user. </p>\n\n<p>Your own elements are meaningless. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There are a number of reasons why you shouldn't do this.  </p>\n\n<ol>\n<li><p><strong>First:</strong> By creating your own tags like that, you lose the functionality of tags like <code>ul and li</code>.  Your custom tags will just be generic divs, and that won't give you the results you are looking for.Yes, you can style the tags to duplicate those functions, but why spend all that time doing something that browser already does.</p></li>\n<li><p><strong>Second:</strong> People with disabilities will not be able to utilize your site, because it won't conform to any standard HTML. Those who are blind will use assistive technologies that read the html and present the contents verbally.</p></li>\n</ol>\n\n<p>Another reason is that browsers and javascript don't always work really well with these custom tags.  You will likely run into more problems than you imagine. It will be harder to make your apps cross-platform if you do this.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I think you'd want to use XSLT to transform your XML to valid HTML. If you introduce your own custom tag, you are no longer writing HTML, but probably XML or SGML.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h2>Custom tags are not evil</h2>\n\n<p><strong>just consider this:</strong></p>\n\n<ul>\n<li>They are not recognized in IE 6-8 by default -> you have to use JavaScript to introduce each custom tag you use on the page e.g: <code>document.createElement('custom-tag')</code> This means <strong>your website will only render correctly with JavaScript turned on</strong></li>\n<li>In most browsers your custom tags will be treated as inline elements like <code>&lt;span&gt;</code>, this means you have to write CSS to declare them as <code>custom-tag { display: block }</code></li>\n<li>There is no resource I found that could proof that custom tags have any negative impact on search engines. In fact Google released <a href=\"http://angularjs.org/\">Angular.js</a> which promotes custom tags (<code>&lt;pane&gt;</code> and <code>&lt;tab&gt;</code>) in its examples on the <strong><a href=\"http://angularjs.org/\">front page</a></strong>.</li>\n<li>Most HTML Editors will mark your custom tags as invalid HTML, because they are not in the official spec.</li>\n</ul>\n\n<h2>To summarize:</h2>\n\n<ul>\n<li>Use custom tags when there are important elements that have more\nmeaning than <code>&lt;div&gt;</code> and there is <strong>no existing HTML 4/5\nequivalent</strong>. This is especially true for web applications which\nparse the DOM for special tags/attributes/classes to create\ncomponents (like Angular.js).</li>\n<li>If all you build is a <strong>simple website</strong> with normal content, stick\nto standard HTML. You will want your website to work also without\nJavaScript turned on.</li>\n<li>If you build a <strong>web application</strong> where custom tags could really\nhelp to make the source cleaner and express special semantics, use\nthem. All negative implications mentioned above (JavaScript has to be\nturned on / CSS declaration) won't matter for these cases. The same\nrules apply to custom attributes.</li>\n</ul>\n\n<p>For more details on this topic: <a href=\"http://docs.angularjs.org/guide/ie\">IE compatibility for Angular.js</a></p>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>I found a site with an guide to add custom tags to html, the same way people make ie work with the new HTML5 tags. I must admit I think it would be great to add my own tags, would make it easier to \"scan\" the the code, and find what you are looking for.\nBut every site I found about it, people say it's not good.... but why isn't it good?</p>\n\n<p>Example html with class:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;ul class=\"commentlist\"&gt;\n    &lt;li class=\"comment odd\"&gt;\n    &lt;div class=\"1\"&gt;\n        &lt;div class=\"avatar\"&gt;\n            &lt;img src=\"http://placehold.it/60x60\" width=\"60\" height=\"60\" /&gt;\n        &lt;/div&gt;\n        &lt;div class=\"metadata\"&gt;\n            &lt;div class=\"name\"&gt;Name&lt;/div&gt;\n            &lt;p&gt;response1&lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;ul class=\"children\"&gt;\n        &lt;li class=\"comment even\"&gt;\n            &lt;div class=\"2\"&gt;\n                &lt;div class=\"avatar\"&gt;\n                    &lt;img src=\"http://placehold.it/60x60\" width=\"60\" height=\"60\" /&gt;\n                &lt;/div&gt;\n                &lt;div class=\"metadata\"&gt;\n                    &lt;div class=\"name\"&gt;Name&lt;/div&gt;\n                    &lt;p&gt;response1a&lt;/p&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/li&gt;\n        &lt;li class=\"comment odd\"&gt;\n            &lt;div class=\"3\"&gt;\n                &lt;div class=\"avatar\"&gt;\n                    &lt;img src=\"http://placehold.it/60x60\" width=\"60\" height=\"60\" /&gt;\n                &lt;/div&gt;\n                &lt;div class=\"metadata\"&gt;\n                    &lt;div class=\"name\"&gt;Name&lt;/div&gt;\n                    &lt;p&gt;response1b&lt;/p&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/li&gt;\n</code></pre>\n\n<p></p>\n\n<p>And here what I could do with custom tags, I think that would be much easier to find my way around, so why not:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;clist&gt;\n&lt;ccommentbox class=\"odd\"&gt;\n    &lt;ccomment class=\"1\"&gt;\n        &lt;cavatar&gt;\n            &lt;img src=\"http://placehold.it/60x60\" width=\"60\" height=\"60\" /&gt;\n        &lt;/cavatar&gt;\n        &lt;cdata&gt;\n            &lt;cname&gt;Name&lt;/cname&gt;\n            &lt;ctext&gt;response1&lt;/ctext&gt;\n        &lt;/cdata&gt;\n    &lt;/ccomment&gt;\n    &lt;cchildren&gt;\n        &lt;ccommentbox class=\"even\"&gt;\n            &lt;ccomment class=\"2\"&gt;\n                &lt;cavatar&gt;\n                    &lt;img src=\"http://placehold.it/60x60\" width=\"60\" height=\"60\" /&gt;\n                &lt;/cavatar&gt;\n                &lt;cdata&gt;\n                    &lt;cname&gt;Name&lt;/cname&gt;\n                    &lt;ctext&gt;response1a&lt;/ctext&gt;\n                &lt;/cdata&gt;\n            &lt;/ccomment&gt;\n        &lt;/ccommentbox&gt;\n        &lt;ccommentbox class=\"odd\"&gt;\n            &lt;ccomment class=\"3\"&gt;\n                &lt;cavatar&gt;\n                    &lt;img src=\"http://placehold.it/60x60\" width=\"60\" height=\"60\" /&gt;\n                &lt;/cavatar&gt;\n                &lt;cdata&gt;\n                    &lt;cname&gt;Name&lt;/cname&gt;\n                    &lt;ctext&gt;response1b&lt;/ctext&gt;\n                &lt;/cdata&gt;\n            &lt;/ccomment&gt;\n        &lt;/ccommentbox&gt;\n    &lt;/cchildren&gt;\n&lt;/ccommentbox&gt;\n</code></pre>\n\n<p></p>\n",
            "last_activity_date": 1412991231,
            "question_id": 8906448,
            "score": 14,
            "tags": [
                "html",
                "css",
                "html5",
                "custom-tag"
            ],
            "title": "Custom tags... why not?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Short answer: You can't.</p>\n\n<p>CSS does not have techniques which affect the rendering of fonts in the browser; only the system can do that.</p>\n\n<p>Obviously, text sharpness can easily be achieved with pixel-dense screens, but if you're using a normal PC that's gonna be hard to achieve.</p>\n\n<p>There are some newer fonts that are smooth but at the sacrifice of it appearing somewhat blurry (look at most of Adobe's fonts, for example). You can also find some smooth-but-blurry-by-design fonts at <a href=\"https://www.google.com/fonts\" rel=\"nofollow\">Google Fonts</a>, however.</p>\n\n<p>There are some new CSS3 techniques for font rendering and text effects though the consistency, performance, and reliability of these techniques vary so largely to the point where you generally shouldn't rely on them too much.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>here you go Sir :-)</p>\n\n<p>1</p>\n\n<pre><code>   .myElement{\n    -webkit-font-smoothing: antialiased;\n    }\n</code></pre>\n\n<p>2</p>\n\n<pre><code>   .myElement{\n    -webkit-text-shadow: rgba(0,0,0,.01) 0 0 1px;\n    }\n</code></pre>\n\n<p>Update: (see Duke)</p>\n\n<pre><code>   .myElement{\n    text-shadow: rgba(0,0,0,.01) 0 0 1px;\n    }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>Works the best. If you want to use it sitewide, without having to add this syntax to every class or ID, add the following CSS to your css body:</p>\n\n<pre><code>body { \n    -webkit-font-smoothing: antialiased;\n    text-shadow: 1px 1px 1px rgba(0,0,0,0.004);\n    background: url('./images/background.png');\n    text-align: left;\n    margin: auto;\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can we apply Photoshop-like font anti-aliasing such as crisp, sharp, strong, smooth in CSS?</p>\n\n<p>Are these supported by all browsers?</p>\n",
            "last_activity_date": 1409927111,
            "question_id": 17864742,
            "score": 13,
            "tags": [
                "html",
                "css",
                "css3",
                "antialiasing"
            ],
            "title": "How to apply font anti-alias effects in CSS?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Assuming I'm understanding what you want correctly, you could duplicate the top 300ish pixels of your image and apply a transparency gradient to them in Photoshop (making the top completely opaque and the bottom completely transparent).</p>\n\n<p>Then place this image in a <code>div</code> or some other element fixed over at the top of the fixed image but with a high <code>z-index</code>. The main text would then scroll over your background but under the <code>div</code> overlay and fade out as the overlay becomes more opaque towards the top of the screen.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've been wondering this exact same thing. The solution is actually quite simple. Although this is of course quite a modern CSS3 feature, so you're stuck to browser compatibility. </p>\n\n<p>Webkit can take care of this with a single line of CSS:</p>\n\n<pre><code>-webkit-mask-image: -webkit-gradient(linear, left 90%, left bottom, from(rgba(0,0,0,1)), to(rgba(0,0,0,0)))\"\n</code></pre>\n\n<p>This would fade out the bottom 10% of whatever element it's applied to, without using even so much as an image. You could add <code>padding-bottom: 10%</code> to make sure that content is only faded when there is more to scroll to.\nSource: <a href=\"http://www.webkit.org/blog/181/css-masks/\">http://www.webkit.org/blog/181/css-masks/</a></p>\n\n<p>A Mozilla (Gecko) fallback is a bit trickier though: you can use <a href=\"https://developer.mozilla.org/en/CSS/mask\">its 'mask' feature</a>, but this demands a SVG-image. You could try to <a href=\"http://stackoverflow.com/questions/1124149/embedding-background-image-data-into-css-as-base64-good-or-bad-practice\">base64 embed that image into your stylesheet</a>...</p>\n",
                    "is_accepted": true,
                    "score": 28
                }
            ],
            "body": "<p>I have a full screen fixed background image. I would like the text in my scrolling div to fade out at the top, presumably by applying a gradient mask to the background at only the top part of the div. I'm interested in having the text look like it fades away as it the user scrolls down, but still having a large area of full opacity for actually reading the text.</p>\n\n<p>I know there are masking options in the webkit, but I can't find a way to fade through to the page's background <strong>over</strong> the contained text only applying the gradient to a small portion of the element.</p>\n\n<p>Hopefully I have been descriptive enough.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1331569450,
            "question_id": 9525215,
            "score": 13,
            "tags": [
                "css",
                "gradient",
                "masking"
            ],
            "title": "Using CSS, can you apply a gradient mask to fade to the background over text?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Place a <code>div</code> with a % <code>width</code> and a static <code>min-width</code> to the right of your element.</p>\n\n<pre><code>&lt;div style=\"position:relative; float:left; margin:0\"&gt;\n&lt;div style=\"position:relative; float:left; width:33%; min-width:200px\"&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>How about this?</p>\n\n<pre><code>body {margin-left: 60px; margin-right: 60px; }\ndiv#container {width:33%;}\n</code></pre>\n\n<p>I'm a creative coder, not a formal coder, so be aware that this might cause unforeseen problems.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you can try this</p>\n\n<pre><code>.mm:before {\n    content: \"\";\n    display: inline-block;\n    width: 33%;\n    min-width: 200px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I have set a <code>margin: 0 33% 0 0;</code> however I would also like to make sure the margin is <em>at least</em> a certain <code>px</code> amount. I know there is no <code>min-margin</code> in CSS so I was wondering if I have any options here?</p>\n",
            "last_activity_date": 1417610433,
            "question_id": 6350645,
            "score": 13,
            "tags": [
                "css",
                "margin"
            ],
            "title": "Using a percentage margin in CSS but want a minimum margin in pixels?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>How can you make the value in the password field visible? So, when typing your password in the field, it will not show the black dots, but the actual value that you are typing.</p>\n</blockquote>\n\n<p>You can't.</p>\n\n<p>You can, however, use a normal text input for the user to type in the password.</p>\n\n<p>I wouldn't recommend this, though - for example, the browser might auto-save whatever you type in it. A <code>autocomplete=\"off\"</code> is mandatory in any case.</p>\n\n<p>Reference:</p>\n\n<ul>\n<li><p><a href=\"http://msdn.microsoft.com/en-us/library/ms535126%28VS.85%29.aspx\" rel=\"nofollow\">MSDN article</a> on input elements in IE; mentions that the <code>element.value</code> property is always asterisks for password inputs, even when accessing it from JS</p></li>\n<li><p>MDC: <a href=\"https://developer.mozilla.org/en/How_to_Turn_Off_Form_Autocompletion\" rel=\"nofollow\">How to Turn Off Form Autocompletion</a></p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Don't make it a password field, make it a normal text box.</p>\n\n<p>If you need to switch the field type dynamically, there is a <a href=\"http://codingforums.com/showthread.php?t=107073\">HOWOTO over on codingforums.com</a>, and also several SO questions:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/1987788/javascript-ie6-7-8-change-input-type\">Javascript IE6/7/8 change input type</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2566394/changing-the-input-type-in-ie-with-javascript\">Changing the &lt;input&gt; type in IE with JavaScript</a></li>\n<li><a href=\"http://stackoverflow.com/questions/7618306/javascript-change-input-type-dynamically-doesnt-work-on-ie8\">Javascript change input type dynamically doesnt work on IE8</a></li>\n<li><a href=\"http://stackoverflow.com/questions/1544317/jquery-change-type-of-input-field\">JQuery change type of input field</a></li>\n</ul>\n\n<p>To ensure that browsers keep their normal behavior (saving/not saving passwords) you can convert this back to a password field upon submit.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Then is it called password?It is simple text box only.<br/>\n<code>&lt;input type=\"text\" name=\"password\" id=\"password\" /&gt;</code><br/>\n<strong>Edit:</strong>\nWhether you want like a remember my password?<br/></p>\n\n<p>So if you want to keep the password in the client side then put it in the cookie and if cookie already set replace the password field with cookie value.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How can you make the value in the password field visible? So, when typing your password in the field, it will not show the black dots, but the actual value that you are typing.</p>\n\n<p>Thanks!</p>\n\n<p>edit: Ok, so then a better question might be: How can I force the browser to remember the value in this 'password' field and treat it as a password?</p>\n",
            "last_activity_date": 1361039943,
            "question_id": 4004313,
            "score": 12,
            "tags": [
                "javascript",
                "html",
                "css",
                "passwords"
            ],
            "title": "HTML/CSS: How to make &quot;password&quot; input show the password?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You need to use CSS to adjust the layout of the two pieces of content.  Either break up the label into two labels and apply css classes to each, or wrap each bit of text inside your label with a <code>&lt;span&gt;</code> tag and style them that way.</p>\n\n<p>Filling empty space with characters to try to adjust the layout is not the correct approach, and wouldn't be recommended for the same reasons you don't format your text documents by adding space characters everywhere.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<ol>\n<li><p>Find the first instance of three spaces.  I am assuming that this is the minimum number needed to constitute a \"break\"</p></li>\n<li><p>Find the first non-space character after that.</p></li>\n<li><p>Replace all the spaces between the index in #1 (+1) and the index in #2 (-1).  That would give you the results above.</p></li>\n</ol>\n\n<p>Check other answers for more clean ways to do it with CSS.  That would be the cleanest way to display the text.  Dashes look ghetto. :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Try this:</strong> <a href=\"http://jsfiddle.net/FpRp2/4/\">http://jsfiddle.net/FpRp2/4/</a> <strong>(updated, now works in ie7)</strong></p>\n\n<p><strong>The solution @Marcel gave to use a dashed border instead of text hyphens solved the final issue with IE7.</strong></p>\n\n<p>(Note, I've only tested in Safari, Firefox and Chrome so far.)</p>\n\n<p>EDIT: IE8 works. <s>Working on a fix for IE7.</s></p>\n\n<p>HTML</p>\n\n<pre><code>&lt;div class='outer'&gt;\n    &lt;div class='container'&gt;\n        &lt;div class='filler'&gt;&lt;/div&gt;\n        &lt;span class='label'&gt;some label&lt;/span&gt;\n        &lt;span class='text'&gt;some text&lt;/span&gt;\n    &lt;/div&gt;\n    &lt;br&gt;\n    &lt;div class='container'&gt;\n        &lt;div class='filler'&gt;&lt;/div&gt;\n        &lt;span class='label'&gt;some other label&lt;/span&gt;\n        &lt;span class='text'&gt;some other text&lt;/span&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS</p>\n\n<pre><code>.outer {\n    display: inline-block;\n    *display: inline;\n    zoom: 1;\n    position: relative;\n    clip: auto;\n    overflow: hidden;\n}\n.container {\n    position: relative;\n    text-align: right;\n    white-space: nowrap;\n}\n.filler {\n    position: absolute;\n    left: 0;\n    right: 0;\n    border-bottom: 1px dashed #333;\n    height: 50%;\n}\n.label {\n    background: white;\n    float: left;\n    margin-right: 20px;\n    padding-right: 4px;\n    position: relative;\n}\n.text {\n    background: white;\n    padding-left: 4px;\n    position: relative;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>For anyone interested, here is another way to do this from the W3C using CSS with links to other similar techniques:</p>\n\n<p><a href=\"http://www.w3.org/Style/Examples/007/leaders.en.html\" rel=\"nofollow\">http://www.w3.org/Style/Examples/007/leaders.en.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have implemented this on a table <strong>with pure CSS</strong> and even without using any span or div.</p>\n\n<p>CSS is:</p>\n\n<pre><code>.dot-table td {\n    max-width:200px;\n    overflow:hidden;\n    white-space:nowrap;\n}\n.dot-table td:first-child:after {\n    content:\" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \"\n}\n</code></pre>\n\n<p>HTML is</p>\n\n<pre><code>&lt;table class=\"dot-table\"&gt;\n  &lt;tr&gt;\n    &lt;td&gt;\n       Coffee\n    &lt;/td&gt;\n    &lt;td&gt;\n       45 INR\n    &lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td&gt;\n       Tea\n    &lt;/td&gt;\n    &lt;td&gt;\n       36 INR\n    &lt;/td&gt;\n   &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p><strong>A detailed output</strong> (from a site I developed) \n<img src=\"http://i.stack.imgur.com/8wPfe.png\" alt=\"A detailed table with filling dots\"></p>\n\n<p>View it live <a href=\"http://ontrip.in/tiyabon-chalsa/\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a page with labels which are contained in a div, the labels has a variable with and i want to fill spaces between both with characters, dots or '-'. </p>\n\n<p>For example.</p>\n\n<p>My label text 1 ----------- Some Text Here.</p>\n\n<p>My text 2 ----------------------- Another Text.</p>\n\n<p>If you notice both text are justified (or at least i try), could be a problem of counting characters but character can have different width, any one knows a clean way of doing this programmatically in Asp.Net, css, jquery or anything else? </p>\n\n<p>Update</p>\n\n<p>................</p>\n\n<p>Someone suggested in answers align both labels with css, but i think i will be having the same problem with the characters in the middle, which can be another label of course. Any thoughts?</p>\n\n<p>Update</p>\n\n<p>.................</p>\n\n<p>Answer from Patrick is really close to the solution, but now hyphens are not shown in IE8, maybe there is a miss understand in one of my comments, it should work on IE7, IE8 and Firefox, only these browsers. </p>\n\n<p>Thanks to everyone.</p>\n",
            "last_activity_date": 1386329166,
            "question_id": 3097851,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "Fill available spaces between labels with dots or hyphens"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You're best off embedding the CSS in your HTML.</p>\n\n<p>I believe inline styles (added in a style attribute on each element) are more widely supported than including a &lt;style&gt; section, too.</p>\n\n<p>I just Googled and came across this tutorial - looks pretty good at first glance... <a href=\"http://articles.sitepoint.com/article/code-html-email-newsletters\" rel=\"nofollow\">http://articles.sitepoint.com/article/code-html-email-newsletters</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Can you?  Yes.  </p>\n\n<p>Should you? No.  Most likely the email client will block external links and therefore your mail will not appear as you think it should.</p>\n\n<p>If you must send html mail, embed everything into the email message itself.  External links which automatically call back to the home server to load additional resources are one thing spam filters don't like.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Forget efficient. Forget smart. Forget maintainable. This is HTML mail we're talking about.</p>\n\n<p>HTML mail and Webmail clients are extremely limited, partly for security reasons but mainly because they're just rubbish.\nExternal style sheets almost certainly won't work. HTML-embedded style sheets probably won't work. Inline <code>style=\"...\"</code> attribute on every damn element... has a much better chance of working, but still, don't be surprised when many users can't see styles at all, or some styles don't work, or some basic HTML doesn't work, and the content ends up looking like a 1997 browser threw up all over it.</p>\n\n<p>HTML mail is an exercise in unpleasantness. I hate to receive it. I hate even more to author it. The sanest route for everyone is to forget HTML mail and just send a plain text message including a link to a full web page, where you can have as much CSS, JavaScript and Flash loveliness as you like.</p>\n",
                    "is_accepted": false,
                    "score": 31
                }
            ],
            "body": "<p>When sending an HTML email can you link to an external style sheet or does the CSS need to be included in the email?</p>\n\n<p>Also, if you can link to an external style sheet, which way is more efficient/is smarter to use: linking to the style sheet or including it in the HTML?</p>\n",
            "last_activity_date": 1264032795,
            "question_id": 2105963,
            "score": 12,
            "tags": [
                "html",
                "css",
                "email",
                "stylesheet"
            ],
            "title": "Can you link to a CSS file from an email?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Here is one way to do this using css</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div class=\"imageWrapper\"&gt;\n    &lt;img src=\"http://lorempixel.com/300/300/\" alt=\"\" /&gt;\n    &lt;a href=\"http://google.com\" class=\"cornerLink\"&gt;Link&lt;/a&gt;\n&lt;/div&gt;\u200b\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.imageWrapper {\n    position: relative;\n    width: 300px;\n    height: 300px;\n}\n.imageWrapper img {\n    display: block;\n}\n.imageWrapper .cornerLink {\n    opacity: 0;\n    position: absolute;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n    padding: 2px 0px;\n    color: #ffffff;\n    background: #000000;\n    text-decoration: none;\n    text-align: center;\n    -webkit-transition: opacity 500ms;\n    -moz-transition: opacity 500ms;\n    -o-transition: opacity 500ms;\n    transition: opacity 500ms;\n\n}\n.imageWrapper:hover .cornerLink {\n    opacity: 0.8;\n}\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/UqdVp/1/\">Demo</a></strong></p>\n\n<p>Or if you just want it in the bottom left corner:</p>\n\n<p><strong><a href=\"http://jsfiddle.net/UqdVp/2/\">Demo</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>This is using the <code>:hover</code> pseudoelement in CSS3.</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div id=\"wrapper\"&gt;\n    &lt;img src=\"http://placehold.it/300x200\" class=\"hover\" /&gt;\n    &lt;p class=\"text\"&gt;text&lt;/p&gt;\n&lt;/div&gt;\u200b\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>#wrapper .text {\nposition:relative;\nbottom:30px;\nleft:0px;\nvisibility:hidden;\n}\n\n#wrapper:hover .text {\nvisibility:visible;\n}\n</code></pre>\n\n<p>\u200bDemo <a href=\"http://jsfiddle.net/3Pghz/3/\">HERE</a>.</p>\n\n<hr>\n\n<p>This instead is a way of achieving the same result by using jquery:</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div id=\"wrapper\"&gt;\n    &lt;img src=\"http://placehold.it/300x200\" class=\"hover\" /&gt;\n    &lt;p class=\"text\"&gt;text&lt;/p&gt;\n&lt;/div&gt;\u200b\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>#wrapper p {\nposition:relative;\nbottom:30px;\nleft:0px;\nvisibility:hidden;\n}\n</code></pre>\n\n<p><strong>jquery code:</strong></p>\n\n<pre><code>$('.hover').mouseover(function() {\n  $('.text').css(\"visibility\",\"visible\");\n});\n\n$('.hover').mouseout(function() {\n  $('.text').css(\"visibility\",\"hidden\");\n});\n</code></pre>\n\n<p>You can put the jquery code where you want, in the <strong>body</strong> of the HTML page, then you need to include the jquery library in the <strong>head</strong> like this:</p>\n\n<pre><code>&lt;head&gt;\n&lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>You can see the demo <a href=\"http://jsfiddle.net/RetMp/1/\">HERE</a>.</p>\n\n<p>When you want to use it on your website, just change the <code>&lt;img src /&gt;</code> value and you can add multiple images and captions, just copy the format i used: insert image with <code>class=\"hover\"</code> and p with <code>class=\"text\"</code></p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Use <code>:hover::before</code> pseudooclass</p>\n\n<pre><code>.round-pic2:hover::before{\n    content: 'text';\n    position: relative;\n    top: 60px;\n    left: 50px;\n    width: 30px;\n    height: 20px;\n    text-align: center;\n    display: inline-block;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/4LjeL/2/\" rel=\"nofollow\">JSFiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>tryt his code...a small caption on bottom of an image..</p>\n\n<pre><code>.imageHolder {\n    position: relative;\n    width: 285px;\n    height: 175px;\n}\n.imageHolder .caption {\n    opacity: 0;\n    position: absolute;\n    height:50px;\n    width: 283px;\n    bottom: 0px;\n    left: 0px;\n    padding: 2px 0px;\n    color: black;\n    background: lime;\n    text-align: center;\n    font-weight:bold;\n}\n.imageHolder:hover .caption {\n    opacity: 0.7;\n}\n</code></pre>\n\n<p>FUll source..<a href=\"http://www.corelangs.com/css/box/caption.html\" rel=\"nofollow\">CSS Image Caption</a></p>\n\n<p>Mark</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to get a small box to appear on the bottom-left side of an image when a mouse moves over it. Inside the box there will be a link to a different page.</p>\n\n<p><a href=\"http://theme-frsch2.tumblr.com/\">Here</a> is somewhat similar to what I want, but the box to be smaller and not connected to the border of the image.</p>\n\n<p>I've tried everything and can't find an answer. And I don't want to use tooltip, let alone the fact that i have no javascript knowledge whatsoever. I really want this to be CSS.</p>\n\n<p>Also the images I'm trying to work with can be found <a href=\"http://silentthemes.tumblr.com\">right here.</a></p>\n",
            "last_activity_date": 1422872049,
            "question_id": 14149360,
            "score": 11,
            "tags": [
                "css",
                "image",
                "text",
                "mouseover"
            ],
            "title": "Text on image mouseover?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If the space between the arrows does not need to be transparent (<em>it is solid color</em>) you can use the <code>:before</code> and <code>:after</code> to create the edges (<em>without new elements in DOM</em>)</p>\n\n<p>Basically, it creates rotated squares with the borders we want and places them accordingly</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>#flowBoxes {\r\n    margin:auto;\r\n    padding:20px;\r\n    min-width:700px;\r\n\r\n}\r\n#flowBoxes div {\r\n    display:inline-block;\r\n    position:relative;\r\n    height:25px;\r\n    line-height:25px;\r\n    padding:0 20px;\r\n    border:1px solid #ccc;\r\n    margin-right:2px;\r\n    background-color:white;\r\n}\r\n\r\n#flowBoxes div.right:after{\r\n    content:'';\r\n    border-top:1px solid #ccc;\r\n    border-right:1px solid #ccc;\r\n    width:18px;\r\n    height:18px;\r\n    position:absolute;\r\n    right:0;\r\n    top:-1px;\r\n    background-color:white;\r\n    z-index:150;\r\n    \r\n    -webkit-transform: translate(10px,4px) rotate(45deg);\r\n       -moz-transform: translate(10px,4px) rotate(45deg);\r\n        -ms-transform: translate(10px,4px) rotate(45deg);\r\n         -o-transform: translate(10px,4px) rotate(20deg); \r\n            transform: translate(10px,4px) rotate(45deg);\r\n}\r\n\r\n#flowBoxes div.left:before{\r\n    content:'';\r\n    border-top:1px solid #ccc;\r\n    border-right:1px solid #ccc;\r\n    width:18px;\r\n    height:18px;\r\n    position:absolute;\r\n    left:0;\r\n    top:-1px;\r\n    background-color:white;\r\n    z-index:50;\r\n    \r\n    -webkit-transform: translate(-10px,4px) rotate(45deg);\r\n       -moz-transform: translate(-10px,4px) rotate(45deg);\r\n        -ms-transform: translate(-10px,4px) rotate(45deg);\r\n         -o-transform: translate(-10px,4px) rotate(20deg);\r\n            transform: translate(-10px,4px) rotate(45deg);\r\n}\r\n#flowBoxes .active{\r\n    background-color:green;\r\n    color:white;\r\n}\r\n#flowBoxes div.active:after{\r\n    background-color:green;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"flowBoxes\"&gt;\r\n        &lt;div class=\"right\"&gt;Diersoort / I&amp;amp;R&lt;/div&gt;\r\n        &lt;div class=\"left right active\"&gt;Model&lt;/div&gt;\r\n        &lt;div class=\"left right\"&gt;Varianten&lt;/div&gt;\r\n        &lt;div class=\"left right\"&gt;Bedrukkingen&lt;/div&gt;\r\n        &lt;div class=\"left\"&gt;Bevestiging&lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p><a href=\"http://jsfiddle.net/1ozbd1db/\" rel=\"nofollow\">Here's some great arrows for you</a></p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>html{\r\n  background-color:red;\r\n  }\r\ndiv#page {\r\n    padding-bottom: 40px;\r\n    padding-top: 40px;\r\n    text-align: center;\r\n    z-index: 1;\r\n    position: relative;\r\n}\r\ndiv.diamond, div.ribbon, div.right-arrow, div.left-arrow {\r\n    display: inline-block;\r\n    color: #FFFFFF;\r\n    font-size: 22px;\r\n    line-height: 38px;\r\n    margin: 15px 0;\r\n    position: relative;\r\n    width: 200px;\r\n}\r\ndiv.diamond:before, div.diamond:after, div.ribbon:before, div.ribbon:after, div.right-arrow:before, div.right-arrow:after, div.left-arrow:before, div.left-arrow:after {\r\n    content:\"\";\r\n    border-style: solid;\r\n    border-width: 0;\r\n    height: 0;\r\n    position: absolute;\r\n    width: 0;\r\n}\r\ndiv.diamond {\r\n    background-color: #CCCCCC;\r\n}\r\ndiv.diamond:after, div.diamond:before {\r\n    border-color: transparent #CCCCCC;\r\n}\r\ndiv.diamond:before {\r\n    left: -19px;\r\n    border-width: 19px 19px 19px 0;\r\n}\r\ndiv.diamond:after {\r\n    right: -19px;\r\n    border-width: 19px 0 19px 19px;\r\n}\r\ndiv.ribbon {\r\n    background-color: #CCCCCC;\r\n}\r\ndiv.ribbon:before, div.ribbon:after {\r\n    top: 6px;\r\n    z-index: -15;\r\n}\r\ndiv.ribbon:before {\r\n    border-color: #B2B2B2 #B2B2B2 #B2B2B2 transparent;\r\n    border-width: 19px;\r\n    left: -25px;\r\n}\r\ndiv.ribbon:after {\r\n    border-color: #B2B2B2 transparent #B2B2B2 #B2B2B2;\r\n    border-width: 19px;\r\n    right: -25px;\r\n}\r\ndiv.right-arrow {\r\n    background-color: #CCCCCC;\r\n}\r\ndiv.right-arrow:after, div.right-arrow:before {\r\n    border-width: 19px 0 19px 19px;\r\n}\r\ndiv.right-arrow:before {\r\n    border-color: #CCCCCC transparent;\r\n    left: -19px;\r\n}\r\ndiv.right-arrow:after {\r\n    border-color: transparent #CCCCCC;\r\n    right: -19px;\r\n}\r\ndiv.left-arrow {\r\n    background-color: #CCCCCC;\r\n}\r\ndiv.left-arrow:after, div.left-arrow:before {\r\n    border-width: 19px 19px 19px 0;\r\n}\r\ndiv.left-arrow:before {\r\n    border-color: transparent #CCCCCC;\r\n    left: -19px;\r\n}\r\ndiv.left-arrow:after {\r\n    border-color: #CCCCCC transparent;\r\n    right: -19px;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"page\"&gt;\r\n    &lt;div class=\"diamond\"&gt;Diamond&lt;/div&gt;\r\n    &lt;br&gt;\r\n    &lt;div class=\"ribbon\"&gt;Ribbon&lt;/div&gt;\r\n    &lt;br&gt;\r\n    &lt;div class=\"right-arrow\"&gt;Right arrow&lt;/div&gt;\r\n    &lt;br&gt;\r\n    &lt;div class=\"left-arrow\"&gt;Left arrow&lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p><a href=\"http://basicuse.net/articles/pl/textile/html_css/changing_shape_of_a_block_to_look_like_diamond_ribbon_or_right_and_left_arrows_using_only_css#example\" rel=\"nofollow\">SOURCE</a></p>\n\n<p><strong>Note</strong></p>\n\n<p>this <a href=\"http://jsfiddle.net/jbutler483/1ozbd1db/3/\" rel=\"nofollow\">also allows gradient backgrounds/etc</a></p>\n\n<hr>\n\n<p>For other shapes, I saw <a href=\"http://codepen.io/pouretrebelle/pen/HzvCl\" rel=\"nofollow\">this codepen</a> the other day, too</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Here is an alternate approach to the whole thing using CSS3 features. One advantage of using this method (and one of the main reasons for adding a separate answer) is that the space in between the arrows can be transparent.</p>\n\n<p>Basically the implementation is as follows:</p>\n\n<ol>\n<li>There is one <code>div</code> for each step/item and it contains the text that needs to be displayed. Let us say the <code>height</code> of this <code>div</code> is <code>x</code> (50px in this example).</li>\n<li>Two pseudo-elements (<code>:before</code> and <code>:after</code>) are created with their <code>width</code> the same as the parent <code>div</code> and <code>height</code> as half (<code>x/2</code>) of the parent. The <code>:before</code> element has no <code>border-bottom</code> whereas the <code>:after</code> element has no <code>border-top</code> to avoid a line appearing in the middle of the shape (parallel to x-axis).</li>\n<li>These two pseudo-elements are then <code>skew</code> transformed in opposite directions and are positioned in such a way that they are directly below each other and thus ends up forming the required shape.</li>\n<li>The pseudo-elements are assigned a negative <code>z-index</code> to push them to be behind the parent <code>div</code> (and therefore its text).</li>\n<li>The <code>first-child</code> and the <code>last-child</code> elements are modified slightly (<code>left</code> position, <code>border</code> of pseudo-elements, <code>background</code> and <code>border</code> of parent <code>div</code>) to achieve the straight sides.</li>\n<li>We can add an <code>active</code> class for active elements and <code>hover</code> effects also to the shapes like in the below sample. </li>\n</ol>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.steps {\r\n  height: 50px;\r\n  width: 150px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n  position: relative;\r\n  margin: 10px 0px 10px 20px;\r\n  display: inline-block;\r\n}\r\n.steps:before,\r\n.steps:after {\r\n  content: '';\r\n  position: absolute;\r\n  left: 0px;\r\n  width: 150px;\r\n  height: 25px;\r\n  z-index: -1;\r\n}\r\n.steps:before {\r\n  top: -2px;\r\n  border-top: 2px solid blue;\r\n  border-right: 2px solid blue;\r\n  border-left: 2px solid blue;\r\n  background: lightblue;\r\n  -moz-transform: skew(30deg);\r\n  -webkit-transform: skew(30deg);\r\n  transform: skew(30deg);\r\n}\r\n.steps:after {\r\n  bottom: -2px;\r\n  border-left: 2px solid blue;\r\n  border-right: 2px solid blue;\r\n  border-bottom: 2px solid blue;\r\n  background: lightblue;\r\n  -moz-transform: skew(-30deg);\r\n  -webkit-transform: skew(-30deg);\r\n  transform: skew(-30deg);\r\n}\r\n.steps:last-child {\r\n  background: lightblue;\r\n  border-right: 2px solid blue;\r\n  border-top: 2px solid blue;\r\n  border-bottom: 2px solid blue;\r\n  margin-left: 38px;\r\n}\r\n.steps:first-child {\r\n  background: lightblue;\r\n  border-left: 2px solid blue;\r\n  border-top: 2px solid blue;\r\n  border-bottom: 2px solid blue;\r\n  margin-right: 18px;\r\n}\r\n.steps:first-child:before,\r\n.steps:first-child:after {\r\n  left: 18px;\r\n}\r\n.steps:last-child:before,\r\n.steps:last-child:after {\r\n  left: -18px;\r\n}\r\n/* Hover Styles */\r\n\r\n.steps:first-child:hover,\r\n.steps:last-child:hover,\r\n.steps:hover:before,\r\n.steps:hover:after {\r\n  background: lightgreen;\r\n}\r\n.steps:first-child:hover {\r\n  border-left: 2px solid green;\r\n}\r\n.steps:last-child:hover {\r\n  border-right: 2px solid green;\r\n}\r\n.steps:hover:before {\r\n  border-top: 2px solid green;\r\n  border-right: 2px solid green;\r\n  border-left: 2px solid green;\r\n}\r\n.steps:hover:after {\r\n  border-left: 2px solid green;\r\n  border-right: 2px solid green;\r\n  border-bottom: 2px solid green;\r\n}\r\n.steps:first-child:hover,\r\n.steps:last-child:hover {\r\n  border-top: 2px solid green;\r\n  border-bottom: 2px solid green;\r\n}\r\n\r\n/* Active Styles */\r\n\r\n.active:first-child,\r\n.active:last-child,\r\n.active:before, \r\n.active:after{\r\n  background: bisque;\r\n}\r\n.active:first-child{\r\n  border-left: 2px solid red;\r\n}\r\n.active:last-child{\r\n  border-right: 2px solid red;\r\n}\r\n.active:before{\r\n  border-top: 2px solid red;\r\n  border-right: 2px solid red;\r\n  border-left: 2px solid red;\r\n}\r\n.active:after{\r\n  border-left: 2px solid red;\r\n  border-right: 2px solid red;\r\n  border-bottom: 2px solid red;\r\n}\r\n.active:first-child, .active:last-child{\r\n  border-top: 2px solid red;\r\n  border-bottom: 2px solid red;\r\n}\r\n\r\n/* Just for creating a non solid color background */\r\nbody{\r\n  height: 200px;\r\n  background: -webkit-radial-gradient(center, ellipse, #400, #100);\r\n  background: -moz-radial-gradient(center, ellipse, #400, #100);\r\n  background: radial-gradient(center, ellipse, #400, #100);\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div class='steps-container'&gt;\r\n  &lt;div class='steps'&gt;1. Step 1&lt;/div&gt;\r\n  &lt;div class='steps active'&gt;2. Step 2&lt;/div&gt;\r\n  &lt;div class='steps'&gt;3. Step 3&lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<blockquote>\n  <p><strong>Note:</strong> The <code>hover</code> in the above snippet doesn't work when hovering on the right tip of the first-child or the left tip of the last-child because of z-index issues. If you need seamless <code>hover</code> functionality then using a <code>span</code> inside the <code>.steps</code> element like in the below snippet would solve it. (Thanks to <a href=\"http://stackoverflow.com/users/2511146/the-pragmatick\">The Pragmatick</a> for pointing this out).</p>\n</blockquote>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.steps {\r\n  height: 50px;\r\n  width: 150px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n  position: relative;\r\n  margin: 10px 0px 10px 20px;\r\n  display: inline-block;\r\n}\r\n.steps span {\r\n  position: relative;\r\n  z-index: 2;\r\n}\r\n.steps:before,\r\n.steps:after {\r\n  content: '';\r\n  position: absolute;\r\n  left: 0px;\r\n  width: 150px;\r\n  height: 25px;\r\n}\r\n.steps:before {\r\n  top: -2px;\r\n  border-top: 2px solid blue;\r\n  border-right: 2px solid blue;\r\n  border-left: 2px solid blue;\r\n  background: lightblue;\r\n  -moz-transform: skew(30deg);\r\n  -webkit-transform: skew(30deg);\r\n  transform: skew(30deg);\r\n}\r\n.steps:after {\r\n  bottom: -2px;\r\n  border-left: 2px solid blue;\r\n  border-right: 2px solid blue;\r\n  border-bottom: 2px solid blue;\r\n  background: lightblue;\r\n  -moz-transform: skew(-30deg);\r\n  -webkit-transform: skew(-30deg);\r\n  transform: skew(-30deg);\r\n}\r\n.steps:first-child:before,\r\n.steps:first-child:after {\r\n  border-left: none;\r\n}\r\n.steps:last-child:before,\r\n.steps:last-child:after {\r\n  border-right: none;\r\n}\r\n.steps:last-child {\r\n  background: lightblue;\r\n  border-right: 2px solid blue;\r\n  border-top: 2px solid blue;\r\n  border-bottom: 2px solid blue;\r\n  margin-left: 38px;\r\n}\r\n.steps:first-child {\r\n  background: lightblue;\r\n  border-left: 2px solid blue;\r\n  border-top: 2px solid blue;\r\n  border-bottom: 2px solid blue;\r\n  margin-right: 18px;\r\n}\r\n.steps:first-child:before,\r\n.steps:first-child:after {\r\n  left: 18px;\r\n}\r\n.steps:last-child:before,\r\n.steps:last-child:after {\r\n  left: -18px;\r\n}\r\n/* Hover Styles */\r\n\r\n.steps:first-child:hover,\r\n.steps:last-child:hover,\r\n.steps:hover:before,\r\n.steps:hover:after {\r\n  background: lightgreen;\r\n}\r\n.steps:first-child:hover {\r\n  border-left: 2px solid green;\r\n}\r\n.steps:last-child:hover {\r\n  border-right: 2px solid green;\r\n}\r\n.steps:hover:before {\r\n  border-top: 2px solid green;\r\n  border-right: 2px solid green;\r\n  border-left: 2px solid green;\r\n}\r\n.steps:hover:after {\r\n  border-left: 2px solid green;\r\n  border-right: 2px solid green;\r\n  border-bottom: 2px solid green;\r\n}\r\n.steps:first-child:hover,\r\n.steps:last-child:hover {\r\n  border-top: 2px solid green;\r\n  border-bottom: 2px solid green;\r\n}\r\n.steps:first-child:hover:before,\r\n.steps:first-child:hover:after {\r\n  border-left: none;\r\n}\r\n.steps:last-child:hover:before,\r\n.steps:last-child:hover:after {\r\n  border-right: none;\r\n}\r\n/* Active Styles */\r\n\r\n.active:first-child,\r\n.active:last-child,\r\n.active:before,\r\n.active:after {\r\n  background: bisque;\r\n}\r\n.active:first-child {\r\n  border-left: 2px solid red;\r\n}\r\n.active:last-child {\r\n  border-right: 2px solid red;\r\n}\r\n.active:before {\r\n  border-top: 2px solid red;\r\n  border-right: 2px solid red;\r\n  border-left: 2px solid red;\r\n}\r\n.active:after {\r\n  border-left: 2px solid red;\r\n  border-right: 2px solid red;\r\n  border-bottom: 2px solid red;\r\n}\r\n.active:first-child,\r\n.active:last-child {\r\n  border-top: 2px solid red;\r\n  border-bottom: 2px solid red;\r\n}\r\n/* Just for creating a non solid color background */\r\n\r\nbody {\r\n  height: 200px;\r\n  background: -webkit-radial-gradient(center, ellipse, #400, #100);\r\n  background: -moz-radial-gradient(center, ellipse, #400, #100);\r\n  background: radial-gradient(center, ellipse, #400, #100);\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div class='steps-container'&gt;\r\n  &lt;div class='steps'&gt;\r\n    &lt;span&gt;1. Step 1&lt;/span&gt;\r\n  &lt;/div&gt;\r\n  &lt;div class='steps active'&gt;\r\n    &lt;span&gt;2. Step 2&lt;/span&gt;\r\n  &lt;/div&gt;\r\n  &lt;div class='steps'&gt;\r\n    &lt;span&gt;3. Step 3&lt;/span&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p><strong>Screenshot:</strong> (with the hover on second item)</p>\n\n<p><img src=\"http://i.stack.imgur.com/pJSh0.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you want transparent spaces between tabs, Harry's current answer is they way to go. </p>\n\n<p>But if you want to remove hover issues, you can try the following. It uses <code>box-shadow</code> for pseudo-elements instead of background with solid colour.<br>\nThe same effect is achievable using <strong><code>border: _px inset #___ ;</code></strong></p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.li {\r\n    height: 50px;\r\n    width: 120px;\r\n    background: #F5FBF1;\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-left: 30px;\r\n    line-height: 50px;\r\n    color: black;\r\n    font-family: sans-serif;\r\n    text-align: center;\r\n}\r\n.li:before, .li:after {\r\n    content: '';\r\n    left: -15px;\r\n    position: absolute;\r\n    height: 23px;\r\n    width: 132px;\r\n    border-left: 2px solid black;\r\n    border-right: 2px solid black;\r\n}\r\n.li:before {\r\n    border-top: 2px solid black;\r\n    -webkit-transform-origin: 0% 0%;\r\n    -moz-transform-origin: 0% 0%;\r\n    -ms-transform-origin: 0% 0%;\r\n    transform-origin: 0% 0%;\r\n    -webkit-transform: skewX(30deg);\r\n    -moz-transform: skewX(30deg);\r\n    -ms-transform: skewX(30deg);\r\n    transform: skewX(30deg);\r\n    top: 0;\r\n    box-shadow: inset 0 8px 0 8px #F5FBF1, inset -6px 8px 0 8px #F5FBF1;\r\n}\r\n.li:after {\r\n    border-bottom: 2px solid black;\r\n    -webkit-transform-origin: 0% 100%;\r\n    -moz-transform-origin: 0% 100%;\r\n    -ms-transform-origin: 0% 100%;\r\n    transform-origin: 0% 100%;\r\n    -webkit-transform: skewX(-30deg);\r\n    -moz-transform: skewX(-30deg);\r\n    -ms-transform: skewX(-30deg);\r\n    transform: skewX(-30deg);\r\n    bottom: 0;\r\n    box-shadow: inset 0 -8px 0 8px #F5FBF1, inset -6px -8px 0 8px #F5FBF1;\r\n}\r\n.li:hover {\r\n    background: #C0EBA4;\r\n}\r\n.li:hover:before {\r\n    box-shadow: inset 0 8px 0 8px #C0EBA4, inset -6px 8px 0 8px #C0EBA4;\r\n}\r\n.li:hover:after {\r\n    box-shadow: inset 0 -8px 0 8px #C0EBA4, inset -6px -8px 0 8px #C0EBA4;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div class=\"li\"&gt;ONE&lt;/div&gt;\r\n&lt;div class=\"li\"&gt;TWO&lt;/div&gt;\r\n&lt;div class=\"li\"&gt;THREE&lt;/div&gt;\r\n&lt;div class=\"li\"&gt;FOUR&lt;/div&gt;\r\n&lt;div class=\"li\"&gt;FIVE&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p><strong><a href=\"http://jsfiddle.net/byqmzkcq/\" rel=\"nofollow\">FIDDLE</a></strong>\n<hr /></p>\n\n<h2>Final version</h2>\n\n<p>You can hover it seamlessly. It includes flat edges of first and last tabs. </p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.li {\r\n    height: 50px;\r\n    width: 100px;\r\n    padding-left: 20px;\r\n    background: #F5FBF1;\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-left: 20px;\r\n    line-height: 50px;\r\n    font-family: sans-serif;\r\n    font-size: 15px;\r\n}\r\n.li:before, .li:after {\r\n    content: '';\r\n    left: -15px;\r\n    position: absolute;\r\n    height: 23px;\r\n    width: 132px;\r\n    border-left: 2px solid black;\r\n    border-right: 2px solid black;\r\n}\r\n.li:before {\r\n    border-top: 2px solid black;\r\n    -webkit-transform-origin: 0% 0%;\r\n    -moz-transform-origin: 0% 0%;\r\n    -ms-transform-origin: 0% 0%;\r\n    transform-origin: 0% 0%;\r\n    -webkit-transform: skewX(30deg);\r\n    -moz-transform: skewX(30deg);\r\n    -ms-transform: skewX(30deg);\r\n    transform: skewX(30deg);\r\n    top: 0;\r\n    box-shadow: inset 0 8px 0 8px #F5FBF1, inset -6px 8px 0 8px #F5FBF1;\r\n}\r\n.li:after {\r\n    border-bottom: 2px solid black;\r\n    -webkit-transform-origin: 0% 100%;\r\n    -moz-transform-origin: 0% 100%;\r\n    -ms-transform-origin: 0% 100%;\r\n    transform-origin: 0% 100%;\r\n    -webkit-transform: skewX(-30deg);\r\n    -moz-transform: skewX(-30deg);\r\n    -ms-transform: skewX(-30deg);\r\n    transform: skewX(-30deg);\r\n    bottom: 0;\r\n    box-shadow: inset 0 -8px 0 8px #F5FBF1, inset -6px -8px 0 8px #F5FBF1;\r\n}\r\n.li:hover {\r\n    background: #C0EBA4;\r\n}\r\n.li:hover:before { box-shadow: inset 0 8px 0 8px #C0EBA4, inset -6px 8px 0 8px #C0EBA4;}\r\n.li:hover:after { box-shadow: inset 0 -8px 0 8px #C0EBA4, inset -6px -8px 0 8px #C0EBA4;}\r\n\r\n/*First and Last styles*/\r\n.li:first-of-type {\r\n    left: -15px;\r\n    box-shadow: 15px 0 0 0 #F5FBF1;\r\n    border-left: 2px solid black;\r\n}\r\n.li:first-of-type:before, .li:first-of-type:after {\r\n    left: -1px;\r\n    width: 135px;\r\n    border-left: 0;\r\n}\r\n.li:first-of-type:hover {box-shadow: 15px 0 0 0 #C0EBA4;}\r\n.li:last-of-type {\r\n    left: 0px;\r\n    width: 115px;\r\n    box-shadow: inset -2px 0 0 0 black, inset 0 -2px 0 0 black, inset 0 2px 0 0 black;\r\n    border: 0;\r\n}\r\n.li:last-of-type:before, .li:last-of-type:after {\r\n    left: -15px;\r\n    border-right: 0;\r\n}\r\n.li:last-of-type:hover {background: #C0EBA4;}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div class=\"li\"&gt;Tab one&lt;/div&gt;\r\n&lt;div class=\"li\"&gt;Tab two&lt;/div&gt;\r\n&lt;div class=\"li\"&gt;Tab three&lt;/div&gt;\r\n&lt;div class=\"li\"&gt;Tab four&lt;/div&gt;\r\n&lt;div class=\"li\"&gt;Tab five&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p><strong><a href=\"http://jsfiddle.net/byyteadc/\" rel=\"nofollow\">FIDDLE (final)</a></strong></p>\n\n<p><strong>Output:</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/RVLJB.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm building a wizard-like ordering process where I have this menu:\n<img src=\"http://i.stack.imgur.com/z5oaY.png\" alt=\"menu\"></p>\n\n<p>The active page is colored green (in this case, Model).</p>\n\n<p><strong>How does one make this arrow using only CSS?:</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/2Iu6o.png\" alt=\"arrow\"></p>\n\n<p>At the moment i'm achieving my goal by using several divs and images:</p>\n\n<pre><code>&lt;div class=\"menuItem\"&gt;\n    &lt;div&gt;&lt;/div&gt; &lt;!-- The left image --&gt;\n    &lt;div&gt;Varianten&lt;/div&gt;\n    &lt;div&gt;&lt;/div&gt; &lt;!-- The right image --&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>The left image: <img src=\"http://i.stack.imgur.com/cP7fR.png\" alt=\"enter image description here\"></p>\n\n<p>The right image:<img src=\"http://i.stack.imgur.com/6prAp.png\" alt=\"enter image description here\"></p>\n\n<p>I found a SO answer which does part of this:\n<a href=\"http://stackoverflow.com/questions/16180107/arrow-box-with-css\">Arrow Box with CSS</a>, however i'm having trouble with the indent at the left.</p>\n\n<p>If you have a better idea about how to do this, please let me know!</p>\n",
            "last_activity_date": 1425016056,
            "question_id": 27636373,
            "score": 10,
            "tags": [
                "html",
                "css",
                "css3",
                "css-shapes"
            ],
            "title": "How to make this arrow in CSS only?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>According to my comment earlier, this wasn't an issue for me because by default all resources under <code>/images</code>, <code>/css</code> and <code>/js</code> are served as adhoc resources in Grails and I was testing with a <code>.png</code> file from <code>images</code>.</p>\n\n<p>I came across this issue again from my colleague which made me think twice. :) In his case, he was trying to access fonts from <code>/fonts</code> which is provided by a plugin used in the app.</p>\n\n<p>Before trying the below answer, I tried to disable css rewriting by adding the below configuration:</p>\n\n<pre><code>//Not required\n//grails.resources.rewrite.css = false\n</code></pre>\n\n<p>but it made no sense for me as I was dealing with a <code>font</code> resource. </p>\n\n<p>Ultimately, adding this as part of <code>Config.groovy</code> for <code>fonts</code> made the trick. For your case, you would need to do like below:</p>\n\n<pre><code>grails.resources.adhoc.includes = ['/img/**']\n//If resource served from a plugin\n//grails.resources.adhoc.includes = ['/plugins/**', '/img/**']\n</code></pre>\n\n<p>If you already have this configuration, it would look something like:</p>\n\n<pre><code>grails.resources.adhoc.includes = [\n    '/images/**', '/css/**', '/js/**', '/img/**'\n]\n</code></pre>\n\n<p>But as I said you might not need adding adhoc includes for existing resources in a grails app.</p>\n\n<p>Go ahead with  </p>\n\n<ul>\n<li><code>grails clean</code> (to be on the safer side)  </li>\n<li><code>grails run-app</code>.</li>\n<li>Clean browser cache (I would prefer an incognito mode in Chrome, if Chrome used)</li>\n<li>Hit app url</li>\n</ul>\n\n<p>It should not complain about the resource any more.</p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>Recently upgraded a grails project to 2.3.7 and plugins to their newest, which has brought Resources plugin to 1.2.7.  This worked fine with Grails 2.1.2 and resources plugin 1.2RC3, but now it is not:</p>\n\n<p>whenever I have a css file that references something via a URL like this</p>\n\n<pre><code>.checkbox-input-wrap.checked {\n  background-image: url(/img/uniform-assets/checkbox.png);\n}\n</code></pre>\n\n<p>On the webpage it leads to this error (it is leaving 'resource:/' on the front of the URL)</p>\n\n<blockquote>\n  <p>GET resource:/img/uniform-assets/checkbox.png net::ERR_UNKNOWN_URL_SCHEME </p>\n</blockquote>\n",
            "last_activity_date": 1405923523,
            "question_id": 22623584,
            "score": 10,
            "tags": [
                "css",
                "grails",
                "grails-resources-plugin"
            ],
            "title": "URLs within CSS files broken with Grails resources plugin 1.2.7"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I found two ways to solve this problem in IE8.</p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>1)</strong> &nbsp;&nbsp;Adding extra <code>td</code> element of <code>width: 0px</code> to <code>tr</code>'s of thead and tbody.</p>\n\n<p><a href=\"http://jsfiddle.net/venkateshwar/X8FSw/17/show/\">IE8 demo</a></p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>2)</strong>&nbsp;&nbsp; Adding a hidden letter to content of <code>after</code> pseudo selector.</p>\n\n<pre><code>    tr:after{\n        content: \".\";\n        visibility: hidden;\n    }\n</code></pre>\n\n<p>I added the above in conditional css. because the problem was only in IE8. (<em>I haven't tested in IE9+</em>)</p>\n\n<pre><code>    &lt;!--[if IE 8]&gt;\n         &lt;style&gt;\n             /* the above css code here */\n         &lt;/style&gt;\n    &lt;![endif]--&gt; \n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/venkateshwar/X8FSw/18/show/\">IE8 demo</a></p>\n\n<p>I used the latter one because it is simple. </p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>In my project, I am trying to make the <code>tbody</code> scroll in IE8. I know it can be scrolled by just giving <code>overflow: auto</code> to <code>tbody</code>. But this doesn't work in IE8. To make it work in IE8, the <code>tbody</code> must be given <code>position: absolute</code> (or <code>float: left</code> to both <code>thead</code> and <code>tbody</code>). If I make the <code>overflow: auto</code> work then the widths which I assigned to the <code>th</code> and <code>td</code> in percentages is being ignored. which in turn not letting the <code>tr</code> to occupy the full width in <code>thead</code> and <code>tbody</code>. Hence, there is a irritating space between <code>tr</code> and <code>tbody</code>/<code>thead</code>.</p>\n\n<p>Please test this <a href=\"http://jsfiddle.net/venkateshwar/X8FSw/3/embedded/result/\"><strong>demo</strong></a> in IE8. (<em>works fine in firefox and chrome</em>)</p>\n\n<p>and here is the code in <a href=\"http://jsfiddle.net/venkateshwar/X8FSw/3/\"><strong>fiddle</strong></a>.</p>\n\n<p>Here are the strict points which I can't change</p>\n\n<ul>\n<li>Width to <code>td</code> and <code>th</code> must be in percentages.</li>\n<li>I can't change HTML markup</li>\n<li>It must be solved using just CSS. </li>\n</ul>\n\n<p>Actually, I did solve it with a dirty fix which is as follows</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>th:after,td:after{ /* only to the last column, first occurence */\n    content: \"...................................................\";\n    visibility: hidden;\n}\n</code></pre>\n\n<p><em>The above code can also be checked by giving many dots to a specific td/th in developer tools</em></p>\n\n<p>The above code looks ok but I need to give the <code>:after</code> pseudo selector only to the first row last column <code>th</code> and <code>tr</code>. If I give to every <code>th</code> and <code>tr</code> then the layout is messing up. and also the <code>dots</code> must be increased if the empty space between the <code>tr</code> and <code>tbody</code> is more. Then ofcourse this could be achieved only dynamically which I can't do in my current project. </p>\n\n<p>PS: <em>I maybe doing it completely wrong. I am just sharing my efforts where I reached very close to the result</em>.</p>\n",
            "last_activity_date": 1371106164,
            "question_id": 16984323,
            "score": 10,
            "tags": [
                "html",
                "css",
                "internet-explorer-8"
            ],
            "title": "Table tbody scroll in IE8"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>PrimeFaces already ships with jQuery bundled, yet you've downloaded and installed another one which would only conflict with PrimeFaces bundled jQuery. I'm sure that if you have paid a bit more attention and love to the webbrowser's builtin JavaScript console, you would have seen JS errors.</p>\n\n<p>You need to <strong>remove</strong> the following line:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"js/jquery-1.7.1.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>On pages which do not necessarily use PrimeFaces components, jQuery won't be automatically included, you'd then need to explicitly load its bundled jQuery by a proper <code>&lt;h:outputScript&gt;</code>.</p>\n\n<pre><code>&lt;h:outputScript library=\"primefaces\" name=\"jquery/jquery.js\" /&gt;\n</code></pre>\n\n<p>Note that using <code>&lt;h:outputScript&gt;</code> does not end up in a duplicate script include on pages which actually use PrimeFaces components.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p><strong>EDIT 2:</strong> I ran a manual debug and found out that this line was causing the trouble, and after removing it, things got back to normal hopefully.</p>\n\n<pre><code> &lt;script type=\"text/javascript\" src=\"js/main.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>I wasn't actually getting any errors or excretions but some primeface components were acting weird. For example I have a <code>selectOneMenu</code> component defined with a converter. When one item is selected the form gets updated via Ajax. The problem was after selecting an item the menu items got broken (they were representing numbers instead of text) as if somehow the converter wasn't working and the other commands of the page stooped functioning (were not doing anything). \nAnother problem was <code>datatable</code> component where each row has a commandlink which triggers some Ajax behavior. After the links are clicked the pagination of datatable wasn't working.\nFrom these issues I assumed that there is a conflict between juqery and ajax.</p>\n\n<p>Allthough its a very large file, If anyone is interested this is the content of the js file that was causing the troubles</p>\n\n<pre><code> (function($) {\n$(function(){\n    $(document).ready(function(){\n\n    $('ul.accordion li').click(function () {\n        $(this).each(function() {\n            $('ul.accordion li').removeClass('active');\n            });\n        $(this).addClass('active');\n    });\n\n    $('ul.accordion').accordion({\n        active: \".active\",\n        autoHeight: false,\n        header: \".opener\",\n        collapsible: true,\n        event: \"click\"\n    });\n});\n});\n})(jQuery);\n\n// background resize init\nfunction initBackgroundResize() {\nvar holder = document.getElementById('bg');\nif(holder) {\n    var images = holder.getElementsByTagName('img');\n    for(var i = 0; i &lt; images.length; i++) {\n        BackgroundStretcher.stretchImage(images[i]);\n    }\n    BackgroundStretcher.setBgHolder(holder);\n}\n }\n\n if (window.addEventListener) window.addEventListener(\"load\", initBackgroundResize, false);\n else if (window.attachEvent) window.attachEvent(\"onload\", initBackgroundResize);\n\n // image stretch module\n BackgroundStretcher = {\nimages: [],\nholders: [],\nviewWidth: 0,\nviewHeight: 0,\nieFastMode: true,\nstretchBy: 'window', // \"window\", \"page\", \"block-id\", or block\ninit: function(){\n    this.addHandlers();\n    this.resizeAll();\n    return this;\n},\nstretchImage: function(origImg) {\n    // wrap image and apply smoothing\n    var obj = this.prepareImage(origImg);\n\n    // handle onload\n    var img = new Image();\n    img.onload = this.bind(function(){\n        obj.iRatio = img.width / img.height;\n        this.resizeImage(obj);\n    });\n    img.src = origImg.src;\n    this.images.push(obj);\n},\nprepareImage: function(img) {\n    var wrapper = document.createElement('span');\n    img.parentNode.insertBefore(wrapper, img);\n    wrapper.appendChild(img);\n\n    if(/MSIE (6|7|8)/.test(navigator.userAgent) &amp;&amp; img.tagName.toLowerCase()  === 'img') {\n        wrapper.style.position = 'absolute';\n        wrapper.style.display = 'block';\n        wrapper.style.zoom = 1;\n        if(this.ieFastMode) {\n            img.style.display = 'none';\n            wrapper.style.filter =  'progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\"'+img.src+'\",  sizingMethod=\"scale\")'; // enable smoothing in IE6\n            return wrapper;\n        } else {\n            img.style.msInterpolationMode = 'bicubic'; // IE7 smooth  fix\n            return img;\n        }\n    } else {\n        return img;\n    }\n},\nsetBgHolder: function(obj) {\n    this.holders.push(obj);\n    this.resizeAll();\n},\nresizeImage: function(obj) {\n    if(obj.iRatio) {\n        // calculate dimensions\n        var dimensions = this.getProportion({\n            ratio: obj.iRatio,\n            maskWidth: this.viewWidth,\n            maskHeight: this.viewHeight\n        });\n        // apply new styles\n        obj.style.width = dimensions.width + 'px';\n        obj.style.height = dimensions.height + 'px';\n        obj.style.top = dimensions.top + 'px';\n        obj.style.left = dimensions.left +'px';\n    }\n},\nresizeHolder: function(obj) {\n    obj.style.width = this.viewWidth+'px';\n    obj.style.height = this.viewHeight+'px';\n},\ngetProportion: function(data) {\n    // calculate element coords to fit in mask\n    var ratio = data.ratio || (data.elementWidth / data.elementHeight);\n    var slideWidth = data.maskWidth, slideHeight = slideWidth / ratio;\n    if(slideHeight &lt; data.maskHeight) {\n        slideHeight = data.maskHeight;\n        slideWidth = slideHeight * ratio;\n    }\n    return {\n        width: slideWidth,\n        height: slideHeight,\n        top: (data.maskHeight - slideHeight) / 2,\n        left: (data.maskWidth - slideWidth) / 2\n    }\n},\nresizeAll: function() {\n    // crop holder width by window size\n    for(var i = 0; i &lt; this.holders.length; i++) {\n        this.holders[i].style.width = '100%'; \n    }\n\n    // delay required for IE to handle resize\n    clearTimeout(this.resizeTimer);\n    this.resizeTimer = setTimeout(this.bind(function(){\n        // hide background holders\n        for(var i = 0; i &lt; this.holders.length; i++) {\n            this.holders[i].style.display = 'none';\n        }\n\n        // calculate real page dimensions with hidden background blocks\n        if(typeof this.stretchBy === 'string') {\n            // resize by window or page dimensions\n            if(this.stretchBy === 'window' || this.stretchBy === 'page') {\n                this.viewWidth =  this.stretchFunctions[this.stretchBy].width();\n                this.viewHeight = this.stretchFunctions[this.stretchBy].height();\n            }\n            // resize by element dimensions (by id)\n            else {\n                var maskObject = document.getElementById(this.stretchBy);\n                this.viewWidth = maskObject ? maskObject.offsetWidth : 0;\n                this.viewHeight = maskObject ? maskObject.offsetHeight : 0;\n            }\n        } else {\n            this.viewWidth = this.stretchBy.offsetWidth;\n            this.viewHeight = this.stretchBy.offsetHeight;\n        }\n\n        // show and resize all background holders\n        for(i = 0; i &lt; this.holders.length; i++) {\n            this.holders[i].style.display = 'block';\n            this.resizeHolder(this.holders[i]);\n        }\n        for(i = 0; i &lt; this.images.length; i++) {\n            this.resizeImage(this.images[i]);\n        }\n    }),10);\n},\naddHandlers: function() {\n    if (window.addEventListener) {\n        window.addEventListener('resize', this.bind(this.resizeAll), false);\n        window.addEventListener('orientationchange',  this.bind(this.resizeAll), false);\n    } else if (window.attachEvent) {\n        window.attachEvent('onresize', this.bind(this.resizeAll));\n    }\n},\nstretchFunctions: {\n    window: {\n        width: function() {\n            return typeof window.innerWidth === 'number' ?  window.innerWidth : document.documentElement.clientWidth;\n        },\n        height: function() {\n            return typeof window.innerHeight === 'number' ? window.innerHeight : document.documentElement.clientHeight;\n        }\n    },\n    page: {\n        width: function() {\n            return !document.body ? 0 : Math.max(\n                Math.max(document.body.clientWidth,  document.documentElement.clientWidth),\n                Math.max(document.body.offsetWidth, document.body.scrollWidth)\n            );\n        },\n        height: function() {\n            return !document.body ? 0 : Math.max(\n                Math.max(document.body.clientHeight, document.documentElement.clientHeight),\n                Math.max(document.body.offsetHeight,  document.body.scrollHeight)\n            );\n        }\n    }\n},\nbind: function(fn, scope, args) {\n    var newScope = scope || this;\n    return function() {\n        return fn.apply(newScope, args || arguments);\n    }\n}\n}.init();\n// clear inputs on focus\nfunction initInputs() {\n// replace options\nvar opt = {\n    clearInputs: true,\n    clearTextareas: true,\n    clearPasswords: true\n}\n// collect all items\nvar inputs = [].concat(\n    PlaceholderInput.convertToArray(document.getElementsByTagName('input')),\n    PlaceholderInput.convertToArray(document.getElementsByTagName('textarea'))\n);\n// apply placeholder class on inputs\nfor(var i = 0; i &lt; inputs.length; i++) {\n    if(inputs[i].className.indexOf('default') &lt; 0) {\n        var inputType = PlaceholderInput.getInputType(inputs[i]);\n        if((opt.clearInputs &amp;&amp; inputType === 'text') ||\n            (opt.clearTextareas &amp;&amp; inputType === 'textarea') || \n            (opt.clearPasswords &amp;&amp; inputType === 'password')\n        ) {\n            new PlaceholderInput({\n                element:inputs[i],\n                wrapWithElement:false,\n                showUntilTyping:false,\n                getParentByClass:false,\n                placeholderAttr:'value'\n            });\n        }\n    }\n}\n}\n\n// input type placeholder class\n;(function(){\nPlaceholderInput = function() {\n    this.options = {\n        element:null,\n        showUntilTyping:false,\n        wrapWithElement:false,\n        getParentByClass:false,\n        placeholderAttr:'value',\n        inputFocusClass:'focus',\n        inputActiveClass:'text-active',\n        parentFocusClass:'parent-focus',\n        parentActiveClass:'parent-active',\n        labelFocusClass:'label-focus',\n        labelActiveClass:'label-active',\n        fakeElementClass:'input-placeholder-text'\n    }\n    this.init.apply(this,arguments);\n}\nPlaceholderInput.convertToArray = function(collection) {\n    var arr = [];\n    for (var i = 0, ref = arr.length = collection.length; i &lt; ref; i++) {\n     arr[i] = collection[i];\n    }\n    return arr;\n}\nPlaceholderInput.getInputType = function(input) {\n    return (input.type ? input.type : input.tagName).toLowerCase();\n}\nPlaceholderInput.prototype = {\n    init: function(opt) {\n        this.setOptions(opt);\n        if(this.element &amp;&amp; this.element.PlaceholderInst) {\n            this.element.PlaceholderInst.refreshClasses();\n        } else {\n            this.element.PlaceholderInst = this;\n            if(this.elementType == 'text' || this.elementType ==  'password' || this.elementType == 'textarea') {\n                this.initElements();\n                this.attachEvents();\n                this.refreshClasses();\n            }\n        }\n    },\n    setOptions: function(opt) {\n        for(var p in opt) {\n            if(opt.hasOwnProperty(p)) {\n                this.options[p] = opt[p];\n            }\n        }\n        if(this.options.element) {\n            this.element = this.options.element;\n            this.elementType =  PlaceholderInput.getInputType(this.element);\n            this.wrapWithElement = (this.elementType === 'password' || this.options.showUntilTyping ? true : this.options.wrapWithElement);\n            this.setOrigValue( this.options.placeholderAttr == 'value' ? this.element.defaultValue : this.element.getAttribute(this.options.placeholderAttr) );\n        }\n    },\n    setOrigValue: function(value) {\n        this.origValue = value;\n    },\n    initElements: function() {\n        // create fake element if needed\n        if(this.wrapWithElement) {\n            this.element.value = '';\n            this.element.removeAttribute(this.options.placeholderAttr);\n            this.fakeElement = document.createElement('span');\n            this.fakeElement.className = this.options.fakeElementClass;\n            this.fakeElement.innerHTML += this.origValue;\n            this.fakeElement.style.color = getStyle(this.element, 'color');\n            this.fakeElement.style.position = 'absolute';\n            this.element.parentNode.insertBefore(this.fakeElement, this.element);\n        }\n        // get input label\n        if(this.element.id) {\n            this.labels = document.getElementsByTagName('label');\n            for(var i = 0; i &lt; this.labels.length; i++) {\n                if(this.labels[i].htmlFor === this.element.id) {\n                    this.labelFor = this.labels[i];\n                    break;\n                }\n            }\n        }\n        // get parent node (or parentNode by className)\n        this.elementParent = this.element.parentNode;\n        if(typeof this.options.getParentByClass === 'string') {\n            var el = this.element;\n            while(el.parentNode) {\n                if(hasClass(el.parentNode,  this.options.getParentByClass)) {\n                    this.elementParent = el.parentNode;\n                    break;\n                } else {\n                    el = el.parentNode;\n                }\n            }\n        }\n    },\n    attachEvents: function() {\n        this.element.onfocus = bindScope(this.focusHandler, this);\n        this.element.onblur = bindScope(this.blurHandler, this);\n        if(this.options.showUntilTyping) {\n            this.element.onkeydown = bindScope(this.typingHandler, this);\n            this.element.onpaste = bindScope(this.typingHandler, this);\n        }\n        if(this.wrapWithElement) this.fakeElement.onclick = bindScope(this.focusSetter, this);\n    },\n    togglePlaceholderText: function(state) {\n        if(this.wrapWithElement) {\n            this.fakeElement.style.display = state ? '' : 'none';\n        } else {\n            this.element.value = state ? this.origValue : '';\n        }\n    },\n    focusSetter: function() {\n        this.element.focus();\n    },\n    focusHandler: function() {\n        this.focused = true;\n        if(!this.element.value.length || this.element.value === this.origValue) {\n            if(!this.options.showUntilTyping) {\n                this.togglePlaceholderText(false);\n            }\n        }\n        this.refreshClasses();\n    },\n    blurHandler: function() {\n        this.focused = false;\n        if(!this.element.value.length || this.element.value === this.origValue) {\n            this.togglePlaceholderText(true);\n        }\n        this.refreshClasses();\n    },\n    typingHandler: function() {\n        setTimeout(bindScope(function(){\n            if(this.element.value.length) {\n                this.togglePlaceholderText(false);\n                this.refreshClasses();\n            }\n        },this), 10);\n    },\n    refreshClasses: function() {\n        this.textActive = this.focused || (this.element.value.length &amp;&amp; this.element.value !== this.origValue);\n        this.setStateClass(this.element, this.options.inputFocusClass,this.focused);\n        this.setStateClass(this.elementParent, this.options.parentFocusClass,this.focused);\n        this.setStateClass(this.labelFor, this.options.labelFocusClass,this.focused);\n        this.setStateClass(this.element, this.options.inputActiveClass, this.textActive);\n        this.setStateClass(this.elementParent, this.options.parentActiveClass, this.textActive);\n        this.setStateClass(this.labelFor, this.options.labelActiveClass, this.textActive);\n    },\n    setStateClass: function(el,cls,state) {\n        if(!el) return; else if(state) addClass(el,cls); else removeClass(el,cls);\n    }\n}\n\n// utility functions\nfunction hasClass(el,cls) {\n    return el.className ? el.className.match(new  RegExp('(\\\\s|^)'+cls+'(\\\\s|$)')) : false;\n}\nfunction addClass(el,cls) {\n    if (!hasClass(el,cls)) el.className += \" \"+cls;\n}\nfunction removeClass(el,cls) {\n    if (hasClass(el,cls)) {el.className=el.className.replace(new RegExp('(\\\\s|^)'+cls+'(\\\\s|$)'),' ');}\n}\nfunction bindScope(f, scope) {\n    return function() {return f.apply(scope, arguments)}\n}\nfunction getStyle(el, prop) {\n    if (document.defaultView &amp;&amp; document.defaultView.getComputedStyle) {\n        return document.defaultView.getComputedStyle(el, null)[prop];\n    } else if (el.currentStyle) {\n        return el.currentStyle[prop];\n    } else {\n        return el.style[prop];\n    }\n}\n  }());\n\n  if (window.addEventListener) window.addEventListener(\"load\", initInputs, false);\n else if (window.attachEvent) window.attachEvent(\"onload\", initInputs);\n // init rounded corners\n function initRoundedCorners() {\nvar images = document.getElementsByTagName('img');\nfor(var i = 0; i &lt; images.length; i++) {\n    if(images[i].className.indexOf('rounded-corner-') != -1) {\n        var radValue = parseInt(images[i].className.replace(/.*rounded-corner-(\\d+).*/, '$1'),10);\n        if(!isNaN(radValue)) {\n            new ImgCorner({\n                image: images[i],\n                radius: radValue\n            });\n        }\n    }\n}\n }\n\n // DOM ready\n function domReady(handler){\nvar called = false\nfunction ready() {\n    if (called) return;\n    called = true\n    handler()\n}\nif (document.addEventListener) {\n    document.addEventListener( \"DOMContentLoaded\", ready, false )\n} else if (document.attachEvent) {\n    if (document.documentElement.doScroll &amp;&amp; window == window.top) {\n        function tryScroll(){\n            if (called) return\n            if (!document.body) return\n            try {\n                document.documentElement.doScroll(\"left\")\n                ready()\n            } catch(e) {\n                setTimeout(tryScroll, 0)\n            }\n        }\n        tryScroll()\n    }\n    document.attachEvent(\"onreadystatechange\", function(){\n        if ( document.readyState === \"complete\" ) {\n            ready()\n        }\n    })\n}\nif (window.addEventListener) window.addEventListener('load', ready, false)\nelse if (window.attachEvent) window.attachEvent('onload', ready)\n}\n\ndomReady(initRoundedCorners);\n\n\n\n // rounded image module\n ;(function(window){\n// init VML for IE6, IE7, IE8\nvar IE = /(MSIE (6|7|8))/.test(navigator.userAgent);\nif(IE) {\n    var ns = 'rcr';\n    if(document.namespaces &amp;&amp; !document.namespaces[ns]) {\n        // add VML namespace\n        document.namespaces.add(ns,'urn:schemas-microsoft-com:vml','#default#VML'); \n        // create stylesheets\n        var screenStyleSheet, printStyleSheet;\n        screenStyleSheet = document.createElement('style');\n        screenStyleSheet.setAttribute('media', 'screen');\n        document.documentElement.firstChild.insertBefore(screenStyleSheet, document.documentElement.firstChild.firstChild);\n        if (screenStyleSheet.styleSheet) {\n            try {\n                // add screen-media rule\n                screenStyleSheet = screenStyleSheet.styleSheet;\n                screenStyleSheet.addRule(ns + '\\\\:*', '{behavior:url(#default#VML); display:inline-block}');\n                // add a print-media stylesheet\n                printStyleSheet = document.createElement('style');\n                printStyleSheet.setAttribute('media', 'print');\n                document.documentElement.firstChild.insertBefore(printStyleSheet, screenStyleSheet);\n                printStyleSheet = printStyleSheet.styleSheet;\n                printStyleSheet.addRule(ns + '\\\\:*', '{display: none !important;}');\n            } catch(e) {}\n        }\n    }\n}\n\n// browsers techniques support detection\nvar supportCanvas = !!document.createElement('canvas').getContext;\nvar supportBorderRadius = (function(){\n    var cssAttributeNames = ['borderRadius','BorderRadius','MozBorderRadius','WebkitBorderRadius','OBorderRadius','KhtmlBorderRadius']; \n    for (var i = 0; i &lt; cssAttributeNames.length; i++) {\n        var attributeName = cssAttributeNames[i];\n        if (document.documentElement.style[attributeName] !== undefined) {\n            return true;\n            break;\n        }\n    }\n    return false;\n}());\n\n// rounded image class\nImgCorner = function() {\n    this.options = {\n        radius: 0,\n        image: null,\n        roundedClass: 'img-rounded'\n    }\n    this.init.apply(this, arguments);\n}\nImgCorner.prototype = {\n    init: function(options) {\n        for(var p in options) {\n            if(options.hasOwnProperty(p)) {\n                this.options[p] = options[p];\n            }\n        }\n        this.initImage();\n    },\n    initImage: function() {\n        // create image to calculate dimensions\n        if(this.options.image) {\n            // check borders\n            this.realImage = this.options.image;\n            this.borderWidth = parseInt(this.getStyle(this.realImage, 'borderTopWidth')) || 0;\n            this.borderColor = this.getStyle(this.realImage, 'borderTopColor') || '#333';\n\n            this.tmpImage = new Image();\n            this.tmpImage.onload = this.bind(function() {\n                this.realWidth = this.tmpImage.width;\n                this.realHeight = this.tmpImage.height;\n                this.onImageComplete();\n            },this);\n            this.tmpImage.src = this.realImage.src;\n        }\n    },\n    onImageComplete: function() {\n        if(IE) {\n            this.createVMLNode();\n        } else {\n            if(supportBorderRadius) {\n                this.createCSS3Node();\n            } else if(supportCanvas) {\n                this.createCanvasNode();\n            }\n        }\n    },\n    createCanvasNode: function() {\n        var canvas = document.createElement('canvas'), ctx;\n        canvas.width = this.realWidth + this.borderWidth*2;\n        canvas.height = this.realHeight + this.borderWidth*2;\n        if(typeof canvas.getContext === 'function') {\n            // create path function\n            var createPath = function(dc,x,y,w,h,r,bw) {\n                var a = Math.PI/180;\n                r -= bw;\n                dc.beginPath();\n                dc.moveTo(x+r,y);\n                dc.lineTo(x+w-r,y);\n                dc.arc(x+w-r,y+r,r,a*270,a*360,false);\n                dc.lineTo(x+w,y+h-r);\n                dc.arc(x+w-r,y+h-r,r,a*0,a*90,false);\n                dc.lineTo(x+r,y+h);\n                dc.arc(x+r,y+h-r,r,a*90,a*180,false);\n                dc.lineTo(x,y+r);\n                dc.arc(x+r,y+r,r,a*180,a*270,false); \n            }\n\n            // create rounded path\n            ctx = canvas.getContext('2d');\n            ctx.save();\n            createPath(ctx, this.borderWidth,this.borderWidth,this.realWidth,this.realHeight,this.options.radius, this.borderWidth);\n\n            // draw border only if needed\n            if(this.borderWidth) {\n                ctx.strokeStyle = this.borderColor;\n                ctx.lineWidth = this.borderWidth*2;\n                ctx.stroke();\n            }\n            ctx.clip();\n            ctx.drawImage(this.tmpImage,this.borderWidth,this.borderWidth);\n            ctx.restore();\n\n            // append canvas image\n            this.realImage.style.display = 'none';\n            this.realImage.parentNode.insertBefore(canvas, this.realImage);\n        }\n    },\n    createVMLNode: function() {\n        var w = this.realWidth, h = this.realHeight, r = this.options.radius;\n        var vmlBox = document.createElement('corner');\n        var sh = document.createElement(ns + ':shape');\n        var filler = document.createElement(ns + ':fill');\n        vmlBox.style.cssText = 'width:'+this.realWidth+'px;height:'+this.realHeight+'px;margin:0;padding:0;border:0;';\n        sh.appendChild(filler);\n        sh.style.cssText = 'width:'+this.realWidth+'px;height:'+this.realHeight+'px;display:inline-block;';\n        sh.path = 'm '+r+',0 l '+(w-r)+',0 qx '+w+','+r+' l '+w+','+(h-r)+' qy '+(w-r)+','+h+' l '+r+','+h+' qx 0,'+(h-r)+' l 0,'+r+' qy '+r+',0 e';\n        sh.coordorigin = \"-1 -1\";\n        sh.coordsize = w+' '+h;\n\n        // draw border if needed\n        if(this.borderWidth) {\n            sh.strokecolor = this.borderColor;\n            sh.strokeweight = this.borderWidth/2;\n            sh.stroked = true;\n        } else {\n            sh.stroked = false;\n        }\n\n        filler.style.display = 'inline-block';\n        filler.setAttribute('type', 'frame');\n        filler.setAttribute('src', this.realImage.src);\n        vmlBox.appendChild(sh);\n        vmlBox.innerHTML = vmlBox.innerHTML;\n        this.realImage.style.display = 'none';\n        this.realImage.parentNode.insertBefore(vmlBox, this.realImage);\n    },\n    createCSS3Node: function() {\n        var borderAttr = ['borderRadius', 'MozBorderRadius', 'WebkitBorderRadius', 'OBorderRadius']; \n        var span = document.createElement('span');\n        span.style.width = this.realWidth+'px';\n        span.style.height = this.realHeight+'px';\n        span.style.display = 'inline-block';\n        span.style.background = 'url('+this.realImage.src+')';\n        span.style.overflow = 'hiddden';\n\n        for(var i = 0; i &lt; borderAttr.length; i++) {\n            span.style[borderAttr[i]] = this.options.radius + 'px';\n        }\n\n        // draw border if needed\n        if(this.borderWidth) {\n            span.style.border = this.borderWidth+'px solid  '+this.borderColor;\n        }\n\n        this.realImage.style.border = '0';\n        this.realImage.style.display = 'none';\n        this.realImage.parentNode.insertBefore(span, this.realImage);\n        span.appendChild(this.realImage);\n        return span;\n    },\n    getStyle: function(el, prop) {\n        if (document.defaultView &amp;&amp; document.defaultView.getComputedStyle) {\n            return document.defaultView.getComputedStyle(el, null)[prop];\n        } else if (el.currentStyle) {\n            return el.currentStyle[prop];\n        } else {\n            return el.style[prop];\n        }\n    },\n    bind: function(fn, scope, args) {\n        return function() {\n            return fn.apply(scope, args || arguments);\n        }\n    } \n}\n  })(this);\n /*! HTML5 Shiv pre3.5 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n  Uncompressed source: https://github.com/aFarkas/html5shiv  */\n ;(function(){\n  /*@cc_on(function(a,b){function h(a,b){var c=a.createElement(\"p\"),d=a.getElementsByTagName(\"head\")[0]||a.documentElement;return c.innerHTML=\"x&lt;style&gt;\"+b+\"&lt;/style&gt;\",d.insertBefore(c.lastChild,d.firstChild)}function i(){var a=l.elements;return typeof a==\"string\"?a.split(\" \"):a}function j(a){var b={},c=a.createElement,f=a.createDocumentFragment,g=f();a.createElement=function(a){l.shivMethods||c(a);var f;return b[a]?f=b[a].cloneNode():e.test(a)?f=(b[a]=c(a)).cloneNode():f=c(a),f.canHaveChildren&amp;&amp;!d.test(a)?g.appendChild(f):f},a.createDocumentFragment=Function(\"h,f\",\"return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&amp;&amp;(\"+i().join().replace(/\\w+/g,function(a){return b[a]=c(a),g.createElement(a),'c(\"'+a+'\")'})+\");return n}\")(l,g)}function k(a){var b;return a.documentShived?a:(l.shivCSS&amp;&amp;!f&amp;&amp;(b=!!h(a,\"article,aside,details,figcaption,figure,footer,header,hgroup,nav,section{display:block}audio{display:none}canvas,video{display:inline-block;*display:inline;*zoom:1}[hidden]{display:none}audio[controls]{display:inline-block;*display:inline;*zoom:1}mark{background:#FF0;color:#000}\")),g||(b=!j(a)),b&amp;&amp;(a.documentShived=b),a)}function p(a){var b,c=a.getElementsByTagName(\"*\"),d=c.length,e=RegExp(\"^(?:\"+i().join(\"|\")+\")$\",\"i\"),f=[];while(d--)b=c[d],e.test(b.nodeName)&amp;&amp;f.push(b.applyElement(q(b)));return f}function q(a){var b,c=a.attributes,d=c.length,e=a.ownerDocument.createElement(n+\":\"+a.nodeName);while(d--)b=c[d],b.specified&amp;&amp;e.setAttribute(b.nodeName,b.nodeValue);return e.style.cssText=a.style.cssText,e}function r(a){var b,c=a.split(\"{\"),d=c.length,e=RegExp(\"(^|[\\\\s,&gt;+~])(\"+i().join(\"|\")+\")(?=[[\\\\s,&gt;+~#.:]|$)\",\"gi\"),f=\"$1\"+n+\"\\\\:$2\";while(d--)b=c[d]=c[d].split(\"}\"),b[b.length-1]=b[b.length-1].replace(e,f),c[d]=b.join(\"}\");return c.join(\"{\")}function s(a){var b=a.length;while(b--)a[b].removeNode()}function t(a){var b,c,d=a.namespaces,e=a.parentWindow;return!o||a.printShived?a:(typeof d[n]==\"undefined\"&amp;&amp;d.add(n),e.attachEvent(\"onbeforeprint\",function(){var d,e,f,g=a.styleSheets,i=[],j=g.length,k=Array(j);while(j--)k[j]=g[j];while(f=k.pop())if(!f.disabled&amp;&amp;m.test(f.media)){for(d=f.imports,j=0,e=d.length;j&lt;e;j++)k.push(d[j]);try{i.push(f.cssText)}catch(l){}}i=r(i.reverse().join(\"\")),c=p(a),b=h(a,i)}),e.attachEvent(\"onafterprint\",function(){s(c),b.removeNode(!0)}),a.printShived=!0,a)}var c=a.html5||{},d=/^&lt;|^(?:button|form|map|select|textarea|object|iframe)$/i,e=/^&lt;|^(?:a|b|button|code|div|fieldset|form|h1|h2|h3|h4|h5|h6|i|iframe|img|input|label|li|link|ol|option|p|param|q|script|select|span|strong|style|table|tbody|td|textarea|tfoot|th|thead|tr|ul)$/i,f,g;(function(){var c=b.createElement(\"a\");c.innerHTML=\"&lt;xyz&gt;&lt;/xyz&gt;\",f=\"hidden\"in c,f&amp;&amp;typeof injectElementWithStyles==\"function\"&amp;&amp;injectElementWithStyles(\"#modernizr{}\",function(b){b.hidden=!0,f=(a.getComputedStyle?getComputedStyle(b,null):b.currentStyle).display==\"none\"}),g=c.childNodes.length==1||function(){try{b.createElement(\"a\")}catch(a){return!0}var c=b.createDocumentFragment();return typeof c.cloneNode==\"undefined\"||typeof c.createDocumentFragment==\"undefined\"||typeof c.createElement==\"undefined\"}()})();var l={elements:c.elements||\"abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video\",shivCSS:c.shivCSS!==!1,shivMethods:c.shivMethods!==!1,type:\"default\",shivDocument:k};a.html5=l,k(b);var m=/^$|\\b(?:all|print)\\b/,n=\"html5shiv\",o=!g&amp;&amp;function(){var c=b.documentElement;return typeof b.namespaces!=\"undefined\"&amp;&amp;typeof b.parentWindow!=\"undefined\"&amp;&amp;typeof c.applyElement!=\"undefined\"&amp;&amp;typeof c.removeNode!=\"undefined\"&amp;&amp;typeof a.attachEvent!=\"undefined\"}();l.type+=\" print\",l.shivPrint=t,t(b)})(this,document);@*/\n}());\n</code></pre>\n\n<p>Regards</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I developed a web application using primefaces. I have no skills in designing so I decided to use a template, which has some css and jqueries. When I use them, primeface's components loose their functionality and some of their styles; for example primeface dialogs dont show up, accordions dont slide, panel grids loose their cellspacing etc.\nHere are the css and jqueries that Im using</p>\n\n<pre><code>&lt;h:head&gt;\n\n    &lt;link media=\"all\" rel=\"stylesheet\" type=\"text/css\" href=\"css/green-style.css\"/&gt;\n    &lt;link href='http://fonts.googleapis.com/css?family=Merriweather' rel='stylesheet' type='text/css'/&gt;\n    &lt;link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'/&gt;\n    &lt;link href='http://fonts.googleapis.com/css?family=Open+Sans:600' rel='stylesheet' type='text/css'/&gt;\n    &lt;link href='http://fonts.googleapis.com/css?family=Merriweather:300' rel='stylesheet' type='text/css'/&gt;\n    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/carousel.css\"/&gt;\n\n    &lt;script src=\"js/onebyone/jquery.onebyone.js\"&gt;&lt;/script&gt;              \n    &lt;script src=\"js/onebyone/jquery.touchwipe.min.js\"&gt;&lt;/script&gt; \n    &lt;script type=\"text/javascript\"&gt; \n        $(document).ready(function() {      \n            $('#banner').oneByOne({\n                className: 'oneByOne1', // the wrapper's name\n                easeType: 'random', //'fadeInLeft',  // the ease animation style\n                width: 990,  // width of the slider\n                height: 397, // height of the slider\n                delay: 300,  // the delay of the touch/drag tween\n                tolerance: 0.25, // the tolerance of the touch/drag  \n                enableDrag: true,  // enable or disable the drag function by mouse\n                showArrow: false,  // display the previous/next arrow or not\n                showButton: true,  // display the circle buttons or not\n                slideShow: true,  // auto play the slider or not\n                slideShowDelay: 3000 // the delay millisecond of the slidershow\n            });\n        });\n    &lt;/script&gt; \n    &lt;link href=\"js/onebyone/css/jquery.onebyone.css\" rel=\"stylesheet\" type=\"text/css\"/&gt;\n    &lt;link href=\"js/onebyone/css/default.css\" rel=\"stylesheet\" type=\"text/css\"/&gt;\n    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"js/onebyone/css/animate.css\"/&gt; \n\n    &lt;script type=\"text/javascript\" src=\"js/jquery.carouFredSel-5.5.0.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        $(function() {\n            //  Scrolled by user interaction\n            $('#portfolio_carousel').carouFredSel({\n                pagination: \"#carousel_pager\",\n                auto: false\n            });\n\n        });\n    &lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/main.js\"&gt;&lt;/script&gt;\n\n&lt;/h:head&gt;\n</code></pre>\n\n<p><strong>EDIT:</strong> Removed the line as suggested by BalusC.\nHowever after testing the application for a little longer I found out that there are still issues or conflicts between jquery and ajax of primefaces</p>\n\n<p>Any help will be appreciated.</p>\n\n<p>EDIT 2: Don't have enough space so I'm continuing in following post (Scroll down)</p>\n",
            "last_activity_date": 1340217839,
            "question_id": 11112058,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "jsf",
                "primefaces"
            ],
            "title": "how to use jquery with primefaces"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>A checkbox does not have background color,\nwhat you might want to do is wrap each checkbox with a div that has the color.\nyour output should be something like this:</p>\n\n<pre><code>&lt;div class=\"evenRow\"&gt;\n&lt;input type=\"checkbox\"  /&gt;\n    &lt;/div&gt;\n\n&lt;div class=\"oddRow\"&gt;\n&lt;input type=\"checkbox\"  /&gt;\n   &lt;/div&gt;\n&lt;div class=\"evenRow\"&gt;\n&lt;input type=\"checkbox\"  /&gt;\n   &lt;/div&gt;\n&lt;div class=\"oddRow\"&gt;\n&lt;input type=\"checkbox\"  /&gt;\n   &lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>In addition to the currently accepted answer: You can set border and background of a checkbox/radiobutton, but how it is rendered in the end depends on the browser. For example, if you set a red background on a checkbox</p>\n\n<ul>\n<li>IE will show a red border instead</li>\n<li>Opera will show a red background as intended</li>\n<li>Firefox, Safari and Chrome will do nothing</li>\n</ul>\n\n<p><a href=\"http://www.css4you.de/wsradio/\" rel=\"nofollow\">This article</a> compares a few browsers and explains at least the IE behavior. It maybe bit older (still including Netscape), but when you test around you'll notice that not much has changed. Another comparison can be found <a href=\"http://www.456bereastreet.com/lab/form_controls/checkboxes/\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I tried this using <code>div</code> tag not using <code>input</code> tag. Here is the link <a href=\"http://jsfiddle.net/sXZuW/\" rel=\"nofollow\">Checkbox with background color red</a></p>\n\n<pre><code>.chkd{\n    background-color:Red\n}\n.unchkd{\n    background-color:white;\n    border: 1px solid black\n}\n\n&lt;div style=\"width:10px;height:10px;\" class=\"unchkd\"&gt;&lt;/div&gt;Checkbox\n\n$('div').on('click',function(){\n    if ($(this).hasClass('unchkd')){\n        $(this).removeClass('unchkd').addClass('chkd');\n    }\n    else {\n        $(this).removeClass('chkd').addClass('unchkd');\n    }\n});\n</code></pre>\n\n<p>If you need to set id or any other attributes use</p>\n\n<pre><code>$(divid).data({'id':chkbx1,'value':100})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use peseudo elements like this:</p>\n\n<pre><code>&lt;label &gt;Checkbox label\n  &lt;input type=\"checkbox\"&gt;\n&lt;/label&gt;\n\n\ninput[type=checkbox] {\n  width: 30px\n  height: 30px;\n  margin-right: 8px;\n  cursor: pointer;\n  font-size: 27px;\n}\n\n\ninput[type=checkbox]:after {\n    content: \" \";\n    background-color: #9FFF9D;\n    display: inline-block;\n    visibility: visible;\n}\n\ninput[type=checkbox]:checked:after {\n    content: \"\\2714\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>The heading pretty much explains it. I have a couple of checkboxes inside a scrollable div. But for some reasons the 'background-color' attribute doesn't work. Although the 'margin-top' does seem to work...</p>\n\n<p>Just puzzling me how one attribute can work and another not. It's also not like the div has it's own set of background color attributes that could potentially over ride the checkboxes attributes.</p>\n\n<p>Anyways, below is my HTML (which is generated by JSP):</p>\n\n<pre><code>&lt;div class=\"listContainer\"&gt;\n    &lt;input type=\"checkbox\" class=\"oddRow\"&gt;item1&lt;br/&gt;\n    &lt;input type=\"checkbox\" class=\"evenRow\"&gt;item2&lt;br/&gt;\n    &lt;input type=\"checkbox\" class=\"oddRow\"&gt;item3&lt;br/&gt;\n    &lt;input type=\"checkbox\" class=\"evenRow\"&gt;item4&lt;br/&gt;\n    ...\n&lt;/div&gt;\n</code></pre>\n\n<p>And here is my CSS:</p>\n\n<pre><code>.listContainer {\n            border:2px solid #ccc;\n            width:340px;\n            height: 225px;\n            overflow-y: scroll;\n            margin-top: 20px;\n            padding-left: 10px;\n        }\n\n.oddRow {\n            margin-top: 5px;\n            background-color: #ffffff;\n        }\n\n.evenRow{\n            margin-top: 5px;\n            background-color: #9FFF9D;\n        }\n</code></pre>\n\n<p>Thanks in advance for anyone that can point me in the right direction!</p>\n",
            "last_activity_date": 1423755910,
            "question_id": 7398462,
            "score": 10,
            "tags": [
                "html",
                "css",
                "checkbox",
                "background-color"
            ],
            "title": "CSS &#39;&#39;background-color&quot; attribute not working on checkbox inside &lt;div&gt;"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I think it is only the differences between the two browser's default CSS. Try this:</p>\n\n<pre><code>&lt;style&gt;\n    div {min-height: inherit;}\n    #div1 {height:50%; min-height:200px;background-color:red;}\n    #div2 {height:100%; background-color:black;}\n&lt;/style&gt;\n</code></pre>\n\n<p>It works for me.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Yes, this is a WebKit bug, <a href=\"https://bugs.webkit.org/show_bug.cgi?id=26559\">bug 26559</a>.</p>\n\n<p><code>height</code> in <code>%</code> on static-or-relative-positioned elements is calculated relative to the containing block's stated <code>height</code> property, instead of the calculated height taking <code>min-height</code> and <code>max-height</code> into account. The same does not occur for width.</p>\n\n<p>You can sort of see where this comes from in <a href=\"http://www.w3.org/TR/CSS21/visudet.html#the-height-property\">CSS 2.1</a> which states that the height of a containing block must be explicitly set in order for <code>%</code> to work. But it's not explicitly stated what \u2018explicitly\u2019 means! Browsers have taken this to mean that the <code>height</code> property must be set to a non-auto value, which is fair enough except that <code>height</code> isn't all there is to height now. Other browsers allow <code>min-height</code>/<code>max-height</code> to affect the height to be used, but don't allow it to mean \u2018explicit\u2019.  WebKit goes farther (and this definitely isn't mandated by spec) by using <em>only</em> <code>height</code> in the calcation and not min/max.</p>\n\n<p>As a workaround, you could try absolute positioning, which isn't affected. Relative-position the outer div, absolute-position the inner at <code>left: 0; top: 0; width: 100%; height: 100%</code>.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>I had an issue with min-height on an empty div in Chrome (OSX 10.6).\nI don't know if it's the same bug behavior but I <strong>found my solution with changing the box-sizing attribute</strong>.</p>\n\n<p><strong>Not working in Chrome Mac:</strong></p>\n\n<pre><code>box-sizing:border-box;\nmin-height:10px;\npadding-bottom:15px;\npadding-top:30px;\n</code></pre>\n\n<p><strong>Working in Chrome Mac:</strong></p>\n\n<pre><code>box-sizing:content-box;\nmin-height:10px;\npadding-bottom:15px;\npadding-top:30px;\n</code></pre>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would like to post my solution as it took me a while to make my code work and perhaps somebody will find this useful despite the fact that this is an old topic...</p>\n\n<p>I had a simillar problem. An image was overflowing from a parent flex-child block. This happened only in Chrome and Opera (webkit browsers), trident and gecko were smart enough to deal with the situation. I tried a few solutions here on stack overflow but none provided a direct solution so I have cross-invented a workaround by adding another container layer in between aforementioned image and parent. In the situation presented at the opening post it would look like:</p>\n\n<pre><code>&lt;style&gt;\n    html, body { height: 100%; width: 100%;}\n    #div1 {height:50%; min-height:200px;background-color:red; position: relative;}\n    #div_fix {position: absolute; height: 100%; width: 100%;}\n    #div2 {height:100%; background-color:black;}\n&lt;/style&gt;\n&lt;body&gt;\n&lt;div id=\"div1\"&gt;&lt;div id=\"div_fix\"&gt;&lt;div id=\"div2\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>What this does is create a container (#div_fix) that receives static height and width that then can be properly used in webkit to calculate correct height in #div2.\nPlease note that position:relative and position:absolute properties are mandatory for it to work.</p>\n\n<p>And yes, it looks bad, but gets the job done :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm sorry if this is an old issue or a known problem, but I haven't been able to find an answer online. If I have the code</p>\n\n<pre><code>&lt;style&gt;\n    html, body { height: 100%; width: 100%;}\n    #div1 {height:50%; min-height:200px;background-color:red;}\n    #div2 {height:100%; background-color:black;}\n&lt;/style&gt;\n&lt;body&gt;\n&lt;div id=\"div1\"&gt;&lt;div id=\"div2\"&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>Then in firefox the black inner div shrinks as the screen shrinks and stops at 200px height. However in a webkit browser the red outer div stops but the inner div continue to shrink as if it was in a parent div without the min-height attribute.</p>\n\n<p>Is there an easy fix to bring the webkit version into line with the firefox rendering? A <code>min-height:inherit</code> works if placed on the inner div, but in the case of many divs within one this would require <code>min-height:inherit</code> on each child div. Are there any more elegant solutions? </p>\n",
            "last_activity_date": 1418316209,
            "question_id": 3808512,
            "score": 10,
            "tags": [
                "cross-browser",
                "css"
            ],
            "title": "The inherited height of a child div from a parent with a min-height attribute"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The <a href=\"http://download.oracle.com/docs/cd/E17802_01/j2ee/javaee/javaserverfaces/1.2_MR1/docs/tlddocs/h/panelGrid.html\"><code>&lt;h:panelGrid&gt;</code></a> renders a HTML table. You basically want to apply <code>text-align: right;</code> on every <code>&lt;td&gt;</code> element it renders. With the current code, easiest would be to apply the following:</p>\n\n<pre><code>#authenticate table td {\n    text-align: right;\n}\n</code></pre>\n\n<hr>\n\n<p>You can of course also be more specific, e.g. giving the <code>&lt;h:panelGrid&gt;</code> its own <code>styleClass</code> and defining a rule in CSS (which would be applied directly on the rendered HTML <code>&lt;table&gt;</code> element).</p>\n\n<pre><code>&lt;h:panelGrid styleClass=\"className\"&gt;\n</code></pre>\n\n<p>with</p>\n\n<pre><code>.className td {\n    text-align: right;\n}\n</code></pre>\n\n<hr>\n\n<p>You can also give each <code>&lt;td&gt;</code> element its own class by <code>columnClasses</code> attribute which accepts a commaseparated string of CSS classnames which are to be applied repeatedly on the <code>&lt;td&gt;</code> elements. If you want to apply the same class on every <code>&lt;td&gt;</code> element, just specify it once:</p>\n\n<pre><code>&lt;h:panelGrid columnClasses=\"className\"&gt;\n</code></pre>\n\n<p>with</p>\n\n<pre><code>.className {\n    text-align: right;\n}\n</code></pre>\n\n<hr>\n\n<p>As an extra hint: rightclick the webpage in webbrowser and choose <em>View Source</em>, then you'll understand better what JSF is all exactly generating.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>actually in same form i used <code>&lt;p:panel&gt;</code> and got good result. looks like ;</p>\n\n<pre><code>&lt;p:panel  styleClass=\"ui-panel-titlebar ui-widget-header ui-helper-clearfix ui-corner-all\"&gt;\n    &lt;p:commandButton value=\"Add New Tab\"\n            actionListener=\"#{xxx.createNewTab}\" process=\"@this\"\n            update=\"tabView\" style=\"float:right !important;margin:0px 0px 3px 0px;\" /&gt;\n            &lt;/p:panel&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>A little late, but might help someone, as it was what I needed...</p>\n\n<p>If the alignment is not limited to this specific table, but rather the default format for all table cells, then just add this to your CSS file:</p>\n\n<pre><code>td {\n    text-align: right;\n}\n</code></pre>\n\n<p>Then, all <code>&lt;td&gt;</code> elements, including those generated by JSF, will be formatted that way.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How would I align everything in my  below to the far right?</p>\n\n<pre><code>&lt;div id=\"container\"&gt;    \n     &lt;h:form id=\"authenticate\"&gt;\n        &lt;h:panelGrid columns=\"5\" cellpadding=\"6\"&gt;\n             &lt;h:inputText id=\"email\" value=\"\" /&gt;\n             &lt;p:watermark for=\"email\" value=\"Email\"/&gt;\n             &lt;h:inputSecret id=\"password\" value=\"\" /&gt;\n             &lt;p:watermark for=\"password\" value=\"Password\"/&gt;\n             &lt;p:commandButton id=\"login\" value=\"Login\" align=\"right\"/&gt;\n        &lt;/h:panelGrid&gt;\n     &lt;/h:form&gt;\n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1374840359,
            "question_id": 3714143,
            "score": 10,
            "tags": [
                "css",
                "jsf"
            ],
            "title": "How to align items in a &lt;h:panelGrid&gt; to the right"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Well display: inline-block can be a bit tricky to get cross-browser. It will require at minimum, a few hacks and, for Firefox 2, potentially an extra element.</p>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>.inlineBlock { display: -moz-inline-stack; display: inline-block; zoom: 1; *display: inline; }\n</code></pre>\n\n<p><em>display: -moz-inline-stack</em> is for Firefox 2. All the immediate children will need to have <em>display: block</em> or otherwise be block level elements. Note if you need your inline-block element to shrink wrap I think you can use <em>display: -moz-inline-box</em> instead.</p>\n\n<p><em>zoom: 1</em> gives hasLayout to the element (for IE 7 and below). Part 1 of the hack needed for IE7 and below compatibilty.</p>\n\n<p>*<em>display: inline</em> is a hack second part of the hack needed for IE7 and below compatibility.</p>\n\n<p>I occasionally need to add overflow: hidden for IE compatibility as well.</p>\n\n<p>For your specific situation i think what you need is:</p>\n\n<pre><code>&lt;html&gt;&lt;head&gt;&lt;style type=\"text/css\"&gt;\n#left {\n  display: inline-block;\n  background: red;\n  width: 20%;\n  height: 100%;\n  vertical-align: top;\n}\n#right {\n  display: inline-block;\n  background: green;\n  width: 80%;\n  height: 100%;\n  vertical-align: top;\n}\n&lt;/style&gt;&lt;/head&gt;&lt;body&gt;\n  &lt;div id=\"left\"&gt;Left&lt;/div&gt;&lt;div id=\"right\"&gt;&lt;p&gt;Right&lt;/p&gt;&lt;p&gt;Right 2&lt;/p&gt;&lt;/div&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<blockquote>\n  <p>I get the bad formatting.</p>\n</blockquote>\n\n<p>You are being bitten by <a href=\"http://www.w3.org/TR/CSS21/box.html#collapsing-margins\" rel=\"nofollow\">margin collapsing</a>, a CSS \u2018cleverness\u2019 which is a pain as often as it is a boon. The margin of the &lt;p> collapses outwards to become a top margin on the inline-block; this then behaves as a margin would on an \u2018inline\u2019 element would, pushing the vertical-alignment of the text line out.</p>\n\n<p>You can stop it happening by removing the margins from \u2018p\u2019 elements and using padding instead. Alternatively place a non-empty element with no top margin at the top of the block and one with no bottom margin at the bottom.</p>\n\n<blockquote>\n  <p>Is this a Firefox bug</p>\n</blockquote>\n\n<p>I think possibly yes, according to the spec's:</p>\n\n<blockquote>\n  <p>Margins of inline-block elements do not collapse (not even with their in-flow children). </p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>inline-block\n    This value causes an element to generate an inline-level block container. The inside of an inline-block is formatted as a block box, and the element itself is formatted as an atomic inline-level box. \n<a href=\"http://www.w3.org/TR/CSS2/visuren.html\" rel=\"nofollow\">visual rendering model</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to put some (vertically-stacked) display:block elements within a display:inline-block element. According to the CSS specification, the inline-block element should be a containing block, so it can have display:block elements within it and those should not affect the rest of the layout.</p>\n\n<p>However, the display:block elements inside the display:inline-block elements disrupt the rest of the page; so does having nothing at all within the inline-block, or even a basic element like a paragraph; only simple text avoids disruption of the rest of the page (by disruption I mean shifting other divs down, e.g. in this case the left red block moves down a line and has a blank white space above it). I'm using Firefox 3.0.6.</p>\n\n<pre><code>&lt;html&gt;&lt;head&gt;&lt;style type=\"text/css\"&gt;\n#left {\n  display: inline-block;\n  background: red;\n  width: 20%;\n  height: 100%;\n}\n#right {\n  display: inline-block;\n  background: green;\n  width: 80%;\n  height: 100%;\n}\n&lt;/style&gt;&lt;/head&gt;&lt;body&gt;\n  &lt;div id=\"left\"&gt;Left&lt;/div&gt;&lt;div id=\"right\"&gt;Right&lt;/div&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>The above shows as two panes, left red, right green, as expected. If I change \"Right\" to </p>\n\n<pre><code>&lt;p&gt;Right&lt;/p&gt;\n</code></pre>\n\n<p>or remove it entirely, or (as I want to do) replace it with a couple of divs, I get the bad formatting.</p>\n\n<p>Is this a Firefox bug, or am I doing something wrong, or are my expectations incorrect? (FWIW, IE 7 mangles them all equally, as if it doesn't understand inline-block; doesn't matter, this is an internal app. and I'm only using Firefox). I may be able to get the layout I want using float/margin, but I'd prefer not to have to do that.</p>\n",
            "last_activity_date": 1417834931,
            "question_id": 608172,
            "score": 10,
            "tags": [
                "html",
                "css",
                "cross-browser"
            ],
            "title": "Block-level elements within display: inline-block"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can have to add an extra line in your manifest file:</p>\n\n<pre><code>\"content_scripts\": [\n    {\n      \"matches\": [\"http://test-website.com/*\"], \n      \"js\": [\"js/content-script.js\"],\n      \"css\" : [\"yourcss.css\"]\n    }\n],\n</code></pre>\n\n<p>The CSS file as defined in <code>\"css\": [\"...\"]</code>will be added to every page which matches the location as mentioned in <code>matches</code>.</p>\n\n<p>If you're developing a Chrome extension, make sure that you have a look at these pages:</p>\n\n<ol>\n<li><strong><a href=\"https://developer.chrome.com/extensions/devguide\" rel=\"nofollow\">Developer's guide</a></strong>\n<ul>\n<li><a href=\"https://developer.chrome.com/extensions/manifest\" rel=\"nofollow\">Manifest files</a></li>\n<li><a href=\"https://developer.chrome.com/extensions/content_scripts\" rel=\"nofollow\">Content scripts</a></li>\n<li><a href=\"https://developer.chrome.com/extensions/background_pages\" rel=\"nofollow\">Background pages</a></li>\n</ul></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>You can also inject a css file into one or more tab's content by using the following syntax as detailed on the <a href=\"http://code.google.com/chrome/extensions/tabs.html\" rel=\"nofollow\">Chrome Tabs API webpage</a>:</p>\n\n<pre><code>chrome.tabs.insertCSS(integer tabId, object details, function callback);\n</code></pre>\n\n<p>You will first need the ID of your target tab, of course.</p>\n\n<p>The Chrome Extension documentation doesn't discuss <em>how</em> the injected CSS is interpreted, but the fact is that CSS files that are injected into a webpage, by this method or by including them in the manifest, are interpreted as user stylesheets.</p>\n\n<p>In this respect, it is important to note that if you <em>do</em> inject stylesheets by using these methods, they will be limited in one crucial way ( at least, as of Chrome v.19 ): Chrome ignores \"!important\" directives in user stylesheets.  Your injected style rules will be trumped by anything included in the page as it was authored.</p>\n\n<p>One work-around, if you want to avoid injecting inline style rules, is the following (I'm using jQuery for the actual insertion, but it could be done with straight Javascript):</p>\n\n<pre><code>$(document).ready(function() {\nvar path = chrome.extension.getURL('styles/myExtensionRulz.css');\n$('head').append($('&lt;link&gt;')\n    .attr(\"rel\",\"stylesheet\")\n    .attr(\"type\",\"text/css\")\n    .attr(\"href\", path));\n});\n</code></pre>\n\n<p>You can then put the stylesheet in your extension's styles folder, but you won't need to list it anywhere on the manifest.  The relevant part above is that you will use the chrome API to get your stylesheet's URL, then plug that in as the link's href value.  Now, your stylesheet will be given a higher precedence, and you can use the \"!important\" directive where needed.  </p>\n\n<p>This is the only solution that works for me in the latest version of Chrome. </p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I do not know how to inject CSS into a webpage through a Chrome extension. I am trying to inject this into a web page:</p>\n\n<pre><code>body {\n   background: #000 !important;\n}\n\na {\n   color: #777 !important;\n}\n</code></pre>\n\n<p>Here is my manifest.json:</p>\n\n<pre><code>{\n\"update_url\":\"http://clients2.google.com/service/update2/crx\",\n  \"name\": \"Test Extension\",\n  \"version\": \"1.0\",\n  \"description\": \"This is a test extension for Google Chrome.\",\n  \"icons\": { \"16\": \"icon16.png\",\n           \"48\": \"icon48.png\",\n          \"128\": \"icon128.png\" },\n  \"background_page\": \"background.html\",\n  \"browser_action\": {\n    \"default_icon\": \"icon19.png\"\n  },\n  \"content_scripts\": [\n    {\n      \"matches\": [\"http://test-website.com/*\"], \n      \"js\": [\"js/content-script.js\"]\n    }\n  ],\n\n    \"permissions\": [ \"tabs\", \"http://test-website.com/*\" ]\n\n}\n</code></pre>\n",
            "last_activity_date": 1399266506,
            "question_id": 7619095,
            "score": 9,
            "tags": [
                "javascript",
                "css",
                "google-chrome",
                "google-chrome-extension"
            ],
            "title": "How to inject CSS into webpage through Chrome extension?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>No. Replacing with images is the fastest and the safest way. (Unless you are willing to switch to Flash/Java Applet/etc.)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't think there's a way to disable the feature altogether and there <strong>should</strong> not be a way to disable it.</p>\n\n<p><em>However</em> you can ensure that some text will not be found by <kbd>Ctrl</kbd>+<kbd>F</kbd> by writing it in away that the browser doesn't consider continous text.</p>\n\n<p>Using images is one approach that's relatively simply.</p>\n\n<p>Alternatively you can randomize the letters and re-arrange them with some CSS magic (my CSS-fu is too weak to give an example, unfortunately). For example if you want to \"hide\" the word \"hello\", then write out \"lehol\" with each letter in a separate <code>&lt;div&gt;</code> and apply some CSS styles so that visually the letters will be in the correct order.</p>\n\n<p>Note that this (and probably all other working solutions as well) will <em>also</em> break copy-and-paste of the text.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>you can do it with javascript - this is only pseudocode (written in jQuery) as I'm not certain how to listen for both a ctrl AND an f, but you get the idea:</p>\n\n<pre><code>$(body).keypress(function(e)\n{\n    if (e.keyCode===17)\n    {\n        //ctrl has been pressed, listen for subsequent F press (keyCode 70)\n        //if next keyCode===70\n        return false;\n    }\n});\n</code></pre>\n\n<p>Returning false like this will stop the browser doing anything when the keys are pressed, as far as I know. you could also use <code>e.preventDefault();</code> to try to prevent anything happening if <code>return false;</code> isn't enough.</p>\n\n<p>Hope this helps</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can disable the keyboard shortcut in most browsers (IE9, Firefox, Chrome, Opera), but you can't stop someone using Find by clicking it in the browser.</p>\n\n<p>Here's some jQuery-powered JavaScript that does it:</p>\n\n<pre><code>$(window).keydown(function(e){\n    if ((e.ctrlKey || e.metaKey) &amp;&amp; e.keyCode === 70) {\n        e.preventDefault();\n    }\n});\n</code></pre>\n\n<p>Taken from <a href=\"http://caniuse.com/\">http://caniuse.com/</a>, where this feature <em>regularly</em> irritates me. On that site, it's used to make CTRL+F do a custom search on the page, instead of disabling it completely.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I would presume that using keydown would enable this, however as a matter of principle, changing the way that a browser behaves is a bad idea. Although it is more of a pain for you to do, there are font replacement techniques that should make it easier.</p>\n\n<p>If you do find a means of doing this, there is always a danger that someone will get around it. It is far better to write the page to work whatever than hack the browser.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Code</strong></p>\n\n<pre><code>window.addEventListener(\"keydown\",function (e) {\n    if (e.keyCode === 114 || (e.ctrlKey &amp;&amp; e.keyCode === 70)) { \n        e.preventDefault();\n    }\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Rather than disable the Find function, you could make it so that Find won't find the words! One way to do this would be to use the CSS <code>content</code> declaration to inject the words. Find won't find them:</p>\n\n<pre><code>&lt;div class=\"word-foobar\"&gt;&lt;/div&gt;\n\n.word-foobar:before {\n    content: \"Foobar\";\n}\n</code></pre>\n\n<p>You could quite easily write some Javascript to automatically generate all the necessary CSS rules for you, too.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Here's a <a href=\"https://github.com/seangransee/Disable-CTRL-F-jQuery-plugin\" rel=\"nofollow\">jQuery plugin</a> that does what you're looking for.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a puzzle site and its an awful way of cheating. Its okay if only partially, but can it be done?<br>\nSomething I had in mind was replacing the letters with images, but anything easier than that?</p>\n",
            "last_activity_date": 1383137077,
            "question_id": 7091538,
            "score": 9,
            "tags": [
                "javascript",
                "html",
                "css",
                "browser"
            ],
            "title": "Is it possible to disable Ctrl + F of find in page?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>what you need is <code>position: absolute</code> in order for z-index to work.</p>\n\n<p>also you will need to set the <code>left</code> and <code>top</code> css properties to position the element in the correct place. You will probably need to do this with javascript. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If the elements make a hierarchy, it cannot be done that way, because every positioned element creates new <a href=\"http://css-discuss.incutio.com/wiki/Overlapping_And_ZIndex\">stacking context</a>, and z-index is relative to the elements of the same stacking context.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>I've had success using the following.</p>\n\n<p>z-index: -1;</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I need for a certain dynamic element to always appear on top of another element, no matter what order in the DOM tree they are. Is this possible? I've tried <code>z-index</code> (with <code>position: relative</code>), and it doesn't seem to work. I hate to be vague, but this is the simplest way I can think of asking this question without explaining its purpose ad nauseum.</p>\n\n<p>So, to recap, I need</p>\n\n<pre><code>&lt;div class=\"a\"&gt;\n    &lt;div class=\"b\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;div class=\"b\"&gt;\n    &lt;div class=\"a\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>To display exactly the same when rendered. And for flexibility purposes (I'm planning on distributing a plugin that needs this functionality), I'd really like to not have to resort to absolute or fixed positioning.</p>\n\n<p>Addendum:\nFor what it's worth, to perform the function I was wanting to, I made a conditional statement where the overlapping child element would become transparent in the case it was blocking view of its parent. It's not perfect, but it's something.</p>\n",
            "last_activity_date": 1403231191,
            "question_id": 2503705,
            "score": 9,
            "tags": [
                "html",
                "css",
                "dom"
            ],
            "title": "HTML: Get a child element to show behind (lower z-index) than its parent?"
        }
    ]
}
