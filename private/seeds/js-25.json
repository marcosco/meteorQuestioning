{
    "items": [
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You're clicking on an anchor, whose default behavior is to navigate somewhere.  Returning false may be an attempt to prevent the navigation and keep user on current page/view. </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>According to <a href=\"http://fuelyourcoding.com/jquery-events-stop-misusing-return-false/\">jQuery Events: Stop (Mis)Using Return False</a>, returning <code>false</code> performs three tasks when called:</p>\n\n<ol>\n<li>event.preventDefault();</li>\n<li>event.stopPropagation();</li>\n<li>Stops callback execution and returns immediately when called.</li>\n</ol>\n\n<p>The only action needed to cancel the default behaviour is <code>preventDefault()</code>. Issuing <code>return false;</code> can create brittle code. Usually you'd want just this:</p>\n\n<pre><code>$(\"a\").on( 'click', function (e) {\n    // e == our event data\n    e.preventDefault();\n});\n</code></pre>\n\n<p>And secondly \"this\" is a DOM element in javascript and \"$(this)\" is a jQuery element\nthat references the DOM element. Read more on the topic at <a href=\"http://remysharp.com/2007/04/12/jquerys-this-demystified/\">jQuery's this: demystified</a>.</p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>In the scope of the click handler, <code>this</code> is the unwrapped DOM element. <code>$(this)</code> wraps it and returns a jQuery element. It is common practice to wrap this once and make it available within the scope as <code>that</code>, or often <code>$this</code> (prefixing variable names with $ is a convention to indicate a jQuery element).</p>\n\n<p>Your example could therefore be written as</p>\n\n<pre><code>$(function() {\n    $(\"body a\").click(function() {\n        var $this = $(this);\n        alert($this.html());\n        return false;\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>First of all a +1 to all those who answered. I would like to add a point to all of your valueable answers. <code>return false</code> not only stops the users from navigating but also adds an overhead on the programmer who has to consider one more aspect while creating the user interface - there MAY be machines where the client has disabled javascript. In that case, there HAS to be an alternate to the program logic to make the user interface work on a wider range of machines.</p>\n\n<p>Not going astray from the main question asked, I suggest using <code>return false</code> (please do follow what others posted - I am just simplifying things) along with some code for the javascript disabled machines would be a better practice from software engineering perspective</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I found lots of functions like this one:</p>\n\n<pre><code>$(function() {\n    $(\"body a\").click(function() {\n        alert(this.innerHTML);\n        return false;\n    });\n});\n</code></pre>\n\n<p>What's the difference between <code>this</code> and <code>$(this)</code> in jquery?</p>\n\n<p>They all have a line <code>return false;</code> - I don't know when I should  use <code>return false</code> in jquery function and don't know what's the use of it?</p>\n",
            "last_activity_date": 1359607244,
            "question_id": 5927689,
            "score": 20,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "When  should I use return false in jquery function?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You may want to use <a href=\"http://api.jquery.com/category/ajax/\">jQuery's Ajax functions</a> to poll the server every second or so. Then the server can respond with instructions to the browser in near real-time.</p>\n\n<p>You can also consider <a href=\"http://en.wikipedia.org/wiki/Comet_%28programming%29#Ajax_with_long_polling\">long polling</a> instead of the above, to reduce the latency without increasing the frequency of the polls.</p>\n\n<p>Quoting <a href=\"http://cometdaily.com/2007/11/15/the-long-polling-technique/\">Comet Daily: The Long-Polling Technique</a>:</p>\n\n<blockquote>\n  <p>The long-polling Comet technique is a technique that optimizes traditional polling to reduce latency.</p>\n  \n  <p>Traditional polling sends an <code>XMLHttpRequest</code> to the server in fixed intervals. For example, open a new <code>XMLHttpRequest</code> every 15 seconds, receive an immediate response, and close the connection.</p>\n  \n  <p>Long-polling sends a request to the server, but a response is not returned to the client until one is available. As soon as the connection is closed, either due to a response being received by the client or if a request times out, a new connection is initiated. The result is a significant reduction in latency because the server usually has a connection established when it is ready to return information to return to the client.</p>\n</blockquote>\n\n<p>In addition to the above, I also suggest that you check out the accepted answer to the following Stack Overflow post for a detailed description of the long polling technique:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/1086380/how-does-facebook-gmail-send-the-real-time-notification\">How does facebook, gmail send the real time notification?</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>I <a href=\"http://stackoverflow.com/questions/3583203/server-polling-with-javascript/3583240#3583240\">second Daniel's suggestion</a> to use long-poll or push. Check out</p>\n\n<ul>\n<li><a href=\"http://cometd.org/\" rel=\"nofollow\">CometD Bayeux Ajax Push</a></li>\n</ul>\n\n<blockquote>\n  <p>CometD is a scalable HTTP-based event routing bus that uses a Ajax Push technology pattern known as Comet. The term 'Comet' was coined by Alex Russell in his post Comet: Low Latency Data for the Browser. </p>\n</blockquote>\n\n<p>They have a page explaining how to get that work with Spring:</p>\n\n<ul>\n<li><a href=\"http://cometd.org/documentation/cometd-java/server/services/integration-spring\" rel=\"nofollow\">http://cometd.org/documentation/cometd-java/server/services/integration-spring</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>What is best practise for polling server with JavaScript for application that needs to refresh data very rapidly? I'm using jQuery for front-end and Java Spring Framework for backend.</p>\n\n<p>Example of refreshed data could be list of items that are getting updated very rapidly (every 1 second).</p>\n",
            "last_activity_date": 1318739367,
            "question_id": 3583203,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "polling"
            ],
            "title": "Server polling with JavaScript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Have your javascript return false when it's done.</p>\n\n<pre><code>&lt;asp:button runat=\"server\".... OnClientClick=\"myfunction(); return false;\" /&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 159
                },
                {
                    "body": "<pre><code>YourButton.Attributes.Add(\"onclick\", return false\");\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;asp:button runat=\"server\" ... OnClientClick=\"return false\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>You don't say which version of the .NET framework you are using. </p>\n\n<p>If you are using v2.0 or greater you could use the OnClientClick property to execute a Javascript function when the button's onclick event is raised.</p>\n\n<p>All you have to do to prevent a server postback occuring is return <code>false</code> from the called JavaScript function.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The others are right that you need your callback to return false; however I'd like to add that doing it by setting the onclick is an ugly old way of doing things.  I'd recommend reading about <a href=\"http://en.wikipedia.org/wiki/Unobtrusive_JavaScript\" rel=\"nofollow\">unobtrusive javascript</a>.  Using a library like <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a> could make your life easier, and the HTML less coupled to your javascript (and jQuery's <a href=\"http://weblogs.asp.net/scottgu/archive/2008/09/28/jquery-and-microsoft.aspx\" rel=\"nofollow\">supported by Microsoft</a> now!)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Either use the \"return false\" approach mentioned by others, or add the runat=\"server\" attribute to your normal button:</p>\n\n<pre><code>&lt;input type=\"button\" runat=\"server\" id=\"htmlButton\" ...&gt;\n</code></pre>\n\n<p>Then you can set the HTML button's visibility property in the codebehind, e.g:</p>\n\n<pre><code>htmlButton.Visible = isLoggedIn;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Consider this.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nSys.WebForms.PageRequestManager.getInstance().add_beginRequest(BeginRequest);\nfunction BeginRequest(sender, e) {\n    e.get_postBackElement().disabled = true;\n\n}\n     &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>additionally for accepted answer you can use UseSubmitBehavior=\"false\" \n<a href=\"http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.button.usesubmitbehavior.aspx\" rel=\"nofollow\">MSDN</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use jquery click action and use the <strong>preventDefault()</strong> function to avoid postback</p>\n\n<pre><code>&lt;asp:button ID=\"btnMyButton\" runat=\"server\" Text=\"MyButton\" /&gt;\n\n\n$(\"#btnMyButton\").click(function (e) {\n// some actions here\n e.preventDefault();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an asp button.  It's server-side so I can only show it for logged in users, but i want it to run a javascript function and it seems when it's runat=\"server\" it always calls the postback event.</p>\n\n<p>I also have a regular button (<code>&lt;input...</code>>) not running at server and it works fine...</p>\n\n<p>How can I make this button only run the javascript and not postback?</p>\n",
            "last_activity_date": 1406189573,
            "question_id": 683746,
            "score": 75,
            "tags": [
                ".net",
                "asp.net",
                "javascript",
                "ajax"
            ],
            "title": "How to disable postback on an asp Button"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The first one takes two parameters:</p>\n\n<pre><code>parseInt(string, radix)\n</code></pre>\n\n<p>The radix parameter is used to specify which numeral system to be used, for example, a radix of 16 (hexadecimal) indicates that the number in the string should be parsed from a hexadecimal number to a decimal number.</p>\n\n<p>If the radix parameter is omitted, JavaScript assumes the following:</p>\n\n<ul>\n<li>If the string begins with \"0x\", the<br>\nradix is 16 (hexadecimal)</li>\n<li>If the string begins with \"0\", the\nradix is 8 (octal). This feature<br>\nis deprecated</li>\n<li>If the string begins with any other\nvalue, the radix is 10    (decimal)</li>\n</ul>\n\n<p>The other function you mentioned takes only one parameter:</p>\n\n<pre><code>Number(object)\n</code></pre>\n\n<p>The Number() function converts the object argument to a number that represents the object's value.</p>\n\n<p>If the value cannot be converted to a legal number, NaN is returned.</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<pre><code>parseInt(\"123hui\")\n</code></pre>\n\n<p>returns 123</p>\n\n<pre><code>Number(\"123hui\")\n</code></pre>\n\n<p>returns <code>NaN</code></p>\n\n<p>In other words <code>parseInt()</code> parses up to the first non-digit and returns whatever it had parsed. <code>Number()</code> wants to convert the entire string into a number, which can also be a float BTW.</p>\n\n<hr>\n\n<p>EDIT #1: Lucero commented about the radix that can be used along with <code>parseInt()</code>. As far as that is concerned, please see <a href=\"http://stackoverflow.com/a/4564195/483113\">THE DOCTOR's answer</a> below (I'm not going to copy that here, the doc shall have a fair share of the fame...).</p>\n\n<hr>\n\n<p>EDIT #2: Regarding use cases: That's somewhat written between the lines already. Use <code>Number()</code> in cases where you indirectly want to check if the given string completely represents a numeric value, float or integer. <code>parseInt()/parseFloat()</code> aren't that strict as they just parse along and stop when the numeric value stops (radix!), which makes it useful when you need a numeric value at the front \"in case there is one\" (note that <code>parseInt(\"hui\")</code> also returns <code>NaN</code>). And the biggest difference is the use of radix that <code>Number()</code> doesn't know of and <code>parseInt()</code> may indirectly guess from the given string (that can cause weird results sometimes).</p>\n",
                    "is_accepted": true,
                    "score": 87
                },
                {
                    "body": "<p><strong>parseInt(string)</strong> will convert a string containing non-numeric characters to a number, as long as the string begins with numeric characters</p>\n\n<pre><code>'10px' =&gt; 10\n</code></pre>\n\n<p><strong>Number(string)</strong> will return NaN if the string contains any non-numeric characters</p>\n\n<pre><code>'10px' =&gt; NaN\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>The <code>parseInt</code> function allows you to specify a variety of radii for the input string and is limited to integer values.</p>\n\n<pre><code>parseInt('Z', 36) === 35\n</code></pre>\n\n<p>The <code>Number</code> constructor called as a function will parse the string with a grammar and is limited to base 10 and base 16.</p>\n\n<pre>\nStringNumericLiteral :::\n    StrWhiteSpace<sub>opt</sub> \n    StrWhiteSpace<sub>opt</sub> StrNumericLiteral StrWhiteSpace<sub>opt</sub>\n\nStrWhiteSpace :::\n    StrWhiteSpaceChar StrWhiteSpace<sub>opt</sub>\n\nStrWhiteSpaceChar :::\n    WhiteSpace \n    LineTerminator\n\nStrNumericLiteral :::\n    StrDecimalLiteral \n    HexIntegerLiteral\n\nStrDecimalLiteral :::\n    StrUnsignedDecimalLiteral \n    <strong>+</strong> StrUnsignedDecimalLiteral \n    <strong>-</strong> StrUnsignedDecimalLiteral\n\nStrUnsignedDecimalLiteral :::\n    <strong>Infinity</strong> \n    DecimalDigits <strong>.</strong> DecimalDigits<sub>opt</sub> ExponentPart<sub>opt</sub> \n    <strong>.</strong> DecimalDigits ExponentPart<sub>opt</sub>     \n    DecimalDigits ExponentPart<sub>opt</sub>\n\nDecimalDigits :::\n    DecimalDigit \n    DecimalDigits DecimalDigit\n\nDecimalDigit ::: <strong>one of</strong>\n    <strong>0 1 2 3 4 5 6 7 8 9</strong>\n\nExponentPart :::\n    ExponentIndicator SignedInteger\n\nExponentIndicator ::: <strong>one of</strong>\n    <strong>e E</strong>\n\nSignedInteger :::\n    DecimalDigits \n    <strong>+</strong> DecimalDigits \n    <strong>-</strong> DecimalDigits\n\nHexIntegerLiteral :::\n    <strong>0x</strong> HexDigit \n    <strong>0X</strong> HexDigit \n    HexIntegerLiteral HexDigit\n\nHexDigit ::: <strong>one of</strong>\n    <strong>0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F</strong>\n</pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Addendum to @sjngm's answer:</p>\n\n<p>They both also ignore whitespace:</p>\n\n<pre><code>var foo = \"    3     \";\nconsole.log(parseInt(foo)); // 3\nconsole.log(Number(foo)); // 3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>Addendum to @sjngm's answer:</p>\n  \n  <p>They both also ignore whitespace:</p>\n  \n  <p>var foo = \"    3     \";  console.log(parseInt(foo)); // 3\n  console.log(Number(foo)); // 3</p>\n</blockquote>\n\n<p>It is not exactly correct. As <strong>sjngm</strong> wrote parseInt parses string to first number. It is true. But the problem is when you want to parse number separated with whitespace ie. \"12 345\". In that case <br/><code>parseInt(\"12 345\")</code> will return <code>12</code> instead of <code>12345</code>.\nSo to avoid that situation you must <strong>trim whitespaces before parsing to number</strong>.\nMy solution would be:</p>\n\n<pre><code>     var number=parseInt(\"12 345\".replace(/\\s+/g, ''),10);\n</code></pre>\n\n<p>Notice one extra thing I used in parseInt() function. <code>parseInt(\"string\",10)</code> will set the <strong>number to decimal format</strong>. If you would parse string like \"08\" you would get 0 because <strong>8 is not a octal number</strong>.Explanation is <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/parseInt#Octal_Interpretations_with_No_Radix\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>What is the difference between parseInt(string) and Number(string) in JavaScript?</p>\n",
            "last_activity_date": 1416465909,
            "question_id": 4564158,
            "score": 68,
            "tags": [
                "javascript",
                "string-conversion"
            ],
            "title": "What is the difference between parseInt(string) and Number(string) in JavaScript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p><code>$.getJSON</code> is asynchronous. See <a href=\"http://api.jquery.com/jQuery.getJSON/\">http://api.jquery.com/jQuery.getJSON/</a></p>\n\n<p>You should do</p>\n\n<pre><code>$.getJSON(\"test.json\", function(json) {\n    console.log(json); // this will show the info it in firebug console\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>Try is such way (but also please note that JavaScript don't have access to the client file system):</p>\n\n<pre><code>$.getJSON('test.json', function(data) {\n  console.log(data);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are using a local array for JSON - as you showed in your exmaple in the question (test.json) then you can is the <code>parseJSON</code> method of JQuery -></p>\n\n<pre><code>  var obj = jQuery.parseJSON('{\"name\":\"John\"}');\nalert( obj.name === \"John\" );\n</code></pre>\n\n<p><code>getJSON</code> is used for getting JSON from a remote site - it will not work locally (unless you are using a local HTTP Server)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Recently <a href=\"http://d3js.org/\" rel=\"nofollow\">D3js</a> is able to handle local json file.</p>\n\n<p>This is the issue\n<a href=\"https://github.com/mbostock/d3/issues/673\" rel=\"nofollow\">https://github.com/mbostock/d3/issues/673</a></p>\n\n<p>This is the patch inorder for D3 to work with local json files.\n<a href=\"https://github.com/mbostock/d3/pull/632\" rel=\"nofollow\">https://github.com/mbostock/d3/pull/632</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I had the same need (to test my angularjs app), and the only way I found is to use require.js:</p>\n\n<pre><code>  var json = require('./data.json'); //(with path)\n</code></pre>\n\n<p>note: the file is loaded once, further calls will use the cache.</p>\n\n<p>More on reading files with nodejs: <a href=\"http://docs.nodejitsu.com/articles/file-system/how-to-read-files-in-nodejs\">http://docs.nodejitsu.com/articles/file-system/how-to-read-files-in-nodejs</a></p>\n\n<p>require.js: <a href=\"http://requirejs.org/\">http://requirejs.org/</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Found this thread when trying (unsuccessfully) to load a local json file. This solution worked for me...</p>\n\n<pre><code>function load_json(src) {\n  var head = document.getElementsByTagName('head')[0];\n\n  //use class, as we can't reference by id\n  var element = head.getElementsByClassName(\"json\")[0];\n\n  try {\n    element.parentNode.removeChild(element);\n  } catch (e) {\n    //\n  }\n\n  var script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.src = src;\n  script.className = \"json\";\n  script.async = false;\n  head.appendChild(script);\n\n  //call the postload function after a slight delay to allow the json to load\n  window.setTimeout(postloadfunction, 100)\n}\n</code></pre>\n\n<p>... and is used like this...</p>\n\n<pre><code>load_json(\"test2.html.js\")\n</code></pre>\n\n<p>...and this is the <code>&lt;head&gt;</code>...</p>\n\n<pre><code>&lt;head&gt;\n  &lt;script type=\"text/javascript\" src=\"test.html.js\" class=\"json\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you want to let the user select the local json file (anywhere on the filesystem), then the following solution works.</p>\n\n<p>It uses uses FileReader and JSON.parser (and no jquery).</p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n\n&lt;form id=\"jsonFile\" name=\"jsonFile\" enctype=\"multipart/form-data\" method=\"post\"&gt;\n\n  &lt;fieldset&gt;\n    &lt;h2&gt;Json File&lt;/h2&gt;\n     &lt;input type='file' id='fileinput'&gt;\n     &lt;input type='button' id='btnLoad' value='Load' onclick='loadFile();'&gt;\n  &lt;/fieldset&gt;\n&lt;/form&gt;\n\n\n&lt;script type=\"text/javascript\"&gt;\n\n  function loadFile() {\n    var input, file, fr;\n\n    if (typeof window.FileReader !== 'function') {\n      alert(\"The file API isn't supported on this browser yet.\");\n      return;\n    }\n\n    input = document.getElementById('fileinput');\n    if (!input) {\n      alert(\"Um, couldn't find the fileinput element.\");\n    }\n    else if (!input.files) {\n      alert(\"This browser doesn't seem to support the `files` property of file inputs.\");\n    }\n    else if (!input.files[0]) {\n      alert(\"Please select a file before clicking 'Load'\");\n    }\n    else {\n      file = input.files[0];\n      fr = new FileReader();\n      fr.onload = receivedText;\n      fr.readAsText(file);\n    }\n\n    function receivedText(e) {\n      lines = e.target.result;\n      var newArr = JSON.parse(lines); \n    }\n  }\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Here is a good intro on FileReader: <a href=\"http://www.html5rocks.com/en/tutorials/file/dndfiles/\">http://www.html5rocks.com/en/tutorials/file/dndfiles/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>$.ajax({\n       url: \"Scripts/testingJSON.json\",\n           //force to handle it as text\n       dataType: \"text\",\n            success: function (dataTest) {\n\n                //data downloaded so we call parseJSON function \n                //and pass downloaded data\n                var json = $.parseJSON(dataTest);\n                //now json variable contains data in json format\n                //let's display a few items\n                $.each(json, function (i, jsonObjectList) {\n                for (var index = 0; index &lt; jsonObjectList.listValue_.length;index++) {\n                      alert(jsonObjectList.listKey_[index][0] + \" -- \" + jsonObjectList.listValue_[index].description_);\n                      }\n                 });\n\n\n             }\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to load a local json file but it won't work.\nHere is my javascript code (using jquery)</p>\n\n<pre><code>var json = $.getJSON(\"test.json\");\nvar data = eval(\"(\" +json.responseText + \")\");\ndocument.write(data[\"a\"]);\n</code></pre>\n\n<p>The test.json file :</p>\n\n<pre><code>{\"a\" : \"b\", \"c\" : \"d\"}\n</code></pre>\n\n<p>Nothing is displayed and Firebug tells me that data is undefined. In Firebug I can see json.responseText. It is good and valid.\nThe most strange is when I copy the line </p>\n\n<pre><code> var data = eval(\"(\" +json.responseText + \")\");\n</code></pre>\n\n<p>in Firebug's console, it works and I can access data.</p>\n\n<p>Anyone's got a solution ?</p>\n\n<p>Thank you</p>\n",
            "last_activity_date": 1400827566,
            "question_id": 7346563,
            "score": 45,
            "tags": [
                "javascript",
                "json",
                "local-files"
            ],
            "title": "Loading local json file"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Ah I figured it out: Using the <a href=\"http://docs.jquery.com/Traversing/slice\">slice</a> function does exactly what I need.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>jQuery <a href=\"http://docs.jquery.com/Traversing/slice\">slice()</a> function taking indexes of the first and the last needed elements selects a subset of the matched elements. Note what it doesn't include last element itself. </p>\n\n<p>In your particular case you should use</p>\n\n<pre><code>$(\"#myDiv a\").slice(1, 4)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 88
                },
                {
                    "body": "<p>You should be able to do this by extracting a slice of the array thus.  It's the line</p>\n\n<pre><code>$(\"div[id='myDiv'] &gt; a\").slice(1,4).css(\"background\",\"yellow\");\n</code></pre>\n\n<p>that you're interested in.  It will affect the 2nd, 3rd and 4th elements.</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;script type=\"text/javascript\" src=\"jquery-1.2.6.pack.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            $(document).ready(function(){\n                $(\"a\").click(function(event){\n                    $(\"div[id='myDiv'] &gt; a\").slice(1,4).css(\"background\",\"yellow\");\n                    event.preventDefault();\n                });\n            });\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div id=\"myDiv\"&gt;\n            &lt;a&gt;1&lt;/a&gt;\n            &lt;a&gt;2&lt;/a&gt;\n            &lt;a&gt;3&lt;/a&gt;\n            &lt;a&gt;4&lt;/a&gt;\n            &lt;a&gt;5&lt;/a&gt;\n            &lt;a&gt;6&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;hr&gt;\n        &lt;a href=\"\" &gt;Click here&lt;/a&gt;\n        &lt;hr&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<pre><code>&lt;div id=\"myDiv\"&gt;\n     &lt;a&gt;...&lt;/a&gt;\n     &lt;a&gt;...&lt;/a&gt;\n     &lt;a&gt;...&lt;/a&gt;\n     &lt;a&gt;...&lt;/a&gt;\n     &lt;a&gt;...&lt;/a&gt;\n     &lt;a&gt;...&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>If you wanted to select the 2nd, 3rd and 4th <code>a</code> tags in the above example, how would you do that? The only thing I can think of is:</p>\n\n<pre><code>$(\"#myDiv a:eq(1), #myDiv a:eq(2), #myDiv a:eq(3)\")\n</code></pre>\n\n<p>But that doesn't look to be very efficient or pretty. I guess you could also select ALL the <code>a</code>s and then do run <code>.each</code> over them, but that could get very inefficient if there were a lot more <code>a</code>s.</p>\n",
            "last_activity_date": 1223530800,
            "question_id": 185966,
            "score": 39,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to select a range of elements in jQuery"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p><em><strong>Edit:</em> Please read Malvolio's comments below as this answer's knowledge is outdated.</strong></p>\n\n<p>You cannot do cross-domain XMLHttpRequests.</p>\n\n<p>The call to <code>127.0.0.1</code> works because your test page is located at <code>127.0.0.1</code>, and the local test also works since, well... it's a local test.</p>\n\n<p>The other two tests fail because JavaScript cannot communicate with a distant server through XMLHttpRequest.</p>\n\n<p>You might instead consider either:  </p>\n\n<ul>\n<li>XMLHttp-request your own server to fetch your remote XML content for you (php script, for example)  </li>\n<li>Trying to use a service like GoogleAppEngine if you want to keep it full JavaScript.</li>\n</ul>\n\n<p>Hope that helps</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you're doing localhost development you can make cross-domain calls - I do it all the time. </p>\n\n<p>For Firefox, you have to enable it in your config settings</p>\n\n<pre><code>signed.applets.codebase_principal_support = true\n</code></pre>\n\n<p>Then add something like this to your XHR open code:</p>\n\n<pre><code>  if (isLocalHost()){\n    if (typeof(netscape) != 'undefined' &amp;&amp; typeof(netscape.security) != 'undefined'){\n      netscape.security.PrivilegeManager.enablePrivilege('UniversalBrowserRead');\n    }\n  }\n</code></pre>\n\n<p>For IE, if I remember right, all you have to do is enable the browser's Security setting under \"Miscellaneous &rarr; Access data sources across domains\" to get it to work with ActiveX XHRs. </p>\n\n<p>IE8 and above also added cross-domain capabilities to the native XmlHttpRequest objects, but I haven't played with those yet.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>If the server responds to an OPTIONS method and to GET and POST (whichever of them you're using) with a header like:</p>\n\n<p>Access-Control-Allow-Origin: *</p>\n\n<p>It might work OK. Seems to in FireFox 3.5 and rekonq 0.4.0.\nApparently, with that header and the initial response to OPTIONS, the server is saying to the browser, \"Go ahead and let this cross-domain request go through.\"</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had faced a similar problem. Every thing was okay, the \"readystate\" was 4, but the \"status\" was 0. It was because I was using a Apache PHP portable server and my file in which I used the \"XMLHttpRequest\" object was a html file. I changed the file extension to php and the problem was solved.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Actually make sure your button type is Button not Submit, that caused status conflict where I met recently.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>status is 0 when your html file containing the script is opened in the browser via the file protocol.Make sure to place the files in your server(apache or tomcat whatever) and then open it via http protocol in the browser.(ie <a href=\"http://localhost/myfile.html\" rel=\"nofollow\">http://localhost/myfile.html</a>) This is the solution.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Add <code>setRequestHeader(\"Access-Control-Allow-Origin\",\"*\")</code> to your server response.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To answer the question of why <code>http://127.0.0.1/cd_catalog.xml</code> works while\n<code>http://localhost/cd_catalog.xml</code> doesn't: Firefox is treating 127.0.0.1 and localhost as two different domains.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My problem similar to this was solved by checking my html code. I was having an <code>onclick</code> handler in my form submit button to a method. like this : <code>onclick=\"sendFalconRequestWithHeaders()\"</code>. This method in turn calls ajax just like yours, and does what I want. But not as expected, my browser was returning nothing.</p>\n\n<p>Learned From <a href=\"http://www.carlj.ca/2008/06/18/fixing-firefoxs-ns_error_not_available-error-when-using-pagemethods/\" rel=\"nofollow\">someone's hardwork</a>,  I have returned false in this handler, and solved.\nLet me mention that before arriving to this post, I have spent a whole 3-day weekend and a half day in office writing code implementing <code>CORS filters</code>, <code>jetty config</code>, other <code>jersey and embedded jetty</code> related stuff - just to fix this., revolving all my understanding around <code>cross domain ajax requests</code> and standards stuff. It was ridiculous how simple mistakes in javascript make you dumb.</p>\n\n<p>To be true, I have tried <code>signed.applets.codebase_principal_support = true</code> and written <code>isLocalHost() **if**</code>. may be this method needs to be implemented by us, firefox says there is no such \nNow I have to clean my code to submit git patch cleanly. Thanks to that someone.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Cannot get data with XMLHttpRequest (status 0 and responseText is empty):</p>\n\n<pre>\nxmlhttp=new XMLHttpRequest();\nxmlhttp.open(\"GET\",\"http://www.w3schools.com/XML/cd_catalog.xml\", true);\nxmlhttp.onreadystatechange=function() \n{\n  if(xmlhttp.readyState==4)\n    alert(\"status \" + xmlhttp.status);\n}\nxmlhttp.send();\n</pre>\n\n<p>It alerts \"status 0\".</p>\n\n<p>The same situation with the localhost request (cd_catalog.xml is saved as a local file)</p>\n\n<pre>\nxmlhttp.open(\"GET\",\"http://localhost/cd_catalog.xml\", true);\n</pre>\n\n<p>But with the localhost IP request</p>\n\n<pre>\nxmlhttp.open(\"GET\",\"http://127.0.0.1/cd_catalog.xml\", true);\n</pre>\n\n<p>and with the local file request</p>\n\n<pre>\nxmlhttp.open(\"GET\",\"cd_catalog.xml\", true);\n</pre>\n\n<p>everything is OK (status 200)</p>\n\n<p>What can cause the problem (status=0) with the online request?</p>\n\n<p>PS: Live HTTP Headers shows that everything is OK in all 4 cases:</p>\n\n<pre>\n  HTTP/1.1 200 OK\n  Content-Length: 4742\n</pre>\n\n<p>PS2: Apache local web server on VMWare (host OS Win7, Guest OS Ubuntu, Network adapter \u2013 NAT). Browser \u2013 Firefox.</p>\n",
            "last_activity_date": 1409819076,
            "question_id": 5005960,
            "score": 38,
            "tags": [
                "javascript",
                "ajax",
                "xmlhttprequest"
            ],
            "title": "XMLHttpRequest status 0 (responseText is empty)"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<h3>The best way</h3>\n\n<p>The best way is to insert an appropriate input tag:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;input type=\"submit\" value=\"submit\" /&gt;\n</code></pre>\n\n<h3>The best JS way</h3>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;form id=\"form-id\"&gt;\n  &lt;button id=\"your-id\"&gt;submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n\n<pre class=\"lang-js prettyprint-override\"><code>var form = document.getElementById(\"form-id\");\n\ndocument.getElementById(\"your-id\").addEventListener(\"click\", function () {\n  form.submit();\n});\n</code></pre>\n\n<p>Enclose the latter JavaScript code by an <code>DOMContentLoaded</code> event (choose only <code>load</code> for <a href=\"http://stackoverflow.com/questions/2414750/difference-between-domcontentloaded-and-load-events\">backward compatiblity</a>) if you haven't already done so:</p>\n\n<pre><code>window.addEventListener(\"DOMContentLoaded\", function () {\n  var form = document.... // copy the last code block!\n});\n</code></pre>\n\n<h3>The easy, not recommandable way (the former answer)</h3>\n\n<p>Add an onclick event to the link and an id to the form:</p>\n\n<pre><code>&lt;form id=\"form-id\"&gt;\n\n  &lt;a href=\"#\" onclick=\"document.getElementById('form-id').submit();\"&gt; submit &lt;/a&gt;\n\n&lt;/form&gt;\n</code></pre>\n\n<h3>All ways</h3>\n\n<p>Whatever way you choose, you have call <code>formObject.submit()</code> eventually (where <code>formObject</code> is the DOM object of the <code>&lt;form&gt;</code> tag).</p>\n\n<p>You also have to bind such an event handler, which calls <code>formObject.submit()</code>, so it gets called when the user clicked a specific link or button. There are two ways:</p>\n\n<ul>\n<li><p><em>Recommended:</em> Bind an event listener to the DOM object.</p>\n\n<pre><code>// 1. Acquire a reference to our &lt;form&gt;.\n//    This can also be done by setting &lt;form name=\"blub\"&gt;:\n//       var form = document.forms.blub;\n\nvar form = document.getElementById(\"form-id\");\n\n\n// 2. Get a reference to our preferred element (link/button, see below) and\n//    add an event listener for the \"click\" event.\ndocument.getElementById(\"your-id\").addEventListener(\"click\", function () {\n  form.submit();\n});\n</code></pre></li>\n<li><p><em>Not recommended:</em> Insert inline JavaScript. There are several reasons why this technique is not recommendable. One major argument is that you mix markup (HTML) with scripts (JS). The code becomes unorganized and rather unmaintainable.</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"document.getElementById('form-id').submit();\"&gt;submit&lt;/a&gt;\n\n&lt;button onclick=\"document.getElementById('form-id').submit();\"&gt;submit&lt;/button&gt;\n</code></pre></li>\n</ul>\n\n<p>Now, we come to the point at which you have to decide for the UI element which triggers the submit() call.</p>\n\n<ol>\n<li><p>A button</p>\n\n<pre><code>&lt;button&gt;submit&lt;/button&gt;\n</code></pre></li>\n<li><p>A link</p>\n\n<pre><code>&lt;a href=\"#\"&gt;submit&lt;/a&gt;\n</code></pre></li>\n</ol>\n\n<p>Apply the aforementioned techniques in order to add an event listener.</p>\n",
                    "is_accepted": true,
                    "score": 76
                },
                {
                    "body": "<p>You could give the form and the link some ids and then subscribe for the <code>onclick</code> event of the link and <code>submit</code> the form:</p>\n\n<pre><code>&lt;form id=\"myform\" action=\"\" method=\"POST\"&gt;\n    &lt;a href=\"#\" id=\"mylink\"&gt; submit &lt;/a&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>and then:</p>\n\n<pre><code>window.onload = function() {\n    document.getElementById('mylink').onclick = function() {\n        document.getElementById('myform').submit();\n        return false;\n    };\n};\n</code></pre>\n\n<p>I would recommend you using a submit button for submitting forms as it respects the markup semantics and it will work even for users with javascript disabled.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>If you use jQuery and would need an inline solution, this would work very well;</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"$(this).closest('form').submit();\"&gt;submit form&lt;/a&gt;\n</code></pre>\n\n<p>Also, you might want to replace </p>\n\n<pre><code>&lt;a href=\"#\"&gt;text&lt;/a&gt;\n</code></pre>\n\n<p>with</p>\n\n<pre><code>&lt;a href=\"javascript:void(0);\"&gt;text&lt;/a&gt;\n</code></pre>\n\n<p>so the user does not scroll to the top of your page when clicking the link.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>this works well without any special function needed. Much easier to write with php as well. <code>&lt;input onclick=\"this.form.submit()\"/&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;form id=\"mailajob\" method=\"post\" action=\"emailthijob.php\"&gt;\n    &lt;input type=\"hidden\" name=\"action\" value=\"emailjob\" /&gt;\n    &lt;input type=\"hidden\" name=\"jid\" value=\"&lt;?php echo $jobid; ?&gt;\" /&gt;\n&lt;/form&gt;\n\n&lt;a class=\"emailjob\" onclick=\"document.getElementById('mailajob').submit();\"&gt;Email this job&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>document.getElementById(\"theForm\").submit();\n</code></pre>\n\n<p>It works perfect in my case.</p>\n\n<p>you can use it in function also like,</p>\n\n<pre><code>function submitForm()\n{\n     document.getElementById(\"theForm\").submit();\n} \n</code></pre>\n\n<p>Set \"theForm\" as your form ID. It's done.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>here's the best solution to your question:\ninside the form you have these code:</p>\n\n<pre><code>&lt;li&gt;&lt;a href=\"#\"&gt;Singup&lt;/a&gt;&lt;/li&gt;\n&lt;button type=\"submit\" id=\"haha\"&gt;&lt;/button&gt;\n</code></pre>\n\n<p>in the CSS file, do this: </p>\n\n<pre><code>button{\n  display: none;\n}\n</code></pre>\n\n<p>in JS you do this:</p>\n\n<pre><code>$(\"a\").click(function(){\n   $(\"button\").trigger(\"click\");\n})\n</code></pre>\n\n<p>There you go.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Instead of a submit button I have a link:</p>\n\n<pre><code>&lt;form&gt;\n\n  &lt;a href=\"#\"&gt; submit &lt;/a&gt;\n\n&lt;/form&gt;\n</code></pre>\n\n<p>Can I make it submit the form when it is clicked?</p>\n",
            "last_activity_date": 1424848888,
            "question_id": 6799533,
            "score": 35,
            "tags": [
                "javascript",
                "html",
                "forms",
                "hyperlink"
            ],
            "title": "How to submit a form with JavaScript by clicking a link?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Set the <a href=\"http://api.jquery.com/event.pageX/\"><code>pageX</code></a> and <a href=\"http://api.jquery.com/event.pageY/\"><code>pageY</code></a> properties (which are normalized) on the <a href=\"http://api.jquery.com/category/events/event-object/\">event object</a> and pass it to <a href=\"http://api.jquery.com/trigger/\"><code>.trigger()</code></a>, like this:</p>\n\n<pre><code>var e = new jQuery.Event(\"click\");\ne.pageX = 10;\ne.pageY = 10;\n$(\"#elem\").trigger(e);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>The \".trigger()\" call accepts an \"extraParameters\" parameter that you could use to stuff the XY coords in I would think.  <a href=\"http://api.jquery.com/trigger/\" rel=\"nofollow\">Documentation</a></p>\n\n<pre><code>.trigger(\"click\", [x, y]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>Trying to fire off (trigger) a click event. Its easy to do in jQuery, but cannot figure out how to set the coordinates of the event and send them along.</p>\n\n<p>Essentially, I need to trigger a click at a specific location (which is calculated prior to the trigger() call).</p>\n\n<p>Any way to do this (in jQuery or otherwise)?</p>\n\n<p>Thanks -</p>\n",
            "last_activity_date": 1411056797,
            "question_id": 2845178,
            "score": 24,
            "tags": [
                "javascript",
                "jquery",
                "click",
                "triggers"
            ],
            "title": "Triggering a JavaScript click() event at specific coordinates"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_addslashes/\">http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_addslashes/</a></p>\n\n<pre><code>function addslashes( str ) {\n    return (str + '').replace(/[\\\\\"']/g, '\\\\$&amp;').replace(/\\u0000/g, '\\\\0');\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>A variation of the function provided by <em>Paolo Bergantino</em> that works directly on String:</p>\n\n<pre><code>String.prototype.addSlashes = function() \n{ \n   //no need to do (str+'') anymore because 'this' can only be a string\n   return this.replace(/[\\\\\"']/g, '\\\\$&amp;').replace(/\\u0000/g, '\\\\0');\n} \n</code></pre>\n\n<p>By adding the code above in your library you will be able to do:</p>\n\n<pre><code>var test = \"hello single ' double \\\" and slash \\\\ yippie\";\nalert(test.addSlashes());\n</code></pre>\n\n<hr>\n\n<p>EDIT: following the suggestions in comments, to whom it may be concerned about conflicts among JS libraries can add the following code: </p>\n\n<pre><code>if(!String.prototype.addSlashes)\n{\n   String.prototype.addSlashes = function()... \n}\nelse\n   alert(\"Warning: String.addSlashes has already been declared elsewhere.\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>You can also try this for the double quotes:</p>\n\n<pre><code>JSON.stringify(sDemoString);\nJSON.stringify('my string with \"quotes\"');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Does JavaScript have a built-in function like PHP's <code>addslashes</code> (or <code>addcslashes</code>) function to add backslashes to characters that need escaping in a string?</p>\n\n<p>For example, this:</p>\n\n<blockquote>\n  <p>This is a demo string with\n  'single-quotes' and \"double-quotes\".</p>\n</blockquote>\n\n<p>...would become:</p>\n\n<blockquote>\n  <p>This is a demo string with\n  \\'single-quotes\\' and\n  \\\"double-quotes\\\".</p>\n</blockquote>\n",
            "last_activity_date": 1398455900,
            "question_id": 770523,
            "score": 21,
            "tags": [
                "javascript",
                "string",
                "escaping",
                "quotes",
                "backslash"
            ],
            "title": "Escaping Strings in JavaScript"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<pre><code>var json = '{\"0\":\"1\",\"1\":\"2\",\"2\":\"3\",\"3\":\"4\"}';\n\nvar parsed = JSON.parse(json);\n\nvar arr = [];\n\nfor(var x in parsed){\n  arr.push(parsed[x]);\n}\n</code></pre>\n\n<p>Hope this is what you're after!</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Nothing hard here. Loop over your object elements and assign them to the array</p>\n\n<pre><code>var obj = {\"0\":\"1\",\"1\":\"2\",\"2\":\"3\",\"3\":\"4\"};\nvar arr = [];\nfor (elem in obj) {\n   arr.push(obj[elem]);\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Qq2aM/\" rel=\"nofollow\">http://jsfiddle.net/Qq2aM/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var JsonObj= {\"0\":\"1\",\"1\":\"2\",\"2\":\"3\",\"3\":\"4\"};\nvar array = [];\nfor(var i in JsonObj) {\n    if(JsonObj.hasOwnProperty(i) &amp;&amp; !isNaN(+i)) {\n        array[+i] = JsonObj[i];\n    }\n}\n</code></pre>\n\n<p><a href=\"http://jsbin.com/okEnamOT/1/edit\" rel=\"nofollow\"><strong>DEMO</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is nothing like a \"JSON object\" - JSON is a serialization notation.</p>\n\n<p>If you want to transform your <em>javascript object</em> to a <em>javascript array</em>, either you write your own loop [which would not be that complex!], or you rely on <a href=\"http://underscorejs.org/#toArray\">underscore.js</a> <code>_.toArray()</code> method:</p>\n\n<pre><code>var obj = {\"0\":\"1\",\"1\":\"2\",\"2\":\"3\",\"3\":\"4\"};\nvar yourArray = _(obj).toArray();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You simply do it like</p>\n\n<pre><code>var data = {\n    \"0\": \"1\",\n    \"1\": \"2\",\n    \"2\": \"3\",\n    \"3\": \"4\"\n};\nvar arr = [];\nfor (var prop in data) {\n    arr.push(data[prop]);\n}\nconsole.log(arr);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/43uVr/\"><strong>DEMO</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>var newArr = [];\n$.each(JSONObject.results.bindings, function(i, obj) {\n    newArr.push([obj.value]);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Should be easy with jQuery</p>\n\n<pre><code>var arr = $.map(obj, function(el) { return el; });\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/8TT4p/\"><strong>FIDDLE</strong></a></p>\n\n<p>and almost as easy without jQuery</p>\n\n<pre><code>var arr = Object.keys(o).map(function(k) { return o[k] });\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/8TT4p/67/\"><strong>FIDDLE</strong></a></p>\n\n<p>assuming it's already parsed as an object, and isn't actually JSON</p>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p>Use this line:</p>\n\n<pre><code>var myArr = Array.prototype.slice.call(myObj, 0);\n</code></pre>\n\n<p>This uses the build in function in slice from the <code>Array</code> class. It is probably be the most effective one.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<pre><code>Try this...    \n\nvar obj = {\"0\":\"1\",\"1\":\"2\",\"2\":\"3\",\"3\":\"4\"};\n    var arr = [];\n    arr = obj.toJSON();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Assuming your have a value like the following</p>\n\n<pre><code>var obj = {\"0\":\"1\",\"1\":\"2\",\"2\":\"3\",\"3\":\"4\"};\n</code></pre>\n\n<p>Then you can turn this into a javascript array using the following</p>\n\n<pre><code>var arr = [];\njson = JSON.stringify(eval('(' + obj + ')')); //convert to json string\narr = $.parseJSON(json); //convert to javascript array\n</code></pre>\n\n<p>This works for converting json into multi-diminsional javascript arrays as well.  </p>\n\n<p>None of the other methods on this page seemed to work completely for me when working with php json-encoded strings except the method I am mentioning herein.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a JSON object like this coming back as a server response</p>\n\n<pre><code>{\"0\":\"1\",\"1\":\"2\",\"2\":\"3\",\"3\":\"4\"}\n</code></pre>\n\n<p>SO I want to convert it into JavaScript array like</p>\n\n<pre><code>[\"1\",\"2\",\"3\",\"4\"]\n</code></pre>\n\n<p>Is there any good way to do this where ever I am reading people are using complex logic using loops. So Is there any other way to do this?</p>\n",
            "last_activity_date": 1424026877,
            "question_id": 20881213,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "arrays",
                "json"
            ],
            "title": "Converting JSON Object into Javascript array"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I believe people use a hidden Flash element to read the clipboard data from the browsers you mentioned.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong><em>NO.</em></strong>  And if you do find a hack (e.g. old version of flash) do not depend on it.</p>\n\n<p>Can I ask why you want to read from the clipboard?  If the user wants to pass along the clipboard contents, all they need to do is paste.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Safari supports reading the clipboard during <code>onpaste</code> events:</p>\n\n<p><a href=\"http://developer.apple.com/documentation/AppleApplications/Conceptual/SafariJSProgTopics/Tasks/CopyAndPaste.html#//apple_ref/doc/uid/30001234-176911\">Information</a></p>\n\n<p>You want to do something like:</p>\n\n<pre><code>someDomNode.onpaste = function(e) {\n    var paste = e.clipboardData &amp;&amp; e.clipboardData.getData ?\n        e.clipboardData.getData('text/plain') :                // Standard\n        window.clipboardData &amp;&amp; window.clipboardData.getData ?\n        window.clipboardData.getData('Text') :                 // MS\n        false;\n    if(paste) {\n        // ...\n    }\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Online Spreadsheets hook Ctrl+C, Ctrl+V events and transfer focus to a hidden TextArea control and either set it contents to desired new clipboard contents for copy or read its contents after the event had finished for paste.</p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I'm trying to read the contents of the clipboard using Javascript. With Internet Explorer it's possible using</p>\n\n<pre><code>window.clipdData.getData(\"Text\")\n</code></pre>\n\n<p>Is there a similar way of reading the clipboard in Firefox, Safari and Chrome?</p>\n",
            "last_activity_date": 1306004032,
            "question_id": 233719,
            "score": 19,
            "tags": [
                "javascript",
                "cross-browser",
                "clipboard"
            ],
            "title": "Is it possible to read the clipboard in Firefox, Safari and Chrome using Javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Okay, not what your actual code looks like, but you can't throw JavaScript variables into CSS, it won't recognize them.</p>\n\n<p>Instead, you need to create the CSS rules through JavaScript and insert them into the CSSOM (CSS Object Model). This can be done a few ways -- you can either just create a keyframe animation and add it in, or you can overwrite an existing animation. For this sake of this question, I'm going to assume you want to continually overwrite an existing keyframe animation with different rotation values.</p>\n\n<p>I've put together (and documented) a JSFiddle for you to take a look at: <a href=\"http://jsfiddle.net/russelluresti/RHhBz/2/\">http://jsfiddle.net/russelluresti/RHhBz/2/</a></p>\n\n<p>It starts off running a -10 -> 10 degree rotation animation, but then you can click the button to have it execute a rotation between random values (between -360 and 360 degrees).</p>\n\n<p>This example was hacked together primarily from earlier experimentation done by Simon Hausmann. You can see the source here: <a href=\"http://www.gitorious.org/~simon/qtwebkit/simons-clone/blobs/ceaa977f87947290fa2d063861f90c820417827f/LayoutTests/animations/change-keyframes.html\">http://www.gitorious.org/~simon/qtwebkit/simons-clone/blobs/ceaa977f87947290fa2d063861f90c820417827f/LayoutTests/animations/change-keyframes.html</a> (for as long as that link works, gitorious is pretty bad at maintaining urls).</p>\n\n<p>I've also taken the randomFromTo JavaScript function code from here: <a href=\"http://www.admixweb.com/2010/08/24/javascript-tip-get-a-random-number-between-two-integers/\">http://www.admixweb.com/2010/08/24/javascript-tip-get-a-random-number-between-two-integers/</a></p>\n\n<p>I've added documentation to the parts of the Simon Hausmann script that I've taken from him (though I've slightly modified them). I've also used jQuery just to attach the click event to my button--all other script is written in native JavaScript.</p>\n\n<p>I've tested this for Chrome 18 and Safari 5.1, and it seems to work fine in both browsers.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>I also use this jquery plugin that will generate and play css3 keyframes on the fly.</p>\n\n<p>With your existing numbers generator it will take no effort to implement.</p>\n\n<p><a href=\"https://github.com/krazyjakee/jQuery-Keyframes\" rel=\"nofollow\">https://github.com/krazyjakee/jQuery-Keyframes</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a piece of JS code to generate random numbers and output them as variables to be used here in place of the rotation values</p>\n\n<pre><code>@-webkit-keyframes rotate {\n    0% {-webkit-transform: rotate(-10deg);}\n    100% {-webkit-transform: rotate(10deg);}\n}\n\n#dog{\n/*irrelevant settings*/\n-webkit-animation: rotate 5s infinite alternate ease-in-out;\n}\n</code></pre>\n\n<p>The code above works fine however when I try to stick the variables from the javascript into <code>rotate(variable);</code> I cannot get it to work. I am new to this so I'm 90% sure I just haven't got the syntax right for the variable (seriously I am terrible at remembering if something needs brackets, quotes, squigglys etc and I have tried all I can think of).</p>\n\n<p>Or it might be because the variable is local to the function and CSS cannot read that.</p>\n\n<p>So basically I just need some kind stranger to tell me the correct syntax and how to get CSS to read the variable if possible.</p>\n\n<p>Otherwise it looks like I will need the function to create the entirety of:</p>\n\n<pre><code>@-webkit-keyframes rotate {\n    0% {-webkit-transform: rotate(-10deg);}\n    100% {-webkit-transform: rotate(10deg);}\n}\n</code></pre>\n\n<p>...which might be a bit messy since the random variable will likely be applied to multiple css elements.</p>\n\n<p>Oh and currently the variable is formatted to include the <code>deg</code> after the number so that is not the issue. In fact, for the sake of ease just assume I am using var dogValue = \"20deg\"; and forget the random element.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1359405753,
            "question_id": 10342494,
            "score": 12,
            "tags": [
                "javascript",
                "css",
                "variables",
                "webkit",
                "keyframe"
            ],
            "title": "Set Webkit Keyframes Values Using Javascript Variable"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You look for the ceiling function: see here <a href=\"http://www.w3schools.com/jsref/jsref_ceil.asp\" rel=\"nofollow\">http://www.w3schools.com/jsref/jsref_ceil.asp</a>.</p>\n\n<p>Wait, that's for integer rounding of course :-).</p>\n\n<p>In your case you can just add 0.x5 to your number and do the rounding, x standing for sevearl 0s depending on the number you want to round.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>19.21 + 0.05 = 19.26 -&gt; round 19.3\n19.29 + 0.05 = 19.34 -&gt; round 19.3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Normal rounding will work with a small tweak:</p>\n\n<pre><code>Math.round(price * 10)/10\n</code></pre>\n\n<p>and if you want to keep a currency format, you can use the Number method <code>.toFixed()</code></p>\n\n<pre><code>(Math.round(price * 10)/10).toFixed(2)\n</code></pre>\n\n<p><em>Though this will make it a String =)</em></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>var num = 192.168;\nnum = Math.ceil(num * 10) / 10;\nalert(num); // 192.2\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 170
                },
                {
                    "body": "<p>Very near to TheEye answer, but I change a little thing to make it work:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar num = 192.16;\nnum = Math.ceil(num * 10) / 10;\nalert(num);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Little late but, can create a reusable javascript function for this purpose:</p>\n\n<pre><code>// Arguments: number to round, number of decimal places\nfunction roundNumber(rnum, rlength) { \n    var newnumber = Math.round(rnum * Math.pow(10, rlength)) / Math.pow(10, rlength);\n    return newnumber;\n}\n</code></pre>\n\n<p>Call the function as</p>\n\n<pre><code>alert(roundNumber(192.168,2));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<p>I want to use Javascript to round up a number. Since the number is currency, I want it to round up like in these examples (2 decimal points):</p>\n\n<ul>\n<li>192.168 => <strong>192.20</strong></li>\n<li>192.11  => <strong>192.20</strong></li>\n<li>192.21  => <strong>192.30</strong></li>\n<li>192.26  => <strong>192.30</strong></li>\n<li>192.20  => <strong>192.20</strong></li>\n</ul>\n\n<p>How to achieve this using Javascript? The built-in Javascript function will round up the number based on standard logic (less and more than 5 to round up).</p>\n",
            "last_activity_date": 1391769137,
            "question_id": 5191088,
            "score": 89,
            "tags": [
                "javascript",
                "rounding"
            ],
            "title": "How to round up a number in Javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Have you tried it?</p>\n\n<p>If you do:</p>\n\n<pre><code>var HI = 'Hello World';\n</code></pre>\n\n<p>In <code>global.js</code>. And then do:</p>\n\n<pre><code>alert(HI);\n</code></pre>\n\n<p>In <code>js1.js</code> it will alert it fine. You just have to include <code>global.js</code> prior to the rest in the HTML document.</p>\n\n<p>The only catch is that you have to declare it in the window's scope (not inside any functions).</p>\n\n<p>You could just nix the <code>var</code> part and create them that way, but it's not good practice.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Just define your variables in global.js outside a function scope:</p>\n\n<pre><code>// global.js\nvar global1 = \"I'm a global!\";\nvar global2 = \"So am I!\";\n\n// other js-file\nfunction testGlobal () {\n    alert(global1);\n}\n</code></pre>\n\n<p>To make sure that this works you have to include/link to global.js before you try to access any variables defined in that file:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;!-- Include global.js first --&gt;\n        &lt;script src=\"/YOUR_PATH/global.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n        &lt;!-- Now we can reference variables, objects, functions etc. \n             defined in global.js --&gt;\n        &lt;script src=\"/YOUR_PATH/otherJsFile.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    [...]\n&lt;/html&gt;\n</code></pre>\n\n<p>You could, of course, link in the script tags just before the closing &lt;body&gt;-tag if you do not want the load of js-files to interrupt the initial page load.</p>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>Yes you can access them. You should declare them in 'public space' (outside any functions) as:</p>\n\n<pre><code>var globalvar1 = 'value';\n</code></pre>\n\n<p>You can access them later on, also in other files.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The recommended approach is:</p>\n\n<pre><code>window.greeting = \"Hello World!\"\n</code></pre>\n\n<p>You can then access it within any function:</p>\n\n<pre><code>function foo() {\n\n   alert(greeting); // Hello World!\n   alert(window[\"greeting\"]); // Hello World!\n   alert(window.greeting); // Hello World! (recommended)\n\n}\n</code></pre>\n\n<p>This approach is preferred for two reasons.</p>\n\n<ol>\n<li><p>The intent is explicit. The use of the <code>var</code> keyword can easily lead to declaring global <code>vars</code> that were intended to be local or vice versa. This sort of variable scoping is a point of confusion for a lot of Javascript developers. So as a general rule, I make sure all variable declarations are preceded with the keyword <code>var</code> or the prefix <code>window</code>.</p></li>\n<li><p>You standardize this syntax for reading the variables this way as well which means that a locally scoped <code>var</code> doesn't clobber the global <code>var</code> or vice versa. For example what happens here is ambiguous:</p></li>\n</ol>\n\n<p>&nbsp;</p>\n\n<pre><code> greeting = \"Aloha\";\n\n function foo() {\n     greeting = \"Hello\"; // overrides global!\n }\n\n function bar(greeting) {\n   alert(greeting);\n }\n\n foo();\n bar(\"Howdy\"); // does it alert \"Hello\" or \"Howdy\" ?\n</code></pre>\n\n<p>However, this is much cleaner and less error prone (you don't really need to remember all the variable scoping rules):</p>\n\n<pre><code> function foo() {\n     window.greeting = \"Hello\";\n }\n\n function bar(greeting) {\n   alert(greeting);\n }\n\n foo();\n bar(\"Howdy\"); // alerts \"Howdy\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 53
                },
                {
                    "body": "<p>As mentioned above, there are issues with using the top-most scope in your script file. Here is another issue: The script file might be run from a context that is not the global context in some run-time environment.</p>\n\n<p>It has been proposed to assign the global to <code>window</code> directly. But that is also <strong>run-time dependent</strong> and does not work in Node etc. It goes to show that portable global variable management needs some careful consideration and extra effort. Maybe they will fix it in future ECMS versions!</p>\n\n<p>For now, I would recommend something like this to support proper global management for all run-time environments:</p>\n\n<pre><code>/**\n * Exports the given object into the global context.\n */\nvar exportGlobal = function(name, object) {\n    if (typeof(GLOBAL) !== \"undefined\")  {\n        // Node.js\n        GLOBAL[name] = object;\n    }\n    else if (typeof(window) !== \"undefined\") {\n        // JS with GUI (usually browser)\n        window[name] = object;\n    }\n    else {\n        throw new Error(\"Unkown run-time environment. Currently only browsers and Node.js are supported.\");\n    }\n};\n\n\n// export exportGlobal itself\nexportGlobal(\"exportGlobal\", exportGlobal);\n\n// create a new global namespace\nexportGlobal(\"someothernamespace\", {});\n</code></pre>\n\n<p>It's a bit more typing, but it makes your global variable management future-proof.</p>\n\n<p>Disclaimer: Part of this idea came to me when looking at previous versions of <a href=\"https://github.com/stacktracejs/stacktrace.js/blob/master/stacktrace.js\" rel=\"nofollow\">stacktrace.js</a>. I reckon, one can also use Bower or other tools to get more reliable and less hackish detection of the run-time environment.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I need a few global variables that I need in all <code>.js</code> files.</p>\n\n<p>For example, consider the following 4 files:</p>\n\n<ol>\n<li><code>global.js</code></li>\n<li><code>js1.js</code></li>\n<li><code>js2.js</code></li>\n<li><code>js3.js</code></li>\n</ol>\n\n<p>Is there a way that I can declare 3 global variables in <code>global.js</code> and access them in any of the other 3 <code>.js</code> files considering I load all the above 4 files into a HTML document?</p>\n\n<p>Can someone please tell me if this is possible or is there a work around to achieve this?</p>\n",
            "last_activity_date": 1421072560,
            "question_id": 944273,
            "score": 44,
            "tags": [
                "javascript",
                "global-variables"
            ],
            "title": "How to declare a global variable in a .js file"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>srcElement</code> is only available in IE. In all other browsers it is <a href=\"https://developer.mozilla.org/en/DOM/event.target\"><strong><code>target</code></strong></a>:</p>\n\n<pre><code>var target = event.target || event.srcElement;\n\nif(target.onclick == null) { // shorter than getAttribute('onclick')\n    //...\n    document.mainForm.submit();\n}\n</code></pre>\n\n<p>Also have a look at <a href=\"http://www.quirksmode.org/js/events_properties.html\"><em>quirksmode.org - Event properties</em></a> for more cross browser information.</p>\n\n<hr>\n\n<p>Regarding the question what it is doing:</p>\n\n<p><code>event.target</code> / <code>event.srcElement</code> contains a reference to the element the <code>event</code> was raised on. <code>getAttribute('onclick') == null</code> checks whether a click event handler is assigned to element via <a href=\"http://www.quirksmode.org/js/events_early.html\"><em>inline event handling</em></a>.</p>\n\n<p>Is it important? We cannot say because we don't know what the <code>...code..</code> is doing.</p>\n",
                    "is_accepted": true,
                    "score": 79
                },
                {
                    "body": "<p>In IE the event object is available in the window object already; in Firefox, it's passed as a parameter in the event handler.</p>\n\n<p><strong>Example</strong></p>\n\n<p>JavaScript:</p>\n\n<pre><code>function toDoOnKeyDown(evt)\n\n{\n\n    //if window.event is equivalent as if thie browser is IE then the event object is in window\n    //object and if the browser is FireFox then use the Argument evt\n\n    var myEvent = ((window.event)?(event):(evt));\n    //get the Element which this event is all about \n\n    var Element = ((window.event)?(event.srcElement):(evt.currentTarget));\n    //To Do --&gt;\n\n}\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;input type=\"text\" id=\"txt_Name\" onkeydown=\"toDoOnKeyDown(event);\"/&gt;\n</code></pre>\n\n<p>As you notice when we called the function inside the html we have added a parameter <code>event</code> just in case the browser is Firefox.</p>\n\n<p>I have read in an article that the event object in IE is called <code>window.event</code> and in Firefox we have to put it as a parameter.</p>\n\n<p>In case you need it to be attached in the code:</p>\n\n<pre><code>document.getElementById('txt_Name').onkeydown = function(evt) {\n    var myEvent = ((window.event)?(window.event):(evt));\n\n\n    // get the Element which this event is all about \n\n    var Element = ((window.event)?(event.srcElement):(evt.currentTarget));\n    // To Do --&gt;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>there is an if statement on my company's website that makes one web page imcompatible with firefox</p>\n\n<pre><code>if(event.srcElement.getAttribute(\"onclick\") == null){ \n...code..\ndocument.mainForm.submit();\n}\n</code></pre>\n\n<p>I've commented out the if statement conditions and now its working with forefox. My question is, what is event.srcElement.getAttribute(\"onclick\"), is it important, would it cause problems in the future. also, is there something similar i can replace the condition with so that it works on firefox?</p>\n\n<p>Edit:</p>\n\n<pre><code> function gotoRDManagerPT(PTId, bDDetailId) {\n        if(!proceed()) return false;\n        var target = event.target || event.srcElement; \n        if(event.target.getAttribute(\"onclick\") == null) { \n            document.mainForm.displayRDManagerPT.value = \"true\";\n            document.mainForm.PTId.value = PTId;\n            document.mainForm.bDDetailId.value = bDDetailId;\n            document.mainForm.submit();\n        }\n    }\n</code></pre>\n",
            "last_activity_date": 1409169104,
            "question_id": 5301643,
            "score": 39,
            "tags": [
                "javascript",
                "firefox",
                "cross-browser"
            ],
            "title": "How can I make event.srcElement work in Firefox and what does it mean?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There is no way to do it in JavaScript natively.</p>\n\n<p>If you know the character encoding, you can calculate it yourself though.</p>\n\n<p><code>encodeURIComponent</code> assumes UTF-8 as the character encoding, so if you need that encoding, you can do,</p>\n\n<pre><code>function lengthInUtf8Bytes(str) {\n  // Matches only the 10.. bytes that are non-initial characters in a multi-byte sequence.\n  var m = encodeURIComponent(str).match(/%[89ABab]/g);\n  return str.length + (m ? m.length : 0);\n}\n</code></pre>\n\n<p>This should work because of the way UTF-8 encodes multi-byte sequences.  The first encoded byte always starts with either a high bit of zero for a single byte sequence, or a byte whose first hex digit is C, D, E, or F.  The second and subsequent bytes are the ones whose first two bits are 10.  Those are the extra bytes you want to count in UTF-8.</p>\n\n<p>The table in <a href=\"http://en.wikipedia.org/wiki/UTF-8\">wikipedia</a> makes it clearer</p>\n\n<pre><code>Bits        Last code point Byte 1          Byte 2          Byte 3\n  7         U+007F          0xxxxxxx\n 11         U+07FF          110xxxxx        10xxxxxx\n 16         U+FFFF          1110xxxx        10xxxxxx        10xxxxxx\n...\n</code></pre>\n\n<p>If instead you need to understand the page encoding, you can use this trick:</p>\n\n<pre><code>function lengthInPageEncoding(s) {\n  var a = document.createElement('A');\n  a.href = '#' + s;\n  var sEncoded = a.href;\n  sEncoded = sEncoded.substring(sEncoded.indexOf('#') + 1);\n  var m = sEncoded.match(/%[0-9a-f]{2}/g);\n  return sEncoded.length - (m ? m.length * 2 : 0);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>Actually, I figured out what's wrong. For the code to work the page <code>&lt;head&gt;</code> should have this tag:</p>\n\n<pre><code>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n</code></pre>\n\n<p>Or, as suggested in comments, if server sends HTTP <code>Content-Encoding</code> header, it should work as well.</p>\n\n<p>Then results from different browsers are consistent.</p>\n\n<p>Here is an example: </p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n  &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt; \n  &lt;title&gt;mini string length test&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;script type=\"text/javascript\"&gt;\ndocument.write('&lt;div style=\"font-size:100px\"&gt;' \n    + (unescape(encodeURIComponent(\"\u042d\u042d\u0425! Na\u00efve?\")).length) + '&lt;/div&gt;'\n  );\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Note: I suspect that specifying <em>any</em> (accurate) encoding would fix the encoding problem. It is just a coincidence that I need UTF-8.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This function will return the byte size of any UTF-8 string you pass to it.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function byteCount(s) {\n    return encodeURI(s).split(/%..|./).length - 1;\n}\n</code></pre>\n\n<p><a href=\"https://gist.github.com/1010324\">Source</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>You can try this:</p>\n\n<pre><code>function getLengthInBytes(str) {\n  var b = str.match(/[^\\x00-\\xff]/g);\n  return (str.length + (!b ? 0: b.length)); \n}\n</code></pre>\n\n<p>It works for me.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is a much faster version, which doesn't use regular expressions, nor encodeURIComponent:</p>\n\n<pre><code>function byteLength(str) {\n  // returns the byte length of an utf8 string\n  var s = str.length;\n  for (var i=str.length-1; i&gt;=0; i--) {\n    var code = str.charCodeAt(i);\n    if (code &gt; 0x7f &amp;&amp; code &lt;= 0x7ff) s++;\n    else if (code &gt; 0x7ff &amp;&amp; code &lt;= 0xffff) s+=2;\n    if (code &gt;= 0xDC00 &amp;&amp; code &lt;= 0xDFFF) i--; //trail surrogate\n  }\n  return s;\n}\n</code></pre>\n\n<p>Here is a <a href=\"http://jsperf.com/utf-8-byte-length\"><strong>performance</strong> comparison</a>.</p>\n\n<p>It just computes the length in UTF8 of each unicode codepoints returned by charCodeAt (based on wikipedia's descriptions of <a href=\"https://en.wikipedia.org/wiki/UTF-8#Description\">UTF8</a>, and UTF16 surrogate characters).</p>\n\n<p>It follows <em>RFC3629</em> (where UTF-8 characters are at most 4-bytes long). </p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>In my JavaScript code I need to compose a message to server in this format:</p>\n\n<pre><code>&lt;size in bytes&gt;CRLF\n&lt;data&gt;CRLF\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>3\nfoo\n</code></pre>\n\n<p>The data may contain unicode characters. I need to send them as UTF-8.</p>\n\n<p>I'm looking for the most cross-browser way to calculate the length of the string in bytes in JavaScript.</p>\n\n<p>I've tried this to compose my payload:</p>\n\n<pre><code>return unescape(encodeURIComponent(str)).length + \"\\n\" + str + \"\\n\"\n</code></pre>\n\n<p>But it does not give me accurate results for the older browsers (or, maybe the strings in those browsers in UTF-16?).</p>\n\n<p>Any clues?</p>\n\n<p><em>Update:</em></p>\n\n<p>Example: length in bytes of the string <code>\u042d\u042d\u0425! Na\u00efve?</code> in UTF-8 is 15 bytes, but some browsers report 23 bytes instead.</p>\n",
            "last_activity_date": 1398640815,
            "question_id": 5515869,
            "score": 30,
            "tags": [
                "javascript",
                "unicode"
            ],
            "title": "String length in bytes in JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can pass a <code>*</code> to <a href=\"https://developer.mozilla.org/en/DOM/document.getElementsByTagName\"><code>getElementsByTagName()</code></a> so that it will return all elements in a page:</p>\n\n<pre><code>var all = document.getElementsByTagName(\"*\");\n\nfor (var i=0, max=all.length; i &lt; max; i++) {\n     // Do something with the element here\n}\n</code></pre>\n\n<p>Note that you could use <a href=\"https://developer.mozilla.org/en-US/docs/DOM/Document.querySelectorAll\"><code>querySelectorAll()</code></a>, if it's available, to just find elements with a particular class.</p>\n\n<pre><code>if (document.querySelectorAll)\n    var clsElements = document.querySelectorAll(\".mySpeshalClass\");\nelse\n    // loop through all elements instead\n</code></pre>\n\n<p>This would certainly speed up matters for modern browsers.</p>\n",
                    "is_accepted": true,
                    "score": 62
                },
                {
                    "body": "<p>You can try with \n<code>document.getElementByClass('special_class');</code></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Hear is another example on how you can loop thru a document or an element//</p>\n\n<pre><code>function getNodeList(elem){\nvar l=new Array(elem),c=1,ret=new Array();\n//This first loop will loop until the count var is stable//\nfor(var r=0;r&lt;c;r++){\n    //This loop will loop thru the child element list//\n    for(var z=0;z&lt;l[r].childNodes.length;z++){\n\n         //Push the element to the return array.\n        ret.push(l[r].childNodes[z]);\n\n        if(l[r].childNodes[z].childNodes[0]){\n            l.push(l[r].childNodes[z]);c++;\n        }//IF           \n    }//FOR\n}//FOR\nreturn ret;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>from this link<br>\n        <strong><a href=\"http://www.java2s.com/Tutorial/JavaScript/0280__Document/Listallelementsbyreferencethedocumentall.htm\" rel=\"nofollow\">javascript reference</a></strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;A Simple Page&lt;/title&gt;\n&lt;script language=\"JavaScript\"&gt;\n&lt;!--\nfunction findhead1()\n{\n    var tag, tags;\n    // or you can use var allElem=document.all; and loop on it\n    tags = \"The tags in the page are:\"\n    for(i = 0; i &lt; document.all.length; i++)\n    {\n        tag = document.all(i).tagName;\n        tags = tags + \"\\r\" + tag;\n    }\n    document.write(tags);\n}\n\n//  --&gt;\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onload=\"findhead1()\"&gt;\n&lt;h1&gt;Heading One&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>UPDATE:EDIT</strong></p>\n\n<p>since my last answer i found better simpler solution</p>\n\n<pre><code>function search(tableEvent)\n    {\n        clearResults()\n\n        document.getElementById('loading').style.display = 'block';\n\n        var params = 'formAction=SearchStocks';\n\n        var elemArray = document.mainForm.elements;\n        for (var i = 0; i &lt; elemArray.length;i++)\n        {\n            var element = elemArray[i];\n\n            var elementName= element.name;\n            if(elementName=='formAction')\n                continue;\n            params += '&amp;' + elementName+'='+ encodeURIComponent(element.value);\n\n        }\n\n        params += '&amp;tableEvent=' + tableEvent;\n\n\n        createXmlHttpObject();\n\n        sendRequestPost(http_request,'Controller',false,params);\n\n        prepareUpdateTableContents();//function js to handle the response out of scope for this question\n\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Was looking for same. Well, not exactly. I only wanted to list all DOM Nodes.</p>\n\n<pre><code>var currentNode,\n    ni = document.createNodeIterator(document.documentElement, NodeFilter.SHOW_ELEMENT);\n\nwhile(currentNode = ni.nextNode()) {\n    console.log(currentNode.nodeName);\n}\n</code></pre>\n\n<p>To get elements with a specific class, we can use filter function.</p>\n\n<pre><code>var currentNode,\n    ni = document.createNodeIterator(\n                     document.documentElement, \n                     NodeFilter.SHOW_ELEMENT,\n                     function(node){\n                         return node.classList.contains('toggleable') ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT;\n                     }\n         );\n\nwhile(currentNode = ni.nextNode()) {\n    console.log(currentNode.nodeName);\n}\n</code></pre>\n\n<p>Found solution on\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document.createNodeIterator\" rel=\"nofollow\">MDN</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm trying to loop over ALL elements on a page, so I want to check every element that exists on this page for a special class.</p>\n\n<p>So, how do I say that I want to check EVERY element?</p>\n",
            "last_activity_date": 1412300548,
            "question_id": 4256339,
            "score": 27,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "Javascript: How to loop through ALL DOM elements on a page?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>Update:</strong> In the past few years the landscape has changed drastically.  You can now reliably use <code>querySelector</code> and <code>querySelectorAll</code>, see <a href=\"http://stackoverflow.com/a/16775485/13249\">Wojtek's answer</a> for how to do this.  </p>\n\n<p>There's no need for a jQuery dependency now.  If you're using jQuery, great...if you're not, you need not rely it on just for selecting elements by attributes anymore.</p>\n\n<hr>\n\n<p>There's not a very short way to do this in vanilla javascript, but there are some solutions available.</p>\n\n<p><a href=\"http://snipplr.com/view/1853/get-elements-by-attribute/\">You do something like this, looping through elements and checking the attribute</a></p>\n\n<p>If a library like <a href=\"http://jquery.com/\">jQuery</a> is an option, you can do it a bit easier, like this:</p>\n\n<pre><code>$(\"[myAttribute=value]\")\n</code></pre>\n\n<p>You can also do <code>start-with</code>, <code>ends-with</code>, <code>contains</code>, etc...<a href=\"http://api.jquery.com/category/selectors/attribute-selectors/\">there are several options for the attribute selector</a>.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Modern browsers support native <code>querySelectorAll</code> so you can do: </p>\n\n<pre><code>document.querySelectorAll(\"[data-foo=value]\");\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document.querySelectorAll\">https://developer.mozilla.org/en-US/docs/Web/API/Document.querySelectorAll</a></p>\n\n<p>Details about browser compatibility:</p>\n\n<ul>\n<li><a href=\"http://quirksmode.org/dom/core/#t14\">http://quirksmode.org/dom/core/#t14</a></li>\n<li><a href=\"http://caniuse.com/queryselector\">http://caniuse.com/queryselector</a></li>\n</ul>\n\n<p>You can use jQuery to support obsolete browsers (IE9 and older):</p>\n\n<pre><code>$(\"[data-foo=value]\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p>example:</p>\n\n<pre><code>findByAttributeValue(\"href\",\"something_value_you_need\");\n</code></pre>\n\n<p>but at first, define this function:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction findByAttributeValue(attribute, value)\n{\n  var allElements = document.getElementsByTagName('*');\n  for (var i = 0; i &lt; allElements.length; i++)\n   {\n    if (allElements[i].getAttribute(attribute) == value)\n    {\n      return allElements[i];\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>source: <a href=\"http://www.stephanmuller.nl/element-attribute-plain-javascript/\" rel=\"nofollow\">http://www.stephanmuller.nl/element-attribute-plain-javascript/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Can you please tell me if there is any DOM API which search for an element with given attribute name and attribute value:</p>\n\n<p>Something like:</p>\n\n<pre><code>doc.findElementByAttribute(\"myAttribute\", \"aValue\");\n</code></pre>\n",
            "last_activity_date": 1412098671,
            "question_id": 2694640,
            "score": 23,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "Find an element in DOM based on an attribute value"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I think the best way is to layer the same image over itself a few times and test different positioning and opacities on the overlayed ones.</p>\n\n<p>Here's the CSS that I came up with. Keep in mind I'm using the <code>nth-child</code> CSS3 selector (but you don't seem to have an issue with that):</p>\n\n<pre><code>img {\n    width:300px;\n    height:300px;\n    position:absolute;\n    opacity:0.2;\n}\n\n.container {\n    position:relative;\n    overflow:hidden;\n    width:300px;\n    height:300px;\n}\n\nimg:nth-child(1) {\n    opacity:1;   \n}\n\nimg:nth-child(2) {\n    left:2px;\n    top:2px;\n}\n\nimg:nth-child(3) {\n    left:-2px;\n    top:-2px;\n}\n\nimg:nth-child(4) {\n    left:-1px;\n    top:-1px;\n}\n\nimg:nth-child(5) {\n    left:1px;\n    top:1px;\n}\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"container\"&gt;\n    &lt;img src=\"...\"&gt;\n    &lt;img src=\"...\"&gt;\n    &lt;img src=\"...\"&gt;\n    &lt;img src=\"...\"&gt;\n    &lt;img src=\"...\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/purmou/jXm33/\">The result</a> is pretty promising.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>CSS does not have the ability to blur, besides techniques with <code>text-shadow</code> and <code>box-shadow</code>. But even with these, borders and images aren't able to be blurred.</p>\n\n<p><a href=\"http://www.pixastic.com/\" rel=\"nofollow\">This JavaScript library</a>, however, can handle images.</p>\n\n<p>Also, you may find this <a href=\"http://css-tricks.com/1820-blurry-background-effect/\" rel=\"nofollow\">technique</a> interesting. It's a neat illusion using pre-fabricated blurry images.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I saw a cool tutorial today about blurring content with CSS <code>box-shadow</code>s, <code>text-shadow</code>s, opacity, and color.</p>\n\n<p>Here's the demo: <a href=\"http://tympanus.net/Tutorials/ItemBlur/\">http://tympanus.net/Tutorials/ItemBlur/</a></p>\n\n<p>And the tutorial: <a href=\"http://tympanus.net/codrops/2011/12/14/item-blur-effect-with-css3-and-jquery/\">http://tympanus.net/codrops/2011/12/14/item-blur-effect-with-css3-and-jquery/</a></p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Webkit has a property called <code>-webkit-filter</code> that allows for the techniques of blurring: <code>-webkit-filter: blur(15px);</code></p>\n\n<p><a href=\"http://jsfiddle.net/danielfilho/KxWRA/\">http://jsfiddle.net/danielfilho/KxWRA/</a></p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>You can simply add this to your css, for an image:</p>\n\n<p>In the following example, you'll be using a blur with 5 pixels of radius. And it is <strong>extremely important</strong> to use all vendor prefixes available, so it works on all browsers with this feature implemented, untile it comes to a \"stable\" version.</p>\n\n<pre><code>img{\n  -webkit-filter: blur(5px);\n  -moz-filter: blur(5px);\n  -ms-filter: blur(5px);\n  -o-filter: blur(5px);\n  filter: blur(5px);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>With CSS3 we can easily adjust an image. But remember this does not change the image. It only displays the adjusted image.</p>\n\n<p>See live demo and complete source code here</p>\n\n<p><a href=\"http://purpledesign.in/blog/adjust-an-image-using-css3-html5/\" rel=\"nofollow\">http://purpledesign.in/blog/adjust-an-image-using-css3-html5/</a></p>\n\n<p>See the following code for more details.</p>\n\n<p>To make an image gray:</p>\n\n<pre><code>img {\n -webkit-filter: grayscale(100%);\n -moz-filter: grayscale(100%);\n}\n</code></pre>\n\n<p>To give a sepia look:</p>\n\n<pre><code>    img {\n     -webkit-filter: sepia(100%);\n    -moz-filter: sepia(100%);\n}\n</code></pre>\n\n<p>To adjust brightness:</p>\n\n<pre><code> img {\n     -webkit-filter: brightness(50%);\n     -moz-filter: brightness(50%);  \n  }\n</code></pre>\n\n<p>To adjust contrast:</p>\n\n<pre><code> img {\n     -webkit-filter: contrast(200%);\n     -moz-filter: contrast(200%);    \n}\n</code></pre>\n\n<p>To Blur an image:</p>\n\n<pre><code>    img {\n     -webkit-filter: blur(10px);\n    -moz-filter: blur(10px);\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had to pretty thoroughly research this problem not too long ago and came up with an extremely flexible solution, though it may be overkill for some people's needs. I needed not only blurred images, but also a dynamic blur radius, overlay color, and overlay opacity for various kinds of images. I also needed to have the option of just blurring an image in a background with other elements overlayed on top of it. Here's the best cross-browser (and performant) solution I was able to create.</p>\n\n<p>First, I'd have an SVG on hand, uninspiringly called <code>blur.svg</code>. It applies a blur filter and if you look closely, the <code>stdDeviation</code> (which sets the blur radius) is actually set programmatically from a passed in parameter to the URL requesting the asset.</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;\n&lt;svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"&gt;\n&lt;filter id=\"blur\"&gt;\n&lt;feGaussianBlur stdDeviation=\"#{params[:blur]}\" /&gt;\n&lt;/filter&gt;\n&lt;/svg&gt;\n</code></pre>\n\n<p>Then I had an SCSS mixin that would allow one to add a blur overlay to any wrapper, with a customizable blur radius, overlay color, and overlay opacity.</p>\n\n<pre><code>@mixin background_blurred($blur_radius:4, $overlay_color:white, $overlay_opacity:0.6) {\n  position: relative;\n  .background_blurred {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    filter: url('blur.svg#blur?blur=#{$blur_radius}');\n    filter: progid:DXImageTransform.Microsoft.Blur(PixelRadius='#{$blur_radius}');\n    transform: translateZ(0);\n    &amp;:after {\n      content: '';\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      top: 0;\n      left: 0;\n      background: $overlay_color;\n      opacity: $overlay_opacity;\n    }\n  }\n  .foreground {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 2;\n  }\n}\n</code></pre>\n\n<p>You may be wondering why I included a <code>transform: translateZ(0);</code>. The only effect that has is to force hardware acceleration on the render to keep things performant. You may also be wondering why there are no vendor prefixes. You can look up things like <code>filter</code> on <a href=\"http://caniuse.com/#feat=css-filters\" rel=\"nofollow\">CanIUse</a> if you want, but I used <a href=\"https://github.com/postcss/autoprefixer\" rel=\"nofollow\">autoprefixer</a> on this project to worry about that stuff for me. And of course, why filter using this SVG, rather than with something like <code>blur(4px)</code>? Wouldn't that be easier? It would, but Firefox (as of writing) only supports the <code>filter</code> property with a URL.</p>\n\n<p>Then you can apply the blur mixin to a wrapper class:</p>\n\n<pre><code>.my_wrapper_class {\n  @include background_blurred(3, #f9f7f5, 0.7);\n}\n</code></pre>\n\n<p>Notice that for this method, we have to use a class with a custom background set in a style attribute instead of an image tag with a src. You can tweak the background position and override the background size to your liking.</p>\n\n<pre><code>&lt;div class=\"my_wrapper_class\"&gt;\n  &lt;div class=\"background_blurred\" style=\"background: url('URL OF IMAGE TO BLUR') no-repeat; background-position: 50% 0;\"&gt;&lt;/div&gt;\n  &lt;div class=\"foreground\"&gt;\n    &lt;p&gt;Stuff that should appear above the blurred background and not be blurred.&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><strong>Is it possible to apply a blur to an HTML element(div &amp; img)?</strong></p>\n\n<p>I am developing solely for the iPad so cross-browser compatibility is not an issue &amp; I can use HTML5 CSS3 techniques.</p>\n\n<p>I know how to blur text but this CSS doesn't blur the actual HTML element or its border:</p>\n\n<pre><code>text-shadow: 0 0 8px #000;\ncolor: transparent;\n</code></pre>\n\n<p>I googled this but it doesn't blur the image in my browsers:</p>\n\n<pre><code>filter: blur(strength=50);\n</code></pre>\n",
            "last_activity_date": 1415809512,
            "question_id": 8514954,
            "score": 22,
            "tags": [
                "javascript",
                "html",
                "css",
                "css3"
            ],
            "title": "Blur Img&#39;s &amp; Div&#39;s in HTML using CSS"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The way google docs does it is by embedding JavaScript into the PDF that tells Acrobat Reader or any other compliant reader to print it.</p>\n\n<p>You would need a PDF toolkit to do this with a random PDF.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Do you mean that you want to force the file to be sent to a printer? Are you thinking of the Law of Unintended Consequences -- the user's device isn't connected to a printer? Could be a BlackBerry, could be a laptop on wi-fi. What if the user doesn't want it to go to the default printer? </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>you can set a http header to application/pdf and then force a new window open with javascript and print that way.  but who would really do that? i mean come on now.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>&lt;html&gt;\n&lt;script language=\"javascript\"&gt;\ntimerID = setTimeout(\"exPDF.print();\", 1000);\n&lt;/script&gt;\n&lt;body&gt;\n&lt;object id=\"exPDF\" type=\"application/pdf\" data=\"111.pdf\" width=\"100%\" height=\"500\"/&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>similarly to taeyoung's suggestion you can use an iframe to render the pdf and then use contentWindow.print();</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can't print a PDF document directly from browser using Javascript.\nThe Javascript function window.print() use the browser printing function and this is not what you need.\nYou can achieve your aim starting the print through Java Web Start.\nPut your PDF document directly into the jnlp so you can run a Java program that recieve the raw PDF document as argument.\nNow you're running in the system and no longer in the browser, so you can directly interface with printing driver through JAVA API.\nThis seem quite simple but really it's not because the JAVA printing API doesn't accept a file as input but a particular data structure that implements the ava.awt.print.Pageable interface.</p>\n\n<p>Exist a web service at <a href=\"http://www.pdfprint.it\" rel=\"nofollow\">www.pdfprint.it</a> that do all the work for you.\nHere a snippet taken from the official documentation. </p>\n\n<pre><code>&lt;?php\n\n// 1. GET the jnlp file with curl\n\n$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, \"http://www.pdfprint.it/printPdf?auth=XXXX\");        \ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); //return the transfer as a string       \n$jnlp = curl_exec($ch);\ncurl_close($ch); \n\n$pdfDoc =\"example.pdf\";\n\n\n//2. put in the jnlp your PDF document base64 encoded\n\n$jnlp = str_replace(\"####\", base64_encode(file_get_contents($pdfDoc)),$jnlp);\n\n\n//3. echo the jnlp file \n\nheader('Content-type: application/x-java-jnlp-file');\n\necho $jnlp;\n</code></pre>\n\n<p>You only need to get the jnlp file, put in your PDF document and send the jnlp to the browser. \nThe JAVA program that run the printing will be dowloaded directly from the web service.\nYou can also set some printing options as copies, sides, and so on</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In a Web application, is it possible to force a PDF file to be printed on the client? If the browser is configured to open the PDF inside the window, I guess that calling window.print() will work, but some browsers (like mine) are configured to open the PDF externally.</p>\n",
            "last_activity_date": 1425081335,
            "question_id": 205180,
            "score": 20,
            "tags": [
                "javascript",
                "html",
                "pdf"
            ],
            "title": "How to print a PDF from the browser"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>alert(\"${variable}\");\n</code></pre>\n\n<p>or</p>\n\n<pre><code>alert(\"&lt;%=var%&gt;\");\n</code></pre>\n\n<p>or full example</p>\n\n<pre><code>&lt;html&gt; \n&lt;head&gt;\n&lt;script language=\"javascript\"&gt; \n\nfunction access(){ \n  &lt;% String str=\"Hello World\"; %&gt;\n   var s=\"&lt;%=str%&gt;\"; \n   alert(s); \n} \n\n&lt;/script&gt; \n&lt;/head&gt; \n\n&lt;body onload=\"access()\"&gt; \n&lt;/body&gt; \n\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<pre><code>   &lt;% String s=\"Hi\"; %&gt;\n   var v =\"&lt;%=s%&gt;\"; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Assuming you are talking about JavaScript in an HTML document.</p>\n\n<p>You can't do this directly since, as far as the JSP is concerned, it is outputting text, and as far as the page is concerned, it is just getting an HTML document.</p>\n\n<p>You have to generate JavaScript code to instantiate the variable, <strong>taking care to escape any characters with special meaning</strong> in JS. If you just dump the data (as proposed by some other answers) you will find it falling over when the data contains new lines, quote characters and so on.</p>\n\n<p>The simplest way to do this is to use a JSON library (there are a bunch listed at the bottom of <a href=\"http://json.org/\">http://json.org/</a> ) and then have the JSP output:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var myObject = &lt;%= the string output by the JSON library %&gt;;\n&lt;/script&gt;\n</code></pre>\n\n<p>This will give you an object that you can access like:</p>\n\n<pre><code>myObject.someProperty\n</code></pre>\n\n<p>in the JS.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The cleanest way, as far as I know:</p>\n\n<ol>\n<li>add your JSP variable to an HTML element's data-* attribute</li>\n<li>then read this value via Javascript when required</li>\n</ol>\n\n<p>My opinion regarding the current solutions on this SO page: reading \"directly\" JSP values using java scriplet inside actual javascript code is probably the most disgusting thing you could do. Makes me wanna puke. haha. Seriously, try to not do it.</p>\n\n<p>The HTML part without JSP:</p>\n\n<pre><code>&lt;body data-customvalueone=\"1st Interpreted Jsp Value\" data-customvaluetwo=\"another Interpreted Jsp Value\"&gt;\n    Here is your regular page main content\n&lt;/body&gt;\n</code></pre>\n\n<p>The HTML part when using JSP:</p>\n\n<pre><code>&lt;body data-customvalueone=\"${beanName.attrName}\" data-customvaluetwo=\"${beanName.scndAttrName}\"&gt;\n    Here is your regular page main content\n&lt;/body&gt;\n</code></pre>\n\n<p>The javascript part (using jQuery for simplicity):</p>\n\n<pre><code>&lt;script type=\"text/JavaScript\" src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    jQuery(function(){\n        var valuePassedFromJSP = $(\"body\").attr(\"data-customvalueone\");\n        var anotherValuePassedFromJSP = $(\"body\").attr(\"data-customvaluetwo\");\n\n        alert(valuePassedFromJSP + \" and \" + anotherValuePassedFromJSP + \" are the values passed from your JSP page\");\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>And here is the jsFiddle to see this in action <a href=\"http://jsfiddle.net/6wEYw/2/\" rel=\"nofollow\">http://jsfiddle.net/6wEYw/2/</a></p>\n\n<p><strong>Resources:</strong></p>\n\n<ul>\n<li>HTML 5 data-* attribute: <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_data_attributes\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_data_attributes</a></li>\n<li>Include javascript into html file <a href=\"http://stackoverflow.com/questions/4593682/include-javascript-file-in-html-wont-work-as-script\">Include JavaScript file in HTML won&#39;t work as &lt;script .... /&gt;</a></li>\n<li>CSS selectors (also usable when selecting via jQuery) <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_started/Selectors\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_started/Selectors</a></li>\n<li>Get an HTML element attribute via jQuery <a href=\"http://api.jquery.com/attr/\" rel=\"nofollow\">http://api.jquery.com/attr/</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>First of all java  script is client side scripting language while jsp is server side language you cant access, process any variable of client side language at server side without sending request to server\nonly after request received at server you are able to access client side language variables \nso there is only way to go through request</p>\n\n<p>another thing is that \"How to send these variable to server\"\nthere is two option...\nEither use hidden field\n\nOr user window.location object of js......</p>\n\n<pre><code>`window.location.replace(\"home.jsp?nm=\"+v);`\n`&lt;%String name=request.getParameter(\"nm\");%&gt;`\n\nwindow.location.href(\"home.jsp?nm=\"+v);\n&lt;%String name=request.getParameter(\"v\");%&gt;\n</code></pre>\n\n<p>then you are able to access client side data at  jsp</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I read/access a JSP variable from JavaScript?</p>\n",
            "last_activity_date": 1416892233,
            "question_id": 4803906,
            "score": 17,
            "tags": [
                "java",
                "javascript",
                "jsp"
            ],
            "title": "Reading a JSP variable from JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.netimpact.com/\">NetImpact</a> provide a free API for geolocation lookup by IP, ProgrammableWeb also has a <a href=\"http://blog.programmableweb.com/2009/03/31/3-free-ways-to-geolocate-by-ip/\">roundup</a> of GeoIP lookup providers. This involves a small amount of latency while your application completes an API call (unless your application can use a non-blocking call) but is the least intrusive manner of detecting a visitor's country of origin.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p><a href=\"http://www.iplocationtools.com/samples.html\" rel=\"nofollow\">http://www.iplocationtools.com/samples.html</a> also presents a good set of apis to do this. I have used their system before and they were quite reliable.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The browser header just tells you what <strong>language</strong> the user wants to see. A Spanish-speaking person on a business trip to Japan probably wants to see websites in Spanish.</p>\n\n<p>I think you can use reverse-IP services to make a guess, but if it's for commerce purposes I think you have to <strong>ask</strong> the user to tell you.</p>\n\n<p>Similarly with geo-location: the physical position of the computer may or may not be relevant to the needs of the user browsing the site.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Have a look at this page on the Google Maps API: <a href=\"http://code.google.com/apis/maps/documentation/javascript/basics.html#DetectingUserLocation\" rel=\"nofollow\">http://code.google.com/apis/maps/documentation/javascript/basics.html#DetectingUserLocation</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/2574542/location-detecting-tecniques-for-ip-addresses\">Location detecting tecniques for IP addresses</a>  </p>\n</blockquote>\n\n\n\n<p>For our website it's important to know from exactly which country our visitor is coming from.</p>\n\n<p>I guess the best answer for my question would be the simple geo location feature of current browser systems, which just ask the user if the website is allowed to see his geographic location: <a href=\"http://dev.w3.org/geo/api/spec-source.html\">http://dev.w3.org/geo/api/spec-source.html</a></p>\n\n<p>but i don't want want to bother visitor with questions, i would love to automatically detects the visitor's location (country should be enough.)</p>\n\n<p>What's the best way to do this?\n- what ip database would be the best?\n- is the browser header trustable enough to detect his country? (en-us en-en en-ca?)\nWhat's the best solution?</p>\n",
            "last_activity_date": 1352296301,
            "question_id": 4179000,
            "score": 17,
            "tags": [
                "php",
                "javascript",
                "geolocation",
                "location"
            ],
            "title": "best way to detect country / location of visitor?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>jQuery Mobile natively provides us with the ability to capture the swipeleft and swiperight. It does not however offer us swipeup and swipedown out of the box. Adapting what the jQuery team has done for swipeleft and swiperight, we are able to create and capture those events in the same manner. See the following code to implement swipeup and swipedown:</p>\n\n<pre><code>(function() {\n    var supportTouch = $.support.touch,\n            scrollEvent = \"touchmove scroll\",\n            touchStartEvent = supportTouch ? \"touchstart\" : \"mousedown\",\n            touchStopEvent = supportTouch ? \"touchend\" : \"mouseup\",\n            touchMoveEvent = supportTouch ? \"touchmove\" : \"mousemove\";\n    $.event.special.swipeupdown = {\n        setup: function() {\n            var thisObject = this;\n            var $this = $(thisObject);\n            $this.bind(touchStartEvent, function(event) {\n                var data = event.originalEvent.touches ?\n                        event.originalEvent.touches[ 0 ] :\n                        event,\n                        start = {\n                            time: (new Date).getTime(),\n                            coords: [ data.pageX, data.pageY ],\n                            origin: $(event.target)\n                        },\n                        stop;\n\n                function moveHandler(event) {\n                    if (!start) {\n                        return;\n                    }\n                    var data = event.originalEvent.touches ?\n                            event.originalEvent.touches[ 0 ] :\n                            event;\n                    stop = {\n                        time: (new Date).getTime(),\n                        coords: [ data.pageX, data.pageY ]\n                    };\n\n                    // prevent scrolling\n                    if (Math.abs(start.coords[1] - stop.coords[1]) &gt; 10) {\n                        event.preventDefault();\n                    }\n                }\n                $this\n                        .bind(touchMoveEvent, moveHandler)\n                        .one(touchStopEvent, function(event) {\n                    $this.unbind(touchMoveEvent, moveHandler);\n                    if (start &amp;&amp; stop) {\n                        if (stop.time - start.time &lt; 1000 &amp;&amp;\n                                Math.abs(start.coords[1] - stop.coords[1]) &gt; 30 &amp;&amp;\n                                Math.abs(start.coords[0] - stop.coords[0]) &lt; 75) {\n                            start.origin\n                                    .trigger(\"swipeupdown\")\n                                    .trigger(start.coords[1] &gt; stop.coords[1] ? \"swipeup\" : \"swipedown\");\n                        }\n                    }\n                    start = stop = undefined;\n                });\n            });\n        }\n    };\n    $.each({\n        swipedown: \"swipeupdown\",\n        swipeup: \"swipeupdown\"\n    }, function(event, sourceEvent){\n        $.event.special[event] = {\n            setup: function(){\n                $(this).bind(sourceEvent, $.noop);\n            }\n        };\n    });\n\n})();\n</code></pre>\n\n<p>and here is the answer from <a href=\"http://developingwithstyle.blogspot.com/2010/11/jquery-mobile-swipe-up-down-left-right.html\">Blackdynamo</a></p>\n",
                    "is_accepted": true,
                    "score": 30
                }
            ],
            "body": "<p>I'm trying to make event on swiping up and down  instead of left and right</p>\n\n<p>i have this roll as image shows:\n<img src=\"http://i.stack.imgur.com/KPCmG.png\" alt=\"how to make swipe top down\"></p>\n\n<p>I can handle the event using arrow icon (onClick()) but i want to add swipe up down event,\nwhen adding swipe event it works on left right\nI want it up down as image displays\nany help?</p>\n",
            "last_activity_date": 1371375031,
            "question_id": 17131815,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "html5",
                "jquery-mobile"
            ],
            "title": "How to swipe top down JQuery mobile"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>$('&lt;img src=\"'+ imgPaht +'\"&gt;').load(function() {\n  $(this).width(some).height(some).appendTo('#some_target');\n});\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/thecodeparadox/QStkd/116/\">DEMO</a></strong></p>\n\n<p>If you want to do for several images then:</p>\n\n<pre><code>function loadImage(path, width, height, target) {\n    $('&lt;img src=\"'+ path +'\"&gt;').load(function() {\n      $(this).width(width).height(height).appendTo(target);\n    });\n}\n</code></pre>\n\n<p>Use:</p>\n\n<pre><code>loadImage(imgPaht, 800, 800, '#some_target');\n</code></pre>\n\n<p><strong>NOTE:</strong> <code>imgPaht</code> shoud <code>imgPath</code>.. but in OP's code that is <code>imgPaht</code>.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>after you get the image path, try either of following ways</p>\n\n<ol>\n<li><p>(as you need to set more attr than just the src)\nbuild the html and replace to the target region</p>\n\n<pre><code>$('#target_div').html('&lt;img src=\"'+ imgPaht +'\" width=100 height=100 alt=\"Hello Image\" /&gt;');\n</code></pre></li>\n<li><p>you may need to add some delay if changing the \"SRC\" attr</p>\n\n<pre><code>setTimeout(function(){///this function fire after 1ms delay\n      $('#target_img_tag_id').attr('src',imgPaht);\n}, 1);\n</code></pre></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I imagine that you define your image something like this:</p>\n\n<pre><code>&lt;img id=\"image_portrait\" src=\"\" alt=\"chef etat\"  width=\"120\" height=\"135\"  /&gt;\n</code></pre>\n\n<p>You can simply load/update image for this tag and chage/set atts (width,height):</p>\n\n<pre><code>var imagelink;\nvar height;\nvar width;\n$(\"#image_portrait\").attr(\"src\", imagelink);\n$(\"#image_portrait\").attr(\"width\", width);\n$(\"#image_portrait\").attr(\"height\", height);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>var img = new Image();\n\n$(img).load(function(){\n\n  $('.container').append($(this));\n\n}).attr({\n\n  src: someRemoteImage\n\n}).error(function(){\n  //do something if image cannot load\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is the code I use when I want to preload images before appending them to the page.</p>\n\n<p>It is also important to check if the image is already loaded from the cache (for IE).</p>\n\n<pre><code>    //create image to preload:\n    var imgPreload = new Image();\n    $(imgPreload).attr({\n        src: photoUrl\n    });\n\n    //check if the image is already loaded (cached):\n    if (imgPreload.complete || imgPreload.readyState === 4) {\n\n        //image loaded:\n        //your code here to insert image into page\n\n    } else {\n        //go fetch the image:\n        $(imgPreload).load(function (response, status, xhr) {\n            if (status == 'error') {\n\n                //image could not be loaded:\n\n            } else {\n\n                //image loaded:\n                //your code here to insert image into page\n\n            }\n        });\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I'm trying to load an image from a given link </p>\n\n<p><code>var imgPaht = $(imgLink).attr('href');</code></p>\n\n<p>and append it to the page, so I can <strong>insert it into a given element</strong> for an image viewer. \nEven though I searched <em>Stackoverflow</em> and the <em>jQuery</em> docs without end, I can't figure it out.</p>\n\n<p>After I load the image, I want to set <strong>different values to it, like width, height</strong>, etc.</p>\n\n<p><strong>Update:</strong></p>\n\n<p>This is what I got. The problem I'm having is that I can't run jQuery functions on the <code>img</code> element.</p>\n\n<pre><code>function imagePostition(imgLink) {\n\n// Load the image we want to display from the given &lt;a&gt; link       \n// Load the image path form the link\nvar imgPaht = $(imgLink).attr('href');\n\n// Add image to html\n$('&lt;img src=\"'+ imgPaht +'\" class=\"original\"&gt;').load(function() {\n\n    $(imgLink).append(this);\n\n    var img = this;\n\n    // Resize the image to the window width\n    // http://stackoverflow.com/questions/1143517/jquery-resizing-image\n\n    var maxWidth = $(window).width();       // window width\n    var maxHeight = $(window).height();     // window height\n    var imgWidth = img.width;               // image width\n    var imgHeight = img.height;             // image height\n    var ratio = 0;                          // resize ration\n    var topPosition = 0;                    // top image position\n    var leftPostition = 0;                  // left image postiton\n\n    // calculate image dimension\n\n    if (imgWidth &gt; maxWidth) {\n        ratio = imgHeight / imgWidth;\n        imgWidth = maxWidth;\n        imgHeight = (maxWidth * ratio);\n    }\n    else if (imgHeight &gt; maxHeight) {\n        ratio = imgWidth / imgHeight;\n        imgWidth = (maxHeight * ratio);\n        imgHeight = maxHeight;\n    }\n\n    // calculate image position\n\n    // check if the window is larger than the image\n    // y position\n    if(maxHeight &gt; imgHeight) {\n        topPosition = (maxHeight / 2) - (imgHeight / 2);\n    }\n    // x position\n    if(maxWidth &gt; imgWidth) {\n        leftPostition = (maxWidth / 2) - (imgWidth / 2);\n    }\n\n    $(imgLink).append(img);\n\n    // Set absolute image position\n    img.css(\"top\", topPosition);\n    img.css(\"left\", leftPostition);\n\n    // Set image width and height\n    img.attr('width', imgWidth);\n    img.attr('height', imgHeight);  \n\n    // Add backdrop\n    $('body').prepend('&lt;div id=\"backdrop\"&gt;&lt;/div&gt;');\n\n    // Set backdrop size\n    $(\"#backdrop\").css(\"width\", maxWidth);\n    $(\"#backdrop\").css(\"height\", maxHeight);\n\n    // reveal image\n    img.animate({opacity: 1}, 100)\n    img.show()\n\n});\n\n};\n</code></pre>\n",
            "last_activity_date": 1392535994,
            "question_id": 10863658,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "image"
            ],
            "title": "Load image with jQuery and append it to the DOM"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you record the scrollX and scrollY on page load and each time a scroll event occurs, then you can compare the previous values with the new values to know which direction you scrolled.  Here's a proof of concept:</p>\n\n<pre><code>function scrollFunc(e) {\n    if ( typeof scrollFunc.x == 'undefined' ) {\n        scrollFunc.x=window.pageXOffset;\n        scrollFunc.y=window.pageYOffset;\n    }\n    var diffX=scrollFunc.x-window.pageXOffset;\n    var diffY=scrollFunc.y-window.pageYOffset;\n\n    if( diffX&lt;0 ) {\n        // Scroll right\n    } else if( diffX&gt;0 ) {\n        // Scroll left\n    } else if( diffY&lt;0 ) {\n        // Scroll down\n    } else if( diffY&gt;0 ) {\n        // Scroll up\n    } else {\n        // First scroll event\n    }\n    scrollFunc.x=window.pageXOffset;\n    scrollFunc.y=window.pageYOffset;\n}\nwindow.onscroll=scrollFunc\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>I had trouble making this work in ie8 (although it is compliant for ie9, FF and Chrome) - all scrolls seem to be detected as horizontal. </p>\n\n<p>Here is a modified script <a href=\"http://jsfiddle.net/deborah/2d7Ct/\" rel=\"nofollow\">demo</a> that also works in ie8 and may cover a few more browsers.</p>\n\n<pre><code>function scrollFunc(e) {\n\n   function getMethod() {\n        var x = 0, y = 0;\n        if ( typeof( window.pageYOffset ) == 'number' ) {\n          x = window.pageXOffset;\n          y = window.pageYOffset;\n        } \n\n        else if( document.body &amp;&amp; (document.body.scrollLeft || document.body.scrollTop ) ) {\n          x = document.body.scrollLeft;\n          y = document.body.scrollTop;\n        } \n\n        else if( document.documentElement &amp;&amp; (document.documentElement.scrollLeft ||     document.documentElement.scrollTop ) ) {\n          x = document.documentElement.scrollLeft;\n          y = document.documentElement.scrollTop;\n        }\n\n         return [x, y];\n    }\n\n    var xy = getMethod();            \n    var xMethod = xy[0];           \n    var yMethod = xy[1];\n\n    if ( typeof scrollFunc.x == 'undefined' ) {\n       scrollFunc.x = xMethod;\n       scrollFunc.y = yMethod;\n    }\n\n    var diffX = scrollFunc.x - xMethod;\n    var diffY = scrollFunc.y - yMethod;\n\n\n    if( diffX&lt;0 ) {\n       // Scroll right\n    } else if( diffX&gt;0 ) {\n       // Scroll left\n    } else if( diffY&lt;0 ) {\n       // Scroll down\n    } else if( diffY&gt;0 ) {\n       // Scroll up\n    } else {\n       // First scroll event\n    }\n    scrollFunc.x = xMethod;\n    scrollFunc.y = yMethod;\n}\n\nwindow.onscroll=scrollFunc\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>With jquery, you can also register a custom scroll event which supplies the scroll change as an argument to the event handler:</p>\n\n<pre><code>var previous_scroll = $(window).scrollTop();\n\n$(window).on('scroll', function() {\n    var scroll = $(window).scrollTop(),\n        scroll_change = scroll - previous_scroll;\n    previous_scroll = scroll;\n    $(window).trigger('custom_scroll', [scroll_change]);\n});\n</code></pre>\n\n<p>Then instead of <code>scroll</code>, bind to <code>custom_scroll</code>:</p>\n\n<pre><code>$(window).on('custom_scroll', function pos(e, scroll_change) {\n    console.log(scroll_change);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Can one use Window.Onscroll method to include detection of scroll direction?</p>\n",
            "last_activity_date": 1409571614,
            "question_id": 1222915,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "Can one use Window.Onscroll method to include detection of scroll direction?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Internally, <code>.bind</code> maps directly to <code>.on</code> in the current version of jQuery. (The same goes for <code>.live</code>.) So there is a tiny but practically insignificant performance hit if you use <code>.bind</code> instead.</p>\n\n<p>However, <code>.bind</code> may be removed from future versions at any time. There is no reason to keep using <code>.bind</code> and every reason to prefer <code>.on</code> instead.</p>\n",
                    "is_accepted": true,
                    "score": 77
                },
                {
                    "body": "<p>From the jQuery documentation: </p>\n\n<blockquote>As of jQuery 1.7, the .on() method is the preferred method for attaching event handlers to a document. For earlier versions, the .bind() method is used for attaching an event handler directly to elements. Handlers are attached to the currently selected elements in the jQuery object, so those elements must exist at the point the call to .bind() occurs. For more flexible event binding, see the discussion of event delegation in .on() or .delegate().    \n</blockquote>\n\n<p><a href=\"http://api.jquery.com/bind/\" rel=\"nofollow\">http://api.jquery.com/bind/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you look in the source code for <code>$.fn.bind</code> you will find that it's just an rewrite function for <code>on</code>:</p>\n\n<pre><code>function (types, data, fn) {\n    return this.on(types, null, data, fn);\n}\n</code></pre>\n\n<p><a href=\"http://james.padolsey.com/jquery/#v=1.7.2&amp;fn=%24.fn.bind\" rel=\"nofollow\">http://james.padolsey.com/jquery/#v=1.7.2&amp;fn=$.fn.bind</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>These snippets all perform exactly the same thing:</p>\n\n<pre><code>element.on('click', function () { ... });\nelement.bind('click', function () { ... });\nelement.click(function () { ... });\n</code></pre>\n\n<p>However, they are very different from these, which all perform the same thing:</p>\n\n<pre><code>element.on('selector', 'click', function () { ... });\nelement.delegate('click', 'selector', function () { ... });\n$('selector').live('click', function () { ... });\n</code></pre>\n\n<p>The second set of event handlers use <a href=\"http://www.sitepoint.com/javascript-event-delegation-is-easier-than-you-think/\">event delegation</a> and will work for dynamically added elements. Event handlers that use delegation are also much more performant. The first set will not work for dynamically added elements, and are much worse for performance.</p>\n\n<p>jQuery's <code>on()</code> function does not introduce any new functionality that did not already exist, it is just an attempt to standardize event handling in jQuery (you no longer have to decide between live, bind, or delegate).</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>The direct methods and <code>.delegate</code> are superior APIs to <code>.on</code> and there is no intention of deprecating them.</p>\n\n<p>The direct methods are preferable because your code will be less stringly typed. You will get immediate error when you mistype an\nevent name rather than a silent bug. In my opinion, it's also easier to write and read <code>click</code> than <code>on(\"click\"</code></p>\n\n<p>The <code>.delegate</code> is superior to <code>.on</code> because of the argument's order:</p>\n\n<pre><code>$(elem).delegate( \".selector\", {\n\n\n    click: function() {\n\n    },\n\n    mousemove: function() {\n\n    },\n\n\n    mouseup: function() {\n\n    },\n\n\n    mousedown: function() {\n\n    }\n\n\n\n\n\n});\n</code></pre>\n\n<p>You know right away it's delegated because, well, it says delegate. You also instantly see the selector.</p>\n\n<p>With <code>.on</code> it's not immediately clear if it's even delegated and you have to look at the end for the selector:</p>\n\n<pre><code>$(elem).on({\n\n\n    click: function() {\n\n    },\n\n    mousemove: function() {\n\n    },\n\n\n    mouseup: function() {\n\n    },\n\n\n    mousedown: function() {\n\n    }\n\n\n\n\n\n}, \"selector\" );\n</code></pre>\n\n<p>Now, the naming of <code>.bind</code> is really terrible and is at face value worse than <code>.on</code>. But <code>.delegate</code> cannot do non-delegated events and there \nare events that don't have a direct method, so in a rare case like this it could be used but only because you want to make a clean separation between delegated and non-delegated events. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Performance test</p>\n\n<p><a href=\"http://jsperf.com/bind-vs-click/12\" rel=\"nofollow\">http://jsperf.com/bind-vs-click/12</a></p>\n\n<p><a href=\"http://jsperf.com/jquery-delegate-vs-live-table-test/2\" rel=\"nofollow\">http://jsperf.com/jquery-delegate-vs-live-table-test/2</a></p>\n\n<p><a href=\"http://jsperf.com/jquery-live-vs-jquery-delegate/15\" rel=\"nofollow\">http://jsperf.com/jquery-live-vs-jquery-delegate/15</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I found two great articles talking about the new function .on().</p>\n\n<p><a href=\"http://www.jquery4u.com/jquery-functions/on-vs-live-review/#.UCEUoKPrFI0\">http://www.jquery4u.com/jquery-functions/on-vs-live-review/#.UCEUoKPrFI0</a></p>\n\n<p><a href=\"http://www.elijahmanor.com/2012/02/differences-between-jquery-bind-vs-live.html\">http://www.elijahmanor.com/2012/02/differences-between-jquery-bind-vs-live.html</a></p>\n\n<p>Is there any ways where the .bind() still be better to use than .on()?</p>\n\n<p>For example: I have a sample code that look like that: </p>\n\n<pre><code>$(\"#container\").click( function( e ) {} )\n</code></pre>\n\n<p>You can note that I just have one item retrieved by the selector and in my case, the div named #container already exist when my page was loaded; not added dynamically. It's important to mention that I use the latest version of jquery; 1.7.2.</p>\n\n<p>For that sample, is .on() should be used instead of .bind() even if I don't use the other features provided by the .on() function?</p>\n",
            "last_activity_date": 1344348078,
            "question_id": 11847021,
            "score": 43,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors"
            ],
            "title": "jquery .bind() vs. .on()"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>window.onload = function(){codeAddress();};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Are you running <code>window.onload = codeAddress</code> after <code>codeAddress()</code> is defined? If so, this should work. Are you sure there isn't an error elsewhere?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>window.onload = codeAddress;</code> should work - <a href=\"http://jsfiddle.net/NEfR2/\">here's a demo</a>, and the full code:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Test&lt;/title&gt;\n        &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n        &lt;script type=\"text/javascript\"&gt;\n        function codeAddress() {\n            alert('ok');\n        }\n        window.onload = codeAddress;\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<hr>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Test&lt;/title&gt;\n        &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n        &lt;script type=\"text/javascript\"&gt;\n        function codeAddress() {\n            alert('ok');\n        }\n\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body onload=\"codeAddress();\"&gt;\n\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 94
                },
                {
                    "body": "<p>Take a look at the <a href=\"https://github.com/cms/domready\" rel=\"nofollow\">domReady script</a> that allows setting up of multiple functions to execute when the DOM has loaded. It's basically what the Dom ready does in many popular JavaScript libraries, but is lightweight and can be taken and added at the start of your external script file.</p>\n\n<p>Example usage </p>\n\n<pre><code>// add reference to domReady script or place \n// contents of script before here\n\nfunction codeAddress() {\n\n}\n\ndomReady(codeAddress);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Taking Darin's answer but jQuery style. (I know the user asked for javascript).</p>\n\n<p><a href=\"http://jsfiddle.net/NEfR2/\">running fiddle</a></p>\n\n<pre><code>$(document).ready ( function(){\n   alert('ok');\n});\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Rather than using jQuery or window.onload, native JavaScript has adopted some great functions since the release of jQuery. All modern browsers now have their own DOM ready function without the use of a jQuery library. </p>\n\n<p>I'd recommend this if you use native Javascript.</p>\n\n<pre><code>document.addEventListener('DOMContentLoaded', function() {\n    alert(\"Ready!\");\n}, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I want to run a function when the page is loaded, but I dont want to use it in the body tag.</p>\n\n<p>I have a script that runs if I initialise it in the body -like this:</p>\n\n<pre><code>function codeAddress() {\n code.....\n}\n\n&lt;body onLoad=\"codeAddress()\"&gt;\n</code></pre>\n\n<p>But I want to run it without the body onLoad=\"codeAddress()\" and I have tryed a lot of things, eg this:</p>\n\n<pre><code>window.onload = codeAddress;\n</code></pre>\n\n<p>but it is not working?</p>\n\n<p>So how do I run it when the page is loaded?\nThanks!</p>\n",
            "last_activity_date": 1411424854,
            "question_id": 4842590,
            "score": 41,
            "tags": [
                "javascript",
                "onload"
            ],
            "title": "run function when page is loaded"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><em>Both AND and OR operators can shortcut.</em></p>\n\n<p>So <code>&amp;&amp;</code> only tries the second expression if the first is true (truth-like, more specifically).  The fact that the second operation does stuff (whatever the contents of <code>foo()</code> does) doesn't matter because it's not executed <strong>unless</strong> that first expression evaluates to something truthy.  If it is truthy, it then <strong>will</strong> be executed in order to try the second test.</p>\n\n<p>Conversely, if the first expression in an <code>||</code> statement is true, the second doesn't get touched.  This is done because the whole statement can already be evaluated, the statement will result in true regardless of the outcome of the second expression, so it will be ignored and remain unexecuted.</p>\n\n<p>The cases to watch out for when using shortcuts like this, of course, are the cases with operators where defined variables still evaluate to falsy values (e.g. <code>0</code>), and truthy ones (e.g. <code>'zero'</code>).</p>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>In javascript, the <code>&amp;&amp;</code> operator evaluates left to right and returns the value of the rightmost operation. If the first condition evaluates to false, it doesn't evaluate the second. So its a shorthand of saying \"<em>if something is not null or undefined, do something</em>\"</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is known as <a href=\"http://en.wikipedia.org/wiki/Short-circuit_evaluation\" rel=\"nofollow\">short-circuit evaluation</a>.</p>\n\n<p>In this case, if <code>x</code> is False, then <code>foo()</code> doesn't need to be evaluated (the result of <code>&amp;&amp;</code> will always be False); if <code>x</code> is True, it does need to be evaluated (even if the result is thrown away).</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>It is short circuiting.</p>\n\n<p>The <code>&amp;&amp;</code> operator works like this: It does the logical or of the two operands on both side. If the left hand side has a non zero value then the right hand side is evaluated to determine the truth value. If the left hand side is zero then whatever the right hand side be, the expression will evaluate to 0, therefore the right hand side is <em>not</em> evaluated. So in effect, if <code>x</code> is non-zero then only <code>foo</code> is called, and if <code>x</code> is 0 then <code>foo</code> is not called, and thus, it works like <code>if - else</code> in this case.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It's not exactly equivalent. The first one is an expression with a return value you can use; the second one is a statement.</p>\n\n<p>If you are not interested in the return value (that is, the information whether both <code>x</code> and <code>foo()</code> evaluate to a truthy value), they are equivalent, but normally, you should use the boolean-logic version only if you want to use it as a boolean expression, e.g.:</p>\n\n<pre><code>if (x &amp;&amp; foo()) {\n    do_stuff();\n}\n</code></pre>\n\n<p>If you are only interested in running <code>foo()</code> conditionally (when x is truthy), the second form is to be preferred, since it conveys the intention more clearly.</p>\n\n<p>A reason people might prefer the boolean-logic version might be that javascript is subject to an unusual restriction: source code size (more verbose source code means more bandwidth used); since the boolean-logic version uses less characters, it is more bandwidth-efficient. I'd still prefer the more verbose version most of the time, unless the script in question is used a lot - for a library like jQuery, using optimizations like this is perfectly justifyable, but in most other cases it's not.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I saw <a href=\"http://stackoverflow.com/questions/4340655/difference-between-if-x-foo-and-x-foo-0\">somewhere</a> else said,</p>\n\n<p><code>x &amp;&amp; foo();</code></p>\n\n<p>\u3000is equal to</p>\n\n<pre><code>if(x){\n    foo();\n}\n</code></pre>\n\n<p>I tested it and they really did the same thing.<br>\nBut why? What exactly is <code>x &amp;&amp; foo()</code>?</p>\n",
            "last_activity_date": 1425303467,
            "question_id": 6970346,
            "score": 38,
            "tags": [
                "javascript"
            ],
            "title": "What is &quot;x &amp;&amp; foo()&quot;?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Because JavaScript actually passes objects by pass-by-<strong>copy</strong>-reference.</p>\n\n<p>When you pass <code>my_obj</code> into your <code>test</code> function, a <strong>copy</strong> of a reference to that object is passed in.  As a result, when you re-assign the object in <code>test</code>, you're really only re-assigning a <em>copy of</em> a reference to the original object; your original <code>my_obj</code> remains un-changed. </p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>If you are familiar with pointers, that's an analogy you can take. You're actually passing a pointer, so <code>obj.someProperty</code> would dereference to that property and actually override that, while merely overriding <code>obj</code> would kill off the pointer and not overwrite the object.</p>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>Because you are overwriting the reference, not the object.</p>\n\n<pre><code>// Create a new object and assign a reference to it\n// to the variable my_obj\nvar my_obj = { name: 'foo' };\n\n// Pass the reference to the test function\ntest(my_obj);\n\n// Assign the reference to a variable called obj\n// (since that is the first argument)\nfunction test(obj) {\n// Create a new (empty) object and assign a reference to it to obj\n// This replaces the existing REFERENCE\n    obj = {};\n}\n// my_obj still has a reference to the original object, \n// because my_obj wasn't overwritten\nalert(my_obj.name); // foo\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Javascript lacks support for passing by reference (although objects are passed by reference and the reference is maintained as long as it is not overwrited with assignment eg. using <code>=</code>), but you can imitate <code>ref</code> keyword of C# using the following technique:</p>\n\n<pre><code>function test(obj) {\n  obj.Value = {};\n  //obj.Value = {name:\"changed\"};\n}\n\nvar my_obj = { name: 'foo' };\n\n(function ()\n{\n  my_obj = {Value: my_obj};\n  var $return = test(my_obj);\n  my_obj = my_obj.Value;\n  return $return;\n}).call(this);\n\nalert(my_obj.name); // undefined, as expected\n                    // In the question this returns \"foo\" because\n                    // assignment causes dereference\n</code></pre>\n\n<p>Of course you can use globals and call function without arguments, in which case the references are not missed like this:</p>\n\n<pre><code>var obj = { name: 'foo' };\nfunction test() {\n    obj = {};\n}\ntest();\nalert(obj.name); // undefined\n</code></pre>\n\n<p>If you have all your code in closure, then things are simpler and above like globals doesn't pollute global namespace:</p>\n\n<pre><code>(function(){\n    var obj = { name: 'foo' };\n    function test() {\n        obj = {};\n    }\n    test();\n    alert(obj.name); // undefined\n}).call(this);\n</code></pre>\n\n<p>The above \"globals inside closure\" -technique is nice if you have to port to Javascript some C# code which has <code>ref</code> arguments. Eg. The following C# code:</p>\n\n<pre><code>void MainLoop()\n{\n   // ...\n   MyStruct pt1 = CreateMyStruct(1);\n   MyStruct pt2 = CreateMyStruct(2);\n   SwapPoints(ref pt1, ref pt2);\n   // ...\n}\nvoid SwapPoints(ref MyStruct pt1, ref MyStruct pt2)\n{\n    MyStruct tmp = pt1;\n    pt1 = pt2;\n    pt2 = tmp;\n}\n</code></pre>\n\n<p>could be ported to Javascript using something like:</p>\n\n<pre><code>(function(){\n    var pt1, pt2;\n    function CreateMyStruct(myvar)\n    {\n      return {\"myvar\":myvar}  \n    }\n    function MainLoop()\n    {\n       // ...\n       pt1 = CreateMyStruct(1);\n       pt2 = CreateMyStruct(2);\n       console.log(\"ORIG:\",pt1,pt2); \n       SwapPoints(); \n       console.log(\"SWAPPED:\",pt1,pt2);\n       // ...\n    }\n    function SwapPoints()\n    {\n        var tmp = pt1;\n        pt1 = pt2;\n        pt2 = tmp;\n    }\n    MainLoop();\n\n}).call(this);\n</code></pre>\n\n<p>or if it's essential to use local variables and function arguments, then solution can be based on the first example of my answer like this:</p>\n\n<pre><code>(function(){\n    function CreateMyStruct(myvar)\n    {\n      return {\"myvar\":myvar}  \n    }\n    function MainLoop()\n    {\n      // ...\n      var pt1 = CreateMyStruct(1);\n      var pt2 = CreateMyStruct(2);\n      console.log(\"ORIG:\",pt1,pt2); \n\n      (function ()\n      {\n        pt1 = {Value: pt1};\n        pt2 = {Value: pt2};\n        var $return = SwapPoints(pt1, pt2);\n        pt1 = pt1.Value;\n        pt2 = pt2.Value;\n        return $return;\n      }).call(this);\n\n      console.log(\"SWAPPED:\",pt1,pt2);\n      // ...\n    }\n    function SwapPoints(pt1, pt2)\n    {\n      var tmp = pt1.Value;\n      pt1.Value = pt2.Value;\n      pt2.Value = tmp;\n    }\n    MainLoop();\n}).call(this);\n</code></pre>\n\n<p>Really have to say that Javascript lacks much when it has not native <code>ref</code>! The code would be much simpler.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I know that in JS, objects are passed by reference, for example:</p>\n\n<pre><code>function test(obj) {\n    obj.name = 'new name';\n}\n\nvar my_obj = { name: 'foo' };\ntest(my_obj);\nalert(my_obj.name); // new name\n</code></pre>\n\n<p>But why doesn't the below work:</p>\n\n<pre><code>function test(obj) {\n    obj = {};\n}\n\nvar my_obj = { name: 'foo' };\ntest(my_obj);\nalert(my_obj.name); // foo\n</code></pre>\n\n<p>I have set the object to <code>{}</code> (empty) but it still says <code>foo</code>.</p>\n\n<p>Can any one explain the logic behind this?</p>\n",
            "last_activity_date": 1417980405,
            "question_id": 9437981,
            "score": 37,
            "tags": [
                "javascript",
                "pass-by-reference"
            ],
            "title": "Why isn&#39;t this object being passed by reference when assigning something else to it?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>var title = \"This is your title\";\n\nvar shortText = jQuery.trim(title).substring(0, 10)\n    .split(\" \").slice(0, -1).join(\" \") + \"...\";\n</code></pre>\n\n<ul>\n<li><a href=\"http://jsfiddle.net/AxyXr/243/\">Tested here</a></li>\n</ul>\n\n<p>And you can also use a plugin:</p>\n\n<ul>\n<li><a href=\"http://plugins.learningjquery.com/expander/\">jQuery Expander Plugin</a></li>\n</ul>\n\n<p>As a extension of String</p>\n\n<pre><code>String.prototype.trimToLength = function(m) {\n  return (this.length &gt; m) \n    ? jQuery.trim(this).substring(0, m).split(\" \").slice(0, -1).join(\" \") + \"...\"\n    : this;\n};\n</code></pre>\n\n<p>Use as</p>\n\n<pre><code>\"This is your title\".trimToLength(10);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 79
                },
                {
                    "body": "<p>The solution above won't work if the original string has no spaces.</p>\n\n<p>Try this:</p>\n\n<pre><code>var title = \"This is your title\";\nvar shortText = jQuery.trim(title).substring(0, 10)\n                          .trim(this) + \"...\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>This is my solution:\n<a href=\"https://gist.github.com/ChrisCinelli/5688048\" rel=\"nofollow\">https://gist.github.com/ChrisCinelli/5688048</a></p>\n\n<p>The function <code>truncText(text, maxLength, ellipseText)</code> truncates a paragraph to maxLength characters. It does not break words. ellipseText is optional (default: &hellip; ). It will not work on characters that are not a letter A-Z or number. It backtracks until there is a space and add the ellipseText. It's plain javascript, jQuery is optonal.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I wrote a tiny jQuery plugin that does exactly this: <a href=\"http://micjamking.github.io/succinct/\" rel=\"nofollow\">http://micjamking.github.io/succinct/</a></p>\n\n<p>It handles the edge case addressed above (strings with undefined lengths) and also provides options for max length, omission text (default: ellipsis (...)), and ignore lines ending with special characters.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>  function truncateString(str, length) {\n     return str.length &gt; length ? str.substring(0, length - 3) + '...' : str\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>I have long titles and want truncate them but in a way that no words break, I mean the cutting happen between words not cutting a word.</p>\n\n<p>How can I do it using jquery?</p>\n",
            "last_activity_date": 1398768640,
            "question_id": 4637942,
            "score": 37,
            "tags": [
                "javascript",
                "jquery",
                "string"
            ],
            "title": "How Can I Truncate A String In jQuery?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Both will work but xhtml standard requires you to specify the <code>type</code> too:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;..&lt;/script&gt; \n\n&lt;!ELEMENT SCRIPT - - %Script;          -- script statements --&gt;\n&lt;!ATTLIST SCRIPT\n  charset     %Charset;      #IMPLIED  -- char encoding of linked resource --\n  type        %ContentType;  #REQUIRED -- content type of script language --\n  src         %URI;          #IMPLIED  -- URI for an external script --\n  defer       (defer)        #IMPLIED  -- UA may defer execution of script --\n  &gt;\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>type = content-type [CI]\n      This attribute specifies the scripting language of the element's\n  contents and overrides the default\n  scripting language. The scripting\n  language is specified as a content\n  type (e.g., \"text/javascript\").\n  <strong>Authors must supply a value for this\n  attribute. There is no default value\n  for this attribute.</strong></p>\n</blockquote>\n\n<p>Notices the emphasis above.</p>\n\n<p><a href=\"http://www.w3.org/TR/html4/interact/scripts.html\" rel=\"nofollow\">http://www.w3.org/TR/html4/interact/scripts.html</a></p>\n\n<p><strong>Note:</strong> As of HTML5 (far away), the <code>type</code> attribute is not required and is default.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You need to use <code>&lt;script type=\"text/javascript\"&gt; &lt;/script&gt;</code> unless you're using html5. In that case you are encouraged to prefer <code>&lt;script&gt; ...  &lt;/script&gt;</code> (because type attribute is specified by default to that value)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><code>&lt;script type=\"text/javascript\"&gt;&lt;/script&gt;</code> because its the right way and compatible with all browsers</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Do you need a type attribute at all? If you're using HTML5, no. Otherwise, yes. HTML 4.01 and XHTML 1.0 specifies the <code>type</code> attribute as required while HTML5 has it as optional, defaulting to <code>text/javascript</code>. HTML5 is usable today and parts of it are becoming widely implemented, so if you use the HTML5 doctype, <code>&lt;script&gt;&lt;/script&gt;</code> is valid. </p>\n\n<p>As to what should go in the type attribute, the MIME type <code>application/javascript</code> registered in 2006 is intended to replace <code>text/javascript</code> and is supported by current versions of all the major browsers (including Internet Explorer 9). A quote from <a href=\"http://www.rfc-editor.org/rfc/rfc4329.txt\">the relevant RFC</a>:</p>\n\n<blockquote>\n  <p>This document thus defines text/javascript and text/ecmascript but marks them as \"obsolete\".  Use of experimental and unregistered media types, as listed in part above, is discouraged.  The media types,</p>\n\n<pre><code>  * application/javascript\n  * application/ecmascript\n</code></pre>\n  \n  <p>which are also defined in this document, are intended for common use and should be used instead.</p>\n</blockquote>\n\n<p>However, IE up to and including version 8 doesn't execute script inside a <code>&lt;script&gt;</code> element with a <code>type</code> attribute of either <code>application/javascript</code> or <code>application/ecmascript</code>, so these are both unusable for the foreseeable future and we're stuck with <code>text/javascript</code>.</p>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>This is all that is needed:</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;script src=\"/path.js\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Which is better or more convenient to use:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;...&lt;/script&gt; \n</code></pre>\n\n<p>or </p>\n\n<pre><code>&lt;script&gt;...&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1395044427,
            "question_id": 4243577,
            "score": 34,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Which is better: &lt;script type=&quot;text/javascript&quot;&gt;...&lt;/script&gt; or &lt;script&gt;...&lt;/script&gt;"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>This is a little known \"Quirk\" that has been out for a while.  I know some people have resolved it in various ways.</p>\n\n<p>The easiest bypass in my opinion is to simply have a second input that isn't displayed to the user.  Granted not all that user friendly on the backend, it does work to resolve the issue.</p>\n\n<p>I should note that the most common place that I hear of this issue is with IE specifically and not with FireFox or others.  Although it does seem to affect them as well.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>It's not reloading the page as such, it's submitting the form.</p>\n\n<p>However, in this example because you have no action attribute on the form it submits to itself which gives the impression of reloading the page.</p>\n\n<p>Also, I can't repro the behaviour you describe. If I am in any text input in a form and I press Enter it submits the form, no matter where in the form the input is located or how many inputs there are.</p>\n\n<p>You might want to try this out some more in different browsers.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is a <a href=\"https://connect.microsoft.com/IE/feedback/ViewFeedback.aspx?FeedbackID=389736\">known bug in IE6/7/8</a>. It doesn't appear that you will get a fix for it.</p>\n\n<p>The best workaround you can do for this, is to add another hidden field (if your engineering conscience permits). IE will no longer auto-submit a form when it finds that there are two input-type fields in the form.</p>\n\n<p><strong>Update</strong></p>\n\n<p>In case you were wondering why this is the case, this gem comes straight out of the <a href=\"http://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.2\">HTML 2.0 specification (Section 8.2)</a>:</p>\n\n<blockquote>\n  <p>When there is only one single-line text input field in a form, the\n  user agent should accept Enter in that field as a request to submit\n  the form.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Pressing Enter works differently depending on (a) how many fields there are and (b) how many submit buttons there are. It may do nothing, it may submit the form with no 'successful' submit button, or it may pretend the first submit button was clicked (even generating an onclick for it!) and submit with that button's value.</p>\n\n<p>For example, if you add an <code>input type=\"submit\"</code> to your two-field form, you'll notice it too submits.</p>\n\n<p>This is an ancient browser quirk going back at least as far as early Netscape (maybe further), which is unlikely to be changed now.</p>\n\n<blockquote>\n  <p>&lt;form></p>\n</blockquote>\n\n<p>Invalid without an \u2018action\u2019. If you don't intend to submit anywhere, and you don't need radio button name grouping, you could just completely omit the form element.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Thanks to everyone who answered. It's an eye opener that a form with a single field acts differently then a form with many fields.</p>\n\n<p>Another way to deal with this automatic submit, is to code a submit function that returns false. </p>\n\n<p>In my case I had a button with an onclick event, so I moved the function call with the added <code>return</code> keyword to the onsubmit event. If the function called returns false the submit won't happen.</p>\n\n<pre><code>&lt;form onsubmit=\"return ajaxMagic()\"&gt;\n&lt;input type=\"text\" name=\"partid\" id=\"partid\"  /&gt;\n&lt;input type=\"submit\" value=\"Find Part\" /&gt;\n&lt;/form\n\nfunction ajaxMagic() {\n  ...\n  return (false);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is the code that I used would use to solve the problem:</p>\n\n<pre><code>&lt;form&gt;\n&lt;input type=\"text\" name=\"partid\" id=\"partid\"  /&gt;\n&lt;input type=\"text\" name=\"StackOverflow1370021\" value=\"Fix IE bug\" style=\"{display:none}\" /&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The solution I found for all of the browsers that I tested (IE, FF, Chrome, Safari, Opera) is that the first input <code>type=submit</code> element on the form has to be visible and has to be the first element in the form.  I was able to use CSS placement to move the submit button to the bottom of the page and it did not affect the results!</p>\n\n<pre><code>&lt;form id=\"form\" action=\"/\"&gt;\n&lt;input type=\"submit\" value=\"ensures-the-enter-key-submits-the-form\"\n                      style=\"width:1px;height:1px;position:fixed;bottom:1px;\"/&gt;\n&lt;div id=\"header\" class=\"header\"&gt;&lt;/div&gt;\n&lt;div id=\"feedbackMessages\" class=\"feedbackPanel\"&gt;&lt;/div&gt;\n     ...... lots of other input tags, etc...\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>as vineet already said, this is rooted in the html 2.0 specification:</p>\n\n<p>here is how to prevent this from happening without screwing up your urls:</p>\n\n<pre><code>&lt;form&gt;\n    &lt;input type=\"text\" name=\"partid\" id=\"partid\"  /&gt;\n    &lt;input type=\"text\" style=\"display: none;\" /&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This problem occurs in both IE and Chrome.\nIt does not occur on Firefox.\nA simple solution would be to add the following attribute to the form tag:\nonsubmit=\"return false\"</p>\n\n<p>That is, of course, assuming that you submit the form using an XMLHttpRequest object.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yes, form with a single inputText field working as different in HTML 4.<br>\nonSubmit return false not working for me but the below fix bug is working fine</p>\n\n<pre><code>&lt;!--Fix  IE6/7/8 and  HTML 4 bug --&gt;\n    &lt;input style=\"display:none;\" type=\"text\" name=\"StackOverflow1370021\" value=\"Fix IE bug\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I handled this by the following code but I am not sure if this a good approach.\nBy looking for input fields in a given form and if its 1 prevent the default action.</p>\n\n<pre><code> if($j(\"form#your-form input[type='text']\").length == 1) {\n   $j(this).bind(\"keypress\", function(event) {\n     if(event.which == 13) {\n       event.preventDefault();\n     }\n   });\n }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think that's a feature, which I did also disable it though. It's not taking big effort to disable it. Just capture the enter key, ignore it, will do.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Why is it that a form with a single input field will reload the form when the user enters a value and presses the Enter key, and it does not if there are 2 or more fields in the form.\nI wrote a simple page to test this oddity.</p>\n\n<p>If you enter a value in the second form and press Enter, you'll see it reloads the page passing the entered value as if you called GET. why? and how do I avoid it?</p>\n\n<p><a href=\"http://testformenter.html?partid=123\">http://testformenter.html?partid=123</a></p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;title&gt;testFormEnter&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;form&gt;\n  &lt;input type=\"text\" name=\"partid2\" id=\"partid2\" /&gt;\n  &lt;input type=\"text\" name=\"partdesc\" id=\"partdesc\"  /&gt;\n&lt;/form&gt;\n  &lt;p&gt;2 field form works fine&lt;/p&gt;\n&lt;form&gt;\n&lt;input type=\"text\" name=\"partid\" id=\"partid\"  /&gt;\n&lt;/form&gt;\n&lt;p&gt;One field form reloads page when you press the Enter key why&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1405552103,
            "question_id": 1370021,
            "score": 34,
            "tags": [
                "javascript",
                "html",
                "forms"
            ],
            "title": "ENTER key on a FORM with a single Input Field, will automatically SUBMIT with GET"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>They're both ways of getting past the ambiguity in the grammar. Neither is more \"hacky\" than the other. It's just a style choice.</p>\n\n<p>You could also do this:</p>\n\n<pre><code>0 + function( $ ) {\n  // ...\n} ( window.jQuery || window.ender );\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>parseInt(function( $ ) {\n  // ...\n} ( window.jQuery || window.ender ) );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<ul>\n<li>One less character when minified. </li>\n<li>The <code>!</code> should handle where other JavaScript code is concatenated before this and doesn't have a trailing semi-colon.</li>\n</ul>\n\n<p>There is not a huge difference. I would use whatever you were more comfortable with. You should probably toss something at the start of your example to avoid...</p>\n\n<h3>base.js</h3>\n\n<pre><code>var lol = function() {\n   alert(arguments[0]);\n}\n</code></pre>\n\n<h3>im-concat-to-base.js</h3>\n\n<pre><code>(function() {\n    // Irrelevant.\n})();\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/sb7gr/\">jsFiddle</a>.</p>\n\n<p>Toss in a leading <code>;</code> and she works...</p>\n\n<p><a href=\"http://jsfiddle.net/hmvtN/\">jsFiddle</a>.</p>\n\n<p>...or a <code>!</code> like the Twitter Bootstrap...</p>\n\n<p><a href=\"http://jsfiddle.net/tCU4G/\">jsFiddle</a>.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Instead of the evaluation step of <code>!undefined</code> you could also use the <code>void</code> operator to remove the ambiguity:</p>\n\n<pre><code>void function($) {\n     ...\n}(window.jQuery || window.ender);\n</code></pre>\n\n<p>Has a kind of C quality to it ;-)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>While reviewing some of the code written in the Twitter Bootstrap Javascript, it looks like they're calling immediately invoked anonymous functions like this:</p>\n\n<pre><code>!function( $ ) {\n\n     ...\n\n}(window.jQuery || window.ender);\n</code></pre>\n\n<p>Where I've traditionally seen this same thing accomplished this way:</p>\n\n<pre><code>(function($) {\n\n    ...\n\n})(window.jQuery || window.ender);\n</code></pre>\n\n<p>The first way seems a bit hacky, and I'm not sure if there is any benefit or reason for doing it this way rather than the second way?  <strong>Note that I understand how it works, I'm looking to understand  why they chose that way to do it.</strong></p>\n",
            "last_activity_date": 1366854934,
            "question_id": 8305915,
            "score": 26,
            "tags": [
                "javascript",
                "twitter-bootstrap"
            ],
            "title": "!function(){ }() vs (function(){ })()"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It's creating a function and then calling itself with the parent function/objects scope.</p>\n\n<p>.call and .apply are different methods of invoking a function. You basically created a function that does nothing except set a=1 within its own scope.</p>\n\n<p>In javascript you need to realize that every function is a object, and <code>this</code> is what refers to the current object/function. Using <code>.call(this)</code> overrides <code>this</code> from within the function and replaces it with the one from the calling context.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>It's a way to make sure that the compiled CoffeeScript has its own scope for variable names. This has benefits in terms of efficiency and simplicity (you know you the generated JavaScript won't stomp on variables used by other code). You can disable it with the <code>--bare</code> (or <code>-b</code>) option to the CoffeeScript compiler.</p>\n\n<p>The reason for the <code>call(this)</code> is just to ensure that the CoffeeScript has the same <code>this</code> as the scope where it's placed, because functions don't normally inherit their <code>this</code> object from the surrounding context.</p>\n",
                    "is_accepted": false,
                    "score": 30
                }
            ],
            "body": "<p>When I use the latest (1.0) release of coffee-script, a simple javascript output looks like this (by default):</p>\n\n<pre><code>(function() {\n  var a;\n  a = 1;\n}).call(this);\n</code></pre>\n\n<p>What does <strong>.call(this)</strong> do and what would be the reason to add it?</p>\n",
            "last_activity_date": 1329016728,
            "question_id": 4542942,
            "score": 26,
            "tags": [
                "javascript",
                "coffeescript"
            ],
            "title": "Why use the javascript function wrapper (added in coffeescript) &quot;.call(this)&quot;"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I haven't looked into minification so far, but this behaviour could be accomplished using a simple regular expression:</p>\n\n<pre><code>s/;;;.*//g\n</code></pre>\n\n<p>This replaces everything in a line after (and including) three semicolons with nothing, so it's discarded before minifying. You can run <code>sed</code> (or a similar tool) before running your minification tool, like this:</p>\n\n<pre><code>sed 's/;;;.*//g' &lt; infile.js &gt; outfile.js\n</code></pre>\n\n<p>BTW, if you're wondering whether the packed version or the minified version will be 'better', read <a href=\"http://www.ericmmartin.com/comparison-of-javascript-compression-methods/\" rel=\"nofollow\">this comparison of JavaScript compression methods</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A good solution in this case might be <a href=\"http://code.google.com/p/js-build-tools/\">js-build-tools</a> which supports 'conditional compilation'.</p>\n\n<p>In short you can use comments such as</p>\n\n<pre><code>// #ifdef debug\nvar trace = debug.getTracer(\"easyXDM.Rpc\");\ntrace(\"constructor\");\n// #endif\n</code></pre>\n\n<p>where you define a pragma such as <code>debug</code>.</p>\n\n<p>Then when building it (it has an ant-task)</p>\n\n<pre><code>//this file will not have the debug code\n&lt;preprocess infile=\"work/easyXDM.combined.js\" outfile=\"work/easyXDM.js\"/&gt;\n//this file will        \n&lt;preprocess infile=\"work/easyXDM.combined.js\" outfile=\"work/easyXDM.debug.js\" defines=\"debug\"/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here's what I use with Closure Compiler. First, you need to define a DEBUG variable like this:</p>\n\n<pre><code>/** @define {boolean} */\nvar DEBUG = true;\n</code></pre>\n\n<p>It's using the JS annotation for closure, which you can read about <a href=\"http://code.google.com/closure/compiler/docs/js-for-compiler.html\">in the documentation</a>.</p>\n\n<p>Now, whenever you want some debug-only code, just wrap it in an if statement, like so:</p>\n\n<pre><code>if (DEBUG) {\n  console.log(\"Running in DEBUG mode\");\n}\n</code></pre>\n\n<p>When compiling your code for release, add the following your compilation command: <code>--define='DEBUG=false'</code> -- any code within the debug statement will be completely left out of the compiled file.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>If you use the Closure Compiler in Advanced mode, you can do something like:</p>\n\n<pre><code>if (DEBUG) console.log = function() {}\n</code></pre>\n\n<p>Then the compiler will remove all your console.log calls.  Of course you need to <code>--define</code> the variable <code>DEBUG</code> in the command line.</p>\n\n<p>However, this is only for <em>Advanced mode</em>. If you are using Simple mode, you'll need to run a preprocessor on your source file.</p>\n\n<p>Why not consider the Dojo Toolkit?  It has built-in comment-based pragma's to include/exclude sections of code based on a build.  Plus, it is compatible with the Closure Compiler in Advanced mode (see link below)!</p>\n\n<p><a href=\"http://dojo-toolkit.33424.n3.nabble.com/file/n2636749/Using_the_Dojo_Toolkit_with_the_Closure_Compiler.pdf?by-user=t\" rel=\"nofollow\">http://dojo-toolkit.33424.n3.nabble.com/file/n2636749/Using_the_Dojo_Toolkit_with_the_Closure_Compiler.pdf?by-user=t</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>here's the (ultimate) answer for closure compiler :</p>\n\n<pre><code>/** @const */\nvar LOG = false;\n...\nLOG &amp;&amp; log('hello world !'); // compiler will remove this line\n...\n</code></pre>\n\n<p>this will even work with <code>SIMPLE_OPTIMIZATIONS</code> and no <code>--define=</code> is necessary !</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>I've used following self-made stuf:</p>\n\n<pre><code>// Uncomment to enable debug messages\n// var debug = true;\n\nfunction ShowDebugMessage(message) {\n    if (debug) {\n        alert(message);\n    }\n}\n</code></pre>\n\n<p>So when you've declared variable <code>debug</code> which is set to <code>true</code> - all <code>ShowDebugMessage()</code> calls would call <code>alert()</code> as well. So just use it in a code and forget about in place conditions like <code>ifdef</code> or manual commenting of the debug output lines.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Even though its an old question. I stumbled upon the same issue today and found that it can be achieved using <a href=\"http://closure-compiler.googlecode.com/svn/trunk/javadoc/com/google/javascript/jscomp/CompilerOptions.html\" rel=\"nofollow\">CompilerOptions</a>.</p>\n\n<p>I followed <a href=\"https://groups.google.com/group/closure-compiler-discuss/browse_thread/thread/aaa767ce2933a560?pli=1\" rel=\"nofollow\">this thread</a>.</p>\n\n<p>We run the compiler, from Java, on our server before sending the code to the client. This worked for us in Simple mode. </p>\n\n<pre><code>private String compressWithClosureCompiler(final String code) {\n    final Compiler compiler = new Compiler();\n    final CompilerOptions options = new CompilerOptions();\n    Logger.getLogger(\"com.google.javascript.jscomp\").setLevel(Level.OFF);\n    if (compressRemovesLogging) {\n        options.stripNamePrefixes = ImmutableSet.of(\"logger\");\n        options.stripNameSuffixes = ImmutableSet.of(\"debug\", \"dev\", \"info\", \"error\",\n                \"warn\", \"startClock\", \"stopClock\", \"dir\");\n    }\n    CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);\n\n    final JSSourceFile extern = JSSourceFile.fromCode(\"externs.js\", \"\");\n    final JSSourceFile input = JSSourceFile.fromCode(\"input.js\", code);\n    compiler.compile(extern, input, options);\n    return compiler.toSource();\n}\n</code></pre>\n\n<p>It will remove all the calls to logger.debug, logger.dev...etc.etc</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're using <a href=\"https://github.com/mishoo/UglifyJS2#compressor-options\" rel=\"nofollow\">UglifyJS2</a>, you can use the <strong>drop_console</strong> argument to remove console.* functions.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm looking into different ways to minify my javascript code including the regular JSMin, Packer, and YUI solutions. I'm really interested in the new <a href=\"http://code.google.com/closure/compiler/\">Google Closure Compiler</a>, as it looks exceptionally powerful. </p>\n\n<p>I noticed that <a href=\"http://dean.edwards.name/packer/\">Dean Edwards packer</a> has a feature to exclude lines of code that start with three semicolons. This is handy to exclude debug code. For instance:</p>\n\n<pre><code>;;;     console.log(\"Starting process\");\n</code></pre>\n\n<p>I'm spending some time cleaning up my codebase and would like to add hints like this to easily exclude debug code. In preparation for this, I'd like to figure out if this is the best solution, or if there are other techniques.</p>\n\n<p>Because I haven't chosen how to minify yet, I'd like to clean the code in a way that is compatible with whatever minifier I end up going with. So my questions are these:</p>\n\n<ol>\n<li><p>Is using the semicolons a standard technique, or are there other ways to do it? </p></li>\n<li><p>Is Packer the only solution that provides this feature? </p></li>\n<li><p>Can the other solutions be adapted to work this way as well, or do they have alternative ways of accomplishing this?</p></li>\n<li><p>I will probably start using Closure Compiler eventually. Is there anything I should do now that would prepare for it?</p></li>\n</ol>\n",
            "last_activity_date": 1421017777,
            "question_id": 2934509,
            "score": 25,
            "tags": [
                "javascript",
                "compression",
                "minify",
                "google-closure-compiler"
            ],
            "title": "Exclude debug javascript code during minification"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The interpreter may actually create a new function object with every iteration, if only because that function might be a closure that needs to capture the <em>current</em> value of any variable in its outer scope.</p>\n\n<p>That's why <code>JSLint</code> wants to scare you away from creating many anonymous functions in a tight loop.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Partially it depends on whether you're using a <em>function expression</em> or a <em>function declaration</em>. They're different things, they happen at different times, and they have a different effect on the surrounding scope. So let's start with the distinction.</p>\n\n<p>A function <em>expression</em> is a <code>function</code> production where you're using the result as a right-hand value&nbsp;&mdash; e.g., you're assigning the result to a variable or property, or passing it into a function as a parameter, etc. These are all function <em>expressions</em>:</p>\n\n<pre><code>setTimeout(function() { ... }, 1000);\n\nvar f = function() {  ... };\n\nvar named = function bar() { ... };\n</code></pre>\n\n<p>(Don't use that last one&nbsp;&mdash; which is called a <em>named function expression</em>&nbsp;&mdash; implementations have bugs, <a href=\"http://blog.niftysnippets.org/2010/09/double-take.html\">particularly IE</a>.)</p>\n\n<p>In contrast, this is a <em>function declaration</em>:</p>\n\n<pre><code>function bar() { ... }\n</code></pre>\n\n<p>It's stand-alone, you're not using the result as a right-hand value.</p>\n\n<p>The two main differences between them:</p>\n\n<ol>\n<li><p>Function expressions are evaluated where they're encountered in the program flow. Declarations are evaluated when control enters the containing scope (e.g., the containing function, or the global scope).</p></li>\n<li><p>The name of the function (if it has one) is defined in the containing scope for a function <em>declaration</em>. It is not for a function <em>expression</em> (barring browser bugs).</p></li>\n</ol>\n\n<p>Your anonymous functions are <em>function expressions</em>, and so barring the interpreter doing optimization (which it's free to do), they'll get recreated on each loop. So your use is fine if you think implementations will optimize, but breaking it out into a named function has other benefits and&nbsp;&mdash; importantly&nbsp;&mdash; doesn't cost you anything. Also, see <a href=\"http://stackoverflow.com/questions/3927054/jslint-error-dont-make-functions-within-a-loop-leads-to-question-about-javasc/3927255#3927255\">casablanca's answer</a> for a note about why the interpreter may not be <em>able</em> to optimize out recreating the function on each iteration, depending on how deeply it inspects your code.</p>\n\n<p>The bigger issue would be if you used a function <em>declaration</em> in a loop, the body of a conditional, etc.:</p>\n\n<pre><code>function foo() {\n    for (i = 0; i &lt; limit; ++i) {\n        function bar() { ... } // &lt;== Don't do this\n        bar();\n    }\n}\n</code></pre>\n\n<p>Technically, a close read of the spec's grammar shows it's <strong>invalid</strong> to do that, although virtually no implementation actually enforces that. What the implemenations <em>do</em> is varied and it's best to stay away from it.</p>\n\n<p>For my money, your best bet is to use a single function declaration, like this:</p>\n\n<pre><code>function foo() {\n    for (i = 0; i &lt; limit; ++i) {\n        bar();\n    }\n\n    function bar() {\n        /* ...do something, possibly using 'i'... */\n    }\n}\n</code></pre>\n\n<p>You get the same result, there's no possibility that an implementation will create a new function on every loop, you get the <a href=\"http://blog.niftysnippets.org/2010/03/anonymouses-anonymous.html\">benefit of the function having a name</a>, and you don't lose anything.</p>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>Boo to JSLint. It's like a blunt instrument on the head. A new function object is created each time <code>function</code> is encountered (it is a statement/expression, not declaration -- <strong>edit: this is a white lie. See T.J. Crowders answers</strong>). Usually this is done in a loop for a closure, etc. The bigger issue is creating <em>false closures</em>.</p>\n\n<p>For instance:</p>\n\n<pre><code>for (var i = 0; i &lt; 10; i++) {\n  setTimeout(function () {\n    alert(i)\n  }, 10)\n}\n</code></pre>\n\n<p>Will result in \"odd\" behavior. This isn't an issue with \"creating a function in a loop so much as not understanding the rules JS uses for variable scopes and closures (variables are not bound in closures, scopes -- execution contexts -- are).</p>\n\n<p>However, you may <em>want</em> to create a closure in a function. Consider this less-surprising code:</p>\n\n<pre><code>for (var i = 0; i &lt; 10; i++) {\n  setTimeout((function (_i) { \n    return function () {\n      alert(_i)\n    }\n  })(i), 10)\n}\n</code></pre>\n\n<p>Oh no! I still created a function!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<blockquote>\n  <p>Would a Javascript interpreter really create an instance of the function per iteration?</p>\n</blockquote>\n\n<p>It has to because it doesn't know if the function object will be modified elsewhere. Remember that functions are standard JavaScript objects, so they can have properties like any other object. When you do this:</p>\n\n<pre><code>card = $('&lt;div&gt;').bind('isPopulated', function (ev) { ... })\n</code></pre>\n\n<p>for all you know, <code>bind</code> could modify the object, for example:</p>\n\n<pre><code>function bind(str, fn) {\n  fn.foo = str;\n}\n</code></pre>\n\n<p>Clearly this would result in wrong behaviour if the function object was shared across all iterations.</p>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>I have some code that invokes anonymous functions within a loop, something like this pseudo example:</p>\n\n<pre><code>for (i = 0; i &lt; numCards; i = i + 1) {\n    card = $('&lt;div&gt;').bind('isPopulated', function (ev) {\n        var card = $(ev.currentTarget);\n        ....\n</code></pre>\n\n<p>JSLint reports the error 'Don't make functions within a loop.' I like to keep my code JSLint clean. I know I can move the anonymous function out of the loop and invoke it as a named function. That aside, here's my question:</p>\n\n<p>Would a Javascript interpreter really create an instance of the function per iteration? Or is there really only one function instance \"compiled\" and the same code is executed repeatedly?  That is, does the JSLint \"suggestion\" to move the function out of the loop actually affect the efficiency of the code?</p>\n",
            "last_activity_date": 1287037849,
            "question_id": 3927054,
            "score": 24,
            "tags": [
                "javascript",
                "jslint"
            ],
            "title": "JSlint error &#39;Don&#39;t make functions within a loop.&#39; leads to question about Javascript itself"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>The reason the solution you found on the internet is no working is because of the line that starts <code>var colCount</code>. The variable <code>mytable</code> only has two elements being <code>&lt;thead&gt;</code> and <code>&lt;tbody&gt;</code>. The <code>var colCount</code> line is looking for all the elements within <code>mytable</code> that are <code>&lt;tr&gt;</code>. The best thing you can do is give an id to your <code>&lt;thead&gt;</code> and <code>&lt;tbody&gt;</code> and then grab all the values based on that. Say you had <code>&lt;thead id='headers'&gt;</code> : </p>\n\n<pre><code>function write_headers_to_excel() \n{\n  str=\"\";\n\n  var myTableHead = document.getElementById('headers');\n  var rowCount = myTableHead.rows.length;\n  var colCount = myTableHead.getElementsByTagName(\"tr\")[0].getElementsByTagName(\"th\").length; \n\nvar ExcelApp = new ActiveXObject(\"Excel.Application\");\nvar ExcelSheet = new ActiveXObject(\"Excel.Sheet\");\nExcelSheet.Application.Visible = true;\n\nfor(var i=0; i&lt;rowCount; i++) \n{   \n    for(var j=0; j&lt;colCount; j++) \n    {           \n        str= myTableHead.getElementsByTagName(\"tr\")[i].getElementsByTagName(\"th\")[j].innerHTML;\n        ExcelSheet.ActiveSheet.Cells(i+1,j+1).Value = str;\n    }\n}\n\n}\n</code></pre>\n\n<p>and then do the same thing for the <code>&lt;tbody&gt;</code> tag. </p>\n\n<p>EDIT: I would also highly recommend using jQuery. It would shorten this up to:</p>\n\n<pre><code>function write_to_excel() \n{\n var ExcelApp = new ActiveXObject(\"Excel.Application\");\n var ExcelSheet = new ActiveXObject(\"Excel.Sheet\");\n ExcelSheet.Application.Visible = true; \n\n  $('th, td').each(function(i){\n    ExcelSheet.ActiveSheet.Cells(i+1,i+1).Value = this.innerHTML;\n  });\n}\n</code></pre>\n\n<p>Now, of course, this is going to give you some formatting issues but you can work out how you want it formatted in Excel. </p>\n\n<p>EDIT: To answer your question about how to do this for <code>n</code> number of tables, the jQuery will do this already. To do it in raw Javascript, grab all the tables and then alter the function to be able to pass in the table as a parameter. For instance:</p>\n\n<pre><code>var tables = document.getElementsByTagName('table');\nfor(var i = 0; i &lt; tables.length; i++)\n{\n  write_headers_to_excel(tables[i]);\n  write_bodies_to_excel(tables[i]);\n}\n</code></pre>\n\n<p>Then change the <code>function write_headers_to_excel()</code> to <code>function write_headers_to_excel(table)</code>. Then change <code>var myTableHead = document.getElementById('headers');</code> to <code>var myTableHead = table.getElementsByTagName('thead')[0];</code>. Same with your <code>write_bodies_to_excel()</code> or however you want to set that up.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>I think you can also think of alternative architectures. Sometimes something can be done in another way much more easier. If the producer of HTML file is you, then you can write an HTTP handler to create an Excel document on the server (which is much more easier than in JavaScript) and send a file to the client. If you receive that HTML file from somewhere (like an HTML version of a report), then you still can use a server side language like C# or PHP to create the Excel file still very easily. I mean, you may have other ways too. :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I try this with jquery; \nuse this and have fun :D </p>\n\n<pre><code>    jQuery.printInExcel = function (DivID) \n{ \nvar ExcelApp = new ActiveXObject(\"Excel.Application\"); \nExcelApp.Workbooks.Add; \nExcelApp.visible = true; \nvar str = \"\"; \nvar tblcount = 0; \nvar trcount = 0;\n $(\"#\" + DivID + \" table\").each(function () \n{ $(this).find(\"tr\").each(function () \n{ var tdcount = 0; $(this).find(\"td\").each(function () \n{ str = str + $(this).text(); ExcelApp.Cells(trcount + 1, tdcount + 1).Value = str; \nstr = \"\"; tdcount++ \n}); \ntrcount++ \n}); tblcount++ \n}); \n};\n</code></pre>\n\n<p>use this in your class and call it with $.printInExcel(<em>your var</em>);</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would suggest using a different approach. Add a button on the webpage that will copy the content of the table to the clipboard, with TAB chars between columns and newlines between rows. This way the \"paste\" function in Excel should work correctly and your web application will also work with many browsers and on many operating systems (linux, mac, mobile) and users will be able to use the data also with other spreadsheets or word processing programs.</p>\n\n<p>The only tricky part is to copy to the clipboard because many browsers are security obsessed on this. A solution is to prepare the data already selected in a textarea, and show it to the user in a modal dialog box where you tell the user to copy the text (some will need to type Ctrl-C, others Command-c, others will use a \"long touch\" or a popup menu).</p>\n\n<p>It would be nicer to have a standard copy-to-clipboard function that possibly requests a user confirmation... but this is not the case, unfortunately.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>    function XLExport() {\n        try {\n            var i;\n            var j;\n            var mycell;\n            var tableID = \"tblInnerHTML\";\n\n            var objXL = new ActiveXObject(\"Excel.Application\");\n            var objWB = objXL.Workbooks.Add();\n            var objWS = objWB.ActiveSheet;\n\n            for (i = 0; i &lt; document.getElementById('&lt;%= tblAuditReport.ClientID %&gt;').rows.length; i++) {\n                for (j = 0; j &lt; document.getElementById('&lt;%= tblAuditReport.ClientID %&gt;').rows(i).cells.length; j++) {\n                    mycell = document.getElementById('&lt;%= tblAuditReport.ClientID %&gt;').rows(i).cells(j);\n                    objWS.Cells(i + 1, j + 1).Value = mycell.innerText;\n                }\n            }\n\n            //objWS.Range(\"A1\", \"L1\").Font.Bold = true;\n\n            objWS.Range(\"A1\", \"Z1\").EntireColumn.AutoFit();\n\n            //objWS.Range(\"C1\", \"C1\").ColumnWidth = 50;\n\n            objXL.Visible = true;\n\n        }\n        catch (err) {\n                    }\n\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Check this out... I just got this working and it seems exactly what you are trying to do as well.</p>\n\n<p>2 functions. One to select the table and copy it to the clipboard, and the second writes it to excel en masse. Just call write_to_excel() and put in your table id (or modify it to take it as an argument).</p>\n\n<pre><code>  function selectElementContents(el) {\n        var body = document.body, range, sel;\n        if (document.createRange &amp;&amp; window.getSelection) {\n            range = document.createRange();\n            sel = window.getSelection();\n            sel.removeAllRanges();\n            try {\n                range.selectNodeContents(el);\n                sel.addRange(range);\n            } catch (e) {\n                range.selectNode(el);\n                sel.addRange(range);\n            }\n        } else if (body.createTextRange) {\n            range = body.createTextRange();\n            range.moveToElementText(el);\n            range.select();\n        }\n        range.execCommand(\"Copy\");\n    }\n\nfunction write_to_excel() \n{\nvar tableID = \"AllItems\";\nselectElementContents( document.getElementById(tableID) );\n\nvar excel = new ActiveXObject(\"Excel.Application\");\n// excel.Application.Visible = true; \nvar wb=excel.WorkBooks.Add();\nvar ws=wb.Sheets(\"Sheet1\");\nws.Cells(1,1).Select;\nws.Paste;\nws.DrawingObjects.Delete;\nws.Range(\"A1\").Select\n excel.Application.Visible = true; \n}\n</code></pre>\n\n<p>Heavily influenced from: <a href=\"http://stackoverflow.com/questions/2044616/select-a-complete-table-with-javascript-to-be-copied-to-clipboard/2044793#2044793\">Select a complete table with javascript (to be copied to clipboard)</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Only works in Mozilla, Chrome and Safari..</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.9.0.js\"&gt;            &lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n$(function(){\n    $('button').click(function(){\n        var url='data:application/vnd.ms-excel,' + encodeURIComponent($('#tableWrap').html()) \n        location.href=url\n        return false\n    })\n})\n&lt;/script&gt;\n&lt;style type=\"text/css\"&gt;\n\n&lt;/style&gt;\n&lt;title&gt;Untitled&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;button&gt;click me&lt;/button&gt;\n    &lt;div id=\"tableWrap\"&gt;\n    &lt;table&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;&lt;th&gt;A&lt;/th&gt;&lt;th&gt;B&lt;/th&gt;&lt;th&gt;C&lt;/th&gt;&lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    &lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;\n    &lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;\n    &lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;\n    &lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;\n    &lt;/tbody&gt;\n    &lt;/table&gt;\n    &lt;/div&gt;\n    &lt;/body&gt;\n  &lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This might be a better answer copied from <a href=\"http://stackoverflow.com/questions/11084564/export-html-table-to-excel-javascript-function-special-characters-changed\">this question</a>. Please try it and give opinion here. Please vote up if found useful. Thank you.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction generate_excel(tableid) {\n  var table= document.getElementById(tableid);\n  var html = table.outerHTML;\n  window.open('data:application/vnd.ms-excel;base64,' + base64_encode(html));\n}\n\nfunction base64_encode (data) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Tyler Akins (http://rumkin.com)\n  // +   improved by: Bayron Guevara\n  // +   improved by: Thunder.m\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +   bugfixed by: Pellentesque Malesuada\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +   improved by: Rafal Kukawski (http://kukawski.pl)\n  // *     example 1: base64_encode('Kevin van Zonneveld');\n  // *     returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n  // mozilla has this native\n  // - but breaks in 2.0.0.12!\n  //if (typeof this.window['btoa'] == 'function') {\n  //    return btoa(data);\n  //}\n  var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n  var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n    ac = 0,\n    enc = \"\",\n    tmp_arr = [];\n\n  if (!data) {\n    return data;\n  }\n\n  do { // pack three octets into four hexets\n    o1 = data.charCodeAt(i++);\n    o2 = data.charCodeAt(i++);\n    o3 = data.charCodeAt(i++);\n\n    bits = o1 &lt;&lt; 16 | o2 &lt;&lt; 8 | o3;\n\n    h1 = bits &gt;&gt; 18 &amp; 0x3f;\n    h2 = bits &gt;&gt; 12 &amp; 0x3f;\n    h3 = bits &gt;&gt; 6 &amp; 0x3f;\n    h4 = bits &amp; 0x3f;\n\n    // use hexets to index into b64, and append result to encoded string\n    tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n  } while (i &lt; data.length);\n\n  enc = tmp_arr.join('');\n\n  var r = data.length % 3;\n\n  return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>Excel Export Script works on IE7+ , Firefox and Chrome\n===========================================================\n\n\n\nfunction fnExcelReport()\n    {\n             var tab_text=\"&lt;table border='2px'&gt;&lt;tr bgcolor='#87AFC6'&gt;\";\n             var textRange; var j=0;\n          tab = document.getElementById('headerTable'); // id of table\n\n\n          for(j = 0 ; j &lt; tab.rows.length ; j++) \n          {     \n                tab_text=tab_text+tab.rows[j].innerHTML+\"&lt;/tr&gt;\";\n                //tab_text=tab_text+\"&lt;/tr&gt;\";\n          }\n\n          tab_text=tab_text+\"&lt;/table&gt;\";\n          tab_text= tab_text.replace(/&lt;A[^&gt;]*&gt;|&lt;\\/A&gt;/g, \"\");//remove if u want links in your table\n          tab_text= tab_text.replace(/&lt;img[^&gt;]*&gt;/gi,\"\"); // remove if u want images in your table\n                      tab_text= tab_text.replace(/&lt;input[^&gt;]*&gt;|&lt;\\/input&gt;/gi, \"\"); // reomves input params\n\n               var ua = window.navigator.userAgent;\n              var msie = ua.indexOf(\"MSIE \"); \n\n                 if (msie &gt; 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./))      // If Internet Explorer\n                    {\n                           txtArea1.document.open(\"txt/html\",\"replace\");\n                           txtArea1.document.write(tab_text);\n                           txtArea1.document.close();\n                           txtArea1.focus(); \n                            sa=txtArea1.document.execCommand(\"SaveAs\",true,\"Say Thanks to Sumit.xls\");\n                          }  \n                  else                 //other browser not tested on IE 11\n                      sa = window.open('data:application/vnd.ms-excel,' + encodeURIComponent(tab_text));  \n\n\n                      return (sa);\n                            }\n\n    Just Create a blank iframe\n    enter code here\n        &lt;iframe id=\"txtArea1\" style=\"display:none\"&gt;&lt;/iframe&gt;\n\n    Call this function on\n\n        &lt;button id=\"btnExport\" onclick=\"fnExcelReport();\"&gt; EXPORT \n        &lt;/button&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>My table is in format </p>\n\n<pre><code>&lt;table id=\"mytable\"&gt;\n&lt;thead&gt;\n  &lt;tr&gt;\n    &lt;th&gt;name&lt;/th&gt;\n    &lt;th&gt;place&lt;/th&gt;\n  &lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr&gt;\n   &lt;td&gt;adfas&lt;/td&gt;\n   &lt;td&gt;asdfasf&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>I found the following code online. But it doesn't work if i use \"thead\" and \"tbody\"  tags</p>\n\n<pre><code>function write_to_excel() {\n\n    str = \"\";\n\n    var mytable = document.getElementsByTagName(\"table\")[0];\n    var rowCount = mytable.rows.length;\n    var colCount = mytable.getElementsByTagName(\"tr\")[0].getElementsByTagName(\"td\").length;\n\n    var ExcelApp = new ActiveXObject(\"Excel.Application\");\n    var ExcelSheet = new ActiveXObject(\"Excel.Sheet\");\n    ExcelSheet.Application.Visible = true;\n\n    for (var i = 0; i &lt; rowCount; i++) {\n        for (var j = 0; j &lt; colCount; j++) {\n            str = mytable.getElementsByTagName(\"tr\")[i].getElementsByTagName(\"td\")[j].innerHTML;\n            ExcelSheet.ActiveSheet.Cells(i + 1, j + 1).Value = str;\n        }\n    }\n</code></pre>\n",
            "last_activity_date": 1417111702,
            "question_id": 6566831,
            "score": 13,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How to export html table to excel using javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I think <a href=\"http://stackoverflow.com/questions/934012/get-image-data-in-javascript\">Get image data in Javascript?</a> answers your question:</p>\n\n<pre><code>// Code taken from MatthewCrumley (http://stackoverflow.com/a/934925/298479)\nfunction getBase64Image(img) {\n    // Create an empty canvas element\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n\n    // Copy the image contents to the canvas\n    var ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n\n    // Get the data-URL formatted image\n    // Firefox supports PNG and JPEG. You could check img.src to guess the\n    // original format, but be aware the using \"image/jpg\" will re-encode the image.\n    var dataURL = canvas.toDataURL(\"image/png\");\n\n    return dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\n}\n</code></pre>\n\n<p>Pass the <code>img</code> tag to this function. It will return the image in base64 encoding. It will be re-encoded though. So you cannot access the original image data.</p>\n",
                    "is_accepted": true,
                    "score": 33
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicates:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/934012/get-image-data-in-javascript\">Get image data in Javascript?</a><br>\n  <a href=\"http://stackoverflow.com/questions/2084873/how-to-encode-image-data-within-an-html-file\">How to encode image data within an HTML file?</a>  </p>\n</blockquote>\n\n\n\n<p>Is there any way to convert an image to binary data in javascript and vice versa.</p>\n",
            "last_activity_date": 1362699351,
            "question_id": 5420384,
            "score": 12,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Convert an image into binary data in javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>That construct means declare an anonymous function and run it immediately. The reason you put your code inside a function body is because the variables you define inside it remain local to the function and not as global variables. However, they will still be visible to the closures defined inside this function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The parens around the function make it clear that the function is an expression. The parens after are the call to the function.</p>\n\n<p>Notice that the function does not have a name.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>That creates a function, calls it, and discards it.</p>\n\n<p>It might be clearer if you look at it like this:</p>\n\n<pre><code>var throwaway = function(){\n    // do cool stuff\n};\nthrowaway();\n</code></pre>\n\n<p>This is done to create a private namespace.  Code in the function can have functions and variables without worrying about conflicting with other code loaded in the page.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Putting the function declaration inside parens creates an expression which evaluates to the anonymous function within.  Therefore, the first parenthetical evaluates to a function.</p>\n\n<p>The \"empty parens\" at the end invoke the defined function, so \"//do cool stuff\" executes immediately.</p>\n\n<p>This is a way to execute code on-the-fly while also keeping variables out of the global scope.</p>\n\n<p>What is illustrated here, however, has nothing to do with closures - at least not directly. Closures are about maintaining a lexical scope after a parent function has already exited.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The point of this is that any variables declared in the cool stuff will not be created in global namespace. Any function in javascript will create such a scope. Suppose you have some javascript you want to run. If you do this:</p>\n\n<pre><code>var b = 1; \n// stuff using b\n</code></pre>\n\n<p>And some other code uses b, it will get your left over value. (Or, even worse, if some other code sets b before your code runs, then tries to get its old value later, you'd have changed it in the meantime.) </p>\n\n<p>On the other hand, if you have this code, which declares and then calls the a function:</p>\n\n<pre><code>function a() { \n     var b = 1;\n}\n\na();\n</code></pre>\n\n<p>And some other code later on uses b, it will not see your values, since b is local to the function. The problem with this, of course, is that you're still making a global name - \"a\", in this case. So, we want a function with no name - this is why you get the code you described. It declares a function with no name, and then calls it.</p>\n\n<p>Unfortunately, you can't just say:</p>\n\n<pre><code>function() { ... }()\n</code></pre>\n\n<p>because this will be parsed as a function declaration <em>statement</em>, and then a syntax error. By wrapping the function declaration in parenthesis, you get a function <em>expression</em>, which can then be called. You call it like any other function expression (like a, above), using the second set of parens. For example, if the function took arguments, you'd pass them there:</p>\n\n<pre><code>(function(a) { ... })(1)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>i just came across this post recently. This type of function definition &amp; call is called <strong>self-invoking functions</strong>.</p>\n\n<pre><code>(function(){  //code })();\n</code></pre>\n\n<p>The code inside the function will be executed immediately upon its definition.  </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm trying to wrap my head around closures (there's a joke in there somewhere) and I ran across this:</p>\n\n<pre><code>(function () { /* do cool stuff */ })();\n</code></pre>\n\n<p>How does this work? What's the purpose of putting the function in parens? Why the empty parens afterwards?</p>\n",
            "last_activity_date": 1338040566,
            "question_id": 631187,
            "score": 12,
            "tags": [
                "javascript",
                "scope",
                "closures"
            ],
            "title": "JavaScript scope and closure"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Looks like jQuery takes a guess about the datatype. It does the JSON parsing even though you're not calling getJSON()-- then when you try to call JSON.parse() on an object, you're getting the error. At least that's what it looks like from the comments below.</p>\n",
                    "is_accepted": true,
                    "score": 113
                },
                {
                    "body": "<p>I have no direct answer, unfortunatelly, but if the error is coming from JSON.parse - then there should be some way to get an error report. I've got a snippet of code that does just that in PHP - failing all else you could try parse that same json file using PHP and see what happens. JSON error reporting in PHP:</p>\n\n<pre><code>// debugging json_decode\nif ( 1==2 &amp;&amp; isset($formState) )\n{\n    echo 'here: ' . gettype( json_decode($formState-&gt;encoded_form) );    \n//echo '&lt;textarea&gt;'.$formState-&gt;encoded_form.'&lt;/textarea&gt;';\n    // Define the errors.\n    $constants = get_defined_constants(true);\n    $json_errors = array();\n    foreach ($constants[\"json\"] as $name =&gt; $value) {\n            if (!strncmp($name, \"JSON_ERROR_\", 11)) {\n                $json_errors[$value] = $name;\n            }\n    }\n    echo 'Last error: ', $json_errors[json_last_error()];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had a similar problem just now and my solution might help.  I'm using an iframe to upload and convert an xml file to json and send it back behind the scenes, and Chrome was adding some garbage to the incoming data that only would show up intermittently and cause the \"Uncaught SyntaxError: Unexpected token o\" error.</p>\n\n<p>I was accessing the iframe data like this:</p>\n\n<pre><code>$('#load-file-iframe').contents().text()\n</code></pre>\n\n<p>which worked fine on localhost, but when I uploaded it to the server it stopped working only with some files and only when loading the files in a certain order.  I don't really know what caused it, but this fixed it.  I changed the line above to</p>\n\n<pre><code>$('#load-file-iframe').contents().find('body').text()\n</code></pre>\n\n<p>once I noticed some garbage in the HTML response.  </p>\n\n<p>Long story short check your raw HTML response data and you might turn something up.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Make sure your JSON file does not have any trailing characters before or after. Maybe an unprintable one? You may want to try this way:</p>\n\n<pre><code>[{\"english\":\"bag\",\"kana\":\"kaban\",\"kanji\":\"K\"},{\"english\":\"glasses\",\"kana\":\"megane\",\"kanji\":\"M\"}]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The problem is very simple</p>\n\n<pre><code>jQuery.get('wokab.json', function(data) {\n    var glacier = JSON.parse(data);\n});\n</code></pre>\n\n<p>You're parsing it twice. <code>get</code> uses the <code>dataType='json'</code>, so data is <strong>already</strong> in json format.\nUse <code>$.ajax({ dataType: 'json' ...</code> to specifically set the returned data type!</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>Simply the response is already parsed, you don't need to parse it again. if you parse it again it will give you \"unexpected token o\". </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to learn some html/css/javascript, so I'm writing myself a teaching project.</p>\n\n<p>The idea was to have some vocabulary contained in a json file which would then be loaded into a table. I managed to load the file in and print out one of its values, after which I began writing the code to load the values into the table.</p>\n\n<p>After doing that I started getting an error, so I removed all the code I had written, leaving me with only one line (the same line that had worked before) ... only the error is still there.</p>\n\n<p>The error is as follows:</p>\n\n<pre><code>Uncaught SyntaxError: Unexpected token o\n(anonymous function)script.js:10\njQuery.Callbacks.firejquery-1.7.js:1064\njQuery.Callbacks.self.fireWithjquery-1.7.js:1182\ndonejquery-1.7.js:7454\njQuery.ajaxTransport.send.callback\n</code></pre>\n\n<p>My javascript code is contained in a separate file and is simply this:</p>\n\n<pre><code>function loadPageIntoDiv(){\n    document.getElementById(\"wokabWeeks\").style.display = \"block\";\n}\n\nfunction loadWokab(){\n    //also tried getJSON which threw the same error\n    jQuery.get('wokab.json', function(data) {\n        var glacier = JSON.parse(data);\n    });\n}\n</code></pre>\n\n<p>And my JSON file just has the following right now:</p>\n\n<pre><code>[\n    {\n        \"english\": \"bag\",\n        \"kana\": \"kaban\",\n        \"kanji\": \"K\"\n    },\n\n    {\n        \"english\": \"glasses\",\n        \"kana\": \"megane\",\n        \"kanji\": \"M\"\n    }\n]\n</code></pre>\n\n<p>Now the error is reported in line 11 which is the <code>var glacier = JSON.parse(data);</code> line.</p>\n\n<p>When I remove the json file I get the error: \"GET <a href=\"http://.../wokab.json\">http://.../wokab.json</a> 404 (Not Found)\" so I know it's loading it (or at least trying to).</p>\n",
            "last_activity_date": 1417098305,
            "question_id": 8081701,
            "score": 119,
            "tags": [
                "javascript",
                "jquery",
                "json"
            ],
            "title": "I keep getting &quot;Uncaught SyntaxError: Unexpected token o&quot;"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Simply:</p>\n\n<pre><code>yourDate.setDate(yourDate.getDate() - daysToSubtract);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p>Here's an example, however this does no kind of checking (for example if you use it on 2009/7/1 it'll use a negative day or throw an error.</p>\n\n<pre><code>function subDate(o, days) {\n// keep in mind, months in javascript are 0-11\nreturn new Date(o.getFullYear(), o.getMonth(), o.getDate() - days);;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is what I would do.  Note you can simplify the expression, I've just written it out to make it clear you are multiplying the number of days by the number of milliseconds in a day.</p>\n\n<pre><code> var newDate = new Date( yourDate.getTime() - (days * 24 * 60 * 60 * 1000) );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just another option, which I wrote:</p>\n\n<p><a href=\"http://depressedpress.com/javascript-extensions/dp_dateextensions/\" rel=\"nofollow\">DP_DateExtensions Library</a></p>\n\n<p>It's probably overkill if ALL you want to do is one calculation, but if you're going to do more date manipulation you might find it useful.</p>\n\n<p>Supports date/time formatting, date math (add/subtract date parts), date compare, date parsing, etc.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function date_by_subtracting_days(date, days) {\n    return new Date(\n        date.getFullYear(), \n        date.getMonth(), \n        date.getDate() - days,\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds(),\n        date.getMilliseconds()\n    );\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Here i am posting one more answer and that will return date in specific format.</p>\n\n<p>First you can get current date <strong>10/08/2013</strong> as below</p>\n\n<pre><code>function Cureent_Date() {\n    var today_GMT = new Date();\n    var dd = today_GMT.getDate();\n    var mm = today_GMT.getMonth() + 1; //January is 0!\n    var yyyy = today_GMT.getFullYear();\n    if (dd &lt; 10) {\n        dd = '0' + dd\n    }\n    if (mm &lt; 10) {\n        mm = '0' + mm\n    }\n    current_date = mm + '/' + dd + '/' + yyyy;\n    alert(\"current_date\"+current_date);\n\n    Back_date();\n}\n</code></pre>\n\n<p>Now Get back date base on <strong>X</strong> days</p>\n\n<pre><code>function Back_date()\n{    \n    var back_GTM = new Date(); back_GTM.setDate(back_GTM.getDate() - 2); // 2 is your X\n    var b_dd = back_GTM.getDate();\n    var b_mm = back_GTM.getMonth()+1;\n    var b_yyyy = back_GTM.getFullYear();\n    if (b_dd &lt; 10) {\n        b_dd = '0' + b_dd\n    }\n    if (b_mm &lt; 10) {\n        b_mm = '0' +b_mm\n    }\n\n    var back_date=  b_mm + '/' + b_dd + '/' + b_yyyy;\n    alert(\"back_date\"+back_date);\n}\n</code></pre>\n\n<p>So, Today is <code>10/08/2013</code> so it will return <code>10/06/2013</code>.</p>\n\n<p><a href=\"http://jsfiddle.net/fnmTt/26/\" rel=\"nofollow\">Check Live Demo here</a>\nHope this answer will help you.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want to find date by subtracting  X number of days from a particular date in JavaScript. My JavaScript function accepts 2 parameters. One is the date value and the other is the number of days that needs to be subtracted.</p>\n\n<p>For example,  I pass my argument date as 27 July 2009   and i pass my other argument as 3. So i want to calculate the date 3 days before 27 July 2009. So the resultant date that we should get is 24 July 2009. How is this possible in JavaScript. Thanks for any help.</p>\n",
            "last_activity_date": 1381232211,
            "question_id": 1187824,
            "score": 45,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "Finding date by subtracting X number of days from a particular date in Javascript"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I'm not entirely certain myself, I recall seeing jQuery did it to an extent, but it doesn't handle hierarchical records at all, let alone in a php friendly way. </p>\n\n<p>One thing I do know for certain, is when building URLs and sticking the product into the dom, don't just use string-glue to do it, or you'll be opening yourself to a handy page breaker. </p>\n\n<p>For instance, certain advertising software in-lines the version string from whatever runs your flash. This is fine when its adobes generic simple string, but however, that's very naive, and blows up in an embarrasing mess for people whom have installed Gnash, as gnash'es version string happens to contain a full blown GPL copyright licences, complete with URLs and &lt;a href&gt; tags. Using this in your string-glue advertiser generator, results in the page blowing open and having imbalanced HTML turning up in the dom.</p>\n\n<p>The moral of the story: </p>\n\n<pre><code>   var foo = document.createElement(\"elementnamehere\"); \n   foo.attribute = allUserSpecifiedDataConsideredDangerousHere; \n   somenode.appendChild(foo);\n</code></pre>\n\n<p>Not: </p>\n\n<pre><code>   document.write(\"&lt;elementnamehere attribute=\\\"\" \n        + ilovebrokenwebsites \n        + \"\\\"&gt;\" \n        + stringdata \n        + \"&lt;/elementnamehere&gt;\");\n</code></pre>\n\n<p><sub><sub>Google need to learn this trick. I tried to report the problem, they appear not to care.</sub></sub></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>No, I don't think standard JavaScript has that built in, but Prototype JS has that function (surely most other JS frameworks have too, but I don't know them), they call it <a href=\"http://www.prototypejs.org/api/form/serialize\">serialize</a>. </p>\n\n<p>I can reccomend Prototype JS, it works quite okay. The only drawback I've really noticed it it's size (a few hundred kb) and scope (lots of code for ajax, dom, etc.). Thus if you only want a form serializer it's overkill, and strictly speaking if you only want it's Ajax functionality (wich is mainly what I used it for) it's overkill. Unless you're careful you may find that it does a little too much \"magic\" (like extending every dom element it touches with Prototype JS functions just to find elements) making it slow on extreme cases.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I tried to search for an answer to this question some while ago, but I ended up writing my own function that extracts the values from the form ..</p>\n\n<p>it's not perfect but it fits my needs.</p>\n\n<pre><code>function form_params( form )\n{\n    var params = new Array()\n    var length = form.elements.length\n    for( var i = 0; i &lt; length; i++ )\n    {\n    \telement = form.elements[i]\n\n    \tif(element.tagName == 'TEXTAREA' )\n    \t{\n    \t\tparams[element.name] = element.value\n    \t}\n    \telse if( element.tagName == 'INPUT' )\n    \t{\n    \t\tif( element.type == 'text' || element.type == 'hidden' || element.type == 'password')\n    \t\t{\n    \t\t\tparams[element.name] = element.value\n    \t\t}\n    \t\telse if( element.type == 'radio' &amp;&amp; element.checked )\n    \t\t{\n    \t\t\tif( !element.value )\n    \t\t\t\tparams[element.name] = \"on\"\n    \t\t\telse\n    \t\t\t\tparams[element.name] = element.value\n\n    \t\t}\n    \t\telse if( element.type == 'checkbox' &amp;&amp; element.checked )\n    \t\t{\n    \t\t\tif( !element.value )\n    \t\t\t\tparams[element.name] = \"on\"\n    \t\t\telse\n    \t\t\t\tparams[element.name] = element.value\n    \t\t}\n    \t}\n    }\n    return params;\n}\n</code></pre>\n\n<p>form_params returns a (key -> value) mapping of the parameters.\nthe input is the form element (DOM Element)</p>\n\n<p>It doesn't handle fields that allow multiple selection.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>As Stein says, you can use the prototype javascript library from <a href=\"http://www.prototypejs.org\" rel=\"nofollow\">http://www.prototypejs.org</a>.\nInclude the JS and it is very simple then, <code>$('formName').serialize()</code> will return what you want!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you don't want to use a library, this should cover most/all of the same form element types.</p>\n\n<pre><code>function serialize(form) {\n  if (!form || !form.elements) return;\n\n  var serial = [], i, j, first;\n  var add = function (name, value) {\n    serial.push(encodeURIComponent(name) + '=' + encodeURIComponent(value));\n  }\n\n  var elems = form.elements;\n  for (i = 0; i &lt; elems.length; i += 1, first = false) {\n    if (elems[i].name.length &gt; 0) { /* don't include unnamed elements */\n      switch (elems[i].type) {\n        case 'select-one': first = true;\n        case 'select-multiple':\n          for (j = 0; j &lt; elems[i].options.length; j += 1)\n            if (elems[i].options[j].selected) {\n              add(elems[i].name, elems[i].options[j].value);\n              if (first) break; /* stop searching for select-one */\n            }\n          break;\n        case 'checkbox':\n        case 'radio': if (!elems[i].checked) break; /* else continue */\n        default: add(elems[i].name, elems[i].value); break;\n      }\n    }\n  }\n\n  return serial.join('&amp;');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>For those of us who prefer jQuery, you would use the form plugin: <a href=\"http://plugins.jquery.com/project/form\" rel=\"nofollow\">http://plugins.jquery.com/project/form</a>, which contains a formSerialize method.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You don't actually need a form to do this with Prototype. Just use <a href=\"http://www.prototypejs.org/api/object/toquerystring\" rel=\"nofollow\">Object.toQueryString function</a>:</p>\n\n<pre><code>Object.toQueryString({ action: 'ship', order_id: 123, fees: ['f1', 'f2'], 'label': 'a demo' })\n\n// -&gt; 'action=ship&amp;order_id=123&amp;fees=f1&amp;fees=f2&amp;label=a%20demo'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This doesn't directly answer your question, but here's a generic function which will create a URL that contains query string parameters.  The parameters (names and values) are safely escaped for inclusion in a URL.</p>\n\n<pre><code>function buildUrl(url, parameters){\n  var qs = \"\";\n  for(var key in parameters) {\n    var value = parameters[key];\n    qs += encodeURIComponent(key) + \"=\" + encodeURIComponent(value) + \"&amp;\";\n  }\n  if (qs.length &gt; 0){\n    qs = qs.substring(0, qs.length-1); //chop off last \"&amp;\"\n    url = url + \"?\" + qs;\n  }\n  return url;\n}\n\n//example:\nvar url = \"http://www.site.com/\";\nvar parameters = new Array();\nparameters[\"name\"] = \"George Washington\";\nparameters[\"dob\"] = \"17320222\";\nalert(buildUrl(url, parameters));\n//displays: http://www.site.com/?name=George%20Washington&amp;dob=17320222\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>If you're using jQuery you might want to check out <code>jQuery.param()</code> <a href=\"http://api.jquery.com/jQuery.param/\">http://api.jquery.com/jQuery.param/</a></p>\n\n<p>Example:</p>\n\n<pre><code>var \n    params = {\n        parameter1: 'value1',\n        parameter2: 'value2',\n        parameter3: 'value3' \n    },\n    \u200bquery = $.param(params);\ndocument.write(query);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 49
                },
                {
                    "body": "<p>With jQuery you can do this by <code>$.param</code></p>\n\n<pre><code>$.param({ action: 'ship', order_id: 123, fees: ['f1', 'f2'], 'label': 'a demo' })\n\n// -&gt; \"action=ship&amp;order_id=123&amp;fees%5B%5D=f1&amp;fees%5B%5D=f2&amp;label=a+demo\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>Just wondering if there is anything built-in to Javascript that can take a Form and return the query parameters, eg: \"var1=value&amp;var2=value2&amp;arr[]=foo&amp;arr[]=bar...\"</p>\n\n<p>I've been wondering this for years.</p>\n",
            "last_activity_date": 1376280074,
            "question_id": 316781,
            "score": 41,
            "tags": [
                "javascript",
                "string",
                "forms",
                "get"
            ],
            "title": "How to build query string with Javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>In older browsers, you can write a function that will parse the string for you.</p>\n\n<p>This one creates a Date.fromISO method- if the browser can natively get the correct date from an ISO string, the native method is used.</p>\n\n<p>Some browsers got it partly right, but returned the wrong timezone, so just checking for NaN may not do.</p>\n\n<p>Polyfill:</p>\n\n<pre><code>(function(){\n    var D= new Date('2011-06-02T09:34:29+02:00');\n    if(!D || +D!== 1307000069000){\n        Date.fromISO= function(s){\n            var day, tz,\n            rx=/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT ][\\d:\\.]*)?)([zZ]|([+\\-])(\\d\\d):(\\d\\d))?$/,\n            p= rx.exec(s) || [];\n            if(p[1]){\n                day= p[1].split(/\\D/);\n                for(var i= 0, L= day.length; i&lt;L; i++){\n                    day[i]= parseInt(day[i], 10) || 0;\n                };\n                day[1]-= 1;\n                day= new Date(Date.UTC.apply(Date, day));\n                if(!day.getDate()) return NaN;\n                if(p[5]){\n                    tz= (parseInt(p[5], 10)*60);\n                    if(p[6]) tz+= parseInt(p[6], 10);\n                    if(p[4]== '+') tz*= -1;\n                    if(tz) day.setUTCMinutes(day.getUTCMinutes()+ tz);\n                }\n                return day;\n            }\n            return NaN;\n        }\n    }\n    else{\n        Date.fromISO= function(s){\n            return new Date(s);\n        }\n    }\n})()\n</code></pre>\n\n<p>Result:</p>\n\n<pre><code>var start_time = '2012-06-24T17:00:00-07:00';\nvar d =  Date.fromISO(start_time);\nvar month = d.getMonth();\nvar day = d.getDate();\n\nalert(++month+' '+day); // returns months from 1-12\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>For ie7/8 i just did:</p>\n\n<pre><code>date = new Date(yourdatestring.replace(/-/g, '/'));\n</code></pre>\n\n<p>this just replaces all occurunces of \"-\" with \"/\" which enables IE7/8 to parse Dates from Strings correctly. Solved all issues for me.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I suggest <a href=\"http://momentjs.com/\" rel=\"nofollow\">http://momentjs.com/</a> for cross browser date issues.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>See RobG's post at <a href=\"http://stackoverflow.com/questions/17592717/result-of-tojson-on-a-date-is-different-between-ie8-and-ie9\">Result of toJSON() on a date is different between IE8 and IE9+</a>.</p>\n\n<p>Below function worked for me in IE 8 and below.</p>\n\n<pre><code>// parse ISO format date like 2013-05-06T22:00:00.000Z\nfunction convertDateFromISO(s) {\n  s = s.split(/\\D/);\n  return new Date(Date.UTC(s[0], --s[1]||'', s[2]||'', s[3]||'', s[4]||'', s[5]||'', s[6]||''))\n}\n</code></pre>\n\n<p>You can test like below:</p>\n\n<pre><code>var currentTime = new Date(convertDateFromISO('2013-05-06T22:00:00.000Z')).getTime();\nalert(currentTime);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>@gib  Thanks for the suggestion on Moment.js.  This small library really helps out with dealing with dates and JavaScript.</p>\n\n<p>Moment.js solved the problem described in the original question that I was also having.  IE8 was displaying JSON ISO dates as NaN when parsed into a new Date() object.</p>\n\n<p>Quick solution (include moment.js in your page, or copy the code to your js functions include)</p>\n\n<p><em>If you just need to display a date on your page, loaded from a JSON ISO date, do this:</em></p>\n\n<pre><code>order_date = moment(data.OrderDate); //create a \"moment\" variable, from the \"data\" object in your JSON function in Protoype or jQuery, etc.\n\n$('#divOrderDate).html(order_date.calendar()); //use Moment's relative date function to display \"today\", \"yesterday\", etc.\n</code></pre>\n\n<p>or</p>\n\n<pre><code>order_date = moment(data.OrderDate); //create a \"moment\" variable, from the \"data\" object in your JSON function in Protoype or jQuery, etc.\n\n$('#divOrderDate).html(order_date.format('m/d/YYYY')); //use Moment's format function to display \"2/6/2015\" or \"10/19/2014\", etc.  \n</code></pre>\n\n<p><em>If you must have a Date() object (say for use with jQuery Components), do the following so successfully populate your JSON provided ISO date. (This assumes you are already inside the function of handling your JSON data.)</em></p>\n\n<pre><code>var ship_date = new Date(moment(data.ShipDate).format('m/d/YYYY'));  //This will successfully parse the ISO date into JavaScript's Date() object working perfectly in FF, Chrome, and IE8.\n\n//initialize your Calendar component with the \"ship_date\" variable, and you won't see NaN again.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm parsing a date from a JSON event feed - but the date shows \"NaN\" in IE7/8:</p>\n\n<pre><code>// Variable from JSON feed (using JQuery's $.getJSON)\nvar start_time = '2012-06-24T17:00:00-07:00';\n\n// How I'm currently extracting the Month &amp; Day\nvar d = new Date(start_time);\nvar month = d.getMonth();\nvar day = d.getDate();\n\ndocument.write(month+'/'+day);// \"6/24\" in most browsers, \"Nan/Nan\" in IE7/8\n</code></pre>\n\n<p>What am I doing wrong? Thanks!</p>\n",
            "last_activity_date": 1411925758,
            "question_id": 11020658,
            "score": 27,
            "tags": [
                "javascript",
                "date",
                "internet-explorer-8",
                "internet-explorer-7",
                "utc"
            ],
            "title": "Javascript JSON Date parse in IE7/IE8 returns NaN"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use</p>\n\n<pre><code>var pagenum = location.pathname.match(/\\/page\\/(.*)/)[1];\n</code></pre>\n\n<p>It will extract anything past '/page/' in your URL;</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Take a look at the documentation on the location object <a href=\"http://www.w3schools.com/jsref/obj_location.asp\" rel=\"nofollow\">http://www.w3schools.com/jsref/obj_location.asp</a></p>\n\n<p>You first want the \"pathname\" part, location.pathname</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Checkout this library <a href=\"http://code.google.com/p/jsuri/\">http://code.google.com/p/jsuri/</a></p>\n\n<p>Or this is you want to keep it simple <a href=\"http://james.padolsey.com/javascript/parsing-urls-with-the-dom/\">http://james.padolsey.com/javascript/parsing-urls-with-the-dom/</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p><a href=\"http://medialize.github.com/URI.js/\">URI.js</a> is a library for working with URLs. It can not only parse URLs, but also offers a simple fluent API (jQuery like) for modifying URLs.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\">How do I parse a URL into hostname and path in javascript?</a>  </p>\n</blockquote>\n\n\n\n<p>I\u2019m trying to parse the url of the page. For example the current page is location.href.</p>\n\n<p>So the main page of my blog, if I use alert(location.href); it will return \u201chttp://diaryofthedead.co.cc/\u201d in an alert box. If I use alert(location.href); on page two of my blog, it will return \u201chttp://diaryofthedead.co.cc/page/2\u201d in an alert box. Is there any way to parse the URL to get the number at the end. Does anyone know how I could do that? Could I use wildcard or something, to do something like: location.href+\u201dpage/\u201d+*; While * is equal to whatever follows \u201cpage/\u201d, and then turn * into a variable?</p>\n",
            "last_activity_date": 1343287514,
            "question_id": 4140324,
            "score": 22,
            "tags": [
                "javascript",
                "url"
            ],
            "title": "Parse URL with Javascript"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>You would need to capture the three key events separately and fire your action only after the third one.</p>\n\n<pre><code>var keys = {\n        d: { code: 100, pressed: false, next: 'e' },\n        e: { code: 101, pressed: false, next: 'v' },\n        v: { code: 118, pressed: false, next: 'd' }\n    },\n    nextKey = 'd';\n\n$(document).keypress(function(e) {\n    if (e.keyCode === keys[nextKey].code) {\n        keys[nextKey].pressed = true;\n        nextKey = keys[nextKey].next;\n    } else {\n        keys.d.pressed = false;\n        keys.e.pressed = false;\n        keys.v.pressed = false;\n        nextKey = 'd';\n    }\n\n    if (keys.d.pressed &amp;&amp; keys.e.pressed &amp;&amp; keys.v.pressed) {\n        alert('Entering dev mode...');\n    }\n});\u200b\n</code></pre>\n\n<p>There's a number of ways to do this of course. This example doesn't require you to hold the keys down simultaneously, just that you type them in order: <kbd>d</kbd> <kbd>e</kbd> <kbd>v</kbd>. </p>\n\n<p>If you used this, you might want to augment it to clear the <code>pressed</code> flags after some time interval.</p>\n\n<p>Here's a <a href=\"http://jsfiddle.net/6eCx2/\" rel=\"nofollow\">working example</a>.</p>\n\n<hr>\n\n<p><sub>Disclaimer: I realize the original question said that the keys should be \"pressed together\". This is just an alternative as other answerers have already provided sufficient solutions for the keys being pressed together.</sub></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>if I well understood : example fiddle, <a href=\"http://jsfiddle.net/gAtTk/\" rel=\"nofollow\">http://jsfiddle.net/gAtTk/</a> (look at your js console)</p>\n\n<p>this code will let you enter the word \"<code>dev</code>\" (and in this example, at the end the event <code>keyup</code> is removed)</p>\n\n<pre><code>(function(seq) {\n    var tmp = seq.slice();\n    $(document).on(\"keyup.entersequence\", function(e){\n        if (!(e.keyCode === tmp.pop())) {\n           tmp = seq.slice();\n        }\n        else {\n           console.log(e.keyCode);  \n            if (!tmp.length) {\n               console.log('end');\n               $(document).off(\"keyup.entersequence\");\n            }\n        }\n    });\n}([68,69,86].reverse()));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should use the keydown and keyup events, to handle more then one key \"at the same time\".</p>\n\n<pre><code>input.on(\"keydown\", function (e) {\n                        if (e.which == 17) {\n                            isCtrl = true; // Ctrl\n                            return;\n                        }\n\n                        /* Ctrl and \"c\" */\n                        if (isCtrl &amp;&amp; e.which == 67) {\n                            //some code \n                        }\n                    }).keyup(function (e) {\n                        if (e.which == 17) {\n                            isCtrl = false; // no Ctrl\n                        }\n                    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try something like below,</p>\n\n<p><strong>Edit:</strong> Changed to keydown after noticing \"pressed together\" in the post.</p>\n\n<pre><code>var cache = [];\n$(document).keydown(function(e){ //Change .keyup if you want them all pressed seperately\n    if (e.keyCode==68 || e.keyCode==69 || e.keyCode==86) {\n        cache.push(e.keyCode);\n    } else {\n        cache = [];\n    }\n\n    if (cache.length == 3 &amp;&amp; cache[0] == 68 &amp;&amp;\n            cache[1] == 69 &amp;&amp; cache[2] == 86) {\n        alert('Oh hi');\n    }\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/skram/HFqsv/1/\" rel=\"nofollow\"><strong>DEMO</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you want to detect that the <kbd>d</kbd>, <kbd>e</kbd>, and <kbd>v</kbd> keys were all down at the same time, you have to watch both <code>keydown</code> and <code>keyup</code> and keep a map of the ones that are down. When they're all down, fire your event.</p>\n\n<p>For example: <a href=\"http://jsbin.com/ujuruv\">Live copy</a> | <a href=\"http://jsbin.com/ujuruv/edit\">source</a></p>\n\n<pre><code>var map = {68: false, 69: false, 86: false};\n$(document).keydown(function(e) {\n    if (e.keyCode in map) {\n        map[e.keyCode] = true;\n        if (map[68] &amp;&amp; map[69] &amp;&amp; map[86]) {\n            // FIRE EVENT\n        }\n    }\n}).keyup(function(e) {\n    if (e.keyCode in map) {\n        map[e.keyCode] = false;\n    }\n});\n</code></pre>\n\n<p>I assume you don't care what order they're pressed down in (as that would be a pain to reliably press) as long as they're all down at the same time at some point.</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>Similar to Vega's...but simpler</p>\n\n<pre><code>var down = [];\n$(document).keydown(function(e) {\n    down[e.keyCode] = true;\n}).keyup(function(e) {\n    if (down[68] &amp;&amp; down[69] &amp;&amp; down[86]) {\n        alert('oh hai');\n    }\n    down[e.keyCode] = false;\n});\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Perhaps a simpler key combination would be easier?</p>\n\n<p>How about something like Shift + Alt + D? (You probably shouldn't use the Control key because most browsers already interpret Ctrl+D in one way or another)</p>\n\n<p>The code for this would be something like this:</p>\n\n<pre><code>if(e.shiftKey &amp;&amp; e.altKey &amp;&amp; e.keyCode == 68)\n{\n  alert('l33t!');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you care about the order and also need to hold a key and tap another (ex: Shift + DEL, DEL, DEL...), without having to lift up on the first key to get the event to fire again... I've modified @BlakePlumm's [fiddle] comment which extended @lu1s' comment on @ParthThakkar's answer.</p>\n\n<p>Also, using jQuery's .on() allows you to listen for the key sequence only on certain elements. Change 'body' to 'input.selector' or whatever else.</p>\n\n<pre><code>var map = [];\nvar down = [];\n$(document).on('keydown','body', function(e) {\n    if(!map[e.which]){\n        down.push(e.which);\n        if(down[0] === 68 &amp;&amp; down[1] === 69 &amp;&amp; down[2] === 86) {\n            console.log('D + E + V');\n        } else if(down[0] === 16 &amp;&amp; down[1] === 46) {\n            console.log('SHIFT + DEL');\n        }\n        /* more conditions here */\n    }\n    map[e.which] = true;\n}).keyup(function(e) {\n    map[e.which] = false;\n\n    /* important for detecting repeat presses of\n       last key while holding first key(s)\n       (can be shortened. see fiddle) */\n    var len = down.length;\n    while (len--) {\n        if(down[len] === e.which) down.splice(len,1); //removes only the keyup'd key\n    }        \n    $('.alert').html('');\n});\n</code></pre>\n\n<p>Additional thoughts: \nIf you only kinda care about the order - that is, the first keys just need to be down, as long as your main event-firing key is pressed last (stuff like CTRL+SHIFT+TAB, TAB, TAB), add this condition:</p>\n\n<pre><code>else if(down.length&gt;2) {\n    if($.inArray(68,down)!=-1 &amp;&amp; $.inArray(69,down)!=-1 &amp;&amp; down[2] === 86) {\n        $('.alert').html('A hacky D+E+V was pressed');\n    }\n}\n</code></pre>\n\n<p>fiddle with more glorious options and live demo: - <a href=\"http://jsfiddle.net/kstarr/4ftL1p3k/\" rel=\"nofollow\">http://jsfiddle.net/kstarr/4ftL1p3k/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"https://github.com/JesseBuesking/jquery.hotkeys.extended\" rel=\"nofollow\">https://github.com/JesseBuesking/jquery.hotkeys.extended</a></p>\n\n<p>Check this out. You might be looking for this.</p>\n\n<p>We can trigger a function on multiple key press.\neg: p+t+k</p>\n\n<pre><code> $(document).hotkeys('p', 't', 'k', function (){\n        //show blurbox\n        $('#popup').blurbox({\n            blur: 10, animateBlur: true, bgColor: 'rgba(255,255,0,0.2)'\n        })bb.show();\n    });\n</code></pre>\n\n<p>maybe your looking for this.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I tried the three top answers (as of this post), and none of them worked for me. <strong>They didn't reset the keys</strong>. </p>\n\n<p>If it took 3 keys fire the script, after firing it once - pressing any one of the 3 keys would fire it again.</p>\n\n<p>I just wrote this script and it's working very well. It uses Shift+S to fire, but you can easily change that. It resets after pressing the combination.</p>\n\n<pre><code>var saveArray = new Array();\nsaveArray[0] = false;\nsaveArray[1] = false;\n\n$(document).ready(function(){\n\n    $(document).keydown(function (f){\n        if (f.keyCode == 16) {\n            saveArray[0] = true;\n        }\n    });\n\n    $(document).keyup(function (g){\n        if(g.which == 16){\n            saveArray[0] = false;\n        }\n    });\n\n    $(document).keydown(function (h){\n        if (h.keyCode == 83) {\n            saveArray[1] = true;\n            if(saveArray[0] == true &amp;&amp; saveArray[1] == true){\n                saveArray[0] = false;\n                saveArray[1] = false;\n                keypressSaveFunction();\n            }\n        }\n    });\n\n    $(document).keyup(function (i){\n        if (i.which == 83) {\n            saveArray[1] = false;\n        }\n    });\n});\n\n    function keypressSaveFunction(){\n        alert(\"You pressed Shift+S\");\n    }\n</code></pre>\n\n<p>Fiddle: <a href=\"http://jsfiddle.net/9m8yswwo/13/\" rel=\"nofollow\">http://jsfiddle.net/9m8yswwo/13/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is it at all possible to combine a mixture of keypress' to fire a single event?</p>\n\n<pre><code>$(document).keyup(function(e){\n    if (e.keyCode==68 &amp;&amp; e.keyCode==69 &amp;&amp; e.keyCode==86) {\n        alert('oh hai');\n    }\n});\n</code></pre>\n\n<p>I've tried it in Chrome but the event doesn't fire.</p>\n\n<p>Call me crazy but I am writing a chrome extension and want to push D+E+V keys together to force it into a hidden developer mode.</p>\n\n<p>I'm using this <a href=\"http://www.aspdotnetfaq.com/Faq/What-is-the-list-of-KeyCodes-for-JavaScript-KeyDown-KeyPress-and-KeyUp-events.aspx\">reference</a> for the keycodes</p>\n",
            "last_activity_date": 1415957844,
            "question_id": 10655202,
            "score": 17,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Detect multiple keys on single keypress event on jQuery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>To be honest I wouldn't try to parse that date string in C#, I'd personally try to create a more useful date structure from your javascript date object.</p>\n\n<p>For instance you could use <code>parse()</code> in javascript which will return the ms representing the date object, which you can use <code>DateTime.Parse()</code> on to convert into a C# DateTime object.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use <a href=\"http://msdn.microsoft.com/en-us/library/system.datetime.parseexact.aspx\">DateTime.ParseExact</a> which allows you to specify a format string to be used for parsing:</p>\n\n<pre><code>DateTime dt = DateTime.ParseExact(\"Wed Dec 16 00:00:00 UTC-0400 2009\",\n                                  \"ddd MMM d HH:mm:ss UTCzzzzz yyyy\",\n                                  CultureInfo.InvariantCulture);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>The most reliable way would be to use milliseconds since the epoch. You can easily get this in JavaScript by calling <code>Date.getTime()</code>. Then, in C# you can convert it to a DateTime like this:</p>\n\n<pre><code>long msSinceEpoch = 1260402952906; // Value from Date.getTime() in JavaScript\nreturn new DateTime(1970, 1, 1).AddTicks(msSinceEpoch * 10000);\n</code></pre>\n\n<p>You have to multiply by 10,000 to convert from milliseconds to \"ticks\", which are 100 nanoseconds.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Just for posterity, to help future fellow Googlers, I'd like to expand on EMP's answer.</p>\n\n<p>EMP's answer provides the time in <strong>UTC</strong> (if that's what you're looking for, use that).</p>\n\n<p>To arrive at the <strong>client local time</strong> in C#:</p>\n\n<p>In JavaScript:</p>\n\n<pre><code>        var now = new Date();\n        var UTC = now.getTime();\n        var localOffset = (-1) * now.getTimezoneOffset() * 60000;\n        var currentTime = Math.round(new Date(UTC + localOffset).getTime()); \n</code></pre>\n\n<p>In C#: </p>\n\n<pre><code>        DateTime currentTimeDotNet = new DateTime(1970, 1, 1).AddTicks(Convert.ToInt64(currentTime) * 10000);\n</code></pre>\n\n<p>Credit to <a href=\"http://weblogs.asp.net/gunnarpeipman/archive/2010/05/29/javascript-creating-timestamps-with-time-zone-offsets.aspx\">this blog</a> and EMP's answer, but took some trial and error on both ends to get it right, so just fyi for future folks.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This may not be possible in your case, but I really recommend updating the JS code to pass dates/times in ISO 8601 format.  <a href=\"http://en.wikipedia.org/wiki/ISO_8601\" rel=\"nofollow\">http://en.wikipedia.org/wiki/ISO_8601</a></p>\n\n<p><strong>ISO 8601 is not only the formal standard, it's also easy to use and prevents a lot of timezone hassle!</strong></p>\n\n<p>To get 8601 datetime strings in Javascript:</p>\n\n<pre><code>var d = new Date();\nvar iso_time = d.toISOString(); //\"2014-05-06T18:49:16.029Z\"\n</code></pre>\n\n<p>To read 8601 datetime strings in C#:</p>\n\n<pre><code>DateTime d = DateTime.Parse(json_string);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have javascript date object which gives me a date string in this format, \"Wed Dec 16 00:00:00 UTC-0400 2009\".</p>\n\n<p>I pass this via Ajax to the server (ASP.NET c#)</p>\n\n<p>How can I convert, \"Wed Dec 16 00:00:00 UTC-0400 2009\" to a C# DateTime object. DateTime.Parse fails.</p>\n",
            "last_activity_date": 1399402733,
            "question_id": 1877788,
            "score": 17,
            "tags": [
                "c#",
                "javascript",
                "date"
            ],
            "title": "Javascript date to C# via Ajax"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I would say, once the input is sanitized, eval is the best way to go. If your server gets compromised, people will be able to send whatever scripts they want to the client anyway. So putting an eval is not a big security risk. If you are worried about people manipulating the packets before they reach the client then, again, the scripts themselves can be modified.</p>\n\n<p>Don't worry about eval. But make sure to wrap it in a try...catch block so your users don't get JS errors if your JSON gets mangled.</p>\n\n<p>:)</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Compare to the command design pattern: <a href=\"http://en.wikipedia.org/wiki/Command%5Fpattern\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Command_pattern</a>. Given this, you can precisely define the operations a client can execute and your application will be as safe as the underlying interpretation.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Depends on what you're trying to accomplish with the sanitation. I've had great success w/the <a href=\"http://www.prototypejs.org\" rel=\"nofollow\">prototype</a> framework's support for JSON and safe evaluation.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>json.org has a nice <a href=\"http://www.json.org/js.html\">javascript library</a>  </p>\n\n<p>simple usage:</p>\n\n<pre><code>JSON.parse('[{\"some\":\"json\"}]');\nJSON.stringify([{some:'json'}]);\n</code></pre>\n\n<p><strong>Edit</strong>: As pointed out in comments, this uses eval if you look through its source (although it looks to be sanitized first)  </p>\n\n<p>to avoid it completely, look at <a href=\"http://www.json.org/json%5Fparse.js\">json_parse</a> or <a href=\"http://code.google.com/p/json-sans-eval/\">json-sans-eval</a></p>\n\n<p>json2.js is insecure, json_parse.js is slow, json-sans-eval.js is non-validating</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<blockquote>\n  <p>Is there a standard, proven-secure way of doing this?</p>\n</blockquote>\n\n<p>There is a proposed standard way of doing this, in the forthcoming ECMAScript 3.1 version of JavaScript: <a href=\"http://wiki.ecmascript.org/doku.php?id=es3.1:json%5Fsupport\">JSON.parse</a>.</p>\n\n<p>It will be supported in IE8, Firefox 3.1/3.5 and most likely the other popular browsers in the future. In the meantime, you can fall back to, or use exclusively, eval(). Evil it may or may not be; certainly it will be slower than JSON.parse. But that's the usual way to parse JSON today.</p>\n\n<p>If an attacker is able to inject malcious JavaScript into content you are spitting out via JSON, you have bigger problems to worry about than eval-is-evil.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>To safely convert JSON to a JS object you should use a JSON parser such as the JSON.parse() function provided by <a href=\"https://github.com/douglascrockford/JSON-js/blob/master/json2.js\" rel=\"nofollow\">this library</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you're certain there's no injection risk, and you're not <code>eval()ing</code> in a loop, then use <code>eval()</code>. It will compare favorably to other options which will certainly be slower, might break, and will require the client to download additional code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you don\u2019t want to use <code>eval()</code>, why not use <a href=\"http://twitter.com/cowboy/status/18779551077\"><code>awesome()</code></a> instead?</p>\n\n<pre><code>var awesome = window['evil'.replace('i', 'a')];\n\nawesome('1 + 1'); // 2\n</code></pre>\n\n<p>See? Much nicer!</p>\n\n<p><sub><code>&lt;/sarcasm&gt;</code></sub></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>\"stolen\" from jQuery</p>\n\n<pre><code>// Try to use the native JSON parser first\nreturn window.JSON &amp;&amp; window.JSON.parse ?\n    window.JSON.parse( data ) :\n    (new Function(\"return \" + data))();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Issue:</strong>\nThe problem eval poses is that it executes in the global scope</p>\n\n<pre><code>eval.call(document, \"console.log(this)\")\neval.call(navigator, \"console.log(this)\")\neval.call(window, \"console.log(this)\")\n(function(){eval.call(document, \"console.log(this)\")})()\n&gt;Window\n</code></pre>\n\n<p><strong>Scenario:</strong></p>\n\n<p>Assume you are using individual attributes in the markup code of various document-elements such as an attribute <em>onvisible</em></p>\n\n<pre><code>&lt;img src=\"\" onvisible=\"src='http://www.example.com/myimg.png';\"&gt;\n</code></pre>\n\n<p>You would like to get all elements with this attribute, turn the onvisible-content-string into a closure and put it into an EventHandler queue. This is where the JS Function constructor comes into play.</p>\n\n<pre><code>Function === 0..constructor.constructor\n&gt;true\n\nFunction('return [this, arguments]').call(window, 1,2,3)\n&gt;Window, Arguments[3]]\nFunction('return [this, arguments]').call(document, 1,2,3)\n&gt;Document, Arguments[3]]\nFunction('return [this, arguments]').call(navigator, 1,2,3)\n&gt;Navigator, Arguments[3]]    \n</code></pre>\n\n<p>Putting it all together:</p>\n\n<pre><code>var eventQueue = [];\nvar els = document.querySelectorAll('[onvisible]');\n\nfor (var el in els) {\n    var jscode = els[el].getAttribute('onvisible');\n    eventQueue.push( {el:els[el], cb:Function(jscode)} )\n}\n\n//eventQueue[0].cb.call(scope, args);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>An ajax request returns me a standard JSON array filled with my user's inputs. The input has been sanitized, and using the eval() function, I can easily create my javascript object and update my page...</p>\n\n<p>So here's the problem. No matter how hard I try to sanitize the inputs, I'd rather not use the eval() function. I've checked google for ways to use \"JSON in AJAX without eval\" and have ran accross a bunch of different methods... </p>\n\n<p>Which one should I use? Is there a standard, proven-secure way of doing this?</p>\n",
            "last_activity_date": 1335770789,
            "question_id": 646597,
            "score": 17,
            "tags": [
                "javascript",
                "ajax",
                "eval"
            ],
            "title": "Eval is evil... So what should I use instead?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There's no such browser event in JavaScript and even if there was you can not trust the user's browser to provide security for you.</p>\n\n<p>You're better off using a GUID to generate a unique URL for each download. You can then for example:</p>\n\n<ul>\n<li>let the URL be valid only for a specific time period</li>\n<li>allow transfers only from a specific IP address associated with the unique URL</li>\n<li>let your server-side code detect when the content for a unique URL has been fully transferred and then invalidate the URL.</li>\n</ul>\n\n<p>Let me clarify the last bullet. Say you're using Java - you will <code>in.read(buffer)</code> and <code>out.write(buffer)</code> in a loop until EOF. If the client disconnects you will receive an <code>IOException</code> during <code>out.write()</code> and will be able to tell a successful download from an interrupted one. On other platforms, I'm sure there are ways to tell whether the connection was lost or not.</p>\n\n<p><strong>EDIT:</strong> You could actually fire a browser event using the trick outlined in the accepted answer of <a href=\"http://stackoverflow.com/questions/666468/ie6-detecting-when-the-file-download-popup-is-closed\">one of the questions you linked to</a>. That would however not be a reliable solution to limit the number of downloads.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Why is it important that the file can be downloaded \"exactly once\"? Once the file is downloaded it could be copied, so is there really a security issue with letting the <em>same user</em> download the file more than once?</p>\n\n<p>If not, could you do something like this:</p>\n\n<ol>\n<li>Generate a unique URL to download a given file. (Use a GUID to obsfucate if necessary)</li>\n<li>Associate that URL with USER INFO (browser type, IP address, etc) AND A TIME WINDOW. Only allow downloads from that user and during the window.</li>\n<li>The window should be long enough for the user to notice the transfer failed and to re-try once or twice, but no longer.</li>\n</ol>\n\n<p>The end result is:</p>\n\n<ol>\n<li>You can be reasonably sure the file is only being downloaded by the intended recipient.</li>\n<li>You can be sure that recipient can only download the file during a short window.</li>\n<li>The same user could download the file more than once, but who cares? It's no different than making a local copy of the first file.</li>\n</ol>\n\n<p>If you're really worried about it, log each download request and run a scheduled report for files that were downloaded more than once. If anything looks fishy you can then examine security logs, talk to the user, etc.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is a good solution:</p>\n\n<p><a href=\"http://gruffcode.com/2010/10/28/detecting-the-file-download-dialog-in-the-browser/\" rel=\"nofollow\">http://gruffcode.com/2010/10/28/detecting-the-file-download-dialog-in-the-browser/</a></p>\n\n<p>It basically works by setting a cookie in the reponse header of the downloaded file, so javascript periodically can check for the existence of this cookie...</p>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>I have sensitive files to download to users, and each user is permitted to <strong>download</strong> a given file exactly once.  If the download fails, I want to permit the re-download, but not otherwise.</p>\n\n<p>It's not sufficient to rely on logging/processing the file download <strong>request</strong> at the server - I need to know deterministically when the file is complete and in place at the client, since many of my users work in an environment with frequent connectivity drops.</p>\n\n<p>The most straightforward way for this to work would be if the browser exposed a \"file saved\" event from the Save As... dialog that could be wired to a JavaScript function on the download page (which could post back to the server).  But, intuition suggests there might be security holes if browsers exposed this functionality, as it sneaks somewhat outside the sandbox.  I'm not sure this is even possible.</p>\n\n<p>I <a href=\"http://stackoverflow.com/questions/315752/fire-javascript-code-when-download-finishes\">found</a> <a href=\"http://stackoverflow.com/questions/1106377/detect-when-browser-receives-file-download\">several</a> <a href=\"http://stackoverflow.com/questions/666468/ie6-detecting-when-the-file-download-popup-is-closed\">other</a> <a href=\"http://stackoverflow.com/questions/371497/http-file-download-with-javascript\">questions</a> <a href=\"http://stackoverflow.com/questions/1926730/tracking-download-completions-from-a-website-cdn\">in this area</a>, but nothing about this problem specifically.</p>\n\n<p>Any ideas?</p>\n\n<p><strong>Edit:</strong> I should not have used the word \"security\" in the original question, sorry for triggering the red herrings.</p>\n\n<p><strong>Edit 2:</strong> My \"security\" phrasing misled folks into offtopic technical security issues, but both of you confirmed my suspicion that \"no, there's no browser support for that.\"  I'm marking the first commenter with the answer since his first sentence had what I was looking for.  Thanks all.</p>\n",
            "last_activity_date": 1422218596,
            "question_id": 2343418,
            "score": 13,
            "tags": [
                "javascript",
                "browser",
                "javascript-events",
                "download",
                "save"
            ],
            "title": "Browser event when downloaded file is saved to disk"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>See <a href=\"http://stackoverflow.com/q/6617361/331508\">\"Are Chrome user-scripts separated from the global namespace like Greasemonkey scripts?\"</a>.  Both Chrome userscripts/content-scripts and Greasemonkey scripts are isolated from the page's javascript.  This is done to help keep you from being hacked, but it also reduces conflicts and unexpected side-effects.</p>\n\n<p>However, the methods are different for each browser...</p>\n\n<p><strong>Firefox:</strong></p>\n\n<ol>\n<li>Runs scripts in <a href=\"https://developer.mozilla.org/en/XPCNativeWrapper\" rel=\"nofollow\">an XPCNativeWrapper sandbox</a>, unless <a href=\"http://wiki.greasespot.net/@grant\" rel=\"nofollow\"><code>@grant none</code></a> is in effect (as of GM 1.0).</li>\n<li>Wraps the script in an anonymous function by default.</li>\n<li>Provides <code>unsafeWindow</code> to access the target page's javascript.  But beware that it is <em>possible</em> for hostile webmasters to follow <code>unsafeWindow</code> usage back to the script's context and thus gain elevated privileges to pwn you with.</li>\n</ol>\n\n<p><strong>Chrome:</strong></p>\n\n<ol>\n<li>Runs scripts in <a href=\"https://developer.chrome.com/extensions/content_scripts.html#execution-environment\" rel=\"nofollow\">an \"isolated world\"</a>.</li>\n<li>Wraps the script in an anonymous function.</li>\n<li><strong><em>Strictly</em></strong> blocks any access to the page's JS by the script and vice-versa.<br>\nRecent versions of Chrome now provide an object named <code>unsafeWindow</code>, for very-limited compatibility, but this object does not provide any access to the target page's JS.  It is the same as <code>window</code> in the script scope (which is not <code>window</code> in the page scope).</li>\n</ol>\n\n<hr>\n\n<p>That said, the version of your script that used <code>unsafeWindow</code> should work on/in Firefox if implemented correctly.  It <em>might</em> work using <a href=\"https://chrome.google.com/extensions/detail/dhdgffkkebhmkfjojejmpbldmpobfkfo\" rel=\"nofollow\">the Tampermonkey extension</a> on Chrome, but I'm not going to double-check that right now.</p>\n\n<p>When you do that \"trick\" (<code>var script = document.createElement(\"script\"); ...</code>), you are <strong><em>injecting</em></strong> code into the target page.   This bypasses the sandbox and is the only way on a normal Chrome userscript for a script to interact with the page's JS.</p>\n\n<p><strong>Injection advantages:</strong></p>\n\n<ol>\n<li>The only way for non-Tampermonkey userscripts to access objects or functions provided by the target page.</li>\n<li>Almost always fully compatible between Chrome, Firefox, Opera, etc. (IE is, as always, something else.)</li>\n<li>Often easier to debug the whole script; developer tools work normally.</li>\n</ol>\n\n<p><strong>Injection drawbacks:</strong></p>\n\n<ol>\n<li><p>The script, at least the injected parts, cannot use the enhanced privileges (especially cross-domain) provided by the <code>GM_</code> functions -- especially <code>GM_xmlhttpRequest()</code>.<br>\nNote that <em>currently</em> Chrome only supports <code>GM_addStyle</code>, <code>GM_xmlhttpRequest</code>, <code>GM_log</code> and <code>GM_openInTab</code>, fully, natively.<br>\nTampermonkey supports <code>GM_</code> functions almost fully, however.</p></li>\n<li><p>Can cause side effects or conflicts with the page's JS.</p></li>\n<li><p>Using external libraries introduces even more conflicts and timing issues.  It's nowhere near as easy as <code>@require</code>.<br>\n<code>@require</code>, also runs the external JS from a local copy -- speeding execution and all but eliminating reliance on an external server.</p></li>\n<li><p>The page can see, use, change, or block the script.  </p></li>\n<li><p>Requires JS to be enabled.  Firefox Greasemonkey, especially, can run on a page which has JS blocked.  This can be godsend on bloated, crappy, and/or intrusive pages.</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 27
                }
            ],
            "body": "<p>I was facing an issue while developing this <a href=\"https://github.com/ldiqual/facebook-read-status-disabler/blob/master/facebook-read-status-disabler.user.js\">small userscript</a>. When I wanted to block every <code>XMLHttpRequest</code> from the running website with my script, nothing was happening (at least with Chrome):</p>\n\n<pre><code>function main() {\n  // Override XHR.open with a custom function\n  window.XMLHttpRequest.prototype.open = function() {\n    // Nothing... so it's supposed to block every xhr.open() call\n  }\n}\nmain();\n</code></pre>\n\n<p>Same thing when replacing <code>window</code> by <code>unsafeWindow</code>.</p>\n\n<p>However, when I used this little trick, everything worked like a charm:</p>\n\n<pre><code>// No more call to main(), and:\nvar script = document.createElement(\"script\");\nscript.textContent = \"(\" + main.toString() + \")();\";\ndocument.body.appendChild(script);\n</code></pre>\n\n<p>Every call to <code>xhr.open</code> is replaced by my custom function, no more AJAX.</p>\n\n<p>So I guess the <code>window</code> element is not the same when <code>main</code> is called from inside the script than when it's called from a <code>&lt;script&gt;&lt;/script&gt;</code> container. Can someone explain me why ?</p>\n",
            "last_activity_date": 1401722168,
            "question_id": 10824697,
            "score": 10,
            "tags": [
                "javascript",
                "greasemonkey",
                "variable-scope",
                "userscripts"
            ],
            "title": "Why is window (and unsafeWindow) not the same from a userscript as from a &lt;script&gt; tag?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>With HTML5 you can do</p>\n\n<pre><code>&lt;input type=\"number\"&gt;\n</code></pre>\n\n<p>See </p>\n\n<ul>\n<li><a href=\"http://diveintohtml5.ep.io/forms.html\">http://diveintohtml5.ep.io/forms.html</a></li>\n<li><a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/common-input-element-attributes.html#the-min-and-max-attributes\">http://www.whatwg.org/specs/web-apps/current-work/multipage/common-input-element-attributes.html#the-min-and-max-attributes</a></li>\n<li><a href=\"http://www.pageresource.com/html5/input-validation-tutorial/\">http://www.pageresource.com/html5/input-validation-tutorial/</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>You could subscribe for the onkeypress event:</p>\n\n<pre><code>&lt;input type=\"text\" class=\"textfield\" value=\"\" id=\"extra7\" name=\"extra7\" onkeypress=\"return isNumber(event)\" /&gt;\n</code></pre>\n\n<p>and then define the <code>isNumber</code> function:</p>\n\n<pre><code>function isNumber(evt) {\n    evt = (evt) ? evt : window.event;\n    var charCode = (evt.which) ? evt.which : evt.keyCode;\n    if (charCode &gt; 31 &amp;&amp; (charCode &lt; 48 || charCode &gt; 57)) {\n        return false;\n    }\n    return true;\n}\n</code></pre>\n\n<p>You can see it in <a href=\"http://jsfiddle.net/Lm2hS/\">action here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 53
                },
                {
                    "body": "<p>You also can use some HTML5 attributes, some browsers might already take advantage of them (<code>type=\"number\" min=\"0\"</code>).</p>\n\n<p>Whatever you do, remember to re-check your inputs on the server side: you can never assume the client-side validation has been performed.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/995183/how-to-allow-only-numeric-0-9-in-html-inputbox-using-jquery\">How to allow only numeric (0-9) in HTML  inputbox using jQuery?</a>  </p>\n</blockquote>\n\n\n\n<p>How to allow only numbers to be written in this textbox ?</p>\n\n<pre><code>&lt;input type=\"text\" class=\"textfield\" value=\"\" id=\"extra7\" name=\"extra7\"&gt;\n</code></pre>\n",
            "last_activity_date": 1317925366,
            "question_id": 7295843,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "Allow only numbers to be typed in a textbox"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>var text = '&amp;lt;p&amp;gt;name&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;span style=\"font-size:xx-small;\"&amp;gt;ajde&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;da&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;';\nvar decoded = $('&lt;div/&gt;').html(text).text();\nalert(decoded);\n</code></pre>\n\n<p>This sets the innerHTML of a new  element (not appended to the page), causing jQuery to decode it into HTML, which is then pulled back out with .text().</p>\n\n<p><a href=\"http://jsfiddle.net/aZxjG/\">Live demo</a>.</p>\n",
                    "is_accepted": true,
                    "score": 87
                },
                {
                    "body": "<p>There is a jQuery solution in <a href=\"http://stackoverflow.com/questions/1147359/how-to-decode-html-entities-using-jquery\">this thread</a>. Try something like this:</p>\n\n<pre><code>var decoded = $(\"&lt;div/&gt;\").html('your string').text();\n</code></pre>\n\n<p>This sets the innerHTML of a new <code>&lt;div&gt;</code> element (not appended to the page), causing jQuery to decode it into HTML, which is then pulled back out with <code>.text()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Using jQuery the easiest will be:</p>\n\n<pre><code>var text = '&amp;lt;p&amp;gt;name&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;span style=\"font-size:xx-small;\"&amp;gt;ajde&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;da&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;';\n\nvar output = $(\"&lt;div /&gt;\").html(text).text();\nconsole.log(output);\n</code></pre>\n\n<p><strong>DEMO:</strong> <a href=\"http://jsfiddle.net/LKGZx/\" rel=\"nofollow\">http://jsfiddle.net/LKGZx/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I think you are looking for this ?   </p>\n\n<pre><code>$('#your_id').html('&amp;lt;p&amp;gt;name&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;span style=\"font-size:xx-small;\"&amp;gt;ajde&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;da&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;').text();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1147359/how-to-decode-html-entities-using-jquery\">How to decode HTML entities using jQuery?</a>  </p>\n</blockquote>\n\n\n\n<p>I want to convert this text:</p>\n\n<pre><code>\"&amp;lt;p&amp;gt;name&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;span style=\"font-size:xx-small;\"&amp;gt;ajde&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;da&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;\"\n</code></pre>\n\n<p>to html, with tags and everything in Javascript or Jquery. How to do this?</p>\n",
            "last_activity_date": 1391080395,
            "question_id": 10715801,
            "score": 25,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Javascript decoding html entities"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It is the <a href=\"http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Date\">definition of the Date object</a> to use values 0-11 for the <code>month</code> field.</p>\n\n<p>I believe that the constructor using a String is system-dependent (not to mention locale/timezone dependent) so you are probably better off using the constructor where you specify year/month/day as seperate parameters.</p>\n\n<p>BTW, in Firefox, </p>\n\n<pre><code>new Date(\"04/02/2008\");\n</code></pre>\n\n<p>works fine for me - it will interpret slashes, but not hyphens. I think this proves my point that using a String to construct a Date object is problemsome. Use explicit values for month/day/year instead:</p>\n\n<pre><code>new Date(2008, 3, 2);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>Bold statement.</p>\n\n<p>This might have your interest: <a href=\"http://ejohn.org/blog/javascript-pretty-date/\" rel=\"nofollow\">JavaScript Pretty Date</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You're quite right, month is indicated as an index, so January is month number 0 and December is month number 11 ...</p>\n\n<p>-- and there is no work-around as it is stated clearly in the ECMA-script-definition, though simple tricks commonly will work:</p>\n\n<pre><code>var myDate = \"2008,03,02\".split(\",\");\nvar theDate = new Date(myDate[0],myDate[1]-1,myDate[2]); \nalert(theDate);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>nice trick indeed, which i just found out the hard way (by thinking thru it).\nBut i used a more natural date string with hyphen :-)</p>\n\n<pre><code>var myDateArray = \"2008-03-02\".split(\"-\");\nvar theDate = new Date(myDateArray[0],myDateArray[1]-1,myDateArray[2]); \nalert(theDate);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Using</p>\n\n<pre><code>var theDate = new Date(myDate[0],myDate[1]-1,myDate[2]); \n</code></pre>\n\n<p>Is fine, but it shows some strange behaviors when month and day values are erroneous.</p>\n\n<p>Try casting a date where both <code>myDate[1]-1</code> and <code>myDate[2]</code> have values of 55. Javascript still returns a date, though the input is obviously not correct.</p>\n\n<p>I would have preferred javascript to return an error in such a case.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>@Frank: you are right. When you need to validate date,</p>\n\n<pre><code>var theDate = new Date(myDate[0],myDate[1]-1,myDate[2]); \n</code></pre>\n\n<p>will not work.</p>\n\n<p>What happens is that it keeps on adding the extra parameter. For example:</p>\n\n<pre><code>new Date(\"2012\", \"11\", \"57\") // Date {Sat Jan 26 2013 00:00:00 GMT+0530 (IST)}\n</code></pre>\n\n<p>Date object takes the extra days (57-31=26) and adds it to the date we created.</p>\n\n<p>Or if we try constructing a date object with:</p>\n\n<pre><code>new Date(\"2012\", \"11\", \"57\", \"57\") //Date {Mon Jan 28 2013 09:00:00 GMT+0530 (IST)}\n</code></pre>\n\n<p>an extra 2 days and 9 hours (57=24+24+9) are added.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have an issue - </p>\n\n<p>The javascript <code>Date(\"mm-dd-yyyy\")</code> constructor doesn't work for FF.  It works fine for IE.</p>\n\n<ul>\n<li>IE : <code>new Date(\"04-02-2008\")</code> => <code>\"Wed Apr 2 00:00:00 EDT 2008\"</code></li>\n<li>FF2 : <code>new Date(\"04-02-2008\")</code> => <code>Invalid Date</code>    </li>\n</ul>\n\n<p>So lets try another constructor. Trying this constructor <code>Date(\"yyyy\", \"mm\", \"dd\")</code></p>\n\n<ul>\n<li>IE : <code>new Date(\"2008\", \"04\", \"02\");</code> => <code>\"Fri May 2 00:00:00 EDT 2008\"</code></li>\n<li>FF : <code>new Date(\"2008\", \"04\", \"02\");</code> => <code>\"Fri May 2 00:00:00 EDT 2008\"</code></li>\n<li>IE : <code>new Date(\"2008\", \"03\", \"02\");</code> => <code>\"Wed Apr 2 00:00:00 EDT 2008\"</code></li>\n<li>FF : <code>new Date(\"2008\", \"03\", \"02\");</code> => <code>\"Wed Apr 2 00:00:00 EDT 2008\"</code></li>\n</ul>\n\n<p>So the <code>Date(\"yyyy\", \"mm\", \"dd\")</code> constructor uses an index of <code>0</code> to represent January. </p>\n\n<p>Has anyone dealt with this?<br>\nThere must be a better way than subtracting 1 from the months.</p>\n",
            "last_activity_date": 1373449227,
            "question_id": 163563,
            "score": 25,
            "tags": [
                "javascript"
            ],
            "title": "Javascript Date() constructor doesn&#39;t work"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This should work:</p>\n\n<pre><code>myObject[\"0\"]\n</code></pre>\n\n<p>(<code>myObject[\"propertyName\"]</code> is an alternative syntax for <code>myObject.propertyName</code>.)</p>\n\n<p>You're getting the error because, in JavaScript, identifiers can't begin with a numeral. From the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Variables#Variables\">Variables</a> page at the <a href=\"https://developer.mozilla.org/\">Mozilla Developer Centre</a>:</p>\n\n<blockquote>\n  <p>A JavaScript identifier must start\n  with a letter, underscore (_), or\n  dollar sign ($); subsequent characters\n  can also be digits (0-9). Because\n  JavaScript is case sensitive, letters\n  include the characters \"A\" through \"Z\"\n  (uppercase) and the characters \"a\"\n  through \"z\" (lowercase).</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p><code>myObject[\"0\"]</code></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>if you have data like </p>\n\n<pre><code>  `\"rain\": {\n           \"3h\": 0\n         },` \n</code></pre>\n\n<p>then you can simply access it <code>rain['3h']</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an object like:</p>\n\n<pre><code>var myObject = { '0' : 'blue' };\n</code></pre>\n\n<p>Now, when I try to access the value of the key '0' like:</p>\n\n<pre><code>myObject.0 \n</code></pre>\n\n<p>...I am getting an error. (Maybe this is not the proper way?)</p>\n\n<p>How can I access the value of a key that is a number (like the above)?</p>\n",
            "last_activity_date": 1403866048,
            "question_id": 2026741,
            "score": 24,
            "tags": [
                "javascript"
            ],
            "title": "How to access a numeric property?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You say it's not working. What are you expecting to happen?</p>\n\n<p>There's no way of getting the data out of a <code>FormData</code> object; it's just intended for you to use to send data along with an <code>XMLHttpRequest</code> object (for the <code>send</code> method).</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>What I usually do to 'debug' a <code>FormData</code> object, is just send it (anywhere!) and check the browser logs (eg. Chrome devtools' Network tab).</p>\n\n<p>You don't need a/the same Ajax framework. You don't need any details. Just send it:</p>\n\n<pre><code>var xhr = new XMLHttpRequest;\nxhr.open('POST', '/', true);\nxhr.send(data);\n</code></pre>\n\n<p>Easy.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>You might have been having the same problem I was initially having. I was trying to use FormData to grab all my input files to upload an image, but at the same time I wanted to append a session ID to the information passed along to the server. All this time, I thought by appending the information, you would be able to see it in the server by accessing the object. I was wrong. When you append to FormData, the way to check the appended information on the server is by a simple <code>$_POST['*your appended data*']</code> query. like so:</p>\n\n<p>js:</p>\n\n<pre><code>$('form').submit(function(){\n   var sessionID = 8;\n   var formData = new FormData(this);\n   formData.append('id', sessionID);\n\n.ajax({\n    url: \"yoururl.php\",\n    data: formData,\n    processData: false,\n    contentType: false,\n    type: 'POST',\n    success: function(data){\n        alert(data);\n    }\n    });\n});\n</code></pre>\n\n<p>then on php:</p>\n\n<pre><code>&lt;?php\n  $sessionID = $_POST['id'];\n  $files = $_FILES['image'];\n\n  $foreach ($files as $key=&gt;val)\n      ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>try </p>\n\n<pre><code>console.log(formdata.toString());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are in Chrome you can check the Post Data</p>\n\n<p>Here is How to check the Post data</p>\n\n<ol>\n<li>Go to Network Tab</li>\n<li>Look for the Link to which you are sending Post Data</li>\n<li>Click on it</li>\n<li>In the Headers, you can check Request Payload to check the post data<img src=\"http://i.stack.imgur.com/Jo0KC.png\" alt=\"enter image description here\"></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Can you tell me whats wrong with this:</p>\n\n<pre><code>var formdata = new FormData();\nformdata.append(\"key\", \"value\");\nconsole.log(formdata);\n</code></pre>\n\n<p>My output looks like this, I cant find my \"key\" - \"value\" pair</p>\n\n<pre><code>FormData\n*__proto__: FormData\n**append: function append() { [native code] }\n***arguments: null\n***caller: null\n***length: 0\n***name: \"append\"\n***prototype: append\n***__proto__: function Empty() {}\n*constructor: function FormData() { [native code] }\n**arguments: null\n**caller: null\n**length: 0\n**name: \"FormData\"\n**prototype: FormData\n**toString: function toString() { [native code] }\n*__proto__: Object\n**__proto__: Object\n**__defineGetter__: function __defineGetter__() { [native code] }\n**__defineSetter__: function __defineSetter__() { [native code] }\n**__lookupGetter__: function __lookupGetter__() { [native code] }\n**__lookupSetter__: function __lookupSetter__() { [native code] }\n**constructor: function Object() { [native code] }\n**hasOwnProperty: function hasOwnProperty() { [native code] }\n**isPrototypeOf: function isPrototypeOf() { [native code] }\n**propertyIsEnumerable: function propertyIsEnumerable() { [native code] }\n**toLocaleString: function toLocaleString() { [native code] }\n**toString: function toString() { [native code] }\n**valueOf: function valueOf() { [native code] }\n</code></pre>\n\n<p>I can't understand! Yesterday it worked so well, and today my head crashed the keyboard so many times! Firefox, Chrome, both the same :/</p>\n",
            "last_activity_date": 1405363306,
            "question_id": 7752188,
            "score": 19,
            "tags": [
                "javascript",
                "html5",
                "form-data"
            ],
            "title": "FormData.append(&quot;key&quot;, &quot;value&quot;) is not working"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>EDIT: You cannot overload operators in current, common browser-based implementations of JavaScript interpreters.</p>\n\n<p>To answer the original question, one way you could do this, and mind you, this is a bit of a hack, simply <a href=\"https://github.com/douglascrockford/JSON-js/blob/master/json2.js\">serialize the two arrays to JSON</a> and then compare the two JSON strings. That would simply tell you if the arrays are different, obviously you could do this to <em>each</em> of the objects within the arrays as well to see which ones were different.</p>\n\n<p>Another option is to use a library which has some nice facilities for comparing objects - I use and recommend <a href=\"http://www.mochikit.com/\"><strong>MochiKit</strong></a>.</p>\n\n<hr>\n\n<p><strong>EDIT:</strong> <a href=\"http://stackoverflow.com/questions/27030/comparing-arrays-of-objects-in-javascript#27932\">The answer kamens gave</a> deserves consideration as well, since a single function to compare two given objects would be much smaller than any library to do what I suggest (although my suggestion would certainly work well enough).</p>\n\n<p>Here is a na\u00efve implemenation that may do just enough for you - be aware that there are potential problems with this implementation:</p>\n\n<pre><code>function objectsAreSame(x, y) {\n   var objectsAreSame = true;\n   for(var propertyName in x) {\n      if(x[propertyName] !== y[propertyName]) {\n         objectsAreSame = false;\n         break;\n      }\n   }\n   return objectsAreSame;\n}\n</code></pre>\n\n<p>The assumption is that both objects have the same exact list of properties.</p>\n\n<p>Oh, and it is probably obvious that, for better or worse, I belong to the only-one-return-point camp. :)</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Honestly, with 8 objects max and 8 properties max per object, your best bet is to just traverse each object and make the comparisons directly.  It'll be fast and it'll be easy.</p>\n\n<p>If you're going to be using these types of comparisons often, then I agree with Jason about JSON serialization...but otherwise there's no need to slow down your app with a new library or JSON serialization code.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The objectsAreSame function mentioned in Jason's answer works fine for me. However, there's a little problem: If <code>x[propertyName]</code> and <code>y[propertyName]</code> are objects (<code>typeof x[propertyName] == 'object'</code>), you'll need to call the function recursively in order to compare them.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have worked a bit on a simple algorithm to compare contents of two objects and return an intelligible list of difference. Thought I would share. It borrows some ideas for jQuery, namely the map function implementation and the object and array type checking. </p>\n\n<p>It returns a list of \"diff objects\", which are arrays with the diff info. It's very simple.</p>\n\n<p>Here it is: </p>\n\n<pre><code>// compare contents of two objects and return a list of differences\n// returns an array where each element is also an array in the form:\n// [accessor, diffType, leftValue, rightValue ]\n//\n// diffType is one of the following:\n//   value: when primitive values at that index are different\n//   undefined: when values in that index exist in one object but don't in \n//              another; one of the values is always undefined\n//   null: when a value in that index is null or undefined; values are\n//         expressed as boolean values, indicated wheter they were nulls\n//   type: when values in that index are of different types; values are \n//         expressed as types\n//   length: when arrays in that index are of different length; values are\n//           the lengths of the arrays\n//\n\nfunction DiffObjects(o1, o2) {\n    // choose a map() impl.\n    // you may use $.map from jQuery if you wish\n    var map = Array.prototype.map?\n        function(a) { return Array.prototype.map.apply(a, Array.prototype.slice.call(arguments, 1)); } :\n        function(a, f) { \n            var ret = new Array(a.length), value;\n            for ( var i = 0, length = a.length; i &lt; length; i++ ) \n                ret[i] = f(a[i], i);\n            return ret.concat();\n        };\n\n    // shorthand for push impl.\n    var push = Array.prototype.push;\n\n    // check for null/undefined values\n    if ((o1 == null) || (o2 == null)) {\n        if (o1 != o2)\n            return [[\"\", \"null\", o1!=null, o2!=null]];\n\n        return undefined; // both null\n    }\n    // compare types\n    if ((o1.constructor != o2.constructor) ||\n        (typeof o1 != typeof o2)) {\n        return [[\"\", \"type\", Object.prototype.toString.call(o1), Object.prototype.toString.call(o2) ]]; // different type\n\n    }\n\n    // compare arrays\n    if (Object.prototype.toString.call(o1) == \"[object Array]\") {\n        if (o1.length != o2.length) { \n            return [[\"\", \"length\", o1.length, o2.length]]; // different length\n        }\n        var diff =[];\n        for (var i=0; i&lt;o1.length; i++) {\n            // per element nested diff\n            var innerDiff = DiffObjects(o1[i], o2[i]);\n            if (innerDiff) { // o1[i] != o2[i]\n                // merge diff array into parent's while including parent object name ([i])\n                push.apply(diff, map(innerDiff, function(o, j) { o[0]=\"[\" + i + \"]\" + o[0]; return o; }));\n            }\n        }\n        // if any differences were found, return them\n        if (diff.length)\n            return diff;\n        // return nothing if arrays equal\n        return undefined;\n    }\n\n    // compare object trees\n    if (Object.prototype.toString.call(o1) == \"[object Object]\") {\n        var diff =[];\n        // check all props in o1\n        for (var prop in o1) {\n            // the double check in o1 is because in V8 objects remember keys set to undefined \n            if ((typeof o2[prop] == \"undefined\") &amp;&amp; (typeof o1[prop] != \"undefined\")) {\n                // prop exists in o1 but not in o2\n                diff.push([\"[\" + prop + \"]\", \"undefined\", o1[prop], undefined]); // prop exists in o1 but not in o2\n\n            }\n            else {\n                // per element nested diff\n                var innerDiff = DiffObjects(o1[prop], o2[prop]);\n                if (innerDiff) { // o1[prop] != o2[prop]\n                    // merge diff array into parent's while including parent object name ([prop])\n                    push.apply(diff, map(innerDiff, function(o, j) { o[0]=\"[\" + prop + \"]\" + o[0]; return o; }));\n                }\n\n            }\n        }\n        for (var prop in o2) {\n            // the double check in o2 is because in V8 objects remember keys set to undefined \n            if ((typeof o1[prop] == \"undefined\") &amp;&amp; (typeof o2[prop] != \"undefined\")) {\n                // prop exists in o2 but not in o1\n                diff.push([\"[\" + prop + \"]\", \"undefined\", undefined, o2[prop]]); // prop exists in o2 but not in o1\n\n            }\n        }\n        // if any differences were found, return them\n        if (diff.length)\n            return diff;\n        // return nothing if objects equal\n        return undefined;\n    }\n    // if same type and not null or objects or arrays\n    // perform primitive value comparison\n    if (o1 != o2)\n        return [[\"\", \"value\", o1, o2]];\n\n    // return nothing if values are equal\n    return undefined;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I know this is an old question and the answers provided work fine ... but this is a bit shorter and doesn't require any additional libraries ( i.e. JSON ):</p>\n\n<pre><code>function arraysAreEqual(ary1,ary2){\n  return (ary1.join('') == ary2.join(''));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Please try this one </p>\n\n<pre><code> function used_to_compare_two_arrays(a,b)\n     {\n///this block will make the array of indexed that array b contains a elements\n       var c = a.filter(function(value, index, obj)\n       {\n        return b.indexOf(value) &gt; -1;\n         });\n    ///this is used for making comparison that both have same length if no condition go wrong \n    if (c.length !== a.length) {\n        return 0;\n    }\n    else{\n      return 1;\n    }\n\n     }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to compare 2 arrays of objects in JavaScript code.  The objects have 8 total properties, but each object will not have a value for each, and the arrays are never going to be any larger than 8 items each, so maybe the brute force method of traversing each and then looking at the values of the 8 properties is the easiest way to do what I want to do, but before implementing, I wanted to see if anyone had a more elegant solution. Any thoughts?</p>\n",
            "last_activity_date": 1407739901,
            "question_id": 27030,
            "score": 19,
            "tags": [
                "javascript",
                "arrays",
                "comparison"
            ],
            "title": "Comparing Arrays of Objects in JavaScript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>The number of visible/display lines for a given block of text would vary with different browsers, fonts used, etc. You'd have to set a specific font and font-size, at a minimum, to be able to semi-reliably count display lines.</p>\n\n<p>UPDATE: I see the edit. Then something like kevchadders code should do fine for you. You'll need js that counts chars and '\\r\\n's and checks against a user-defined limit. Also, if you don't use his script, make sure you use one that involves either a time interval check and/or the onKeyDown/onKeyUp events of the textarea. This may be why some scripts you have tested seem to \"behave strangely\".</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>did you try the rows attribute?</p>\n\n<pre><code>rows=\"4\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>This <em>might</em> help (probably be best using jQuery, onDomReady and unobtrusively adding the keydown event to the textarea) but tested in IE7 and FF3:</p>\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;&lt;title&gt;Test&lt;/title&gt;&lt;/head&gt;\n  &lt;body&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      var keynum, lines = 1;\n\n      function limitLines(obj, e) {\n        // IE\n        if(window.event) {\n          keynum = e.keyCode;\n        // Netscape/Firefox/Opera\n        } else if(e.which) {\n          keynum = e.which;\n        }\n\n        if(keynum == 13) {\n          if(lines == obj.rows) {\n            return false;\n          }else{\n            lines++;\n          }\n        }\n      }\n      &lt;/script&gt;\n    &lt;textarea rows=\"4\" onkeydown=\"return limitLines(this, event)\"&gt;&lt;/textarea&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>*Edit - explanation: It catches the keypress if the ENTER key is pressed and just doesn't add a new line if the lines in the textarea are the same number as the rows of the textarea. Else it increments the number of lines.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>This is basically the same as Ivan's answer, using jQuery. I tested it for a project of my own; seems to work fine.</p>\n\n<pre><code>&lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n  $(function() \n  {\n    function getLines(id)\n    {\n      return $('#' + id).val().split(\"\\n\").length\n    }\n\n  $('#testing').keyup(function() \n  {\n    var allowedNumberOfLines = 4;\n\n    if(getLines('testing') &gt; allowedNumberOfLines)\n    {\n      modifiedText = $(this).val().split(\"\\n\").slice(0, allowedNumberOfLines);\n      $(this).val(modifiedText.join(\"\\n\"));\n    }\n  });\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>How to do it with jQuery:</strong></p>\n\n<p>Bind to keyDown event of textarea.</p>\n\n<pre><code>function limitTextareaLine(e) {\n    if(e.keyCode == 13 &amp;&amp; $(this).val().split(\"\\n\").length &gt;= $(this).attr('rows')) { \n        return false;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>(Done with jquery). It's not perfect but cares about wrapping. Not deppending only of the end of line (\\n). <br>jquery scroll event have problems in mozilla and firefox if css overflow property in textarea is not auto, otherwise remove the corresponding lines and set overflow hidden. Could help the css resize:none and fixed height.</p>\n\n<pre><code>$('#textarea').scroll(function () {\n    $(this).css(\"overflow\", \"hidden\");      /* for the mozilla browser problem */\n    $(this).animate({scrollTop: $(this).outerHeight()});\n    while ($(this).scrollTop() &gt; 0) {       /* for the copy and paste case */               \n        lines=$(this).val().slice(0,-1);\n        $(this).val(lines);\n    }\n    $(this).css(\"overflow\", \"auto\");        /* For the mozilla browser problem */\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I extended it a bit to detect even overflow without a manual linebreak. This is for fixed size textarea with \"overflow: hidden\".</p>\n\n<p>At the moment my solution makes the font smaller if it doesn't fit to textarea. And makes it larger again if possible.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var keynum, allowedLines = 5, defaultFontSize = 13/*px*/;\n\n$(document).ready(function() {\n    $(\"textarea\").keydown(function(e, obj) {\n        if(window.event)\n            keynum = e.keyCode;\n        else if (e.which)\n            keynum = e.which;\n\n        if (keynum == 13 &amp;&amp; allowedLines &lt;= $(this).val().split(\"\\n\").length)\n            return false;\n    });\n    $(\"textarea\").keyup(function(e, obj) {\n        // Avoid copy-paste\n        if (allowedLines &lt; $(this).val().split(\"\\n\").length) {              \n            lines = $(this).val().split(\"\\n\").slice(0, allowedLines);\n            $(this).val( lines.join('\\n') );\n        }\n\n        // Check overflow\n        if ((this.clientHeight &lt; this.scrollHeight)) {\n            while ((this.clientHeight &lt; this.scrollHeight)) {\n                currFontSize = $(this).css('font-size');\n                finalNum = parseFloat(currFontSize, 11);\n                stringEnding = currFontSize.slice(-2);\n                $(this).css('font-size', (finalNum-1) + stringEnding);\n            }\n        } else if ($(this).css('fontSize') != defaultFontSize+'px')  {\n            while ($(this).css('font-size') != defaultFontSize+'px') {\n                // First lets increase the font size\n                currFontSize = $(this).css('font-size');\n                finalNum = parseFloat(currFontSize, 11);\n                stringEnding = currFontSize.slice(-2);\n                $(this).css('font-size', (finalNum+1) + stringEnding);\n                // lets loop until its enough or it gets overflow again\n                if(this.clientHeight &lt; this.scrollHeight) {\n                    // there was an overflow and we have to recover the value\n                    $(this).css('font-size', currFontSize);\n                    break;\n                }\n            }\n        }\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This solution works:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function limitTextarea(textarea, maxLines, maxChar) {\n        var lines = textarea.value.replace(/\\r/g, '').split('\\n'), lines_removed, char_removed, i;\n        if (maxLines &amp;&amp; lines.length &gt; maxLines) {\n            lines = lines.slice(0, maxLines);\n            lines_removed = 1\n        }\n        if (maxChar) {\n            i = lines.length;\n            while (i-- &gt; 0) if (lines[i].length &gt; maxChar) {\n                lines[i] = lines[i].slice(0, maxChar);\n                char_removed = 1\n            }\n            if (char_removed || lines_removed) {\n                textarea.value = lines.join('\\n')\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>and text area would be</p>\n\n<pre><code>&lt;asp:TextBox ID=\"myWishTB\" runat=\"server\" Height=\"185px\" TextMode=\"MultiLine\" \n             Style=\"overflow: auto;\" Width=\"95%\" \n             onkeyup=\"limitTextarea(this,10,80)\"&gt;\n&lt;/asp:TextBox&gt;\n</code></pre>\n\n<p>in regular HTML:</p>\n\n<pre><code>&lt;textarea id=\"textareaID\" onkeyup=\"limitTextarea(this,5,100)\" cols=\"20\" rows=\"5\"&gt;   &lt;/textarea&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jQuery example.  This works for both typing and pasting.</p>\n\n<pre><code>  //Limit to # of rows in textarea or arbitrary # of rows\n  $('#yourtextarea').bind('change keyup', function(event) {\n    //Option 1: Limit to # of rows in textarea\n    rows = $(this).attr('rows');\n    //Optiion 2: Limit to arbitrary # of rows\n    rows = 6;\n\n    var value = '';\n    var splitval = $(this).val().split(\"\\n\");\n\n    for(var a=0;a&lt;rows &amp;&amp; typeof splitval[a] != 'undefined';a++) {\n      if(a&gt;0) value += \"\\n\";\n      value += splitval[a];\n    }\n    $(this).val(value);\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking for a javascript that can limit the number of lines (by line I mean some text ended by user pressing enter on the keyboard) the user is able to enter in textarea. I've found some solutions but they simply don't work or behave really weird.\nThe best solution would be a jquery plugin that can do the work - something like <a href=\"http://plugins.jquery.com/project/CharLimit\">CharLimit</a>, but it should be able to limit text line count not character count.</p>\n\n<p>Thanks in advance.</p>\n",
            "last_activity_date": 1414044369,
            "question_id": 556767,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "textarea"
            ],
            "title": "Limiting number of lines in textarea"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I'm not sure it's worth it for me to type this all up from scratch since <a href=\"http://www.alistapart.com/articles/forward-thinking-form-validation/\" rel=\"nofollow\">this article published in A List Apart</a> does a pretty good job explaining it. MDN also has a <a href=\"https://developer.mozilla.org/en/HTML/HTML5/Forms_in_HTML5\" rel=\"nofollow\">handy guide</a> for HTML5 forms and validation (covering the API and also the related CSS).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can't trigger the native validation UI, but you can easily take advantage of the validation API on arbitrary input elements:</p>\n\n<pre><code>$('input').blur(function(event) {\n    event.target.checkValidity();\n}).bind('invalid', function(event) {\n    setTimeout(function() { $(event.target).focus();}, 50);\n});\n</code></pre>\n\n<p>The first event fires <code>checkValidity</code> on every input element as soon as it loses focus, if the element is <code>invalid</code> then the corresponding event will be fired and trapped by the second event handler.  This one sets the focus back to the element, but that could be quite annoying, I assume you have a better solution for notifying about the errors.  <a href=\"http://jsfiddle.net/robertc/4Hk9G/\">Here's a working example of my code above</a>.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>Somewhat easy to make add or remove HTML5 validation to fieldsets.</p>\n\n<pre><code> $('form').each(function(){\n\n    // CLEAR OUT ALL THE HTML5 REQUIRED ATTRS\n    $(this).find('.required').attr('required', false);\n\n    // ADD THEM BACK TO THE CURRENT FIELDSET\n    // I'M JUST USING A CLASS TO IDENTIFY REQUIRED FIELDS\n    $(this).find('fieldset.current .required').attr('required', true);\n\n    $(this).submit(function(){\n\n        var current     = $(this).find('fieldset.current')\n        var next        = $(current).next()\n\n        // MOVE THE CURRENT MARKER\n        $(current).removeClass('current');\n        $(next).addClass('current');\n\n        // ADD THE REQUIRED TAGS TO THE NEXT PART\n        // NO NEED TO REMOVE THE OLD ONES\n        // SINCE THEY SHOULD BE FILLED OUT CORRECTLY\n        $(next).find('.required').attr('required', true);\n\n    });\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In some extent, You CAN <code>trigger</code> HTML5 form validation and show hints to user without submitting the form!</p>\n\n<p>Two button, one for validate, one for submit</p>\n\n<p>Set a <code>onclick</code> listener on the validate button to set a global flag(say <code>justValidate</code>) to indicate this click is intended to check the validation of the form.</p>\n\n<p>And set a <code>onclick</code> listener on the submit button to set the <code>justValidate</code> flag to false.</p>\n\n<p>Then in the <code>onsubmit</code> handler of the form, you check the flag <code>justValidate</code> to decide the returning value and invoke the <code>preventDefault()</code> to stop the form to submit. As you know, the HTML5 form validation(and the GUI hint to user) is preformed before the <code>onsubmit</code> event, and even if the form is VALID you can stop the form submit by returning false or invoke <code>preventDefault()</code>.</p>\n\n<p>And, in HTML5 you have a method to check the form's validation: the <code>form.checkValidity()</code>, then in you can know if the form is validate or not in your code.</p>\n\n<p>OK, here is the demo:\n<a href=\"http://jsbin.com/buvuku/2/edit\" rel=\"nofollow\">http://jsbin.com/buvuku/2/edit</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a form with several different fieldsets. I have some Javascript that displays the field sets to the users one at a time. For browsers that support HTML5 validation, I'd love to make use of it. However, I need to do it on my terms. I'm using JQuery.</p>\n\n<p>When a user clicks a JS Link to move to the next fieldset, I need the validation to happen on the current fieldset and block the user from moving forward if there is issues.</p>\n\n<p>Ideally, as the user loses focus on an element, validation will occur.</p>\n\n<p>Currently have novalidate going and using Javascript. Would prefer to use the native method. :)</p>\n",
            "last_activity_date": 1419565559,
            "question_id": 7548612,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "validation",
                "html5"
            ],
            "title": "Triggering HTML5 Form Validation"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This is untested, but you could try:</p>\n\n<pre><code>    $('#fileElementId').get(0).files;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>    document.getElementById('fileElementId').files;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>In new browsers that support the HTML5 file stuff, your <code>&lt;input&gt;</code> element will have a \"files\" property. That will give you a \"FileList\" reference, which has a \".length\" property. There's also an access method called \".item()\" on the \"FileList\" instance, and it takes an integer arg to access individual \"File\" elements. Those have a \".name\" property.</p>\n\n<p>So:</p>\n\n<pre><code>var inp = document.getElementById('fileElementId');\nfor (var i = 0; i &lt; inp.files.length; ++i) {\n  var name = inp.files.item(i).name;\n  alert(\"here is a file name: \" + name);\n}\n</code></pre>\n\n<p>This will of course not work in older IE versions, and I'm not even sure how thorough the Safari and Chrome support is; however, if you're writing pages with \"multiple\" set on your file inputs you're already dancing on the edge :-)</p>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>I have fileinput with \"multiple\" attribute to allow users to select multiple files at once. \nI would like to display selected file names and their count prior to upload. But I'm not sure how to get this information from fileinput using javascript.</p>\n\n<pre><code>&lt;input type=\"file\" id=\"fileElementId\" name=\"files[]\" size=\"20\" multiple&gt;\n</code></pre>\n\n<p>I've tried this:</p>\n\n<pre><code>document.getElementById('fileElementId').value\n</code></pre>\n\n<p>But this only returns one file name when I select multiple files.\nIs there a way to retrieve the number of selected files and their names using javascript from html's input element with multiple attribute set?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1363255221,
            "question_id": 6171013,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events"
            ],
            "title": "Javascript. get number of files and their filenames from &quot;input multiple&quot; element?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Here are the two functions I use. They are based on matrix rotations. and can rotate around arbitrary axes. To rotate using the world's axes you would want to use the second function rotateAroundWorldAxis().</p>\n\n<pre><code>// Rotate an object around an arbitrary axis in object space\nvar rotObjectMatrix;\nfunction rotateAroundObjectAxis(object, axis, radians) {\n    rotObjectMatrix = new THREE.Matrix4();\n    rotObjectMatrix.makeRotationAxis(axis.normalize(), radians);\n\n    // old code for Three.JS pre r54:\n    // object.matrix.multiplySelf(rotObjectMatrix);      // post-multiply\n    // new code for Three.JS r55+:\n    object.matrix.multiply(rotObjectMatrix);\n\n    // old code for Three.js pre r49:\n    // object.rotation.getRotationFromMatrix(object.matrix, object.scale);\n    // old code for Three.js r50-r58:\n    // object.rotation.setEulerFromRotationMatrix(object.matrix);\n    // new code for Three.js r59+:\n    object.rotation.setFromRotationMatrix(object.matrix);\n}\n\nvar rotWorldMatrix;\n// Rotate an object around an arbitrary axis in world space       \nfunction rotateAroundWorldAxis(object, axis, radians) {\n    rotWorldMatrix = new THREE.Matrix4();\n    rotWorldMatrix.makeRotationAxis(axis.normalize(), radians);\n\n    // old code for Three.JS pre r54:\n    //  rotWorldMatrix.multiply(object.matrix);\n    // new code for Three.JS r55+:\n    rotWorldMatrix.multiply(object.matrix);                // pre-multiply\n\n    object.matrix = rotWorldMatrix;\n\n    // old code for Three.js pre r49:\n    // object.rotation.getRotationFromMatrix(object.matrix, object.scale);\n    // old code for Three.js pre r59:\n    // object.rotation.setEulerFromRotationMatrix(object.matrix);\n    // code for r59+:\n    object.rotation.setFromRotationMatrix(object.matrix);\n}\n</code></pre>\n\n<p>So you should call these functions within your <code>anim</code> function (requestAnimFrame callback), resulting in a rotation of 90 degrees on the x-axis:</p>\n\n<pre><code>var xAxis = new THREE.Vector3(1,0,0);\nrotateAroundWorldAxis(mesh, xAxis, Math.PI / 180);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>I needed the <code>rotateAroundWorldAxis</code> function but the above code doesn't work with the newest release (r52). It looks like <code>getRotationFromMatrix()</code> was replaced by <code>setEulerFromRotationMatrix()</code></p>\n\n<pre><code>function rotateAroundWorldAxis( object, axis, radians ) {\n\n    var rotationMatrix = new THREE.Matrix4();\n\n    rotationMatrix.makeRotationAxis( axis.normalize(), radians );\n    rotationMatrix.multiplySelf( object.matrix );                       // pre-multiply\n    object.matrix = rotationMatrix;\n    object.rotation.setEulerFromRotationMatrix( object.matrix );\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Just in case...in r52 the method is called <code>setEulerFromRotationMatrix</code> instead of <code>getRotationFromMatrix</code></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>with r55 you have to change <br />\n    rotationMatrix.multiplySelf( object.matrix );<br />\nto<br />\n    rotationMatrix.multiply( object.matrix );<br /></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>In Three.js R59, <code>object.rotation.setEulerFromRotationMatrix(object.matrix);</code> has been changed to <code>object.rotation.setFromRotationMatrix(object.matrix);</code></p>\n\n<p>3js is changing so rapidly :D</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In Three.js R66, this is what I use (CoffeeScript version):</p>\n\n<pre><code>THREE.Object3D.prototype.rotateAroundWorldAxis = (axis, radians) -&gt;\n  rotWorldMatrix = new THREE.Matrix4()\n  rotWorldMatrix.makeRotationAxis axis.normalize(), radians\n  rotWorldMatrix.multiply this.matrix\n  this.matrix = rotWorldMatrix\n  this.rotation.setFromRotationMatrix this.matrix\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Somewhere around r59 this gets easier (rotate around x):</p>\n\n<pre><code>bb.GraphicsEngine.prototype.calcRotation = function ( obj, rotationX)\n{\n    var euler = new THREE.Euler( rotationX, 0, 0, 'XYZ' );\n    obj.position.applyEuler(euler);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a great problem about the rotation in three.js\nI want to rotate my 3D cube in one of my game.</p>\n\n<pre><code>//init\ngeometry = new THREE.CubeGeometry grid, grid, grid\nmaterial = new THREE.MeshLambertMaterial {color:0xFFFFFF * Math.random(), shading:THREE.FlatShading, overdraw:true, transparent: true, opacity:0.8}\nfor i in [1...@shape.length]\n    othergeo = new THREE.Mesh new THREE.CubeGeometry(grid, grid, grid)\n    othergeo.position.x = grid * @shape[i][0]\n    othergeo.position.y = grid * @shape[i][1]\n    THREE.GeometryUtils.merge geometry, othergeo\n@mesh = new THREE.Mesh geometry, material\n\n//rotate\n@mesh.rotation.y += y * Math.PI / 180\n@mesh.rotation.x += x * Math.PI / 180\n@mesh.rotation.z += z * Math.PI / 180\n</code></pre>\n\n<p>and (x, y, z) may be (1, 0, 0)</p>\n\n<p>then the cube can rotate, but the problem is the cube rotate on its own axis,so after it has rotated, it can't rotate as expected.</p>\n\n<p>I find the page <a href=\"http://stackoverflow.com/questions/10747510/how-to-rotate-a-three-js-vector3-around-an-axis\">How to rotate a Three.js Vector3 around an axis?</a>, but it just let a Vector3 point rotate around the world axis?</p>\n\n<p>and I have tried to use <strong>matrixRotationWorld</strong> as</p>\n\n<pre><code>@mesh.matrixRotationWorld.x += x * Math.PI / 180\n@mesh.matrixRotationWorld.y += y * Math.PI / 180\n@mesh.matrixRotationWorld.z += z * Math.PI / 180\n</code></pre>\n\n<p>but it doesn't work, I don't whether I used it in a wrong way or there are other ways..</p>\n\n<p><strong>so, how to let the 3D cube rotate around the world's axis???</strong></p>\n",
            "last_activity_date": 1408592290,
            "question_id": 11060734,
            "score": 11,
            "tags": [
                "javascript",
                "coffeescript",
                "three.js"
            ],
            "title": "How to rotate a 3D object on axis three.js?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Here is <strong>a more efficient way of fading out</strong> an element:</p>\n\n<pre><code>function fade(element) {\n    var op = 1;  // initial opacity\n    var timer = setInterval(function () {\n        if (op &lt;= 0.1){\n            clearInterval(timer);\n            element.style.display = 'none';\n        }\n        element.style.opacity = op;\n        element.style.filter = 'alpha(opacity=' + op * 100 + \")\";\n        op -= op * 0.1;\n    }, 50);\n}\n</code></pre>\n\n<p>you can do the reverse for fade in</p>\n\n<p>setInterval or setTimeout should not get a string as argument</p>\n\n<p>google the evils of eval to know why</p>\n\n<p>And here is <strong>a more efficient way of fading in</strong> an element. </p>\n\n<pre><code>function unfade(element) {\n    var op = 0.1;  // initial opacity\n    element.style.display = 'block';\n    var timer = setInterval(function () {\n        if (op &gt;= 1){\n            clearInterval(timer);\n        }\n        element.style.opacity = op;\n        element.style.filter = 'alpha(opacity=' + op * 100 + \")\";\n        op += op * 0.1;\n        alert(\"here\");\n    }, 10);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>why do that to yourself?</p>\n\n<p>jQuery:</p>\n\n<pre><code>$(\"#element\").fadeOut();\n$(\"#element\").fadeIn();\n</code></pre>\n\n<p>I think that's easier.</p>\n\n<p><a href=\"http://jquery.com\">www.jquery.com</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I think i get the problem : </p>\n\n<p>Once you make the div fade out you aren't exiting the function : fadeout calls itself again over even after opacity has become 0</p>\n\n<pre><code>if(element.style.opacity &lt; 0.0) {\n            return;\n        } \n</code></pre>\n\n<p>And do the same for fadein too</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>if you are learner, so i advise you to view the google developer video</p>\n\n<p>[Google Developer Video] <a href=\"http://www.youtube.com/watch?v=qeFHv6bvDEI&amp;feature=relmfu\" rel=\"nofollow\">http://www.youtube.com/watch?v=qeFHv6bvDEI&amp;feature=relmfu</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Ok, I've worked it out</p>\n\n<pre><code>element.style.opacity = parseFloat(element.style.opacity) + 0.1;\n</code></pre>\n\n<p>Should be used instead of</p>\n\n<pre><code>element.style.opacity += 0.1;\n</code></pre>\n\n<p>Same with</p>\n\n<pre><code>element.style.opacity = parseFloat(element.style.opacity) - 0.1;\n</code></pre>\n\n<p>Instead of</p>\n\n<pre><code>element.style.opacity -= 0.1;\n</code></pre>\n\n<p>Because opacity value is stored as string, not as float. I'm still not sure though why the addition has worked.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Heres my code for a fade in/out toggle functions.</p>\n\n<pre><code>fadeIn: function (len) {\n                var obj = this.e;\n                obj.style.display = '';\n                var op = 0; \n                var timer = setInterval(function () {\n                    if (op &gt;= 1 || op &gt;= 1.0){\n                        console.log('done', op)\n                        clearInterval(timer);\n                    }\n                    obj.style.opacity = op.toFixed(1);\n                    op += 0.1;\n                    console.log(obj.style.opacity);\n                }, len);\n                return this;\n            },\n    fadeOut: function (len) {\n                var obj = this.e;\n                var op = 1; \n                var timer = setInterval(function () {\n                    if (op &lt;= 0){\n                        clearInterval(timer);\n                        console.log('done', op)\n                        obj.style.display = 'none';\n                    }\n                    obj.style.opacity = op.toFixed(1);\n                    op -= 0.1;\n                    console.log(obj.style.opacity)\n                }, len);\n                return this;\n            },\n</code></pre>\n\n<p>This was from a jQuery style lib i did. hope it's helpfull. link to lib on cloud9:\n<a href=\"https://c9.io/christopherdumas/magik_wb\" rel=\"nofollow\">https://c9.io/christopherdumas/magik_wb</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's my attempt with Javascript and CSS3 animation\nSo the HTML:</p>\n\n<pre><code> &lt;div id=\"handle\"&gt;Fade&lt;/div&gt; \n &lt;div id=\"slideSource\"&gt;Whatever you want images or  text here&lt;/div&gt;\n</code></pre>\n\n<p>The CSS3 with transitions:</p>\n\n<pre><code>div#slideSource {\nopacity:1;\n-webkit-transition: opacity 3s;\n-moz-transition: opacity 3s;     \ntransition: opacity 3s; \n}\n\ndiv#slideSource.fade {\nopacity:0;\n}\n</code></pre>\n\n<p>The Javascript part. Check if the className exists, if it does then add the class and transitions. </p>\n\n<pre><code>document.getElementById('handle').onclick = function(){\n    if(slideSource.className){\n        document.getElementById('slideSource').className = '';\n    } else {\n        document.getElementById('slideSource').className = 'fade';\n    }\n}\n</code></pre>\n\n<p>Just click and it will fade in and out. I would recommend using JQuery as Itai Sagi mentioned. I left out Opera and MS, so I would recommend using prefixr to add that in the css.  This is my first time posting on stackoverflow but it should work fine. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is a jsfiddle of what Seattle Ninja already said (and thanks for him).</p>\n\n<p><a href=\"http://jsfiddle.net/qrc8m/\" rel=\"nofollow\">http://jsfiddle.net/qrc8m/</a></p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"handle\"&gt;Fade&lt;/div&gt; \n&lt;div id=\"slideSource\"&gt;Whatever you want images or  text here&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>div#slideSource {\nopacity:1;\ntransition: opacity 1s; \n}\n\ndiv#slideSource.fade {\nopacity:0;\n}\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>var slideSource = document.getElementById('slideSource');\n\ndocument.getElementById('handle').onclick = function(){\n    slideSource.className = slideSource.className ? '' : 'fade';\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I want to make an HTML div tag fade in and fade out. </p>\n\n<p>I have some code that fades out, but when I fade in, the opacity of the div stays at 0.1 and doesn't increase.</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;\n\n &lt;html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"&gt;\n &lt;head&gt;\n    &lt;title&gt;Fade to Black&lt;/title&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        //&lt;![CDATA[\n        function slidePanel(elementToSlide, slideSource)\n        {\n            var element = document.getElementById(elementToSlide);\n\n            if(element.up == null || element.up == false) {\n                setTimeout(\"fadeOut(\\\"\" + elementToSlide + \"\\\")\", 100);\n                element.up = true;\n                slideSource.innerHTML = \"Bring it down\";\n            } else {\n                setTimeout(\"fadeIn(\\\"\" + elementToSlide + \"\\\")\", 100);\n                element.up = false;\n                slideSource.innerHTML = \"Take it up\";\n            }\n        }\n\n        function fadeIn(elementToFade)\n        {\n            var element = document.getElementById(elementToFade);\n\n            element.style.opacity += 0.1;\n            if(element.style.opacity &gt; 1.0) {\n                element.style.opacity = 1.0;\n            } else {\n                setTimeout(\"fadeIn(\\\"\" + elementToFade + \"\\\")\", 100);\n            }\n        }\n\n        function fadeOut(elementToFade)\n        {\n            var element = document.getElementById(elementToFade);\n\n            element.style.opacity -= 0.1;\n            if(element.style.opacity &lt; 0.0) {\n                element.style.opacity = 0.0;\n            } else {\n                setTimeout(\"fadeOut(\\\"\" + elementToFade + \"\\\")\", 100);\n            }\n        }\n        //]]&gt;\n    &lt;/script&gt;\n &lt;/head&gt;\n &lt;body&gt;\n    &lt;div&gt;\n        &lt;div id=\"slideSource\"\n              style=\"width:150px; height:20px;\n                    text-align:center; background:green\"\n             onclick=\"slidePanel('panel', this)\"&gt;\n            Take It up\n        &lt;/div&gt;\n        &lt;div id=\"panel\"\n              style=\"width:150px; height:130px;\n                    text-align:center; background:red;\n                    opacity:1.0;\"&gt;\n            Contents\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>What am I doing wrong and what is the best way to fade in and fade out an element?</p>\n",
            "last_activity_date": 1415237742,
            "question_id": 6121203,
            "score": 10,
            "tags": [
                "javascript",
                "css",
                "xhtml"
            ],
            "title": "How to do fade-in and fade-out with JavaScript and CSS"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>make sure your have correct jackson version   in your classpath</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Check as @joyfun did for the correct version of jackson but also check our headers ... Accept <em>/</em> may not be transmitted by the client ... use firebug or equivalent to check what your get request is actually sending.  I think the headers attribute of the annotation /may/ be checking literals although I'm not 100% sure.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In the controller, shouldn't the response body annotation be on the return type and not the method, like so :</p>\n\n<pre><code>@RequestMapping(value=\"/getTemperature/{id}\", headers=\"Accept=*/*\", method = RequestMethod.GET)\npublic @ResponseBody Weather getTemparature(@PathVariable(\"id\") Integer id){\n    Weather weather = weatherService.getCurrentWeather(id);\n        return weather;\n}\n</code></pre>\n\n<p>I'd also use the raw jquery.ajax function, and make sure contentType and dataType are being set correctly.</p>\n\n<p>On a different note, I find the spring handling of json rather problematic. It was easier when I did it all myself using strings, and GSON.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Can you remove the headers element in @RequestMapping and try.. </p>\n\n<p>Like </p>\n\n<pre>\n<code>\n@RequestMapping(value=\"/getTemperature/{id}\", method = RequestMethod.GET)\n</code>\n</pre>\n\n<p>I guess spring does an 'contains check' rather than exact match for accept headers. But still, worth a try to remove the headers element and check.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Finally found answer from here:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/2828968/mapping-restful-ajax-requests-to-spring\">Mapping restful ajax requests to spring</a></p>\n\n<p>I quote:</p>\n\n<blockquote>\n  <p>@RequestBody/@ResponseBody annotations don't use normal view resolvers, they use their own HttpMessageConverters. In order to use these annotations, you should configure these converters in AnnotationMethodHandlerAdapter, as described in the reference (you probably need MappingJacksonHttpMessageConverter).</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>\"406 Not Acceptable</p>\n\n<p>The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request.\"</p>\n\n<p>So, your request accept header is application/json and your controller is not able to return that. This happens when the correct HTTPMessageConverter can not be found to satisfy the @ResponseBody annotated return value. HTTPMessageConverter are automatically registered when you use the <code>&lt;mvc:annotation-driven&gt;</code>, given certain 3-d party libraries in the classpath.</p>\n\n<p>Either you don't have the correct Jackson library in your classpath, or you haven't used the \n<code>&lt;mvc:annotation-driven&gt;</code> directive.</p>\n\n<p>I successfully replicated your scenario and it worked fine using these two libraries and no <code>headers=\"Accept=*/*\"</code> directive.</p>\n\n<p>jackson-core-asl-1.7.4.jar\njackson-mapper-asl-1.7.4.jar</p>\n\n<p>Cheers, Villu</p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>There is another case where this status will be returned: if the Jackson mapper cannot figure out how to serialize your bean. For example, if you have two accessor methods for the same boolean property, <code>isFoo()</code> and <code>getFoo()</code>.</p>\n\n<p>What's happening is that Spring's <a href=\"http://static.springsource.org/spring/docs/3.1.x/javadoc-api/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.html\">MappingJackson2HttpMessageConverter</a> calls Jackson's <a href=\"http://jackson.codehaus.org/1.8.8/javadoc/org/codehaus/jackson/map/ser/StdSerializerProvider.html\">StdSerializerProvider</a> to see if it can convert your object. At the bottom of the call chain, <code>StdSerializerProvider._createAndCacheUntypedSerializer</code> throws a <code>JsonMappingException</code> with an informative message. However, this exception is swallowed by <code>StdSerializerProvider._createAndCacheUntypedSerializer</code>, which tells Spring that it can't convert the object. Having run out of converters, Spring reports that it's not being given an <code>Accept</code> header that it can use, which of course is bogus when you're giving it <code>*/*</code>.</p>\n\n<p>There is a <a href=\"http://jira.codehaus.org/browse/JACKSON-694\">bug</a> for this behavior, but it was closed as \"cannot reproduce\": the method that's being called doesn't declare that it can throw, so swallowing exceptions is apparently an appropriate solution (yes, that was sarcasm). Unfortunately, Jackson doesn't have any logging ... and there are a lot of comments in the codebase wishing it did, so I suspect this isn't the only hidden gotcha.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Make sure that following 2 <code>jar</code>'s are present in class path.</p>\n\n<p>If any one or both are missing then this error will come.</p>\n\n<pre><code>jackson-core-asl-1.9.X.jar jackson-mapper-asl-1.9.X.jar\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I had the same problem, my controller method executes but response is Error 406.\nI debug <code>AbstractMessageConverterMethodProcessor#writeWithMessageConverters</code> and found that method <code>ContentNegotiationManager#resolveMediaTypes</code> always returns <code>text/html</code> which is not supported by <code>MappingJacksonHttpMessageConverter</code>. The problem is that the  <code>org.springframework.web.accept.ServletPathExtensionContentNegotiationStrategy</code> works earlier than <code>org.springframework.web.accept.HeaderContentNegotiationStrategy</code>, and extension of my request <code>/get-clients.html</code> is the cause of my problem with Error 406. I just change request url to <code>/get-clients</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Other then the obvious problems I had another one that I couldn't fix regardless of including all possible JARs, dependancies and annotations in Spring servlet. Eventually I found that I have wrong file extension by that I mean I had two separate servlet running in same container and I needed to map to different file extensions where one was \".do\" and the other as used for subscriptions was randomly named \".sub\". All good but SUB is valid file extension normally used for films subtitle files and thus Tomcat was overriding the header and returning something like \"text/x-dvd.sub...\" so all was fine but the application was expecting JSON but getting Subtitles thus all I had to do is change the mapping in my <code>web.xml</code> file I've added:</p>\n\n<pre><code>&lt;mime-mapping&gt;\n    &lt;extension&gt;sub&lt;/extension&gt;\n    &lt;mime-type&gt;application/json&lt;/mime-type&gt;\n&lt;/mime-mapping&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had same issue, with Latest Spring 4.1.1 onwards you need to add following jars to pom.xml.</p>\n\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n    &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;\n    &lt;version&gt;2.4.1&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n    &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;\n    &lt;version&gt;2.4.1.1&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n\n<p>also make sure you have following jar:</p>\n\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;\n    &lt;artifactId&gt;jackson-core-asl&lt;/artifactId&gt;\n    &lt;version&gt;1.9.13&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n    &lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;\n    &lt;artifactId&gt;jackson-mapper-asl&lt;/artifactId&gt;\n    &lt;version&gt;1.9.13&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/questions/26615416/406-spring-mvc-json-not-acceptable-according-to-the-request-accept-headers?lq=1\">406 Spring MVC Json, not acceptable according to the request &quot;accept&quot; headers</a></p>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<p>this is my javascript:</p>\n\n<pre><code>    function getWeather() {\n        $.getJSON('getTemperature/' + $('.data option:selected').val(), null, function(data) {\n            alert('Success');                               \n        });\n    }\n</code></pre>\n\n<p>this is my controller:</p>\n\n<pre><code>@RequestMapping(value=\"/getTemperature/{id}\", headers=\"Accept=*/*\", method = RequestMethod.GET)\n@ResponseBody\npublic Weather getTemparature(@PathVariable(\"id\") Integer id){\n    Weather weather = weatherService.getCurrentWeather(id);\n        return weather;\n}\n</code></pre>\n\n<p>spring-servlet.xml</p>\n\n<pre><code>&lt;context:annotation-config /&gt;\n&lt;tx:annotation-driven /&gt;\n</code></pre>\n\n<p>Getting this error:</p>\n\n<pre><code>GET http://localhost:8080/web/getTemperature/2 406 (Not Acceptable)\n</code></pre>\n\n<p>Headers:</p>\n\n<p><strong>Response Headers</strong></p>\n\n<pre><code>Server  Apache-Coyote/1.1\nContent-Type    text/html;charset=utf-8\nContent-Length  1070\nDate    Sun, 18 Sep 2011 17:00:35 GMT\n</code></pre>\n\n<p><strong>Request Headers</strong></p>\n\n<pre><code>Host    localhost:8080\nUser-Agent  Mozilla/5.0 (Windows NT 6.1; WOW64; rv:6.0.2) Gecko/20100101 Firefox/6.0.2\nAccept  application/json, text/javascript, */*; q=0.01\nAccept-Language en-us,en;q=0.5\nAccept-Encoding gzip, deflate\nAccept-Charset  ISO-8859-1,utf-8;q=0.7,*;q=0.7\nConnection  keep-alive\nX-Requested-With    XMLHttpRequest\nReferer http://localhost:8080/web/weather\nCookie  JSESSIONID=7D27FAC18050ED84B58DAFB0A51CB7E4\n</code></pre>\n\n<p>Interesting note:</p>\n\n<p><strong>I get 406 error, but the hibernate query works meanwhile.</strong>\nThis is what tomcat log says, everytime when I change selection in dropbox:</p>\n\n<pre><code> select weather0_.ID as ID0_0_, weather0_.CITY_ID as CITY2_0_0_, weather0_.DATE as DATE0_0_, weather0_.TEMP as TEMP0_0_ from WEATHER weather0_ where weather0_.ID=?\n</code></pre>\n\n<p>What could the problem be? There were two similar questions in SO before, I tried all the accepted hints there, but they did not work I guess...</p>\n\n<p>Any suggestions? Feel free to ask questions...</p>\n",
            "last_activity_date": 1414523270,
            "question_id": 7462202,
            "score": 32,
            "tags": [
                "java",
                "javascript",
                "ajax",
                "json",
                "spring"
            ],
            "title": "Spring JSON request getting 406 (not Acceptable)"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You can't instantiate a date object any way you want. It has to be in a specific way. Here are some valid examples:</p>\n\n<pre><code>new Date() // current date and time\nnew Date(milliseconds) //milliseconds since 1970/01/01\nnew Date(dateString)\nnew Date(year, month, day, hours, minutes, seconds, milliseconds)\n</code></pre>\n\n<p>or</p>\n\n<pre><code>d1 = new Date(\"October 13, 1975 11:13:00\")\nd2 = new Date(79,5,24)\nd3 = new Date(79,5,24,11,33,0)\n</code></pre>\n\n<p>Chrome must just be more flexible.</p>\n\n<p>Source: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date</a></p>\n\n<p>From <a href=\"http://stackoverflow.com/users/710446/apsillers\">apsillers</a> comment:</p>\n\n<p>the EMCAScript specification <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15\" rel=\"nofollow\">requires exactly one date format</a> (i.e., YYYY-MM-DDTHH:mm:ss.sssZ) but <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.4.2\" rel=\"nofollow\">custom date formats may be freely supported by an implementation</a>: \"<em>If the String does not conform to that [ECMAScript-defined] format the function may fall back to any implementation-specific heuristics or implementation-specific date formats.</em>\" Chrome and FF simply have different \"implementation-specific date formats.\"</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>This works in all browsers -</p>\n\n<blockquote>\n  <p>new Date('2001/01/31 12:00:00 AM')</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This should work for you:</p>\n\n<pre><code>var date1 = new Date(year, month, day, hour, minute, seconds);\n</code></pre>\n\n<p>I had to create date form a string so I have done it like this:</p>\n\n<pre><code>var d = '2013-07-20 16:57:27';\nvar date1 = new Date(d.substr(0, 4), d.substr(5, 2), d.substr(8, 2), d.substr(11, 2), d.substr(14, 2), d.substr(17, 2));\n</code></pre>\n\n<p>Remember that the months in javascript are from 0 to 11, so you should reduce the month value by 1, like this:</p>\n\n<pre><code>var d = '2013-07-20 16:57:27';\nvar date1 = new Date(d.substr(0, 4), d.substr(5, 2) - 1, d.substr(8, 2), d.substr(11, 2), d.substr(14, 2), d.substr(17, 2));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you still want to create date using dashes, you can use this format:</p>\n\n<pre><code>var date = new Date('2013-08-31T17:00:00Z')\n</code></pre>\n\n<p>But bear in mind, that it creates time according to UTC. Meaning, if you live in GMT+3 (3 hours ahead of GMT) timezone, it will add this timezone offset to the time. So the above example will have this value, if GMT+3 (note that it is hour 20:00 and not 17:00):</p>\n\n<pre><code>Sat Aug 31 2013 20:00:00 GMT+0300 (FLE Standard Time)\n</code></pre>\n\n<p>Be sure to add 'Z' letter at the end, because otherwise Chrome and Firefox will parse the string differently (one will add time offset and the other won't).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This works in all browsers as well</p>\n\n<pre><code>new Date('2001/01/31 12:00:00')\n</code></pre>\n\n<p>That is the format of</p>\n\n<pre><code>\"yyyy/MM/dd HH:mm:ss\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I was having a similar issue in both Firefox and Safari when working with AngularJS.  For example, if a date returned from Angular looked like this:</p>\n\n<pre><code>2014-06-02 10:28:00\n</code></pre>\n\n<p>using this code:</p>\n\n<p>new Date('2014-06-02 10:28:00').toISOString();</p>\n\n<p>returns an invalid date error in Firefox and Safari. However in Chrome it works fine.  As another answer stated, Chrome is most likely just more flexible with parsing date strings.</p>\n\n<p>My eventual goal was to format the date a certain way.  I found an excellent library that handled both the cross browser compatibility issue and the date formatting issue.  The library is called <a href=\"http://momentjs.com/\" rel=\"nofollow\">moment.js</a>.</p>\n\n<p>Using this library the following code works correctly across all browsers I tested:</p>\n\n<pre><code>moment('2014-06-02 10:28:00').format('MMM d YY')\n</code></pre>\n\n<p>If you are willing to include this extra library into your app you can more easily build your date string while avoiding possible browser compatibility issues.  As a bonus you will have a good way to easily format, add, subtract, etc dates if needed.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In Firefox, any invalid Date is returned as a Date object as Date <code>1899-11-29T19:00:00.000Z</code>, therefore check if browser is Firefox then get Date object of string <code>\"1899-11-29T19:00:00.000Z\".getDate()</code>. Finally compare it with the date.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>One situation I've run into was when dealing with milliseconds. FF and IE will not parse this date string correctly when trying to create a new date. \n<code>\"2014/11/24 17:38:20.177Z\"</code>\nThey do not know how to handle <code>.177Z</code>. Chrome will work though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am creating a datetime string that looks like this:  <code>2010-07-15 11:54:21</code></p>\n\n<p>And with the following code I get invalid date in Firefox but works just fine in Chrome</p>\n\n<pre><code>var todayDateTime = year + '-' + month + '-' + day + ' ' + hour + ':' + minute + ':' + seconds;\nvar date1 = new Date(todayDateTime);\n</code></pre>\n\n<p>In firefox date1 is giving me an invalid date, but in chrome its working just fine what would the main cause be?</p>\n",
            "last_activity_date": 1417508068,
            "question_id": 3257460,
            "score": 26,
            "tags": [
                "javascript",
                "google-chrome",
                "firefox"
            ],
            "title": "new Date() is working in Chrome but not Firefox"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you want to delete only several of the selected files: you can't. The <a href=\"http://www.w3.org/TR/FileAPI/#dfn-filelist\">File API Working Draft</a> you linked to contains a note:</p>\n\n<blockquote>\n  <p>The <code>HTMLInputElement</code> interface\n  [HTML5] has a <strong>readonly</strong> <code>FileList</code>\n  attribute, [\u2026]<br />\n  [emphasis mine]</p>\n</blockquote>\n\n<p>Reading a bit of the HTML 5 Working Draft, I came across the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/common-input-element-attributes.html#dom-input-value\">Common <code>input</code> element APIs</a>. It appears you can delete the <em>entire</em> file list by setting the <code>value</code> property of the <code>input</code> object to an empty string, like:</p>\n\n<pre><code>document.getElementById('multifile').value = \"\";\n</code></pre>\n\n<p>BTW, the article <a href=\"https://developer.mozilla.org/en/Using_files_from_web_applications\">Using files from web applications</a> might also be of interest.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>You may wish to create an array and use that instead of the read-only filelist.</p>\n\n<pre><code>var myReadWriteList = new Array();\n// user selects files later...\n// then as soon as convenient... \nmyReadWriteList = FileListReadOnly;\n</code></pre>\n\n<p>After that point do your uploading against your list instead of the built in list. I am not sure of the context you are working in but I am working with a jquery plugin I found and what I had to do was take the plugin's source and put it in the page using <code>&lt;script&gt;</code> tags. Then above the source I added my array so that it can act as a global variable and the plugin could reference it.</p>\n\n<p>Then it was just a matter of swapping out the references.</p>\n\n<p>I think this would allow you to also add drag &amp; drop as again, if the built in list is read-only then how else could you get the dropped files into the list? </p>\n\n<p>:))</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since we are in the HTML5 realm, this is my solution. The gist is that you push the files to an Array instead of leaving them in a FileList, then using XHR2, you push the files to a FormData object. Example below.</p>\n\n<pre><code>Node.prototype.replaceWith = function(node)\n{\n    this.parentNode.replaceChild(node, this);\n};\nif(window.File &amp;&amp; window.FileList)\n{\n    var topicForm = document.getElementById(\"yourForm\");\n    topicForm.fileZone = document.getElementById(\"fileDropZoneElement\");\n    topicForm.fileZone.files = new Array();\n    topicForm.fileZone.inputWindow = document.createElement(\"input\");\n    topicForm.fileZone.inputWindow.setAttribute(\"type\", \"file\");\n    topicForm.fileZone.inputWindow.setAttribute(\"multiple\", \"multiple\");\n    topicForm.onsubmit = function(event)\n    {\n        var request = new XMLHttpRequest();\n        if(request.upload)\n        {\n            event.preventDefault();\n            topicForm.ajax.value = \"true\";\n            request.upload.onprogress = function(event)\n            {\n                var progress = event.loaded.toString() + \" bytes transfered.\";\n                if(event.lengthComputable)\n                progress = Math.round(event.loaded / event.total * 100).toString() + \"%\";\n                topicForm.fileZone.innerHTML = progress.toString();\n            };\n            request.onload = function(event)\n            {\n                response = JSON.parse(request.responseText);\n                // Handle the response here.\n            };\n            request.open(topicForm.method, topicForm.getAttribute(\"action\"), true);\n            var data = new FormData(topicForm);\n            for(var i = 0, file; file = topicForm.fileZone.files[i]; i++)\n                data.append(\"file\" + i.toString(), file);\n            request.send(data);\n        }\n    };\n    topicForm.fileZone.firstChild.replaceWith(document.createTextNode(\"Drop files or click here.\"));\n    var handleFiles = function(files)\n    {\n        for(var i = 0, file; file = files[i]; i++)\n            topicForm.fileZone.files.push(file);\n    };\n    topicForm.fileZone.ondrop = function(event)\n    {\n        event.stopPropagation();\n        event.preventDefault();\n        handleFiles(event.dataTransfer.files);\n    };\n    topicForm.fileZone.inputWindow.onchange = function(event)\n    {\n        handleFiles(topicForm.fileZone.inputWindow.files);\n    };\n    topicForm.fileZone.ondragover = function(event)\n    {\n        event.stopPropagation();\n        event.preventDefault();\n    };\n    topicForm.fileZone.onclick = function()\n    {\n        topicForm.fileZone.inputWindow.focus();\n        topicForm.fileZone.inputWindow.click();\n    };\n}\nelse\n    topicForm.fileZone.firstChild.replaceWith(document.createTextNode(\"It's time to update your browser.\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I'm building a drag-and-drop-to-upload web application using HTML5, and I'm dropping the files onto a div and of course fetching the dataTransfer object, which gives me the <a href=\"http://www.w3.org/TR/FileAPI/#dfn-filelist\">FileList</a>.</p>\n\n<p>Now I want to remove some of the files, but I don't know how, or if it's even possible. </p>\n\n<p>Preferably I'd like to just delete them from the FileList; I've got no use for them. But if that's not possible, should I instead write in checks in code that interacts with the FileList? That seems cumbersome.</p>\n",
            "last_activity_date": 1348211627,
            "question_id": 3144419,
            "score": 21,
            "tags": [
                "javascript",
                "html5",
                "drag-and-drop",
                "filelist"
            ],
            "title": "How do I remove a file from the FileList"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The two aren't quite identical. The difference is that the first example won't catch an exception that's thrown in your <code>success</code> handler. So if your method should only ever return resolved promises, as is often the case, you need a trailing <code>catch</code> handler (or yet another <code>then</code> with an empty <code>success</code> parameter). Sure, it may be that your <code>then</code> handler doesn't do anything that might potentially fail, in which case using one 2-parameter <code>then</code> could be fine.</p>\n\n<p>But I believe the point of the text you linked to is that <code>then</code> is mostly useful versus callbacks in its ability to chain a bunch of asynchronous steps, and when you actually do this, the 2-parameter form of <code>then</code> subtly doesn't behave quite as expected, for the above reason. It's particularly counterintuitive when used mid-chain.</p>\n\n<p>As someone who's done a lot of complex async stuff and bumped into corners like this more than I care to admit, I really recommend avoiding this anti-pattern and going with the separate handler approach.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<blockquote>\n  <p>What's the difference?</p>\n</blockquote>\n\n<p>The <code>.then()</code> call will return a promise that will be rejected in case the callback throws an error. This means, when your success <code>logger</code> fails, the error would be passed to the following <code>.catch()</code> callback, but not to the <code>fail</code> callback that goes alongside with <code>success</code>.</p>\n\n<p>Here's a <strong>control flow</strong> diagram:</p>\n\n<p><img src=\"http://i.stack.imgur.com/WAcpP.png\" alt=\"control flow diagram of then with two arguments\">\n<img src=\"http://i.stack.imgur.com/wX5mr.png\" alt=\"control flow diagram of then catch chain\"></p>\n\n<p>To express it in synchronous code:</p>\n\n<pre><code>// some_promise_call().then(logger.log, logger.log)\ntry {\n    var results = some_call();\n} catch(e) {\n    logger.log(e);\n}\nif (results) // yes, this odd\n    logger.log(results);\n</code></pre>\n\n<p>The second <code>log</code> (which is like the first argument to <code>.then()</code>) will be executed in case that no exception happened. The <code>if (results)</code> statement feels a bit odd, this is actually what <a href=\"http://stackoverflow.com/q/16138232/1048572\">python has <code>try-except-else</code> for</a> (recommended reading!).</p>\n\n<pre><code>// some_promise_call().then(logger.log).catch(logger.log)\ntry {\n    var results = some_call();\n    logger.log(results);\n} catch(e) {\n    logger.log(e);\n}\n</code></pre>\n\n<p>The <code>catch</code> logger will also handle exceptions from the success logger call.</p>\n\n<p>So much for the difference.</p>\n\n<blockquote>\n  <p>I don't quite understand its explanation as for the try and catch</p>\n</blockquote>\n\n<p>The argument is that usually you want to catch errors in every step of the processing, and that you shouldn't use it in chains. The expectation is that you only have one final handler which handles all errors - while, when you use the \"antipattern\", errors in some of the then-callbacks are not handled.</p>\n\n<p>However, this pattern is actually very useful: When you want to handle errors that happened in exactly this step, and you want to do something <em>entirely different</em> when no error happened - i.e. when the error is unrecoverable. <strong>Be aware</strong> that this is <strong>branching</strong> your control flow. Of course, this is sometimes desired.</p>\n\n<hr>\n\n<blockquote>\n  <p>What's wrong with this the following?</p>\n\n<pre><code>some_promise_call()\n.then(function(res) { logger.log(res) }, function(err) { logger.log(err) })\n</code></pre>\n</blockquote>\n\n<p>That you had to repeat your callback. You rather want</p>\n\n<pre><code>some_promise_call()\n   .catch(function(e) {\n       return e; // it's OK, we'll just log it\n   })\n   .done(function(res) {\n       logger.log(res);\n   });\n</code></pre>\n\n<p>You also might consider using <a href=\"https://github.com/petkaantonov/bluebird/blob/master/API.md#finallyfunction-handler---promise\"><code>.finally()</code></a> for this.</p>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>I had a look at the <a href=\"https://github.com/petkaantonov/bluebird/wiki/Promise-anti-patterns\">bluebird promise faq</a>, in which it mentions the <code>.then(success, fail)</code> antipattern. I don't quite understand its explanation as for the try and catch. \nWhat's wrong with this the following?</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>some_promise_call()\n.then(function(res) { logger.log(res) }, function(err) { logger.log(err) })\n</code></pre>\n\n<p>It seems that the example is suggesting the following as the correctly way.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>some_promise_call()\n.then(function(res) { logger.log(res) })\n.catch(function(err) { logger.log(err) })\n</code></pre>\n\n<p>What's the difference?</p>\n",
            "last_activity_date": 1406074775,
            "question_id": 24662289,
            "score": 16,
            "tags": [
                "javascript",
                "node.js",
                "promise",
                "bluebird"
            ],
            "title": ".then(success, fail) antipattern for promise"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I have had to do this before (in .NET) and you are basically going to have to host a browser, get it to click the button, and then interrogate the DOM (document object model) of the browser to get at the generated HTML.</p>\n\n<p>This is definitely one of the downsides to web apps moving towards an Ajax/Javascript approach to generating HTML client-side.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In Python, I think <a href=\"http://seleniumhq.org/projects/remote-control/\">Selenium 1.0</a> is the way to go. It\u2019s a library that allows you to control a real web browser from your language of choice.</p>\n\n<p>You need to have the web browser in question installed on the machine your script runs on, but it looks like the most reliable way to programmatically interrogate websites that use a lot of JavaScript.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>I use webkit, which is the browser renderer behind Chrome and Safari. There are <a href=\"http://www.pyside.org/docs/pyside/PySide/QtWebKit/index.html\" rel=\"nofollow\">Python bindings to webkit through Qt</a>. And here is a full <a href=\"http://webscraping.com/blog/Scraping-JavaScript-webpages-with-webkit/\" rel=\"nofollow\">example to execute JavaScript and extract the final HTML</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>No need for Python or any scripts.</p>\n\n<p>In Safari 5.1.7 on Mac 10.6.8, I activated the Develop menu:</p>\n\n<ol>\n<li>Launch Safari</li>\n<li>Select Safari > Preferences in the menubar.</li>\n<li>In the window that opens, select the Advanced tab.</li>\n<li>Check the button Show Develop Menu In Menu Bar.</li>\n</ol>\n\n<p>I then opened a web page where the HTML is generated on the fly using JavaScript. From the Safari Develop menu, I chose Show Web Inspector. This opens a window which displays the run-time HTML.</p>\n\n<p>I clicked on the line beginning  and from Safari's Edit menu, I chose Copy.</p>\n\n<p>I was now able to paste the JavaScript generated HTML into a text editor and save it. Only the first line (!DOCTYPE html) needed to be copied separately.</p>\n\n<p>I looked briefly for an equivalent feature in Chrome, Firefox or Opera without finding one, but the Safari solution is good enough for me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For <a href=\"http://scrapy.org/\" rel=\"nofollow\">Scrapy</a> (great python scraping framework) there is <a href=\"https://github.com/scrapinghub/scrapyjs\" rel=\"nofollow\">scrapyjs</a>: an additional downloader handler / middleware handler able to scraping javascript generated content.</p>\n\n<p>It's based on webkit engine by pygtk, python-webkit, and python-jswebkit and it's quite simple.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to scrape a site with python. I obtain the source html code with the urlib module, but I need to scrape also some html code that is generated by a javascript function (which is included in the html source). What this functions does \"in\" the site is that when you press a button it outputs some html code. How can I \"press\" this button with python code? Can scrapy help me? I captured the POST request with firebug but when I try to pass it on the url I get a 403 error. Any suggestions?</p>\n",
            "last_activity_date": 1383825673,
            "question_id": 2148493,
            "score": 13,
            "tags": [
                "javascript",
                "python",
                "browser",
                "screen-scraping"
            ],
            "title": "scrape html generated by javascript with python"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This really sounds like you need to reevaluate your design.  Either you need to drop ajax, or you need to not have collisions in you method names.</p>\n\n<p>You can review this link: <a href=\"http://www.javascriptkit.com/javatutors/loadjavascriptcss2.shtml\">http://www.javascriptkit.com/javatutors/loadjavascriptcss2.shtml</a></p>\n\n<p>Which gives information on how to remove the javascript from the DOM.  However, modern browsers will leave the code in memory on the browser.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>No, you can't do that. Once a block of JavaScript gets loaded in the browser and executed, it gets stored in browser memory under the scope of the respective window. There is absolutely no way to unload it (without page refresh/window close).</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Actually that's quite possible. You can replace an script or link element.</p>\n\n<pre><code>function createjscssfile(filename, filetype){\nif (filetype==\"js\"){ //if filename is a external JavaScript file\n  var fileref=document.createElement('script')\n  fileref.setAttribute(\"type\",\"text/javascript\")\n  fileref.setAttribute(\"src\", filename)\n}\n\nelse if (filetype==\"css\"){ //if filename is an external CSS file\n  var fileref=document.createElement(\"link\")\n  fileref.setAttribute(\"rel\", \"stylesheet\")\n  fileref.setAttribute(\"type\", \"text/css\")\n  fileref.setAttribute(\"href\", filename)\n}\n  return fileref\n}\n\nfunction replacejscssfile(oldfilename, newfilename, filetype){\nvar targetelement=(filetype==\"js\")? \"script\" : (filetype==\"css\")? \"link\" : \"none\" //determine element type to create nodelist using\nvar targetattr=(filetype==\"js\")? \"src\" : (filetype==\"css\")? \"href\" : \"none\" //determine corresponding attribute to test for\nvar allsuspects=document.getElementsByTagName(targetelement)\nfor (var i=allsuspects.length; i&gt;=0; i--){ //search backwards within nodelist for matching elements to remove\n    if (allsuspects[i] &amp;&amp; allsuspects[i].getAttribute(targetattr)!=null &amp;&amp; allsuspects[i].getAttribute(targetattr).indexOf(oldfilename)!=-1){\n        var newelement=createjscssfile(newfilename, filetype)\n        allsuspects[i].parentNode.replaceChild(newelement, allsuspects[i])\n    }\n  }\n}\n</code></pre>\n\n<p>you must fill filename parameters as src attribute and filetype as \"js\" or \"css\"</p>\n\n<p>I think there's no need to explain the code. Also you've posted in 2009 but hey. Maybe someone will need it right? :)</p>\n\n<p>All credit goes to: <a href=\"http://www.javascriptkit.com/javatutors/loadjavascriptcss2.shtml\" rel=\"nofollow\">http://www.javascriptkit.com/javatutors/loadjavascriptcss2.shtml</a></p>\n\n<p>You can learn some tricks there btw.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>you can just namespace your code.. that way you prevent collisions</p>\n\n<blockquote>\n  <p>var MyJavaScriptCode = {}; </p>\n  \n  <p>MyJavaScriptCode.bla = function () {};</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am including pages using Ajax but I also need to include their respective javascript files, which requires removing the previous javascript files from memory at the same time.</p>\n\n<p>How can I unload the currently-loaded javascript files (as well as their code in memory) so that I can load the new page's files? They will more than likely conflict, so having multiple independent files' javascript files loaded.</p>\n",
            "last_activity_date": 1381161413,
            "question_id": 591685,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "How can I dynamically unload a javascript file?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Well, I don't do a ton of jQuery, but in the CSS/Javascript world I would just use the object model and write a statement as follows:</p>\n\n<pre><code>if(leftDiv.style.height &gt; rightDive.style.height)\n   rightDiv.style.height = leftDiv.style.height;\nelse\n   leftDiv.style.height = rightDiv.style.height)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You <em>could</em> use jQuery, but there are better ways to do this.</p>\n\n<p>This sort of question comes up a lot and there are generally 3 answers...</p>\n\n<h3><a href=\"http://www.alistapart.com/articles/holygrail\" rel=\"nofollow\">1. Use CSS</a></h3>\n\n<p>This is the 'best' way to do it, as it is the most semantically pure approach (without resorting to JS, which has its own problems). The best way is to use the <code>display: table-cell</code> and related values. You could also try using <a href=\"http://www.alistapart.com/articles/fauxcolumns/\" rel=\"nofollow\">the faux background technique</a> (which you can do with CSS3 gradients).</p>\n\n<h3><a href=\"http://www.sadtrombone.com/\" rel=\"nofollow\">2. Use Tables</a></h3>\n\n<p>This seems to work great, but at the expense of having an unsemantic layout. You'll also cause a stir with purists. I have all but avoided using tables, and you should too.</p>\n\n<h3><a href=\"http://www.filamentgroup.com/lab/setting_equal_heights_with_jquery/\" rel=\"nofollow\">3. Use jQuery / JavaScript</a></h3>\n\n<p>This benefits in having the most semantic markup, except with JS disabled, you will not get the effect you desire.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>There's also a jQuery plugin called equalHeights that I've used with some success.</p>\n\n<p>I'm not sure if the one I'm using is the one from the filament group mentioned above, or if it's <a href=\"http://www.cssnewbie.com/equalheights-jquery-plugin/\" rel=\"nofollow\">this one that was the first google result</a>... Either way a jquery plugin is probably the easiest, most flexible way to go.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a way to do it with pure CSS, however, as you'll notice in the example (which works in IE 7 and Firefox), borders can be difficult - but they aren't impossible, so it all depends what you want to do.  This example assumes a rather common CSS structure of body > wrapper > content container > column 1 and column 2.  </p>\n\n<p>The key is the bottom margin and its canceling padding.</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;title&gt;Equal Height Columns&lt;/title&gt;\n&lt;style type=\"text/css\"&gt;\n&lt;!--\n* { padding: 0; margin: 0; }\n#wrapper { margin: 10px auto; width: 600px; }\n#wrapper #main_container { width: 590px; padding: 10px 0px 10px 10px; background: #CCC; overflow: hidden; border-bottom: 10px solid #CCC; }\n#wrapper #main_container div { float: left; width: 263px; background: #999; padding: 10px; margin-right: 10px; border: 1px solid #000; margin-bottom: -1000px; padding-bottom: 1000px; }\n#wrapper #main_container #right_column { background: #FFF; }\n--&gt;\n&lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;div id=\"wrapper\"&gt;\n    &lt;div id=\"main_container\"&gt;\n        &lt;div id=\"left_column\"&gt;\n            &lt;p&gt;I have two divs inside of a container. One on the left, one on the right, side by side. How am I able to make each one be of equal height, even though they have different content.&lt;/p&gt;\n        &lt;/div&gt;&lt;!-- LEFT COLUMN --&gt;\n        &lt;div id=\"right_column\"&gt;\n          &lt;p&gt;I have two divs inside of a container. One on the left, one on the right, side by side. How am I able to make each one be of equal height, even though they have different content.&lt;/p&gt;\n          &lt;p&gt;&amp;nbsp;&lt;/p&gt;\n          &lt;p&gt;For example, the right div has a lot of content, and is double the height of the left div, how do I make the left div stretch to the same height of the right div?&lt;/p&gt;\n          &lt;p&gt;&amp;nbsp;&lt;/p&gt;\n          &lt;p&gt;Is there some JavaScript (jQuery) code to accomplish this?&lt;/p&gt;\n        &lt;/div&gt;&lt;!-- RIGHT COLUMN --&gt;\n    &lt;/div&gt;&lt;!-- MAIN CONTAINER --&gt;\n&lt;/div&gt;&lt;!-- WRAPPER --&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>This is what it looks like:</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/qdEzm.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Use this in jquery document ready function. Considering there are two divs having ids \"left\" and \"right.\"</p>\n\n<pre><code>var heightR = $(\"#right\").height();\nvar heightL = $(\"#left\").height();\n\nif(heightL &gt; heightR){\n    $(\"#right\").css({ height: heightL});\n} else {\n    $(\"#left\").css({ height: heightR});\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've seen many attempts to do this, though none met my OCD needs. You might need to dedicate a second to get your head around this, though it is better than using JavaScript.</p>\n\n<p>Known downsides:</p>\n\n<ul>\n<li>Does not support multiple element rows in case of a container with dynamic width.</li>\n<li>Does not work in IE6.</li>\n</ul>\n\n<p>The base:</p>\n\n<p><img src=\"http://i.stack.imgur.com/iReWq.png\" alt=\"base layout\"></p>\n\n<ul>\n<li><strong>red</strong> is (auxiliary) container that you would use to set margin to the content.</li>\n<li><strong>green</strong> is <code>position: relative; overflow: hidden</code> and (optionally, if you want columns to be centered) <code>text-align: center; font-size: 0; line-height: 0;</code></li>\n<li><strong>blue</strong> <code>display: block; float: left;</code> or (optionally, if you want columns to be centered) <code>display: inline-block; vertical-align: top;</code></li>\n</ul>\n\n<p>So far nothing out of ordinary. Whatever content that <strong>blue</strong> element has, you need to add an absolutely positioned element (<strong>yellow</strong>; note that the <code>z-index</code> of this element must be lower than the actual <em>content</em> of the blue box) with this element and set <code>top: 0; bottom: 0;</code> (don't set left or right position).</p>\n\n<p><img src=\"http://i.stack.imgur.com/hQCr3.png\" alt=\"base with absolute\"></p>\n\n<p>All your elements now have equal height. For most of the layouts, this is already sufficient. My scenario required to have dynamic content followed by a static content, where static content must be on the same line.</p>\n\n<p><img src=\"http://i.stack.imgur.com/4gbm3.png\" alt=\"enter image description here\"></p>\n\n<p>To achieve this, you need to add <code>padding-bottom</code> (<strong>dark green</strong>) eq to the fixed height content to the <strong>blue</strong> elements.</p>\n\n<p><img src=\"http://i.stack.imgur.com/37j6f.png\" alt=\"enter image description here\"></p>\n\n<p>Then within the <strong>yellow</strong> elements create another absolutely positioned (<code>left: 0; bottom: 0;</code>) element (<strong>dark blue</strong>).</p>\n\n<p><img src=\"http://i.stack.imgur.com/KSbUJ.png\" alt=\"enter image description here\"></p>\n\n<p>Supposedly, if these boxes (<strong>yellow</strong>) had to be active hyperlinks and you had any style that you wanted to apply to the original blue boxes, you'd use adjacent sibling selector:</p>\n\n<pre><code>yellow:hover + blue {}\n</code></pre>\n\n<p>Here is a the code and <a href=\"http://jsfiddle.net/AJ6Qh/\" rel=\"nofollow\">demo</a>:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"products\"&gt;\n    &lt;ul&gt;\n        &lt;li class=\"product a\"&gt;\n            &lt;a href=\"\"&gt;\n                &lt;p class=\"name\"&gt;Ordinary product description.&lt;/p&gt;\n                &lt;div class=\"icon-product\"&gt;&lt;/div&gt;\n            &lt;/a&gt;\n            &lt;p class=\"name\"&gt;Ordinary product description.&lt;/p&gt;\n        &lt;/li&gt;\n        &lt;li class=\"product b\"&gt;\n            &lt;a href=\"\"&gt;\n                &lt;p class=\"name\"&gt;That lenghty product description or whatever else that does not allow you have fixed height for these elements.&lt;/p&gt;\n                &lt;div class=\"icon-product\"&gt;&lt;/div&gt;\n            &lt;/a&gt;\n            &lt;p class=\"name\"&gt;That lenghty product description or whatever else that does not allow you have fixed height for these elements.&lt;/p&gt;\n        &lt;/li&gt;\n        &lt;li class=\"product c\"&gt;\n            &lt;a href=\"\"&gt;\n                &lt;p class=\"name\"&gt;Another ordinary product description.&lt;/p&gt;\n                &lt;div class=\"icon-product\"&gt;&lt;/div&gt;\n            &lt;/a&gt;\n            &lt;p class=\"name\"&gt;Another ordinary product description.&lt;/p&gt;\n        &lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>SCSS/LESS:</p>\n\n<pre><code>#products { \n    ul { position: relative; overflow: hidden; text-align: center; font-size: 0; line-height: 0;  padding: 0; margin: 0;\n        li { display: inline-block; vertical-align: top; width: 130px; padding: 0 0 130px 0; margin: 0; }\n    }\n\n    li {\n        a { display: block; position: absolute; width: 130px; background: rgba(255,0,0,.5); z-index: 3; top: 0; bottom: 0;\n            .icon-product { background: #ccc; width: 90px; height: 90px; position: absolute; left: 20px; bottom: 20px; }\n            .name { opacity: 1; }\n        }\n\n        .name { position: relative; margin: 20px 10px 0; font-size: 14px; line-height: 18px; opacity: 0; }\n\n        a:hover {\n            background: #ddd; text-decoration: none;\n\n            .icon-product { background: #333; }\n        }\n    }\n}\n</code></pre>\n\n<p>Note, that the demo is using a workaround that involves data-duplication to fix <code>z-index</code>. Alternatively, you could use <code>pointer-events: none</code> and whatever solution for IE.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>here is very simple solution with a short css display:table</p>\n\n<pre><code>&lt;div id=\"main\" class=\"_dt-no-rows\"&gt;\n  &lt;div id=\"aside\" contenteditable=\"true\"&gt;\n    Aside\n    &lt;br&gt;\n    Here's the aside content\n  &lt;/div&gt;\n  &lt;div id=\"content\" contenteditable=\"true\"&gt;\n    Content\n    &lt;br&gt;\n    geht's pellentesque wurscht elementum semper tellus s'guelt Pfourtz !. gal hopla\n    &lt;br&gt;\n    TIP : Just clic on this block to add/remove some text\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>here is css</p>\n\n<pre><code>#main {\n display: table;\n width: 100%;\n}\n#aside, #content {\n  display: table-cell;\n  padding: 5px;\n}\n#aside {\n  background: none repeat scroll 0 0 #333333;\n  width: 250px;\n}\n#content {\nbackground: none repeat scroll 0 0 #E69B00;\n}\n</code></pre>\n\n<p>its look like this </p>\n\n<p><img src=\"http://i.stack.imgur.com/eBmDK.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you can get it working with js:</p>\n\n<pre><code>&lt;script&gt;\n    $(document).ready(function() {\n        var height = Math.max($(\"#left\").height(), $(\"#right\").height());\n        $(\"#left\").height(height);\n        $(\"#right\").height(height);\n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Although many disagree with using javascript for this type of thing, here is a method that I used to acheive this using javascript alone:</p>\n\n<pre><code>var rightHeight = document.getElementById('right').clientHeight;\nvar leftHeight = document.getElementById('left').clientHeight;\nif (leftHeight &gt; rightHeight) {\ndocument.getElementById('right').style.height=leftHeight+'px';\n} else {\ndocument.getElementById('left').style.height=rightHeight+'px';\n}\n</code></pre>\n\n<p>With \"left\" and \"right\" being the id's of the two div tags.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have two divs inside of a container. One on the left, one on the right, side by side. How am I able to make each one be of equal height, even though they have different content.</p>\n\n<p>For example, the right div has a lot of content, and is double the height of the left div, how do I make the left div stretch to the same height of the right div?</p>\n\n<p>Is there some JavaScript (jQuery) code to accomplish this?</p>\n",
            "last_activity_date": 1415959364,
            "question_id": 1056212,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "xhtml"
            ],
            "title": "How do I achieve equal height divs (positioned side by side) with HTML / CSS ?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>window.onbeforeunload = function (e) {\n  var e = e || window.event;\n\n  //IE &amp; Firefox\n  if (e) {\n    e.returnValue = 'Are you sure?';\n  }\n\n  // For Safari\n  return 'Are you sure?';\n};\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/window.onbeforeunload\">https://developer.mozilla.org/en/DOM/window.onbeforeunload</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>If the browser remains running after the page is closed, and if the browser processes the \"<strong><em>onbeforeunload</em></strong>\" event of the body element (sometimes it's disabled), and if the browser allows popup windows or mesage boxes and the ability to return false from that event to prevent the page change, then it's possible.</p>\n\n<p>For an example, start typing a comment on any stackoverflow page with Javascript enabled and then navigate away from that page.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This worked for me:</p>\n\n<pre><code>function closeWin(){\n var exit = confirm(\"Do you want to leave this window?\");  \n     if(exit==true){\n        //do something before closing;\n     }\n}    \n\nbody onbeforeunload=\"closeWin()\" \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This works too, unless for IE8 </p>\n\n<pre><code>$(window).bind('beforeunload', function (e) {\n        // code to execute when browser is closed\n        e.$.post(\"func.php\", { action: 'action', id_userMsg: '&lt;?php echo $id_user; ?&gt;' });      \n\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Does anyone know any way that I can use javascript to check when the browser window is close and pop-up a confirmation dailog to ask whether the user is confirm to exit the browser or change his mind to stay? </p>\n",
            "last_activity_date": 1362773645,
            "question_id": 805463,
            "score": 8,
            "tags": [
                "javascript"
            ],
            "title": "javascript to check when the browser window is close"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>That's one of the pitfalls of javascript: automatic semicolon insertion. Lines that do not end with a semicolon, but could be the end of a statement are automatically terminated, so your first example looks effectively like this: </p>\n\n<pre><code>function test()\n{\n  return; // &lt;- notice the inserted semicolon\n  { \n    javascript : \"fantastic\"\n  };\n}\n</code></pre>\n\n<p>See also <a href=\"http://javascript.crockford.com/code.html\">http://javascript.crockford.com/code.html</a></p>\n\n<p>In your second example you return an object (built by the curly braces) with the property javascript and its value of fantastic, effectively the same as this:</p>\n\n<pre><code>function test() {\n    var myObject = new Object();\n    myObject.javascript = \"fantastic\";\n    return myObject;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>It's because javascript most often puts \";\" at the end of each line, so basicly when you have return { in same line, javascript engine see that there will be something more, and when its in new line it thinks you forgot to put \";\", and puts it for you.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The problem is indeed semicolon injection as described above. I just read a good blog posting on this subject. It explains this issue and a whole lot more about javascript. It also contains some good references. You can read it <a href=\"http://skilldrick.co.uk/2010/09/why-javascript-is-awesome/\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The curly braces here indicate the construction of a new object. Thus your code is equivalent to:</p>\n\n<pre><code>function test() {\n  var a = { javascript : \"fantastic\" };\n  return a;\n}\n</code></pre>\n\n<p>which works whereas if you write:</p>\n\n<pre><code>function test() {\n  var a = { javascript : \"fantastic\" };\n  return; // ; is automatically inserted \n      a;\n}\n</code></pre>\n\n<p>it no longer works.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Javascript doesn't require semicolons at the end of statements, but the drawback is that it has to guess where the semicolons are. Most of the time this is not a problem, but sometimes it invents a semicolon where you didn't intend one.</p>\n\n<p>An example from my blog post about this (<a href=\"http://blog.guffa.com/2010/02/javascript-almost-not-line-based/\" rel=\"nofollow\">Javascript \u2013 almost not line based</a>):</p>\n\n<p>If you format the code like this:</p>\n\n<pre><code>function getAnswer() {\n   var answer = 42;\n   return\n      answer;\n}\n</code></pre>\n\n<p>Then it is interpreted like this:</p>\n\n<pre><code>function getAnswer() {\n  var answer = 42;\n  return;\n  answer;\n}\n</code></pre>\n\n<p>The return statement takes it\u2019s parameterless form, and the argument becomes a statement of it\u2019s own.</p>\n\n<p>The same happens to your code. The function is interpreted as:</p>\n\n<pre><code>function test()\n{\n  return;\n  {\n    javascript : \"fantastic\"\n  };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I personally prefer the Allman Style for readability (vs K&amp;R style).</p>\n\n<p>Instead of\u2026</p>\n\n<pre><code>function test() {\n  return {\n    javascript : \"fantastic\"\n  };\n}\n</code></pre>\n\n<p>I like\u2026</p>\n\n<pre><code>function test() \n{\n  var obj =\n  {\n    javascript : \"fantastic\"\n  };\n\n  return obj;\n}\n</code></pre>\n\n<p>But this is a work-around.  I can live with it though.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have read this <a href=\"http://robertnyman.com/2008/10/16/beware-of-javascript-semicolon-insertion/\">article</a>, where an example is shown. Please explain why the code snippets below return different results due to changes in the placement of curly the braces.</p>\n\n<p>Example with an opening curly brace <code>{</code> on new line.</p>\n\n<pre><code>function test()\n{\n  return\n  { /* &lt;----curly brace in new line */\n    javascript: \"fantastic\"\n  };\n}\n\nvar r = test();\ntry {\n  alert(r.javascript); // does this work...?\n} catch (e) {\n  alert('no - it broke: ' + typeof r);\n}\n</code></pre>\n\n<p><code>test()</code> returns <code>undefined</code>.</p>\n\n<p>Example with an opening curly brace <code>{</code> on same line as <code>return</code>. </p>\n\n<pre><code>function test()\n{\n  return { /* &lt;----inline curly brace */\n    javascript : \"fantastic\"\n  };\n}\n\nvar r = test();\ntry {\n  alert(r.javascript); // does this work...?\n} catch (e) {\n  alert('no - it broke: ' + typeof r);\n}\n</code></pre>\n\n<p><code>test()</code> returns an object.</p>\n\n<p>Here is live example <a href=\"http://jsbin.com/azufi\">beware of curly braces</a>.</p>\n",
            "last_activity_date": 1370609450,
            "question_id": 3641519,
            "score": 29,
            "tags": [
                "javascript"
            ],
            "title": "Why does a results vary based on curly brace placement?"
        },
        {
            "answer_count": 19,
            "answers": [
                {
                    "body": "<p>look for a string which contains an unescaped single qoute that may be inserted by some server side code.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You might try running the script through <a href=\"http://jslint.com/\">JSLint</a>.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Try a \"binary search\". Delete half the code and try again. If the error is still there, delete half the remaining code. If the error is not there, put what you deleted back in, and delete half of that. Repeat. </p>\n\n<p>You should be able to narrow it down to a few line fairly quickly. My experience has been that at this point, you will notice some stupid malformed string.</p>\n\n<p>It may be expedient to perform this on a saved version of the HTML output to the browser, if you're not sure which server-side resource the error is in.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The web page developer guessed wrong about which encoding is used by the viewer's browser.  This can usually be solved by specifying an encoding in the page's header.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you've done any cut/paste: some online syntax highlighters will mangle single and double quotes, turning them into formatted quote pairs (matched opening and closing pairs).  (tho i can't find any examples right now)...  So that entails hitting Command-+ a few times and staring at your quote characters</p>\n\n<p>Try a <a href=\"http://stackoverflow.com/questions/4689/recommended-fonts-for-programming\">different font?</a>  also, different editors and IDEs use different tokenizers and highlight rules, and JS is one of more dynamic languages to parse, so try opening the file in emacs, vim, gedit (with JS plugins)...  If you get lucky, one of them will show a long purple string running through the end of file.  </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Scan the code that comes <em>before</em> the line# mentioned by error message. Whatever is unterminated has resulted in something downstream, (the blamed line#), to be flagged.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Look for linebreaks! Those are often the cause. </p>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>Have you escaped your forward slashes( / )?\nI've had trouble with those before</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Most browsers seem to have problems with code like this:</p>\n\n<pre><code>var foo = \"&lt;/script&gt;\";\n</code></pre>\n\n<p>In Firefox, Opera and IE8 this results in an unterminated string literal error. Can be pretty nasty when serializing html code which includes scripts.</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>Whitespace is another issue I find, causes this error. Using a function to trim the whitespace may help.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Have you tried <a href=\"http://getfirebug.com/downloads#chromebug\" rel=\"nofollow\">Chromebug</a>? It's the Firebug for extensions.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've had trouble with angled quotes in the past ( \u2018 ) usually from copy and pasting from Word.  Replacing them with regular single quotes ( ' ) does the trick.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Maybe it's because you have a line break in your PHP code. If you need line breaks in your alert window message, include it as an escaped syntax at the end of each line in your PHP code. I usually do it the following way:</p>\n\n<pre><code>$message = 'line 1.\\\\n';\n$message .= 'line 2.';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would vote for jamtoday's answer if I had the \"reputation\"</p>\n\n<p>If your data is coming by way of PHP, this might help</p>\n\n<pre><code>$str = str_replace(array(\"\\r\", \"\\n\"), '', $str);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Also, keep in mind that %0A is the linefeed character URL encoded. It took me awhile to find where there was a linefeed in my offending code.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I just discovered that <code>\"&lt;\\/script&gt;\"</code> appears to work as well as <code>\"&lt;/scr\"+\"ipt&gt;\"</code>.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Just escape your tag closures or use ascii code</p>\n\n<p>ie</p>\n\n<pre><code>&lt;\\/script&gt;\n</code></pre>\n\n<p>ie</p>\n\n<pre><code>&lt;&amp;#47;script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If nothing helps, look for some uni-code characters like</p>\n\n<pre><code>\\u2028\n</code></pre>\n\n<p>this may break your string on more than one line and throw this error</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>$str = str_replace(array(\"\\r\\n\",\"\\n\\r\",\"\\r\", \"\\n\"), '<br />', stripslashes($str));</p>\n\n<p>This should work.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to debug a JavaScript script that gets read in a Firefox extension and executed. I only can see errors via the Firebug console (my code is invisible to Firebug), and it's reporting a \"unterminated string literal.\" </p>\n\n<p>I checked the line and the lines around it and everything seems fine-parentheses, braces, and quotes are balanced, etc. What are other possible causes that I should be looking for?</p>\n",
            "last_activity_date": 1355902776,
            "question_id": 227552,
            "score": 29,
            "tags": [
                "javascript",
                "debugging",
                "firefox-addon"
            ],
            "title": "Common sources of unterminated string literal"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Do it <code>onSubmit()</code>:</p>\n\n<pre><code>$('form#id').submit(function(){\n    $(this).find('input[type=submit]').attr('disabled', 'disabled');\n});\n</code></pre>\n\n<p>What is happening is you're disabling the button altogether before it actually triggers the submit event.</p>\n\n<p>You should probably also think about naming your elements with IDs or CLASSes, so you don't select all inputs of submit type on the page.</p>\n\n<p><strong>Demonstration:</strong> <a href=\"http://jsfiddle.net/userdude/2hgnZ/\">http://jsfiddle.net/userdude/2hgnZ/</a></p>\n\n<p>(Note, I use <code>preventDefault()</code> and <code>return false</code> so the form doesn't actual submit in the example; leave this off in your use.)</p>\n",
                    "is_accepted": true,
                    "score": 57
                },
                {
                    "body": "<p><strong>How to disable submit button</strong> </p>\n\n<p>just call a function on onclick event and... return true to submit and false to disable submit. \n<strong>OR</strong>\ncall a function on window.onload like :</p>\n\n<pre><code>window.onload = init();\n</code></pre>\n\n<p>and in init() do something like this :</p>\n\n<pre><code>var theForm = document.getElementById(\u2018theForm\u2019);\ntheForm.onsubmit =  // what ever you want to do \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This should take care of it in your app.</p>\n\n<pre><code>$(\":submit\").closest(\"form\").submit(function(){\n    $(':submit').attr('disabled', 'disabled');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Disabled controls do not submit their values</strong> which does not help in knowing if the user clicked save or delete. </p>\n\n<p>So I store the button value in a hidden which does get submitted. The name of the hidden is the same as the button name. I call all my buttons by the name of <code>button</code>.</p>\n\n<p>E.g. <code>&lt;button type=\"submit\" name=\"button\" value=\"save\"&gt;Save&lt;/button&gt;</code></p>\n\n<p>Based on this I found <a href=\"https://forum.jquery.com/topic/determining-which-of-two-submit-buttons-were-clicked-in-a-single-form\" rel=\"nofollow\">here</a>. Just store the clicked button in a variable. </p>\n\n<pre><code>$(document).ready(function(){\n    var submitButton$;\n\n    $(document).on('click', \":submit\", function (e)\n    {\n        // you may choose to remove disabled from all buttons first here.\n        submitButton$ = $(this);\n    });\n\n    $(document).on('submit', \"form\", function(e)\n    {\n        var form$ = $(this);\n        var hiddenButton$ = $('#button', form$);\n        if (IsNull(hiddenButton$))\n        {\n            // add the hidden to the form as needed\n            hiddenButton$ = $('&lt;input&gt;')\n                .attr({ type: 'hidden', id: 'button', name: 'button' })\n                .appendTo(form$);\n        }\n        hiddenButton$.attr('value', submitButton$.attr('value'));\n        submitButton$.attr(\"disabled\", \"disabled\");\n    }\n});\n</code></pre>\n\n<p>Here is my <code>IsNull</code> function. Use or substitue your own version for IsNull or undefined etc.</p>\n\n<pre><code>function IsNull(obj)\n{\n    var is;\n    if (obj instanceof jQuery)\n        is = obj.length &lt;= 0;\n    else\n        is = obj === null || typeof obj === 'undefined' || obj == \"\";\n\n    return is;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Specifically if someone is facing problem in <em>Chrome</em></strong></p>\n\n<p>What you need to do to fix this is to use the onSubmit tag in the  element to set the submit button to disabled. This will allow Chrome to disable the button immediately after it is pressed and the form submission will still go ahead.... </p>\n\n<p>e.g. </p>\n\n<pre><code>&lt;form name =\"myform\" method=\"POST\" action=\"dosomething.php\" onSubmit=\"document.getElementById('submit').disabled=true;\"&gt; \n     &lt;input type=\"submit\" name=\"submit\" value=\"Submit\" id=\"Submit\"&gt; \n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I wrote this code to disable submit buttons on my website after the click:</p>\n\n<pre><code>$('input[type=submit]').click(function(){\n    $(this).attr('disabled', 'disabled');\n});\n</code></pre>\n\n<p>Unfortunately, it doesn't send the form. How can I fix this?</p>\n\n<p><strong>EDIT</strong>\nI'd like to bind the submit, not the form :)</p>\n",
            "last_activity_date": 1413802649,
            "question_id": 5691054,
            "score": 24,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Disable submit button on form submit"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<pre><code>var a = 5.467;\nvar truncated = Math.floor(a * 100) / 100; // = 5.46\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>You can fix the rounding by subtracting 0.5 for toFixed, e.g.</p>\n\n<pre><code>(f - 0.005).toFixed(2)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p><strong>upd</strong>:</p>\n\n<p>So, after all it turned out, rounding bugs will always haunt you, no matter how hard you try to compensate them. Hence the problem should be attacked by representing numbers exactly in decimal notation.</p>\n\n<pre><code>Number.prototype.toFixedDown = function(digits) {\n    var re = new RegExp(\"(\\\\d+\\\\.\\\\d{\" + digits + \"})(\\\\d)\"),\n        m = this.toString().match(re);\n    return m ? parseFloat(m[1]) : this.valueOf();\n};\n\n[   5.467.toFixedDown(2),\n    985.943.toFixedDown(2),\n    17.56.toFixedDown(2),\n    (0).toFixedDown(1),\n    1.11.toFixedDown(1) + 22];\n\n// [5.46, 985.94, 17.56, 0, 23.1]\n</code></pre>\n\n<p>Old error-prone solution based on compilation of others':</p>\n\n<pre><code>Number.prototype.toFixedDown = function(digits) {\n  var n = this - Math.pow(10, -digits)/2;\n  n += n / Math.pow(2, 53); // added 1360765523: 17.56.toFixedDown(2) === \"17.56\"\n  return n.toFixed(digits);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Dogbert's answer is good, but if your code might have to deal with negative numbers, <code>Math.floor</code> by itself may give unexpected results.</p>\n\n<p>E.g. <code>Math.floor(4.3) = 4</code>, but <code>Math.floor(-4.3) = -5</code></p>\n\n<p>Use a helper function like this one instead to get consistent results:</p>\n\n<pre><code>truncateDecimals = function (number) {\n    return Math[number &lt; 0 ? 'ceil' : 'floor'](number);\n};\n\n// Applied to Dogbert's answer:\nvar a = 5.467;\nvar truncated = truncateDecimals(a * 100) / 100; // = 5.46\n</code></pre>\n\n<p>Here's a more convenient version of this function:</p>\n\n<pre><code>truncateDecimals = function (number, digits) {\n    var multiplier = Math.pow(10, digits),\n        adjustedNum = number * multiplier,\n        truncatedNum = Math[adjustedNum &lt; 0 ? 'ceil' : 'floor'](adjustedNum);\n\n    return truncatedNum / multiplier;\n};\n\n// Usage:\nvar a = 5.467;\nvar truncated = truncateDecimals(a, 2); // = 5.46\n\n// Negative digits:\nvar b = 4235.24;\nvar truncated = truncateDecimals(b, -2); // = 4200\n</code></pre>\n\n<p>If that isn't desired behaviour, insert a call to <code>Math.abs</code> on the first line:</p>\n\n<pre><code>var multiplier = Math.pow(10, Math.abs(digits)),\n</code></pre>\n\n<p><strong>EDIT:</strong> shendz correctly points out that using this solution with <code>a = 17.56</code> will incorrectly produce <code>17.55</code>. For more about why this happens, read <a href=\"http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html\">What Every Computer Scientist Should Know About Floating-Point Arithmetic</a>. Unfortunately, writing a solution that eliminates all sources of floating-point error is pretty tricky with javascript. In another language you'd use integers or maybe a Decimal type, but with javascript...</p>\n\n<p>This solution <em>should be</em> 100% accurate, but it will also be slower:</p>\n\n<pre><code>function truncateDecimals (num, digits) {\n    var numS = num.toString(),\n        decPos = numS.indexOf('.'),\n        substrLength = decPos == -1 ? numS.length : 1 + decPos + digits,\n        trimmedResult = numS.substr(0, substrLength),\n        finalResult = isNaN(trimmedResult) ? 0 : trimmedResult;\n\n    return parseFloat(finalResult);\n}\n</code></pre>\n\n<p>For those who need speed but also want to avoid floating-point errors, try something like <a href=\"https://github.com/dtrebbien/BigDecimal.js\">BigDecimal.js</a>. You can find other javascript BigDecimal libraries in this SO question: <a href=\"http://stackoverflow.com/q/744099/224354\">\"Is there a good Javascript BigDecimal library?\"</a> and here's a good blog post about <a href=\"http://blog.smartbear.com/testing/four-serious-math-libraries-for-javascript/\">math libraries for Javascript</a> </p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Here my take on the subject:</p>\n\n<pre><code>convert.truncate = function(value, decimals) {\n  decimals = (decimals === undefined ? 0 : decimals);\n  return parseFloat((value-(0.5/Math.pow(10, decimals))).toFixed(decimals),10);\n};\n</code></pre>\n\n<p>It's just a slightly more elaborate version of</p>\n\n<pre><code>(f - 0.005).toFixed(2)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Consider <a href=\"http://stackoverflow.com/a/4055675/1028230\">taking advantage of the double tilde: <code>~~</code></a>.</p>\n\n<p>Take in the number.  Multiply by significant digits after the decimal so that you can <a href=\"http://stackoverflow.com/questions/14/difference-between-math-floor-and-math-truncate-in-net\">truncate</a> to zero places with <code>~~</code>.  Divide that multiplier back out.  Profit.</p>\n\n<pre><code>function truncator(numToTruncate, intDecimalPlaces) {    \n    var numPower = Math.pow(10, intDecimalPlaces); // \"numPowerConverter\" might be better\n    return ~~(numToTruncate * numPower)/numPower;\n}\n</code></pre>\n\n<p>I'm trying to resist wrapping the <code>~~</code> call in parens; order of operations should make that work correctly, I believe.</p>\n\n<p><code>alert(truncator(5.1231231, 1)); // is 5.1</code></p>\n\n<p><code>alert(truncator(-5.73, 1)); // is -5.7</code></p>\n\n<p><code>alert(truncator(-5.73, 0)); // is -5</code></p>\n\n<p><a href=\"http://jsfiddle.net/rufwork/CTqtm/\">JSFiddle link</a>.</p>\n\n<p><strong>EDIT:</strong> Looking back over, I've unintentionally also handled cases to round off left of the decimal as well.</p>\n\n<p><code>alert(truncator(4343.123, -2)); // gives 4300.</code></p>\n\n<p>The logic's a little wacky looking for that usage, and may benefit from a quick refactor.  But it still works.  Better lucky than good.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>just to point out a simple solution that worked for me</p>\n\n<p>convert it to string and then regex it...</p>\n\n<pre><code>var number = 123.45678;\nvar number_s = '' + number;\nvar number_truncated_s = number_s.match(/\\d*\\.\\d{4}/)[0]\nvar number_truncated = parseFloat(number_truncated_s)\n</code></pre>\n\n<p>It can be abbreviated to</p>\n\n<pre><code>var number_truncated = parseFloat(('' + 123.4568908).match(/\\d*\\.\\d{4}/)[0])\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I thought I'd throw in an answer using <code>|</code> since it is simple and works well.</p>\n\n<pre><code>truncate = function(number, places) {\n  var shift = Math.pow(10, places);\n\n  return ((number * shift) | 0) / shift;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The one that is mark as the solution is the better solution I been found until today, but has a serious problem with 0 (for example, 0.toFixedDown(2) gives -0.01). So I suggest to use this:</p>\n\n<pre><code>Number.prototype.toFixedDown = function(digits) {\n  if(this == 0) {\n    return 0;\n  }\n  var n = this - Math.pow(10, -digits)/2;\n  n += n / Math.pow(2, 53); // added 1360765523: 17.56.toFixedDown(2) === \"17.56\"\n  return n.toFixed(digits);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>@kirilloid</p>\n\n<p>Please fix your answer, it's broken. </p>\n\n<p><a href=\"http://jsfiddle.net/XdQN2/\" rel=\"nofollow\">http://jsfiddle.net/XdQN2/</a></p>\n\n<pre><code>Number.prototype.toFixedDown = function(digits) {\n      var n = this - Math.pow(10, -digits)/2;\n      n += n / Math.pow(2, 53); // added 1360765523: 17.56.toFixedDown(2) === \"17.56\"\n      return n.toFixed(digits);\n};\n\nvar foo = 0;\nvar bar = parseFloat(foo).toFixedDown(2);\nalert(bar);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is what I use:</p>\n\n<pre><code>var t = 1;\nfor (var i = 0; i &lt; decimalPrecision; i++)\n    t = t * 10;\n\nvar f = parseFloat(value);\nreturn (Math.floor(f * t)) / t;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is simple but working function to truncate number upto 2 decimal places.</p>\n\n<pre><code>           function truncateNumber(num) {\n                var num1 = \"\";\n                var num2 = \"\";\n                var num1 = num.split('.')[0];\n                num2 = num.split('.')[1];\n                var decimalNum = num2.substring(0, 2);\n                var strNum = num1 +\".\"+ decimalNum;\n                var finalNum = parseFloat(strNum);\n                return finalNum;\n            }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>Number.prototype.trim = function(decimals) {\n    var s = this.toString();\n    var d = s.split(\".\");\n    d[1] = d[1].substring(0, decimals);\n    return parseFloat(d.join(\".\"));\n}\n\nconsole.log((5.676).trim(2)); //logs 5.67\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to truncate decimal numbers to decimal places. Something like this:</p>\n\n<pre><code>5.467   -&gt; 5.46  \n985.943 -&gt; 985.94\n</code></pre>\n\n<p><code>toFixed(2)</code> does just  about the right thing but it rounds off the value. I don't need the value rounded off. Hope this is possible in javascript.</p>\n",
            "last_activity_date": 1422911407,
            "question_id": 4912788,
            "score": 22,
            "tags": [
                "javascript",
                "floating-point",
                "floating-accuracy"
            ],
            "title": "Truncate (not round off) decimal numbers in javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>For a use case like pdf generation.</p>\n\n<p>You can limit to characters per line, if a split occurs middle word, adjust appropriately.</p>\n\n<p>To gain a more accurate characters per line you can use monospaced fonts then determine the width per character for each font allowed. Then divide the character width by the size of the allowed text line width, and you'll have the allowed characters per line for that font.</p>\n\n<p>You could use non monospaced fonts, but then you'll have to measure each letter's width - ugh. A way you can automate the width guessing is having a span that has no margin or padding, add in each character for each font (and size) then measure the width of the span and use that.</p>\n\n<p>I've done up the code:</p>\n\n<pre><code>/**\n * jQuery getFontSizeCharObject\n * @version 1.0.0\n * @date September 18, 2010\n * @since 1.0.0, September 18, 2010\n * @package jquery-sparkle {@link http://www.balupton/projects/jquery-sparkle}\n * @author Benjamin \"balupton\" Lupton {@link http://www.balupton.com}\n * @copyright (c) 2010 Benjamin Arthur Lupton {@link http://www.balupton.com}\n * @license Attribution-ShareAlike 2.5 Generic {@link http://creativecommons.org/licenses/by-sa/2.5/\n */\n$.getFontSizeCharObject = function(fonts,sizes,chars){\n    var fonts = fonts||['Arial','Times'],\n        sizes = sizes||['12px','14px'],\n        chars = chars||['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','y','x','z',\n                        'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','Y','X','Z',\n                        '0','1','2','3','4','5','6','7','8','9','-','=',\n                        '!','@','#','$','%','^','&amp;','*','(',')','_','+',\n                        '[',']','{','}','\\\\','|',\n                        ';',\"'\",':','\"',\n                        ',','.','/','&lt;','&gt;','?',' '],\n        font_size_char = {},\n        $body = $('body'),\n        $span = $('&lt;span style=\"padding:0;margin:0;letter-spacing:0:word-spacing:0\"/&gt;').appendTo($body);\n\n    $.each(fonts, function(i,font){\n        $span.css('font-family', font);\n        font_size_char[font] = font_size_char[font]||{};\n        $.each(sizes, function(i,size){\n            $span.css('font-size',size);\n            font_size_char[font][size] = font_size_char[font][size]||{};\n            $.each(chars,function(i,char){\n                if ( char === ' ' ) {\n                    $span.html('&amp;nbsp;');\n                }\n                else {\n                    $span.text(char);\n                }\n                var width = $span.width()||0;\n                font_size_char[font][size][char] = width;\n            });\n        });\n    });\n\n    $span.remove();\n\n    return font_size_char;\n};\n\n/**\n * jQuery adjustedText Element Function\n * @version 1.0.0\n * @date September 18, 2010\n * @since 1.0.0, September 18, 2010\n * @package jquery-sparkle {@link http://www.balupton/projects/jquery-sparkle}\n * @author Benjamin \"balupton\" Lupton {@link http://www.balupton.com}\n * @copyright (c) 2010 Benjamin Arthur Lupton {@link http://www.balupton.com}\n * @license Attribution-ShareAlike 2.5 Generic {@link http://creativecommons.org/licenses/by-sa/2.5/\n */\n$.fn.adjustedText = function(text,maxLineWidth){\n    var $this = $(this),\n        font_size_char = $.getFontSizeCharObject(),\n        char_width = font_size_char['Times']['14px'],\n        maxLineWidth = parseInt(maxLineWidth,10),\n        newlinesAt = [],\n        lineWidth = 0,\n        lastSpace = null;\n\n    text = text.replace(/\\s+/g, ' ');\n\n    $.each(text,function(i,char){\n        var width = char_width[char]||0;\n        lineWidth += width;\n        if ( /^[\\-\\s]$/.test(char) ) {\n            lastSpace = i;\n        }\n        //console.log(i,char,lineWidth,width);\n        if ( lineWidth &gt;= maxLineWidth ) {\n            newlinesAt.push(lastSpace||i);\n            lineWidth = width;\n            lastSpace = null;\n        }\n    });\n\n    $.each(newlinesAt,function(i,at){\n        text = text.substring(0,at+i)+\"\\n\"+text.substring(at+i);\n    });\n\n    text = text.replace(/\\ ?\\n\\ ?/g, \"\\n\");\n\n    console.log(text,newlinesAt);\n\n    $this.text(text);\n\n    return $this;\n};\n\n$(function(){\n    var $body = $('body'),\n        $textarea = $('#mytext'),\n        $btn = $('#mybtn'),\n        $div = $('#mydiv');\n\n    if ( $textarea.length === 0 &amp;&amp; $div.length === 0 ) {\n        $body.empty();\n\n        $textarea = $('&lt;textarea id=\"mytext\"/&gt;').val('(When spoken repeatedly, often three times in succession: blah blah blah!) Imitative of idle, meaningless talk; used sometimes in a slightly derogatory manner to mock or downplay another\\'s words, or to show disinterest in a diatribe, rant, instructions, unsolicited advice, parenting, etc. Also used when recalling and retelling another\\'s words, as a substitute for the portions of the speech deemed irrelevant.').appendTo($body);\n        $div = $('&lt;div id=\"mydiv\"/&gt;').appendTo($body);\n        $btn = $('&lt;button id=\"mybtn\"&gt;Update Div&lt;/button&gt;').click(function(){\n            $div.adjustedText($textarea.val(),'300px');\n        }).appendTo($body);\n\n        $div.add($textarea).css({\n            'width':'300px',\n            'font-family': 'Times',\n            'font-size': '14px'\n        });\n        $div.css({\n            'width':'auto',\n            'white-space':'pre',\n            'text-align':'left'\n        });\n    }\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here's what I ended up using (feel free to critique and copy for your own nefarious purposes).</p>\n\n<p>First off, when the edit comes in from the user, it's broken up with <code>$(editableElement).lineText(userInput)</code>.</p>\n\n<pre><code>jQuery.fn.lineText = function (userInput) {\n   var a = userInput.replace(/\\n/g, \" \\n&lt;br/&gt; \").split(\" \");\n   $.each(a, function(i, val) { \n      if(!val.match(/\\n/) &amp;&amp; val!=\"\") a[i] = '&lt;span class=\"word-measure\"&gt;' + val + '&lt;/span&gt;';\n   });\n   $(this).html(a.join(\" \"));\n};\n</code></pre>\n\n<p>The newline replacement happens because the editing textbox is populated with <code>$(editableElement).text()</code>, which ignores <code>&lt;br/&gt;</code> tags, but they will still change the height of the following line in the display for typesetting purposes. This was not part of the initial objective, just fairly low-hanging fruit.</p>\n\n<p>When I need to pull out formatted text, I call <code>$(editableElement).getLines()</code>, where</p>\n\n<pre><code>jQuery.fn.getLines = function (){\n   var count = $(this).children(\".word-measure\").length;\n   var lineAcc = [$(this).children(\".word-measure:eq(0)\").text()];\n   var textAcc = [];\n   for(var i=1; i&lt;count; i++){\n      var prevY = $(this).children(\".word-measure:eq(\"+(i-1)+\")\").offset().top;\n      if($(this).children(\".word-measure:eq(\"+i+\")\").offset().top==prevY){\n         lineAcc.push($(this).children(\".word-measure:eq(\"+i+\")\").text());\n   } else {\n     textAcc.push({text: lineAcc.join(\" \"), top: prevY});\n     lineAcc = [$(this).children(\".word-measure:eq(\"+i+\")\").text()];\n   }\n   }\n   textAcc.push({text: lineAcc.join(\" \"), top: $(this).children(\".word-measure:last\").offset().top});\n   return textAcc;\n};\n</code></pre>\n\n<p>The end result is a list of hashes, each one containing the content and vertical offset of a single line of text.</p>\n\n<pre><code>[{\"text\":\"Some dummy set to\",\"top\":363},\n {\"text\":\"demonstrate...\",\"top\":382},\n {\"text\":\"The output of this\",\"top\":420},\n {\"text\":\"wrap-detector.\",\"top\":439}]\n</code></pre>\n\n<p>If I just want unformatted text, $(editableElement).text() still returns</p>\n\n<pre><code>\"Some dummy set to demonstrate... The output of this wrap-detector.\"\n</code></pre>\n\n<p>TODO:</p>\n\n<ul>\n<li><s>Package this nicely so that you can go <code>$(element).getLines()</code> and <code>$(element).lineText()</code></s></li>\n<li><s>Resolve the line-break problems</s></li>\n<li><s>Weep for lack of <code>cdr</code> in JavaScript</s></li>\n<li><s>Attempt to re-write getLines as a tail-recursion to rely less on internal state</s>(apparently JavaScript doesn't universally optimize tail calls. So fiddlesticks.)</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Well, if you want something that's ridiculously simple and probably too useless for you (it'll need major modification if you have any sort of HTML inside the paragraph), then have a look at this: </p>\n\n<pre><code>var para = $('p');\n\npara.each(function(){\n    var current = $(this);\n    var text = current.text();\n    var words = text.split(' ');\n\n    current.text(words[0]);\n    var height = current.height();\n\n    for(var i = 1; i &lt; words.length; i++){\n        current.text(current.text() + ' ' + words[i]);\n\n        if(current.height() &gt; height){\n            height = current.height();\n            // (i-1) is the index of the word before the text wraps\n            console.log(words[i-1]);\n        }\n    }\n});\n</code></pre>\n\n<p>It's so ridiculously simple it might just work. What this does is to break up the text by spaces, then append the words back word by word, watching for any increase in the height of the element, which would indicate a line wrap. </p>\n\n<p>Have a look at it here: <a href=\"http://www.jsfiddle.net/xRPYN/2/\">http://www.jsfiddle.net/xRPYN/2/</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>The solutions above don't work once you have more complex structure like a link in a paragraph (e.g. you can have <code>&lt;b&gt;&lt;i&gt;&lt;a href&gt;&lt;/a&gt;</code> within a <code>&lt;p&gt;</code>).</p>\n\n<p>So I made a javascript library to detect where lines wrap that works in those cases: <a href=\"http://github.com/xdamman/js-line-wrap-detector\" rel=\"nofollow\">http://github.com/xdamman/js-line-wrap-detector</a></p>\n\n<p>I hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Supposing I have some random block of text in a single line. Like so</p>\n\n<p><code>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</code></p>\n\n<p>But for whatever reason (width settings on the containing element, use of text-zoom etc.), on the viewer's screen it displays as two or more lines.</p>\n\n<p><code>Lorem ipsum dolor sit amet,</code></p>\n\n<p><code>consectetur adipiscing elit.</code></p>\n\n<p>or </p>\n\n<p><code>Lorem ipsum dolor sit</code></p>\n\n<p><code>amet, consectetur</code></p>\n\n<p><code>adipiscing elit.</code></p>\n\n<p>Is there any way to find out via javascript where those line-wraps happen?</p>\n\n<p><code>$('p').text()</code> and <code>$('p').html()</code> return <code>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</code> regardless of how the text is displayed.</p>\n",
            "last_activity_date": 1389032941,
            "question_id": 3738490,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "dom",
                "text"
            ],
            "title": "Finding line-wraps"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>use the onbeforeunload event</p>\n\n<pre><code>window.onbeforeunload = function(){\n    return \"Are you sure you want to close the window?\";\n}\n</code></pre>\n\n<p>This will display a messagebox where the user can choose whether or not to close the window.</p>\n\n<p><strong>Note that this is not supported by Opera</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You need to listen on the <em>non</em>-standard <a href=\"https://developer.mozilla.org/en/DOM/window.onbeforeunload\"><code>beforeunload</code></a> event. This is supported by almost all browsers, expect of Opera which is known to adhere the W3C standards extremely strictly.</p>\n\n<p>Here's a kickoff example:</p>\n\n<pre><code>window.onbeforeunload = function() {\n    return \"Hey, you're leaving the site. Bye!\";\n};\n</code></pre>\n\n<p>This message will show up in kind of a confirmation dialogue. This message will show up right <em>before</em> the client unloads the page. That can be a browser close, <em>but</em> that can also be a simple navigational action like clicking a link or submitting a form in the page!</p>\n\n<p>You would most probably also like to turn it off (just set to <code>null</code>) whenever an internal link is clicked or an internal form is submitted. You namely don't want to annoy endusers with unintuitive behaviour. You can do that by listening on the <code>click</code> event of the desired links and the <code>submit</code> event of the desired forms. <a href=\"http://jquery.com\">jQuery</a> may be of great help here since it does that in crossbrowsercompatible way so that you don't need to write >20 lines of JS code for this:</p>\n\n<pre><code>&lt;script src=\"http://code.jquery.com/jquery-latest.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n    window.onbeforeunload = function() {\n        return \"You're leaving the site.\";\n    };\n    $(document).ready(function() {\n        $('a[rel!=ext]').click(function() { window.onbeforeunload = null; });\n        $('form').submit(function() { window.onbeforeunload = null; });\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>You only need to give all external links the defacto standard attribute <code>rel=\"ext\"</code> to denote that those are external links.</p>\n\n<pre><code>&lt;a href=\"http://google.com\" rel=\"ext\"&gt;Google&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p><a href=\"http://msdn.microsoft.com/en-us/library/ms536907(v=VS.85).aspx\"><code>onbeforeunload</code></a> fires before <a href=\"http://msdn.microsoft.com/en-us/library/ms536973(v=VS.85).aspx\"><code>onunload</code></a>.</p>\n\n<p>You can't cancel the event in <code>onunload</code>. <code>onbeforeunload</code> allows returning a string from events (e.g. <code>window.onbeforeunload = function() {return \"really leave now?\"}</code>, and the browser will ask the user a question whether they want to leave your page. The page has no say in stopping the event if \"Yes\" is clicked (that's the way it should be too in my opinion.)</p>\n\n<p><strong>General points:</strong></p>\n\n<ul>\n<li><code>alert</code>, <code>prompt</code> and <code>confirm</code> aren't allowed in either events.</li>\n<li>Neither is supported in Opera.</li>\n</ul>\n\n<p><strong>WARNING:</strong> In IE6/7 at least (and possibly IE8 but not FF/Chrome etc) <code>onbeforeunload</code> and <code>onunload</code> are triggered when anchors/javascript links are clicked on. Some examples:</p>\n\n<ul>\n<li><code>&lt;a href=\"#myanchor\"&gt;trigger unload!&lt;/a&gt;</code></li>\n<li><code>&lt;a href=\"javascript: alert('message!')\"&gt;trigger unload!&lt;/a&gt;</code></li>\n</ul>\n\n<p>(MSDN is as good a source as any, considering it's non-standard and that Firefox/Chrome/Safari seems to largely have copied the implementation from IE.)</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I have an problem that i can not solve. \nThe problem is this way: When i close my page on some browser i want an message box to appear and to ask me if I really want to close the page or not. </p>\n\n<p>logically: click on  x (close tab on web browser) and than the box appears with two buttons yes and now, if i click yes the page will be closed if i click no the page will not close. </p>\n\n<p>I know there must be some javascript or ajax code but i can not configure it by my self. </p>\n",
            "last_activity_date": 1391993432,
            "question_id": 2858057,
            "score": 16,
            "tags": [
                "javascript",
                "browser"
            ],
            "title": "Javascript function, on web page close"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>It would probably be better to just find out by hand which browsers support it and then have your conditional more like:</p>\n\n<pre><code>if( $.browser.msie ) {\n  alert( 'no' );\n}\n</code></pre>\n\n<p>...etc.</p>\n\n<p>The <code>$.browser.msie</code> is jQuery syntax, most frameworks have similar built-in functions since they use them so much internally. If you aren't using a framework then I'd suggest just taking a look at jQuery's implementation of those functions.</p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>Different approach, get the typeof</p>\n\n<pre><code>if(typeof window.onbeforeunload == 'function')\n\n{\nalert(\"hello functionality!\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>alert('onbeforeunload' in window);\n</code></pre>\n\n<p>Alerts 'true' if <code>onbeforeunload</code> is a property of <code>window</code> (even if it is null).</p>\n\n<p>This should do the same thing:</p>\n\n<pre><code>var supportsOnbeforeunload = false;\nfor (var prop in window) {\n    if (prop === 'onbeforeunload') {\n    supportsOnbeforeunload = true;\n    break;\n    }\n}\nalert(supportsOnbeforeunload);\n</code></pre>\n\n<p>Lastly:</p>\n\n<pre><code>alert(typeof window.onbeforeunload != 'undefined');\n</code></pre>\n\n<p>Again, <code>typeof window.onbeforeunload</code> appears to be 'object', even if it currently has the value <code>null</code>, so this works.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Cruster,</p>\n\n<p>The \"beforeunload\" is not defined in the DOM-Events specification, this is a IE-specific feature. I think it was created in order to enable execution to be triggered before standard \"unload\" event. In other then IE browsers you could make use of capture-phase \"unload\" event listener thus getting code executed before for example an inline body onunload event. </p>\n\n<p>Also, <strong>DOM doesn't offer any interfaces to test its support for a specific event</strong>, you can only test for support of an events group (MouseEvents, MutationEvents etc.)</p>\n\n<p>Meanwhile you can also refer to DOM-Events specification <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/events.html\" rel=\"nofollow\">http://www.w3.org/TR/DOM-Level-3-Events/events.html</a> (unfortunately not supported in IE)</p>\n\n<p>Hope this information helps some</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>onbeforeunload is also supported by FF, so testing for browser won't help.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I wrote about a more-or-less <a href=\"http://perfectionkills.com/detecting-event-support-without-browser-sniffing/\">reliable inference for detecting event support</a> in modern browsers some time ago. You can see on a demo page that \"beforeunload\" is supported in at least Safari 4+, FF3.x+ and IE.</p>\n\n<p><strong>Edit</strong>: This technique is now used in jQuery, Prototype.js, Modernizr, and likely other scripts and libraries.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>I realize I'm a bit late on this one, but I am dealing with this now, and I was thinking that something more like the following would be easier and more reliable. This is jQuery specific, but it should work with any system that allows you to bind and unbind events.</p>\n\n<pre><code>$(window).bind('unload', function(){\n    alert('unload event');\n});\n\nwindow.onbeforeunload = function(){\n    $(window).unbind('unload');\n    return 'beforeunload event';\n}\n</code></pre>\n\n<p>This should unbind the <code>unload</code> event if the <code>beforeunload</code> event fires. Otherwise it will simply fire the unload.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Unfortunately <a href=\"http://stackoverflow.com/a/1262811/345716\">kangax's answer</a> doesn't work for <a href=\"http://stackoverflow.com/questions/3239834/window-onbeforeunload-not-working-on-the-ipad\">Safari on iOS</a>. In my testing <code>beforeunload</code> was supported in every browser I tried exactly except Safari on IOS :-(</p>\n\n<p>Instead I suggest a different approach:</p>\n\n<p>The idea is simple. On the very first page visit, we don't actually know yet if\n<code>beforeunload</code> is supported.  But on that very first page, we set up both an\n<code>unload</code> and a <code>beforeunload</code> handler. If the <code>beforeunload</code> handler fires, we set a\nflag saying that <code>beforeunload</code> is supported (actually <code>beforeunloadSupported =\n\"yes\"</code>). When the <code>unload</code> handler fires, if the flag hasn't been set, we set the\nflag that <code>beforeunload</code> is <em>not</em> supported.</p>\n\n<p>In the following we'll use <code>localStorage</code> ( supported in all the browsers I care\nabout - see <a href=\"http://caniuse.com/namevalue-storage\">http://caniuse.com/namevalue-storage</a> ) to get/set the flag. We\ncould just as well have used a cookie, but I chose <code>localStorage</code> because there\nis no reason to send this information to the web server at every request. We\njust need a flag that survives page reloads. Once we've detected it once, it'll\nstay detected forever.</p>\n\n<p>With this, you can now call <code>isBeforeunloadSupported()</code> and it will tell you. </p>\n\n<pre><code>(function($) {\n    var field = 'beforeunloadSupported';\n    if (window.localStorage &amp;&amp;\n        window.localStorage.getItem &amp;&amp;\n        window.localStorage.setItem &amp;&amp;\n        ! window.localStorage.getItem(field)) {\n        $(window).on('beforeunload', function () {\n            window.localStorage.setItem(field, 'yes');\n        });\n        $(window).on('unload', function () {\n            // If unload fires, and beforeunload hasn't set the field,\n            // then beforeunload didn't fire and is therefore not\n            // supported (cough * iPad * cough)\n            if (! window.localStorage.getItem(field)) {\n                window.localStorage.setItem(field, 'no');\n            }\n        });\n    }\n    window.isBeforeunloadSupported = function () {\n        if (window.localStorage &amp;&amp;\n            window.localStorage.getItem &amp;&amp;\n            window.localStorage.getItem(field) &amp;&amp;\n            window.localStorage.getItem(field) == \"yes\" ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n})(jQuery);\n</code></pre>\n\n<p>Here is a full <a href=\"http://jsfiddle.net/pmorch/tW827/\">jsfiddle</a> with example usage.</p>\n\n<p>Note that it will only have been detected on the second or any subsequent page loads on your site. If it is important to you to have it working on the very first page too, you could load an <code>iframe</code> on that page with a <code>src</code> attribute pointing to a page on the same domain with the detection here, make sure it has loaded and then remove it. That should ensure that the detection has been done so <code>isBeforeunloadSupported()</code> works even on the first page. But I didn't need that so I didn't put that in my demo.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I see that this is a very old thread, but the accepted answer incorrectly detects support for Safari on iOS, which caused me to investigate other strategies:</p>\n\n<pre><code>if ('onbeforeunload' in window &amp;&amp; typeof window['onbeforeunload'] === 'function') {\n  // onbeforeunload is supported\n} else {\n  // maybe bind to unload as a last resort\n}\n</code></pre>\n\n<p>The second part of the if-check is necessary for Safari on iOS, which has the property set to <code>null</code>.</p>\n\n<p><em>Tested in Chrome 37, IE11, Firefox 32 and Safari for iOS 7.1</em></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'd like to check if the current browser supports the onbeforeunload event.\nThe common javascript way to do this does not seem to work:</p>\n\n<pre><code>if (window.onbeforeunload) {\n    alert('yes');\n}\nelse {\n    alert('no');\n}\n</code></pre>\n\n<p>Actually, it only checks whether some handler has been attached to the event.\nIs there a way to detect if onbeforeunload is supported without detecting the particular browser name?</p>\n",
            "last_activity_date": 1412033827,
            "question_id": 158673,
            "score": 16,
            "tags": [
                "javascript"
            ],
            "title": "onbeforeunload support detection"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use <code>$timeout</code> as an interval. </p>\n\n<pre><code>var myIntervalFunction = function() {\n    cancelRefresh = $timeout(function myFunction() {\n        // do something\n        cancelRefresh = $timeout(myIntervalFunction, 60000);\n    },60000);\n};\n</code></pre>\n\n<p>If the view is destroyed, you can destroy it with listening on <code>$destroy</code>:</p>\n\n<pre><code>$scope.$on('$destroy', function(e) {\n        $timeout.cancel(cancelRefresh);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p><strong>Update</strong> </p>\n\n<p>Angular has implemented an $interval feature in version 1.2 - <a href=\"http://docs.angularjs.org/api/ng.%24interval\">http://docs.angularjs.org/api/ng.$interval</a></p>\n\n<hr>\n\n<p>Legacy example below, disregard unless you're using a version older than 1.2.</p>\n\n<p>A setInterval implementation in Angular - </p>\n\n<p>I've created a factory called timeFunctions, which exposes $setInterval and $clearInterval.</p>\n\n<p>Note that any time I've needed to modify scope in a factory I've passed it in. I am unsure if this meets the \"Angular way\" of doing things, but it works well.</p>\n\n<pre><code>app.factory('timeFunctions', [\n\n  \"$timeout\",\n\n  function timeFunctions($timeout) {\n    var _intervals = {}, _intervalUID = 1;\n\n    return {\n\n      $setInterval: function(operation, interval, $scope) {\n        var _internalId = _intervalUID++;\n\n        _intervals[ _internalId ] = $timeout(function intervalOperation(){\n            operation( $scope || undefined );\n            _intervals[ _internalId ] = $timeout(intervalOperation, interval);\n        }, interval);\n\n        return _internalId;\n      },\n\n      $clearInterval: function(id) {\n        return $timeout.cancel( _intervals[ id ] );\n      }\n    }\n  }\n]);\n</code></pre>\n\n<p>Example Usage:</p>\n\n<pre><code>app.controller('myController', [\n\n  '$scope', 'timeFunctions',\n\n  function myController($scope, timeFunctions) {\n\n    $scope.startFeature = function() {\n\n      // scrollTimeout will store the unique ID for the $setInterval instance\n      return $scope.scrollTimeout = timeFunctions.$setInterval(scroll, 5000, $scope);\n\n      // Function called on interval with scope available\n      function scroll($scope) {\n        console.log('scroll', $scope);\n        $scope.currentPage++;\n\n      }\n    },\n\n    $scope.stopFeature = function() {\n      return timeFunctions.$clearInterval( $scope.scrollTimeout );\n    }\n\n  }\n]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Could you call a normal JavaScript method and then within that method wrap the Angular code with an $apply?</p>\n\n<h2>Example</h2>\n\n<pre><code>timer = setInterval('Repeater()', 50);\n\nvar Repeater = function () {\n  // Get Angular scope from a known DOM element\n  var scope = angular.element(document.getElementById(elem)).scope();\n  scope.$apply(function () {\n    scope.SomeOtherFunction();\n  });\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Latest release candidate (1.2.0 rc3) has <a href=\"https://github.com/angular/angular.js/commit/2b5ce84fca7b41fca24707e163ec6af84bc12e83\" rel=\"nofollow\">interval</a> support. See <a href=\"https://github.com/angular/angular.js/blob/master/CHANGELOG.md\" rel=\"nofollow\">changelog</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I was trying the code given in angularjs docs (given here: <a href=\"http://jsfiddle.net/zGqB8/\">http://jsfiddle.net/zGqB8/</a>)\nIt just implements a time factory and uses $timeout to update the time object after each second.</p>\n\n<pre><code>angular.module('timeApp', [])\n.factory('time', function($timeout) {\n    var time = {};\n\n    (function tick () {\n        time.now = new Date().toString();\n        $timeout(tick, 1000);  // how to do it using setInterval() ?\n    })();\n\n    return time;\n});\n</code></pre>\n\n<p>How would I do it using setInterval() function instead of $timeout() ?\nI know that one need to use <code>scope.$apply()</code> to enter the angular execution context but how would that work in a factory function? I mean, in a controller, we have a scope, but we don't have scope in a factory function?</p>\n",
            "last_activity_date": 1413550384,
            "question_id": 14237070,
            "score": 13,
            "tags": [
                "javascript",
                "angularjs",
                "javascript-framework"
            ],
            "title": "using setInterval in angularjs factory"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You have to use the normal string concatenation but you have to make sure the value is a Valid XML string, you will find a good practice to write XML in this source <a href=\"http://oreilly.com/pub/h/2127\" rel=\"nofollow\">http://oreilly.com/pub/h/2127</a>, or if you like you can use an API in javascript to write XML as <a href=\"http://helma.serverjs.org/reference/jala.XmlWriter.html\" rel=\"nofollow\">helma</a> for example.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It is not possible because they are executed in different environments (JSP at server side, JavaScript at client side). So they are not executed in the sequence you see in your code.</p>\n\n<pre><code>var val1 = document.getElementById('userName').value; \n\n&lt;c:set var=\"user\" value=\"\"/&gt;  // how do i set val1 here? \n</code></pre>\n\n<p>Here JSTL code is executed at server side and the server sees the JavaScript/Html codes as simple texts. The generated contents from JSTL code (if any) will be rendered in the resulting HTML along with your other JavaScript/HTML codes. Now the browser renders HTML along with executing the Javascript codes. Now remember there is no JSTL code available for the browser.</p>\n\n<p>Now for example,</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n&lt;c:set var=\"message\" value=\"Hello\"/&gt; \nvar message = '&lt;c:out value=\"${message}\"/&gt;';\n&lt;/script&gt;\n</code></pre>\n\n<p>Now for the browser, this content is rendered,</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar message = 'Hello';\n&lt;/script&gt;\n</code></pre>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Just don't. Don't write code with code. Write a JSON object or a var somewhere but for the love of a sensible HTTP divide, don't write JavaScript functions or methods hardcoded with vars/properties provided by JSTL. Generating JSON is cool. It ends there or your UI dev hates you.</p>\n\n<p>Imagine if you had to dig into JavaScript to find something that was setting parameters in the middle of a class that originated on the client-side. It's awful. Pass data back and forth. Handle the data. But don't try to generate actual code.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This variable can be set using <code>value=\"${val1}\"</code> inside <code>c:set</code> if you have used jquery in your system.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>one more approach to use.</p>\n\n<p>first, define the following somewhere on the page:</p>\n\n<pre><code>&lt;div id=\"valueHolderId\"&gt;${someValue}&lt;/div&gt;\n</code></pre>\n\n<p>then in JS, just do something similar to</p>\n\n<pre><code>var someValue = $('#valueHolderId').html();\n</code></pre>\n\n<p>it works great for the cases when all scripts are inside .js files and obviously there is no jstl available</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>&lt;script ...\n  function(){\n   var someJsVar = \"&lt;c:out value='${someJstLVarFromBackend}'/&gt;\";\n\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>This <strong>works even if</strong> you dont have a hidden/non-hidden input field set somewhere in the jsp.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to set the JSTL variable value in java script?</p>\n\n<pre><code>&lt;script&gt;\n\n function function1()\n\n { \n\n  var val1 = document.getElementById('userName').value;\n\n  &lt;c:set var=\"user\" value=\"\"/&gt;  // how do i set val1 here?   \n\n }\n &lt;/script&gt;\n</code></pre>\n\n<p>How do I set the '<strong>user</strong>' variable (<em>JSTL</em>) value from '<strong>val1</strong>' (<em>Java script</em>)?</p>\n",
            "last_activity_date": 1420778197,
            "question_id": 3287114,
            "score": 10,
            "tags": [
                "javascript",
                "jsp",
                "jstl"
            ],
            "title": "How to set the JSTL variable value in javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It's a order of execution issue</p>\n\n<p><a href=\"http://stackoverflow.com/questions/1104321/how-to-assign-event-callbacks-iterating-an-array-in-javascript-jquery/1104440#1104440\">http://stackoverflow.com/questions/1104321/how-to-assign-event-callbacks-iterating-an-array-in-javascript-jquery/1104440#1104440</a></p>\n\n<p>Basically, the click handler accesses <code>i</code> well after the loop has exited, and therefore <code>i</code> is equal to <code>2</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need to store the state of the <code>i</code> variable, because by the time the event fires, the scoped state of <code>i</code> has increased to the maximum loop count.</p>\n\n<pre><code>window.onload = function () {\n    var buttons = document.getElementsByTagName('a');\n    for (var i=0; i&lt;2; i++) {\n        (function (i) {\n            buttons[i].onclick = function () {\n                alert(i);\n                return false;\n            }\n        })(i);\n    }\n}\n</code></pre>\n\n<p>The above example creates an anonymous function with a single argument <code>i</code>, which is then called with <code>i</code> being passed as that argument.  This creates a new variable in a separate scope, saving the value as it was at the time of that particular iteration. </p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You are having <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Working_with_Closures#Creating_closures_in_loops.3a_A_common_mistake\">a very common closure problem</a> in the <code>for</code> loop.</p>\n\n<p>Variables enclosed in a closure share the same single environment, so by the time the <code>onclick</code> callback is executed, the loop has run its course and the <code>i</code> variable will be left pointing to the last entry.</p>\n\n<p>You can solve this with even more closures, using a function factory:</p>\n\n<pre><code>function makeOnClickCallback(i) {  \n   return function() {  \n      alert(i);\n      return false;\n   };  \n} \n\nvar i;\n\nfor (i = 0; i &lt; 2; i++) {\n    buttons[i].onclick = makeOnClickCallback(i);\n}\n</code></pre>\n\n<p>This can be quite a tricky topic, if you are not familiar with how closures work. You may to check out the following Mozilla article for a brief introduction:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Working_with_Closures\">Working with Closures</a></li>\n</ul>\n\n<hr>\n\n<p>Note: I would also suggest not to use <code>var</code> inside the <code>for</code> loop, because this may trick you in believing that the <code>i</code> variable has block scope, when on the other hand the <code>i</code> variable is just like the <code>buttons</code> variable, scoped within the function.</p>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I'm relatively new to JS so this may be a common problem, but I noticed something strange when dealing with for loops and the onclick function. I was able to replicate the problem with this code: </p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nwindow.onload = function () {\n    var buttons = document.getElementsByTagName('a');\n    for (var i=0; i&lt;2; i++) {\n        buttons[i].onclick = function () {\n            alert(i);\n            return false;\n        }\n    }\n}\n\n&lt;/script&gt;\n\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;a href=\"\"&gt;hi&lt;/a&gt;\n&lt;br /&gt;\n&lt;a href=\"\"&gt;bye&lt;/a&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n\n<p>When clicking the links I would expect to get '0' and '1', but instead I get '2' for both of them. Why is this?</p>\n\n<p>BTW, I managed to solve my particular problem by using the 'this' keyword, but I'm still curious as to what is behind this behavior.</p>\n",
            "last_activity_date": 1273502454,
            "question_id": 2803351,
            "score": 9,
            "tags": [
                "javascript",
                "for-loop",
                "onclick"
            ],
            "title": "JavaScript for loop index strangeness"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>There's a whole number of <em>really good reasons</em> IE does this, and I'm sure it's not something anyone would argue with - so the main objective is to get around it somehow to make things better for your users.</p>\n\n<p>Sometimes its worth re-thinking how things are done. Perhaps disable the button, use javascript to check when all the fields are filled out, and fire off an ajax request once they are. If the ajax was successful, enable the button. This is but one suggestion, I'm sure there will be more...</p>\n\n<p>Edit: more...</p>\n\n<p>Do simple submission (non-AJAX), and if the checks fail, send a <em>page</em> back rather than an attachment. The page sent back could contain all the information originally submitted (plus whatever error message to the user) so the user doesn't need to fill out the entire form again. And I'm also sure there will be more ideas...</p>\n\n<p>Edit: more...</p>\n\n<p>I'm sure you've seen this type of thing before - and yes, it <em>is</em> an extra click (not ideal, but not hard).... an \"if your download fails, click here\" -> in this case, do it as you want to do it, but add a new link/button to the page when the AJAX returns, so if the download failed, they can submit the already validated form from a \"direct user action\". And I'm sure I'll think of more (or someone else will).....</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I take it you're submitting the form with a different target window; hence the form staying in place.</p>\n\n<p>There are several options.</p>\n\n<ol>\n<li>Keep the submit button disabled and do ongoing validation in the background, polling the form for changes to fields and then firing off the validation request for a field as it changes. When the form is in a valid state, enable the button; when it isn't, disable the button. This isn't perfect, as there will tend to be a delay, but it may be good enough for whatever you're doing.</li>\n<li>Do basic validation that doesn't require round-trips to the server in a handler for the form's <code>submit</code> event, then submit the form and remove it (or possibly just hide it). If the further validation on the server detects a problem, it can return a page that uses JavaScript to tell the original window to re-display the form.</li>\n<li>Use a session cookie and a unique form ID (the current time from <code>new Date().getTime()</code> would do); when the form is submitted, disable its submit button but keep it visible until the response comes back. Make the response set a session cookie with that ID indicating success/failure. Have the window containing the form poll for the cookie every second or so and act on the result when it sees it. (I've never done this last one; not <em>immediately</em> seeing why it wouldn't work.)</li>\n</ol>\n\n<p>I expect there are about a dozen other ways to skin this cat, but those are three that came to mind.</p>\n\n<p><em>(Edit)</em> If you're not submitting to a different target, you might want to go ahead and do that -- to a hidden <code>iframe</code> on the same page. That (possibly combined with the above or other answers) might help you get the user experience you're looking for.</p>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>Internet Explorer (with default settings, which I generally assume will be in effect on the desktops of the Great Unwashed) seems to dislike the idea of accepting attachment content in an HTTP response if the corresponding request wasn't made directly from a user action (like a \"click\" handler, or a native form submit).  There are probably more details and nuances, but that's the basic behavior that's frustrating me.</p>\n\n<p>It seems to me that this situation is common: the user interface in front of some downloadable content &mdash; say, a prepared PDF report &mdash; allows for some options and inputs to be used in the creation of the content.  Now, as with all forms that allow the user to stipulate how an application does something, it's possible that the input will be erroneous.  Not always, but sometimes.</p>\n\n<p>Thus there's a dilemma.  If the client tries to do something fancy, like run an AJAX transaction to let the server vet the form contents, and then resubmit to get the download, IE won't like that. It won't like it because the actual HTTP transaction that carries the attachment back will happen not in the original user-action event handler, but in the AJAX completion callback. Worse, since the IE security bar seems to think that the solution to all one's problems is to simply reload the outer page from its original URL, its invitation to the user to go ahead and download the suspicious content won't even work.</p>\n\n<p>The other option is to just have the form fire away. The server checks the parameters, and if there's anything wrong it responds with the form-container page, peppered appropriately with error messages. If the form contents are OK, it generates the content and ships it back in the HTTP response as an attached file. In this case (I think), IE is happy because the content was apparently directly requested by the user (which is, by the way, a ridiculously flimsy way to tell good content from bad content).  This is great, but the problem now is that the client environment (that is, the code on my page) can't tell that the download worked, so the form is still just sitting there.  If my form is in some sort of dialog, then I really need to close that up when the operation is complete &mdash; really, that's one of the motivations for doing it the AJAX way.</p>\n\n<p>It seems to me that the only thing to do is equip the form dialogs with messaging that says something like, \"Close this when your download begins.\"  That really seems lame to me because it's an example of a \"please push this button for me\" interface: ideally, my own code should be able to push the buutton when it's appropriate.  A key thing that I don't know is whether there's any way for client code to detect that form submission has resulted in an attachment download.  I've never heard of a way to detect that, but that'd break the impasse for me.</p>\n",
            "last_activity_date": 1263482087,
            "question_id": 2064882,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "internet-explorer"
            ],
            "title": "What are techniques to get around the IE file download security rules?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Reference: <a href=\"https://developers.facebook.com/docs/reference/plugins/comments/\" rel=\"nofollow\">Facebook Comments Plugin</a></p>\n\n<p>Say your website is <code>http://mywebsite.com/blog.php?id=3</code> and you have a facebook comments plugin on it,\nyou can access comments this way</p>\n\n<pre><code> https://graph.facebook.com/comments/?ids={YOUR_URL}.\n</code></pre>\n\n<p><code>{YOUR_URL} becomes http://mywebsite.com/blog.php?id=3</code></p>\n\n<p><strong>Example 1:</strong> (Comments plugin installed on developers facebook doc website )</p>\n\n<p>website: <a href=\"http://developers.facebook.com/docs/reference/plugins/comments\" rel=\"nofollow\">http://developers.facebook.com/docs/reference/plugins/comments</a></p>\n\n<p>fetch comments: <a href=\"https://graph.facebook.com/comments/?ids=http://developers.facebook.com/docs/reference/plugins/comments\" rel=\"nofollow\">https://graph.facebook.com/comments/?ids=http://developers.facebook.com/docs/reference/plugins/comments</a></p>\n\n<p><strong>Example 2:</strong></p>\n\n<p>website: <a href=\"http://techcrunch.com/2011/04/08/the-seven-most-interesting-startups-at-500-startups-demo-day/\" rel=\"nofollow\">http://techcrunch.com/2011/04/08/the-seven-most-interesting-startups-at-500-startups-demo-day/</a></p>\n\n<p>fetch comments: <a href=\"https://graph.facebook.com/comments/?ids=http://techcrunch.com/2011/04/08/the-seven-most-interesting-startups-at-500-startups-demo-day/\" rel=\"nofollow\">https://graph.facebook.com/comments/?ids=http://techcrunch.com/2011/04/08/the-seven-most-interesting-startups-at-500-startups-demo-day/</a></p>\n\n<p><strong>Check this too</strong></p>\n\n<p>Sample code for pulling comments can be found on this <a href=\"https://developers.facebook.com/blog/post/490/\" rel=\"nofollow\">blog post</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It is possible, in two different ways, as long as you have a <strong>fixed</strong> set of sub-pages you want to fetch comments from. </p>\n\n<p>If you have a large amount of sub-pages, or a variable amount, then you don't have a good scalable solution - and many have been looking for one:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/6736210/facebook-fbcomments-graph-api\">Facebook fb:comments Graph API</a></li>\n<li><a href=\"http://stackoverflow.com/questions/6484008/how-to-display-recent-comments-from-facebook-comments-social-plugin#comment7622566_6484116\">How to display recent comments from Facebook Comments social plugin?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/9814708/facebook-fql-query-to-return-all-comments-against-an-application\">Facebook FQL query to return all comments against an application</a></li>\n<li><a href=\"http://stackoverflow.com/questions/7206372/retrieve-all-comments-with-fql-by-application-id#comment10891998_8739731\">Retrieve all comments with FQL by application ID</a></li>\n<li><a href=\"http://www.messbook.ro/answers.php?question=Facebook-FQL-query-to-return-all-comments-against-an-application-68208O9814708\">Facebook FQL query to return all comments against an application</a></li>\n<li><a href=\"http://fbdevforum.com/facebook-developers/forum.developers.facebook.net/viewtopic99a7b4a65229f5c9624c91b24c7cf4ba.html\">fql query to get comment count no longer working</a></li>\n<li><a href=\"http://facebook.stackoverflow.com/questions/10023179/retrieve-all-the-comments-posted-using-fql\">http://facebook.stackoverflow.com/questions/10023179/retrieve-all-the-comments-posted-using-fql</a></li>\n</ul>\n\n<p>For a <strong>Fixed</strong> set of sub-pages in your website, you can either use a batch request, or an FQL query.</p>\n\n<p><strong>Batch Request</strong></p>\n\n<hr>\n\n<p>First, you need your access token. Just enter the following as a url in a browser (credit to <a href=\"http://illuminatikarate.com/blog/facebook-graph-api-requires-access-token-for-feed-access/\">this</a> website ):</p>\n\n<p><code>\n    <a href=\"https://graph.facebook.com/oauth/access_token?type=client_cred&amp;client_id=APP_ID&amp;client_secret=APP_SECRET\">https://graph.facebook.com/oauth/access_token?type=client_cred&amp;client_id=APP_ID&amp;client_secret=APP_SECRET</a>\n<code></p>\n\n<p>And this is the javascript jquery code to make a batch request to fetch comments from several urls at once:</p>\n\n<pre>$.ajax({\n  url: 'https://graph.facebook.com/',\n  type : \"POST\",\n  data: {\n    access_token : 'YOUR_APP_ACCESS_TOKEN',\n    batch : '[ \\\n    {\"method\":\"GET\",\"relative_url\":\"URL1\"}, \\\n    {\"method\":\"GET\",\"relative_url\":\"URL2\"} \\\n    ]'\n  },\n  success: function(data) {\n    jdata = JSON.parse(data);\n    $.each(jdata, function(index,value){\n        jdata[index].body = JSON.parse(value.body);\n        console.log(value.body);\n    });\n    // Do whatever you want with jdata\n  }\n});\n</code></pre>\n\n<p><strong>FQL</strong></p>\n\n<hr>\n\n<p>inspired from <a href=\"http://stackoverflow.com/questions/6484008/how-to-display-recent-comments-from-facebook-comments-social-plugin\">this</a> post</p>\n\n<pre>FB.api({\n    method: 'fql.query',\n    query: 'select text from comment where object_id in (select comments_fbid from link_stat where url=\"URL1\" or url=\"URL2\")'\n  }, function(response) {\n    // Do something with results\n  });\n</code></pre>\n\n<hr>\n\n<p><strong>Conclusion</strong></p>\n\n<p>Because of this limitation of Facebook, I plan to switch to disqus.com, which apparently supports this feature (As you can see from this <a href=\"http://blog.fooducate.com\">blog</a>, for example. (search for 'recent comments')</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Rather than list all the comments on your site, Facebook wants you to implement code to get notified when a new comment is posted anywhere on your site.</p>\n\n<p>To make this happen, you have to put some Javascript into the page where the comment is posted to also notify yourself:</p>\n\n<pre><code>window.fbAsyncInit = function(){\n    console.log(\"subscribing to comment create\");\n    FB.Event.subscribe('comment.create',function(response){\n        console.log(\"facbeook comment created: \" + JSON.stringify(response));\n        var commentQuery = FB.Data.query('SELECT fromid, text FROM comment WHERE post_fbid=\\'' + response.commentID + '\\' AND object_id IN (SELECT comments_fbid FROM link_stat WHERE url=\\'' + response.href + '\\')');\n        FB.Data.waitOn([commentQuery], function () {\n            console.log(\"Facebook comment: \" + JSON.stringify(commentQuery));\n        }); \n    });\n};\n</code></pre>\n\n<p>Where rather than just logging the comment to the console, you would need to implement some AJAX that would send the comment back to your site where you could store the comment in your database, or send yourself an email notifying you that the comment has been posted.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>good article about domain name</p>\n\n<p>you can get more info about domain on,</p>\n\n<p><a href=\"http://www.gofortricks.com/domain-name-buy-and-sell/\" rel=\"nofollow\">http://www.gofortricks.com/domain-name-buy-and-sell/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using the HTML5 version of <code>Facebook Comment</code> in my website. I have my own Facebook APP Id.</p>\n\n<p>Using <code>Graph-API</code>, and <code>FQL</code> (I think this is how to do it), I want to list all the Comments posted in my website.</p>\n\n<p>Example -</p>\n\n<pre><code>Page Title1\n--Comment1\n--Comment2\n--Comment3\n\nPage Title2\n--Comment1\n--Comment2\n--Comment3\n\nPage Title3\n--Comment1\n--Comment2\n--Comment3\n\netc.\n</code></pre>\n\n<p>Please help me out.</p>\n",
            "last_activity_date": 1426059123,
            "question_id": 10203158,
            "score": 6,
            "tags": [
                "javascript",
                "facebook-graph-api",
                "facebook-fql",
                "facebook-comments"
            ],
            "title": "How to list all comments in my domain"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><code>fetch</code> is asynchronous, which means that the data won't be available if you immediatly call <code>console.log(athlete.get('name'))</code> after the fetch.</p>\n\n<p>Use events to be notified when the data is available, for example </p>\n\n<pre><code>var athlete = new Athlete({id: 1});\nathlete.on(\"change\", function (model) {\n     console.log(model.get('name'));\n});\nathlete.fetch();\n</code></pre>\n\n<p>or add a callback to your fetch</p>\n\n<pre><code>var athlete = new Athlete({ id: 1 });\nathlete.fetch({\n    success: function (model) {\n        console.log(model.get('name'));\n    }\n});\n</code></pre>\n\n<p>or take advantage of the promise returned by <code>fetch</code>:</p>\n\n<pre><code>athlete.fetch().then(function () {\n    console.log(athlete.get('name'));\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>I have a basic backbone model, its <code>urlRoot</code> attribute is set and the corresponding target on the server side returns a correct JSON output (both JSON string and <code>application/json</code> header).</p>\n\n<p>I call a fetch like this:</p>\n\n<pre><code>var athlete = new Athlete({ id: 1 });\nathlete.fetch();\n</code></pre>\n\n<p>at this point if I add a</p>\n\n<pre><code>console.log(athlete);\n</code></pre>\n\n<p>I can see the model, and inspecting it in firebug I can open the attributes object and see all the values returned from the server.</p>\n\n<p>BUT if I do a:</p>\n\n<pre><code>console.log(athlete.get('name'));\n</code></pre>\n\n<p>I get <code>undefined</code> (the name appears under the attributes in the DOM inspection I mentioned above)</p>\n\n<p>also doing a:</p>\n\n<pre><code>console.log(athlete.attributes);\n</code></pre>\n\n<p>returns an object containing only <code>{id: 1}</code> which is the argument I passed while creating the model.</p>\n\n<p>If I create the model like this:</p>\n\n<pre><code>var athlete = new Athlete(&lt;JSON string copypasted from the server response&gt;);\n</code></pre>\n\n<p>then everything works fine, the <code>.get()</code> method returns whatever I ask, and <code>athlete.attributes</code> shows all the values.</p>\n\n<p>What am I doing wrong?</p>\n",
            "last_activity_date": 1420217768,
            "question_id": 9584870,
            "score": 6,
            "tags": [
                "javascript",
                "backbone.js"
            ],
            "title": "Backbone.js fetch not actually setting attributes"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can't do this perfectly with a regular expression.  You may be interested in <a href=\"http://www.codinghorror.com/blog/2008/10/the-problem-with-urls.html\" rel=\"nofollow\">this blog post</a>. There is a bit more information on <a href=\"http://www.regexguru.com/2008/11/detecting-urls-in-a-block-of-text/\" rel=\"nofollow\">Regex Guru</a>, but even those look very fragile.  You will need to have additional checks outside of your regular expression to catch the edge cases.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>I looked into this issue last year and developed a solution that you may want to look at - See: <a href=\"http://jmrware.com/articles/2010/linkifyurl/linkify.html\">URL Linkification (HTTP/FTP)</a> This link is a test page for the Javascript solution with many examples of difficult-to-linkify URLs.</p>\n\n<p>My regex solution, written for both PHP and Javascript - is not simple (but neither is the problem as it turns out.) For more information I would recommend also reading:</p>\n\n<p><a href=\"http://www.codinghorror.com/blog/2008/10/the-problem-with-urls.html\">The Problem With URLs</a> by Jeff Atwood, and<br>\n<a href=\"http://daringfireball.net/2010/07/improved_regex_for_matching_urls\">An Improved Liberal, Accurate Regex Pattern for Matching URLs</a> by John Gruber  </p>\n\n<p>The comments following Jeff's blog post are a must read if you want to do this right...</p>\n\n<p>Note that this question gets asked a lot. Maybe do a search next time :)</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Identifying URLs is tricky because they are often surrounded by punctuation marks and because users frequently do not use the full form of the URL. Many JavaScript functions exist for replacing URLs with hyperlinks, but I was unable to find one that works as well as the <code>urlize</code> filter in the Python-based web framework Django. I therefore ported Django's <code>urlize</code> function to JavaScript: <a href=\"https://github.com/ljosa/urlize.js\" rel=\"nofollow\">https://github.com/ljosa/urlize.js</a></p>\n\n<p>It actually would not pick up the URL in your example because there is a colon right before the URL. But if we modify the example a little:</p>\n\n<pre><code>urlize(\"I love this website: http://www.youtube.com/music it's fantastic\", true, true)\n=&gt; 'I love this website: &lt;a href=\"http://www.youtube.com/music\" rel=\"nofollow\"&gt;http://www.youtube.com/music&lt;/a&gt; it&amp;#39;s fantastic\"'\n</code></pre>\n\n<p>Note the second argument which, if true, inserts <code>rel=\"nofollow\"</code> and the third argument which, if true, quotes characters that have special meaning in HTML.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This might work-></p>\n\n<pre><code>\\b(([\\w-]+://?|www[.])[^\\s()&lt;&gt;]+(?:\\([\\w\\d]+\\)|([^[:punct:]\\s]|/)))\n</code></pre>\n\n<p>Found it somewhere</p>\n\n<p>Will find links -></p>\n\n<p><a href=\"http://foo.com/blah_blah/\" rel=\"nofollow\">http://foo.com/blah_blah/</a></p>\n\n<p>(Something like <a href=\"http://foo.com/blah_blah\" rel=\"nofollow\">http://foo.com/blah_blah</a>)</p>\n\n<p><a href=\"http://foo.com/blah_blah_(wikipedia)\" rel=\"nofollow\">http://foo.com/blah_blah_(wikipedia)</a></p>\n\n<p>Hope this works....</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>i am using this regex :  :) ( its translated ABNF ) </p>\n\n<pre><code>[a-zA-Z]([a-zA-Z]|[0-9]|\\+|\\-|\\.)*:\\/\\/((([a-zA-Z]|[0-9]|-|\\.|_|~)|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&amp;'\\(\\)\\*\\+,;=]|:)*@)?(\\[((([0-9A-Fa-f]{1,4}:){6}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9]))|::([0-9A-Fa-f]{1,4}:){5}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9]))|([0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){4}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9]))|(([0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){3}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9]))|(([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){2}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9]))|(([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9]))|(([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9]))|(([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|v[0-9A-Fa-f]\\.(([a-zA-Z]|[0-9]|-|\\.|_|~)|[!$&amp;'\\(\\)\\*\\+,;=]|:))\\]|(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])|(([a-zA-Z]|[0-9]|-|\\.|_|~)|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&amp;'\\(\\)\\*\\+,;=])*)(:[0-9]*)?(((\\/(([a-zA-Z]|[0-9]|-|\\.|_|~)|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&amp;'\\(\\)\\*\\+,;=]|:|@)*)*|\\/((([a-zA-Z]|[0-9]|-|\\.|_|~)|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&amp;'\\(\\)\\*\\+,;=]|:|@){1}(\\/(([a-zA-Z]|[0-9]|-|\\.|_|~)|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&amp;'\\(\\)\\*\\+,;=]|:|@)*)*)?|(([a-zA-Z]|[0-9]|-|\\.|_|~)|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&amp;'\\(\\)\\*\\+,;=]|:|@){1}(\\/(([a-zA-Z]|[0-9]|-|\\.|_|~)|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&amp;'\\(\\)\\*\\+,;=]|:|@)*)*|(([a-zA-Z]|[0-9]|-|\\.|_|~)|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&amp;'\\(\\)\\*\\+,;=]|@){1}(\\/(([a-zA-Z]|[0-9]|-|\\.|_|~)|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&amp;'\\(\\)\\*\\+,;=]|:|@)*)*))?\\/?(\\?((([a-zA-Z]|[0-9]|-|\\.|_|~)|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&amp;'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?(\\#((([a-zA-Z]|[0-9]|-|\\.|_|~)|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&amp;'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have to find the first url in the text with a regular expression:</p>\n\n<p>for example:</p>\n\n<pre><code>I love this website:http://www.youtube.com/music it's fantastic\n</code></pre>\n\n<p>or</p>\n\n<pre><code>[ es. http://www.youtube.com/music] text\n</code></pre>\n",
            "last_activity_date": 1404226492,
            "question_id": 5461702,
            "score": 6,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "regex to find url in a text"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Checking your <a href=\"http://l2.io/\" rel=\"nofollow\">linked site</a>, you may include a script tag passing a <code>?var=desiredVarName</code> parameter which will be set as a global variable containing the IP address:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://l2.io/ip.js?var=myip\"&gt;&lt;/script&gt;\n                                                      &lt;!-- ^^^^ --&gt;\n&lt;script&gt;alert(myip);&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/9ZrLz/\" rel=\"nofollow\"><strong>Demo</strong></a></p>\n\n<p>I believe I don't have to say that this can be easily spoofed (through either use of proxies or spoofed request headers), but it is worth noting in any case.</p>\n\n<hr>\n\n<h2>HTTPS support</h2>\n\n<p>In case your page is served using the <code>https</code> protocol, most browsers will block content in the same page served using the <code>http</code> protocol (that includes scripts and images), so the options are rather limited. If you have &lt; 5k hits/day, the <a href=\"https://smart-ip.net/geoip-api\" rel=\"nofollow\">Smart IP API</a> can be used. For instance:</p>\n\n<pre><code>&lt;script&gt;\nvar myip;\nfunction ip_callback(o) {\n    myip = o.host;\n}\n&lt;/script&gt;\n&lt;script src=\"https://smart-ip.net/geoip-json?callback=ip_callback\"&gt;&lt;/script&gt;\n&lt;script&gt;alert(myip);&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/CKNMc/\" rel=\"nofollow\"><strong>Demo</strong></a></p>\n\n<p>Edit: Apparently, this <code>https</code> service's certificate has expired so the user would have to add an exception manually. Open its API directly to check the certificate state: <a href=\"https://smart-ip.net/geoip-json\" rel=\"nofollow\">https://smart-ip.net/geoip-json</a></p>\n\n<hr>\n\n<h2>With back-end logic</h2>\n\n<p>The most resilient and simple way, in case you have back-end server logic, would be to simply output the requester's IP inside a <code>&lt;script&gt;</code> tag, this way you don't need to rely on external resources. For example:</p>\n\n<p>PHP:</p>\n\n<pre><code>&lt;script&gt;var myip = '&lt;?php echo $_SERVER['REMOTE_ADDR']; ?&gt;';&lt;/script&gt;\n</code></pre>\n\n<p>There's also a more sturdy PHP solution (accounting for headers that are sometimes set by proxies) in this <a href=\"http://stackoverflow.com/a/1641894/1331430\">related answer</a>.</p>\n\n<p>C#:</p>\n\n<pre><code>&lt;script&gt;var myip = '&lt;%= Request.UserHostAddress %&gt;';&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>This pulls back client info as well.</p>\n\n<pre><code>var get = function(u){\n    var x = new XMLHttpRequest;\n    x.open('GET', u, false);\n    x.send();\n    return x.responseText;\n}\n\nJSON.parse(get('http://ifconfig.me/all.json'))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>    &lt;script type=\"application/javascript\"&gt;\n            function getip(json){\n            alert(json.ip); // alerts the ip address\n    }\n    &lt;/script&gt;\n\n    &lt;script type=\"application/javascript\" src=\"http://jsonip.appspot.com/?callback=getip\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A more reliable REST endpoint would be <a href=\"http://freegeoip.net/json/\">http://freegeoip.net/json/</a> </p>\n\n<p>Returns the ip address along with the geo-location too. Also has cross-domain requests enabled (Access-Control-Allow-Origin: *) so you don't have to code around JSONP.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>    $.ajax({\n        url: '//freegeoip.net/json/',\n        type: 'POST',\n        dataType: 'jsonp',\n        success: function(location) {\n            alert(location.ip);\n        }\n    });\n</code></pre>\n\n<p>This will work https too</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Well, if in the HTML you import a script...</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"//stier.linuxfaq.org/ip.php\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>You can then use the variable userIP (which would be the visitor's IP address) anywhere on the page.</p>\n\n<p>To redirect: <code>&lt;script&gt;if (userIP == \"555.555.555.55\") {window.location.replace(\"http://192.168.1.3/flex-start/examples/navbar-fixed-top/\");}&lt;/script&gt;</code></p>\n\n<p>Or to show it on the page: <code>document.write (userIP);</code></p>\n\n<p>DISCLAIMER: I am the author of the script I said to import. The script comes up with the IP by using PHP. The source code of the script is below.</p>\n\n<p><code>&lt;?php \n //Gets the IP address\n $ip = getenv(\"REMOTE_ADDR\") ; \n Echo \"var userIP = '\" . $ip . \"';\"; \n ?&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I would like to read my ip address from the following page(<a href=\"http://l2.io/ip\">http://l2.io/ip</a> or other) using javascript to save him in my variable \"myIp\".</p>\n\n<pre><code>function getMyIP() {\n  var myIp;\n  ...\n  return myIp;\n}\n</code></pre>\n\n<p>How can you do?</p>\n",
            "last_activity_date": 1424284649,
            "question_id": 17414972,
            "score": 5,
            "tags": [
                "javascript",
                "ip"
            ],
            "title": "Get ip address with javascript"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>have you tried using document.getElementbyID('id') where id is the id of the label or is the situation that you dont know which one you are looking for</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Earlier...</p>\n\n<pre><code>var labels = document.getElementsByTagName(\"LABEL\"),\n    lookup = {},\n    i, label;\n\nfor (i = 0; i &lt; labels.length; i++) {\n    label = labels[i];\n    if (document.getElementById(label.htmlFor)) {\n        lookup[label.htmlFor] = label;\n    }\n}\n</code></pre>\n\n<p>Later...</p>\n\n<pre><code>var myLabel = lookup[myInput.id];\n</code></pre>\n\n<p>Snarky comment: Yes, you can also do it with JQuery. :-)</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>If you are using jQuery you can do something like this</p>\n\n<pre><code>$('label[for=\"foo\"]').hide ();\n</code></pre>\n\n<p>If you aren't using jQuery you'll have to search for the label.  Here is a function that takes the element as an argument and returns the associated label</p>\n\n<pre><code>function findLableForControl(el) {\n   var idVal = el.id;\n   labels = document.getElementsByTagName('label');\n   for( var i = 0; i &lt; labels.length; i++ ) {\n      if (labels[i].htmlFor == idVal)\n           return labels[i];\n   }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 67
                },
                {
                    "body": "<p>with jquery you could do something like </p>\n\n<pre><code>var nameOfLabel = someInput.attr('id');\nvar label = $(\"label[for='\" + nameOfLabel + \"']\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>First, scan the page for labels, and assign a reference to the label from the actual form element:</p>\n\n<pre><code>var labels = document.getElementsByTagName('LABEL');\nfor (var i = 0; i &lt; labels.length; i++) {\n    if (labels[i].htmlFor != '') {\n         var elem = document.getElementById(labels[i].htmlFor);\n         if (elem)\n            elem.label = labels[i];\t\t\t\n    }\n}\n</code></pre>\n\n<p>Then, you can simply go:</p>\n\n<pre><code>document.getElementById('MyFormElem').label.innerHTML = 'Look ma this works!';\n</code></pre>\n\n<p>No need for a lookup array :)</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>Use a JQuery selector:</p>\n\n<pre><code>$(\"label[for=\"+inputElement.id+\"]\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For future searchers... The following is a jQuery-ified version of FlySwat's accepted answer:</p>\n\n<pre><code>var labels = $(\"label\");\nfor (var i = 0; i &lt; labels.length; i++) {\n    var fieldId = labels[i].htmlFor;\n    if (fieldId != \"\") {\n        var elem = $(\"#\" + fieldId);\n        if (elem.length != 0) {\n            elem.data(\"label\", $(labels[i]));   \n        }\n    }\n}\n</code></pre>\n\n<p>Using:</p>\n\n<pre><code>$(\"#myFormElemId\").data(\"label\").css(\"border\",\"3px solid red\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$(\"label[for='inputId']\").text()\n</code></pre>\n\n<p>This helped me to get the label of an input element using its ID. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I am a bit surprised that nobody seems to know that you're <a href=\"http://www.w3.org/TR/html401/interact/forms.html#h-17.9.1\">perfectly allowed</a> to do:</p>\n\n<pre><code>&lt;label&gt;Put your stuff here: &lt;input value=\"Stuff\"&gt;&lt;/label&gt;\n</code></pre>\n\n<p>Which won't get picked up by any of the suggested answers, but <strong>will</strong> label the input correctly.</p>\n\n<p>Here's some code that does take this case into account:</p>\n\n<pre><code>$.fn.getLabels = function() {\n    return this.map(function() {\n        var labels = $(this).parents('label');\n        if (this.id) {\n            labels.add('label[for=\"' + this.id + '\"]');\n        }\n        return labels.get();\n    });\n};\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>$('#myfancyinput').getLabels();\n</code></pre>\n\n<p>Some notes:</p>\n\n<ul>\n<li>The code was written for clarity, not for performance. More performant alternatives may be available.</li>\n<li>This code supports getting the labels of multiple items in one go. If that's not what you want, adapt as necessary.</li>\n<li>This still doesn't take care of things like <a href=\"http://www.w3.org/TR/wai-aria/states_and_properties#aria-labelledby\"><code>aria-labelledby</code></a> if you were to use that (left as an exercise to the reader).</li>\n<li>Using multiple labels is a tricky business when it comes to support in different user agents and assistive technologies, so test well and use at your own risk, etc. etc.</li>\n<li>Yes, you could also implement this without using jQuery. :-)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Answer from Gijs was most valuable for me, but unfortunately the extension does not work.</p>\n\n<p>Here's a rewritten extension that works, it may help someone:</p>\n\n<pre><code>jQuery.fn.getLabels = function () {\n    return this.map(function () {\n        var parentLabels = $(this).parents('label').get();\n        var associatedLabels = this.id ? associatedLabels = $(\"label[for='\" + this.id + \"']\").get() : [];\n        return parentLabels.concat(associatedLabels);\n    });\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Chrome, at least, exposes a <code>labels</code> property which points to labels which are associated to an input element.</p>\n\n<p>So you could use something like this...</p>\n\n<pre><code>var getLabelsForInputElement = function(element) {\n\n     var labels = [];\n     var id = element.id;\n\n     if (element.labels) {\n        return element.labels;\n     }\n\n     id &amp;&amp; elements\n               .push\n               .apply(elements, \n                      document.querySelector(\"label[for='\" + id + \"']\"));\n\n     while (element = element.parentNode) {\n           if (element.tagName.toLowerCase() == \"label\") {\n               labels.push(element);\n           }  \n     }\n\n     return labels;\n\n};\n</code></pre>\n\n<p>Even easier if you're using jQuery...</p>\n\n<pre><code>var getLabelsForInputElement = function(element) {\n\n     var labels = $();\n     var id = element.id;\n\n     if (element.labels) {\n        return element.labels;\n     }\n\n     id &amp;&amp; (labels = $(\"label[for='\" + id  + \"']\")));\n\n     labels = labels.add($(element).parents(\"label\"));\n\n     return labels;\n\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It is actually far easier to add an id to the label in the form itself, for example:</p>\n\n<pre><code>&lt;label for=\"firstName\" id=\"firstNameLabel\"&gt;FirstName:&lt;/label&gt;\n\n&lt;input type=\"text\" id=\"firstName\" name=\"firstName\" class=\"input_Field\" \n       pattern=\"^[a-zA-Z\\s\\-]{2,25}$\" maxlength=\"25\"\n       title=\"Alphabetic, Space, Dash Only, 2-25 Characters Long\" \n       autocomplete=\"on\" required\n/&gt;\n</code></pre>\n\n<p>Then, you can simply use something like this:</p>\n\n<pre><code>if (myvariableforpagelang == 'es') {\n   // set field label to spanish\n   document.getElementById(\"firstNameLabel\").innerHTML = \"Primer Nombre:\";\n   // set field tooltip (title to spanish\n   document.getElementById(\"firstName\").title = \"Alfab\u00e9tica, espacio, gui\u00f3n S\u00f3lo, 2-25 caracteres de longitud\";\n}\n</code></pre>\n\n<p>The javascript does have to be in a body onload function to work.</p>\n\n<p>Just a thought, works beautifully for me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As it has been already mentionned, the (currently) top-rated answer does not take into account the possibility to embed an input inside a label.</p>\n\n<p>Since nobody has posted a JQuery-free answer, here is mine :</p>\n\n<pre><code>var labels = form.getElementsByTagName ('label');\nvar input_label = {};\nfor (var i = 0 ; i != labels.length ; i++)\n{\n    var label = labels[i];\n    var input = label.htmlFor\n              ? document.getElementById(label.htmlFor)\n              : label.getElementsByTagName('input')[0];\n    input_label[input.outerHTML] = \n        (label.innerText || label.textContent); // innerText for IE8-\n}\n</code></pre>\n\n<p>In this example, for the sake of simplicity, the lookup table is directly indexed by the input HTML elements. This is hardly efficient and you can adapt it however you like.</p>\n\n<p>You can use a form as base element, or the whole document if you want to get labels for multiple forms at once.</p>\n\n<p>No checks are made for incorrect HTML (multiple or missing inputs inside labels, missing input with corresponding htmlFor id, etc), but feel free to add them.</p>\n\n<p>You might want to trim the label texts, since trailing spaces are often present when the input is embedded in the label.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I know this is old, but I had trouble with some solutions and pieced this together. I have tested this on Windows (Chrome, Firefox and MSIE) and OS X (Chrome and Safari) and believe this is the simplest solution. It works with these three style of attaching a label.</p>\n\n<pre><code>&lt;label&gt;&lt;input type=\"checkbox\" class=\"c123\" id=\"cb1\" name=\"item1\"&gt;item1&lt;/label&gt;\n\n&lt;input type=\"checkbox\" class=\"c123\" id=\"cb2\" name=\"item2\"&gt;item2&lt;/input&gt;\n\n&lt;input type=\"checkbox\" class=\"c123\" id=\"cb3\" name=\"item3\"&gt;&lt;label for=\"cb3\"&gt;item3&lt;/label&gt;\n</code></pre>\n\n<p>Using jQuery:</p>\n\n<pre><code>$(\".c123\").click(function() {\n    $cb = $(this);\n    $lb = $(this).parent();\n    alert( $cb.attr('id') + ' = ' + $lb.text() );\n});\n</code></pre>\n\n<p>My JSFiddle: <a href=\"http://jsfiddle.net/pnosko/6PQCw/\" rel=\"nofollow\">http://jsfiddle.net/pnosko/6PQCw/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have made for my own need, can be useful for somebody: <a href=\"http://jsfiddle.net/itsazzad/pq8w1e9p/1/\" rel=\"nofollow\">JSFIDDLE</a></p>\n\n<pre><code>$(\"input\").each(function () {\n    if ($.trim($(this).prev('label').text()) != \"\") {\n        console.log(\"\\nprev&gt;children:\");\n        console.log($.trim($(this).prev('label').text()));\n    } else {\n        if ($.trim($(this).parent('label').text()) != \"\") {\n            console.log(\"\\nparent&gt;children:\");\n            console.log($.trim($(this).parent('label').text()));\n        } else {\n            if ($.trim($(this).parent().prev('label').text()) != \"\") {\n                console.log(\"\\nparent&gt;prev&gt;children:\");\n                console.log($.trim($(this).parent().prev('label').text()));\n            } else {\n                console.log(\"NOTFOUND! So set your own condition now\");\n            }\n        }\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Let's say I have an html form.  Each input/select/textarea will have a corresponding <code>&lt;label&gt;</code> with the <code>for</code> attribute set to the id of it's companion. In this case, I know that each input will only have a single label.</p>\n\n<p>Given an input element in javascript &mdash; via an onkeyup event, for example &mdash; what's the best way to find it's associated label?</p>\n",
            "last_activity_date": 1417042387,
            "question_id": 285522,
            "score": 52,
            "tags": [
                "javascript",
                "html",
                "label"
            ],
            "title": "Find html label associated with a given input"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Anyway, this method seems to be quite poorly documented, and In fact, the sources I come across don't even give it a mention [...]</p>\n</blockquote>\n\n<p>Reliance on implicitly-declared global variables aside, the lack of documentation is a great reason not to use it. </p>\n\n<p><strike>The apparent promotion of <code>id</code> values into global variables isn't standards compliant (the <a href=\"http://www.w3.org/TR/html5/dom.html#the-id-attribute\">HTML5 spec for the ID attribute</a> doesn't mention it) and, therefore, you shouldn't assume future browsers will implement it.</strike></p>\n\n<p>EDIT: It turns out this behaviour <em>is</em> standards compliant - In HTML5, <code>window</code> should support property access to \"Named Elements\":</p>\n\n<blockquote>\n  <p>Named objects with the name name, for the purposes of the above algorithm, are those that are either:</p>\n  \n  <ul>\n  <li>child browsing contexts of the active document whose name is <em>name</em>,  </li>\n  <li>a, applet, area, embed, form, frameset, img, or object elements that have\n  a name content attribute whose value is <em>name</em>, or </li>\n  <li><strong>HTML elements that have an <em>id</em> content attribute whose value is <em>name</em>.</strong></li>\n  </ul>\n</blockquote>\n\n<p>Source: <a href=\"http://www.w3.org/html/wg/drafts/html/master/browsers.html#named-access-on-the-window-object\">HTML 5 spec, 'Named access on window object\"</a>, <em>emphasis mine</em>.</p>\n\n<p>Based on this, standards compliance is not a reason to avoid this pattern. However, the spec itself advises against its use:</p>\n\n<blockquote>\n  <p>As a general rule, relying on this will lead to brittle code. Which\n  IDs end up mapping to this API can vary over time, as new features are\n  added to the Web platform, for example. Instead of this, use\n  <code>document.getElementById()</code> or <code>document.querySelector()</code>.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>There are a few reasons:</p>\n\n<p><em>You don't want your code and your markup that coupled.</em></p>\n\n<p>By using a specific call to access a div, you don't have to worry about the global space being corrupted.  Add a library that declares <code>myDiv</code> in global space and you're in a world of pain that will be hard to fix.</p>\n\n<p><em>You can access elements, by ID, that aren't part of the DOM</em></p>\n\n<p>They can be in a fragment, a frame, or an element that has been detached and not re-attached to the DOM yet.</p>\n\n<p><strong>EDIT: Example of accessing a non-attached elements by <code>ID</code></strong></p>\n\n<pre><code>var frag = document.createDocumentFragment();\nvar span = document.createElement(\"span\");\nspan.id = \"span-test\";\nfrag.appendChild(span);\nvar span2 = frag.getElementById(\"span-test\");\nalert(span === span2);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Great question. As Einstein probably didn\u2019t say, things should be as simple as possible, and no simpler.</p>\n\n<blockquote>\n  <p>the latter approaches have the advantage of keeping the code safe if someone inadvertedly attempts to redefine myDiv in a wider scope (not such a brilliant idea though...), overwrites it with some different value and goes on without noticing the clash</p>\n</blockquote>\n\n<p>That\u2019s the main reason why this is a bad idea, and it\u2019s quite enough. Global variables aren\u2019t safe to rely on. They can be overwritten at any time, by any script that ends up running on the page.</p>\n\n<p>In addition to that, just typing in <code>myDiv</code> isn\u2019t a \u201cshort form\u201d of <code>document.getElementById()</code>. It\u2019s a reference to a global variable.<code>document.getElementById()</code> will happily return <code>null</code> if the element doesn\u2019t exist, whilst attempting to access a non-existent global variable will throw a reference error, so you\u2019d need to wrap your references to the global in a try/catch block to be safe.</p>\n\n<p>This is one reason why jQuery is so popular: if you do <code>$(\"#myDiv\").remove()</code>, and there is no element with an id of <code>myDiv</code>, no error will be thrown \u2014 the code will just silently do nothing, which is often exactly what you want when doing DOM manipulation.</p>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>All browsers I've come to work with allow accessing an element with <code>id=\"myDiv\"</code> by simply writing:</p>\n\n<pre><code>myDiv\n</code></pre>\n\n<p>See here: <a href=\"http://jsfiddle.net/L91q54Lt/\">http://jsfiddle.net/L91q54Lt/</a></p>\n\n<p>Anyway, this method seems to be quite poorly documented, and in fact, the sources I come across don't even give it a mention and instead assume that one would use</p>\n\n<pre><code>document.getElementById(\"myDiv\")\n</code></pre>\n\n<p>or maybe</p>\n\n<pre><code>document.querySelector(\"#myDiv\")\n</code></pre>\n\n<p>to access a DOM element even when its ID is known in advance (i.e. not calculated at runtime). I can tell that the latter approaches have the advantage of keeping the code safe if someone inadvertedly attempts to redefine <code>myDiv</code> in a wider scope (not such a brilliant idea though...), overwrites it with some different value and goes on without noticing the clash.</p>\n\n<p>But other that that? Are there any concerns in using the short form above other than code design, or what else am I missing here?</p>\n",
            "last_activity_date": 1408213153,
            "question_id": 25325221,
            "score": 29,
            "tags": [
                "javascript",
                "dom",
                "getelementbyid"
            ],
            "title": "Why don&#39;t we just use element IDs as identifiers in JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I found <a href=\"http://w3schools.com/jS/js_obj_date.asp\">this article</a> and tried the tutorial. Basically, you can use the date constructor to parse a date, then write get the seconds from the <code>getTime()</code> method</p>\n\n<pre><code>var d=new Date(\"October 13, 1975 11:13:00\");\ndocument.write(d.getTime() + \" milliseconds since 1970/01/01\");\n</code></pre>\n\n<p>Does this work?</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>Yes, it is. And it is supported in all major browser:</p>\n\n<pre><code>var ts = Date.parse(\"date string\");\n</code></pre>\n\n<p>The only difference is that this function returns milliseconds instead of seconds, so you need to divide the result by 1000.</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/parse\">Check what valid formats can JavaScript parse.</a></p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>Check out <a href=\"http://phpjs.org/functions/strtotime/\" rel=\"nofollow\" title=\"this\">this</a> implementation of PHP's strtotime() in JavaScript!</p>\n\n<p>I found that it works identically to PHP for everything that I threw at it.</p>\n\n<blockquote>\n  <p>Update: this function as per version 1.0.2 can't handle this case: '2007:07:20 20:52:45'\n  (Note the : separator for year and month</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>In PHP, you can easily convert an English textual datetime description into a proper date with <code>strtotime()</code>.</p>\n\n<p>Is there anything similar in Javascript?</p>\n",
            "last_activity_date": 1392889015,
            "question_id": 4048204,
            "score": 29,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "Javascript equivalent of php&#39;s strtotime()?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Not sure if I get the question, but if you mean this, then NO.</p>\n\n<pre><code>&lt;div id=\"foo\"&gt;\n  &lt;select onchange=\"alert('hi');\"&gt;\n    &lt;option&gt;Hello&lt;/option&gt;\n    &lt;option&gt;World&lt;/option&gt;\n  &lt;/select&gt;\n&lt;/foo&gt;\n</code></pre>\n\n<p>Where the div id=\"foo\" would have an onchange event... bubbling up from the select list?</p>\n\n<p><hr /></p>\n\n<p>on a related note, just an FYI you can't attach an event to the options within the select list in IE (well, you can but it won't fire)</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I haven't dealt with this for quite a while, but last time I did, I remember that Firefox recognized the event on the <code>&lt;SELECT&gt;</code> element, while IE6 recognized only events on the <code>&lt;OPTION&gt;</code> tags. As far as I remember.</p>\n\n<p>IE7 was not out at that time.</p>\n\n<p>So if this is the case, it makes even more sense to not write the event handler inline and apply it on DOM ready instead, lest you are going to have a lot of polluted, repetitive code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-eventgroupings-htmlevents-h3\">According to specification</a>, \"change\", \"submit\", \"reset\" should bubble and \"focus\" and \"blur\" should not bubble.</p>\n\n<p>This behavior is implemented properly in all web browsers except IE &lt; 9, that is, change,submit,reset do bubble properly in IE >= 9. </p>\n\n<p>See <a href=\"http://stackoverflow.com/a/4722246/227299\">http://stackoverflow.com/a/4722246/227299</a> for a jQuery workaround on old IE versions</p>\n\n<ul>\n<li><a href=\"http://www.quirksmode.org/dom/events/change.html\">http://www.quirksmode.org/dom/events/change.html</a></li>\n<li><a href=\"http://quirksmode.org/dom/events/submit.html\">http://quirksmode.org/dom/events/submit.html</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>In jQuery 1.4+ the change event bubbles in all browsers, including IE.</p>\n\n<pre><code>$('div.field_container').change(function() {\n   // code here runs in all browers, including IE.\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I'm using event delegation to listen for events lower in the DOM, but it's not working for an onchange event on a select box.  Does the onchange event propagate or bubble up the DOM?</p>\n\n<p>Googling has failed in finding a conclusive answer.</p>\n",
            "last_activity_date": 1394819854,
            "question_id": 265074,
            "score": 27,
            "tags": [
                "javascript",
                "html",
                "dom"
            ],
            "title": "Does the onchange event propagate?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>function escapeHtml(unsafe) {\n    return unsafe\n         .replace(/&amp;/g, \"&amp;amp;\")\n         .replace(/&lt;/g, \"&amp;lt;\")\n         .replace(/&gt;/g, \"&amp;gt;\")\n         .replace(/\"/g, \"&amp;quot;\")\n         .replace(/'/g, \"&amp;#039;\");\n }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>You can use jQuery's <a href=\"http://api.jquery.com/text/\"><code>$.text()</code> function</a>.</p>\n\n<p>For example:</p>\n\n<p><a href=\"http://jsfiddle.net/9H6Ch/\">http://jsfiddle.net/9H6Ch/</a></p>\n\n<p>From the jQuery documentation regarding the <code>$.text()</code> function:</p>\n\n<blockquote>\n  <p>We need to be aware that this method\n  escapes the string provided as\n  necessary so that it will render\n  correctly in HTML. To do so, it calls\n  the DOM method .createTextNode(),\n  which replaces special characters with\n  their HTML entity equivalents (such as\n  &amplt; for &lt;).</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I'm not quite sure if this is what you mean, but you can escape html characters in a string variable like so:</p>\n\n<pre><code>var string = escape(\"escaped lessthan looks like this &lt;\");\n</code></pre>\n\n<p>that sets string == to <code>escaped%20lessthan%20looks%20like%20this%20%3C</code></p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I think I found the proper way to do it...</p>\n\n<pre><code>// Create a DOM Text node:\nvar text_node = document.createTextNode(unescaped_text);\n\n// Get the HTML element where you want to insert the text into:\nvar elem = document.getElementById('msg_span');\n\n// Optional: clear its old contents\n//elem.innerHTML = '';\n\n// Append the text node into it:\nelem.appendChild(text_node);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Try this, using the <code>prototype.js</code> library:</p>\n\n<pre><code>string.escapeHTML();\n</code></pre>\n\n<p><a href=\"http://www.tutorialspoint.com/cgi-bin/practice.cgi?file=prototype_83\" rel=\"nofollow\">Try a demo</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function escapeHtml(html)\n{\n    var text = document.createTextNode(html);\n    var div = document.createElement('div');\n    div.appendChild(text);\n    return div.innerHTML;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It was interesting to find beter solution:</p>\n\n<pre><code>var escapeHTML = function(unsafe) {\n  return unsafe.replace(/[&amp;&lt;\"']/g, function(m) {\n    switch (m) {\n      case '&amp;':\n        return '&amp;amp;';\n      case '&lt;':\n        return '&amp;lt;';\n      case '\"':\n        return '&amp;quot;';\n      default:\n        return '&amp;#039;';\n    }\n  });\n};\n</code></pre>\n\n<p>I remove from parsing <code>&gt;</code> because it do not break XML/HTML code in result.</p>\n\n<p>Here is banchmarks: <a href=\"http://jsperf.com/regexpairs\" rel=\"nofollow\">http://jsperf.com/regexpairs</a>\nAlso, I create universal <code>escape</code> function: <a href=\"http://jsperf.com/regexpairs2\" rel=\"nofollow\">http://jsperf.com/regexpairs2</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to display a text to HTML by a javascript function. How can I escape html special chars in JS? Is there an API ?</p>\n",
            "last_activity_date": 1423669310,
            "question_id": 6234773,
            "score": 23,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Can I escape html special chars in javascript?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>AFAIK you still need an <code>&lt;input type=\"file\"&gt;</code> element, then you can use some of the stuff from <a href=\"http://www.quirksmode.org/dom/inputfile.html\" rel=\"nofollow\">quirksmode</a> to style it up</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is a nice one</p>\n\n<p><a href=\"http://fineuploader.com/#demo\">Fine Uploader demo</a></p>\n\n<p>It is an <code>&lt;input type='file' /&gt;</code> control itself. But a div is placed over that and css styles are applied to get that feel. Opacity of the file control is set to 0 so that it appears that the dialog window is opened when clicking on the div.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>The only without <code>&lt;input type=\"file\"&gt;</code> is by embedding a transparent flash movie over the div. You can then use a user generated click event (compliant with Flash 10 new security rules) to trigger a call to flash's <a href=\"http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/flash/net/FileReference.html\" rel=\"nofollow\">FileReference.browse</a>.</p>\n\n<p>It offers an added dependency over the <a href=\"http://www.quirksmode.org/dom/inputfile.html\" rel=\"nofollow\">quirksmode way</a> but in return you get alot more events (such as built in progress events). </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>May be you might be interested this:\n<a href=\"http://code.google.com/p/upload-at-click/\" rel=\"nofollow\">http://code.google.com/p/upload-at-click/</a></p>\n\n<p>At click on element will be opened 'Open file' dialog and </p>\n\n<p>run custom function.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>&lt;a href=\"#\" id=\"select_logo\"&gt;Select Logo&lt;/a&gt; &lt;input type=\"file\" id=\"logo\"&gt; \n\n$(\"#logo\").css('opacity','0');\n\n$(\"#select_logo\").click(function(e){\n   e.preventDefault();\n   $(\"#logo\").trigger('click');\n});\n</code></pre>\n\n<p>for IE add this:\n$(\"#logo\").css('filter','alpha(opacity = 0');</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>First add in the <strong>head</strong> tags:</p>\n\n<pre><code>&lt;script&gt;\n   function showDialog(openFileDialog) {\n       document.getElementById(openFileDialog).click();\n   }\n   function fileName(openFileDialog) {\n       return document.getElementById(openFileDialog).value;\n   }\n   function hasFile(openFileDialog) {\n       return document.getElementById(openFileDialog).value != \"\";\n   }\n   function fileNameWithoutFakePath(openFileDialog) {\n       var fileName = document.getElementById(openFileDialog).value;\n       return fileName.substr(fileName.lastIndexOf('\\\\') + 1);\n   }\n   function fakePathWithoutFileName(openFileDialog) {\n       var fileName = document.getElementById(openFileDialog).value;\n       return fileName.substr(0, fileName.lastIndexOf('\\\\'));\n   }\n&lt;/script&gt;\n</code></pre>\n\n<p>if you already have <strong>script</strong> tags, just add these functions above.</p>\n\n<p>In your <strong>body</strong> or <strong>form</strong> tags adding:</p>\n\n<pre><code>&lt;input type=\"file\" style=\"display:none\" id=\"yourDesiredOrFavoriteNameForTheNewOpenFileDialogInstance\"/&gt;\n</code></pre>\n\n<p>No matter where in your html, is just <strong>like that</strong> you've created a new instance of type OpenFileDialog class as <strong>global</strong> variable, whose name is the <strong>id</strong> of the element, no matter where in your code or xaml, <strong>but</strong> in your script or code, you <strong>can't</strong> type his name, and then read a property or call a function, because there are global functions that do those that are not defined in the element input type=\"file\". You just have to give these functions the id of the hidden input type=\"file\" which is the name of the OpenFileDialog instance as string.</p>\n\n<p>To ease your life in creating open file dialogs instances to your html, you can make a function that does it:</p>\n\n<pre><code>function createAndAddNewOpenFileDialog(name) {\n     document.getElementById(\"yourBodyOrFormId\").innerHtml += \"&lt;input type='file' style='display:none' id='\" + name + \"'/&gt;\"\n}\n</code></pre>\n\n<p>and if you want to remove open file dialog, then you can make and use the following function:</p>\n\n<pre><code>function removeOpenFileDialog(name) {\n    var html = document.getElementById(\"yourBodyOrFormId\").innerHtml;\n    html = html.replace(\"&lt;input type='file' style='display:none' id='\" + name + \"'/&gt;\", \"\");\n    document.getElementById(\"yourBodyOrFormId\").innerHtml = html;\n}\n</code></pre>\n\n<p>but before you remove open file dialog, ensure that it exists by making and using the following function:</p>\n\n<pre><code>function doesOpenFileDialogExist(name) {\n    return document.getElementById(\"yourBodyOrFormId\").innerHtml.indexOf(\"&lt;input type='file' style='display:none' id='\" + name + \"'/&gt;\") != -1\n}\n</code></pre>\n\n<p>and if you don't want to create and add the open file dialogs in the <strong>body</strong> or <strong>form</strong> tags in the html, because this is adding hidden input type=\"file\"s, then you can do it in script using the create function above:</p>\n\n<pre><code>function yourBodyOrFormId_onload() {\n    createAndAddNewOpenFileDialog(\"openFileDialog1\");\n    createAndAddNewOpenFileDialog(\"openFileDialog2\");\n    createAndAddNewOpenFileDialog(\"openFileDialog3\");\n    createAndAddNewOpenFileDialog(\"File Upload\");\n    createAndAddNewOpenFileDialog(\"Image Upload\");\n    createAndAddNewOpenFileDialog(\"bla\");\n    //etc and rest of your code\n}\n</code></pre>\n\n<p>Ensure that near your body or form tags, you added:</p>\n\n<pre><code>onload=\"yourBodyOrFormId_onload()\"\n</code></pre>\n\n<p>You don't have to do this line above, if you did it already.</p>\n\n<p><strong>TIP:</strong> You can add to your project or website new JScript File, if you don't have yet, and in this file you can put all the open file dialog functions away from the <strong>script</strong> tags and the html or web form page, and use them in your html or web form page from this JScript file, but don't forget before to link the html or web form page to the JScript File of course. You can do it just by dragging the JScript file to your html page in the <strong>head</strong> tags. If your page is web form and not simple html, and you don't have head tags, then put it anywhere so that it can work.\nDon't forget to define global variable in that JScript File, whose value will be your body or form id as string. After you linked the JScript file to your html or web form page, you can onload event of your body of form, set the value of that variable to your body or form id. Then in the JScript File, you don't have to give to the document the id of the body or form of one page anymore, just give it the value of that variable. You can call that variable <strong>bodyId</strong> or <strong>formId</strong> or <strong>bodyOrFormId</strong> or any other name you want.</p>\n\n<p><strong>Good luck man!</strong></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Actually, you don't need all that stuff with opacity, visibility, <code>&lt;input&gt;</code> styling, etc. Just take a look:</p>\n\n<pre><code>&lt;a href=\"#\"&gt;Just click me.&lt;/a&gt;\n&lt;script type=\"text/javascript\"&gt;\n    $(\"a\").click(function() {\n        // creating input on-the-fly\n        var input = $(document.createElement('input'));\n        input.attr(\"type\", \"file\");\n        input.trigger('click'); // opening dialog\n        return false; // avoiding navigation\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>Demo on <a href=\"http://jsfiddle.net/mHVWp/\" rel=\"nofollow\">jsFiddle</a>. Tested in Chrome 30.0 and Firefox 24.0. Didn't work in Opera 12.16, however.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I dont't know why nobody has pointed this out but here's is a way of doing it without any Javascript and it's also compatible with any browser.</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;label&gt;\n  Open file dialog\n  &lt;input type=\"file\" style=\"display: none\"&gt;\n&lt;/label&gt;\n</code></pre>\n\n\n\n<p>In case you find problems, you may need to use the <code>for</code> attribute in the <code>label</code> pointing to the <code>id</code> of the input.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>What if javascript is Turned Off on clients machine? Use following solution for all scenarios. You dont even need javascript/jQuery. :</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;label for=\"fileInput\"&gt;&lt;img src=\"File_upload_Img\"&gt;&lt;label&gt;\n&lt;input type=\"file\" id=\"fileInput\"&gt;&lt;/label&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>#fileInput{opacity:0}  \nbody{\n    background:cadetblue;\n}\n</code></pre>\n\n<p>Explanation : <code>for=\"Your input Id\"</code> . Triggers click event by default by HTML. So it by default triggers click event, no need of jQuery/javascript. If its simply done by HTML why use jQuery/jScript? And you cant tell if client disabled JS. Your feature should work even though JS is turned off.</p>\n\n<p><strong><a href=\"http://jsfiddle.net/psko14e9/3/\" rel=\"nofollow\">Working jsFiddle</a></strong> (You dont need JS , jquery)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>i need a solution to display open file dialog in html while clicking a div . the open file dialog box must open when the div is clicked.</p>\n\n<p><strong>note :</strong> i dont want to display the input file dialog as part of html page. it must be displayed as <em>alert</em> in javascript.</p>\n\n<p>[i need open file dialog box when a div is clicked. it must be as like alert which is not part of the web page]</p>\n",
            "last_activity_date": 1426225963,
            "question_id": 2048026,
            "score": 21,
            "tags": [
                "javascript",
                "file",
                "dialog"
            ],
            "title": "open file dialog box in javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>See \"MutationEvent\" elements in here:\n<a href=\"https://developer.mozilla.org/en/DOM/DOM_event_reference\">https://developer.mozilla.org/en/DOM/DOM_event_reference</a> but those are deprecated.</p>\n\n<p>jQuery now features a way to attach events to existing AND future elements corresponding to a selector:\n<a href=\"http://docs.jquery.com/Events/live#typefn\">http://docs.jquery.com/Events/live#typefn</a></p>\n\n<p>It may be a trick you could use for lack of proper DOM Node modification info.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Does your DOM implementation support <a href=\"http://www.w3.org/TR/xml-events/\" rel=\"nofollow\">XML Events</a>?</p>\n\n<p>(Edit: The comment prior to this one links to a web site that tests the browser's <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/events.html\" rel=\"nofollow\">DOM Events</a> implementation; \"DOM Events\" is the DOM binding for the more abstract XML Events definition. Confused yet? :-)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>See the <a href=\"http://code.google.com/p/mutation-summary/\" rel=\"nofollow\">mutation-summary</a> library. It's built on top of a new browser API called DOM Mutation Observers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>This is only for debugging purposes:</strong></p>\n\n<p>Firebug currently allows setting breakpoints on html nodes.</p>\n\n<p>You have to open the html inspector, right click on a node and you have the following options:</p>\n\n<ul>\n<li>Interrupt on attribute change</li>\n<li>Interrupt on child add/remove</li>\n<li>Interrupt on remove</li>\n</ul>\n\n<p>Once you reach the breakpoint you can also browse the call stack.</p>\n\n<p>Google Chrome has a similar feature too.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have recently written a plugin that does exactly that - <a href=\"https://github.com/AdamPietrasiak/jquery.initialize\" rel=\"nofollow\">jquery.initialize</a></p>\n\n<p>You use it the same way as <code>.each</code> function</p>\n\n<pre><code>$(\".some-element\").initialize( function(){\n    $(this).css(\"color\", \"blue\"); \n});\n</code></pre>\n\n<p>The difference from <code>.each</code> is - it takes your selector, in this case <code>.some-element</code> and wait for new elements with this selector in the future, if such element will be added, it will be initialized too.</p>\n\n<p>In our case initialize function just change element color to blue. So if we'll add new element (no matter if with ajax or even F12 inspector or anything) like:</p>\n\n<pre><code>$(\"&lt;div/&gt;\").addClass('some-element').appendTo(\"body\"); //new element will have blue color!\n</code></pre>\n\n<p>Plugin will init it instantly. Also plugin makes sure one element is initialized only once. So if you add element, then <code>.deatch()</code> it from body and then add it again, it will not be initialized again.</p>\n\n<pre><code>$(\"&lt;div/&gt;\").addClass('some-element').appendTo(\"body\").detach()\n    .appendTo(\".some-container\");\n//initialized only once\n</code></pre>\n\n<p>Plugin is based on <code>MutationObserver</code> - it will work on IE9 and 10 with dependencies as detailed on the <a href=\"https://github.com/AdamPietrasiak/jquery.initialize\" rel=\"nofollow\">readme page</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way - using jQuery or otherwise - to monitor the DOM for insertions, deletions, updates to styles, etc?</p>\n",
            "last_activity_date": 1423242444,
            "question_id": 648996,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "dom"
            ],
            "title": "How do I monitor the DOM for changes?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<pre><code>function doSomethingHeavy(param){\n   if (param &amp;&amp; param%100==0) \n     alert(param);\n}\n\n(function heavyWork(){\n    for (var i=0; i&lt;=300; i++){\n       window.setTimeout(\n           (function(i){ return function(){doSomethingHeavy(i)}; })(i)\n       ,0);\n    }\n}())\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There was a person that wrote a specific backgroundtask javascript library to do such heavy work.. you might check it out at this question here:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/1160137/execute-background-task-in-javascript\">Execute Background Task In Javascript</a></p>\n\n<p>Haven't used that for myself, just used the also mentioned thread usage.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I see two ways:</p>\n\n<p>a) You are allowed to use Html5 feature. Then you may consider to use a worker thread.</p>\n\n<p>b) You split this task and queue a message which just do one call at once and iterating as long there is something to do.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can try wrapping each function call in a <code>setTimeout</code>, with a timeout of 0.  This will push the calls to the bottom of the stack, and should let the browser rest between each one.</p>\n\n<pre><code>function heavyWork(){\n   for (i=0; i&lt;300; i++){\n        setTimeout(function(){\n            doSomethingHeavy(i);\n        }, 0);\n   }\n}\n</code></pre>\n\n<p>EDIT: I just realized this won't work.  The <code>i</code> value will be the same for each loop iteration, you need to make a closure.</p>\n\n<pre><code>function heavyWork(){\n   for (i=0; i&lt;300; i++){\n        setTimeout((function(x){\n            return function(){\n                doSomethingHeavy(x);\n            };\n        })(i), 0);\n   }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You need to use Web Workers</p>\n\n<p><a href=\"https://developer.mozilla.org/En/Using_web_workers\">https://developer.mozilla.org/En/Using_web_workers</a></p>\n\n<p>There are a lot of links on web workers if you search around on google</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You could nest your calls inside a <code>setTimeout</code> call:</p>\n\n<pre><code>for(...) {\n    setTimeout(function(i) {\n        return function() { doSomethingHeavy(i); }\n    }(i), 0);\n}\n</code></pre>\n\n<p>This queues up calls to <code>doSomethingHeavy</code> for immediate execution, but other JavaScript operations can be wedged in between them.</p>\n\n<p>A better solution is to actually have the browser spawn a new non-blocking process via <a href=\"https://developer.mozilla.org/En/Using_web_workers\" rel=\"nofollow\">Web Workers</a>, but that's HTML5-specific.</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>Using <code>setTimeout(fn, 0)</code> actually takes much longer than zero milliseconds -- Firefox, for example, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/window.setTimeout?redirectlocale=en-US&amp;redirectslug=DOM%2Fwindow.setTimeout#Minimum.2F_maximum_delay_and_timeout_nesting\" rel=\"nofollow\">enforces a minimum 4-millisecond wait time</a>. A better approach might be to use <strong><em><a href=\"https://github.com/shahyar/setZeroTimeout-js\" rel=\"nofollow\">setZeroTimeout</a></em></strong>, which prefers <code>postMessage</code> for instantaneous, interrupt-able function invocation, but use <code>setTimeout</code> as a fallback for older browsers.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>We need to release control to the browser every so often to avoid monopolizing the browser's attention.</p>\n\n<p>One way to release control is to use a <code>setTimeout</code>, which schedules a \"callback\" to be called at some period of time.  For example:</p>\n\n<pre><code>var f1 = function() {\n    document.body.appendChild(document.createTextNode(\"Hello\"));\n    setTimeout(f2, 1000);\n};\n\nvar f2 = function() {\n    document.body.appendChild(document.createTextNode(\"World\"));\n};\n</code></pre>\n\n<p>Calling <code>f1</code> here will add the word <code>hello</code> to your document, schedule a pending computation, and then release control to the browser.  Eventually, <code>f2</code> will be called.</p>\n\n<p>Note that it's not enough to sprinkle <code>setTimeout</code> indiscriminately throughout your program as if it were magic pixie dust: you really need to encapsulate the rest of the computation in the callback.  Typically, the <code>setTimeout</code> will be the last thing in a function, with the rest of the computation stuffed into the callback.</p>\n\n<p>For your particular case, the code needs to be transformed carefully to something like this:</p>\n\n<pre><code>var heavyWork = function(i, onSuccess) {\n   if (i &lt; 300) {\n       var restOfComputation = function() {\n           return heavyWork(i+1, onSuccess);\n       }\n       return doSomethingHeavy(i, restOfComputation);          \n   } else {\n       onSuccess();\n   }\n};\n\nvar restOfComputation = function(i, callback) {\n   // ... do some work, followed by:\n   setTimeout(callback, 0);\n};\n</code></pre>\n\n<p>which will release control to the browser on every <code>restOfComputation</code>.</p>\n\n<p>As another concrete example of this, see: <a href=\"http://stackoverflow.com/questions/7701346/how-can-i-queue-a-series-of-sound-html5-audio-sound-clips-to-play-in-sequence/8348599#8348599\">How can I queue a series of sound HTML5 &lt;audio&gt; sound clips to play in sequence?</a></p>\n\n<p>Advanced JavaScript programmers need to know how to do this program transformation or else they hit the problems that you're encountering.  You'll find that if you use this technique, you'll have to write your programs in a peculiar style, where each function that can release control takes in a callback function.  The technical term for this style is \"continuation passing style\" or \"asynchronous style\".</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can make many things:</p>\n\n<ol>\n<li>optimize the loops - if the heavy works has something to do with DOM access see this <a href=\"http://stackoverflow.com/questions/10021223/how-to-manage-dom-elements/10021499#10021499\">answer</a>\n<ul>\n<li>if the function is working with some kind of raw data use typed arrays <a href=\"http://msdn.microsoft.com/en-us/library/br212485%28v=vs.94%29.aspx\" rel=\"nofollow\"><sup>MSDN</sup></a> <a href=\"https://developer.mozilla.org/en/JavaScript_typed_arrays\" rel=\"nofollow\"><sup>MDN</sup></a></li>\n</ul></li>\n<li><p>the method with setTimeout() is called <a href=\"http://stackoverflow.com/questions/7184896/eteration-explanation-and-example\">eteration</a>. Very usefull.</p></li>\n<li><p>the function seems to be very straight forward typicall for non-functional programming languages. JavaScript gains advantage of callbacks <a href=\"http://stackoverflow.com/questions/483073/getting-a-better-understanding-of-callback-functions-in-javascript\"><sup>SO question</sup></a>.</p></li>\n<li><p>one new feature is web workers <a href=\"https://developer.mozilla.org/En/Using_web_workers\" rel=\"nofollow\"><sup>MDN</sup></a> <a href=\"http://msdn.microsoft.com/en-us/hh549259\" rel=\"nofollow\"><sup>MSDN</sup></a> <a href=\"http://en.wikipedia.org/wiki/Web_worker\" rel=\"nofollow\"><sup>wikipedia</sup></a>.</p></li>\n<li><p>the last thing ( maybe ) is to combine all the methods - with the traditional way the function is using only one thread. If you can use the web workers, you can divide the work between several. This should minimize the time needed to finish the task.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have such a function in my JS script:</p>\n\n<pre><code>function heavyWork(){\n   for (i=0; i&lt;300; i++){\n        doSomethingHeavy(i);\n   }\n}\n</code></pre>\n\n<p>Maybe \"doSomethingHeavy\" is ok by itself, but repeating it 300 times causes the browser window to be stuck for a non-negligible time. In Chrome it's not that big of a problem because only one Tab is effected; but for Firefox its a complete disaster.</p>\n\n<p>Is there any way to tell the browser/JS to \"take it easy\" and not block everything between calls to doSomethingHeavy?</p>\n",
            "last_activity_date": 1371474448,
            "question_id": 10180391,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "Javascript - how to avoid blocking the browser while doing heavy work?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you were doing it in plain JavaScript, the impact of random clicks anywhere on the page triggering events is almost zero. However in jQuery the consequence could be much greater due to the amount of raw JS commands that it has to run to produce the same effect.</p>\n\n<p>Personally, I find that a little delegation is good, but too much of it will start causing more problems than it solves.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>What you're missing is there are different elements of the performance.</p>\n\n<p>Your first example performs worse when setting up the click handler, but performs better when the actual event is triggered.</p>\n\n<p>Your second example performs better when setting up the click handler, but performs significantly worse when the actual event is triggered.</p>\n\n<p>If all events were put on a top level object (like the document), then you'd have an enormous list of selectors to check on every event in order to find which handler function it goes with.  This very issue is why jQuery deprecated the <code>.live()</code> method because it looks for all events on the document object and when there were lots of <code>.live()</code> event handlers registered, performance of each event was bad because it had to compare every event to lots and lots of selectors to find the appropriate event handler for that event.  For large scale work, it's much, much more efficient to bind the event as close to the actual object that triggered the event.  If the object isn't dynamic, then bind the event right to the object that will trigger it.  This might cost a tiny bit more CPU when you first bind the event, but the actual event triggering will be fast and will scale.</p>\n\n<p>jQuery's <code>.on()</code> and <code>.delegate()</code> can be used for this, but it is recommended that you find to an ancestor object that is as close as possible to the triggering object.  This prevents a buildup of lots of dynamic events on one top level object and prevents the performance degradation for event handling.</p>\n\n<p>In your example above, it's perfectly reasonable to do:</p>\n\n<pre><code>$(\"#someTable\").on('click', \"td.foo\", function(e) {\n    $(e.target).doSomething();\n});\n</code></pre>\n\n<p>That would give you one compact representation of a click handler for all rows and it would continue to work even as you added/removed rows.</p>\n\n<p>But, this would not make as much sense:</p>\n\n<pre><code>$(document).on('click', \"#someTable td.foo\", function(e) {\n    $(e.target).doSomething();\n});\n</code></pre>\n\n<p>because this would be mixing the table events in with all other top level events in the page when there is no real need to do that.  You are only asking for performance issues in the event handling without any benefit of handling the events there.</p>\n\n<p>So, I think the short answer to your question is that handling all events in one top level place leads to performance issues when the event is triggered as the code has to sort out which handler should get the event when there are a lot of events being handled in the same place.  Handling the events as close to the generating object as practical makes the event handling more efficient.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<ul>\n<li>If you remove a node, the corresponding listeners are not removed automatically.</li>\n<li>Some events just don't bubble</li>\n<li>Different libraries may break the system by stopping event propagation (guess you mentioned that one)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>By now most folks on this site are probably aware that:</p>\n\n<pre><code>$(\"#someTable TD.foo\").click(function(){\n    $(e.target).doSomething();\n});\n</code></pre>\n\n<p>is going to perform much worse than:</p>\n\n<pre><code>$(\"#someTable\").click(function(){\n    if (!$(e.target).is(\"TD.foo\")) return;\n    $(e.target).doSomething();\n});\n</code></pre>\n\n<p>Now how much worse will of course depend on how many TDs your table has, but this general principle should apply as long as you have at least a few TDs.  (NOTE: Of course the smart thing would be to use jQuery delegate instead of the above, but I was just trying to make an example with an obvious differentiation).</p>\n\n<p>Anyhow, I explained this principle to a co-worker, and their response was \"Well, for site-wide components (eg. a date-picking INPUT) why stop there?  Why not just bind one handler for each type of component to the BODY itself?\"  I didn't have a good answer.</p>\n\n<p>Obviously using the delegation strategy means rethinking how you block events, so that's one downside.  Also, you hypothetically could have a page where you have a \"TD.foo\" that <em>shouldn't</em> have an event hooked up to it.  But, if you understand and are willing to work around the event bubbling change, and if you enforce a policy of \"if you put .foo on a TD, it's ALWAYS going to get the event hooked up\", neither of these seems like a big deal.</p>\n\n<p>I feel like I must be missing something though, so my question is: is there any other downside to just delegating all events for all site-wide components to the BODY (as opposed to binding them directly to the HTML elements involved, or delegating them to a non-BODY parent element)?</p>\n",
            "last_activity_date": 1331772302,
            "question_id": 9711118,
            "score": 11,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "Why not take Javascript event delegation to the extreme?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You could call the yourmarker.setIcon(canvas.toDataUrlOrSomeThig) every time the image changes. I don't see anything in the api reference for using the canvas element directly, except if you implement you own google.maps.OverlayView.</p>\n\n<p>If you only want animation you could use a gif, and add the marker option optimized: false to it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have found two extensions to the Google MAP V3: <a href=\"http://code.google.com/p/google-maps-utility-library-v3/source/browse/trunk/infobox/src/infobox.js?r=49\">infobox.js</a> and <a href=\"http://code.google.com/p/google-maps-utility-library-v3/source/browse/trunk/markerwithlabel/src/markerwithlabel.js?r=131\">markerwithlabel.js</a> \nBoth can handle an image DOM element as content, which in turn I can rotate via the jQuery <a href=\"http://code.google.com/p/jqueryrotate/\">image rotate plugin</a>.</p>\n\n<p>This even works without setting the marker's image again after rotation.</p>\n\n<p>Edit: As of questions / comments below:</p>\n\n<p>The extension for label is required, because it can handle other DOM elements. So I can add arbitrary HTML as label, in my particular case I add the image. And then I do rotate this image (child of the label) with the rotate plugin. So assign the image an id in order to easily access it. Actually I am using one label just for the image, and another for descriptive text.</p>\n\n<p>Edit 2: Due to Stephan's comment on the DOM readiness</p>\n\n<p>In my code I have found the following lines. This shows that I force a draw on the label before rotating the image.</p>\n\n<pre><code>    if (!this._drawn) myImageLabel.draw(); // 1st time force a draw, otherwise rotating the image will fail because an asynchronously drawn object has not all tags in place\n    if (this.heading != 0) this.rotateImage(this.heading, true);\n</code></pre>\n\n<p>Edit 3: Code example how to create the Infobox.js</p>\n\n<pre><code>this._img = document.createElement('img');\n... further manipulations of _img / Size / Id / ...\nvar planeImageLabelOptions = {\n            content: this._img,\n            disableAutoPan: true,\n            boxStyle: planeImageLabelBoxStyle,\n            pixelOffset: new google.maps.Size(-imgOffsetW / 2, -imgOffsetH / 2),\n            closeBoxURL: \"\",\n            position: latlng,\n            zIndex: this.altitude &lt; 0 ? 100 : this.altitude\n };\n var planeImageLabel = new InfoBox(planeImageLabelOptions);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I have done the rotation in v3 with the following code:</p>\n\n<pre><code>&lt;canvas id=\"carcanvas\" width=\"1\" height=\"1\"&gt;&lt;/canvas&gt;\n\n\n    if (document.getElementById('carcanvas').getContext) {\n        var supportsCanvas = true;\n    } else {\n        var supportsCanvas = false;\n    }\n\n    var rImg = new Image();\n    rImg.src='/images/cariconl.png';\n\n    // Returns the bearing in radians between two points.\n    function bearing( from, to ) {\n        // Convert to radians.\n        var lat1 = from.latRadians();\n        var lon1 = from.lngRadians();\n        var lat2 = to.latRadians();\n        var lon2 = to.lngRadians();\n        // Compute the angle.\n        var angle = - Math.atan2( Math.sin( lon1 - lon2 ) * Math.cos( lat2 ), Math.cos( lat1 ) * Math.sin( lat2 ) - Math.sin( lat1 ) * Math.cos( lat2 ) * Math.cos( lon1 - lon2 ) );\n        if ( angle &lt; 0.0 )\n            angle  += Math.PI * 2.0;\n        if (angle == 0) {angle=1.5;}\n        return angle;\n    }\n\n    function plotcar() {\n        canvas = document.getElementById(\"carcanvas\").getContext('2d');\n        var cosa = Math.cos(angle);\n        var sina = Math.sin(angle);\n        canvas.clearRect(0,0,32,32);\n        canvas.save();\n        canvas.rotate(angle);\n        canvas.translate(16*sina+16*cosa,16*cosa-16*sina);\n        canvas.drawImage(rImg,-16,-16);\n        canvas.restore();\n    }\n</code></pre>\n\n<p>and in the animation method :</p>\n\n<pre><code>if (supportsCanvas) {\n                    angle = bearing(new google.maps.LatLng(lat1, lng1),new google.maps.LatLng(lat2, lng2));\n                    plotcar();\n                }\n</code></pre>\n\n<p>I hope that help.</p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>I was able to solve this pretty easily but using the marker.icon.rotation option pointing to a custom symbol that uses the svg path syntax.</p>\n\n<pre><code>$scope.triangle = {\n  path: 'M 0 0 L -35 -100 L 35 -100 z',\n  fillColor: '#3884ff',\n  fillOpacity: 0.7,\n  scale: 1,\n  strokeColor: '#356cde',\n  rotation: 90,\n  strokeWeight: 1\n\n}; \n</code></pre>\n\n<p>If using angular-google-maps it is trivial to bind a ui control to change the triangle.rotation.</p>\n\n<p>Like I did with this slider.</p>\n\n<pre><code>&lt;slider  ng-model=\"triangle.rotation\" floor=\"0\" ceiling=\"359\" step=\"5\" precsion=\"1\"&gt;&lt;/slider&gt;\n</code></pre>\n\n<p>But you could use a forum too.</p>\n\n<p>here is my plunker <a href=\"http://plnkr.co/edit/x0egXI\" rel=\"nofollow\">http://plnkr.co/edit/x0egXI</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The easiest way may be to use the <a href=\"https://developers.google.com/maps/documentation/javascript/reference#Symbol\" rel=\"nofollow\">rotation property of google.maps.Symbol</a>. Just set it as a property of your icon when creating or updating your marker: </p>\n\n<pre><code>new google.maps.Marker({\n  position: map.getCenter(),\n  icon: {\n    path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,\n    scale: 7,\n    rotation: 193\n  },\n  map: map\n});\n</code></pre>\n\n<p><a href=\"http://plnkr.co/edit/5jda9PFOWA4u4GuC2xot?p=preview\" rel=\"nofollow\">Plunker</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You did not state it in your question, but I am assuming that you want this rotation in relation to a line between point a and point b, which would be their path. In order to make a google svg icon that can be rotated, you will want to use the google symbol class object to define the properties of your marker symbol. This does not use a full .svg file, but only the d attribute of the path. Note that the google symbol class can only take one path per marker.</p>\n\n<p>Additional attributes for color, stroke, width, opacity, etc. may be set after the marker has been created with javascript (updating the marker object properties directly), or with CSS (updating the marker properties by adding and removing classes).</p>\n\n<p>As an example, the following will create an arrow marker that can be dragged, and it will be rotated around the point on the map that is the lat and long for the marker even after it is moved.</p>\n\n<p>The HTML</p>\n\n<pre><code>&lt;body id=\"document_body\" onload=\"init();\"&gt;\n  &lt;div id=\"rotation_control\"&gt;\n    Heading&amp;deg;&lt;input id=\"rotation_value\" type=\"number\" size=\"3\" value=\"0\" onchange=\"setRotation();\" /&gt;\n  &lt;/div&gt;\n  &lt;div id=\"map_canvas\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>The CSS (yes,verbose... I hate ugly)</p>\n\n<pre><code>#document_body {\n    margin:0;\n    border: 0;\n    padding: 10px;\n    font-family: Arial,sans-serif;\n    font-size: 14px;\n    font-weight: bold;\n    color: #f0f9f9;\n    text-align: center;\n    text-shadow: 1px 1px 1px #000;\n    background:#1f1f1f;\n  }\n  #map_canvas, #rotation_control {\n    margin: 1px;\n    border:1px solid #000;\n    background:#444;\n    -webkit-border-radius: 4px;\n       -moz-border-radius: 4px;\n            border-radius: 4px;\n  }\n  #map_canvas { \n    width: 100%;\n    height: 360px;\n  }\n  #rotation_control { \n    width: auto;\n    padding:5px;\n  }\n  #rotation_value { \n    margin: 1px;\n    border:1px solid #999;\n    width: 60px;\n    padding:2px;\n    font-weight: bold;\n    color: #00cc00;\n    text-align: center;\n    background:#111;\n    border-radius: 4px;\n  }\n</code></pre>\n\n<p>The Javascript (in plain vanilla flavor for understanding core concepts)</p>\n\n<pre><code>var map, arrow_marker, arrow_options;\nvar map_center = {lat:41.0, lng:-103.0};\nvar arrow_icon = {\n  path: 'M -1.1500216e-4,0 C 0.281648,0 0.547084,-0.13447 0.718801,-0.36481 l 17.093151,-22.89064 c 0.125766,-0.16746 0.188044,-0.36854 0.188044,-0.56899 0,-0.19797 -0.06107,-0.39532 -0.182601,-0.56215 -0.245484,-0.33555 -0.678404,-0.46068 -1.057513,-0.30629 l -11.318243,4.60303 0,-26.97635 C 5.441639,-47.58228 5.035926,-48 4.534681,-48 l -9.06959,0 c -0.501246,0 -0.906959,0.41772 -0.906959,0.9338 l 0,26.97635 -11.317637,-4.60303 c -0.379109,-0.15439 -0.812031,-0.0286 -1.057515,0.30629 -0.245483,0.33492 -0.244275,0.79809 0.0055,1.13114 L -0.718973,-0.36481 C -0.547255,-0.13509 -0.281818,0 -5.7002158e-5,0 Z',\n  strokeColor: 'black',\n  strokeOpacity: 1,\n  strokeWeight: 1,\n  fillColor: '#fefe99',\n  fillOpacity: 1,\n  rotation: 0,\n  scale: 1.0\n};\n\nfunction init(){\n  map = new google.maps.Map(document.getElementById('map_canvas'), {\n    center: map_center,\n    zoom: 4,\n    mapTypeId: google.maps.MapTypeId.HYBRID\n  });\n  arrow_options = {\n    position: map_center,\n    icon: arrow_icon,\n    clickable: false,\n    draggable: true,\n    crossOnDrag: true,\n    visible: true,\n    animation: 0,\n    title: 'I am a Draggable-Rotatable Marker!' \n  };\n  arrow_marker = new google.maps.Marker(arrow_options);\n  arrow_marker.setMap(map);\n}\n\nfunction setRotation(){\n  var heading = parseInt(document.getElementById('rotation_value').value);\n  if (isNaN(heading)) heading = 0;\n  if (heading &lt; 0) heading = 359;\n  if (heading &gt; 359) heading = 0;\n  arrow_icon.rotation = heading;\n  arrow_marker.setOptions({icon:arrow_icon});\n  document.getElementById('rotation_value').value = heading;\n}\n</code></pre>\n\n<p>And the best yet, doing it this way assures the marker is a Google MVC object, giving it all the additional methods provided by the MVC object.</p>\n\n<p>If you must have multi-colored images as your marker, then creating a .png sprite sheet with a rendition of the image at all the angles you want it to be shown, and then problematically select the correct image to use based on the computed bearing between the two points you are using. However,this would not be an SVG image, but a regular marker image.</p>\n\n<p>Hope this helps in making some decisions regarding your map markers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How could I rotate an image (marker image) on a Google map <strong>V3</strong>?</p>\n\n<ul>\n<li>There is an excellent example for V2 <a href=\"http://econym.org.uk/gmap/example_cartrip3.htm\">here</a>, exactly doing what I need. But for GMap2! They do it with a rotating canvas.</li>\n<li>Image rotating with JS / JQuery is frequently used, there a <a href=\"http://stackoverflow.com/questions/3956242/rotate-an-image-using-javascript\">multiple answers</a> about this. But how could I apply this to my maps image?</li>\n<li>One mentioned approach is to have different images for different angles and to switch among them - this is NOT what I want. I do not like to have so many images, I want to rotate by code.</li>\n</ul>\n\n<p>Remark: There are similar questions, but all for V2 and not V3 (as far I can tell). I need it for V3. </p>\n",
            "last_activity_date": 1425446377,
            "question_id": 6800613,
            "score": 10,
            "tags": [
                "javascript",
                "google-maps-api-3"
            ],
            "title": "Rotating image / marker image on Google map V3"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The problem is with percentage sizing.  You are not defining the size of the parent div (the new one), so the browser can not report the size to the Google Maps API.  Giving the wrapper div a specific size, or a percentage size if the size of its parent can be determined, will work.</p>\n\n<p>See <a href=\"http://econym.org.uk/gmap/basic19.htm\" rel=\"nofollow\">this explanation from Mike Williams' Google Maps API v2 tutorial</a>:</p>\n\n<blockquote>\n  <p>If you try to use style=\"width:100%;height:100%\" on your map div, you get a map div that has zero height. That's \n  because the div tries to be a percentage of the size of the <code>&lt;body&gt;</code>, but by default the <code>&lt;body&gt;</code> has an indeterminate \n  height.</p>\n  \n  <p>There are ways to determine the height of the screen and use that number of pixels as the height of the map div, \n  but a simple alternative is to change the <code>&lt;body&gt;</code> so that its height is 100% of the page. We can do this by \n  applying style=\"height:100%\" to both the <code>&lt;body&gt;</code> and the <code>&lt;html&gt;</code>. (We have to do it to both, otherwise the \n  <code>&lt;body&gt;</code> tries to be 100% of the height of the document, and the default for that is an indeterminate height.)</p>\n</blockquote>\n\n<p>Add the 100% size to html and body in your css</p>\n\n<pre><code>    html, body, #map-canvas {\n        margin: 0;\n        padding: 0;\n        height: 100%;\n        width: 100%;\n    }\n</code></pre>\n\n<p>Add it inline to any divs that don't have an id:</p>\n\n<pre><code>&lt;body&gt;\n  &lt;div style=\"height:100%; width: 100%;\"&gt; \n    &lt;div id=\"map-canvas\"&gt;&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Wizard</p>\n\n<p>Have you tried setting the height and width of the extra div, I know that on a project I am working on JS won't put anything in the div unless I have the height and width already set.</p>\n\n<p>I used your code and hard coded the height and width and it shows up for me and without it doesn't show.</p>\n\n<pre><code>&lt;body&gt;\n    &lt;div style=\"height:500px; width:500px;\"&gt; &lt;!-- ommiting the height and width will not show the map --&gt;\n         &lt;div id=\"map-canvas\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt; \n</code></pre>\n\n<p>I would recommend either hard coding it in or assigning the div an ID and then add it to your CSS file.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Add <code>style=\"width:100%; height:100%;\"</code> to the div see what that does </p>\n\n<p>not to the <code>#map_canvas</code> but the main div</p>\n\n<p>example</p>\n\n<pre><code>&lt;body&gt;\n    &lt;div style=\"height:100%; width:100%;\"&gt;\n         &lt;div id=\"map-canvas\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt; \n</code></pre>\n\n<p>There are some other answers on here the explain why this is necessary </p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>I solved this problem with:</p>\n\n<pre><code>  &lt;div id=\"map\" style=\"width: 100%; height: 100%; position: absolute;\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>In my case I was getting the grey background and it turned out to be inclusion of a zoom value in the map options.  Yup, makes no sense.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to put the <code>div</code> tag that shows the map (<code>&lt;div id=\"map-canvas\"&gt;&lt;/div&gt;</code>) inside another <code>div</code>, but it doesn't show the map that way. Is it a CSS or a JavaScript problem? Or is it just the way the API works?  </p>\n\n<p>Here's my code with the the nested <code>div</code>:  </p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Simple Map&lt;/title&gt;\n    &lt;meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\"&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;style&gt;\n        html, body, #map-canvas {\n            margin: 0;\n            padding: 0;\n            height: 100%;\n        }\n    &lt;/style&gt;\n    &lt;script src=\"https://maps.googleapis.com/maps/api/js?v=3.exp&amp;sensor=false\"&gt;\n    &lt;/script&gt;\n    &lt;script&gt;\n        var map;\n        function initialize() {\n          var mapOptions = {\n            zoom: 8,\n            center: new google.maps.LatLng(-34.397, 150.644),\n            mapTypeId: google.maps.MapTypeId.ROADMAP\n          };\n          map = new google.maps.Map(document.getElementById('map-canvas'),\n              mapOptions);\n        }\n\n        google.maps.event.addDomListener(window, 'load', initialize);\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div&gt; &lt;!-- ommiting this div will show the map --&gt;\n        &lt;div id=\"map-canvas\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1417899357,
            "question_id": 16349476,
            "score": 9,
            "tags": [
                "javascript",
                "google-maps-api-3"
            ],
            "title": "Map isn&#39;t showing on Google Maps JavaScript API v3 when nested in a div tag"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There are two main reasons for obfuscating ones code:</p>\n\n<ol>\n<li>The person who wrote it didn't want to provide the code in readable form to avoid from stealing his intellectual property</li>\n<li>Virus, Spyware, ...</li>\n</ol>\n\n<p>In the first case I would suggest you asking the author to provide you the source code.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You'll have to get it out of that string to unpack it, and much of that work will be manual, since some of it appears to be encoded.</p>\n\n<p>But I agree with Darin.  Ask the author for unobfuscated source.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It is doing something like this:</p>\n\n<pre><code>document.writeln(\"&lt; a href=\\\"mailto:cameron@curvycorners.net\\\" title=\\\"Contact\\\"&gt;Contact&lt;/a&gt;\");\n</code></pre>\n\n<p>So something like a copyright notice</p>\n\n<p>Full source</p>\n\n<pre><code>function f(x, y) {\n    var i, o = \"\", l = x.length;\n    for (i = 0; i &lt; l; i++) {\n        if (i == 90) {\n            y += i;\n        }\n        y %= 127;\n        o += String.fromCharCode(x.charCodeAt(i) ^ y++);\n    }\n    return o;\n}\n\nf(\"&gt;4?(3:\\x0E\\x15L\\x14\\x16\\f\\x12\\x02\\x04\\x07BIP\\fN\\x07\\x02\\x14\\x14N(W\\x1B\\x16\\x11\\x15\\x0E\\x14F\\x1E\\x1FmdpljEerz\\x7Fshc\\x7F`jbb&lt;}qaJ58msopx#C\\x02bMMPDESt\\v\\x14hCCZNSE\\x0E\\x1CU.3;($.\", 90);\n</code></pre>\n\n<p>Done with Firefox addon \"<a href=\"https://addons.mozilla.org/En-us/firefox/addon/javascript-deobfuscator/\" rel=\"nofollow\" title=\"Javascript Deobfuscator\">Javascript Deobfuscator</a>\"</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This a really obfuscated version of:</p>\n\n<pre><code>document.writeln(\"&lt;a href=\\\"mailto:cameron@curvycorners.net\\\" title=\\\"Contact\\\"&gt;Contact&lt;/a&gt;\");\n</code></pre>\n\n<p>I assume it is obfuscated this much to avoid spammers. But of course spambots could just render the page with Webkit and traverse the DOM for email addresses ... ;)</p>\n\n<p><strong>So.. how to deobfuscate?</strong></p>\n\n<ol>\n<li>Go to <a href=\"http://jsbeautifier.org/\">http://jsbeautifier.org/</a></li>\n<li>Paste the source and beautify it</li>\n<li>Edit the function <code>f(x)</code> so it does <code>console.log(o)</code> instead of <code>return o</code></li>\n<li>Execute the modified code and beautify its output.</li>\n<li>Repeat steps 2-4 until it is readable.</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>Edit: Looks like some people beat me to it after all. Thanks!</p>\n\n<hr>\n\n<p>After the unhelpful \"Answers\" received from some of the big guns (5 digit rep score) I decided to de-obfuscate it myself:</p>\n\n<pre><code>document.writeln(\"&lt;a href=\\\"mailto:cameron@curvycorners.net\\\" title=\\\"Contact\\\"&gt;Contact&lt;/a&gt;\");0;\n</code></pre>\n\n<p>The whole shebang is just a very over-the-top way of hiding an email address.</p>\n\n<hr>\n\n<p>To do this go to your firebug console and execute this:</p>\n\n<pre><code>    var x=\"function f(x){var i,o=\\\"\\\",l=x.length;for(i=0;i&lt;l;i+=2) {if(i+1&lt;l)o+=\" +\n    \"x.charAt(i+1);try{o+=x.charAt(i);}catch(e){}}return o;}f(\\\"ufcnitnof x({)av\" +\n    \" r,i=o\\\\\\\"\\\\\\\"o,=l.xelgnhtl,o=;lhwli(e.xhcraoCedtAl(1/)3=!76{)rt{y+xx=l;=+;\" +\n    \"lc}tahce({)}}of(r=i-l;1&gt;i0=i;--{)+ox=c.ahAr(t)i};erutnro s.buts(r,0lo;)f}\\\\\" +\n    \"\\\"(0),9\\\\\\\"\\\\\\\\$.;(.34U03\\\\\\\\\\\\\\\\16\\\\\\\\0E\\\\\\\\NSCZhC24\\\\\\\\03\\\\\\\\01\\\\\\\\\\\\\\\\St\" +\n    \"DEMPbM02\\\\\\\\0C\\\\\\\\x#opms58aJ}qb&lt;jb7`17\\\\\\\\\\\\\\\\hc7s17\\\\\\\\\\\\\\\\rzEeljdp7m03\\\\\\\\\"+\n    \"\\\\\\\\36\\\\\\\\0F\\\\\\\\24\\\\\\\\06\\\\\\\\01\\\\\\\\\\\\\\\\25\\\\\\\\01\\\\\\\\02\\\\\\\\\\\\\\\\26\\\\\\\\03\\\\\\\\03\\\\\"+\n    \"\\\\\\\\\\\\(W4N02\\\\\\\\\\\\\\\\24\\\\\\\\02\\\\\\\\00\\\\\\\\\\\\\\\\07\\\\\\\\0N\\\\\\\\14\\\\\\\\0P\\\\\\\\BI07\\\\\\\\0\" +\n    \"4\\\\\\\\00\\\\\\\\\\\\\\\\02\\\\\\\\02\\\\\\\\02\\\\\\\\\\\\\\\\14\\\\\\\\06\\\\\\\\02\\\\\\\\\\\\\\\\24\\\\\\\\0L\\\\\\\\25\\\\\" +\n    \"\\\\06\\\\\\\\01\\\\\\\\\\\\\\\\3:?(&gt;4\\\\\\\"\\\\\\\\f(;} ornture;}))++(y)^(iAtdeCoarchx.e(odrCh\" +\n    \"amCro.fngriSt+=;o27=1y%i;+=)y90==(iif){++;i&lt;l;i=0(ior;fthnglex.l=\\\\\\\\,\\\\\\\\\\\\\"+\n    \"\\\"=\\\\\\\",o iar{vy)x,f(n ioctun\\\\\\\"f)\\\")\"                                      ;\n    while(x=eval(x)){\n        console.log(x);\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>What is this monstrosity? Anyone know of a way to make it readable?</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt; \n    //&lt;![CDATA[\n    &lt;!--\n    var x=\"function f(x){var i,o=\\\"\\\",l=x.length;for(i=0;i&lt;l;i+=2) {if(i+1&lt;l)o+=\" +\n    \"x.charAt(i+1);try{o+=x.charAt(i);}catch(e){}}return o;}f(\\\"ufcnitnof x({)av\" +\n    \" r,i=o\\\\\\\"\\\\\\\"o,=l.xelgnhtl,o=;lhwli(e.xhcraoCedtAl(1/)3=!76{)rt{y+xx=l;=+;\" +\n    \"lc}tahce({)}}of(r=i-l;1&gt;i0=i;--{)+ox=c.ahAr(t)i};erutnro s.buts(r,0lo;)f}\\\\\" +\n    \"\\\"(0),9\\\\\\\"\\\\\\\\$.;(.34U03\\\\\\\\\\\\\\\\16\\\\\\\\0E\\\\\\\\NSCZhC24\\\\\\\\03\\\\\\\\01\\\\\\\\\\\\\\\\St\" +\n    \"DEMPbM02\\\\\\\\0C\\\\\\\\x#opms58aJ}qb&lt;jb7`17\\\\\\\\\\\\\\\\hc7s17\\\\\\\\\\\\\\\\rzEeljdp7m03\\\\\\\\\"+\n    \"\\\\\\\\36\\\\\\\\0F\\\\\\\\24\\\\\\\\06\\\\\\\\01\\\\\\\\\\\\\\\\25\\\\\\\\01\\\\\\\\02\\\\\\\\\\\\\\\\26\\\\\\\\03\\\\\\\\03\\\\\"+\n    \"\\\\\\\\\\\\(W4N02\\\\\\\\\\\\\\\\24\\\\\\\\02\\\\\\\\00\\\\\\\\\\\\\\\\07\\\\\\\\0N\\\\\\\\14\\\\\\\\0P\\\\\\\\BI07\\\\\\\\0\" +\n    \"4\\\\\\\\00\\\\\\\\\\\\\\\\02\\\\\\\\02\\\\\\\\02\\\\\\\\\\\\\\\\14\\\\\\\\06\\\\\\\\02\\\\\\\\\\\\\\\\24\\\\\\\\0L\\\\\\\\25\\\\\" +\n    \"\\\\06\\\\\\\\01\\\\\\\\\\\\\\\\3:?(&gt;4\\\\\\\"\\\\\\\\f(;} ornture;}))++(y)^(iAtdeCoarchx.e(odrCh\" +\n    \"amCro.fngriSt+=;o27=1y%i;+=)y90==(iif){++;i&lt;l;i=0(ior;fthnglex.l=\\\\\\\\,\\\\\\\\\\\\\"+\n    \"\\\"=\\\\\\\",o iar{vy)x,f(n ioctun\\\\\\\"f)\\\")\"                                      ;\n    while(x=eval(x));\n    //--&gt;\n    //]]&gt;\n&lt;/script&gt; \n</code></pre>\n",
            "last_activity_date": 1387109406,
            "question_id": 2867027,
            "score": 8,
            "tags": [
                "javascript",
                "obfuscation"
            ],
            "title": "Deobfuscating Javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If your iframe is in the same domain as your parent page you can access the elements using <code>document.frames</code> collection.</p>\n\n<pre><code>// replace myIFrame with your iFrame id\n// replace myIFrameElemId with your iFrame's element id\n// you can work on document.frames['myIFrame'].document like you are working on\n// normal document object in JS\nwindow.frames['myIFrame'].document.getElementById('myIFrameElemId')\n</code></pre>\n\n<p>If your iframe is not in the same domain the browser should prevent such access for security reasons.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>You should access frames from <code>window</code> and not <code>document</code></p>\n\n<pre><code>window.frames['myIFrame'].document.getElementById('myIFrameElemId')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><code>window.frames['myIFrame'].document.getElementById('myIFrameElemId')</code> </p>\n\n<p>not working for me but I found another solution. Use: </p>\n\n<pre><code>window.frames['myIFrame'].contentDocument.getElementById('myIFrameElemId')\n</code></pre>\n\n<p>I checked it on Firefox and Chrome.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I have a webpage where there is a texarea within a iframe.\nI need to read the value of this textarea from its child page javascript.\nPresently by using window.parent.getelementbyID().value in the javascript, I am able to fetch values of all controls in the parent page except the textarea within the iframe.\nCan anyone please give me any pointers to resolve this issue?\nThanks in Advance,\nArchana</p>\n",
            "last_activity_date": 1387828160,
            "question_id": 1451208,
            "score": 6,
            "tags": [
                "javascript",
                "iframe",
                "elements"
            ],
            "title": "Access iframe elements in javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Perhaps a single regex could be used, but that makes it hard to give the user feedback for which rule they aren't following.  A more traditional approach like this gives you feedback that you can use in the UI to tell the user what pwd rule is not being met:</p>\n\n<pre><code>function checkPwd(str) {\n    if (str.length &lt; 6) {\n        return(\"too_short\");\n    } else if (str.length &gt; 50) {\n        return(\"too_long\");\n    } else if (str.search(/\\d/) == -1) {\n        return(\"no_num\");\n    } else if (str.search(/[a-zA-Z]/) == -1) {\n        return(\"no_letter\");\n    } else if (str.search(/[^a-zA-Z0-9\\!\\@\\#\\$\\%\\^\\&amp;\\*\\(\\)\\_\\+]/) != -1) {\n        return(\"bad_char\");\n    }\n    return(\"ok\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>I have a regex, but it's a bit tricky.</p>\n\n<pre><code>^(?:(?&lt;Numbers&gt;[0-9]{1})|(?&lt;Alpha&gt;[a-zA-Z]{1})|(?&lt;Special&gt;[^a-zA-Z0-9]{1})){6,50}$\n</code></pre>\n\n<p>Let me explain it and how to check if the tested password is correct:</p>\n\n<p>There are three named groups in the regex.\n1) \"Numbers\": will match a single number in the string.\n2) \"Alpha\": will match a single character from \"a\" to \"z\" or \"A\" to \"Z\"\n3) \"Special\": will match a single character not being \"Alpha\" or \"Numbers\"</p>\n\n<p>Those three named groups are grouped in an alternative group, and <code>{6,50}</code> advises regex machine to capture at least 6 of those groups mentiond above, but not more than 50.</p>\n\n<p>To ensure a correct password is entered you have to check if there is a match, and after that, if the matched groups are capture as much as you desired. I'm a C# developer and don't know, how it works in javascript, but in C# you would have to check:</p>\n\n<pre><code>match.Groups[\"Numbers\"].Captures.Count &gt; 1\n</code></pre>\n\n<p>Hopefully it works the same in javascript! Good luck!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>following jfriend00 answer i wrote this fiddle to test his solution with some little changes to make it more visual:</p>\n\n<p><a href=\"http://jsfiddle.net/9RB49/1/\" rel=\"nofollow\">http://jsfiddle.net/9RB49/1/</a></p>\n\n<p>and this is the code:</p>\n\n<pre><code>checkPwd = function() {\n    var str = document.getElementById('pass').value;\n    if (str.length &lt; 6) {\n        alert(\"too_short\");\n        return(\"too_short\");\n    } else if (str.length &gt; 50) {\n        alert(\"too_long\");\n        return(\"too_long\");\n    } else if (str.search(/\\d/) == -1) {\n        alert(\"no_num\");\n        return(\"no_num\");\n    } else if (str.search(/[a-zA-Z]/) == -1) {\n        alert(\"no_letter\");\n        return(\"no_letter\");\n    } else if (str.search(/[^a-zA-Z0-9\\!\\@\\#\\$\\%\\^\\&amp;\\*\\(\\)\\_\\+\\.\\,\\;\\:]/) != -1) {\n        alert(\"bad_char\");\n        return(\"bad_char\");\n    }\n    alert(\"oukey!!\");\n    return(\"ok\");\n}\n</code></pre>\n\n<p>btw, its working like a charm! ;)</p>\n\n<p>best regards and thanks to jfriend00 of course!</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I need a regular expression with condition:</p>\n\n<ul>\n<li>min 6 characters, max 50 characters</li>\n<li>must contain 1 letter</li>\n<li>must contain 1 number</li>\n<li>may contain special characters like !@#$%^&amp;*()_+</li>\n</ul>\n\n<p>Currently I have pattern: <code>(?!^[0-9]*$)(?!^[a-zA-Z]*$)^([a-zA-Z0-9]{6,50})$</code></p>\n\n<p>However it doesn't allow special characters, does anybody have a good regex for that?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1399561292,
            "question_id": 7844359,
            "score": 5,
            "tags": [
                "javascript",
                "asp.net",
                "regex"
            ],
            "title": "Password REGEX with min 6 chars, at least one letter and one number and may contain special characters"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>just been looking thru the code, try adding this line:</p>\n\n<pre><code>jqModal : true,\n</code></pre>\n\n<p>to this code:</p>\n\n<pre><code>$grid.jqGrid('navButtonAdd', '#pager', {\n            caption: \"\",\n            buttonicon: \"ui-icon-calculator\",\n            title: \"Choose columns\",\n            onClickButton: function () {\n....\n</code></pre>\n\n<p>like this:</p>\n\n<pre><code>$grid.jqGrid('navButtonAdd', '#pager', {\n            caption: \"\",\n            buttonicon: \"ui-icon-calculator\",\n            title: \"Choose columns\",\n            jqModal : true,\n            onClickButton: function () {\n....\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are currently undocumented <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3ajquery_ui_methods#options\">option</a> of the <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3ajquery_ui_methods#column_chooser\">columnChooser</a>:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$(this).jqGrid('columnChooser', {modal: true});\n</code></pre>\n\n<p><a href=\"http://www.ok-soft-gmbh.com/jqGrid/SimpleLocalGridWithColumnChooser5_.htm\">The demo</a> demonstrate this. One can set default parameters for the <code>columnChooser</code> with respect of <code>$.jgrid.col</code> too:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$.extend(true, $.jgrid.col, {\n    modal: true\n});\n</code></pre>\n\n<p>Recently I posted <a href=\"http://www.trirand.com/blog/?page_id=393/bugs/making-columnchooser-really-resizable/#p25823\">the suggestion</a> to extend a little functionality of the <code>columnChooser</code>, but only <a href=\"https://github.com/tonytomov/jqGrid/commit/905adbc441ff55b4eeedd40c3fbf88dd54f94200\">a part</a> of the changes are current code of the jqGrid. Nevertheless in the new version will be possible to set much more <a href=\"http://docs.jquery.com/UI/Dialog\">jQuery UI Dialog</a> options with respect of new <code>dialog_opts</code> option. For example the usage of the following will be possible</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$(this).jqGrid('columnChooser', {\n    dialog_opts: {\n        modal: true,\n        minWidth: 470,\n        show: 'blind',\n        hide: 'explode'\n    }\n});\n</code></pre>\n\n<p>To use full features which I suggested you can just overwrite the standard implementation of <code>columnChooser</code>. One can do this by including the following code</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$.jgrid.extend({\n    columnChooser : function(opts) {\n        var self = this;\n        if($(\"#colchooser_\"+$.jgrid.jqID(self[0].p.id)).length ) { return; }\n        var selector = $('&lt;div id=\"colchooser_'+self[0].p.id+'\" style=\"position:relative;overflow:hidden\"&gt;&lt;div&gt;&lt;select multiple=\"multiple\"&gt;&lt;/select&gt;&lt;/div&gt;&lt;/div&gt;');\n        var select = $('select', selector);\n\n        function insert(perm,i,v) {\n            if(i&gt;=0){\n                var a = perm.slice();\n                var b = a.splice(i,Math.max(perm.length-i,i));\n                if(i&gt;perm.length) { i = perm.length; }\n                a[i] = v;\n                return a.concat(b);\n            }\n        }\n        opts = $.extend({\n            \"width\" : 420,\n            \"height\" : 240,\n            \"classname\" : null,\n            \"done\" : function(perm) { if (perm) { self.jqGrid(\"remapColumns\", perm, true); } },\n            /* msel is either the name of a ui widget class that\n               extends a multiselect, or a function that supports\n               creating a multiselect object (with no argument,\n               or when passed an object), and destroying it (when\n               passed the string \"destroy\"). */\n            \"msel\" : \"multiselect\",\n            /* \"msel_opts\" : {}, */\n\n            /* dlog is either the name of a ui widget class that \n               behaves in a dialog-like way, or a function, that\n               supports creating a dialog (when passed dlog_opts)\n               or destroying a dialog (when passed the string\n               \"destroy\")\n               */\n            \"dlog\" : \"dialog\",\n\n            /* dlog_opts is either an option object to be passed \n               to \"dlog\", or (more likely) a function that creates\n               the options object.\n               The default produces a suitable options object for\n               ui.dialog */\n            \"dlog_opts\" : function(opts) {\n                var buttons = {};\n                buttons[opts.bSubmit] = function() {\n                    opts.apply_perm();\n                    opts.cleanup(false);\n                };\n                buttons[opts.bCancel] = function() {\n                    opts.cleanup(true);\n                };\n                return $.extend(true, {\n                    \"buttons\": buttons,\n                    \"close\": function() {\n                        opts.cleanup(true);\n                    },\n                    \"modal\" : opts.modal ? opts.modal : false,\n                    \"resizable\": opts.resizable ? opts.resizable : true,\n                    \"width\": opts.width+20,\n                    resize: function (e, ui) {\n                        var $container = $(this).find('&gt;div&gt;div.ui-multiselect'),\n                            containerWidth = $container.width(),\n                            containerHeight = $container.height(),\n                            $selectedContainer = $container.find('&gt;div.selected'),\n                            $availableContainer = $container.find('&gt;div.available'),\n                            $selectedActions = $selectedContainer.find('&gt;div.actions'),\n                            $availableActions = $availableContainer.find('&gt;div.actions'),\n                            $selectedList = $selectedContainer.find('&gt;ul.connected-list'),\n                            $availableList = $availableContainer.find('&gt;ul.connected-list'),\n                            dividerLocation = opts.msel_opts.dividerLocation || $.ui.multiselect.defaults.dividerLocation;\n\n                        $container.width(containerWidth); // to fix width like 398.96px                     \n                        $availableContainer.width(Math.floor(containerWidth*(1-dividerLocation)));\n                        $selectedContainer.width(containerWidth - $availableContainer.outerWidth() - ($.browser.webkit ? 1: 0));\n\n                        $availableContainer.height(containerHeight);\n                        $selectedContainer.height(containerHeight);\n                        $selectedList.height(Math.max(containerHeight-$selectedActions.outerHeight()-1,1));\n                        $availableList.height(Math.max(containerHeight-$availableActions.outerHeight()-1,1));\n                    }\n                }, opts.dialog_opts || {});\n            },\n            /* Function to get the permutation array, and pass it to the\n               \"done\" function */\n            \"apply_perm\" : function() {\n                $('option',select).each(function(i) {\n                    if (this.selected) {\n                        self.jqGrid(\"showCol\", colModel[this.value].name);\n                    } else {\n                        self.jqGrid(\"hideCol\", colModel[this.value].name);\n                    }\n                });\n\n                var perm = [];\n                //fixedCols.slice(0);\n                $('option:selected',select).each(function() { perm.push(parseInt(this.value,10)); });\n                $.each(perm, function() { delete colMap[colModel[parseInt(this,10)].name]; });\n                $.each(colMap, function() {\n                    var ti = parseInt(this,10);\n                    perm = insert(perm,ti,ti);\n                });\n                if (opts.done) {\n                    opts.done.call(self, perm);\n                }\n            },\n            /* Function to cleanup the dialog, and select. Also calls the\n               done function with no permutation (to indicate that the\n               columnChooser was aborted */\n            \"cleanup\" : function(calldone) {\n                call(opts.dlog, selector, 'destroy');\n                call(opts.msel, select, 'destroy');\n                selector.remove();\n                if (calldone &amp;&amp; opts.done) {\n                    opts.done.call(self);\n                }\n            },\n            \"msel_opts\" : {}\n        }, $.jgrid.col, opts || {});\n        if($.ui) {\n            if ($.ui.multiselect ) {\n                if(opts.msel == \"multiselect\") {\n                    if(!$.jgrid._multiselect) {\n                        // should be in language file\n                        alert(\"Multiselect plugin loaded after jqGrid. Please load the plugin before the jqGrid!\");\n                        return;\n                    }\n                    opts.msel_opts = $.extend($.ui.multiselect.defaults,opts.msel_opts);\n                }\n            }\n        }\n        if (opts.caption) {\n            selector.attr(\"title\", opts.caption);\n        }\n        if (opts.classname) {\n            selector.addClass(opts.classname);\n            select.addClass(opts.classname);\n        }\n        if (opts.width) {\n            $(\"&gt;div\",selector).css({\"width\": opts.width,\"margin\":\"0 auto\"});\n            select.css(\"width\", opts.width);\n        }\n        if (opts.height) {\n            $(\"&gt;div\",selector).css(\"height\", opts.height);\n            select.css(\"height\", opts.height - 10);\n        }\n        var colModel = self.jqGrid(\"getGridParam\", \"colModel\");\n        var colNames = self.jqGrid(\"getGridParam\", \"colNames\");\n        var colMap = {}, fixedCols = [];\n\n        select.empty();\n        $.each(colModel, function(i) {\n            colMap[this.name] = i;\n            if (this.hidedlg) {\n                if (!this.hidden) {\n                    fixedCols.push(i);\n                }\n                return;\n            }\n\n            select.append(\"&lt;option value='\"+i+\"' \"+\n                          (this.hidden?\"\":\"selected='selected'\")+\"&gt;\"+colNames[i]+\"&lt;/option&gt;\");\n        });\n        function call(fn, obj) {\n            if (!fn) { return; }\n            if (typeof fn == 'string') {\n                if ($.fn[fn]) {\n                    $.fn[fn].apply(obj, $.makeArray(arguments).slice(2));\n                }\n            } else if ($.isFunction(fn)) {\n                fn.apply(obj, $.makeArray(arguments).slice(2));\n            }\n        }\n\n        var dopts = $.isFunction(opts.dlog_opts) ? opts.dlog_opts.call(self, opts) : opts.dlog_opts;\n        call(opts.dlog, selector, dopts);\n        var mopts = $.isFunction(opts.msel_opts) ? opts.msel_opts.call(self, opts) : opts.msel_opts;\n        call(opts.msel, select, mopts);\n        // fix height of elements of the multiselect widget\n        var resizeSel = \"#colchooser_\"+$.jgrid.jqID(self[0].p.id),\n            $container = $(resizeSel + '&gt;div&gt;div.ui-multiselect'),\n            $selectedContainer = $(resizeSel + '&gt;div&gt;div.ui-multiselect&gt;div.selected'),\n            $availableContainer = $(resizeSel + '&gt;div&gt;div.ui-multiselect&gt;div.available'),\n            containerHeight,\n            $selectedActions = $selectedContainer.find('&gt;div.actions'),\n            $availableActions = $availableContainer.find('&gt;div.actions'),\n            $selectedList = $selectedContainer.find('&gt;ul.connected-list'),\n            $availableList = $availableContainer.find('&gt;ul.connected-list');\n        $container.height($container.parent().height()); // increase the container height\n        containerHeight = $container.height();\n        $selectedContainer.height(containerHeight);\n        $availableContainer.height(containerHeight);\n        $selectedList.height(Math.max(containerHeight-$selectedActions.outerHeight()-1,1));\n        $availableList.height(Math.max(containerHeight-$availableActions.outerHeight()-1,1));\n        // extend the list of components which will be also-resized\n        selector.data('dialog').uiDialog.resizable(\"option\", \"alsoResize\",\n            resizeSel + ',' + resizeSel +'&gt;div' + ',' + resizeSel + '&gt;div&gt;div.ui-multiselect');\n    }\n});\n</code></pre>\n\n<p>In the case you can continue to use the original minimized version of <code>jquery.jqGrid.min.js</code> and the code which use can be just <code>$(this).jqGrid('columnChooser');</code>. Together with all default settings it will be like</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$.extend(true, $.ui.multiselect, {\n    locale: {\n        addAll: 'Make all visible',\n        removeAll: 'Hidde All',\n        itemsCount: 'Avlialble Columns'\n    }\n});\n$.extend(true, $.jgrid.col, {\n    width: 450,\n    modal: true,\n    msel_opts: {dividerLocation: 0.5},\n    dialog_opts: {\n        minWidth: 470,\n        show: 'blind',\n        hide: 'explode'\n    }\n});\n$grid.jqGrid('navButtonAdd', '#pager', {\n    caption: \"\",\n    buttonicon: \"ui-icon-calculator\",\n    title: \"Choose columns\",\n    onClickButton: function () {\n        $(this).jqGrid('columnChooser');\n    }\n});\n</code></pre>\n\n<p><a href=\"http://www.ok-soft-gmbh.com/jqGrid/SimpleLocalGridWithColumnChooser5__.htm\">The demo</a> demonstrate the approach. The main advantage of the changes - the really resizable Column Chooser:</p>\n\n<p><img src=\"http://i.stack.imgur.com/Mu7z8.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>I get the following error while trying the code on the mobile device. </p>\n\n<pre><code>Result of expression 'selector.data('dialog').uiDialog' [undefined] is not an object.\n</code></pre>\n\n<p>The error points to the following line of code. </p>\n\n<pre><code>selector.data('dialog').uiDialog.resizable(\"option\", \"alsoResize\", resizeSel + ',' + resizeSel +'&gt;div' + ',' + resizeSel + '&gt;div&gt;div.ui-multiselect');\n</code></pre>\n\n<p>When I inspect the code, I find that the data object does not have anything called uiDialog. </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Looking off this <a href=\"http://www.ok-soft-gmbh.com/jqGrid/SimpleLocalGridWithColumnChooser5.htm\" rel=\"nofollow\"><strong>example</strong></a>, notice how clicking on the Search button brings up a modal form with a darkened overlay behind it. Now notice how clicking on the Column Chooser button brings up a modal form but no overlay behind it. </p>\n\n<p>My question is: how do I get the dark overlay to appear behind my Column Chooser popup?</p>\n",
            "last_activity_date": 1335981678,
            "question_id": 9687201,
            "score": 4,
            "tags": [
                "javascript",
                "jquery",
                "jqgrid"
            ],
            "title": "jQGrid Column Chooser Modal Overlay"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Just suggesting how you can do it --</p>\n\n<pre><code>&lt;select name=\"country\" id=\"country\" onChange=\"showState();\" &gt;\n&lt;option value=\"\"&gt;Select Country&lt;/option&gt;\n&lt;option value=\"1\"&gt;India&lt;/option&gt;\n&lt;option value=\"2\"&gt;Nepal&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>Your Script--</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction showState( )\n{\nvar value = document.getElementById('country').value;\nvar url = '&lt;?php echo base_url ?&gt;showstate.php';\n$.ajax({\ntype: \"GET\",\nurl: url,\ndata:{'country':value},\nsuccess:function(results)\n{   \n    $('#div_state').html(results);\n}\n});\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>Your <code>showstate.php</code> php page --</p>\n\n<pre><code>//INCLUDE CONNECTION file to for db query\n$type = $_GET['country'];\n\n//Your DB QUERIES\n//Your data on Get condition\n/*USING SWITCH--\nswitch ($type) {\ncase \"India\":\n    echo \"I m in India\";\n    break;\ncase \"Nepal\":\n    echo \"I am in Nepal\";\n    break;\n</code></pre>\n\n<p>This will load the content in your <code>#div_state</code> div. You can also use Jquery For this..i think this will help you :) an d let me know if you have any query.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>2 Working Demo for your code</strong> <code>:)</code> <a href=\"http://jsfiddle.net/PnSCL/2/\" rel=\"nofollow\">http://jsfiddle.net/PnSCL/2/</a> <strong>OR</strong> <a href=\"http://jsfiddle.net/PnSCL/\" rel=\"nofollow\">http://jsfiddle.net/PnSCL/</a></p>\n\n<p>It is achievable but you need to make a relationship between first and second select. </p>\n\n<p>Please take a look in here as well: <a href=\"http://api.jquery.com/data/\" rel=\"nofollow\">http://api.jquery.com/data/</a></p>\n\n<p>I have added <code>label</code> for relationship here <a href=\"http://jsfiddle.net/PnSCL/2/\" rel=\"nofollow\">http://jsfiddle.net/PnSCL/2/</a> [ <a href=\"http://www.w3schools.com/tags/tag_option.asp\" rel=\"nofollow\">http://www.w3schools.com/tags/tag_option.asp</a> ]</p>\n\n<p><strong>Behaviour</strong> When you will select <code>first</code> option from select1 then it will show <code>smartphone, chargers</code> otherwise when user will select <code>second</code> from select1 it will show <code>baskeball, voleyball</code> in select2. </p>\n\n<p>Hope this helps, Please let me know if I missed anything.</p>\n\n<p><strong>Demo 1</strong></p>\n\n<p><strong>Code</strong></p>\n\n<pre><code>$(\"#category\").change(function() {\nif($(this).data('options') == undefined){\n    /*Taking an array of all options-2 and kind of embedding it on the select1*/\n    $(this).data('options',$('#select2 option').clone());\n    }\nvar id = $(this).val();\nvar options = $(this).data('options').filter('[label=' + id + ']');\n$('#select2').html(options);\n   // alert(options);\n});\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;select name=\"select1\" id=\"category\"&gt;\n    &lt;option value=\"0\"&gt;None&lt;/option&gt;\n    &lt;option value=\"1\"&gt;First&lt;/option&gt;\n    &lt;option value=\"2\"&gt;Second&lt;/option&gt;\n    &lt;option value=\"3\"&gt;Third&lt;/option&gt;\n    &lt;option value=\"4\"&gt;Fourth&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;select name=\"items\" id=\"select2\"&gt;\n\n    &lt;option value=\"3\" label=\"1\"&gt;Smartphone&lt;/option&gt;\n    &lt;option value=\"8\" label=\"1\"&gt;Charger&lt;/option&gt;\n\n    &lt;option value=\"1\" label=\"2\"&gt;Basketball&lt;/option&gt;\n    &lt;option value=\"4\" label=\"2\"&gt;Volleyball&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p><strong>DEMO 2</strong>\n*<em>code</em>*</p>\n\n<pre><code>$(\"#category\").change(function() {\nif($(this).data('options') == undefined){\n    /*Taking an array of all options-2 and kind of embedding it on the select1*/\n    $(this).data('options',$('#select2 option').clone());\n    }\nvar id = $(this).val();\nvar options = $(this).data('options').filter('[value=' + id + ']');\n$('#select2').html(options);\n    alert(options);\n});\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;select name=\"select1\" id=\"category\"&gt;\n    &lt;option value=\"0\"&gt;None&lt;/option&gt;\n    &lt;option value=\"1\"&gt;First&lt;/option&gt;\n    &lt;option value=\"2\"&gt;Second&lt;/option&gt;\n    &lt;option value=\"3\"&gt;Third&lt;/option&gt;\n    &lt;option value=\"4\"&gt;Fourth&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;select name=\"items\" id=\"select2\"&gt;\n\n    &lt;option value=\"1\"&gt;Smartphone&lt;/option&gt;\n    &lt;option value=\"1\"&gt;Charger&lt;/option&gt;\n\n    &lt;option value=\"2\"&gt;Basketball&lt;/option&gt;\n    &lt;option value=\"2\"&gt;Volleyball&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>See below to see the <strong>Working Example without using a Database</strong>.</p>\n\n<h2>Working Example Using MySQL Database</h2>\n\n<p>If you wanna connect it using Database, yeah, it is surely possible. Consider this table:</p>\n\n<pre><code>CREATE TABLE `contents` (\n    `id` INT PRIMARY KEY AUTO_INCREMENT,\n    `name` VARCHAR (255),\n    `parent` INT DEFAULT 0\n);\n\nINSERT INTO `contents` (`name`, `parent`) VALUES\n    ('Names', 0),\n    ('Places', 0),\n    ('Animals', 0),\n    ('Praveen', 1),\n    ('Bill Gates', 1),\n    ('Steve Jobs', 1),\n    ('India', 2),\n    ('New York', 2),\n    ('London', 2),\n    ('Singapore', 2),\n    ('Cat', 3),\n    ('Dog', 3),\n    ('Tiger', 3),\n    ('Deer', 3)\n</code></pre>\n\n<h2>Table Structure</h2>\n\n<pre><code>+----+------------+--------+\n| id | name       | parent |\n+----+------------+--------+\n|  1 | Names      |      0 |\n|  2 | Places     |      0 |\n|  3 | Animals    |      0 |\n|  4 | Praveen    |      1 |\n|  5 | Bill Gates |      1 |\n|  6 | Steve Jobs |      1 |\n|  7 | India      |      2 |\n|  8 | New York   |      2 |\n|  9 | London     |      2 |\n| 10 | Singapore  |      2 |\n| 11 | Cat        |      3 |\n| 12 | Dog        |      3 |\n| 13 | Tiger      |      3 |\n| 14 | Deer       |      3 |\n+----+------------+--------+\n</code></pre>\n\n<h2>Initial HTML &amp; PHP Code</h2>\n\n<p>Now, lets use PHP to first populate the initial <code>&lt;select&gt;</code>:</p>\n\n<pre><code>&lt;?php\n    mysql_connect();\n    mysql_select_db(\"contents\");\n    $result = mysql_query(\"SELECT * FROM `contents` WHERE `parent` = 0\");\n    while(($data = mysql_fetch_array($result)) !== false)\n        echo '&lt;option value=\"', $data['id'],'\"&gt;', $data['name'],'&lt;/option&gt;'\n?&gt;\n</code></pre>\n\n<p>Now the <code>&lt;select&gt;</code> is ready. With its onchange function, we can fire an AJAX event to get the new <code>&lt;select&gt;</code> with the data provided by the parent <code>&lt;select&gt;</code>.</p>\n\n<pre><code>&lt;select onchange=\"ajaxfunction(this.value)\"&gt;\n    &lt;!-- Options would have been initially populated here --&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>Now for the jQuery function, you can do this way:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function ajaxfunction(parent)\n    {\n        $.ajax({\n            url: 'process.php?parent=' + parent;\n            success: function(data) {\n                $(\"#sub\").html(data);\n            }\n        });\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>In the HTML, after the <code>&lt;select&gt;</code>, you need to give another <code>select</code> with an <code>id</code> as <code>sub</code>.</p>\n\n<pre><code>&lt;select onchange=\"ajaxfunction(this.value)\"&gt;\n    &lt;!-- Options would have been initially populated here --&gt;\n&lt;/select&gt;\n&lt;select id=\"sub\"&gt;&lt;/select&gt;\n</code></pre>\n\n<h2>Processing PHP Source Code</h2>\n\n<p>Finally the source code of <code>process.php</code>:</p>\n\n<pre><code>&lt;?php\n    mysql_connect();\n    mysql_select_db(\"contents\");\n    $result = mysql_query(\"SELECT * FROM `contents` WHERE `parent` = \" . mysql_real_escape_string($_GET[\"parent\"]));\n    while(($data = mysql_fetch_array($result)) !== false)\n        echo '&lt;option value=\"', $data['id'],'\"&gt;', $data['name'],'&lt;/option&gt;'\n?&gt;\n</code></pre>\n\n<h2>Working Example without using a Database</h2>\n\n<p>You just need to replace this in the PHP.</p>\n\n<pre><code>&lt;?php\n    $parent = array(\"Name\", \"Place\", \"Animals\");\n    foreach ($parent as $id =&gt; $name)\n        echo '&lt;option value=\"s', $id,'\"&gt;', $name,'&lt;/option&gt;'\n?&gt;\n</code></pre>\n\n<p>And for the <code>process.php</code>:</p>\n\n<pre><code>&lt;?php\n    $parent = array(\"Name\", \"Place\", \"Animals\");\n    $s0 = array(\"Praveen\", \"Bill Gates\", \"Steve Jobs\");\n    foreach (${$_GET[\"parent\"]} as $id =&gt; $name)\n        echo '&lt;option value=\"', $data['id'],'\"&gt;', $data['name'],'&lt;/option&gt;'\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Here is another example, basically all the data is on the page in an object and you use it to display the different catagories  <a href=\"http://jsfiddle.net/CxYMB/\" rel=\"nofollow\">FIDDLE</a></p>\n\n<pre><code>var categories = {\n    \"None\":[{value:'3', text:'No cataegory selected'}],\n    \"First\":[{value:'1', text:'Bmw'},{value:'2', text:'Benz'}],\n    \"Second\":[{value:'4', text:'Playstation'},{value:'5', text:'Xbox'},{value:'10', text:'Wii'}],\n    \"Third\":[{value:'6', text:'Dell'},{value:'7', text:'Acer'}],\n    \"Fourth\":[{value:'8', text:'Audi'},{value:'9', text:'Datsun'}]\n};\nfunction selectchange(){\n    var select = $('[name=items]');\n    select.empty();\n    $.each(categories[$(':selected', this).text()], function(){\n        select.append('&lt;option value=\"'+this.value+'\"&gt;'+this.text+'&lt;/option&gt;');\n    });\n}\n$(function(){\n    $('[name=category]').on('change', selectchange);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The part about the database isn't really clear, since the selects would presumably be \"listed\" in some fashion. If you have them in some other format, that makes sense, or if you're asking if a call back to the database (postback) is necessary, the answer is no. But it's not clear what you mean.</p>\n\n<p>Anyhow, you could use a <code>rel=\"\"</code> value (or <code>data-items=\"\"</code>) to set the relationship between the one select to the other. </p>\n\n<p>For example:</p>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>.cascade {\n    display: none;\n}\n</code></pre>\n\n<p><strong>HTML - Modified</strong></p>\n\n<pre><code>&lt;select name=\"category\"&gt;\n    &lt;option value=\"0\"&gt;None&lt;/option&gt;\n    &lt;option value=\"1\" rel=\"accessories\"&gt;Cellphones&lt;/option&gt;\n    &lt;option value=\"2\" rel=\"sports\"&gt;Sports&lt;/option&gt;\n    &lt;option value=\"3\" rel=\"cars\"&gt;Cars&lt;/option&gt;\n&lt;/select&gt;\n&lt;select name=\"items\" class=\"cascade\"&gt;\n    &lt;option value=\"3\" class=\"accessories\"&gt;Smartphone&lt;/option&gt;\n    &lt;option value=\"8\" class=\"accessories\"&gt;Charger&lt;/option&gt;\n    &lt;option value=\"1\" class=\"sports\"&gt;Basketball&lt;/option&gt;\n    &lt;option value=\"4\" class=\"sports\"&gt;Volleyball&lt;/option&gt;\n    &lt;option value=\"6\" class=\"cars\"&gt;Corvette&lt;/option&gt;\n    &lt;option value=\"2\" class=\"cars\"&gt;Monte Carloe&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p><strong>jQuery</strong></p>\n\n<pre><code>$(document).ready(function(){\n    var $cat = $('select[name=category]'),\n        $items = $('select[name=items]');\n\n    $cat.change(function(){\n        var $this = $(this).find(':selected'),\n            rel = $this.attr('rel'),\n            $set = $items.find('option.' + rel);\n\n        if ($set.size() &lt; 0) {\n            $items.hide();\n            return;\n        }\n\n        $items.show().find('option').hide();\n\n        $set.show().first().prop('selected', true);\n    });\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/userdude/bY5LF/\" rel=\"nofollow\">http://jsfiddle.net/userdude/bY5LF/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Working solution without using any Database:</strong></p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;select name=\"country\" id=\"country\" onChange=\"showState();\"&gt;   \n    &lt;option value=\"\"&gt;Select Country&lt;/option&gt;\n    &lt;option value=\"1\"&gt;Pakistan&lt;/option&gt;\n    &lt;option value=\"2\"&gt;Saudi Arabia&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;div id=\"div_state\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p><strong>Jquery</strong></p>\n\n<pre><code>&lt;script&gt;\n    function showState()\n    {\n        $('body').css('cursor','wait');\n        var value = document.getElementById('country').value;\n        var url = 'http://fiddle.jshell.net/rathoreahsan/WcKQ2/4/show/';\n\n        $.ajax({\n            type: \"GET\",\n            url: url,\n            data:{'country':value},\n            success:function(results)\n            {              \n\n                $('#div_state').html(results);\n\n                if (value == \"1\") \n                {\n                    $('#PK').css('display','block')                \n                } \n\n                else if (value == \"2\") \n                {\n                    $('#SA').css('display','block')                        \n                }\n\n                $('body').css('cursor','default');            \n\n            }\n        });\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>#PK, #SA { display: none; }\n</code></pre>\n\n<p><strong>SEE DEMO</strong> <a href=\"http://jsfiddle.net/rathoreahsan/WyLsh/\" rel=\"nofollow\">http://jsfiddle.net/rathoreahsan/WyLsh/</a></p>\n\n<p><strong>States Page:</strong> <a href=\"http://fiddle.jshell.net/rathoreahsan/WcKQ2/4/show/\" rel=\"nofollow\">http://fiddle.jshell.net/rathoreahsan/WcKQ2/4/show/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>$(document).ready(function(){\n        $('#causes').change(function(){</p>\n\n<pre><code>         $.getJSON(\"&lt;?=URL.$param-&gt;module.\"/\".$param-&gt;controller?&gt;/getcourtcauses\",{causeId:  $(this).val()}, function(j){ \n\n        var options = '';\n        if(j.length &gt; 1 )\n        {\n            for (var i = 0; i &lt; j.length; i++) {\n                options += '&lt;option value=\"' + j[i].optionValue + '\"&gt;' + j[i].optionDisplay + '&lt;/option&gt;';\n            }\n            if($('#subcauses').hide())\n                {\n                    $('#subcauses').show();\n                }\n                $('#subcauses').attr('disabled', false);\n            $(\"#subcauses\").html(\"\");\n            $(\"#subcauses\").html(options);\n         }\n        else\n            {\n                $('#subcauses')\n                    .find('option')\n                    .remove()\n                    .end();\n                 $('#subcauses').attr('disabled', true);\n            }\n        });  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I have two drop down menus where the options are not get from the database.</p>\n\n<p>The first one, lets the user to select a category.</p>\n\n<pre><code>&lt;select name=\"category\"&gt;\n    &lt;option value=\"0\"&gt;None&lt;/option&gt;\n    &lt;option value=\"1\"&gt;First&lt;/option&gt;\n    &lt;option value=\"2\"&gt;Second&lt;/option&gt;\n    &lt;option value=\"3\"&gt;Third&lt;/option&gt;\n    &lt;option value=\"4\"&gt;Fourth&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>The options of the second, are depended from the choice in the first dropdown menu. For example, if the user chooses the <strong>First</strong> option then the second dropdown will show</p>\n\n<pre><code>&lt;select name=\"items\"&gt;\n    &lt;option value=\"3\"&gt;Smartphone&lt;/option&gt;\n    &lt;option value=\"8\"&gt;Charger&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>but when the user change his mind, or select the <strong>second</strong> option first, then the second dropdown will now show </p>\n\n<pre><code>&lt;select name=\"items\"&gt;\n    &lt;option value=\"1\"&gt;Basketball&lt;/option&gt;\n    &lt;option value=\"4\"&gt;Volleyball&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>My question is how can I achieve this ? Can this be done without using a database? </p>\n\n<p>Thank you!</p>\n",
            "last_activity_date": 1417361282,
            "question_id": 11237900,
            "score": 3,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "html"
            ],
            "title": "First drop down menu to auto change the options of a second dropdown"
        }
    ]
}
