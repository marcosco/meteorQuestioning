{
    "items": [
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Because you don't want users posting JavaScript that the browser actually executes?</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>users may post malicious code (malicious users) that if left unescaped will potentially get executed, allowing users to control your application.</p>\n\n<p>try this:</p>\n\n<pre><code>&lt;% variable = '\"); alert(\"hi there' %&gt;\n$(\"#reviews\").append(\"&lt;%= variable %&gt;\");\n</code></pre>\n\n<p>not really familiar with the syntax of rails, but if you don't escape <code>variable</code> then an alert box will show, and i dont think that is intended behaviour.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>It's easier to understand if you split the code in two parts.</p>\n\n<p>The first part <code>$(\"#reviews\").append(\"&lt;%= ... %&gt;\");</code> is javascript with erb. This means that the <code>&lt;%= ... %&gt;</code> will be replaced by whatever the ruby code inside of it returns. The result of that replacement must be valid javascript, otherwise it will throw an error when the client tries to process it. So that's the first thing: you need <em>valid javascript</em>.</p>\n\n<p>Another thing to take into account is that whatever ruby generates must be contained inside a javascript string with double quotes - notice the double quotes around the <code>&lt;%= ... %&gt;</code>. This means that the generated javascript will look like this:</p>\n\n<pre><code>$(\"#reviews\").append(\"...\");\n</code></pre>\n\n<p>Now let's examine the ruby part inside the <code>&lt;%= ... %&gt;</code>. What does <code>render(:partial =&gt; @review)</code> do? It is rendering a partial - which means that it could be rendering any kind of code - html, css ... or even more javascript!</p>\n\n<p>So, what happens if our partial contains some simple html, like this one?</p>\n\n<pre><code>&lt;a href=\"/mycontroller/myaction\"&gt;Action!&lt;/a&gt; \n</code></pre>\n\n<p>Remember that your javascript was taking a double-quoted string as a parameter? If we simply replace the <code>&lt;%= ... %&gt;</code> with the code of that partial, then we have a problem - immediately after the <code>href=</code> there is a double quote! The javascript will not be valid:</p>\n\n<pre><code>// Without escaping, you get a broken javascript string at href\n$(\"#reviews\").append(\"&lt;a href=\"/mycontroller/myaction\"&gt;Action!&lt;/a&gt;\");\n</code></pre>\n\n<p>In order for this not to happen, you want to <em>escape</em> these special characters so your string is not cut - you need something that generates this instead:</p>\n\n<pre><code>&lt;a href=\\\"/mycontroller/myaction\\\"&gt;Action!&lt;/a&gt;\n</code></pre>\n\n<p>This what <code>escape_javascript</code> does. It makes sure that the string returned will not \"break\" javascript. If you use it, you will get the desired output:</p>\n\n<pre><code>$(\"#reviews\").append(\"&lt;a href=\\\"/mycontroller/myaction\\\"&gt;Action!&lt;/a&gt;\")\n</code></pre>\n\n<p>Regards!</p>\n",
                    "is_accepted": false,
                    "score": 199
                },
                {
                    "body": "<p>If you look at the source <a href=\"http://apidock.com/rails/ActionView/Helpers/JavaScriptHelper/escape_javascript\" rel=\"nofollow\">here</a>, it will be much clearer.</p>\n\n<p>This function accomplishes the following two things:</p>\n\n<ol>\n<li><p>It substitutes the characters in the input string with the ones\ndefined in <a href=\"http://api.rubyonrails.org/classes/ActionView/Helpers/JavaScriptHelper.html\" rel=\"nofollow\">JS_ESCAPE_MAP</a></p>\n\n<p>The purpose of this is to make sure that the javascript code is\nserialized correctly without interfering with the outer string\nwithin which it is being embedded.  For example if you have a\njavascript string in double quotes then all the quotes within for\nstring literals must be in single quotes to avoid the code from\nbreaking.</p></li>\n<li>The function also checks if the resulting string is html safe. \nIf it is not then it does the necessary escaping to make sure that\nthe string becomes html safe and returns the result.</li>\n</ol>\n\n<p>When you are using escape_javascript, it is usually being embedded within another string or existing html dynamically.  You need to make sure that doing this will not make your entire page not render.  </p>\n\n<p>Some aspects of this response were pointed out in other responses but I wanted to bring all the items together include the difference between javascript escaping and html escaping.  Also, some responses allude that this function helps to avoid script injection.  I don't think that is the purpose of this function.  For example, in your review if your review has alert('hi there'), just appending it to the  node will not fire the pop-up.  You are not embedding it within a function that is triggered on page load or through some other event.  Merely having alert('hi there') as part of your html does not mean that it will execute as javascript. </p>\n\n<p>That said I am not denying that script injection is not possible.  But to avoid that you need to take steps when you take the user data and store it in your database.  The function and example you are providing are related to rendering the information, which was already saved.</p>\n\n<p>I hope this helps and answers your question.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It escapes special chacacters of what you are rendering</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm looking at <a href=\"http://railscasts.com/episodes/136-jquery\">this Railscast episode</a> and wondering why the call to <code>escape_javascript</code> is needed here:</p>\n\n<pre><code>$(\"#reviews\").append(\"&lt;%= escape_javascript(render(:partial =&gt; @review)) %&gt;\");\n</code></pre>\n\n<p>What is <code>escape_javascript</code> used for?</p>\n\n<p>According to <a href=\"http://api.rubyonrails.org/classes/ActionView/Helpers/JavaScriptHelper.html#M001758\">the Rails docs</a>:</p>\n\n<blockquote>\n  <p>escape_javascript(javascript)</p>\n  \n  <p>Escape carrier returns and single and\n  double quotes for JavaScript segments.</p>\n</blockquote>\n\n<p>But that doesn't mean much to me.</p>\n",
            "last_activity_date": 1400278871,
            "question_id": 1620113,
            "score": 79,
            "tags": [
                "javascript",
                "ruby-on-rails"
            ],
            "title": "Why escape_javascript before rendering a partial?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No, there is not really any other way : if you have many locations and want to display them on a map, the best solution is to :</p>\n\n<ul>\n<li>fetch the latitude+longitude, using the geocoder, when a location is created</li>\n<li>store those in your database, alongside the address</li>\n<li>and use those stored latitude+longitude when you want to display the map.</li>\n</ul>\n\n<p>This is, of course, considering that you have a lot less creation/modification of locations than you have consultations of locations.</p>\n\n<p><br>\nYes, it means you'll have to do a bit more work when saving the locations -- but it also means :</p>\n\n<ul>\n<li>You'll be able to search by geographical coordinates\n<ul>\n<li>i.e. \"<em>I want a list of points that are near where I'm now</em>\"</li>\n</ul></li>\n<li>Displaying the map will be a lot faster\n<ul>\n<li>Even with more than 20 locations on it</li>\n</ul></li>\n<li>Oh, and, also <em>(last but not least)</em> : this will work ;-)\n<ul>\n<li>You will less likely hit the limit of X geocoder calls in N seconds.</li>\n<li>And you will less likely hit the limit of Y geocoder calls per day.</li>\n</ul></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 57
                },
                {
                    "body": "<p>Unfortunately this is a restriction of the Google maps service.</p>\n\n<p>I am currently working on an application using the geocoding feature, and I'm saving each unique address on a per-user basis.  I generate the address information (city, street, state, etc) based on the information returned by Google maps, and then save the lat/long information in the database as well. This prevents you from having to re-code things, and gives you nicely formatted addresses.</p>\n\n<p>Another reason you want to do this is because there is a daily limit on the number of addresses that can be geocoded from a particular IP address. You don't want your application to fail for a person for that reason.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I'm facing the same problem trying to geocode 140 addresses. </p>\n\n<p>My workaround was adding <strong>usleep(100000)</strong> for each loop of next geocoding request. If status of the request is OVER_QUERY_LIMIT, the usleep is increased by 50000 and request is repeated, and so on.</p>\n\n<p>And of cause all received data (lat/long) are stored in XML file not to run request every time the page is loading.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I have just tested Google Geocoder and got the same problem as you have. \nI noticed I only get the OVER_QUERY_LIMIT status once every 12 requests\nSo I wait for 1 second (that's the minimum delay to wait)\nIt slows down the application but less than waiting 1 second every request</p>\n\n<pre><code>info = getInfos(getLatLng(code)); //In here I call Google API\nrecord(code, info);\ngenerated++; \nif(generated%interval == 0) {\nholdOn(delay); // Every x requests, I sleep for 1 second\n}\n</code></pre>\n\n<p>With the basic holdOn method :</p>\n\n<pre><code>private void holdOn(long delay) {\n        try {\n            Thread.sleep(delay);\n        } catch (InterruptedException ex) {\n            // ignore\n        }\n    }\n</code></pre>\n\n<p>Hope it helps</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You actually do not have to wait a full second for each request.  I found that if I wait 200 miliseconds between each request I am able to avoid the OVER_QUERY_LIMIT response and the user experience is passable.  With this solution you can load 20 items in 4 seconds.</p>\n\n<pre><code>$(items).each(function(i, item){\n\n  setTimeout(function(){\n\n    geoLocate(\"my address\", function(myLatlng){\n      ...\n    });\n\n  }, 200);\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>Using the Google Geocoder v3, if I try to geocode 20 addresses, I get an OVER_QUERY_LIMIT unless I time them to be ~1 second apart, but then it takes 20 seconds before my markers are all placed.</p>\n\n<p>Is there any other way to do it, other than storing the coordinates in advance?</p>\n",
            "last_activity_date": 1378517385,
            "question_id": 2419219,
            "score": 64,
            "tags": [
                "javascript",
                "geocoding",
                "google-maps"
            ],
            "title": "How do I Geocode 20 addresses without receiving an OVER_QUERY_LIMIT response?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Use <a href=\"http://yepnopejs.com/\" rel=\"nofollow\">yepnope.js</a> or <a href=\"http://modernizr.com/\" rel=\"nofollow\">Modernizr</a> (which includes yepnope.js as <code>Modernizr.load</code>).</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Just to follow up, here's a good equivalent of what you currently have using yepnope, showing dependencies on multiple scripts:</p>\n\n<pre><code>yepnope({\n  load: ['script1.js', 'script2.js', 'script3.js'],\n  complete: function () {\n      // all the scripts have loaded, do whatever you want here\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>What you are looking for is an AMD compliant loader (like require.js).</p>\n\n<p><a href=\"http://requirejs.org/\" rel=\"nofollow\">http://requirejs.org/</a></p>\n\n<p><a href=\"http://requirejs.org/docs/whyamd.html\" rel=\"nofollow\">http://requirejs.org/docs/whyamd.html</a></p>\n\n<p>There are many good open source ones if you look it up. Basically this allows you to define a module of code, and if it is dependent on other modules of code, it will wait until those modules have finished downloading before proceeding to run. This way you can load 10 modules asynchronously and there should be no problems even if one depends on a few of the others to run.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use promises with <code>getScript()</code> and wait until all the scripts are loaded, something like:</p>\n\n<pre><code>$.when(\n    $.getScript( \"/mypath/myscript1.js\" ),\n    $.getScript( \"/mypath/myscript2.js\" ),\n    $.getScript( \"/mypath/myscript3.js\" ),\n    $.Deferred(function( deferred ){\n        $( deferred.resolve );\n    })\n).done(function(){\n\n    //place your code here, the scripts are all loaded\n\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/9whzy/\">FIDDLE</a></p>\n\n<p><a href=\"http://jsfiddle.net/9whzy/1/\">ANOTHER FIDDLE</a> \u200b</p>\n",
                    "is_accepted": true,
                    "score": 124
                },
                {
                    "body": "<p>Load the following up needed script in the callback of the previous one like:</p>\n\n<pre><code>$.getScript('scripta.js', function()\n{\n   $.getScript('scriptb.js', function()\n   {\n       // run script that depends on scripta.js and scriptb.js\n   });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I ran into a number of issues with multi script loading inculding one issue with (at least in Chrome) same domain hot loading of scripts not actually running after being successfully loaded by Ajax where as Cross Domain works perfectly fine! :(</p>\n\n<p>The selected answer to original question does not work reliably.</p>\n\n<p>After many many iterations here is my final answer to getScript(s) and loading asynchronously multiple scripts in a specific strict order with per script loaded callback option and overall callback on completion, Tested in jQuery 2.1+ and modern versions of Chrome, Firefox plus the forsaken Internet Explorer.</p>\n\n<p>My test case was loading files for a THREE.JS webGL render then starting the render script when THREE global became available using an interval check passed to an anonymous function call to onComplete.</p>\n\n<p><strong>The Prototype function ( getScripts )</strong></p>\n\n<pre><code>function getScripts( scripts, onScript, onComplete )\n{\n    this.async = true;\n    this.cache = false;\n    this.data = null;\n    this.complete = function () { $.scriptHandler.loaded(); };\n    this.scripts = scripts;\n    this.onScript = onScript;\n    this.onComplete = onComplete;\n    this.total = scripts.length;\n    this.progress = 0;\n};\n\ngetScripts.prototype.fetch = function() {\n    $.scriptHandler = this;\n    var src = this.scripts[ this.progress ];\n    console.log('%cFetching %s','color:#ffbc2e;', src);\n\n    $.ajax({\n        crossDomain:true,\n        async:this.async,\n        cache:this.cache,\n        type:'GET',\n        url: src,\n        data:this.data,\n        statusCode: {\n            200: this.complete\n        },\n        dataType:'script'\n    });\n};\n\ngetScripts.prototype.loaded = function () {\n    this.progress++;\n    if( this.progress &gt;= this.total ) {\n        if(this.onComplete) this.onComplete();\n    } else {\n        this.fetch();\n    };\n    if(this.onScript) this.onScript();\n};\n</code></pre>\n\n<p><strong>How to use</strong></p>\n\n<pre><code>var scripts = new getScripts(\n    ['script1.js','script2.js','script.js'],\n    function() {\n        /* Optional - Executed each time a script has loaded (Use for Progress updates?) */\n    },\n    function () {\n        /* Optional - Executed when the entire list of scripts has been loaded */\n    }\n);\nscripts.fetch();\n</code></pre>\n\n<p>The function is as it is for I found using Deferred ( Deprecated now? ), When, Success &amp; Complete in my trials to NOT be 100% reliable!?, Hence this function and use of statusCode for example.</p>\n\n<p>You may want to add in error/fail handling behaviour if you wish.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Shorter version of Andrew Marc Newton's comprehensive answer above. This one does not check the status code for success, which you should do to avoid undefined UI behaviour. </p>\n\n<p>This one was for an annoying system where I could guarantee jQuery but no other includes, so I wanted a technique short enough to not be farmed off into an external script if forced into it. (You could make it even shorter by passing the index 0 to the first \"recursive\" call but force of style habits made me add the sugar).</p>\n\n<p>I'm also assigning the dependency list to a module name, so this block can be included anywhere you need \"module1\" and the scripts and dependent initialization will only be included/run once (you can log <code>index</code> in the callback and see a single ordered set of AJAX requests runnning)</p>\n\n<pre><code>if(typeof(__loaders) == 'undefined') __loaders = {};\n\nif(typeof(__loaders.module1) == 'undefined')\n{\n    __loaders.module1 = false;\n\n    var dependencies = [];\n\n    dependencies.push('/scripts/loadmefirst.js');\n    dependencies.push('/scripts/loadmenext.js');\n    dependencies.push('/scripts/loadmelast.js');\n\n    var getScriptChain  = function(chain, index)        \n    {\n        if(typeof(index) == 'undefined')\n            index = 0;\n\n        $.getScript(chain[index], \n            function()\n            {\n                if(index == chain.length - 1)\n                {\n                    __loaders.module1 = true;\n\n                    /* !!!\n                        Do your initialization of dependent stuff here \n                    !!! */\n                }\n                else \n                    getScriptChain(chain, index + 1);\n            }\n        );\n    };\n\n    getScriptChain(dependencies);       \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There's a plugin out there that extends jQuery's getScript method. Allows for asynchronous and synchronous loading and uses jQuery's caching mechanism. Full disclosure, I wrote this. Please feel free to contribute if you find a better method.</p>\n\n<p><a href=\"https://github.com/hudsonfoo/jquery-getscripts\" rel=\"nofollow\">https://github.com/hudsonfoo/jquery-getscripts</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One more implementation. Just in case :)</p>\n\n<h2>Function</h2>\n\n<pre><code>function getScripts(scripts, callback) {\n    var progress = 0;\n    var internalCallback = function () {\n        if (++progress == scripts.length) { callback(); }\n    };\n\n    scripts.forEach(function(script) { $.getScript(script, internalCallback); });\n};\n</code></pre>\n\n<h2>Usage</h2>\n\n<pre><code>getScripts([\"script1.js\", \"script2.js\"], function () { doSomething(); });\n</code></pre>\n\n<p>or even:</p>\n\n<pre><code>getScripts([\"script1.js\", \"script2.js\"], doSomething);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You could make use of the <code>$.when</code>-method by trying the following function:</p>\n\n<pre><code>function loadScripts(scripts) {\n  scripts.forEach(function (item, i) {\n    item = $.getScript(item);\n  });\n  return $.when.apply($, scripts);\n}\n</code></pre>\n\n<p>This function would be used like this:</p>\n\n<pre><code>loadScripts(['path/to/script-a.js', 'path/to/script-b.js']).done(function (respA, respB) {\n    // both scripts are loaded; do something funny\n});\n</code></pre>\n\n<p>That's the way to use Promises and have a minimum of overhead.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Loads <em>n</em> scripts one by one (useful if for example 2nd file needs the 1st one):</p>\n\n<pre><code>(function self(a,cb,i){\n    i = i || 0; \n    cb = cb || function(){};    \n    if(i==a.length)return cb();\n    $.getScript(a[i++],self.bind(0,a,cb,i));                    \n})(['list','of','script','urls'],function(){console.log('done')});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to dynamically include javascript files into my js file. I did some research about it and find jQuery $.getScript() method would be a desired way to go.</p>\n\n<pre><code>// jQuery\n$.getScript('/path/to/imported/script.js', function()\n{\n    // script is now loaded and executed.\n    // put your dependent JS here.\n    // what if the JS code is dependent on multiple JS files? \n});\n</code></pre>\n\n<p>But I am wondering whether this method can load multiple scripts at one time? Why I am asking this is because sometimes my javascript file is depending on more than one js files. </p>\n\n<p>Thank you in advance. </p>\n",
            "last_activity_date": 1408449058,
            "question_id": 11803215,
            "score": 42,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to include multiple js files using jQuery $.getScript() method"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I did not understand what exactly you're trying to do, but normally implementing object-specific behaviour is done along these lines:</p>\n\n<pre><code>function MyClass(name) {\n    this.name = name;\n}\n\nMyClass.prototype.doStuff = function() {\n    // generic behaviour\n}\n\nvar myObj = new MyClass('foo');\n\nvar myObjSpecial = new MyClass('bar');\nmyObjSpecial.doStuff = function() {\n    // do specialised stuff\n    // how to call the generic implementation:\n    MyClass.prototype.doStuff.call(this /*, args...*/);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 100
                },
                {
                    "body": "<p>If I understand correctly, you want Base functionality to always be performed, while a piece of it should be left to implementations.</p>\n\n<p>You might get helped by the '<a href=\"http://en.wikipedia.org/wiki/Template_method_pattern\" rel=\"nofollow\">template method</a>' design pattern. </p>\n\n<pre><code>Base = function() {}\nBase.prototype.do = function() { \n    // .. prologue code\n    this.impldo(); \n    // epilogue code \n}\n// note: no impldo implementation for Base!\n\nderived = new Base();\nderived.impldo = function() { /* do derived things here safely */ }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Well one way to do it would be saving the base method and then calling it from the overriden method, like so</p>\n\n<pre><code>MyClass.prototype._do_base = MyClass.prototype.do;\nMyClass.prototype.do = function(){  \n\n    if (this.name === 'something'){\n\n        //do something new\n\n    }else{\n        return this._do_base();\n    }\n\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I'm afraid your example does not work the way you think. This part:</p>\n\n<pre><code>this.do = function(){ /*do something*/ };\n</code></pre>\n\n<p>overwrites the definition of </p>\n\n<pre><code>MyClass.prototype.do = function(){ /*do something else*/ };\n</code></pre>\n\n<p>Since the newly created object already has a \"do\" property, it does not look up the prototypal chain. </p>\n\n<p>The classical form of inheritance in Javascript is awkard, and hard to grasp. I would suggest using Douglas Crockfords simple inheritance pattern instead. Like this:</p>\n\n<pre><code>function my_class(name) {\n    return {\n        name: name,\n        do: function () { /* do something */ }\n    };\n}\n\nfunction my_child(name) {\n    var me = my_class(name);\n    base_do = me.do;\n    me.do = function () {\n        if (this.name === 'something'){\n            //do something new\n        } else {\n            base_do();\n        }\n    }\n    return me;\n}\n\nvar o = my_child(\"something\");\no.do(); // does something new\n\nvar u = my_child(\"something else\");\nu.do(); // uses base function\n</code></pre>\n\n<p>In my opinion a much clearer way of handling objects, constructors and inheritance in javascript. You can read more in Crockfords <a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\">Javascript: The good parts</a>.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>No, you would need to give the do function in the constructor and the do function in the prototype different names.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know this post is from 4 years ago, but because of my C# background I was looking for a way to call the base class without having to specify the class name but rather obtain it by a property on the subclass. So my only change to <a href=\"http://stackoverflow.com/a/560952/812610\">Christoph's answer</a> would be</p>\n\n<p>From this:</p>\n\n<pre><code>MyClass.prototype.doStuff.call(this /*, args...*/);\n</code></pre>\n\n<p>To this:</p>\n\n<pre><code>this.constructor.prototype.doStuff.call(this /*, args...*/);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>function NewClass() {\n    var self = this;\n    BaseClass.call(self);          // Set base class\n\n    var baseModify = self.modify;  // Get base function\n    self.modify = function () {\n        // Override code here\n        baseModify();\n    };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>if you define a function like this (using OOP)</p>\n\n<pre><code>function Person(){};\nPerson.prototype.say = function(message){\n   console.log(message);\n}\n</code></pre>\n\n<p>there is two ways to call a prototype function: 1) make an instance and call the object function:</p>\n\n<pre><code>var person = new Person();\nperson.say('hello!');\n</code></pre>\n\n<p>and the other way is... 2) is calling the function directly from the prototype:</p>\n\n<pre><code>Person.prototype.say('hello there!');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you know your super class by name, you can do something like this:</p>\n\n<pre><code>function Base() {\n}\n\nBase.prototype.foo = function() {\n  console.log('called foo in Base');\n}\n\nfunction Sub() {\n}\n\nSub.prototype = new Base();\n\nSub.prototype.foo = function() {\n  console.log('called foo in Sub');\n  Base.prototype.foo.call(this);\n}\n\nvar base = new Base();\nbase.foo();\n\nvar sub = new Sub();\nsub.foo();\n</code></pre>\n\n<p>This will print</p>\n\n<pre><code>called foo in Base\ncalled foo in Sub\ncalled foo in Base\n</code></pre>\n\n<p>as expected.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to call the base method from a prototype method in JavaScript if it's been overridden?</p>\n\n<pre><code>MyClass = function(name){\n    this.name = name;\n    this.do = function() {\n        //do somthing \n    }\n};\n\nMyClass.prototype.do = function() {  \n    if (this.name === 'something') {\n        //do something new\n    } else {\n        //CALL BASE METHOD\n    }\n};\n</code></pre>\n",
            "last_activity_date": 1424904977,
            "question_id": 560829,
            "score": 59,
            "tags": [
                "javascript",
                "prototype",
                "override"
            ],
            "title": "Calling base method using JavaScript prototype"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The way I look at it, there's no need to mock the services themselves. Simply mock the functions on the service. That way, you can have angular inject your real services as it does throughout the app. Then, mock the functions on the service as needed using Jasmine's <code>spyOn</code> function.</p>\n\n<p>Now, if the service itself is a function, and not an object that you can use <code>spyOn</code> with, there's another way to go about it. I needed to do this, and found something that works pretty well for me. See <a href=\"http://stackoverflow.com/questions/14531904/how-do-you-mock-angular-service-that-is-a-function\">How do you mock Angular service that is a function?</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here's a great video for mocking services with dependencies in AngularJS using the Jasmine testing framework. <a href=\"http://www.youtube.com/watch?v=qK-Z0oEdE4Y&amp;feature=player_embedded\">http://www.youtube.com/watch?v=qK-Z0oEdE4Y&amp;feature=player_embedded</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You can inject mocks into your service by using <code>$provide</code>.</p>\n\n<p>If you have the following service with a dependency that has a method called getSomething:</p>\n\n<pre><code>angular.module('myModule')\n  .factory('myService', function (myDependency) {\n        return {\n            useDependency: function () {\n                return myDependency.getSomething();\n            }\n        };\n  });\n</code></pre>\n\n<p>You can inject a mock version of myDependency as follows:</p>\n\n<pre><code>describe('Service: myService', function () {\n\n  var myService,\n      mockDependency;\n\n  beforeEach(module('myModule'));\n\n  beforeEach(function () {\n\n      mockDependency = {\n          getSomething: function () {\n              return 'mockReturnValue';\n          }\n      };\n\n      module(function ($provide) {\n          $provide.value('myDependency', mockDependency);\n      });\n\n  });\n\n  it('should return value from mock dependency', inject(function (myService) {\n      expect(myService.useDependency()).toBe('mockReturnValue');\n  }));\n\n});\n</code></pre>\n\n<p>Note that because of the call to <code>$provide.value</code> you don't actually need to explicitly inject myDependency anywhere. It happens under the hood during the injection of myService. When setting up mockDependency here, it could just as easily be a spy.</p>\n\n<p>Thanks to loyalBrown for the link to that great video.</p>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>If your controller is written to take in a dependency like this:</p>\n\n<pre><code>app.controller(\"SomeController\", [\"$scope\", \"someDependency\", function ($scope, someDependency) {\n    someDependency.someFunction();\n}]);\n</code></pre>\n\n<p>then you can make a fake <code>someDependency</code> in a Jasmine test like this:</p>\n\n<pre><code>describe(\"Some Controller\", function () {\n\n    beforeEach(module(\"app\"));\n\n\n    it(\"should call someMethod on someDependency\", inject(function ($rootScope, $controller) {\n        // make a fake SomeDependency object\n        var someDependency = {\n            someFunction: function () { }\n        };\n\n        spyOn(someDependency, \"someFunction\");\n\n        // this instantiates SomeController, using the passed in object to resolve dependencies\n        controller(\"SomeController\", { $scope: scope, someDependency: someDependency });\n\n        expect(someDependency.someFunction).toHaveBeenCalled();\n    }));\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I recently released ngImprovedTesting that should make mock testing in AngularJS way easier.</p>\n\n<p>To test 'myService' (from the \"myApp\" module) with its fooService and barService dependencies mocked out you simple can do the following in in your Jasmine test:</p>\n\n<pre><code>beforeEach(ModuleBuilder\n    .forModule('myApp')\n    .serviceWithMocksFor('myService', 'fooService', 'barService')\n    .build());\n</code></pre>\n\n<p>For more information about ngImprovedTesting check out its introductory blog post: <a href=\"http://blog.jdriven.com/2014/07/ng-improved-testing-mock-testing-for-angularjs-made-easy/\" rel=\"nofollow\">http://blog.jdriven.com/2014/07/ng-improved-testing-mock-testing-for-angularjs-made-easy/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another option to help make mocking dependencies easier in Angular and Jasmine is to use QuickMock. It can be found on GitHub and allows you to create simple mocks in a reusable way. You can clone it from GitHub via the link below. The README is pretty self explanatory, but hopefully it might help others in the future.</p>\n\n<p><a href=\"https://github.com/tennisgent/QuickMock\" rel=\"nofollow\">https://github.com/tennisgent/QuickMock</a></p>\n\n<pre><code>describe('NotificationService', function () {\n    var notificationService;\n\n    beforeEach(function(){\n        notificationService = QuickMock({\n            providerName: 'NotificationService', // the provider we wish to test\n            moduleName: 'QuickMockDemo',         // the module that contains our provider\n            mockModules: ['QuickMockDemoMocks']  // module(s) that contains mocks for our provider's dependencies\n        });\n    });\n    ....\n</code></pre>\n\n<p>It automatically manages all of the boilerplate mentioned above, so you don't have to write out all of that mock injection code in every test. Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an service AngularJS service written and would like to unit test it.</p>\n\n<pre><code>angular.module('myServiceProvider', ['fooServiceProvider', 'barServiceProvider']).\n    factory('myService', function ($http, fooService, barService) {\n\n    this.somthing = function() {\n        // Do something with the injected services\n    };\n\n    return this;\n});\n</code></pre>\n\n<p>My app.js file has these registered:</p>\n\n<pre><code>angular\n.module('myApp', ['fooServiceProvider','barServiceProvider','myServiceProvider']\n)\n</code></pre>\n\n<p>I can test the DI is working as such:</p>\n\n<pre><code>describe(\"Using the DI framework\", function() {\n    beforeEach(module('fooServiceProvider'));\n    beforeEach(module('barServiceProvider'));\n    beforeEach(module('myServiceProvder'));\n\n    var service;\n\n    beforeEach(inject(function(fooService, barService, myService) {\n        service=myService;\n    }));\n\n    it(\"can be instantiated\", function() {\n        expect(service).not.toBeNull();\n    });\n});\n</code></pre>\n\n<p>This proved that the service can be created by the DI framework, however next I want to unit test the service, which means mocking out the injected objects.</p>\n\n<p>How do I go about doing this?</p>\n\n<p>I've tried putting my mock objects in the module, e.g.</p>\n\n<pre><code>beforeEach(module(mockNavigationService));\n</code></pre>\n\n<p>and rewriting the service definition as:</p>\n\n<pre><code>function MyService(http, fooService, barService) {\n    this.somthing = function() {\n        // Do something with the injected services\n    };\n});\n\nangular.module('myServiceProvider', ['fooServiceProvider', 'barServiceProvider']).\n    factory('myService', function ($http, fooService, barService) { return new MyService($http, fooService, barService); })\n</code></pre>\n\n<p>But the latter seems to stop the service being created by the DI as all.</p>\n\n<p>Does anybody know how I can mock the injected services for my unit tests?</p>\n\n<p>Thanks</p>\n\n<p>David</p>\n",
            "last_activity_date": 1420951309,
            "question_id": 14773269,
            "score": 44,
            "tags": [
                "javascript",
                "angularjs",
                "mocking",
                "jasmine",
                "angularjs-service"
            ],
            "title": "Injecting a mock into an AngularJS service"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>It seems some people are landing here, and simply want to know if an element <em>exists</em> (a little bit different to the original question).</p>\n\n<p>That's as simple as using any of the browser's selecting method, and checking it for a <em>truthy</em> value (generally).</p>\n\n<p>For example, if my element had an <code>id</code> of <code>\"find-me\"</code>, I could simply use...</p>\n\n<pre><code>var elementExists = document.getElementById(\"find-me\");\n</code></pre>\n\n<p>This is spec'd to either return a reference to the element or <code>null</code>. If you must have a Boolean value, simply toss a <code>!!</code> before the method call.</p>\n\n<p>In addition, you can use some of the many other methods that exist for finding elements, such as (all living off <code>document</code>):</p>\n\n<ul>\n<li><code>querySelector()</code>/<code>querySelectorAll()</code></li>\n<li><code>getElementsByClassName()</code></li>\n<li><code>getElementsByName()</code></li>\n</ul>\n\n<p>Some of these methods return a <code>NodeList</code>, so be sure to check its <code>length</code> property, because a <code>NodeList</code> is an object, and therefore <em>truthy</em>.</p>\n\n<hr>\n\n<p>For actually determining if an element exists as part of the visible DOM (like the question originally asked), <a href=\"http://stackoverflow.com/a/16820058/31671\">Csuwldcat provides a better solution than rolling your own</a> (as this answer used to contain). That is, to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\"><code>contains()</code></a> method on DOM elements.</p>\n\n<p>You could use it like so...</p>\n\n<pre><code>document.contains(someReferenceToADomElement);\n</code></pre>\n\n<hr>\n\n<p><sup><em>This part of the answer is left for historical reasons</em>.</sup></p>\n\n<p>You can test if the element is part of the <code>document</code> object. I read about this a while ago, and here is my implementation (that works) from memory.</p>\n\n<pre><code>var elementInDocument = function(element) {\n    while (element = element.parentNode) {\n        if (element == document) {\n            return true;\n        }\n    }\n    return false;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/alexdickson/Fjzn8/\">jsFiddle</a>.</p>\n\n<p>Basically, you are just checking every parent node to see if one is eventually <code>document</code>. If it is, return <code>true</code>, otherwise <code>false</code>.</p>\n\n<p>It also seems to work on...</p>\n\n<pre><code>var div = document.createElement('div');\nelementInDocument(div); // false\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 105
                },
                {
                    "body": "<p>Why would you not use getElementById() if it's available?  </p>\n\n<p>Also, here's an easy way to do it with jQuery: </p>\n\n<pre><code>if ($('#elementId').length &gt; 0) {\n  // exists.\n}\n</code></pre>\n\n<p>And if you can't use 3rd-party libraries, just stick to base JavaScript:  </p>\n\n<pre><code>var element =  document.getElementById('elementId');\nif (typeof(element) != 'undefined' &amp;&amp; element != null)\n{\n  // exists.\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 100
                },
                {
                    "body": "<p>Could you just check to see if the parentNode property is null?</p>\n\n<p>i.e. </p>\n\n<pre><code>if(!myElement.parentNode)\n{\n    //node is NOT on the dom\n}\nelse\n{\n    //element is on the dom\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>simple solution with jQuery</p>\n\n<pre><code>$('body').find(yourElement)[0] != null\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>jQuery solution:</strong></p>\n\n<pre><code>if ($('#elementId').length) {\n    // element exists, do something...\n}\n</code></pre>\n\n<p>This worked for me using jQuery and did not require <code>$('#elementId')[0]</code> to be used. Thanks a lot for your help! @agam360</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I simply do:</p>\n\n<pre><code>if(document.getElementById(\"myElementId\")){\n    alert(\"Element exists\");\n} else {\n    alert(\"Element does not exist\");\n}\n</code></pre>\n\n<p>Works for me and had no issues with it yet....</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\">Node.contains DOM API</a>, you can check for the presence of any element in the page (currently in the DOM) quite easily:</p>\n\n<pre><code>document.body.contains(YOUR_ELEMENT_HERE);\n</code></pre>\n\n<p><strong>CROSS-BROWSER NOTE</strong>: the <code>document</code> object in IE does not have a <code>contains()</code> method - to ensure cross-browser compatibility, use <code>document.body.contains()</code> instead</p>\n",
                    "is_accepted": false,
                    "score": 49
                },
                {
                    "body": "<p>That works with :</p>\n\n<pre><code> var element = document.getElementById('myElem');\n if (typeof (element) != undefined &amp;&amp; typeof (element) != null &amp;&amp; typeof (element) != 'undefined') {\n     console.log('element exists');\n }\n else{\n     console.log('element NOT exists');\n }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>From <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\">Mozilla Developer Network</a></p>\n\n<p>This function checks to see if an element is in the page's body. As contains is inclusive and determining if the body contains itself isn't the intention of isInPage this case explicitly returns false.</p>\n\n<pre><code>function isInPage(node) {\n  return (node === document.body) ? false : document.body.contains(node);\n}\n</code></pre>\n\n<p><strong>node</strong> is the node we want to check for in the .</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I liked this approach</p>\n\n<pre><code>var elem = document.getElementById('elementID');\n\nif( elem )do this\nelse \ndo that\n</code></pre>\n\n<p>Also</p>\n\n<pre><code>var elem = ((document.getElementById('elemID')) ? true:false);\n\nif( elem ) do this\nelse\ndo that\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Easiest solution is to check the <code>baseURI</code> property, which is set only when the element is inserted in the DOM, and reverts to an empty string when it is removed.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/a/16820058/2759272\">csuwldcat's solution</a> seems to be the best of the bunch, but a slight modification is needed to make it work correctly with an element that's in a different document than the javascript is running in, such as an iframe:</p>\n\n<p><code>YOUR_ELEMENT.ownerDocument.body.contains(YOUR_ELEMENT);</code></p>\n\n<p>Note the use of the element's <code>ownerDocument</code> property, as opposed to just plain ol' <code>document</code> (which may or may not refer to the element's owner document).</p>\n\n<p>torazaburo posted an <a href=\"http://stackoverflow.com/a/26083569/2759272\">even simpler method</a> that also works with non-local elements, but unfortunately, it uses the <code>baseURI</code> property, which is not uniformly implemented across browsers at this time (I could only get it to work in the webkit-based ones). I couldn't find any other element or node properties that could be used in a similar fashion, so I think for the time being the above solution is as good as it gets.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Node.contains() is the solution. \nsee a test I created:\n<a href=\"http://jsperf.com/node-contains-vs-jquery-contains\" rel=\"nofollow\">http://jsperf.com/node-contains-vs-jquery-contains</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I would like to pick your brain. My question is this: how do you test an element for existence without the use of the <code>getElementById</code> method. I have setup a <a href=\"http://jsbin.com/apawi5/3\">live demo</a> for reference. I will also print the code on here as well:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;script&gt;\n    var getRandomID = function (size) {\n            var str = \"\",\n                i = 0,\n                chars = \"0123456789abcdefghijklmnopqurstuvwxyzABCDEFGHIJKLMNOPQURSTUVWXYZ\";\n            while (i &lt; size) {\n                str += chars.substr(Math.floor(Math.random() * 62), 1);\n                i++;\n            }\n            return str;\n        },\n        isNull = function (element) {\n            var randomID = getRandomID(12),\n                savedID = (element.id)? element.id : null;\n            element.id = randomID;\n            var foundElm = document.getElementById(randomID);\n            element.removeAttribute('id');\n            if (savedID !== null) {\n                element.id = savedID;\n            }\n            return (foundElm) ? false : true;\n        };\n    window.onload = function () {\n        var image = document.getElementById(\"demo\");\n        console.log('undefined', (typeof image === 'undefined') ? true : false); // false\n        console.log('null', (image === null) ? true : false); // false\n        console.log('find-by-id', isNull(image)); // false\n        image.parentNode.removeChild(image);\n        console.log('undefined', (typeof image === 'undefined') ? true : false); // false ~ should be true?\n        console.log('null', (image === null) ? true : false); // false ~ should be true?\n        console.log('find-by-id', isNull(image)); // true ~ correct but there must be a better way than this?\n    };\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"demo\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Basically what the above code demonstrates is an element being stored into a variable and then removed from dom. Even though the element has been removed from the dom, the variable retains the element as it was when first declared. In other words, it is not a live reference to the element itself, but rather a replica. As a result, checking the variable's value (the element) for existence will provide an unexpected result.</p>\n\n<p>The <code>isNull</code> function is my attempt to check for an elements existence from a variable, and it works, but I would like to know if there is an easier way to accomplish the same result.</p>\n\n<p>Thanks very much in advance for any insight.</p>\n\n<p>PS: I'm also interested in why JavaScript variables behave like this if anyone knows of some good articles related to the subject.</p>\n",
            "last_activity_date": 1423690817,
            "question_id": 5629684,
            "score": 94,
            "tags": [
                "javascript",
                "dom",
                "variables",
                "element",
                "exists"
            ],
            "title": "How to check if element exists in the visible DOM?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The 800-pound gorilla of Javascript documentation is the <a href=\"http://code.google.com/p/jsdoc-toolkit/\">JSDoc Toolkit</a> and its successor <a href=\"https://github.com/jsdoc3/jsdoc\">JSDoc 3</a>. Most of the documentation is done with Javadoc-like tags and a <code>/**</code> comment prefix.</p>\n\n<p>Example:</p>\n\n<pre><code>var MyClass = Class.create(\n  /** @lends MyClass# */              // @lends is how you document anonymous classes.\n  {\n    /**\n     * Description of constructor.\n     * @class Description of class.   // @class annotation goes anywhere and\n     *                                //   describes the whole class.\n     * @constructs                    // This is a constructor.\n     */\n    initialize: function(arg0, arg1) {\n      //...\n    },\n\n    /** A method. */\n    myFunc: function() {},\n\n    /** An instance field. */\n    myVar: 123\n  }\n);\n\nObject.extend(MyClass,\n  /** @lends MyClass */\n  {\n    /** A class method. */\n    classFunc: function() {}\n  }\n);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>As described in <a href=\"http://xiewenjie.com/doxygen-js/use-doxygen-to-document-javascript\" rel=\"nofollow\">this</a> link:</p>\n\n<p>There is another method that uses pseudo code in java syntax to document javascript..</p>\n\n<ol>\n<li><p>Use a script to get all pseudo code from .js files and generate .java files with the same name, the script is attached bellow named builddoc. This script actually get all lines begin with \u2018///\u2019, \u2018/*<em>\u2019, \u2018/</em> \u2018, \u2018 * \u2018, \u2018 <em>/\u2019 and \u2018//</em>\u2019 into the .java file.\nSo a javascript file like</p>\n\n<pre><code>//* package ns;\n/**\n* Foo.\n* @param foo foo.\n*/\nvar foo=function(foo){}\n//* public void foo(String foo);\n</code></pre></li>\n</ol>\n\n<p>will be converted into</p>\n\n<pre><code>package ns;\n/**\n* Foo.\n* @param foo foo.\n*/\npublic void foo(String foo);\n</code></pre>\n\n<p>And now doxygen can process it in java way.\nYou should use FILE_PATTERNS = *.java in your doxygen configuration to tell doxygen to parse all .java files.</p>\n\n<p>builddoc\uff1a</p>\n\n<pre><code>#!/bin/bash\n\nDIRs=\"./\"\n\nif [ $# -ne 0 ]\nthen\n    DIRs=$@\nfi\n\nfor DIR in $DIRs; do\n\n    JSs=`find $DIR -name \"*.js\"`\n\n    for JS in $JSs; do\n    DOC=`echo $JS|sed 's/\\(.*\\)\\.js/\\1.java/g'`;\n    if [ $JS -nt $DOC ]; then\n        echo \"rebuild $DOC\"\n        grep -e '^\\s*\\(///\\|//\\*\\|/\\*\\*\\| \\* \\| \\*/\\)' $JS | sed 's/^\\s*\\/\\/\\*\\(.*\\)$/\\1/g'&gt; $DOC\n    fi\ndone\n\ndone\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there something like dOxygen/Javadoc? What has everyone used out there that has worked well?</p>\n",
            "last_activity_date": 1397857358,
            "question_id": 669698,
            "score": 67,
            "tags": [
                "javascript",
                "documentation"
            ],
            "title": "What options are available for documenting your Javascript code?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>Looks like you want <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/split\">split</a></p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Use String.split</p>\n\n<p><code>\"0000000020C90037:TEMP:data\".split(':')</code></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You don't need to split. You can use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/indexOf\"><code>indexOf</code></a> and <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/substr\"><code>substr</code></a>:</p>\n\n<pre><code>str = str.substr(str.indexOf(':')+1);\n</code></pre>\n\n<p>But the equivalent to <code>explode</code> would be <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/split\"><code>split</code></a>.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>arr = str.split (\":\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you like php, take a look at <a href=\"http://phpjs.org/functions/explode:396\" rel=\"nofollow\">php.JS - JavaScript explode</a></p>\n\n<p>Or in normal JavaScript functionality:\n`</p>\n\n<pre><code>var vInputString = \"0000000020C90037:TEMP:data\";\nvar vArray = vInputString.split(\":\");\nvar vRes = vArray[1] + \":\" + vArray[2]; `\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>var mystr = '0000000020C90037:TEMP:data';\nvar myarr = mystr.split(\":\");\nvar myvar = myarr[1] + \":\" + myarr[2];\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 354
                },
                {
                    "body": "<p><strong>create's an object :</strong></p>\n\n<pre><code>// create a data object to store the information below.\n    var data   = new Object();\n// this could be a suffix of a url string. \n    var string = \"?id=5&amp;first=John&amp;last=Doe\";\n// this will now loop through the string and pull out key value pairs seperated \n// by the &amp; character as a combined string, in addition it passes up the ? mark\n    var pairs = string.substring(string.indexOf('?')+1).split('&amp;');\n    for(var key in pairs)\n    {\n        var value = pairs[key].split(\"=\");\n        data[value[0]] = value[1];\n    }\n\n// creates this object \n    var data = {\"id\":\"5\", \"first\":\"John\", \"last\":\"Doe\"};\n\n// you can then access the data like this\n    data.id    = \"5\";\n    data.first = \"John\";\n    data.last  = \"Doe\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>With no intentions to critique <a href=\"http://stackoverflow.com/users/254528/john-hartsock\">John Hartsock</a>, just in case the number of delimiters may vary for anyone using the given code, I would formally suggest to use this instead...</p>\n\n<pre><code>var mystr = '0000000020C90037:TEMP:data';\nvar myarr = mystr.split(\":\");\nvar myvar = myarr[myarr.length-2] + \":\" + myarr[myarr.length-1];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>String.prototype.explode = function(separator, limit)\n{\n    var arr = this.split(separator);\n    if (limit) arr.push( arr.splice(limit-1).join(separator) );\n    return arr;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><code>console.log(('0000000020C90037:TEMP:data').split(\":\").slice(1).join(':'))</code></p>\n\n<p>outputs: <code>TEMP:data</code></p>\n\n<ul>\n<li>.split() will disassemble a string into parts</li>\n<li>.join() reassembles the array back to a string</li>\n<li>when you want the array without it's first item, use .slice(1)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>So I know that this post is pretty old, but I figured I may as well add a function that has helped me over the years. Why not just remake the explode function using split as mentioned above? Well here it is:</p>\n\n<pre><code>function explode(str,begin,end)\n{\n   t=str.split(begin);\n   t=t[1].split(end);\n   return t[0];\n}\n</code></pre>\n\n<p>This function works well if you are trying to get the values between two values. For instance:</p>\n\n<pre><code>data='[value]insertdataherethatyouwanttoget[/value]';\n</code></pre>\n\n<p>If you were interested in getting the information from between the two [values] \"tags\", you could use the function like the following.</p>\n\n<pre><code>out=explode(data,'[value]','[/value]');\n//Variable out would display the string: insertdataherethatyouwanttoget\n</code></pre>\n\n<p>But let's say you don't have those handy \"tags\" like the example above displayed. No matter.</p>\n\n<pre><code>out=explode(data,'insert','wanttoget');\n//Now out would display the string: dataherethatyou\n</code></pre>\n\n<p>Wana see it in action? Click <a href=\"http://jsfiddle.net/d5wpypu6/1/\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var str = '0000000020C90037:TEMP:data';    // str = \"0000000020C90037:TEMP:data\"\nstr = str.replace(/^[^:]+:/, \"\");          // str = \"TEMP:data\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>just a little addition to psycho brm\u00b4s answer (his version doesn\u00b4t work in IE &lt;=8).\nthis works cross-browser:</p>\n\n<pre><code>function explode (s, separator, limit)\n{\n    var arr = s.split(separator);\n    if (limit) {\n        arr.push(arr.splice(limit-1, (arr.length-(limit-1))).join(separator));\n    }\n    return arr;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a string that looks like this:</p>\n\n<blockquote>\n  <p>0000000020C90037:TEMP:data</p>\n</blockquote>\n\n<p>And I need to grab everything after the first colon, so that I have TEMP:data.</p>\n\n<p>I don't often work in Javascript, if it were PHP I would do this:</p>\n\n<pre><code>$str = '0000000020C90037:TEMP:data';\n$arr = explode(\":\", $str);\n$var = $arr[1].\":\".$arr[2];\n</code></pre>\n",
            "last_activity_date": 1423923965,
            "question_id": 4514323,
            "score": 193,
            "tags": [
                "javascript",
                "php",
                "string"
            ],
            "title": "Javascript Equivalent to PHP Explode()"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You could use <a href=\"http://prototypejs.org/doc/latest/language/Template/\" rel=\"nofollow\">Prototype's template system</a> if you really feel like using a sledgehammer to crack a nut:</p>\n\n<pre><code>var template = new Template(\"I'm #{age} years old!\");\nalert(template.evaluate({age: 21}));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Try <a href=\"https://github.com/alexei/sprintf.js\">sprintf</a>. For example:</p>\n\n<pre><code>vsprintf('The first 4 letters of the english alphabet are: %s, %s, %s and %s', ['a', 'b', 'c', 'd']);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>You could code your own String.format() method.\n<del><a href=\"http://frogsbrain.wordpress.com/2007/04/28/javascript-stringformat-method/\" rel=\"nofollow\">You can also use this one</a></del></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Douglas Crockford's <a href=\"http://javascript.crockford.com/remedial.html\">Remedial JavaScript</a> includes a <code>String.prototype.supplant</code> function.  It is short, familiar, and easy to use:</p>\n\n<pre><code>String.prototype.supplant = function (o) {\n    return this.replace(/{([^{}]*)}/g,\n        function (a, b) {\n            var r = o[b];\n            return typeof r === 'string' || typeof r === 'number' ? r : a;\n        }\n    );\n};\n\n// Usage:\nalert(\"I'm {age} years old!\".supplant({ age: 29 }));\nalert(\"The {a} says {n}, {n}, {n}!\".supplant({ a: 'cow', n: 'moo' }));\n</code></pre>\n\n<p>If you don't want to change String's prototype, you can always adapt it to be standalone, or place it into some other namespace, or whatever.</p>\n",
                    "is_accepted": false,
                    "score": 100
                },
                {
                    "body": "<p>Another sledgehammer: <a href=\"https://github.com/nje/jquery-tmpl\" rel=\"nofollow\">jquery-tmpl</a> (templating with jQuery).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Word of caution: avoid any template system which does't allow you to escape its own delimiters. For example, There would be no way to output the following using the <code>supplant()</code> method mentioned here.</p>\n\n<blockquote>\n  <p>\"I am 3 years old thanks to my {age} variable.\"</p>\n</blockquote>\n\n<p>Simple interpolation may work for small self-contained scripts, but often comes with this design flaw that will limit any serious use.  I honestly prefer DOM templates, such as:</p>\n\n<pre><code>&lt;div&gt; I am &lt;span id=\"age\"&gt;&lt;/span&gt; years old!&lt;/div&gt;\n</code></pre>\n\n<p>And use jQuery manipulation: <code>$('#age').text(3)</code></p>\n\n<p>Alternately, if you are simply just tired of string concatenation, there's always alternate syntax:</p>\n\n<pre><code>var age = 3;\nvar str = [\"I'm only\", age, \"years old\"].join(\" \");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Try <a href=\"https://github.com/zsong/kiwi\" rel=\"nofollow\"><strong><em>kiwi</em></strong></a>, a light-weight JavaScript module for string interpolation.</p>\n\n<p>You can do</p>\n\n<pre><code>Kiwi.compose(\"I'm % years old!\", [age]);\n</code></pre>\n\n<p>or</p>\n\n<pre><code>Kiwi.compose(\"I'm %{age} years old!\", {\"age\" : age});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Consider this code:</p>\n\n<pre><code>var age = 3;\n\nconsole.log(\"I'm \" + age + \" years old!\");\n</code></pre>\n\n<p>Is there a better way to insert the variable in to the string than: <code>\"I'm \" + age + \" years old!\"</code>?</p>\n",
            "last_activity_date": 1418068276,
            "question_id": 1408289,
            "score": 91,
            "tags": [
                "javascript",
                "string-interpolation"
            ],
            "title": "Best way to do string interpolation in JavaScript?"
        },
        {
            "answer_count": 22,
            "answers": [
                {
                    "body": "<p><a href=\"https://github.com/angular/angular.js/issues/1460\">Apparently this is a known issue with Angular and is currently open</a></p>\n\n<p>I'm not sure what you could do here besides some sort of work around like you're trying. It seems you're on the right track. I couldn't get my browser to try to remember a password for your plunk, so I'm not sure if this will work but have a look:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>app.directive('autoFillSync', function($timeout) {\n   return {\n      require: 'ngModel',\n      link: function(scope, elem, attrs, ngModel) {\n          var origVal = elem.val();\n          $timeout(function () {\n              var newVal = elem.val();\n              if(ngModel.$pristine &amp;&amp; origVal !== newVal) {\n                  ngModel.$setViewValue(newVal);\n              }\n          }, 500);\n      }\n   }\n});\n</code></pre>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;form name=\"myForm\" ng-submit=\"login()\"&gt;\n   &lt;label for=\"username\"&gt;Username&lt;/label&gt;\n   &lt;input type=\"text\" id=\"username\" name=\"username\" ng-model=\"username\" auto-fill-sync/&gt;&lt;br/&gt;\n   &lt;label for=\"password\"&gt;Password&lt;/label&gt;\n   &lt;input type=\"password\" id=\"password\" name=\"password\" ng-model=\"password\" auto-fill-sync/&gt;&lt;br/&gt;\n   &lt;button type=\"submit\"&gt;Login&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>I think you just need to simplify your approach a bit. The one thing I definitely recommend is to check <code>ngModel.$pristine</code> and make sure you're not overwriting some poor user's input. Also, 3 seconds is probably too long. You shouldn't have to call $apply() in a $timeout, BTW, it should queue a $digest for you automatically.</p>\n\n<p><strong>The real catch: Will your browser beat Angular to execution? What about my browser?</strong></p>\n\n<p>This is probably an unwinnable war, which is why Angular (or Knockout) hasn't been able to solve it readily. There's no guarantee of the state of the data in your input at the time of the directive's initial execution. Not even at the time of Angular's initialization.... So it's a tricky problem to solve.</p>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>Dirty code, check if issue <a href=\"https://github.com/angular/angular.js/issues/1460#issuecomment-18572604\">https://github.com/angular/angular.js/issues/1460#issuecomment-18572604</a> is fixed before using this code.\nThis directive triggers events when field is filled, not only before submit (it's necessary if you have to handle input before submit)</p>\n\n<pre><code> .directive('autoFillableField', function() {\n    return {\n                   restrict: \"A\",\n                   require: \"?ngModel\",\n                   link: function(scope, element, attrs, ngModel) {\n                       setInterval(function() {\n                           var prev_val = '';\n                           if (!angular.isUndefined(attrs.xAutoFillPrevVal)) {\n                               prev_val = attrs.xAutoFillPrevVal;\n                           }\n                           if (element.val()!=prev_val) {\n                               if (!angular.isUndefined(ngModel)) {\n                                   if (!(element.val()=='' &amp;&amp; ngModel.$pristine)) {\n                                       attrs.xAutoFillPrevVal = element.val();\n                                       scope.$apply(function() {\n                                           ngModel.$setViewValue(element.val());\n                                       });\n                                   }\n                               }\n                               else {\n                                   element.trigger('input');\n                                   element.trigger('change');\n                                   element.trigger('keyup');\n                                   attrs.xAutoFillPrevVal = element.val();\n                               }\n                           }\n                       }, 300);\n                   }\n               };\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Here's another workaround that's less hacky, but requires some extra code in the controller.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;form ng-submit=\"submitForm()\" ng-controller=\"FormController\"&gt;\n    &lt;input type=\"text\" ng-model=\"username\" autocomplete-username&gt;\n    &lt;input type=\"submit\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>Directive (CoffeeScript):</p>\n\n<pre><code>directives.directive 'autocompleteUsername', -&gt;\n    return (scope, element) -&gt;\n        scope.getUsername = -&gt;\n            element.val()\n</code></pre>\n\n<p>Controller:</p>\n\n<pre><code>controllers.controller 'FormController', [-&gt;\n    $scope.submitForm = -&gt;\n        username = $scope.getUsername?() ? $scope.username\n        # HTTP stuff...\n]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well, the easiest way it's to emulate the browser's behavior, so if there is a problem with the change event, just fire it yourself. Much simpler.</p>\n\n<p>Directive:</p>\n\n<pre><code>yourModule.directive('triggerChange', function($sniffer) {\nreturn {\n    link : function(scope, elem, attrs) {\n        elem.bind('click', function(){\n            $(attrs.triggerChange).trigger($sniffer.hasEvent('input') ? 'input' : 'change');\n        });\n    },\n    priority : 1\n}\n</code></pre>\n\n<p>});</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;form &gt;\n    &lt;input data-ng-model=\"user.nome\" type=\"text\" id=\"username\"&gt;\n\n    &lt;input data-ng-model=\"user.senha\" type=\"password\" id=\"password\" &gt;\n\n    &lt;input type=\"submit\" data-ng-click=\"login.connect()\" id=\"btnlogin\" \n           data-trigger-change=\"#password,#username\"/&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>You can do some variations, like putting the directive on the form and firing the event on all inputs with the .dirty class on form submit.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I force a $setValue(val()) on submit: (this works <strong><em>without</em></strong> jQuery)</p>\n\n<pre><code>   var ValidSubmit = ['$parse', function ($parse) {\n    return {\n        compile: function compile(tElement, tAttrs, transclude) {\n            return {\n                post: function postLink(scope, element, iAttrs, controller) {\n                    var form = element.controller('form');\n                    form.$submitted = false;\n                    var fn = $parse(iAttrs.validSubmit);\n                    element.on('submit', function(event) {\n                        scope.$apply(function() {\n                            var inputs = element.find('input');\n                            for(var i=0; i &lt; inputs.length; i++) {\n                                var ele = inputs.eq(i);\n                                var field = form[inputs[i].name];\n                                field.$setViewValue(ele.val());\n                            }\n                            element.addClass('ng-submitted');\n                            form.$submitted = true;\n                            if(form.$valid) {\n                                fn(scope, {$event:event});\n                            }\n                        });\n                    });\n                    scope.$watch(function() { return form.$valid}, function(isValid) {\n                        if(form.$submitted == false) return;\n                        if(isValid) {\n                            element.removeClass('has-error').addClass('has-success');\n                        } else {\n                            element.removeClass('has-success');\n                            element.addClass('has-error');\n                        }\n                    });\n                }\n            }\n        }\n    }\n}]\napp.directive('validSubmit', ValidSubmit);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One-liner workaround in the submit handler (requires jQuery):</p>\n\n<p>if (!$scope.model) $scope.model = $('#input_field').val();</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>If you are using jQuery you could do this on form submit:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;form ng-submit=\"submit()\"&gt;\n    &lt;input id=\"email\" ng-model=\"password\" required \n           type=\"text\" placeholder=\"Your email\"&gt;\n    &lt;input id=\"password\" ng-model=\"password\" required \n           type=\"password\" placeholder=\"Password\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code> $scope.submit = function() {\n     $scope.password = $('#password').val();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p><strong>This is jQuery way  :</strong> </p>\n\n<pre><code>$(window).load(function() {\n   // updates autofilled fields\n   window.setTimeout(function() {\n     $('input[ng-model]').trigger('input');\n   }, 100);\n });\n</code></pre>\n\n<p><strong>This is Angular way  :</strong> </p>\n\n<pre><code> app.directive('autofill', ['$timeout', function ($timeout) {\n    return {\n        scope: true,\n        require: 'ngModel',\n        link: function (scope, elem, attrs, ctrl) {\n            $timeout(function(){\n                $(elem[0]).trigger('input');\n                // elem.trigger('input'); try this if above don't work\n            }, 200)\n        }\n    }\n}]);\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;input type=\"number\" autofill /&gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You don't have to use a <code>$timeout</code> or anything like this. You can use an event system.</p>\n\n<p>I think it's more Angularish and does not depend on jQuery or custom event catching.</p>\n\n<p>For example on your submit handler:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$scope.doLogin = function() {\n    $scope.$broadcast(\"autofill:update\");\n\n    // Continue with the login.....\n};\n</code></pre>\n\n<p>And then you can have an <code>autofill</code> directive like this:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>.directive(\"autofill\", function () {\n    return {\n        require: \"ngModel\",\n        link: function (scope, element, attrs, ngModel) {\n            scope.$on(\"autofill:update\", function() {\n                ngModel.$setViewValue(element.val());\n            });\n        }\n    }\n});\n</code></pre>\n\n<p>Finally, your HTML will be like:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;input type=\"text\" name=\"username\" ng-model=\"user.id\" autofill=\"autofill\"/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Seems like clear straight ahead solution. No jQuery needed.</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<ul>\n<li>Model is updated only when model value isn't equal to actual input\nvalue.</li>\n<li>Checking doesn't stop on first autofill. In case if you wish to use\nanother account for example.</li>\n</ul>\n\n<hr>\n\n<pre><code>app.directive('autofillable', ['$timeout', function ($timeout) {\n    return {\n        scope: true,\n        require: 'ngModel',\n        link: function (scope, elem, attrs, ctrl) {\n            scope.check = function(){\n                var val = elem[0].value;\n                if(ctrl.$viewValue !== val){\n                    ctrl.$setViewValue(val)\n                }\n                $timeout(scope.check, 300);\n            };\n            scope.check();\n        }\n    }\n}]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is a solution that is far less hacky than other solutions presented and is semantically sound AngularJS: <a href=\"http://victorblog.com/2014/01/12/fixing-autocomplete-autofill-on-angularjs-form-submit/\" rel=\"nofollow\">http://victorblog.com/2014/01/12/fixing-autocomplete-autofill-on-angularjs-form-submit/</a></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>myApp.directive('formAutofillFix', function() {\n  return function(scope, elem, attrs) {\n    // Fixes Chrome bug: https://groups.google.com/forum/#!topic/angular/6NlucSskQjY\n    elem.prop('method', 'POST');\n\n    // Fix autofill issues where Angular doesn't know about autofilled inputs\n    if(attrs.ngSubmit) {\n      setTimeout(function() {\n        elem.unbind('submit').submit(function(e) {\n          e.preventDefault();\n          elem.find('input, textarea, select').trigger('input').trigger('change').trigger('keydown');\n          scope.$apply(attrs.ngSubmit);\n        });\n      }, 0);\n    }\n  };\n});\n</code></pre>\n\n<p>Then you simply attach the directive to your form:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;form ng-submit=\"submitLoginForm()\" form-autofill-fix&gt;\n  &lt;div&gt;\n    &lt;input type=\"email\" ng-model=\"email\" ng-required /&gt;\n    &lt;input type=\"password\" ng-model=\"password\" ng-required /&gt;\n    &lt;button type=\"submit\"&gt;Log In&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I am very new to Angularjs, but I found a simple solution to that problem=>\nForce Angular to reevaluate expression... by changing it!\n(of course you need to remember the initial value to revert to initial state)\nHere is the way it goes in your controller function for submitting the form:</p>\n\n<pre><code>    $scope.submit = function () {\n                var oldpassword = $scope.password;\n                $scope.password = '';\n                $scope.password = oldpassword;\n//rest of your code of the submit function goes here...\n</code></pre>\n\n<p>where of course, the value entered in your password input has been set by windows and not by user.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can try this code :</p>\n\n<pre><code>yourapp.directive('autofill',function () {\n\n    return {\n        scope: true,\n        require: 'ngModel',\n        link: function (scope, elem, attrs, ctrl) {\n            var origVal = elem.val();\n            if (origVal != '') {\n                elem.trigger('input');\n            }\n        }\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A minor modification to this answer (<a href=\"http://stackoverflow.com/a/14966711/3443828\">http://stackoverflow.com/a/14966711/3443828</a>): use an $interval instead of a $timeout so you don't have to race the browser.</p>\n\n<pre><code>mod.directive('autoFillSync', function($interval) {\n    function link(scope, element, attrs, ngModel) {\n        var origVal = element.val();\n        var refresh = $interval(function() {\n          if (!ngModel.$pristine) {\n            $interval.cancel(refresh);\n          }else{\n            var newVal = element.val();\n            if (origVal !== newVal) {\n              ngModel.$setViewValue(newVal);\n              $interval.cancel(refresh);\n            }\n          }\n        }, 100);\n    }\n\n    return {\n      require: 'ngModel',\n      link: link\n    }\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is the only solution I've found that allowed all of my Angular' validations to work as designed including disable/enable of submit button.  Installs with bower and 1 script tag.  Bazinga!</p>\n\n<p><a href=\"https://github.com/tbosch/autofill-event\" rel=\"nofollow\">https://github.com/tbosch/autofill-event</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is the solution I ended up using in my forms.</p>\n\n<pre><code>.directive('autofillSync', [ function(){\n  var link = function(scope, element, attrs, ngFormCtrl){\n    element.on('submit', function(event){\n      if(ngFormCtrl.$dirty){\n        console.log('returning as form is dirty');\n        return;\n      }   \n      element.find('input').each(function(index, input){\n        angular.element(input).trigger('input');\n      }); \n    }); \n  };  \n  return {\n    /* negative priority to make this post link function run first */\n    priority:-1,\n    link: link,\n    require: 'form'\n  };  \n}]);\n</code></pre>\n\n<p>And the form's template will be</p>\n\n<pre><code>&lt;form autofill-sync name=\"user.loginForm\" class=\"login-form\" novalidate ng-submit=\"signIn()\"&gt;\n    &lt;!-- Input fields here --&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>This way I was able to run any parsers/formatters I have on my ng-model and have the submit functionality transparent.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Solution without directives:</p>\n\n<pre><code>.run([\"$window\", \"$rootElement\", \"$timeout\", function($window, $rootElement, $timeout){\n\n        var event =$window.document.createEvent(\"HTMLEvents\");\n        event.initEvent(\"change\", true, true);\n\n        $timeout(function(){\n\n            Array.apply(null, $rootElement.find(\"input\")).forEach(function(item){\n                if (item.value.length) {\n                    item.$$currentValue = item.value;\n                    item.dispatchEvent(event);\n                }\n            });\n\n        }, 500);\n    }])\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is a simple fix that works for all the cases I've tested in both Firefox and Chrome. Note that with the top answer (directive w/ timeout) I had issues with - </p>\n\n<ul>\n<li>Browser back / forward buttons, don't re-fire page load events (so the fix doesn't apply)</li>\n<li>Loading of credentials some time after page load. e.g. in Firefox, double click on the login box and select from stored credentials.</li>\n<li>Need a solution that updates before form submission since I disable the Login button until valid input provided</li>\n</ul>\n\n<p>This fix is obviously very dumb and hacky, but it works 100% of the time - </p>\n\n<pre><code>function myScope($scope, $timeout) {\n    // ...\n    (function autoFillFix() {\n        $timeout(function() { \n            $('#username').trigger('change'); \n            $('#password').trigger('change'); \n            autoFillFix(); }, 500);                    \n    })();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Solution 1 [Using $timeout]:</strong></p>\n\n<p><em>Directive:</em></p>\n\n<pre><code>app.directive('autoFillSync', function($timeout) {\n    return {\n      require: 'ngModel',\n      link: function(scope, elem, attrs, model) {\n          var origVal = elem.val();\n          $timeout(function () {\n              var newVal = elem.val();\n              if(model.$pristine &amp;&amp; origVal !== newVal) {\n                  model.$setViewValue(newVal);\n              }\n          }, 500);\n      }\n    };\n});\n</code></pre>\n\n<p><em>HTML:</em></p>\n\n<pre><code>&lt;form name=\"myForm\" ng-submit=\"login()\"&gt;\n  &lt;label for=\"username\"&gt;Username&lt;/label&gt;\n  &lt;input type=\"text\" id=\"username\" name=\"username\" ng-model=\"username\" auto-fill-sync/&gt;&lt;br/&gt;\n  &lt;label for=\"password\"&gt;Password&lt;/label&gt;\n  &lt;input type=\"password\" id=\"password\" name=\"password\" ng-model=\"password\" auto-fill-sync/&gt;&lt;br/&gt;\n  &lt;button type=\"submit\"&gt;Login&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p><strong>Solution 2 [Using angular events]:</strong></p>\n\n<p>Ref: <a href=\"http://stackoverflow.com/users/1372111/bekos\">Becko's answer</a></p>\n\n<p><em>Directive:</em></p>\n\n<pre><code>app.directive(\"autofill\", function () {\n    return {\n        require: \"ngModel\",\n        link: function (scope, element, attrs, ngModel) {\n            scope.$on(\"autofill:update\", function() {\n                ngModel.$setViewValue(element.val());\n            });\n        }\n    };\n});\n</code></pre>\n\n<p><em>HTML:</em></p>\n\n<pre><code>&lt;form name=\"myForm\" ng-submit=\"login()\"&gt;\n  &lt;label for=\"username\"&gt;Username&lt;/label&gt;\n  &lt;input type=\"text\" id=\"username\" name=\"username\" ng-model=\"username\" autofill/&gt;&lt;br/&gt;\n  &lt;label for=\"password\"&gt;Password&lt;/label&gt;\n  &lt;input type=\"password\" id=\"password\" name=\"password\" ng-model=\"password\" autofill/&gt;&lt;br/&gt;\n  &lt;button type=\"submit\"&gt;Login&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p><strong>Solution 3 [Using relay method calls]:</strong></p>\n\n<p><em>Directive:</em></p>\n\n<pre><code>app.directive('autoFill', function() {\n    return {\n        restrict: 'A',\n        link: function(scope,element) {\n            scope.submit = function(){\n                scope.username = element.find(\"#username\").val();\n                scope.password = element.find(\"#password\").val();\n                scope.login();//call a login method in your controller or write the code here itself\n            }\n\n        }\n    };\n});\n</code></pre>\n\n<p><em>HTML:</em></p>\n\n<pre><code>&lt;form name=\"myForm\" auto-fill ng-submit=\"submit()\"&gt;\n   &lt;label for=\"username\"&gt;Username&lt;/label&gt;\n   &lt;input type=\"text\" id=\"username\" name=\"username\" ng-model=\"username\" /&gt;\n   &lt;label for=\"password\"&gt;Password&lt;/label&gt;\n   &lt;input type=\"password\" id=\"password\" name=\"password\" ng-model=\"password\" /&gt;\n   &lt;button type=\"submit\"&gt;Login&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Change the model value insteadof using timeout function work for me.</p>\n\n<pre><code>module.directive('autoFill', [ function() {\n    return {\n        require: 'ngModel',\n        link:function(scope, element, attr, ngModel) {\n            var origVal = element.val();\n            if(origVal){\n                ngModel.$modelValue = ngModel.$modelValue || origVal;\n            }\n        }\n    };\n} ];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>No need to hack anymore!</strong> Angular dev <strong><a href=\"https://github.com/tbosch\">tbosch</a></strong> made a polyfill that triggers a change event when the browser changes form fields without triggering a change event:</p>\n\n<p><a href=\"https://github.com/tbosch/autofill-event\">https://github.com/tbosch/autofill-event</a></p>\n\n<p>For now they won't build this into the Angular code, as this is a bugfix for the browser, and also works without Angular (e.g. for plain jQuery apps).</p>\n\n<p>\"The polyfill will check for changes on document load and also when an input is left (only in the same form). However, you can trigger the check manually if you want to.</p>\n\n<p>The project has unit tests as well as semi automatic tests, so we finally have a place to collect all the different use case together with the required browser settings.</p>\n\n<p>Please note: This polyfill works with plain AngularJS apps, with AngularJS/jQuery apps but also with plain jQuery apps that do not use Angular.\"</p>\n\n<p>It can be installed with:</p>\n\n<pre><code>bower install autofill-event --save\n</code></pre>\n\n<p>Add the script <code>autofill-event.js</code> <strong>after</strong> jQuery or Angular in your page.</p>\n\n<p>This will do the following:</p>\n\n<ul>\n<li>after DOMContentLoaded: check all input fields</li>\n<li>a field is left: check all other fields in the same form</li>\n</ul>\n\n<p>API (to manually trigger the check):</p>\n\n<ul>\n<li><code>$el.checkAndTriggerAutoFillEvent()</code>: Execute the check for all DOM elements in the given jQuery / jQLite element.</li>\n</ul>\n\n<h2>How it works</h2>\n\n<ol>\n<li><p>Remember all changes to input elements by the user (listening for change events) and also by JavaScript (by intercepting $el.val() for jQuery / jQLite elements). That changed value is stored on the element in a private property.</p></li>\n<li><p>Checking an element for auto fill: Compare the current value of the element with the remembered value. If it's different, trigger a change event.</p></li>\n</ol>\n\n<h2>Dependencies</h2>\n\n<p>AngularJS or jQuery (works with either one or both)</p>\n\n<p>More info and source on the <a href=\"https://github.com/tbosch/autofill-event\">github page</a>.</p>\n\n<p>Original Angular Issue #1460 on Github <a href=\"https://github.com/angular/angular.js/issues/1460\">can be read here.</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you want to keep it simple just get the value using javascript</p>\n\n<p>In your angular js controller :</p>\n\n<p>var username = document.getElementById('username').value;</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>When submitting a form in AngularJS and use the browser remember password functionality, and in a subsequent login attempt you let the browser fill in the login form with the username and password, the <code>$scope</code> model won't be changed based on the autofill.</p>\n\n<p>The only dirty hack I found is to use the following directive:</p>\n\n<pre><code>app.directive(\"xsInputSync\", [\"$timeout\" , function($timeout) {\n    return {\n        restrict : \"A\",\n        require: \"?ngModel\",\n        link : function(scope, element, attrs, ngModel) {\n            $timeout(function() {\n                if (ngModel.$viewValue &amp;&amp; ngModel.$viewValue !== element.val()) {\n                    scope.apply(function() {\n                        ngModel.$setViewValue(element.val());\n                    });\n                }\n                console.log(scope);\n                console.log(ngModel.$name);\n                console.log(scope[ngModel.$name]);\n            }, 3000);\n        }\n    };\n}]);\n</code></pre>\n\n<p>The problem is that the <code>ngModel.$setViewValue(element.val());</code> doesn't change the model nor the view based on the <code>element.val()</code> returned value. How can I accomplish that?</p>\n",
            "last_activity_date": 1414136063,
            "question_id": 14965968,
            "score": 76,
            "tags": [
                "javascript",
                "mvvm",
                "angularjs"
            ],
            "title": "AngularJS browser autofill workaround by using a directive"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><em>I'm hoping that IE9 will have some property that exists and is testable regardless of whether it's in 7, 8 or 9 mode.</em></p>\n\n<p>Check e.g. for <strong>style.opacity</strong>, it was introduced in IE9 and is available regardless of the compatibility-mode:</p>\n\n<pre><code>&lt;![if IE]&gt; \n&lt;script&gt;\nif(typeof document.documentElement.style.opacity!='undefined')\n{\n  //this must be at least IE9 \n}\n&lt;/script&gt;\n&lt;![endif]&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Actually the user agent string is different for IE9 when being run in IE7 compatibility mode, so this would be one of the best ways to distinguish between different IE versions.</p>\n\n<p><a href=\"http://blogs.msdn.com/b/ie/archive/2010/03/23/introducing-ie9-s-user-agent-string.aspx\">Introducing IE9\u2019s User Agent String</a>:</p>\n\n<blockquote>\n  <p>Similar to IE8, IE9\u2019s Compatibility\n  View will map to IE7 Standards Mode,\n  and IE9\u2019s UA string when in\n  Compatibility View will be:</p>\n\n<pre><code>Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Trident/5.0)\n</code></pre>\n  \n  <p>In Compatibility View, IE9 reports\n  itself as IE7 through the application\n  version number (Mozilla/4.0) and\n  version token (MSIE 7.0). This is done\n  for compatibility. <strong>An incremented\n  Trident token, from \u2018Trident/4.0\u2019 to\n  \u2018Trident/5.0\u2019, allows websites to\n  distinguish between IE9 running in\n  Compat View and IE8 running in Compat\n  View</strong>.</p>\n</blockquote>\n\n<p>(emphasis added by me). So the user agent string is the same as it reports itself being \"Mozilla/4.0\" and MSIE 7.0, but IE9 will always be Trident/5.0 - no matter whether it says MSIE 7.0, MSIE 8.0 or MSIE 9.0.</p>\n\n<p>Actually you should check out this great compilation: <a href=\"http://www.zytrax.com/tech/web/browser_ids.htm\">Browser ID (User-Agent) Strings</a> or even better <a href=\"http://www.useragentstring.com/pages/Internet%20Explorer/\">useragentstrings.com</a></p>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p><code>document.documentMode</code> is the best way.</p>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>IE7 doesn't contain any information on Trident</p>\n\n<pre><code>User-Agent : Mozilla/4.0 (compatible; MSIE 7.0)\n</code></pre>\n\n<p>IE8 contains this string: \"Trident/4.0\"</p>\n\n<pre><code>User-Agent : Mozilla/4.0 (compatible; MSIE 8.0; Trident/4.0)\n</code></pre>\n\n<p><strong>IE9 contains this string: \"Trident/5.0\"</strong></p>\n\n<p>IE9 in compatability mode:</p>\n\n<pre><code>User-Agent : Mozilla/4.0 (compatible; MSIE 7.0; Trident/5.0)\n</code></pre>\n\n<p>IE9 in normal mode:</p>\n\n<pre><code>User-Agent : Mozilla/5.0 (compatible; MSIE 9.0; Trident/5.0)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Here is a <a href=\"http://i.stack.imgur.com/yzXVq.png\">table of all Browser and Document modes for IE9</a>:</p>\n\n<p><img src=\"http://i.stack.imgur.com/yzXVq.png\" alt=\"table of all Browser and Document modes\"></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>It is sometimes necessary to read the user Agent string from server Variable, not from javascript navigator object.</p>\n\n<p>Compare the differences:</p>\n\n<ul>\n<li><p>ASP classic, <strong><em>IE11</em></strong></p>\n\n<ul>\n<li><p>client javascript, navigator.userAgent: \"<strong>Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; BOIE9;ENUS)</strong>\"</p></li>\n<li><p>server ASP, Request.ServerVariables(\"HTTP_USER_AGENT\"): \"<strong>Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; BOIE9;ENUS; rv:11.0) like Gecko</strong>\"</p></li>\n</ul></li>\n<li><p>ASP classic, <strong><em>IE11 Compatibility mode</em></strong>:</p>\n\n<ul>\n<li><p>client javascript, navigator.userAgent: \"<strong>Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; BOIE9;ENUS))</strong>\"</p></li>\n<li><p>server ASP, Request.ServerVariables(\"HTTP_USER_AGENT\"): \"<strong>Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; BOIE9;ENUS)</strong>\"</p></li>\n</ul></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I need to know if the browser that's identifying itself via user agent string as being IE7 or IE8 is really those browsers, or whether it's IE9 in 7 or 8 compatibility mode.</p>\n\n<p>From what I can see in the user agent string, an IE9 in IE7 compatibility mode, provides an identical string to a real IE7. Is there an extra property/element/object that I can test to see if it's \"really\" IE9 in disguise?</p>\n\n<p>I assume the document mode won't help as the page my script is loaded into could either be forcing quirks or forcing a specific setting.</p>\n\n<p>I'm hoping that IE9 will have some property that exists and is testable regardless of whether it's in 7, 8 or 9 mode.</p>\n\n<hr>\n\n<p><sub><em>Edited to add\u2026</em></sub></p>\n\n<p>OK, I see where I was going wrong now. I was using the \"Browser Mode\" dropdown and switching it to IE8 and IE7 and thinking this was \"IE8 compatibility mode\" and \"IE7 compatibility mode\" respectively. This is of course not true. The developer tools' Browser mode really is switching it to \"be like\" those old browsers, so it's only right that the original useragent strings be reported.</p>\n\n<p>If I leave the browser mode in IE9 or IE9 compatibility and try the document mode dropdown variants instead, then I do in fact get \"Trident/5.0\" present in all 8 combinations (two browser modes and 4 document modes). I just need to steer clear of choosing browser mode IE7 and IE8 because they really are (simulated) IE7 and IE8.</p>\n\n<p>So there's no way a page, a non-developer user, a meta tag, or Microsoft's compatibility list will be able to put IE9 into this unidentifiable state.</p>\n\n<p>Just using <code>if(navigator.userAgent.indexOf(\"Trident/5\")&gt;-1)</code> will be sufficient.</p>\n\n<p>Don't worry, this isn't for styles, formatting, logic or page content. I use feature detection for those things. I just need to detect IE9 (regardless of what mode it's in) and make a non-page content decision on that.</p>\n\n<p>Thanks for steering me towards the answer with your suggestions and links.</p>\n",
            "last_activity_date": 1386772126,
            "question_id": 5825385,
            "score": 72,
            "tags": [
                "javascript",
                "internet-explorer-9",
                "ie8-compatibility-mode"
            ],
            "title": "JavaScript: Can I detect IE9 if it&#39;s in IE7 or IE8 compatibility mode?"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>1) You can check <code>this.constructor</code>:</p>\n\n<pre><code>function x(y)\n{\n    if (this.constructor == x)\n        alert('called with new');\n    else\n         alert('called as function');\n}\n</code></pre>\n\n<p>2) Yes, the return value is just discarded when used in the <code>new</code> context</p>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>Two ways, essentially the same under the hood. You can test what the scope of <code>this</code> is or you can test what <code>this.constructor</code> is.</p>\n\n<p>If you called a method as a constructor <code>this</code> will be a new instance of the class, if you call the method as a method <code>this</code> will be the methods' context object. Similarly the constructor of an object will be the method itself if called as new, and the system Object constructor otherwise. That's clear as mud, but this should help:</p>\n\n<pre><code>var a = {};\n\na.foo = function () \n{\n  if(this==a) //'a' because the context of foo is the parent 'a'\n  {\n    //method call\n  }\n  else\n  {\n    //constructor call\n  }\n}\n\nvar bar = function () \n{\n  if(this==window) //and 'window' is the default context here\n  {\n    //method call\n  }\n  else\n  {\n    //constructor call\n  }\n}\n\na.baz = function ()\n{\n  if(this.constructor==a.baz); //or whatever chain you need to reference this method\n  {\n    //constructor call\n  }\n  else\n  {\n    //method call\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The benefit of the code below is that you don't need to specify the name of the function twice and it works for anonymous functions too. </p>\n\n<pre><code>function x() {\n    if ( (this instanceof arguments.callee) ) {\n      alert(\"called as constructor\");\n    } else {\n      alert(\"called as function\");\n    }\n}\n</code></pre>\n\n<p><strong>Update</strong>\nAs <a href=\"http://stackoverflow.com/users/15055/claudiu\">claudiu</a> have pointed out in a comment below, the above code doesn't work if you assign the constructor to the same object it has created. I have never written code that does that and have newer seen anyone else do that eighter.  </p>\n\n<p>Claudius example:</p>\n\n<pre><code>var Z = new x();\nZ.lolol = x;\nZ.lolol();\n</code></pre>\n\n<p>By adding a property to the object, it's possible to detect if the object has been initialized. </p>\n\n<pre><code>function x() {\n    if ( (this instanceof arguments.callee &amp;&amp; !this.hasOwnProperty(\"__ClaudiusCornerCase\")) ) {\n        this.__ClaudiusCornerCase=1;\n        alert(\"called as constructor\");\n    } else {\n        alert(\"called as function\");\n    }\n}\n</code></pre>\n\n<p>Even the code above will break if you delete the added property. <strong><em>You can however overwrite it with any value you like, including <code>undefined</code>, and it still works.</em></strong> But if you delete it, it will break.</p>\n\n<p>There is at this time no native support in ecmascript for detecting if a function was called as a constructor. This is the closest thing I have come up with so far, and it should work unless you delete the property.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>In my testing for <a href=\"http://packagesinjavascript.wordpress.com/\" rel=\"nofollow\">http://packagesinjavascript.wordpress.com/</a> I found the test if (this == window) to be working cross-browser in all cases, so that's the one I ended up using.</p>\n\n<p>-Stijn</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use <code>this instanceof arguments.callee</code> (optionally replacing <code>arguments.callee</code> with the function it's in, which improves performance) to check if something is called as a constructor. <strong>Do not</strong> use <code>this.constructor</code> as that can be easily changed.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I don't think what you want is possible. There simply isn't enough information available within the function to make a reliable inference.</p>\n\n<p>Looking at the ECMAScript 3rd edition spec, the steps taken when <code>new x()</code> is called are essentially:</p>\n\n<ul>\n<li>Create a new object</li>\n<li>Assign its internal [[Prototype]] property to the prototype property of <code>x</code></li>\n<li>Call <code>x</code> as normal, passing it the new object as <code>this</code></li>\n<li>If the call to <code>x</code> returned an object, return it, otherwise return the new object</li>\n</ul>\n\n<p>Nothing useful about how the function was called is made available to the executing code, so the only thing it's possible to test inside <code>x</code> is the <code>this</code> value, which is what all the answers here are doing. As you've observed, a new instance of* <code>x</code> when calling <code>x</code> as a constructor is indistinguishable from a pre-existing instance of <code>x</code> passed as <code>this</code> when calling <code>x</code> as a function, <strong>unless</strong> you assign a property to every new object created by <code>x</code> as it is constructed:</p>\n\n<pre><code>function x(y) {\n    var isConstructor = false;\n    if (this instanceof x // &lt;- You could use arguments.callee instead of x here,\n                          // except in in EcmaScript 5 strict mode.\n            &amp;&amp; !this.__previouslyConstructedByX) {\n        isConstructor = true;\n        this.__previouslyConstructedByX = true;\n    }\n    alert(isConstructor);\n}\n</code></pre>\n\n<p>Obviously this is not ideal, since you now have an extra useless property on every object constructed by <code>x</code> that could be overwritten, but I think it's the best you can do.</p>\n\n<p><strong>(*)</strong> \"instance of\" is an inaccurate term but is close enough, and more concise than \"object that has been created by calling <code>x</code> as a constructor\"</p>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>Tim Down I think is correct. I think that once you get to the point where you think you need to be able to distinguish between the two calling modes, then you should not use the \"<code>this</code>\" keyword. <code>this</code> is unreliable, and it could be the global object, or it could be some completely different object. the fact is, that having a function with these different modes of activation, some of which work as you intended, others do something totally wild, is undesirable. I think maybe you're trying to figure this out because of that.</p>\n\n<p>There is an idiomatic way to create a constructor function that behaves the same no matter how it's called. whether it's like Thing(), new Thing(), or foo.Thing(). It goes like this:</p>\n\n<pre><code>function Thing () {\n   var that = Object.create(Thing.prototype);\n   that.foo=\"bar\";\n   that.bar=\"baz\";\n   return that;\n}\n</code></pre>\n\n<p>where Object.create is a new ecmascript 5 standard method which can be implemented in regular javascript like this:</p>\n\n<pre><code>if(!Object.create) {\n    Object.create = function(Function){\n        // WebReflection Revision\n       return function(Object){\n           Function.prototype = Object;\n           return new Function;\n    }}(function(){});\n}\n</code></pre>\n\n<p>Object.create will take an object as a parameter, and return a new object with that passed in object as its prototype. </p>\n\n<p>If however, you really are trying to make a function behave differently depending on how it's called, then you are a bad person and you shouldn't write javascript code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Extending Gregs solution, this one works perfectly with the test cases you provided:</p>\n\n<pre><code>function x(y) {\n    if( this.constructor == arguments.callee &amp;&amp; !this._constructed ) {\n        this._constructed = true;\n        alert('called with new');\n    } else {\n        alert('called as function');\n    }\n}\n</code></pre>\n\n<p><strong>EDIT: adding some test cases</strong></p>\n\n<pre><code>x(4);             // OK, function\nvar X = new x(4); // OK, new\n\nvar Z = new x();  // OK, new\nZ.lolol = x; \nZ.lolol();        // OK, function\n\nvar Y = x;\nY();              // OK, function\nvar y = new Y();  // OK, new\ny.lolol = Y;\ny.lolol();        // OK, function\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>From John Resig:</p>\n\n<pre><code>function makecls() {\n\n   return function(args) {\n\n        if( this instanceof arguments.callee) {\n            if ( typeof this.init == \"function\")\n                this.init.apply(this, args.callee ? args : arguments)\n        }else{\n            return new arguments.callee(args);\n        }\n    };\n}\n\nvar User = makecls();\n\nUser.prototype.init = function(first, last){\n\n    this.name = first + last;\n};\n\nvar user = User(\"John\", \"Resig\");\n\nuser.name\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Until I saw this thread I never considered that the constructor might be a property of an instance, but I think the following code covers that rare scenario.</p>\n\n<pre><code>// Store instances in a variable to compare against the current this\n// Based on Tim Down's solution where instances are tracked\nvar Klass = (function () {\n    // Store references to each instance in a \"class\"-level closure\n    var instances = [];\n\n    // The actual constructor function\n    return function () {\n        if (this instanceof Klass &amp;&amp; instances.indexOf(this) === -1) {\n            instances.push(this);\n            console.log(\"constructor\");\n        } else {\n            console.log(\"not constructor\");\n        }\n    };\n}());\n\nvar instance = new Klass();  // \"constructor\"\ninstance.klass = Klass;\ninstance.klass();            // \"not constructor\"\n</code></pre>\n\n<p>For most cases I'll probably just check instanceof.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is no reliable way to distinguish how a function is called in JavaScript code.<sup>1</sup></p>\n\n<p>However, a function call will have <code>this</code> assigned to the global object, while a constructor will have <code>this</code> assigned to a new object. This new object cannot ever be the global object, because even if an implementation allows you to set the global object, you still haven't had the chance to do it.</p>\n\n<p>You can get the global object by having a function called as a function (heh) returning <code>this</code>.</p>\n\n<p>My intuition is that in the specification of ECMAScript 1.3, constructors that have a defined behavior for when called as a function are supposed to distinguish how they were called using this comparison:</p>\n\n<pre><code>function MyClass () {\n    if ( this === (function () { return this; })() ) {\n        // called as a function\n    }\n    else {\n        // called as a constructor\n    }\n}\n</code></pre>\n\n<p>Anyway, anyone can just use a function's or constructor's <code>call</code> or <code>apply</code> and set <code>this</code> to anything. But this way, you can avoid \"initializing\" the global object:</p>\n\n<pre><code>function MyClass () {\n    if ( this === (function () { return this; })() ) {\n        // Maybe the caller forgot the \"new\" keyword\n        return new MyClass();\n    }\n    else {\n        // initialize\n    }\n}\n</code></pre>\n\n<hr>\n\n<p><sub>1. </sub>The host (aka implementation) may be able to tell the difference, if it implements the equivalent to the internal properties <code>[[Call]]</code> and <code>[[Construct]]</code>. The former is invoked for function or method expressions, while the latter is invoked for <code>new</code> expressions.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Checking for the instance type of the [this] within the constructor is the way to go. The problem is that without any further ado this approach is error prone. There is a solution however.</p>\n\n<p>Lets say that we are dealing with function ClassA(). The rudimentary approach is:</p>\n\n<pre><code>    function ClassA() {\n        if (this instanceof arguments.callee) {\n            console.log(\"called as a constructor\");\n        } else {\n            console.log(\"called as a function\");\n        }\n    }\n</code></pre>\n\n<p>There are several means that the above mentioned solution will not work as expected. Consider just these two:</p>\n\n<pre><code>    var instance = new ClassA;\n    instance.classAFunction = ClassA;\n    instance.classAFunction(); // &lt;-- this will appear as constructor call\n\n    ClassA.apply(instance); //&lt;-- this too\n</code></pre>\n\n<p>To overcome these, some suggest that either a) place some information in a field on the instance, like \"ConstructorFinished\" and check back on it or b) keep a track of your constructed objects in a list. I am uncomfortable with both, as altering every instance of ClassA is way too invasive and expensive for a type related feature to work. Collecting all objects in a list could provide garbage collection and resource issues if ClassA will have many instances.</p>\n\n<p>The way to go is to be able to control the execution of your ClassA function. The simple approach is:</p>\n\n<pre><code>    function createConstructor(typeFunction) {\n        return typeFunction.bind({});\n    }\n\n    var ClassA = createConstructor(\n        function ClassA() {\n            if (this instanceof arguments.callee) {\n                console.log(\"called as a function\");\n                return;\n            }\n            console.log(\"called as a constructor\");\n        });\n\n    var instance = new ClassA();\n</code></pre>\n\n<p>This will effectively prevent all attempts to trick with the [this] value. A bound function will always keep its original [this] context unless you call it with the <strong>new</strong> operator. </p>\n\n<p>The advanced version gives back the ability to apply the constructor on arbitrary objects. Some uses could be using the constructor as a typeconverter or providing an callable chain of base class constructors in inheritance scenarios.</p>\n\n<pre><code>    function createConstructor(typeFunction) {\n        var result = typeFunction.bind({});\n        result.apply = function (ths, args) {\n            try {\n                typeFunction.inApplyMode = true;\n                typeFunction.apply(ths, args);\n            } finally {\n                delete typeFunction.inApplyMode;\n            }\n        };\n        return result;\n    }\n\n    var ClassA = createConstructor(\n        function ClassA() {\n            if (this instanceof arguments.callee &amp;&amp; !arguments.callee.inApplyMode) {\n                console.log(\"called as a constructor\");\n            } else {\n                console.log(\"called as a function\");\n            }\n        });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you don't want to put a <code>__previouslyConstructedByX</code> property in the object - because it pollutes the object's public interface and could easily be overwritten - just don't return an instance of <code>x</code>:</p>\n\n<pre><code>function x() {\n\n    if(this instanceof x) {\n        console.log(\"You invoked the new keyword!\");\n        return that;\n    }\n    else {\n        console.log(\"No new keyword\");\n        return undefined;\n    }\n\n}\n\nx();\nvar Z = new x(); \nZ.lolol = x; \nZ.lolol();\nnew Z.lolol();\n</code></pre>\n\n<p>Now the <code>x</code> function never returns an object of type <code>x</code>, so (I think) <code>this instanceof x</code> only evaluates to true when the function is invoked with the <code>new</code> keyword.</p>\n\n<p>The downside is this effectively screws up the behaviour of <code>instanceof</code> - but depending on how much you use it (I don't tend to) that may not be a problem.</p>\n\n<hr>\n\n<p>If you're goal is for both cases to return <code>30</code>, you could return an instance of <code>Number</code> instead of an instance of <code>x</code>:</p>\n\n<pre><code>function x() {\n\n    if(this instanceof x) {\n        console.log(\"You invoked the new keyword!\");\n        var that = {};\n        return new Number(30);\n    }\n    else {\n        console.log(\"No new\");\n        return 30;\n    }\n\n}\n\nconsole.log(x());\nvar Z = new x();\nconsole.log(Z);\nZ.lolol = x;\nconsole.log(Z.lolol());\nconsole.log(new Z.lolol());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had this same problem when I tried to implement a function that returns a string instead of an object.</p>\n\n<p>It seems to be enough to check for the existence of \"this\" in the beginning of your function:</p>\n\n<pre><code>function RGB(red, green, blue) {\n    if (this) {\n        throw new Error(\"RGB can't be instantiated\");\n    }\n\n    var result = \"#\";\n    result += toHex(red);\n    result += toHex(green);\n    result += toHex(blue);\n\n    function toHex(dec) {\n        var result = dec.toString(16);\n\n        if (result.length &lt; 2) {\n            result = \"0\" + result;\n        }\n\n        return result;\n    }\n\n    return result;\n}\n</code></pre>\n\n<p>Anyway, in the end I just decided to turn my RGB() pseudoclass into an rgb() function, so I just won't try to instantiate it, thus needing no safety check at all. But that would depend on what you're trying to do.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>maybe I`m wrong but (at the cost of a parasite) the following code seems like a solution:</p>\n\n<pre><code>function x(arg) {\n    //console.debug('_' in this ? 'function' : 'constructor'); //WRONG!!!\n    //\n    // RIGHT(as accepted)\n    console.debug((this instanceof x &amp;&amp; !('_' in this)) ? 'function' : 'constructor');\n    this._ = 1;\n    return 30;\n}\nvar result1 = x(4),     // function\n    result2 = new x(4), // constructor\n    Z = new x();        // constructor\nZ.lolol = x; \nZ.lolol();              // function\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Given a function:</p>\n\n<pre><code>function x(arg) { return 30; }\n</code></pre>\n\n<p>You can call it two ways:</p>\n\n<pre><code>result = x(4);\nresult = new x(4);\n</code></pre>\n\n<p>The first returns 30, the second returns an object.</p>\n\n<p>How can you detect which way the function was called <strong>inside the function itself</strong>?</p>\n\n<p>Whatever your solution is, it must work with the following invocation as well:</p>\n\n<pre><code>var Z = new x(); \nZ.lolol = x; \nZ.lolol();\n</code></pre>\n\n<p>All the solutions currently think the <code>Z.lolol()</code> is calling it as a constructor.</p>\n",
            "last_activity_date": 1384792801,
            "question_id": 367768,
            "score": 60,
            "tags": [
                "javascript",
                "constructor"
            ],
            "title": "How to detect if a function is called as constructor?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Yes, methods you apply to elements selected using jquery, are called jquery plugins and there is <a href=\"http://docs.jquery.com/Plugins/Authoring\" rel=\"nofollow\">a good amount of info on authoring</a> within the jquery docs.</p>\n\n<p>Its worth noting that jquery <em>is</em> just javascript, so there is nothing special about a \"jquery method\".</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Yup \u2014 what you\u2019re describing is a jQuery plugin.</p>\n\n<p>To write a jQuery plugin, you create a function in JavaScript, and assign it to a property on the object <code>jQuery.fn</code>.</p>\n\n<p>E.g.</p>\n\n<pre><code>jQuery.fn.myfunction = function(param) {\n    // Some code\n}\n</code></pre>\n\n<p>Within your plugin function, the <code>this</code> keyword is set to the jQuery object on which your plugin was invoked. So, when you do:</p>\n\n<pre><code>$('#my_div').myfunction()\n</code></pre>\n\n<p>Then <code>this</code> inside <code>myfunction</code> will be set to the jQuery object returned by <code>$('#my_div')</code>.</p>\n\n<p>See <a href=\"http://docs.jquery.com/Plugins/Authoring\" rel=\"nofollow\">http://docs.jquery.com/Plugins/Authoring</a> for the full story.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can write your own jQuery plugins(function which can be called on selected elements) like below:</p>\n\n<pre>(function( $ ){\n    $.fn.myFunc = function(param1, param2){\n        //this - jquery object holds your selected elements\n    }\n})( jQuery );</pre>\n\n<p><br />\nCall it later like:</p>\n\n<pre>$('div').myFunc(1, null);</pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>While there is a <strong>plethora</strong> of documentation / tutorials out there, the simple answer for your question is this:</p>\n\n<pre><code>// to create a jQuery function, you basically just extend the jQuery prototype\n// (using the fn alias)\n\n$.fn.myfunction = function () {\n    // blah\n};\n</code></pre>\n\n<p>Inside that function, the <code>this</code> variable corresponds to the jQuery wrapped set you called your function on. So something like:</p>\n\n<pre><code>$.fn.myfunction = function () {\n    console.log(this.length);\n};\n\n$('.foo').myfunction();\n</code></pre>\n\n<p>... will flush to the console the number of elements with the class <code>foo</code>.</p>\n\n<p>Of course, there is a bit more to semantics than that (as well as best practices, and all that jazz), so make sure you read up on it. </p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<pre><code>$(function () {\n    //declare function \n    $.fn.myfunction = function () {\n    return true;\n        });\n    };\n});\n\n$(document).ready(function () {\n\n    //call function\n    $(\"#my_div\").myfunction();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>From the <a href=\"http://docs.jquery.com/Plugins/Authoring\">Docs</a>:</p>\n\n<pre><code>(function( $ ){\n   $.fn.myfunction = function() {\n      alert('hello world');\n      return this;\n   }; \n})( jQuery );\n</code></pre>\n\n<p>Then you do </p>\n\n<pre><code>$('#my_div').myfunction();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 87
                },
                {
                    "body": "<p>It sounds like you want to extend the jQuery object via it's prototype (aka <a href=\"http://docs.jquery.com/Plugins/Authoring\" rel=\"nofollow\">write a jQuery plugin</a>). This would mean that every new object created through calling the jQuery function (<code>$(selector/DOM element)</code>) would have this method.</p>\n\n<p>Here is a very simple example:</p>\n\n<pre><code>$.fn.myFunction = function () {\n    alert('it works');\n};\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/hmJNa/\" rel=\"nofollow\">Demo</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To make a function available on jQuery objects you add it to the jQuery prototype (fn is a shortcut for prototype in jQuery) like this:</p>\n\n<pre><code>jQuery.fn.myFunction = function() {\n    // Usually iterate over the items and return for chainability\n    // 'this' is the elements returns by the selector\n    return this.each(function() { \n         // do something to each item matching the selector\n    }\n}\n</code></pre>\n\n<p>This is usually called a <a href=\"http://docs.jquery.com/Plugins/Authoring\" rel=\"nofollow\">jQuery plugin</a>.</p>\n\n<p>Example - <a href=\"http://jsfiddle.net/VwPrm/\" rel=\"nofollow\">http://jsfiddle.net/VwPrm/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A nice place to start learning how to write good jQuery functions is <a href=\"http://docs.jquery.com/Plugins/Authoring\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In spite off all the answers you already received, it is worth noting that you do not need to write a plugin to use jQuery in a function. Certainly if it's a simple, one-time function, I believe writing a plugin is overkill. It could be done much easier by just <strong>passing the selector to the function as a parameter</strong>. Your code would look something like this:</p>\n\n<pre><code>function myFunction($param) {\n   $param.hide();  // or whatever you want to do\n   ...\n}\n\nmyFunction($('#my_div'));\n</code></pre>\n\n<p><em>Note that the <code>$</code> in the variable name <code>$param</code> is not required. It is just a habit of mine to make it easy to remember that that variable contains a jQuery selector. You could just use <code>param</code> as well.</em></p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>You can also use <strong>extend</strong> (the way you create jQuery plugins):</p>\n\n<pre><code>$.fn.extend(\n{\n    myfunction: function () \n    {\n    },\n\n    myfunction2: function () \n    {\n    }\n});\n</code></pre>\n\n<p>Usage: </p>\n\n<pre><code>$('#my_div').myfunction();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I know that in javascript the syntax is as follows:</p>\n\n<h3>javascript</h3>\n\n<pre><code>function myfunction(param){\n  //some code\n}\n</code></pre>\n\n<p>Is there a way to declare a function in Jquery that can be added to an element?</p>\n\n<h3>Jquery</h3>\n\n<p>ex.</p>\n\n<pre><code>$('#my_div').myfunction()\n</code></pre>\n",
            "last_activity_date": 1424817776,
            "question_id": 12093192,
            "score": 56,
            "tags": [
                "javascript",
                "jquery",
                "function"
            ],
            "title": "How to create a Jquery function (Create a new Jquery method or Plugin)"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\n  var timeout = setTimeout(\"location.reload(true);\",600000);\n  function resetTimeout() {\n    clearTimeout(timeout);\n    timeout = setTimeout(\"location.reload(true);\",600000);\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>Above will refresh the page every 10 minutes unless resetTimeout() is called. For example:</p>\n\n<pre><code>&lt;a href=\"javascript:;\" onclick=\"resetTimeout();\"&gt;clicky&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The can be accomplished without javascript, with this metatag:</p>\n\n<pre><code>&lt;meta http-equiv=\"refresh\" content=\"5\" &gt;\n</code></pre>\n\n<p>where content =\"5\" are the seconds that the page will wait until refreshed.</p>\n\n<p>But you said only if there was no activity, what kind for activity would that be?</p>\n",
                    "is_accepted": false,
                    "score": 63
                },
                {
                    "body": "<p>If you want to refresh the page if there is no activity then you need to figure out how to define activity. Let's say we refresh the page every minute unless someone presses a key or moves the mouse. This uses jQuery for event binding:</p>\n\n<pre><code>&lt;script&gt;\n     var time = new Date().getTime();\n     $(document.body).bind(\"mousemove keypress\", function(e) {\n         time = new Date().getTime();\n     });\n\n     function refresh() {\n         if(new Date().getTime() - time &gt;= 60000) \n             window.location.reload(true);\n         else \n             setTimeout(refresh, 10000);\n     }\n\n     setTimeout(refresh, 10000);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>I have built a complete javascript solution as well that does not require jquery. Might be able to turn it into a plugin. I use it for fluid auto refreshing but it looks like it could help you here.</p>\n\n<p><a href=\"http://jsfiddle.net/newdark/rGRA3/\" rel=\"nofollow\">JSFiddle AutoRefresh</a></p>\n\n<pre><code>var refresh_rate = 200; //&lt;-- In seconds, change to your needs\nvar last_user_action = 0;\nvar has_focus = false;\nvar lost_focus_count = 0;\nvar focus_margin = 10; // If we lose focus more then the margin we want to refresh\n\n\nfunction reset() {\n    last_user_action = 0;\n    console.log(\"Reset\");\n}\n\nfunction windowHasFocus() {\n    has_focus = true;\n}\n\nfunction windowLostFocus() {\n    has_focus = false;\n    lost_focus_count++;\n    console.log(lost_focus_count + \" &lt;~ Lost Focus\");\n}\n\nsetInterval(function () {\n    last_user_action++;\n    refreshCheck();\n}, 1000);\n\nfunction refreshCheck() {\n    var focus = window.onfocus;\n    if ((last_user_action &gt;= refresh_rate &amp;&amp; !has_focus &amp;&amp; document.readyState == \"complete\") || lost_focus_count &gt; focus_margin) {\n        window.location.reload(); // If this is called no reset is needed\n        reset(); // We want to reset just to make sure the location reload is not called.\n    }\n\n}\nwindow.addEventListener(\"focus\", windowHasFocus, false);\nwindow.addEventListener(\"blur\", windowLostFocus, false);\nwindow.addEventListener(\"click\", reset, false);\nwindow.addEventListener(\"mousemove\", reset, false);\nwindow.addEventListener(\"keypress\", reset, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This task is very easy use following code in html header section</p>\n\n<pre><code>&lt;head&gt; &lt;meta http-equiv=\"refresh\" content=\"30\" /&gt; &lt;/head&gt;\n</code></pre>\n\n<p>It will refresh your page after 30 seconds.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>Yes dear,then you have to use Ajax technology. to changes contents of\n  particular html tag:</p>\n</blockquote>\n\n<pre><code> &lt;html&gt;\n    &lt;head&gt;\n        &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"&gt;&lt;/script&gt;\n        &lt;title&gt;Ajax Page&lt;/title&gt;\n        &lt;script&gt;\n        setInterval(function () { autoloadpage(); }, 30000); // it will call the function autoload() after each 30 seconds. \n        function autoloadpage() {\n            $.ajax({\n                url: \"URL of the destination page\",\n                type: \"POST\",\n                success: function(data) {\n                    $(\"div#wrapper\").html(data); // here the wrapper is main div\n                }\n            });\n        }\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;div id=\"wrapper\"&gt;\n    contents will be changed automatically. \n    &lt;/div&gt;\n &lt;/body&gt;\n &lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var bd = document.getElementsByTagName('body')[0];\nvar time = new Date().getTime();\n\nbd.onmousemove = goLoad;\nfunction goLoad() {\nif(new Date().getTime() - time &gt;= 1200000) {\n    time = new Date().getTime();\n    window.location.reload(true);\n    }else{\n        time = new Date().getTime();\n    }\n}\n</code></pre>\n\n<p>Each time you move the mouse it will check the last time you moved the mouse. If the time interval is greater than 20' it will reload the page, else it will renew the last-time-you-moved-the-mouse.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would consider <code>activity</code> to be whether or not the user is focused on the window. For example, when you click from one window to another (e.g. Google Chrome to iTunes, or Tab 1 to Tab 2 within an internet browser), the webpage can send a callback saying \"Im out of focus!\" or \"Im in focus!\". One could use jQuery to harness this possible lack of activity to do whatever they wanted. If I were in your position, I would use the following code to check for focus every 5 seconds, etc and reload if no focus.</p>\n\n<pre><code>var window_focus;\n$(window).focus(function() {\n    window_focus = true;\n}).blur(function() {\n    window_focus = false;\n});\nfunction checkReload(){\n    if(!window_focus){\n        location.reload();  // if not focused, reload\n    }\n}\nsetInterval(checkReload, 5000);  // check if not focused, every 5 seconds\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I automatically reload a webpage, if there have been no activity on the page for a given period of time?</p>\n",
            "last_activity_date": 1421115915,
            "question_id": 4644027,
            "score": 55,
            "tags": [
                "javascript",
                "ajax"
            ],
            "title": "How to automatically reload a page after a given period of inactivity"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>It seems like the serializer is casting the Expando to a Dictionary and then serializing it (thus the Key/Value business). Have you tried Deserializing as a Dictionary and then casting that back to an Expando?</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I solved this by writing an extension method that converts the ExpandoObject into a JSON string:</p>\n\n<pre><code>public static string Flatten(this ExpandoObject expando)\n{\n    StringBuilder sb = new StringBuilder();\n    List&lt;string&gt; contents = new List&lt;string&gt;();\n    var d = expando as IDictionary&lt;string, object&gt;;\n    sb.Append(\"{\");\n\n    foreach (KeyValuePair&lt;string, object&gt; kvp in d) {\n        contents.Add(String.Format(\"{0}: {1}\", kvp.Key,\n           JsonConvert.SerializeObject(kvp.Value)));\n    }\n    sb.Append(String.Join(\",\", contents.ToArray()));\n\n    sb.Append(\"}\");\n\n    return sb.ToString();\n}\n</code></pre>\n\n<p>This uses the excellent <a href=\"http://json.codeplex.com/\" rel=\"nofollow\">Newtonsoft</a> library.</p>\n\n<p>JsonResult then looks like this:</p>\n\n<pre><code>return JsonResult(expando.Flatten());\n</code></pre>\n\n<p>And this is returned to the browser:</p>\n\n<pre><code>\"{SomeProp: SomeValueOrClass}\"\n</code></pre>\n\n<p>And I can use it in javascript by doing this (referenced <a href=\"http://www.json.org/js.html\" rel=\"nofollow\">here</a>):</p>\n\n<pre><code>var obj = JSON.parse(myJsonString);\n</code></pre>\n\n<p>I hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I took the flattening process one step further and checked for list objects, which removes the key value nonsense. :)</p>\n\n<pre><code>public string Flatten(ExpandoObject expando)\n    {\n        StringBuilder sb = new StringBuilder();\n        List&lt;string&gt; contents = new List&lt;string&gt;();\n        var d = expando as IDictionary&lt;string, object&gt;;\n        sb.Append(\"{ \");\n\n        foreach (KeyValuePair&lt;string, object&gt; kvp in d)\n        {       \n            if (kvp.Value is ExpandoObject)\n            {\n                ExpandoObject expandoValue = (ExpandoObject)kvp.Value;\n                StringBuilder expandoBuilder = new StringBuilder();\n                expandoBuilder.Append(String.Format(\"\\\"{0}\\\":[\", kvp.Key));\n\n                String flat = Flatten(expandoValue);\n                expandoBuilder.Append(flat);\n\n                string expandoResult = expandoBuilder.ToString();\n                // expandoResult = expandoResult.Remove(expandoResult.Length - 1);\n                expandoResult += \"]\";\n                contents.Add(expandoResult);\n            }\n            else if (kvp.Value is List&lt;Object&gt;)\n            {\n                List&lt;Object&gt; valueList = (List&lt;Object&gt;)kvp.Value;\n\n                StringBuilder listBuilder = new StringBuilder();\n                listBuilder.Append(String.Format(\"\\\"{0}\\\":[\", kvp.Key));\n                foreach (Object item in valueList)\n                {\n                    if (item is ExpandoObject)\n                    {\n                        String flat = Flatten(item as ExpandoObject);\n                        listBuilder.Append(flat + \",\");\n                    }\n                }\n\n                string listResult = listBuilder.ToString();\n                listResult = listResult.Remove(listResult.Length - 1);\n                listResult += \"]\";\n                contents.Add(listResult);\n\n            }\n            else\n            { \n                contents.Add(String.Format(\"\\\"{0}\\\": {1}\", kvp.Key,\n                   JsonSerializer.Serialize(kvp.Value)));\n            }\n            //contents.Add(\"type: \" + valueType);\n        }\n        sb.Append(String.Join(\",\", contents.ToArray()));\n\n        sb.Append(\"}\");\n\n        return sb.ToString();\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You could also, make a special JSONConverter that works only for ExpandoObject and then register it in an instance of JavaScriptSerializer. This way you could serialize arrays of expando,combinations of expando objects and ... until you find another kind of object that is not getting serialized correctly(\"the way u want\"), then you make another Converter, or add another type to this one. Hope this helps.</p>\n\n<pre><code>   using System.Web.Script.Serialization;    \n   public class ExpandoJSONConverter : JavaScriptConverter\n   {\n    public override object Deserialize(IDictionary&lt;string, object&gt; dictionary, Type type, JavaScriptSerializer serializer)\n    {\n        throw new NotImplementedException();\n    }\n    public override IDictionary&lt;string, object&gt; Serialize(object obj, JavaScriptSerializer serializer)\n    {         \n        var result = new Dictionary&lt;string, object&gt;();\n        var dictionary = obj as IDictionary&lt;string, object&gt;;\n        foreach (var item in dictionary)\n            result.Add(item.Key, item.Value);\n        return result;\n    }\n    public override IEnumerable&lt;Type&gt; SupportedTypes\n    {\n        get { \n              return new ReadOnlyCollection&lt;Type&gt;(new Type[] { typeof(System.Dynamic.ExpandoObject) });\n            }\n    }\n   }\n\n    //Using converter\n    var serializer = new JavaScriptSerializer(); \n    serializer.RegisterConverters(new JavaScriptConverter[] { new ExpandoJSONConverter()});\n    var json = serializer.Serialize(obj);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>I was able to solve this same problem using <a href=\"http://nuget.org/List/Packages/JsonFx\" rel=\"nofollow\">JsonFx</a>.</p>\n\n<pre><code>        dynamic person = new System.Dynamic.ExpandoObject();\n        person.FirstName  = \"John\";\n        person.LastName   = \"Doe\";\n        person.Address    = \"1234 Home St\";\n        person.City       = \"Home Town\";\n        person.State      = \"CA\";\n        person.Zip        = \"12345\";\n\n        var writer = new JsonFx.Json.JsonWriter();\n        return writer.Write(person);\n</code></pre>\n\n<p>output:</p>\n\n<blockquote>\n  <p>{ \"FirstName\": \"John\", \"LastName\": \"Doe\", \"Address\": \"1234 Home St\",\n  \"City\": \"Home Town\", \"State\": \"CA\", \"Zip\": \"12345\" }</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here's what I did to achieve the behavior you're describing:</p>\n\n<pre><code>dynamic expando = new ExpandoObject();\nexpando.Blah = 42;\nexpando.Foo = \"test\";\n...\n\nvar d = expando as IDictionary&lt;string, object&gt;;\nd.Add(\"SomeProp\", SomeValueOrClass);\n\n// After you've added the properties you would like.\nd = d.ToDictionary(x =&gt; x.Key, x =&gt; x.Value);\nreturn new JsonResult(d);\n</code></pre>\n\n<p>The cost is that you're making a copy of the data before serializing it.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I just had the same problem and figured out something pretty weird.\nIf I do:</p>\n\n<pre><code>dynamic x = new ExpandoObject();\nx.Prop1 = \"xxx\";\nx.Prop2 = \"yyy\";\nreturn Json\n(\n    new\n    {\n        x.Prop1,\n        x.Prop2\n    }\n);\n</code></pre>\n\n<p>It works, but only if my method use HttpPost attribute. If I use HttpGet i get error.\nSo my answer works only on HttpPost. In my case it was an Ajax Call so i could change HttpGet by HttpPost.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>This may not be useful to you, but I had a similar requirement, but used a SerializableDynamicObject</p>\n\n<p>I changed the name of the dictionary to \"Fields\" and then this serializes with Json.Net to produce json which looks like:</p>\n\n<p>{\"Fields\":{\"Property1\":\"Value1\", \"Property2\":\"Value2\" etc.\nwhere Property1 and Property2 are Dynamically added properties - i.e. Dictionary Keys</p>\n\n<p>It would be perfect if I could get rid of the extra \"Fields\" property which encapsulates the rest, but I've worked around that limitation.</p>\n\n<p>Answer moved from <a href=\"http://stackoverflow.com/questions/7041902/how-can-i-serialize-dynamic-object-to-json-in-c-sharp-mvc-controller-action/11249944#comment15283703_11249944\">this question</a> on request</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is a late answer, but I had the same problem, and this question helped me solve them.\nAs a summary, I thought I should post my results, in hopes that it speeds up the implementation for others.</p>\n\n<p>First the ExpandoJsonResult, which you can return an instance of in your action. Or you can override the Json method in your controller and return it there.</p>\n\n<pre><code>public class ExpandoJsonResult : JsonResult\n{\n    public override void ExecuteResult(ControllerContext context)\n    {\n        HttpResponseBase response = context.HttpContext.Response;\n        response.ContentType = !string.IsNullOrEmpty(ContentType) ? ContentType : \"application/json\";\n        response.ContentEncoding = ContentEncoding ?? response.ContentEncoding;\n\n        if (Data != null)\n        {\n            JavaScriptSerializer serializer = new JavaScriptSerializer();\n            serializer.RegisterConverters(new JavaScriptConverter[] { new ExpandoConverter() });\n            response.Write(serializer.Serialize(Data));\n        }\n    }\n}\n</code></pre>\n\n<p>Then the converter (which supports both serialization and de-serialization. See below for an example of how to de-serialize).</p>\n\n<pre><code>public class ExpandoConverter : JavaScriptConverter\n{\n    public override object Deserialize(IDictionary&lt;string, object&gt; dictionary, Type type, JavaScriptSerializer serializer)\n    { return DictionaryToExpando(dictionary); }\n\n    public override IDictionary&lt;string, object&gt; Serialize(object obj, JavaScriptSerializer serializer)\n    { return ((ExpandoObject)obj).ToDictionary(x =&gt; x.Key, x =&gt; x.Value); }\n\n    public override IEnumerable&lt;Type&gt; SupportedTypes\n    { get { return new ReadOnlyCollection&lt;Type&gt;(new Type[] { typeof(System.Dynamic.ExpandoObject) }); } }\n\n    private ExpandoObject DictionaryToExpando(IDictionary&lt;string, object&gt; source)\n    {\n        var expandoObject = new ExpandoObject();\n        var expandoDictionary = (IDictionary&lt;string, object&gt;)expandoObject;\n        foreach (var kvp in source)\n        {\n            if (kvp.Value is IDictionary&lt;string, object&gt;) expandoDictionary.Add(kvp.Key, DictionaryToExpando((IDictionary&lt;string, object&gt;)kvp.Value));\n            else if (kvp.Value is ICollection)\n            {\n                var valueList = new List&lt;object&gt;();\n                foreach (var value in (ICollection)kvp.Value)\n                {\n                    if (value is IDictionary&lt;string, object&gt;) valueList.Add(DictionaryToExpando((IDictionary&lt;string, object&gt;)value));\n                    else valueList.Add(value);\n                }\n                expandoDictionary.Add(kvp.Key, valueList);\n            }\n            else expandoDictionary.Add(kvp.Key, kvp.Value);\n        }\n        return expandoObject;\n    }\n}\n</code></pre>\n\n<p>You can see in the ExpandoJsonResult class how to use it for serialization. To de-serialize, create the serializer and register the converter in the same way, but use</p>\n\n<pre><code>dynamic _data = serializer.Deserialize&lt;ExpandoObject&gt;(\"Your JSON string\");\n</code></pre>\n\n<p>A big thank you, to all participants here that helped me.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Using JSON.NET you can call SerializeObject to \"flatten\" the expando object:</p>\n\n<pre><code>dynamic expando = new ExpandoObject();\nexpando.name = \"John Smith\";\nexpando.age = 30;\n\nvar json = JsonConvert.SerializeObject(expando);\n</code></pre>\n\n<p>Will output: </p>\n\n<pre><code>{\"name\":\"John Smith\",\"age\":30}\n</code></pre>\n\n<p>In the context of an ASP.NET MVC Controller, the result can be returned using the Content-method:</p>\n\n<pre><code>public class JsonController : Controller\n{\n    public ActionResult Data()\n    {\n        dynamic expando = new ExpandoObject();\n        expando.name = \"John Smith\";\n        expando.age = 30;\n\n        var json = JsonConvert.SerializeObject(expando);\n\n        return Content(json, \"application/json\");\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Using returning dynamic ExpandoObject from WebApi in ASP.Net 4, the default JSON formatter seems to flatten ExpandoObjects into simple JSON object.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>JsonResult</code> uses <code>JavaScriptSerializer</code> which actually deserializes (the concrete) <code>Dictionary&lt;string, object&gt;</code> as you want.</p>\n\n<p>There's an overload of the <code>Dictionary&lt;string, object&gt;</code> constructor which takes <code>IDictionary&lt;string, object&gt;</code>.</p>\n\n<p><code>ExpandoObject</code> implements <code>IDictionary&lt;string, object&gt;</code> <sup><sub>(I think you can see where I am going here...)</sub></sup></p>\n\n<h3>Single level ExpandoObject</h3>\n\n<pre><code>dynamic expando = new ExpandoObject();\n\nexpando.hello = \"hi\";\nexpando.goodbye = \"cya\";\n\nvar dictionary = new Dictionary&lt;string, object&gt;(expando);\n\nreturn this.Json(dictionary); // or new JsonResult { Data = dictionary };\n</code></pre>\n\n<p>One line of code, using all built-in types :)</p>\n\n<h3>Nested ExpandoObjects</h3>\n\n<p>Of course if you are nesting <code>ExpandoObject</code>s then you will need to recursively convert them all into <code>Dictionary&lt;string, object&gt;</code>s:</p>\n\n<pre><code>public static Dictionary&lt;string, object&gt; RecursivelyDictionary(\n    IDictionary&lt;string, object&gt; dictionary)\n{\n    var concrete = new Dictionary&lt;string, object&gt;();\n\n    foreach (var element in dictionary)\n    {\n        var cast = element.Value as IDictionary&lt;string, object&gt;;\n        var value = cast == null ? element.Value : RecursivelyDictionary(cast);\n        concrete.Add(element.Key, value);\n    }\n\n    return concrete;\n}\n</code></pre>\n\n<p>your final code becoming </p>\n\n<pre><code>dynamic expando = new ExpandoObject();\nexpando.hello = \"hi\";\nexpando.goodbye = \"cya\";\nexpando.world = new ExpandoObject();\nexpando.world.hello = \"hello world\";\n\nvar dictionary = RecursivelyDictionary(expando);\n\nreturn this.Json(dictionary);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I really like the <code>ExpandoObject</code> while compiling a server-side dynamic object at runtime, but I am having trouble flattening this thing out during JSON serialization. First, I instantiate the object:</p>\n\n<pre><code>dynamic expando = new ExpandoObject();\nvar d = expando as IDictionary&lt;string, object&gt;;\nexpando.Add(\"SomeProp\", SomeValueOrClass);\n</code></pre>\n\n<p>So far so good. In my MVC controller, I want to then send this down as a JsonResult, so I do this:</p>\n\n<pre><code>return new JsonResult(expando);\n</code></pre>\n\n<p>This serializes the JSON into the below, to be consumed by the browser:</p>\n\n<pre><code>[{\"Key\":\"SomeProp\", \"Value\": SomeValueOrClass}]\n</code></pre>\n\n<p><b>BUT, what I'd really like is to see this:</b></p>\n\n<pre><code>{SomeProp: SomeValueOrClass}\n</code></pre>\n\n<p>I know I can achieve this if I use <code>dynamic</code> instead of <code>ExpandoObject</code> -- <code>JsonResult</code> is able to serialize the <code>dynamic</code> properties and values into a single object (with no Key or Value business), <i>but the reason I need to use <code>ExpandoObject</code> is because I don't know all of the properties I want on the object until runtime</i>, and as far as I know, I cannot dynamically add a property to a <code>dynamic</code> without using an <code>ExpandoObject</code>.</p>\n\n<p>I may have to sift through the \"Key\", \"Value\" business in my javascript, but I was hoping to figure this out prior to sending it to the client. Thanks for your help!</p>\n",
            "last_activity_date": 1414679006,
            "question_id": 5156664,
            "score": 53,
            "tags": [
                "c#",
                "javascript",
                "asp.net-mvc",
                "json",
                "expandoobject"
            ],
            "title": "How to flatten an ExpandoObject returned via JsonResult in asp.net mvc?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You're in luck, I use the exact thing in my CMS</p>\n\n<p>When you want to store the order, just call the JavaScript method <code>saveOrder()</code>. It will make an AJAX <code>POST</code> request to saveorder.php, but of course you could always post it as a regular form.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction saveOrder() {\n    var articleorder=\"\";\n    $(\"#sortable li\").each(function(i) {\n        if (articleorder=='')\n            articleorder = $(this).attr('data-article-id');\n        else\n            articleorder += \",\" + $(this).attr('data-article-id');\n    });\n            //articleorder now contains a comma separated list of the ID's of the articles in the correct order.\n    $.post('/saveorder.php', { order: articleorder })\n        .success(function(data) {\n            alert('saved');\n        })\n        .error(function(data) { \n            alert('Error: ' + data); \n        }); \n}\n&lt;/script&gt;\n&lt;ul id=\"sortable\"&gt;\n&lt;?php\n//my way to get all the articles, but you should of course use your own method.\n$articles = Page::Articles();\nforeach($articles as $article) {\n    ?&gt;\n    &lt;li data-article-id='&lt;?=$article-&gt;Id()?&gt;'&gt;&lt;?=$article-&gt;Title()?&gt;&lt;/li&gt;\n    &lt;?\n}               \n?&gt;   \n&lt;/ul&gt;\n   &lt;input type='button' value='Save order' onclick='saveOrder();'/&gt;\n</code></pre>\n\n<p>In saveorder.php; Keep in mind I removed all verification and checking.</p>\n\n<pre><code>&lt;?php\n$orderlist = explode(',', $_POST['order']);\nforeach ($orderlist as $k=&gt;$order) {\n  echo 'Id for position ' . $k . ' = ' . $order . '&lt;br&gt;';\n}     \n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is a good <a href=\"http://www.youtube.com/watch?v=3mOs0VY_sIw\" rel=\"nofollow\">tutorial on YouTube</a> describing how to go about your task.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The jQuery UI <a href=\"http://api.jqueryui.com/sortable/\"><code>sortable</code></a> feature includes a <a href=\"http://api.jqueryui.com/sortable/#method-serialize\"><code>serialize</code> method</a> to do this. It's quite simple, really. Here's a quick example that sends the data to the specified URL as soon as an element has changes position.</p>\n\n<pre><code>$('#element').sortable({\n    axis: 'y',\n    update: function (event, ui) {\n        var data = $(this).sortable('serialize');\n\n        // POST to server using $.post or $.ajax\n        $.ajax({\n            data: data,\n            type: 'POST',\n            url: '/your/url/here'\n        });\n    }\n});\n</code></pre>\n\n<p>What this does is that it creates an array of the elements using the elements <code>id</code>. So, I usually do something like this:</p>\n\n<pre><code>&lt;ul id=\"sortable\"&gt;\n   &lt;li id=\"item-1\"&gt;&lt;/li&gt;\n   &lt;li id=\"item-2\"&gt;&lt;/li&gt;\n   ...\n&lt;/ul&gt;\n</code></pre>\n\n<p>When you use the <code>serialize</code> option, it will create a POST query string like this: <code>item[]=1&amp;item[]=2</code> etc. So if you make use - for example - your database IDs in the <code>id</code> attribute, you can then simply iterate through the POSTed array and update the elements' positions accordingly.</p>\n\n<p>For example, in PHP:</p>\n\n<pre><code>$i = 0;\n\nforeach ($_POST['item'] as $value) {\n    // Execute statement:\n    // UPDATE [Table] SET [Position] = $i WHERE [EntityId] = $value\n    $i++;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/ryTsN/\">Example on jsFiddle.</a></p>\n",
                    "is_accepted": true,
                    "score": 73
                },
                {
                    "body": "<p>Thought this might help as well. A) it was designed to keep payload to its minimum while sending back to server, after each sort. (instead of sending all elements each time or iterating through many elements that server might chuck out) B) I needed to send back custom id without compromising the id / name of the element. This code will get the list from asp.net server and then upon sorting only 2 values will be sent back: The db id of sorted element and db id of the element next to which it was dropped. Based on those 2 values, server can easily identify the new postion.</p>\n\n<pre><code>&lt;div id=\"planlist\" style=\"width:1000px\"&gt;\n    &lt;ul style=\"width:1000px\"&gt;\n        &lt;asp:Repeater ID=\"plTabsButton\" runat=\"server\"&gt;\n            &lt;ItemTemplate&gt;\n                &lt;asp:Literal ID=\"section1\" runat=\"server\"&gt;&lt;/asp:Literal&gt;\n                &lt;%--&lt;li plid=\"listId\"&gt;&lt;a href=\"#pl-1\"&gt;List 1&lt;/a&gt;&lt;/li&gt;--%&gt;\n            &lt;/ItemTemplate&gt;\n        &lt;/asp:Repeater&gt;\n    &lt;/ul&gt;\n    &lt;asp:Repeater ID=\"plTabContainer\" runat=\"server\"&gt;\n        &lt;ItemTemplate&gt;\n            &lt;asp:Literal ID=\"section2\" runat=\"server\"&gt;&lt;/asp:Literal&gt;\n            &lt;%--&lt;div id=\"listHrefId\"&gt;&lt;/div&gt;--%&gt;\n        &lt;/ItemTemplate&gt;\n    &lt;/asp:Repeater&gt;\n&lt;/div&gt;\n&lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n    $(function () {\n        var tabs = $(\"#planlist\").tabs();\n        tabs.find(\".ui-tabs-nav\").sortable({\n            axis: \"x\",\n            stop: function () {\n                tabs.tabs(\"refresh\");\n            },\n            update: function (event, ui) {\n                //db id of the item sorted\n                alert(ui.item.attr('plid'));\n                //db id of the item next to which the dragged item was dropped\n                alert(ui.item.prev().attr('plid'));\n\n                //make ajax call\n            }\n        });\n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is my example.</p>\n\n<p><a href=\"https://github.com/luisnicg/jQuery-Sortable-and-PHP\" rel=\"nofollow\">https://github.com/luisnicg/jQuery-Sortable-and-PHP</a></p>\n\n<p>You need to catch the order in the update event</p>\n\n<pre><code>    $( \"#sortable\" ).sortable({\n    placeholder: \"ui-state-highlight\",\n    update: function( event, ui ) {\n        var sorted = $( \"#sortable\" ).sortable( \"serialize\", { key: \"sort\" } );\n        $.post( \"form/order.php\",{ 'choices[]': sorted});\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I want to use the jQuery UI (Sortable) function to allow users to set an order and then on change it would write to the database and update it. Can someone write an example on how this would be done?</p>\n\n<p>Thanks in advanced.</p>\n",
            "last_activity_date": 1419920019,
            "question_id": 15633341,
            "score": 25,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "mysql",
                "jquery-ui"
            ],
            "title": "jQuery UI Sortable, then write order into a database"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I think you are looking for $evalAsync <a href=\"http://docs.angularjs.org/api/ng.%24rootScope.Scope#%24evalAsync\">http://docs.angularjs.org/api/ng.$rootScope.Scope#$evalAsync</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Following Misko's advice, if you want async operation, then instead of $timeout() (which doesn't work)</p>\n\n<pre><code>$timeout(function () { $scope.assignmentsLoaded(data); }, 1000);\n</code></pre>\n\n<p>use $evalAsync() (which does work)</p>\n\n<pre><code>$scope.$evalAsync(function() { $scope.assignmentsLoaded(data); } );\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mrajcok/UCasc/\" rel=\"nofollow\">Fiddle</a>.  I also added a \"remove row of data\" link that will modify $scope.assignments, simulating a change to the data/model -- to show that changing the data works.</p>\n\n<p>The <a href=\"http://docs.angularjs.org/guide/concepts#runtime\" rel=\"nofollow\">Runtime</a> section of the Conceptual Overview page explains that evalAsync should be used when you need something to occur outside the current stack frame, but before the browser renders.  (Guessing here... \"current stack frame\" probably includes Angular DOM updates.)  Use $timeout if you need something to occur after the browser renders.</p>\n\n<p>However, as you already found out, I don't think there is any need for async operation here.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>This post is old, but I change your code to:</p>\n\n<pre><code>scope.$watch(\"assignments\", function (value) {//I change here\n  var val = value || null;            \n  if (val)\n    element.dataTable({\"bDestroy\": true});\n  });\n}\n</code></pre>\n\n<p>see:\n<a href=\"http://jsfiddle.net/dnzY9/\" rel=\"nofollow\">http://jsfiddle.net/dnzY9/</a></p>\n\n<p>I hope it help you</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>You can use the 'jQuery Passthrough' module of the <a href=\"http://angular-ui.github.io/ui-utils/\" rel=\"nofollow\">angular-ui utils</a>. I successfully binded a jQuery touch carousel plugin to some images that I retrieve async from a web service and render them with ng-repeat.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can also create a directive that runs your code in the link function.</p>\n\n<p>See <a href=\"http://stackoverflow.com/a/11953711/535203\">that stackoverflow reply</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Finally i found the solution, i was using a REST service to update my collection. In order to convert datatable jquery is the follow code:</p>\n\n<pre><code>$scope.$watchCollection( 'conferences', function( old, nuew ) {\n        if( old === nuew ) return;\n        $( '#dataTablex' ).dataTable().fnDestroy();\n        $timeout(function () {\n                $( '#dataTablex' ).dataTable();\n        });\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>First, the right place to mess with rendering are directives. My advice would be to wrap DOM manipulating jQuery plugins by directives like this one.</p>\n\n<p>I had the same problem and came up with this snippet. It uses <code>$watch</code> and <code>$evalAsync</code> to ensure your code runs after directives like <code>ng-repeat</code> have been resolved and templates like <code>{{ value }}</code> got rendered.</p>\n\n<pre><code>app.directive('name', function() {\n    return {\n        link: function($scope, element, attrs) {\n            // Trigger when number of children changes,\n            // including by directives like ng-repeat\n            var watch = $scope.$watch(function() {\n                return element.children().length;\n            }, function() {\n                // Wait for templates to render\n                $scope.$evalAsync(function() {\n                    // Finally, directives are evaluated\n                    // and templates are renderer here\n                    var children = element.children();\n                    console.log(children);\n                });\n            });\n        },\n    };\n});\n</code></pre>\n\n<p>Hope this can help you prevent some struggle.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>i've had to do this quite often. i have a directive and need to do some jquery stuff after model stuff is fully loaded into the DOM. so i put my logic in the link: function of the directive and wrap the code in a setTimeout(function() { ..... }, 1); the setTimout will fire after the DOM is loaded and 1 milisecond is the shortest amount of time after DOM is loaded before code would execute. this seems to work for me but i do wish angular raised an event once a template was done loading so that directives used by that template could do jquery stuff and access DOM elements. hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In some scenarios where you update a service and redirect to a new view(page) and then your directive gets loaded before your services are updated then you can use $rootScope.$broadcast if your $watch or $timeout fails</p>\n\n<p>View</p>\n\n<pre><code>&lt;service-history log=\"log\" data-ng-repeat=\"log in requiedData\"&gt;&lt;/service-history&gt;\n</code></pre>\n\n<p>Controller</p>\n\n<pre><code>app.controller(\"MyController\",['$scope','$rootScope', function($scope, $rootScope) {\n\n   $scope.$on('$viewContentLoaded', function () {\n       SomeSerive.getHistory().then(function(data) {\n           $scope.requiedData = data;\n           $rootScope.$broadcast(\"history-updation\");\n       });\n  });\n\n}]);\n</code></pre>\n\n<p>Directive</p>\n\n<pre><code>app.directive(\"serviceHistory\", function() {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n           log: '='\n        },\n        link: function($scope, element, attrs) {\n            function updateHistory() {\n               if(log) {\n                   //do something\n               }\n            }\n            $rootScope.$on(\"history-updation\", updateHistory);\n        }\n   };\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have found the simplest (cheap and cheerful) solution is simply add an empty span with ng-show = \"someFunctionThatAlwaysReturnsZeroOrNothing()\" to the end of the last element rendered.  This function will be run when to check if the span element should be displayed.  Execute any other code in this function.</p>\n\n<p>I realize this is not the most elegant way to do things, however, it works for me...</p>\n\n<p>I had a similar situation, though slightly reversed where I needed to remove a loading indicator when an animation began, on mobile devices angular was initializing much faster than the animation to be displayed, and using an ng-cloak was insufficient as the loading indicator was removed well before any real data was displayed.  In this case I just added the my return 0 function to the first rendered element, and in that function flipped the var that hides the loading indicator. (of course I added an ng-hide to the loading indicator triggered by this function.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an Angular template in the DOM.  When my controller gets new data from a service, it updates the model in the $scope, and re-renders the template.  All good so far.</p>\n\n<p>The issue is that I need to also do some extra work after the template has been re-rendered and is in the DOM (in this case a jQuery plugin).</p>\n\n<p>It seems like there should be an event to listen to, such as AfterRender, but I can't find any such thing.  Maybe a directive would be a way to go, but it seemed to fire too early as well.</p>\n\n<p>Here is a jsFiddle outlining my problem: <a href=\"http://jsfiddle.net/gorebash/uNREn/3/\">Fiddle-AngularIssue</a></p>\n\n<p><strong>== UPDATE ==</strong></p>\n\n<p>Based on helpful comments, I've accordingly switched to a directive to handle DOM manipulation, and implemented a model $watch inside the directive.  However, I still am having the same base issue; the code inside of the $watch event fires before the template has been compiled and inserted into the DOM, therefore, the jquery plugin is always evaluating an empty table.</p>\n\n<p>Interestingly, if I remove the async call the whole thing works fine, so that's a step in the right direction.</p>\n\n<p>Here is my updated Fiddle to reflect these changes: <a href=\"http://jsfiddle.net/uNREn/12/\">http://jsfiddle.net/uNREn/12/</a></p>\n",
            "last_activity_date": 1426053752,
            "question_id": 12304291,
            "score": 70,
            "tags": [
                "javascript",
                "jquery",
                "dom",
                "angularjs"
            ],
            "title": "AngularJS: How to run additional code after AngularJS has rendered a template?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<pre><code>function timeSince(date) {\n\n    var seconds = Math.floor((new Date() - date) / 1000);\n\n    var interval = Math.floor(seconds / 31536000);\n\n    if (interval &gt; 1) {\n        return interval + \" years\";\n    }\n    interval = Math.floor(seconds / 2592000);\n    if (interval &gt; 1) {\n        return interval + \" months\";\n    }\n    interval = Math.floor(seconds / 86400);\n    if (interval &gt; 1) {\n        return interval + \" days\";\n    }\n    interval = Math.floor(seconds / 3600);\n    if (interval &gt; 1) {\n        return interval + \" hours\";\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval &gt; 1) {\n        return interval + \" minutes\";\n    }\n    return Math.floor(seconds) + \" seconds\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 61
                },
                {
                    "body": "<p>I haven't checked (although it wouldn't be hard to), but I think that <strong>Stack Exchange sites use the <a href=\"http://timeago.yarp.com/\"><code>jquery.timeago</code> plugin</a> to create these time strings</strong>.</p>\n\n<hr>\n\n<p>It's quite easy to use the plugin, and it's clean and updates automatically. </p>\n\n<p>Here's a quick sample (from the plugin's home page):</p>\n\n<blockquote>\n  <p>First, load jQuery and the plugin:</p>\n  \n  <p><code>&lt;script src=\"jquery.min.js\"\n  type=\"text/javascript\"&gt;&lt;/script&gt;\n  &lt;script src=\"jquery.timeago.js\"\n  type=\"text/javascript\"&gt;&lt;/script&gt;</code></p>\n  \n  <p>Now, let's attach it to your\n  timestamps on DOM ready:</p>\n  \n  <p><code>jQuery(document).ready(function() {<br>\n  jQuery(\"abbr.timeago\").timeago(); });</code></p>\n  \n  <p>This will turn all <code>abbr</code> elements\n  with a class of <code>timeago</code> and an ISO\n  8601 timestamp in the title: <code>&lt;abbr\n  class=\"timeago\"\n  title=\"2008-07-17T09:24:17Z\"&gt;July 17,\n  2008&lt;/abbr&gt;</code> into something like this:\n  <code>&lt;abbr class=\"timeago\" title=\"July 17,\n  2008\"&gt;about a year ago&lt;/abbr&gt;</code> which\n  yields: about a year ago. As time\n  passes, the timestamps will\n  automatically update.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>You might want to look at humanized_time_span: <a href=\"https://github.com/layam/js_humanized_time_span\">https://github.com/layam/js_humanized_time_span</a></p>\n\n<p>It's framework agnostic and fully customizable.</p>\n\n<p>Just download / include the script and then you can do this:</p>\n\n<pre><code>humanized_time_span(\"2011-05-11 12:00:00\")  \n   =&gt; '3 hours ago'\n\nhumanized_time_span(\"2011-05-11 12:00:00\", \"2011-05-11 16:00:00)  \n   =&gt; '4 hours ago'\n</code></pre>\n\n<p>or even this:</p>\n\n<pre><code>var custom_date_formats = {\n  past: [\n    { ceiling: 60, text: \"less than a minute ago\" },\n    { ceiling: 86400, text: \"$hours hours, $minutes minutes and $seconds seconds ago\" },\n    { ceiling: null, text: \"$years years ago\" }\n  ],\n  future: [\n    { ceiling: 60, text: \"in less than a minute\" },\n    { ceiling: 86400, text: \"in $hours hours, $minutes minutes and $seconds seconds time\" },\n    { ceiling: null, text: \"in $years years\" }\n  ]\n}\n\nhumanized_time_span(\"2010/09/10 10:00:00\", \"2010/09/10 10:00:05\", custom_date_formats) \n  =&gt; \"less than a minute ago\"\n</code></pre>\n\n<p>Read the docs for more info.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Changed the function above to</p>\n\n<pre><code>   function timeSince(date) {\nvar seconds = Math.floor(((new Date().getTime()/1000) - date)),\ninterval = Math.floor(seconds / 31536000);\n\nif (interval &gt; 1) return interval + \"y\";\n\ninterval = Math.floor(seconds / 2592000);\nif (interval &gt; 1) return interval + \"m\";\n\ninterval = Math.floor(seconds / 86400);\nif (interval &gt;= 1) return interval + \"d\";\n\ninterval = Math.floor(seconds / 3600);\nif (interval &gt;= 1) return interval + \"h\";\n\ninterval = Math.floor(seconds / 60);\nif (interval &gt; 1) return interval + \"m \";\n\nreturn Math.floor(seconds) + \"s\";\n}\n</code></pre>\n\n<p>Otherwise it would show things like \"75 minutes\" (between 1 and 2 hours). It also now assumes input date is a unix timestamp</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>function time_ago(time){\n\nswitch (typeof time) {\n    case 'number': break;\n    case 'string': time = +new Date(time); break;\n    case 'object': if (time.constructor === Date) time = time.getTime(); break;\n    default: time = +new Date();\n}\nvar time_formats = [\n    [60, 'seconds', 1], // 60\n    [120, '1 minute ago', '1 minute from now'], // 60*2\n    [3600, 'minutes', 60], // 60*60, 60\n    [7200, '1 hour ago', '1 hour from now'], // 60*60*2\n    [86400, 'hours', 3600], // 60*60*24, 60*60\n    [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\n    [604800, 'days', 86400], // 60*60*24*7, 60*60*24\n    [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\n    [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\n    [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\n    [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\n    [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\n    [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\n    [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\n    [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\n];\nvar seconds = (+new Date() - time) / 1000,\n    token = 'ago', list_choice = 1;\n\nif (seconds == 0) {\n    return 'Just now'\n}\nif (seconds &lt; 0) {\n    seconds = Math.abs(seconds);\n    token = 'from now';\n    list_choice = 2;\n}\nvar i = 0, format;\nwhile (format = time_formats[i++])\n    if (seconds &lt; format[0]) {\n        if (typeof format[2] == 'string')\n            return format[list_choice];\n        else\n            return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\n    }\nreturn time;\n}\n</code></pre>\n\n<p>this will show you past and previous time formats like '2 days ago' '10 minutes from now' and you can pass it either a Date object, a numeric timestamp or a date string</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>from now, unix timestamp param,</p>\n\n<pre><code>function timeSince(ts){\n    now = new Date();\n    ts = new Date(ts*1000);\n    var delta = now.getTime() - ts.getTime();\n\n    delta = delta/1000; //us to s\n\n    var ps, pm, ph, pd, min, hou, sec, days;\n\n    if(delta&lt;=59){\n        ps = (delta&gt;1) ? \"s\": \"\";\n        return delta+\" second\"+ps\n    }\n\n    if(delta&gt;=60 &amp;&amp; delta&lt;=3599){\n        min = Math.floor(delta/60);\n        sec = delta-(min*60);\n        pm = (min&gt;1) ? \"s\": \"\";\n        ps = (sec&gt;1) ? \"s\": \"\";\n        return min+\" minute\"+pm+\" \"+sec+\" second\"+ps;\n    }\n\n    if(delta&gt;=3600 &amp;&amp; delta&lt;=86399){\n        hou = Math.floor(delta/3600);\n        min = Math.floor((delta-(hou*3600))/60);\n        ph = (hou&gt;1) ? \"s\": \"\";\n        pm = (min&gt;1) ? \"s\": \"\";\n        return hou+\" hour\"+ph+\" \"+min+\" minute\"+pm;\n    } \n\n    if(delta&gt;=86400){\n        days = Math.floor(delta/86400);\n        hou =  Math.floor((delta-(days*86400))/60/60);\n        pd = (days&gt;1) ? \"s\": \"\";\n        ph = (hou&gt;1) ? \"s\": \"\";\n        return days+\" day\"+pd+\" \"+hou+\" hour\"+ph;\n    }\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Might be an overkill in this case, but if the opportunity show <a href=\"http://momentjs.com/\">moment.js</a> is just awesome!</p>\n\n<p>Moment.js is a javascript datetime library, to use it for this, you'd do:</p>\n\n<pre><code>moment(yourdate).fromNow()\n</code></pre>\n\n<p><a href=\"http://momentjs.com/docs/#/displaying/fromnow/\">http://momentjs.com/docs/#/displaying/fromnow/</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Here is a slight modification on Sky Sander's solution that allows the date to be input as a string and is capable of displaying spans like \"1 minute\" instead of \"73 seconds\"</p>\n\n<pre><code>var timeSince = function(date) {\n    if (typeof date !== 'object') {\n        date = new Date(date);\n    }\n\n    var seconds = Math.floor((new Date() - date) / 1000);\n    var intervalType;\n\n    var interval = Math.floor(seconds / 31536000);\n    if (interval &gt;= 1) {\n        intervalType = 'year';\n    } else {\n        interval = Math.floor(seconds / 2592000);\n        if (interval &gt;= 1) {\n            intervalType = 'month';\n        } else {\n            interval = Math.floor(seconds / 86400);\n            if (interval &gt;= 1) {\n                intervalType = 'day';\n            } else {\n                interval = Math.floor(seconds / 3600);\n                if (interval &gt;= 1) {\n                    intervalType = \"hour\";\n                } else {\n                    interval = Math.floor(seconds / 60);\n                    if (interval &gt;= 1) {\n                        intervalType = \"minute\";\n                    } else {\n                        interval = seconds;\n                        intervalType = \"second\";\n                    }\n                }\n            }\n        }\n    }\n\n    if (interval &gt; 1 || interval === 0) {\n        intervalType += 's';\n    }\n\n    return interval + ' ' + intervalType;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>The question is how to format a JavaScript <code>Date</code> as a string stating the time elapsed similar to the way you see times displayed on Stack Overflow.</p>\n\n<p>e.g.</p>\n\n<ul>\n<li>1 minute ago</li>\n<li>1 hour ago</li>\n<li>1 day ago</li>\n<li>1 month ago</li>\n<li>1 year ago</li>\n</ul>\n",
            "last_activity_date": 1413984480,
            "question_id": 3177836,
            "score": 46,
            "tags": [
                "javascript",
                "date-formatting"
            ],
            "title": "How to format time since xxx e.g. \u201c4 minutes ago\u201d similar to Stack Exchange sites"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Yes there is! I'm so glad you asked this question because I now want to use this too.</p>\n\n<p>+1 for question, and here's your answer :)</p>\n\n<p><a href=\"http://www.lalit.org/lab/javascript-css-font-detect\">http://www.lalit.org/lab/javascript-css-font-detect</a></p>\n\n<p><strong>Code</strong> from <a href=\"http://www.lalit.org/wordpress/wp-content/uploads/2008/05/fontdetect.js?ver=0.3\">http://www.lalit.org/wordpress/wp-content/uploads/2008/05/fontdetect.js?ver=0.3</a></p>\n\n<pre><code>/**\n * JavaScript code to detect available availability of a\n * particular font in a browser using JavaScript and CSS.\n *\n * Author : Lalit Patel\n * Website: http://www.lalit.org/lab/javascript-css-font-detect/\n * License: Apache Software License 2.0\n *          http://www.apache.org/licenses/LICENSE-2.0\n * Version: 0.15 (21 Sep 2009)\n *          Changed comparision font to default from sans-default-default,\n *          as in FF3.0 font of child element didn't fallback\n *          to parent element if the font is missing.\n * Version: 0.2 (04 Mar 2012)\n *          Comparing font against all the 3 generic font families ie,\n *          'monospace', 'sans-serif' and 'sans'. If it doesn't match all 3\n *          then that font is 100% not available in the system\n * Version: 0.3 (24 Mar 2012)\n *          Replaced sans with serif in the list of baseFonts\n */\n\n/**\n * Usage: d = new Detector();\n *        d.detect('font name');\n */\nvar Detector = function() {\n    // a font will be compared against all the three default fonts.\n    // and if it doesn't match all 3 then that font is not available.\n    var baseFonts = ['monospace', 'sans-serif', 'serif'];\n\n    //we use m or w because these two characters take up the maximum width.\n    // And we use a LLi so that the same matching fonts can get separated\n    var testString = \"mmmmmmmmmmlli\";\n\n    //we test using 72px font size, we may use any size. I guess larger the better.\n    var testSize = '72px';\n\n    var h = document.getElementsByTagName(\"body\")[0];\n\n    // create a SPAN in the document to get the width of the text we use to test\n    var s = document.createElement(\"span\");\n    s.style.fontSize = testSize;\n    s.innerHTML = testString;\n    var defaultWidth = {};\n    var defaultHeight = {};\n    for (var index in baseFonts) {\n        //get the default width for the three base fonts\n        s.style.fontFamily = baseFonts[index];\n        h.appendChild(s);\n        defaultWidth[baseFonts[index]] = s.offsetWidth; //width for the default font\n        defaultHeight[baseFonts[index]] = s.offsetHeight; //height for the defualt font\n        h.removeChild(s);\n    }\n\n    function detect(font) {\n        var detected = false;\n        for (var index in baseFonts) {\n            s.style.fontFamily = font + ',' + baseFonts[index]; // name of the font along with the base font for fallback.\n            h.appendChild(s);\n            var matched = (s.offsetWidth != defaultWidth[baseFonts[index]] || s.offsetHeight != defaultHeight[baseFonts[index]]);\n            h.removeChild(s);\n            detected = detected || matched;\n        }\n        return detected;\n    }\n\n    this.detect = detect;\n};\n</code></pre>\n\n<p><strong>Summary</strong></p>\n\n<blockquote>\n  <p>How does it work?</p>\n  \n  <p>This code works on the simple principle that each character appears\n  differently in different fonts. So different fonts will take different\n  width and height for the same string of characters of same font-size.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>The JavaScript version is a bit flaky. It gets fonts by iterating through known fonts and testing. </p>\n\n<p>The most accurate way (albeit having to use a propriety plugin) is to <a href=\"http://hasseg.org/blog/post/526/getting-a-list-of-installed-fonts-with-flash-and-javascript/\">use Flash</a>. Here you can get the list of fonts without having to test for them individually using dimensions.</p>\n\n<p>You are going have to decide whether to have an exact list at the expense of not working on some devices ( iDevices, browsers without Flash plugin, etc), or a <a href=\"http://stackoverflow.com/a/3368855/31671\">partial list with better support via JavaScript only</a>.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<pre><code>&lt;SCRIPT&gt;\n    function getFonts()\n    {\n        var nFontLen = dlgHelper.fonts.count;\n        var rgFonts = new Array();\n        for ( var i = 1; i &lt; nFontLen + 1; i++ )\n            rgFonts[i] = dlgHelper.fonts(i); \n\n        rgFonts.sort();\n        for ( var j = 0; j &lt; nFontLen; j++ )\n            document.write( rgFonts[j] + \"&lt;BR&gt;\" );\n    }\n&lt;/SCRIPT&gt;\n\n&lt;BODY onload=\"getFonts()\"&gt;\n&lt;OBJECT id=dlgHelper CLASSID=\"clsid:3050f819-98b5-11cf-bb82-00aa00bdce0b\" width=\"0px\" height=\"0px\"&gt;\n&lt;/OBJECT&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In my search for this, I also found <a href=\"https://github.com/Pomax/Font.js\" rel=\"nofollow\">Font.js</a>, which adds a Font object much like Image, so it's possible to check when a font is actually ready to use. Also works on installed/system fonts. Downside is IE9+ only due to needing <code>Object.defineProperty</code> (other browsers have it), but if you are doing modern web, this seems like an even better option. (I will, sadly, have to go with the answer above, upvoted and moving on for now. :))</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way in javascript to obtain the names of all fonts (or font-families) that the browser can show?  (I want to give the user a dropdown with a list of all available fonts, and allow the user to choose a font.)\nI'd prefer not to have to hardcode this list ahead of time or send it down from the server.  (Intuitively, it seems like the browser should know what fonts it has and this should be exposed to javascript somehow.)</p>\n",
            "last_activity_date": 1419944135,
            "question_id": 3368837,
            "score": 37,
            "tags": [
                "javascript",
                "css",
                "browser",
                "fonts",
                "detection"
            ],
            "title": "list every font a user&#39;s browser can display"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Yes. It's not too tricky, and the following will work in all mainstream browsers (including IE 6, and indeed 5):</p>\n\n<p><strong>(Updated 7 September 2012 after Jukka Korpela's comment pointing out that the previous version didn't work in IE 9 standards mode)</strong></p>\n\n<p>Demo: <a href=\"http://jsfiddle.net/timdown/hGkGp/4/\">http://jsfiddle.net/timdown/hGkGp/4/</a></p>\n\n<p>Code:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function selectElementContents(el) {\n        var body = document.body, range, sel;\n        if (document.createRange &amp;&amp; window.getSelection) {\n            range = document.createRange();\n            sel = window.getSelection();\n            sel.removeAllRanges();\n            try {\n                range.selectNodeContents(el);\n                sel.addRange(range);\n            } catch (e) {\n                range.selectNode(el);\n                sel.addRange(range);\n            }\n        } else if (body.createTextRange) {\n            range = body.createTextRange();\n            range.moveToElementText(el);\n            range.select();\n        }\n    }\n&lt;/script&gt;\n\n&lt;table id=\"table\"&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;&lt;th&gt;Heading&lt;/th&gt;&lt;th&gt;Heading&lt;/th&gt;&lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        &lt;tr&gt;&lt;td&gt;cell&lt;/td&gt;&lt;td&gt;cell&lt;/td&gt;&lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;input type=\"button\" value=\"select table\"\n   onclick=\"selectElementContents( document.getElementById('table') );\"&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>I got it to work in IE9 finally by using the following script</p>\n\n<p>NOTE: It doesn't work on html tables. It HAS to be a DIV. So just put a wrapper DIV around the table you need to select!</p>\n\n<p>First I changed the HTML button code a bit:</p>\n\n<pre><code>&lt;input type=\"button\" value=\"Mark table\"    onclick=\"SelectContent('table1');\"&gt;  \n</code></pre>\n\n<p>Then changed the javascript to:</p>\n\n<pre><code>function SelectContent (el) {\n\n\nvar elemToSelect = document.getElementById (el);\n\n        if (window.getSelection) {  // all browsers, except IE before version 9\n            var selection = window.getSelection ();\n            var rangeToSelect = document.createRange ();\n            rangeToSelect.selectNodeContents (elemToSelect);\n\n            selection.removeAllRanges ();\n            selection.addRange (rangeToSelect);\n\n\n\n        }\n\n    else       // Internet Explorer before version 9\n          if (document.body.createTextRange) {    // Internet Explorer\n                var rangeToSelect = document.body.createTextRange ();\n                rangeToSelect.moveToElementText (elemToSelect);\n                rangeToSelect.select ();\n\n        }\n\n  else if (document.createRange &amp;&amp; window.getSelection) {         \n          range = document.createRange();             \n          range.selectNodeContents(el);             \n    sel = window.getSelection();     \n                  sel.removeAllRanges();             \n    sel.addRange(range);              \n }  \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I was wondering if anybody knows how to select using js the complete table, so that the user can right-click on the selection, copy it to the clipboard and then paste it on excel. If you select the table manually, the process works perfectly. But sometimes, if the table height is a few times larger than the screen, selecting it dragging the mouse gets tedious. So, I want to give the users the posibility to click on a \"select the whole table\" button and everything gets ready to be copied. </p>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1407968180,
            "question_id": 2044616,
            "score": 33,
            "tags": [
                "javascript",
                "table",
                "select",
                "highlight"
            ],
            "title": "Select a complete table with javascript (to be copied to clipboard)"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p><a href=\"http://stackoverflow.com/questions/722668/traverse-all-the-nodes-of-a-json-object-tree-with-javascript\">Traverse all the Nodes of a JSON Object Tree with JavaScript</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Once you have the JSON loaded into a JavaScript object, it's no longer a jQuery problem but is now a JavaScript problem. In JavaScript you could for instance write a search such as:</p>\n\n<pre><code>var people = myJson[\"people\"];\nvar persons = people[\"person\"];\nfor(var i=0; i &lt; persons.length; ++i) {\n    var person_i = persons[i];\n    if(person_i[\"name\"] == mySearchForName) {\n        // found ! do something with 'person_i'.\n        break;\n    }\n}\n// not found !\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>var json = {\n    \"people\": {\n        \"person\": [{\n            \"name\": \"Peter\",\n            \"age\": 43,\n            \"sex\": \"male\"},\n        {\n            \"name\": \"Zara\",\n            \"age\": 65,\n            \"sex\": \"female\"}]\n    }\n};\n$.each(json.people.person, function(i, v) {\n    if (v.name == \"Peter\") {\n        alert(v.age);\n        return;\n    }\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/ifaour/S4YYk/1/\">Example</a>.  </p>\n\n<p>Based on this <a href=\"http://stackoverflow.com/questions/1854493/jquery-search-to-any-string/1854524#1854524\">answer</a>, you could use something like:  </p>\n\n<pre><code>$(function() {\n    var json = {\n        \"people\": {\n            \"person\": [{\n                \"name\": \"Peter\",\n                \"age\": 43,\n                \"sex\": \"male\"},\n            {\n                \"name\": \"Zara\",\n                \"age\": 65,\n                \"sex\": \"female\"}]\n        }\n    };\n    $.each(json.people.person, function(i, v) {\n        if (v.name.search(new RegExp(/peter/i)) != -1) {\n            alert(v.age);\n            return;\n        }\n    });\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/ifaour/S4YYk/3/\">Example 2</a></p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>There are some js-libraries, that could help you with it:</p>\n\n<ul>\n<li>JSONPath (something like XPath for JSON-Structures) - <a href=\"http://goessner.net/articles/JsonPath/\">http://goessner.net/articles/JsonPath/</a></li>\n<li>JSONQuery - <a href=\"https://github.com/JasonSmith/jsonquery\">https://github.com/JasonSmith/jsonquery</a></li>\n</ul>\n\n<p>You might also want to take a look at <a href=\"https://github.com/brianleroux/lawnchair\">Lawnchair</a>, which is a JSON-Document-Store which works in the browser and has all sorts of querying-mechanisms.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I found ifaour's example of jQuery.each() to be helpful, but would add that jQuery.each() can be broken (that is, stopped) by returning false at the point where you've found what you're searching for:</p>\n\n<pre><code>$.each(json.people.person, function(i, v) {\n        if (v.name == \"Peter\") {\n            // found it...\n            alert(v.age);\n            return false; // stops the loop\n        }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>    var GDNUtils = {};\n\nGDNUtils.loadJquery = function () {\n    var checkjquery = window.jQuery &amp;&amp; jQuery.fn &amp;&amp; /^1\\.[3-9]/.test(jQuery.fn.jquery);\n    if (!checkjquery) {\n\n        var theNewScript = document.createElement(\"script\");\n        theNewScript.type = \"text/javascript\";\n        theNewScript.src = \"http://code.jquery.com/jquery.min.js\";\n\n        document.getElementsByTagName(\"head\")[0].appendChild(theNewScript);\n\n        // jQuery MAY OR MAY NOT be loaded at this stage\n\n\n    }\n};\n\n\n\nGDNUtils.searchJsonValue = function (jsonData, keytoSearch, valuetoSearch, keytoGet) {\n    GDNUtils.loadJquery();\n    alert('here' + jsonData.length.toString());\n    GDNUtils.loadJquery();\n\n    $.each(jsonData, function (i, v) {\n\n        if (v[keytoSearch] == valuetoSearch) {\n            alert(v[keytoGet].toString());\n\n            return;\n        }\n    });\n\n\n\n};\n\n\n\n\nGDNUtils.searchJson = function (jsonData, keytoSearch, valuetoSearch) {\n    GDNUtils.loadJquery();\n    alert('here' + jsonData.length.toString());\n    GDNUtils.loadJquery();\n    var row;\n    $.each(jsonData, function (i, v) {\n\n        if (v[keytoSearch] == valuetoSearch) {\n\n\n            row  = v;\n        }\n    });\n\n    return row;\n\n\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could use Jsel - <a href=\"https://github.com/dragonworx/jsel\" rel=\"nofollow\">https://github.com/dragonworx/jsel</a>.</p>\n\n<p>It uses a real XPath engine and is highly customizable. Runs in both Node.js and the browser.</p>\n\n<p>Given your original question, you'd find the people by name with:</p>\n\n<pre><code>// include or require jsel library (npm or browser)\nvar dom = jsel({\n    \"people\": {\n        \"person\": [{\n            \"name\": \"Peter\",\n            \"age\": 43,\n            \"sex\": \"male\"},\n        {\n            \"name\": \"Zara\",\n            \"age\": 65,\n            \"sex\": \"female\"}]\n    }\n});\nvar person = dom.select(\"//person/*[@name='Peter']\");\nperson.age === 43; // true\n</code></pre>\n\n<p>If you you were always working with the same JSON schema you could create your own schema with jsel, and be able to use shorter expressions like:</p>\n\n<pre><code>dom.select(\"//person[@name='Peter']\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use DefiantJS (<a href=\"http://defiantjs.com\" rel=\"nofollow\">http://defiantjs.com</a>) which extends the global object JSON with the method \"search\". With which you can query XPath queries on JSON structures. Example:</p>\n\n<pre><code>var byId = function(s) {return document.getElementById(s);},\ndata = {\n   \"people\": {\n      \"person\": [\n         {\n            \"name\": \"Peter\",\n            \"age\": 43,\n            \"sex\": \"male\"\n         },\n         {\n            \"name\": \"Zara\",\n            \"age\": 65,\n            \"sex\": \"female\"\n         }\n      ]\n   }\n},\nres = JSON.search( data, '//person[name=\"Peter\"]' );\n\nbyId('name').innerHTML = res[0].name;\nbyId('age').innerHTML = res[0].age;\nbyId('sex').innerHTML = res[0].sex;\n</code></pre>\n\n<p>Here is a working fiddle;<br/>\n<a href=\"http://jsfiddle.net/hbi99/NhL7p/\" rel=\"nofollow\">http://jsfiddle.net/hbi99/NhL7p/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have kind of similar condition plus my Search Query not limited to particular Object property ( like \"John\" Search query should be matched with first_name and also with last_name property ). After spending some hours I got this function from Google's <a href=\"https://angularjs.org/\" rel=\"nofollow\">Angular</a> project. They have taken care of every possible cases.</p>\n\n<pre><code>/* Seach in Object */\n\nvar comparator = function(obj, text) {\nif (obj &amp;&amp; text &amp;&amp; typeof obj === 'object' &amp;&amp; typeof text === 'object') {\n    for (var objKey in obj) {\n        if (objKey.charAt(0) !== '$' &amp;&amp; hasOwnProperty.call(obj, objKey) &amp;&amp;\n                comparator(obj[objKey], text[objKey])) {\n            return true;\n        }\n    }\n    return false;\n}\ntext = ('' + text).toLowerCase();\nreturn ('' + obj).toLowerCase().indexOf(text) &gt; -1;\n};\n\nvar search = function(obj, text) {\nif (typeof text == 'string' &amp;&amp; text.charAt(0) === '!') {\n    return !search(obj, text.substr(1));\n}\nswitch (typeof obj) {\n    case \"boolean\":\n    case \"number\":\n    case \"string\":\n        return comparator(obj, text);\n    case \"object\":\n        switch (typeof text) {\n            case \"object\":\n                return comparator(obj, text);\n            default:\n                for (var objKey in obj) {\n                    if (objKey.charAt(0) !== '$' &amp;&amp; search(obj[objKey], text)) {\n                        return true;\n                    }\n                }\n                break;\n        }\n        return false;\n    case \"array\":\n        for (var i = 0; i &lt; obj.length; i++) {\n            if (search(obj[i], text)) {\n                return true;\n            }\n        }\n        return false;\n    default:\n        return false;\n}\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a question about searching the JSON for the specific information. For example, I have this JSON file:</p>\n\n<pre><code> {\n    \"people\": {\n        \"person\": [\n            {\n                \"name\": \"Peter\",\n                \"age\": 43,\n                \"sex\": \"male\"\n            }, {\n                \"name\": \"Zara\",\n                \"age\": 65,\n                \"sex\": \"female\"\n            }\n        ]\n    }\n}\n</code></pre>\n\n<p>My question is, how can find a particular person by name and display that person's age with jQuery?\nFor example, I want to search the JSON for a person called Peter and when I find a match I want to display additional information about that match (about person named Peter in this case) such as person's age for example.</p>\n",
            "last_activity_date": 1403259104,
            "question_id": 5288833,
            "score": 24,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "search",
                "tree"
            ],
            "title": "How to search JSON tree with jQuery"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You should take a look <a href=\"http://www.texotela.co.uk/code/jquery/select/\" rel=\"nofollow\">here</a> for select box manipulation.\nFor what you want, i think <a href=\"http://json.org/\" rel=\"nofollow\">JSON</a> will do the right job for you.\nAnyhow, if i were you, i will do this way: \nWhen I change first select, i do an ajax request. With ajax response, i will populate the second box. Same for second box and there you have the third box populated with right data.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I prefer data structure like this:</p>\n\n<pre><code>var carMakers = [\n    { name: 'Honda', models: [\n    \t\t{ name: 'Accord', features: ['2dr', '4dr'] },\n    \t\t{ name: 'CRV', features: ['2dr', 'Hatchback'] },\n    \t\t{ name: 'Pilot', features: ['base', 'superDuper'] }\n    \t]},\n\n    { name: 'Toyota', models: [\n    \t\t{ name: 'Prius', features: ['green', 'superGreen'] },\n    \t\t{ name: 'Camry', features: ['sporty', 'square'] },\n    \t\t{ name: 'Corolla', features: ['cheap', 'superFly'] }\n    \t]}\n];\n</code></pre>\n\n<p>Given the three select lists with id's: 'maker', 'model' and 'features' you can manipulate them with this (I believe this is pretty self explanatory):</p>\n\n<pre><code>// returns array of elements whose 'prop' property is 'value'\nfunction filterByProperty(arr, prop, value) {\n    return $.grep(arr, function (item) { return item[prop] == value });\n}\n\n// populates select list from array of items given as objects: { name: 'text', value: 'value' }\nfunction populateSelect(el, items) {\n    el.options.length = 0;\n    if (items.length &gt; 0)\n    \tel.options[0] = new Option('please select', '');\n\n    $.each(items, function () {\n    \tel.options[el.options.length] = new Option(this.name, this.value);\n    });\n}\n\n// initialization\n$(document).ready(function () {\n    // populating 1st select list\n    populateSelect($('#maker').get(0), $.map(carMakers, function(maker) { return { name: maker.name, value: maker.name} }));\n\n    // populating 2nd select list\n    $('#maker').bind('change', function() {\n    \tvar makerName = this.value,\n    \t\tcarMaker = filterByProperty(carMakers, 'name', makerName),\n    \t\tmodels = [];\n\n    \tif (carMaker.length &gt; 0)\n    \t\tmodels = $.map(carMaker[0].models, function(model) { return { name: model.name, value: makerName + '.' + model.name} });\n\n    \tpopulateSelect($('#model').get(0), models);\n    \t$('#model').trigger('change');\n    });\n\n    // populating 3rd select list\n    $('#model').bind('change', function () {\n    \tvar nameAndModel = this.value.split('.'),\n    \t\tfeatures = [];\n\n    \tif (2 == nameAndModel.length) {\n    \t\tvar makerName = nameAndModel[0], \n    \t\t\tcarModel = nameAndModel[1],\n    \t\t\tcarMaker = filterByProperty(carMakers, 'name', makerName);\n\n    \t\tif (carMaker.length &gt; 0) {\n    \t\t\tvar model = filterByProperty(carMaker[0].models, 'name', carModel)\n\n    \t\t\tif (model.length &gt; 0)\n    \t\t\t\tfeatures = $.map(model[0].features, function(feature) { return { name: feature, value: makerName + '.' + carModel + '.' + feature} })\n    \t\t}\n    \t}\n\n    \tpopulateSelect($('#feature').get(0), features);\n    })\n\n    // alerting value on 3rd select list change\n    $('#feature').bind('change', function () { \n    \tif (this.value.length &gt; 0)\n    \t\talert(this.value);\n    })\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>Thanks to the answer from @Marko Dunic, I was able to build an array (data) structure that can be referenced to populate 3 select boxes. I didn't use the implementation code only because I didn't completely understand it...it works as posted. I will come back to this code later as I learn jQuery.\nMy code is posted below (obviously, your reference to jQuery may be different)</p>\n\n<pre><code>&lt;html&gt;&lt;head&gt;\n&lt;script language=\"Javascript\" src=\"javascript/jquery-1.2.6.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/JavaScript\"&gt;\nvar cars = [\n{ name: 'Honda', models: [\n{ name: 'Accord', features: ['2dr', '4dr'] },\n{ name: 'CRV', features: ['2dr', 'Hatchback'] },\n{ name: 'Pilot', features: ['base', 'superDuper'] }\n   ]},\n{ name: 'Toyota', models: [\n{ name: 'Prius', features: ['green', 'superGreen'] },\n{ name: 'Camry', features: ['sporty', 'square'] },\n{ name: 'Corolla', features: ['cheap', 'superFly'] }\n   ]\n }\n];\n$(function() {\nvar options = '' ;\nfor (var i = 0; i &lt; cars.length; i++) {\n    var opt = cars[i].name ;\n    if (i == 0){  options += '&lt;option selected value=\"' + opt + '\"&gt;' + opt + '&lt;/option&gt;'; }\n    else {options += '&lt;option value=\"' + opt + '\"&gt;' + opt + '&lt;/option&gt;'; } \n}\n$(\"#maker\").html(options);   // populate select box with array\n\nvar options = '' ;\nfor (var i=0; i &lt; cars[0].models.length; i++) { \n    var opt = cars[0].models[0].name ;\n    if (i==0){options += '&lt;option selected value=\"' + opt + '\"&gt;' + opt + '&lt;/option&gt;';}\n    else {options += '&lt;option value=\"' + opt + '\"&gt;' + opt + '&lt;/option&gt;';} \n}\n$(\"#model\").html(options);   // populate select box with array\n\nvar options = '' ;\nfor (var i=0; i &lt; cars[0].models[0].features.length; i++) { \n    var opt = cars[0].models[0].features[i] ;\n    if (i==0){options += '&lt;option selected value=\"' + opt + '\"&gt;' + opt + '&lt;/option&gt;';}\n    else {options += '&lt;option value=\"' + opt + '\"&gt;' + opt + '&lt;/option&gt;';}\n}\n$(\"#feature\").html(options);   // populate select box with array\n\n$(\"#maker\").bind(\"click\",\n    function() {\n        $(\"#model\").children().remove() ;       // clear select box\n        for(var i=0; i&lt;cars.length; i++) {\n            if (cars[i].name == this.value) {\n                var options = '' ;\n                for (var j=0; j &lt; cars[i].models.length; j++) { \n                    var opt= cars[i].models[j].name ;\n                    if (j==0) {options += '&lt;option selected value=\"' + opt + '\"&gt;' + opt + '&lt;/option&gt;';}\n                    else {options += '&lt;option value=\"' + opt + '\"&gt;' + opt + '&lt;/option&gt;';} \n                }\n                break;\n            }\n        }\n        $(\"#model\").html(options);   // populate select box with array\n\n        $(\"#feature\").children().remove() ;     // clear select box\n        for(var i=0; i&lt;cars.length; i++) {\n            for(var j=0; j&lt;cars[i].models.length; j++) {\n                if(cars[i].models[j].name == $(\"#model\").val()) {\n                    var options = '' ;\n                    for (var k=0; k &lt; cars[i].models[j].features.length; k++) { \n                        var opt = cars[i].models[j].features[k] ;\n                        if (k==0){options += '&lt;option selected value=\"' + opt + '\"&gt;' + opt + '&lt;/option&gt;';}\n                        else {options += '&lt;option value=\"' + opt + '\"&gt;' + opt + '&lt;/option&gt;';}\n                    }\n                    break;\n                }\n            }\n        }\n        $(\"#feature\").html(options);   // populate select box with array\n    });\n\n    $(\"#model\").bind(\"click\",\n        function() {\n            $(\"#feature\").children().remove() ;     // clear select box\n            for(var i=0; i&lt;cars.length; i++) {\n                for(var j=0; j&lt;cars[i].models.length; j++) {\n                    if(cars[i].models[j].name == this.value) {\n                        var options = '' ;\n                        for (var k=0; k &lt; cars[i].models[j].features.length; k++) { \n                            var opt = cars[i].models[j].features[k] ;\n                            if (k==0){options += '&lt;option selected value=\"' + opt  + '\"&gt;' + opt  + '&lt;/option&gt;';}\n                            else {options += '&lt;option value=\"' + opt  + '\"&gt;' + opt  + '&lt;/option&gt;';}\n                        }\n                        break ;\n                    }\n                }\n            }\n            $(\"#feature\").html(options);   // populate select box with array\n    });\n});\n&lt;/script&gt;\n&lt;/head&gt; &lt;body&gt;\n&lt;div id=\"selection\"&gt;\n&lt;select id=\"maker\"size=\"10\" style=\"{width=75px}\"&gt;&lt;/select&gt;\n&lt;select id=\"model\" size=\"10\" style=\"{width=75px}\"&gt;&lt;/select&gt;\n&lt;select id=\"feature\" size=\"10\"style=\"{width=75px}\"&gt;&lt;/select&gt;\n&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I really liked the solution by @Marko Dunic, but it didn't meet my needs for attaching IDs to the options.  Once I attached the IDs, I realized that I could make the JS code even smaller and simpler.  My solution is designed for when the data comes from a relational database, and the JSON input data retains the relational structure with Primary/Foreign Keys.  Here is the JSON data:</p>\n\n<pre><code>&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;Populate a select dropdown list with jQuery - WebDev Ingredients&lt;/title&gt;\n    &lt;script type=\"text/javascript\" src=\"js/jquery-1.4.2.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        var types = [ \n            { typeID: 1, name: 'Domestic'},\n            { typeID: 2, name: 'Import'},\n            { typeID: 3, name: 'Boat'}\n        ]\n        var makes = [ \n            { typeID: 1, makeID: 1, name: 'Chevy'}, \n            { typeID: 1, makeID: 2, name: 'Ford'}, \n            { typeID: 1, makeID: 3, name: 'Delorean'}, \n            { typeID: 2, makeID: 4, name: 'Honda'}, \n            { typeID: 2, makeID: 5, name: 'Toyota'}, \n            { typeID: 2, makeID: 6, name: 'Saab'} \n        ]       \n        var model = [ \n            { makeID: 1,  modelID: 1, name: 'Camaro'}, \n            { makeID: 1,  modelID: 2, name: 'Chevelle'}, \n            { makeID: 1,  modelID: 3, name: 'Nova'}, \n            { makeID: 2,  modelID: 4, name: 'Focus'}, \n            { makeID: 2,  modelID: 5, name: 'Galaxie'}, \n            { makeID: 2,  modelID: 6, name: 'Mustang'}, \n            { makeID: 4,  modelID: 7, name: 'Accord'},\n            { makeID: 4,  modelID: 8, name: 'Civic'}, \n            { makeID: 4,  modelID: 9, name: 'Odyssey'}, \n            { makeID: 5,  modelID: 10, name: 'Camry'}, \n            { makeID: 5,  modelID: 11, name: 'Corolla'}\n        ]\n        // \n        // Put this in a stand alone .js file\n        //\n        // returns array of elements whose 'prop' property is 'value' \n        function filterByProperty(arr, prop, value) { \n            return $.grep(arr, function (item) { return item[prop] == value }); \n        } \n        // populates select list from array of items given as objects: { name: 'text', value: 'value' } \n        function populateSelect(el, items) { \n            el.options.length = 0; \n            if (items.length &gt; 0) \n                el.options[0] = new Option('please select', ''); \n            $.each(items, function () { \n                el.options[el.options.length] = new Option(this.name, this.value); \n            }); \n        }  \n        // initialization \n        $(document).ready(function () { \n            // populating 1st select list \n            populateSelect($('#sType').get(0), $.map(types, function(type) { return { name: type.name, value: type.typeID} }));      \n             // populating 2nd select list \n            $('#sType').bind('change', function() { \n                var theModels = filterByProperty(makes, 'typeID', this.value);\n                populateSelect($('#sMake').get(0), $.map(theModels, function(make) { return { name: make.name, value: make.makeID} })); \n                $('#sMake').trigger('change'); \n            }); \n             // populating 3nd select list \n            $('#sMake').bind('change', function() { \n                var theSeries = filterByProperty(model, 'makeID', this.value);  \n                populateSelect($('#sModel').get(0), $.map(theSeries, function(model) { return { name: model.name, value: model.modelID} })); \n            }); \n        });\n    &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    Enter values, click submit, and look at the post parameters\n    &lt;form method=\"get\" action=\"index.php\"&gt;\n            &lt;div id=\"selection\"&gt; \n                &lt;select id=\"sType\" name=\"type_id\" style=\"{width=75px}\"&gt;&lt;/select&gt; \n                &lt;select id=\"sMake\"  name=\"make_id\" style=\"{width=75px}\"&gt;&lt;/select&gt; \n                &lt;select id=\"sModel\"  name=\"model_id\" style=\"{width=75px}\"&gt;&lt;/select&gt; \n            &lt;/div&gt;\n            &lt;input type=\"submit\"&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;  \n</code></pre>\n\n<p>Notice that my solution shifts the functionality so that Make-Model are the 2nd and 3rd text boxes, and Type ( domestic, import, boat, etc. ) are the 1st level.  I got the boilerplate JS down to 23 lines (less comments) while retaining good formatting. </p>\n\n<p>The JSON data is very easy to render from SQL queries, which are cached in java Lists on init because the Type-Make-Model rarely change.  I don't use any dynamic AJAX because that complicates the architecture, and I have a relatively small list of available values, so I just send it at the page request.</p>\n\n<p>\"Solutions should be a simple as possible, but no simpler\" - A. Einstein </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Using answers to <a href=\"http://stackoverflow.com/questions/57522/javascript-array-with-a-mix-of-literals-and-arrays\">this question</a>, I have been able to populate a select box based on the selection of another select box. ( <a href=\"http://stackoverflow.com/questions/57522/javascript-array-with-a-mix-of-literals-and-arrays#58062\">I posted my answer here</a>) Pulling the data from an array structure built server-side, stored in a .js file and referenced in the html page.</p>\n\n<p>Now I would like to add a third select box. If I had 3 sets of data (model, make, options) something like this (pseudo code):</p>\n\n<pre><code>cars : [Honda[Accord[Lx, Dx]], [Civic[2dr, Hatchback]],\n   [Toyota[Camry[Blk, Red]], [Prius[2dr,4dr]]\n</code></pre>\n\n<p>Ex: If Honda were selected, the next select box would have [Accord Civic] and if Accord were selected the next select box would have [Lx Dx]</p>\n\n<p>How can I</p>\n\n<p>1) create an array structure to hold the data? such that</p>\n\n<p>2) I can use the value from one select box to reference the needed values for the next select box</p>\n\n<p>Thanks</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>I can create the following, but can't figure out the references in a way that would help populate a select box</p>\n\n<pre><code>var cars = [\n {\"makes\"  : \"Honda\",\n  \"models\"  : [\n\t{'Accord' : [\"2dr\",\"4dr\"]} ,\n\t{'CRV'  : [\"2dr\",\"Hatchback\"]} ,\n\t{'Pilot': [\"base\",\"superDuper\"] } ]\n },\n {\"makes\"   :\"Toyota\",\n  \"models\"  : [\n\t{'Prius'   : [\"green\",\"reallyGreen\"]} ,\n\t{'Camry'   : [\"sporty\",\"square\"]} ,\n\t{'Corolla' : [\"cheap\",\"superFly\"] } ]\n } ] ;  \t\t\t\n\n alert(cars[0].models[0].Accord[0]); ---&gt; 2dr\n</code></pre>\n",
            "last_activity_date": 1319509385,
            "question_id": 180451,
            "score": 21,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Using javascript and jquery, to populate related select boxes with array structure"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I think you're looking for <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/call\"><code>call</code></a>:</p>\n\n<pre><code>myFunction.call(obj, arg1, arg2, ...);\n</code></pre>\n\n<p>This calls <code>myFunction</code> with <code>this</code> set to <code>obj</code>.</p>\n\n<p>There is also the slightly different method <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/apply\"><code>apply</code></a>, which takes the function parameters as an array:</p>\n\n<pre><code>myFunction.apply(obj, [arg1, arg2, ...]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>There are two methods defined for all functions in javascript, call() and apply(). The function syntax looks like:</p>\n\n<pre>\ncall( /* object */, /* arguments... */ );\napply(/* object */, /* arguments[] */);\n</pre>\n\n<p>What these functions do is call the function they were invoked on, assigning the value of the <i>object</i> parameter to <b>this</b>.</p>\n\n<p><pre><code>\nvar myFunction = function(){\n    alert(this.foo_variable);\n}\nmyFunction.call( document.body ); \n</pre></code></p>\n",
                    "is_accepted": true,
                    "score": 144
                },
                {
                    "body": "<p>If you want to 'store' the <code>this</code> value to a function so that you can call it seamlessly later (e.g. when you don't have access to that value anymore), you can <code>bind</code> it (not available in all browsers though):</p>\n\n<pre><code>var bound = func.bind(someThisValue);\n\n// ... later on, where someThisValue is not available anymore\n\nbound(); // will call with someThisValue as 'this'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I have a pretty good understanding of Javascript, except that I can't figure out a nice way to set the \"this\" variable.  Consider:</p>\n\n<pre><code>var myFunction = function(){\n    alert(this.foo_variable);\n}\n\nvar someObj = document.body; //using body as example object\nsomeObj.foo_variable = \"hi\"; //set foo_variable so it alerts\n\nvar old_fn = someObj.fn;   //store old value\nsomeObj.fn = myFunction;   //bind to someObj so \"this\" keyword works\nsomeObj.fn();              \nsomeObj.fn = old_fn;       //restore old value\n</code></pre>\n\n<p>Is there a way to do this without the last 4 lines?  It's rather annoying...  I've tried   binding an anonymous function, which I thought was beautiful and clever, but to no avail:</p>\n\n<pre><code>var myFunction = function(){\n    alert(this.foo_variable);\n}\n\nvar someObj = document.body;        //using body as example object\nsomeObj.foo_variable = \"hi\";        //set foo_variable so it alerts\nsomeObj.(function(){ fn(); })();    //fail.\n</code></pre>\n\n<p>Obviously, passing the variable into myFunction is an option... but that's not the point of this question.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1312827796,
            "question_id": 456967,
            "score": 79,
            "tags": [
                "javascript",
                "variables",
                "scope",
                "this"
            ],
            "title": "Javascript: how to set &quot;this&quot; variable easily?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>OK, so I can let you know how I implemented it. What I wanted to get was the UID of the facebook user clicking on the \"Like\" button inside my facebook connect app. I noticed when a user clicks on the \"like\" button, facebook fetches the URL passed to it from the button, so I simply rendered a unique like button for each logged in user with a URL of www.somewebsite.com/thisIsThePageIlike/facebookUID. When a request come to the web server with this url, it works like a callback and I process and record the UID if its the first time a user has clicked \"like\" (ie.. a record of this 'like' does not exist in the db). works for me.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It would be something like the one I have for my client's site such as </p>\n\n<pre><code>&lt;iframe src=\"http://www.facebook.com/plugins/like.php?href=www.jesterkaraoke.com&amp;amp;layout=standard&amp;amp;show_faces=false&amp;amp;width=450&amp;amp;action=like&amp;amp;colorscheme=light&amp;amp;height=35\" scrolling=\"no\" frameborder=\"0\" style=\"border:none; overflow:hidden; width:450px; height:35px;\" allowTransparency=\"true\"&gt;&lt;/iframe&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>so I simply rendered a unique like button for each logged in user with a URL of \n  www.somewebsite.com/thisIsThePageIlike/facebookUID.</p>\n</blockquote>\n\n<p>won't this defeat the purpose of having a like button and mess up your facebook search ranking? Every user will be liking a different url and so facebook will think you have a ton of pages each with a single like count.</p>\n\n<p>I am also having an issue with XFBML like buttons where the edge.create event isn't firing</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>&lt;script&gt;\n  FB.Event.subscribe('edge.create', function(href, widget) {\n    alert('You just liked the page!');\n  });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>I'm kind of late here, but check this out:\n<a href=\"http://socialmediaautomat.com/jquery-fbjlike-js.php\" rel=\"nofollow\">http://socialmediaautomat.com/jquery-fbjlike-js.php</a></p>\n\n<p>It's a jQuery plugin that allows you to add callbacks on like/unlike for fb, follow/unfollow for twitter and like/unlike in g+</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am interested in implementing the facebook \"Like\" button, but I would like to know what user is clicking on this button so I can get some useful information from this. From what I have read, facebook is leaving us in the dark on who is clicking on what. ANyone have an idea on how I could track which user clicked on a like button for a particular product? </p>\n\n<p>UPDATE: The like button is rendered by facebook either through an iFrame, or through xFBML. This is why it is difficult to track who clicks on what, or embed an onclick event, etc..</p>\n",
            "last_activity_date": 1385917670,
            "question_id": 2798622,
            "score": 45,
            "tags": [
                "javascript",
                "facebook",
                "button",
                "callback",
                "facebook-like"
            ],
            "title": "Facebook &quot;Like&quot; button callback"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There is no way to force a particular orientation in Mobile Safari; it'll always autorotate when the user rotates their device.</p>\n\n<p>Perhaps you can display something for unsupported orientations informing the user that the orientations aren't supported, and that they need to rotate the device back in order to use your web app.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>If it is possible (which I don't believe it is), then I'd strongly advise against it.  Users hate being forced into viewing pages in a particular way.  What if they're using their iphone in a dock and can't stand it in landscape mode without undocking it, or what if they prefer the landscape version of the keyboard because the keys are bigger?  </p>\n\n<p>If your design requires a particular orientation then you might want to rethink your design. </p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p><a href=\"http://snook.ca/\">Jonathan Snook</a> has a work around to this problem.  In his slides <a href=\"http://www.slideshare.net/jonathansnook/fake-it-til-you-make-it\">here</a>, he shows how to (sort of) lock to portrait (see slide 54 and 55).</p>\n\n<p>The JS code from those slides:</p>\n\n<pre><code>window.addEventListener('onorientationchange', function () {\n    if (window.orientation == -90) {\n        document.getElementById('orient').className = 'orientright';\n    }\n    if (window.orientation == 90) {\n        document.getElementById('orient').className = 'orientleft';\n    }\n    if (window.orientation == 0) {\n        document.getElementById('orient').className = '';\n    }\n}, true);\n</code></pre>\n\n<p>and the CSS:</p>\n\n<pre><code>.orientleft #shell {\n    -webkit-transform: rotate(-90deg);\n    -webkit-transform-origin:160px 160px;\n}\n\n.orientright #shell {\n    -webkit-transform: rotate(90deg);\n    -webkit-transform-origin:230px 230px;\n} \n</code></pre>\n\n<p>I tried to get this working for <strong><em>landscape</em></strong> on the iPhone, but it never looked 100% correct. I came close with the following jQueryian code, however.  This would be within the onready function.  Also note: this was within a \"saved to homescreen\" context, and I think that altered the position of the tranform-origin.</p>\n\n<pre><code>$(window).bind('orientationchange', function(e, onready){\n   if(onready){\n       $(document.body).addClass('portrait-onready');\n   }\n   if (Math.abs(window.orientation) != 90){\n       $(document.body).addClass('portrait');\n   } \n   else {\n       $(document.body).removeClass('portrait').removeClass('portrait-onready');\n   }\n});\n$(window).trigger('orientationchange', true); // fire the orientation change event at the start, to make sure \n</code></pre>\n\n<p>And the CSS:</p>\n\n<pre><code>.portrait {\n    -webkit-transform: rotate(90deg);\n    -webkit-transform-origin: 200px 190px;\n}\n.portrait-onready {\n    -webkit-transform: rotate(90deg);\n    -webkit-transform-origin: 165px 150px;\n}\n</code></pre>\n\n<p>Hope that helps someone get close to the desired result...</p>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>A <a href=\"http://dvcs.w3.org/hg/screen-orientation/raw-file/tip/Overview.html\" rel=\"nofollow\">spec</a> to implement this functionality has been proposed.</p>\n\n<p>Also, see <a href=\"http://code.google.com/p/chromium/issues/detail?id=90413\" rel=\"nofollow\">this Chromium bug</a> for additional information (still unclear whether it will be implemented in WebKit or Chromium).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I think for our case where we need to provide a consistent view of the data we are displaying on the screen for medical surveys, rotation of the device's screen cannot be allowed. We design the application to work in portrait. So the best solution for use is to either lock it, which can't be done via the browser, or display an error/message indicating the application can't be used until the orientation is fixed.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is it possible to avoid transition to landscape view in Safari for iOS when the device is rotated?</p>\n\n<p>iOS Safari has the \"orentationchange\" event, I tried to intercept it and disable the default behavior, like this:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction changeOrientation(event) {\n    alert(\"Rotate\");\n    event.preventDefault();\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onorientationchange=\"changeOrientation(event);\"&gt;\nPAGE CONTENT\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>but when testing the page on my iPhone, when I rotate the device the alert is shown, but the view switch to landscape. It seems that event.preventDefault() does not stops the rotation.</p>\n\n<p>Is there a way to block this behavior?</p>\n",
            "last_activity_date": 1378891504,
            "question_id": 5298467,
            "score": 22,
            "tags": [
                "javascript",
                "html",
                "ios",
                "safari",
                "orientation"
            ],
            "title": "Prevent orientation change in iOS Safari"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The shorthand for <code>$(document).ready(handler)</code> is <code>$(handler)</code> (where <code>handler</code> is a function). See <a href=\"http://api.jquery.com/ready\" rel=\"nofollow\">here</a>.</p>\n\n<p>The code in your question has nothing to do with <code>.ready()</code>. Rather, it is an immediately-invoked function expression (IIFE) with the jQuery object as its argument. Its purpose is to restrict the scope of at least the <code>$</code> variable to its own block so it doesn't cause conflicts. You typically see the pattern used by jQuery plugins to ensure that <code>$ == jQuery</code>.</p>\n",
                    "is_accepted": true,
                    "score": 150
                },
                {
                    "body": "<p>The shorthand is:</p>\n\n<pre><code>$(function() {\n    // Code here\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 280
                },
                {
                    "body": "<p>This is not a shorthand for <code>$(document).ready()</code>.</p>\n\n<p>The code you posted boxes the inside code and makes jQuery available as <code>$</code> without polluting the global namespace. This can be used when you want to use both prototype and jQuery on one page.</p>\n\n<p>Documented here: <a href=\"http://learn.jquery.com/using-jquery-core/avoid-conflicts-other-libraries/#use-an-immediately-invoked-function-expression\" rel=\"nofollow\">http://learn.jquery.com/using-jquery-core/avoid-conflicts-other-libraries/#use-an-immediately-invoked-function-expression</a></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>The correct shorthand is this:</p>\n\n<pre><code>$(function() {\n    // this behaves as if within document.ready\n});\n</code></pre>\n\n<hr>\n\n<p>The code you posted\u2026</p>\n\n<pre><code>(function($){\n\n//some code\n\n})(jQuery);\n</code></pre>\n\n<p>\u2026creates an anonymous function and executes it immediately with <code>jQuery</code> being passed in as the arg <code>$</code>. All it effectively does is take the code inside the function and execute it like normal, since <code>$</code> is already an alias for <code>jQuery</code>. :D</p>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>These specific lines are the usual wrapper for jQuery plugins:</p>\n\n<p>\"...to make sure that your plugin doesn't collide with other libraries that might use the dollar sign, it's a best practice to pass jQuery to a self executing function (closure) that maps it to the dollar sign so it can't be overwritten by another library in the scope of its execution.\"</p>\n\n<pre><code>(function( $ ){\n  $.fn.myPlugin = function() {\n    // Do your awesome plugin stuff here\n  };\n})( jQuery );\n</code></pre>\n\n<p>From <a href=\"http://docs.jquery.com/Plugins/Authoring\">http://docs.jquery.com/Plugins/Authoring</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>The multi-framework safe shorthand for ready is:</p>\n\n<pre><code>jQuery(function($, undefined) {\n    // $ is guaranteed to be short for jQuery in this scope\n    // undefined is provided because it could have been overwritten elsewhere\n});\n</code></pre>\n\n<p>This is because jQuery isn't the only framework that uses the <code>$</code> and <code>undefined</code> variables</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Is the following shorthand for <code>$(document).ready</code>?</p>\n\n<pre><code>(function($){\n\n//some code\n\n})(jQuery);\n</code></pre>\n\n<p>I see this pattern used a lot, but I'm unable to find any reference to it. If it is shorthand for <code>$(document).ready()</code>, is there any particular reason it might not work? In my tests it seems to always fire before the ready event.</p>\n",
            "last_activity_date": 1426175552,
            "question_id": 6004129,
            "score": 112,
            "tags": [
                "javascript",
                "jquery",
                "document.ready",
                "shorthand"
            ],
            "title": "$(document).ready shorthand"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Use the stopPropagation method:</p>\n\n<pre><code>event.stopPropagation();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>replace </p>\n\n<pre><code>event.preventDefault();\nreturn false;\n</code></pre>\n\n<p>with</p>\n\n<pre><code>event.stopPropagation();\n</code></pre>\n\n<p><strong><em>event.stopPropagation()</em></strong> </p>\n\n<blockquote>\n  <p>Stops the bubbling of an event to\n  parent elements, preventing any parent\n  handlers from being notified of the\n  event.</p>\n</blockquote>\n\n<p><strong><em>event.preventDefault()</em></strong> </p>\n\n<blockquote>\n  <p>Prevents the browser from executing\n  the default action. Use the method\n  isDefaultPrevented to know whether\n  this method was ever called (on that\n  event object).</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 128
                },
                {
                    "body": "<p>As others have mentioned, try <code>stopPropagation()</code>.</p>\n\n<p>And there is a second handler to try: <code>event.cancelBubble = true;</code> It's a IE specific handler, but it is supported in at least FF. Don't really know much about it, as I haven't used it myself, but it might be worth a shot, if all else fails.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Don't forget IE:</p>\n\n<pre><code>if (event.stopPropagation) { // W3C/addEventListener()\n        event.stopPropagation();\n    } else { // Older IE.\n        event.cancelBubble = true;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>I have a checkbox that I want to perform some Ajax action on the click event, however the checkbox is also inside a container with it's own click behaviour that I don't want to run when the checkbox is clicked. This sample illustrates what I want to do:</p>\n\n<pre><code>&lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n    \t&lt;title&gt;Test&lt;/title&gt;\n    \t&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js\"&gt;&lt;/script&gt;\n    \t&lt;script type=\"text/javascript\"&gt;\n    \t$(document).ready(function() {\n    \t\t$('#container').addClass('hidden');\n    \t\t$('#header').click(function() {\n    \t\t\tif($('#container').hasClass('hidden')) {\n    \t\t\t\t$('#container').removeClass('hidden');\n    \t\t\t} else {\n    \t\t\t\t$('#container').addClass('hidden');\n    \t\t\t}\n    \t\t});\n    \t\t$('#header input[type=checkbox]').click(function(event) {\n    \t\t\t// Do something\n    \t\t});\n    \t});\n    \t&lt;/script&gt;\n    \t&lt;style type=\"text/css\"&gt;\n    \t#container.hidden #body {\n    \t\tdisplay:none;\n    \t}\n    \t&lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    \t&lt;div id=\"container\"&gt;\n    \t\t&lt;div id=\"header\"&gt;\n    \t\t\t&lt;h1&gt;Title&lt;/h1&gt;\n    \t\t\t&lt;input type=\"checkbox\" name=\"test\" /&gt;\n    \t\t&lt;/div&gt;\n    \t\t&lt;div id=\"body\"&gt;\n    \t\t\t&lt;p&gt;Some content&lt;/p&gt;\n    \t\t&lt;/div&gt;\n    \t&lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>However, I can't figure out how to stop the event bubbling without causing the default click behaviour (checkbox becoming checked/unchecked) to not run.</p>\n\n<p>Both of the following stop the event bubbling but also don't change the checkbox state:</p>\n\n<pre><code>event.preventDefault();\nreturn false;\n</code></pre>\n",
            "last_activity_date": 1364631093,
            "question_id": 1164213,
            "score": 68,
            "tags": [
                "javascript",
                "jquery",
                "checkbox",
                "events"
            ],
            "title": "How to stop event bubbling on checkbox click"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>If firebug is enabled, window.console will not be undefined. console.firebug will return the version number.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<h1>Original answer:</h1>\n\n<p>Check for the <code>console</code> object (created only with Firebug), like such:</p>\n\n<pre><code>if (window.console &amp;&amp; window.console.firebug) {\n  //Firebug is enabled\n}\n</code></pre>\n\n<hr>\n\n<h1>Update (January 2012):</h1>\n\n<p>The Firebug developers have <a href=\"http://code.google.com/p/fbug/issues/detail?id=4772\">decided to remove <code>window.console.firebug</code></a>. You can still detect the presence of Firebug by <a href=\"http://en.wikipedia.org/wiki/Duck_typing\">duck typing</a> like</p>\n\n<pre><code>if (window.console &amp;&amp; (window.console.firebug || window.console.exception)) {\n  //Firebug is enabled\n}\n</code></pre>\n\n<p>or <a href=\"http://code.google.com/p/fbug/issues/detail?id=4772#c8\">various other approaches</a> like</p>\n\n<pre><code>if (document.getUserData('firebug-Token')) ...\nif (console.log.toString().indexOf('apply') != -1) ...\nif (typeof console.assert(1) == 'string') ...\n</code></pre>\n\n<p>but in general, there should be no need to actually do so.</p>\n",
                    "is_accepted": true,
                    "score": 88
                },
                {
                    "body": "<p>It may be impossible to detect. </p>\n\n<p>Firebug has multiple tabs, which may be disabled separately, and, are now not enabled by default. </p>\n\n<p>GMail as it is can only tell whether or not I have the \"console\" tab enabled. Probing further than this would likely require security circumvention, and you don't want to go there. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use something like this to prevent firebug calls in your code from causing errors if it's not installed.</p>\n\n<pre><code>if (!window.console || !console.firebug) {\n    (function (m, i) {\n        window.console = {};\n        while (i--) {\n            window.console[m[i]] = function () {};\n        }\n    })('log debug info warn error assert dir dirxml trace group groupEnd time timeEnd profile profileEnd count'.split(' '), 16);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Keep in mind in Chrome window.console also returns true or [<code>Object console]</code>.</p>\n\n<p>Furthermore, I would check whether Firebug is installed with </p>\n\n<p><code>if (window.console.firebug !== undefined) // firebug is installed</code>\n<br><br>\nBelow is what I get in Safari and Chrome, no firebug installed.</p>\n\n<pre><code>if (window.console.firebug) // true\nif (window.console.firebug == null) // true\nif (window.console.firebug === null) // false\n</code></pre>\n\n<p>The Is-True and Is-Not Operators obviously do type coercion, which should be avoided in JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As of Firebug version 1.9.0, <code>console.firebug</code> is no longer defined because of privacy concerns; see <a href=\"http://getfirebug.com/wiki/index.php/Firebug_Release_Notes#Firebug_1.9\">release notes</a>, <a href=\"http://code.google.com/p/fbug/issues/detail?id=4772\">bug report</a>. <strong>This breaks the above mentioned methods.</strong> Indeed, it changes the answer to Allan's question to \"there is no way\"; if there <em>is</em> another way, it's considered a bug.</p>\n\n<p>The solution instead is to check for the availability of <code>console.log</code> or whatever it is you want to use or replace.</p>\n\n<p>Here is a suggestion for a replacement for the kind of code that David Brockman is presenting above, but one that doesn't remove any existing functions. </p>\n\n<pre><code>(function () {\n    var names = ['log', 'debug', 'info', 'warn', 'error', 'assert', 'dir', 'dirxml', \n                'group', 'groupEnd', 'time', 'timeEnd', 'count', 'trace', 'profile', 'profileEnd'];\n\n    if (window.console) {\n        for (var i = 0; i &lt; names.length; i++) {\n            if (!window.console[names[i]]) {\n                window.console[names[i]] = function() {};\n            }\n        }\n    } else {\n        window.console = {};\n        for (var i = 0; i &lt; names.length; i++) {\n            window.console[names[i]] = function() {};\n        }\n    }\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Currently, the window.console.firebug has been removed by latest firebug version. because firebug is an extension based JavaScript debugger, Which defined some new function or object in window.console. So most times, you can only use this new defined functions to detection the  running status of firebug.</p>\n\n<p>such as</p>\n\n<pre><code>if(console.assert(1) === '_firebugIgnore') alert(\"firebug is running!\"); \nif((console.log+'''').indexOf('return Function.apply.call(x.log, x, arguments);') !== -1)  alert(\"firebug is running!\");\n</code></pre>\n\n<p>You may test these approach in each firebug. </p>\n\n<p>Best wishes!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What's a surefire way of detecting whether a user has Firebug enabled?</p>\n",
            "last_activity_date": 1381892747,
            "question_id": 398111,
            "score": 67,
            "tags": [
                "javascript",
                "firebug"
            ],
            "title": "Javascript that detects Firebug?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>You can't. Functions don't have names according to the standard (though mozilla has such an attribute) - they can only be assigned to variables with names. </p>\n\n<p>Also your comment:</p>\n\n<pre><code>// access fully qualified name (ie \"my.namespace.myFunc\")\n</code></pre>\n\n<p>is inside the function my.namespace.myFunc.getFn</p>\n\n<p>What you can do is return the constructor of an object created by new</p>\n\n<p>So you could say </p>\n\n<pre><code>var obj = new my.namespace.myFunc();\nconsole.info(obj.constructor); //my.namespace.myFunc\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>look here: <a href=\"http://www.tek-tips.com/viewthread.cfm?qid=1209619\" rel=\"nofollow\">http://www.tek-tips.com/viewthread.cfm?qid=1209619</a></p>\n\n<pre><code>arguments.callee.toString();\n</code></pre>\n\n<p>seems to be right for your needs.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This might work for you:</p>\n\n<pre><code>function foo() { bar(); }\n\nfunction bar() { console.log(bar.caller.name); }\n</code></pre>\n\n<p>running foo() will output \"foo\" or undefined if you call from an anonymous function.</p>\n\n<p>It works with constructors too, in which case it would output the name of the calling constructor (eg \"Foo\").</p>\n\n<p>More info here: <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/Caller\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/Caller</a></p>\n\n<p>They claim it's non-standard, but also that it's supported by all major browsers: Firefox, Safari, Chrome, Opera and IE.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>what you're doing is assigning unnamed function to a variable. you probably need named function expression instead ( <a href=\"http://kangax.github.com/nfe/\">http://kangax.github.com/nfe/</a> ).</p>\n\n<pre><code>var x = function x() {\n    console.log( arguments.callee.name );\n}\nx();\n</code></pre>\n\n<p>however I'm not sure how much cross-browser that is; there's an issue with IE6 that makes you function's name leak to the outer scope. also, arguments.callee is kind of deprecated and will result in error if you're using <code>strict mode</code>.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>The best thing to do is:</p>\n\n<pre><code>function functionName(fun) {\n  var ret = fun.toString();\n  ret = ret.substr('function '.length);\n  ret = ret.substr(0, ret.indexOf('('));\n  return ret;\n}\n</code></pre>\n\n<p>Note: Using <code>Function.caller</code> is non-standard and <code>arguments.callee</code> is forbidden in strict mode.</p>\n",
                    "is_accepted": false,
                    "score": 59
                },
                {
                    "body": "<p><strong>You could use <code>Function.callee</code></strong>:</p>\n\n<p>The native <code>arguments.caller</code> method has been deprecated, but most browsers support <code>Function.caller</code>, which will return the actual invoking object (its body of code):\n<strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fcaller\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fcaller</a></strong></p>\n\n<p><strong>You could create a source map</strong>:</p>\n\n<p>If what you need is the literal function signature (the \"name\" of it) and not the object itself, you might have to resort to something a little more customized, like creating an array reference of the API string values you'll need to access frequently. You can map them together using <code>Object.keys()</code> and your array of strings, or look into Mozilla's source maps library on GitHub, for bigger projects:\n<strong><a href=\"https://github.com/mozilla/source-map\" rel=\"nofollow\">https://github.com/mozilla/source-map</a></strong></p>\n\n<p><strong>Personal suggestion:</strong></p>\n\n<p>Your code does not work because you cannot define new variables using dot-notation like that. In JavaScript, references must be defined in order to be accessed; and must be accessible in order for them to be defined (even if deferred). In my opinion, the best way to keep things \"feeling\" procedural (e.g. easier to understand), while actually being extremely asynchronous, is to use a variation of a <em>monad</em> pattern, or other design pattern that heavily uses asynchronous computations to \"chain\" multiple methods together. Most of these libraries provide \"shifting\" functionality which allows the developer to \"hop around\" the hierarchy easily. On the <em>front-end</em>, this can be very useful (because of the hierarchical nature of the DOM); but in relational programming, there is almost always a more efficient way, that's just as easy to use, or easier.</p>\n\n<p>So, in your example, if <code>parent</code> and <code>child</code> are DOM elements, perhaps something highly monadic like jQuery (<a href=\"http://www.jquery.com\" rel=\"nofollow\">http://www.jquery.com</a>) would be a great library decision. Otherwise, I'd use a source-mapping technique, or question whether or not you actually really needed the function \"name\" in the first place -- get creative with alternative options! There are many, many ways to do the exact same things.</p>\n\n<p><strong>Example:</strong></p>\n\n<p>To \"monadify\" your code, it would look like: <strong><code>ns().parent().child()</code></strong> -- where \"child\" processes implement asynchronously on the \"promise\" that their \"parent\" processes will return the expected scope after execution:</p>\n\n<p><strong><a href=\"https://en.wikipedia.org/wiki/Monad_(functional_programming)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Monad_(functional_programming)</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>ES6</strong> (inspired by sendy halim's answer below):</p>\n\n<pre><code>myFunction.name\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\" rel=\"nofollow\">Explanation on MDN</a>. As of 2015 works in nodejs and all major browsers except IE.</p>\n\n<p><strong>ES5</strong> (inspired by Vlad's answer):</p>\n\n<p>If you have a reference to the function, you can do:</p>\n\n<pre><code>// Match:\n// - the beginning of the string\n// - the word 'function'\n// - at least some whitespace\n// - capture one or more valid javascript identifier characters\n// - optionally followed by whitespace\n// - followed by an opening brace\n//\n/^function\\s+([\\w\\$]+)\\s*\\(/.exec( myFunction.toString() )[ 1 ]\n</code></pre>\n\n<p>reduces 4 lines to one, with fewer function calls...</p>\n\n<ul>\n<li>It does sacrifice some readability, and unless it is in performance\ncritical code, I would definitely suggest wrapping it in a function\nand verifying the result is valid.</li>\n<li>I have not run unit test on this, or verified implementation\ndifferences, but in principle it should work, if not leave a comment.</li>\n<li>Note that <code>caller</code> and <code>callee</code> are considered deprecated.</li>\n</ul>\n\n<hr>\n\n<p>As an answer to the original question, I would drop parasitic inheritance and go for some more traditional OOP design patterns. I wrote a <a href=\"https://github.com/najamelan/TidBits_Javascript_OoJs\" rel=\"nofollow\">TidBits.OoJs</a> to comfortably write OOP code in JavaScript with a feature set mimicking C++ (not yet complete, but mostly).</p>\n\n<p>I see from the comments that you would like to avoid passing information <code>parent</code> needs to it's constructor. I must admit that traditional design patterns won't save you from that one though, since it is generally a considered a good thing to make your dependencies obvious and enforced.</p>\n\n<p>I would also suggest to steer away from anonymous functions. They only make debugging and profiling a PITA because everything just shows up as \"anonymous function\", and there is no benefit to them that I'm aware of.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Every function is a property of its containing object. Like:</p>\n\n<pre><code>var myCar = {\nmake: \"Ford\",\nmodel:\"Mustang\",\nyear : 1969,\nsell : function(){alert('Sold.');}\n};\nmyCar.sell();\n</code></pre>\n\n<p>So you can get the name of a given function this way:</p>\n\n<pre><code>myCar.getFnName = function(fn){\n  for(var i in this)\n    if(this[i]===fn)\n      alert(\"Function name is: \"+i);  \n};\nmyCar.getFnName(myCar.sell);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I had a similar problem and I solved it as follows:</p>\n\n<blockquote>\n  <p>Function.prototype.myname = function() {\n       return this.toString().substr( 0, this.toString().indexOf( \"(\" ) ).replace( \"function \", \"\" ) ; }</p>\n</blockquote>\n\n<p>This code implements, in a more comfortable fashion, one response I already read here at the top of this discussion.\nNow I have a member function retrieving the name of any function object.\nHere's the full script ...</p>\n\n<blockquote>\n  <p>\n  Function.prototype.myname = function() { return\n  this.toString().substr( 0, this.toString().indexOf( \"(\" ) ).replace(\n  \"function \", \"\" ) ; }</p>\n  \n  <p>function call_this( _fn ) { document.write( _fn.myname() ); }</p>\n  \n  <p>function _yeaaahhh() { // do something }</p>\n  \n  <p>call_this( _yeaaahhh ); </p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This worked for me.</p>\n\n<pre><code>function AbstractDomainClass() {\n    this.className = function() {\n        if (!this.$className) {\n            var className = this.constructor.toString();\n            className = className.substr('function '.length);\n            className = className.substr(0, className.indexOf('('));\n            this.$className = className;\n        }\n        return this.$className;\n    }\n}\n</code></pre>\n\n<p>Test code: </p>\n\n<pre><code>var obj = new AbstractDomainClass();\nexpect(obj.className()).toBe('AbstractDomainClass');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use <code>name</code> property to get the function name, unless you're using an anonymous function</p>\n\n<p>For example: </p>\n\n<pre><code>var Person = function Person () {\n  this.someMethod = function () {};\n};\n\nPerson.prototype.getSomeMethodName = function () {\n  return this.someMethod.name;\n};\n\nvar p = new Person();\n// will return \"\", because someMethod is assigned with anonymous function\nconsole.log(p.getSomeMethodName());\n</code></pre>\n\n<p>now let's try with named function</p>\n\n<pre><code>var Person = function Person () {\n  this.someMethod = function someMethod() {};\n};\n</code></pre>\n\n<p>now you can use </p>\n\n<pre><code>// will return \"someMethod\"\np.getSomeMethodName()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could use this, but it's not for all browsers, only the ones that support Error.stack</p>\n\n<pre><code>function VamosRafa(){ \n  var a = new Error().stack.match(/at (.*?) /);\n  console.log(a[1]);\n} \nVamosRafa();\n</code></pre>\n\n<p>Of course this is for the current function, but you get the idea.</p>\n\n<p>Cheers!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>as part as <code>ECMAScript 6</code> you can use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\" rel=\"nofollow\">Function.name</a> method</p>\n\n<pre><code>function doSomething() {}\n\nalert(doSomething.name); // alerts \"doSomething\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I access a function name from inside that function?  </p>\n\n<pre><code>// parasitic inheritance\nvar ns.parent.child = function() {\n  var parent = new ns.parent();\n  parent.newFunc = function() {\n\n  }\n  return parent;\n}\n\nvar ns.parent = function() {\n  // at this point, i want to know who the child is that called the parent\n  // ie\n\n}\n\nvar obj = new ns.parent.child();\n</code></pre>\n",
            "last_activity_date": 1426119321,
            "question_id": 2648293,
            "score": 66,
            "tags": [
                "javascript",
                "function"
            ],
            "title": "Javascript get Function Name?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The full list of <code>readyState</code> values is:</p>\n\n<pre><code>State  Description\n0      The request is not initialized\n1      The request has been set up\n2      The request has been sent\n3      The request is in process\n4      The request is complete\n</code></pre>\n\n<p>(from <a href=\"http://www.w3schools.com/ajax/ajax_xmlhttprequest_onreadystatechange.asp\">http://www.w3schools.com/ajax/ajax_xmlhttprequest_onreadystatechange.asp</a>)</p>\n\n<p>In practice you almost never use any of them except for 4.</p>\n\n<p><em>Some</em> XMLHttpRequest implementations may let you see partially received responses in <code>responseText</code> when <code>readyState==3</code>, but this isn't universally supported and shouldn't be relied upon.</p>\n",
                    "is_accepted": true,
                    "score": 87
                },
                {
                    "body": "<p><a href=\"http://msdn.microsoft.com/en-us/library/ms534361%28VS.85%29.aspx\">Original definitive documentation</a></p>\n\n<p><code>0</code>, <code>1</code> and <code>2</code> only track how many of the necessary methods to make a request you've called so far.</p>\n\n<p><code>3</code> tells you that the server's response has started to come in. But when you're using the <code>XMLHttpRequest</code> object from a web page there's almost nothing(*) you can do with that information, since you don't have access to the extended properties that allow you to read the partial data.</p>\n\n<p>readyState <code>4</code> is the only one that holds any meaning.</p>\n\n<p>(*: about the only conceivable use I can think of for checking for readyState <code>3</code> is that it signals some form of life at the server end, so you could possibly increase the amount of time you wait for a full response when you receive it.)</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/users/588/kieron\">kieron</a>'s answer contains w3schools ref. to which nobody rely ,\n<a href=\"http://stackoverflow.com/users/18936/bobince\">bobince</a>'s answer gives link , which actually tells native implementation of IE , </p>\n\n<p>so here is the original documentation quoted to rightly understand what readystate represents : </p>\n\n<pre><code>The XMLHttpRequest object can be in several states. The readyState attribute must return the current state, which must be one of the following values:\n\nUNSENT (numeric value 0)\nThe object has been constructed.\n\nOPENED (numeric value 1)\nThe open() method has been successfully invoked. During this state request headers can be set using setRequestHeader() and the request can be made using the send() method.\n\nHEADERS_RECEIVED (numeric value 2)\nAll redirects (if any) have been followed and all HTTP headers of the final response have been received. Several response members of the object are now available.\n\nLOADING (numeric value 3)\nThe response entity body is being received.\n\nDONE (numeric value 4)\nThe data transfer has been completed or something went wrong during the transfer (e.g. infinite redirects).\n</code></pre>\n\n<p>Please Read here : <a href=\"http://goo.gl/IlCY9q\">W3C Explaination Of ReadyState</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p><code>XMLHttpRequest</code> has 5 <code>readyState</code>s, and I only use 1 of them (the last one, <code>4</code>).</p>\n\n<p>What are the others for, and what practical applications can I use them in?</p>\n",
            "last_activity_date": 1397726911,
            "question_id": 632774,
            "score": 56,
            "tags": [
                "javascript",
                "ajax",
                "xmlhttprequest",
                "readystate"
            ],
            "title": "What do the different readystates in XMLHttpRequest mean, and how can I use them?"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p><strong>updates:</strong></p>\n\n<ul>\n<li>scaling method can affect stroke width appearance </li>\n<li>scaling method done right can keep stroke width intact</li>\n<li>canvas has ellipse method that Chrome now supports </li>\n<li>added updated tests to JSBin </li>\n</ul>\n\n<p><a href=\"http://jsbin.com/ovuret/722/edit\">JSBin Testing Example</a> (updated to test other's answers for comparison)</p>\n\n<ul>\n<li>Bezier - draw based on top left containing rect and width/height</li>\n<li>Bezier with Center - draw based on center and width/height</li>\n<li>Arcs and Scaling - draw based on drawing circle and scaling \n<ul>\n<li>see <a href=\"http://stackoverflow.com/a/8372834/415\">Deven Kalra's</a> answer</li>\n</ul></li>\n<li>Quadratic Curves - draw with quadratics\n<ul>\n<li>test appears to not draw quite the same, may be implementation</li>\n<li>see <a href=\"http://stackoverflow.com/a/15162444/415\">oyophant's</a> answer</li>\n</ul></li>\n<li>Canvas Ellipse - using W3C standard ellipse() method \n<ul>\n<li>test appears to not draw quite the same, may be implementation</li>\n<li>see <a href=\"http://stackoverflow.com/a/23184724/415\">Loktar's</a> answer</li>\n</ul></li>\n</ul>\n\n<p><strong>Original:</strong></p>\n\n<p>If you want a symmetrical oval you could always create a circle of radius width, and then scale it to the height you want (<em>edit:</em> notice this will affect stroke width appearance - see acdameli's answer), but if you want full control of the ellipse here's one way using bezier curves. </p>\n\n<pre><code>&lt;canvas id=\"thecanvas\" width=\"400\" height=\"400\"&gt;&lt;/canvas&gt;\n\n&lt;script&gt;\nvar canvas = document.getElementById('thecanvas');\n\nif(canvas.getContext) \n{\n  var ctx = canvas.getContext('2d');\n  drawEllipse(ctx, 10, 10, 100, 60);\n  drawEllipseByCenter(ctx, 60,40,20,10);\n}\n\nfunction drawEllipseByCenter(ctx, cx, cy, w, h) {\n  drawEllipse(ctx, cx - w/2.0, cy - h/2.0, w, h);\n}\n\nfunction drawEllipse(ctx, x, y, w, h) {\n  var kappa = .5522848,\n      ox = (w / 2) * kappa, // control point offset horizontal\n      oy = (h / 2) * kappa, // control point offset vertical\n      xe = x + w,           // x-end\n      ye = y + h,           // y-end\n      xm = x + w / 2,       // x-middle\n      ym = y + h / 2;       // y-middle\n\n  ctx.beginPath();\n  ctx.moveTo(x, ym);\n  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  //ctx.closePath(); // not used correctly, see comments (use to close off open path)\n  ctx.stroke();\n}\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 81
                },
                {
                    "body": "<p>You could also try using non-uniform scaling. You can provide X and Y scaling, so simply set X or Y scaling larger than the other, and draw a circle, and you have an ellipse.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I like the Bezier curves solution above. I noticed the scale also affects the line width so if you're trying to draw an ellipse that is wider than it is tall, your top and bottom \"sides\" will appear thinner than your left and right \"sides\"...</p>\n\n<p>a good example would be:</p>\n\n<pre><code>ctx.lineWidth = 4;\nctx.scale(1, 0.5);\nctx.beginPath();\nctx.arc(20, 20, 10, 0, Math.PI * 2, false);\nctx.stroke();\n</code></pre>\n\n<p>you should notice the width of the line at the peak and valley of the ellipse are half as wide as at the left and right apexes (apices?).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Yes, it is possible with two bezier curves - here's a brief tutorial/example:\n<a href=\"http://www.williammalone.com/briefs/how-to-draw-ellipse-html5-canvas/\" rel=\"nofollow\">http://www.williammalone.com/briefs/how-to-draw-ellipse-html5-canvas/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is a simplified version of solutions elsewhere. I draw a canonical circle, translate and scale and then stroke.</p>\n\n<pre><code>function ellipse(context, cx, cy, rx, ry){\n        context.save(); // save state\n        context.beginPath();\n\n        context.translate(cx-rx, cy-ry);\n        context.scale(rx, ry);\n        context.arc(1, 1, 1, 0, 2 * Math.PI, false);\n\n        context.restore(); // restore to original state\n        context.stroke();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>My solution is a bit different than all of these. Closest I think is the most voted answer above though, but I think this way is a bit cleaner and easier to comprehend.</p>\n\n<p><a href=\"http://jsfiddle.net/jaredwilli/CZeEG/4/\" rel=\"nofollow\">http://jsfiddle.net/jaredwilli/CZeEG/4/</a></p>\n\n<pre><code>    function bezierCurve(centerX, centerY, width, height) {\n    con.beginPath();\n    con.moveTo(centerX, centerY - height / 2);\n\n    con.bezierCurveTo(\n        centerX + width / 2, centerY - height / 2,\n        centerX + width / 2, centerY + height / 2,\n        centerX, centerY + height / 2\n    );\n    con.bezierCurveTo(\n        centerX - width / 2, centerY + height / 2,\n        centerX - width / 2, centerY - height / 2,\n        centerX, centerY - height / 2\n    );\n\n    con.fillStyle = 'white';\n    con.fill();\n    con.closePath();\n}\n</code></pre>\n\n<p>And then use it like this:</p>\n\n<pre><code>bezierCurve(x + 60, y + 75, 80, 130);\n</code></pre>\n\n<p>There are a couple use examples in the fiddle, along with a failed attempt to make one using quadraticCurveTo.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The bezier curve approach is great for simple ovals. For more control, you can use a loop to draw an ellipse with different values for the x and y radius (radiuses, radii?). </p>\n\n<p>Adding a rotationAngle parameter allows the oval to be rotated around its center by any angle. Partial ovals can be drawn by changing the range (var i) over which the loop runs. </p>\n\n<p>Rendering the oval this way allows you to determine the exact x,y location of all points on the line.  This is useful if the postion of other objects depend on the location and orientation of the oval. </p>\n\n<p>Here is an example of the code:</p>\n\n<pre><code>for (var i = 0 * Math.PI; i &lt; 2 * Math.PI; i += 0.01 ) {\n    xPos = centerX - (radiusX * Math.sin(i)) * Math.sin(rotationAngle * Math.PI) + (radiusY * Math.cos(i)) * Math.cos(rotationAngle * Math.PI);\n    yPos = centerY + (radiusY * Math.cos(i)) * Math.sin(rotationAngle * Math.PI) + (radiusX * Math.sin(i)) * Math.cos(rotationAngle * Math.PI);\n\n    if (i == 0) {\n        cxt.moveTo(xPos, yPos);\n    } else {\n        cxt.lineTo(xPos, yPos);\n    }\n}\n</code></pre>\n\n<p>See an interactive example here: <a href=\"http://www.scienceprimer.com/draw-oval-html5-canvas\">http://www.scienceprimer.com/draw-oval-html5-canvas</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I did a little adaptation of <a href=\"http://www.scienceprimer.com/draw-oval-html5-canvas\" rel=\"nofollow\">this code</a> (partially presented by Andrew Staroscik) for peoplo who do not want a so general ellipse and who have only the greater semi-axis and the excentricity data of the ellipse (good for astronomical javascript toys to plot orbits, for instance).</p>\n\n<p>Here you go, remembering that one can adapt the steps in <code>i</code> to have a greater precision in the drawing:</p>\n\n<pre><code>/* draw ellipse\n * x0,y0 = center of the ellipse\n * a = greater semi-axis\n * exc = ellipse excentricity (exc = 0 for circle, 0 &lt; exc &lt; 1 for ellipse, exc &gt; 1 for hyperbole)\n */\nfunction drawEllipse(ctx, x0, y0, a, exc, lineWidth, color)\n{\n    x0 += a * exc;\n    var r = a * (1 - exc*exc)/(1 + exc),\n        x = x0 + r,\n        y = y0;\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    var i = 0.01 * Math.PI;\n    var twoPi = 2 * Math.PI;\n    while (i &lt; twoPi) {\n        r = a * (1 - exc*exc)/(1 + exc * Math.cos(i));\n        x = x0 + r * Math.cos(i);\n        y = y0 + r * Math.sin(i);\n        ctx.lineTo(x, y);\n        i += 0.01;\n    }\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = color;\n    ctx.closePath();\n    ctx.stroke();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You need 4 bezier curves (and a magic number) to reliably reproduce an ellipse. See here:</p>\n\n<p><a href=\"http://www.tinaja.com/glib/ellipse4.pdf\">www.tinaja.com/glib/ellipse4.pdf</a></p>\n\n<p>Two beziers don't accurately reproduce an ellipse. To prove this, try some of the 2 bezier solutions above with equal height and width - they should ideally approximate a circle but they won't. They'll still look oval which goes to prove they aren't doing what they are supposed to. </p>\n\n<p>Here's something that should work:</p>\n\n<p><a href=\"http://jsfiddle.net/BsPsj/\">http://jsfiddle.net/BsPsj/</a></p>\n\n<p>Here's the code:</p>\n\n<pre><code>function ellipse(cx, cy, w, h){\n    var ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    var lx = cx - w/2,\n        rx = cx + w/2,\n        ty = cy - h/2,\n        by = cy + h/2;\n    var magic = 0.551784;\n    var xmagic = magic*w/2;\n    var ymagic = h*magic/2;\n    ctx.moveTo(cx,ty);\n    ctx.bezierCurveTo(cx+xmagic,ty,rx,cy-ymagic,rx,cy);\n    ctx.bezierCurveTo(rx,cy+ymagic,cx+xmagic,by,cx,by);\n    ctx.bezierCurveTo(cx-xmagic,by,lx,cy+ymagic,lx,cy);\n    ctx.bezierCurveTo(lx,cy-ymagic,cx-xmagic,ty,cx,ty);\n    ctx.stroke();\n\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Since nobody came up with an approach using the simpler <b>quadraticCurveTo</b> I am adding a solution for that. Simply replace the bezierCurveTo calls in the @Steve's <a href=\"http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas#2173084\">answer</a> with this</p>\n\n<pre><code>  ctx.quadraticCurveTo(x,y,xm,y);\n  ctx.quadraticCurveTo(xe,y,xe,ym);\n  ctx.quadraticCurveTo(xe,ye,xm,ye);\n  ctx.quadraticCurveTo(x,ye,x,ym);\n</code></pre>\n\n<p>you may also remove the closePath. The oval is looking slightly different though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a function I wrote that uses the same values as the ellipse arc in SVG. X1 &amp; Y1 are the last coordinates, X2 &amp; Y2 are the end coordinates, radius is a number value and clockwise is a boolean value. It also assumes your canvas context has already been defined.</p>\n\n<pre><code>function ellipse(x1, y1, x2, y2, radius, clockwise) {\n\nvar cBx = (x1 + x2) / 2;    //get point between xy1 and xy2\nvar cBy = (y1 + y2) / 2;\nvar aB = Math.atan2(y1 - y2, x1 - x2);  //get angle to bulge point in radians\nif (clockwise) { aB += (90 * (Math.PI / 180)); }\nelse { aB -= (90 * (Math.PI / 180)); }\nvar op_side = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2)) / 2;\nvar adj_side = Math.sqrt(Math.pow(radius, 2) - Math.pow(op_side, 2));\n\nif (isNaN(adj_side)) {\n    adj_side = Math.sqrt(Math.pow(op_side, 2) - Math.pow(radius, 2));\n}\n\nvar Cx = cBx + (adj_side * Math.cos(aB));            \nvar Cy = cBy + (adj_side * Math.sin(aB));\nvar startA = Math.atan2(y1 - Cy, x1 - Cx);       //get start/end angles in radians\nvar endA = Math.atan2(y2 - Cy, x2 - Cx);\nvar mid = (startA + endA) / 2;\nvar Mx = Cx + (radius * Math.cos(mid));\nvar My = Cy + (radius * Math.sin(mid));\ncontext.arc(Cx, Cy, radius, startA, endA, clockwise);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is another way of creating an ellipse like shape, although it uses the \"fillRect()\" function this can be used be changing the arguments in the fillRect() function.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;title&gt;Sine and cosine functions&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;canvas id=\"trigCan\" width=\"400\" height=\"400\"&gt;&lt;/canvas&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nvar canvas = document.getElementById(\"trigCan\"), ctx = canvas.getContext('2d');\nfor (var i = 0; i &lt; 360; i++) {\n    var x = Math.sin(i), y = Math.cos(i);\n    ctx.stroke();\n    ctx.fillRect(50 * 2 * x * 2 / 5 + 200, 40 * 2 * y / 4 + 200, 10, 10, true);\n}\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>With this you can even draw segments of an ellipse:</p>\n\n<pre><code>function ellipse(color, lineWidth, x, y, stretchX, stretchY, startAngle, endAngle) {\n    for (var angle = startAngle; angle &lt; endAngle; angle += Math.PI / 180) {\n        ctx.beginPath()\n        ctx.moveTo(x, y)\n        ctx.lineTo(x + Math.cos(angle) * stretchX, y + Math.sin(angle) * stretchY)\n        ctx.lineWidth = lineWidth\n        ctx.strokeStyle = color\n        ctx.stroke()\n        ctx.closePath()\n    }\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/FazAe/1/\" rel=\"nofollow\">http://jsfiddle.net/FazAe/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is now a native <a href=\"http://www.w3.org/html/wg/drafts/2dcontext/html5_canvas/#dom-context-2d-ellipse\" rel=\"nofollow\">ellipse</a> function for canvas, very similar to the arc function although now we have two radius values and a rotation which is awesome.</p>\n\n<blockquote>\n  <p>ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) </p>\n</blockquote>\n\n<p><strong><a href=\"http://jsfiddle.net/loktar/2reS9/\" rel=\"nofollow\">Live Demo</a></strong></p>\n\n<pre><code>ctx.ellipse(100, 100, 10, 15, 0, 0, Math.PI*2);\nctx.fill();\n</code></pre>\n\n<p>Only seems to work in Chrome currently</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>There doesnt seem to be a native function to draw an oval-like shape. Also i am not looking for the egg-shape.</p>\n\n<p>Is it possible to draw an oval with 2 bezier curves?\nSomebody expierenced with that?</p>\n\n<p>My purpose is to draw some eyes and actually im just using arcs.\nThanks in advance.</p>\n\n<p><strong>Solution</strong></p>\n\n<p>So scale() changes the scaling for all next shapes.\nSave() saves the settings before and restore is used to restore the settings to draw new shapes without scaling.</p>\n\n<p>Thanks to Jani</p>\n\n<pre><code>ctx.save();\nctx.scale(0.75, 1);\nctx.beginPath();\nctx.arc(20, 21, 10, 0, Math.PI*2, false);\nctx.stroke();\nctx.closePath();\nctx.restore();\n</code></pre>\n",
            "last_activity_date": 1402709317,
            "question_id": 2172798,
            "score": 49,
            "tags": [
                "javascript",
                "html5",
                "canvas"
            ],
            "title": "How to draw an oval in html5 canvas?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You seem to be confusing asynchronous IO with asynchronous functions. node.js uses asynchronous non-blocking IO because non blocking IO is better. The best way to understand it is to go watch some videos by ryan dahl.</p>\n\n<blockquote>\n  <p><strong>How do I write asynchronous functions for Node?</strong></p>\n</blockquote>\n\n<p>Just write normal functions, the only difference is that they are not executed immediately but passed around as callbacks.</p>\n\n<blockquote>\n  <p><strong>How should I implement error event handling correctly</strong></p>\n</blockquote>\n\n<p>Generally API's give you a callback with an err as the first argument. For example</p>\n\n<pre><code>database.query('something', function(err, result) {\n  if (err) handle(err);\n  doSomething(result);\n});\n</code></pre>\n\n<p>Is a common pattern.</p>\n\n<p>Another common pattern is <code>on('error')</code>. For example</p>\n\n<pre><code>process.on('uncaughtException', function (err) {\n  console.log('Caught exception: ' + err);\n});\n</code></pre>\n\n<p><strong>Edit:</strong></p>\n\n<pre><code>var async_function = function(val, callback){\n    process.nextTick(function(){\n        callback(val);\n    });\n};\n</code></pre>\n\n<p>The above function when called as</p>\n\n<pre><code>async_function(42, function(val) {\n  console.log(val)\n});\nconsole.log(43);\n</code></pre>\n\n<p>Will print <code>42</code> to the console asynchronously. In particular <code>process.nextTick</code> fires after the current eventloop callstack is empty. That call stack is empty after <code>async_function</code> and <code>console.log(43)</code> have run. So we print 43 followed by 42.</p>\n\n<p>You should probably do some reading on the event loop.</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>You should watch this: <a href=\"https://vimeo.com/19519289\" rel=\"nofollow\">Node Tuts episode 19 - Asynchronous Iteration Patterns</a></p>\n\n<p>It should answers your questions.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Try this, it works for both node and the browser.</p>\n\n<pre><code>isNode = (typeof exports !== 'undefined') &amp;&amp;\n(typeof module !== 'undefined') &amp;&amp;\n(typeof module.exports !== 'undefined') &amp;&amp;\n(typeof navigator === 'undefined' || typeof navigator.appName === 'undefined') ? true : false,\nasyncIt = (isNode ? function (func) {\n  process.nextTick(function () {\n    func();\n  });\n} : function (func) {\n  setTimeout(func, 5);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>Just passing by callbacks is not enough.\nYou have to use settimer for example, to make function async.</p>\n\n<p>Examples:\nNot async functions:</p>\n\n<pre><code>function a() {\nvar a = 0;  \nfor(i=0; i&lt;10000000; i++) {\n    a++;\n};\n\nb();\n};\n\nfunction b() {\nvar a = 0;  \nfor(i=0; i&lt;10000000; i++) {\n    a++;\n};  \nc();\n};\n\nfunction c() {\nfor(i=0; i&lt;10000000; i++) {\n\n};  \nconsole.log(\"async finished!\");\n};\n\na();\nconsole.log(\"This should be good\");\n</code></pre>\n\n<p>If you will run above example, This should be good, will have to wait untill those functions will finish to work.</p>\n\n<p>Pseudo multithread (async) functions:</p>\n\n<pre><code>function a() {\nsetTimeout ( function() {\n    var a = 0;  \n    for(i=0; i&lt;10000000; i++) {\n        a++;\n    };\n\n    b();\n}, 0);\n};\n\nfunction b() {\nsetTimeout ( function() {\n    var a = 0;  \n    for(i=0; i&lt;10000000; i++) {\n        a++;\n    };  \n    c();\n}, 0);\n};\n\nfunction c() {\nsetTimeout ( function() {\n    for(i=0; i&lt;10000000; i++) {\n\n    };  \n\n    console.log(\"async finished!\");\n}, 0);\n};\n\na();\n\nconsole.log(\"This should be good\");\n</code></pre>\n\n<p>This one will be trully async.\nThis should be good will be writen before async finished.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've tried to research on how exactly asynchronous functions should be written. After a lot of plowing through a lot of documentation, it's still unclear to me.</p>\n\n<p><strong>How do I write asynchronous functions for Node? How should I implement error event handling correctly?</strong></p>\n\n<p>Another way to ask my question would be this: How should I interpret the following function?</p>\n\n<pre><code>var async_function = function(val, callback){\n    process.nextTick(function(){\n        callback(val);\n    });\n};\n</code></pre>\n\n<p>Also, I found <strong><a href=\"http://stackoverflow.com/questions/2878008/how-do-i-create-a-non-blocking-asynchronous-function-in-node-js\">this question on SO</a></strong> (\"How do I create a non-blocking asynchronous function in node.js?\") interesting. I don't feel like it has been answered yet.</p>\n",
            "last_activity_date": 1405608479,
            "question_id": 6898779,
            "score": 38,
            "tags": [
                "javascript",
                "asynchronous",
                "node.js"
            ],
            "title": "How to write asynchronous functions for Node.js"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Instead of <code>imageElement.src = myImage;</code> you should use <code>window.location = myImage;</code> </p>\n\n<p>And even after that the browser will display the image itself. You can right click and use \"Save Link\" for downloading the image.</p>\n\n<p>Check <a href=\"http://books.google.com.tr/books?id=jhJNl6yWvYAC&amp;pg=PA171&amp;lpg=PA171&amp;dq=canvas%20dataToURL&amp;source=bl&amp;ots=4iPeQOxasl&amp;sig=FFQv3ZdRthyst644jdDGQzONn7M&amp;hl=tr&amp;sa=X&amp;ei=-9q4T9OnD8WA4gSJxOXrCQ&amp;ved=0CHoQ6AEwBg#v=onepage&amp;q&amp;f=false\" rel=\"nofollow\">this link</a> for more information.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use <a href=\"http://www.nihilogic.dk/labs/canvas2image/\">canvas2image</a> to prompt for download.</p>\n\n<p>I had the same issue, here's a simple example that both adds the image to the page and forces the browser to download it:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;script src=\"http://www.nihilogic.dk/labs/canvas2image/canvas2image.js\"&gt;&lt;/script&gt;\n        &lt;script&gt;\n            function draw(){\n                var canvas = document.getElementById(\"thecanvas\");\n                var ctx = canvas.getContext(\"2d\");\n                ctx.fillStyle = \"rgba(125, 46, 138, 0.5)\";\n                ctx.fillRect(25,25,100,100); \n                ctx.fillStyle = \"rgba( 0, 146, 38, 0.5)\";\n                ctx.fillRect(58, 74, 125, 100);\n            }\n\n            function to_image(){\n                var canvas = document.getElementById(\"thecanvas\");\n                document.getElementById(\"theimage\").src = canvas.toDataURL();\n                Canvas2Image.saveAsPNG(canvas);\n            }\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body onload=\"draw()\"&gt;\n        &lt;canvas width=200 height=200 id=\"thecanvas\"&gt;&lt;/canvas&gt;\n        &lt;div&gt;&lt;button onclick=\"to_image()\"&gt;Draw to Image&lt;/button&gt;&lt;/div&gt;\n        &lt;image id=\"theimage\"&gt;&lt;/image&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>@Wardenclyffe and SColvin , you both are trying to save image using the canvas, not by using canvas'context. both you should try to ctx.toDataURL();</p>\n\n<p>Try This : </p>\n\n<p>var canvas1 = document.getElementById(\"yourCanvasId\");  <br>\nvar ctx = canvas1.getContext(\"2d\");<br>\nvar img = new Image();<br>\nimg.src = ctx.toDataURL('image/png');<br>\nctx.drawImage(img,200,150);<br></p>\n\n<p>Also you may refer to following links:</p>\n\n<p><a href=\"http://tutorials.jenkov.com/html5-canvas/todataurl.html\" rel=\"nofollow\">http://tutorials.jenkov.com/html5-canvas/todataurl.html</a></p>\n\n<p><a href=\"http://www.w3.org/TR/2012/WD-html5-author-20120329/the-canvas-element.html#the-canvas-element\" rel=\"nofollow\">http://www.w3.org/TR/2012/WD-html5-author-20120329/the-canvas-element.html#the-canvas-element</a></p>\n",
                    "is_accepted": false,
                    "score": -7
                },
                {
                    "body": "<p>Here is some code. without any error.</p>\n\n<pre><code>var image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");  // here is the most important part because if you dont replace you will get a DOM 18 exception.\n\n\nwindow.location.href=image; // it will save locally\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 37
                }
            ],
            "body": "<p>I'm currently building a HTML5 web app/Phonegap native app and I can't seem to figure out how to save my canvas as an image with canvas.toDataURL():( Can somebody please help me out?</p>\n\n<p>Here's the code, what's wrong with it?</p>\n\n<p>//My canvas was named \"canvasSignature\"</p>\n\n<p>Javascript:</p>\n\n<hr>\n\n<pre><code>function putImage()\n{\n  var canvas1 = document.getElementById(\"canvasSignature\");        \n  if (canvas1.getContext) {\n     var ctx = canvas1.getContext(\"2d\");                \n     var myImage = canvas1.toDataURL(\"image/png\");      \n  }\n  var imageElement = document.getElementById(\"MyPix\");  \n  imageElement.src = myImage;                           \n\n}  \n</code></pre>\n\n<p>HTML5:</p>\n\n<hr>\n\n<pre><code>&lt;div id=\"createPNGButton\"&gt;\n    &lt;button onclick=\"putImage()\"&gt;Save as Image&lt;/button&gt;        \n&lt;/div&gt;\n</code></pre>\n\n<p>Thanks,\nWardenclyffe</p>\n",
            "last_activity_date": 1395698593,
            "question_id": 10673122,
            "score": 34,
            "tags": [
                "javascript",
                "html5",
                "cordova",
                "canvas",
                "save"
            ],
            "title": "How To Save Canvas As An Image With canvas.toDataURL()?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Set a flag on hover:</p>\n\n<pre><code>var over = false;\n$('#elem').hover(function() {\n  over = true;\n},\nfunction () {\n  over = false;\n});\n</code></pre>\n\n<p>Then just check your flag.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Original (And Correct) Answer:</strong></p>\n\n<p>You can use <code>is()</code> and check for the selector <code>:hover</code>.</p>\n\n<pre><code>var isHovered = $('#elem').is(\":hover\"); // returns true or false\n</code></pre>\n\n<p>Example: <a href=\"http://jsfiddle.net/Meligy/2kyaJ/3/\">http://jsfiddle.net/Meligy/2kyaJ/3/</a></p>\n\n<p>(This only works when the selector matches only 1 element though - See Edit 3 for more)</p>\n\n<p>.</p>\n\n<p><strong>Edit 1 (June 29, 2013):</strong> (Applicable to jQuery 1.9.x only, see next Edit 2)</p>\n\n<p>This answer was the best solution at the time the question was answered. This ':hover' selector was removed with the <code>.hover()</code> method removal in jQuery 1.9.x.</p>\n\n<p>Interestingly a recent answer by \"allicarn\" shows it's possible to use <code>:hover</code> as CSS selector (vs. Sizzle) when you prefix it with a selector <code>$($(this).selector + \":hover\").length &gt; 0</code>, and it seems to work!</p>\n\n<p>Also, <a href=\"http://cherne.net/brian/resources/jquery.hoverIntent.html\">hoverIntent</a> plugin mentioned in a another answer looks very nice as well.</p>\n\n<p><strong>Edit 2 (September 21, 2013):</strong> <code>.is(\":hover\")</code> <strong>works</strong></p>\n\n<p>Based on another comment I have noticed that the original way I posted, <code>.is(\":hover\")</code>, actually still works in jQuery, so.</p>\n\n<ol>\n<li><p>It worked in jQuery 1.7.x.</p></li>\n<li><p>It stopped working in 1.9.1, when someone reported it to me, and we all thought it was related to jQuery removing the <code>hover</code> alias for event handling in that version.</p></li>\n<li><p>It worked again in jQuery 1.10.1 and 2.0.2 (maybe 2.0.x), which suggests that the failure in 1.9.x was a bug or so not an intentional behaviour as we thought in the previous point.</p></li>\n</ol>\n\n<p>If you want to test this in q particular jQuery version, just open the JSFidlle example at the beginning of this answer, change to the desired jQuery version and click \"Run\". If the colour changes on hover, it works.</p>\n\n<p>.</p>\n\n<h3>Edit 3 (March 9, 2014): It only works when the jQuery sequence contains a single element</h3>\n\n<p>As shown by @Wilmer in the comments, he has a fiddle which doesn't even work against jQuery versions I and others here tested it against. When I tried to find what's special about his case I noticed that he was trying to check multiple elements at a time. This was throwing <code>Uncaught Error: Syntax error, unrecognized expression: unsupported pseudo: hover</code>.</p>\n\n<p>So, working with his fiddle, this does <strong>NOT</strong> work:</p>\n\n<pre><code>var isHovered = !!$('#up, #down').filter(\":hover\").length;\n</code></pre>\n\n<p>While this <strong>DOES</strong> work:</p>\n\n<pre><code>var isHovered = !!$('#up,#down').\n                    filter(function() { return $(this).is(\":hover\"); }).length;\n</code></pre>\n\n<p>It also works with jQuery sequences that contain a single element, like if the original selector matched only one element, or if you called <code>.first()</code> on the results, etc.</p>\n",
                    "is_accepted": true,
                    "score": 139
                },
                {
                    "body": "<p>Expanding on @Mohamed's answer. You could use a little <em>encapsulation</em></p>\n\n<p>Like this:</p>\n\n<pre><code>jQuery.fn.mouseIsOver = function () {\n    if($(this[0]).is(\":hover\"))\n    {\n        return true;\n    }\n    return false;\n}; \n</code></pre>\n\n<p>Use it like: </p>\n\n<pre><code>$(\"#elem\").mouseIsOver();//returns true or false\n</code></pre>\n\n<p>Forked the fiddle:\n<a href=\"http://jsfiddle.net/cgWdF/1/\">http://jsfiddle.net/cgWdF/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Setting a flag per kinakuta's answer seems reasonable, you can put a listener on the body so you can check if any element is being hovered over at a particular instant.</p>\n\n<p>However, how do you want to deal with child nodes? You should perhaps check if the element is an ancestor of the currently hovered element.</p>\n\n<pre><code>&lt;script&gt;\n\nvar isOver = (function() {\n  var overElement;\n  return {\n\n    // Set the \"over\" element\n    set: function(e) {\n      overElement = e.target || e.srcElement;\n    },\n\n    // Return the current \"over\" element\n    get: function() {\n      return overElement;    \n    },\n\n    // Check if element is the current \"over\" element\n    check: function(element) {\n      return element == overElement;\n    },\n\n    // Check if element is, or an ancestor of, the \n    // current \"over\" element\n    checkAll: function(element) {\n      while (overElement.parentNode) {\n         if (element == overElement) return true;\n         overElement = overElement.parentNode;\n      }\n      return false;\n    }\n  };\n}());\n\n\n// Check every second if p0 is being hovered over\nwindow.setInterval( function() {\n  var el = document.getElementById('p0');\n  document.getElementById('msg').innerHTML = isOver.checkAll(el);\n}, 1000);\n\n\n&lt;/script&gt;\n\n&lt;body onmouseover=\"isOver.set(event);\"&gt;\n  &lt;div&gt;Here is a div\n    &lt;p id=\"p0\"&gt;Here is a p in the div&lt;span&gt; here is a span in the p&lt;/span&gt; foo bar &lt;/p&gt;\n  &lt;/div&gt;\n  &lt;div id=\"msg\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Couple updates to add after working on this subject for a while:</p>\n\n<ol>\n<li>all solutions with .is(\":hover\") break on jQuery 1.9.1</li>\n<li>The most likely reason to check if the mouse is still over an element is to attempt to prevent events firing over each other.  For example, we were having issues with our mouseleave being triggered and completed before our mouseenter event even completed. Of course this was because of a quick mouse movement.</li>\n</ol>\n\n<p>We used hoverIntent <a href=\"https://github.com/briancherne/jquery-hoverIntent\" rel=\"nofollow\">https://github.com/briancherne/jquery-hoverIntent</a> to solve the issue for us. Essentially it triggers if the mouse movement is more deliberate. (one thing to note is that it will trigger on both mouse entering an element and leaving - if you only want to use one pass the constructor an empty function )</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use:</p>\n\n<pre><code>var hovered = $(\"#parent\").find(\"#element:hover\").length;\n</code></pre>\n\n<p>jQuery 1.9+</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>It does not work in jQuery 1.9.  Made this plugin based on user2444818's answer.</p>\n\n<pre><code>jQuery.fn.mouseIsOver = function () {\n    return $(this).parent().find($(this).selector + \":hover\").length &gt; 0;\n}; \n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Wp2v4/1/\">http://jsfiddle.net/Wp2v4/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I like the first response but for me it's weird, when attempting to check just after page load for the mouse, i have to put a least 500 millisecond delay for it to works</p>\n\n<pre><code>$(window).on('load', function() {\n    setTimeout(function() {\n        $('img:hover').fadeOut().fadeIn();\n    }, 500);\n});\n</code></pre>\n\n<p><a href=\"http://codepen.io/molokoloco/pen/Grvkx/\" rel=\"nofollow\">http://codepen.io/molokoloco/pen/Grvkx/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can filter your elment from all hovered elements.\nProblematic code:</p>\n\n<pre><code>element.filter(':hover')\n</code></pre>\n\n<p>Save code:</p>\n\n<pre><code>jQuery(:hover).filter(element)\n</code></pre>\n\n<p>To return boolean:</p>\n\n<pre><code>jQuery(:hover).filter(element).length===0\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm not looking for an action to call <em>when</em> hovering, but instead a way to tell <em>if</em> an element is being hovered over currently. For instance:</p>\n\n<pre><code>$('#elem').mouseIsOver(); // returns true or false\n</code></pre>\n\n<p>Is there a jQuery method that accomplishes this?</p>\n",
            "last_activity_date": 1426161351,
            "question_id": 8981463,
            "score": 61,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Detect IF hovering over element with jQuery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I realize this is a little old, but, yes it can be done. Some javascript to get you started:</p>\n\n<pre><code>viewport = document.querySelector(\"meta[name=viewport]\");\nviewport.setAttribute('content', 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0');\n</code></pre>\n\n<p>Just change the parts you need and Mobile Safari will respect the new settings.</p>\n\n<p><strong>Update:</strong></p>\n\n<p>If you don't already have the meta viewport tag in the source, you can append it directly with something like this:</p>\n\n<pre><code>document.getElementsByTagName('head')[0].appendChild('&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\"&gt;');\n</code></pre>\n\n<p>Or if you're using jQuery:</p>\n\n<pre><code>$('head').append('&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\"&gt;');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 67
                },
                {
                    "body": "<p>in your <code>&lt;head&gt;</code></p>\n\n<pre><code>&lt;meta id=\"viewport\"\n      name=\"viewport\"\n      content=\"width=1024, height=768, initial-scale=0, minimum-scale=0.25\" /&gt;\n</code></pre>\n\n<p>somewhere in your javascript</p>\n\n<pre><code>document.getElementById(\"viewport\").setAttribute(\"content\",\n      \"initial-scale=0.5; maximum-scale=1.0; user-scalable=0;\");\n</code></pre>\n\n<p>... but good luck with tweaking it for your device, fiddling for hours... and i'm still not there!</p>\n\n<p><a href=\"http://www.justincarmony.com/blog/2008/04/21/iphone-web-development-controlling-the-viewport-via-javascript/\" rel=\"nofollow\">source</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an ajax app built for mobile Safari that needs to display different types of content. Some content I need user-scalable=1 other content I need user-scalable=0. Is there a way to update this on the fly without refreshing the page?</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\" /&gt;\n</code></pre>\n",
            "last_activity_date": 1366678590,
            "question_id": 3588628,
            "score": 47,
            "tags": [
                "javascript",
                "mobile-safari",
                "viewport"
            ],
            "title": "Can I change the viewport meta tag in mobile safari on the fly?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><s>Thanks to <a href=\"http://stackoverflow.com/users/89484\">Paul Irish</a> for pointing out this solution from <a href=\"http://discover-devtools.codeschool.com/chapters/1/challenges/1\" rel=\"nofollow\">Discover DevTools</a>, using the profiler:</p>\n\n<pre><code>function isInspectOpen()\n{\n    console.profile(); \n    console.profileEnd(); \n    if (console.clear) console.clear();\n    return console.profiles.length &gt; 0;\n}\n</code></pre>\n\n<p></s>\n<strong>Update:</strong> <code>console.profiles</code> has been removed from Chrome.</p>\n\n<p>This other option can detect the docked inspector being <em>opened, after</em> the page loads, but will not be able to detect an undocked inspector, or if the inspector was already open on page load. There is also some potential for false positives.</p>\n\n<pre><code>window.onresize = function()\n{\n    if ((window.outerHeight - window.innerHeight) &gt; 100)\n        alert('Docked inspector was opened');\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>The Chrome developer tools is really just a part of WebKit's WebCore library. So this question  applies to Safari, Chrome, and any other WebCore consumers.</p>\n\n<p>If a solution exists, it'll be based off a difference in the DOM when the WebKit web inspector is open and when it's closed. Unfortunately, this is a kind of a chicken and egg problem because we can't use the inspector to observe the DOM when the inspector is closed.</p>\n\n<p>What you may be able to do is write a bit of JavaScript to dump the entire DOM tree. Then run it once when the inspector is open, and once when the inspector is closed. Any difference in the DOM is probably a side-effect of the web inspector, and we may be able to use it to test if the user is inspecting or not.</p>\n\n<p>This <a href=\"http://www.lemoda.net/javascript/dump-dom/dump-dom.html\" rel=\"nofollow\">link</a> is a good start for a DOM dumping script , but you'll want to dump the entire <code>DOMWindow</code> object, not just <code>document</code>.</p>\n\n<p><strong>Update:</strong></p>\n\n<p>Looks like there's a way to do this now. Check out <a href=\"https://github.com/adamschwartz/chrome-inspector-detector\" rel=\"nofollow\">Chrome Inspector Detector</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I created <a href=\"https://github.com/sindresorhus/devtools-detect\" rel=\"nofollow\">devtools-detect</a> which detects when DevTools is open:</p>\n\n<pre><code>console.log('is DevTools open?', window.devtools.open);\n</code></pre>\n\n<p>You can also listen to an event:</p>\n\n<pre><code>window.addEventListener('devtoolschange', function (e) {\n    console.log('is DevTools open?', e.detail.open);\n});\n</code></pre>\n\n<p>It doesn't work when DevTools is undocked. However, works with the Chrome/Safari/Firefox DevTools and Firebug.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I found a way to tell if the Chrome Console is opened or not.\nIt\u2019s still a hack but it\u2019s way more accurate and will work weather the console is undocked or not.</p>\n\n<p>Basically running this code with the console closed takes about ~100 microseconds and while the console is opened it takes about twice as much ~200 microseconds.</p>\n\n<pre><code>console.log(1);\nconsole.clear();\n</code></pre>\n\n<p>(1 millisecond = 1000 microsecond)</p>\n\n<p>I\u2019ve written more about it <a href=\"http://blog.guya.net/2014/06/20/how-to-know-when-chrome-console-is-open/\" rel=\"nofollow\">here</a>.</p>\n\n<p>Demo is <a href=\"http://guya.net/chrome/dev_tools/\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is a tricky way to check it for extensions with 'tabs' permission:</p>\n\n<pre><code>chrome.tabs.query({url:'chrome-devtools://*/*'}, function(tabs){\n    if (tabs.length &gt; 0){\n        //devtools is open\n    }\n});\n</code></pre>\n\n<p>Also you can check if it open for your page:</p>\n\n<pre><code>chrome.tabs.query({\n    url: 'chrome-devtools://*/*',\n    title: '*example.com/your/page*'\n}, function(tabs){ ... })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I wrote a blog post about this: <a href=\"http://nepjua.org/check-if-browser-console-is-open/\" rel=\"nofollow\">http://nepjua.org/check-if-browser-console-is-open/</a></p>\n\n<p>It can detect whether it's docked or undocked</p>\n\n<pre><code>function isConsoleOpen() {  \n  var startTime = new Date();\n  debugger;\n  var endTime = new Date();\n\n  return endTime - startTime &gt; 100;\n}\n\n$(function() {\n  $(window).resize(function() {\n    if(isConsoleOpen()) {\n        alert(\"You're one sneaky dude, aren't you ?\")\n    }\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am using this little script to find out whether Firebug is open:</p>\n\n<pre><code>if (window.console &amp;&amp; window.console.firebug) {\n    //is open\n};\n</code></pre>\n\n<p>And it works well. Now I was searching for half an hour to find a way to detect whether Google Chrome's built-in web developer console is open, but I couldn't find any hint.</p>\n\n<p>This:</p>\n\n<pre><code>if (window.console &amp;&amp; window.console.chrome) {\n    //is open\n};\n</code></pre>\n\n<p>doesn't work.</p>\n\n<p>EDIT:</p>\n\n<p>So it seems that it is not possible to detect whether the Chrome console is open. But there is a \"<a href=\"http://stackoverflow.com/questions/7527442/how-to-detect-chrome-inspect-element-is-running-or-not\">hack</a>\" that works, with some drawbacks:</p>\n\n<ul>\n<li>will not work when console is undocked</li>\n<li>will not work when console is open on page load</li>\n</ul>\n\n<p>So, I am gonna choose Unsigned\u00b4s answer for now, but if some1 comes up with a brilliant idea, he is welcome to still answer and I change the selected answer! Thanks!</p>\n",
            "last_activity_date": 1417909865,
            "question_id": 7798748,
            "score": 33,
            "tags": [
                "javascript",
                "google-chrome",
                "firebug",
                "google-chrome-devtools"
            ],
            "title": "Find out whether Chrome console is open"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I wrote an inline spell checker a few years ago and implemented a Levenshtein algorithm - since it was inline and for IE8 I did quite a lot of performance optimisation.  </p>\n\n<pre><code>//http://www.merriampark.com/ld.htm, http://www.mgilleland.com/ld/ldjavascript.htm, Damerau\u2013Levenshtein distance (Wikipedia)\nvar levDist = function(s, t) {\n    var d = []; //2d matrix\n\n    // Step 1\n    var n = s.length;\n    var m = t.length;\n\n    if (n == 0) return m;\n    if (m == 0) return n;\n\n    //Create an array of arrays in javascript (a descending loop is quicker)\n    for (var i = n; i &gt;= 0; i--) d[i] = [];\n\n    // Step 2\n    for (var i = n; i &gt;= 0; i--) d[i][0] = i;\n    for (var j = m; j &gt;= 0; j--) d[0][j] = j;\n\n    // Step 3\n    for (var i = 1; i &lt;= n; i++) {\n        var s_i = s.charAt(i - 1);\n\n        // Step 4\n        for (var j = 1; j &lt;= m; j++) {\n\n            //Check the jagged ld total so far\n            if (i == j &amp;&amp; d[i][j] &gt; 4) return n;\n\n            var t_j = t.charAt(j - 1);\n            var cost = (s_i == t_j) ? 0 : 1; // Step 5\n\n            //Calculate the minimum\n            var mi = d[i - 1][j] + 1;\n            var b = d[i][j - 1] + 1;\n            var c = d[i - 1][j - 1] + cost;\n\n            if (b &lt; mi) mi = b;\n            if (c &lt; mi) mi = c;\n\n            d[i][j] = mi; // Step 6\n\n            //Damerau transposition\n            if (i &gt; 1 &amp;&amp; j &gt; 1 &amp;&amp; s_i == t.charAt(j - 2) &amp;&amp; s.charAt(i - 2) == t_j) {\n                d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n            }\n        }\n    }\n\n    // Step 7\n    return d[n][m];\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p>The obvious way of doing this is to map each string to a (distance, string) pair, then sort this list, then drop the distances again. This way you ensure the levenstein distance only has to be computed once. Maybe merge duplicates first, too.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would definitely suggest using a better Levenshtein method like the one in @James Westgate's answer. </p>\n\n<p>That said, DOM manipulations are often a great expense. You can certainly improve your jQuery usage.</p>\n\n<p>Your loops are rather small in the example above, but concatenating the generated html for each <code>oneResult</code> into a single string and doing one <code>append</code> at the end of the loop will be much more efficient.</p>\n\n<p>Your selectors are slow. <code>$('.oneResult')</code> will search <strong>all</strong> elements in the DOM and test their <code>className</code> in older IE browsers. You may want to consider something like <code>atRes.find('.oneResult')</code> to scope the search.</p>\n\n<p>In the case of adding the <code>click</code> handlers, we may want to do one better avoid setting handlers on every <code>keyup</code>. You could leverage event delegation by setting a single handler on <code>atRest</code> for all results in the same block you are setting the <code>keyup</code> handler:</p>\n\n<pre><code>atRest.on('click', '.oneResult', function(){\n  window.location.href = 'http://hashtag.ly/' + $(this).html();\n});\n</code></pre>\n\n<p>See <a href=\"http://api.jquery.com/on/\" rel=\"nofollow\">http://api.jquery.com/on/</a> for more info.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Updated: <a href=\"http://jsperf.com/levenshtein-distance/5\">http://jsperf.com/levenshtein-distance/5</a></p>\n\n<p>The new Revision annihilates all other benchmarks. I was specifically chasing Chromium/Firefox performance as I don't have an IE8/9/10 test environment, but the optimisations made should apply in general to most browsers.</p>\n\n<p><strong>Levenshtein Distance</strong></p>\n\n<p>The matrix to perform Levenshtein Distance can be reused again and again. This was an obvious target for optimisation (but be careful, this now imposes a limit on string length (unless you were to resize the matrix dynamically)).</p>\n\n<p>The only option for optimisation not pursued in jsPerf Revision 5 is memoisation. Depending on your use of Levenshtein Distance, this could help drastically but was omitted due to its implementation specific nature.</p>\n\n<pre><code>// Cache the matrix. Note this implementation is limited to\n// strings of 64 char or less. This could be altered to update\n// dynamically, or a larger value could be used.\nvar matrix = [];\nfor (var i = 0; i &lt; 64; i++) {\n    matrix[i] = [i];\n    matrix[i].length = 64;\n}\nfor (var i = 0; i &lt; 64; i++) {\n    matrix[0][i] = i;\n}\n\n// Functional implementation of Levenshtein Distance.\nString.levenshteinDistance = function(__this, that, limit) {\n    var thisLength = __this.length, thatLength = that.length;\n\n    if (Math.abs(thisLength - thatLength) &gt; (limit || 32)) return limit || 32;\n    if (thisLength === 0) return thatLength;\n    if (thatLength === 0) return thisLength;\n\n    // Calculate matrix.\n    var this_i, that_j, cost, min, t;\n    for (i = 1; i &lt;= thisLength; ++i) {\n        this_i = __this[i-1];\n\n        for (j = 1; j &lt;= thatLength; ++j) {\n            // Check the jagged ld total so far\n            if (i === j &amp;&amp; matrix[i][j] &gt; 4) return thisLength;\n\n            that_j = that[j-1];\n            cost = (this_i === that_j) ? 0 : 1;  // Chars already match, no ++op to count.\n            // Calculate the minimum (much faster than Math.min(...)).\n            min    = matrix[i - 1][j    ] + 1;                      // Deletion.\n            if ((t = matrix[i    ][j - 1] + 1   ) &lt; min) min = t;   // Insertion.\n            if ((t = matrix[i - 1][j - 1] + cost) &lt; min) min = t;   // Substitution.\n\n            matrix[i][j] = min; // Update matrix.\n        }\n    }\n\n    return matrix[thisLength][thatLength];\n};\n</code></pre>\n\n<p><strong>Damerau-Levenshtein Distance</strong></p>\n\n<p>jsperf.com/damerau-levenshtein-distance</p>\n\n<p>Damerau-Levenshtein Distance is a small modification to Levenshtein Distance to include transpositions. There is very little to optimise.</p>\n\n<pre><code>// Damerau transposition.\nif (i &gt; 1 &amp;&amp; j &gt; 1 &amp;&amp; this_i === that[j-2] &amp;&amp; this[i-2] === that_j\n&amp;&amp; (t = matrix[i-2][j-2]+cost) &lt; matrix[i][j]) matrix[i][j] = t;\n</code></pre>\n\n<p><strong>Sorting Algorithm</strong></p>\n\n<p>The second part of this answer is to choose an appropriate sort function. I will upload optimised sort functions to <a href=\"http://jsperf.com/sort\">http://jsperf.com/sort</a> soon.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I just wrote an new revision: <a href=\"http://jsperf.com/levenshtein-algorithms/16\" rel=\"nofollow\">http://jsperf.com/levenshtein-algorithms/16</a></p>\n\n<p>This revision is faster than the other ones. Works even on IE =)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I came to this solution:</p>\n\n<pre><code>var levenshtein = (function() {\n        var row2 = [];\n        return function(s1, s2) {\n            if (s1 === s2) {\n                return 0;\n            } else {\n                var s1_len = s1.length, s2_len = s2.length;\n                if (s1_len &amp;&amp; s2_len) {\n                    var i1 = 0, i2 = 0, a, b, c, c2, row = row2;\n                    while (i1 &lt; s1_len)\n                        row[i1] = ++i1;\n                    while (i2 &lt; s2_len) {\n                        c2 = s2.charCodeAt(i2);\n                        a = i2;\n                        ++i2;\n                        b = i2;\n                        for (i1 = 0; i1 &lt; s1_len; ++i1) {\n                            c = a + (s1.charCodeAt(i1) === c2 ? 0 : 1);\n                            a = row[i1];\n                            b = b &lt; a ? (b &lt; c ? b + 1 : c) : (a &lt; c ? a + 1 : c);\n                            row[i1] = b;\n                        }\n                    }\n                    return b;\n                } else {\n                    return s1_len + s2_len;\n                }\n            }\n        };\n})();\n</code></pre>\n\n<p>See also <a href=\"http://jsperf.com/levenshtein-distance/12\">http://jsperf.com/levenshtein-distance/12</a></p>\n\n<p>Most speed was gained by eliminating some array usages.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>So I have a random javascript array of names...</p>\n\n<p>[@larry,@nicholas,@notch] etc.</p>\n\n<p>They all start with the @ symbol. I'd like to sort them by the Levenshtein Distance so that the the ones at the top of the list are closest to the search term. At the moment, I have some javascript that uses jQuery's <code>.grep()</code> on it using javascript <code>.match()</code> method around the entered search term on key press:</p>\n\n<p>(code edited since first publish)</p>\n\n<pre><code>limitArr = $.grep(imTheCallback, function(n){\n    return n.match(searchy.toLowerCase())\n});\nmodArr = limitArr.sort(levenshtein(searchy.toLowerCase(), 50))\nif (modArr[0].substr(0, 1) == '@') {\n    if (atRes.childred('div').length &lt; 6) {\n        modArr.forEach(function(i){\n            atRes.append('&lt;div class=\"oneResult\"&gt;' + i + '&lt;/div&gt;');\n        });\n    }\n} else if (modArr[0].substr(0, 1) == '#') {\n    if (tagRes.children('div').length &lt; 6) {\n        modArr.forEach(function(i){\n            tagRes.append('&lt;div class=\"oneResult\"&gt;' + i + '&lt;/div&gt;');\n        });\n    }\n}\n\n$('.oneResult:first-child').addClass('active');\n\n$('.oneResult').click(function(){\n    window.location.href = 'http://hashtag.ly/' + $(this).html();\n});\n</code></pre>\n\n<p>It also has some if statements detecting if the array contains hashtags (#) or mentions (@). Ignore that. The <code>imTheCallback</code> is the array of names, either hashtags or mentions, then <code>modArr</code> is the array sorted. Then the <code>.atResults</code> and <code>.tagResults</code> elements are the elements that it appends each time in the array to, this forms a list of names based on the entered search terms.</p>\n\n<p>I <strong>also</strong> have the Levenshtein Distance algorithm:</p>\n\n<pre><code>var levenshtein = function(min, split) {\n    // Levenshtein Algorithm Revisited - WebReflection\n    try {\n        split = !(\"0\")[0]\n    } catch(i) {\n        split = true\n    };\n\n    return function(a, b) {\n        if (a == b)\n            return 0;\n        if (!a.length || !b.length)\n            return b.length || a.length;\n        if (split) {\n            a = a.split(\"\");\n            b = b.split(\"\")\n        };\n        var len1 = a.length + 1,\n            len2 = b.length + 1,\n            I = 0,\n            i = 0,\n            d = [[0]],\n            c, j, J;\n        while (++i &lt; len2)\n            d[0][i] = i;\n        i = 0;\n        while (++i &lt; len1) {\n            J = j = 0;\n            c = a[I];\n            d[i] = [i];\n            while(++j &lt; len2) {\n                d[i][j] = min(d[I][j] + 1, d[i][J] + 1, d[I][J] + (c != b[J]));\n                ++J;\n            };\n            ++I;\n        };\n        return d[len1 - 1][len2 - 1];\n    }\n}(Math.min, false);\n</code></pre>\n\n<p>How can I work with algorithm (or a similar one) into my current code to sort it without bad performance?</p>\n\n<p>UPDATE:</p>\n\n<p>So I'm now using James Westgate's Lev Dist function. Works WAYYYY fast. So performance is solved, the issue now is using it with source...</p>\n\n<pre><code>modArr = limitArr.sort(function(a, b){\n    levDist(a, searchy)\n    levDist(b, searchy)\n});\n</code></pre>\n\n<p>My problem now is general understanding on using the <code>.sort()</code> method. Help is appreciated, thanks.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1377794174,
            "question_id": 11919065,
            "score": 29,
            "tags": [
                "javascript",
                "jquery",
                "sorting",
                "levenshtein-distance"
            ],
            "title": "Sort an array by the &quot;Levenshtein Distance&quot; with best performance in Javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Do you need to decode all encoded HTML entities or just <code>&amp;amp;</code> itself?</p>\n\n<p>If you only need to handle <code>&amp;amp;</code> then you can do this:</p>\n\n<pre><code>var decoded = encoded.replace(/&amp;amp;/g, '&amp;');\n</code></pre>\n\n<p>If you need to decode all HTML entities then what you've got is fine, although you can do it without jQuery if you want to:</p>\n\n<pre><code>var div = document.createElement('div');\ndiv.innerHTML = encoded;\nvar decoded = div.firstChild.nodeValue;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 103
                },
                {
                    "body": "<p><code>element.**innerText**</code> also does the trick.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>First create a <code>&lt;span id=\"decodeIt\" style=\"Displaye:none;\"&gt;&lt;/span&gt;</code> somewhere in the body</p>\n\n<p>Next, assign the string to be decoded as innerHTML to this:</p>\n\n<pre><code>document.getElementById(\"decodeIt\").innerHTML=stringtodecode\n</code></pre>\n\n<p>Finally,</p>\n\n<pre><code>stringtodecode=document.getElementById(\"decodeIt\").innerText\n</code></pre>\n\n<p><strong>Here is the overall code:</strong></p>\n\n<pre><code>var stringtodecode=\"&lt;B&gt;Hello&lt;/B&gt; world&lt;br&gt;\";\ndocument.getElementById(\"decodeIt\").innerHTML=stringtodecode;\nstringtodecode=document.getElementById(\"decodeIt\").innerText\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var htmlEnDeCode = (function() {\n    var charToEntityRegex,\n        entityToCharRegex,\n        charToEntity,\n        entityToChar;\n\n    function resetCharacterEntities() {\n        charToEntity = {};\n        entityToChar = {};\n        // add the default set\n        addCharacterEntities({\n            '&amp;amp;'     :   '&amp;',\n            '&amp;gt;'      :   '&gt;',\n            '&amp;lt;'      :   '&lt;',\n            '&amp;quot;'    :   '\"',\n            '&amp;#39;'     :   \"'\"\n        });\n    }\n\n    function addCharacterEntities(newEntities) {\n        var charKeys = [],\n            entityKeys = [],\n            key, echar;\n        for (key in newEntities) {\n            echar = newEntities[key];\n            entityToChar[key] = echar;\n            charToEntity[echar] = key;\n            charKeys.push(echar);\n            entityKeys.push(key);\n        }\n        charToEntityRegex = new RegExp('(' + charKeys.join('|') + ')', 'g');\n        entityToCharRegex = new RegExp('(' + entityKeys.join('|') + '|&amp;#[0-9]{1,5};' + ')', 'g');\n    }\n\n    function htmlEncode(value){\n        var htmlEncodeReplaceFn = function(match, capture) {\n            return charToEntity[capture];\n        };\n\n        return (!value) ? value : String(value).replace(charToEntityRegex, htmlEncodeReplaceFn);\n    }\n\n    function htmlDecode(value) {\n        var htmlDecodeReplaceFn = function(match, capture) {\n            return (capture in entityToChar) ? entityToChar[capture] : String.fromCharCode(parseInt(capture.substr(2), 10));\n        };\n\n        return (!value) ? value : String(value).replace(entityToCharRegex, htmlDecodeReplaceFn);\n    }\n\n    resetCharacterEntities();\n\n    return {\n        htmlEncode: htmlEncode,\n        htmlDecode: htmlDecode\n    };\n})();\n</code></pre>\n\n<p>This is from ExtJS source code.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I have strings like </p>\n\n<pre><code>var str = 'One &amp;amp; two &amp;amp; three';\n</code></pre>\n\n<p>rendered into HTML by the web server. I need to transform those strings into </p>\n\n<pre><code>'One &amp; two &amp; three'\n</code></pre>\n\n<p>Currently, that's what I am doing (with help of jQuery):</p>\n\n<pre><code>$(document.createElement('div')).html('{{ driver.person.name }}').text()\n</code></pre>\n\n<p>However I have an unsettling feeling that I am doing it wrong.\nI have tried </p>\n\n<pre><code>unescape(\"&amp;amp;\")\n</code></pre>\n\n<p>but it doesn't seem to work, neither do decodeURI/decodeURIComponent.</p>\n\n<p>Are there any other, more native and elegant ways of doing so?</p>\n",
            "last_activity_date": 1418386880,
            "question_id": 3700326,
            "score": 56,
            "tags": [
                "javascript",
                "html",
                "text",
                "decode"
            ],
            "title": "Decode &amp;amp; back to &amp; in javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>$resource is not synchronous although this syntax might suggest that it is:</p>\n\n<pre><code>$scope.twitterResult = $scope.twitter.get();\n</code></pre>\n\n<p>What is going on here is that call to the AngularJS will, after call to <code>twitter.get()</code>, <strong>return immediately with the result being an empty array. Then, when the async call is finished and real data arrives from the server, the array will get updated with data</strong>. AngularJS will simply keep a reference to an array returned and will fill it in when data are available.</p>\n\n<p>Here is the fragment of $resource implementation where the \"magic\" happens: <a href=\"https://github.com/angular/angular.js/blob/master/src/ngResource/resource.js#L372\">https://github.com/angular/angular.js/blob/master/src/ngResource/resource.js#L372</a></p>\n\n<p>This is described in the <a href=\"http://docs.angularjs.org/api/ngResource.%24resource\"><strong>$resource documentation</strong></a> as well:</p>\n\n<blockquote>\n  <p>It is important to realize that invoking a $resource object method immediately returns an empty reference (object or array depending on <code>isArray</code>). Once the data is returned from the server the existing reference is populated with the actual data. This is a useful trick since usually the resource is assigned to a model which is then rendered by the view. Having an empty object results in no rendering, once the data arrives from the server then the object is populated with the data and the view automatically re-renders itself showing the new data. This means that in most case one never has to write a callback function for the action methods.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>$q can do this trick too. You can convert a normal object to a 'delayed value' using something like this:</p>\n\n<pre><code>var delayedValue = function($scope, deferred, value) {\n    setTimeout(function() {\n        $scope.$apply(function () {\n            deferred.resolve(value);\n        });\n    }, 1000);\n    return deferred.promise;\n};\n</code></pre>\n\n<p>and then use it in a controller, to get a similar effect to what $scope.twitter.get() does in the OP's example</p>\n\n<pre><code>angular.module('someApp', [])\n.controller('someController', ['$scope', '$q', function($scope, $q) {\n  var deferred = $q.defer();\n  $scope.numbers = delayedValue($scope, deferred, ['some', 'numbers']);\n}]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I was watching <a href=\"http://www.youtube.com/watch?v=IRelx4-ISbs\">this</a> AngularJS tutorial describing how to hook into Twitter with an Angular resource. (<a href=\"http://www.youtube.com/watch?v=IRelx4-ISbs\">Video tutorial</a>)  Here is the resource that is set up in the example controller:</p>\n\n<pre><code>$scope.twitter = $resource('http://twitter.com/:action',\n    {action: 'search.json', q: 'angularjs', callback: 'JSON_CALLBACK'},\n    {get: {method: 'JSONP'}});\n</code></pre>\n\n<p>The tutorial shows that there are a couple ways to get data back from the resource using the <code>get</code> call.  The first method is by passing a callback to the get function.  The callback will be called with the result after the ajax request returns:</p>\n\n<pre><code>$scope.twitter.get(function(result) {\n    console.log('This was the result:', result);\n});\n</code></pre>\n\n<p>I understand this method.  It makes perfect sense to me.  The resource represents a place on the web where you can get data, and <code>get</code> simply makes an ajax call to a url, gets json back, and calls the callback function with the json.  The <code>result</code> param is that json.</p>\n\n<p>It makes sense to me because it seems obvious that this is an asynchronous call.  That is, under the hood, the ajax call fires, and the code following the call isn't blocked, it continues to be executed.  Then at some indeterminate point later on, when the xhr is successful, the callback function is called.</p>\n\n<p>Then the tutorial shows a different method that looks a lot simpler, but I don't understand how it works:</p>\n\n<pre><code>$scope.twitterResult = $scope.twitter.get();\n</code></pre>\n\n<p>I assume that the xhr underneath <code>get</code> must be asynchronous, yet in this line we are assigning the return value of the <code>get</code> call to a variable, as if it returned synchronously.</p>\n\n<p>Am I wrong for not understanding this?  How is that possible?  I think it's really neat that it works, I just don't get it.</p>\n\n<p>I understand that <code>get</code> can return <em>something</em> while the xhr underneath it goes off and processes asynchronously, but if you follow the code example yourself, you will see that <code>$scope.twitterResult</code> gets the actual twitter content before any subsequent lines are executed.  For example, if you write <code>console.log($scope.twitterResult)</code> immediately after that line, you will see the results from twitter logged in the console, not a temporary value that is replaced later on.</p>\n\n<p>More importantly, because this is possible, how can I write an Angular service that takes advantage of this same functionality?  Besides ajax requests, there are other types of data stores requiring asynchronous calls that can be used in JavaScript which I would love to be able to write code for synchronously in this style.  For example, IndexedDB.  If I could wrap my head around how Angular's built-in resources are doing it, I would give it a shot.</p>\n",
            "last_activity_date": 1358477367,
            "question_id": 11966252,
            "score": 29,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "How does the $resource `get` function work synchronously in AngularJS?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I am sure this is what you want:</p>\n\n<pre><code>function touchHandler(event)\n{\n    var touches = event.changedTouches,\n        first = touches[0],\n        type = \"\";\n         switch(event.type)\n    {\n        case \"touchstart\": type = \"mousedown\"; break;\n        case \"touchmove\":  type=\"mousemove\"; break;        \n        case \"touchend\":   type=\"mouseup\"; break;\n        default: return;\n    }\n\n             //initMouseEvent(type, canBubble, cancelable, view, clickCount, \n    //           screenX, screenY, clientX, clientY, ctrlKey, \n    //           altKey, shiftKey, metaKey, button, relatedTarget);\n\n    var simulatedEvent = document.createEvent(\"MouseEvent\");\n    simulatedEvent.initMouseEvent(type, true, true, window, 1, \n                              first.screenX, first.screenY, \n                              first.clientX, first.clientY, false, \n                              false, false, false, 0/*left*/, null);\n\n                                                                                 first.target.dispatchEvent(simulatedEvent);\n    event.preventDefault();\n}\n\nfunction init() \n{\n    document.addEventListener(\"touchstart\", touchHandler, true);\n    document.addEventListener(\"touchmove\", touchHandler, true);\n    document.addEventListener(\"touchend\", touchHandler, true);\n    document.addEventListener(\"touchcancel\", touchHandler, true);    \n}\n</code></pre>\n\n<p>I've captured the touch events and then manually fired my own mouse events to match. Although the code isn't particularly general purpose as is, it should be trivial to adapt to most existing drag and drop libraries, and probably most existing mouse event code. Hopefully this idea will come in handy to people developing web applications for the iPhone.</p>\n\n<p><strong>Update:</strong></p>\n\n<p>In posting this, I noticed that calling <code>preventDefault</code> on all touch events will prevent links from working properly. The main reason to call <code>preventDefault</code> at all is to stop the phone from scrolling, and you can do that by calling it only on the <code>touchmove</code> callback. The only downside to doing it this way is that the iPhone will sometimes display its hover popup over the drag origin. If I discover a way to prevent that, I'll update this post.</p>\n\n<p><strong>Second Update:</strong></p>\n\n<p>I've found the CSS property to turn off the callout: <code>-webkit-touch-callout</code>.</p>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p>Along the lines of @Mickey Shine's answer, <a href=\"http://touchpunch.furf.com/\" rel=\"nofollow\">Touch Punch</a> provides mapping of touch events to click events. It's built to put this support into jQuery UI, but <a href=\"https://github.com/furf/jquery-ui-touch-punch/blob/master/jquery.ui.touch-punch.js\" rel=\"nofollow\">the code</a> is informative.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I finally found a way to get this working using Mickey's solution but instead of his init function. Use the init function here.</p>\n\n<pre><code>function init() {\n    document.getElementById('filter_div').addEventListener(\"touchstart\", touchHandler, true);\n    document.getElementById('filter_div').addEventListener(\"touchmove\", touchHandler, true);\n    document.getElementById('filter_div').addEventListener(\"touchend\", touchHandler, true);\n    document.getElementById('filter_div').addEventListener(\"touchcancel\", touchHandler, true);\n}\n</code></pre>\n\n<p>If you see '<code>filter_div</code>' is the chart area where we have the chart range filter and only in that area do we want to rewrite our touch controls!</p>\n\n<p>Thank you Mickey. It was a great solution.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm using the YUI slider that operates with mouse move events. I want to make it respond to touchmove events (iPhone and Android). How can I produce a mouse move event when a touchmove event occurs? I'm hoping that just by adding some script at the top that touchmove events will get mapped to the mouse move events and I won't have to change anything with the slider. </p>\n",
            "last_activity_date": 1412741890,
            "question_id": 1517924,
            "score": 28,
            "tags": [
                "javascript",
                "javascript-events",
                "touchscreen"
            ],
            "title": "JavaScript mapping touch events to mouse events"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>^http:\\/\\/(?:www\\.)?youtube.com\\/watch\\?v=\\w+(&amp;\\S*)?$\n\n//if v can be anywhere in the query list\n\n^http:\\/\\/(?:www\\.)?youtube.com\\/watch\\?(?=.*v=\\w+)(?:\\S+)?$\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>You can not match the id-part with \\w+, as it does not include the dash character (-). [a-zA-Z0-9_-]+ would be something more correct.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<h1>ULTIMATE YOUTUBE REGEX</h1>\n\n<h2>Cherry picking</h2>\n\n<p>Because the explanation is getting longer and longer, I place the final result at the top. Feel free to copy+paste, and go on your way. For a detailed explanation, read <em>\"the full story\"</em> below.</p>\n\n<pre><code>/**\n * JavaScript function to match (and return) the video Id \n * of any valid Youtube Url, given as input string.\n * @author: Stephan Schmitz &lt;eyecatchup@gmail.com&gt;\n * @url: http://stackoverflow.com/a/10315969/624466\n */\nfunction ytVidId(url) {\n  var p = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&amp;v=))((\\w|-){11})(?:\\S+)?$/;\n  return (url.match(p)) ? RegExp.$1 : false;\n}\n</code></pre>\n\n<h2>The full story</h2>\n\n<p><a href=\"http://stackoverflow.com/a/2964758/624466\">Amarghosh's regex</a> looks good, at first sight. But it:</p>\n\n<ol>\n<li>doesn't match video id's that include dashes (-),</li>\n<li>doesn't validate the id length (<code>v=aa</code> and <code>v=aaaaaaaaaaaaaaaaaa</code> return to be valid), </li>\n<li>and doesn't match secured URLs at all (http<strong>s</strong>://youtube.com/watch?valid_params)  </li>\n</ol>\n\n<p>To match https, the dash character, and to validate the id length, this was my initial suggestion of a modified version of Amarghosh's regex:</p>\n\n<p><code>^https?:\\/\\/(?:www\\.)?youtube\\.com\\/watch\\?(?=.*v=((\\w|-){11}))(?:\\S+)?$</code>   </p>\n\n<h2>UPDATE 1: URLs versus Strings</h2>\n\n<p>After I posted the above pattern, I was asked: <em>\"What if the <strong>URL</strong> is like this;<br>\n<code>youtube.com/watch?gl=US&amp;hl=en-US&amp;v=bQVoAWSP7k4</code>\"</em>?   </p>\n\n<p>First of, please note that this not a <strong>URL</strong> at all. <a href=\"http://tools.ietf.org/html/rfc3986#page-16\">RFC compliant URLs</a> must start with the scheme! ;) </p>\n\n<p>Anyway, to match any kind of <strong>string</strong> that indicates to refer to a YouTube video, I updated my answer to exclude the URL scheme being required. So my second suggestion was as follows:</p>\n\n<p><code>^(?:https?:\\/\\/)?(?:www\\.)?youtube\\.com\\/watch\\?(?=.*v=((\\w|-){11}))(?:\\S+)?$</code></p>\n\n<h2>UPDATE 2: The ultimate regex</h2>\n\n<p>Then I was asked to add support for a \"special case\"; the <em>youtu.be</em> short urls. Initially I did not add these, since it wasn't specifically part of the question. However I updated my answer now with <strong>all</strong> possible <em>\"special cases\"</em>. This means that not only have I added support for youtu.be links, but also the request paths \"/v\" and \"/embed\".</p>\n\n<p>So, may I introduce: My final and ultimate Youtube regex:</p>\n\n<p><code>^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&amp;v=))((\\w|-){11})(?:\\S+)?$</code></p>\n\n<h2>What strings are matched?</h2>\n\n<p>Now this pattern will work for any strings, formatted as follows:</p>\n\n<p><strong>Without scheme and subdomain (Domain: youtu.be, Path: /)</strong>   </p>\n\n<pre><code>youtu.be/&lt;video:id&gt;   \n</code></pre>\n\n<p><strong>Without scheme, with subdomain (Domain: youtu.be, Path: /)</strong>  </p>\n\n<pre><code>www.youtu.be/&lt;video:id&gt;     \n</code></pre>\n\n<p><strong>With HTTP scheme, without subdomain (Domain: youtu.be, Path: /)</strong></p>\n\n<pre><code>http://youtu.be/&lt;video:id&gt;   \n</code></pre>\n\n<p><strong>With HTTP scheme and subdomain (Domain: youtu.be, Path: /)</strong></p>\n\n<pre><code>http://www.youtu.be/&lt;video:id&gt;   \n</code></pre>\n\n<p><strong>With HTTPS scheme, without subdomain (Domain: youtu.be, Path: /)</strong></p>\n\n<pre><code>https://youtu.be/&lt;video:id&gt;     \n</code></pre>\n\n<p><strong>With HTTPS scheme and subdomain (Domain: youtu.be, Path: /)</strong></p>\n\n<pre><code>https://www.youtu.be/&lt;video:id&gt;   \n</code></pre>\n\n<p><strong>Without scheme and subdomain (Domain: youtube.com, Path: /embed)</strong>   </p>\n\n<pre><code>youtube.com/embed/&lt;video:id&gt;   \nyoutube.com/embed/&lt;video:id&gt;&amp;other_params \n</code></pre>\n\n<p><strong>Without scheme, with subdomain (Domain: youtube.com, Path: /embed)</strong>  </p>\n\n<pre><code>www.youtube.com/embed/&lt;video:id&gt;   \nwww.youtube.com/embed/&lt;video:id&gt;&amp;other_params   \n</code></pre>\n\n<p><strong>With HTTP scheme, without subdomain (Domain: youtube.com, Path: /embed)</strong></p>\n\n<pre><code>http://youtube.com/embed/&lt;video:id&gt;   \nhttp://youtube.com/embed/&lt;video:id&gt;&amp;other_params  \n</code></pre>\n\n<p><strong>With HTTP scheme and subdomain (Domain: youtube.com, Path: /embed)</strong></p>\n\n<pre><code>http://www.youtube.com/embed/&lt;video:id&gt;   \nhttp://www.youtube.com/embed/&lt;video:id&gt;&amp;other_params  \n</code></pre>\n\n<p><strong>With HTTPS scheme, without subdomain (Domain: youtube.com, Path: /embed)</strong></p>\n\n<pre><code>https://youtube.com/embed/&lt;video:id&gt;   \nhttps://youtube.com/embed/&lt;video:id&gt;&amp;other_params    \n</code></pre>\n\n<p><strong>With HTTPS scheme and subdomain (Domain: youtube.com, Path: /embed)</strong></p>\n\n<pre><code>https://www.youtube.com/embed/&lt;video:id&gt;   \nhttps://www.youtube.com/embed/&lt;video:id&gt;&amp;other_params\n</code></pre>\n\n<p><strong>Without scheme and subdomain (Domain: youtube.com, Path: /v)</strong>   </p>\n\n<pre><code>youtube.com/v/&lt;video:id&gt;   \nyoutube.com/v/&lt;video:id&gt;&amp;other_params \n</code></pre>\n\n<p><strong>Without scheme, with subdomain (Domain: youtube.com, Path: /v)</strong>  </p>\n\n<pre><code>www.youtube.com/v/&lt;video:id&gt;   \nwww.youtube.com/v/&lt;video:id&gt;&amp;other_params   \n</code></pre>\n\n<p><strong>With HTTP scheme, without subdomain (Domain: youtube.com, Path: /v)</strong></p>\n\n<pre><code>http://youtube.com/v/&lt;video:id&gt;   \nhttp://youtube.com/v/&lt;video:id&gt;&amp;other_params  \n</code></pre>\n\n<p><strong>With HTTP scheme and subdomain (Domain: youtube.com, Path: /v)</strong></p>\n\n<pre><code>http://www.youtube.com/v/&lt;video:id&gt;   \nhttp://www.youtube.com/v/&lt;video:id&gt;&amp;other_params  \n</code></pre>\n\n<p><strong>With HTTPS scheme, without subdomain (Domain: youtube.com, Path: /v)</strong></p>\n\n<pre><code>https://youtube.com/v/&lt;video:id&gt;   \nhttps://youtube.com/v/&lt;video:id&gt;&amp;other_params    \n</code></pre>\n\n<p><strong>With HTTPS scheme and subdomain (Domain: youtube.com, Path: /v)</strong></p>\n\n<pre><code>https://www.youtube.com/v/&lt;video:id&gt;   \nhttps://www.youtube.com/v/&lt;video:id&gt;&amp;other_params   \n</code></pre>\n\n<p><strong>Without scheme and subdomain (Domain: youtube.com, Path: /watch)</strong>   </p>\n\n<pre><code>youtube.com/watch?v=&lt;video:id&gt;   \nyoutube.com/watch?v=&lt;video:id&gt;&amp;other_params   \nyoutube.com/watch?other_params&amp;v=&lt;video:id&gt; \nyoutube.com/watch?other_params&amp;v=&lt;video:id&gt;&amp;more_params  \n</code></pre>\n\n<p><strong>Without scheme, with subdomain (Domain: youtube.com, Path: /watch)</strong>  </p>\n\n<pre><code>www.youtube.com/watch?v=&lt;video:id&gt;   \nwww.youtube.com/watch?v=&lt;video:id&gt;&amp;other_params   \nwww.youtube.com/watch?other_params&amp;v=&lt;video:id&gt;  \nwww.youtube.com/watch?other_params&amp;v=&lt;video:id&gt;&amp;more_params   \n</code></pre>\n\n<p><strong>With HTTP scheme, without subdomain (Domain: youtube.com, Path: /watch)</strong></p>\n\n<pre><code>http://youtube.com/watch?v=&lt;video:id&gt;   \nhttp://youtube.com/watch?v=&lt;video:id&gt;&amp;other_params   \nhttp://youtube.com/watch?other_params&amp;v=&lt;video:id&gt;   \nhttp://youtube.com/watch?other_params&amp;v=&lt;video:id&gt;&amp;more_params  \n</code></pre>\n\n<p><strong>With HTTP scheme and subdomain (Domain: youtube.com, Path: /watch)</strong></p>\n\n<pre><code>http://www.youtube.com/watch?v=&lt;video:id&gt;   \nhttp://www.youtube.com/watch?v=&lt;video:id&gt;&amp;other_params   \nhttp://www.youtube.com/watch?other_params&amp;v=&lt;video:id&gt;   \nhttp://www.youtube.com/watch?other_params&amp;v=&lt;video:id&gt;&amp;more_params  \n</code></pre>\n\n<p><strong>With HTTPS scheme, without subdomain (Domain: youtube.com, Path: /watch)</strong></p>\n\n<pre><code>https://youtube.com/watch?v=&lt;video:id&gt;   \nhttps://youtube.com/watch?v=&lt;video:id&gt;&amp;other_params   \nhttps://youtube.com/watch?other_params&amp;v=&lt;video:id&gt;   \nhttps://youtube.com/watch?other_params&amp;v=&lt;video:id&gt;&amp;more_params     \n</code></pre>\n\n<p><strong>With HTTPS scheme and subdomain (Domain: youtube.com, Path: /watch)</strong></p>\n\n<pre><code>https://www.youtube.com/watch?v=&lt;video:id&gt;   \nhttps://www.youtube.com/watch?v=&lt;video:id&gt;&amp;other_params   \nhttps://www.youtube.com/watch?other_params&amp;v=&lt;video:id&gt;\nhttps://www.youtube.com/watch?other_params&amp;v=&lt;video:id&gt;&amp;more_params  \n</code></pre>\n\n<h2>FUNCTIONAL USAGE</h2>\n\n<p>The most easy way to use the pattern, is to wrap it into a function such as this one:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>/**\r\n * JavaScript function to match (and return) the video Id\r\n * of any valid Youtube Url, given as input string.\r\n * @author: Stephan Schmitz &lt;eyecatchup@gmail.com&gt;\r\n * @url: http://stackoverflow.com/a/10315969/624466\r\n */\r\nfunction ytVidId(url) {\r\n  var p = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&amp;v=))((\\w|-){11})(?:\\S+)?$/;\r\n  return (url.match(p)) ? RegExp.$1 : false;\r\n}\r\n\r\n// for example snippet only!\r\ndocument.body.addEventListener('click', function(e) {\r\n    if (e.target.className == 'yt-url' &amp;&amp; 'undefined' !== e.target.value) {\r\n        var ytId = ytVidId(e.target.value);\r\n        alert(e.target.value + \"\\r\\nResult: \" + (!ytId ? 'false' : ytId));\r\n    }\r\n}, false);</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;!-- Click the buttons to probe URLs --&gt;\r\n&lt;input type=\"button\" value=\"https://www.youtube.com/watch?v=p-e2G_VcTms&amp;feature=g-logo&amp;context=G29aead6FOAAAAAAABAA\" class=\"yt-url\"&gt;\r\n&lt;input type=\"button\" value=\"https://www.youtube.com/latest\" class=\"yt-url\"&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>If the type of the function's result value must be a boolean value, just replace <code>RegExp.$1</code> by <code>true</code>. That's it.</p>\n\n<p><strong>One final note on the video Id length</strong>: One asked if the ids have a fixed length of 11 chars? and if it might change in the future?</p>\n\n<p>The best answer to that question is probably also the only \"official\" statement that I've found <a href=\"https://groups.google.com/forum/?fromgroups=#!topic/youtube-api-gdata/oAztQ3f1tcM\">here</a> and which says: <em>\"I don't see anywhere in the documentation where we officially commit to a standard length of 11 characters for YouTube video ids. It's one of those things where we have a current implementation, and it may stay that way indefinitely. But we're not offering any official commitment to that, so proceed at your own risk.\"</em></p>\n",
                    "is_accepted": false,
                    "score": 91
                },
                {
                    "body": "<pre><code>function get_youtube_video_id_from_url(url){\n    var code = url.match(/v=([^&amp;#]{5,})/)\n    return (typeof code[1] == 'string') ? code[1] : false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function validYT(url) {\n  var p = /^(?:https?:\\/\\/)?(?:www\\.)?youtube\\.com\\/watch\\?(?=.*v=((\\w|-){11}))(?:\\S+)?$/;\n  return (url.match(p)) ? RegExp.$1 : false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>@eyecatchup ubove has an excelent regex, but with the help of regexper.com \ni saw that his regex will pass any youtube url where the ?v parameter had a value of any word or - sign repeated 11 times. But youtube specificly restricts the video id to 11 characters so a fix for his regex would be</p>\n\n<pre><code>/^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&amp;v=))((.|-){11})(?:\\S+)?$/\n</code></pre>\n\n<p>compare the vizualization of his regex </p>\n\n<pre><code>http://www.regexper.com/#/%5E%28?:https?:%5C/%5C/%29?%28?:www%5C.%29?%28?:youtu%5C.be%5C/%7Cyoutube%5C.com%5C/%28?:embed%5C/%7Cv%5C/%7Cwatch%5C?v=%7Cwatch%5C?.%2b&amp;v=%29%29%28%28%5Cw%7C-%29%7B11%7D%29%28?:%5CS%2b%29?$/\n</code></pre>\n\n<p>and my fix</p>\n\n<pre><code>http://www.regexper.com/#%2F%5E(%3F%3Ahttps%3F%3A%5C%2F%5C%2F)%3F(%3F%3Awww%5C.)%3F(%3F%3Ayoutu%5C.be%5C%2F%7Cyoutube%5C.com%5C%2F(%3F%3Aembed%5C%2F%7Cv%5C%2F%7Cwatch%5C%3Fv%3D%7Cwatch%5C%3F.%2B%26v%3D))((%5Ba-zA-Z0-9%5D%7C-)%7B11%7D)(%3F%3A%5CS%2B)%3F%24%2F\n</code></pre>\n\n<p>as an edit to the 11 character limit changing in future then the current regex would mean that any word or - would have to be repeated exactly 11 times, to that my fix is </p>\n\n<pre><code>/^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&amp;v=))((\\w|-){11,})(?:\\S+)?$/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I know there is plenty of question answered over here <a href=\"http://stackoverflow.com/questions/tagged/youtube+regex\">http://stackoverflow.com/questions/tagged/youtube+regex</a>, but not able find a question similar to me.</p>\n\n<p>Any body has the JavaScript Regular expression for validating the YouTube VIDEO URL's line below listed. Just want to know where such a URL can be possible</p>\n\n<pre><code>http://www.youtube.com/watch?v=bQVoAWSP7k4\nhttp://www.youtube.com/watch?v=bQVoAWSP7k4&amp;feature=popular\nhttp://www.youtube.com/watch?v=McNqjYiFmyQ&amp;feature=related&amp;bhablah\nhttp://youtube.com/watch?v=bQVoAWSP7k4\n</code></pre>\n\n<p>-- update 1--\n-- update 2--</p>\n\n<p>This one worked almost fine, but failed for the URL <a href=\"http://youtube.com/watch?v=bQVoAWSP7k4\">http://youtube.com/watch?v=bQVoAWSP7k4</a> </p>\n\n<pre><code>var matches = $('#videoUrl').val().match(/http:\\/\\/(?:www\\.)?youtube.*watch\\?v=([a-zA-Z0-9\\-_]+)/);\nif (matches) {\n    alert('valid');\n} else {\n    alert('Invalid');\n}\n</code></pre>\n",
            "last_activity_date": 1420211468,
            "question_id": 2964678,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "regex",
                "url",
                "youtube"
            ],
            "title": "jQuery Youtube URL Validation with regex"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Try CSS</p>\n\n<pre><code>&lt;body style=\"overflow: hidden\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>In case you need possibility to hide and show scrollbars dynamically you could use</p>\n\n<pre><code>$(\"body\").css(\"overflow\", \"hidden\");\n</code></pre>\n\n<p>and</p>\n\n<pre><code>$(\"body\").css(\"overflow\", \"auto\");\n</code></pre>\n\n<p>somewhere in your code.</p>\n",
                    "is_accepted": true,
                    "score": 110
                },
                {
                    "body": "<p>So far we have overflow:hidden on the body.  However IE doesn't always honor that and you need to put scroll=\"no\" on the body element as well and/or place overflow:hidden on the html element as well.</p>\n\n<p>You can take this further when you need to 'take control' of the view port you can do this:-</p>\n\n<pre><code>&lt;style&gt;\n body {width:100%; height:100%; overflow:hidden, margin:0}\n html {width:100%; height:100%; overflow:hidden}\n&lt;/style&gt;\n</code></pre>\n\n<p>An element granted height 100% in the body has the full height of the window viewport, and element positioned absolutely using bottom:nnPX will be set nn pixels above the bottom edge of the window, etc.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>In case you also need support for Internet Explorer 6, just overflow the <strong>html</strong></p>\n\n<pre><code>$(\"html\").css(\"overflow\", \"hidden\");\n</code></pre>\n\n<p>and</p>\n\n<pre><code>$(\"html\").css(\"overflow\", \"auto\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Try CSS.</p>\n\n<p>If you want to remove Horizontal</p>\n\n<pre><code>overflow-x: hidden;\n</code></pre>\n\n<p>And if you want to remove Vertical</p>\n\n<pre><code>overflow-y: hidden;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>function reloadScrollBars() {\n    document.documentElement.style.overflow = 'auto';  // firefox, chrome\n    document.body.scroll = \"yes\"; // ie only\n}\n\nfunction unloadScrollBars() {\n    document.documentElement.style.overflow = 'hidden';  // firefox, chrome\n    document.body.scroll = \"no\"; // ie only\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>IE has some bug with the scrollbars. So if you want either of the two, you must include the following to hide the horizontal scrollbar:</p>\n\n<p><code>overflow-x: hidden;</code><br>\n<code>overflow-y:scroll;</code></p>\n\n<p>and to hide vertical:</p>\n\n<p><code>overflow-y: hidden;</code><br>\n<code>overflow-x: scroll;</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Because Firefox has an arrow key short cut, you probably want to put a <code>&lt;div&gt;</code> around it with CSS style: <code>overflow:hidden;</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In modern versions of IE (IE10 and above), scrollbars can be hidden using the <a href=\"http://msdn.microsoft.com/en-us/library/ie/hh771902%28v=vs.85%29.aspx\" rel=\"nofollow\"><code>-ms-overflow-style</code> property</a>.</p>\n\n<pre><code>html {\n     -ms-overflow-style: none;\n}\n</code></pre>\n\n<p>In Chrome, scrollbars can be styled:</p>\n\n<pre><code>::-webkit-scrollbar {\n    display: none;\n}\n</code></pre>\n\n<p>This is very useful if you want to use the 'default' body scrolling in a web application, which is considerably faster than <code>overflow-y: scroll</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to disable the browsers vertical and horizontal scrollbars using jQuery or javascript?</p>\n",
            "last_activity_date": 1393136910,
            "question_id": 242608,
            "score": 71,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Disable browsers vertical and horizontal scrollbars"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>to save you all the trouble use a framework such as jquery or mootools\nthat calculates all these values in one line (cross browser)\nin mootools its $('element').getTop();\nin jquery you will need a plugin named dimensions if i remember correctly\nalthough most of the time even without a framework you can actually use element.getScrollTop(); to get what you'll need\nthe only problem is on IE7 and below this calculation is somewhat buggy as it doesn not take the position value of the element into consideration\nfor example if you got a position: absolute css attribute for that element\nthe calculation is performed on the parent element of that element</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>If you don't want to include a whole JavaScript library, you can often extract the bits you want from one.</p>\n\n<p>For example, this is essentially how <a href=\"http://jqueryjs.googlecode.com/svn/tags/1.3.2/src/offset.js\">jQuery implements</a> a cross-browser scroll(Top|Left):</p>\n\n<pre><code>function getScroll(method, element) {\n  // The passed in `method` value should be 'Top' or 'Left'\n  method = 'scroll' + method;\n  return (element == window || element == document) ? (\n    self[(method == 'scrollTop') ? 'pageYOffset' : 'pageXOffset'] ||\n    (browserSupportsBoxModel &amp;&amp; document.documentElement[method]) ||\n    document.body[method]\n  ) : element[method];\n}\ngetScroll('Top', element);\ngetScroll('Left', element);\n</code></pre>\n\n<p>Note: you'll notice that the above code contains a <code>browserSupportsBoxModel</code> variable which is undefined. <a href=\"http://jqueryjs.googlecode.com/svn/tags/1.3.2/src/support.js\">jQuery defines this</a> by temporarily adding a div to the page and then measuring some attributes in order to determine whether the browser correctly implements the box model. As you can imagine this flag checks for IE. Specifically, it checks for <a href=\"http://docs.jquery.com/Utilities/jQuery.support\">IE 6 or 7 in quirks mode</a>. Since the detection is rather complex, I've left it as an exercise for you ;-), assuming you have already used <a href=\"http://peter.michaux.ca/articles/feature-detection-state-of-the-art-browser-scripting\">browser</a> <a href=\"http://yura.thinkweb2.com/cft/\">feature</a> <a href=\"http://www.jibbering.com/faq/faq%5Fnotes/not%5Fbrowser%5Fdetect.html\">detection</a> elsewhere in your code.</p>\n\n<p>Edit: If you haven't guessed already, I strongly suggest you use a library for these sorts of things. The overhead is a small price to pay for robust and future-proof code and anyone would be much more productive with a cross-browser framework to build upon. (As opposed to spending countless hours banging your head against IE).</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>function getScrollTop(){\n    if(typeof pageYOffset!= 'undefined'){\n        //most browsers except IE before #9\n        return pageYOffset;\n    }\n    else{\n        var B= document.body; //IE 'quirks'\n        var D= document.documentElement; //IE with doctype\n        D= (D.clientHeight)? D: B;\n        return D.scrollTop;\n    }\n}\n\nalert(getScrollTop())\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 68
                },
                {
                    "body": "<p><strong>YUI 2.8.1</strong> code does this:</p>\n\n<pre><code>function getDocumentScrollTop(doc) \n{\n   doc = doc || document;\n\n   //doc.body.scrollTop is IE quirkmode only\n   return Math.max(doc.documentElement.scrollTop, doc.body.scrollTop);\n}\n</code></pre>\n\n<p>I think <strong>jQuery 1.4.2</strong> code (a bit translated for humans) and supposing I understood it properly does this:</p>\n\n<pre><code>function getDocumentScrollTop(doc) \n{\n   doc = doc || document;\n   win = doc.defaultView || doc.parentWindow; //parentWindow is for IE &lt; 9\n\n   result = 0;\n   if(\"pageYOffset\" in win) //I'don't know why they use this, probably they tested it to be faster than doing: if(typeof win.pageYOffset !== 'undefined')\n      result = win.pageYOffset;\n   else\n      result = (jQuery.support.boxModel &amp;&amp; document.documentElement.scrollTop) || \n               document.body.scrollTop;\n\n   return result;\n}\n</code></pre>\n\n<p>Unfortunatley extracting the value of <code>jQuery.support.boxModel</code> is almost impossible because you would have to add a temporary child element into document and do the same tests jQuery does.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>function getSize(method) {\n  return document.documentElement[method] || document.body[method];\n}\ngetSize(\"scrollTop\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Or just simple as:</p>\n\n<pre><code>var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>What is the best cross-browser way to detect the scrollTop of the browser window?  I prefer not to use any pre-built code libraries because this is a very simple script, and I don't need all of that deadweight.</p>\n",
            "last_activity_date": 1379666216,
            "question_id": 871399,
            "score": 53,
            "tags": [
                "javascript",
                "cross-browser"
            ],
            "title": "Cross-browser method for detecting the scrollTop of the browser window"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Here's something, a Python wrapper around the SeaMonkey Javascript interpreter... <a href=\"http://pypi.python.org/pypi/python-spidermonkey\">http://pypi.python.org/pypi/python-spidermonkey</a></p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>There's a bridge based on JavaScriptCore (from WebKit), but it's pretty incomplete:\n<a href=\"http://code.google.com/p/pyjscore/\" rel=\"nofollow\">http://code.google.com/p/pyjscore/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>How about <a href=\"http://code.google.com/p/pyjamas/\">Pyjamas</a>?</p>\n\n<p>From the above website:</p>\n\n<blockquote>\n  <p>Pyjamas provides a python-to-javascript Compiler and a Web Widget set, the combination of which allows developers to easily write well-designed desktop-like Rich Media Applications in python classes and modules that will execute in all major web browsers. without having to write a single line of javascript. Pyjamas is a port of Google Web Toolkit.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>If your just interested in sharing complex data types between javascript and python, check out <a href=\"http://jsonpickle.googlecode.com/svn/docs/index.html\">jsonpickle</a>. It wraps the standard Python JSON libraries, but has some smarts in serializing and deserializing Python classes and other data types.  </p>\n\n<p>Quite a few Google App Engine projects have used this library.  <a href=\"http://code.google.com/p/joose-js/\">Joose</a> and <a href=\"http://github.com/darwin/firepython/tree/master\">FirePython</a> both incorporate jsonpickle.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You might also want to check out the PyPy project - they have a Python to (anything) compiler, including Python to Javascript, C, and llvm.  This allows you to write your code in Python and then compile it into Javascript as you desire.</p>\n\n<p><a href=\"http://codespeak.net/pypy\" rel=\"nofollow\">http://codespeak.net/pypy</a></p>\n\n<p>Also, check out the informative blog:</p>\n\n<p><a href=\"http://morepypy.blogspot.com/\" rel=\"nofollow\">http://morepypy.blogspot.com/</a></p>\n\n<p>Unfortunately though, you can't convert Javascript to Python this way.  It seems to work really well overall, they used to have a Javascript (made from compiled Python) version of the Bub'n'Bros game online (though the server has been down for a while).</p>\n\n<p><a href=\"http://bub-n-bros.sourceforge.net\" rel=\"nofollow\">http://bub-n-bros.sourceforge.net</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>there are two projects that allow an \"obvious\" transition between python objects and javascript objects, with \"obvious\" translations from int or float to Number and str or unicode to String: <a href=\"http://code.google.com/p/pyv8\">PyV8</a> and, as one writer has already mentioned: <a href=\"http://pypi.python.org/pypi/python-spidermonkey\">python-spidermonkey</a>.</p>\n\n<p>there are actually two implementations of pyv8 - the original experiment was by sebastien louisel, and the second one (in active development) is by flier liu.</p>\n\n<p>my interest in these projects has been to link them to <a href=\"http://pyjs.org\">pyjamas</a>, a python-to-javascript compiler, to create a JIT python accelerator.</p>\n\n<p>so there is plenty out there - it just depends what you want to do.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>another possibility is to use XPCOM, say in XUL based apps (like firefox, thunderbird, komodo etc.)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I was playing with Pyjon some time ago and seems manage to write Javascript's eval directly in Python and ran simple programs... Although it is not complete implementation of JS and rather an experiment.\nGet it here:</p>\n\n<p><a href=\"http://code.google.com/p/pyjon/\" rel=\"nofollow\">http://code.google.com/p/pyjon/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"https://pypi.python.org/pypi/PyExecJS\" rel=\"nofollow\">PyExecJS</a> is able to use each of PyV8, Node, JavaScriptCore, SpiderMonkey, JScript.</p>\n\n<pre><code>&gt;&gt;&gt; import execjs\n&gt;&gt;&gt; execjs.eval(\"'red yellow blue'.split(' ')\")\n['red', 'yellow', 'blue']\n&gt;&gt;&gt; execjs.get().name\n'Node.js (V8)'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use <a href=\"https://github.com/PiotrDabkowski/Js2Py\" rel=\"nofollow\">Js2Py</a> to translate JavaScript to Python, this is the only tool available :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to integrate Python and JavaScript?  For example, imagine you wanted to be able to define classes in JavaScript and use them from Python (or vice versa).  If so, what's the best way?  I'm interested not only if this is possible but if <strong>anyone has done it within a \"serious\" project or product</strong>.</p>\n\n<p>I'm guessing it would be possible using <a href=\"http://www.jython.org/Project/\">Jython</a> and <a href=\"http://www.mozilla.org/rhino/\">Rhino</a>, for one example, but I'm curious whether or not anyone's ever actually done this, and if there are solutions for other platforms (especially <a href=\"http://en.wikipedia.org/wiki/CPython\">CPython</a>).</p>\n",
            "last_activity_date": 1418483336,
            "question_id": 683462,
            "score": 33,
            "tags": [
                "javascript",
                "python"
            ],
            "title": "Best way to integrate Python and JavaScript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.w3schools.com/jsref/met_win_setinterval.asp\">setInterval</a> is the function you want. That repeats every x miliseconds.</p>\n\n<pre><code>window.setInterval(function() {\n    alert('test');\n}, 10000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<pre><code>window.setInterval(function() {\n alert('test');\n}, 10000);\n</code></pre>\n\n<p><strong><a href=\"https://developer.mozilla.org/en/DOM/window.setInterval\">window.setInterval</a></strong></p>\n\n<blockquote>\n  <p>Calls a function repeatedly, with a\n  fixed time delay between each call to\n  that function.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>You can use this:</p>\n\n<pre><code>window.setInterval(yourfunction, 10000);\n\nfunction yourfunction() { alert('test'); }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 189
                },
                {
                    "body": "<pre><code>function run() {\n    window.setTimeout(\n         \"run()\",\n         1000\n    );\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>try jQueryTimers, they have great functionality for polling</p>\n\n<p><a href=\"http://plugins.jquery.com/project/timers\" rel=\"nofollow\">http://plugins.jquery.com/project/timers</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>jQuery 1.4 also includes a .delay( duration, [ queueName ] ) method if you only need it to trigger once and have already started using that version.</p>\n\n<pre><code>$('#foo').slideUp(300).delay(800).fadeIn(400);\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/delay/\">http://api.jquery.com/delay/</a></p>\n\n<p>Ooops....my mistake you were looking for an event to continue triggering. I'll leave this here, someone may find it helpful.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I was just experimenting with jQuery and wrote a simple timer / stop watch ...\n <a href=\"http://bornagainprogrammer.net/2010/08/19/a-simple-stop-watch-timer-using-jquery/\" rel=\"nofollow\">http://bornagainprogrammer.net/2010/08/19/a-simple-stop-watch-timer-using-jquery/</a> </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Might want to check out <strong>jQuery Timer</strong> to manage one or multiple timers.</p>\n\n<p><a href=\"http://code.google.com/p/jquery-timer/\">http://code.google.com/p/jquery-timer/</a></p>\n\n<pre><code>var timer = $.timer(yourfunction, 10000);\n\nfunction yourfunction() { alert('test'); }\n</code></pre>\n\n<p>Then you can control it with:</p>\n\n<pre><code>timer.play();\ntimer.pause();\ntimer.toggle();\ntimer.once();\netc...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 42
                }
            ],
            "body": "<p>Is there anyway to implement a timer for JQuery, eg. every 10 seconds it needs to call a js function. </p>\n\n<p>I tried the following</p>\n\n<pre><code>window.setTimeout(function() {\n alert('test');\n}, 10000);\n</code></pre>\n\n<p>but this only executes once and then never again. </p>\n",
            "last_activity_date": 1348313449,
            "question_id": 2295049,
            "score": 119,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Call js-function using JQuery timer"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If you have to generate global variables in production code (which should be avoided) <strong>always</strong> declare them <strong>explicitly</strong>:</p>\n\n<pre><code>window.globalVar = \"This is global!\";\n</code></pre>\n\n<p>While it is possible to define a global variable by just omitting <code>var</code> (assuming there is no local variable of the same name), doing so generates an <em>implicit</em> global, which is a bad thing to do and would generate an error in <em>strict mode</em>.</p>\n",
                    "is_accepted": true,
                    "score": 130
                },
                {
                    "body": "<p>If this is the only application where you're going to use this variable, Felix's approach is excellent. However, if you're writing a jQuery plugin, consider \"namespacing\" (details on the quotes later...) variables and functions needed under the jQuery object. For example, I'm currently working on a jQuery popup menu that I've called miniMenu. Thus, I've defined a \"namespace\" <code>miniMenu</code> under jQuery, and I place everything there.</p>\n\n<p>The reason I use quotes when I talk about javascript namespaces is that they aren't really namespaces in the normal sense. Instead, I just use a javascript object and place all my functions and variables as properties of this object.</p>\n\n<p>Also, for convenience, I usually sub-space the plugin namespace with an <code>i</code> namespace for stuff that should only be used internally within the plugin, so as to hide it from users of the plugin.</p>\n\n<p>This is how it works:</p>\n\n<pre><code>// An object to define utility functions and global variables on:\n$.miniMenu = new Object(); \n// An object to define internal stuff for the plugin:\n$.miniMenu.i = new Object();\n</code></pre>\n\n<p>Now I can just do <code>$.miniMenu.i.globalVar = 3</code> or <code>$.miniMenu.i.parseSomeStuff = function(...) {...}</code> whenever I need to save something globally, and I still keep it out of the global namespace.</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>Here is a basic example of a global variable that the rest of your functions can access. Here is a live example for you: <a href=\"http://jsfiddle.net/fxCE9/\">http://jsfiddle.net/fxCE9/</a></p>\n\n<pre><code>var myVariable = 'Hello';\nalert('value: ' + myVariable);\nmyFunction1();\nalert('value: ' + myVariable);\nmyFunction2();\nalert('value: ' + myVariable);\n\n\nfunction myFunction1() {\n    myVariable = 'Hello 1';\n}\n\nfunction myFunction2() {\n    myVariable = 'Hello 2';\n}\n</code></pre>\n\n<p>If you are doing this within a jquery ready() function then make sure your variable is inside the ready() function alongwith your other functions.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Declare the variable outside of functions</p>\n\n<pre><code>function dosomething(){\n  var i = 0; // can only be used inside function\n}\n\nvar i = '';\nfunction dosomething(){\n  i = 0; // can be used inside and outside the function\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm wondering what the best way is to set a global variable with Jquery / Javascript that can be used and updated by multiple functions.  </p>\n\n<p>I've a fairly over complex site that uses sliders(http://www.nwph.info/nwph/nwpho/) , I want to add a dynamic breadcrumb and thought that restructuring the code so that the various functions can read from one shared global variable would be much better than continuously passing the current clicked object name around.</p>\n\n<p>Cheers\nPaul</p>\n",
            "last_activity_date": 1425388997,
            "question_id": 3352020,
            "score": 72,
            "tags": [
                "javascript",
                "jquery",
                "global-variables"
            ],
            "title": "What is the &quot;best&quot; way to set a global variable in JavaScript?"
        },
        {
            "answer_count": 18,
            "answers": [
                {
                    "body": "<p>Your local IP is always 127.0.0.1.</p>\n\n<p>Then there is the network IP, which you can get from <code>ifconfig</code> (*nix) or <code>ipconfig</code> (win). This is only useful within the local network.</p>\n\n<p>Then there is your external/public IP, which you can only get if you can somehow ask the router for it, or you can setup an external service which returns the client IP address whenever it gets a request. There are also other such services in existence, like whatismyip.com.</p>\n\n<p>In some cases (for instance if you have a WAN connection) the network IP and the public IP are the same, and can both be used externally to reach your computer.</p>\n\n<p>If your network and public IPs are different, you may need to have your network router forward all incoming connections to your network ip.</p>\n\n<hr>\n\n<p>Update 2013:</p>\n\n<p>There's a new way of doing this now, you can check the socket object of your connection for a property called <code>localAddress</code>, e.g. <code>net.socket.localAddress</code>. It returns the address on your end of the socket.</p>\n\n<p>Easiest way is to just open a random port and listen on it, then get your address and close the socket.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Here is a snippet of node.js code that will parse the output of <code>ifconfig</code> and (asynchronously) return the first IP address found:</p>\n\n<p>(tested on MacOS Snow Leopard only; hope it works on linux too)</p>\n\n<pre><code>var getNetworkIP = (function () {\n    var ignoreRE = /^(127\\.0\\.0\\.1|::1|fe80(:1)?::1(%.*)?)$/i;\n\n    var exec = require('child_process').exec;\n    var cached;    \n    var command;\n    var filterRE;\n\n    switch (process.platform) {\n    // TODO: implement for OSs without ifconfig command\n    case 'darwin':\n         command = 'ifconfig';\n         filterRE = /\\binet\\s+([^\\s]+)/g;\n         // filterRE = /\\binet6\\s+([^\\s]+)/g; // IPv6\n         break;\n    default:\n         command = 'ifconfig';\n         filterRE = /\\binet\\b[^:]+:\\s*([^\\s]+)/g;\n         // filterRE = /\\binet6[^:]+:\\s*([^\\s]+)/g; // IPv6\n         break;\n    }\n\n    return function (callback, bypassCache) {\n         // get cached value\n        if (cached &amp;&amp; !bypassCache) {\n            callback(null, cached);\n            return;\n        }\n        // system call\n        exec(command, function (error, stdout, sterr) {\n            var ips = [];\n            // extract IPs\n            var matches = stdout.match(filterRE);\n            // JS has no lookbehind REs, so we need a trick\n            for (var i = 0; i &lt; matches.length; i++) {\n                ips.push(matches[i].replace(filterRE, '$1'));\n            }\n\n            // filter BS\n            for (var i = 0, l = ips.length; i &lt; l; i++) {\n                if (!ignoreRE.test(ips[i])) {\n                    //if (!error) {\n                        cached = ips[i];\n                    //}\n                    callback(error, ips[i]);\n                    return;\n                }\n            }\n            // nothing found\n            callback(error, null);\n        });\n    };\n})();\n</code></pre>\n\n<p>Usage example:</p>\n\n<pre><code>getNetworkIP(function (error, ip) {\n    console.log(ip);\n    if (error) {\n        console.log('error:', error);\n    }\n}, false);\n</code></pre>\n\n<p>If the second parameter is <code>true</code>, the function will exec a system call every time; otherwise the cached value is used.</p>\n\n<hr>\n\n<h1>Updated version</h1>\n\n<p>Returns an array of all local network addresses.</p>\n\n<p>Tested on Ubuntu 11.04 and Windows XP 32</p>\n\n<pre><code>var getNetworkIPs = (function () {\n    var ignoreRE = /^(127\\.0\\.0\\.1|::1|fe80(:1)?::1(%.*)?)$/i;\n\n    var exec = require('child_process').exec;\n    var cached;\n    var command;\n    var filterRE;\n\n    switch (process.platform) {\n    case 'win32':\n    //case 'win64': // TODO: test\n        command = 'ipconfig';\n        filterRE = /\\bIPv[46][^:\\r\\n]+:\\s*([^\\s]+)/g;\n        break;\n    case 'darwin':\n        command = 'ifconfig';\n        filterRE = /\\binet\\s+([^\\s]+)/g;\n        // filterRE = /\\binet6\\s+([^\\s]+)/g; // IPv6\n        break;\n    default:\n        command = 'ifconfig';\n        filterRE = /\\binet\\b[^:]+:\\s*([^\\s]+)/g;\n        // filterRE = /\\binet6[^:]+:\\s*([^\\s]+)/g; // IPv6\n        break;\n    }\n\n    return function (callback, bypassCache) {\n        if (cached &amp;&amp; !bypassCache) {\n            callback(null, cached);\n            return;\n        }\n        // system call\n        exec(command, function (error, stdout, sterr) {\n            cached = [];\n            var ip;\n            var matches = stdout.match(filterRE) || [];\n            //if (!error) {\n            for (var i = 0; i &lt; matches.length; i++) {\n                ip = matches[i].replace(filterRE, '$1')\n                if (!ignoreRE.test(ip)) {\n                    cached.push(ip);\n                }\n            }\n            //}\n            callback(error, cached);\n        });\n    };\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>Calling ifconfig is very platform-dependent, and the networking layer does know what ip addresses a socket is on, so best is to ask it.  Node doesn't expose a direct method of doing this, but you can open any socket, and ask what local IP address is in use.  For example, opening a socket to www.google.com:</p>\n\n<pre><code>var net = require('net');\nfunction getNetworkIP(callback) {\n  var socket = net.createConnection(80, 'www.google.com');\n  socket.on('connect', function() {\n    callback(undefined, socket.address().address);\n    socket.end();\n  });\n  socket.on('error', function(e) {\n    callback(e, 'error');\n  });\n}\n</code></pre>\n\n<p>Usage case:</p>\n\n<pre><code>getNetworkIP(function (error, ip) {\n    console.log(ip);\n    if (error) {\n        console.log('error:', error);\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>'use strict';\n\nvar os = require('os');\nvar ifaces = os.networkInterfaces();\n\nObject.keys(ifaces).forEach(function (ifname) {\n  var alias = 0\n    ;\n\n  ifaces[ifname].forEach(function (iface) {\n    if ('IPv4' !== iface.family || iface.internal !== false) {\n      // skip over internal (i.e. 127.0.0.1) and non-ipv4 addresses\n      return;\n    }\n\n    if (alias &gt;= 1) {\n      // this single interface has multiple ipv4 addresses\n      console.log(ifname + ':' + alias, iface.address);\n    } else {\n      // this interface has only one ipv4 adress\n      console.log(ifname, iface.address);\n    }\n  });\n});\n\n// en0 192.168.1.101\n// eth0 10.0.0.101\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 99
                },
                {
                    "body": "<p>I'm using node.js 0.6.5</p>\n\n<pre><code>$ node -v\nv0.6.5\n</code></pre>\n\n<p>Here is what I do</p>\n\n<pre><code>var util = require('util');\nvar exec = require('child_process').exec;\nfunction puts(error, stdout, stderr) {\n        util.puts(stdout);\n}\nexec(\"hostname -i\", puts);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><s>os.networkInterfaces as of right now doesn't work on windows.</s> Running programs to parse the results seems a bit iffy. Here's what I use.</p>\n\n<pre><code>require('dns').lookup(require('os').hostname(), function (err, add, fam) {\n  console.log('addr: '+add);\n})\n</code></pre>\n\n<p>This should return your first network interface local ip.</p>\n",
                    "is_accepted": false,
                    "score": 57
                },
                {
                    "body": "<p>Here's my utility method for getting the local IP address, assuming you are looking for an IPv4 address and the machine only has one real network interface. It could easily be refactored to return an array of IPs for multi-interface machines.</p>\n\n<pre><code>function getIPAddress() {\n  var interfaces = require('os').networkInterfaces();\n  for (var devName in interfaces) {\n    var iface = interfaces[devName];\n\n    for (var i = 0; i &lt; iface.length; i++) {\n      var alias = iface[i];\n      if (alias.family === 'IPv4' &amp;&amp; alias.address !== '127.0.0.1' &amp;&amp; !alias.internal)\n        return alias.address;\n    }\n  }\n\n  return '0.0.0.0';\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Any IP of your machine you can find by using the <em>os</em> module - and that's <strong>native</strong> to NodeJS</p>\n\n<pre><code>var os = require( 'os' );\n\nvar networkInterfaces = os.networkInterfaces( );\n\nconsole.log( networkInterfaces );\n</code></pre>\n\n<p>All you need to do is call <em>os.networkInterfaces()</em> and you'll get an easy manageable list - easier than running <em>ifconfig</em> by leagues</p>\n\n<p><a href=\"http://nodejs.org/api/os.html#os_os_networkinterfaces\">http://nodejs.org/api/os.html#os_os_networkinterfaces</a></p>\n\n<p>Best</p>\n\n<p>Edoardo</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>For anyone interested in brevity, here are some \"one-liners\" that do not require plugins/dependencies that aren't part of a standard Node installation:</p>\n\n<p><strong>Public IPv4 and IPv6 of eth0 as an Array:</strong></p>\n\n<pre><code>var ips = require('os').networkInterfaces().eth0.map(function(interface) { \n    return interface.address;\n});\n</code></pre>\n\n<p><strong>First Public IP of eth0 (usually IPv4) as String:</strong></p>\n\n<pre><code>var ip = require('os').networkInterfaces().eth0[0].address;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is a multi-ip version of jhurliman's answer above:</p>\n\n<pre><code>function getIPAddresses() {\n\n    var ipAddresses = [];\n\n    var interfaces = require('os').networkInterfaces();\n    for (var devName in interfaces) {\n        var iface = interfaces[devName];\n        for (var i = 0; i &lt; iface.length; i++) {\n            var alias = iface[i];\n            if (alias.family === 'IPv4' &amp;&amp; alias.address !== '127.0.0.1' &amp;&amp; !alias.internal) {\n                ipAddresses.push(alias.address);\n            }\n        }\n    }\n\n    return ipAddresses;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"https://github.com/indutny/node-ip\" rel=\"nofollow\">https://github.com/indutny/node-ip</a></p>\n\n<pre><code>var ip = require(\"ip\");\nconsole.dir ( ip.address() );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's a variation that allows you to get local ip address (tested on Mac and Win):</p>\n\n<pre><code>\nvar\n    // Local ip address that we're trying to calculate\n    address\n    // Provides a few basic operating-system related utility functions (built-in)\n    ,os = require('os')\n    // Network interfaces\n    ,ifaces = os.networkInterfaces();\n\n\n// Iterate over interfaces ...\nfor (var dev in ifaces) {\n\n    // ... and find the one that matches the criteria\n    var iface = ifaces[dev].filter(function(details) {\n        return details.family === 'IPv4' && details.internal === false;\n    });\n\n    if(iface.length > 0) address = iface[0].address;\n}\n\n// Print the result\nconsole.log(address); // 10.25.10.147\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Google directed me to this question while searching for <em>\"node.js get server ip\"</em>, so let's give an alternative answer for those who are trying to achieve this in their node.js <strong>server</strong> program (may be the case of the original poster).</p>\n\n<p>In the most trivial case where the server is bound to only one IP address, there should be no need to determine the IP address since we already know to which address we bound it (eg. second parameter passed to the <code>listen()</code> function).</p>\n\n<p>In the less trivial case where the server is bound to multiple IPs addresses, we may need to determine the IP address of the interface to which a client connected. And as briefly suggested by Tor Valamo, nowadays, we can easily get this information from the connected socket and its <code>localAddress</code> property.</p>\n\n<p>For example, if the program is a web server:</p>\n\n<pre><code>var http = require(\"http\")\n\nhttp.createServer(function (req, res) {\n    console.log(req.socket.localAddress)\n    res.end(req.socket.localAddress)\n}).listen(8000)\n</code></pre>\n\n<p>And if it's a generic TCP server:</p>\n\n<pre><code>var net = require(\"net\")\n\nnet.createServer(function (socket) {\n    console.log(socket.localAddress)\n    socket.end(socket.localAddress)\n}).listen(8000)\n</code></pre>\n\n<p>When running a server program, this solution offers very high portability, accuracy and efficiency.</p>\n\n<p>For more details, see:</p>\n\n<ul>\n<li><a href=\"http://nodejs.org/api/net.html\" rel=\"nofollow\">http://nodejs.org/api/net.html</a></li>\n<li><a href=\"http://nodejs.org/api/http.html\" rel=\"nofollow\">http://nodejs.org/api/http.html</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I realise this is an old thread, but I'd like to offer an improvement on the top answer for the following reasons:</p>\n\n<ul>\n<li>Code should be as self explanatory as possible. </li>\n<li>Enumerating over an array using <strong>for...in...</strong> should be avoided.</li>\n<li><p><strong>for...in...</strong> enumeration should be validated to ensure the object's being enumerated over contains the property you're looking for. As javsacript is loosely typed and the  <strong>for...in...</strong> can be handed any arbitory object to handle; it's safer to validate the property we're looking for is available. </p>\n\n<pre><code>var os = require('os'),\n    interfaces = os.networkInterfaces(),\n    address,\n    addresses = [],\n    i,\n    l,\n    interfaceId,\n    interfaceArray;\n\nfor (interfaceId in interfaces) {\n    if (interfaces.hasOwnProperty(interfaceId)) {\n        interfaceArray = interfaces[interfaceId];\n        l = interfaceArray.length;\n\n        for (i = 0; i &lt; l; i += 1) {\n\n            address = interfaceArray[i];\n\n            if (address.family === 'IPv4' &amp;&amp; !address.internal) {\n                addresses.push(address.address);\n            }\n        }\n    }\n}\n\nconsole.log(addresses);\n</code></pre></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Based on a comment above, here's what's working for the current version of Node:</p>\n\n<pre><code>var os = require('os');\nvar _ = require('lodash');\n\nvar ip = _.chain(os.networkInterfaces())\n  .values()\n  .flatten()\n  .filter(function(val) {\n    return (val.family == 'IPv4' &amp;&amp; val.internal == false)\n  })\n  .pluck('address')\n  .first()\n  .value();\n</code></pre>\n\n<p>The comment on one of the answers above was missing the call to <code>values()</code>. It looks like <code>os.networkInterfaces()</code> now returns an object instead of an array.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is a variation of the above examples. It takes care to filter out vMware interfaces etc. If you don't pass an index it returns all addresses otherwise you may want to set it default to 0 then just pass null to get all, but you'll sort that out. You could also pass in another arg for the regex filter if so inclined to add</p>\n\n<pre><code>    function getAddress(idx) {\n\n    var addresses = [],\n        interfaces = os.networkInterfaces(),\n        name, ifaces, iface;\n\n    for (name in interfaces) {\n        if(interfaces.hasOwnProperty(name)){\n            ifaces = interfaces[name];\n            if(!/(loopback|vmware|internal)/gi.test(name)){\n                for (var i = 0; i &lt; ifaces.length; i++) {\n                    iface = ifaces[i];\n                    if (iface.family === 'IPv4' &amp;&amp;  !iface.internal &amp;&amp; iface.address !== '127.0.0.1') {\n                        addresses.push(iface.address);\n                    }\n                }\n            }\n        }\n    }\n\n    // if an index is passed only return it.\n    if(idx &gt;= 0)\n        return addresses[idx];\n    return addresses;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>hope this helps</p>\n\n<pre><code>var os = require( 'os' );\nvar networkInterfaces = os.networkInterfaces( );\nvar arr = networkInterfaces['Local Area Connection 3']\nvar ip = arr[1].address;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's my variant that allows getting both IPv4 and IPv6 addresses in a portable manner:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>/**\n * Collects information about the local IPv4/IPv6 addresses of\n * every network interface on the local computer.\n * Returns an object with the network interface name as the first-level key and\n * \"IPv4\" or \"IPv6\" as the second-level key.\n * For example you can use getLocalIPs().eth0.IPv6 to get the IPv6 address\n * (as string) of eth0\n */\ngetLocalIPs = function () {\n    var addrInfo, ifaceDetails, _len;\n    var localIPInfo = {};\n    //Get the network interfaces\n    var networkInterfaces = require('os').networkInterfaces();\n    //Iterate over the network interfaces\n    for (var ifaceName in networkInterfaces) {\n        ifaceDetails = networkInterfaces[ifaceName];\n        //Iterate over all interface details\n        for (var _i = 0, _len = ifaceDetails.length; _i &lt; _len; _i++) {\n            addrInfo = ifaceDetails[_i];\n            if (addrInfo.family === 'IPv4') {\n                //Extract the IPv4 address\n                if (!localIPInfo[ifaceName]) {\n                    localIPInfo[ifaceName] = {};\n                }\n                localIPInfo[ifaceName].IPv4 = addrInfo.address;\n            } else if (addrInfo.family === 'IPv6') {\n                //Extract the IPv6 address\n                if (!localIPInfo[ifaceName]) {\n                    localIPInfo[ifaceName] = {};\n                }\n                localIPInfo[ifaceName].IPv6 = addrInfo.address;\n            }\n        }\n    }\n    return localIPInfo;\n};\n</code></pre>\n\n<p>Here's a CoffeeScript version of the same function:</p>\n\n<pre class=\"lang-coffeescript prettyprint-override\"><code>getLocalIPs = () =&gt;\n    ###\n    Collects information about the local IPv4/IPv6 addresses of\n      every network interface on the local computer.\n    Returns an object with the network interface name as the first-level key and\n      \"IPv4\" or \"IPv6\" as the second-level key.\n    For example you can use getLocalIPs().eth0.IPv6 to get the IPv6 address\n      (as string) of eth0\n    ###\n    networkInterfaces = require('os').networkInterfaces();\n    localIPInfo = {}\n    for ifaceName, ifaceDetails of networkInterfaces\n        for addrInfo in ifaceDetails\n            if addrInfo.family=='IPv4'\n                if !localIPInfo[ifaceName]\n                    localIPInfo[ifaceName] = {}\n                localIPInfo[ifaceName].IPv4 = addrInfo.address\n            else if addrInfo.family=='IPv6'\n                if !localIPInfo[ifaceName]\n                    localIPInfo[ifaceName] = {}\n                localIPInfo[ifaceName].IPv6 = addrInfo.address\n    return localIPInfo\n</code></pre>\n\n<p>Example output for <code>console.log(getLocalIPs())</code></p>\n\n<pre><code>{ lo: { IPv4: '127.0.0.1', IPv6: '::1' },\n  wlan0: { IPv4: '192.168.178.21', IPv6: 'fe80::aa1a:2eee:feba:1c39' },\n  tap0: { IPv4: '10.1.1.7', IPv6: 'fe80::ddf1:a9a1:1242:bc9b' } }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a simple node.js program running on my machine and I want to get local IP address of PC on which is my program running. How do I get it with node.js?</p>\n",
            "last_activity_date": 1424120656,
            "question_id": 3653065,
            "score": 69,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "Get local IP address in node.js"
        },
        {
            "answer_count": 23,
            "answers": [
                {
                    "body": "<p>That's going to be very hard. The problem with the file input type is that it usually consists of two visual elements, while being treated as a single DOM-element. Add to that that several browsers have their own distinct look and feel for the file input, and you're set for nightmare. See this <a href=\"http://www.quirksmode.org/dom/inputfile.html\">article on quirksmode.org</a> about the quirks the file input has. I guarantee you it won't make you happy (I speak from experience).</p>\n\n<p>[EDIT]</p>\n\n<p>Actually, I think you might get away with putting your input in a container element (like a div), and adding a negative margin to the element. Effectively hiding the textbox part off screen.\nAnother option would be to use the technique in the article I linked, to try to style it like a button.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Ive a really hacky solution with this...</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt; \n    input[type=\"file\"]\n    { \n        width: 80px;        \n    } \n&lt;/style&gt;\n\n&lt;input id=\"File1\" type=\"file\" /&gt;\n</code></pre>\n\n<p>The problem is the width attribute that is hiding the text field will obvously vary between browsers, vary between Windows XP themes and so on. Maybe its something you can work with though?...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Resolved with the following code:</p>\n\n<p><code>&lt;div style=\"overflow: hidden;width:83px;\"&gt;\n   &lt;input style='float:right;' name=\"userfile\" id=\"userfile\" type=\"file\"/&gt;\n&lt;/div&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>my solution is just to set it within a div like \"druveen\" said, however i ad my own button style to the div (make it look like a button with a:hover) and i just set the style \"opacity:0;\" to the input. Works a charm for me, hope it does the same for you.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Fix to work in all browsers\nRESOLVED:</p>\n\n<pre><code>      &lt;input type = \"button\" value = \"Choose image\" \n       onclick =\"javascript:document.getElementById('imagefile').click();\"&gt;\n      &lt;input id = \"imagefile\" type=\"file\" style='visibility: hidden;' name=\"img\"/&gt;\n</code></pre>\n\n<p>I have tested in FF, Chrome &amp; IE - working fine, applied styles too :D</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I was having a heck of a time trying to accomplish this. I didn't want to use a Flash solution, and none of the jQuery libraries I looked at were reliable across all browsers.</p>\n\n<p>I came up with my own solution, which is implemented completely in CSS (except for the onclick style change to make the button appear 'clicked').</p>\n\n<p><strong>You can try a working example here:</strong> <a href=\"http://jsfiddle.net/VQJ9V/307/\">http://jsfiddle.net/VQJ9V/307/</a> (Tested in FF 7, IE 9, Safari 5, Opera 11 and Chrome 14)</p>\n\n<p>It works by creating a big file input (with font-size:50px), then wrapping it in a div that has a fixed size and overflow:hidden. The input is then only visible through this \"window\" div. The div can be given a background image or color, text can be added, and the input can be made transparent to reveal the div background:</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div class=\"inputWrapper\"&gt;\n    &lt;input class=\"fileInput\" type=\"file\" name=\"file1\"/&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>.inputWrapper {\n    height: 32px;\n    width: 64px;\n    overflow: hidden;\n    position: relative;\n    cursor: pointer;\n    /*Using a background color, but you can use a background image to represent a button*/\n    background-color: #DDF;\n}\n.fileInput {\n    cursor: pointer;\n    height: 100%;\n    position:absolute;\n    top: 0;\n    right: 0;\n    z-index: 99;\n    /*This makes the button huge. If you want a bigger button, increase the font size*/\n    font-size:50px;\n    /*Opacity settings for all browsers*/\n    opacity: 0;\n    -moz-opacity: 0;\n    filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0)\n}\n</code></pre>\n\n<p>Let me know if there are any problems with it and I'll try to fix them.</p>\n",
                    "is_accepted": false,
                    "score": 48
                },
                {
                    "body": "<p>Hide the input-file element and create a visible button that will trigger the click event of that input-file.</p>\n\n<p>Try this:</p>\n\n<p>CSS</p>\n\n<pre><code>#file { width:0; height:0; } \n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;input type='file' id='file' name='file' /&gt;\n&lt;button id='btn-upload'&gt;Upload&lt;/button&gt;\n</code></pre>\n\n<p>JAVASCRIPT(jQuery):</p>\n\n<pre><code>$(function(){\n    $('#btn-upload').click(function(e){\n        e.preventDefault();\n        $('#file').click();}\n    );\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I wasted my day today getting this to work. I found none of the solutions here working each of my scenarios. </p>\n\n<p>Then I remembered I saw an <a href=\"http://blueimp.github.com/jQuery-File-Upload/\" rel=\"nofollow\">example for the JQuery File Upload</a> without text box. So what I did is that I took their example and stripped it down to the relevant part.</p>\n\n<p>This solution at least works for IE and FF and can be fully styled. In the below example the file input is hidden under the fancy \"Add Files\" button.</p>\n\n<pre><code>&lt;html&gt;\n\n&lt;head&gt;\n    &lt;title&gt;jQuery File Upload Example&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n        .myfileupload-buttonbar input\n        {\n            position: absolute;\n            top: 0;\n            right: 0;\n            margin: 0;\n            border: solid transparent;\n            border-width: 0 0 100px 200px;\n            opacity: 0.0;\n            filter: alpha(opacity=0);\n            -o-transform: translate(250px, -50px) scale(1);\n            -moz-transform: translate(-300px, 0) scale(4);\n            direction: ltr;\n            cursor: pointer;\n        }\n        .myui-button\n        {\n            position: relative;\n            cursor: pointer;\n            text-align: center;\n            overflow: visible;\n            background-color: red;\n            overflow: hidden;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"fileupload\" &gt;\n        &lt;div class=\"myfileupload-buttonbar \"&gt;\n            &lt;label class=\"myui-button\"&gt;\n                &lt;span &gt;Add Files&lt;/span&gt;\n                &lt;input id=\"file\" type=\"file\" name=\"files[]\" /&gt;\n            &lt;/label&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<pre><code>&lt;a href=\"#\" id=\"select_logo\"&gt;Select Logo&lt;/a&gt; &lt;input type=\"file\" id=\"logo\"&gt; \n\n$(\"#logo\").css('opacity','0');\n\n$(\"#select_logo\").click(function(){\n   $().trigger('click');\n   return false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For me, the simplest way is using a font color like background color. Simple, not elegant, but usefull.</p>\n\n<pre><code>&lt;div style=\"color:#FFFFFF\"&gt;   &lt;!-- if background page is white, of course --&gt;\n&lt;input class=\"fileInput\" type=\"file\" name=\"file1\"/&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;input type=\"file\" id=\"selectedFile\" style=\"display: none;\" /&gt;\n&lt;input type=\"button\" value=\"Browse...\" onclick=\"document.getElementById('selectedFile').click();\" /&gt;\n</code></pre>\n\n<p>This will surely work i have used it in my projects.I hope this helps :)</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>So here's the best way to do this <strong>FOR ALL BROWSERS:</strong></p>\n\n<p>Forget CSS!</p>\n\n<pre><code>&lt;p&gt;Append Image:&lt;/p&gt; \n&lt;input type=\"button\" id=\"clickImage\" value=\"Add Image\" /&gt;\n&lt;input type=\"file\" name=\"images[]\" id=\"images\" multiple /&gt;\n\n&lt;script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n\n&lt;script&gt;\n$('#images').hide();        \n$('#clickImage').click( function() {    \n    $('#images').trigger('click');  \n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>All these answers are cute, but CSS won't work since it isn't the same across all browsers and devices, the first answer I wrote will work in everything but Safari. To get it to work accross all browsers all the time it must be created dynamically and recreated every time you want to clear the input text:</p>\n\n<pre><code>    var imageDiv = document.createElement(\"div\");   \n    imageDiv.setAttribute(\"id\", \"imagediv\");\n    imageDiv.style.cssText = 'position:relative; vertical-align: bottom;';  \n    var imageText = document.createTextNode(\"Append Image:\");\n    var newLine = document.createElement(\"br\"); \n    var image = document.createElement(\"input\");    \n    image.setAttribute(\"type\", \"file\");\n    image.setAttribute(\"id\", \"images\");\n    image.setAttribute(\"name\", \"images[]\");     \n    image.setAttribute(\"multiple\", \"multiple\");\n    imageDiv.appendChild(imageText); \n    imageDiv.appendChild(newLine); \n    imageDiv.appendChild(image); \n    questionParagraph.appendChild(imageDiv);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know this is an old post but a simple way to make the text dissapear is just to set text color to that of your background.</p>\n\n<p>eg if your text input background is white then:</p>\n\n<pre><code>input[type=\"file\"]{\ncolor:#fff;\n}\n</code></pre>\n\n<p>This will not effect the Choose File text which will still be black due to the browser.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The answer of tmanthey is quite good, except that you can't play with border-width in Firefox v20. If you see the <a href=\"http://blueimp.github.io/jQuery-File-Upload/\" rel=\"nofollow\">link</a> (demo, can't really show here) they solved the problem using font-size=23px, transform:translate(-300px, 0px) scale(4) for Firefox to get the button bigger.<br /><br />\nOther solutions using .click() on a different div is useless if you want to make it a drag'n'drop input box.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I used some of the code recommended above and after many hours of waisting my time, I eventually came to a css bag free solution.</p>\n\n<p>You can run it over here - <a href=\"http://jsfiddle.net/WqGph/\" rel=\"nofollow\">http://jsfiddle.net/WqGph/</a></p>\n\n<p>but then found a better solution - <a href=\"http://jsfiddle.net/XMMc4/5/\" rel=\"nofollow\">http://jsfiddle.net/XMMc4/5/</a></p>\n\n<pre><code> &lt;input type = \"button\" value = \"Choose image #2\" \n   onclick =\"javascript:document.getElementById('imagefile').click();\"&gt;\n       &lt;input id = \"imagefile\" type=\"file\" style='display:none;' name=\"img\" value=\"none\"/&gt;see jsfiddle code for examples&lt;br/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could label an image so when you click on it the click event of the button will be triggered. You can simply make the normal button invisible:</p>\n\n<pre><code>&lt;form&gt;\n    &lt;label for=\"fileButton\"&gt;&lt;img src=\"YourSource\"&gt;&lt;/label&gt;    &lt;!--You don't have to put an image here, it can be anything you like--&gt;\n    &lt;input type=\"file\" id=\"fileButton\" style=\"display:none;\"/&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>It worked for me on all browsers, and is very easy to use.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are several valid options here but thought I would give what I have come up with while trying to fix a similar issue.  <a href=\"http://jsfiddle.net/5RyrG/1/\" rel=\"nofollow\">http://jsfiddle.net/5RyrG/1/</a> </p>\n\n<pre><code>&lt;span class=\"btn fileinput-button\"&gt;\n    &lt;span&gt;Import Field(s)&lt;/span&gt;\n    &lt;input id=\"fileupload\" type=\"file\" name=\"files[]\" onchange=\"handleFiles(this.files)\" multiple&gt;\n&lt;/span&gt;\n&lt;div id=\"txt\"&gt;&lt;/div&gt;\n\nfunction handleFiles(files){\n    $('#txt').text(files[0].name);  \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Hide the input file tag with css, add a label and assign it to input button. label will be clickable and when clicked, it will fire up the file dialog.</p>\n\n<pre><code>&lt;input type=\"file\" name=\"imageUpload\" id=\"imageUpload\" class=\"hide\"/&gt; \n&lt;label for=\"imageUpload\" class=\"button-style\"&gt;Select file&lt;/label&gt;\n</code></pre>\n\n<p>Add the style to the label as a button.<br/>\n<strong><a href=\"http://jsfiddle.net/hEpEL/\" rel=\"nofollow\">Live Demo</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This works for me:</p>\n\n<pre><code>input[type=\"file\"]  {\n    color: white!important;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Unfortunately the work around provided many times here does not work in IE 10 (not sure about 9) as IE denies access when the .click method is called on a input type=file for security reasons.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just styled an input file with width: 85px, and the text field disappeared at all</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another easy way of doing this. Make a \"input type file\" tag in html and hide it. Then click a button and format it according to need. After this use javascript/jquery to programmatically click the input tag when the button is clicked.</p>\n\n<p>HTML :-</p>\n\n<pre><code>&lt;input id=\"file\" type=\"file\" style=\"display: none;\"&gt;\n&lt;button id=\"button\"&gt;Add file&lt;/button&gt;\n</code></pre>\n\n<p>JAVASCRIPT :-</p>\n\n<pre><code>$('#button').click(function(){\n    $('#file').click();\n});\n</code></pre>\n\n<p>CSS :-</p>\n\n<pre><code>#button\n{\n    background-color: blue;\n    color: white;\n}\n</code></pre>\n\n<p>Here is a working JS fiddle for the same :- <a href=\"http://jsfiddle.net/32na3/\" rel=\"nofollow\">http://jsfiddle.net/32na3/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to style (or script) <code>&lt;input type=file /&gt;</code> element to have visible only \"Browse\" button without text field?</p>\n\n<p>Thanks</p>\n\n<p><strong>Edit</strong>:\nJust to clarify why to I need this. I'm using multi file upload code from <a href=\"http://www.morningz.com/?p=5\">http://www.morningz.com/?p=5</a> and it doesn't need input text field because it never has value. Script just adds newly selected file to collection on page. It would look much better without text field, if it's possible.</p>\n",
            "last_activity_date": 1405630323,
            "question_id": 1084925,
            "score": 67,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "input type=file show only button"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You could parse the JSON to an object, then create your malformed JSON from the ajavscript object. This may not be the best performance-wise, tho.</p>\n\n<p>Otherwise, if you only need to make very small changes to the string, just treat it as a string, and mangle it using standard javascript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Edit:</strong> You should use the json2.js library from Douglas Crockford instead of implementing the code below. It provides some extra features and better/older browser support. </p>\n\n<p>Grab the json2.js file from: <a href=\"https://github.com/douglascrockford/JSON-js\">https://github.com/douglascrockford/JSON-js</a></p>\n\n<hr>\n\n<pre><code>// implement JSON.stringify serialization\nJSON.stringify = JSON.stringify || function (obj) {\n    var t = typeof (obj);\n    if (t != \"object\" || obj === null) {\n        // simple data type\n        if (t == \"string\") obj = '\"'+obj+'\"';\n        return String(obj);\n    }\n    else {\n        // recurse array or object\n        var n, v, json = [], arr = (obj &amp;&amp; obj.constructor == Array);\n        for (n in obj) {\n            v = obj[n]; t = typeof(v);\n            if (t == \"string\") v = '\"'+v+'\"';\n            else if (t == \"object\" &amp;&amp; v !== null) v = JSON.stringify(v);\n            json.push((arr ? \"\" : '\"' + n + '\":') + String(v));\n        }\n        return (arr ? \"[\" : \"{\") + String(json) + (arr ? \"]\" : \"}\");\n    }\n};\n\nvar tmp = {one: 1, two: \"2\"};\nJSON.stringify(tmp); // '{\"one\":1,\"two\":\"2\"}'\n</code></pre>\n\n<p>Code from: <a href=\"http://www.sitepoint.com/blogs/2009/08/19/javascript-json-serialization/\">http://www.sitepoint.com/blogs/2009/08/19/javascript-json-serialization/</a></p>\n",
                    "is_accepted": true,
                    "score": 78
                },
                {
                    "body": "<p>I use</p>\n\n<pre><code>$.param(jsonObj)\n</code></pre>\n\n<p>witch gets me the string</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>The best way I have found is to use <a href=\"http://code.google.com/p/jquery-json/\">jQuery JSON</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Most browsers have a native <code>JSON</code> object these days, which includes <code>parse</code> and <code>stringify</code> methods. So just try <code>JSON.stringify({})</code> and see if you get <code>\"{}\"</code>. You can even pass in parameters to filter out keys or to do pretty-printing, e.g. <code>JSON.stringify({a:1,b:2}, null, 2)</code> puts a newline and 2 spaces in front of each key.</p>\n\n<pre><code>JSON.stringify({a:1,b:2}, null, 2)\n</code></pre>\n\n<p>gives</p>\n\n<pre><code>\"{\\n  \\\"a\\\": 1,\\n  \\\"b\\\": 2\\n}\"\n</code></pre>\n\n<p>which prints as</p>\n\n<pre><code>{\n  \"a\": 1,\n  \"b\": 2\n}\n</code></pre>\n\n<p>As for the messing around part of your question, use the second parameter. From <a href=\"http://www.javascriptkit.com/jsref/json.shtml\">http://www.javascriptkit.com/jsref/json.shtml</a> :</p>\n\n<blockquote>\n  <p>The replacer parameter can either be a function or an array of\n  String/Numbers. It steps through each member within the JSON object to\n  let you decide what value each member should be changed to. As a\n  function it can return:</p>\n  \n  <ul>\n  <li>A number, string, or Boolean, which replaces the property's original    value with the returned one.</li>\n  <li>An object, which is serialized then    returned. Object methods or functions are not allowed, and are    removed instead. </li>\n  <li>Null, which causes the property to be removed.</li>\n  </ul>\n  \n  <p>As an array, the values defined inside it corresponds to the names of\n  the properties inside the JSON object that should be retained when\n  converted into a JSON object.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 25
                }
            ],
            "body": "<p>Instead of going from a json string and using $.parseJSON, I need to take my object and store it in a variable as string representing json.</p>\n\n<p>(A library I'm dealing with expects a malformed json type so I need to mess around with it to get it to work.)</p>\n\n<p>What's the best way to do this?</p>\n",
            "last_activity_date": 1417173220,
            "question_id": 3593046,
            "score": 60,
            "tags": [
                "javascript",
                "jquery",
                "json"
            ],
            "title": "jquery json to string?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>That's called onload. It came waaaaay before DOM ready was around, and DOM ready was actually created for the exact reason that onload waited on images.</p>\n\n<pre><code>window.onload = function () { alert(\"It's loaded!\") }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 78
                },
                {
                    "body": "<p>the window.onload event will fire when everything is loaded, including images etc.</p>\n\n<p>You would want to check the DOM ready status if you wanted your js code to execute as early as possible, but you still need to access DOM elements.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You may want to use <a href=\"https://developer.mozilla.org/en/DOM/window.onload\" rel=\"nofollow\">window.onload</a>, as the docs indicate that it's not fired until both the DOM is ready and ALL of the other assets in the page (images, etc.) are loaded.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>And here's a way to do it with <a href=\"http://www.prototypejs.org/\" rel=\"nofollow\">PrototypeJS</a>:</p>\n\n<pre><code>Event.observe(window, 'load', function(event) {\n    // Do stuff\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Usually you can use <code>window.onload</code>, but you may notice that recent browsers don't fire <code>window.onload</code> when you use the back/forward history buttons. </p>\n\n<p>Some people <a href=\"http://www.thomasfrank.se/when%5Fonload%5Ffails.html\">suggest</a> weird contortions to work around this problem, but really if you just make a <code>window.onunload</code> handler (even one that doesn't do anything), this caching behavior will be disabled in <em>all</em> browsers. The <a href=\"https://developer.mozilla.org/en/Using%5FFirefox%5F1.5%5Fcaching\">MDC</a> documents this \"feature\" pretty well, but for some reason there are still people using <code>setInterval</code> and other weird hacks.</p>\n\n<p>Some versions of Opera have a bug that can be worked around by adding the following somewhere in your page:</p>\n\n<pre><code>&lt;script&gt;history.navigationMode = 'compatible';&lt;/script&gt;\n</code></pre>\n\n<p>If you're just trying to get a javascript function called once per-view (and not necessarily after the DOM is finished loading), you can do something like this:</p>\n\n<pre><code>&lt;img src=\"javascript:location.href='javascript:yourFunction();';\"&gt;\n</code></pre>\n\n<p>For example, I use this trick to preload a very large file into the cache on a loading screen:</p>\n\n<pre><code>&lt;img src=\"bigfile\"\nonload=\"this.location.href='javascript:location.href=\\'javascript:doredir();\\';';doredir();\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Try this code</p>\n\n<pre><code>document.onreadystatechange = function () {\n  if (document.readyState == \"interactive\") {\n    initApplication();\n  }\n}\n</code></pre>\n\n<p>visit <a href=\"https://developer.mozilla.org/en-US/docs/DOM/document.readyState\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/DOM/document.readyState</a> for more details</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Javascript using the <code>onLoad()</code> event, will wait for the page to be loaded before executing.</p>\n\n<pre><code>&lt;body onload=\"somecode();\" &gt;\n</code></pre>\n\n<p>If you're using the jQuery framework's document ready function the code will load as soon as the DOM is loaded and before the page contents are loaded:</p>\n\n<pre><code>$(document).ready(function() {\n    // jQuery code goes here\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I need to execute some javascript when the page has fully loaded. This includes things like images.</p>\n\n<p>I know you can check if the DOM is ready, but I didn't know if this is the same as when the page is fully loaded.</p>\n",
            "last_activity_date": 1383211996,
            "question_id": 1033398,
            "score": 52,
            "tags": [
                "javascript"
            ],
            "title": "Execute Javascript When Page Has Fully Loaded"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>you can get it by</p>\n\n<pre><code>var element = document.getElementById(canvasId);\nelement.onmousemove = function(e) {\n    var xCoor = e.clientX;\n    var yCoor = e.clientY;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A good write up of the difficulty of this problem can be found here: <a href=\"http://www.quirksmode.org/js/events_properties.html#position\">http://www.quirksmode.org/js/events_properties.html#position</a></p>\n\n<p>Using the technique that is described there you can find the mouses position in the document. Then you just check to see if it is inside the bounding box of your element, which you can find by calling element.getBoundingClientRect() which will return an object with the following properties: { bottom, height, left, right, top, width }. From there it is trivial to figure out if the even happened inside your element or not.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>This calculates the mouse positiin relation to the canvas element:</p>\n\n<pre><code>var X = e.pageX - this.offsetLeft \nvar Y = e.pageY - this.offsetTop\n</code></pre>\n\n<p>This worked with Chrome, Safari, Firefox and Opera.  IE 9 gave a message that is doesn't support CANVAS. </p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p><strong>For people using JQuery:</strong></p>\n\n<p>Sometimes, when you have nested elements, one of them with the event attached to it, it can be confusing to understand what your browser sees as the parent. Here, you can specify which parent.</p>\n\n<p>You take the mouse position, and then subtract it from the parent element's offset position.</p>\n\n<pre><code>var x = evt.pageX - $('#element').offset().left\nvar y = evt.pageY - $('#element').offset().top\n</code></pre>\n\n<p>If you're trying to get the mouse position on a page inside a scrolling pane:</p>\n\n<pre><code>var x = (evt.pageX - $('#element').offset().left) + self.frame.scrollLeft();\nvar y = (evt.pageY - $('#element').offset().top) + self.frame.scrollTop();\n</code></pre>\n\n<p>Or the position relative to the page:</p>\n\n<pre><code>var x = (evt.pageX - $('#element').offset().left) + $(window).scrollLeft();\nvar y = (evt.pageY - $('#element').offset().top) + $(window).scrollTop();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>I +1' Mark van Wyk's answer as it got me in the right direction, but didn't quite solve it for me. I still had an offset on painting in elements contained within another element.</p>\n\n<p>FOllowing solved it for me:</p>\n\n<pre><code>        x = e.pageX - this.offsetLeft - $(elem).offset().left;\n        y = e.pageY - this.offsetTop - $(elem).offset().top;\n</code></pre>\n\n<p>In other words - i simply stacked all the offsets from all elements nested</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I want to make a little painting app using canvas. So I need to find the mouse's position on the canvas.</p>\n",
            "last_activity_date": 1389109741,
            "question_id": 3234256,
            "score": 37,
            "tags": [
                "javascript"
            ],
            "title": "Find mouse position relative to element"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Since the different options do pretty much the same thing as you point out, it's time to put on the library writer hat and make some guesses.</p>\n\n<ol>\n<li><p>Perhaps the jQuery people would like to have <code>$()</code> available for future use (doubtful since <code>$().ready</code> is documented to work, even if not recommended; it would also pollute the semantics of <code>$</code> if special-cased).</p></li>\n<li><p>A much more practical reason: the second version is the only one that does <em>not</em> end up wrapping <code>document</code>, so it's easier to break when maintaining the code. Example:</p>\n\n<pre><code>// BEFORE\n$(document).ready(foo);\n\n// AFTER: works\n$(document).ready(foo).on(\"click\", \"a\", function() {});\n</code></pre>\n\n<p>Contrast this with</p>\n\n<pre><code>// BEFORE\n$().ready(foo);\n\n// AFTER: breaks\n$().ready(foo).on(\"click\", \"a\", function() {});\n</code></pre></li>\n<li><p>Related to the above: <code>ready</code> is a freak in the sense that it's (the only?) method that will work the same no matter what the jQuery object wraps (even if it does not wrap anything as is the case here). This is a major difference from the semantics of other jQuery methods, so specifically relying on this is rightly discouraged.</p>\n\n<p><strong>Update:</strong> As Esailija's comment points out, from an engineering perspective <code>ready</code> should really be a static method exactly because it works like this.</p></li>\n</ol>\n\n<p><strong>Update #2:</strong> Digging at the source, it seems that at some point in the 1.4 branch <code>$()</code> was changed to match <code>$([])</code>, while in 1.3 it behaved like <code>$(document)</code>. This change would reinforce the above justifications.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I would say its simply the fact that <code>$()</code> returns an <em>empty</em> object whereas <code>$(document)</code> does not so your applying <code>ready()</code> to different things; it still works, but I would say its not intuitive. </p>\n\n<pre><code>$(document).ready(function(){}).prop(\"title\") // the title\n$().ready(function(){}).prop(\"title\")  //null - no backing document\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I think this is really more for readability than anything else.</p>\n\n<p>This one isn't as expressive </p>\n\n<pre><code>$().ready(handler);\n</code></pre>\n\n<p>as</p>\n\n<pre><code>$(document).ready(handler)\n</code></pre>\n\n<p>Perhaps they are trying to promote some form of idiomatic jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just to make it patently obvious that there is some inconsistency in the three, plus I added the fourth often used form: <code>(function($) {}(jQuery));</code></p>\n\n<p>With this markup:</p>\n\n<pre><code>&lt;div &gt;one&lt;/div&gt;\n&lt;div&gt;two&lt;/div&gt;\n&lt;div id='t'/&gt;\n</code></pre>\n\n<p>and this code:</p>\n\n<pre><code>var howmanyEmpty = $().ready().find('*').length;\nvar howmanyHandler = $(function() {}).find('*').length;\nvar howmanyDoc = $(document).ready().find('*').length;\nvar howmanyPassed = (function($) { return $('*').length; }(jQuery));\nvar howmanyYuck = (function($) {}(jQuery));\nvar howmanyYuckType = (typeof howmanyYuck);\n\n$(document).ready(function() {\n    $('#t').text(howmanyEmpty + \":\" + howmanyHandler + \":\" \n        + howmanyDoc + \":\" + howmanyPassed + \":\" + howmanyYuckType);\n});\n</code></pre>\n\n<p>The displayed results of the div from the last statement are: 0:9:9:9:undefined</p>\n\n<p>SO, only the Handler and Doc versions are consistent with the jQuery convention of returning something of use as they get the document selector and with the Passed form you must return something (I wouldn't do this I would think, but put it in just to show \"inside\" it has something).</p>\n\n<p>Here is a fiddle version of this for the curious: <a href=\"http://jsfiddle.net/az85G/\" rel=\"nofollow\">http://jsfiddle.net/az85G/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>More than likely this is just a documentation bug and should be fixed, the only downside to using <code>$().ready(handler)</code> is it's readability. Sure, argue that <code>$(handler)</code> is just as unreadable. I agree, <em>that's why I don't use it</em>.</p>\n\n<p>You can also argue that one method is faster than another. However, how often do you call this method enough times in a row on a single page to notice a difference?</p>\n\n<p>Ultimately it comes down to personal preference. There is no downside to using <code>$().ready(handler)</code> other than the readability argument. I think the documentation is miss-leading in this case.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong>I got an official answer from one of the jQuery developers:</strong></p>\n\n<p><code>$().ready(fn)</code> only works because <code>$()</code> used to be  a shortcut to <code>$(document)</code>  <sub> (jQuery &lt;1.4)</sub><br>\nSo <code>$().ready(fn)</code> was a readable code.</p>\n\n<p>But people used to do things like <code>$().mouseover()</code> and all sorts of other madness.<br>\nand people had to do <code>$([])</code> to get an empty jQuery object</p>\n\n<p>So in 1.4 we changed it so <code>$()</code> gives an empty jQuery and we just made <code>$().ready(fn)</code> work so as not to break a lot of code</p>\n\n<p><code>$().ready(fn)</code> is literally now just patched in core to make it work properly for the legacy case.</p>\n\n<p>The best place for the <code>ready</code> function is <code>$.ready(fn)</code>, but it's a really old design decision and that is what we have now.</p>\n\n<hr>\n\n<p>I asked him:</p>\n\n<blockquote>\n  <p>Do you think that $(fn) is more readable than $().ready(fn) ?!</p>\n</blockquote>\n\n<p>His answer was:</p>\n\n<blockquote>\n  <p>I always do $(document).ready(fn) in actual apps  and  typically there's only one doc ready block in the app it's not exactly like a maintenance thing.  </p>\n  \n  <p><strong>I think $(fn) is pretty unreadable too</strong>, it's just <em>A Thing That You Have To Know Works\u2122</em>...</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 81
                }
            ],
            "body": "<p>From the <a href=\"http://api.jquery.com/ready/\">jQuery API docs site</a> for <code>ready</code> </p>\n\n<blockquote>\n  <p>All three of the following syntaxes are equivalent:</p>\n  \n  <ul>\n  <li>$(document).ready(handler)</li>\n  <li><strong>$().ready(handler) (this is not recommended)</strong></li>\n  <li>$(handler)</li>\n  </ul>\n</blockquote>\n\n<p>After doing homework - reading and playing with the <a href=\"http://code.jquery.com/jquery-1.7.2.js\">source code</a>, I have no idea why </p>\n\n<pre><code>$().ready(handler) \n</code></pre>\n\n<p>is not recommended.  The first and third ways, are exactly the same, the third option calls the ready function on a cached jQuery object with <code>document</code>:</p>\n\n<pre><code>rootjQuery = jQuery(document);\n...\n...\n\n// HANDLE: $(function)\n// Shortcut for document ready\n} else if ( jQuery.isFunction( selector ) ) {\n    return rootjQuery.ready( selector );\n}\n</code></pre>\n\n<p>But the ready function has no interaction with the selector of the selected node elements, The <code>ready</code> source code:</p>\n\n<pre><code>ready: function( fn ) {\n    // Attach the listeners\n    jQuery.bindReady();\n        // Add the callback\n    readyList.add( fn );\n        return this;\n},\n</code></pre>\n\n<p>As you can see, it justs add the callback to an internal queue( <code>readyList</code>) and doesn't change or use the elements in the set. This lets you call the <code>ready</code> function on every jQuery object.</p>\n\n<p>Like:</p>\n\n<ul>\n<li><strong>regular</strong> selector: <code>$('a').ready(handler)</code> <a href=\"http://jsfiddle.net/w5k5t/1/\">DEMO</a></li>\n<li><strong>Nonsense</strong> selector: <code>$('fdhjhjkdafdsjkjriohfjdnfj').ready(handler)</code> <a href=\"http://jsfiddle.net/w5k5t/2/\">DEMO</a></li>\n<li><strong>Undefined</strong> selector:<code>$().ready(handler)</code> <a href=\"http://jsfiddle.net/w5k5t/3/\">DEMO</a></li>\n</ul>\n\n<p>Finally... to my question: <strong>Why <code>$().ready(handler)</code> is not recommended?</strong></p>\n",
            "last_activity_date": 1376593568,
            "question_id": 10753306,
            "score": 82,
            "tags": [
                "javascript",
                "jquery",
                "callback",
                "document-ready"
            ],
            "title": "Why &quot;$().ready(handler)&quot; is not recommended?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>There's a headers parameter in the config object you pass to <code>$http</code> for per-call headers:</p>\n\n<pre><code>$http({method: 'GET', url: 'www.google.com/someapi', headers: {\n    'Authorization': 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='}\n});\n</code></pre>\n\n<p>Or with the shortcut method:</p>\n\n<pre><code>$http.get('www.google.com/someapi', {\n    headers: {'Authorization': 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='}\n});\n</code></pre>\n\n<p>The list of the valid parameters is available in the <a href=\"http://docs.angularjs.org/api/ng.$http#Usage\">$http</a> service documentation.</p>\n",
                    "is_accepted": true,
                    "score": 102
                },
                {
                    "body": "<p>Try this, perhaps it works ;)</p>\n\n<pre><code>.factory('authInterceptor', function($location, $q, $window) {\n\n\nreturn {\n    request: function(config) {\n      config.headers = config.headers || {};\n\n      config.headers.Authorization = 'xxxx-xxxx';\n\n      return config;\n    }\n  };\n})\n\n.config(function($httpProvider) {\n  $httpProvider.interceptors.push('authInterceptor');\n})\n</code></pre>\n\n<p>And make sure your back end works too,\ntry this.. i'm using restful codeigniter</p>\n\n<pre><code>class App extends REST_Controller {\n    var $authorization = null;\n\n    public function __construct()\n    {\n        parent::__construct();\n        header('Access-Control-Allow-Origin: *');\n        header(\"Access-Control-Allow-Headers: X-API-KEY, Origin, X-Requested-With, Content-Type, Accept, Access-Control-Request-Method, Authorization\");\n        header(\"Access-Control-Allow-Methods: GET, POST, OPTIONS, PUT, DELETE\");\n        if ( \"OPTIONS\" === $_SERVER['REQUEST_METHOD'] ) {\n            die();\n        }\n\n        if(!$this-&gt;input-&gt;get_request_header('Authorization')){\n            $this-&gt;response(null, 400);    \n        }\n\n        $this-&gt;authorization = $this-&gt;input-&gt;get_request_header('Authorization');\n    }\n\n}\n</code></pre>\n\n<p>Sincerely,\nDonny</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have one particular request in my app that requires Basic authentication, so I need to set the Authorization header for that request. I read about <a href=\"http://docs.angularjs.org/api/ng.%24http\">setting HTTP request headers</a>, but from what I can tell, it will set that header for all requests of that method. I have something like this in my code:</p>\n\n<pre><code>$http.defaults.headers.post.Authorization = \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\";\n</code></pre>\n\n<p>But I don't want every one of my post requests sending this header. Is there any way to send the header just for the one request I want? Or do I have to remove it after my request?</p>\n",
            "last_activity_date": 1417064372,
            "question_id": 11876777,
            "score": 50,
            "tags": [
                "javascript",
                "http-headers",
                "angularjs"
            ],
            "title": "Set HTTP header for one request"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The previous answer is fine, but I'm one of those guys that's firmly against mixing behavior with presentation (putting JavaScript in my HTML) so I prefer to put my event handling logic in my JavaScript files. Additionally, not all browsers implement event (or e) the same way. You may want to do a check prior to running any logic:</p>\r\n\r\n<pre><code>document.onkeydown = TabExample;<br><br>function TabExample(evt) {<br><br>    var evt = (evt) ? evt : ((event) ? event : null);<br>    if(evt.keycode == 9) {<br><br>        // do work<br><br>    }<br><br>}<br></code></pre>",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I'd rather tab indentation not work than breaking tabbing between form items.</p>\n\n<p>If you want to indent to put in code in the Markdown box, use <kbd>Ctrl</kbd>+<kbd>K</kbd> (or \u2318K on a Mac).</p>\n\n<p>In terms of actually stopping the action, jQuery (which Stack Overflow uses) will stop an event from bubbling when you return false from an event callback. This makes life easier for working with multiple browsers.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I would advise against changing the default behaviour of a key.  I do as much as possible without touching a mouse, so if you make my tab key not move to the next field on a form I will be very aggravated.</p>\r\n\r\n<p>A shortcut key could be useful however, especially with large code blocks and nesting.  Shift-TAB is a bad option because that normally takes me to the previous field on a form.  Maybe a new button on the WMD editor to insert a code-TAB, with a shortcut key, would be possible?</p>",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Even if you capture the keydown/keyup event, those are the only events that the tab key fires, you still need some way to prevent the default action, moving to the next item in the tab order, from occurring.</p>\n\n<p>In Firefox you can call the \"preventDefault()\" method on the event object passed to your event handler. In IE, you have to return false from the event handle. The JQuery library provides a preventDefault method on it's event object that works in IE and FF.</p>\n\n<pre><code>&lt;body&gt;\n&lt;input type=\"text\" id=\"myInput\"&gt;\n&lt;script type=\"text/javascript\"&gt;\n    var myInput = document.getElementById(\"myInput\");\n    if(myInput.addEventListener ) {\n        myInput.addEventListener('keydown',this.keyHandler,false);\n    } else if(myInput.attachEvent ) {\n        myInput.attachEvent('onkeydown',this.keyHandler); /* damn IE hack */\n    }\n\n    function keyHandler(e) {\n        var TABKEY = 9;\n        if(e.keyCode == TABKEY) {\n            this.value += \"    \";\n            if(e.preventDefault) {\n                e.preventDefault();\n            }\n            return false;\n        }\n    }\n&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>In Chrome on the Mac, alt-tab inserts a tab character into a <code>&lt;textarea&gt;</code> field.</p>\n\n<p>Here\u2019s one: . Wee!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>there is a problem in best answer given by ScottKoon</p>\n\n<p>here is it</p>\n\n<pre><code>} else if(el.attachEvent ) {\n    myInput.attachEvent('onkeydown',this.keyHandler); /* damn IE hack */\n}\n</code></pre>\n\n<p>Should be </p>\n\n<pre><code>} else if(myInput.attachEvent ) {\n    myInput.attachEvent('onkeydown',this.keyHandler); /* damn IE hack */\n}\n</code></pre>\n\n<p>Due to this it didn't work in IE.\nHoping that ScottKoon will update code</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Here on Stack Overflow, I would like to be able to use the <kbd>Tab</kbd> key within the WMD editor text box to tab over four spaces. The way it is now, the Tab key jumps my cursor down to the Tags.</p>\n\n<p>Vote for this feature at UserVoice: <a href=\"http://stackoverflow.uservoice.com/pages/general/suggestions/15889\">http://stackoverflow.uservoice.com/pages/general/suggestions/15889</a></p>\n\n<p>Is there some JavaScript that will capture the Tab key in the text box before it bubbles up to the UI?</p>\n\n<p>I understand some browsers (i.e. FireFox) may not allow this. How about a custom key-combo like <kbd>Shift</kbd>+<kbd>Tab</kbd>, or <kbd>Ctrl</kbd>+<kbd>Q</kbd>?</p>\n",
            "last_activity_date": 1360130564,
            "question_id": 3362,
            "score": 42,
            "tags": [
                "javascript",
                "user-interface"
            ],
            "title": "Capturing TAB key in text box"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>JSON is a string representation of an object. It is an interoperable serialization format. It is not tied only to javascript. For example there are JSON serializers for .NET allowing you to serialize/deserialize .NET objects. </p>\n\n<p>So it's just a format allowing you to convert from objects to string and back which is convenient if you want to transfer them over the wire.</p>\n\n<p>It is very close to javascript object representation and if you simply <code>eval()</code> a JSON string you will get the corresponding object.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>First you should know what JSON is:</p>\n\n<ul>\n<li>It is <em>language agnostic</em> data-interchange format.</li>\n</ul>\n\n<p>The syntax of JSON was inspired by the JavaScript Object Literal notation, but there are differences between them.</p>\n\n<p>For example, in JSON all <em>keys</em> must be quoted, while in object literals this is not necessary:</p>\n\n<pre><code>// JSON:\n{ \"foo\": \"bar\" }\n\n// Object literal:\nvar o = { foo: \"bar\" };\n</code></pre>\n\n<p>The quotes are mandatory on JSON because in JavaScript (more exactly in ECMAScript 3rd. Edition), the usage of <em>reserved words</em> as property names is disallowed, for example:</p>\n\n<pre><code>var o = { if: \"foo\" }; // SyntaxError in ES3\n</code></pre>\n\n<p>While, using a string literal as a property name (quoting the property name) gives no problems:</p>\n\n<pre><code>var o = { \"if\": \"foo\" }; \n</code></pre>\n\n<p>So for <em>\"compatibility\"</em> (and easy eval'ing maybe?) the quotes are mandatory.</p>\n\n<p>The data types in JSON are also restricted to the following values:</p>\n\n<ul>\n<li><code>string</code></li>\n<li><code>number</code></li>\n<li><code>object</code></li>\n<li><code>array</code></li>\n<li>A literal as:\n<ul>\n<li><code>true</code></li>\n<li><code>false</code></li>\n<li><code>null</code></li>\n</ul></li>\n</ul>\n\n<p>The grammar of <code>Strings</code> changes, the <em>have</em> be delimited by <em>double quotes</em>, while in JavaScript, you can use single or double quotes interchangeably.</p>\n\n<pre><code>// Invalid JSON:\n{ \"foo\": 'bar' }\n</code></pre>\n\n<p>The accepted JSON grammar of <code>Numbers</code> also changes, in JavaScript you can use Hexadecimal Literals, for example <code>0xFF</code>, or (the infamous) Octal Literals e.g. <code>010</code>. In JSON you can use only Decimal Literals.</p>\n\n<pre><code>// Invalid JSON:\n{ \"foo\": 0xFF }\n</code></pre>\n\n<p><sub>There are some buggy implementations (Firefox 3.5+, IE8+, json2.js) where octal literals are wrongly allowed, e.g. <code>JSON.parse('01')</code> should produce a <code>SyntaxError</code>.</sub></p>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>JSON is a data interchange format, which just happens to look like a subset of YAML or JavaScript code you can execute and get an object back. A JavaScript object is just an object in JavaScript.</p>\n\n<p>With JSON being a data interchange format you can exchange structured data in a textual form with it. It is pretty decoupled from JavaScript by now. JavaScript object allow you to create and work with structured data during the execution of a JavaScript program.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am new to JSON and JavaScript object.</p>\n\n<ul>\n<li>Can anyone please explain the differences between JSON and JavaScript object?  </li>\n<li>What are their uses?  </li>\n<li>Is one better than the other? or it depends on the situation?  </li>\n<li>When to use which one, in what situation?  </li>\n<li>Why JSON was created in the first  place? What was the main purpose?  </li>\n<li>Can someone give examples of when one should use JSON rather JavaScript object and vice versa?</li>\n</ul>\n",
            "last_activity_date": 1323454305,
            "question_id": 3975859,
            "score": 32,
            "tags": [
                "javascript",
                "json",
                "javascript-objects"
            ],
            "title": "What are the differences between JSON and JavaScript object?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Unfortunately there is no nice way of doing this, as you figured out you will need a copy of the main div:</p>\n\n<pre><code>&lt;div class=\"wrapper\"&gt;\n   &lt;div class=\"overlay\"&gt;&lt;/div&gt;\n   &lt;div id=\"main-copy\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Overlay will push the wrapper width around while, main-copy will be in the background with blur. Obviously there will be performance issues if the content in main-copy is complex.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://thiv.net/frost\" rel=\"nofollow\">http://thiv.net/frost</a> </p>\n\n<p>Live sample of what I did   ( and updated to look just like the image above )</p>\n\n<p>Code:</p>\n\n<pre><code>&lt;style&gt;\n  #partial-overlay {\n    width: 100%;\n    height: 45px;\n    background: #ffffff; /* TODO frost */\n    -webkit-opacity:0.70;\n    -webkit-filter: blur(5px);\n    position: absolute;\n    top: 20px;\n    left: 0px;\n    z-index:5;\n  }\n  #main-view\n  {\n   position: fixed;\n   top: 20px;\n   left: 80px;\n   z-index:-1;\n  }\n&lt;/style&gt;\n&lt;div id=\"main-view\"&gt;\n  &lt;div style=\"width: 50px; height: 50px; background: #f00; position:fixed; left:10px; top: 40px; -webkit-filter: blur(2px); \"&gt;&lt;/div&gt;\n    &lt;div style=\"width: 80px; height: 60px; background: #fff; position:fixed; left:0px; top: 66px; -webkit-filter: blur(5px);\"&gt;&lt;/div&gt;\n    &lt;div style=\"width: 50px; height: 30px; background: #f00; position:fixed; left:10px; top: 60px;\"&gt;&lt;/div&gt;\n  &lt;p style=\"font-family:Sans, Arial, Verdana;\"&gt;\n  To my left is a red box&lt;br&gt;\n  Now there is just text&lt;br&gt;\n  Text that goes on for a few pixels &lt;br&gt;\n  or even more\n  &lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"partial-overlay\"&gt;\n\n&lt;/div&gt;\n</code></pre>\n\n<p>I made it look a bit prettier than it needs to be, but It works!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<blockquote>\n  <p>Is there a better way to achieve this with minimal performance hit and\n  maximal generalizability?</p>\n</blockquote>\n\n<p>The answer to this is <strong>no</strong>.</p>\n\n<p>The reason is that in order to do what you want you would need direct access to the bitmap used for the browser window to extract or manipulate the pixels in the area you want to blur (I wish, \"aero\" in a browser could look pretty neat..) or a filter that works on the elements behind the one you apply it to (or can have a limiting region set to it).</p>\n\n<p>As there is no native support to do this (besides canvas and extension API, or a library that generate canvas image from the html -> relatively slow) this will need to be done with trickery (images, splitting divs etc.) in either case.</p>\n\n<p>If you made everything in your page on a canvas you could do a lot of interesting things, but you would also need to perform layout, update, filtering etc. yourselves and therefor you would be back no non-optimized as Javascript is slower than native (not to mention it would be error prone).</p>\n\n<p>Until browsers allow you to grab a section of the window as a canvas (never? as that would require everything on that page to be same-origin or have content with special accept headers set) there is no way around but to do tricks.</p>\n\n<p><strong>Update</strong></p>\n\n<p>As an demonstration that you can do it by using html2canvas etc, but having to use compromises (-> slow performance) - the demo is rough, experimental and needs tweaks to work well - but for the sake of demo only:<br>\n<a href=\"http://jsfiddle.net/AbdiasSoftware/RCaLR/\">http://jsfiddle.net/AbdiasSoftware/RCaLR/</a></p>\n\n<p>Result:</p>\n\n<p><img src=\"http://i.stack.imgur.com/i0SUs.png\" alt=\"enter image description here\"></p>\n\n<p>Generalized function to grab part of background:</p>\n\n<pre><code>getBlurredBG(x, y, width, height, id);\n</code></pre>\n\n<p>Get part of window using html2canvas:</p>\n\n<pre><code>function getBlurredBG(x, y, w, h, id) {\n\n    html2canvas(document.body, {\n        onrendered: function (canvas) {\n            process(canvas, x, y, w, h, id);\n        },\n        width: (x + w),\n        height: (y + h)\n    });\n}\n</code></pre>\n\n<p>Process the content:</p>\n\n<pre><code>function process(canvas, x, y, w, h, id) {\n\n    //create new canvas to enable clipping\n    //As html2canvas returns a canvas from 0,0 to width and height\n    //we need to clip it.\n    var ocanvas = document.createElement('canvas');\n    ocanvas.width = w;\n    ocanvas.height = h;\n    ocanvas.style.left = x + 'px';\n    ocanvas.style.top = y + 'px';\n    ocanvas.style.position = 'absolute';\n    ocanvas.id = id;\n\n    var ctx = ocanvas.getContext('2d');\n    ctx.drawImage(canvas, x, y, w, h,\n                          0, 0, w, h);\n\n    stackBlurCanvasRGB(ocanvas, x, y, w, h, 28)\n    lighten(ocanvas);\n\n    ctx.fillStyle = 'rgba(255,255,255,0.5)';\n    ctx.fillRect(x, y, w, h);\n\n    ctx.fillStyle = '#999';\n    ctx.font = '32px arial';\n    ctx.fillText(\"Partial overlay content\", 10, 60);\n\n    document.body.appendChild(ocanvas);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Thanks for the inspiration... It led me to this <a href=\"http://html2canvas.hertzen.com/examples.html\">canvas plugin</a> which does the trick</p>\n\n<p><strong>New and Improved: <a href=\"http://jsfiddle.net/apaul34208/TfWs3/79/\">-webkit- and Firefox Working Example</a></strong>, now re-sizable/fluid.</p>\n\n<p>JS</p>\n\n<pre><code>$(document).ready(function () {\n    frost = function () {\n        var w = $('#main-view').width();\n        html2canvas(document.body, {\n            onrendered: function (canvas) {\n                document.body.appendChild(canvas);\n                $('canvas').wrap('&lt;div id=\"contain\" /&gt;');\n            },\n            width: w,\n            height: 30\n        });\n        $('canvas, #partial-overlay, #cover').hide();\n        $('#cover').fadeIn('slow', function () {\n            $('#partial-overlay').fadeIn('slow');\n        });\n    };\n\n    $('body').append('&lt;div id=\"cover\"&gt;&lt;/div&gt;&lt;svg id=\"svg-image-blur\"&gt;&lt;filter id=\"blur-effect-1\"&gt;&lt;feGaussianBlur stdDeviation=\"2\"/&gt;&lt;/filter&gt;&lt;/svg&gt;');\n\n    $('#main-view').click(function () {\n        frost();\n        $('#partial-overlay').addClass('vis');\n        $(window).resize(function () {\n            $('canvas, #partial-overlay, #cover').hide();\n        });\n\n        function onResize() {\n            if ($('#partial-overlay').hasClass('vis')) {\n                frost();\n            }\n        }\n        var timer;\n        $(window).bind('resize', function () {\n            timer &amp;&amp; clearTimeout(timer);\n            timer = setTimeout(onResize, 50);\n        });\n\n    });\n\n    $('#partial-overlay').click(function () {\n        $('#partial-overlay').removeClass('vis');\n        $('canvas, #partial-overlay, #cover').hide();\n    });\n});\n</code></pre>\n\n<p>CSS</p>\n\n<pre><code>#main-view {\n    width:75%;\n    height:50%;\n    box-sizing: border-box;\n    margin:8px;\n}\n#partial-overlay {\n    display:none;\n    width: 100%;\n    height: 20px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index:99;\n    background: rgba(255, 255, 255, 0.2);\n    cursor:pointer;\n}\ncanvas {\n    position: absolute;\n    top: 0;\n    left: 0;\n    -webkit-filter:blur(5px);\n    filter: url(#blur-effect-1);\n}\n#cover {\n    display:none;\n    height:19px;\n    width:100%;\n    background:#fff;\n    top:0;\n    left:0;\n    position:absolute;\n}\n#contain {\n    height:20px;\n    width:100%;\n    overflow:hidden;\n    position:absolute;\n    top:0;\n    left:0;\n}\nsvg {\n    height:0;\n    width:0;\n}\n</code></pre>\n\n<p>HTML</p>\n\n<pre><code>&lt;div id=\"main-view\"&gt;\n    &lt;div style=\"width: 10%; height: 20%; background: #f00; float: left\"&gt;&lt;/div&gt;To my left is a red box\n    &lt;br&gt;Now there is just text\n    &lt;br&gt;Text that goes on for a few pixels\n    &lt;br&gt;or even more&lt;/div&gt;\n&lt;div id=\"partial-overlay\"&gt;Here is some content&lt;/div&gt;\n</code></pre>\n\n<p>I put it in a click function, because I figured it would be the most likely use case. It will work just as well on document ready.</p>\n\n<p>Although the canvas representation wont be pixel perfect, I don't think it will really matter in most cases because its being blurred. </p>\n\n<p><strong>Update:</strong> As requested this is now re-sizable. I also moved the cover div into the JS and added an svg fall back for Firefox. The resizing requires the canvas to be redrawn on each re-size, so I set it up to hide the canvas, overlay, etc while you're resizing and then replace it when the re-size stops. </p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>It has still very limited suport (only Firefox) but one way to get it could be this:</p>\n\n<h2><a href=\"http://jsfiddle.net/vals/nD2dq/\" rel=\"nofollow\">Firefox only demo</a></h2>\n\n<p>The CSS is quite simple:</p>\n\n<pre><code>#partial-overlay {\n    width:400px; \n    height:100px; \n    background: -moz-element(#main-view);\n    top: 0px;\n    left: 200px;\n    position: absolute;\n    opacity: 0.3;\n}\n</code></pre>\n\n<p>and the key is to use as background for partial overlay the main-view element.</p>\n\n<p>This demo uses only opacity because filters are not availables for Firefox.</p>\n\n<p>The element property for the background has been approved by w3c, so it could show sometime in the future in webkit</p>\n\n<p>In the demo partial-overlay has been shift to the right to make more clear what is what</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is a library that will create the desired effect you're looking for.</p>\n\n<p><a href=\"http://www.blurjs.com/\" rel=\"nofollow\">http://www.blurjs.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Basically you could have a overlay placeholder where you duplicate the main content and sync the scrolling of both divs, than apply css blur filter on the overlay only.</p>\n\n<p>A simple javascript will do:</p>\n\n<pre><code>$(document).ready(function(){\n  $('.overlay').append( $('.content').html() );\n  $('.content').on('scroll', function(){\n    $('.overlay').scrollTop($(this).scrollTop());\n  });\n});\n</code></pre>\n\n<p>And for the CSS:</p>\n\n<pre><code>.overlay {\n    overflow:hidden;\n    -webkit-filter: blur(.25em);\n    background:#fff;\n}\n</code></pre>\n\n<p>I put together a working example for you (webkit only):</p>\n\n<p><a href=\"http://jsfiddle.net/kmxD3/1/\">http://jsfiddle.net/kmxD3/1/</a></p>\n\n<p>Have fun! :)</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I'm trying to create an iOS 7 style frosted look with HTML5, CSS3 and JavaScript which can work on webkit browsers.</p>\n\n<p>Technically, given the following HTML:</p>\n\n<pre><code>&lt;style&gt;\n  #partial-overlay {\n    width: 100%;\n    height: 20px;\n    background: rgba(255, 255, 255, .2); /* TODO frost */\n    position: fixed;\n    top: 0;\n    left: 0;\n  }\n&lt;/style&gt;\n&lt;div id=\"main-view\"&gt;\n  &lt;div style=\"width: 50px; height: 50px; background: #f00\"&gt;&lt;/div&gt;\n  To my left is a red box&lt;br&gt;\n  Now there is just text&lt;br&gt;\n  Text that goes on for a few pixels &lt;br&gt;\n  or even more\n&lt;/div&gt;\n&lt;div id=\"partial-overlay\"&gt;\n  Here is some content\n&lt;/div&gt;\n</code></pre>\n\n<p>I'd like to apply something like a <code>-webkit-filter: blur(5px)</code> to the first 20px horizontally of <code>#main-view</code>.</p>\n\n<p>If the CSS was modified to be <code>#partial-overlay { width: 20px; height: 100%; ...}</code> then I'd need to apply the <code>-webkit-filter: blur(5px)</code> to the first 20px vertically.</p>\n\n<p>The obvious solution is to use javascript to make a clone of the <code>#main-view</code>, set <code>overflow: hidden</code> and then change the width/height as appropriate but that seems to me hard to generalize to more complex pages/CSS structures.</p>\n\n<p>Is there a better way to achieve this with minimal performance hit and maximal generalizability?</p>\n\n<p><strong>EDIT</strong>: Here is an example of what I'm trying to achieve:\n<img src=\"http://i.stack.imgur.com/cyKkw.png\" alt=\"Mockup\"></p>\n",
            "last_activity_date": 1379976288,
            "question_id": 17092299,
            "score": 30,
            "tags": [
                "javascript",
                "css",
                "html5",
                "css3",
                "webkit"
            ],
            "title": "How to use CSS (and JavaScript?) to create a blurred, &quot;frosted&quot; background?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Something like this:</p>\n\n<pre><code>\n$.ajax({\n    url : 'someurl',\n    type : 'POST',\n    data :  ....,   \n    tryCount : 0,\n    retryLimit : 3,\n    success : function(json) {\n        //do something\n    },\n    error : function(xhr, textStatus, errorThrown ) {\n        if (textStatus == 'timeout') {\n            this.tryCount++;\n            if (this.tryCount &lt;= this.retryLimit) {\n                //try again\n                $.ajax(this);\n                return;\n            }            \n            return;\n        }\n        if (xhr.status == 500) {\n            //handle error\n        } else {\n            //handle error\n        }\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<p>I've had a lot of success with this code below (example: <a href=\"http://jsfiddle.net/uZSFK/\" rel=\"nofollow\">http://jsfiddle.net/uZSFK/</a>)\n</p>\n\n<pre><code>$.ajaxSetup({\n    timeout: 3000, \n    retryAfter:7000\n});\n\nfunction func( param ){\n    $.ajax( 'http://www.example.com/' )\n        .success( function() {\n            console.log( 'Ajax request worked' );\n        })\n        .error(function() {\n            console.log( 'Ajax request failed...' );\n            setTimeout ( function(){ func( param ) }, $.ajaxSetup().retryAfter );\n        });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is a small plugin for this:</p>\n\n<p><a href=\"https://github.com/execjosh/jquery-ajax-retry\" rel=\"nofollow\">https://github.com/execjosh/jquery-ajax-retry</a></p>\n\n<p>Auto incrementing timeout would be a good addition to it.</p>\n\n<p>To use it globally just create your own function with $.ajax signature, use there retry api and replace all your $.ajax calls by your new function.</p>\n\n<p>Also you could directly replace $.ajax, but you will not be able to make xhr calls without retry then.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Pseudo code:</p>\n\n<pre><code>$(document).ajaxError(function(e, xhr, options, error) {\n  xhr.retry()\n})\n</code></pre>\n\n<p>Even better would be some kind of exponential back-off</p>\n",
            "last_activity_date": 1413528790,
            "question_id": 10024469,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "xmlhttprequest"
            ],
            "title": "What&#39;s the best way to retry an AJAX request on failure using jQuery?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The good thing about this approach is that it creates private variables, so there won't be any conflict with variable names:</p>\n\n<pre><code>(function() {\n  var privateVar = 'test';\n  alert(privateVar); // test\n})();\n\nalert(typeof privateVar); // undefined\n</code></pre>\n\n<p>The addition of <code>.call(this)</code> makes the <code>this</code> keyword refer to the same value as it referred to outside the function. If it is not added, the <code>this</code> keyword will automatically refer to the global object.</p>\n\n<p>A small example to show the difference follows:</p>\n\n<pre><code>function coffee(){\n  this.val = 'test';\n  this.module = (function(){\n    return this.val;\n  }).call(this);\n}\n\nvar instance = new coffee();\nalert(instance.module); // test\n\nfunction coffee(){\n  this.val = 'test';\n  this.module = (function(){\n    return this.val;\n  })();\n}\n\nvar instance = new coffee();\nalert(typeof instance.module); // undefined\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>This is similar syntax to this:</p>\n\n<pre><code>(function() {\n\n}());\n</code></pre>\n\n<p>which is called an immediate function. the function is defined and executed immediately. the pros to this is that you can place all of your code inside this block, and assign the function to a single global variable, thus reducing global namespace pollution. it provides a nice contained scope within the function.</p>\n\n<p>This is the typical pattern i use when writing a module:</p>\n\n<pre><code>var MY_MODULE = (function() {\n    //local variables\n    var variable1,\n        variable2,\n        _self = {},\n        etc\n\n    // public API\n    _self = {\n       someMethod: function () {\n\n       }\n    }\n\n    return _self;\n}());\n</code></pre>\n\n<p>not sure what the cons might be exactly, if someone else knows of any i would be happy to learn about them.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Harmen's answer is quite good, but let me elaborate a bit on where this is done by the CoffeeScript compiler and why.</p>\n\n<p>When you compile something with <code>coffee -c foo.coffee</code>, you will always get a <code>foo.js</code> that looks like this:</p>\n\n<pre><code>(function() {\n  ...\n}).call(this);\n</code></pre>\n\n<p>Why is that? Well, suppose you put an assignment like</p>\n\n<pre><code>x = 'stringy string'\n</code></pre>\n\n<p>in <code>foo.coffee</code>. When it sees that, the compiler asks: Does <code>x</code> already exist in this scope, or an outer scope? If not, it puts a <code>var x</code> declaration at the top of that scope in the JavaScript output.</p>\n\n<p>Now suppose you write</p>\n\n<pre><code>x = 42\n</code></pre>\n\n<p>in <code>bar.coffee</code>, compile both, and concatenate <code>foo.js</code> with <code>bar.js</code> for deployment. You'll get</p>\n\n<pre><code>(function() {\n  var x;\n  x = 'stringy string';\n  ...\n}).call(this);\n(function() {\n  var x;\n  x = 42;\n  ...\n}).call(this);\n</code></pre>\n\n<p>So the <code>x</code> in <code>foo.coffee</code> and the <code>x</code> in <code>bar.coffee</code> are totally isolated from one another. This is an important part of CoffeeScript: <strong>Variables never leak from one .coffee file to another unless explicitly exported</strong> (by being attached to a shared global, or to <code>exports</code> in Node.js).</p>\n\n<p>You can override this by using the <code>-b</code> (\"bare\") flag to <code>coffee</code>, but this should only be used in very special cases. If you used it with the above example, the output you'd get would be</p>\n\n<pre><code>var x;\nx = 'stringy string';\n...\nvar x;\nx = 42;\n...\n</code></pre>\n\n<p>This could have dire consequences. To test this yourself, try adding <code>setTimeout (-&gt; alert x), 1</code> in <code>foo.coffee</code>. And note that you don't have to concatenate the two JS files yourself\u2014if you use two separate <code>&lt;script&gt;</code> tags to include them on a page, they still effectively run as one file.</p>\n\n<p>By isolating the scopes of different modules, the CoffeeScript compiler saves you from the headache of worrying whether different files in your project might use the same local variable names. This is common practice in the JavaScript world (see, for instance, the <a href=\"https://github.com/jquery/jquery/tree/master/src\">jQuery source</a>, or just about any jQuery plugin)\u2014CoffeeScript just takes care of it for you.</p>\n",
                    "is_accepted": true,
                    "score": 73
                }
            ],
            "body": "<p>While reviewing the <a href=\"https://github.com/jashkenas/coffee-script\">source code for CoffeeScript on Github</a>, I noticed that most, if not all, of the modules are defined as follows:</p>\n\n<pre><code>(function() {\n    ...\n}).call(this);\n</code></pre>\n\n<p>This pattern looks like it wraps the entire module in an anonymous function and calls itself. </p>\n\n<p>What are the pros (and cons) of this approach? Are there other ways to accomplish the same goals? </p>\n",
            "last_activity_date": 1308684663,
            "question_id": 5211638,
            "score": 26,
            "tags": [
                "javascript",
                "node.js",
                "coffeescript"
            ],
            "title": "Pattern for CoffeeScript modules"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>User <a href=\"http://stackoverflow.com/users/18936/bobince\">bobince</a> puts a number of cons very, very well in his <a href=\"http://www.doxdesk.com/updates/2009.html#u20091116-jquery\" rel=\"nofollow\">critique of jQuery</a>.</p>\n\n<blockquote>\n  <p>... Plus, you can make a div by saying $(''+message+'') instead of having to muck around with document.createElement('div') and text nodes. Hooray! Only... hang on. You've not escaped that HTML, and have probably just created a cross-site-scripting security hole, only on the client side this time. And after you'd spent so long cleaning up your PHP to use htmlspecialchars on the server-side, too. What a shame. Ah well, no-one really cares about correctness or security, do they?</p>\n  \n  <p>jQuery's not wholly to blame for this. After all, the innerHTML property has been about for years, and already proved more popular than DOM. But the library certainly does encourage that style of coding. </p>\n</blockquote>\n\n<p>As for performance: <strike>InnerHTML is most definitely going to be slower, because it needs to be parsed and internally converted into DOM elements (maybe using the <code>createElement</code> method).</strike></p>\n\n<p>InnerHTML is faster in all browsers according to the <a href=\"http://www.quirksmode.org/dom/innerhtml.html\" rel=\"nofollow\">quirksmode benchmark</a> provided by @Pointy. </p>\n\n<p>As for <em>readability</em> and ease of use, you will find me choosing <code>innerHTML</code> over <code>createElement</code> any day of the week in most projects. But as you can see, there are many points speaking for <code>createElement</code>.   </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There are several advantages to using <code>createElement</code> instead of modifying <code>innerHTML</code> (as opposed to just throwing away what's already there and replacing it) besides safety, like Pekka already mentioned:</p>\n\n<h3>Preserves existing references to DOM elements when appending elements</h3>\n\n<p>When you append to (or otherwise modify) <code>innerHTML</code>, all the DOM nodes inside that element have to be re-parsed and recreated. If you saved any references to nodes, they will be essentially useless, because they aren't the ones that show up anymore.</p>\n\n<h3>Preserves event handlers attached to any DOM elements</h3>\n\n<p>This is really just a special case (although common) of the last one. Setting <code>innerHTML</code> will not automatically reattach event handlers to the new elements it creates, so you would have to keep track of them yourself and add them manually. Event delegation can eliminate this problem in some cases.</p>\n\n<h3>Could be simpler/faster in some cases</h3>\n\n<p>If you are doing lots of additions, you definitely don't want to keep resetting <code>innerHTML</code> because, although faster for simple changes, repeatedly re-parsing and creating elements would be slower. The way to get around that is to build up the HTML in a string and set <code>innerHTML</code> once when you are done. Depending on the situation, the string manipulation could be slower than just creating elements and appending them.</p>\n\n<p>Additionally, the string manipulation code may be more complicated (especially if you want it to be safe).</p>\n\n<p>Here's a function I use sometimes that make it more convenient to use <code>createElement</code>.</p>\n\n<pre><code>function isArray(a) {\n    return Object.prototype.toString.call(a) === \"[object Array]\";\n}\n\nfunction make(desc) {\n    if (!isArray(desc)) {\n        return make.call(this, Array.prototype.slice.call(arguments));\n    }\n\n    var name = desc[0];\n    var attributes = desc[1];\n\n    var el = document.createElement(name);\n\n    var start = 1;\n    if (typeof attributes === \"object\" &amp;&amp; attributes !== null &amp;&amp; !isArray(attributes)) {\n        for (var attr in attributes) {\n            el[attr] = attributes[attr];\n        }\n        start = 2;\n    }\n\n    for (var i = start; i &lt; desc.length; i++) {\n        if (isArray(desc[i])) {\n            el.appendChild(make(desc[i]));\n        }\n        else {\n            el.appendChild(document.createTextNode(desc[i]));\n        }\n    }\n\n    return el;\n}\n</code></pre>\n\n<p>If you call it like this:</p>\n\n<pre><code>make([\"p\", \"Here is a \", [\"a\", { href:\"http://www.google.com/\" }, \"link\"], \".\"]);\n</code></pre>\n\n<p>you get the equivalent of this HTML:</p>\n\n<pre><code>&lt;p&gt;Here is a &lt;a href=\"http://www.google.com/\"&gt;link&lt;/a&gt;.&lt;/p&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>While <code>innerHTML</code> may be faster, I don't agree that it is better in terms of readability or maintenance. It may be shorter to put everything in one string, but shorter code is not always necessarily more maintainable.</p>\n\n<p>String concatenation just does not scale when dynamic DOM elements need to be created as the plus' and quote openings and closings becomes difficult to track. Consider these examples:</p>\n\n<p>The resulting element is a div with two inner spans whose content is dynamic. One of the class names (warrior) inside the first span is also dynamic.</p>\n\n<pre><code>&lt;div&gt;\n    &lt;span class=\"person warrior\"&gt;John Doe&lt;/span&gt;\n    &lt;span class=\"time\"&gt;30th May, 2010&lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Assume the following variables are already defined:</p>\n\n<pre><code>var personClass = 'warrior';\nvar personName = 'John Doe';\nvar date = '30th May, 2010';\n</code></pre>\n\n<p>Using just innerHTML and mashing everything into a single string, we get:</p>\n\n<pre><code>someElement.innerHTML = \"&lt;div&gt;&lt;span class='person \" + personClass + \"'&gt;\" + personName + \"&lt;/span&gt;&lt;span class='time'&gt;\" + date + \"&lt;/span&gt;&lt;/div&gt;\";\n</code></pre>\n\n<p>The above mess can be cleaned up with using string replacements to avoid opening and closing strings every time. Even for simple text replacements, I prefer using <code>replace</code> instead of string concatenation. </p>\n\n<p>This is a simple function that takes an object of keys and replacement values and replaces them in the string. It assumes the keys are prefixed with <code>$</code> to denote they are a special value. It does not do any escaping or handle edge cases where <code>$</code> appears in the replacement value etc.</p>\n\n<pre><code>function replaceAll(string, map) {\n    for(key in map) {\n        string = string.replace(\"$\" + key, map[key]);\n    }\n    return string;\n}\n\nvar string = '&lt;div&gt;&lt;span class=\"person $type\"&gt;$name&lt;/span&gt;&lt;span class=\"time\"&gt;$date&lt;/span&gt;&lt;/div&gt;';\nvar html = replaceAll(string, {\n    type: personClass,\n    name: personName,\n    date: date\n});\nsomeElement.innerHTML = html;\n</code></pre>\n\n<p>\u200bThis can be improved by separating the attributes, text, etc. while constructing the object to get more programmatic control over the element construction. For example, with MooTools we can pass object properties as a map. This is certainly more maintainable, and I would argue more readable as well. jQuery 1.4 uses a similar syntax to pass a map for initializing DOM objects.</p>\n\n<pre><code>var div = new Element('div');\n\nvar person = new Element('span', {\n    'class': 'person ' + personClass,\n    'text': personName\n});\n\nvar when =  new Element('span', {\n    'class': 'time',\n    'text': date\n});\n\ndiv.adopt([person, when]);\n</code></pre>\n\n<p>I wouldn't call the pure DOM approach below to be any more readable than the ones above, but it's certainly more maintainable because we don't have to keep track of opening/closing quotes and numerous plus signs.</p>\n\n<pre><code>var div = document.createElement('div');\n\nvar person = document.createElement('span');\nperson.className = 'person ' + personClass;\nperson.appendChild(document.createTextNode(personName));\n\nvar when = document.createElement('span');\n\u200bwhen.className = 'date\u200b\u200b\u200b\u200b\u200b\u200b';\nwhen.appendChild(document.createTextNode(date));\n\n\u200bdiv.appendChild(person);\ndiv.appendChild(when);\n</code></pre>\n\n<p>The most readable version would most likely result from using some sort of <a href=\"https://developer.mozilla.org/en/JavaScript_templates\" rel=\"nofollow\">JavaScript templating</a>.</p>\n\n<pre><code>&lt;div id=\"personTemplate\"&gt;\n    &lt;span class=\"person &lt;%= type %&gt;\"&gt;&lt;%= name %&gt;&lt;/span&gt;\n    &lt;span class=\"time\"&gt;&lt;%= date %&gt;&lt;/span&gt;\n&lt;/div&gt;\n\nvar div = $(\"#personTemplate\").create({\n    name: personName,\n    type: personClass,\n    date: date\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>In practice, what are the advantages of using createElement over innerHTML? I am asking because I'm convinced that using innerHTML is more efficient in terms of performance and code readability/maintainability but my teammates have settled on using createElement as the coding approach. I just wanna understand how createElement can be more efficient. </p>\n",
            "last_activity_date": 1422193131,
            "question_id": 2946656,
            "score": 21,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "Advantages of createElement over innerHTML?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>So you REALLY don't want to do this client side anymore. (Just went through numerous docs, and devs suggest to do all oAuth server-side)</p>\n\n<p>What you need to do:</p>\n\n<p><strong>First</strong>: sign up on <a href=\"https://dev.twitter.com\" rel=\"nofollow\">https://dev.twitter.com</a>, and make a new application.</p>\n\n<p><strong>Second</strong>: NOTE: Your Consumer Key / Secret along with Access Token / Secret </p>\n\n<p><strong>Third</strong>: Download Twitter oAuth Library (In this case I used the PHP Library <a href=\"https://github.com/abraham/twitteroauth\" rel=\"nofollow\">https://github.com/abraham/twitteroauth</a> , additional library located here: <a href=\"https://dev.twitter.com/docs/twitter-libraries\" rel=\"nofollow\">https://dev.twitter.com/docs/twitter-libraries</a>) </p>\n\n<p><strong>Fourth</strong>: (If using php) Make sure cURL is enabled, if your running on a LAMP here's the command you need:</p>\n\n<pre><code>sudo apt-get install php5-curl\n</code></pre>\n\n<p><strong>Fifth</strong>: Make a new PHP file and insert the following: Thanks to Tom Elliot <a href=\"http://www.webdevdoor.com/php/authenticating-twitter-feed-timeline-oauth/\" rel=\"nofollow\">http://www.webdevdoor.com/php/authenticating-twitter-feed-timeline-oauth/</a></p>\n\n<pre><code>&lt;?php\nsession_start();\nrequire_once(\"twitteroauth/twitteroauth/twitteroauth.php\"); //Path to twitteroauth library you downloaded in step 3\n\n$twitteruser = \"twitterusername\"; //user name you want to reference\n$notweets = 30; //how many tweets you want to retrieve\n$consumerkey = \"12345\"; //Noted keys from step 2\n$consumersecret = \"123456789\"; //Noted keys from step 2\n$accesstoken = \"123456789\"; //Noted keys from step 2\n$accesstokensecret = \"12345\"; //Noted keys from step 2\n\nfunction getConnectionWithAccessToken($cons_key, $cons_secret, $oauth_token, $oauth_token_secret) {\n  $connection = new TwitterOAuth($cons_key, $cons_secret, $oauth_token, $oauth_token_secret);\n  return $connection;\n}\n\n$connection = getConnectionWithAccessToken($consumerkey, $consumersecret, $accesstoken, $accesstokensecret);\n\n$tweets = $connection-&gt;get(\"https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=\".$twitteruser.\"&amp;count=\".$notweets);\n\necho json_encode($tweets);\necho $tweets; //testing remove for production   \n?&gt;\n</code></pre>\n\n<p><strong>And boom</strong>, you're done. <em>I know this isn't a pure js solution but again reading through the new Twitter API 1.1 docs they REALLY don't want you to do this client site. Hope this</em> helps!</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>Actually twitter has many restrictions, as there is lot of contest from companies like Nike and others. The reading of tweet is limited in the sense that if you are reading through the latest API its actually a bit behind time.</p>\n\n<p>They have also controlled the DM delay which means you cannot DM instantly even if you do, the other party will only receive after X amount of time. If you do through script, and even if you try to DM a lot from one single ip twitter will simply BLOCK you. </p>\n",
                    "is_accepted": false,
                    "score": -6
                },
                {
                    "body": "<p>How to get last few tweets of user with core PHP functionality only (no CURL or Twitter oAuth library needed):</p>\n\n<ol>\n<li><p>Register your app/webpage <a href=\"https://dev.twitter.com\" rel=\"nofollow\">https://dev.twitter.com</a> (You may need to verify your personal account mobile number too)</p></li>\n<li><p>Note Consumer Key and Consumer Secret</p></li>\n<li><p>PHP Code:</p>\n\n<pre><code>// auth parameters\n$api_key = urlencode('REPLACEWITHAPPAPIKEY'); // Consumer Key (API Key)\n$api_secret = urlencode('REPLACEWITHAPPAPISECRET'); // Consumer Secret (API Secret)\n$auth_url = 'https://api.twitter.com/oauth2/token'; \n\n// what we want?\n$data_username = 'Independent'; // username\n$data_count = 10; // number of tweets\n$data_url = 'https://api.twitter.com/1.1/statuses/user_timeline.json';\n\n// get api access token\n$api_credentials = base64_encode($api_key.':'.$api_secret);\n\n$auth_headers = 'Authorization: Basic '.$api_credentials.\"\\r\\n\".\n                'Content-Type: application/x-www-form-urlencoded;charset=UTF-8'.\"\\r\\n\";\n\n$auth_context = stream_context_create(\n    array(\n        'http' =&gt; array(\n            'header' =&gt; $auth_headers,\n            'method' =&gt; 'POST',\n            'content'=&gt; http_build_query(array('grant_type' =&gt; 'client_credentials', )),\n        )\n    )\n);\n\n$auth_response = json_decode(file_get_contents($auth_url, 0, $auth_context), true);\n$auth_token = $auth_response['access_token'];\n\n// get tweets\n$data_context = stream_context_create( array( 'http' =&gt; array( 'header' =&gt; 'Authorization: Bearer '.$auth_token.\"\\r\\n\", ) ) );\n\n$data = json_decode(file_get_contents($data_url.'?count='.$data_count.'&amp;screen_name='.urlencode($data_username), 0, $data_context), true);\n\n// result - do what you want\nprint('&lt;pre&gt;');\nprint_r($data);\n</code></pre></li>\n</ol>\n\n<p>Tested with XAMPP for Windows and Centos6 default installation (PHP 5.3)</p>\n\n<p>Most probable problem with this might be that openssl is not enabled in php.ini</p>\n\n<p>To fix check if extension=php_openssl.dll or extension=php_openssl.so line is present and uncommented in php.ini</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am completely new to using Twitter in general and have never embedded \"latest tweets\" on any project. I am simply trying to embed the 3-4 newest tweets on the site footer with no additional features of functionality. I have been researching how to do this for quite some time now and having some trouble. </p>\n\n<p>I added the following code snippet to the project, which works quite well, however, I am not sure how to update the snippet so it uses my Twitter account instead of the one it is set up with.</p>\n\n<pre><code>    &lt;div id=\"twitter_update_list\"&gt;\n    &lt;/div&gt;\n    &lt;script type=\"text/javascript\" src=\"http://api.twitter.com/1/statuses/user_timeline.json?screen_name=stackoverflow&amp;include_rts=true&amp;count=4&amp;callback=twitterCallback2\"&gt;\n    &lt;/script&gt;\n</code></pre>\n\n<p>In addition, I keep reading that the most commonly used Twitter API will stop working soon because Twitter wants people to use their own, as opposed to third party.</p>\n\n<p>I am not sure how to proceed from here. I would greatly appreciate any suggestions in this regard. To recap, all I am trying to do is grab the 3-4 latest tweets from my account.</p>\n\n<p>many thanks in advance!</p>\n",
            "last_activity_date": 1425923590,
            "question_id": 17049821,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "twitter",
                "twitter-oauth"
            ],
            "title": "Setting up Twitter API, getting the last few Tweets"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Any javascript in the head will be evaluated before the page is loaded, meaning the page feels like it takes longer to load. It is slightly harder to get events to work properly if all the javascript is at the end, but jQuery pretty much solves this problem for you.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>From Yahoo's <a href=\"http://developer.yahoo.com/performance/rules.html#js_bottom\">Best Practices for Speeding Up Your Web Site</a>:</p>\n\n<blockquote>\n  <p>The problem caused by scripts is that\n  they block parallel downloads. The\n  HTTP/1.1 specification suggests that\n  browsers download no more than two\n  components in parallel per hostname.\n  If you serve your images from multiple\n  hostnames, you can get more than two\n  downloads to occur in parallel. While\n  a script is downloading, however, the\n  browser won't start any other\n  downloads, even on different\n  hostnames.</p>\n  \n  <p>In some situations it's not easy to\n  move scripts to the bottom. If, for\n  example, the script uses\n  document.write to insert part of the\n  page's content, it can't be moved\n  lower in the page. There might also be\n  scoping issues. In many cases, there\n  are ways to workaround these\n  situations.</p>\n  \n  <p>An alternative suggestion that often\n  comes up is to use deferred scripts.\n  The DEFER attribute indicates that the\n  script does not contain\n  document.write, and is a clue to\n  browsers that they can continue\n  rendering. Unfortunately, Firefox\n  doesn't support the DEFER attribute.\n  In Internet Explorer, the script may\n  be deferred, but not as much as\n  desired. If a script can be deferred,\n  it can also be moved to the bottom of\n  the page. That will make your web\n  pages load faster.</p>\n</blockquote>\n\n<p>Therefore, in general, it is preferrable to put them at the bottom. However, it isn't always possible, and it often doesn't make <em>that</em> much of a difference anyway.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>It really depends on your website. If you are accessing and invoking the JavaScript functions inside the body then it must be referenced in the header so that is is loaded. Else if you are only going to call the JavaScript when the whole document is loaded then it is wise to put the JavaScript at the end of body. By putting .JS file at the end you load the whole page and then fetch the .JS file. This way the user will be able to quickly see the page and by the time he/she gets familiar with the page the .JS file has already been downloaded. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As other people have said, when you put javascript in the head it delays the rendering of the page until after the scripts have loaded, which means the page may take longer to load - especially if you are downloading large script files.</p>\n\n<p>If you move your script tags to the end of the page, you will ensure that the browser downloads images and stylesheets before the script tags and the page will likely apear to be rendered before the scripts start to run. This also means that if you are depending on some functionality from your scripts, this will not be available until a bit after the page is visible to the user.</p>\n\n<p>If you are adding styles or elements (etc. switching textfields with some form of richer editor) this will be visible to the user as flickering.</p>\n\n<p>If you are adding click-events to elements, they will not be clickable until a bit after the elements themselves are visible.</p>\n\n<p>Sometimes theses issues requires you to put your scripts in the head, other times you will be fine by sticking them in the bottom.</p>\n\n<p>IMHO (completely against YSlow and lot's of clever people) you should keep your scripts in the head tag, and just rely on them to be cached most of the time.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>In general you should place script references at the bottom of your page. Scripts not only need to be downloaded, they must also be evaluated and executed before the block is released and the page proceeds with the rendering process. Things like Modernizr should be placed in the top because it does some feature detections as well as HTML5 shims that you will probably want.</p>\n\n<p>Another reason you want to try to place scripts at the bottom of the page is Single Points of Failure or SPOFs. This is where a script call times out or for some other reason blocks the page execution. This can happen a lot with third party advertising libraries, etc. </p>\n\n<p>Yes you may have to think a little harder about how you architect your application, but I found it to become very natural very quickly for me. I have built hundreds of web apps over the past 4 years with the script at the bottom and I can tell the difference. I may be 500ms it might be 5000ms but it all matters.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Most of javascript and web development books/articles says that you must put CSS in the head tag and javascript at the bottom of the page.</p>\n\n<p>But when i open html source of famous websites such as this one stackoverflow, i find they put some js files in the head tag.</p>\n\n<p>Whats Pros and Cons of both approaches and when to use which?</p>\n\n<p><strong>Found another question for the same issue:</strong>\n<a href=\"http://stackoverflow.com/questions/1013112/where-should-i-declare-javascript-files-used-in-my-page-in-head-head-or-near\">http://stackoverflow.com/questions/1013112/where-should-i-declare-javascript-files-used-in-my-page-in-head-head-or-near</a></p>\n",
            "last_activity_date": 1352152191,
            "question_id": 2451417,
            "score": 48,
            "tags": [
                "javascript"
            ],
            "title": "Whats Pros and Cons: putting javascript in head and putting just before the body close"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>you're testing different things here. <code>if (arr)</code> called on object (Array is instance of Object in JS) checks if the object is present, and returns true/false. when you call <code>if (arr == false)</code> you compare <em>values</em> of this object and the primitive <code>false</code> value. internally, <code>arr.toString()</code> is called, which returns an empty string <code>\"\"</code> (because <code>toString</code> called on Array returns <code>Array.join()</code>), and empty string is one of falsy values in JavaScript.</p>\n",
                    "is_accepted": true,
                    "score": 84
                },
                {
                    "body": "<p>Regarding the line:</p>\n\n<pre><code>if (arr == false) console.log(\"It's false!\");\n</code></pre>\n\n<p>Maybe these will help:</p>\n\n<pre><code>console.log(0 == false) // true\nconsole.log([] == 0) // true\nconsole.log([] == \"\") // true\n</code></pre>\n\n<p>What I believe is happening is that the boolean <code>false</code> is coerced to <code>0</code> for comparison with an object (the left-hand side). The object is coerced to a string (the empty string). Then, the empty string is coerced into a number, as well, namely zero. And so the final comparison is <code>0</code> == <code>0</code>, which is <code>true</code>.</p>\n\n<p><strong>Edit:</strong> See <a href=\"http://bclary.com/2004/11/07/#a-11.9.3\">this section of the spec</a> for details on exactly how this works.</p>\n\n<p>Here's what's happening, starting at rule #1:</p>\n\n<blockquote>\n  <p>1. If Type(x) is different from Type(y), go to step 14.</p>\n</blockquote>\n\n<p>The next rule that applies is #19:</p>\n\n<blockquote>\n  <p>19. If Type(y) is Boolean, return the result of the comparison x ==\n  ToNumber(y).</p>\n</blockquote>\n\n<p>The result of <code>ToNumber(false)</code> is <code>0</code>, so we now have:</p>\n\n<pre><code>[] == 0\n</code></pre>\n\n<p>Again, rule #1 tells us to jump to step #14, but the next step that actually applies is #21:</p>\n\n<blockquote>\n  <p>21. If Type(x) is Object and Type(y) is either String or Number, return the\n  result of the comparison\n  ToPrimitive(x)== y.</p>\n</blockquote>\n\n<p>The result of <code>ToPrimitive([])</code> is the empty string, so we now have:</p>\n\n<pre><code>\"\" == 0\n</code></pre>\n\n<p>Again, rule #1 tells us to jump to step #14, but the next step that actually applies is #17:</p>\n\n<blockquote>\n  <p>17. If Type(x) is String and Type(y) is Number, return the result of the\n  comparison ToNumber(x)== y.</p>\n</blockquote>\n\n<p>The result of <code>ToNumber(\"\")</code> is <code>0</code>, which leaves us with:</p>\n\n<pre><code>0 == 0\n</code></pre>\n\n<p>Now, both values have the same type, so the steps continue from #1 until #7, which says:</p>\n\n<blockquote>\n  <p>7. If x is the same number value as y, return true.</p>\n</blockquote>\n\n<p>So, we return <code>true</code>.</p>\n\n<p>In brief:</p>\n\n<pre><code>ToNumber(ToPrimitive([])) == ToNumber(false)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Just a comparison of performance between two approaches to test empty array:</p>\n\n<p><a href=\"http://jsperf.com/if-on-array\" rel=\"nofollow\">http://jsperf.com/if-on-array</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>None of the above helped me, when trying to use the knockout.js mapping plugin, perhaps since an \"empty array\" isn't really empty.</p>\n\n<p>I ended up using: <code>data-bind=\"if: arr().length\"</code> which did the trick.</p>\n\n<p>This is specific to knockout, not the OP's question, but maybe it will help someone else browsing here in a similar situation.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Empty arrays are true but they're also equal to false.</p>\n\n<pre><code>var arr = [];\nconsole.log('Array:', arr);\nif (arr) console.log(\"It's true!\");\nif (arr == false) console.log(\"It's false!\");\nif (arr &amp;&amp; arr == false) console.log(\"...what??\");\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>Array: []\nIt's true!\nIt's false!\n...what??\n</code></pre>\n\n<p>I guess this is due to the implicit conversion operated by the equality operator.</p>\n\n<p>Can anyone explain what's going on behind the scenes?</p>\n",
            "last_activity_date": 1419503852,
            "question_id": 5491605,
            "score": 46,
            "tags": [
                "javascript"
            ],
            "title": "javascript empty array seems to be true and false at the same time"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I am going out on a limb here and suggest that the answers proposed so far are not possible.</p>\n\n<p>If this iframe actually has a src=\"somepage.html\" (which you ought to have indicated, and if not, what is the point of using iframe?), then I do not think Jquery can directly manipulate html across frames in all browsers.  Based on my experience with this kind of thing, the containing page cannot directly call functions from or make any sort of Javascript contact with the iframe page.  </p>\n\n<p>Your \"somepage.html\" (the page that loads in the iframe) needs to do two things:</p>\n\n<ol>\n<li>Pass some kind of object to the containing page that can be used as a bridge</li>\n<li>Have a function to set the HTML as you desired</li>\n</ol>\n\n<p>So for example, somepage.html might look like this:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script src=\"jquery.js\"&gt;\n&lt;/script&gt;\n&lt;script language=JavaScript&gt;\n&lt;!--//\n    var bridge={\n        setHtml:function(htm) {\n            document.body.innerHTML=htm;\n        }\n    }\n\n    $(function() { parent.setBridge(bridge); });\n\n//--&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>and the containing page might look like this:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script src=\"jquery.js\"&gt;\n&lt;/script&gt;\n&lt;script language=JavaScript&gt;\n&lt;!--//\nvar bridge;\nvar setBridge=function(br) {\n    bridge=br;\n    bridge.setHtml(\"&lt;div&gt;A&lt;/div&gt;&lt;div&gt;B&lt;/div&gt;&lt;div&gt;C&lt;/div&gt;\");\n    }\n//--&gt;\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;&lt;iframe src=\"somepage.html\"&gt;&lt;/iframe&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>This may appear a bit convoluted but it can be adapted in a number of directions and should work in at least IE, FF, Chrome, and probably Safari and Opera...</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can do both, you just have to target differently:</p>\n\n<pre><code>var ifrm = document.getElementById('myIframe');\nifrm = (ifrm.contentWindow) ? ifrm.contentWindow : (ifrm.contentDocument.document) ? ifrm.contentDocument.document : ifrm.contentDocument;\nifrm.document.open();\nifrm.document.write('Hello World!');\nifrm.document.close();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>After some research, and a corroborating answer from Mike, I've found this is a solution:</p>\n\n<pre><code>  var d = $(\"#someFrame\")[0].contentWindow.document; // contentWindow works in IE7 and FF\n  d.open(); d.close(); // must open and close document object to start using it!\n\n  // now start doing normal jQuery:\n  $(\"body\", d).append(\"&lt;div&gt;A&lt;/div&gt;&lt;div&gt;B&lt;/div&gt;&lt;div&gt;C&lt;/div&gt;\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>There are two reliable methods to access the <code>document</code> element inside an <code>iframe</code>:</p>\n\n<p>1.<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/window.frames\" rel=\"nofollow\">window.frames</a> property:</p>\n\n<pre><code>var iframeDocument = window.frames[\"iframeName\"].document; // or // var iframeDocument = window.frames[iframeIndex].document;\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/RainLover/dmt9F/\" rel=\"nofollow\">JSFiddle</a>\n<br><br>\n2.<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\" rel=\"nofollow\">contentDocument</a> property:</p>\n\n<pre><code>var iframeDocument = document.getElementById(\"iframeID\").contentDocument; // or // var iframeDocument = document.getElementById(\"iframeID\").contentWindow.document;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I have found this to be cross-browser compatible... a little crossing of previous answers and a bit of trial &amp; error of my own. :)</p>\n\n<p>I'm using this for a download of a report, or, if an error (message) occurs, it's displayed in the iFrame. Most of the users will probably have the iFrame hidden, I'm using it multi-functional.</p>\n\n<p>The thing is I have to clear the contents of the iFrame every time I click the report download button - the user can change parameters and it happens there are no results which then is displayed in the iFrame as a message. If there <em>are</em> results, the iFrame remains empty - because the code below has cleared it and the <code>window.open(...)</code> method generates a <code>Content-Disposition: attachment;filename=...</code> document.</p>\n\n<pre><code>var $frm = $(\"#reportIFrame\");\nvar $doc = $frm[0].contentWindow ? $frm[0].contentWindow.document : $frm[0].contentDocument;\nvar $body = $($doc.body);\n$body.html(''); // clear iFrame contents &lt;- I'm using this...\n$body.append('&lt;i&gt;Writing into the iFrame...&lt;/i&gt;'); // use this to write something into the iFrame\nwindow.open(Module.PATH + 'php/getReport.php' + Report.queryData, 'reportIFrame');\n</code></pre>\n\n<p>I do not have a browser that supports <code>contentDocument</code> but I've coded it this way so I'm leaving it. Maybe someone has older browsers and can post compatibility confirmation/issues?</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have something like this:</p>\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n     &lt;iframe id=\"someFrame\"&gt;&lt;/iframe&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>And I would like to use jQuery to write elements such that the full equivalent HTML would be like this:</p>\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;iframe id=\"someFrame\"&gt;\n      &lt;!-- inside the iframe's content --&gt;\n      &lt;!-- &lt;html&gt;&lt;body&gt;  --&gt;\n      &lt;div&gt;A&lt;/div&gt;\n      &lt;div&gt;B&lt;/div&gt;\n      &lt;div&gt;C&lt;/div&gt;\n      &lt;!-- &lt;/body&gt;&lt;/html&gt; --&gt;\n    &lt;/iframe&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Alternatively, any plain-old-Javascript would be fine.</p>\n\n<p>Thanks.</p>\n\n<p><strong>Edit</strong>:  After a little more research, it seems I am looking for an IE-equivalent of the contentDocument property of an iframe.  \"contentDocument\" is a W3C standard which FF supports, but IE does not. (surprise surprise) </p>\n",
            "last_activity_date": 1397483836,
            "question_id": 997986,
            "score": 32,
            "tags": [
                "javascript",
                "jquery",
                "iframe"
            ],
            "title": "Write elements into a child iframe using Javascript or jQuery"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Try the <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Statements/for...in\"><code>for \u2026 in</code> loop</a> and break after the first iteration:</p>\n\n<pre><code>for (var prop in object) {\n    // object[prop]\n    break;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>No. An object literal, as defined by <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FGuide/Literals#Object%5FLiterals\">MDC</a> is:</p>\n\n<blockquote>\n  <p>a list of zero or more pairs of property names and associated values of an object, enclosed in curly braces ({}).</p>\n</blockquote>\n\n<p>Therefore an object literal is not an array, and you can only access the properties using their explicit name or a <code>for</code> loop using the <code>in</code> keyword.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>There isn't a \"first\" property. Object keys are unordered.</p>\n\n<p>If you loop over them with for <code>(var foo in bar)</code> you will get them in <strong>some</strong> order, but it may change in future (especially if you add or remove other keys).</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you need to access \"the first property of an object\", it might mean that there is something wrong with your logic. The order of an object's properties should not matter.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This has been covered here before.</p>\n\n<p>The concept of first does not apply to object properties, and the order of a for...in loop is not guaranteed by the specs, however in practice  it is reliably FIFO <em>except</em> critically for chrome (<a href=\"http://code.google.com/p/chromium/issues/detail?id=883\" rel=\"nofollow\">bug report</a>). Make your decisions accordingly.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use an array instead of an object (square brackets).</p>\n\n<pre><code>var example = [ {/* stuff1 */}, { /* stuff2 */}, { /* stuff3 */}];\nvar fist = example[0];\n</code></pre>\n\n<p>Note that you lose the 'foo' identifiers. But you could add a name property to the contained objects:</p>\n\n<pre><code>var example = [ \n  {name: 'foo1', /* stuff1 */},\n  {name: 'foo2', /* stuff2 */},\n  {name: 'foo3', /* stuff3 */}\n];\nvar whatWasFirst = example[0].name;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use <code>Object.keys</code> to get an array of the properties on an object. Example:</p>\n\n<pre><code>var example = {\n    foo1: { /* stuff1 */},\n    foo2: { /* stuff2 */},\n    foo3: { /* stuff3 */}\n};\n\nvar keys = Object.keys(example); // =&gt; [\"foo1\", \"foo2\", \"foo3\"] (Note: the order here is not reliable)\n</code></pre>\n\n<p>Documentation and cross-browser shim provided <a href=\"https://developer.mozilla.org/en/JavaScript/Reference\" rel=\"nofollow\">here</a>. An example of its use can be found in another one of my answers <a href=\"http://stackoverflow.com/a/8538265/777929\">here</a>.</p>\n\n<p><strong>Edit</strong>: for clarity, I just want to echo what was correctly stated in other answers: the key order in javascript objects is undefined.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<pre><code>var obj = { first: 'someVal' };\nobj[Object.keys(obj)[0]]; //returns 'someVal'\n</code></pre>\n\n<p>Using this you can access also other properties by indexes. Be aware tho! Because properties are ordered inside object depending on javascript implementation. However if you are certain that object has only 1 property then its the way to go(not the fastest tho). </p>\n",
                    "is_accepted": false,
                    "score": 226
                },
                {
                    "body": "<p>I don't recommend you to use Object.keys since its not supported in old IE versions. But if you really need that, you could use the code above to guarantee the back compatibility:</p>\n\n<pre><code>if (!Object.keys) {\nObject.keys = (function () {\nvar hasOwnProperty = Object.prototype.hasOwnProperty,\n    hasDontEnumBug = !({toString: null}).propertyIsEnumerable('toString'),\n    dontEnums = [\n      'toString',\n      'toLocaleString',\n      'valueOf',\n      'hasOwnProperty',\n      'isPrototypeOf',\n      'propertyIsEnumerable',\n      'constructor'\n    ],\n    dontEnumsLength = dontEnums.length;\n\nreturn function (obj) {\n  if (typeof obj !== 'object' &amp;&amp; typeof obj !== 'function' || obj === null) throw new TypeError('Object.keys called on non-object');\n\n  var result = [];\n\n  for (var prop in obj) {\n    if (hasOwnProperty.call(obj, prop)) result.push(prop);\n  }\n\n  if (hasDontEnumBug) {\n    for (var i=0; i &lt; dontEnumsLength; i++) {\n      if (hasOwnProperty.call(obj, dontEnums[i])) result.push(dontEnums[i]);\n    }\n  }\n  return result;\n}})()};\n</code></pre>\n\n<p>Feature     Firefox (Gecko)4 (2.0)   Chrome 5  Internet Explorer 9  Opera 12    Safari 5</p>\n\n<p>More info: <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys</a></p>\n\n<p>But if you only need the first one, we could arrange a shorter solution like:</p>\n\n<pre><code>var data = {\"key1\":\"123\",\"key2\":\"456\"};\nvar first = {};\nfor(key in data){\n    if(data.hasOwnProperty(key)){\n        first.key = key;\n        first.content =  data[key];\n        break;\n    }\n}\nconsole.log(first); // {key:\"key\",content:\"123\"}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A 1 rule version :)</p>\n\n<pre><code>var val = example[function() { for (var k in example) return k }()];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This will give you the first property.</p>\n\n<pre><code>example[Object.keys(example)[0]]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there an elegant way to access the first property of an object...</p>\n\n<ol>\n<li>where you don't know the name of your properties</li>\n<li>without using a loop like for .. in or jQuery's $.each</li>\n</ol>\n\n<p>For example, I need to access foo1 object without knowing the name of foo1:</p>\n\n<pre><code>var example = {\n    foo1: { /* stuff1 */},\n    foo2: { /* stuff2 */},\n    foo3: { /* stuff3 */}\n};\n</code></pre>\n",
            "last_activity_date": 1425658611,
            "question_id": 983267,
            "score": 87,
            "tags": [
                "javascript",
                "object"
            ],
            "title": "Access the first property of an object"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Yes, there is. The callback is an event, so you must add an event listener to catch it. This is an example with jQuery:</p>\n\n<pre><code>$(\"#sun\").bind('oanimationend animationend webkitAnimationEnd', function() { \n   alert(\"fin\") \n});\n</code></pre>\n\n<p>Or pure js:</p>\n\n<pre><code>element.addEventListener(\"webkitAnimationEnd\", callfunction,false);\nelement.addEventListener(\"animationend\", callfunction,false);\nelement.addEventListener(\"oanimationend\", callfunction,false);\n</code></pre>\n\n<p>Live demo:\n<a href=\"http://jsfiddle.net/W3y7h/\">http://jsfiddle.net/W3y7h/</a></p>\n",
                    "is_accepted": true,
                    "score": 62
                },
                {
                    "body": "<p>An easy way for you to do a callback that also handles your CSS3 transitions/browser compatibilities would be the <a href=\"http://ricostacruz.com/jquery.transit/\" rel=\"nofollow\">jQuery Transit Plugin</a>. Example:</p>\n\n<pre><code>//Pulsing, moving element\n$(\"#element\").click( function () {\n    $('#element').transition({ opacity: 0, x: '75%' }, function () { $(this).transition({ opacity: 1, x: '0%' }).trigger(\"click\"); });\n});\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/uUCFT/\" rel=\"nofollow\">JS Fiddle Demo</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there any way to implement a callback function in case of css3 animation? In case of Javascript animation its possible but not finding any way to do it in css3.</p>\n\n<p>One way I could see is to execute callback after the animation duration but that doesn't make sure that it will always be called right after the animation ends. It will depend on the browser UI queue. I want a more robust method. Any clue?</p>\n",
            "last_activity_date": 1363869614,
            "question_id": 6186454,
            "score": 36,
            "tags": [
                "javascript",
                "css",
                "css3",
                "frontend"
            ],
            "title": "Is there a callback on completion of a CSS3 animation?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The DOM ready fires when all the DOM nodes are available. It has nothing to do with CSS. Try positioning the style before or try loading it differently.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>To the best of my knowledge the ready event is fired when the DOM is loaded - which means that all the blocking requests (i.e. JS) have loaded and the DOM tree is completely graphed. The ready state in IE relies on a slower event trigger (document.readyState change vs DOMContentLoaded) than most other browsers so the timing is browser dependant also.</p>\n\n<p>The existence of non-blocking requests (such as CSS and images) is completely asynchronous and unrelated to the ready state. If you are in a position where you require such resources you need to depend on the good old onload event.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>From the <a href=\"http://docs.jquery.com/Release%3ajQuery_1.3\">1.3 release notes</a>: </p>\n\n<blockquote>\n  <p>The ready() method no longer tries to make any guarantees about waiting for all stylesheets to be loaded. Instead all CSS files should be included before the scripts on the page. <a href=\"http://docs.jquery.com/Events/ready\">More Information</a></p>\n</blockquote>\n\n<p>From the <a href=\"http://docs.jquery.com/Events/ready\">ready(fn) documentation</a>:</p>\n\n<blockquote>\n  <p>Note: Please make sure that all stylesheets are included before your scripts (especially those that call the ready function). Doing so will make sure that all element properties are correctly defined before jQuery code begins executing. Failure to do this will cause sporadic problems, especially on WebKit-based browsers such as Safari.</p>\n</blockquote>\n\n<p>Note that the above is not even about actually <em>rendering</em> the CSS, so you may still see the screen change when <code>ready()</code> kicks in. But it should save you from problems.</p>\n\n<p>Actually, I find it a bit strange that just putting the CSS above the JS will solve all issues. The CSS is loaded asynchronously, so JS loading can start <em>and finish</em> while the CSS is still being downloaded. So if the above is a solution, then <em>executing</em> any JS code is then halted until all earlier requests have completed?</p>\n\n<p>I did some testing, and indeed, <strong>sometimes</strong> JS is delayed until the CSS is loaded. I don't know why, because the waterfall shows that the JS has completed loading long before downloading the CSS has finished.</p>\n\n<p>See JS Bin for <a href=\"http://jsbin.com/akifu/edit\">some HTML</a> and <a href=\"http://jsbin.com/akifu\">its results</a> (this has a 10 second delay), and see webpagetest.org for <a href=\"http://www.webpagetest.org/result/090824_249J/1/details/\">its waterfall results</a>. This uses some script from Steve Souders' <a href=\"http://www.cuzillion.com\">cuzillion.com</a> to mimic slow responses. In the waterfall, the reference to <code>resource.cgi</code> is the CSS. So, in Internet Explorer, the first external JS starts to load right after the CSS was requested (but that CSS will take another 10 seconds to finish). But the second <code>&lt;script&gt;</code> tag is not executed until the CSS has finished loading as well:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\".../a script that delays.cgi\" /&gt;\n\n&lt;script type=\"text/javascript\" src=\".../jquery.min.js\"&gt;&lt;/script&gt; \n\n&lt;script type=\"text/javascript\"&gt; \n  alert(\"start after the CSS has fully loaded\"); \n  $(document).ready(function() { \n    $(\"p\").addClass(\"sleepcgi\"); \n    alert(\"ready\"); \n  });         \n&lt;/script&gt; \n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/jvLD2.png\" alt=\"Waterfall with a single external JS script\"></p>\n\n<p><a href=\"http://ttp://jsbin.com/ulayu/edit\">Another test</a> with a second external JS after getting jQuery, <a href=\"http://www.webpagetest.org/result/090824_249H/1/details/\">shows</a> that the download of the second JS is not started until the CSS has loaded. Here, the first reference to <code>resource.cgi</code> is the CSS, the second the JS:</p>\n\n<p><img src=\"http://i.stack.imgur.com/OLfKm.png\" alt=\"Waterfall with two external JS scripts\"></p>\n\n<p>Moving the stylesheet <em>below</em> all JS indeed shows that the JS (including the <code>ready</code> function) runs much earlier, but even then the jQuery-applied class --which is yet unknown when the JS runs-- is used correctly in my quick tests in Safari and Firefox. But it makes sense that things like <code>$(this).height()</code> will yield wrong values at that time.</p>\n\n<p>However, <a href=\"http://jsbin.com/aqeno/edit\">additional testing</a> shows that <strong>it is not a generic rule that JS is halted until earlier defined CSS is loaded</strong>. There seems to be some combination with using external JS and CSS. I don't know how this works.</p>\n\n<p>Last notes: as JS Bin includes Google Analytics in each script when running from the bare URL (like <a href=\"http://jsbin.com/aqeno/\">jsbin.com/aqeno</a>, <strong>the test results are actually changed by JS Bin</strong>... It seems that the Output tab on the edit URL such as <a href=\"http://jsbin.com/aqeno/edit\">jsbin.com/aqeno/edit</a> does not include the additional Google Analytics things, and surely yields different results, but that URL is hard to test using webpagetest.org. The reference to <a href=\"http://stevesouders.com/cuzillion/?ex=2&amp;title=Stylesheets+Block+Downloads\">Stylesheets Block Downloads in Firefox and JavaScript Execution in IE</a> as given by <a href=\"http://stackoverflow.com/users/39992/strager\">strager</a> is a good start for a better understanding, but I got many questions left... Also note Steve Souders' <a href=\"http://stevesouders.com/cuzillion/?ex=3&amp;title=IE8+Parallel+Script+Loading\">IE8 Parallel Script Loading</a> to make things even more complicated. (The waterfalls above are created using IE7.)</p>\n\n<p>Maybe one should simply believe the release notes and documentation...</p>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>CSS/JavaScript/JQuery ordering doesn't work for me, but the following does:</p>\n\n<pre><code>$(window).load(function() { $('#abc')...} );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<blockquote>\n  <p>According to HTML5, DOMContentLoaded is a plain DOM ready event without taking stylesheets into account. <strong>However</strong>, the HTML5 parsing algorithm require browsers to defer the execution of scripts until all previous stylesheets are loaded. (<a href=\"http://molily.de/weblog/domcontentloaded\" rel=\"nofollow\">DOMContentLoaded and stylesheets</a>)</p>\n</blockquote>\n\n<p>In <a href=\"http://molily.de/weblog/domcontentloaded#summary\" rel=\"nofollow\">molily's tests (2010)</a>,</p>\n\n<ul>\n<li>IE and Firefox blocked all subsequent script execution until stylesheets loaded</li>\n<li>Webkit blocked subsequent execution only for external scripts (<code>&lt;script src&gt;</code>)</li>\n<li>Opera did not block subsequent execution for any scripts</li>\n</ul>\n\n<p>I don't know the recent browser behavior. <a href=\"http://caniuse.com/#search=DOMContentLoaded\" rel=\"nofollow\">caniuse doesn't yet show DOMContentLoaded support</a> but they might if you <a href=\"http://www.google.com/moderator/#9/e=ae425&amp;g=DOMContentLoaded\" rel=\"nofollow\">vote for it</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I've got a script executing on $(document).ready() that's supposed to vertically align block element in my layout. 90% of the time, it works without issue. However, for that extra 10% one of two things happens:</p>\n\n<ul>\n<li><p>There's an obvious lag in the time it takes to do the centering, and the block elements jump into position. This could simply be performance related - as the page size is often large and there is a fair amount of javascript that is executing at once.</p></li>\n<li><p>The centering will completely mess up, and the block element will either pushed down too far or not far enough. It appears as if it tried to calculate the height, but was getting improper measurements.</p></li>\n</ul>\n\n<p>Is there any reason why executing a script on DOM-ready would not have all the correct CSS values injected into the DOM yet? (all CSS is in the <code>&lt;head&gt;</code> via a <code>&lt;link&gt;</code>).</p>\n\n<p>Also, here's the script that's causing the issue (yes, it's been taken straight from <a href=\"http://www.seodenver.com/simple-vertical-align-plugin-for-jquery/\">here</a>):</p>\n\n<pre><code> (function ($) {\n    // VERTICALLY ALIGN FUNCTION\n    $.fn.vAlign = function() {\n      return this.each(function(i) {\n        var ah = $(this).height();\n        var ph = $(this).parent().height();\n        var mh = (ph - ah) / 2;\n        $(this).css('margin-top', mh);\n      });\n    };\n  })(jQuery);\n</code></pre>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1381527562,
            "question_id": 1324568,
            "score": 32,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "Is $(document).ready() also CSS ready?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>WebSockets are <a href=\"http://tools.ietf.org/html/rfc6455\" rel=\"nofollow\">implemented with a protocol</a> that involves <a href=\"http://tools.ietf.org/html/rfc6455#section-1.3\" rel=\"nofollow\">handshake between client and server</a>. I don't imagine they work very much like normal sockets. Read up on the protocol, and get your application to talk it. Alternatively, use an existing WebSocket library, or .Net4.5beta which has a <a href=\"http://msdn.microsoft.com/en-us/library/system.net.websockets.websocket%28v=vs.110%29.aspx\" rel=\"nofollow\">WebSocket API</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<h2>Issue</h2>\n\n<p>Since you are using WebSocket, spender is correct. After recieving the initial data from the WebSocket, you need to send the handshake message from the C# server before any further information can flow.</p>\n\n<pre><code>HTTP/1.1 101 Web Socket Protocol Handshake\nUpgrade: websocket\nConnection: Upgrade\nWebSocket-Origin: example\nWebSocket-Location: something.here\nWebSocket-Protocol: 13\n</code></pre>\n\n<p>Something along those lines.</p>\n\n<p>You can do some more research into how WebSocket works on w3 or google.</p>\n\n<h2>Links and Resources</h2>\n\n<p>Here is a protocol specifcation: <a href=\"http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76#section-1.3\" rel=\"nofollow\">http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76#section-1.3</a></p>\n\n<p><strong>List of working examples:</strong></p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/a/5866975/184746\">http://stackoverflow.com/a/5866975/184746</a></li>\n<li><a href=\"http://stackoverflow.com/a/2212752/184746\">http://stackoverflow.com/a/2212752/184746</a></li>\n<li><a href=\"http://ashishware.com/websocksample.shtml\" rel=\"nofollow\">http://ashishware.com/websocksample.shtml</a></li>\n<li><a href=\"http://www.sencha.com/forum/showthread.php?99842-WebSocket-server-in-C\" rel=\"nofollow\">http://www.sencha.com/forum/showthread.php?99842-WebSocket-server-in-C</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>WebSockets is protocol that relies on TCP streamed connection. Although WebSockets is Message based protocol.</p>\n\n<p>If you want to implement your own protocol then I recommend to use latest and stable specification (for 18/04/12) <a href=\"http://tools.ietf.org/html/rfc6455\">RFC 6455</a>.\nThis specification contains all necessary information regarding handshake and framing. As well most of description on scenarios of behaving from browser side as well as from server side.\nIt is highly recommended to follow what recommendations tells regarding server side during implementing of your code.</p>\n\n<p>In few words, I would describe working with WebSockets like this:</p>\n\n<ol>\n<li><p><strong>Create server Socket</strong> (System.Net.Sockets) bind it to specific port, and keep listening with asynchronous accepting of connections. Something like that:</p>\n\n<pre>Socket serverSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.IP);\nserverSocket.Bind(new IPEndPoint(IPAddress.Any, 8080));\nserverSocket.Listen(128);\nserverSocket.BeginAccept(null, 0, OnAccept, null);</pre></li>\n<li><p>You should have <strong>accepting</strong> function \"OnAccept\" that will implement handshake. In future it has to be in another thread if system is meant to handle huge amount of connections per second.</p>\n\n<pre>private void OnAccept(IAsyncResult result) {\ntry {\n    Socket client = null;\n    if (serverSocket != null && serverSocket.IsBound) {\n        client = serverSocket.EndAccept(result);\n    }\n    if (client != null) {\n        /* Handshaking and managing ClientSocket */\n    }\n} catch(SocketException exception) {\n\n} finally {\n    if (serverSocket != null && serverSocket.IsBound) {\n        serverSocket.BeginAccept(null, 0, OnAccept, null);\n    }\n}\n}</pre></li>\n<li><p>After connection established, you have to do <strong>handshake</strong>. Based on specification <a href=\"http://tools.ietf.org/html/rfc6455#page-6\">1.3 Opening Handshake</a>, after connection established you will receive basic HTTP request with some information. Example:</p>\n\n<pre>GET /chat HTTP/1.1\nHost: server.example.com\nUpgrade: websocket\nConnection: Upgrade\nSec-WebSocket-Key: dGhlIHNhbXBsZSBub25jZQ==\nOrigin: http://example.com\nSec-WebSocket-Protocol: chat, superchat\nSec-WebSocket-Version: 13</pre>\n\n<p>This example is based on version of protocol 13. Bear in mind that older versions have some differences but mostly latest versions are cross-compatible. Different browsers may send you some additional data. For example Browser and OS details, cache and others.</p>\n\n<p>Based on provided handshake details, you have to generate answer lines, they are mostly same, but will contain Accpet-Key, that is based on provided Sec-WebSocket-Key. In specification 1.3 it is described clearly how to generate response key.\nHere is my function I've been using for V13:</p>\n\n<pre>static private string guid = \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\";\nprivate string AcceptKey(ref string key) {\n    string longKey = key + guid;\n    SHA1 sha1 = SHA1CryptoServiceProvider.Create();\n    byte[] hashBytes = sha1.ComputeHash(System.Text.Encoding.ASCII.GetBytes(longKey));\n    return Convert.ToBase64String(hashBytes);\n}\n</pre>\n\n<p>Handshake answer looks like that:</p>\n\n<pre>HTTP/1.1 101 Switching Protocols\nUpgrade: websocket\nConnection: Upgrade\nSec-WebSocket-Accept: s3pPLMBiTxaQ9kYGzzhZRbK+xOo=</pre>\n\n<p>But accept key have to be the generated one based on provided key from client and method AcceptKey I provided before. As well, make sure after last character of accept key you put two new lines \"\\r\\n\\r\\n\".</p></li>\n<li>After handshake answer is sent from server, client should trigger \"<strong>onopen</strong>\" function, that means you can send messages after.</li>\n<li>Messages are not sent in raw format, but they have <strong>Data Framing</strong>. And from client to server as well implement masking for data based on provided 4 bytes in message header. Although from server to client you don't need to apply masking over data. Read section <a href=\"http://tools.ietf.org/html/rfc6455#page-27\">5. Data Framing</a> in specification.\nHere is copy-paste from my own implementation. It is not ready-to-use code, and have to be modified, I am posting it just to give an idea and overall logic of read/write with WebSocket framing. Go to <a href=\"http://moka.me.uk/files/wsreadwrite.txt\">this link</a>.</li>\n<li>After framing is implemented, make sure that you receive data right way using sockets. For example to prevent that some messages get merged into one, because TCP is still stream based protocol. That means you have to read ONLY specific amount of bytes. Length of message is always based on header and provided data length details in header it self. So when you receiving data from Socket, first receive 2 bytes, get details from header based on Framing specification, then if mask provided another 4 bytes, and then length that might be 1, 4 or 8 bytes based on length of data. And after data it self. After you read it, apply demasking and your message data is ready to use.</li>\n<li>You might want to use some <strong>Data Protocol</strong>, I recommend to use JSON due traffic economy and easy to use on client side in JavaScript. For server side you might want to check some of parsers. There is lots of them, google can be really helpful.</li>\n</ol>\n\n<p>Implementing own WebSockets protocol definitely have some benefits and great experience you get as well as control over protocol it self. But you have to spend some time doing it, and make sure that implementation is highly reliable.</p>\n\n<p>In same time you might have a look in ready to use solutions that google (again) have enough.</p>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<hr>\n\n<hr>\n\n<h2>Edit  3 ----  \"Able to send data now!!!, Deleted old examples...\"</h2>\n\n<hr>\n\n<hr>\n\n<p>This is my new version of the program thanks to your answers and the code of @Maksims Mihejevs. </p>\n\n<h2>Server</h2>\n\n<pre><code>using System;\nusing System.Net.Sockets;\nusing System.Net;\nusing System.Security.Cryptography;\nusing System.Threading;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static Socket serverSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.IP);\n        static private string guid = \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\";\n\n        static void Main(string[] args)\n        {            \n            serverSocket.Bind(new IPEndPoint(IPAddress.Any, 8080));\n            serverSocket.Listen(128);\n            serverSocket.BeginAccept(null, 0, OnAccept, null);            \n            Console.Read();\n        }\n\n        private static void OnAccept(IAsyncResult result)\n        {\n            byte[] buffer = new byte[1024];\n            try\n            {\n                Socket client = null;\n                string headerResponse = \"\";\n                if (serverSocket != null &amp;&amp; serverSocket.IsBound)\n                {\n                    client = serverSocket.EndAccept(result);\n                    var i = client.Receive(buffer);\n                    headerResponse = (System.Text.Encoding.UTF8.GetString(buffer)).Substring(0,i);\n                    // write received data to the console\n                    Console.WriteLine(headerResponse);\n\n                }\n                if (client != null)\n                {\n                    /* Handshaking and managing ClientSocket */\n\n                    var key = headerResponse.Replace(\"ey:\", \"`\")\n                              .Split('`')[1]                     // dGhlIHNhbXBsZSBub25jZQ== \\r\\n .......\n                              .Replace(\"\\r\", \"\").Split('\\n')[0]  // dGhlIHNhbXBsZSBub25jZQ==\n                              .Trim();\n\n                    // key should now equal dGhlIHNhbXBsZSBub25jZQ==\n                    var test1 = AcceptKey(ref key);\n\n                    var newLine = \"\\r\\n\";\n\n                    var response = \"HTTP/1.1 101 Switching Protocols\" + newLine\n                         + \"Upgrade: websocket\" + newLine\n                         + \"Connection: Upgrade\" + newLine\n                         + \"Sec-WebSocket-Accept: \" + test1 + newLine + newLine\n                         //+ \"Sec-WebSocket-Protocol: chat, superchat\" + newLine\n                         //+ \"Sec-WebSocket-Version: 13\" + newLine\n                         ;\n\n                    // which one should I use? none of them fires the onopen method\n                    client.Send(System.Text.Encoding.UTF8.GetBytes(response));\n\n                    var i = client.Receive(buffer); // wait for client to send a message\n\n                    // once the message is received decode it in different formats\n                    Console.WriteLine(Convert.ToBase64String(buffer).Substring(0, i));                    \n\n                    Console.WriteLine(\"\\n\\nPress enter to send data to client\");\n                    Console.Read();\n\n                    var subA = SubArray&lt;byte&gt;(buffer, 0, i);\n                    client.Send(subA);\n                    Thread.Sleep(10000);//wait for message to be send\n\n\n                }\n            }\n            catch (SocketException exception)\n            {\n                throw exception;\n            }\n            finally\n            {\n                if (serverSocket != null &amp;&amp; serverSocket.IsBound)\n                {\n                    serverSocket.BeginAccept(null, 0, OnAccept, null);\n                }\n            }\n        }\n\n        public static T[] SubArray&lt;T&gt;(T[] data, int index, int length)\n        {\n            T[] result = new T[length];\n            Array.Copy(data, index, result, 0, length);\n            return result;\n        }\n\n        private static string AcceptKey(ref string key)\n        {\n            string longKey = key + guid;\n            byte[] hashBytes = ComputeHash(longKey);\n            return Convert.ToBase64String(hashBytes);\n        }\n\n        static SHA1 sha1 = SHA1CryptoServiceProvider.Create();\n        private static byte[] ComputeHash(string str)\n        {\n            return sha1.ComputeHash(System.Text.Encoding.ASCII.GetBytes(str));\n        }\n    }\n}\n</code></pre>\n\n<h2>Javascript:</h2>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \n    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        function connect() {\n            var ws = new WebSocket(\"ws://localhost:8080/service\");\n            ws.onopen = function () {\n                alert(\"About to send data\");\n                ws.send(\"Hello World\"); // I WANT TO SEND THIS MESSAGE TO THE SERVER!!!!!!!!\n                alert(\"Message sent!\");\n            };\n\n            ws.onmessage = function (evt) {\n                alert(\"About to receive data\");\n                var received_msg = evt.data;\n                alert(\"Message received = \"+received_msg);\n            };\n            ws.onclose = function () {\n                // websocket is closed.\n                alert(\"Connection is closed...\");\n            };\n        };\n\n\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body style=\"font-size:xx-large\" &gt;\n    &lt;div&gt;\n    &lt;a href=\"#\" onclick=\"connect()\"&gt;Click here to start&lt;/a&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>When I run that code I am able to send and receive data from both the client and the server. The only problem is that the messages are encrypted when they arive to the server. Here are the steps of how the program runs:</p>\n\n<p><img src=\"http://i.stack.imgur.com/44w1l.jpg\" alt=\"enter image description here\"></p>\n\n<p>Note how the message from the client is encrypted. </p>\n",
            "last_activity_date": 1417781312,
            "question_id": 10200910,
            "score": 22,
            "tags": [
                "c#",
                "javascript",
                "websocket"
            ],
            "title": "Create &quot;Hello World&quot; WebSocket example"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can use the jQuery load function:</p>\n\n<pre><code>&lt;div id=\"topBar\"&gt;\n    &lt;a href =\"#\" id=\"load_home\"&gt; HOME &lt;/a&gt;\n&lt;/div&gt;\n&lt;div id =\"content\"&gt;        \n&lt;/div&gt;\n\n&lt;script&gt;\n$(document).ready( function() {\n    $(\"#load_home\").on(\"click\", function() {\n        $(\"#content\").load(\"content.html\");\n    });\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>Sorry.  Edited for the on click instead of on load.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Assuming I'm understanding your question correctly and you want to load the content of home.html into a div without using an outside library such as jQuery, then you might be better off using an iFrame.  </p>\n\n<p>You should be able to style the iFrame like a Div, and load the src on the click event.  Or if you want to get tricky, use a hidden iFrame and pass the results of the src back to the javascript -- this can only be done if you are on the same domain though.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since your looking to load html contents you should try to use an iframe and make sure that your javascript is loaded before the markup that calls the <code>load_home()</code> function</p>\n\n<p><strong>EDIT:</strong> based on your constraints i edited the javascript to use ajax instead of an iframe. try this</p>\n\n<pre><code>function load_home (e) {\n   (e || window.event).preventDefault();\n   var con = document.getElementById('content')\n   ,   xhr = new XMLHttpRequest();\n\n   xhr.onreadystatechange = function (e) { \n    if (xhr.readyState == 4 &amp;&amp; xhr.status == 200) {\n     con.innerHTML = xhr.responseText;\n    }\n   }\n\n xhr.open(\"GET\", \"http://www.yoursite.com/home.html\", true);\n xhr.setRequestHeader('Content-type', 'text/html');\n xhr.send();\n}\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/jpmCz/\">JSFIDDLE</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I finally found the answer of my problem. The solution is </p>\n\n<pre><code> function load_home(){\ndocument.getElementById(\"content\").innerHTML='&lt;object type=\"text/html\" data=\"home.html\" &gt;&lt;/object&gt;';\n}\n</code></pre>\n\n<p>Not</p>\n\n<pre><code>function load_home(){\ndocument.getElementById(\"content\").innerHTML='&lt;object type=\"type/html\" data=\"home.html\" &gt;&lt;/object&gt;';\n}\n</code></pre>\n\n<p>I made a silly mistake while typing.  when I corrected type=\"text/html\" , it works fine in google chrome. :) </p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>When using </p>\n\n<pre><code>$(\"#content\").load(\"content.html\");\n</code></pre>\n\n<p>Then remember that you can not \"debug\" in chrome locally, because XMLHttpRequest cannot load -- This does NOT mean that it does not work, it just means that you need to test your code on same domain aka. your server</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>showhide.html</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n      &lt;script type=\"text/javascript\"&gt;\n        function showHide(switchTextDiv, showHideDiv)\n        {\n          var std = document.getElementById(switchTextDiv);\n          var shd = document.getElementById(showHideDiv);\n          if (shd.style.display == \"block\")\n          {\n            shd.style.display = \"none\";\n            std.innerHTML = \"&lt;span style=\\\"display: block; background-color: yellow\\\"&gt;Show&lt;/span&gt;\"; \n          }\n          else\n          {\n            if (shd.innerHTML.length &lt;= 0)\n            {\n              shd.innerHTML = \"&lt;object width=\\\"100%\\\" height=\\\"100%\\\" type=\\\"text/html\\\" data=\\\"showhide_embedded.html\\\"&gt;&lt;/object&gt;\";\n            }\n            shd.style.display = \"block\";\n            std.innerHTML = \"&lt;span style=\\\"display: block; background-color: yellow\\\"&gt;Hide&lt;/span&gt;\";\n          }\n        }\n      &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n      &lt;a id=\"switchTextDiv1\" href=\"javascript:showHide('switchTextDiv1', 'showHideDiv1')\"&gt;\n        &lt;span style=\"display: block; background-color: yellow\"&gt;Show&lt;/span&gt;\n      &lt;/a&gt;\n      &lt;div id=\"showHideDiv1\" style=\"display: none; width: 100%; height: 300px\"&gt;&lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>showhide_embedded.html</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n      &lt;script type=\"text/javascript\"&gt; \n        function load()\n        {\n          var ts = document.getElementById(\"theString\");\n          ts.scrollIntoView(true);\n        }\n      &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body onload=\"load()\"&gt;\n      &lt;pre&gt;\n        some text 1\n        some text 2\n        some text 3\n        some text 4\n        some text 5\n        &lt;span id=\"theString\" style=\"background-color: yellow\"&gt;some text 6 highlight&lt;/span&gt;\n        some text 7\n        some text 8\n        some text 9\n      &lt;/pre&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I want home.html to load in <code>&lt;div id=\"content\"&gt;</code>.   </p>\n\n<pre><code>&lt;div id=\"topBar\"&gt; &lt;a href =\"#\" onclick=\"load_home()\"&gt; HOME &lt;/a&gt; &lt;/div&gt;\n&lt;div id =\"content\"&gt; &lt;/div&gt;\n&lt;script&gt;\n      function load_home(){\n            document.getElementById(\"content\").innerHTML='&lt;object type=\"type/html\" data=\"home.html\" &gt;&lt;/object&gt;';\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>This works fine when I use Firefox. When I use Google Chrome, it asks for plug-in. How do I get it working in Google Chrome?</p>\n",
            "last_activity_date": 1407616867,
            "question_id": 17636528,
            "score": 14,
            "tags": [
                "javascript",
                "html",
                "google-chrome"
            ],
            "title": "How do I load an HTML page in a &lt;div&gt; using JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I've been fighting with this for a very long time (because of <a href=\"https://github.com/dimsemenov/Magnific-Popup/issues/2\">bug of my plugin</a>) and I've found the way how to get proper height of window in Mobile Safari. </p>\n\n<p>It works correctly no matter what zoom level is without <a href=\"http://www.ethanhackett.com/?blog=window-height-100-on-mobile-safari-coding-solution\">subtracting height of screen with predefined height of status bars</a> (which might change in future). And it works with iOS6 fullscreen mode.</p>\n\n<p>Some tests (on iPhone with screen size 320x480, in landscape mode):</p>\n\n<pre><code>// Returns height of the screen including all toolbars\n// Requires detection of orientation. (320px for our test)\nwindow.orientation === 0 ? screen.height : screen.width\n\n\n// Returns height of the visible area\n// It decreases if you zoom in\nwindow.innerHeight\n\n\n// Returns height of screen minus all toolbars\n// The problem is that it always subtracts it with height of the browser bar, no matter if it present or not\n// In fullscreen mode it always returns 320px. \n// Doesn't change when zoom level is changed.\ndocument.documentElement.clientHeight \n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/Dplmz.jpg\" alt=\"iOS window height\"></p>\n\n<p>Here is how height is detected:</p>\n\n<pre><code>var getIOSWindowHeight = function() {\n    // Get zoom level of mobile Safari\n    // Note, that such zoom detection might not work correctly in other browsers\n    // We use width, instead of height, because there are no vertical toolbars :)\n    var zoomLevel = document.documentElement.clientWidth / window.innerWidth;\n\n    // window.innerHeight returns height of the visible area. \n    // We multiply it by zoom and get out real height.\n    return window.innerHeight * zoomLevel;\n};\n\n// You can also get height of the toolbars that are currently displayed\nvar getHeightOfIOSToolbars = function() {\n    var tH = (window.orientation === 0 ? screen.height : screen.width) -  getIOSWindowHeight();\n    return tH &gt; 1 ? tH : 0;\n};\n</code></pre>\n\n<p>Such technique has only one con: it's not pixel perfect when page is zoomed in (because <code>window.innerHeight</code> always returns rounded value). It also returns incorrect value when you zoom in near top bar. </p>\n\n<p>One year passed since you asked this question, but anyway hope this helps! :)</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>I had a similar problem. It had to do with 2 thing:</p>\n\n<p><strong>Box-sizing CSS3 property:</strong>\nIn the <a href=\"http://api.jquery.com/height/\" rel=\"nofollow\">.height() jQuery documentation</a> I found this:</p>\n\n<blockquote>\n  <p>Note that .height() will always return the content height, regardless of the value of the CSS box-sizing property. As of jQuery 1.8, this may require retrieving the CSS height plus box-sizing property and then subtracting any potential border and padding on each element when the element has box-sizing: border-box. To avoid this penalty, use .css( \"height\" ) rather than .height().</p>\n</blockquote>\n\n<p>This may apply to <code>$('body').height()</code>.</p>\n\n<p><strong>Document ready vs Window.load</strong></p>\n\n<p><code>$(document).ready()</code> is run when the DOM is ready for JS but it's possible that images haven't finished loading yet. Using <code>$(window).load()</code> fixed my problem. <a href=\"http://stackoverflow.com/questions/2853839/jquery-doesnt-return-proper-body-height-on-document-load-their-bug-or-mine\">Read more</a>.</p>\n\n<p>I hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A cross browser solution is set that by jQuery</p>\n\n<p>Use this property:\n<code>$(window).height()</code></p>\n\n<p>This return a int value that represents the size of visible screen height of browser in pixels.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Try this :</p>\n\n<pre><code>var screenHeight = (typeof window.outerHeight != 'undefined')?Math.max(window.outerHeight, $(window).height()):$(window).height()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've run into an odd issue with what appears to be various versions of Webkit browsers. I'm trying to position an element on the center of the screen and to do the calculations, I need to get various dimensions, specifically the height of the body and the height of the screen. In jQuery I've been using:</p>\n\n<pre><code>var bodyHeight = $('body').height();\nvar screenHeight = $(window).height();\n</code></pre>\n\n<p>My page is typically much taller than the actual viewport, so when I 'alert' those variables, bodyHeight should end up being large, while screenHeight should remain constant (height of the browser viewport).</p>\n\n<p>This is true in \n - Firefox\n - Chrome 15 (whoa! When did Chrome get to version 15?)\n - Safari on iOS5</p>\n\n<p>This is NOT working in:\n - Safari on iOS4\n - Safari 5.0.4</p>\n\n<p>On the latter two, <code>$(window).height();</code> always returns the same value as <code>$('body').height()</code></p>\n\n<p>Thinking it was perhaps a jQuery issue, I swapped out the window height for <code>window.outerHeight</code> but that, too, does the same thing, making me think this is actually some sort of webkit problem.</p>\n\n<p>Has anyone ran into this and know of a way around this issue? </p>\n\n<p>To complicate things, I can't seem to replicate this in isolation. For instance: <a href=\"http://jsbin.com/omogap/3\">http://jsbin.com/omogap/3</a> works fine.</p>\n\n<p>I've determined it's not a CSS issue, so perhaps there's other JS wreaking havoc on this particular browser I need to find. </p>\n",
            "last_activity_date": 1405930435,
            "question_id": 8205812,
            "score": 8,
            "tags": [
                "javascript",
                "ios4",
                "webkit",
                "window"
            ],
            "title": "jQuery/JS, iOS 4 and $(document).height() problems"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I'm just jumping into javascript but this post may help you.<br />\n<a href=\"http://dean.edwards.name/weblog/2006/07/enum/\" rel=\"nofollow\">http://dean.edwards.name/weblog/2006/07/enum/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is the best you can do, as far as I know...</p>\n\n<pre><code>var keys = [];\nfor (var k in h)keys.push(k);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I believe you can loop through the properties of the object using for/in, so you could do something like this:</p>\n\n<pre><code>function getKeys(h) {\n  Array keys = new Array();\n  for (var key in h)\n    keys.push(key);\n  return keys;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>Object.prototype.keys = function ()\n{\n  var keys = [];\n  for(var i in this) if (this.hasOwnProperty(i))\n  {\n    keys.push(i);\n  }\n  return keys;\n}\n</code></pre>\n\n<hr>\n\n<p><strong>Edit:</strong> Since this answer has been around for a while I'll leave the above untouched. Anyone reading this should also read Ivan Nevostruev's answer below.</p>\n\n<p>There's no way of making prototype functions non-enumerable which leads to them always turning up in for-in loops that don't use hasOwnProperty. I still think this answer would be ideal if extending the prototype of Object wasn't so messy.</p>\n",
                    "is_accepted": false,
                    "score": 73
                },
                {
                    "body": "<p>I wanted to use the top rated answer above</p>\n\n<pre><code>Object.prototype.keys = function () ...\n</code></pre>\n\n<p>However when using in conjunction with the google maps API v3, google maps is non-functional.</p>\n\n<pre><code>for (var key in h) ...\n</code></pre>\n\n<p>works well.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is function in modern javascript (ECMAScript 5) called <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys</code></a> performing this operation:</p>\n\n<pre><code>var obj = { \"a\" : 1, \"b\" : 2, \"c\" : 3};\nalert(Object.keys(obj)); // will output [\"a\", \"b\", \"c\"]\n</code></pre>\n\n<p>Compatibility details can be found <a href=\"http://kangax.github.com/es5-compat-table/\">here</a>. </p>\n\n<p>On <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys\">Mozilla site</a> there is also a snipped for backward compatibility:</p>\n\n<pre><code>if(!Object.keys) Object.keys = function(o){\n   if (o !== Object(o))\n      throw new TypeError('Object.keys called on non-object');\n   var ret=[],p;\n   for(p in o) if(Object.prototype.hasOwnProperty.call(o,p)) ret.push(p);\n   return ret;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 147
                },
                {
                    "body": "<p>You could use <a href=\"http://documentcloud.github.com/underscore/#keys\">Underscore.js</a>, which is a Javascript utility library.</p>\n\n<pre><code>_.keys({one : 1, two : 2, three : 3}); \n// =&gt; [\"one\", \"two\", \"three\"]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>using jquery you can get the keys like this...</p>\n\n<pre><code>var bobject =  {primary:\"red\",bg:\"maroon\",hilite:\"green\"};\nvar keys = [];\n$.each(bobject, function(key,val){ keys.push(key); });\nconsole.log(keys); // [\"primary\", \"bg\", \"hilite\"]\n</code></pre>\n\n<p>Or -</p>\n\n<pre><code>var bobject =  {primary:\"red\",bg:\"maroon\",hilite:\"green\"};\n$.map(bobject, function(v,k){return k;});\n</code></pre>\n\n<p>thanks to @pimlottc </p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>if you are trying to get the elements only but not the functions then this code can help you</p>\n\n<pre><code>this.getKeys = function() {\n\nvar keys = new Array();\nfor(var key in this) {\n\n    if( typeof this[key] !== 'function') {\n\n        keys.push(key);\n    }\n}\nreturn keys;\n</code></pre>\n\n<p>}</p>\n\n<p>this is part of my implementation of the HashMap and I only want the keys, \"this\" is the hashmap object that contains the keys</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you can use Object.keys</p>\n\n<pre><code>Object.keys(h)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 31
                }
            ],
            "body": "<p>I know in javascript Objects double as hashes but i have been unable to find a built in function to get the keys </p>\n\n<pre><code>var h = {a:'b',c:'d'};\n</code></pre>\n\n<p>I want something like </p>\n\n<pre><code>var k = h.keys() ; // k = ['a','c'];\n</code></pre>\n\n<p>It is simple to write a function myself to iterate over the items and add the keys to an array that I return, but is there a standard cleaner way to do that ?</p>\n\n<p>I keep feeling it must be a simple built in function that I missed but I can't find it!</p>\n",
            "last_activity_date": 1376073932,
            "question_id": 18912,
            "score": 112,
            "tags": [
                "javascript",
                "hash",
                "object",
                "key"
            ],
            "title": "How to find keys of a hash?"
        },
        {
            "answer_count": 16,
            "answers": [
                {
                    "body": "<p>The accepted answer for this question is actually not for the jQuery UI Datepicker.  To change the position of the jQuery UI Datepicker just modify .ui-datepicker in the css file.  The size of the Datepicker can also be changed in this way, just adjust the font size.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Here's what I'm using:</p>\n\n<pre><code>$('input.date').datepicker({\n    beforeShow: function(input, inst)\n    {\n        inst.dpDiv.css({marginTop: -input.offsetHeight + 'px', marginLeft: input.offsetWidth + 'px'});\n    }\n});\n</code></pre>\n\n<p>You may also want to add a bit more to the left margin so it's not right up against the input field.</p>\n",
                    "is_accepted": false,
                    "score": 72
                },
                {
                    "body": "<p>I do it directly in the CSS:</p>\n\n<pre><code>.ui-datepicker { \n  margin-left: 100px;\n  z-index: 1000;\n}\n</code></pre>\n\n<p>My date input fields are all 100px wide. I also added the z-index so the calendar also appears above AJAX popups.</p>\n\n<p>I don't modify the jquery-ui CSS file; I overload the class in my main CSS file, so I can change the theme or update the widget without having to re-enter my specific mods.</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>First I think there should be a <code>afterShowing</code> method in the datepicker object, where you could change the position after jquery has done all its voodoo in the <code>_showDatepicker</code> method. Additionally, a parameter called <code>preferedPosition</code> would be also desirable, so you could set it and jquery modify it in case the dialog is rendered outside the viewport.</p>\n\n<p>There's a \"trick\" to do this last thing. If you study the <code>_showDatepicker</code> method, you will see the use of a private variable <code>$.datepikcer._pos</code>. That variable will be setup if nobody has set it up before. If you modify that variable before showing the dialog, Jquery will take it and will try to allocate the dialog in that position, and if it renders out of the screen, it will adjust it to make sure it is visible. Sounds good, eh?</p>\n\n<p>Problem is; <code>_pos</code> is private, but if you don't mind that. You can:</p>\n\n<pre><code>$('input.date').datepicker({\n    beforeShow: function(input, inst)\n    {\n        $.datepicker._pos = $.datepicker._findPos(input); //this is the default position\n        $.datepicker._pos[0] = whatever; //left\n        $.datepicker._pos[1] = whatever; //top\n    }\n});\n</code></pre>\n\n<p>But be careful of Jquery-ui updates, because a change in the internal implementation of the <code>_showDatepicker</code> might break your code.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I needed to position the datepicker according to a parent div within which my borderless input control resided. To do it, I used the \"position\" utility included in jquery UI core. I did this in the beforeShow event. As others commented above, you can't set the position directly in beforeShow, as the datepicker code will reset the location after finishing the beforeShow function. To get around that, simply set the position using setInterval. The current script will complete, showing the datepicker, and then the repositioning code will run immediately after the datepicker is visible.  Though it should never happen, if the datepicker isn't visible after .5 seconds, the code has a fail-safe to give up and clear the interval.</p>\n\n<pre><code>        beforeShow: function(a, b) {\n            var cnt = 0;\n            var interval = setInterval(function() {\n                cnt++;\n                if (b.dpDiv.is(\":visible\")) {\n                    var parent = b.input.closest(\"div\");\n                    b.dpDiv.position({ my: \"left top\", at: \"left bottom\", of: parent });\n                    clearInterval(interval);\n                } else if (cnt &gt; 50) {\n                    clearInterval(interval);\n                }\n            }, 10);\n        }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here is my variation of Datepicker calendar aligning. </p>\n\n<p>I think that it's pretty nice, because you can control positioning via jQuery UI Position util.</p>\n\n<p>One restriction: jquery.ui.position.js required.</p>\n\n<p>Code:</p>\n\n<pre><code>$('input[name=date]').datepicker(\n    beforeShow: function(input, inst) {\n        // Handle calendar position before showing it.\n        // It's not supported by Datepicker itself (for now) so we need to use its internal variables.\n        var calendar = inst.dpDiv;\n\n        // Dirty hack, but we can't do anything without it (for now, in jQuery UI 1.8.20)\n        setTimeout(function() {\n            calendar.position({\n                my: 'right top',\n                at: 'right bottom',\n                collision: 'none',\n                of: input\n            });\n        }, 1);\n    }\n)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>fix show position problem daterangepicker.jQuery.js</p>\n\n<pre><code>//Original Code\n//show, hide, or toggle rangepicker\n    function showRP() {\n        if (rp.data('state') == 'closed') {\n            rp.data('state', 'open');\n            rp.fadeIn(300);\n            options.onOpen();\n        }\n    }\n\n\n//Fixed\n//show, hide, or toggle rangepicker\n    function showRP() {\n        rp.parent().css('left', rangeInput.offset().left);\n        rp.parent().css('top', rangeInput.offset().top + rangeInput.outerHeight());\n        if (rp.data('state') == 'closed') {\n            rp.data('state', 'open');\n            rp.fadeIn(300);\n            options.onOpen();\n        }\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This works for me:</p>\n\n<pre><code> beforeShow: function(input, inst) {\n     var cal = inst.dpDiv;\n     var top  = $(this).offset().top + $(this).outerHeight();\n     var left = $(this).offset().left;\n     setTimeout(function() {\n        cal.css({\n            'top' : top,\n            'left': left\n        });\n     }, 10);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>bind focusin after using datepicker\nchange css of datepicker`s widget\nwish help</p>\n\n<pre><code>$('input.date').datepicker();\n$('input.date').focusin(function(){\n    $('input.date').datepicker('widget').css({left:\"-=127\"});\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It's also worth noting that if IE falls into quirks mode, your jQuery UI components, and other elements, will be positioned incorrectly.</p>\n\n<p>To make sure you don't fall into quirks mode, make sure you set your doctype correctly to the latest HTML5.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n</code></pre>\n\n<p>Using transitional makes a mess of things. Hopefully this will save someone some time in the future.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This puts the functionality into a method named function, allowing for your code to encapsulate it or for the method to be made a jquery extension. Just used on my code, works perfectly</p>\n\n<pre><code>var nOffsetTop  = /* whatever value, set from wherever */;\nvar nOffsetLeft = /* whatever value, set from wherever */;\n\n$(input).datepicker\n(\n   beforeShow : function(oInput, oInst) \n   { \n      AlterPostion(oInput, oInst, nOffsetTop, nOffsetLeft); \n   }\n);\n\n/* can be converted to extension, or whatever*/\nvar AlterPosition = function(oInput, oItst, nOffsetTop, nOffsetLeft)\n{\n   var divContainer = oInst.dpDiv;\n   var oElem        = $(this);\n       oInput       = $(oInput);\n\n   setTimeout(function() \n   { \n      divContainer.css\n      ({ \n         top  : (nOffsetTop &gt;= 0 ? \"+=\" + nOffsetTop : \"-=\" + (nOffsetTop * -1)), \n         left : (nOffsetTop &gt;= 0 ? \"+=\" + nOffsetLeft : \"-=\" + (nOffsetLeft * -1))\n      }); \n   }, 10);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Within Jquery.UI, just update the _checkOffset function, so that viewHeight is added to offset.top, before offset is returned.  </p>\n\n<pre><code>_checkOffset: function(inst, offset, isFixed) {\n    var dpWidth = inst.dpDiv.outerWidth(),\n    dpHeight = inst.dpDiv.outerHeight(),\n    inputWidth = inst.input ? inst.input.outerWidth() : 0,\n    inputHeight = inst.input ? inst.input.outerHeight() : 0,\n    viewWidth = document.documentElement.clientWidth + (isFixed ? 0 : $(document).scrollLeft()),\n            viewHeight = document.documentElement.clientHeight + (isFixed ? 0 : ($(document).scrollTop()||document.body.scrollTop));\n        offset.left -= (this._get(inst, \"isRTL\") ? (dpWidth - inputWidth) : 0);\n        offset.left -= (isFixed &amp;&amp; offset.left === inst.input.offset().left) ? $(document).scrollLeft() : 0;\n        offset.top -= (isFixed &amp;&amp; offset.top === (inst.input.offset().top + inputHeight)) ? ($(document).scrollTop()||document.body.scrollTop) : 0;\n\n        // now check if datepicker is showing outside window viewport - move to a better place if so.\n        offset.left -= Math.min(offset.left, (offset.left + dpWidth &gt; viewWidth &amp;&amp; viewWidth &gt; dpWidth) ?\n            Math.abs(offset.left + dpWidth - viewWidth) : 0);\n        offset.top -= Math.min(offset.top, (offset.top + dpHeight &gt; viewHeight &amp;&amp; viewHeight &gt; dpHeight) ?\n            Math.abs(dpHeight + inputHeight) : 0);\n**offset.top = offset.top + viewHeight;**\n        return offset;\n    },\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A very simple jquery function.</p>\n\n<pre><code>$(\".datepicker\").focus(function(event){\n                var dim = $(this).offset();\n                $(\"#ui-datepicker-div\").offset({\n                    top     :   dim.top - 180,\n                    left    :   dim.left + 150\n                });\n            });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I spent a ridiculous amount of time trying to figure this problem out for several pages of a new site I'm developing and nothing seemed to work (including any of the various solutions presented above that I implemented.  I'm guessing jQuery has just changed things up enough since they were suggested that the solutions dont' work any longer.  I don't know.  Honestly, I don't understand why there isn't something simple implemented into the jQuery ui to configure this, as it seems to be a fairly large issue with the calendar always popping up at some position considerably far down the page from the input to which it is attached.</p>\n\n<p>Anyhow, I wanted an end solution that was generic enough that I could use it anywhere and it would work. I seem to have finally come to a conclusion that avoids some of the more complicated and jQuery-code-specific answers above:</p>\n\n<p>jsFiddle:  <a href=\"http://jsfiddle.net/mu27tLen/\" rel=\"nofollow\">http://jsfiddle.net/mu27tLen/</a></p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;input type=\"text\" class=\"datePicker\" /&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>positionDatePicker= function(cssToAdd) {\n    /* Remove previous positioner */\n    var oldScript= document.getElementById('datePickerPosition');\n    if(oldScript) oldScript.parentNode.removeChild(oldScript);\n    /* Create new positioner */\n    var newStyle= document.createElement(\"style\");\n    newStyle.type= 'text/css';\n    newStyle.setAttribute('id', 'datePickerPostion');\n    if(newStyle.styleSheet) newStyle.styleSheet.cssText= cssToAdd;\n    else newStyle.appendChild(document.createTextNode(cssToAdd));\n    document.getElementsByTagName(\"head\")[0].appendChild(newStyle);\n}\njQuery(document).ready(function() {\n    /* Initialize date picker elements */\n    var dateInputs= jQuery('input.datePicker');\n    dateInputs.datepicker();\n    dateInputs.datepicker('option', {\n        'dateFormat' : 'mm/dd/yy',\n        'beforeShow' : function(input, inst) {\n            var bodyRect= document.body.getBoundingClientRect();\n            var rect= input.getBoundingClientRect();\n            positionDatePicker('.page #ui-datepicker-div{z-index:100 !important;top:' + (rect.top - bodyRect.top + input.offsetHeight + 2) + 'px !important;}');\n        }\n    }).datepicker('setDate', new Date());\n});\n</code></pre>\n\n<p>Essentially I attach a new style tag to the head prior to every datepicker \"show\" event (deleting the previous one, if present).  This method of doing things gets around a large majority of the issues that I ran into during development.</p>\n\n<p>Tested on Chrome, Firefox, Safari, and IE>8 (as IE8 doesn't work well with jsFiddle and I'm losing my gusto for caring about \n\n<p>I know that this is a mix of jQuery and javascript contexts, but at this point I just don't want to put the effort into converting it to jQuery.  Would be simple, I know.  I'm so done with this thing right now.  Hope someone else can benefit from this solution.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>.ui-datepicker {-ms-transform: translate(100px,100px); -webkit-transform: translate(100px,100px); transform: translate(100px,100px);}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Here is another variation that works well for me, adjust the rect.top + 40, rect.left + 0 to suit your needs:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$(\".datepicker\").datepicker({\r\n    changeMonth: true,\r\n    changeYear: true,\r\n    dateFormat: 'mm/dd/yy',\r\n    beforeShow: function (input, inst) {\r\n        var rect = input.getBoundingClientRect();\r\n        setTimeout(function () {\r\n\t        inst.dpDiv.css({ top: rect.top + 40, left: rect.left + 0 });\r\n        }, 0);\r\n    }\r\n});</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.2/themes/smoothness/jquery-ui.css\"&gt;\r\n&lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\r\n&lt;script src=\"//code.jquery.com/ui/1.11.2/jquery-ui.js\"&gt;&lt;/script&gt;\r\n&lt;form&gt;\r\n&lt;input class=\"datepicker\" name=\"date1\" type=\"text\"&gt;\r\n&lt;input class=\"datepicker\" name=\"date2\" type=\"text\"&gt;\r\n&lt;/form&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Any idea how to get the DatePicker to appear at the end of the associated text box instead of directly below it? What tends to happen is that the text box is towards the bottom of the page and the DatePicker shifts up to account for it and totally covers the text box. If the user wants to type the date instead of pick it, they can't. I'd rather have it appear just after the text box so it doesn't matter how it adjusts vertically.</p>\n\n<p>Any idea how to control the positioning? I didn't see any settings for the widget, and I haven't had any luck tweaking the CSS settings, but I could easily be missing something.</p>\n",
            "last_activity_date": 1421703972,
            "question_id": 662220,
            "score": 59,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "jquery-ui-datepicker"
            ],
            "title": "How to change the pop-up position of the jQuery DatePicker control"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use the <a href=\"http://code.google.com/p/js-hotkeys/\" rel=\"nofollow\">jQuery hotkeys</a> plugin and this code</p>\n\n<pre><code>jQuery(document).bind('keydown', 'shift+enter', \n         function (evt){ \n             $('textarea').val($('#textarea').val() + \"\\n\");// use the right id here\n             return true;\n         }\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think you can do something like this..   </p>\n\n<p><strong>EDIT :</strong> Changed the code to work irrespective of the caret postion</p>\n\n<p>First part of the code is to get the caret position.</p>\n\n<p>Ref: <a href=\"http://stackoverflow.com/questions/263743/how-to-get-cursor-position-in-textarea\">How to get caret position in textarea?</a></p>\n\n<pre><code>function getCaret(el) {\n  if (el.selectionStart) {\n     return el.selectionStart;\n  } else if (document.selection) {\n     el.focus();\n\n   var r = document.selection.createRange();\n   if (r == null) {\n    return 0;\n   }\n\n    var re = el.createTextRange(),\n    rc = re.duplicate();\n    re.moveToBookmark(r.getBookmark());\n    rc.setEndPoint('EndToStart', re);\n\n    return rc.text.length;\n  }  \n  return 0;\n}\n</code></pre>\n\n<p>And then replacing the textarea value accordingly when <kbd>Shift</kbd> + <kbd>Enter</kbd> together , submit the form if <kbd>Enter</kbd> is pressed alone. </p>\n\n<pre><code>$('textarea').keyup(function (event) {\n   if (event.keyCode == 13 &amp;&amp; event.shiftKey) {\n       var content = this.value;\n       var caret = getCaret(this);\n       this.value = content.substring(0,caret)+\n                     \"\\n\"+content.substring(caret,content.length);\n       event.stopPropagation();\n\n  }\n });\n</code></pre>\n\n<p>Here is a <a href=\"http://jsfiddle.net/jishnuap/zYEMv/\">demo</a></p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>First, pressing <kbd>Enter</kbd> inside a textarea does not submit the form unless you have script to make it do that. That's the behaviour the user expects and I'd recommend against changing it. However, if you must do this, the easiest approach would be to find the script that is making <kbd>Enter</kbd> submit the form and change it. The code will have something like</p>\n\n<pre><code>if (evt.keyCode == 13) {\n    form.submit();\n}\n</code></pre>\n\n<p>... and you could just change it to </p>\n\n<pre><code>if (evt.keyCode == 13 &amp;&amp; !evt.shiftKey) {\n    form.submit();\n}\n</code></pre>\n\n<p>If you don't have access to this code for some reason, you need to do the following to make it work in all major browsers even if the caret is not at the end of the text:</p>\n\n<p>jsFiddle: <a href=\"http://jsfiddle.net/zd3gA/1/\">http://jsfiddle.net/zd3gA/1/</a></p>\n\n<p>Code:</p>\n\n<pre><code>function pasteIntoInput(el, text) {\n    el.focus();\n    if (typeof el.selectionStart == \"number\"\n            &amp;&amp; typeof el.selectionEnd == \"number\") {\n        var val = el.value;\n        var selStart = el.selectionStart;\n        el.value = val.slice(0, selStart) + text + val.slice(el.selectionEnd);\n        el.selectionEnd = el.selectionStart = selStart + text.length;\n    } else if (typeof document.selection != \"undefined\") {\n        var textRange = document.selection.createRange();\n        textRange.text = text;\n        textRange.collapse(false);\n        textRange.select();\n    }\n}\n\nfunction handleEnter(evt) {\n    if (evt.keyCode == 13 &amp;&amp; evt.shiftKey) {\n        if (evt.type == \"keypress\") {\n            pasteIntoInput(this, \"\\n\");\n        }\n        evt.preventDefault();\n    }\n}\n\n// Handle both keydown and keypress for Opera, which only allows default\n// key action to be suppressed in keypress\n$(\"#your_textarea_id\").keydown(handleEnter).keypress(handleEnter);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>Why not just</p>\n\n<pre><code>$(\".commentArea\").keypress(function(e) {\n    var textVal = $(this).val();\n    if(e.which == 13 &amp;&amp; e.shiftKey) {\n\n    }\n    else if (e.which == 13) {\n       e.preventDefault(); //Stops enter from creating a new line\n       this.form.submit(); //or ajax submit\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Most of these answers overcomplicate this.  Why not try it this way?</p>\n\n<pre><code>$(\"textarea\").keypress(function(event) {\n        if (event.keyCode == 13 &amp;&amp; !event.shiftKey) {\n         submitForm(); //Submit your form here\n         return false;\n         }\n});\n</code></pre>\n\n<p>No messing around with caret position or shoving line breaks into JS.  Basically, the function will not run if the shift key is being pressed, therefore allowing the enter/return key to perform its normal function.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>Currently, if the person presses <kbd>enter</kbd> inside the text area, the form will submit.<br>\nGood, I want that.</p>\n\n<p>But when they type <kbd>shift</kbd> + <kbd>enter</kbd>, I want the textarea to move to the next line: <code>\\n</code> </p>\n\n<p>How can I do that in <code>JQuery</code> or plain JavaScript as simple as possible?</p>\n",
            "last_activity_date": 1368219238,
            "question_id": 6014702,
            "score": 53,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "How do I detect &quot;shift+enter&quot; and generate a new line in Textarea?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>IIRC Code Behind is compiled serverside and javascript is interpreted client side. This means there is no direct link between the two.</p>\n\n<p>What you can do on the other hand is have the client and server communicate through a nifty tool called AJAX. <a href=\"http://nl.wikipedia.org/wiki/Asynchronous_JavaScript_and_XML\" rel=\"nofollow\">http://nl.wikipedia.org/wiki/Asynchronous_JavaScript_and_XML</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can't call a Javascript function from the CodeBehind, because the CodeBehind file contains the code that executes server side on the web server. Javascript code executes in the web browser on the client side.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You cannot. Codebehind is running on the server while JavaScript is running on the client.</p>\n\n<p>However, you can add <code>&lt;script type=\"text/javascript\"&gt;someFunction();&lt;/script&gt;</code> to your output and thus cause the JS function to be called when the browser is parsing your markup.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can expose C# methods on codebehind pages to be callable via JavaScript by using the <a href=\"http://msdn.microsoft.com/en-us/library/system.web.script.services.scriptmethodattribute.aspx\" rel=\"nofollow\">ScriptMethod attribute</a>.</p>\n\n<p>You cannot call JavaScript from a CodeBehind - that code exists solely on the client.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>C# to JavaScript: you can register script block to run on page like following:</p>\n\n<pre><code>ClientScript.RegisterStartupScript(GetType(),\"hwa\",\"alert('Hello World');\",true);\n</code></pre>\n\n<p>replace <code>alert()</code> part with your function name.</p>\n\n<p>For calling C# method from JavaScript you can use <code>ScriptManager</code> or <code>jQuery</code>. I personally use <code>jQuery</code>. You need to decorate the method that you want to call from JavaScript with <code>WebMethod</code> attribute. For more information regarding calling C# method (called <code>PageMethod</code>) from <code>jQuery</code> you can refer to <a href=\"http://encosia.com/2008/05/29/using-jquery-to-directly-call-aspnet-ajax-page-methods/\">Dave Ward's</a> post.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>You cannot do this directly. Javascript is interpreted by browser and C# by server.\nWhat you can do to call a method from server using javscript is </p>\n\n<ul>\n<li>use webmethod as attribute in target methods. </li>\n<li>add scriptmanager setting EnablePageMethods as true</li>\n<li>add javascript code to call the methods through object PageMethods</li>\n</ul>\n\n<p>Like this:\nstep 1</p>\n\n<pre><code> public partial class Products : System.Web.UI.Page \n   { \n     [System.Web.Services.WebMethod()] \n     [System.Web.Script.Services.ScriptMethod()] \n     public static List&lt;Product&gt; GetProducts(int cateogryID) \n     {\n       // Put your logic here to get the Product list \n     }\n</code></pre>\n\n<p>step 2: adding scriptmanager on the page</p>\n\n<pre><code> &lt;asp:ScriptManager ID=\"ScriptManager1\" runat=\"server\" EnablePageMethods=\"true\" /&gt;\n</code></pre>\n\n<p>step 3: calling the method using javascript</p>\n\n<pre><code>function GetProductsByCategoryID(categoryID)\n{\n    PageMethods.GetProducts(categoryID, OnGetProductsComplete);\n}\n</code></pre>\n\n<p><a href=\"http://geekswithblogs.net/frankw/archive/2008/03/13/asp.net-ajax-callbacks-to-web-methods-in-aspx-pages.aspx\">Take a look at this link.</a></p>\n\n<p>To call a javascript function from server you can use a RegisterStartipScript:</p>\n\n<pre><code>ClientScript.RegisterStartupScript(GetType(),\"id\",\"callMyJSFunction()\",true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This is how I've done it.</p>\n\n<p>HTML markup showing a label and button control is as follows.</p>\n\n<pre><code>&lt;body&gt; \n  &lt;form id=\"form1\" runat=\"server\"&gt; \n  &lt;div&gt; \n    &lt;asp:Label ID=\"lblJavaScript\" runat=\"server\" Text=\"\"&gt;&lt;/asp:Label&gt; \n    &lt;asp:Button ID=\"btnShowDialogue\" runat=\"server\" Text=\"Show Dialogue\" /&gt; \n  &lt;/div&gt; \n  &lt;/form&gt; \n&lt;/body&gt;\n</code></pre>\n\n<p>JavaScript function is here.</p>\n\n<pre><code>&lt;head runat=\"server\"&gt; \n  &lt;title&gt;Calling javascript function from code behind example&lt;/title&gt; \n  &lt;script type=\"text/javascript\"&gt; \n    function showDialogue() { \n      alert(\"this dialogue has been invoked through codebehind.\"); \n    } \n  &lt;/script&gt; \n&lt;/head&gt;\n</code></pre>\n\n<p>Code behind to trigger the JavaScript function is here.</p>\n\n<pre><code>lblJavaScript.Text = \"&lt;script type='text/javascript'&gt;showDialogue();&lt;/script&gt;\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You may try this :</p>\n\n<pre><code>Page.ClientScript.RegisterStartupScript(this.GetType(),\"CallMyFunction\",\"MyFunction()\",true);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p><strong>Calling a JavaScript function from code behind</strong></p>\n\n<p>Step 1 Add your Javascript code</p>\n\n<pre><code>&lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n    function Func() {\n        alert(\"hello!\")\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>Step 2 Add 1 <strong>Script Manager</strong> in your webForm and Add 1 <strong>button</strong> too</p>\n\n<p>Step 3 Add this code in your button click event </p>\n\n<pre><code>ScriptManager.RegisterStartupScript(this.Page, Page.GetType(), \"text\", \"Func()\", true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Another thing you could do is to create a session variable that gets set in the code behind and then check the state of that variable and then run your javascript. The good thing is this will allow you to run your script right where you want to instead of having to figure out if you want it to run in the DOM or globally. </p>\n\n<p>Something like this:\nCode behind:\n        Session(\"newuser\") = \"false\"</p>\n\n<p>In javascript\n            var newuser = '&lt;%=Session(\"newuser\")%>';\n            if (newuser == \"yes\")\n                startTutorial();</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you need to send a value as parameter.</p>\n\n<pre><code>string jsFunc = \"myFunc(\" + MyBackValue + \")\";\nScriptManager.RegisterStartupScript(this.Page, Page.GetType(), \"myJsFn\", jsFunc, true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am new to JavaScript Programming and C# Programming.\nCan someone provide good examples of calling a Javascript function From CodeBehind and ViceVersa.</p>\n\n<p>Thank You</p>\n",
            "last_activity_date": 1414691620,
            "question_id": 5731224,
            "score": 39,
            "tags": [
                "c#",
                "javascript",
                "asp.net"
            ],
            "title": "Calling JavaScript Function From CodeBehind"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You're correct about the scroll bar, it's because the CSS is using the device width, but the JS is using the document width.</p>\n\n<p>What you need to do is measure the viewport width in your JS code instead of using the jQuery width function.</p>\n\n<p>This code is from <a href=\"http://andylangton.co.uk/articles/javascript/get-viewport-size-javascript/\">http://andylangton.co.uk/articles/javascript/get-viewport-size-javascript/</a></p>\n\n<pre><code>function viewport() {\n    var e = window, a = 'inner';\n    if (!('innerWidth' in window )) {\n        a = 'client';\n        e = document.documentElement || document.body;\n    }\n    return { width : e[ a+'Width' ] , height : e[ a+'Height' ] };\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>My experience was that the media query width tracks document.body.clientWidth. Because of a vertical scroll bar coming and going, checking document, window, or viewport().width could cause my Javascript to run late--after the media query rule change, depending on the height of the window.</p>\n\n<p>Checking document.body.clientWidth allowed my script code to execute consistently at the same time the media query rule took effect.</p>\n\n<p>@media (min-width:873px) <code>{</code><br />&nbsp;&nbsp;&nbsp;&nbsp;\n    //some rules<br />\n    }<br />\n...</p>\n\n<p>if ( document.body.clientWidth >= 873) <code>{</code><br>\n    &nbsp;&nbsp;&nbsp;&nbsp;// some code<br />\n    }</p>\n\n<p>The Andy Langton code put me onto this--thanks!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I found following code on <a href=\"http://www.w3schools.com/js/js_window.asp\" rel=\"nofollow\">http://www.w3schools.com/js/js_window.asp</a>:</p>\n\n<pre><code>var w=window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n</code></pre>\n\n<p>Practically its working the same way as the answer in @Michael Bird's answer, but it's more easy to read.</p>\n\n<p><strong>Edit:</strong> I was looking for a method to give exactly the same width as it is used for css media queries. But the suggested one does not work perfect on Safari with scrollbars, sorry. I ended up using modernizr.js in one central function and in the rest of the code I just check if display type is mobile, tablet or desktop. As I am not interested in the width, this works fine for me:</p>\n\n<pre><code>getDisplayType = function () {\n  if (Modernizr.mq('(min-width: 768px)')){\n    return 'desktop';\n  }\n  else if (Modernizr.mq('(min-width: 480px)')){\n    return 'tablet'\n  }\n  return 'mobile';\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Hi i use this little trick to get JS and CSS work together easily on responsive pages  :</p>\n\n<p>Test the visibility of an element displayed or not on CSS @media size condition.\nUsing bootstrap CSS i test visibility of a hidden-xs class element</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var msg = \"a message for U\";\r\n\r\n/* At window load check initial size  */\r\nif ( $('#test-xsmall').is(':hidden')  ) {\r\n  /* This is a CSS Xsmall situation ! */\r\n  msg = \"@media CSS &lt; 768px. JS width = \" + $(window).width() + \" red ! \";\r\n  $('.redthing-on-xsmall').addClass('redthing').html(msg);\r\n\r\n} else {\r\n  /* &gt; 768px according to CSS  */\r\n  msg = \"@media CSS &gt; 767px. JS width = \" + $(window).width() + \" not red ! \";\r\n  $('.redthing-on-xsmall').removeClass('redthing').html(msg);\r\n}\r\n\r\n\r\n/* And again when window resize  */\r\n\r\n$(window).on('resize', function() {\r\n  if ($('#test-xsmall').is(':hidden')) {\r\n    msg = \"@media CSS &lt; 768px. JS width = \" + $(window).width() + \" red ! \";\r\n    $('.redthing-on-xsmall').addClass('redthing').html(msg);\r\n  } else {\r\n    msg = \"@media CSS &gt; 767px. JS width = \" + $(window).width() + \" not red ! \";\r\n    $('.redthing-on-xsmall').removeClass('redthing').html(msg);\r\n  }\r\n});</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>@media (min-width: 768px) {\r\n  .hidden-xs {\r\n    display: block !important;\r\n  }\r\n}\r\n@media (max-width: 767px) {\r\n  .hidden-xs {\r\n    display: none !important;\r\n  }\r\n}\r\n.redthing-on-xsmall {\r\n  /* need a scrollbar to show window width diff between JS and css */\r\n  min-height: 1500px;\r\n}\r\n.redthing {\r\n  color: red;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n\r\n&lt;!-- the CSS managed Element that is tested by JS --&gt; \r\n&lt;!-- class hidden-xs hides on xsmall screens (bootstrap) --&gt;\r\n\r\n&lt;span id=\"test-xsmall\" class=\"hidden-xs\"&gt;THIS ELEMENT IS MANAGED BY CSS  HIDDEN on @media lower than 767px&lt;/span&gt;\r\n\r\n\r\n&lt;!-- the responsive element managed by Jquery  --&gt;\r\n&lt;div class=\"redthing-on-xsmall\"&gt;THIS ELEMENT IS MANAGED BY JQUERY RED on @media max width 767px &lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>For  a responsive template, I have a media querie in my CSS</p>\n\n<pre><code>@media screen and (max-width: 960px) {\n body{\n /*  something */\n background:red;\n }\n}\n</code></pre>\n\n<p>And I make a jquery function on resize to log width</p>\n\n<pre><code>$(window).resize(function() {\n console.log($(window).width());\n console.log($(document).width()); /* same result */\n /* something for my js navigation */\n}\n</code></pre>\n\n<p>And there a difference with css detection and js result, I have this meta</p>\n\n<pre><code>&lt;meta content=\"user-scalable=no, initial-scale=1.0, maximum-scale=1.0, width=device-width\" name=\"viewport\"/&gt; \n</code></pre>\n\n<p>I suppose it's due to the scrollbar (15 px), so how I can do it better ?</p>\n\n<p>Sorry if this is a duplicate question but I don't find where is my mistake. </p>\n",
            "last_activity_date": 1420566011,
            "question_id": 11309859,
            "score": 32,
            "tags": [
                "javascript",
                "jquery",
                "media-queries"
            ],
            "title": "CSS media queries and JavaScript window width do not match"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You can probably do this better after setting HTML into a DOM node. Once the browser has parsed everything and built a DOM tree out of our markup, you can do a DOM walk and for every text node that you find, either remove it completely if it has no non-whitespace characters, or trim whitespace off the start and end of it if it does.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could <code>$.trim(widgetHTML);</code> to get read of the surrounding whitespace.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I think this will do it...</p>\n\n<pre><code>cleanWhitespace: function(element) {\n element = $(element);\n for (var i = 0; i &lt; element.childNodes.length; i++) {\n   var node = element.childNodes[i];\n   if (node.nodeType == 3 &amp;&amp; !/\\S/.test(node.nodeValue))\n     Element.remove(node);\n }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>I tried the technique that user76888 laid out and it worked nicely. I packaged it into a jQuery plugin for convenience, and thought the community might enjoy it, so here:</p>\n\n<pre><code>jQuery.fn.cleanWhitespace = function() {\n    textNodes = this.contents().filter(\n        function() { return (this.nodeType == 3 &amp;&amp; !/\\S/.test(this.nodeValue)); })\n        .remove();\n    return this;\n}\n</code></pre>\n\n<p>To use this, just include it in a script tag, then select a tag to clean with jQuery and call the function like so:</p>\n\n<pre><code>$('#widget').cleanWhitespace();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>A recursive version:</p>\n\n<pre><code>jQuery.fn.htmlClean = function() {\n    this.contents().filter(function() {\n        if (this.nodeType != 3) {\n            $(this).htmlClean();\n            return false;\n        }\n        else {\n            this.textContent = $.trim(this.textContent);\n            return !/\\S/.test(this.nodeValue);\n        }\n    }).remove();\n    return this;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>This is what worked for me and the step by step discovery:</p>\n\n<p>The output is from chrome console</p>\n\n<p>First locato the parent node containing the nasty whitespace</p>\n\n<pre><code>$('.controls label[class=\"radio\"]').parent();\n\n[&lt;div class=\u200b\"controls\"&gt;\u200b\n&lt;label class=\u200b\"radio\"&gt;\u200b\u2026\u200b&lt;/label&gt;\u200b\n\" \"\n\"    \"\n&lt;label class=\u200b\"radio\"&gt;\u200b\u2026\u200b&lt;/label&gt;\u200b\n\" \"\n\"    \"\n&lt;/div&gt;\u200b]\n</code></pre>\n\n<p>You can see this is wrapped in an array from the [] brackets jQuery will always return an array like structure even when a single item has been found.</p>\n\n<p>So to get to the HTMLElement we take the first item in the array at index 0</p>\n\n<pre><code>$('.controls label[class=\"radio\"]').parent()[0];\n\n&lt;div class=\u200b\"controls\"&gt;\u200b\n&lt;label class=\u200b\"radio\"&gt;\u200b\u2026\u200b&lt;/label&gt;\u200b\n\" \"\n\"    \"\n&lt;label class=\u200b\"radio\"&gt;\u200b\u2026\u200b&lt;/label&gt;\u200b\n\" \"\n\"    \"\n&lt;/div&gt;\u200b\n</code></pre>\n\n<p>Note how there are no more [] brackets. The reason we need to do this is because jQuery will ignore whitespace in the dom but HTMLElement won't, look what happens when we access the childNodes property </p>\n\n<pre><code>$('.controls label[class=\"radio\"]').parent()[0].childNodes;\n\n[&lt;label class=\u200b\"radio\"&gt;\u200b\u2026\u200b&lt;/label&gt;\u200b, \n\" \", \n\"    \", \n&lt;label class=\u200b\"radio\"&gt;\u200b\u2026\u200b&lt;/label&gt;\u200b, \n\" \", \n\"    \"]\n</code></pre>\n\n<p>We have an array again, yes you spot the [] brackets but do you see another difference, look at all the commas, which we couldn't get with jQuery.\nThank you HTMLElement but now we can go back to jQuery because I want to use each instead of a for loop, do you agree with me?\nSo lets wrap the array in jQuery and see what happens:</p>\n\n<pre><code>$($('.controls label[class=\"radio\"]').parent()[0].childNodes);\n\n[&lt;label class=\u200b\"radio\"&gt;\u200b\u2026\u200b&lt;/label&gt;\u200b, \n\" \", \n\"    \", \n&lt;label class=\u200b\"radio\"&gt;\u200b\u2026\u200b&lt;/label&gt;\u200b, \n\" \", \n\"    \"]\n</code></pre>\n\n<p>Perfect! we have exactly the same structure still but nnow inside a jQuery object so lets call each and print \"this\" to console to see what we have.</p>\n\n<pre><code>$($('.controls label[class=\"radio\"]').parent()[0].childNodes).each(function () { \n   console.log('|'+$(this).html()+'|');\n});\n\n|&lt;input id=\"gender_f\" name=\"gender\" type=\"radio\" value=\"f\"&gt;Female|\n|undefined|\n|undefined|\n|&lt;input id=\"gender_m\" name=\"gender\" type=\"radio\" value=\"m\" checked=\"\"&gt;Male|\n|undefined|\n|undefined|\n</code></pre>\n\n<p>So we use jQuery to get the html of each element, standard stuff `$(this).html and because we can't see white space lets pad it with a pipe |, good plan but what do we have here? \nAs you can see jQuery is not able to turn the whitespace to html and now we have undefined. But this is even better because where a space might be truthy undefined is definitely falsy =)</p>\n\n<p>So lets get rid of the suckers with jQuery. All we need is <code>$(this).html() || $(this).remove();</code> lets see:</p>\n\n<pre><code>$($('.controls label[class=\"radio\"]').parent()[0].childNodes).each(function () { \n   $(this).html() || $(this).remove();\n});\n\n[&lt;label class=\u200b\"radio\"&gt;\u200b\u2026\u200b&lt;/label&gt;\u200b, \n\" \", \n\"    \", \n&lt;label class=\u200b\"radio\"&gt;\u200b\u2026\u200b&lt;/label&gt;\u200b, \n\" \", \n\"    \"]\n</code></pre>\n\n<p>Oh dear.. but don't fear! Each still returns the previous structure not the one we've changed, lets look at what our initial query returns now.</p>\n\n<pre><code>$('.controls label[class=\"radio\"]').parent();\n\n[&lt;div class=\u200b\"controls\"&gt;\u200b\n&lt;label class=\u200b\"radio\"&gt;\u200b\u2026\u200b&lt;/label&gt;\u200b\n&lt;label class=\u200b\"radio\"&gt;\u200b\u2026\u200b&lt;/label&gt;\u200b\n&lt;/div&gt;\u200b]\n</code></pre>\n\n<p>And Wallah! All sexy and pretty  =)</p>\n\n<h3>So there you have it, how to remove whitespace between elements/tags ala jQuery style.</h3>\n\n<p>nJoy!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had to modify the accepted answer a bit because for some reason chrome didn't want to removeChild() on whitespace nodes. If this happens, you could replace the node with an empty text node like in this example helper function:</p>\n\n<pre><code> var removeWhiteSpaceNodes = function ( parent ) {\n    var nodes = parent.childNodes;\n    for( var i =0, l = nodes.length; i &lt; l; i++ ){\n      if( nodes[i] &amp;&amp; nodes[i].nodeType == 3 &amp;&amp; !/\\S/.test( nodes[i].nodeValue ) ){\n        parent.replaceChild( document.createTextNode(''), nodes[i]  );\n      }else if( nodes[i] ){\n        removeWhiteSpaceNodes( nodes[i] );\n      }\n    }\n  }\n</code></pre>\n\n<p>It takes a node from which you want to remove whitespace and <strong>recursively</strong> replaces all whitespace children with a truly empty textnode. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use</p>\n\n<pre><code>$($.parseHTML(widgetHTML, document, true)).filter(\"*\"),\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Using jQuery, I'd like to remove the whitespace and line breaks between HTML tags.</p>\n\n<pre><code>var widgetHTML = '    &lt;div id=\"widget\"&gt;        &lt;h2&gt;Widget&lt;/h2&gt;&lt;p&gt;Hi.&lt;/p&gt;        &lt;/div&gt;';\n</code></pre>\n\n<p>Should be:</p>\n\n<pre><code>alert(widgetHTML); // &lt;div id=\"widget\"&gt;&lt;h2&gt;Widget&lt;/h2&gt;&lt;p&gt;Hi.&lt;/p&gt;&lt;/div&gt;\n</code></pre>\n\n<p>I think the pattern I will need is:</p>\n\n<pre><code>&gt;[\\s]*&lt;\n</code></pre>\n\n<p>Can this be accomplished without using regex?</p>\n",
            "last_activity_date": 1414513619,
            "question_id": 1539367,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "regex",
                "string",
                "replace"
            ],
            "title": "Remove whitespace and line breaks between HTML elements using jQuery"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Not sure if you can do it with greasemonkey, but if you create an extension then you can use the observer service and the http-on-examine-response observer. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have no experience of Greasemonkey (need to sort that out), but I use Fiddler when debugging this sort of thing.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>How about modifying the XMLHttpRequest.prototype.open or send methods with replacements which set up their own callbacks and call the original methods? The callback can do its thing and then call the callback the original code specified.</p>\n\n<p>In other words:</p>\n\n<pre><code>XMLHttpRequest.prototype.realOpen = XMLHttpRequest.prototype.open;\n\nvar myOpen = function(method, url, async, user, password) {\n    //do whatever mucking around you want here, e.g.\n    //changing the onload callback to your own version\n\n\n    //call original\n    this.realOpen (method, url, async, user, password);\n}  \n\n\n//ensure all XMLHttpRequests use our custom open method\nXMLHttpRequest.prototype.open = myOpen ;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can replace the unsafeWindow.XMLHttpRequest object in the document with a wrapper. A little code (not tested):</p>\n\n<pre><code>var oldFunction = unsafeWindow.XMLHttpRequest;\nunsafeWindow.XMLHttpRequest = function() {\n  alert(\"Hijacked! XHR was constructed.\");\n  var xhr = oldFunction();\n  return {\n    open: function(method, url, async, user, password) {\n      alert(\"Hijacked! xhr.open().\");\n      return xhr.open(method, url, async, user, password);\n    }\n    // TODO: include other xhr methods and properties\n  };\n};\n</code></pre>\n\n<p>But this has one little problem: Greasemonkey scripts execute <em>after</em> a page loads, so the page can use or store the original XMLHttpRequest object during it's load sequence, so requests made before your script executes, or with the real XMLHttpRequest object wouldn't be tracked by your script. No way that I can see to work around this limitation.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's a little snippet that worked in my tests:</p>\n\n<pre><code>(function(open) {\n\n    XMLHttpRequest.prototype.open = function(method, url, async, user, pass) {\n\n        this.addEventListener(\"readystatechange\", function() {\n            console.log(this.readyState);\n        }, false);\n\n        open.call(this, method, url, async, user, pass);\n    };\n\n})(XMLHttpRequest.prototype.open);\n</code></pre>\n\n<p>I've used addEventListener() as Firefox throws an exception if you want to wrap the onreadystatechange property. This way you can have the cake an eat it too.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>I wrote some code for intercepting ajax calls, when writing proxy server. It should work on most of the browsers.</p>\n\n<p>Here it is: \n<a href=\"https://github.com/creotiv/AJAX-calls-intercepter\" rel=\"nofollow\">https://github.com/creotiv/AJAX-calls-intercepter</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I would like to capture the contents of AJAX requests using Greasemonkey.</p>\n\n<p>Does anybody know how to do this?</p>\n",
            "last_activity_date": 1422297661,
            "question_id": 629671,
            "score": 22,
            "tags": [
                "javascript",
                "ajax",
                "greasemonkey"
            ],
            "title": "How can I intercept XMLHttpRequests from a Greasemonkey script?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>silly way:</p>\n\n<pre><code>onclick=\"javascript:CapacityChart();\"\n</code></pre>\n\n<p>You should read about discrete javascript, and use a frameworks bind method to bind callbacks to dom events.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would say it would be better to add the javascript in an un-obtrusive manner...</p>\n\n<p>if using jQuery you could do something like:</p>\n\n<pre><code>&lt;script&gt;\n  $(document).ready(function(){\n    $('#MyButton').click(function(){\n       CapacityChart();\n    });\n  });\n&lt;/script&gt;\n\n&lt;input type=\"button\" value=\"Capacity Chart\" id=\"MyButton\" &gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This looks correct. I guess you defined your function either with a different name or in a context which isn't visible to the button. Please add some code</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There are a few ways to handle events with HTML/DOM.  There's no real right or wrong way but different ways are useful in different situations.  </p>\n\n<p>1: There's defining it in the HTML:</p>\n\n<pre><code>&lt;input id=\"clickMe\" type=\"button\" value=\"clickme\" onclick=\"doFunction();\" /&gt;\n</code></pre>\n\n<p>2: There's adding it to the DOM property for the event in Javascript:</p>\n\n<pre><code>//- Using a function pointer:\ndocument.getElementById(\"clickMe\").onclick = doFunction;\n\n//- Using and anonymous function:\ndocument.getElementById(\"clickMe\").onclick = function () { alert('hello!'); };\n</code></pre>\n\n<p>3: And there's attaching a function to the event handler using Javascript:</p>\n\n<pre><code>var el = document.getElementById(\"clickMe\");\nif (el.addEventListener)\n    el.addEventListener(\"click\", doFunction, false);\nelse if (el.attachEvent)\n    el.attachEvent('onclick', doFunction);\n</code></pre>\n\n<p>Both the second and third methods allow for inline/anonymous functions and both must be declared after the element has been parsed from the document.  The first method isn't valid XHTML because the onclick attribute isn't in the XHTML specification.</p>\n\n<p>The 1st and 2nd methods are mutually exclusive, meaning using one (the 2nd) will override the other (the 1st).  The 3rd method will allow you to attach as many functions as you like to the same event handler, even if the 1st or 2nd method has been used too.</p>\n\n<p>Most likely, the problem lies somewhere in your <code>CapacityChart()</code> function.  After visiting your link and running your script, the CapacityChart() function runs and the two popups are opened (one is closed as per the script).  Where you have the following line:</p>\n\n<pre><code>CapacityWindow.document.write(s);\n</code></pre>\n\n<p>Try the following instead:</p>\n\n<pre><code>CapacityWindow.document.open(\"text/html\");\nCapacityWindow.document.write(s);\nCapacityWindow.document.close();\n</code></pre>\n\n<p><strong>EDIT</strong><br>\nWhen I saw your code I thought you were writing it specifically for IE.  As others have mentioned you will need to replace references to <code>document.all</code> with <code>document.getElementById</code>.  However, you will still have the task of fixing the script after this so I would recommend getting it working in at least IE first as any mistakes you make changing the code to work cross browser could cause even more confusion.  Once it's working in IE it will be easier to tell if it's working in other browsers whilst you're updating the code.</p>\n",
                    "is_accepted": true,
                    "score": 84
                },
                {
                    "body": "<p>One major problem you have is that you're using browser sniffing for no good reason:</p>\n\n<pre><code>if(navigator.appName == 'Netscape')\n    {\n      vesdiameter  = document.forms['Volume'].elements['VesDiameter'].value;\n      // more stuff snipped\n    }\n    else\n    {\n      vesdiameter  = eval(document.all.Volume.VesDiameter.value);\n      // more stuff snipped\n    }\n</code></pre>\n\n<p>I'm on Chrome, so <code>navigator.appName</code> won't be <code>Netscape</code>. Does Chrome support <code>document.all</code>? Maybe, but then again maybe not. And what about other browsers?</p>\n\n<p>The version of the code on the <code>Netscape</code> branch should work on any browser right the way back to Netscape Navigator 2 from 1996, so you should probably just stick with that... except that it won't work (or isn't guaranteed to work) because you haven't specified a <code>name</code> attribute on the <code>input</code> elements, so they won't be added to the form's <code>elements</code> array as named elements:</p>\n\n<pre><code>&lt;input type=\"text\" id=\"VesDiameter\" value=\"0\" size=\"10\" onKeyUp=\"CalcVolume();\"&gt;\n</code></pre>\n\n<p>Either give them a name and use the <code>elements</code> array, or (better) use</p>\n\n<pre><code>var vesdiameter = document.getElementById(\"VesDiameter\").value;\n</code></pre>\n\n<p>which will work on all modern browsers - no branching necessary. Just to be on the safe side, replace that sniffing for a browser version greater than or equal to 4 with a check for <code>getElementById</code> support:</p>\n\n<pre><code>if (document.getElementById) { // NB: no brackets; we're testing for existence of the method, not executing it\n    // do stuff...\n}\n</code></pre>\n\n<p>You probably want to validate your input as well; something like</p>\n\n<pre><code>var vesdiameter = parseFloat(document.getElementById(\"VesDiameter\").value);\nif (isNaN(vesdiameter)) {\n    alert(\"Diameter should be numeric\");\n    return;\n}\n</code></pre>\n\n<p>would help.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Your HTML and the way you call the function from the button look correct.</p>\n\n<p>The problem appears to be in the <code>CapacityCount</code> function.  I'm getting this error in my console on Firefox 3.5: \"document.all is undefined\" on line 759 of bendelcorp.js.</p>\n\n<p>Edit:</p>\n\n<p>Looks like <code>document.all</code> is an IE-only thing and is a nonstandard way of accessing the DOM.  If you use <code>document.getElementById()</code>, it should probably work.  Example: <code>document.getElementById(\"RUnits\").value</code> instead of <code>document.all.Capacity.RUnits.value</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Your code is failing on this line: </p>\n\n<pre><code>var RUnits = Math.abs(document.all.Capacity.RUnits.value);\n</code></pre>\n\n<p>i tried stepping though it with firebug and it fails there.  that should help you figure out the problem.</p>\n\n<p>you have jquery referenced. you might as well use it in all these functions. it'll clean up your code significantly.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am trying to use an html button to call a javascript function.</p>\n\n<p>Here's the code:</p>\n\n<pre><code>&lt;input type=\"button\" value=\"Capacity Chart\" onclick=\"CapacityChart();\"&gt;\n</code></pre>\n\n<p>It doesn't seem to work correctly though. Is there a better way to do this?</p>\n\n<p>Here is the link:<a href=\"http://projectpath.ideapeoplesite.com/bendel/toolscalculators.html\">http://projectpath.ideapeoplesite.com/bendel/toolscalculators.html</a> click on the capacity tab in the bottom left section. The button should generate an alert if the values are not changed and should produce a chart if you enter values.</p>\n",
            "last_activity_date": 1390818373,
            "question_id": 1947263,
            "score": 58,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Using an html button to call a javascript function"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You need to make the object first, then use <code>[]</code> to set it.</p>\n\n<pre><code>var key = \"happyCount\";\nvar obj = {};\nobj[key] = someValueArray;\nmyArray.push(obj);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 132
                },
                {
                    "body": "<p>Try something like this</p>\n\n<pre><code>var yourObject = {};\n\nyourObject[\"yourKey\"] = \"yourValue\";\n\nconsole.log(yourObject );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/2462800/how-to-create-a-dynamic-key-to-be-added-to-a-javascript-object-variable\">How to create a dynamic key to be added to a javascript object variable</a>  </p>\n</blockquote>\n\n\n\n<p>I am building some objects in JavaScript and pushing those objects into an array, I am storing the key I want to use in a variable then creating my objects like so:</p>\n\n<pre><code>var key = \"happyCount\";\nmyArray.push( { key : someValueArray } );\n</code></pre>\n\n<p>but when I try to examine my array of objects for every object the key is <code>\"key\"</code> instead of the value of the variable key. Is there any way to set the value of the key from a variable? </p>\n\n<p>Fiddle for better explanation:\n<a href=\"http://jsfiddle.net/Fr6eY/3/\">http://jsfiddle.net/Fr6eY/3/</a></p>\n",
            "last_activity_date": 1416289465,
            "question_id": 11508463,
            "score": 57,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript set object key by variable"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Look at the <code>responseText</code> property of the request parameter.</p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>Try:</p>\n\n<pre><code>error: function(xhr, status, error) {\n  var err = eval(\"(\" + xhr.responseText + \")\");\n  alert(err.Message);\n}\n</code></pre>\n\n<p>Look also at <a href=\"http://encosia.com/2009/03/04/use-jquery-to-catch-and-display-aspnet-ajax-service-errors/\">this encosia article</a> for proper error handling.</p>\n",
                    "is_accepted": true,
                    "score": 99
                },
                {
                    "body": "<p>you can try it too:  </p>\n\n<pre><code>$(document).ajaxError(\n    function (event, jqXHR, ajaxSettings, thrownError) {\n        alert('[event:' + event + '], [jqXHR:' + jqXHR + '], [ajaxSettings:' + ajaxSettings + '], [thrownError:' + thrownError + '])');\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you're not having a network error, and wanting to surface an error from the backend, for exmple insufficient privileges, server your response with a 200 and an error message. Then in your success handler check data.status == 'error'</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For me, this simply works:</p>\n\n<pre><code>error: function(xhr, status, error) {\n  alert(xhr.responseText);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This is what worked for me</p>\n\n<pre><code>    function showErrorMessage(xhr, status, error) {\n        if (xhr.responseText != \"\") {\n\n            var jsonResponseText = $.parseJSON(xhr.responseText);\n            var jsonResponseStatus = '';\n            var message = '';\n            $.each(jsonResponseText, function(name, val) {\n                if (name == \"ResponseStatus\") {\n                    jsonResponseStatus = $.parseJSON(JSON.stringify(val));\n                     $.each(jsonResponseStatus, function(name2, val2) {\n                         if (name2 == \"Message\") {\n                             message = val2;\n                         }\n                     });\n                }\n            });\n\n            alert(message);\n        }\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am sending an error response to my jQuery.\nHowever, I can not get the response text (in the example below this would be <strong>Gone to the beach</strong>)</p>\n\n<p>The only thing jQuery says is 'error'.</p>\n\n<p>See this example for details:</p>\n\n<p>php</p>\n\n<pre><code>&lt;?\n    header('HTTP/1.1 500 Internal Server Error');\n    print \"Gone to the beach\"\n?&gt;\n</code></pre>\n\n<p>jQuery</p>\n\n<pre><code>$.ajax({\n    type:     \"post\",\n    data:     {id: 0},\n    cache:    false,\n    url:      \"doIt.php\",\n    dataType: \"text\",\n    error: function (request, error) {\n        console.log(arguments);\n        alert(\" Can't do because: \" + error);\n    },\n    success: function () {\n        alert(\" Done ! \");\n    }\n});\n</code></pre>\n\n<p>Now my result ist:</p>\n\n<p>log:</p>\n\n<pre><code> [XMLHttpRequest readyState=4 status=500, \"error\", undefined]\n</code></pre>\n\n<p>alert:</p>\n\n<blockquote>\n  <p>Can't do because: error</p>\n</blockquote>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1423497269,
            "question_id": 1637019,
            "score": 56,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "ajax",
                "error-handling"
            ],
            "title": "How to get the jQuery $.ajax error response text?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I think you are stuck with having to put that JS code in the View. The Razor parser, as far as I know, won't look at .js files, thus anything you have which uses <code>@</code> won't work. PLus, as you have spotted, Javascript itself does not like this <code>@</code> character hanging around for no reason, other then, say, in a string.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You have two options:</p>\n\n<ul>\n<li>Use the value as a <strong>parameter</strong> in the function and wire-up in the view</li>\n<li>Create a namespace (instead of public level variable which is considered bad practice in JS) and set this value at the top of the page and then use it in your js</li>\n</ul>\n\n<p>For example:</p>\n\n<pre><code> var MyCompany = \n {\n   MyProject: {\n                  MyVariable:\"\"\n               }\n  };\n</code></pre>\n\n<p>And then in your view, set it:</p>\n\n<pre><code>MyCompany.MyProject.MyVariable = @....\n</code></pre>\n\n<hr>\n\n<h1>UPDATE</h1>\n\n<p>You might wonder none is any good because of coupling, well it is true, you are coupling js and view. That is why scripts must be oblivious to the location they are running in so it is a <strong>symptom of non-optimum organization of files.</strong></p>\n\n<p>Anyway there is a third option to create a view engine and run the js files against the razor and send the results back. This is cleaner but much slower so not recommended either.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>In order to get the <code>@</code> variable into your .js file you'll have to use a global variable and set the value of that variable from the mvc view that is making use of that .js file.</p>\n\n<p>JavaScript file:</p>\n\n<pre><code>var myValue;\n\nfunction myFunc() {\n  alert(myValue);\n}\n</code></pre>\n\n<p>MVC View file:</p>\n\n<pre><code>&lt;script language=\"text/javascript\"&gt;\n    myValue = @myValueFromModel;\n&lt;/script&gt;\n</code></pre>\n\n<p>Just be sure that any calls to your function happen AFTER the value has been set by the view.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I usually wrap JS needing access to model properties, in functions and then pass the @something in the view. For example</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction MyFunction(somethingPresentInTheView) {\n  alert(somethingPresentInTheView);\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>in the view I add function invocation via (just an example):</p>\n\n<pre><code>&lt;input type='button' onclick=\"MyFunction('@Model.PropertyNeeded')\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Probably this is not the right approach. Considering separation of concerns. You should have a <code>data injector</code> on your <code>JavaScript</code> class and which is in most cases data is <code>JSON</code>.</p>\n\n<p>Create a JS file in your <code>script</code> folder and add this reference to your <code>View</code></p>\n\n<pre><code>&lt;script src=\"@Url.Content(\"~/Scripts/yourJsFile.js\")\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Now, consider a <code>JavaScript</code> literal class in your <code>yourJsFile.js</code>:</p>\n\n<pre><code>var contentSetter = {\n    allData: {},\n    loadData: function (data) {\n        contentSetter.allData = eval('(' + data + ')');\n    },\n    setContentA: function () {\n        $(\"#contentA\").html(allData.contentAData);\n    },\n    setContentB: function () {\n        $(\"#contentB\").html(allData.contentAData);\n    }\n};\n</code></pre>\n\n<p>Also declare a class</p>\n\n<pre><code>public class ContentData\n{\n    public string ContentDataA { get; set }\n    public string ContentDataB { get; set }\n}\n</code></pre>\n\n<p>Now, from your <code>Action</code> do this:</p>\n\n<pre><code>public ActionResult Index() {\n    var contentData = new ContentData();\n    contentData.ContentDataA = \"Hello\";\n    contentData.ContentDataB = \"World\";\n    ViewData.Add(\"contentData\", contentData);\n}\n</code></pre>\n\n<p>And from your view:</p>\n\n<pre><code>&lt;div id=\"contentA\"&gt;&lt;/div&gt;\n&lt;div id=\"contentB\"&gt;&lt;/div&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    contentSetter.loadData('@Json.Encode((ContentData) ViewData[\"contentData\"])');\n    contentSetter.setContentA();\n    contentSetter.setContentB();\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong>One way</strong> to tackle the problem is:</p>\n\n<p>Adding a partial view with the javascript functions to the view.<br>\nThis way you can use the <code>@</code> symbol and all your <code>javascript</code> functions are separated from the view.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Well I've just found a razor engine on nuget that does it! Meaning solves <code>@</code> syntax!<br>\nIt's name is <strong>RazorJS</strong>.</p>\n\n<p><a href=\"http://john.katsiotis.com/blog/razorjs---write-razor-inside-your-javascript-files\">The owner blog and explanations about the package abilities</a><br>\nThe <a href=\"http://nuget.org/List/Packages/RazorJS\">Nuget</a> package  </p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>You could use HTML5 <code>data-*</code> attributes. Let's suppose that you want to perform some action when some DOM element such as a div is clicked. So:</p>\n\n<pre><code>&lt;div id=\"foo\" data-url=\"@Url.Content(\"~/foobar\")\"&gt;Click me&lt;/div&gt;\n</code></pre>\n\n<p>and then in your separate javascript file you could work unobtrusively with the DOM:</p>\n\n<pre><code>$('#foo').click(function() {\n    var url = $(this).data('url');\n    // do something with this url\n});\n</code></pre>\n\n<p>This way you could have a pure separation between markup and script without you ever needing any server side tags in your javascript files.</p>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>I recently blogged about this topic: <a href=\"http://blog.mariusschulz.com/2013/07/07/generating-external-javascript-files-using-partial-razor-views\" rel=\"nofollow\">Generating External JavaScript Files Using Partial Razor Views</a>.</p>\n\n<p>My solution is to use a custom attribute (<code>ExternalJavaScriptFileAttribute</code>) which renders a partial Razor view as is and then returns it without the surrounding <code>&lt;script&gt;</code> tags. That makes it a valid external JavaScript file.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a <code>.csHtml</code>-razor file  with a javascript function that uses the <code>@Url.Content</code> C# function inside for the ajax URL.<br>\nI want to move that function to a <code>.js</code> file referenced from my view.</p>\n\n<p>The problem is that javascript doesn't \"know\" the <code>@</code> symbol and doesn't parse the the C# code.<br>\nIs there a way to reference <code>.js</code> files from view with \"@\" symbol?</p>\n",
            "last_activity_date": 1392393454,
            "question_id": 7902213,
            "score": 41,
            "tags": [
                "c#",
                "javascript",
                "asp.net-mvc",
                "asp.net-mvc-3",
                "razor"
            ],
            "title": "asp.net-mvc: razor &#39;@&#39; symbol in js file"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Instead of $routeChangeStart use $locationChangeStart</p>\n\n<p>Here's the discussion about it from the angularjs guys: <a href=\"https://github.com/angular/angular.js/issues/2109\">https://github.com/angular/angular.js/issues/2109</a></p>\n\n<p>Example:</p>\n\n<pre><code>$scope.$on('$locationChangeStart', function(event) {\n    if ($scope.form.$invalid) {\n       event.preventDefault();\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 91
                },
                {
                    "body": "<p>In case you need to do stop the route from changing in the <code>$routeChangeStart</code> event (i.e. you want to perform some <strong>operation based on the next route</strong>), inject <code>$route</code> and inside <code>$routeChangeStart</code> call:</p>\n\n<pre><code>$route.reload()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A more complete code sample, using <code>\"$locationChangeStart\"</code>:</p>\n\n<pre><code>// assuming you have a module called app, with a \nangular.module('app')\n  .controller(\n    'MyRootController',\n    function($scope, $location, $rootScope, $log) {\n      // your controller initialization here ...\n      $rootScope.$on(\"$locationChangeStart\", function(event, next, current) { \n        $log.info(\"location changing to:\" + next); \n      });\n    }\n  );\n</code></pre>\n\n<p>I'm not completely happy with hooking this up in my root controller (top level controller). If there is a better pattern, I'd love to know. I'm new to angular :-)</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>A solution is to broadcast a 'notAuthorized' event, and catch it in the main scope to re-change the location. I think it is not the best solution, but it worked for me:</p>\n\n<pre><code>myApp.run(['$rootScope', 'LoginService',\n    function ($rootScope, LoginService) {\n        $rootScope.$on('$routeChangeStart', function (event, next, current) {\n            var authorizedRoles = next.data ? next.data.authorizedRoles : null;\n            if (LoginService.isAuthenticated()) {\n                if (!LoginService.isAuthorized(authorizedRoles)) {\n                    $rootScope.$broadcast('notAuthorized');\n                }\n            }\n        });\n    }\n]);\n</code></pre>\n\n<p>and in my Main Controller:</p>\n\n<pre><code>    $scope.$on('notAuthorized', function(){\n        $location.path('/forbidden');\n    });\n</code></pre>\n\n<p>Note: there is some discussion about this problem on angular site, not yet solved:\n<a href=\"https://github.com/angular/angular.js/pull/4192\" rel=\"nofollow\">https://github.com/angular/angular.js/pull/4192</a></p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>To answer the comment, here is more information about the LoginService works. It contains 3 functions: </p>\n\n<ol>\n<li>login() (name is misleading) do a request to the server to get information about the (previously) logged user. There is another login page which just populate the current user state in the server (using SpringSecurity framework). My Web Services are not truely stateless, but I preferred to let that famous framework handle my security .</li>\n<li>isAuthenticated() just search if the client Session is filled with data, which means it has been authenticated before (*)</li>\n<li>isAuthorized() handled access rights (out of scope for this topic).</li>\n</ol>\n\n<p>(*) My Session is populated when the route change. I have overridden then when() method to populate the session when empty.</p>\n\n<p>Here is the code :</p>\n\n<pre><code>services.factory('LoginService', ['$http', 'Session', '$q',\nfunction($http, Session, $q){\n    return {\n        login: function () {\n            var defer = $q.defer();\n            $http({method: 'GET', url: restBaseUrl + '/currentUser'})\n                .success(function (data) {\n                    defer.resolve(data);\n                });\n            return defer.promise;\n        },\n        isAuthenticated: function () {\n            return !!Session.userLogin;\n        },\n        isAuthorized: function (authorizedRoles) {\n            if (!angular.isArray(authorizedRoles)) {\n                authorizedRoles = [authorizedRoles];\n            }\n\n            return (this.isAuthenticated() &amp;&amp;  authorizedRoles.indexOf(Session.userRole) !== -1);\n        }\n    };\n}]);\n\nmyApp.service('Session', ['$rootScope',\n    this.create = function (userId,userLogin, userRole, userMail, userName, userLastName, userLanguage) {\n        //User info\n        this.userId = userId;\n        this.userLogin = userLogin;\n        this.userRole = userRole;\n        this.userMail = userMail;\n        this.userName = userName;\n        this.userLastName = userLastName;\n        this.userLanguage = userLanguage;\n    };\n\n    this.destroy = function () {\n        this.userId = null;\n        this.userLogin = null;\n        this.userRole = null;\n        this.userMail = null;\n        this.userName = null;\n        this.userLastName = null;\n        this.userLanguage = null;\n        sessionStorage.clear();\n    };\n\n    return this;\n}]);\n\nmyApp.config(['$routeProvider', 'USER_ROLES', function ($routeProvider, USER_ROLES) {\n    $routeProvider.accessWhen = function (path, route) {\n        if (route.resolve == null) {\n            route.resolve = {\n                user: ['LoginService','Session',function (LoginService, Session) {\n                    if (!LoginService.isAuthenticated())\n                        return LoginService.login().then(function (data) {\n                            Session.create(data.id, data.login, data.role, data.email, data.firstName, data.lastName, data.language);\n                            return data;\n                        });\n                }]\n            }\n        } else {\n            for (key in route.resolve) {\n                var func = route.resolve[key];\n                route.resolve[key] = ['LoginService','Session','$injector',function (LoginService, Session, $injector) {\n                    if (!LoginService.isAuthenticated())\n                        return LoginService.login().then(function (data) {\n                            Session.create(data.id, data.login, data.role, data.email, data.firstName, data.lastName, data.language);\n                            return func(Session, $injector);\n                        });\n                    else\n                        return func(Session, $injector);\n                }];\n            }\n        }\n    return $routeProvider.when(path, route);\n    };\n\n    //use accessWhen instead of when\n    $routeProvider.\n        accessWhen('/home', {\n            templateUrl: 'partials/dashboard.html',\n            controller: 'DashboardCtrl',\n            data: {authorizedRoles: [USER_ROLES.superAdmin, USER_ROLES.admin, USER_ROLES.system, USER_ROLES.user]},\n            resolve: {nextEvents: function (Session, $injector) {\n                $http = $injector.get('$http');\n                return $http.get(actionBaseUrl + '/devices/nextEvents', {\n                    params: {\n                        userId: Session.userId, batch: {rows: 5, page: 1}\n                    },\n                    isArray: true}).then(function success(response) {\n                    return response.data;\n                });\n            }\n        }\n    })\n    ...\n    .otherwise({\n        redirectTo: '/home'\n    });\n}]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is my solution and it works for me but i don't know if i am on the right way cause i am new to web technologies.</p>\n\n<pre><code>var app = angular.module(\"app\", ['ngRoute', 'ngCookies']);\napp.run(function($rootScope, $location, $cookieStore){\n$rootScope.$on('$routeChangeStart', function(event, route){\n    if (route.mustBeLoggedOn &amp;&amp; angular.isUndefined($cookieStore.get(\"user\"))) {\n        // reload the login route\n        jError(\n             'You must be logged on to visit this page',\n             {\n               autoHide : true,\n               TimeShown : 3000,\n               HorizontalPosition : 'right',\n               VerticalPosition : 'top',\n               onCompleted : function(){ \n               window.location = '#/signIn';\n                 window.setTimeout(function(){\n\n                 }, 3000)\n             }\n        });\n    }\n  });\n});\n\napp.config(function($routeProvider){\n$routeProvider\n    .when(\"/signIn\",{\n        controller: \"SignInController\",\n        templateUrl: \"partials/signIn.html\",\n        mustBeLoggedOn: false\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I cancel route change event in AngularJs?</p>\n\n<p>My current code is</p>\n\n<pre><code>$rootScope.$on(\"$routeChangeStart\", function (event, next, current) {\n\n// do some validation checks\nif(validation checks fails){\n\n    console.log(\"validation failed\");\n\n    window.history.back(); // Cancel Route Change and stay on current page  \n\n}\n});\n</code></pre>\n\n<p>with this even if the validation fails Angular pulls the next template and associated data and then immediately switches back to previous view/route. I don't want angular to pull next template &amp; data if validation fails, ideally there should be no window.history.back(). I even tried event.preventDefault() but no use.</p>\n",
            "last_activity_date": 1417769660,
            "question_id": 16344223,
            "score": 40,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "AngularJs - cancel route change event"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The general rule is that popup blockers will engage if <code>window.open</code> or similar is invoked from javascript that is not invoked by <strong>direct user action</strong>.  That is, you can call <code>window.open</code> in response to a button click without getting hit by the popup blocker, but if you put the same code in a timer event it will be blocked.  Depth of call chain is also a factor - some older browsers only look at the immediate caller, newer browsers can backtrack a little to see if the caller's caller was a mouse click etc.  Keep it as shallow as you can to avoid the popup blockers.</p>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p>Here is a tip from Google on oauth when going through them on the JavaScript API:</p>\n\n<p><a href=\"http://code.google.com/p/google-api-javascript-client/wiki/Authentication\" rel=\"nofollow\">http://code.google.com/p/google-api-javascript-client/wiki/Authentication</a></p>\n\n<p>See the area where it reads:</p>\n\n<p>Setting up Authentication</p>\n\n<p>The client's implementation of OAuth 2.0 uses a popup window to prompt the user to sign-in and approve the application. The first call to gapi.auth.authorize can trigger popup blockers, as it opens the popup window indirectly. To prevent the popup blocker from triggering on auth calls, call gapi.auth.init(callback) when the client loads. The supplied callback will be executed when the library is ready to make auth calls. </p>\n\n<p>I would guess its relating to the real answer above in how it explains if there is an immediate response, it won't trip the popup alarm. The \"gapi.auth.init\" is making it so the api happens immediately.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Based on <a href=\"http://stackoverflow.com/users/775516/jason-sebring\">Jason Sebring</a>'s <a href=\"http://stackoverflow.com/a/10903443/1598477\">very useful tip</a>, and on the stuff covered <a href=\"http://stackoverflow.com/questions/10774211/change-url-of-already-opened-popup\">here</a> and <a href=\"http://www.w3schools.com/jsref/met_win_open.asp\">there</a>, I found a perfect solution for my case:</p>\n\n<p>Pseudo code with Javascript snippets:</p>\n\n<ol>\n<li><p>immediately create a blank popup on user action</p>\n\n<pre><code>var importantStuff = window.open('', '_blank');\n</code></pre></li>\n<li><p>fill it with content when ready (when the AJAX call is returned, for instance)</p>\n\n<pre><code>importantStuff.location.href = 'http://shrib.com';\n</code></pre></li>\n</ol>\n\n<p>In step 1, a nice waiting screen could be displayed. Create it through javascript, or replace the empty URL ('') with an HTML page (<code>http://example.com/waiting.html</code>).</p>\n\n<p>I actually use this solution for a mailto redirection, and it works on all my browsers (windows 7, Android). The <code>_blank</code> bit helps for the mailto redirection to work on mobile, btw.</p>\n\n<p>Your experience? Any way to improve this?</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Is there a set of best-practices or advice to avoid pop up windows being blocked by the different browsers pop-up blockers?</p>\n\n<p>By pop-up I mean windows created by either <code>window.open</code> or <code>window.showModalDialog</code> methods.</p>\n\n<p>Thanks a lot</p>\n\n<blockquote>\n  <p><strong>Edit:</strong></p>\n  \n  <p>I do not plan to bypass the pop-up\n  blockers with hacks. I came to this\n  while developing an OAuth\n  authentication flow purely in\n  javascript and I needed to show the\n  user the \"grant access\" window (I\n  couldn't avoid the pop-up blockers and\n  had to use a different approach).</p>\n</blockquote>\n",
            "last_activity_date": 1406782116,
            "question_id": 2587677,
            "score": 39,
            "tags": [
                "javascript",
                "popup",
                "modal-dialog",
                "popup-blocker"
            ],
            "title": "Avoid Browser Pop-up Blockers"
        },
        {
            "answer_count": 17,
            "answers": [
                {
                    "body": "<pre><code>function array_unique(nav_array) {\n    nav_array = nav_array.sort(function (a, b) { return a*1 - b*1; });      \n    var ret = [nav_array[0]];       \n    // Start loop at 1 as element 0 can never be a duplicate\n    for (var i = 1; i &lt; nav_array.length; i++) { \n        if (nav_array[i-1] !== nav_array[i]) {              \n            ret.push(nav_array[i]);             \n        }       \n    }\n    return ret;     \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function array_unique(arr) {\n    var result = [];\n    for (var i = 0; i &lt; arr.length; i++) {\n        if (result.indexOf(arr[i]) == -1) {\n            result.push(arr[i];\n        }\n    }\n    return result;\n}\n</code></pre>\n\n<p>No built in function. If the product list does not contain the item, add it.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you want to maintain order:</p>\n\n<pre><code>arr = arr.reverse().filter(function (e, i, arr) {\n    return arr.indexOf(e, i+1) === -1;\n}).reverse();\n</code></pre>\n\n<p>Since there's no built-in reverse indexof, I reverse the array, filter out duplicates, then re-reverse it.</p>\n\n<p>The filter function looks for any occurance of the element after the current index (before in the original array). If one is found, it throws out this element.</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>Alternatively, you could use lastindexOf (if you don't care about order):</p>\n\n<pre><code>arr = arr.filter(function (e, i, arr) {\n    return arr.lastIndexOf(e) === i;\n});\n</code></pre>\n\n<p>This will keep unique elements, but only the last occurrance. This means that ['0', '1', '0'] becomes ['1', '0'], not ['0', '1'].</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>Here is an Array Prototype function:</p>\n\n<pre><code>Array.prototype.unique = function() {\n    var unique = [];\n    for (var i = 0; i &lt; this.length; i++) {\n        if (unique.indexOf(this[i]) == -1) {\n            unique.push(this[i]);\n        }\n    }\n    return unique;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>This will work. Try it.</p>\n\n<pre><code>function getUnique(a) {\n  var b = [a[0]], i, j, tmp;\n  for (i = 1; i &lt; a.length; i++) {\n    tmp = 1;\n    for (j = 0; j &lt; b.length; j++) {\n      if (a[i] == b[j]) {\n        tmp = 0;\n        break;\n      }\n    }\n    if (tmp) {\n      b.push(a[i]);\n    }\n  }\n  return b;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There you go! You are welcome!</p>\n\n<pre><code>Array.prototype.unique = function()\n{\n    var tmp = {}, out = [];\n    for(var i = 0, n = this.length; i &lt; n; ++i)\n    {\n        if(!tmp[this[i]]) { tmp[this[i]] = true; out.push(this[i]); }\n    }\n    return out;\n}\n\nvar a = [1,2,2,7,4,1,'a',0,6,9,'a'];\nvar b = a.unique();\nalert(a);\nalert(b);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>No redundant \"return\" array, no ECMA5 (I'm pretty sure!) and simple to read.</p>\n\n<pre><code>function removeDuplicates(target_array) {\n    target_array.sort();\n    var i = 0;\n\n    while(i &lt; target_array.length) {\n        if(target_array[i] === target_array[i+1]) {\n            target_array.splice(i+1,1);\n        }\n        else {\n            i += 1;\n        }\n    }\n    return target_array;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Come on guys! We are in 2013...</p>\n\n<pre><code>var arrayUnique = function(a) {\n    return a.reduce(function(p, c) {\n        if (p.indexOf(c) &lt; 0) p.push(c);\n        return p;\n    }, []);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 80
                },
                {
                    "body": "<p>I like to use this. There is nothing wrong with using the for loop, I just like using the build-in functions. You could even pass in a boolean argument for typecast or non typecast matching, which in that case you would use a for loop (the <code>filter()</code> method/function does typecast matching (===))</p>\n\n<pre><code>Array.prototype.unique =\nfunction()\n{\n    return this.filter(\n        function(val, i, arr)\n        {\n            return (i &lt;= arr.indexOf(val));\n        }\n    );\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>    //\n    Array.prototype.unique =\n    ( function ( _where ) {\n      return function () {\n        for (\n          var\n          i1 = 0,\n          dups;\n          i1 &lt; this.length;\n          i1++\n        ) {\n          if ( ( dups = _where( this, this[i1] ) ).length &gt; 1 ) {\n            for (\n              var\n              i2 = dups.length;\n              --i2;\n              this.splice( dups[i2], 1 )\n            );\n          }\n        }\n        return this;\n      }\n    } )(\n      function ( arr, elem ) {\n        var locs  = [];\n        var tmpi  = arr.indexOf( elem, 0 );\n        while (\n          ( tmpi ^ -1 )\n          &amp;&amp; (\n            locs.push( tmpi ),\n            tmpi = arr.indexOf( elem, tmpi + 1 ), 1\n          )\n        );\n        return locs;\n      }\n    );\n    //\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>Array.prototype.unique =function(){\n    var uniqObj={};\n    for(var i=0;i&lt; this.length;i++){\n      uniqObj[this[i]]=this[i]; \n    }\n    return uniqObj;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>With <a href=\"http://underscorejs.org/#uniq\">underscorejs</a></p>\n\n<pre><code>_.uniq([1, 2, 1, 3, 1, 4]); //=&gt; [1, 2, 3, 4]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can find all kinds of array unique implementations here: </p>\n\n<p><a href=\"http://jsperf.com/distinct-hash-vs-comparison/12\" rel=\"nofollow\">http://jsperf.com/distinct-hash-vs-comparison/12</a></p>\n\n<p><a href=\"http://jsperf.com/array-unique-functional\" rel=\"nofollow\">http://jsperf.com/array-unique-functional</a></p>\n\n<p>I prefer functional styles such as:</p>\n\n<pre><code>var arr = ['lol', 1, 'fdgdfg', 'lol', 'dfgfg', 'car', 1, 'car', 'a', 'blah', 'b', 'c', 'd', '0', '1', '1', '2', '3', '3', '3', 'crazy', 'moot', 'car', 'lol', 1, 'fdgdfg', 'lol', 'dfgfg', 'car', 1, 'car', 'a', 'blah', 'b', 'c', 'd', '0', '1', '1', '2', '3', '3', '3', 'crazy', 'moot', 'car', 'lol', 1, 'fdgdfg'];\n\nvar newarr = arr.reduce(function (prev, cur) {\n    //console.log(prev, cur);\n    if (prev.indexOf(cur) &lt; 0) prev.push(cur);\n    return prev;\n}, []);\n\nvar secarr = arr.filter(function(element, index, array){\n    //console.log(element, array.indexOf(element), index);\n    return array.indexOf(element) &gt;= index;\n});\n\n//reverses the order\nvar thirdarr = arr.filter(function (e, i, arr) {\n    //console.log(e, arr.lastIndexOf(e), i);\n    return arr.lastIndexOf(e) === i;\n});\n\nconsole.log(newarr);\nconsole.log(secarr);\nconsole.log(thirdarr);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Those of you who work with google closure library, have at their disposal <code>goog.array.removeDuplicates</code>, which is the same as unique. It changes the array itself, though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's 2014 now guys, and time complexity still matters!</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>array.filter(function() {\n  var seen = {};\n  return function(element, index, array) {\n    return !(element in seen) &amp;&amp; (seen[element] = 1);\n  };\n}());\n</code></pre>\n\n<p><a href=\"http://jsperf.com/array-filter-unique/13\" rel=\"nofollow\">http://jsperf.com/array-filter-unique/13</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here is the way you can do remove duplicate values from the <strong>Array.</strong></p>\n\n<pre><code>function ArrNoDupe(dupArray) {\n   var temp = {};\n    for (var i = 0; i &lt; dupArray.length; i++) {\n         temp[dupArray[i]] = true;\n         var uniqueArray = [];\n       for (var k in temp)\n           uniqueArray.push(k);\n return uniqueArray;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Another approach is to use an object for initial storage of the array information.  Then convert back.  For example:</p>\n\n<pre><code>var arr = ['0','1','1','2','3','3','3'];\nvar obj = {};\n\nfor(var i in arr) \n    obj[i] = true;\n\narr = [];\nfor(var i in obj) \n    arr.push(i);\n</code></pre>\n\n<p>Variable \"arr\" now contains [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Given a <code>['0','1','1','2','3','3','3']</code> array, the result should be <code>['0','1','2','3']</code>.</p>\n",
            "last_activity_date": 1424814859,
            "question_id": 13486479,
            "score": 29,
            "tags": [
                "javascript",
                "arrays",
                "unique"
            ],
            "title": "How to get an array of unique values from an array containing duplicates in JavaScript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You may well want to use JSON-P instead (see below). First a quick explanation.</p>\n\n<p>The header you've mentioned is from the <a href=\"http://www.w3.org/TR/access-control/\">Cross Origin Resource Sharing</a> standard. Beware that it is <a href=\"http://caniuse.com/#search=cors\">not supported</a> by some browsers people actually use, and on other browsers (Microsoft's, <em>sigh</em>) it requires using a special object (<code>XDomainRequest</code>) rather than the standard <code>XMLHttpRequest</code> that jQuery uses. It also requires that you change server-side resources to explicitly allow the other origin (<code>www.xxxx.com</code>).</p>\n\n<p>To get the JSON data you're requesting, you basically have three options:</p>\n\n<ol>\n<li><p>If possible, you can be maximally-compatible by correcting the location of the files you're loading so they have the same origin as the document you're loading them into. (I assume you must be loading them via Ajax, hence the <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\">Same Origin Policy</a> issue showing up.)</p></li>\n<li><p>Use <a href=\"http://en.wikipedia.org/wiki/JSONP#JSONP\">JSON-P</a>, which isn't subject to the SOP. jQuery has built-in support for it in its <code>ajax</code> call (just set <code>dataType</code> to \"jsonp\" and jQuery will do all the client-side work). This requires server side changes, but not very big ones; basically whatever you have that's generating the JSON response just looks for a query string parameter called \"callback\" and wraps the JSON in JavaScript code that would call that function. E.g., if your current JSON response is:</p>\n\n<pre><code>{\"weather\": \"Dreary start but soon brightening into a fine summer day.\"}\n</code></pre>\n\n<p>Your script would look for the \"callback\" query string parameter (let's say that the parameter's value is \"jsop123\") and wraps that JSON in the syntax for a JavaScript function call:</p>\n\n<pre><code>jsonp123({\"weather\": \"Dreary start but soon brightening into a fine summer day.\"});\n</code></pre>\n\n<p>That's it. JSON-P is <em>very</em> broadly compatible (because it works via JavaScript <code>script</code> tags). JSON-P is only for <code>GET</code>, though, not <code>POST</code> (again because it works via <code>script</code> tags).</p></li>\n<li><p>Use CORS (the mechanism related to the header you quoted). Details in <a href=\"http://www.w3.org/TR/access-control/\">the specification linked above</a>, but basically:</p>\n\n<p>A. The browser will send your server a \"preflight\" message using the <code>OPTIONS</code> HTTP verb (method). It will contain the various headers it would send with the <code>GET</code> or <code>POST</code> as well as the headers \"Origin\", \"Access-Control-Request-Method\" (e.g., <code>GET</code> or <code>POST</code>), and \"Access-Control-Request-Headers\" (the headers it wants to send).</p>\n\n<p>B. Your PHP decides, based on that information, whether the request is okay and if so responds with the \"Access-Control-Allow-Origin\", \"Access-Control-Allow-Methods\", and \"Access-Control-Allow-Headers\" headers with the values it will allow. You don't send any body (page) with that response.</p>\n\n<p>C. The browser will look at your response and see whether it's allowed to send you the actual <code>GET</code> or <code>POST</code>. If so, it will send that request, again with the \"Origin\" and various \"Access-Control-Request-xyz\" headers.</p>\n\n<p>D. Your PHP examines those headers <em>again</em> to make sure they're still okay, and if so responds to the request.</p>\n\n<p>In <strong>pseudo</strong>-code (I haven't done much PHP, so I'm not trying to do PHP syntax here):</p>\n\n<pre><code>// Find out what the request is asking for\ncorsOrigin = get_request_header(\"Origin\")\ncorsMethod = get_request_header(\"Access-Control-Request-Method\")\ncorsHeaders = get_request_header(\"Access-Control-Request-Headers\")\nif corsOrigin is null or \"null\" {\n    // Requests from a `file://` path seem to come through without an\n    // origin or with \"null\" (literally) as the origin.\n    // In my case, for testing, I wanted to allow those and so I output\n    // \"*\", but you may want to go another way.\n    corsOrigin = \"*\"\n}\n\n// Decide whether to accept that request with those headers\n// If so:\n\n// Respond with headers saying what's allowed (here we're just echoing what they\n// asked for, except we may be using \"*\" [all] instead of the actual origin for\n// the \"Access-Control-Allow-Origin\" one)\nset_response_header(\"Access-Control-Allow-Origin\", corsOrigin)\nset_response_header(\"Access-Control-Allow-Methods\", corsMethod)\nset_response_header(\"Access-Control-Allow-Headers\", corsHeaders)\nif the HTTP request method is \"OPTIONS\" {\n    // Done, no body in response to OPTIONS\n    stop\n}\n// Process the GET or POST here; output the body of the response\n</code></pre>\n\n<p>Again stressing that this is pseudo-code.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>It's simple, use $.getJSON() function and in your URL just include </p>\n\n<blockquote>\n  <p>callback=?</p>\n</blockquote>\n\n<p>as a parameter. That will convert the call to JSONP which is necessary to make cross-domain calls. More info: <a href=\"http://api.jquery.com/jQuery.getJSON/\">http://api.jquery.com/jQuery.getJSON/</a></p>\n",
                    "is_accepted": false,
                    "score": 48
                }
            ],
            "body": "<p>I'm jusing jQuery's $.getJSON function to return a short set of json data.</p>\n\n<p>I've got the JS sitting on a url (http://example.com).  I didn't realize, but I was accessing as (http://www.example.com) which kept the JSON from loading.  I followed through console and found that XMLHttpRequest couldn't load due to Access-Control-Allow-Origin.</p>\n\n<p>Now, I've read through, alot of sites just said to use getJSON and that would be the work around, but obviously it didn't work.  Is there something I should change in the headers or in the function?</p>\n\n<p>Help is greatly appreciated it.</p>\n",
            "last_activity_date": 1338748207,
            "question_id": 6396623,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "xmlhttprequest",
                "access-control"
            ],
            "title": "jQuery.getJSON - Access-Control-Allow-Origin Issue"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You need the <code>/g</code> (global) option, like this:</p>\n\n<pre><code>var replaced = str.replace(/ /g, '+');\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/nick_craver/H6Mrt/\">You can give it a try here</a>.  Unlike most other languages, JavaScript, by default, only replaces the first occurrence.</p>\n",
                    "is_accepted": false,
                    "score": 145
                },
                {
                    "body": "<p>Use a regular expression with the <code>g</code> modifier:</p>\n\n<pre><code>var replaced = str.replace(/ /g, '+');\n</code></pre>\n\n<p>From <a href=\"http://www.regular-expressions.info/javascript.html\">Using Regular Expressions with JavaScript and ActionScript</a>:</p>\n\n<blockquote>\n  <p>/g enables \"global\" matching. When using the replace() method, specify this modifier to replace all matches, rather than only the first one. </p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You need to look for some replaceAll option</p>\n\n<pre><code>str = str.replace(/ /g, \"+\");\n</code></pre>\n\n<p>this is a regular expression way of doing a replaceAll.</p>\n\n<pre><code>function ReplaceAll(Source, stringToFind, stringToReplace) {\n    var temp = Source;\n    var index = temp.indexOf(stringToFind);\n\n    while (index != -1) {\n        temp = temp.replace(stringToFind, stringToReplace);\n        index = temp.indexOf(stringToFind);\n    }\n\n    return temp;\n}\n\nString.prototype.ReplaceAll = function (stringToFind, stringToReplace) {\n    var temp = this;\n    var index = temp.indexOf(stringToFind);\n\n    while (index != -1) {\n        temp = temp.replace(stringToFind, stringToReplace);\n        index = temp.indexOf(stringToFind);\n    }\n\n    return temp;\n\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var str = 'a b c';\nvar replaced = str.replace(/\\s/g, '+');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Here's an alternative that doesn't require regex:</p>\n\n<pre><code>var str = 'a b c';\nvar replaced = str.split(' ').join('+');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 102
                },
                {
                    "body": "<p>Do this recursively:</p>\n\n<pre><code>public String replaceSpace(String s){\n    if (s.length() &lt; 2) {\n        if(s.equals(\" \"))\n            return \"+\";\n        else\n            return s;\n    }\n    if (s.charAt(0) == ' ')\n        return \"+\" + replaceSpace(s.substring(1));\n    else\n        return s.substring(0, 1) + replaceSpace(s.substring(1));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use global search in the string. g flag</p>\n\n<pre><code>str.replace(/\\s+/g, '+');\n</code></pre>\n\n<p>source: <a href=\"http://web-design-lessons.com/articles/article/1/Javascript%20Replace%20All%20Instances%20In%20a%20String\">replaceAll function</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<h1>NON BREAKING SPACE ISSUE</h1>\n\n<p>In some browsers </p>\n\n<p>(MSIE \"as usually\" ;-))</p>\n\n<p>replacing space in string ignores the non-breaking space (the 160 char code).</p>\n\n<p>One should always replace like this:</p>\n\n<pre><code>myString.replace(/[ \\u00A0]/, myReplaceString)\n</code></pre>\n\n<p>Very nice detailed explanation:</p>\n\n<p><a href=\"http://www.adamkoch.com/2009/07/25/white-space-and-character-160/\" rel=\"nofollow\">http://www.adamkoch.com/2009/07/25/white-space-and-character-160/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can also do it like </p>\n\n<pre><code>str = str.replace(/\\s/g, \"+\");\n</code></pre>\n\n<p>Have a look to the fiddle: <a href=\"http://jsfiddle.net/aC5ZW/\" rel=\"nofollow\">http://jsfiddle.net/aC5ZW/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a string that contains multiple spaces. I want to replace these with a plus symbol. I thought I could use </p>\n\n<pre><code>var str = 'a b c';\nvar replaced = str.replace(' ', '+');\n</code></pre>\n\n<p>but it only replaces the first occurrance. How can I get it replace all occurrances?</p>\n",
            "last_activity_date": 1405508141,
            "question_id": 3794919,
            "score": 62,
            "tags": [
                "javascript",
                "string"
            ],
            "title": "Replace all spaces in a string with &#39;+&#39;"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>There's no z-index in SVG, objects that are later in the code appear above the first ones. So for your needs, you can move the node to the start of the tree or the end of it.</p>\n\n<p><code>&lt;g&gt;</code> (group) element is a generic container in svg, so they can be layers for you. Just move nodes between the groups to achieve what you need.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<h2>Gimme the Code!</h2>\n\n<pre class=\"lang-js prettyprint-override\"><code>// move element \"on top of\" all others within the same grouping\nel.parentNode.appendChild(el); \n\n// move element \"underneath\" all others within the same grouping\nel.parentNode.insertBefore(el,el.parentNode.firstChild);\n\n// move element \"on top of\" all others in the entire document\nel.ownerSVGElement.appendChild(el); \n\n// move element \"underneath\" all others in the entire document\nel.ownerSVGElement.appendChild(el,el.ownerSVGElement.firstChild); \n</code></pre>\n\n<p>Within Raphael specifically, it's even easier by using <a href=\"http://raphaeljs.com/reference.html#Element.toBack\"><code>toBack()</code></a> and <a href=\"http://raphaeljs.com/reference.html#Element.toFront\"><code>toFront()</code></a>:</p>\n\n<pre><code>raphElement.toBack()  // Move this element below/behind all others\nraphElement.toFront() // Move this element above/in front of all others\n</code></pre>\n\n<h2>Details</h2>\n\n<p>SVG uses a <a href=\"http://www.w3.org/TR/SVG/render.html#PaintersModel\">\"painters model\"</a> when drawing objects: items that appear later in the document are drawn after (on top of) elements that appear earlier in the document. To change the layering of items, you must re-order the elements in the DOM, using <a href=\"http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-184E7107\"><code>appendChild</code></a> or <a href=\"http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-952280727\"><code>insertBefore</code></a> or the like.</p>\n\n<p>You can see an example of this here: <a href=\"http://phrogz.net/SVG/drag_under_transformation.xhtml\">http://phrogz.net/SVG/drag_under_transformation.xhtml</a></p>\n\n<ol>\n<li>Drag the red and blue objects so that they overlap.</li>\n<li>Click on each object and watch it pop to the top. (The yellow circles are intended to always be visible, however.)</li>\n</ol>\n\n<p>The re-ordering of elements on this example is done by lines 93/94 of the source code:</p>\n\n<pre><code>el.addEventListener('mousedown',function(e){\n  el.parentNode.appendChild(el); // move to top\n  ...\n},false);\n</code></pre>\n\n<p>When the mouse is pushed down on an element, it is moved to be the last element of all its siblings, causing it to draw last, \"on top\" of all others.</p>\n",
                    "is_accepted": true,
                    "score": 74
                },
                {
                    "body": "<p>If you're using Raphael, popping elements backwards and forwards is very straightforward:</p>\n\n<pre><code>element.toBack()\nelement.toFront()\n</code></pre>\n\n<p>Here's the <a href=\"http://raphaeljs.com/reference.html#Element.toBack\">relevant documentation</a>.</p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>Actually, I think appendChild() alone will <em>copy</em> the element and not just <em>move</em> it. This may not be a problem but if you want to avoid duplicates I suggest something like this:</p>\n\n<pre><code>el.parentNode.appendChild(el.parentNode.removeChild(el));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you predefine your graphic objects, you can then layer them in different orders as time evolves:</p>\n\n<pre><code>&lt;svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 1000 1000\" width=\"400\" height=\"400\"&gt;\n  &lt;rect x=\"0\" y=\"0\" width=\"1000\" height=\"1000\" fill=\"black\"/&gt;\n  &lt;defs&gt;\n    &lt;rect id=\"a1\" x=\"0\"   y=\"0\"   width=\"500\" height=\"500\" fill=\"red\"/&gt;\n    &lt;rect id=\"a2\" x=\"100\" y=\"100\" width=\"500\" height=\"500\" fill=\"blue\"/&gt;\n  &lt;/defs&gt;\n  &lt;g&gt; \n    &lt;use xlink:href=\"#a1\"/&gt;\n    &lt;use xlink:href=\"#a2\"/&gt;\n    &lt;set attributeName=\"visibility\"  to=\"hidden\" begin=\"2s\"/&gt; \n  &lt;/g&gt;\n  &lt;g visibility=\"hidden\"&gt; \n    &lt;use xlink:href=\"#a2\"/&gt;\n    &lt;use xlink:href=\"#a1\"/&gt;\n    &lt;set attributeName=\"visibility\"  to=\"visible\" begin=\"2s\"/&gt; \n  &lt;/g&gt;\n&lt;/svg&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I haven't tried it yet but <a href=\"http://dev.w3.org/SVG/modules/renderorder/SVGRenderOrder.html\" rel=\"nofollow\">SVG render order</a> looks like it could be a solution. And also 'z-index' is coming, it is already in <a href=\"http://www.w3.org/Graphics/SVG/WG/wiki/Proposals/z-index\" rel=\"nofollow\">proposal</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I reorder Raphael or their underlying SVG elements after creation.\nBetter yet, do something like layers exist in SVG?</p>\n\n<p>Ideally I would like two or more layers in which to place elements at any time; A background and a foreground layer. If that is not an option, popping elements to the front would be ok, and pushing it to the back would be better in this particular case.</p>\n\n<p>Thanks,</p>\n",
            "last_activity_date": 1378997630,
            "question_id": 6566406,
            "score": 57,
            "tags": [
                "javascript",
                "svg",
                "raphael"
            ],
            "title": "SVG re-ordering z-index (Raphael optional)"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You can try performing long running calculations in threads (see <a href=\"http://stackoverflow.com/questions/30036/javascript-and-threads\">http://stackoverflow.com/questions/30036/javascript-and-threads</a>), although they aren't very portable.</p>\n\n<p>You may also try using some Javascript profiler to find performance bottlenecks. <a href=\"http://getfirebug.com/js.html\" rel=\"nofollow\">Firebug</a> supports profiling javascript.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use timeouts.</p>\n\n<p>By putting the content of your loop(s) into separate functions, and calling them from setTimeout() with a timeout of 50 or so, the javascript will yield control of the thread and come back some time later, allowing the UI to get a look-in.</p>\n\n<p>There's a good workthrough <a href=\"http://windyroad.org/2007/03/30/web-apps-the-new-single-threaded-gui/\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>if you can turn your calculation algorithm into something which can be called iteratively, you could release control back the browser at frequent intervals by using <a href=\"https://developer.mozilla.org/En/DOM/window.setTimeout\">setTimeout</a> with a short timeout value.</p>\n\n<p>For example, something like this...</p>\n\n<pre><code>function doCalculation()\n{\n   //do your thing for a short time\n\n   //figure out how complete you are\n   var percent_complete=....\n\n   return percent_complete;\n}\n\nfunction pump()\n{\n   var percent_complete=doCalculation();\n\n   //maybe update a progress meter here!\n\n   //carry on pumping?\n   if (percent_complete&lt;100)\n   {\n      setTimeout(pump, 50);\n   }\n}\n\n//start the calculation\npump();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>I had blogged about <a href=\"http://piecesofrakesh.blogspot.com/2007/10/client-side-performance-optimization-of.html\" rel=\"nofollow\">in-browser performance</a> some time ago, but let me summarize the ones related to the DOM for you here.</p>\n\n<ul>\n<li>Update the DOM as infrequently as possible. Make your changes to in-memory DOM objects and append them only once to the DOM.</li>\n<li>Use innerHTML. It's faster than DOM methods in most browsers.</li>\n<li>Use event delegation instead of regular event handling.</li>\n<li>Know which calls are expensive, and avoid them. For example, in jQuery, $(\"div.className\") will be more expensive than $(\"#someId\").</li>\n</ul>\n\n<p>Then there are some related to JavaScript itself:</p>\n\n<ul>\n<li>Loop as little as possible. If you have one function that collects DOM nodes, and another that processes them, you are looping twice. Instead, pass an anonymous function to the function that collects the nodes, and process the nodes as your are collecting them.</li>\n<li>Use native functionality when possible. For example, forEach iterators.</li>\n<li>Use setTimeout to let the browser breathe once in a while.</li>\n<li>For expensive functions that have idempotent outputs, cache the results so that you don't have to recompute it.</li>\n</ul>\n\n<p>There's some more on my blog (link above).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is still a little bit bleeding edge, but Firefox 3.5 has these things called Web Workers, I'm not sure about their support in other browsers though.</p>\n\n<p>Mr. Resig has an article on them here: <a href=\"http://ejohn.org/blog/web-workers/\" rel=\"nofollow\">http://ejohn.org/blog/web-workers/</a></p>\n\n<p>And the <a href=\"http://www.mozbox.org/pub/simulatedAnnealing/\" rel=\"nofollow\">Simulated Annealing</a> is probably the simplest example of it, if you'll notice the spinning Firefox logo does not freeze up, when the worker threads are doing their requests (thus not freezing the browser).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My experience is that DOM manipulation, especially in IE, is much more of an issue for performance than \"core\" JavaScript (looping, etc.).</p>\n\n<p>If you are building nodes, it is much faster in IE to do so by building an HTML string and then setting innerHTML on a container than by using DOM methods like createElement/appendChild.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could try shortening the code by</p>\n\n<pre><code> $(xmlDoc).find(\"Object\").each(function(arg1) {\n    (function(arg1_received) {\n                setTimeout(function(arg1_received_reached) {\n\n                    //your stuff with the arg1_received_reached goes here \n\n                }(arg1_received), 0)\n            })(arg1)\n}(this));\n</code></pre>\n\n<p>or for \"for\" loops try</p>\n\n<pre><code>for (var i = 0 ; i &lt; 10000 ; i = i + 1) {\n    (function(arg1_received) {\n        setTimeout(function(arg1_received_reached) {\n\n            //your stuff with the arg1_received_reached goes here \n\n        }(arg1_received), 0)\n    })(arg1_to_send)\n}\n</code></pre>\n\n<p>I had the same problem and my customers was reporting this as \"Kill page\" error. But now I juz got a best solution for that. :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have JavaScript which performs a whole lot of calculations as well as reading/writing values from/to the DOM. The page is huge so this often ends up locking the browser for up to a minute (sometimes longer with IE) with 100% CPU usage.</p>\n\n<p>Are there any resources on optimising JavaScript to prevent this from happening (all I can find is how to turn off Firefox's long running script warning)?</p>\n",
            "last_activity_date": 1402644269,
            "question_id": 672732,
            "score": 35,
            "tags": [
                "javascript"
            ],
            "title": "Prevent long running javascript from locking up browser"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Check this link , and last comment , You have to use WebChromeClient for your purpose.</p>\n\n<p><a href=\"http://code.google.com/p/android/issues/detail?id=752\">http://code.google.com/p/android/issues/detail?id=752</a></p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>The following code will work: </p>\n\n<pre><code>private WebView mWebView;\nfinal Activity activity = this;\n\n// private Button b;\n@Override\npublic void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n    mWebView = (WebView) findViewById(R.id.webview);\n    mWebView.getSettings().setJavaScriptEnabled(true);\n    mWebView.getSettings().setDomStorageEnabled(true);\n    mWebView.setWebChromeClient(new WebChromeClient() {\n        public void onProgressChanged(WebView view, int progress) {\n            activity.setProgress(progress * 1000);\n        }\n    });\n\n    mWebView.loadUrl(\"file:///android_asset/raw/NewFile1.html\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>After reading the answers, I derived the most succinct 1 liner answer to be:</p>\n\n<pre><code>mWebView.setWebChromeClient(new WebChromeClient());\n</code></pre>\n\n<p>i.e. by supplying the default WebChromeClient() is enough to get JavaScript <code>alert()</code> to work.</p>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<pre><code>       webView.setWebChromeClient(new WebChromeClient() {\n       @Override\n        public boolean onJsAlert(WebView view, String url, String message, JsResult result) {\n                    return super.onJsAlert(view, url, message, result);\n           }\n   });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>In my application I am using <code>WebView</code> and in that I am using <code>JavaScript alert( )</code> method but its not working, no pop-up appears.</p>\n\n<p>in my manifest file I have added </p>\n\n<pre><code>&lt;uses-permission android:name=\"android.permission.INTERNET\"&gt;&lt;/uses-permission&gt;\n</code></pre>\n\n<p>and in activity file I have added </p>\n\n<pre><code>mWebView = (WebView) findViewById(R.id.webview);\nmWebView.getSettings().setJavaScriptEnabled(true);\nmWebView.loadUrl(\"file:///android_asset/demo.html\");\n</code></pre>\n\n<p>In layout xml file I have added</p>\n\n<pre><code>&lt;WebView \n    android:id=\"@+id/webview\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"fill_parent\"\n/&gt;\n</code></pre>\n\n<p>Any clue how to enable full <code>JavaScript</code> in <code>WebView</code>?</p>\n\n<hr>\n\n<p><strong>Update</strong></p>\n\n<p>Thanks mark<br>\n the <code>alert()</code> method in the <code>html</code> file are working now :) .</p>\n\n<p>Now there are two issues in <code>WebView</code> :<br>\n1: I am using a <code>&lt;textarea&gt;</code> in the html file that i am loading in <code>WebView</code> , and trying to write in Hindi language font in it, but when i try to write Hindi text it displays as symbols (  rectangle symbols like [] ) .</p>\n\n<p>when i do the same in firefox browser on desktop it works fine.\nany clue how to give support for multiple language in <code>textarea</code> in <code>WebView</code> ?</p>\n\n<p>2: When I am clicking submit and trying to open the value of text in <code>alert()</code> method in another java script it doesn't work , does it mean even after using <code>WebChromeClient</code> \nits applicable only for current loaded html page and not <code>javascripts</code> called from that page ? </p>\n",
            "last_activity_date": 1412662923,
            "question_id": 5271898,
            "score": 34,
            "tags": [
                "javascript",
                "android"
            ],
            "title": "JavaScript alert not working in Android WebView"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Try this, noting that the grammar of HTML is too complex for regular expressions to be correct 100% of the time:</p>\n\n<pre><code>var regex = /(&lt;([^&gt;]+)&gt;)/ig\n,   body = \"&lt;p&gt;test&lt;/p&gt;\"\n,   result = body.replace(regex, \"\");\n\nconsole.log(result);\n</code></pre>\n\n<p>If you're willing to use a library such as <a href=\"http://jquery.com\">jQuery</a>, you could simply do this:</p>\n\n<pre><code>console.log($('&lt;p&gt;test&lt;/p&gt;').text());\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p>For a proper HTML sanitizer in JS, see <a href=\"http://code.google.com/p/google-caja/wiki/JsHtmlSanitizer\" rel=\"nofollow\">http://code.google.com/p/google-caja/wiki/JsHtmlSanitizer</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is an old question, but I stumbled across it and thought I'd share the method I used:</p>\n\n<pre><code>var body = '&lt;div id=\"anid\"&gt;some &lt;a href=\"link\"&gt;text&lt;/a&gt;&lt;/div&gt; and some more text';\nvar temp = document.createElement(\"div\");\ntemp.innerHTML = body;\nvar sanitized = temp.textContent || temp.innerText;\n</code></pre>\n\n<p>sanitized will now contain: <code>\"some text and some more text\"</code></p>\n\n<p>Simple, no jQuery needed, and it shouldnt let you down even in more complex cases :)</p>\n\n<p>James</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>my <strong>simple</strong> JavaScript library called FuncJS has a function called \"strip_tags()\" which does the task for you \u2014 without requiring you to enter any regular expressions.</p>\n\n<p>For example, say that you want to remove tags from a sentence - with this function, you can do it simply like this:</p>\n\n<pre><code>strip_tags(\"This string &lt;em&gt;contains&lt;/em&gt; &lt;strong&gt;a lot&lt;/strong&gt; of tags!\");\n</code></pre>\n\n<p>This will produce \"This string contains a lot of tags!\".</p>\n\n<p>For a better understanding, please do read the documentation at <a href=\"http://docs.funcjs.webege.com/strip_tags%28%29.html\" rel=\"nofollow\">http://docs.funcjs.webege.com/strip_tags().html</a>.</p>\n\n<p>Additionally, if you'd like, please provide some feedback through the form. It would be very helpful to me!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>you can use a powerful library for management String which is <a href=\"https://github.com/epeli/underscore.string\" rel=\"nofollow\">undrescore.string.js</a> </p>\n\n<pre><code>_('a &lt;a href=\"#\"&gt;link&lt;/a&gt;').stripTags()\n</code></pre>\n\n<p>=> 'a link'</p>\n\n<pre><code>_('a &lt;a href=\"#\"&gt;link&lt;/a&gt;&lt;script&gt;alert(\"hello world!\")&lt;/script&gt;').stripTags()\n</code></pre>\n\n<p>=> 'a linkalert(\"hello world!\")'</p>\n\n<p>Don't forget to import this lib as following : </p>\n\n<pre><code>        &lt;script src=\"underscore.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n        &lt;script src=\"underscore.string.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\"&gt; _.mixin(_.str.exports())&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The selected answer doesn't always ensure that HTML is stripped, as it's still possible to construct an invalid HTML string through it by crafting a string like the following.</p>\n\n<pre><code>  \"&lt;&lt;h1&gt;h1&gt;foo&lt;&lt;//&lt;/h1&gt;h1/&gt;\"\n</code></pre>\n\n<p>This input will ensure that the stripping assembles a set of tags for you and will result in:</p>\n\n<pre><code>  \"&lt;h1&gt;foo&lt;/h1&gt;\"\n</code></pre>\n\n<p>additionally jquery's text function will strip text not surrounded by tags.</p>\n\n<p>Here's a function that uses jQuery but should be more robust against both of these cases:</p>\n\n<pre><code>var stripHTML = function(s) {\n    var lastString, tmp;\n\n    do {\n        lastString = s;\n        s = $('&lt;div&gt;').html(s).text();\n    } while(lastString !== s) \n\n    return s;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction striptag(){\nvar html = /(&lt;([^&gt;]+)&gt;)/gi;\nfor (i=0; i &lt; arguments.length; i++)\narguments[i].value=arguments[i].value.replace(html, \"\")\n}\n&lt;/script&gt;\n&lt;/head&gt; \n&lt;body&gt;\n       &lt;form name=\"myform\"&gt;\n&lt;textarea class=\"comment\" title=\"comment\" name=comment rows=4 cols=40&gt;&lt;/textarea&gt;&lt;br&gt;\n&lt;input type=\"button\" value=\"Remove HTML Tags\" onClick=\"striptag(this.form.comment)\"&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This worked for me.</p>\n\n<pre><code>   var regex = /(&amp;nbsp;|&lt;([^&gt;]+)&gt;)/ig\n      ,   body = tt\n     ,   result = body.replace(regex, \"\");\n       alert(result);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to remove all the html tags out of a string in Javascript.\nHeres what I have... I can't figure out why its not working....any know what I am doing wrong?</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nvar regex = \"/&lt;(.|\\n)*?&gt;/\";\nvar body = \"&lt;p&gt;test&lt;/p&gt;\";\nvar result = body.replace(regex, \"\");\nalert(result);\n\n&lt;/script&gt;\n</code></pre>\n\n<p>Thanks a lot!</p>\n",
            "last_activity_date": 1410943158,
            "question_id": 1499889,
            "score": 32,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Remove HTML Tags in Javascript with Regex"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Yeah, my previous answer does not work because I didn't pay any attention to your code. :)</p>\n\n<p>The problem is that the anonymous function is a callback function - i.e. getJSON is an async operation that will return at some indeterminate point in time, so even if the scope of the variable were outside of that anonymous function (i.e. a closure), it would not have the value you would think it should:</p>\n\n<pre><code>var studentId = null;\nj.getJSON(url, data, function(result)\n{\n    studentId = result.Something;\n});\n\n// studentId is still null right here, because this line \n// executes before the line that sets its value to result.Something\n</code></pre>\n\n<p>Any code that you want to execute with the value of studentId set by the getJSON call needs to happen either <strong>within</strong> that callback function or <strong>after</strong> the callback executes.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>hmm, if you've serialized an object with the <code>StudentId</code> property then I think that it will be:</p>\n\n<pre><code>var studentId;\nfunction(json) {\n    if (json.length &gt; 0)\n        studentId = json[0].StudentId;\n}\n</code></pre>\n\n<p>But if you're just returning the <code>StudentId</code> itself maybe it's:</p>\n\n<pre><code>var studentId;\nfunction(json) {\n    if (json.length &gt; 0)\n        studentId = json[0];\n}\n</code></pre>\n\n<p>Edit: Or maybe <code>.length</code> isn't even required (I've only returned generic collections in JSON).</p>\n\n<p>Edit #2, this works, I just tested:</p>\n\n<pre><code>var studentId;\njQuery.getJSON(url, data, function(json) {\n    if (json)\n        studentId = json;\n});\n</code></pre>\n\n<p>Edit #3, here's the actual JS I used:</p>\n\n<pre><code>$.ajax({\n    type: \"POST\",\n    url: pageName + \"/GetStudentTest\",\n    contentType: \"application/json; charset=utf-8\",\n    dataType: \"json\",\n    data: \"{id: '\" + someId + \"'}\",\n    success: function(json) {\n        alert(json);\n    }\n});\n</code></pre>\n\n<p>And in the aspx.vb:</p>\n\n<pre><code>&lt;System.Web.Services.WebMethod()&gt; _\n&lt;System.Web.Script.Services.ScriptMethod()&gt; _\nPublic Shared Function GetStudentTest(ByVal id As String) As Integer\n    Return 42\nEnd Function\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>If you wish delegate to other functions you can also extend jquery with the $.fn. notation like so:</p>\n\n<pre>\n<code>\nvar this.studentId = null;\n\n$.getJSON(url, data, \n    function(result){\n      $.fn.delegateJSONResult(result.Something);\n    }\n);\n\n$.fn.delegateJSONResult = function(something){\n  this.studentId = something;\n}\n\n</code>\n</pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>it doesn't seem to work the same way\n  c# does</p>\n</blockquote>\n\n<p>To accomplish scoping similar to C#, disable async operations and set dataType to json:</p>\n\n<pre><code>var mydata = [];\n$.ajax({\n  url: 'data.php',\n  async: false,\n  dataType: 'json',\n  success: function (json) {\n    mydata = json.whatever;\n  }\n});\n\nalert(mydata); // has value of json.whatever\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>Even simpler than all the above. As explained earlier <code>$.getJSON</code> executes async which causes the problem. Instead of refactoring all your code to the <code>$.ajax</code> method just insert the following in the top of your main .js file to disable the async behaviour:</p>\n\n<pre><code> $.ajaxSetup({\n   async: false\n });\n</code></pre>\n\n<p>good luck!</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I want to return StudentId to use elsewhere outside of the scope of the $.getJSON()</p>\n\n<pre><code>j.getJSON(url, data, function(result)\n{\n    var studentId = result.Something;\n});\n\n//use studentId here\n</code></pre>\n\n<p>I would imagine this has to do with scoping, but it doesn't seem to work the same way c# does</p>\n",
            "last_activity_date": 1414836515,
            "question_id": 31129,
            "score": 32,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "return-value"
            ],
            "title": "How can I return a variable from a $.getJSON function"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Use the backslash to escape a character. For example:</p>\n\n<pre><code>/\\\\d/\n</code></pre>\n\n<p>This will match \\d instead of a numeric character</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>With <code>\\</code> you escape special characters</p>\n\n<blockquote>\n  <blockquote>\n    <p>Escapes special characters to literal and literal characters to special.</p>\n    \n    <p>E.g: /(s)/ matches '(s)' while /(\\s)/ matches any whitespace and captures the match.</p>\n  </blockquote>\n</blockquote>\n\n<p><a href=\"http://www.javascriptkit.com/javatutors/redev2.shtml\" rel=\"nofollow\">http://www.javascriptkit.com/javatutors/redev2.shtml</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use the <code>\\</code> character to escape a character that has special meaning inside a regular expression.</p>\n\n<p>To automate it, you could use this:</p>\n\n<pre><code>RegExp.escape = function(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&amp;\");\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 79
                }
            ],
            "body": "<p>I need to escape the regular expression special characters using java script.How can i achieve this?Any help should be appreciated.</p>\n\n<hr>\n\n<p>Thanks for your quick reply.But i need to escape all the special characters of regular expression.I have try by this code,But i can't achieve the result.</p>\n\n<pre><code>RegExp.escape=function(str)\n            {\n                if (!arguments.callee.sRE) {\n                    var specials = [\n                        '/', '.', '*', '+', '?', '|',\n                        '(', ')', '[', ']', '{', '}', '\\\\'\n                    ];\n                    arguments.callee.sRE = new RegExp(\n                    '(\\\\' + specials.join('|\\\\') + ')', 'gim'\n                );\n                }\n                return str.replace(arguments.callee.sRE, '\\\\$1');\n\n            }\n\nfunction regExpFind() {\n            &lt;%--var regex = new RegExp(\"\\\\[munees\\\\]\",\"gim\");--%&gt;\n                    var regex= new RegExp(RegExp.escape(\"[Munees]waran\"));\n                    &lt;%--var regex=RegExp.escape`enter code here`(\"[Munees]waran\");--%&gt;\n                    alert(\"Reg : \"+regex);\n                }\n</code></pre>\n\n<p>What i am wrong with this code?Please guide me.</p>\n",
            "last_activity_date": 1395419791,
            "question_id": 3115150,
            "score": 26,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "How to escape regular expression special characters using javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>AFAIK, it is impossible to communicate across windows if they do not have the same parent.</p>\n\n<p>If they have both been opened from a parent window, you should be able to get hold of the parent's variable references.</p>\n\n<p>In the parent, open the windows like this:</p>\n\n<pre><code>childA = window.open(...);\nchildB = window.open(...)\n</code></pre>\n\n<p>in ChildA, access childB like this:</p>\n\n<pre><code>childB = window.opener.childA\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You said your:</p>\n\n<blockquote>\n  <p>utlimate goal is to make something like facebook where if you open 4 facebook tabs, and chat in one tab, the chat is actualize on every facebook tab, wich is neat!</p>\n</blockquote>\n\n<p>That should happen as a by-product of your design, the views querying the model (probably the server) for updates to the chat, rather than your having to design in cross-view communication. Unless you're dealing with transferring huge amounts of data, why worry about it? It seems like it'll complicate things without a huge gain.</p>\n\n<p>Years ago I found that if I did <code>window.open</code> using the name of an existing window and a blank URL, I got a reference to the existing window (this behavior is even <a href=\"https://developer.mozilla.org/en/DOM/window.open\" rel=\"nofollow\">documented on MDC</a> and a comment on <a href=\"http://msdn.microsoft.com/en-us/library/ms536651%28VS.85%29.aspx\" rel=\"nofollow\">the MSDN docs</a> suggests it works in IE as well). But that was years ago, I don't know how universal the support for it is in today's world, and of course you won't have a window name to look for unless all of your windows include a named <code>iframe</code> for communication, named uniquely via server-side code, and then communicated to the other windows by means of server-side code... (Scary thought: That might actually be feasible. Store the \"current\" window names related to a logged-in account in a table, give the list to any new window created that logs into that account, cull old inactive entries. But if the list is slightly out of date, you'll open new windows when searching for others...  And I bet support is iffy from browser to browser.)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I have a neat way to do such trick, but with restrictions: you should allow popups for your domain and you will get one page always opened (as tab or as popup) which will implement communications between windows.</p>\n\n<p>Here's an example:\n<a href=\"http://test.gwpanel.org/test/page_one.html\" rel=\"nofollow\">http://test.gwpanel.org/test/page_one.html</a>\n(refresh page after enabling popups for domain)</p>\n\n<p>The main feature of this trick - popup is being opened with url fragment '#' in the end, this force browser to don't change window location and store all the data. \nAnd window.postMessage do the rest.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>SharedWorker is the WHATWG/ HTML5 spec for a common process that can communicate amongst tabs. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Besides the upcoming <a href=\"http://caniuse.com/sharedworkers\" rel=\"nofollow\">SharedWorker</a>, you can also use <a href=\"http://ejohn.org/blog/cross-window-messaging/\" rel=\"nofollow\">cross-document messaging</a>, which is much more widely <a href=\"http://caniuse.com/#feat=x-doc-messaging\" rel=\"nofollow\">supported</a>. In this scenario, there must a be a main window that is responsible for opening all other windows with <code>window.open</code>. The child windows can then use <a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.postMessage?redirectlocale=en-US&amp;redirectslug=DOM%3Awindow.postMessage\" rel=\"nofollow\">postMessage</a> on their <code>window.opener</code>. </p>\n\n<p>If using flash is an option for you, there is also the much older <a href=\"http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/net/LocalConnection.html\" rel=\"nofollow\">LocalConnection</a> virtually supported on any client with flash installed (<a href=\"http://stackoverflow.com/questions/4987582/communication-between-windows-tabs-with-javascript\">example code</a>).</p>\n\n<p>Other fallbacks methods:<br />\n<a href=\"http://benalman.com/projects/jquery-postmessage-plugin/\" rel=\"nofollow\">postMessage plugin for jQuery with window.location.href fallback for older browsers</a> <br />\n<a href=\"http://someguyjeremy.com/blog/sending-data-between-tabs\" rel=\"nofollow\">cookie-based solution for non-instant communication</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'm sticking to the shared local data solution mentioned in the question using <code>localStorage</code>. It seems to be the best solution in terms of reliability, efficiency, and browser compatibility.</p>\n\n<p><code>localStorage</code> is implemented in all modern browsers.</p>\n\n<p>The <code>storage</code> event fires when <em>other</em> tabs makes changes to <code>localStorage</code>. This is quite handy for communication purposes.</p>\n\n<p>Reference:<br>\n<a href=\"http://dev.w3.org/html5/webstorage/\">http://dev.w3.org/html5/webstorage/</a><br>\n<a href=\"http://dev.w3.org/html5/webstorage/#the-storage-event\">http://dev.w3.org/html5/webstorage/#the-storage-event</a></p>\n",
                    "is_accepted": true,
                    "score": 34
                }
            ],
            "body": "<p>I have two windows: window A and window B.  </p>\n\n<ul>\n<li>window A and window B have same domain  </li>\n<li>window A and window B doesn't have any parent window.</li>\n</ul>\n\n<p>Questions:</p>\n\n<ol>\n<li>Is it possible for window A to get a reference of window B?  </li>\n<li>what is the most elegant way to make window A notify something to window B?<br>\n(including new HTML5 specs)</li>\n</ol>\n\n<p>Two ways i am aware of doing this:  </p>\n\n<ul>\n<li>messaging by server: where window B regulary asks the server if window A has notified something  </li>\n<li>messaging by local data (HTML5): when window A wants to notify something it changes the local data, window B regulary checks the local data for any changes.  </li>\n</ul>\n\n<p>But the two ways are not so elegant.<br>\nFor example it would be nice to get an reference of window B and use window.postMessage() (HTML5)  </p>\n\n<p>Ultimate goal is to make something like facebook where if you open 4 facebook tabs and chat in one tab, the chat is actualized on every facebook tab, which is neat!</p>\n",
            "last_activity_date": 1380706043,
            "question_id": 2236828,
            "score": 23,
            "tags": [
                "javascript",
                "html5",
                "web-applications",
                "local-storage",
                "postmessage"
            ],
            "title": "Javascript; communication between tabs/windows with same origin"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This is caused by <a href=\"https://developer.mozilla.org/en-US/docs/Using_Firefox_1.5_caching\">back-forward cache</a>. It is supposed to save complete state of page when user navigates away. When user navigates back with back button page can be loaded from cache very quickly. This is different from normal cache which only caches HTML code.</p>\n\n<p>When page is loaded for bfcache <code>onload</code> event wont be triggered. Instead you can check the <code>persisted</code> property of the <code>onpageshow</code> event. It is set to false on initial page load. When page is loaded from bfcache it is set to true.</p>\n\n<pre><code>window.onpageshow = function(event) {\n    if (event.persisted) {\n        alert(\"From back / forward cache.\");\n    }\n};\n</code></pre>\n\n<p>For some reason jQuery does not have this property in the event. You can find it from original event though.</p>\n\n<pre><code>$(window).bind(\"pageshow\", function(event) {\n    if (event.originalEvent.persisted) {\n      alert(\"From back / forward cache.\");\n    }\n});\n</code></pre>\n\n<p>Quick solution to these problem is to reload the page when back button is pressed. This however nullifies any positive effect back / forward cache would give.</p>\n\n<pre><code>window.onpageshow = function(event) {\n    if (event.persisted) {\n        window.location.reload() \n    }\n};\n</code></pre>\n\n<p>As a sidenote, you can see lot of pages offering using empty <code>onunload</code> handler as solution. This has not worked since iOS5.</p>\n\n<pre><code>$(window).bind(\"unload\", function() { });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 52
                }
            ],
            "body": "<p>The issue I've found is very similar to <a href=\"http://stackoverflow.com/questions/24046/the-safari-back-button-problem\">this question</a>, except that Safari on desktops seems to have resolved the issue. Essentially, the issue is this: when a client is browsing on mobile safari and the page executes a javascript function on pagea.html, then navigate to pageb.html, then press the back button to go back to pagea.html, the javascript function won't run when the client pressed the back button to come back to pagea.html. It will skip the javascript call.</p>\n\n<p>I've tried the solutions mentioned in the link above, but nothing seems to work for mobile Safari. Has anyone else encountered this bug? How did you handle it?</p>\n",
            "last_activity_date": 1357136461,
            "question_id": 11979156,
            "score": 20,
            "tags": [
                "javascript",
                "safari"
            ],
            "title": "Mobile Safari back button"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You may try to use percent in coordinates but it will not work in most browsers(if not all). So you should use JavaScript. Or use absolut positioned divs with percent based coordinates instead of map.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use CSS sprites to achieve this. You will have the image pieces fit into just one image and this way you will just be making one http request to load all the images. This technique doesn't require javascript and you will just be using <code>background-position;</code> property to move your images. </p>\n\n<p>This is an efficient technique for page optimization.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you end up to do the task with JavaScript, here is a cross-browser codesnippet to resize all areas in <code>MAP</code> element.</p>\n\n<pre><code>window.onload = function () {\n    var ImageMap = function (map) {\n            var n,\n                areas = map.getElementsByTagName('area'),\n                len = areas.length,\n                coords = [],\n                previousWidth = 1920;\n            for (n = 0; n &lt; len; n++) {\n                coords[n] = areas[n].coords.split(',');\n            }\n            this.resize = function () {\n                var n, m, clen,\n                    x = document.body.clientWidth / previousWidth;\n                for (n = 0; n &lt; len; n++) {\n                    clen = coords[n].length;\n                    for (m = 0; m &lt; clen; m++) {\n                        coords[n][m] *= x;\n                    }\n                    areas[n].coords = coords[n].join(',');\n                }\n                previousWidth = document.body.clientWidth;\n                return true;\n            };\n            window.onresize = this.resize;\n        },\n        imageMap = new ImageMap(document.getElementById('map_ID'));\n    imageMap.resize();\n    return;\n}\n</code></pre>\n\n<p><code>previousWidth</code> must be equal to the width of the original image. You also need to use some relative units in HTML:</p>\n\n<pre><code>&lt;div style=\"width:100%;\"&gt;\n&lt;img id=\"Image-Maps_5201211070133251\" src=\"Site.png\" usemap=\"#Image-Maps_5201211070133251\" border=\"0\" width=\"100%\" alt=\"\" /&gt;\n</code></pre>\n\n<p>Working demo at <a href=\"http://jsfiddle.net/p7EyT/\">jsFiddle</a>. If you open the fiddle in IE, you can actually see <code>AREA</code>s when clicking them.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>I wrote a small little lib to keep an imageMap scaled to a resizable image, so the map stays in sync as the image scales. Useful when you want to map a percentage scaled image etc.</p>\n\n<p>It can be used with or without jQuery.</p>\n\n<p><a href=\"https://github.com/davidjbradshaw/imagemap-resizer\">https://github.com/davidjbradshaw/imagemap-resizer</a></p>\n\n<p>and you can see it working at.</p>\n\n<p><a href=\"http://davidjbradshaw.com/imagemap-resizer/example/\">http://davidjbradshaw.com/imagemap-resizer/example/</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I had the same problem last week and I ended up writing a jQuery plugin for this.</p>\n\n<p>Here's the project gitHub: </p>\n\n<p><a href=\"https://github.com/etienne-martin/mapify\" rel=\"nofollow\">https://github.com/etienne-martin/mapify</a></p>\n\n<p><strong>Basic usage:</strong></p>\n\n<pre><code>$(\"img[usemap]\").mapify();\n</code></pre>\n\n<p><strong>Live example</strong></p>\n\n<p><a href=\"http://emartin.ca/mapify/\" rel=\"nofollow\">http://emartin.ca/mapify/</a> </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm currently trying to make an Image-Map on my site that will resize depending on the size of the window... I was wondering if there was anyway to do this with HTML or will I have to do this with Javascript or another language. <br></p>\n\n<pre><code>&lt;div style=\"text-align:center; width:1920px; margin-left:auto; margin-right:auto;\"&gt;\n&lt;img id=\"Image-Maps_5201211070133251\" src=\"Site.png\" usemap=\"#Image-Maps_5201211070133251\" border=\"0\" width=\"1920\" height=\"1080\" alt=\"\" /&gt;\n&lt;map id=\"_Image-Maps_5201211070133251\" name=\"Image-Maps_5201211070133251\"&gt;\n&lt;area shape=\"poly\" coords=\"737,116,1149,118,944,473,\" href=\"http://essper.bandcamp.com\" alt=\"Bandcamp\" title=\"Bandcamp\"   /&gt;\n&lt;area shape=\"poly\" coords=\"1006,589,1418,590,1211,945,\" href=\"http://soundcloud.com/essper\" alt=\"Soundcloud\" title=\"Soundcloud\"   /&gt;\n&lt;area shape=\"poly\" coords=\"502,590,910,591,708,944,\" href=\"http://facebook.com/the.essper\" alt=\"Facebook\" title=\"Facebook\"   /&gt;\n&lt;/map&gt;\n</code></pre>\n\n<p> </p>\n",
            "last_activity_date": 1415835665,
            "question_id": 13321067,
            "score": 14,
            "tags": [
                "javascript",
                "html",
                "image",
                "map"
            ],
            "title": "Dynamically resizing Image-maps and images"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Don't use BlobBuilder in Chrome (tested in OSX Chrome, Firefox 12, Safari 6, iOS Chrome, iOS Safari):</p>\n\n<p>ex1 : <a href=\"http://jsfiddle.net/malraux/xGUsu/\">http://jsfiddle.net/malraux/xGUsu/</a> (principle)</p>\n\n<p>ex2: <a href=\"http://jsfiddle.net/xGUsu/78/\">http://jsfiddle.net/xGUsu/78/</a> (working with full example)</p>\n\n<pre><code>var xhr = new XMLHttpRequest();\nxhr.open('GET', 'doodle.png', true);\n\nxhr.responseType = 'arraybuffer';\n\nxhr.onload = function(e) {\n  if (this.status == 200) {\n    var uInt8Array = new Uint8Array(this.response);\n    var i = uInt8Array.length;\n    var binaryString = new Array(i);\n    while (i--)\n    {\n      binaryString[i] = String.fromCharCode(uInt8Array[i]);\n    }\n    var data = binaryString.join('');\n\n    var base64 = window.btoa(data);\n\n    document.getElementById(\"myImage\").src=\"data:image/png;base64,\"+base64;\n  }\n};\n\nxhr.send();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>You can fetch a <code>Blob</code> and use <a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.URL.createObjectURL\" rel=\"nofollow\"><code>window.URL.createObjectURL</code></a>. This prevents building giant strings and copying everything a couple of times.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var xhr = new XMLHttpRequest();\r\nxhr.open('GET', 'http://i.imgur.com/sBJOoTm.png', true);\r\n\r\nxhr.responseType = 'blob';\r\n\r\nxhr.onload = function(e) {\r\n  if (this.status == 200) {\r\nvar blob = this.response;\r\ndocument.getElementById(\"myImage\").src = window.URL.createObjectURL(blob);\r\n  }\r\n};\r\n\r\nxhr.onerror = function(e) {\r\n  alert(\"Error \" + e.target.status + \" occurred while receiving the document.\");\r\n};\r\n\r\nxhr.send();</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;img id=\"myImage\"&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Example (same code): <a href=\"http://jsfiddle.net/ysangkok/sJxXk/86/\" rel=\"nofollow\">http://jsfiddle.net/ysangkok/sJxXk/86/</a> . Works in Firefox and Chrome 25+.</p>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<pre><code>    var xhr = new XMLHttpRequest();\nxhr.open('GET', 'http://static.reddit.com/reddit.com.header.png', true);\n\nxhr.responseType = 'arraybuffer';\n\nxhr.onload = function(e) {\n  if (this.status == 200) {\n    var uInt8Array = new Uint8Array(this.response);\n    var byte3 = uInt8Array[4]; \n\n    var bb = new WebKitBlobBuilder();\n    bb.append(xhr.response);\n    var blob = bb.getBlob('image/png'); \n    var base64 = window.btoa(blob);\n    alert(base64);\n\n  }\n};\n\nxhr.send();\n</code></pre>\n\n<p>Basically, what I am trying to do here is retrieve an image, and convert it to base64. </p>\n\n<p>From reading in the comments <a href=\"http://www.html5rocks.com/en/tutorials/file/xhr2/\">here</a>, it states \"Sure. After fetching a resource as an ArrayBuffer, create a blob from it. Once you have that, you could base64 encode the file/blob directly (window.btoa()) or FileReader.readAsDataURL().\"</p>\n\n<p>However, <code>blob</code> is just [object blob], while I need to get the binary from the image so I can convert it to base64 and display it in a img tag using data:</p>\n\n<p>Anyone know how to achieve this?</p>\n\n<p>Thank you in advance!</p>\n",
            "last_activity_date": 1414850211,
            "question_id": 8022425,
            "score": 12,
            "tags": [
                "javascript",
                "webkit",
                "blob",
                "xmlhttprequest"
            ],
            "title": "Getting BLOB data from XHR request"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>One way could be apply <code>JSON.stringify</code> on each of the array elements then apply <code>_.uniq</code>.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Implementation of Shiplu's answer.</p>\n\n<pre><code>var foo = [ { \"a\" : \"1\" }, { \"b\" : \"2\" }, { \"a\" : \"1\" } ];\n\nvar x = _.uniq( _.collect( foo, function( x ){\n    return JSON.stringify( x );\n}));\n\nconsole.log( x ); // returns [ { \"a\" : \"1\" }, { \"b\" : \"2\" } ]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p><em>.uniq/</em>.unique accepts a callback</p>\n\n<pre><code>var list = [{a:1,b:5},{a:1,c:5},{a:2},{a:3},{a:4},{a:3},{a:2}];\n\nvar uniqueList = _.uniq(list, function(item, key, a) { \n    return item.a;\n});\n\n// uniqueList = [Object {a=1, b=5}, Object {a=2}, Object {a=3}, Object {a=4}]\n</code></pre>\n\n<p>Notes:</p>\n\n<ol>\n<li>Callback return value used for comparison</li>\n<li>First comparison object with unique return value used as unique</li>\n<li><a href=\"http://documentcloud.github.com/underscore/#uniq\">underscorejs.org</a> demonstrates no callback usage</li>\n<li><a href=\"http://lodash.com/docs#uniq\">lodash.com</a> shows usage</li>\n</ol>\n\n<p>Another example : \n<a href=\"http://jsbin.com/evodub/13/edit\">using the callback to extract car makes, colors from a list</a></p>\n",
                    "is_accepted": false,
                    "score": 113
                },
                {
                    "body": "<p>If you're looking to remove duplicates based on an id you could do something like this:</p>\n\n<pre><code>var res = [\n  {id: 1, content: 'heeey'},\n  {id: 2, content: 'woah'}, \n  {id: 1, content:'foo'},\n  {id: 1, content: 'heeey'},\n];\nvar uniques = _.map(_.groupBy(res,function(doc){\n  return doc.id;\n}),function(grouped){\n  return grouped[0];\n});\n\n//uniques\n//[{id: 1, content: 'heeey'},{id: 2, content: 'woah'}]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Try iterator function</p>\n\n<p>For example you can return first element</p>\n\n<pre><code>x = [['a',1],['b',2],['a',1]]\n\n_.uniq(x,false,function(i){  \n\n   return i[0]   //'a','b'\n\n})\n</code></pre>\n\n<blockquote>\n  <p>=> [['a',1],['b',2]]</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here is a simple solution, which uses a deep object comparison to check for duplicates (without resorting to converting to JSON, which is inefficient and hacky)</p>\n\n<pre><code>var newArr = _.filter(oldArr, function (element, index) {\n    // tests if the element has a duplicate in the rest of the array\n    for(index += 1; index &lt; oldArr.length; index += 1) {\n        if (_.isEqual(element, oldArr[index])) {\n            return false;\n        }\n    }\n    return true;\n});\n</code></pre>\n\n<p>It filters out all elements if they have a duplicate later in the array - such that the last duplicate element is kept.</p>\n\n<p>The testing for a duplicate uses <code>_.isEqual</code> which performs an optimised deep comparison between the two objects see the <a href=\"http://underscorejs.org/#isEqual\" rel=\"nofollow\">underscore isEqual documentation</a> for more info.</p>\n\n<p><strong>edit: updated to use <code>_.filter</code> which is a cleaner approach</strong></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>here's my solution (coffeescript) :</p>\n\n<pre><code>_.mixin\n  deepUniq: (coll) -&gt;\n    result = []\n    remove_first_el_duplicates = (coll2) -&gt;\n\n      rest = _.rest(coll2)\n      first = _.first(coll2)\n      result.push first\n      equalsFirst = (el) -&gt; _.isEqual(el,first)\n\n      newColl = _.reject rest, equalsFirst\n\n      unless _.isEmpty newColl\n        remove_first_el_duplicates newColl\n\n    remove_first_el_duplicates(coll)\n    result\n</code></pre>\n\n<p>example:</p>\n\n<pre><code>_.deepUniq([ {a:1,b:12}, [ 2, 1, 2, 1 ], [ 1, 2, 1, 2 ],[ 2, 1, 2, 1 ], {a:1,b:12} ]) \n//=&gt; [ { a: 1, b: 12 }, [ 2, 1, 2, 1 ], [ 1, 2, 1, 2 ] ]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>When I have an attribute id, this is my preffered way in underscore:</p>\n\n<pre><code>var x = [{i:2}, {i:2, x:42}, {i:4}, {i:3}];\n_.chain(x).indexBy(\"i\").values().value();\n// &gt; [{i:2, x:42}, {i:4}, {i:3}]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have this kind of array:</p>\n\n<pre><code>var foo = [ { \"a\" : \"1\" }, { \"b\" : \"2\" }, { \"a\" : \"1\" } ];\n</code></pre>\n\n<p>I'd like to filter it to have:</p>\n\n<pre><code>var bar = [ { \"a\" : \"1\" }, { \"b\" : \"2\" }];\n</code></pre>\n\n<p>I tried using _.uniq, but I guess because { \"a\" : \"1\" } is not equal to itself, it doesn't work. Is there any way to provide underscore uniq with an overriden equals function?</p>\n",
            "last_activity_date": 1414187893,
            "question_id": 9923890,
            "score": 49,
            "tags": [
                "javascript",
                "underscore.js"
            ],
            "title": "Removing duplicate objects with Underscore for Javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Basically, you should <strong>not</strong> heavily depend on Local Storage.</p>\n\n<p>Local Storage, along with Session Storage, aims to be a replacement of the cookies, defining a more consistent API. There are a few differences from the cookies:</p>\n\n<ul>\n<li>While the cookies are accessible from both client and server side, Web Storage, in general, and Local Storage, in particular, are accessible only from client side.</li>\n<li>Enhanced capacity (official for cookies is 4 kbytes) to more than 5Mb per domain (Firefox, Google Chrome, and Opera and 10MB in IE).</li>\n</ul>\n\n<p>So <strong>yes</strong>, your assumption is correct.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>One thing to note about using local storage. It is very browser specific. If you store data with firefox it won't be available in chrome or ie etc. Also as far as clearing cookies and sessions, I've noticed it is also browser specific as to whether or not the local storage is cleared. I'd look into the details a lot if you're really planning on relying on local storage for an app.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>From <a href=\"http://ejohn.org/blog/dom-storage/\">John Resig's Blog</a>:</p>\n\n<blockquote>\n  <p><strong>Duration</strong></p>\n  \n  <p>In DOM Storage <em>it is not possible to specify an expiration period for any of your data. All expiration rules are left up to the user. In the case of Mozilla, most of those rules are inherited from the Cookie-related expiration rules.</em> Because of this you can probably expect most of your DOM Storage data to last at least for a meaningful amount of time.</p>\n</blockquote>\n\n<p>LocalStorage acts more like cache rather than cookies, where the persistence of each is dependent on user's browser settings, and how the browser itself implements it (since there are no specs for it)</p>\n\n<hr>\n\n<p>Mozilla <a href=\"https://developer.mozilla.org/en/DOM/Storage\">implements it like cookies</a>:</p>\n\n<blockquote>\n  <p>DOM Storage can be cleared via \"Tools -> Clear Recent History -> Cookies\" when Time range is \"Everything\" (via nsICookieManager::removeAll)</p>\n</blockquote>\n\n<p>Chrome <a href=\"https://developers.google.com/web-toolkit/doc/latest/DevGuideHtml5Storage\">implements it like cache:</a></p>\n\n<blockquote>\n  <p><strong>LocalStorage is Not Secure Storage</strong></p>\n  \n  <p>HTML5 local storage saves data unencrypted in string form <strong>in the regular browser cache</strong>.</p>\n  \n  <p><strong>Persistence</strong></p>\n  \n  <p>On disk until deleted by user (delete cache) or by the app</p>\n</blockquote>\n\n<hr>\n\n<p>As for a \"replacement for the Cookie\", <a href=\"http://stackoverflow.com/a/3220802/575527\">i don't think so</a>. besides, you would not want to parse <em>at most</em> 10MB of data just to get small bits - cookies were meant to do just that.</p>\n\n<blockquote>\n  <p>Cookies and local storage really serve difference purposes. Cookies are primarily for reading server-side, LocalStorage can only be read client-side. So the question is, in your app, who needs this data \u2014 the client or the server?</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Local Storage is designed to be a dependable, persistent store of data on a client. It <em>is not</em> designed as a \"better cookie\": that function is designed to be met by Session Storage.</p>\n\n<p>From the <a href=\"http://www.w3.org/TR/webstorage/\" rel=\"nofollow\">Dec 2011 Web Storage Spec Candidate Recommendation</a>, </p>\n\n<blockquote>\n  <p>(Local Storage) is designed for storage that spans multiple windows,\n  and lasts beyond the  current session. In particular, Web applications\n  may wish to store megabytes of user data, such as entire \n  user-authored documents or a user's mailbox, on the client side for\n  performance reasons.</p>\n</blockquote>\n\n<p>As client-side data - it is as persistent as <em>any</em> client side data, within the size limits that the browser implements. Users can delete it at any time, open it up in a text editor and edit etc. - just like ANY client side data.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you're using localStorage for a iOS app, be very careful. THe latest version of iOS (5.1 off the top of my head) has moved localstorage and localdb data to a part of the cache that is regularly cleared, i.e. not at all persistent. I can't tell yet if this is a bug or a policy change.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm depending heavily on localStorage for a plugin I'm writing. All the user settings are stored in it. Some settings require the user the write regex'es and they would be sad if their regex rules are gone at some point. \nSo now I am wondering just how persistent the localStorage is.</p>\n\n<p>From <a href=\"http://www.w3.org/TR/webstorage/#dom-localstorage\">the specs</a>:</p>\n\n<blockquote>\n  <p>User agents should expire data from the local storage areas only for security reasons or when requested to do so by the user.</p>\n</blockquote>\n\n<p>The above looks like it works just like cookies on the clientside. I.e. when the user clears all browser data (history, cookies, cache etc) the localStorage will also be truncated. Is this assumption correct?</p>\n",
            "last_activity_date": 1366512166,
            "question_id": 9948284,
            "score": 28,
            "tags": [
                "javascript",
                "persistence",
                "local-storage",
                "persistent-storage"
            ],
            "title": "How persistent is localStorage?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This was not, so far as i know, explicitly defined in the past. Different browsers are free to implement event ordering however they see fit. While most are close enough for all practical purposes, there have been and continue to be some odd edge cases where browsers differ somewhat (and, of course, the many more cases where certain browsers fail to send certain events <em>at all</em>).</p>\n\n<p>That said, the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html\">HTML 5 draft recommendation</a> does make an attempt to specify how events will be queued and dispatched - <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#event-loops\">the event loop</a>:</p>\n\n<blockquote>\n  <p>To coordinate events, user\n  interaction, scripts, rendering,\n  networking, and so forth, user agents\n  must use event loops as described in\n  this section.</p>\n  \n  <p>There must be at least one event loop\n  per user agent, and at most one event\n  loop per unit of related\n  similar-origin browsing contexts.</p>\n  \n  <p>An event loop has one or more task\n  queues. A task queue is an ordered\n  list of tasks [...]\n  When a user agent is to queue a task,\n  it must add the given task to one of\n  the task queues  of the relevant event\n  loop. All the tasks from one\n  particular task source must always be\n  added to the same task queue, but\n  tasks from different task sources may\n  be placed in different task queues.\n  [...]</p>\n  \n  <p>[...]a user agent could have one task queue\n  for mouse and key events (the user\n  interaction task source), and another\n  for everything else. The user agent\n  could then give keyboard and mouse\n  events preference over other tasks\n  three quarters of the time, keeping\n  the interface responsive but not\n  starving other task queues, and never\n  processing events from any one task\n  source out of order. [...]</p>\n</blockquote>\n\n<p>Note that last bit: it is up to the browser implementation to determine which events will be grouped together and processed in order, as well as the priority given to any particular type of event. Therefore, there's little reason to expect all browsers to dispatch <em>all</em> events in a fixed order, now or in the future.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>If you're looking at mouse/touch events, Patrick H. Lauke has published <a href=\"http://patrickhlauke.github.io/getting-touchy-presentation/\" rel=\"nofollow\">a talk on the subject</a>. Definitely an interesting read \u2013 and deals with all the quirks of different browsers, different devices and different standards.</p>\n\n<p>He also bundles <a href=\"http://patrickhlauke.github.io/touch/\" rel=\"nofollow\">a comprehensive set of tests</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What order of precedence are events handled in JavaScript?</p>\n\n<p>Here are the events in alphabetical order...</p>\n\n<ol>\n<li>onabort - Loading of an image is\ninterrupted</li>\n<li>onblur - An element loses focus</li>\n<li>onchange - The user changes the\ncontent of a field</li>\n<li>onclick - Mouse clicks an object</li>\n<li>ondblclick - Mouse double-clicks an\nobject</li>\n<li>onerror - An error occurs when\nloading a document or an image</li>\n<li>onfocus - An element gets focus</li>\n<li>onkeydown - A keyboard key is\npressed</li>\n<li>onkeypress - A keyboard key is\npressed or held down</li>\n<li>onkeyup - A keyboard key is\n released</li>\n<li>onload - A page or an image is\n finished loading</li>\n<li>onmousedown - A mouse button is\n pressed</li>\n<li>onmousemove - The mouse is moved</li>\n<li>onmouseout - The mouse is moved off\n an element</li>\n<li>onmouseover - The mouse is moved\n over an element</li>\n<li>onmouseup - A mouse button is\n released</li>\n<li>onreset - The reset button is\n clicked</li>\n<li>onresize - A window or frame is\n resized</li>\n<li>onselect - Text is selected</li>\n<li>onsubmit - The submit button is\n clicked</li>\n<li>onunload - The user exits the page</li>\n</ol>\n\n<p>What order are they handled out of the event queue?</p>\n\n<p>The precedence is not first-in-first-out (FIFO) or so I believe.</p>\n",
            "last_activity_date": 1412862979,
            "question_id": 282245,
            "score": 27,
            "tags": [
                "javascript",
                "javascript-events",
                "event-handling",
                "event-queue"
            ],
            "title": "What is the event precedence in JavaScript?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>There are MD5 libraries available for javascript.  Keep in mind that this solution will not work if you need to support users who do not have javascript available.</p>\n\n<p>The more common solution is to use HTTPS.  With HTTPS, SSL encryption is negotiated between your web server and the client, transparently encrypting all traffic.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This sort of protection is normally provided by using <a href=\"http://en.wikipedia.org/wiki/HTTP_Secure\" rel=\"nofollow\">HTTPS</a>, so that all communication between the web server and the client is encrypted.</p>\n\n<p>The exact instructions on how to achieve this will depend on your web server.</p>\n\n<p>The Apache documentation has a <a href=\"http://tomcat.apache.org/tomcat-4.0-doc/ssl-howto.html\" rel=\"nofollow\">SSL Configuration HOW-TO</a> guide that may be of some help. (thanks to user <a href=\"http://stackoverflow.com/users/492638/g-qyy\">G. Qyy</a> for the link)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You need a library that can encrypt your input on client side and transfer it to the server in encrypted form.</p>\n\n<p>You can use following libs:</p>\n\n<ul>\n<li><a href=\"http://www.jcryption.org/\" rel=\"nofollow\">jCryption</a>. Client-Server asymmetric encryption over Javascript</li>\n</ul>\n\n<p>Update after 3 years:  </p>\n\n<ul>\n<li><a href=\"http://crypto.stanford.edu/sjcl/\" rel=\"nofollow\">Stanford Javascript Crypto Library</a></li>\n</ul>\n\n<p>Update after 4 years (Wohoo!)</p>\n\n<ul>\n<li><a href=\"https://code.google.com/p/crypto-js/\" rel=\"nofollow\">CryptoJS - Easy to use encryption</a></li>\n<li><a href=\"https://github.com/digitalbazaar/forge\" rel=\"nofollow\">ForgeJS - Pretty much covers it all</a></li>\n</ul>\n\n<p>Still not convinced? Neither am I :)</p>\n\n<ul>\n<li><a href=\"http://openpgpjs.org\" rel=\"nofollow\">OpenPGP.JS - Put the OpenPGP format everywhere</a> - runs in JS so you can use it in your web apps, mobile apps &amp; etc.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>This won't be secure, and it's simple to explain why:</p>\n\n<p>If you hash the password on the client side and use that token instead of the password, then an attacker will be unlikely to find out what the password is.</p>\n\n<p>But, the attacker doesn't <em>need</em> to find out what the password is, because your server isn't expecting the password any more - it's expecting the token. And the attacker <em>does</em> know the token because it's being sent over unencrypted HTTP!</p>\n\n<p>Now, it might be possible to hack together some kind of challenge/response form of encryption which means that the same password will produce a different token each request. However, this will require that the password is stored in a decryptable format on the server, something which isn't ideal, but might be a suitable compromise.</p>\n\n<p>And finally, do you really want to require users to have javascript turned on before they can log into your website?</p>\n\n<p>In any case, SSL is neither an expensive or especially difficult to set up solution any more</p>\n",
                    "is_accepted": false,
                    "score": 56
                },
                {
                    "body": "<p>I've listed a complete JavaScript for creating an MD5 at the bottom but it's really pointless without a secure connection for several reasons.</p>\n\n<p>If you MD5 the password and store that MD5 in your database then the MD5 is the password. People can tell exactly what's in your database. You've essentially just made the password a longer string but it still isn't secure if that's what you're storing in your database.</p>\n\n<p>If you say, \"Well I'll MD5 the MD5\" you're missing the point. By looking at the network traffic, or looking in your database, I can spoof your website and send it the MD5. Granted this is a lot harder than just reusing a plain text password but it's still a security hole.</p>\n\n<p>Most of all though you can't salt the hash client side without sending the salt over the 'net unencrypted therefore making the salting pointless. Without a salt or with a known salt I can brute force attack the hash and figure out what the password is.</p>\n\n<p>If you are going to do this kind of thing with unencrypted transmissions you need to use a <strong>public key/private key encryption</strong> technique. The client encrypts using your public key then you decrypt on your end with your private key <em>then</em> you MD5 the password (using a user unique salt) and store it in your database. Here's <a href=\"http://shop-js.sourceforge.net/crypto2.htm\">a JavaScript GPL public/private key library</a>.</p>\n\n<p><strong>Anyway</strong>, here is the JavaScript code to create an <strong>MD5</strong> client side (not my code):</p>\n\n<pre><code>/**\n*\n*  MD5 (Message-Digest Algorithm)\n*  http://www.webtoolkit.info/\n*\n**/\n\nvar MD5 = function (string) {\n\n    function RotateLeft(lValue, iShiftBits) {\n        return (lValue&lt;&lt;iShiftBits) | (lValue&gt;&gt;&gt;(32-iShiftBits));\n    }\n\n    function AddUnsigned(lX,lY) {\n        var lX4,lY4,lX8,lY8,lResult;\n        lX8 = (lX &amp; 0x80000000);\n        lY8 = (lY &amp; 0x80000000);\n        lX4 = (lX &amp; 0x40000000);\n        lY4 = (lY &amp; 0x40000000);\n        lResult = (lX &amp; 0x3FFFFFFF)+(lY &amp; 0x3FFFFFFF);\n        if (lX4 &amp; lY4) {\n            return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\n        }\n        if (lX4 | lY4) {\n            if (lResult &amp; 0x40000000) {\n                return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\n            } else {\n                return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\n            }\n        } else {\n            return (lResult ^ lX8 ^ lY8);\n        }\n    }\n\n    function F(x,y,z) { return (x &amp; y) | ((~x) &amp; z); }\n    function G(x,y,z) { return (x &amp; z) | (y &amp; (~z)); }\n    function H(x,y,z) { return (x ^ y ^ z); }\n    function I(x,y,z) { return (y ^ (x | (~z))); }\n\n    function FF(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function GG(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function HH(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function II(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function ConvertToWordArray(string) {\n        var lWordCount;\n        var lMessageLength = string.length;\n        var lNumberOfWords_temp1=lMessageLength + 8;\n        var lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;\n        var lNumberOfWords = (lNumberOfWords_temp2+1)*16;\n        var lWordArray=Array(lNumberOfWords-1);\n        var lBytePosition = 0;\n        var lByteCount = 0;\n        while ( lByteCount &lt; lMessageLength ) {\n            lWordCount = (lByteCount-(lByteCount % 4))/4;\n            lBytePosition = (lByteCount % 4)*8;\n            lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount)&lt;&lt;lBytePosition));\n            lByteCount++;\n        }\n        lWordCount = (lByteCount-(lByteCount % 4))/4;\n        lBytePosition = (lByteCount % 4)*8;\n        lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80&lt;&lt;lBytePosition);\n        lWordArray[lNumberOfWords-2] = lMessageLength&lt;&lt;3;\n        lWordArray[lNumberOfWords-1] = lMessageLength&gt;&gt;&gt;29;\n        return lWordArray;\n    };\n\n    function WordToHex(lValue) {\n        var WordToHexValue=\"\",WordToHexValue_temp=\"\",lByte,lCount;\n        for (lCount = 0;lCount&lt;=3;lCount++) {\n            lByte = (lValue&gt;&gt;&gt;(lCount*8)) &amp; 255;\n            WordToHexValue_temp = \"0\" + lByte.toString(16);\n            WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);\n        }\n        return WordToHexValue;\n    };\n\n    function Utf8Encode(string) {\n        string = string.replace(/\\r\\n/g,\"\\n\");\n        var utftext = \"\";\n\n        for (var n = 0; n &lt; string.length; n++) {\n\n            var c = string.charCodeAt(n);\n\n            if (c &lt; 128) {\n                utftext += String.fromCharCode(c);\n            }\n            else if((c &gt; 127) &amp;&amp; (c &lt; 2048)) {\n                utftext += String.fromCharCode((c &gt;&gt; 6) | 192);\n                utftext += String.fromCharCode((c &amp; 63) | 128);\n            }\n            else {\n                utftext += String.fromCharCode((c &gt;&gt; 12) | 224);\n                utftext += String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128);\n                utftext += String.fromCharCode((c &amp; 63) | 128);\n            }\n\n        }\n\n        return utftext;\n    };\n\n    var x=Array();\n    var k,AA,BB,CC,DD,a,b,c,d;\n    var S11=7, S12=12, S13=17, S14=22;\n    var S21=5, S22=9 , S23=14, S24=20;\n    var S31=4, S32=11, S33=16, S34=23;\n    var S41=6, S42=10, S43=15, S44=21;\n\n    string = Utf8Encode(string);\n\n    x = ConvertToWordArray(string);\n\n    a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;\n\n    for (k=0;k&lt;x.length;k+=16) {\n        AA=a; BB=b; CC=c; DD=d;\n        a=FF(a,b,c,d,x[k+0], S11,0xD76AA478);\n        d=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);\n        c=FF(c,d,a,b,x[k+2], S13,0x242070DB);\n        b=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);\n        a=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);\n        d=FF(d,a,b,c,x[k+5], S12,0x4787C62A);\n        c=FF(c,d,a,b,x[k+6], S13,0xA8304613);\n        b=FF(b,c,d,a,x[k+7], S14,0xFD469501);\n        a=FF(a,b,c,d,x[k+8], S11,0x698098D8);\n        d=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);\n        c=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);\n        b=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);\n        a=FF(a,b,c,d,x[k+12],S11,0x6B901122);\n        d=FF(d,a,b,c,x[k+13],S12,0xFD987193);\n        c=FF(c,d,a,b,x[k+14],S13,0xA679438E);\n        b=FF(b,c,d,a,x[k+15],S14,0x49B40821);\n        a=GG(a,b,c,d,x[k+1], S21,0xF61E2562);\n        d=GG(d,a,b,c,x[k+6], S22,0xC040B340);\n        c=GG(c,d,a,b,x[k+11],S23,0x265E5A51);\n        b=GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);\n        a=GG(a,b,c,d,x[k+5], S21,0xD62F105D);\n        d=GG(d,a,b,c,x[k+10],S22,0x2441453);\n        c=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);\n        b=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);\n        a=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);\n        d=GG(d,a,b,c,x[k+14],S22,0xC33707D6);\n        c=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);\n        b=GG(b,c,d,a,x[k+8], S24,0x455A14ED);\n        a=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);\n        d=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);\n        c=GG(c,d,a,b,x[k+7], S23,0x676F02D9);\n        b=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);\n        a=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);\n        d=HH(d,a,b,c,x[k+8], S32,0x8771F681);\n        c=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);\n        b=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);\n        a=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);\n        d=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);\n        c=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);\n        b=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);\n        a=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);\n        d=HH(d,a,b,c,x[k+0], S32,0xEAA127FA);\n        c=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);\n        b=HH(b,c,d,a,x[k+6], S34,0x4881D05);\n        a=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);\n        d=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);\n        c=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);\n        b=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);\n        a=II(a,b,c,d,x[k+0], S41,0xF4292244);\n        d=II(d,a,b,c,x[k+7], S42,0x432AFF97);\n        c=II(c,d,a,b,x[k+14],S43,0xAB9423A7);\n        b=II(b,c,d,a,x[k+5], S44,0xFC93A039);\n        a=II(a,b,c,d,x[k+12],S41,0x655B59C3);\n        d=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);\n        c=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);\n        b=II(b,c,d,a,x[k+1], S44,0x85845DD1);\n        a=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);\n        d=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);\n        c=II(c,d,a,b,x[k+6], S43,0xA3014314);\n        b=II(b,c,d,a,x[k+13],S44,0x4E0811A1);\n        a=II(a,b,c,d,x[k+4], S41,0xF7537E82);\n        d=II(d,a,b,c,x[k+11],S42,0xBD3AF235);\n        c=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);\n        b=II(b,c,d,a,x[k+9], S44,0xEB86D391);\n        a=AddUnsigned(a,AA);\n        b=AddUnsigned(b,BB);\n        c=AddUnsigned(c,CC);\n        d=AddUnsigned(d,DD);\n    }\n\n    var temp = WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);\n\n    return temp.toLowerCase();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You can also simply use <a href=\"http://tools.ietf.org/html/rfc2616#section-11\" rel=\"nofollow\">http authentication</a> with <a href=\"http://tools.ietf.org/html/rfc2617#section-3\" rel=\"nofollow\">Digest</a> (<a href=\"http://httpd.apache.org/docs/2.2/en/mod/mod_auth_digest.html\" rel=\"nofollow\">Here some infos if you use Apache httpd</a>, <a href=\"http://tomcat.apache.org/tomcat-4.0-doc/realm-howto.html\" rel=\"nofollow\">Apache Tomcat</a>, <a href=\"http://en.wikipedia.org/wiki/Digest_access_authentication\" rel=\"nofollow\">and here an explanation of digest</a>).</p>\n\n<p>With Java, for interesting informations, take a look at :</p>\n\n<ul>\n<li><a href=\"http://download.oracle.com/javaee/1.4/tutorial/doc/Security5.html\" rel=\"nofollow\">Understanding Login Authentication</a></li>\n<li><a href=\"http://www.networkstuff.eu/index.php/HTTP_Digest_Authentication_Request_%26_Response_Examples\" rel=\"nofollow\">HTTP Digest Authentication Request &amp; Response Examples</a></li>\n<li><a href=\"http://www.artima.com/weblogs/viewpost.jsp?thread=155252\" rel=\"nofollow\">HTTP Authentication Woes</a></li>\n<li><a href=\"http://www.java2s.com/Code/Java/Apache-Common/BasicAuthenticationForJSPPage.htm\" rel=\"nofollow\">Basic Authentication For JSP Page</a> (it's not digest, but I think it's an interesting source)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For a similar situation I used this <a href=\"http://www.rsa.com/rsalabs/node.asp?id=2127\" rel=\"nofollow\">PKCS #5: Password-Based Cryptography Standard</a> from RSA laboratories. You can avoid storing password, by substituting it with something that can be generated only from the password (in one sentence). There are some JavaScript implementations.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You've tagged this queation with the SSL tag, and SSL is the answer. Curious.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would choose <a href=\"http://stackoverflow.com/questions/3715920/about-password-hashing-system-on-client-side-javascript-silverlight-and-android/3716003#3716003\">this simple solution</a>.</p>\n\n<p>Summarizing it:</p>\n\n<ul>\n<li>Client \"I want to login\"</li>\n<li>Server generates a random number <code>#S</code> and sends it to the Client</li>\n<li>Client \n<ul>\n<li>reads username and password typed by the user</li>\n<li>calculates the hash of the password, getting <code>h(pw)</code> (which is what is stored in the DB)</li>\n<li>generates another random number <code>#C</code></li>\n<li>concatenates <code>h(pw) + #S + #C</code> and calculates its hash, call it <code>h(all)</code></li>\n<li>sends to the server <code>username</code>, <code>#C</code> and <code>h(all)</code></li>\n</ul></li>\n<li>Server\n<ul>\n<li>retrieves <code>h(pw)'</code> for the specified <code>username</code>, from the DB</li>\n<li>now it has all the elements to calculate <code>h(all')</code>, like Client did</li>\n<li>if <code>h(all)</code> = <code>h(all')</code> then <code>h(pw)</code> = <code>h(pw)'</code>, almost certainly</li>\n</ul></li>\n</ul>\n\n<p>No one can repeat the request to log in as the specified user. <code>#S</code> adds a variable component to the hash, each time (it's fundamental). <code>#C</code> adds additional noise in it.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/3715920/about-password-hashing-system-on-client-side\">About password hashing system on client side</a>  </p>\n</blockquote>\n\n\n\n<p>I have to secure the passwords of my web site users.  What I did was use MD5 <s>encryption</s> hashing in server side. But the problem is the passwords remain in plain text until it arrives at the server, which means that the password can be captured using traffic monitoring. So what I want is to use a client side password encryption mechanism and send the the encrypted password. Can anybody tell what is the way to do this?</p>\n",
            "last_activity_date": 1416744263,
            "question_id": 4121629,
            "score": 25,
            "tags": [
                "javascript",
                "jsp",
                "encryption",
                "ssl",
                "passwords"
            ],
            "title": "Password encryption at client side"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>My guess is that str will NOT be garbage collected because it can be used by restofprogram().\nYes, and str should get GCed if restofprogram was declared outside, except, if you do something like this:</p>\n\n<pre><code>function restofprogram(val) { ... }\n\nreadfile(\"blah\", function(str) {\n  var val = getvaluefromstr(str);\n  restofprogram(val, str);\n});\n</code></pre>\n\n<p>Or if getvaluefromstr is declared as something like this:</p>\n\n<pre><code>function getvaluefromstr(str) {\n  return {\n    orig: str, \n    some_funky_stuff: 23\n  };\n}\n</code></pre>\n\n<p>Follow-up-question: Does v8 do just plain'ol GC or does it do a combination of GC and ref. counting (like pthon?)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Actually your example is somewhat tricky. Was it on purpose? You seem to be <strong>masking</strong> the outer <code>val</code> variable with an inner lexically scoped restofprogram()'s <code>val</code> argument, instead of actually using it. But anyway, you're asking about <code>str</code> so let me ignore the trickiness of <code>val</code> in your example just for the sake of simplicity.</p>\n\n<p>My guess would be that the <code>str</code> variable won't get collected before the restofprogram() function finishes, even if it doesn't use it. <strong>If</strong> the restofprogram() doesn't use <code>str</code> <strong>and</strong> it doesn't use <code>eval()</code> and <code>new Function()</code> then it <strong>could</strong> be safely collected but I doubt it would. This would be a tricky optimization for V8 probably not worth the trouble. If there was <code>eval</code> and <code>new Function()</code> in the language then it would be much easier.</p>\n\n<p>Now, it doesn't have to mean that it wowuld never get collected because any event handler in a single-threaded event loop should finish almost instantly. Otherwise your whole process would be blocked and you'd have bigger problems than one useless variable in memory.</p>\n\n<p>Now I wonder if you didn't mean something else than what you actually wrote in your example. The whole program in Node is just like in the browser \u2013 it just registers event callbacks that are fired asynchronously later after the main program body has already finished. Also none of the handlers are blocking so no function is actually taking any noticeable time to finish. I'm not sure if I understood what you actually meant in your question but I hope that what I've written will be helpful to understand how it all works.</p>\n\n<h3>Update:</h3>\n\n<p>After reading more info in the comments on how your program looks like I can say more.</p>\n\n<p>If your program is something like:</p>\n\n<pre><code>readfile(\"blah\", function(str) {\n  var val = getvaluefromstr(str);\n  // do something with val\n  Server.start(function(request) {\n    // do something\n  });\n});\n</code></pre>\n\n<p>Then you can also write it like this:</p>\n\n<pre><code>readfile(\"blah\", function(str) {\n  var val = getvaluefromstr(str);\n  // do something with val\n  Server.start(serverCallback);\n});\nfunction serverCallback(request) {\n  // do something\n});\n</code></pre>\n\n<p>It will make the <code>str</code> go out of scope after Server.start() is called and will eventually get collected. Also, it will make your indentation more manageable which is not to be underestimated for more complex programs.</p>\n\n<p>As for the <code>val</code> you might make it a global variable in this case which would greatly simplify your code. Of course you don't have to, you can wrestle with closures, but in this case making <code>val</code> global or making it live in an outer scope common for both the readfile callback and for the serverCallback function seems like the most straightforward solution.</p>\n\n<p>Remember that everywhere when you can use an anonymous function you can also use a named function, and with those you can choose in which scope do you want them to live.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Simple answer: if value of the <code>str</code> is not referenced from anywhere else (and <code>str</code> itself is not referenced from <code>restofprogram</code>) it will become unreachable as soon as the <code>function (str) { ... }</code> returns.</p>\n\n<p>Details: V8 compiler distinguishes real <em>local</em> variables from so called <em>context</em> variables captured by a closure, shadowed by a <strong>with</strong>-statement or an <code>eval</code> invocation.  </p>\n\n<p>Local variables live on the stack and disappear as soon as function execution completes.</p>\n\n<p>Context variables live in a heap allocated context structure. They disappear when the context structure dies. Important thing to note here is that context variables from the same scope live in the <strong>same</strong> structure. Let me illustrate it with an example code:</p>\n\n<pre><code>function outer () {\n  var x; // real local variable\n  var y; // context variable, referenced by inner1\n  var z; // context variable, referenced by inner2\n\n  function inner1 () {\n    // references context \n    use(y);\n  }\n\n  function inner2 () {\n    // references context \n    use(z);\n  }\n\n  function inner3 () { /* I am empty but I still capture context implicitly */ } \n\n  return [inner1, inner2, inner3];\n}\n</code></pre>\n\n<p>In this example variable <code>x</code> will disappear as soon as <code>outer</code> returns but variables <code>y</code> and <code>z</code> will disappear only when <strong>both</strong> <code>inner1</code>, <code>inner2</code> <strong>and</strong> <code>inner3</code> die. This happens because <code>y</code> and <code>z</code> are allocated in the same context structure and all three closures implicitly reference this context structure (even <code>inner3</code> which does not use it explicitly).</p>\n\n<p>Situation gets even more complicated when you start using <strong>with</strong>-statement, <strong>try/catch</strong>-statement which on V8 contains an implicit <strong>with</strong>-statement inside catch clause or global <code>eval</code>.</p>\n\n<pre><code>function complication () {\n  var x; // context variable\n\n  function inner () { /* I am empty but I still capture context implicitly */ }\n\n  try { } catch (e) { /* contains implicit with-statement */ }\n\n  return inner;\n}\n</code></pre>\n\n<p>In this example <code>x</code> will disappear only when <code>inner</code> dies. Because: </p>\n\n<ul>\n<li><strong>try/catch</strong>-contains implicit <strong>with</strong>-statement in catch clause</li>\n<li>V8 assumes that any <strong>with</strong>-statement shadows <em>all</em> the locals </li>\n</ul>\n\n<p>This forces <code>x</code> to become a context variable and <code>inner</code> captures the context so <code>x</code> exists until <code>inner</code> dies.</p>\n\n<p>In general if you want to be sure that given variable does not retain some object for longer than really needed you can easily <em>destroy</em> this link by assigning <code>null</code> to that variable.</p>\n",
                    "is_accepted": false,
                    "score": 48
                }
            ],
            "body": "<p>I was curious about how the node.js pattern of nested functions works with the garbage collector of v8.\nhere's a simple example</p>\n\n<pre><code>readfile(\"blah\", function(str) {\n   var val = getvaluefromstr(str);\n   function restofprogram(val2) { ... } (val)\n})\n</code></pre>\n\n<p>if restofprogram is long running, doesnt that mean that str will never get garbage collected? My understanding is that with node you end up with nested functions a lot. Does this get garbage collected if restofprogram was declared outside, so str could not be in scope. Is this a recommended practice?</p>\n\n<p><strong>EDIT</strong> I didnt intend to make the problem complicated. That was just carelessness, so I've modified it.</p>\n",
            "last_activity_date": 1300385476,
            "question_id": 5326300,
            "score": 22,
            "tags": [
                "javascript",
                "node.js",
                "v8"
            ],
            "title": "garbage collection with node.js"
        }
    ]
}
