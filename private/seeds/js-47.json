{
    "items": [
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>function valid_phone_number(ph) {\n  var regex = /^(?!([^-]*-){5})(\\+\\d+)?\\s*(\\(\\d+\\))?[- \\d]+$/gi;\n  return regex.test(ph);\n}\n</code></pre>\n\n<p>I'm new to regular expressions, so please be nice. :-)</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I need a Javascript RegEx through which I can validate phone number. RegEx should handle following criteria </p>\n\n<ol>\n<li>It should only consist of numbers ( ) + and -</li>\n<li>Count of + should not exceed 1</li>\n<li>Count of - should not exceed 4</li>\n<li>There must be only one pair of ()</li>\n<li>If '(' is present in phone number then ')' must be present.</li>\n</ol>\n\n<p>Thanks for the help!</p>\n\n<p>Hussain.</p>\n",
            "last_activity_date": 1297847617,
            "question_id": 5013782,
            "score": 1,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Regular Expression for Phone Number"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>That sounds like a bad idea.</p>\n\n<p>Is there any reason you can't do this?</p>\n\n<pre><code>var tdHtml = td.map(function() { return $(this).html(); }).get();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Oh my.</p>\n\n<p>If you want to create a global \"dynamic variable\" you should not use <code>var</code>. In this context it creates a variable that is local inside of the each-function, which is quite useless (and will cause it to be undefined outside of the loop, which is what you're experiencing). Instead you should do it like this:</p>\n\n<pre><code>td.each(function(i){\n  window['v' + i] = $(this).html();\n});\n</code></pre>\n\n<p>The downside with the above code is that global variables are not really great either. </p>\n\n<p>On the other hand, if you want a local variable (if for example there will be more code in the loop that uses this varaible, then I would do it like this:</p>\n\n<pre><code>td.each(function(i){\n  var dynVars = {};\n  dynVars['v' + i] = $(this).html();\n\n  alert(dynVars.v4); // use the dynamic variables by saying \"dynVars.NAME\"\n\n});\n</code></pre>\n\n<p>You could combine these two solutions, by putting the declaration of dynvars (<code>var dynVars = {}</code>) in the scope where you want to be able to access your variables instead. As long as it is also visible in this each-callback, everything will work out fine.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Hi I am trying to make dynamic variables but it is saying `variable v0 (through to v5) is not defined.</p>\n\n<pre><code>td.each(function(i){\neval('var v' + i + ' = \\'' + $(this).html() + '\\';' );\n});\n</code></pre>\n\n<p>any help would be muchly appreciated. </p>\n",
            "last_activity_date": 1411135273,
            "question_id": 4385084,
            "score": 1,
            "tags": [
                "javascript",
                "jquery",
                "variables",
                "dynamic"
            ],
            "title": "javascript - dynamic variables"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The <code>.style.*</code> properties map directly onto the <code>style</code> <strong>attribute</strong>, not to the applied style. For that you want <a href=\"https://developer.mozilla.org/en/DOM%3awindow.getComputedStyle\" rel=\"nofollow\">getComputedStyle</a>.</p>\n\n<p>I'd give serious consideration to toggling <code>.className</code> and separating the presentation from the logic entirely. </p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>You need the computed value of the display property for the element. You can get this as follows. Note that most browsers support <a href=\"https://developer.mozilla.org/en/DOM%3awindow.getComputedStyle\" rel=\"nofollow\"><code>window.getComputedStyle()</code></a> whereas the nearest equivalent in IE is the element's <code>currentStyle</code> property:</p>\n\n<pre><code>var el = document.getElementById('a');\nvar styleObj;\n\nif (typeof window.getComputedStyle != \"undefined\") {\n    styleObj = window.getComputedStyle(el, null);\n} else if (el.currentStyle != \"undefined\") {\n    styleObj = el.currentStyle;\n}\n\nif (styleObj) {\n   alert(styleObj.display);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you can use jQuery, there is a method called <code>.is</code></p>\n\n<p>To check if something isn't displayed, I'd do ... <code>$('someSelector').is('hidden')</code> ...</p>\n\n<p>This would return false if display attribute is set to None.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'd recommend using a JavaScript library for getting computed style. For example, using jQuery you can retrieve computed style with the css() method...</p>\n\n<pre><code>$(\"#a\").css(\"display\");\n</code></pre>\n\n<p>The css() method is a cross-browser solution as it internally uses the style object and both the getComputedStyle method and the currentStyle object.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<pre><code>&lt;html&gt;\n    &lt;style type=\"text/css\"&gt;\n        a {\n            display: none;\n        }\n    &lt;/style&gt;\n    &lt;body&gt;\n        &lt;p id=\"p\"&gt; a paragraph &lt;/p&gt;\n        &lt;a href=\"http://www.google.com\" id=\"a\"&gt;google&lt;/a&gt;\n    &lt;/body&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        var a = (document.getElementById('a')).style;\n        alert(a.display);\n        var p = (document.getElementById('p')).style;\n        alert(p.display);\n        p.display = 'none';\n        alert(p.display);\n    &lt;/script&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>The first and the second <code>alert</code> display nothing other than a empty string, which I thought should be <code>none</code> and <code>block</code>.\nHowever after the intensionally <code>display</code> setting, the third <code>alert</code> finally alert <code>none</code>.</p>\n\n<p>But Why? How could I retrieve the <code>display</code> property correctly?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1285259400,
            "question_id": 3778335,
            "score": 1,
            "tags": [
                "javascript",
                "css",
                "dom"
            ],
            "title": "How to retrieve the display property of a DOM element?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>That's not possible; you should <strong><em>copyright</em></strong> your code instead if you are worried.</p>\n\n<p>Or you may want to have a look at:</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Obfuscated_code\" rel=\"nofollow\">Obfuscated Code</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>There aren't any.  The best you could do is some tool that will minify or obfuscate your javascript code.  However, there's no way to make it truly secure.  Encryption implies decryption on the client side, which exposes everything to the user.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>So why is this not possible? HTML, CSS, and Javascript are all client-based. Meaning that you have to give the user your code, and it is processed on his machine. You can't simultaneously show someone the code and prevent him from seeing it.<br>\nDepending on exactly what it is you want to protect, you may want to look into server-based technologies like PHP or ASP.</p>\n\n<p>You also of course have the option of just doing a really good job to build the reputation of you/your company. After all, imitation is the sincerest form of flattery. Or doing a really crappy job so that nobody wants to copy you.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/2562775/what-are-some-good-ways-to-prevent-people-from-copying-my-source-code\">What are some good ways to prevent people from copying my source code?</a>  </p>\n</blockquote>\n\n\n\n<p>Hi,</p>\n\n<p>I am looking into ways to 'encrypt' my HTML and CSS code so that a visitor cannot simply 'View Source' and plagiarize it.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1280603513,
            "question_id": 3247270,
            "score": 1,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "How to encrypt HTML, CSS and JavaScript to prevent theft"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>To have a different function for p2, you can just set the <code>sayHello</code> property of p2 :</p>\n\n<pre><code>p2.sayHello = function(){ \n    alert('another one');\n}\np2.sayHello(); \n</code></pre>\n\n<p>If you use prototype, then you can also change it for all instances of Person (and still you can overwrite it for a specific person) :</p>\n\n<pre><code>function Person(name)\n{\n    this.name = name;\n};\nPerson.prototype.sayHello = function() {\n    alert('Hello, ' + this.name);\n};\n\nvar p = new Person(\"Bob\");\n\n// let's set a specific one for p2\np2.sayHello = function(){ \n    alert('another one');\n}\n\n// now let's redefine for all persons (apart p2 which will keep his specific one)\nPerson.prototype.sayHello = function(){ \n    alert('different!');\n}\n\np.sayHello();  // different!\np2.sayHello(); // another one\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<blockquote>\n  <p>is it possible to redefine the class's method later?</p>\n</blockquote>\n\n<p>Yes. However, you must not assign the new function to a property of the <code>Person</code> constructor, but to the instance itself:</p>\n\n<pre><code>var p2 = new Person(\"Sue\");\np2.sayHello();   // Hello, Sue\np2.sayHello = function() {\n   alert('Hola, ' + this.name);\n};\np2.sayHello();   // Hola, Sue\n</code></pre>\n\n<p>If you want to do this for all new instances automatically (and have not used the prototype for the method, which you easily could exchange as in @dystroy's answer), you will need to <a href=\"https://en.wikipedia.org/wiki/Decorator_pattern\" rel=\"nofollow\">decorate</a> the constructor:</p>\n\n<pre><code>Person = (function (original) {\n    function Person() {\n        original.apply(this, arguments);   // apply constructor\n        this.sayHello = function() {       // overwrite method\n            alert('Hola, ' + this.name);\n        };\n    }\n    Person.prototype = original.prototype; // reset prototype\n    Person.prototype.constructor = Person; // fix constructor property\n    return Person;\n})(Person);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 1
                }
            ],
            "body": "<p>When using a constructor function in JavaScript to create a class, is it possible to redefine the class's method later?</p>\n\n<p>Example:</p>\n\n<pre><code>function Person(name)\n{\n    this.name = name;\n    this.sayHello = function() {\n        alert('Hello, ' + this.name);\n    };\n};\n\nvar p = new Person(\"Bob\");\np.sayHello();   // Hello, Bob\n</code></pre>\n\n<p>Now I'd like to redefine <code>sayHello</code> like this:</p>\n\n<pre><code>// This doesn't work (creates a static method)\nPerson.sayHello() = function() {\n   alert('Hola, ' + this.name);\n};\n</code></pre>\n\n<p>so when I create another <code>Person</code>, the new <code>sayHello</code> method will be called:</p>\n\n<pre><code>var p2 = new Person(\"Sue\");\np2.sayHello();   // Hola, Sue\np.sayHello();    // Hello, Bob\n</code></pre>\n\n<p>EDIT:</p>\n\n<p>I realize I could send in an argument like \"Hello\" or \"Hola\" to <code>sayHello</code> to accomplish the different output.  I also realize I could simply assign a new function to p2 like this:</p>\n\n<pre><code>p2.sayHello = function() { alert('Hola, ' + this.name); };\n</code></pre>\n\n<p>I'm just wondering if I can redefine the class's method so new instances of <code>Person</code> will use the new <code>sayHello</code> method.  </p>\n",
            "last_activity_date": 1390258718,
            "question_id": 21243790,
            "score": 0,
            "tags": [
                "javascript",
                "class"
            ],
            "title": "Is it possible to redefine a JavaScript class&#39;s method?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The correct way is to make sure that document has completely loaded before adding the event listener.</p>\n\n<p>Example:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;body onload=\"onLoad\"&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>function onLoad() {\n    document.addEventListener(\"deviceready\", onDeviceReady, false);\n}\n\nfunction onDeviceReady() {\n   //anything you want done after deviceready has fired\n}\n</code></pre>\n\n<p>With jQuery you can use <code>$(document).ready()</code> instead of <code>&lt;body onload=\"onLoad()\"&gt;</code></p>\n\n<p>Example:</p>\n\n<pre><code>$(document).ready() {\n    document.addEventListener(\"deviceready\", onDeviceReady, false);\n}\n\nfunction onDeviceReady() {\n   //anything you want done after deviceready has fired\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>I'm trying to do a simple alert('test') app, but the event isnt being fired, this is the code:</p>\n\n<pre><code>function onLoad() {\n    document.addEventListener(\"deviceready\", onDeviceReady, false);\n}\n\n// Cordova is loaded and it is now safe to make calls Cordova methods\n//\nfunction onDeviceReady() {\n    alert('omar');\n}\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /&gt;\n        &lt;title&gt;Hello World&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div class=\"app\"&gt;\n            &lt;h1&gt;AAAA&lt;/h1&gt;\n        &lt;/div&gt;\n        &lt;script type=\"text/javascript\" src=\"cordova-2.2.0.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\" src=\"js/index.js\"&gt;&lt;/script&gt;\n\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Why is this?</p>\n",
            "last_activity_date": 1414776912,
            "question_id": 13311805,
            "score": 0,
            "tags": [
                "javascript",
                "cordova",
                "javascript-events"
            ],
            "title": "onDeviceReady not firing in PhoneGap hello world app"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Your syntax is wrong, Try</p>\n\n<pre><code>$(document).ready(function() {\n   $(\"#linkshow\").click(function(e) {\n      e.preventDefault();\n      $(\"#window\").show();\n   });\n}); \n</code></pre>\n\n<p>Works for me: See <a href=\"http://jsfiddle.net/S4vSU/11/\" rel=\"nofollow\">jsFiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You need to wrap your code in a DOM ready handler, and you also missed the brackets following the function declaration. Try this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt; \n    $(function() {\n        $(\"#linkshow\").click(function() {\n            $(\"#window\").show()\n        });        \n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 0
                }
            ],
            "body": "<p>Ok this is my problem that no one can seem to answer. I have two javascripts in use. Once is for the popup I have and tells it to stay closed for 24hrs when closed. The other is to put a link some where on the page to display this popup until refreshed and kept hidden till the cookie expires. Now the div popup is set to <code>display:none</code>. The cookie tells it to be shown until the close button is pressed. No matter what I seem to rework in my javascript to tempoarly show the popup from a link, it will not show. Some how the cookie javascript is going to have to be modified and thus having to remove css:<code>display:none</code> on the popup div. I have no idea what to do.</p>\n\n<p>This is the current code:</p>\n\n<ul>\n<li><a href=\"http://jsfiddle.net/Dv7DR/-\" rel=\"nofollow\">http://jsfiddle.net/Dv7DR/-</a></li>\n<li><a href=\"http://pastebin.com/fHvv5spn\" rel=\"nofollow\">http://pastebin.com/fHvv5spn</a></li>\n</ul>\n\n<hr>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt; \n$(\"#linkshow\").click(function {\n$(\"#window\").show()\n});        \n&lt;/script&gt;\n\n&lt;a href=\"#\" id=\"linkshow\"&gt;Submit a comment&lt;/a&gt;\n&lt;div id=\"window\"&gt;\n...\n&lt;div&gt;\n&lt;script type=\"text/javascript\"&gt;\n...cookie popup hide for 24hr on close\n&lt;/script&gt;\n</code></pre>\n\n<p>Note: I have already tried:</p>\n\n<pre><code>$(document).ready(function() {\n   $(\"#linkshow\").click(function(e) {\n      e.preventDefault();\n      $(\"#window\").show();\n   });\n}); \n</code></pre>\n\n<p>and...</p>\n\n<pre><code>$(document).ready(function() {\n     $(\"#window\").hide();\n\n   $(\"#linkshow\").live('click', function(e) {\n      e.preventDefault();\n      $(\"#window\").show();\n   });\n}); \u200b\n</code></pre>\n\n<p>and...</p>\n\n<pre><code>$(function() {\n        $(\"#linkshow\").click(function() {\n            $(\"#window\").show()\n        });        \n    });\n</code></pre>\n\n<p>and...</p>\n\n<pre><code>&lt;div id=\"window\" style=\"display:none;\"&gt;\n</code></pre>\n\n<p>to</p>\n\n<pre><code>&lt;div id=\"window\"&gt;\n</code></pre>\n\n<hr>\n\n<p>Then the other 24hr cookie javascript doesn't keep the popup hidden. I am assuming I need to take out the <code>id=\"window\" style=\"display:none;</code> and some how advanced the javascript cookie at the bottom the code so it will hide when asked to be hidden for 24hr and show when needed to be shown on the current page until refresh but I am at blank on what to do.</p>\n",
            "last_activity_date": 1337612130,
            "question_id": 10684482,
            "score": 0,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Jquery css show div?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You will need to store the count variable on a server-side control in order to do this.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var count = 0;\n\n    jQuery('td').click(function () {\n        if ($(this).hasClass('process')) {\n           count = count + 100;\n           alert(count);\n           // Store the value in the control\n           $('#&lt;%= example.ClientID %&gt;').val(count);\n        }\n     });\n&lt;/script&gt;\n\n&lt;asp:HiddenField ID=\"example\" runat=\"server\" /&gt;\n</code></pre>\n\n<p>Then, in your code-behind simply use:</p>\n\n<pre><code>int value;\nif (Int32.TryParse(example.Value, out value))\n{\n     // Do something with your value here\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>JavaScript is a client side technology. The code behind runs on the server. You cannot directly access the javascript variables in your code behind. You'd need to send the information to the server, for example by sending them back as form fields or query string parameters via an ajax request.</p>\n\n<p><a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a> is a great library to simplify the task of sending ajax requests, but many others exist, too.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Your count variable is not visible to the server, so you have to let it 'readable' somehow... The appropriate solution depends on how you have to deal with it in the code-behind, an option could be to assign the <code>count</code> value to an hidden input field, which is then submitted to the server...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this:</p>\n\n<p>Add a HiddenField and pass value of count to HiddenField from Jquery</p>\n\n<pre><code>$(function() {\n            var count = 100;\n            $(\"#Button1\").click(function() {\n                $(\"#HiddenField1\").val(count);                \n            });\n        });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>i am using a JavaScript  and it have the below code:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar count = 0;\n\njQuery('td').click(function () {\n    if ($(this).hasClass('process')) {\n       count = count+100;\n       alert('count');\n}\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>so if its click the value is added by 100 i check using an alert, now how to access the var  <code>count</code> in my code-behind</p>\n",
            "last_activity_date": 1330605745,
            "question_id": 9516293,
            "score": 0,
            "tags": [
                "javascript",
                "asp.net",
                "variables",
                "code-behind"
            ],
            "title": "How to access a JavaScript variable from code behind in asp.net"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This is not about scope - its about async processing.<br>\nThe function sendRuest ends before the onreadystatechange function gets called.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can't return the variable from the function that creates the ajax callback since the variable won't be set yet.\nThe ajax function in turn has to call another callback with the returning result.</p>\n\n<pre><code>request.onreadystatechange =   \n        function() {                \n            if (request.readyState == 4) {    \n                switch (request.status) {\n                    case 200:\n                        //here the variable should be changed\n                        the_variable = request.responseXML;\n                        the_callback(the_variable);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>AJAX requests are asynchronous. Your sendRuest function is being exectued, the AJAX request is being made but it happens asynchronously; so the remainder of sendRuest is executed, before the AJAX request (and your onreadystatechange handler) is executed, so <code>the_variable</code> is undefined when it is returned.</p>\n\n<p>Effectively, your code works as follows:</p>\n\n<pre><code>function sendRuest(someargums) {\n     /* some code */\n\n     var the_variable;\n\n     /* some code */\n\n     return the_variable;\n}\n\nvar data = sendRequest(someargums);\n</code></pre>\n\n<p>And then some time later, your AJAX request is completing; but it's already too late</p>\n\n<p>You need to use something called a callback:</p>\n\n<p>Where you previously may have had</p>\n\n<pre><code>function () {\n  var theResult = sendRuest(args);\n\n  // do something;\n}\n</code></pre>\n\n<p>You should do:</p>\n\n<pre><code>function () {\n  sendRuest(args, function (theResult) {\n     // do something\n  });\n};\n</code></pre>\n\n<p>and modify <code>sendRuest</code> as follows:</p>\n\n<pre><code>function sendRuest(someargums, callback) {\n     /* some code */\n\n     //here's that other function \n     request.onreadystatechange =   \n        function() {                \n            if (request.readyState == 4) {    \n                switch (request.status) {\n                    case 200:\n                        callback(request.responseXML);\n\n        /* a lot of code */ \n\n        //somewhere here the function closes\n        }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Instead a plain string variable, you can use an object.</p>\n\n<pre><code>function sendRuest(someargums) {\n\n     var the_variable = {\n         data: null,\n         setData: function(data){ this.data = data;}\n     }\n\n     //here's that other function \n     request.onreadystatechange =   \n        function() {                \n            if (request.readyState == 4) {    \n                switch (request.status) {\n                    case 200:\n                        //here the variable should be changed\n                        the_variable.setData(request.responseXML);\n\n        }\n\n     return the_variable;\n}\n</code></pre>\n\n<p>Anyway, your last line isn't going to work. When the function 'sendRuest' ends, the XHR request is not completed. You need to use timers to check the value of 'the_variable.data' (very bad) or use callbacks as stated in other answers.</p>\n\n<p>Sergio.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a function which declares a variable with the <code>var</code> keyword. It then launches an AJAX request to set the value of the variable, and this variable is then returned from the function. </p>\n\n<p>However, my implementation fails and I 'don't know why.</p>\n\n<p>Here's a simplified version of the code;</p>\n\n<pre><code>function sendRequest(someargums) {\n     /* some code */\n\n     var the_variable;\n\n     /* some code */\n\n     request.onreadystatechange = \n        //here's that other function    \n        function() {                \n            if (request.readyState == 4) {    \n                switch (request.status) {\n                    case 200:\n                        //here the variable should be changed\n                        the_variable = request.responseXML;\n\n        /* a lot of code */ \n\n        //somewhere here the function closes\n        }\n\n     return the_variable;\n}\n\nvar data = sendRequest(someargums); //and trying to read the data I get the undefined value\n</code></pre>\n",
            "last_activity_date": 1328537841,
            "question_id": 2956261,
            "score": 0,
            "tags": [
                "javascript",
                "ajax"
            ],
            "title": "How can I return a value from an AJAX request?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The following link is a blog post regarding a  widget that will allow you to use PHP, MySQL and JavaScript/jQuery. It might be able to point you in the right direction for what you need, and features a tutorial on implementing it.</p>\n\n<p><a href=\"http://www.neurosoftware.ro/programming-blog/facebook-web-design/tutorial/%E2%80%9Cwho-is-online%E2%80%9D-widget-with-php-mysql-jquery/\">Who Is Online Widget</a></p>\n\n<p>Hope this helps you out.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Here is another great tutorial that might help you out:</p>\n\n<p><a href=\"http://inobscuro.com/tutorials/simple-php-unique-visitors-counter-30/\" rel=\"nofollow\">http://inobscuro.com/tutorials/simple-php-unique-visitors-counter-30/</a></p>\n\n<p>Good will coding...</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I need to get the current site visitors number using Javascript or PHP.</p>\n\n<p>I need it using the best way between php and Javascript.</p>\n\n<p>Thank You </p>\n",
            "last_activity_date": 1304462936,
            "question_id": 4649926,
            "score": -1,
            "tags": [
                "php",
                "javascript",
                "visitor-statistic",
                "visitors"
            ],
            "title": "how to count the site current visitors using java script or php"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You're not the first to ask this question :) Let me clarify a couple of things before getting to your questions.</p>\n\n<ol>\n<li><p>Polymer's <code>webcomponents.js</code> is a library that contains several polyfills for various W3C APIs that fall under the Web Components umbrella. These are:</p>\n\n<ul>\n<li>Custom Elements</li>\n<li>HTML Imports</li>\n<li><code>&lt;template&gt;</code></li>\n<li>Shadow DOM</li>\n<li>Pointer Events</li>\n<li>others</li>\n</ul>\n\n<p>The left-nav in the documentation (<a href=\"http://www.polymer-project.org/\" rel=\"nofollow\">polymer-project.org</a>) has a page for all of these \"Platform technologies\". Each of those pages also has a pointer to the individual polyfill.</p></li>\n<li><p><code>&lt;link rel=\"import\" href=\"x-foo.html\"&gt;</code> is an HTML Import. Imports are a useful tool for including HTML in other HTML. You can include <code>&lt;script&gt;</code>, <code>&lt;link&gt;</code>, markup, or whatever else in an import.</p></li>\n<li><p>Nothing \"links\" <code>&lt;x-foo&gt;</code> to x-foo.html. In your example, it's assumed the Custom Element definition of <code>&lt;x-foo&gt;</code> (e.g. <code>&lt;element name=\"x-foo\"&gt;</code>) is defined in x-foo.html. When the browser sees that definition, it's registered as a new element.</p></li>\n</ol>\n\n<p>On to questions!</p>\n\n<p><strong>What is the difference between Angular and Polymer?</strong></p>\n\n<p>We covered some of this in our <a href=\"http://www.youtube.com/watch?v=irGDN5Ysi_A&amp;t=21m45s\" rel=\"nofollow\">Q&amp;A video</a>. In general, Polymer is a framework that aims to use (and show how to use) Web Components. It's foundation is Custom Elements (e.g. everything you build is a web component) and it evolves as the web evolves. To that end, we only support the latest version of the modern browsers.</p>\n\n<p>I'll use this image to describe Polymer's entire architecture stack:</p>\n\n<p><img src=\"http://i.stack.imgur.com/Ksn6s.png\" alt=\"enter image description here\"></p>\n\n<p>RED layer: We get tomorrow's web through a set of polyfills. Keep in mind, those libraries go away over time as browsers adopt the new APIs.</p>\n\n<p>YELLOW layer: Sprinkle in some sugar with polymer.js. This layer is our opinion on how to use the spec'd APIs, together. It also adds things like data-binding, syntatic sugar, change watchers, published properties...We think these things are helpful for building web component-based apps.</p>\n\n<p>GREEN: The comprehensive set of UI components (green layer) is still in progress. These will be web components that use all of the red + yellow layers.</p>\n\n<p><strong>Angular directives vs. Custom Elements?</strong></p>\n\n<p>See Alex Russell's <a href=\"https://groups.google.com/forum/?fromgroups=#!searchin/polymer-dev/angular/polymer-dev/s761szb9WJc/Lb29XuoJdqAJ\" rel=\"nofollow\">answer</a>. Basically, Shadow DOM allows composing bits of HTML but also is a tool for encapsulating that HTML. This is fundamentally a new concept on the web and something other frameworks will leverage.</p>\n\n<p><strong>What problems does Polymer solve that AngularJS has not or will not?</strong></p>\n\n<p>Similarities: declarative templates, data binding. </p>\n\n<p>Differences: Angular has high level APIs for services, filters, animations, etc., supports IE8, and at this point, is a much more robust framework for building production apps. Polymer is just starting out in alpha.</p>\n\n<p><strong>Are there plans to tie Polymer in with AngularJS in the future?</strong></p>\n\n<p>They're <a href=\"http://www.polymer-project.org/resources/faq.html#frameworks\" rel=\"nofollow\">separate projects</a>. That said, both the Angular and Ember teams <a href=\"https://groups.google.com/forum/#!msg/polymer-dev/4RSYaKmbtEk/uYnY3900wpIJ\" rel=\"nofollow\">announced</a> they'll eventually move to using the underlying platform APIs in their own frameworks.</p>\n\n<p>^ This is a huge win IMO. In a world where web developers have powerful tools (Shadow DOM, Custom Elements), framework authors also can utilize these primitives to create better frameworks. Most of them currently go through great hoops to \"get the job done\".</p>\n\n<p>UPDATE:</p>\n\n<p>There's a really great article on this topic: \"<a href=\"http://www.binpress.com/blog/2014/06/26/polymer-vs-angular/\" rel=\"nofollow\">Here\u2019s the difference between Polymer and Angular</a>\"</p>\n",
                    "is_accepted": false,
                    "score": 355
                },
                {
                    "body": "<p>For your question:</p>\n\n<blockquote>\n  <p>Are there plans to tie Polymer in with AngularJS in the future?</p>\n</blockquote>\n\n<p>From the official twitter account of AngularJS : \"angularjs will use polymer for its widgets. It's win-win\"</p>\n\n<p>source : <a href=\"https://twitter.com/angularjs/status/335417160438542337\">https://twitter.com/angularjs/status/335417160438542337</a></p>\n",
                    "is_accepted": false,
                    "score": 41
                },
                {
                    "body": "<p>In this video 2 guys from AngularJS talked about differences and similarities about this two frameworks (AngularJS 1.2 and Beyond).</p>\n\n<p>These links will bring you to the correct Q&amp;A's:</p>\n\n<ul>\n<li><a href=\"http://www.youtube.com/watch?v=W13qDdJDHp8&amp;feature=share&amp;t=56m34s\">http://www.youtube.com/watch?v=W13qDdJDHp8&amp;feature=share&amp;t=56m34s</a></li>\n<li><a href=\"http://www.youtube.com/watch?v=W13qDdJDHp8&amp;feature=share&amp;t=59m8s\">http://www.youtube.com/watch?v=W13qDdJDHp8&amp;feature=share&amp;t=59m8s</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I think from a practical perspective, in the end the template feature of angular directives, and the web component methodology leveraged by polymer both accomplish the same task.  The major differences as I can see it are that polymer leverages web APIs to include bits of HTML, a more syntactically correct, and simplistic way of achieving what Angular does programatically as it renders templates.  Polymer is however as has been stated, a small framework for building declarative and interactive templates using components.  It is made available for UI design purposes only, and is only supported in the most modern browsers.  AngularJS is a complete MVC framework designed to make web applications declarative by use of data bindings, dependencies, and directives.  They're two completely different animals.  To your question, it seems to me at this point you'll get no major benefit from using polymer over angular, except having dozens of pre built components, however that would still require you to port those over to angular directives.  In the future however, as the web APIs become more advanced, web components will completely remove the need to programatically define and build templates as the browser will be able to simply include them in a similar way to how it handles javascript or css files.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>1 &amp; 2)</strong> Polymer components are scoped because of their hidden tree in the shadow dom. That means that their style and behaviour cannot bleed out. Angular is not scoped to that particular directive you create like a polymer web component. An angular directive could possibly conflict with something in your global scope. IMO the benefit you will get from polymer is what I explained.. modular components that have scoped css &amp; JavaScript to that particular component that nothing can touch. Untouchable DOM!</p>\n\n<p>Angular directives can be created so that you can annotate an element with several pieces of functionality. In Polymer web components that is not the case. If you want to combine functionality of components you include two components into another component (or wrap them in another component) or you can extend an existing component. Remember the main difference still is that each component is scoped in polymer web components. You can share css &amp; js files across several components or you can inline them.</p>\n\n<p><strong>3)</strong> Yes, Angular plans on incorporating polymer in version 2+ according to Rob Dodson and Eric Bidelman</p>\n\n<p>It's funny how nobody here has mentioned the word scope. I think that is one of the major differences. </p>\n\n<p>There are many differences, but they also have a heck of a lot in common when it comes to creating modular lego like pieces of functionality for an app. I think it's safe to say that Angular would be the application framework and polymer could one day live in the same app along side directives with the major difference being scope but polymer may be a replacement for a lot of your current directives. But I see no reason why Angular could not work as-is and include polymer components as well.</p>\n\n<p>Reading through the answers again while I write this, I noticed that Eric Bidelman(ebidel) did kind of cover that in his <a href=\"http://stackoverflow.com/a/18092637/345078\">answer</a>:</p>\n\n<p><strong>\"Shadow DOM allows composing bits of HTML but also is a tool for encapsulating that HTML.\"</strong></p>\n\n<p>To give credit where credit is due, I got my answers from listening to many interviews with <strong>Rob Dodson</strong> and <strong>Eric Bidelman</strong>. But I feel the answer wasn't worded to give this guy's question the understanding that he wanted. With that said, I think I have touched on the answer he is looking for, but in no way do I possess more information about the subject than Rob Dodson and Eric Bidelman</p>\n\n<p>Here are my main sources for the information I have gathered.</p>\n\n<p><a href=\"http://javascriptjabber.com/120-jsj-google-polymer-with-rob-dodson-and-eric-bidelman/\">JavaScript Jabber -  Polymer with Rob Dodson and Eric Bidelman</a></p>\n\n<p><a href=\"http://shoptalkshow.com/episodes/124-rob-dodson/\">Shop Talk Show - Web Components With Rob Dodson</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Angular is a complete framework for building webapps, whereas Polymer is a library for creating Web Components. Those components, however, can then be used to build a webapp.</p>\n\n<p>Angular has high-level APIs for things like services, routing, server communication and the like. Polymer, on the other hand, doesn\u2019t provide these things except as separate web components from their core library. Instead, it focuses on allowing you to create rich, powerful, reusable web components, which could be used to build webapps like those built with Angular. In the future, the lines could be blurred further as frameworks like Angular may leverage Web Components.</p>\n\n<p>Even though Angular and Polymer aim to do different things, there is currently some overlap. Web components and Angular\u2019s element directives are very similar, and if there\u2019s a comparison to be made it should be between Polymer\u2019s Custom Elements and Angular\u2019s directives.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are already many  great answers here but I'd like to add that it was announced that in Angular 2 they will be almost merged - angular 2 will be completely redesigned and will use web components as it's base.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>On the Polymer <a href=\"http://www.polymer-project.org/docs/start/usingelements.html\">Getting Started</a> page, we see an example of Polymer in action:</p>\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;!-- 1. Shim missing platform features --&gt;\n    &lt;script src=\"polymer-all/platform/platform.js\"&gt;&lt;/script&gt;\n    &lt;!-- 2. Load a component --&gt;\n    &lt;link rel=\"import\" href=\"x-foo.html\"&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;!-- 3. Declare the component by its tag. --&gt;\n    &lt;x-foo&gt;&lt;/x-foo&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>What you will notice is <code>&lt;x-foo&gt;&lt;/x-foo&gt;</code> being defined by <code>platform.js</code> and <code>x-foo.html</code>.</p>\n\n<p>It seems like this is the equivalent to a directive module in AngularJS:</p>\n\n<pre><code>angular.module('xfoo', [])\n.controller('X-Foo', ['$scope',function($scope) {\n    $scope.text = 'hey hey!';\n})\n.directive('x-foo', function() {\n    return {\n        restrict: 'EA',\n        replace: true,\n        controller: 'X-Foo',\n        templateUrl: '/views/x-foo.html',\n        link: function(scope, controller) {\n        }\n    };\n});\n</code></pre>\n\n<ul>\n<li><p>What is the difference between the two?</p></li>\n<li><p>What problems does Polymer solve that AngularJS has not or will not?</p></li>\n<li><p>Are there plans to tie Polymer in with AngularJS in the future?</p></li>\n</ul>\n",
            "last_activity_date": 1424364973,
            "question_id": 18089075,
            "score": 320,
            "tags": [
                "javascript",
                "angularjs",
                "polymer"
            ],
            "title": "What is the difference between Polymer elements and AngularJS directives?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I'm not sure if this directly answers your question, but I think it's relevant:</p>\n\n<p><a href=\"http://lostechies.com/derickbailey/2011/10/11/backbone-js-getting-the-model-for-a-clicked-element/\">http://lostechies.com/derickbailey/2011/10/11/backbone-js-getting-the-model-for-a-clicked-element/</a></p>\n\n<p>The context in which I set up this article is different, of course, but I think the two solutions I offer, along with the pros and cons of each, should get you moving in the right direction.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>To me it does not seem like the worst idea in the world to differentiate between the intital setup and subsequent setups of your views via some sort of flag. To make this clean and easy the flag should be added to your very own View which should extend the Backbone (Base) View.</p>\n\n<p>Same as Derick I am not completely sure if this directly answers your question but I think it might be at least worth mentioning in this context.</p>\n\n<blockquote>\n  <p><a href=\"http://stackoverflow.com/a/9180796/358114\">Also see: Use of an Eventbus in Backbone</a></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is a great question. Backbone is great because of the lack of assumptions it makes, but it does mean you have to (decide how to) implement things like this yourself. After looking through my own stuff, I find that I (kind of) use a mix of scenario 1 and scenario 2. I don't think a 4th magical scenario exists because, simply enough, everything you do in scenario 1 &amp; 2 must be done.</p>\n\n<p>I think it'd be easiest to explain how I like to handle it with an example. Say I have this simple page broken into the specified views:</p>\n\n<p><img src=\"http://i.stack.imgur.com/k2QMj.jpg\" alt=\"Page Breakdown\"></p>\n\n<p>Say the HTML is, after being rendered, something like this:</p>\n\n<pre><code>&lt;div id=\"parent\"&gt;\n    &lt;div id=\"name\"&gt;Person: Kevin Peel&lt;/div&gt;\n    &lt;div id=\"info\"&gt;\n        First name: &lt;span class=\"first_name\"&gt;Kevin&lt;/span&gt;&lt;br /&gt;\n        Last name: &lt;span class=\"last_name\"&gt;Peel&lt;/span&gt;&lt;br /&gt;\n    &lt;/div&gt;\n    &lt;div&gt;Phone Numbers:&lt;/div&gt;\n    &lt;div id=\"phone_numbers\"&gt;\n        &lt;div&gt;#1: 123-456-7890&lt;/div&gt;\n        &lt;div&gt;#2: 456-789-0123&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Hopefully it's pretty obvious how the HTML matches up with the diagram. </p>\n\n<p>The <code>ParentView</code> holds 2 child views, <code>InfoView</code> and <code>PhoneListView</code> as well as a few extra divs, one of which, <code>#name</code>, needs to be set at some point.  <code>PhoneListView</code> holds child views of its own, an array of <code>PhoneView</code> entries.</p>\n\n<p>So on to your actual question.  I handle initialization and rendering differently based on the view type.  I break my views into two types, <code>Parent</code> views and <code>Child</code> views.</p>\n\n<p>The difference between them is simple, <code>Parent</code> views hold child views while <code>Child</code> views do not. So in my example, <code>ParentView</code> and <code>PhoneListView</code> are <code>Parent</code> views, while <code>InfoView</code> and the <code>PhoneView</code> entries are <code>Child</code> views.</p>\n\n<p>Like I mentioned before, the biggest difference between these two categories is when they're allowed to render. In a perfect world, I want <code>Parent</code> views to only ever render once. It is up to their child views to handle any re-rendering when the model(s) change. <code>Child</code> views, on the other hand, I allow to re-render anytime they need since they don't have any other views relying upon them.</p>\n\n<p>In a little more detail, for <code>Parent</code> views I like my <code>initialize</code> functions to do a few things:</p>\n\n<ol>\n<li>Initialize my own view</li>\n<li>Render my own view</li>\n<li>Create and initialize any child views.</li>\n<li>Assign each child view an element within my view (e.g. the <code>InfoView</code> would be assigned <code>#info</code>).</li>\n</ol>\n\n<p>Step 1 is pretty self explanatory.</p>\n\n<p>Step 2, the rendering, is done so that any elements the child views rely on already exist before I try to assign them. By doing this, I know all child <code>events</code> will be correctly set, and I can re-render their blocks as many times as I want without worrying about having to re-delegate anything. I do not actually <code>render</code> any child views here, I allow them to do that within their own <code>initialization</code>.</p>\n\n<p>Steps 3 and 4 are actually handled at the same time as I pass <code>el</code> in while creating the child view. I like to pass an element in here as I feel the parent should determine where in its own view the child is allowed to put its content.</p>\n\n<p>For rendering, I try to keep it pretty simple for <code>Parent</code> views. I want the <code>render</code> function to do nothing more than render the parent view. No event delegation, no rendering of child views, nothing. Just a simple render.</p>\n\n<p>Sometimes this doesn't always work though. For instance in my example above, the <code>#name</code> element will need to be updated any time the name within the model changes. However, this block is part of the <code>ParentView</code> template and not handled by a dedicated <code>Child</code> view, so I work around that. I will create some sort of <code>subRender</code> function that <em>only</em> replaces the content of the <code>#name</code> element, and not have to trash the whole <code>#parent</code> element. This may seem like a hack, but I've really found it works better than having to worry about re-rendering the whole DOM and reattaching elements and such. If I really wanted to make it clean, I'd create a new <code>Child</code> view (similar to the <code>InfoView</code>) that would handle the <code>#name</code> block.</p>\n\n<p>Now for <code>Child</code> views, the <code>initialization</code> is pretty similar to <code>Parent</code> views, just without the creation of any further <code>Child</code> views.  So:</p>\n\n<ol>\n<li>Initialize my view</li>\n<li>Setup binds listening for any changes to the model I care about</li>\n<li>Render my view</li>\n</ol>\n\n<p><code>Child</code> view rendering is also very simple, just render and set the content of my <code>el</code>.  Again, no messing with delegation or anything like that.</p>\n\n<p>Here is some example code of what my <code>ParentView</code> may look like:</p>\n\n<pre><code>var ParentView = Backbone.View.extend({\n    el: \"#parent\",\n    initialize: function() {\n        // Step 1, (init) I want to know anytime the name changes\n        this.model.bind(\"change:first_name\", this.subRender, this);\n        this.model.bind(\"change:last_name\", this.subRender, this);\n\n        // Step 2, render my own view\n        this.render();\n\n        // Step 3/4, create the children and assign elements\n        this.infoView = new InfoView({el: \"#info\", model: this.model});\n        this.phoneListView = new PhoneListView({el: \"#phone_numbers\", model: this.model});\n    },\n    render: function() {\n        // Render my template\n        this.$el.html(this.template());\n\n        // Render the name\n        this.subRender();\n    },\n    subRender: function() {\n        // Set our name block and only our name block\n        $(\"#name\").html(\"Person: \" + this.model.first_name + \" \" + this.model.last_name);\n    }\n});\n</code></pre>\n\n<p>You can see my implementation of <code>subRender</code> here. By having changes bound to <code>subRender</code> instead of <code>render</code>, I don't have to worry about blasting away and rebuilding the whole block.</p>\n\n<p>Here's example code for the <code>InfoView</code> block:</p>\n\n<pre><code>var InfoView = Backbone.View.extend({\n    initialize: function() {\n        // I want to re-render on changes\n        this.model.bind(\"change\", this.render, this);\n\n        // Render\n        this.render();\n    },\n    render: function() {\n        // Just render my template\n        this.$el.html(this.template());\n    }\n});\n</code></pre>\n\n<p>The binds are the important part here.  By binding to my model, I never have to worry about manually calling <code>render</code> myself.  If the model changes, this block will re-render itself without affecting any other views.</p>\n\n<p>The <code>PhoneListView</code> will be similar to the <code>ParentView</code>, you'll just need a little more logic in both your <code>initialization</code> and <code>render</code> functions to handle collections. How you handle the collection is really up to you, but you'll at least need to be listening to the collection events and deciding how you want to render (append/remove, or just re-render the whole block). I personally like to append new views and remove old ones, not re-render the whole view.</p>\n\n<p>The <code>PhoneView</code> will be almost identical to the <code>InfoView</code>, only listening to the model changes it cares about.</p>\n\n<p>Hopefully this has helped a little, please let me know if anything is confusing or not detailed enough.</p>\n",
                    "is_accepted": true,
                    "score": 201
                },
                {
                    "body": "<p>I'm trying to avoid coupling between views like these. There are two ways I usually do:</p>\n\n<h3>Use a router</h3>\n\n<p>Basically, you let your router function initialize parent and child view. So the view has no knowledge of each other, but the router handles it all.</p>\n\n<h3>Passing the same el to both views</h3>\n\n<pre><code>this.parent = new Parent({el: $('.container-placeholder')});\nthis.child = new Child({el: $('.container-placeholder')});\n</code></pre>\n\n<p>Both have knowledge of the same DOM, and you can order them anyway you want.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Kevin Peel gives a great answer - here's my tl;dr version:</p>\n\n<pre><code>initialize : function () {\n\n    //parent init stuff\n\n    this.render(); //ANSWER: RENDER THE PARENT BEFORE INITIALIZING THE CHILD!!\n\n    this.child = new Child();\n},\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>What I do is giving each children an identity (which Backbone has already done that for you: cid)</p>\n\n<p>When Container does the rendering, using the 'cid' and 'tagName' generate a placeholder for every child, so in template the children has no idea about where it will be put by the Container.</p>\n\n<pre><code>&lt;tagName id='cid'&gt;&lt;/tagName&gt;\n</code></pre>\n\n<p>than you can using </p>\n\n<pre><code>Container.render()\nChild.render();\nthis.$('#'+cid).replaceWith(child.$el);\n// the rapalceWith in jquery will detach the element \n// from the dom first, so we need re-delegateEvents here\nchild.delegateEvents();\n</code></pre>\n\n<p>no specified placeholder is needed, and Container only generate the placeholder rather than the children's DOM structure. Cotainer and Children are still generating own DOM elements and only once.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is a light weight mixin for creating and rendering subviews, which I think addresses all the issues in this thread:</p>\n\n<p><a href=\"https://github.com/rotundasoftware/backbone.subviews\" rel=\"nofollow\">https://github.com/rotundasoftware/backbone.subviews</a></p>\n\n<p>The approach taken by this plug is create and render subviews after the <em>first</em> time the parent view is rendered. Then, on subsequent renders of the parent view, $.detach the subview elements, re-render the parent, then insert the subview elements in the appropriate places and re-render them. This way subviews objects are reused on subsequent renders, and there is no need to re-delegate events.</p>\n\n<p>Note that the case of a collection view (where each model in the collection is represented with one subview) is quite different and merits its own discussion / solution I think. Best general solution I am aware of to that case is the <a href=\"https://github.com/marionettejs/backbone.marionette/blob/master/docs/marionette.collectionview.md\" rel=\"nofollow\">CollectionView in Marionette</a>.</p>\n\n<p>EDIT: For the collection view case, you may also want to check out <a href=\"https://github.com/rotundasoftware/backbone.collectionView\" rel=\"nofollow\">this more UI focused implementation</a>, if you need selection of models based on clicks and / or dragging and dropping for reordering.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have three different ways to initialize and render a view and its subviews, and each one of them has different problems. I'm curious to know if there is a better way that solves all of the problems:</p>\n\n<hr>\n\n<h2>Scenario One:</h2>\n\n<p>Initialize the children in the parent's initialize function. This way, not everything gets stuck in render so that there is less blocking on rendering.</p>\n\n<pre><code>initialize : function () {\n\n    //parent init stuff\n\n    this.child = new Child();\n},\n\nrender : function () {\n\n    this.$el.html(this.template());\n\n    this.child.render().appendTo(this.$('.container-placeholder');\n}\n</code></pre>\n\n<p>The problems:</p>\n\n<ul>\n<li><p>The biggest problem is that calling render on the parent for a second time will remove all of the childs event bindings. (This is because of how jQuery's <code>$.html()</code> works.) This could be mitigated by calling <code>this.child.delegateEvents().render().appendTo(this.$el);</code> instead, but then the first, and the most often case, you're doing more work unnecessarily.</p></li>\n<li><p>By appending the children, you force the render function to have knowledge of the parents DOM structure so that you get the ordering you want. Which means changing a template might require updating a view's render function. </p></li>\n</ul>\n\n<hr>\n\n<h2>Scenario Two:</h2>\n\n<p>Initialize the children in the parent's <code>initialize()</code> still, but instead of appending, use <code>setElement().delegateEvents()</code> to set the child to an element in the parents template.</p>\n\n<pre><code>initialize : function () {\n\n    //parent init stuff\n\n    this.child = new Child();\n},\n\nrender : function () {\n\n    this.$el.html(this.template());\n\n    this.child.setElement(this.$('.placeholder-element')).delegateEvents().render();\n}\n</code></pre>\n\n<p>Problems:</p>\n\n<ul>\n<li>This makes the <code>delegateEvents()</code> necessary now, which is a slight negative over it only being necessary on subsequent calls in the first scenario.</li>\n</ul>\n\n<hr>\n\n<h2>Scenario Three:</h2>\n\n<p>Initialize the children in the parent's <code>render()</code> method instead.</p>\n\n<pre><code>initialize : function () {\n\n    //parent init stuff\n},\n\nrender : function () {\n\n    this.$el.html(this.template());\n\n    this.child = new Child();\n\n    this.child.appendTo($.('.container-placeholder').render();\n}\n</code></pre>\n\n<p>Problems:</p>\n\n<ul>\n<li><p>This means that the render function now has to be tied down with all of the initialization logic as well.</p></li>\n<li><p>If I edit the state of one of the child views, and then call render on the parent, a completely new child will be made and all of its current state will be lost. Which also seems like it could get dicey for memory leaks.</p></li>\n</ul>\n\n<hr>\n\n<p>Really curious to get your guys' take on this. Which scenario would you use? or is there a fourth magical one that solves all of these problems?</p>\n\n<p>Have you ever kept track of a rendered state for a View? Say a <code>renderedBefore</code> flag? Seems really janky.</p>\n",
            "last_activity_date": 1422722671,
            "question_id": 9337927,
            "score": 148,
            "tags": [
                "javascript",
                "backbone.js"
            ],
            "title": "How to handle initializing and rendering subviews in Backbone.js?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The result of <code>1/0</code> is <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Infinity\"><code>Infinity</code></a>.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\"><code>parseInt</code></a> treats its first argument as a string which means first of all <code>Infinity.toString()</code> is called, producing the string <code>\"Infinity\"</code>. So it works the same as if you asked it to convert <code>\"Infinity\"</code> in base 19 to decimal.</p>\n\n<p>Here are the digits in base 19 along with their decimal values:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Base 19   Base 10 (decimal)\n---------------------------\n   0            0\n   1            1\n   2            2\n   3            3\n   4            4\n   5            5\n   6            6\n   7            7\n   8            8\n   9            9\n   a            10\n   b            11\n   c            12\n   d            13\n   e            14\n   f            15\n   g            16\n   h            17\n   i            18\n</code></pre>\n\n<p>What happens next is that <code>parseInt</code> scans the input <code>\"Infinity\"</code> to find which part of it can be parsed and stops after accepting the first <code>I</code> (because <code>n</code> is not a valid digit in base 19).</p>\n\n<p>Therefore it behaves as if you called <code>parseInt(\"I\", 19)</code>, which converts to decimal 18 by the table above.</p>\n",
                    "is_accepted": true,
                    "score": 1174
                },
                {
                    "body": "<p>Here's the sequence of events:</p>\n\n<ul>\n<li><code>1/0</code> evaluates to <code>Infinity</code></li>\n<li><code>parseInt</code> reads <code>Infinity</code> and happily notes that <code>I</code> is 18 in base 19</li>\n<li><code>parseInt</code> ignores the remainder of the string, since it can't be converted.</li>\n</ul>\n\n<p>Note that you'd get a result for any base <code>&gt;= 19</code>, but not for bases below that. For bases <code>&gt;= 24</code>, you'll get a larger result, as <code>n</code> becomes a valid digit at that point.</p>\n",
                    "is_accepted": false,
                    "score": 200
                },
                {
                    "body": "<p>To add to the above answers:</p>\n\n<p>parseInt is intended to parse strings into numbers (the clue is in the name).  In your situation, you don't want to do any parsing at all since 1/0 is <em>already</em> a number, so it's a strange choice of function.  If you have a number (which you do) and want to convert it to a particular base, you should use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number/toString\">toString with a radix</a> instead.</p>\n\n<pre><code>var num = 1 / 0;\nvar numInBase19 = num.toString(19); // returns the string \"Infinity\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>To add to the above answers</p>\n\n<p><code>parseInt(1/0,19)</code> is equivalent to <code>parseInt(\"Infinity\",19)</code></p>\n\n<p>Within base 19 numbers <code>0-9</code> and  <code>A-I</code> <code>(or a-i)</code> are a valid numbers. So, from the \"Infinity\" it takes <code>I</code> of base 19 and converts to base 10 which becomes 18\nThen it tries to take the next character i.e. <code>n</code> which is not present in base 19 so discards next characters (as per javascript's behavior of converting string to number)</p>\n\n<p>So, if you write <code>parseInt(\"Infinity\",19)</code> OR  <code>parseInt(\"I\",19)</code> OR <code>parseInt(\"i\",19)</code> the result will be same i.e <code>18</code>.</p>\n\n<p>Now, if you write <code>parseInt(\"I0\",19)</code> the result will be <code>342</code>\nas <code>I X 19 (the base)^1 + 0 X 19^0</code>  = <code>18 X 19^1 + 0 X 19^0</code> = <code>18 X 19 + 0 X 1</code>  = <code>342</code></p>\n\n<p>Similarly, <code>parseInt(\"I11\",19)</code> will result in <code>6518</code></p>\n\n<p>i.e. </p>\n\n<pre><code>  18 X 19^2  +   1 X 19^1   +  1 X 19^0\n= 18 X 19^2  +   1 X 19^1   +  1 X 19^0\n= 18 X 361   +   1 X 19     +  1 X 1\n= 6498  +  19  +  1\n= 6518\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I've an annoying problem in JavaScript.</p>\n\n<pre><code>parseInt(1 / 0, 19)\n18\n</code></pre>\n\n<p>Why does <code>parseInt</code> return <code>18</code>?</p>\n",
            "last_activity_date": 1388671468,
            "question_id": 11340673,
            "score": 691,
            "tags": [
                "javascript",
                "parseint"
            ],
            "title": "Why does parseInt(1/0, 19) return 18?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.scribd.com/doc/28271661/18/Identifier-Names-and-Identifiers\">EcmaScript 262, section 7.6</a> says names must start with $, _, or a Unicode letter, and after that may contain either those characters, or Unicode combining marks, Unicode digits, or Unicode connector punctuation (and a couple of format-control characters that are language specific.)</p>\n\n<p>So, the difference between allowed and not allowed identifiers in your cases is probably whether the leading character is considered a \"letter\".</p>\n",
                    "is_accepted": false,
                    "score": 75
                },
                {
                    "body": "<p>\u0ca0_\u0ca0\nand \u8349\u6ce5\u9a6c only contain \"letters\" used in actual alphabets; that is, \u0ca0\nis a symbol from the <a href=\"http://en.wikipedia.org/wiki/Kannada_alphabet\">Kannada alphabet</a>, and \u8349\u6ce5\u9a6c consists of Chinese characters.</p>\n\n<p>\u25ce and \u263a, however, are purely symbols; they are not associated with any alphabet.</p>\n\n<p>The <a href=\"http://es5.github.com/#x7.6\">ECMAScript standard, chapter 7.6</a> (which all the browsers except Internet Explorer are following), states that an identifier must start with one of the following.</p>\n\n<ul>\n<li>a Unicode letter</li>\n<li><code>$</code> or <code>_</code></li>\n<li><code>\\</code> followed by a unicode escape sequence.</li>\n</ul>\n\n<p>The following characters of an identifier must be one of the following.</p>\n\n<ul>\n<li>any of the characters permitted at the start</li>\n<li>a Unicode combining mark</li>\n<li>a Unicode digit</li>\n<li>a Unicode connector punctuation</li>\n<li>a zero-width-non-joiner</li>\n<li>a zero-width joiner</li>\n</ul>\n\n<p>IE goes beyond the standard and is permissive enough to allow some symbols, such as \u263a.</p>\n\n<p>There\u2019s <a href=\"http://mothereff.in/js-variables\">a tool</a> that will tell you if any string that you enter is a valid JavaScript variable name according to ECMAScript 5.1 and Unicode 6.1.</p>\n",
                    "is_accepted": true,
                    "score": 530
                },
                {
                    "body": "<p>To quote <a href=\"http://mathiasbynens.be/notes/javascript-identifiers\"><em><strong>Valid JavaScript variable names</strong></em></a>, my write-up summarizing the relevant spec sections:</p>\n\n<blockquote>\n  <p>An identifier must start with <code>$</code>, <code>_</code>, or any character in the Unicode categories <a href=\"http://graphemica.com/categories/uppercase-letter\">\u201cUppercase letter (Lu)\u201d</a>, <a href=\"http://graphemica.com/categories/lowercase-letter\">\u201cLowercase letter (Ll)\u201d</a>, <a href=\"http://graphemica.com/categories/titlecase-letter\">\u201cTitlecase letter (Lt)\u201d</a>, <a href=\"http://graphemica.com/categories/modifier-letter\">\u201cModifier letter (Lm)\u201d</a>, <a href=\"http://graphemica.com/categories/other-letter\">\u201cOther letter (Lo)\u201d</a>, or <a href=\"http://graphemica.com/categories/letter-number\">\u201cLetter number (Nl)\u201d</a>.</p>\n  \n  <p>The rest of the string can contain the same characters, plus any <em>U+200C zero width non-joiner</em> characters, <em>U+200D zero width joiner</em> characters, and characters in the Unicode categories <a href=\"http://graphemica.com/unicode/categories/nonspacing-mark\">\u201cNon-spacing mark (Mn)\u201d</a>, <a href=\"http://graphemica.com/categories/spacing-combining-mark\">\u201cSpacing combining mark (Mc)\u201d</a>, <a href=\"http://graphemica.com/categories/decimal-digit-number\">\u201cDecimal digit number (Nd)\u201d</a>, or <a href=\"http://graphemica.com/categories/connector-punctuation\">\u201cConnector punctuation (Pc)\u201d</a>.</p>\n</blockquote>\n\n<p>I\u2019ve also created <a href=\"http://mothereff.in/js-variables\">a tool</a> that will tell you if any string that you enter is a valid JavaScript variable name according to ECMAScript 5.1 and Unicode 6.3:</p>\n\n<p><a href=\"http://mothereff.in/js-variables\"><img src=\"http://i.imgur.com/YEE9a.png\" alt=\"JavaScript variable name validator\"></a></p>\n\n<hr>\n\n<p>P.S. If you were to summarize all these rules in <a href=\"https://gist.github.com/mathiasbynens/6334847\">a single ASCII-only regular expression for JavaScript</a>, <strong>it would be over 9,000 characters long</strong>. Here it is:</p>\n\n<pre><code>// ECMAScript 5.1 / Unicode v6.3.0:\n/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|null|this|true|void|with|break|catch|class|const|false|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[\\x24A-Z\\x5Fa-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC][\\x240-9A-Z\\x5Fa-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0\\u08A2-\\u08AC\\u08E4-\\u08FE\\u0900-\\u0963\\u0966-\\u096F\\u0971-\\u0977\\u0979-\\u097F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1D00-\\u1DE6\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA697\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7B\\uAA80-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE26\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]*$/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>For the great justice: since most things in JS are \"objects\", you can use square-bracket syntax:</p>\n\n<pre><code>window[\"\u25ce\u072b\u25ce\"] = true;\nalert(window[\"\u25ce\u072b\u25ce\"]); // alerts \"true\"\n</code></pre>\n\n<p>This is the same thing as do var smth = true in global context.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I noticed that in Internet Explorer (but, unfortunately, not in the other browsers I tested), you can use some Unicode variable names. This made my day, and I was absolutely delighted that I could write fun Unicode-laden code like this:</p>\n\n<pre><code>var \u043a\u0442\u043e\u03b5\u03af\u03bd\u03b1\u03b9\u8349\u6ce5\u9a6c = \"You dirty horse.\",\n  happy\u263an\u263amat\u263ap\u263aeia = \":)Yay!\",\n  \u0ca0_\u0ca0 = \"emoticon\";\nalert(\u043a\u0442\u043e\u03b5\u03af\u03bd\u03b1\u03b9\u8349\u6ce5\u9a6c + happy\u263an\u263amat\u263ap\u263aeia + \u0ca0_\u0ca0);\n</code></pre>\n\n<p>For some reason, though, <code>\u25ce\u072b\u25ce</code>, <code>\u2668_\u2668</code> and <code>\u263a</code> are not valid variable names.</p>\n\n<p>Why do <code>\u0ca0_\u0ca0</code> and <code>\u8349\u6ce5\u9a6c</code> work, but <code>\u25ce\u072b\u25ce</code>, <code>\u2668_\u2668</code> and <code>\u263a</code> don't?</p>\n\n<p>EDIT: Test it out in your browser on <a href=\"http://jsfiddle.net/h5Gsf/1/\">JSFiddle</a>. I've tested it in Internet&nbsp;Explorer&nbsp;9, Chrome, Firefox, and Opera. So far, it seems to only work in Internet&nbsp;Explorer&nbsp;9. (I don't know about Internet&nbsp;Explorer&nbsp;8 and below.) Let me know if it works in another browser.</p>\n",
            "last_activity_date": 1381751629,
            "question_id": 7451524,
            "score": 590,
            "tags": [
                "javascript",
                "naming-conventions",
                "invalid-characters"
            ],
            "title": "Why aren&#39;t \u25ce\u072b\u25ce and \u263a valid JavaScript variable names?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>You could try using the <a href=\"http://getfirebug.com/\" rel=\"nofollow\">Firebug</a> plugin for Firefox to view the CSS on the button.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The <a href=\"https://addons.mozilla.org/en-US/firefox/addon/60\" rel=\"nofollow\">Web Developer Toolbar</a> has a view style information under the css menu that will tell  you what css is applied to an item. There is also the Edit CSS feature in that menu that will let you change the CSS on the fly to see how it affects the page.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>However you decide to do it, make sure you first render the page with the default:</p>\n\n<pre><code>&lt;input type=\"submit\" value=\"submit\" /&gt;\n</code></pre>\n\n<p>... And then use jQuery to swap the input element with your custom button that has an onClick event. This will ensure that people without JavaScript enabled will still be able to use your site.</p>\n\n<p>Usability should come first!</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>This is their \"Archive\" Button, according to Firebug.</p>\n\n<pre><code>&lt;div tabindex=\"0\" act=\"7\" class=\"goog-imageless-button goog-inline-block goog-imageless-button goog-imageless-button-collapse-right goog-imageless-button-primary\" id=\"\"&gt;\n  &lt;div class=\"goog-inline-block goog-imageless-button-outer-box\"&gt;\n    &lt;div class=\"goog-inline-block goog-imageless-button-inner-box\"&gt;\n      &lt;div class=\"goog-imageless-button-pos\"&gt;\n        &lt;div class=\"goog-imageless-button-top-shadow\"&gt;\u00a0&lt;/div&gt;\n        &lt;div class=\"goog-imageless-button-content\"&gt;&lt;b&gt;Archive&lt;/b&gt;&lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>The CSS is more than I care to organize/paste for this. Perhaps it's just me, but when the markup/css become this heavy, I think I would much rather <strong>USE AN IMAGE</strong> (or a couple images as backgrounds. Better yet, Sprites). Besides, an image for this button would be less than a single K.</p>\n\n<p>As much as I love Google, this seems a bit overkill.</p>\n\n<p><hr /></p>\n\n<p><strong>Update:</strong>\nGoogle is a unique case. If you're a massive site and you wish to internationalize your content, then this image-less technique is actually really cool. It allows you to apply just about any written language to your UI, without needing to generate new images, or fear of breaking your buttons.</p>\n\n<p>See Question: <a href=\"http://stackoverflow.com/questions/539703/what-are-the-advantages-of-using-an-imageless-button\">What are the advantages of using an imageless button?</a></p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>The biggest problem you are going to have will be making it work across browsers.</p>\n\n<p>I think you should strongly consider whether you really need it ... Google gets a lot of bang for the buck by making something like this because of the vast number of buttons and languages that they need; I suspect that most sites and applications would be just as well-off using an image.</p>\n\n<p>An open-source component is a good idea, though: spread the wealth and effort widely.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>-- EDIT -- I didn't see the link in the original post. Sorry! Will try and re-write to reflect actual question</p>\n\n<p>StopDesign has an excellent post on this <a href=\"http://stopdesign.com/archive/2009/02/04/recreating-the-button.html\">here</a>. <strong>[edit 20091107] These were released as part of the <a href=\"http://code.google.com/closure/\">closure library</a>: see the <a href=\"http://closure-library.googlecode.com/svn/trunk/closure/goog/demos/button.html\">button demo</a>.</strong></p>\n\n<p>Basically the custom buttons he <a href=\"http://stopdesign.com/eg/buttons/3.0/code.html\">shows</a> are created using a simple bit of CSS.</p>\n\n<p>He originally used 9 tables to get the effect: <img src=\"http://stopdesign.com/img/archive/2009/02/9-cell.png\" alt=\"9 Tables\"></p>\n\n<p>But later he used a simple 1px left and right margin on the top and bottom borders to achieve the same effect.</p>\n\n<p>The gradient is faked by using three layers: <img src=\"http://stopdesign.com/img/archive/2009/02/bands-spec.png\" alt=\"Button Gradient\"></p>\n\n<p>All of the code can be found at the <a href=\"http://stopdesign.com/eg/buttons/3.1/code.html\">Custom Buttons 3.1</a> page. (although the gradient without the image is only working in Firefox and Safari)</p>\n\n<h2>Step by Step Instructions</h2>\n\n<p>1 - Insert the following CSS:</p>\n\n<pre><code>/* Start custom button CSS here\n---------------------------------------- */\n.btn {\n  display:inline-block;\n  background:none;\n  margin:0;\n  padding:3px 0;\n  border-width:0;\n  overflow:visible;\n  font:100%/1.2 Arial,Sans-serif;\n  text-decoration:none;\n  color:#333;\n  }\n* html button.btn {\n  padding-bottom:1px;\n  }\n/* Immediately below is a temporary hack to serve the \n   following margin values only to Gecko browsers\n   Gecko browsers add an extra 3px of left/right \n   padding to button elements which can't be overriden.\n   Thus, we use -3px of left/right margin to overcome this. */\nhtml:not([lang*=\"\"]) button.btn {\n  margin:0 -3px;\n  }\n.btn span {\n  background:#f9f9f9;\n  z-index:1;\n  margin:0;\n  padding:3px 0;\n  border-left:1px solid #ccc;\n  border-right:1px solid #bbb;\n  }\n* html .btn span {\n  padding-top:0;\n  }\n.btn span span {\n  background:none;\n  position:relative;\n  padding:3px .4em;\n  border-width:0;\n  border-top:1px solid #ccc;\n  border-bottom:1px solid #bbb;\n  }\n.btn b {\n  background:#e3e3e3;\n  position:absolute;\n  z-index:2;\n  bottom:0;\n  left:0;\n  width:100%;\n  overflow:hidden;\n  height:40%;\n  border-top:3px solid #eee;\n  }\n* html .btn b {\n  top:1px;\n  }\n.btn u {\n  text-decoration:none;\n  position:relative;\n  z-index:3;\n  }\n\n/* pill classes only needed if using pill style buttons ( LEFT | CENTER | RIGHT ) */\nbutton.pill-l span {\n  border-right-width:0;\n  }\nbutton.pill-l span span {\n  border-right:1px solid #ccc;\n  }\nbutton.pill-c span {\n  border-right-style:none;\n  border-left-color:#fff;\n  }\nbutton.pill-c span span {\n  border-right:1px solid #ccc;\n  }\nbutton.pill-r span {\n  border-left-color:#fff;\n  }\n\n/* only needed if implementing separate hover state for buttons */\n.btn:hover span, .btn:hover span span {\n  cursor:pointer;\n  border-color:#9cf !important;\n  color:#000;\n  }\n\n/* use if one button should be the 'primary' button */\n.primary {\n  font-weight:bold;\n  color:#000;\n  }\n</code></pre>\n\n<p>2 - Use one of the following ways to call it (more can be found in the links above)</p>\n\n<pre><code>&lt;a href=\"#\" class=\"btn\"&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;&amp;nbsp;&lt;/b&gt;&lt;u&gt;button&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;\n</code></pre>\n\n<p>or </p>\n\n<pre><code>&lt;button type=\"button\" class=\"btn\"&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;&amp;nbsp;&lt;/b&gt;&lt;u&gt;button&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/button&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 53
                },
                {
                    "body": "<p>The majority of the work here probably won't be the design - those posts are already an excellent How-To on the gradient effects.</p>\n\n<p>The problem is getting this working in all browsers, or more specifically the quirky piles of rubbish that are IE6 and IE7.</p>\n\n<p>I think you're on the right track with a standard button that gets re-written with jQuery - that way you'll still be accessible for screen readers and can degrade nicely in really old browsers.</p>\n\n<p>For the HTML I think your best bet is to visit Gmail with each browser and see what HTML is produced - I'd expect it to be completely different for IE6, IE7, (also depending on whether they need quirks-mode) and everything else. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could use this jquery plugin I've developed. The buttons work pratically anywhere and since it's a plugin they're easy to set up and configure.</p>\n\n<p><a href=\"http://swizec.com/code/styledButton/\" rel=\"nofollow\">http://swizec.com/code/styledButton/</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>These were released as part of the <a href=\"http://code.google.com/closure/\" rel=\"nofollow\">closure library</a>: see the <a href=\"http://closure-library.googlecode.com/svn/trunk/closure/goog/demos/button.html\" rel=\"nofollow\">button demo</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The post with a link to the closure library does not apply. What was released as part of the closure library uses buttons with <em>gradients</em>.</p>\n\n<p>The other solutions listed are useless. You cannot go from there and get these buttons working on every browser Gmail has them working. What Bowman shows on his site is not working code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Updating this post for 2011:</strong>\n<br /><br />\nGoogle launched a new design across its services in July 2011. The new Google buttons have been recreated here: <a href=\"http://pixify.com/blog/use-google-plus-to-improve-your-ui/\" rel=\"nofollow\">http://pixify.com/blog/use-google-plus-to-improve-your-ui/</a>\n<br /><br />\nThe new buttons look like this:\n<img src=\"http://i.stack.imgur.com/LXlhS.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>There have been a few articles recently about Google's new imageless buttons:</p>\n\n<ul>\n<li><a href=\"http://stopdesign.com/archive/2009/02/04/recreating-the-button.html\">http://stopdesign.com/archive/2009/02/04/recreating-the-button.html</a></li>\n<li><a href=\"http://stopdesign.com/eg/buttons/3.0/code.html\">http://stopdesign.com/eg/buttons/3.0/code.html</a></li>\n<li><a href=\"http://stopdesign.com/eg/buttons/3.1/code.html\">http://stopdesign.com/eg/buttons/3.1/code.html</a></li>\n<li><a href=\"http://gmailblog.blogspot.com/2009/02/new-ways-to-label-with-move-to-and-auto.html\">http://gmailblog.blogspot.com/2009/02/new-ways-to-label-with-move-to-and-auto.html</a></li>\n</ul>\n\n<p>I really like how these new buttons work in Gmail.  How can I use these or similar buttons on my site?  Are there any open source projects with a similar look &amp; feel?</p>\n\n<p>If I wanted to roll my own button package like this using JQuery/XHTML/CSS, what elements could I use?  My initial thoughts are:</p>\n\n<ol>\n<li><p>Standard <code>&lt;input type=\"button\"&gt;</code> with css to improve the look (the design article talked mostly about the css/imges involves.)</p></li>\n<li><p>Jquery javascript to bring up a custom dialog rooted to the button on the \"onclick\" event which would have <code>&lt;a&gt;</code> tags in them and a search bar for filtering?  Would a table layout for that popup be sane?</p></li>\n</ol>\n\n<p>I'm terrible at reverse engineering things on the web, what are some of the tools that I could use to help reverse engineer these buttons?  Using Firefox's web developer toolbar I can't really see the css or javascript (even if it is minified) that is used on the buttons popup dialogs.  What browser tool or other method could I use to peek at them and get some ideas?</p>\n\n<p>I'm not looking to steal any of Google's IP, just get an idea of how I could create similar button functionality.</p>\n",
            "last_activity_date": 1311501451,
            "question_id": 520640,
            "score": 89,
            "tags": [
                "javascript",
                "html",
                "css",
                "gmail",
                "reverse-engineering"
            ],
            "title": "Google&#39;s Imageless Buttons"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I know nothing about the internal workings of node.js, but I can see how using an event loop can outperform threaded I/O handling. Imagine a disc request, give me staticFile.x, make it 100 requests for that file. Each request normally takes up a thread retreiving that file, thats 100 threads.</p>\n\n<p>Now imagine the first request creating one thread that becomes a publisher object, all 99 other requests first look if there's a publisher object for staticFile.x, if so, listen to it while it's doing it's work, otherwise start a new thread and thus a new publisher object.</p>\n\n<p>Once the single thread is done, it passes staticFile.x to all 100 listeners and destroys itself, so the next request creates a fresh new thread and publisher object.</p>\n\n<p>So it's 100 threads vs 1 thread in the above example, but also 1 disc lookup instead of 100 disc lookups, the gain can be quite phenominal. Ryan is a smart guy!</p>\n\n<p>Another way to look at is is one of his examples at the start of the movie. Instead of:</p>\n\n<pre><code>pseudo code:\nresult = query('select * from ...');\n</code></pre>\n\n<p>Again, 100 seperate queries to a database versus...:</p>\n\n<pre><code>pseudo code:\nquery('select * from ...', function(result){\n    // do stuff with result\n});\n</code></pre>\n\n<p>If a query was already going, other equal queries would simply jump on the bandwagon, so you can have 100 queries in a single database roundtrip.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<blockquote>\n  <p>What I don't understand is the point\n  that Node.js still is using threads.</p>\n</blockquote>\n\n<p>Ryan uses threads for that parts that are blocking(Most of node.js uses non-blocking IO) because some parts are insane hard to write non blocking. But I believe Ryan wish is to have everything non-blocking.\nOn <a href=\"http://s3.amazonaws.com/four.livejournal/20091117/jsconf.pdf\">slide 63(internal design)</a> you see Ryan uses <a href=\"http://software.schmorp.de/pkg/libev.html\">libev</a>(library that abstracts asynchronous event notification) for the non-blocking <a href=\"http://en.wikipedia.org/wiki/Event_loop\">eventloop</a>. Because of the event-loop node.js needs lesser threads which reduces context switching, memory consumption etc. </p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There are actually a few different things being conflated here.  But it starts with the meme that threads are just really hard.  So if they're hard, you are more likely, when using threads to 1) break due to bugs and 2) not use them as efficiently as possible.  (2) is the one you're asking about.</p>\n\n<p>Think about one of the examples he gives, where a request comes in and you run some query, and then do something with the results of that.  If you write it in a standard procedural way, the code might look like this:</p>\n\n<pre><code>result = query( \"select smurfs from some_mushroom\" );\n// twiddle fingers\ngo_do_something_with_result( result );\n</code></pre>\n\n<p>If the request coming in caused you to create a new thread that ran the above code, you'll have a thread sitting there, doing nothing at all while while <code>query()</code> is running.  (Apache, according to Ryan, is using a single thread to satisfy the original request whereas nginx is outperforming it in the cases he's talking about because it's not.)</p>\n\n<p>Now, if you were really clever, you would express the code above in a way where the environment could go off and do something else while you're running the query:</p>\n\n<pre><code>query( statement: \"select smurfs from some_mushroom\", callback: go_do_something_with_result() );\n</code></pre>\n\n<p>This is basically what node.js is doing.  You're basically decorating -- in a way that is convenient because of the language and environment, hence the points about closures -- your code in such a way that the environment can be clever about what runs, and when.  In that way, node.js isn't <em>new</em> in the sense that it invented asynchronous I/O (not that anyone claimed anything like this), but it's new in that the way it's expressed is a little different.  </p>\n\n<p>Note: when I say that the environment can be clever about what runs and when, specifically what I mean is that the thread it used to start some I/O can now be used to handle some other request, or some computation that can be done in parallel, or start some other parallel I/O.  (I'm not certain node is sophisticated enough to start more work for the same request, but you get the idea.)</p>\n",
                    "is_accepted": true,
                    "score": 95
                },
                {
                    "body": "<p><strong>Note!</strong> This is an old answer. While it's still true in the rough outline, some details might have changed because of Node's rapid development in the last few years.</p>\n\n<p>It is using threads because:</p>\n\n<ol>\n<li>The <a href=\"http://fixunix.com/linux/401454-aio_read-write-versus-o_nonblock-linux-context.html\">O_NONBLOCK option of open() does not work on files</a>. </li>\n<li>There are third-party libraries which don't offer non-blocking IO.</li>\n</ol>\n\n<p>To fake non-blocking IO, threads are neccessary: do blocking IO in a separate thread. It is an ugly solution and causes much overhead.</p>\n\n<p>It's even worse on the hardware level:</p>\n\n<ul>\n<li>With <a href=\"http://en.wikipedia.org/wiki/Direct_memory_access\">DMA</a> the CPU asynchronously offloads IO.</li>\n<li>Data is transferred directly between the IO device and the memory.</li>\n<li>The kernel wraps this in a synchronous, blocking system call.</li>\n<li>Node.js wraps the blocking system call in a thread.</li>\n</ul>\n\n<p>This is just plain stupid and inefficient. But it works at least! We can enjoy Node.js because it hides the ugly and cumbersome details behind an event-driven asynchronous architecture.</p>\n\n<p>Maybe someone will implement O_NONBLOCK for files in the future?...</p>\n\n<p><strong>Edit:</strong> I discussed this with a friend and he told me that an alternative to threads is polling with <a href=\"http://linux.die.net/man/2/select\">select</a>: specify a timeout of 0 and do IO on the returned file descriptors (now that they are guaranteed not to block).</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Threads are used only to deal with functions having no asynchronous facility, like <code>stat()</code>.  </p>\n\n<p>The <code>stat()</code> function is always blocking, so node.js needs to use a thread to perform the actual call without blocking the main thread (event loop).  Potentially, no thread from the thread pool will ever be used if you don't need to call those kind of functions.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I fear I'm \"doing the wrong thing\" here, if so delete me and I apologize. In particular, I fail to see how I create the neat little annotations that some folks have created. However, I have many concerns/observations to make on this thread.</p>\n\n<p>1) The commented element in the pseudo-code in one of the popular answers </p>\n\n<pre><code>result = query( \"select smurfs from some_mushroom\" );\n// twiddle fingers\ngo_do_something_with_result( result );\n</code></pre>\n\n<p>is essentially bogus. If the thread is computing, then it's not twiddling thumbs, it's doing necessary work. If, on the other hand, it's simply waiting for the completion of IO, then it's <em>not</em> using CPU time, the whole point of the thread control infrastructure in the kernel is that the CPU will find something useful to do. The only way to \"twiddle your thumbs\" as suggested here would be to create a polling loop, and nobody who has coded a real webserver is inept enough to do that.</p>\n\n<p>2) \"Threads are hard\", only makes sense in the context of data sharing. If you have essentially independent threads such as is the case when handling independent web requests, then threading is trivially simple, you just code up the linear flow of how to handle one job, and sit pretty knowing that it will handle multiple requests, and each will be effectively independent. Personally, I would venture that for most programmers, learning the closure/callback mechanism is more complex than simply coding the top-to-bottom thread version. (But yes, if you have to communicate between the threads, life gets really hard really fast, but then I'm unconvinced that the closure/callback mechanism really changes that, it just restricts your options, because this approach is still achievable with threads. Anyway, that's a whole other discussion that's really not relevant here).</p>\n\n<p>3) So far, nobody has presented any real evidence as to why one particular type of context switch would be more or less time consuming than any other type. My experience in creating multi-tasking kernels (on a small scale for embedded controllers, nothing so fancy as a \"real\" OS) suggests that this would not be the case.</p>\n\n<p>4) All the illustrations that I have seen to date that purport to show how much faster Node is than other webservers are horribly flawed, however, they're flawed in a way that does indirectly illustrate one advantage I would definitely accept for Node (and it's by no means insignificant). Node doesn't look like it needs (nor even permits, actually) tuning. If you have a threaded model, you need to create sufficient threads to handle the expected load. Do this badly, and you'll end up with poor performance. If there are too few threads, then the CPU is idle, but unable to accept more requests, create too many threads, and you will waste kernel memory, and in the case of a Java environment, you'll also be wasting main heap memory. Now, for Java, wasting heap is the first, best, way to screw up the system's performance, because efficient garbage collection (currently, this might change with G1, but it seems that the jury is still out on that point as of early 2013 at least) depends on having lots of spare heap. So, there's the issue, tune it with too few threads, you have idle CPUs and poor throughput, tune it with too many, and it bogs down in other ways.</p>\n\n<p>5) There is another way in which I accept the logic of the claim that Node's approach \"is faster by design\", and that is this. Most thread models use a time-sliced context switch model, layered on top of the more appropriate (value judgement alert :) and more efficient (not a value judgement) preemptive model. This happens for two reasons, first, most programmers don't seem to understand priority preemption, and second, if you learn threading in a windows environment, the timeslicing is there whether you like it or not (of course, this reinforces the first point; notably, the first versions of Java used priority preemption on Solaris implementations, and timeslicing in Windows. Because most programmers didn't understand and complained that \"threading doesn't work in Solaris\" they changed the model to timeslice everywhere). Anyway, the bottom line is that timeslicing creates additional (and potentially unnecessary) context switches. Every context switch takes CPU time, and that time is effectively removed from the work that can be done on the real job at hand. However, the amount of time invested in context switching because of timeslicing should not be more than a very small percentage of the overall time, unless something pretty outlandish is happening, and there's no reason I can see to expect that to be the case in a simple webserver). So, yes, the excess context switches involved in timeslicing are inefficient (and these don't happen in <em>kernel</em> threads as a rule, btw) but the difference will be a few percent of throughput, not the kind of whole number factors that are implied in the performance claims that are often implied for Node.</p>\n\n<p>Anyway, apologies for that all being long and rambly, but I really feel that so far, the discussion hasn't proved anything, and I would be pleased to hear from someone in either of these situations:</p>\n\n<p>a) a real explanation of why Node should be better (beyond the two scenarios I've outlined above, the first of which (poor tuning) I believe is the real explanation for all the tests I've seen so far. ([edit], actually, the more I think about it, the more I'm wondering if the memory used by vast numbers of stacks might be significant here. The default stack sizes for modern threads tend to be pretty huge, but the memory allocated by a closure-based event system would be only what's needed)</p>\n\n<p>b) a real benchmark that actually gives a fair chance to the threaded server of choice. At least that way, I'd have to stop believing that the claims are essentially false ;> ([edit] that's probably rather stronger than I intended, but I do feel that the explanations given for performance benefits are incomplete at best, and the benchmarks shown are unreasonable).</p>\n\n<p>Cheers,\nToby</p>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I just watched the following video: <a href=\"http://www.yuiblog.com/blog/2010/05/20/video-dahl/\">Introduction to Node.js</a> and still don't understand how you get the speed benefits.</p>\n\n<p>Mainly, at one point Ryan Dahl (Node.js' creator) says that Node.js is event-loop based instead of thread-based.  Threads are expensive and should only be left to the experts of concurrent programming to be utilized.  </p>\n\n<p>Later, he then shows the architecture stack of Node.js which has an underlying C implementation which has its own Thread pool internally.  So obviously Node.js developers would never kick off their own threads or use the thread pool directly...they use async call-backs.  That much I understand.</p>\n\n<p>What I don't understand is the point that Node.js still is using threads...it's just hiding the implementation so how is this faster if 50 people request 50 files (not currently in memory) well then aren't 50 threads required?</p>\n\n<p>The only difference being that since it's managed internally the Node.js developer doesn't have to code the threaded details but underneath it's still using the threads to process the IO (blocking) file requests.</p>\n\n<p>So aren't you really just taking one problem (threading) and hiding it while that problem still exists: mainly multiple threads, context switching, dead-locks...etc?  </p>\n\n<p>There must be some detail I still do not understand here.</p>\n",
            "last_activity_date": 1359339599,
            "question_id": 3629784,
            "score": 163,
            "tags": [
                "javascript",
                "architecture",
                "concurrency",
                "node.js"
            ],
            "title": "How is Node.js inherently faster when it still relies on Threads internally?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>In the simplest terms, the tilde matches the most recent minor version\n  (the middle number). ~1.2.3 will match all 1.2.x versions but will\n  miss 1.3.0.</p>\n  \n  <p>The caret, on the other hand, is more relaxed. It will update you to\n  the most recent major version (the first number). ^1.2.3 will match\n  any 1.x.x release including 1.3.0, but will hold off on 2.0.0.</p>\n</blockquote>\n\n<p><a href=\"http://fredkschott.com/post/2014/02/npm-no-longer-defaults-to-tildes/\">http://fredkschott.com/post/2014/02/npm-no-longer-defaults-to-tildes/</a></p>\n",
                    "is_accepted": true,
                    "score": 278
                },
                {
                    "body": "<p><code>~</code> fixes major and minor numbers. It is used when you're ready to accept bug-fixes in your dependency, but don't want any potentially incompatible changes.</p>\n\n<p><code>^</code> fixes the major number only. It is used when you're closely watching your dependencies and are ready to quickly change your code if minor release will be incompatible.</p>\n\n<p>In addition to that, <code>^</code> is <a href=\"https://stackoverflow.com/questions/22270244/install-grunt-phonegap-error-no-compatible-version-found-urijs1-12-0#comment33861904_22270244\">not supported</a> by old npm versions, and should be used with caution.</p>\n\n<p>So, <code>^</code> is a good default, but it's not perfect. I suggest to carefully pick and configure the semver operator that is most useful to you.</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p><code>~</code> : Reasonably <strong>close</strong> to</p>\n\n<pre><code>   ~1.1.5: 1.1.0 &lt;= accepted &lt; 1.2.0\n</code></pre>\n\n<p><code>^</code>: <strong>Compatible</strong> with</p>\n\n<pre><code>   ^1.1.5: 1.1.5 &lt;= accepted &lt; 2.0.0\n\n   ^0.1.3: 0.1.3 &lt;= accepted &lt; 0.2.0\n\n   ^0.0.4: 0.0.4 &lt;= accepted &lt; 0.1.0\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I would like to add the official npmjs documentation as well which describes all methods for version specificity including the ones referred to in the question - <a href=\"https://www.npmjs.org/doc/files/package.json.html\" rel=\"nofollow\">https://www.npmjs.org/doc/files/package.json.html</a></p>\n\n<ul>\n<li><code>version</code> Must match version exactly</li>\n<li><code>&gt;version</code> Must be greater than version</li>\n<li><code>&gt;=version</code> etc</li>\n<li><code>&lt;version</code></li>\n<li><code>&lt;=version</code></li>\n<li><code>~version</code> \"Approximately equivalent to version\" See <a href=\"https://docs.npmjs.com/misc/semver#prerelease-identifiers\" rel=\"nofollow\">npm semver - Tilde Ranges</a> &amp; <a href=\"http://semver.org/\" rel=\"nofollow\">semver (7)</a></li>\n<li><code>^version</code> \"Compatible with version\" See <a href=\"https://docs.npmjs.com/misc/semver#prerelease-identifiers\" rel=\"nofollow\">npm semver - Caret Ranges</a> &amp; <a href=\"http://semver.org/\" rel=\"nofollow\">semver (7)</a></li>\n<li><code>1.2.x</code> 1.2.0, 1.2.1, etc., but not 1.3.0</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p><code>^</code> is 1.[any].[any] (latest minor version)<br/>\n<code>~</code> is 1.2.[any] (latest patch)</p>\n\n<p>A great read is <a href=\"http://blog.npmjs.org/post/98131109725/npm-2-0-0\" rel=\"nofollow\">this blog post</a> on how semver applies to npm<br/>\nand what they're doing to make it match <a href=\"http://semver.org/spec/v2.0.0.html\" rel=\"nofollow\">the semver standard</a><br/>\n<a href=\"http://blog.npmjs.org/post/98131109725/npm-2-0-0\" rel=\"nofollow\">http://blog.npmjs.org/post/98131109725/npm-2-0-0</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Regarding question 2, the answer by gillich is almost correct. There is a special case for versions 0.X.Y and 0.0.X:</p>\n\n<blockquote>\n  <p>Caret Ranges ^1.2.3 ^0.2.5 ^0.0.4</p>\n  \n  <p>Allows changes that do not modify the left-most non-zero digit in the\n  [major, minor, patch] tuple. In other words, this allows patch and\n  minor updates for versions 1.0.0 and above, patch updates for versions\n  0.X >=0.1.0, and no updates for versions 0.0.X.</p>\n</blockquote>\n\n<p>see <a href=\"https://github.com/npm/node-semver/blob/master/README.md#caret-ranges-123-025-004\" rel=\"nofollow\">node-semver documentation</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>After I upgraded to latest stable <code>node</code> and <code>npm</code>, I tried <code>npm install moment --save</code>. It saves the entry in the package.json with the <code>caret(^)</code> prefix. Previously, it was a <code>tilde(~)</code> prefix. </p>\n\n<ol>\n<li>Why are these changes made in npm? </li>\n<li>What is the difference between tilde(~) and caret(^)?</li>\n<li>What is the advantages over others?</li>\n</ol>\n",
            "last_activity_date": 1425013814,
            "question_id": 22343224,
            "score": 213,
            "tags": [
                "javascript",
                "node.js",
                "npm"
            ],
            "title": "Difference between tilde(~) and caret(^) in package.json"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The general answer to the question \"Can I\" is always \"yes, as long as you're willing to write the code.\"  The point behind Backbone is to provide a strong separation of model and view.  If B1 has a reference to A1, and A1 has a reference to C1, then you're fully capable of creating methods and setting the rules by which B1 can modify A1 and C1 and so forth.</p>\n\n<p>The views should be set up to receive CRUD events from their respective models.  If the user does something with B1view that modifies B1model, and B1model in turn modifies A1model, then A1model should generate an event that A1view receives and causes a re-render of A1view, and so forth.  It should happen like magic.  (In practice, it takes some time to get the magic right, but I've found Backbone to be really powerful.  And BackboneRelational helps with things like what you're describing here.)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To be able to reach attributes on related models, the model must have some kind of knowledge about what models it is related to. Backbone.js does not implicitly deal with relations or nesting, which means you must yourself make sure that the models have knowledge of each other. To answer your questions, one way to go about it is to make sure each child model has a 'parent' attribute. This way you can traverse the nesting first up to the parent and then down to any siblings that you know of.</p>\n\n<p>To be more specific with your questions. When initializing modelA, you are probably creating modelB and modelC, I would suggest setting a link to the parent model when doing this, like this:</p>\n\n<pre><code>ModelA = Backbone.Model.extend({\n\n    initialize: function(){\n        this.modelB = new modelB();\n        this.modelB.parent = this;\n        this.modelC = new modelC();\n        this.modelC.parent = this;\n    }\n}\n</code></pre>\n\n<p>This way you can reach the parent model in any child model function by calling this.parent.</p>\n\n<p>Regarding your views, when doing nested backbone views, I find it easier to let each view represent one HTML tag by using the tagName option of the view. I would write your views as this:</p>\n\n<pre><code>ViewA = Backbone.View.extend({\n\n    tagName: \"div\",\n    id: \"new\",\n\n    initialize: function(){\n       this.viewB = new ViewB();\n       this.viewB.parentView = this;\n       $(this.el).append(this.viewB.el);\n    }\n});\n\nViewB = Backbone.View.extend({\n\n    tagName: \"h1\",\n\n    render: function(){\n        $(this.el).html(\"Header text\"); // or use this.options.headerText or equivalent\n    },\n\n    funcB1: function(){\n        this.model.parent.doSomethingOnParent();\n        this.model.parent.modelC.doSomethingOnSibling();\n        $(this.parentView.el).shakeViolently();\n    }\n\n});\n</code></pre>\n\n<p>Then in your application initialization code (eg in your controller), I would initiate ViewA and place its element inside the body element.</p>\n",
                    "is_accepted": true,
                    "score": 72
                },
                {
                    "body": "<p>The above solution is on the right track but has some problems.</p>\n\n<pre><code>initialize: function(){\n  this.viewB = new ViewB();\n  this.viewB.parentView = this;\n  $(this.el).append(this.viewB.el);    \n}\n</code></pre>\n\n<p>Mainly, the model's toJSON() now returns stale data. I've posted a solution to fix this problem in a <a href=\"https://github.com/documentcloud/backbone/wiki/Extensions%2C-Plugins%2C-Resources#nestingjs\" rel=\"nofollow\">backbone.js plugin</a>. You're welcome to use it. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can use some extensions, Backbone-Forms <a href=\"https://github.com/powmedia/backbone-forms\" rel=\"nofollow\">https://github.com/powmedia/backbone-forms</a> for example. To follow your use case define a schema like:</p>\n\n<pre><code>var ModelB = Backbone.Model.extend({\n    schema: {\n        attributeB1: 'Text',\n        attributeB2: 'Text'\n    }\n});\n\nvar ModelC = Backbone.Model.extend({\n    schema: {\n        attributeC: 'Text',\n    }\n});\n\nvar ModelA = Backbone.Model.extend({\n    schema: {\n        attributeA1: 'Text',\n        attributeA2: 'Text',\n        refToModelB: { type: 'NestedModel', model: ModelB, template: 'templateB' },\n        refToModelC: { type: 'NestedModel', model: ModelC, template: 'templateC' }\n    }\n});\n</code></pre>\n\n<p>Look at <a href=\"https://github.com/powmedia/backbone-forms#customising-templates\" rel=\"nofollow\">https://github.com/powmedia/backbone-forms#customising-templates</a> for partial templates.</p>\n\n<p>Important parts here are <code>type: 'NestedModel'</code> and <code>template: 'templateXXX'</code>.</p>\n\n<p>This plugin has some limitations but you can look at others at <a href=\"https://github.com/documentcloud/backbone/wiki/Extensions%2C-Plugins%2C-Resources\" rel=\"nofollow\">https://github.com/documentcloud/backbone/wiki/Extensions%2C-Plugins%2C-Resources</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is backbone plugin Backbone-relational.js which provides one-to-one, one-to-many and many-to-one relations between models for Backbone.</p>\n\n<p>I think this js will fulfill your needs.\nVist <a href=\"http://backbonerelational.org/\" rel=\"nofollow\">BackboneRelational</a> for more documentation.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Using backbone.js:</p>\n\n<p>I have a top level ModelA that contains 2 attributes and 2 nested models, ModelB and ModelC. ModelB and ModelC each have 2 attributes as follows:</p>\n\n<pre><code>ModelA\n    attributeA1\n    attributeA2\n    ModelB\n        attributeB1\n        attributeB2\n    ModelC\n        attributeC1\n        attributeC2\n</code></pre>\n\n<p>There is a ViewA for ModelA, and a ViewB for ModelB.\nViewA's render function places a new div onto the body, whereas ViewB's render creates an h1.  ViewA's initialization calls ViewB's render to insert that h1 into the new div. The rationale behind this separation is that the h1 may change and require re-rendering independent from ViewA.</p>\n\n<pre><code>ViewA\n    initialise: \n        //call ViewA's own render function\n        this.render() \n\n        //call ViewB's render function that further modifies the $(\"#new\") div created earlier.\n        $(\"#new\").append(ViewB.render().el)\n\n    //ViewA's own render function\n    render: //place &lt;div id=\"new\"&gt;&lt;/div&gt; onto 'body'\n\nViewB\n    render: //create a &lt;h1&gt;&lt;/h1&gt;\n    funcB1: //can this access it's parent ModelA's attributes and other objects?\n</code></pre>\n\n<p>Q1: ViewB has a function funcB1. Can this function access it's parent model's attributes? Attributes such as attributeA1, or even attributeC1 (which would be a sibling/cousin)?</p>\n\n<p>Q2: As a further expansion to Q1, can funcB1 access the DOM elements associated with ViewA? (in this example, the #new div?)</p>\n\n<p>Q3: In general, how do I define the associations between the Views and Models as described above so that everything ties together properly?</p>\n\n<p>I realize this question is somewhat abstract but any appreciate any help or guidelines appreciated.</p>\n",
            "last_activity_date": 1372266366,
            "question_id": 6353607,
            "score": 66,
            "tags": [
                "javascript",
                "backbone.js"
            ],
            "title": "backbone.js structuring nested views and models"
        },
        {
            "answer_count": 16,
            "answers": [
                {
                    "body": "<p>You can do so by adding</p>\n\n<pre><code>Yii::app()-&gt;clientScript-&gt;registerScriptFile(Yii::app()-&gt;baseUrl.'/path/to/your/script');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>Something like this:</p>\n\n<pre><code>&lt;?php  \n  $baseUrl = Yii::app()-&gt;baseUrl; \n  $cs = Yii::app()-&gt;getClientScript();\n  $cs-&gt;registerScriptFile($baseUrl.'/js/yourscript.js');\n  $cs-&gt;registerCssFile($baseUrl.'/css/yourcss.css');\n?&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 143
                },
                {
                    "body": "<p>Also, if you want to add module assets both CSS and JS, you can use the following logic. See how you need to indicate the correct path to <a href=\"http://www.yiiframework.com/doc/api/1.1/YiiBase#getPathOfAlias-detail\" rel=\"nofollow\">getPathOfAlias</a>:</p>\n\n<pre><code>public static function register($file)\n{\n    $url = Yii::app()-&gt;getAssetManager()-&gt;publish(\n    Yii::getPathOfAlias('application.modules.shop.assets.css'));\n\n    $path = $url . '/' . $file;\n    if(strpos($file, 'js') !== false)\n        return Yii::app()-&gt;clientScript-&gt;registerScriptFile($path);\n    else if(strpos($file, 'css') !== false)\n        return Yii::app()-&gt;clientScript-&gt;registerCssFile($path);\n\n    return $path;\n}\n</code></pre>\n\n<p>The above code has been taken from GPLed Yii based <a href=\"http://code.google.com/p/yii-shop/source/browse/trunk/models/Shop.php?spec=svn15&amp;r=15\" rel=\"nofollow\">Webshop</a> app.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I liked to answer this question.</p>\n\n<p>Their are many places where we have css &amp; javascript files, like in css folder which is outside the protected folder, css &amp; js files of extension &amp; widgets which we need to include externally sometime when use ajax a lot, js &amp; css files of core framework which also we need to include externally sometime. So their are some ways to do this.</p>\n\n<p><strong>Include core js files of framework like jquery.js, jquery.ui.js</strong></p>\n\n<pre><code>&lt;?php \nYii::app()-&gt;clientScript-&gt;registerCoreScript('jquery');     \nYii::app()-&gt;clientScript-&gt;registerCoreScript('jquery.ui'); \n?&gt;\n</code></pre>\n\n<p><strong>Include files from css folder outside of protected folder.</strong></p>\n\n<pre><code>&lt;?php \nYii::app()-&gt;clientScript-&gt;registerCssFile(Yii::app()-&gt;baseUrl.'/css/example.css');\nYii::app()-&gt;clientScript-&gt;registerScriptFile(Yii::app()-&gt;baseUrl.'/css/example.js');\n?&gt;\n</code></pre>\n\n<p><strong>Include css &amp; js files from extension or widgets.</strong></p>\n\n<p>Here fancybox is an extension which is placed under protected folder.\nFiles we including has path : <strong>/protected/extensions/fancybox/assets/</strong></p>\n\n<pre><code>&lt;?php\n// Fancybox stuff.\n$assetUrl = Yii::app()-&gt;getAssetManager()-&gt;publish(Yii::getPathOfAlias('ext.fancybox.assets'));\nYii::app()-&gt;clientScript-&gt;registerScriptFile($assetUrl.'/jquery.fancybox-1.3.4.pack.js'); \nYii::app()-&gt;clientScript-&gt;registerScriptFile($assetUrl.'/jquery.mousewheel-3.0.4.pack.js'); \n?&gt;  \n</code></pre>\n\n<p><strong>Also we can include core framework files:</strong>\nExample : I am including CListView js file.</p>\n\n<pre><code>&lt;?php\n$baseScriptUrl=Yii::app()-&gt;getAssetManager()-&gt;publish(Yii::getPathOfAlias('zii.widgets.assets'));\nYii::app()-&gt;clientScript-&gt;registerScriptFile($baseScriptUrl.'/listview/jquery.yiilistview.js',CClientScript::POS_END);  \n?&gt;\n</code></pre>\n\n<ul>\n<li>We need to include js files of zii widgets or extension externally sometimes when we use them in rendered view which are received from ajax call, because loading each time new ajax file create conflict in calling js functions.</li>\n</ul>\n\n<p>For more detail <a href=\"http://www.waytoblogger.com/blog/technical/yii/register-js-css-files-in-yii-framework/\">Look at my blog article</a></p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Easy in your conf/main.php. This is my example with bootstrap. You can see that <a href=\"https://github.com/jknito/kTemplate/blob/master/protected/config/main.php\">here</a></p>\n\n<pre><code>'components'=&gt;array(\n    'clientScript' =&gt; array(\n        'scriptMap' =&gt; array(\n            'jquery.js'=&gt;false,  //disable default implementation of jquery\n            'jquery.min.js'=&gt;false,  //desable any others default implementation\n            'core.css'=&gt;false, //disable\n            'styles.css'=&gt;false,  //disable\n            'pager.css'=&gt;false,   //disable\n            'default.css'=&gt;false,  //disable\n        ),\n        'packages'=&gt;array(\n            'jquery'=&gt;array(                             // set the new jquery\n                'baseUrl'=&gt;'bootstrap/',\n                'js'=&gt;array('js/jquery-1.7.2.min.js'),\n            ),\n            'bootstrap'=&gt;array(                       //set others js libraries\n                'baseUrl'=&gt;'bootstrap/',\n                'js'=&gt;array('js/bootstrap.min.js'),\n                'css'=&gt;array(                        // and css\n                    'css/bootstrap.min.css',\n                    'css/custom.css',\n                    'css/bootstrap-responsive.min.css',\n                ),\n                'depends'=&gt;array('jquery'),         // cause load jquery before load this.\n            ),\n        ),\n    ),\n),\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Do somthing thing like this by adding these line to your view files;</p>\n\n<pre>\nYii::app()->clientScript->registerScriptFile(Yii::app()->baseUrl.'/path/to/your/javascript/file');\nYii::app()->clientScript->registerCssFile(Yii::app()->baseUrl.'/path/to/css/file');\n</pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can also add scripts from controller action. Just add this line in an action method then that script will apear only in that view:</p>\n\n<pre><code>Yii::app()-&gt;clientScript-&gt;registerScriptFile(Yii::app()-&gt;request-&gt;baseUrl . '/js/custom.js', CClientScript::POS_HEAD);\n</code></pre>\n\n<p>where POS_HEAD tell framework to put script in head section</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In the view, add the following:</p>\n\n<pre><code>&lt;?php  \n  $cs = Yii::app()-&gt;getClientScript();\n  $cs-&gt;registerScriptFile('/js/yourscript.js', CClientScript::POS_END);\n  $cs-&gt;registerCssFile('/css/yourcss.css');\n?&gt;\n</code></pre>\n\n<p>Please notice the second parameter when you register the js file, it's the position of your script, when you set it CClientScript::POS_END, you let the HTML renders before the javascript is loaded.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>In Yii framework, You can include js and css using below method.</p>\n\n<p><strong>Including CSS:</strong></p>\n\n<pre><code>{Yii::app()-&gt;request-&gt;baseUrl}/css/styles.css\n</code></pre>\n\n<p><strong>Including JS:</strong></p>\n\n<pre><code>{Yii::app()-&gt;request-&gt;baseUrl}/js/script.js\n</code></pre>\n\n<p><strong>Including Image:</strong></p>\n\n<pre><code>{Yii::app()-&gt;request-&gt;baseUrl}/images/logo.jpg\n</code></pre>\n\n<p><strong>Note:</strong> By using layout concept in yii, You can add css and js instead of specifying in view template.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>Add the CSS and JS in The Layout Folder.Access anywhere in the project </p>\n</blockquote>\n\n<pre><code>  &lt;!--// Stylesheets //--&gt;\n    &lt;?php\n        $themepath=Yii::app()-&gt;theme-&gt;baseUrl;\n        Yii::app()-&gt;clientScript-&gt;registerCoreScript(\"jquery\");\n    ?&gt;\n\n        &lt;link href=\"&lt;?php echo $themepath.\"/css/custom.css\"; ?&gt;\" rel=\"stylesheet\" media=\"all\" /&gt;\n\n\n&lt;!--// Javascript //--&gt;\n&lt;?php Yii::app()-&gt;clientScript-&gt;registerCoreScript(\"jquery\"); ?&gt;\n&lt;/script&gt; --&gt;\n&lt;script type=\"text/javascript\" src=\"&lt;?php echo $themepath; ?&gt;/js/video.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To include JS and CSS files in a specific view you can do it via controller by passing the parameters <code>false, true</code>, which will include the CSS and JS for, e.g.:</p>\n\n<pre><code>$this-&gt;renderPartial(\n    'yourviewname',\n    array(\n        'model' =&gt; $model,\n        false,\n        true\n    )\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are many methods that we can <a href=\"http://www.codexamples.com/98/how-to-include-javascript-css-in-yii/\" rel=\"nofollow\">include javascript, css into your Yii App</a>. Today I will demonstrate three simple and helpul methods.</p>\n\n<p>A simple way to add js, css by editing config/main.php</p>\n\n<pre><code>// application components\n  'components'=&gt;array(\n         // ...\n        'clientScript'=&gt;array(\n            'packages'=&gt;array(\n                'jquery'=&gt;array(\n                    'baseUrl'=&gt;'//ajax.googleapis.com/ajax/libs/jquery/1/',\n                    'js'=&gt;array('jquery.min.js'),\n                )\n            ),\n        ),\n        // ...\n  ),\n</code></pre>\n\n<p>Using getClientScript</p>\n\n<p>Usually, We add in block of code into Controller or layout of your theme</p>\n\n<pre><code>$baseUrl = Yii::app()-&gt;baseUrl; \n$cs = Yii::app()-&gt;getClientScript();\n$cs-&gt;registerScriptFile($baseUrl.'/js/yourscript.js');\n$cs-&gt;registerCssFile($baseUrl.'/css/yourcss.css');\n</code></pre>\n\n<p>Or shorter:</p>\n\n<pre><code>Yii::app()-&gt;clientScript-&gt;registerScriptFile(Yii::app()-&gt;baseUrl.'/path/to/your/javascript/file',CClientScript::POS_END);\nYii::app()-&gt;clientScript-&gt;registerCssFile(Yii::app()-&gt;baseUrl.'/path/to/css/file');\n</code></pre>\n\n<p>Include core js files</p>\n\n<pre><code>Yii::app()-&gt;clientScript-&gt;registerCoreScript('jquery');     \nYii::app()-&gt;clientScript-&gt;registerCoreScript('jquery.ui');\n</code></pre>\n\n<p>Faster Yii API Document: <a href=\"http://yii.codexamples.com/\" rel=\"nofollow\">http://yii.codexamples.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>&lt;link rel=\"stylesheet\" href=\"http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css\"&gt;\n&lt;script src=\"http://code.jquery.com/jquery-1.9.1.js\"&gt;&lt;/script&gt;\n&lt;script src=\"http://code.jquery.com/ui/1.10.3/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"/resources/demos/style.css\"&gt;\n&lt;script src=\"/news/js/popup.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>link must input over the first php tag in the view pag</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Using bootstrap extension</strong></p>\n\n<p>my css file: <em>themes/bootstrap/css/style.css</em></p>\n\n<p>my js file: <em>root/js/script.js</em></p>\n\n<p>at <em>theme/bootstrap/views/layouts/main.php</em> </p>\n\n<pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"&lt;?php echo Yii::app()-&gt;theme-&gt;baseUrl; ?&gt;/css/styles.css\" /&gt;\n\n&lt;script type=\"text/javascript\" src=\"&lt;?php echo Yii::app()-&gt;request-&gt;baseUrl; ?&gt;/js/script.js\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>here is a good solution to use CDN and offline scripts</p>\n\n<p>I use this code in every application I build, so you can use this in any app.</p>\n\n<p>Included Scripts:</p>\n\n<ul>\n<li>main.css</li>\n<li>main.js</li>\n<li>jQuery</li>\n<li>jQuery / CD</li>\n<li>Bootstrap 3.1</li>\n<li>Bootstrap 3.1 / CDN</li>\n<li>Fancybox 2</li>\n<li>Fancybox 2 / CDN</li>\n<li>FontAwesome 4</li>\n<li>FontAwesome 4 / CDN</li>\n<li>Google Analytics Script</li>\n</ul>\n\n<p><strong>STEP1:</strong> </p>\n\n<p>put this code in config/main.php</p>\n\n<pre><code>        'params'=&gt;array(\n            'cdn'=&gt;true, // or false\n...\n</code></pre>\n\n<p><strong>STEP2:</strong></p>\n\n<p>create resoreses folder in root app folder and put your script there</p>\n\n<pre><code>res/\n--js\n--css\n--img\n--lib\n--style\n..\n</code></pre>\n\n<p><strong>STEP3:</strong></p>\n\n<p>put this code in components/controller.php</p>\n\n<pre><code>public function registerDefaults() \n{\n    $cs = Yii::app()-&gt;clientScript;\n\n    if (Yii::app()-&gt;params['cdn']){\n        $cs-&gt;scriptMap = array(\n            'jquery.js' =&gt; '//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js',\n            'jquery.min.js' =&gt; '//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js',\n        );\n        $cs-&gt;packages = array(\n            'bootstrap' =&gt; array(\n                'basePath' =&gt; 'application.res',\n                'baseUrl' =&gt; '//netdna.bootstrapcdn.com/bootstrap/3.1.1/',\n                'js' =&gt; array('js/bootstrap.min.js'),\n                'css' =&gt; array('css/bootstrap.min.css'),\n                'depends' =&gt; array('jquery')\n            ),\n        );\n    } else {\n        $cs-&gt;packages = array(\n            'bootstrap' =&gt; array(\n                'basePath' =&gt; 'application.res',\n                'baseUrl' =&gt; Yii::app()-&gt;baseUrl . '/res/lib/bootstrap/',\n                'js' =&gt; array('js/bootstrap.js'),\n                'css' =&gt; array('css/bootstrap.css'),\n                'depends' =&gt; array('jquery')\n            ),\n        );\n    }\n\n    $cs-&gt;registerPackage('bootstrap');\n\n    $cs-&gt;registerCSSFile(Yii::app()-&gt;baseUrl . '/res/style/main.css');\n    $cs-&gt;registerScriptFile(Yii::app()-&gt;baseUrl . '/res/js/main.js');\n}\n\npublic function registerFancybox($buttons = false, $thumbs = false) \n{\n    $cs = Yii::app()-&gt;clientScript;\n\n    $cs-&gt;packages = array(\n        'fancybox' =&gt; array(\n            'basePath' =&gt; 'application.res',\n            'baseUrl' =&gt; Yii::app()-&gt;baseUrl . '/res/lib/fancybox/',\n            'js' =&gt; array('lib/jquery.mousewheel-3.0.6.pack.js', 'source/jquery.fancybox.pack.js'),\n            'css' =&gt; array('source/jquery.fancybox.css'),\n            'depends' =&gt; array('jquery')\n        ),\n        'fancybox-buttons' =&gt; array(\n            'basePath' =&gt; 'application.res',\n            'baseUrl' =&gt; Yii::app()-&gt;baseUrl . '/res/lib/fancybox/source/helpers/',\n            'js' =&gt; array('jquery.fancybox-buttons.js'),\n            'css' =&gt; array('jquery.fancybox-buttons.css'),\n        ),\n        'fancybox-thumbs' =&gt; array(\n            'basePath' =&gt; 'application.res',\n            'baseUrl' =&gt; Yii::app()-&gt;baseUrl . '/res/lib/fancybox/source/helpers/',\n            'js' =&gt; array('jquery.fancybox-thumbs.js'),\n            'css' =&gt; array('jquery.fancybox-thumbs.css'),\n        )\n    );\n\n    $cs-&gt;registerPackage('fancybox');\n    if ($buttons)\n        $cs-&gt;registerPackage('fancybox-buttons');\n    if ($thumbs)\n        $cs-&gt;registerPackage('fancybox-thumbs');\n}\n\npublic function registerFontAwesome(){\n\n    $cs = Yii::app()-&gt;clientScript;\n\n    if (Yii::app()-&gt;params['cdn']):\n        $cs-&gt;packages = array(\n            'fontAwesome' =&gt; array(\n                'basePath' =&gt; 'application.res',\n                'baseUrl' =&gt; '//netdna.bootstrapcdn.com/font-awesome/4.0.0/',\n                'css' =&gt; array('css/font-awesome.min.css'),\n            )\n        );\n    else:\n        $cs-&gt;packages = array(\n            'fontAwesome' =&gt; array(\n                'basePath' =&gt; 'application.res',\n                'baseUrl' =&gt; Yii::app()-&gt;baseUrl . '/res/lib/font-awesome/',\n                'css' =&gt; array('/css/font-awesome.min.css'),\n            )\n        );\n    endif;\n\n    $cs-&gt;registerPackage('fontAwesome');\n}\n\npublic function registerGoogleAnalytics()\n{\n    if($this-&gt;config('settings_google_analytics_id')){\n        Yii::app()-&gt;clientScript-&gt;registerScript('GA',\"\n            (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n            (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n            })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n            ga('create', '\".Yii::app()-&gt;params['cdn'].\"', '{$_SERVER['SERVER_NAME']}');\n            ga('send', 'pageview');\n        \");\n    }\n}\n</code></pre>\n\n<p><strong>STEP4:</strong></p>\n\n<p>call the functions like this in //layouts/main.php</p>\n\n<pre><code>Yii::app()-&gt;getController()-&gt;registerDefaults();\nYii::app()-&gt;getController()-&gt;registerFontAwesome();\nYii::app()-&gt;getController()-&gt;registerGoogleAnalytics();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This was also an easy way to add script and css in main.php    </p>\n\n<pre><code>&lt;script src=\"&lt;?=Yii::app()-&gt;theme-&gt;baseUrl; ?&gt;/js/bootstrap.min.js\"&gt;&lt;/script&gt;\n&lt;link href=\"&lt;?=Yii::app()-&gt;theme-&gt;baseUrl; ?&gt;/css/bootstrap.css\" rel=\"stylesheet\" type=\"text/css\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to include a Javascript or CSS file in Yii Framework?</p>\n\n<p>I want to create a page on my site that has a little Javascript application running, so I want to include <code>.js</code> and <code>.css</code> files in a specific view.</p>\n",
            "last_activity_date": 1421839802,
            "question_id": 1998449,
            "score": 81,
            "tags": [
                "javascript",
                "css",
                "yii"
            ],
            "title": "Include CSS,javascript file in Yii Framework"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>It seems that the most common method of achieving this is to draw a <a href=\"http://code.google.com/apis/maps/documentation/reference.html#GPolygon\">GPolygon</a> with enough points to simulate a circle.  The example you referenced uses this method.  <a href=\"http://esa.ilmari.googlepages.com/circle.htm\">This page</a> has a good example - look for the function <em>drawCircle</em> in the source code.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>In spherical geometry shapes are defined by points, lines and angles between those lines. You have only those rudimentary values to work with.</p>\n\n<p>Therefore a circle (in terms of a a shape projected onto a sphere) is something that must be approximated using points. The more points, the more it'll look like a circle.</p>\n\n<p>Having said that, realize that google maps is <a href=\"http://en.wikipedia.org/wiki/Mercator_projection\" rel=\"nofollow\">projecting the earth onto a flat surface</a> (think \"unrolling\" the earth and stretching+flattening until it looks \"square\"). And if you have a flat coordinate system you can draw 2D objects on it all you want.</p>\n\n<p>In other words you <em>can</em> draw a scaled vector circle on a google map. The catch is, google maps doesn't give it to you out of the box (they want to stay as close to GIS values as is pragmatically possible). They only give you GPolygon which they want you to use to approximate a circle. However, <a href=\"http://www.bdcc.co.uk/Gmaps/BdccGmapBits.htm\" rel=\"nofollow\">this guy did it</a> using vml for IE and svg for other browsers (see \"SCALED CIRCLES\" section).</p>\n\n<p>Now, going back to your question about Google Latitude using a scaled circle image (and this is probably the most useful to you): if you know the radius of your circle will never change (eg it's always 10 miles around some point), then the easiest solution would be to use a <a href=\"http://code.google.com/apis/maps/documentation/overlays.html#Ground_Overlays\" rel=\"nofollow\">GGroundOverlay</a>, which is just an image url + the GLatLngBounds the image represents. The only work you need to do then is cacluate the <a href=\"http://code.google.com/apis/maps/documentation/reference.html#GLatLngBounds\" rel=\"nofollow\">GLatLngBounds</a> representing your 10 mile radius. Once you have that, the google maps api handles scaling your image as the user zooms in and out.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I've had this problem in the past, so I bookmarked this <a href=\"http://groups.google.com/group/Google-Maps-How-Do-I/browse%5Fthread/thread/1dca332dbb2bb9c9/b164c644c7ff8e47?#b164c644c7ff8e47\" rel=\"nofollow\">discussion.</a></p>\n\n<p>To summarize it, you can:</p>\n\n<ol>\n<li>Take a look at this <a href=\"http://maps.google.com/gadgets/directory?synd=mpl&amp;backlink=http%3A%2F%2Fmaps.google.com%2Fmaps%2Fms%3Fmsa%3D0%26ie%3DUTF8%26z%3D5%26om%3D1%26msid%3D111023655921117272809.00043bc9d308dbbe57479&amp;url=http%3A%2F%2Fjfno.net%2Ffilter.xml\" rel=\"nofollow\">circle filter</a>'s source code and figure out how to incorporate it into your project.</li>\n<li>Draw a GPolygon with enough points to simulate a circle.</li>\n<li>Generate a KML file by modifying <a href=\"http://www.nearby.org.uk/google/circle.kml.php?radius=30miles&amp;lat=40.173&amp;long=-105.1024\" rel=\"nofollow\">http://www.nearby.org.uk/google/circle.kml.php?radius=30miles&amp;lat=40.173&amp;long=-105.1024</a> and then importing it.  In Google Maps, you can just paste the URI in the search box and it will display on the map.  I'm not sure how you might do it using the API though.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I have just written a blog article that addresses exactly this, which you may find useful:\n<a href=\"http://seewah.blogspot.com/2009/10/circle-overlay-on-google-map.html\" rel=\"nofollow\">http://seewah.blogspot.com/2009/10/circle-overlay-on-google-map.html</a></p>\n\n<p>Basically, you need to create a GGroundOverlay with the correct GLatLngBounds. The tricky bit is in working out the southwest corner coordinate and the northeast corner coordinate of this imaginery square (the GLatLngBounds) bounding this circle, based on the desired radius. The math is quite complicated, but you can just refer to getDestLatLng function in the blog. The rest should be pretty straightforward.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For a API v3 solution, refer to:</p>\n\n<p><a href=\"http://blog.enbake.com/draw-circle-with-google-maps-api-v3\" rel=\"nofollow\">http://blog.enbake.com/draw-circle-with-google-maps-api-v3</a></p>\n\n<p>It creates circle around points and then show markers within and out of the range with different colors. They also calculate dynamic radius but in your case radius is fixed so may be less work.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Using the Google Maps API V3, create a Circle object, then use bindTo() to tie it to the position of your Marker (since they are both google.maps.MVCObject instances).</p>\n\n<pre><code>// Create marker \nvar marker = new google.maps.Marker({\n  map: map,\n  position: new google.maps.LatLng(53, -2.5),\n  title: 'Some location'\n});\n\n// Add circle overlay and bind to marker\nvar circle = new google.maps.Circle({\n  map: map,\n  radius: 16093,    // 10 miles in metres\n  fillColor: '#AA0000'\n});\ncircle.bindTo('center', marker, 'position');\n</code></pre>\n\n<p>You can make it look just like the Google Latitude circle by changing the fillColor, strokeColor, strokeWeight etc (<a href=\"http://code.google.com/apis/maps/documentation/javascript/reference.html#Circle\">full API</a>).</p>\n\n<p>See more <a href=\"http://seriouscodage.blogspot.com/2010/11/visualizing-data-as-circles-in-google.html\">source code and example screenshots</a>.</p>\n",
                    "is_accepted": true,
                    "score": 126
                },
                {
                    "body": "<p>Here is yet another (working) example on google circles, markers, and events.  See here</p>\n\n<p><a href=\"http://kahimyang.info/kauswagan/HowtoBlogs.xhtml?b=513\" rel=\"nofollow\">http://kahimyang.info/kauswagan/HowtoBlogs.xhtml?b=513</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm using the Google Maps API and have added markers. Now I want to add a 10 mile radius around each marker, meaning a circle that behaves appropriately while zooming. I have no idea how to do that and it seems it's not something common.</p>\n\n<p><a href=\"http://www.freemaptools.com/radius-around-point.htm\">I found one example that looks good</a>, and you can have a look at Google Latitude, too. There they use markers with a radius, just like I want them.</p>\n\n<p><strong>Update:</strong> Google Latitude uses <a href=\"http://www.google.com//ig/modules/friendview/fv%5Fcontent/purple%5Fcircle.png\">an image</a> that is scaled, how would that work?</p>\n",
            "last_activity_date": 1369919811,
            "question_id": 825794,
            "score": 46,
            "tags": [
                "javascript",
                "google-maps"
            ],
            "title": "Draw radius around a point in Google map"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>One could try convert graphviz to javascript, just like it was done for the 'PDF reader' example:\n<a href=\"https://github.com/kripken/emscripten\">https://github.com/kripken/emscripten</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Here is a cross compilation of Graphviz to Javascript done using Emscripten </p>\n\n<p><a href=\"https://github.com/bpartridge/graphviz.js\" rel=\"nofollow\">https://github.com/bpartridge/graphviz.js</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is not a ready-made graphviz replacement but <a href=\"http://d3js.org/\">d3.js</a> is a library that can do various layouts from given data and would be a great platform to implement graphviz on.</p>\n\n<p>Here's <a href=\"http://bl.ocks.org/950642\">an example of force-directed layouts</a> which is one form of what graphviz does.</p>\n\n<p>Here's <a href=\"http://vimeo.com/29458354\">a speech about layouts</a> with insanely awesome <a href=\"http://mbostock.github.com/d3/talk/20110921/#0\">interactive slides</a>.</p>\n\n<p>To get to know the project, the <a href=\"https://github.com/mbostock/d3/wiki/Tutorials\">tutorials</a> are very good.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Take a look at this pure JavaScript implementation of a .dot canvas renderer:</p>\n\n<p><a href=\"http://ushiroad.com/jsviz/\">http://ushiroad.com/jsviz/</a></p>\n\n<p>The library is not documented -- the author definitely ought to publicize and document it more (I'll contact him to suggest he put it up on github, at the very least).</p>\n\n<p><strong>Update</strong>: code has been pushed to github:\n<a href=\"https://github.com/gyuque/livizjs\">https://github.com/gyuque/livizjs</a></p>\n\n<p><strong>Update (14/2/2013)</strong>: another contender has arisen! anybody interested in the subject should definitely take a look at Viz.js's <a href=\"http://mdaines.github.com/viz.js/example.html\">example page</a> and <a href=\"https://github.com/mdaines/viz.js\">github repo</a>.</p>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>After looking at all the options, I found viz.js (<a href=\"https://github.com/mdaines/viz.js/\">https://github.com/mdaines/viz.js/</a>) based off of jsviz and graphviz.js to actually have an API usable from a webpage, and enough examples to understand.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>After searching far and low I finally found the answer.</p>\n\n<p>The solution was that someone cross compiled Graphviz to Javascript using llvm + emscripten. Here is the link:</p>\n\n<p><a href=\"http://mdaines.github.com/viz.js/example.html\">http://mdaines.github.com/viz.js/example.html</a></p>\n\n<p>The java script can be found at:\n<a href=\"http://mdaines.github.com/viz.js/viz.js\">http://mdaines.github.com/viz.js/viz.js</a></p>\n\n<p>And to simply get a webpage up use:</p>\n\n<pre><code>var graphviz_text = ...;\ndocument.body.innerHTML += Viz(graphviz_text, \"svg\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>Is anyone aware of a pure, Javascript based implementation of the directional flow diagrams that GraphViz is capable of generating? I am NOT interested in pretty visuals output, but the computations to figure out the maximum depth of each node, along with the layout of bezier lines that are optimized to minimize the number of intersecting edges when you are dealing with a graph rather than a tree of information.  I would like to run this code both within a browser; I am aware that I could easily embed Graphviz into my Node server as an extension, or even <code>popen()</code> it and stream over graph information in the <code>.dot</code> format.</p>\n\n<p>For reference, here is a typical GraphViz output. Note how elements are stacked and spaced out to allow the connecting lines to travel between nodes, without intersecting (very often) or passing through nodes.</p>\n\n<p><img src=\"http://i.stack.imgur.com/5ZlBN.png\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1382766566,
            "question_id": 6344318,
            "score": 86,
            "tags": [
                "javascript",
                "graphviz"
            ],
            "title": "Pure JavaScript Graphviz equivalent "
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I recently had to decide on a JavaScript SPA framework on a project too.</p>\n\n<ul>\n<li><p><a href=\"http://emberjs.com/\">Ember</a>  </p>\n\n<p>Looked at Ember early on and had similar thoughts as you about it - I really liked it but it felt like it was still too early to use... about half the tutorials I read didn't work with the current version because something had recently changed in how templating works.</p></li>\n<li><p><a href=\"http://backbonejs.org/\">Backbone</a></p>\n\n<p>Backbone was the first frameworks we seriously looked at.  I'm not sure I understand why you think it doesn't have \"well defined structures\"?  Backbone is pretty clear about how to divide up Model and View code. Maybe you mean there's not some kind of app template? Anyway, Backbone seems really focused on the model/REST-binding part, but doesn't really prescribe anything for view binding. If model binding's important to you and you're using Rails it should be a breeze to do this. Unfortunately, the web services for my app didn't really match up, and I had to write my own <code>.sync</code> and <code>.parse</code> methods for everything. The separation of Model and View code was nice, but since we'd have to write all our bindings from scratch it wasn't worth it.</p></li>\n<li><p><a href=\"http://knockoutjs.com/\">Knockout</a></p>\n\n<p>Knockout is like the Yin to Backbone's Yang. Where Backbone is focused on the Model, Knockout is a MVVM framework and is focused on the View.  It has <code>observable</code> wrappers for JavaScript object properties and uses a <code>data-bind</code> attribute to bind properties to your HTML.  In the end we went with Knockout since view binding was mainly what we needed for our app. (...plus others, as discussed later...) If you like Knockout's view binding and Backbone's model bindings there's also <a href=\"http://kmalakoff.github.com/knockback/\">KnockBack</a> which combines both frameworks.</p></li>\n<li><p><a href=\"http://angularjs.org/\">Angular</a></p>\n\n<p>Looked at this after Knockout - unfortunately we all seemed pretty happy with how Knockout did view binding.  It seemed a lot more complex and harder to get into than Knockout. And it uses a bunch of custom HTML attributes to do bindings, which I'm not sure I like... I may take another look at Angular later, because since I've come across multiple people who really like the framework - maybe we just looked at it too late for this project.</p></li>\n<li><p><a href=\"http://batmanjs.org/\">Batman</a>, <a href=\"http://meteor.com/\">Meteor</a>, <a href=\"http://canjs.us/\">CanJS</a>, <a href=\"http://spinejs.com/\">Spine</a></p>\n\n<p>Didn't really look too closely at any of these. Though I know Spine is a similar framework to Backbone with explicit Controller objects, and is written in CoffeeScript.</p></li>\n<li><p>Afterword</p>\n\n<p>As I mentioned, we ended up using Knockout because, for our project, focusing on view binding was more important.  We also ended up using <a href=\"http://requirejs.org/\">RequireJS</a> for modularization, <a href=\"http://millermedeiros.github.com/crossroads.js/\">crossroads</a> and <a href=\"https://github.com/millermedeiros/hasher/\">Hasher</a> to handle routing and history, <a href=\"http://pivotal.github.com/jasmine/\">Jasmine</a> for testing, as well as <a href=\"http://jquery.com/\">JQuery</a>, <a href=\"http://twitter.github.com/bootstrap/\">Twitter Bootstrap</a>, and <a href=\"http://underscorejs.org/\">Underscore.js</a> (and probably more libraries I'm forgetting at the moment). </p>\n\n<p>Javascript app development is more like the Java ecosystem than the Rails ecosystem.  Rails provides a solid core of stuff you're going to use for every app (Rails framework), and the community provides a lot of customizations on top of that (gems). Java provides... a language. And then you can choose Java EE or Spring or Play or Struts or Tapestry. And choose JDBC or Hibernate or TopLink or Ibatis to talk to the database. And then you can use Ant or Maven or Gradle to build it. And choose Tomcat or Jetty or JBoss or WebLogin to run it in. So there's more emphasis on choosing what you need and what works together than choosing <em>THE</em> framework to use.</p></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>it's been a year since we started development on our Cloud services project with numerous SPAs, so it was a big decision, which javascript framework to use for our UI to satisfy our RESTful architecture needs.\nand after a lot of researches we ended up using <a href=\"http://dojotoolkit.org/\">Dojo framework</a> .</p>\n\n<p>main features you'll love:</p>\n\n<ol>\n<li>educated community and a team that came up with a perfect design pattern. great conventions and modular/object-oriented architecture. with CrossBrowser programming attitudes :)</li>\n<li>MV* structure. build UI widgets with external .htm templates and for production, build all your javascript &amp; templates into a single, minified and small .js</li>\n<li>build classes with inheritance. property setters, a lot of function tools.</li>\n<li>pub/sub mechanism (named topics in dojo)</li>\n<li>a lot of UI controls, from validation form control, dialogs/tooltips to a heavy featured, highly customizable (but lightweight) chart &amp; data-grid solution.</li>\n<li>a good unit test system named DOH. it also have a robot to reproduce mouse/keyboard actions.</li>\n<li>a querying tool (like JQuery) named NodeList with all jquery features and even a lot of it's plugins.</li>\n<li>and the good but not so complete part. it has a JsonRest module to use with your REST services. its a handy tool but it lacks a lot of features.</li>\n</ol>\n\n<p>to overcome these issues, we developed an AJAX poller, error handling and universal, loading &amp; notifications solution.\nwe did it very easily using dojo framework conventions and structures.\nif you don't want to do that, perhaps you have to use another framework for this part.</p>\n\n<p>looking at great SPAs around the web you'll find out all of them are customized and using multiple frameworks. but our experience with Dojo alone was fantastic. and therefore I suggest you to don't think of any other framework since all of them are incomplete for a SPA. but ultimately you have also another option (which I don't recommend and have no details information on). go with a JAVA framework that is capable of building SPAs, by automatically generating UI &amp; javascript.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>my goal is to migrate an existing web application to a RESTful <a href=\"http://en.wikipedia.org/wiki/Single-page_application\">SPA (single page application)</a>.\nCurrently I'm evaluating several javascript web application frameworks. </p>\n\n<p>My requirements are as follow:</p>\n\n<ul>\n<li>RESTful data layer (like ember-data)</li>\n<li>MV*-structure</li>\n<li>Dynamic routes</li>\n<li>Testing-support</li>\n<li>Coding by convention</li>\n<li>SEO-support</li>\n<li>Browser-History-Support</li>\n<li>good (API-) documentation</li>\n<li>Production-ready</li>\n<li>living community</li>\n</ul>\n\n<p><a href=\"http://backbonejs.org\">BACKBONE</a> </p>\n\n<p>The current application is using backbone.js. All in all backbone.js is a nice project. But I'm missing well defined structures that determine where what has to happen and how things must get implemented. Working in a bigger team with changing developers this leads to some kind of unstructured code, difficult to maintenance and difficult to understand.\nThis is why I'm searching now for a framework, that already defines all this stuff.</p>\n\n<p><a href=\"http://emberjs.com\">EMBER</a> </p>\n\n<p>I looked into ember.js the last days. The approach seems very promising to me. But, unfortunately, the code changes almost daily. So I won't call it production-ready. And we can't wait for it to be version 1.0 - unfortunately. But I really like the idea behind this framework.</p>\n\n<p><a href=\"http://angularjs.org\">ANGULAR</a></p>\n\n<p>Angular.js is a widely spreaded framework as well, maintained by google. But I could not get familiar with angular. For me the structure seems kind of unclear, explanations are missing of the overall responsibilites of each part of the framework, and the implementations feel circuitous.\nJust to get this straight: this is just my personal impression and might be based on missing knowledge.</p>\n\n<p><a href=\"http://batmanjs.org\">BATMAN</a>, <a href=\"http://meteor.com\">METEOR</a></p>\n\n<p>As I understood both frameworks need a server part as well. And since we just want a RESTful backend - no matter what language, technic or software, this is not what we want. Further the backend API does already exist (RoR).</p>\n\n<p><a href=\"http://knockoutjs.com\">KNOCKOUT</a>, <a href=\"http://canjs.us\">CANJS</a>, <a href=\"http://spinejs.com\">SPINE</a></p>\n\n<p>I did not go any deeper in these three candidates. Maybe this will be my next step.</p>\n\n<p>So my questions now:</p>\n\n<ul>\n<li>Am I missing any good SPA-frameworks?</li>\n<li>What framework would you suggest/recommend?</li>\n<li>Would you avoid any of the mentioned frameworks?</li>\n<li>What is your experience in bigger SP applications?</li>\n</ul>\n\n<p>Kind regards,</p>\n\n<p>Christopher</p>\n\n<p>PS: I'd would like to recommend a <a href=\"http://blog.stevensanderson.com/2012/08/01/rich-javascript-applications-the-seven-frameworks-throne-of-js-2012/\">great blogpost</a> from Steven Anderson (core developer from Knockout.js) about the \"Throne of JS\"-conference (from 2012) and javascript frameworks in general.</p>\n\n<p>PS: Yes, I know there are already some question on SO. But since the development is so rapidly and fast for SPAs, most of them are already out-of-date.</p>\n",
            "last_activity_date": 1387551520,
            "question_id": 14336450,
            "score": 68,
            "tags": [
                "javascript",
                "singlepage"
            ],
            "title": "JavaScript SPA-Frameworks (Single Page Application)"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Use the <a href=\"http://www.w3schools.com/js/js_throw.asp\" rel=\"nofollow\">throw</a> statement.</p>\n\n<p>JavaScript doesn't care what the exception type is (as Java does).\nJavaScript just notices, there's an exception and when you catch it, you can \"look\" what the exception \"says\".</p>\n\n<p>If you have different exception types you have to throw, I'd suggest to use variables which contain the string/object of the exception i.e. message. Where you need it use \"throw myException\" and in the catch, compare the caught exception to myException.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Yes. You can throw anything you want: integers, strings, objects, whatever. If you want to throw an object, then simply create a new object, just as you would create one under other circumstances, and then throw it. <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Statements/throw\">Mozilla's Javascript reference</a> has several examples.</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>You could implement your own exceptions and their handling for example like here:</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>// define exceptions \"classes\" \nfunction NotNumberException() {}\nfunction NotPositiveNumberException() {}\n\n// try some code\ntry {\n    // some function/code that can throw\n    if (isNaN(value))\n        throw new NotNumberException();\n    else\n    if (value &lt; 0)\n        throw new NotPositiveNumberException();\n}\ncatch (e) {\n    if (e instanceof NotNumberException) {\n        alert(\"not a number\");\n    }\n    else\n    if (e instanceof NotPositiveNumberException) {\n        alert(\"not a positive number\");\n    }\n}\n</code></pre>\n\n<p>There is another syntax for catching a typed exception, although this won't work in every browser (for example not in IE):</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>// define exceptions \"classes\" \nfunction NotNumberException() {}\nfunction NotPositiveNumberException() {}\n\n// try some code\ntry {\n    // some function/code that can throw\n    if (isNaN(value))\n        throw new NotNumberException();\n    else\n    if (value &lt; 0)\n        throw new NotPositiveNumberException();\n}\ncatch (e if e instanceof NotNumberException) {\n    alert(\"not a number\");\n}\ncatch (e if e instanceof NotPositiveNumberException) {\n    alert(\"not a positive number\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 66
                },
                {
                    "body": "<p>From: <a href=\"http://www.webreference.com/programming/javascript/rg32/2.html\">http://www.webreference.com/programming/javascript/rg32/2.html</a></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>throw { \n    name:        \"System Error\", \n    level:       \"Show Stopper\", \n    message:     \"Error detected. Please contact the system administrator.\", \n    htmlMessage: \"Error detected. Please contact the &lt;a href=\\\"mailto:sysadmin@acme-widgets.com\\\"&gt;system administrator&lt;/a&gt;.\",\n    toString:    function(){return this.name + \": \" + this.message;} \n}; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 171
                },
                {
                    "body": "<pre><code>function MyError(message) {\n this.message = message;\n}\n\nMyError.prototype = new Error;\n</code></pre>\n\n<p>This allows for usage like..</p>\n\n<pre><code>try {\n  something();\n } catch(e) {\n  if(e instanceof MyError)\n   doSomethingElse();\n  else if(e instanceof Error)\n   andNowForSomethingCompletelyDifferent();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Here is how you can create custom errors with completely identical to native <code>Error</code>'s behaviour. This technique <strong>works only in Chrome and node.js</strong> for now. I also <strong>wouldn't recommend to use it</strong> if you don't understand what it does.</p>\n\n<pre><code>Error.createCustromConstructor = (function() {\n\n    function define(obj, prop, value) {\n        Object.defineProperty(obj, prop, {\n            value: value,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n\n    return function(name, init, proto) {\n        var CustomError;\n        proto = proto || {};\n        function build(message) {\n            var self = this instanceof CustomError\n                ? this\n                : Object.create(CustomError.prototype);\n            Error.apply(self, arguments);\n            Error.captureStackTrace(self, CustomError);\n            if (message != undefined) {\n                define(self, 'message', String(message));\n            }\n            define(self, 'arguments', undefined);\n            define(self, 'type', undefined);\n            if (typeof init == 'function') {\n                init.apply(self, arguments);\n            }\n            return self;\n        }\n        eval('CustomError = function ' + name + '() {' +\n            'return build.apply(this, arguments); }');\n        CustomError.prototype = Object.create(Error.prototype);\n        define(CustomError.prototype, 'constructor', CustomError);\n        for (var key in proto) {\n            define(CustomError.prototype, key, proto[key]);\n        }\n        Object.defineProperty(CustomError.prototype, 'name', { value: name });\n        return CustomError;\n    }\n\n})();\n</code></pre>\n\n<p>As a reasult we get</p>\n\n<pre><code>/**\n * name   The name of the constructor name\n * init   User-defined initialization function\n * proto  It's enumerable members will be added to \n *        prototype of created constructor\n **/\nError.createCustromConstructor = function(name, init, proto)\n</code></pre>\n\n<p>Then you can use it like this:</p>\n\n<pre><code>var NotImplementedError = Error.createCustromConstructor('NotImplementedError');\n</code></pre>\n\n<p>And use <code>NotImplementedError</code> as you would <code>Error</code>:</p>\n\n<pre><code>throw new NotImplementedError();\nvar err = new NotImplementedError();\nvar err = NotImplementedError('Not yet...');\n</code></pre>\n\n<p>And it will behave is expected:</p>\n\n<pre><code>err instanceof NotImplementedError               // -&gt; true\nerr instanceof Error                             // -&gt; true\nNotImplementedError.prototype.isPrototypeOf(err) // -&gt; true\nError.prototype.isPrototypeOf(err)               // -&gt; true\nerr.constructor.name                             // -&gt; NotImplementedError\nerr.name                                         // -&gt; NotImplementedError\nerr.message                                      // -&gt; Not yet...\nerr.toString()                                   // -&gt; NotImplementedError: Not yet...\nerr.stack                                        // -&gt; works fine!\n</code></pre>\n\n<p>Note, that <code>error.stack</code> works absolutle correct and won't include <code>NotImplementedError</code> constructor call (thanks to v8's <code>Error.captureStackTrace()</code>).</p>\n\n<p>Note. There is ugly <code>eval()</code>. The only reason it is used is to get correct <code>err.constructor.name</code>. If you don't need it, you can a bit simplify everything.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I often use an approach with prototypal inheritance. Overriding <code>toString()</code> gives you the advantage that tools like Firebug will log the actual information instead of <code>[object Object]</code> to the console for uncaught exceptions.</p>\n\n<p>Use <code>instanceof</code> to determine the type of exception.</p>\n\n<h2>main.js</h2>\n\n<pre><code>// just an exemplary namespace\nvar ns = ns || {};\n\n// include JavaScript of the following\n// source files here (e.g. by concatenation)\n\nvar someId = 42;\nthrow new ns.DuplicateIdException('Another item with ID ' +\n    someId + ' has been created');\n// Firebug console:\n// uncaught exception: [Duplicate ID] Another item with ID 42 has been created\n</code></pre>\n\n<h2>Exception.js</h2>\n\n<pre><code>ns.Exception = function() {\n}\n\n/**\n * Form a string of relevant information.\n *\n * When providing this method, tools like Firebug show the returned \n * string instead of [object Object] for uncaught exceptions.\n *\n * @return {String} information about the exception\n */\nns.Exception.prototype.toString = function() {\n    var name = this.name || 'unknown';\n    var message = this.message || 'no description';\n    return '[' + name + '] ' + message;\n};\n</code></pre>\n\n<h2>DuplicateIdException.js</h2>\n\n<pre><code>ns.DuplicateIdException = function(message) {\n    this.name = 'Duplicate ID';\n    this.message = message;\n};\n\nns.DuplicateIdException.prototype = new ns.Exception();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>//create error object</p>\n\n<pre><code>var error = new Object();\nerror.reason=\"some reason!\";\n</code></pre>\n\n<p>//buisness function</p>\n\n<pre><code>function exception(){\ntry{\nthrow error;\n}catch(err){\n    err.reason;\n}\n}\n</code></pre>\n\n<p>now we set add the reason or whatever properties we want to the error object and retrieve it. By making the error more reasonable. And thanks for asking the wonderful question.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should create a custom exception that prototypically inherits from Error.  For example:</p>\n\n<pre><code>function InvalidArgumentException(message) {\n    this.message = message;\n    // Use V8's native method if available, otherwise fallback\n    if (\"captureStackTrace\" in Error)\n        Error.captureStackTrace(this, InvalidArgumentException);\n    else\n        this.stack = (new Error()).stack;\n}\n\nInvalidArgumentException.prototype = Object.create(Error.prototype);\nInvalidArgumentException.prototype.name = \"InvalidArgumentException\";\nInvalidArgumentException.prototype.constructor = InvalidArgumentException;\n</code></pre>\n\n<p>This is basically a simplified version of what <a href=\"https://stackoverflow.com/users/489553/disfated\">disfated</a> posted above with the enhancement that stack traces work on Firefox and other browsers.  It satisfies the same tests that he posted:</p>\n\n<p>Usage:</p>\n\n<pre><code>throw new InvalidArgumentException();\nvar err = new InvalidArgumentException(\"Not yet...\");\n</code></pre>\n\n<p>And it will behave is expected:</p>\n\n<pre><code>err instanceof InvalidArgumentException          // -&gt; true\nerr instanceof Error                             // -&gt; true\nInvalidArgumentException.prototype.isPrototypeOf(err) // -&gt; true\nError.prototype.isPrototypeOf(err)               // -&gt; true\nerr.constructor.name                             // -&gt; InvalidArgumentException\nerr.name                                         // -&gt; InvalidArgumentException\nerr.message                                      // -&gt; Not yet...\nerr.toString()                                   // -&gt; InvalidArgumentException: Not yet...\nerr.stack                                        // -&gt; works fine!\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Can I define custom types for user-defined exceptions in JavaScript?  If I can, how would I do it?</p>\n",
            "last_activity_date": 1420047449,
            "question_id": 464359,
            "score": 130,
            "tags": [
                "javascript",
                "exception-handling"
            ],
            "title": "Custom Exceptions in JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>It's funny because I'm learning Angular myself and was watching some video's from their channel on Youtube.\nThe speaker mentions your exact problem in this video <a href=\"https://www.youtube.com/watch?v=ZhfUv0spHCY#t=1681\">https://www.youtube.com/watch?v=ZhfUv0spHCY#t=1681</a> around the 28:30 minute mark.</p>\n\n<p>It comes down to placing that particular piece of code in a service rather then a controller.</p>\n\n<p>My guess would be to inject new popup elements into the DOM and handle them separate instead of showing and hiding the same element. This way you can have multiple popups.</p>\n\n<p>The whole video is very interesting to watch as well :-)</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Based on my experience with AngularJS modals so far I believe that the most elegant approach is a dedicated service to which we can provide a partial (HTML) template to be displayed in a modal.</p>\n\n<p>When we think about it modals are kind of AngularJS routes but just displayed in modal popup. </p>\n\n<p>The AngularUI bootstrap project (<a href=\"http://angular-ui.github.com/bootstrap/\">http://angular-ui.github.com/bootstrap/</a>) has an excellent <code>$modal</code> service (used to be called $dialog prior to version 0.6.0) that is an implementation of a service to display partial's content as a modal popup.</p>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<ul>\n<li>Create a 'popup' directive and apply it to the container of the popup content</li>\n<li>In the directive, wrap the content in a absolute position div along with the mask div below it.</li>\n<li>It is OK to move the 2 divs in the DOM tree as needed from within the directive. Any UI code is OK in the directives, including the code to position the popup in center of screen.</li>\n<li>Create and bind a boolean flag to controller. This flag will control visibility.</li>\n<li>Create scope variables that bond to OK / Cancel functions etc.</li>\n</ul>\n\n<p>Editing to add a high level example (non functional)</p>\n\n<pre><code>&lt;div id='popup1-content' popup='showPopup1'&gt;\n  ....\n  ....\n&lt;/div&gt;\n\n\n&lt;div id='popup2-content' popup='showPopup2'&gt;\n  ....\n  ....\n&lt;/div&gt;\n\n\n\n.directive('popup', function() {\n  var p = {\n      link : function(scope, iElement, iAttrs){\n           //code to wrap the div (iElement) with a abs pos div (parentDiv)\n          // code to add a mask layer div behind \n          // if the parent is already there, then skip adding it again.\n         //use jquery ui to make it dragable etc.\n          scope.watch(showPopup, function(newVal, oldVal){\n               if(newVal === true){\n                   $(parentDiv).show();\n                 } \n              else{\n                 $(parentDiv).hide();\n                }\n          });\n      }\n\n\n   }\n  return p;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Angular-ui comes with dialog directive.Use it and set templateurl to whatever page you want to include.That is the most elegant way and i have used it in my project as well.\nYou can pass several other parameters for dialog as per need.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>See \n<a href=\"http://adamalbrecht.com/2013/12/12/creating-a-simple-modal-dialog-directive-in-angular-js/\">http://adamalbrecht.com/2013/12/12/creating-a-simple-modal-dialog-directive-in-angular-js/</a>\nfor a simple way of doing modal dialog with Angular and without needing bootstrap</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>This time i've a question more conceptual than else...\nso there isn't much real code here.</p>\n\n<p>I've this angularJS app. Everything works just fine.</p>\n\n<p>Now I need to show different popups when specific conditions become true, and i was wondering what is the best way to procede.</p>\n\n<p>Currently i'm evaluating two options, but i'm absolutely open to other options (if are better).</p>\n\n<p><strong>(Option 1)</strong></p>\n\n<blockquote>\n  <p>I could create the new html element for the popup, and append to the\n  DOM directly from the controller.</p>\n</blockquote>\n\n<p>This will break the MVC design pattern.</p>\n\n<p>I'm not happy with this solution.</p>\n\n<p><strong>(Option 2)</strong></p>\n\n<blockquote>\n  <p>I could insert always the code for all the popups in the static html\n  file.</p>\n  \n  <p>Then, using <code>ngShow</code>, i can hide/show only the correct popup.</p>\n</blockquote>\n\n<p>This option is not really scalable.</p>\n\n<p><strong>So i'm pretty sure there has to be a better way to achieve what i want.</strong></p>\n\n<p>As always, any help is welcomed.</p>\n\n<p>Thank you in advance</p>\n",
            "last_activity_date": 1400591306,
            "question_id": 15812203,
            "score": 101,
            "tags": [
                "javascript",
                "model-view-controller",
                "angularjs",
                "popup",
                "show-hide"
            ],
            "title": "AngularJS, show popups - The most elegant way?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>You won't have any control over detecting touches, and even if you did the logic steps to figure out what exactly the user is trying to touch is complex and best handled by the device itself. </p>\n\n<p>Your best bet is to create a mobile version of the site or an alternate stylesheet that is loaded when you detect a mobile device with Javascript.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>It sounds to me like you want to have a touch-screen-friendly option, to cover the following scenarios:</p>\n\n<ol>\n<li>iPhone-like devices: small screen, touch only</li>\n<li>Small screens, no touch (you didn't mention this one)</li>\n<li>Large screens, no touch (i.e. conventional computers)</li>\n<li>Touch-screen-enabled large screens such as iPad, notebooks/pcs with touch screens.</li>\n</ol>\n\n<p>For case 1 and 2 you will probably need a separate site or a CSS file that eliminates lots of unnecessary content and makes things larger and easier to read/navigate.  If you care about case #2 then as long as the links/buttons on the page are keyboard-navigable then case 1 and 2 are equivalent.</p>\n\n<p>For case 3 you have your normal website.  For case 4 it sounds like you want clickable things to be bigger or easier to touch.  If it's not possible to simply make everything bigger for all users, an alternate style-sheet can provide you with the touch-friendly layout changes.</p>\n\n<p>The easiest thing to do is provide a link to the touch-screen-version of the site somewhere on the page.  For well-known touch devices such as iPad you can sniff the user agent and set the touch stylesheet as the default.  However I'd consider making this the default for everyone; if your design looks good on the iPad it should look acceptably good on any notebook.  Your mouse users with less-than-stellar clicking skills will be pleased to find bigger click targets, especially if you add appropriate <code>:hover</code> or <code>mouseover</code> effects to let users know that things are clickable.</p>\n\n<p>I know you said you don't want to sniff user-agents.  But I'd contend that at this time the state of browser support for this is in too much flux to worry about the \"Correct\" way to do it.  Browsers will eventually provide the information that you need, but you will probably find that it will be years before this information is ubiquitous.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>If you are using PHP, this is a good solution:</p>\n\n<p><a href=\"http://chrisschuld.com/projects/browser-php-detecting-a-users-browser-from-php/\" rel=\"nofollow\">http://chrisschuld.com/projects/browser-php-detecting-a-users-browser-from-php/</a></p>\n\n<p>You can detect whether the browser is a phone from the serverside by sniffing the browser request details, and if so, display alternative/extra stylesheets/js/html</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>No, there is no such thing.\nCSS has the screen size option, which will allow you to optimize layout, but that's all.\nThere is also <code>media=\"handheld\"</code> but that also doesn't apply to your requirements.</p>\n\n<p>Feature detection might work using javascript, however, there are issues with different events for different devices.  PPK (the man behind quirksmode.org) is doing a huge amount of work checking what javascript is possible for each mobile/handheld device, and it's proving that nothing seems to be standard with these devices and yet this STILL doesn't apply to your requirement for touch laptop devices.<br>\n(honestly I dont know why you are concerned about a device that isn't even out yet, be pragmatic and worry about it once it's here and you can test it)</p>\n\n<p>PPK's work on mobile browser and touch events, will save you hours.  Check it out <a href=\"http://www.quirksmode.org/mobile/\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Apple has <a href=\"http://developer.apple.com/safari/library/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html#//apple_ref/doc/uid/TP40006511-SW1\" rel=\"nofollow\">TouchEvents defined only for iPhone OS</a> FWIW</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Google Chrome has a <a href=\"http://code.google.com/p/chromium/issues/detail?id=36415#c14\" rel=\"nofollow\">command line switch for enabling touch events</a>. <strike>Disabled by default. So until they enable them for everyone again (hopefully they won't), it's possible to detect touch with the help of javascript like I described in the question.</strike>.</p>\n\n<p><strong>Update jun 3 2010</strong>: <strike>This actually got into the stable version on 25th of May 2010 :( Don't know it it was a mistake or not.</strike></p>\n\n<p>Have discussed the issue on the w3c mailing list, but I doubt anything will happen very soon. <a href=\"http://lists.w3.org/Archives/Public/www-style/2010May/0411.html\" rel=\"nofollow\">http://lists.w3.org/Archives/Public/www-style/2010May/0411.html</a>\nThey might discuss this during TPAC in November.</p>\n\n<p><strong>Update sep 30 2010</strong>: Supposedly fixed in Chrome 6. Haven't had time to downgrade to stable yet to verify. Since Chrome upgrade automatically this problem should already be gone :)</p>\n\n<p>Read this if you're considering using media queries:\n<a href=\"http://www.cloudfour.com/css-media-query-for-mobile-is-fools-gold/\" rel=\"nofollow\">http://www.cloudfour.com/css-media-query-for-mobile-is-fools-gold/</a>\nand <a href=\"http://www.quirksmode.org/blog/archives/2010/09/more_about_medi.html\" rel=\"nofollow\">http://www.quirksmode.org/blog/archives/2010/09/more_about_medi.html</a></p>\n\n<p><strong>Update may 16th 2011</strong>: W3C is now working on a <a href=\"http://www.w3.org/TR/touch-events/\" rel=\"nofollow\">Touch Events specification</a>, but <a href=\"http://lists.w3.org/Archives/Public/public-webevents/2011AprJun/0105.html\" rel=\"nofollow\">more or less refused</a> to hide touch events for terminals without touch hardware. So don't expect the touch event detection to work for long.</p>\n\n<p><strong>Update june 6th 2012</strong>: The W3C CSS4 Media Queries (Editors Draft) spec have something very interesting. See my <a href=\"http://stackoverflow.com/questions/2607248/optimize-website-for-touch-devices/10872060#10872060\">separate answer</a> about this.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Not a complete solution, but you might want to simply outright avoid any small buttons. While small buttons are more of a usability problem on touch devices, they are always hard to use, even with a big screen &amp; mouse.</p>\n\n<p>If you just pay attention to using suitably big buttons with enough space between them, everyone will benefit. Plus, it will force you not to clutter your interface with too many small buttons :-).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't know if a standardized media query like Mozilla's will solve the problem by itself.  Like one of the Chromium developers said in that discussion you linked, the presence of touch event support in the browser doesn't mean touch events can or will fire, or even if they do, that the user will only want to interact via touch input.  Likewise, the presence of touch input support in the device doesn't mean the user will use that method of input - perhaps the device supports mouse, keyboard, and touch input and the user prefers the mouse or some combination of the three input types.  </p>\n\n<p>I agree with the Chromium developer that supporting touch events was not a bug in the browser.  A good browser should support touch events because it might be installed on a device that supports touch input.  It's the website developer's fault that he took the event support to mean the user would be interacting via touch.</p>\n\n<p>It seems we need to know two things:\n(1) What are all the supported input types on the device\n(2) What are all the supported event types in the browser</p>\n\n<p>Since we don't know #1 right now, there is one approach proposed by PPK of quirksmode that I like.  He talks about it here: <a href=\"http://www.quirksmode.org/blog/archives/2010/02/do_we_need_touc.html#link4\" rel=\"nofollow\">http://www.quirksmode.org/blog/archives/2010/02/do_we_need_touc.html#link4</a></p>\n\n<p>Basically, listen for touch events and mouse events, and when they happen, set up the UI accordingly.  Obviously that's limiting to the developer.  I don't think it's a valid approach to your problem with link size because you don't want to wait for interaction to alter the UI.  The whole point is to present a different UI (a larger/smaller link) before any interaction occurs.</p>\n\n<p>I hope you make your proposal and it gets included in CSS3.  Until then, as much as it pains me to say it, user agent sniffing looks like the best approach.</p>\n\n<p>p.s. I hope hope hope someone comes here and proves me wrong</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>try using tables and make a full cell to be a link...\ni'm working on that in my website...\nit's not working well so far...\nbut you might find a way...\non this way, no need to overload your website with javascript and functionality detection...\nyou can give it a relative size instread of a fixed size...\nand in this way, your website can be viewed in a desktop as is viewed in a iphone...\nthink about this idea...\nany sugestion is apreciated...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Good news! The editor draft of <a href=\"http://dev.w3.org/csswg/css4-mediaqueries/#pointer\" rel=\"nofollow\">CSS4 Media Queries</a> have included a new media feature '<a href=\"http://dev.w3.org/csswg/css4-mediaqueries/#pointer\" rel=\"nofollow\">pointer</a>'.</p>\n\n<blockquote>\n  <p>Typical examples of a \u2018fine\u2019 pointing system are a mouse, a track-pad or a stylus-based touch screen. Finger-based touch screens would qualify as \u2018coarse\u2019.</p>\n</blockquote>\n\n<pre><code>/* Make radio buttons and check boxes larger if we\n   have an inaccurate pointing device */\n@media (pointer:coarse) {\n    input[type=\"checkbox\"], input[type=\"radio\"] {\n        min-width:30px;\n        min-height:40px;\n        background:transparent;\n    }\n}\n</code></pre>\n\n<p>It's also possible to test the media query from JavaScript:</p>\n\n<pre><code>var isCoarsePointer = (window.matchMedia &amp;&amp;\n                       matchMedia(\"(pointer: coarse)\").matches);\n</code></pre>\n\n<p><strong>Updated Feb. 11th. 2013</strong> On Windows 8 recent versions of Chrome (version 24+) detect touch-hardware when launching the application and expose touch events. Unfortunately if \"pointer:coarse\" returns false, there is no way to know if it's because pointer media queries are not implemented or because there is a fine pointer. WebKit <a href=\"https://trac.webkit.org/browser/trunk/Source/WebCore/css/MediaQueryEvaluator.cpp?rev=132633#L698\" rel=\"nofollow\">haven't implemented</a> \"pointer:fine\" yet, so we can't check that either.</p>\n\n<p><strong>Update Sept. 26th. 2012</strong>\nTested in Safari on iOS6 and Chrome on Android 4.1.1 and it's not there yet. 'pointer' and 'hover' media-queries <a href=\"http://trac.webkit.org/browser/trunk/Source/WebCore/css/MediaQueryEvaluator.cpp?rev=119045\" rel=\"nofollow\">landed in WebKit</a> May 30th. According to the User-Agent, Safari uses WebKit branch <a href=\"https://trac.webkit.org/browser/branches/safari-536.26-branch/Source/WebCore/css/MediaQueryEvaluator.cpp?rev=129611\" rel=\"nofollow\">536.26</a> from April 25th, and Chrome on Android uses and even older one (535.19). Not sure WebKit branches from User-Agent strings are to be trusted, but my <a href=\"http://jsbin.com/irafov/2/edit\" rel=\"nofollow\">test page</a> is not able to detect pointer media queries either.\nThe <a href=\"http://trac.webkit.org/browser/trunk/Source/WebCore/css/MediaQueryEvaluator.cpp?rev=119045#L547\" rel=\"nofollow\">implementation from May</a> only implements the pointer media query for touch devices, so pointer: fine won't work for devices with a mouse.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>See <a href=\"http://crbug.com/136119\" rel=\"nofollow\">http://crbug.com/136119</a> for support for adding pointer:fine in Chrome.  It is actually possible to detect whether pointer:coarse is supported (to distinguish unset from not supported) - just create the media query yourself and test in javascript whether it parsed properly.</p>\n\n<p>Eg., today \"@media (pointer:coarse)\" in Chrome shows up:</p>\n\n<pre><code>&gt; document.styleSheets[0].rules[5].media[0]\n\"(pointer: coarse)\"\n</code></pre>\n\n<p>But unsupported bogus values like \"@media (pointer:other)\" don't:</p>\n\n<pre><code>&gt; document.styleSheets[0].rules[8].media[0]\n\"not all\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>On a touch device like iPhone/iPad/Android it can be difficult to hit a small button with your finger. There is no cross-browser way to detect touch devices with CSS media queries that I know of. So I check if the browser has support for javascript touch events. <strike>Until now, other browsers haven't supported them, but the latest Google Chrome on dev channel <a href=\"http://code.google.com/p/chromium/issues/detail?id=36415\">enabled touch events</a> (even for non touch devices). And I suspect other browser makers will follow, since laptops with touch screens are comming</strike>. <strong>Update: It was a bug in Chrome, so now the JavaScript detection works again</strong>.</p>\n\n<p>This is the test I use:</p>\n\n<pre><code>function isTouchDevice() {\n    return \"ontouchstart\" in window;\n}\n</code></pre>\n\n<p>The problem is that this only tests if the browser has support for touch events, not the device.</p>\n\n<p>Does anyone know of The Correct[tm] way of giving touch devices better user experience? Other than sniffing user agent.</p>\n\n<p>Mozilla has a media query for touch devices. But I haven't seen anything like it in any other browser:\n<a href=\"https://developer.mozilla.org/En/CSS/Media_queries#-moz-touch-enabled\">https://developer.mozilla.org/En/CSS/Media_queries#-moz-touch-enabled</a></p>\n\n<p>Update: I want to avoid using a separate page/site for mobile/touch devices. The solution has to detect touch devices with object detection or similar from JavaScript, or include a custom touch-CSS without user agent sniffing! <strong>The main reason I asked, was to make sure it's not possible today, before I contact the css3 working group</strong>. So please don't answer if you can't follow the requirements in the question ;)</p>\n",
            "last_activity_date": 1366905007,
            "question_id": 2607248,
            "score": 59,
            "tags": [
                "javascript",
                "javascript-events",
                "css3",
                "usability",
                "touch"
            ],
            "title": "Optimize website for touch devices"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>What it ultimately does is it ensures that the value of <code>this</code> in a function will be the value you desire.</p>\n\n<p>A common example is in a <code>setTimeout</code> that takes place inside a <code>click</code> handler.</p>\n\n<p>Take this:</p>\n\n<pre><code>$('#myElement').click(function() {\n        // In this function, \"this\" is our DOM element.\n    $(this).addClass('aNewClass');\n});\n</code></pre>\n\n<p>The intention is simple enough. When <code>myElement</code> is clicked, it should get the class <code>aNewClass</code>. Inside the handler <code>this</code> represents the element that was clicked.</p>\n\n<p>But what if we wanted a short delay before adding the class? We might use a <code>setTimeout</code> to accomplish it, but the trouble is that whatever function we give to <code>setTimeout</code>, the value of <code>this</code> inside that function will be <code>window</code> instead of our element.</p>\n\n<pre><code>$('#myElement').click(function() {\n    setTimeout(function() {\n          // Problem! In this function \"this\" is not our element!\n        $(this).addClass('aNewClass');\n    }, 1000);\n});\n</code></pre>\n\n<p>So what we can do instead, is to call <code>$.proxy()</code>, sending it the function and the value we want to assign to <code>this</code>, and it will return a function that will retain that value.</p>\n\n<pre><code>$('#myElement').click(function() {\n   // ------------------v--------give $.proxy our function,\n    setTimeout($.proxy(function() {\n        $(this).addClass('aNewClass');  // Now \"this\" is again our element\n    }, this), 1000);\n   // ---^--------------and tell it that we want our DOM element to be the\n   //                      value of \"this\" in the function\n});\n</code></pre>\n\n<p>So after we gave <code>$.proxy()</code> the function, and the value we want for <code>this</code>, it returned a function that will ensure that <code>this</code> is properly set.</p>\n\n<p>How does it do it? It just returns an anonymous function that <em>calls</em> our function using the <code>.apply()</code> method, which lets it explicitly set the value of <code>this</code>.</p>\n\n<p>A simplified look at the function that is returned may look like:</p>\n\n<pre><code>function() {\n    // v--------func is the function we gave to $.proxy\n    func.apply( ctx );\n    // ----------^------ ctx is the value we wanted for \"this\" (our DOM element)\n}\n</code></pre>\n\n<p>So this anonymous function is given to <code>setTimeout</code>, and all it does is execute our original function with the proper <code>this</code> context.</p>\n",
                    "is_accepted": true,
                    "score": 229
                },
                {
                    "body": "<p>Without going into creater detail (which would be necessary because this is about <strong>Context</strong> in ECMAscript, the <strong>this context variable</strong> etc.)</p>\n\n<p>There are three different types of \"Contexts\" in ECMA-/Javascript:</p>\n\n<ul>\n<li>The global context</li>\n<li>Function context</li>\n<li>eval context</li>\n</ul>\n\n<p>Every code is executed in its <strong>execution context</strong>. There is <strong>one</strong> global context and there can be many instances of function (and eval) contexts. Now the interesting part:</p>\n\n<p>Every call of a function enters the function excution context. An execution context of a function looks like:</p>\n\n<p><strong>The Activation Object</strong><br>\n<strong>Scope Chain</strong><br>\n<strong>this value</strong>  </p>\n\n<p>So the <strong>this</strong> value is a special object which is related with the execution context. There are two functions in ECMA-/Javascript which may change the <strong>this</strong> value in a function execution context:</p>\n\n<pre><code>.call()\n.apply()\n</code></pre>\n\n<p>If we have a function <code>foobar()</code> we can change the <strong>this</strong> by calling:</p>\n\n<pre><code>foobar.call({test: 5});\n</code></pre>\n\n<p>Now we could access in <code>foobar</code> the object we passed in:</p>\n\n<pre><code>function foobar() { \n    this.test // === 5\n}\n</code></pre>\n\n<p>This is exactly what <code>jQuery.proxy()</code> does. It takes a <code>function</code> and <code>context</code> (which is nothing else than an object) and links the function by invoking <code>.call()</code> or <code>.apply()</code> and returns that new function.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>I have written this function:</p>\n\n<pre><code>function my_proxy (func,obj)\n{\n    if (typeof(func)!=\"function\")\n        return;\n\n    // If obj is empty or another set another object \n    if (!obj) obj=this;\n\n    return function () { return func.apply(obj,arguments); }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>From <a href=\"http://api.jquery.com/jquery.proxy/\">docs</a> I understand that <code>.proxy()</code> would change the scope of the function passed as an argument. Could someone please explain me this better, why should we do this?</p>\n",
            "last_activity_date": 1415207724,
            "question_id": 4986329,
            "score": 89,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Understanding $.proxy() in jquery?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Can't you do this with a bash script? I don't know enough to provide the details, but that's probably the way to go.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I suggest looking into Topcube, it's goal is to \"Give node developers a way to have a desktop GUI to their node servers using HTML5 + CSS3 as the GUI platform.\" <a href=\"https://github.com/creationix/topcube\">Topcube at github</a>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>To answer the quesion... No I don't think this is currently possible unless you create your own solution. But there is interest and development. I think Windows will likely come last until node.js doesn't require cygwin.</p>\n\n<p>There seems to be a lot of interest and buzz about this approach for the future. One of the major issues seems to be getting node.js to run with less dependencies (cygwin) in windows.</p>\n\n<p>Like Brian Heese mentioned, a project with a lot of promise is TopCube (webkit + node.js).</p>\n\n<p>Maybe using Google's Native Client could yield a solution.</p>\n\n<p>I think the best way to implement this, would be to have one portable package that includes an enhanced CEF based application (for more input control, bindings, etc), as well as a server package that operates separately. They could communicate over the network (using loopback). </p>\n\n<p>Related interesting discussions on the subject (integrating webkit/chromium with node.js for desktop application development):\n    <a href=\"http://groups.google.com/group/nodejs/browse_thread/thread/f90b3f1c747d20b3\" rel=\"nofollow\">http://groups.google.com/group/nodejs/browse_thread/thread/f90b3f1c747d20b3</a>\n    <a href=\"http://magpcss.org/ceforum/viewtopic.php?f=10&amp;t=467\" rel=\"nofollow\">http://magpcss.org/ceforum/viewtopic.php?f=10&amp;t=467</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Option 1: <a href=\"http://nwjs.io/\">NW.js</a> formerly node-webkit</p>\n\n<p>The gist is that it basically extends the JS engine for you to write a web-based app supporting node's extended object model, and modules... you then package your package.json start.html modules and js files into a zip (with the .nw extension) and run it with nw(.exe) .. there are windows, mac and linux builds available.</p>\n\n<hr>\n\n<p>Option 2: <a href=\"https://github.com/atom/atom-shell\">atom-shell</a></p>\n\n<p>This is the shell that github's Atom editor uses.  It's very similar to node-webkit, though it will run the script first, and you have to create a view/window for the user.  There are some other minor differences, but it's worth looking at.</p>\n\n<hr>\n\n<p>Option 3: <a href=\"https://github.com/breach/thrust\">Thrust</a> (<a href=\"https://www.npmjs.com/package/node-thrust\">Node Adapter</a>)</p>\n\n<p>This is a really lose binding around webkit/chrome with an ipc channel to a launching application.  You can either use the message channel, or you can write your app as a more traditional server-side app in node, and control a window launch.  Which may suite you well.</p>\n\n<p>Thrust has bindings for multiple languages.  I put this ahead of MacGapNode only because I'm favoring cross-platform options first.</p>\n\n<hr>\n\n<p>Option 4: <a href=\"https://github.com/node-app/MacGapNode\">MacGapNode</a> (OSX Only)</p>\n\n<p>MacGap with Node integration</p>\n\n<hr>\n\n<p>Option 5: <a href=\"https://developer.mozilla.org/en-US/docs/XULRunner\">XULRunner</a></p>\n\n<p>Although not NodeJS per-se, it is another option for having an HTML (XUL/HTML) based option that is JS driven.  This will not include everything that the above options include, but still may be worth looking at.</p>\n\n<p>This option may actually change or go away, as there have been some experiments in getting Firefox to use an enhanced HTML instead of XUL for its' shell (nothing definitive yet).</p>\n\n<hr>\n\n<p>Aside: Services...</p>\n\n<p>I can't speak for OSX on this as a .App, but it could well be possible to create a background service install in NodeJS and a link to a \"local\" site on the desktop.  Most browsers have an option to not show all the features (I know firefox in particular does).</p>\n\n<p>I know your question is to OSX in particular, but in windows you can use NSSM to run anything as a service, and I have used it for NodeJS based services in windows.  I think some of the other options above are better depending on your needs though.</p>\n\n<hr>\n\n<p>Removed:</p>\n\n<ul>\n<li><strike><a href=\"https://github.com/crcn/nexe\">nexe</a></strike> - stale/unmaintained</li>\n<li><strike><a href=\"http://appjs.org/\">AppJS</a></strike> - replaced with DeskShell</li>\n<li><strike><a href=\"https://github.com/sihorton/appjs-deskshell\">DeskShell</a></strike> - stale, website offline</li>\n<li><strike><a href=\"https://github.com/rogerwang/node-webkit\">node-webkit</a></strike> -renamed to NW.js</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 65
                },
                {
                    "body": "<p>You can accomplish this using AppJS: <a href=\"https://github.com/appjs/appjs\">https://github.com/appjs/appjs</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>I've searched a bit but can't find an existing tool for this.</p>\n\n<p>I have a node.js web server that is designed to run on your own computer that does some snazzy things for you.  It would be pretty aswesome if I could double click <code>MySnazzyThing.app</code> instead of installing nodejs, and npm and running <code>node mysnazzyapp.js</code> on the command line.</p>\n\n<p>The <code>.app</code> executable would spool up the node server and open a simple native webkit window which would show what would normally be on <code>localhost:3000</code> if I were running on the command line.</p>\n\n<p>This native app could then, say, be distributed through the mac app store.  And bam, a node.js desktop app.</p>\n\n<p>Does any such tool exist? Or are there any technical reasons that this wouldn't work as I imagine it?</p>\n",
            "last_activity_date": 1421445599,
            "question_id": 6834537,
            "score": 60,
            "tags": [
                "javascript",
                "osx",
                "node.js",
                "desktop-application"
            ],
            "title": "Packaging a node.js webapp as a normal desktop app"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>you're on the right path. you should have an object that controls the lifecycle of your views. i don't like to put this in my view. i like to create a separate object for this.</p>\n\n<p>the thing you need to do, is unbind the events when necessary. to do this, it's a good idea to create a \"close\" method on all of your views, and use the object that controls the lifecycle of everything to always call the close method.</p>\n\n<p>for example:</p>\n\n<pre><code>\n  function AppController(){\n    this.showView = function (view){\n      if (this.currentView){\n        this.currentView.close();\n      }\n      this.currentView = view;\n      this.currentView.render();\n      $(\"#someElement\").html(this.currentView.el);\n    }\n  }\n</code></pre>\n\n<p>at this point, you would set up your code to only have one instance of the AppController, and you would always call <code>appController.showView(...)</code> from your router or any other code that needs to show a view in the <code>#someElement</code> portion of your screen.</p>\n\n<p>(i have another example of a very simple backbone app that uses an \"AppView\" (a backbone view that runs the main portion of the app), here: <a href=\"http://jsfiddle.net/derickbailey/dHrXv/9/\">http://jsfiddle.net/derickbailey/dHrXv/9/</a> )</p>\n\n<p>the <code>close</code> method does not exist on views by default, so you need to create one yourself, for each of your views. There are two things that should always be in the close method: <code>this.unbind()</code> and <code>this.remove()</code>. in addition to these, if you are binding your view to any model or collection events, you should unbind them in the close method. </p>\n\n<p>for example:</p>\n\n<pre><code>\n  MyView = Backbone.View.extend({\n    initialize: function(){\n      this.model.bind(\"change\", this.modelChanged, this);\n    },\n\n    modelChanged: function(){\n      // ... do stuff here\n    },\n\n    close: function(){\n      this.remove();\n      this.unbind();\n      this.model.unbind(\"change\", this.modelChanged);\n    }\n  });\n</code></pre>\n\n<p>this will properly clean up all of the events from the DOM (via <code>this.remove()</code>), all of the events that the view itself may raise (via <code>this.unbind()</code>) and the event that the view bound from the model (via <code>this.model.unbind(...)</code>).</p>\n",
                    "is_accepted": true,
                    "score": 71
                },
                {
                    "body": "<p>A simpiler way is to add a custom close method on the Backbone.View object</p>\n\n<pre><code>Backbone.View.prototype.close = function () {\n  this.$el.empty();\n  this.unbind();\n};\n</code></pre>\n\n<p>Using the above code you can do the following</p>\n\n<pre><code>var myView = new MyView();\n\nmyView.close();\n</code></pre>\n\n<p>easy peasy.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I always nuke the views and sometimes reuse the models. Making sure the views are deallocated can be a pain, if you keep the models around. The models may keep a reference to the view if they are not unbound properly.</p>\n\n<p>As of Backbone ~0.9.9, binding models with view.listenTo() rather than model.on() allows for easier cleanup through inversion of control (views control bindings as opposed to models). If view.listenTo() is used to bind, then a call to view.stopListening() or view.remove() will remove all bindings. Similar to calling model.off(null, null, this).</p>\n\n<p>I like to cleanup views by extending the view with a close function that calls sub-views semi-automatically. The subviews must be referenced by properties of the parent or they must be added to an array within the parent called childViews[].</p>\n\n<p>Here is the close function that I use..</p>\n\n<pre><code>// fired by the router, signals the destruct event within top view and \n// recursively collapses all the sub-views that are stored as properties\nBackbone.View.prototype.close = function () {\n\n    // calls views closing event handler first, if implemented (optional)\n    if (this.closing) {\n        this.closing();  // this for custom cleanup purposes\n    }\n\n    // first loop through childViews[] if defined, in collection views\n    //  populate an array property i.e. this.childViews[] = new ControlViews()\n    if (this.childViews) {\n        _.each(this.childViews, function (child) {\n            child.close();\n        });\n    }\n\n    // close all child views that are referenced by property, in model views\n    //  add a property for reference i.e. this.toolbar = new ToolbarView();\n    for (var prop in this) {\n        if (this[prop] instanceof Backbone.View) {\n            this[prop].close();\n        }\n    }\n\n    this.unbind();\n    this.remove();\n\n    // available in Backbone 0.9.9 + when using view.listenTo, \n    //  removes model and collection bindings\n    // this.stopListening(); // its automatically called by remove()\n\n    // remove any model bindings to this view \n    //  (pre Backbone 0.9.9 or if using model.on to bind events)\n    // if (this.model) {\n    //  this.model.off(null, null, this);\n    // }\n\n    // remove and collection bindings to this view \n    //  (pre Backbone 0.9.9 or if using collection.on to bind events)\n    // if (this.collection) {\n    //  this.collection.off(null, null, this);\n    // }\n}\n</code></pre>\n\n<p>Then a view is declared as follows..</p>\n\n<pre><code>views.TeamView = Backbone.View.extend({\n\n    initialize: function () {\n        // instantiate this array to ensure sub-view destruction on close()\n        this.childViews = [];  \n\n        this.listenTo(this.collection, \"add\", this.add);\n        this.listenTo(this.collection, \"reset\", this.reset);\n\n        // storing sub-view as a property will ensure destruction on close()\n        this.editView = new views.EditView({ model: this.model.edits });\n        $('#edit', this.el).html(this.editView.render().el);\n    },\n\n    add: function (member) {\n        var memberView = new views.MemberView({ model: member });\n        this.childViews.push(memberView);    // add child to array\n\n        var item = memberView.render().el;\n        this.$el.append(item);\n    },\n\n    reset: function () {\n        // manually purge child views upon reset\n        _.each(this.childViews, function (child) {\n            child.close();\n        });\n\n        this.childViews = [];\n    },\n\n    // render is called externally and should handle case where collection\n    // was already populated, as is the case if it is recycled\n    render: function () {\n        this.$el.empty();\n\n        _.each(this.collection.models, function (member) {\n            this.add(member);\n        }, this);\n        return this;\n    }\n\n    // fired by a prototype extension\n    closing: function () {\n        // handle other unbinding needs, here\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Which is the most efficient way to dispose model/view instances when not needed?</p>\n\n<p>Usually, I put all the logic in the controller/router. It is the one that decides, what views should be created, and what models should be supplied to them. Usually, there are a few handler functions, corresponding to different user actions or routes, where I create new view instances every time when a handler gets executed. Of course, that should eliminate whatever I've previously stored in the view instance. However, there are some situations when some views keep DOM event handlers themselves, and they don't get unbinded properly, which results in those instances being kept alive. I wish if there were a proper way to destroy view instances, when for example their el (DOM representation) gets detached, or thrown out of the DOM</p>\n",
            "last_activity_date": 1401201171,
            "question_id": 7379263,
            "score": 51,
            "tags": [
                "javascript",
                "backbone.js"
            ],
            "title": "Disposing of view and model objects in Backbone.js"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><a href=\"https://github.com/chriso/node.io\" rel=\"nofollow\">Node.io</a> seems to take the cake :-)</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>Take a look at <a href=\"http://blog.dtrejo.com/post/43757473805/scraping-made-easy-with-jquery-and-selectorga\" rel=\"nofollow\">http://blog.dtrejo.com/post/43757473805/scraping-made-easy-with-jquery-and-selectorga</a>, as it may have some good tips on how to get your first scraper going, as well as handy tools online that will help with creating regular expressions, and finding the best selectors with selectorgadget.</p>\n\n<p>Here's a link to the code to get you going: <a href=\"https://gist.github.com/790580\" rel=\"nofollow\">https://gist.github.com/790580</a></p>\n\n<p>As for populating the page with results in realtime, I recommend <a href=\"http://socket.io\" rel=\"nofollow\">socket.io</a>.</p>\n\n<p>Remember you can always stop into <a href=\"http://webchat.freenode.net/?channels=node.js&amp;uio=d4\" rel=\"nofollow\">#node.js</a> and ask questions!</p>\n\n<p><strong>UPDATE</strong>: I would now choose <a href=\"http://npm.im/cheerio\" rel=\"nofollow\">http://npm.im/cheerio</a> and <a href=\"http://npm.im/request\" rel=\"nofollow\">http://npm.im/request</a>. <a href=\"http://selectorgadget.com/\" rel=\"nofollow\">http://selectorgadget.com/</a> is still SUPER useful, as is <a href=\"http://txt2re.com\" rel=\"nofollow\">http://txt2re.com</a></p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>You don't always need to jQuery. If you play with the DOM returned from jsdom for example you can easily take what you need yourself (also considering you dont have to worry about xbrowser issues.) See: <a href=\"https://gist.github.com/1335009\" rel=\"nofollow\">https://gist.github.com/1335009</a> that's not taking away from node.io at all, just saying you might be able to do it yourself depending...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>All aforementioned solutions presume running the scraper locally. This means you will be severely limited in performance (due to running them in sequence or in a limited set of threads). A better approach, imho, is to rely on an existing, albeit commercial, scraping grid.</p>\n\n<p>Here is an example:</p>\n\n<pre><code>var bobik = new Bobik(\"YOUR_AUTH_TOKEN\");\nbobik.scrape({\n  urls: ['amazon.com', 'zynga.com', 'http://finance.google.com/', 'http://shopping.yahoo.com'],\n  queries:  [\"//th\", \"//img/@src\", \"return document.title\", \"return $('script').length\", \"#logo\", \".logo\"]\n}, function (scraped_data) {\n  if (!scraped_data) {\n    console.log(\"Data is unavailable\");\n    return;\n  }\n  var scraped_urls = Object.keys(scraped_data);\n  for (var url in scraped_urls)\n    console.log(\"Results from \" + url + \": \" + scraped_data[scraped_urls[url]]);\n});\n</code></pre>\n\n<p>Here, scraping is performed remotely and a callback is issued to your code only when results are ready (there is also an option to collect results as they become available).</p>\n\n<p>You can download <a href=\"https://github.com/emirkin/bobik_javascript_sdk\">Bobik client proxy SDK</a> at <a href=\"https://github.com/emirkin/bobik_javascript_sdk\">https://github.com/emirkin/bobik_javascript_sdk</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I've been doing research myself, and <a href=\"https://npmjs.org/package/wscraper\" rel=\"nofollow\">https://npmjs.org/package/wscraper</a> boasts itself as a</p>\n\n<blockquote>\n  <p>a web scraper agent based on cheerio.js a fast, flexible, and lean\n  implementation of core jQuery; built on top of request.js; inspired by\n  http-agent.js</p>\n</blockquote>\n\n<p>Very low usage (according to npmjs.org) but worth a look for any interested parties.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It is my easy to use general purpose scrapper <a href=\"https://github.com/harish2704/html-scrapper\" rel=\"nofollow\">https://github.com/harish2704/html-scrapper</a> written for Node.JS\nIt can extract information based on predefined schemas.\nA schema defnition includes a css selector and a data extraction function.\nIt currently using cheerio for dom parsing..</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>check out <a href=\"https://github.com/rc0x03/node-promise-parser\" rel=\"nofollow\">https://github.com/rc0x03/node-promise-parser</a></p>\n\n<pre><code>Fast: uses libxml C bindings\nLightweight: no dependencies like jQuery, cheerio, or jsdom\nClean: promise based interface- no more nested callbacks\nFlexible: supports both CSS and XPath selectors\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What's a good was to scrape website content using Node.js. I'd like to build something very, very fast that can execute searches in the style of <a href=\"http://www.kayak.com\">kayak.com</a>, where one query is dispatched to several different sites, the results scraped, and returned to the client as they become available.</p>\n\n<p>Let's assume that this script should just provide the results in JSON format, and we can process them either directly in the browser or in another web application.</p>\n\n<p>A few starting points:</p>\n\n<p><a href=\"http://anismiles.wordpress.com/2010/11/29/node-js-and-jquery-to-scrape-websites/\">Using node.js and jquery to scrape websites</a></p>\n\n<p>Anybody have any ideas?</p>\n",
            "last_activity_date": 1403217862,
            "question_id": 5211486,
            "score": 53,
            "tags": [
                "javascript",
                "jquery",
                "node.js",
                "screen-scraping",
                "web-scraping"
            ],
            "title": "Scrape web pages in real time with Node.js"
        },
        {
            "answer_count": 17,
            "answers": [
                {
                    "body": "<p>I use:</p>\n\n<pre><code>gmap.setZoom(24); //this looks a high enough zoom value\ngmap.fitBounds(bounds); //now the fitBounds should make the zoom value only less\n</code></pre>\n\n<p>This will use the smaller of 24 and the necessary zoom level according to your code, however it probably changes the zoom anyway and doesn't care about how much you zoomed out.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Please try this.</p>\n\n<pre><code>// Find out what the map's zoom level is\nzoom = map.getZoom();\nif (zoom == 1) {\n  // If the zoom level is that low, means it's looking around the\nworld.\n  // Swap the sw and ne coords\n  viewportBounds = new\ngoogle.maps.LatLngBounds(results[0].geometry.location, initialLatLng);\n  map.fitBounds(viewportBounds);\n}\n</code></pre>\n\n<p>If this will helpful to you.</p>\n\n<p>All the best</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In this function, you need to dynamically add metadata to store the geometry type only because the function accepts any geometry.</p>\n\n<p>\"fitGeometries\" is a JSON function extending a map object.</p>\n\n<p>\"geometries\" is an generic javascript array not an MVCArray().</p>\n\n<pre><code>geometry.metadata = { type: \"point\" };\nvar geometries = [geometry];\n\nfitGeometries: function (geometries) {\n    // go and determine the latLngBounds...\n    var bounds = new google.maps.LatLngBounds();\n    for (var i = 0; i &lt; geometries.length; i++) {\n        var geometry = geometries[i];\n        switch (geometry.metadata.type)\n        {\n            case \"point\":\n                var point = geometry.getPosition();\n                bounds.extend(point);\n                break;\n            case \"polyline\":\n            case \"polygon\": // Will only get first path\n                var path = geometry.getPath();\n                for (var j = 0; j &lt; path.getLength(); j++) {\n                    var point = path.getAt(j);\n                    bounds.extend(point);\n                }\n                break;\n        }\n    }\n    this.getMap().fitBounds(bounds);\n},\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I solved a similar problem in one of my apps.  I was a little confused by your description of the problem, but I think you have the same goal I had...</p>\n\n<p>In my app I wanted to plot a one or more markers and ensure the map was showing them all.  The problem was, if I relied solely on the fitBounds method, then the zoom-level would be maxed out when there was a single point - that was no good.</p>\n\n<p>The solution was to use fitBounds when there was many points, and setCenter+setZoom when there was only one point.</p>\n\n<pre><code>if (pointCount &gt; 1) {\n  map.fitBounds(mapBounds);\n}\nelse if (pointCount == 1) {\n  map.setCenter(mapBounds.getCenter());\n  map.setZoom(14);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<p>I don't like to suggest it, but if you <em>must</em> try - first call </p>\n\n<p><code>gmap.fitBounds(bounds);</code></p>\n\n<p>Then create a new Thread/AsyncTask, have it sleep for 20-50ms or so and then call </p>\n\n<p><code>gmap.setZoom( Math.max(6, gmap.getZoom()) );</code></p>\n\n<p>from the UI thread (use a handler or the <code>onPostExecute</code> method for AsyncTask).</p>\n\n<p>I don't know if it works, just a suggestion. Other than that you'd have to somehow calculate the zoom level from your points yourself, check if it's too low, correct it and then just call <code>gmap.setZoom(correctedZoom)</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>After calculation of the boundries you can check the distance between upper left and down right corner; then you can understand the zoom level by testing the distance (if distance is too far zoom level would be low) then you can select wheter using setbound method or setZoom..</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I use this to ensure the zoom level does not exceed a set level so that I know satellite images will be available.</p>\n\n<p>Add a listener to the <code>zoom_changed</code> event.\nThis has the added benefit of controlling the zoom control on the UI also.</p>\n\n<p>Only execute <code>setZoom</code> if you need to, so an <code>if</code> statement is preferable to <code>Math.max</code> or to <code>Math.min</code></p>\n\n<pre><code>   google.maps.event.addListener(map, 'zoom_changed', function() { \n      if ( map.getZoom() &gt; 19 ) { \n        map.setZoom(19); \n      } \n    });\n    bounds = new google.maps.LatLngBounds( ... your bounds ... )\n    map.fitBounds(bounds);\n</code></pre>\n\n<p>To prevent zooming out too far:</p>\n\n<pre><code>   google.maps.event.addListener(map, 'zoom_changed', function() { \n      if ( map.getZoom() &lt; 6 ) { \n        map.setZoom(6); \n      } \n    });\n    bounds = new google.maps.LatLngBounds( ... your bounds ... )\n    map.fitBounds(bounds);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If I'm not mistaken, I'm assuming you want all your points to be visible on the map with the highest possible zoom level. I accomplished this by initializing the zoom level of the map to <strong>16</strong>(not sure if it's the highest possible zoom level on V3). </p>\n\n<pre><code>var map = new google.maps.Map(document.getElementById('map_canvas'), { zoom: 16\n                                        , center: marker_point\n                                        , mapTypeId: google.maps.MapTypeId.ROADMAP\n});\n</code></pre>\n\n<p>Then after that I did the bounds stuff:</p>\n\n<pre><code>var bounds = new google.maps.LatLngBounds();\n\n//you can have a loop here of all you marker points\n//begin loop\nbounds.extend(marker_point);\n//end loop\n\nmap.fitBounds(bounds);\n</code></pre>\n\n<p>Result:\n Success!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>All I did is:</p>\n\n<pre><code>map.setCenter(bounds.getCenter(), map.getBoundsZoomLevel(bounds));\n</code></pre>\n\n<p>And it works on V3 API.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p><strong>Edit</strong>: See Matt Diamond's comment below.</p>\n\n<p>Got it! Try this:</p>\n\n<pre><code>map.fitBounds(bounds);\nvar listener = google.maps.event.addListener(map, \"idle\", function() { \n  if (map.getZoom() &gt; 16) map.setZoom(16); \n  google.maps.event.removeListener(listener); \n});\n</code></pre>\n\n<p>Modify to your needs.</p>\n",
                    "is_accepted": true,
                    "score": 179
                },
                {
                    "body": "<p>I have come to this page multiple times to get the answer, and while all the existing answers were super helpful, they did not solve my problem exactly. </p>\n\n<pre><code>google.maps.event.addListenerOnce(googleMap, 'zoom_changed', function() {\n    var oldZoom = googleMap.getZoom();\n    googleMap.setZoom(oldZoom - 1); //Or whatever\n});\n</code></pre>\n\n<p>Basically I found that the 'zoom_changed' event prevented the UI of the map from \"skipping\" which happened when i waited for the 'idle' event.</p>\n\n<p>Hope this helps somebody!</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>I had the same issue and I was able to solve it using the following code.  This listener (<code>google.maps.addListenerOnce()</code>) event will only get fired once, right after <code>map.fitBounds()</code> is executed.  So, there is no need to </p>\n\n<ol>\n<li>Keep track of and manually remove the listener, or  </li>\n<li>Wait until the map is <code>idle</code>.</li>\n</ol>\n\n<p>It sets the appropriate zoom level initially and allows the user to zoom in and out past the initial zoom level because the event listener has expired.  For example, if only <code>google.maps.addListener()</code> was called, then the user would <i>never</i> be able to zoom-in past the stated zoom level (in the case, 4).  Since we implemented <code>google.maps.addListenerOnce()</code>, the user will be able to zoom to any level he/she chooses.</p>\n\n<pre><code>map.fitBounds(bounds);\n\nvar zoom_level_for_one_marker = 4;\n\ngoogle.maps.event.addListenerOnce(map, 'bounds_changed', function(event){\n   if (this.getZoom() &gt;= zoom_level_for_one_marker){  \n       this.setZoom(zoom_level_for_one_marker) \n   }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Had the same problem, needed to fit many markers on the map.\nThis solved my case:</p>\n\n<ol>\n<li>Declare bounds </li>\n<li>Use scheme provided by koderoid (for each marker set <code>bounds.extend(objLatLng)</code>)</li>\n<li><p>Execute fitbounds AFTER map is completed:</p>\n\n<pre><code>google.maps.event.addListenerOnce(map, 'idle', function() { \n    map.fitBounds( bounds );\n});\n</code></pre></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>this work's for me with API v3 but with setting fixed zoom:</p>\n\n<pre><code>var bounds = new google.maps.LatLngBounds();\n// extend bounds with each point\n\ngmap.setCenter(bounds.getCenter()); \ngmap.setZoom( 6 );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've found a solution that does the check before calling <code>fitBounds</code> so you don't zoom in and suddenly zoom out</p>\n\n<pre><code>var bounds = new google.maps.LatLngBounds();\n\n// extend bounds with each point\n\nvar minLatSpan = 0.001;\nif (bounds.toSpan().lat() &gt; minLatSpan) {\n    gmap.fitBounds(bounds); \n} else {\n    gmap.setCenter(bounds.getCenter());\n    gmap.setZoom(16);\n}\n</code></pre>\n\n<p>You'll have to play around with the minLatSpan variable a bit to get it where you want. It will vary based on both zoom-level and the dimensions of the map canvas.  </p>\n\n<p>You could also use longitude instead of latitude</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>google.maps.event.addListener(marker, 'dblclick', function () {\n    var oldZoom = map.getZoom(); \n    map.setCenter(this.getPosition());\n    map.setZoom(parseInt(oldZoom) + 1);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I\u2019ve just fixed this by setting maxZoom in advance, then removing it afterwards. For example:</p>\n\n<pre><code>map.setOptions({ maxZoom: 15 });\nmap.fitBounds(bounds);\nmap.setOptions({ maxZoom: null });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a set of points I want to plot on an embedded Google Map (API v3).  I'd like the bounds to accommodate all points unless the zoom level is too low (i.e., zoomed out too much).  My approach has been like this:</p>\n\n<pre><code>var bounds = new google.maps.LatLngBounds();\n\n// extend bounds with each point\n\ngmap.fitBounds(bounds); \ngmap.setZoom( Math.max(6, gmap.getZoom()) );\n</code></pre>\n\n<p>This doesn't work.  The last line \"gmap.setZoom()\" doesn't change the zoom level of the map if called directly after fitBounds.</p>\n\n<p>Is there a way to get the zoom level of a bounds without applying it to the map?  Other ideas to solve this?</p>\n",
            "last_activity_date": 1410757675,
            "question_id": 2437683,
            "score": 110,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3",
                "fitbounds"
            ],
            "title": "Google Maps API v3: Can I setZoom after fitBounds?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Is WebSockets over TCP a fast enough protocol to stream a video of, say, 30fps?</p>\n</blockquote>\n\n<p>Yes.. it is, take a look at this <a href=\"http://www.youtube.com/watch?v=WcwnQW_AnC8\">project</a>. Websockets can easily handle HD videostreaming.. However, you should go for Adaptive Streaming. I explain <a href=\"http://stackoverflow.com/questions/4242081/chopping-media-stream-in-html5-websocket-server-for-webbased-chat-video-conferenc\">here</a> how you could implement it.</p>\n\n<p>Currently we're working on a webbased instant messaging application with chat, filesharing and video/webcam support. With some bits and tricks we got streaming media through websockets (used HTML5 Media Capture to get the stream from our webcams).</p>\n\n<p>You need to build a <code>stream API</code> and a <code>Media Stream Transceiver</code> to control the related media processing and transport.</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>It's definitely conceivable but I am not sure we're there yet.  In the meantime, I'd recommend using something like <a href=\"http://silverlight.net\" rel=\"nofollow\">Silverlight</a> with <a href=\"http://www.iis.net/download/SmoothStreaming\" rel=\"nofollow\">IIS Smooth Streaming</a>.  Silverlight is plugin-based, but it works on Windows/OSX/Linux.  Some day the <a href=\"http://www.w3.org/TR/html5/video.html#video\" rel=\"nofollow\">HTML5 <code>&lt;video&gt;</code> element</a> will be the way to go, but that will lack support for a little while.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is a description of the Ericsson labs work that allows them to do teleconferencing (two way streaming video and audio). They are working on pushing the support back into webkit:</p>\n\n<p><a href=\"https://labs.ericsson.com/developer-community/blog/beyond-html5-conversational-voice-and-video-implemented-webkit-gtk\" rel=\"nofollow\">https://labs.ericsson.com/developer-community/blog/beyond-html5-conversational-voice-and-video-implemented-webkit-gtk</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>i'm actually working in something similar.. Video streaming using nodejs+socket.io </p>\n\n<p>The idea is create the illusion of video pushing images to the webpage..</p>\n\n<p>Finally.. do you have some work in progress to do the video streaming???</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is an example of video streaming over websockets that I made using Processing/Java: <a href=\"http://badankles.com/?p=209\">http://badankles.com/?p=209</a></p>\n\n<p>320x240 @ 30fps to iPad/iPhone<br/>\n640x480 @ 30fps to Chrome</p>\n\n<p>EDIT:\nI have another example that takes a media device capture( working best in chrome ) and adds the image to a canvas, this can be sent via websocket as well. i can stream video this way.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I had looked into this sometime ago, I'm using websocket solution provided in ColdFusion - <a href=\"http://www.sagarganatra.com/2012/04/pushing-html5-video-content-over.html\" rel=\"nofollow\">http://www.sagarganatra.com/2012/04/pushing-html5-video-content-over.html</a>. </p>\n\n<p>I'm drawing the video frame on the canvas and then sending it over websocket.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The <a href=\"https://dvcs.w3.org/hg/html-media/raw-file/tip/media-source/media-source.html\" rel=\"nofollow\">Media Source Extensions</a> has been proposed which would allow for Adaptive Bitrate Streaming implementations.  It was proposed by 2 of the 3 editors from <a href=\"https://dvcs.w3.org/hg/html-media/raw-file/tip/encrypted-media/encrypted-media.html\" rel=\"nofollow\">Encrypted Media Extensions</a>, so we'll see how that does.  Adaptive bitrate streaming will certainly help, but I doubt EME will get far.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is the fastest way to stream <em>live</em> video using JavaScript? Is WebSockets over TCP a fast enough protocol to stream a video of, say, 30fps?</p>\n",
            "last_activity_date": 1389266441,
            "question_id": 4241992,
            "score": 37,
            "tags": [
                "javascript",
                "video-streaming",
                "websocket"
            ],
            "title": "Video streaming over websockets using JavaScript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Yes, any string in JavaScript has a <code>toLowerCase()</code> method that will return a new string that is the old string in all lower case.  The old string will remain unchanged.</p>\n\n<p>So, you can do something like:</p>\n\n<pre><code>\"Foo\".toLowerCase();\ndocument.getElementById('myField').value.toLowerCase();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<pre><code>\"Your Name\".toLowerCase();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 1139
                },
                {
                    "body": "<p>Use either <a href=\"http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String/toLowerCase\">toLowerCase</a> or <a href=\"http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String/toLocaleLowerCase\">toLocaleLowerCase</a> methods of the <a href=\"http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String\">String</a> object. The difference is that <code>toLocaleLowerCase</code> will take current locale of the user/host into account. As per \u00a7 15.5.4.17 of the <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMAScript Language Specification (ECMA-262)</a>, <code>toLocaleLowerCase</code>\u2026</p>\n\n<blockquote>\n  <p>\u2026works exactly the same as toLowerCase\n  except that its result is intended to\n  yield the correct result for the host\n  environment\u2019s current locale, rather\n  than a locale-independent result.\n  There will only be a difference in the\n  few cases (such as Turkish) where the\n  rules for that language conflict with\n  the regular Unicode case mappings.</p>\n</blockquote>\n\n<p>Example:</p>\n\n<pre><code>var lower = 'Your Name'.toLowerCase();\n</code></pre>\n\n<p>Also note that the <code>toLowerCase</code> and <code>toLocaleLowerCase</code> functions are implemented to work generically on <em>any</em> value type. Therefore you can invoke these functions even on non-<code>String</code> objects. Doing so will imply automatic conversion to a string value prior to changing the case of each character in the resulting string value. For example, you can <em>apply</em> <code>toLowerCase</code> directly on a date like this:</p>\n\n<pre><code>var lower = String.prototype.toLowerCase.apply(new Date());\n</code></pre>\n\n<p>and which is effectively equivalent to:</p>\n\n<pre><code>var lower = new Date().toString().toLowerCase();\n</code></pre>\n\n<p>The second form is generally preferred for its simplicity and readability. On earlier versions of IE, the first had the benefit that it could work with a <code>null</code> value. The result of applying <code>toLowerCase</code> or <code>toLocaleLowerCase</code> on <code>null</code> would yield <code>null</code> (and not an error condition).</p>\n",
                    "is_accepted": false,
                    "score": 288
                },
                {
                    "body": "<p>toLocaleUpperCase() or lower case functions don't behave like they should do. For example in my system, Safari 4, Chrome 4 Beta, Firefox 3.5.x it converts strings with Turkish characters incorrectly. The browsers respond to navigator.language as \"en-US\", \"tr\", \"en-US\" respectively. But there is no way to get user's Accept-Lang setting in the browser as far as I could find. Only Chrome gives me tr although I have configured every browser as tr-TR locale preferred. I think these settings only affect HTTP header, but we can't access to these settings via JS.\nIn the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String\">Mozilla documentation</a> it says \"The characters within a string are converted to ... while respecting the current locale. For most languages, this will return the same as ...\". I think it's valid for Turkish, it doesn't differ it's configured as en or tr. In Turkish it should convert \"D\u0130N\u00c7\" to \"din\u00e7\" and \"DIN\u00c7\" to \"d\u0131n\u00e7\" or vice-versa.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>example</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar yourstring = 'Your Name'\nvar lowercase = yourstring.toLowerCase();\ndocument.write('original string:&lt;b&gt; ' + yourstring + '&lt;/b&gt;&lt;br&gt;');\ndocument.write('converted sting &lt;b&gt;' + lowercase + '&lt;/b&gt;');\n&lt;/script&gt;\n</code></pre>\n\n<p>try it on</p>\n\n<pre><code>http://htmledit.squarefree.com/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I payed attention that lot's of people are <a href=\"http://www.google.com.ua/search?sourceid=chrome&amp;ie=UTF-8&amp;q=strtolower%20js\" rel=\"nofollow\">looking</a> for <code>strtolower()</code> in JavaScript. They are expecting the same function name as in other languages, that's why this post is here.</p>\n\n<p>I would recommend using <a href=\"http://www.quirksmode.org/js/strings.html#tocase\" rel=\"nofollow\">native</a> Javascript function </p>\n\n<p><code>\"SomE StriNg\".toLowerCase()</code></p>\n\n<p>Here's the function that behaves exactly the same as PHP's one (for those who are porting PHP code into js)</p>\n\n<pre><code>function strToLower (str) {\n    return String(str).toLowerCase();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Note that the function will ONLY work on STRING objects.</p>\n\n<p>For instance, I was consuming a plugin, and was confused why I was getting a \n\"extension.tolowercase is not a function\" JS error.</p>\n\n<pre><code> onChange: function(file, extension)\n    {\n      alert(\"extension.toLowerCase()=&gt;\" + extension.toLowerCase() + \"&lt;=\");\n</code></pre>\n\n<p>Which produced the error \"extension.toLowerCase is not a function\"\nSo I tried this piece of code, which revealed the problem!</p>\n\n<pre><code>alert(\"(typeof extension)=&gt;\" + (typeof extension) + \"&lt;=\");;\n</code></pre>\n\n<p>The output was\"(typeof extension)=>object&lt;=\" - so AhHa, I was NOT getting a string var for my input.  The fix is straight forward though - just force the darn thing into a String!:</p>\n\n<pre><code>var extension = String(extension);\n</code></pre>\n\n<p>After the cast, the extension.toLowerCase() function worked fine.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Method or Function:     toLowerCase(),     toUpperCase()</p>\n\n<p>Description: These methods are used to cover a string or alphabet from lower case to upper case or vice versa. e.g: \"and\" to \"AND\".</p>\n\n<p>Converting to Upper Case:-\nExample Code:-</p>\n\n<pre><code>&lt;script language=javascript&gt;\nvar ss = \" testing case conversion method \";\nvar result = ss.toUpperCase();\ndocument.write(result);\n&lt;/script&gt;\n</code></pre>\n\n<p>Result: TESTING CASE CONVERSION METHOD</p>\n\n<p>Converting to Lower Case:- \nExample Code:</p>\n\n<pre><code>&lt;script language=javascript&gt;\nvar ss = \" TESTING LOWERCASE CONVERT FUNCTION \";\nvar result = ss.toLowerCase();\ndocument.write(result);\n&lt;/script&gt;\n</code></pre>\n\n<p>Result: testing lowercase convert function</p>\n\n<p>Explanation: In the above examples,</p>\n\n<pre><code>toUpperCase() method converts any string to \"UPPER\" case letters.\ntoLowerCase() method converts any string to \"lower\" case letters.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How can I convert a JavaScript string value to be in all lower case letters?</p>\n\n<p>Example: \"Your Name\" to \"your name\"</p>\n",
            "last_activity_date": 1397468191,
            "question_id": 154862,
            "score": 727,
            "tags": [
                "javascript",
                "string"
            ],
            "title": "Convert JavaScript String to be all lower case?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>JSON stands for JavaScript Object Notation.  A JSON object is really a string that has yet to be turned into the object it represents.</p>\n\n<p>To add a property to an existing object in JS you could do the following.</p>\n\n<pre><code>object[\"property\"] = value;\n</code></pre>\n\n<p>or  </p>\n\n<pre><code>object.property = value;\n</code></pre>\n\n<p>If you provide some extra info like exactly what you need to do in context you might get a more tailored answer.</p>\n",
                    "is_accepted": false,
                    "score": 257
                },
                {
                    "body": "<p>A JSON object is simply a javascript object, so with Javascript being a prototype based language, all you have to do is address it using the dot notation.</p>\n\n<pre><code>mything.NewField = 'foo';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>Hi, thanks for this post. I want to add something that can be useful.</p>\n\n<p>For IE, it is good to use <code>object[\"property\"] = value;</code> syntax because some special words in IE can give you an error.\nAn example: <code>object.class = 'value';</code> this fails in IE, because \"class\" is a special word. I spent several hours with this................!</p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<pre><code>var jsonObj = {\n    members: \n           {\n            host: \"hostName\",\n            viewers: \n            {\n                user1: \"value1\",\n                user2: \"value2\",\n                user3: \"value3\"\n            }\n        }\n}\n\nvar i;\n\nfor(i=4; i&lt;=8; i++){\n    var newUser = \"user\" + i;\n    var newValue = \"value\" + i;\n    jsonObj.members.viewers[newUser] = newValue ;\n\n}\n\nconsole.log(jsonObj);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<pre><code>for(var i=0;i&lt;JsonObject.length;i++){\n                    alert(\"inside forloop\");\n                    var dataArray = JsonObject[i];\n                    alert(dataArray[\"data\"]);\n\n            }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<pre><code>extend: function(){\n    if(arguments.length === 0){ return; }\n    var x = arguments.length === 1 ? this : arguments[0];\n    var y;\n\n    for(var i = 1, len = arguments.length; i &lt; len; i++) {\n        y = arguments[i];\n        for(var key in y){\n            if(!(y[key] instanceof Function)){\n                x[key] = y[key];\n            }\n        }           \n    };\n\n    return x;\n}\n</code></pre>\n\n<p>Extends multiple json objects (ignores functions):</p>\n\n<pre><code>extend({obj: 'hej'}, {obj2: 'helo'}, {obj3: {objinside: 'yes'}});\n</code></pre>\n\n<p>Will result in a single json object</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I add new attribute (element) to JSON object using JavaScript?</p>\n",
            "last_activity_date": 1414287010,
            "question_id": 736590,
            "score": 158,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "Add new attribute (element) to JSON object using JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>In the same vein as <a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\" rel=\"nofollow\">The Good Parts</a>, Douglas Crockford's <a href=\"http://www.crockford.com/javascript/\" rel=\"nofollow\">website</a> has many good articles on JavaScript and OOP, such as <a href=\"http://javascript.crockford.com/prototypal.html\" rel=\"nofollow\">Prototypal Inheritance</a>, C<a href=\"http://javascript.crockford.com/inheritance.html\" rel=\"nofollow\">lassical Inheritance in JavaScript</a>, etc.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can see great code examples of Javascript in mainstream libraries like <a href=\"http://jquery.com\" rel=\"nofollow\">jQuery</a>. I've learned a lot just reading it's source code. There's nothing better than reading sources that are working in millions of websites and are concerned about best practices.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>In addition to the previous references to Crockford's work, I recommend you read this perspective on the contrast of Functional vs. Classical inheritance patterns in JS:</p>\n\n<p><a href=\"http://bolinfest.com/javascript/inheritance.php\" rel=\"nofollow\">Inheritance Patterns in JavaScript by Michael Bolin</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The recent <a href=\"http://yuiblog.com/crockford/\" rel=\"nofollow\">Crockford on JavaScript</a> video talks are worth watching - Act III: Function the Ultimate covers OOP in JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have found this blog post to be the most clear explanation of prototypes: <a href=\"https://javascriptweblog.wordpress.com/2010/06/07/understanding-javascript-prototypes/\" rel=\"nofollow\">https://javascriptweblog.wordpress.com/2010/06/07/understanding-javascript-prototypes/</a></p>\n\n<p>I have written a blog series on object orientation in JavaScript. You can access it here: <a href=\"https://rahuldotout.wordpress.com/2011/06/13/javascript-a-different-beast-part-7-inheritance-without-classes/\" rel=\"nofollow\">https://rahuldotout.wordpress.com/2011/06/13/javascript-a-different-beast-part-7-inheritance-without-classes/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>JavaScript is a lightweight and powerful language, but it's often misunderstood and hard to learn (especially about its object oriented programming). Here are what I found:</p>\n\n<p><strong>Books</strong></p>\n\n<ul>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\">JavaScript: The Good Parts</a> by Douglas Crockfond, This is the book recommended by most of Javascripters on Stack overflow. I observed, People have advanced their skills in java script with this book. Visit his website: <a href=\"http://www.crockford.com/\">crockford.com</a> for more information.</li>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/1847194141\">Object-Oriented JavaScript: Create scalable, reusable high-quality JavaScript applications and libraries</a> by Stoyan Stefanov, goes through many OOP topics such as Objects, Prototype, Inheritance and some patterns.</li>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/159059908X\">Pro JavaScript Design Patterns</a>, by Ross Harmess and Dustin Diaz, discuss application of famous design patterns in JavaScript.</li>\n</ul>\n\n<p><strong>Videos</strong></p>\n\n<ul>\n<li><a href=\"http://video.yahoo.com/watch/111585/1027823\">\"Advanced JavaScript\" videos</a> by Douglas Crockford. Many other interesting videos are available at <a href=\"http://developer.yahoo.com/yui/theater/\">Yahoo! Developer Network</a>.</li>\n</ul>\n\n<p><strong>On Stack Overflow</strong></p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/795549/difference-between-classjava-and-closurejavascript\">A Stack Overflow discussion on JavaScript closure</a></li>\n<li><a href=\"http://stackoverflow.com/questions/1801957/what-exactly-does-closure-refer-to-in-javascript\">A Stack Overflow discussion on What exactly does \u201cclosure\u201d refer to in JavaScript?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/1557386/prototypal-vs-functional-oop-in-javascript\">A Stack Overflow discussion on Prototypal vs Functional OOP in JavaScript</a></li>\n</ul>\n\n<p><strong>Others</strong></p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/Introduction_to_Object-Oriented_JavaScript\">Introduction to Object-Oriented JavaScript</a> - Mozilla Dev</li>\n<li><a href=\"http://web.archive.org/web/20080209105120/http://blog.morrisjohns.com/javascript_closures_for_dummies\">JavaScript Closures for Dummies</a></li>\n<li><a href=\"http://www.jibbering.com/faq/faq_notes/closures.html\">JavaScript Closures</a></li>\n<li><a href=\"http://www.javascriptkit.com/javatutors/closures.shtml\">JavaScript Closures 101</a></li>\n<li><a href=\"http://www.crockford.com/javascript/private.html\">Private Members in JavaScript</a> by Douglas Crockfond</li>\n<li><a href=\"http://www.crockford.com/javascript/inheritance.html\">Classical Inheritance in JavaScript</a> by by Douglas Crockfond</li>\n<li><a href=\"http://javascript.crockford.com/prototypal.html\">Prototypal Inheritance in JavaScript</a> by by Douglas Crockfond</li>\n<li><a href=\"http://devlicio.us/blogs/sergio_pereira/archive/2009/02/23/javascript-time-to-grok-closures.aspx\">JavaScript, time to grok closures</a></li>\n</ul>\n\n<p>What are other good materials (blogs, screencasts and books) to learn JavaScript OOP? The topics can be anything, but let's not include browsers, AJAX and libraries for now.</p>\n\n<p>Also how did you learn the functional programming, closure, object, inheritance and design patterns in JavaScript? Personally I would like to see more code examples because some of the books I mentioned above keep the example minimal.</p>\n",
            "last_activity_date": 1327041702,
            "question_id": 1908443,
            "score": 35,
            "tags": [
                "javascript",
                "oop",
                "closures"
            ],
            "title": "What are good JavaScript OOP resources?"
        },
        {
            "answer_count": 27,
            "answers": [
                {
                    "body": "<p>Aarons,   try </p>\n\n<pre><code>if (PhoneGap.available){\n    do PhoneGap stuff;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>GeorgeW's solution is OK, but even on real device, PhoneGap.available is only true after PhoneGap's things has been loaded, e.g. onDeviceReady in document.addEventListener('deviceready', onDeviceReady, false)  has been called.</p>\n\n<p>Before that time, if you want to know, you can do like this:</p>\n\n<pre><code>runningInPcBrowser =\n    navigator.userAgent.indexOf('Chrome')  &gt;= 0 ||\n    navigator.userAgent.indexOf('Firefox') &gt;= 0\n</code></pre>\n\n<p>This solution assumes that most developers develop using Chrome or Firefox.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I know it's been answered a while ago but \"PhoneGap.available\" doesn't exist anymore.\nYou should use:</p>\n\n<pre><code>if (window.PhoneGap) {\n  //do stuff\n}\n</code></pre>\n\n<p>or since 1.7, prefer:</p>\n\n<pre><code>if (window.cordova) {\n  //do stuff\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I use this code: </p>\n\n<pre><code>if (navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry|IEMobile)/)) {\n  document.addEventListener(\"deviceready\", onDeviceReady, false);\n} else {\n  onDeviceReady(); //this is the browser\n}\n</code></pre>\n\n<p>UPDATE</p>\n\n<p>There are many other ways to detect if phonegap is running on a browser or not, here is another great option: </p>\n\n<pre><code>var app = document.URL.indexOf( 'http://' ) === -1 &amp;&amp; document.URL.indexOf( 'https://' ) === -1;\nif ( app ) {\n    // PhoneGap application\n} else {\n    // Web page\n}  \n</code></pre>\n\n<p>as seen here: <a href=\"http://stackoverflow.com/questions/10347539/detect-between-a-mobile-browser-or-a-phonegap-application/12255930#12255930\">Detect between a mobile browser or a PhoneGap application</a></p>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>This works for me (running 1.7.0)</p>\n\n<pre><code>if (window.device) {\n  // Running on PhoneGap\n}\n</code></pre>\n\n<p>Tested on desktop Chrome and Safari.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The essence of the problem is that so long as cordova.device is undefined, your code can't be sure if that's because cordova has established that your device is not supported, or if it's because cordova is still preparing itself and deviceready will fire later (or third option: cordova didn't load properly).</p>\n\n<p>The only solution is to define a waiting period, and to decide that after this period your code must assume the device is not supported. I wish cordova would set a parameter somewhere to say \"We've tried finding a supported device and given up\" but it seems like there is no such parameter.</p>\n\n<p>Once this is established, you may want to do something specific precisely in those situations where there is no supported device. Like hiding links to the device's app market, in my case.</p>\n\n<p>I've pieced together this function which should cover pretty much every situation. It lets you define a deviceready handler, a device-never-ready handler, and a waiting time.</p>\n\n<pre><code>//Deals with the possibility that the code will run on a non-phoneGap supported\n//device such as desktop browsers. Gives several options including waiting a while\n//for cordova to load after all.\n//In:\n//onceReady (function) - performed as soon as deviceready fires\n//patience \n//  (int) - time to wait before establishing that cordova will never load\n//  (boolean false) - don't wait: assume that deviceready will never fire\n//neverReady \n//  (function) - performed once it's established deviceready will never fire\n//  (boolean true) - if deviceready will never fire, run onceReady anyhow\n//  (boolean false or undefined) - if deviceready will never fire, do nothing\nfunction deviceReadyOrNot(onceReady,patience,neverReady){\n\n    if (!window.cordova){\n            console.log('Cordova was not loaded when it should have been')\n            if (typeof neverReady == \"function\"){neverReady();}\n        //If phoneGap script loaded...\n        } else {\n            //And device is ready by now...\n            if  (cordova.device){\n                callback();\n            //...or it's loaded but device is not ready\n            } else {\n                //...we might run the callback after\n                if (typeof patience == \"number\"){\n                    //Run the callback as soon as deviceready fires\n                    document.addEventListener('deviceready.patience',function(){\n                        if (typeof onceReady == \"function\"){onceReady();}\n                    })\n                    //Set a timeout to disable the listener\n                    window.setTimeout(function(){\n                        //If patience has run out, unbind the handler\n                        $(document).unbind('deviceready.patience');\n                        //If desired, manually run the callback right now\n                        if (typeof neverReady == 'function'){neverReady();}\n                    },patience);\n                //...or we might just do nothing\n                } else {\n                    //Don't bind a deviceready handler: assume it will never happen\n                    if (typeof neverReady == 'function'){neverReady();} \n                    else if (neverReady === true){onceReady();} \n                    else {\n                       //Do nothing\n                    }\n                }\n            }\n    }\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've actually found a combination of two of the techniques listed here has worked the best, firstly check that cordova / phonegap can be accessed also check if device is available. Like so:</p>\n\n<pre><code>function _initialize() {\n    //do stuff\n}\n\nif (window.cordova &amp;&amp; window.device) {\n    document.addEventListener('deviceready', function () {\n      _initialize();\n    }, false);\n} else {\n   _initialize();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try this approach:</p>\n\n<pre><code>/**\n * Returns true if the application is running on an actual mobile device.\n */\nfunction isOnDevice(){\n    return navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry)/);\n}\n\nfunction isDeviceiOS(){\n    return navigator.userAgent.match(/(iPhone)/);\n}\n\n/**\n * Method for invoking functions once the DOM and the device are ready. This is\n * a replacement function for the JQuery provided method i.e.\n * $(document).ready(...).\n */\nfunction invokeOnReady(callback){\n    $(document).ready(function(){\n        if (isOnDevice()) {\n            document.addEventListener(\"deviceready\", callback, false);\n        } else {\n            invoke(callback);\n        }\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think this is simplest:\n<code>var isPhoneGap = (document.location.protocol == \"file:\")</code></p>\n\n<p><strong>EDIT</strong>\nFor some people that didn't work. Then you might try (haven't tested)</p>\n\n<pre><code>var isPhoneGap = ! /^http/.test(document.location.protocol);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I use a combination of what <a href=\"http://stackoverflow.com/a/8433071/142225\">GeorgeW</a> and <a href=\"http://stackoverflow.com/a/10566220/142225\">mkprogramming</a> suggested:</p>\n\n<pre><code>   if (!navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry)/)) {\n      onDeviceReady();\n   } else if (Phonegap.available){\n      onDeviceReady();\n   } else {\n      console.log('There was an error loading Phonegap.')\n   }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have the same issue.  </p>\n\n<p>I am leaning towards adding #cordova=true to the URL loaded by the cordova client and testing for location.hash.indexOf(\"cordova=true\") > -1 in my web page.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The following works for me with the most recent PhoneGap / Cordova (2.1.0).  </p>\n\n<p>How it works:</p>\n\n<ul>\n<li>Very simple in concept</li>\n<li>I inverted the logic of some of the above timeout solutions.</li>\n<li>Register for the device_ready event (as <a href=\"http://docs.phonegap.com/en/2.1.0/cordova_events_events.md.html#deviceready\" rel=\"nofollow\">recommended by the PhoneGap docs</a> )\n<ul>\n<li>If the event has still NOT fired after a timeout, fallback to assuming a browser.</li>\n<li>In contrast, the other solutions above rely on testing some PhoneGap feature or other, and watching their test break.</li>\n</ul></li>\n</ul>\n\n<p>Advantages:</p>\n\n<ul>\n<li>Uses the PhoneGap-recommended device_ready event.</li>\n<li>The mobile app has no delay.  As soon as the device_ready event fires, we proceed.</li>\n<li>No user-agent sniffing (I like testing my app as a mobile website so browser sniffing wasn't an option for me).  </li>\n<li>No reliance on undocumented (and therefore brittle) PhoneGap features/properties.</li>\n<li>Keep your cordova.js in your codebase even when using a desktop or mobile browser.  Thus, this answers the OP's question.</li>\n<li>Wytze stated above: 'I wish cordova would set a parameter somewhere to say \"We've tried finding a supported device and given up\" but it seems like there is no such parameter.'  So I provide one here.</li>\n</ul>\n\n<p>Disadvantages:</p>\n\n<ul>\n<li>Timeouts are icky.  But our mobile-app logic doesn't rely on a delay; rather, it is used as a fallback when we're in web-browser mode.</li>\n</ul>\n\n<p>==</p>\n\n<p>Create a brand new blank PhoneGap project. In the provided sample index.js , replace the \"app\" variable at the bottom with this: </p>\n\n<pre><code>var app = {\n    // denotes whether we are within a mobile device (otherwise we're in a browser)\n    iAmPhoneGap: false,\n    // how long should we wait for PhoneGap to say the device is ready.\n    howPatientAreWe: 10000,\n    // id of the 'too_impatient' timeout\n    timeoutID: null,\n    // id of the 'impatience_remaining' interval reporting.\n    impatienceProgressIntervalID: null,\n\n    // Application Constructor\n    initialize: function() {\n        this.bindEvents();\n    },\n    // Bind Event Listeners\n    //\n    // Bind any events that are required on startup. Common events are:\n    // `load`, `deviceready`, `offline`, and `online`.\n    bindEvents: function() {\n        document.addEventListener('deviceready', this.onDeviceReady, false);\n        // after 10 seconds, if we still think we're NOT phonegap, give up.\n        app.timeoutID = window.setTimeout(function(appReference) {\n            if (!app.iAmPhoneGap) // jeepers, this has taken too long.\n                // manually trigger (fudge) the receivedEvent() method.   \n                appReference.receivedEvent('too_impatient');\n        }, howPatientAreWe, this);\n        // keep us updated on the console about how much longer to wait.\n        app.impatienceProgressIntervalID = window.setInterval(function areWeThereYet() {\n                if (typeof areWeThereYet.howLongLeft == \"undefined\") { \n                    areWeThereYet.howLongLeft = app.howPatientAreWe; // create a static variable\n                } \n                areWeThereYet.howLongLeft -= 1000; // not so much longer to wait.\n\n                console.log(\"areWeThereYet: Will give PhoneGap another \" + areWeThereYet.howLongLeft + \"ms\");\n            }, 1000);\n    },\n    // deviceready Event Handler\n    //\n    // The scope of `this` is the event. In order to call the `receivedEvent`\n    // function, we must explicity call `app.receivedEvent(...);`\n    onDeviceReady: function() {\n        app.iAmPhoneGap = true; // We have a device.\n        app.receivedEvent('deviceready');\n\n        // clear the 'too_impatient' timeout .\n        window.clearTimeout(app.timeoutID); \n    },\n    // Update DOM on a Received Event\n    receivedEvent: function(id) {\n        // clear the \"areWeThereYet\" reporting.\n        window.clearInterval(app.impatienceProgressIntervalID);\n        console.log('Received Event: ' + id);\n        myCustomJS(app.iAmPhoneGap); // run my application.\n    }\n};\n\napp.initialize();\n\nfunction myCustomJS(trueIfIAmPhoneGap) {\n    // put your custom javascript here.\n    alert(\"I am \"+ (trueIfIAmPhoneGap?\"PhoneGap\":\"a Browser\"));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Like the original poster, I'm using the phonegap build service.  After two days and nearly 50 test builds, I've come up with an elegant solution that works great for me.  </p>\n\n<p>I couldn't use UA sniffing because I wanted to test and run in mobile browsers.  I had originally settled on cobberboy's quite functional technique.  This didn't work for me because the \"howPatientAreWe: 10000\" delay/timeout was too much of a nuisance for in-browser development. And setting it any lower would occasionally fail the test in app/device mode. There had to be another way...</p>\n\n<p>The phonegap build service requires the <code>phonegap.js</code> file be omitted from your code repository before submitting your app's files to the service.  Therefore I'm able to test for its existence to determine if running in a browser vs. app.</p>\n\n<p>One other caveat, I'm also using jQueryMobile, so both jQM and phonegap had to initialize before I could begin any custom scripting.  The following code is placed at the beginning of my custom index.js file for the app (after jQuery, before jQM).  Also the phonegap build docs say to place <code>&lt;script src=\"phonegap.js\"&gt;&lt;/script&gt;</code> somewhere in the HTML.  I leave it \nout completely and load it using $.getScript() to facility testing its existence.</p>\n\n<pre><code>isPhoneGap = false;\nisPhoneGapReady = false;\nisjQMReady = false;\n\n$.getScript(\"phonegap.js\")\n.done(function () {\n    isPhoneGap = true;\n    document.addEventListener(\"deviceready\", function () {\n        console.log(\"phonegap ready - device/app mode\");\n        isPhoneGapReady = true;\n        Application.checkReadyState();\n    }, false);\n})\n.fail(function () {\n    console.log(\"phonegap load failed - browser only\");\n    isPhoneGapReady = true;\n    Application.checkReadyState();\n});\n\n$(document).bind(\"mobileinit\", function () {\n    Application.mobileInit();\n    $(document).one(\"pageinit\", \"#Your_First_jQM_Page\", function () {\n        isjQMReady = true;\n        Application.checkReadyState();\n    });\n});\n\nApplication = {\n    checkReadyState: function () {\n        if (isjQMReady &amp;&amp; isPhoneGapReady) {\n            Application.ready();\n        }\n    },\n    mobileInit: function () {\n        // jQM initialization settings go here\n        // i.e. $.mobile.defaultPageTransition = 'slide';\n    },\n    ready: function () {\n        // Both phonegap (if available) and jQM are fired up and ready\n        // let the custom scripting begin!\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I guess in someways they aren't that different are they? Ha Ha... not funny. Who didn't think this wouldn't be a problem?\nHere's the simplest solution for your considerations.\nPush different files to your server then you do to PhoneGap.\nI'd also temporarily go with the http: check suggested above.</p>\n\n<pre><code>var isMobileBrowserAndNotPhoneGap = (document.location.protocol == \"http:\");\n</code></pre>\n\n<p>My interest is in pushing the browsers navbar up, so really I can just delete the isolated script's tag and press rebuild [in DW] (they'll be some cleanup for deployment anyway so this can be one of those tasks.)\nAnyway I feel it's a good option (considering not much else is available) to efficiently just manually comment out things with isMobileBrowserAndNotPhoneGap when pushing to PG).\nAgain for me in my situation I will simple delete the  tag for the (isolated code) file that pushes up the navbar when it's a mobile browser (it will be that much faster and smaller).\n[So ya if you can isolated the code for that optimized but manual solution.]</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I wrote a <a href=\"http://slavik.meltser.info/phonegap-detect-if-the-application-runs-on-mobile-or-browser-using-javascript-before-the-deviceready-and-document-ready-events-are-triggered/\">post</a> about it a few days ago. This is the best solution you can find (until PhoneGap will release something, maybe or maybe not), it's short, simple and perfect (I've checked it in every possible way and platform).</p>\n\n<p>This function will do the job for 98% of the cases.</p>\n\n<pre><code>/**\n * Determine whether the file loaded from PhoneGap or not\n */\nfunction isPhoneGap() {\n    return (cordova || PhoneGap || phonegap) \n    &amp;&amp; /^file:\\/{3}[^\\/]/i.test(window.location.href) \n    &amp;&amp; /ios|iphone|ipod|ipad|android/i.test(navigator.userAgent);\n}\n\nif ( isPhoneGap() ) {\n    alert(\"Running on PhoneGap!\");\n} else {\n    alert(\"Not running on PhoneGap!\");\n}\n</code></pre>\n\n<p>To complete the other 2% of the cases, follow these steps (it involves a slight change on native code):</p>\n\n<p>Create a file called <strong>__phonegap_index.html</strong>, with the source:</p>\n\n<pre><code>&lt;!-- __phonegap_index.html --&gt;\n&lt;script type=\"text/javascript\"&gt;\n    function isPhoneGap() {\n        //the function's content is as described above\n    }\n\n    //ensure the 98% that this file is called from PhoneGap.\n    //in case somebody accessed this file directly from the browser.\n    if ( isPhoneGap() )\n        localStorage.setItem(\"isPhoneGap\",\"1\");\n\n    //and redirect to the main site file.\n    window.location = \"index.html\";\n&lt;/script&gt;\n</code></pre>\n\n<p>Now, on native simply change the start page from <strong>index.html</strong> to <strong>__phonegap_index.html</strong> on all your PhoneGap platforms. Let's say my project name is <strong>example</strong>, the files you need to change are (as for PhoneGap version 2.2.0):</p>\n\n<ul>\n<li><strong>iOS</strong> - <code>CordovaLibApp/AppDelegate.m</code></li>\n<li><strong>Android</strong> - <code>src/org/apache/cordova/example/cordovaExample.java</code></li>\n<li><strong>Windows 8</strong> - <code>example/package.appxmanifest</code></li>\n<li><strong>BlackBerry</strong> - <code>www/config.xml</code></li>\n<li><strong>WebOS</strong> - <code>framework/appinfo.json</code></li>\n<li><strong>Bada</strong> - <code>src/WebForm.cpp</code> (line 56)</li>\n<li><strong>Window Phone 7</strong> - No idea where (somebody still developing on that platform?!)</li>\n</ul>\n\n<p>Finally, you can use it anywhere on your site, if it's running on PhoneGap or not:</p>\n\n<pre><code>if ( localStorage.getItem(\"isPhoneGap\") ) {\n    alert(\"Running on PhoneGap!\");\n} else {\n    alert(\"Not running on PhoneGap!\");\n}\n</code></pre>\n\n<p>Hope it helps. :-)</p>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>This seems to be viable and I have used it in production:</p>\n\n<pre><code>if (document.location.protocol == \"file:\") {\n    // file protocol indicates phonegap\n    document.addEventListener(\"deviceready\", function() { $(initInternal);} , false);\n}\nelse {\n    // no phonegap, start initialisation immediately\n    $(initInternal);\n}\n</code></pre>\n\n<p>Source: <a href=\"http://tqcblog.com/2012/05/09/detecting-phonegap-cordova-on-startup/\" rel=\"nofollow\">http://tqcblog.com/2012/05/09/detecting-phonegap-cordova-on-startup/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I've stumbled on this problem several months ago when beginning our app, because we wanted the app to be \"<code>browser-compatible</code>\" also (with the understanding that some functionality would be blocked in that scenario: audio recording, compass, etc.). </p>\n\n<p>The only <code>100%</code> (and I insist on the 100-hundred-percent condition) solution to PRE-determine the app execution context was this: </p>\n\n<ul>\n<li><p>initialize a JS \"flag\" variable to true, and change it to false when in an all-web context; </p></li>\n<li><p>therefore you can use a call like \"<code>willIBeInPhoneGapSometimesInTheNearFuture()</code>\" (that's PRE-PG, of course you still need a POST-PG method of checking if you can call PG APIs, but that one is trivial). </p></li>\n<li><p>Then you say: \"<code>but how do you determine the execution context</code>?\"; the answer is: \"you don`t\" (because I don't think you can reliably, unless those brilliant folks at PG would do it in their API code); </p></li>\n<li><p>you write a build script that does it for you: one codebase with two variants. </p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To keep one codebase, what's of interest is the \"platform\" the code is running on. For me this \"platform\" can be three different things:</p>\n\n<ul>\n<li>0: computer-browser</li>\n<li>1: mobile-browser</li>\n<li>2: phonegap/cordova</li>\n</ul>\n\n<p>The way to check for the platform:</p>\n\n<pre><code>var platform;\ntry {\n cordova.exec(function (param) {\n   platform = 2;\n  }, function (err) {}, \"Echo\", \"echo\", [\"test\"]);\n} catch (e) {\n  platform = 'ontouchstart' in document.documentElement ? 1 : 0;\n}\n</code></pre>\n\n<p>Note:</p>\n\n<ul>\n<li><p>This has to be <strong>run only after cordova.js has been loaded</strong> (body onload(...), $(document).ready(...))</p></li>\n<li><p><strong>'ontouchstart' in document.documentElement</strong> will be present in laptops and desktop monitors that have a touch-enabled screen so it would report a mobile-browser even though it is a desktop. There are different ways to make a more precise check but I use it because it still takes care of 99% of the cases I need. You can always substitute that line for something more robust.</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Slightly modified, but works for me perfectly without any issues.</p>\n\n<p>Intent is to load Cordova only when on embedded device, not on a desktop, so I completely avoid cordova on a desktop browser. Testing and development of the UI and MVVM and so is then very comfortable.</p>\n\n<p>Put this code eg. in file <strong>cordovaLoader.js</strong></p>\n\n<pre><code>function isEmbedded() {\n    return  \n    // maybe you can test for better conditions\n    //&amp;&amp; /^file:\\/{3}[^\\/]/i.test(window.location.href) &amp;&amp; \n     /ios|iphone|ipod|ipad|android/i.test(navigator.userAgent);\n}\n\nif ( isEmbedded() )\n{\n   var head= document.getElementsByTagName('head')[0];\n   var script= document.createElement('script');\n   script.type= 'text/javascript';\n   script.src= 'cordova-2.7.0.js';\n   head.appendChild(script);\n}\n</code></pre>\n\n<p>Then instead of including cordova javascript itself include cordovaLoader.js</p>\n\n<pre><code>&lt;head&gt;\n  &lt;script src=\"js/cordovaLoader.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"js/jquery.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"js/iscroll.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"js/knockout-2.3.0.js\"&gt;&lt;/script&gt;\n&lt;/head&gt; \n</code></pre>\n\n<p>Ease your work! :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The way I'm doing it with is using a global variable that is overwritten by a browser-only version of cordova.js. In your main html file (usually <code>index.html</code>) I have the following scripts that are order-dependent:</p>\n\n<pre><code>    &lt;script&gt;\n        var __cordovaRunningOnBrowser__ = false\n    &lt;/script&gt;\n    &lt;script src=\"cordova.js\"&gt;&lt;/script&gt; &lt;!-- must be included after __cordovaRunningOnBrowser__ is initialized --&gt;\n    &lt;script src=\"index.js\"&gt;&lt;/script&gt; &lt;!-- must be included after cordova.js so that __cordovaRunningOnBrowser__ is set correctly --&gt;\n</code></pre>\n\n<p>And inside <code>cordova.js</code> I have simply:</p>\n\n<pre><code>__cordovaRunningOnBrowser__ = true\n</code></pre>\n\n<p>When building for a mobile device, the cordova.js will not be used (and instead the platform-specific cordova.js file will be used), so this method has the benefit of being 100% correct regardless of protocols, userAgents, or library variables (which may change). There may be other things I should include in cordova.js, but I don't know what they are yet. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>if ( \"device\" in window ) {\n    // phonegap\n} else {\n    // browser\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another way, based on SlavikMe's solution:</p>\n\n<p>Just use a query parameter passed to <code>index.html</code> from your PhoneGap source. Ie, in Android, instead of</p>\n\n<pre><code>super.loadUrl(\"file:///android_asset/www/index.html\");\n</code></pre>\n\n<p>use </p>\n\n<pre><code>super.loadUrl(\"file:///android_asset/www/index.html?phonegap=1\");\n</code></pre>\n\n<p>SlavikMe has a great list on where to do this on other platforms.</p>\n\n<p>Then your <code>index.html</code> can simply do this:</p>\n\n<pre><code>if (window.location.href.match(/phonegap=1/)) {\n  alert(\"phonegap\");\n}\nelse {\n  alert(\"not phonegap\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Not <em>really</em> an answer to the question, butwhen I test in a desktop browser, I just set a localstorage value to make the browser load the app dispite deviceready not fireing.</p>\n\n<pre><code>function main() {\n\n    // Initiating the app here.\n};\n\n/* Listen for ready events from pheongap */\ndocument.addEventListener(\"deviceready\", main, false);\n\n// When testing outside ipad app, use jquerys ready event instead. \n$(function() {\n\n    if (localStorage[\"notPhonegap\"]) {\n\n        main();\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>None of which work, unless you remove the PhoneGap Javascript file from the desktop version of the app, which defeats my goal of having one codebase.</p>\n</blockquote>\n\n<p>Another option would be to use <strong>merges</strong> folder, see screenshot below.</p>\n\n<p>You can add platform-specific files / override default ones.</p>\n\n<p><em>(it should do the trick in some scenarios)</em></p>\n\n<p><img src=\"http://i.stack.imgur.com/w0gkt.png\" alt=\"enter image description here\"></p>\n\n<hr>\n\n<p>In other words: Rather than detecting the browser, you just don't include certain files for desktop build / attach certain files for iOS only.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Interestingly, many answers, but they don't include these three options:</p>\n\n<p>1 \u2013 The cordova.js will set the cordova object in the global scope. If it is there then you are most likely running in a Cordova scope.</p>\n\n<pre><code>var isCordovaApp = !!window.cordova;\n</code></pre>\n\n<p>2 \u2013 Cordova will run your application as you would open a HTML document from your Desktop. Instead of the HTTP protocol it will use FILE. Detecting this will give you a chance to assume that your app was loaded locally.</p>\n\n<pre><code>var isCordovaApp = document.URL.indexOf('http://') === -1\n  &amp;&amp; document.URL.indexOf('https://') === -1;\n</code></pre>\n\n<p>3 \u2013 Use the load event of the cordova script to detect the context. The script include can be easily removed in the build process or the script loading will simply fail in a browser. So that this global variable will not be set.</p>\n\n<pre><code>&lt;script src=\"../cordova.js\" onload=\"javascript:window.isCordovaApp = true;\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Credit goes to <a href=\"http://damien.antipa.at/blog/2014/02/08/3-ways-to-detect-that-your-application-is-running-in-cordova-slash-phonegap/\" rel=\"nofollow\">Damien Antipa from Adobe</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just for info the way in \n<strong>PhoneGap 3.x Mobile Application Development Hotshot</strong></p>\n\n<pre><code>var userLocale = \"en-US\";\nfunction startApp()\n{\n// do translations, format numbers, etc.\n}\nfunction getLocaleAndStartApp()\n{\n    navigator.globalization.getLocaleName (\n        function (locale) {\n            userLocale = locale.value;\n            startApp();\n        },\n        function () {\n            // error; start app anyway\n            startApp();\n        });\n}\nfunction executeWhenReady ( callback ) {\n    var executed = false;\n    document.addEventListener ( \"deviceready\", function () {\n        if (!executed) {\n            executed = true;\n            if (typeof callback === \"function\") {\n                callback();\n            }\n        }\n    }, false);\n    setTimeout ( function () {\n        if (!executed) {\n            executed = true;\n            if (typeof callback === \"function\") {\n                callback();\n            }\n        }\n    }, 1000 );\n};\nexecuteWhenReady ( function() {\n    getLocaleAndStartApp();\n} );\n</code></pre>\n\n<p>and in YASMF framework</p>\n\n<p><a href=\"https://github.com/photokandyStudios/YASMF-Next/blob/master/lib/yasmf/util/core.js#L152\" rel=\"nofollow\">https://github.com/photokandyStudios/YASMF-Next/blob/master/lib/yasmf/util/core.js#L152</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I use this method:</p>\n\n<pre><code>debug = (window.cordova === undefined);\n</code></pre>\n\n<p><code>debug</code> will be <code>true</code> on the browser environment, <code>false</code> on the device.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm developing a web application that uses PhoneGap:Build for a mobile version and want to have a single codebase for the 'desktop' and mobile versions. I want to be able to detect if PhoneGap calls will work (ie, is the user on a mobile device that will support PhoneGap).</p>\n\n<p>I've searched and cannot believe there is no simple way of doing this. Many people have offered suggestions;</p>\n\n<ul>\n<li><a href=\"http://www.sencha.com/forum/showthread.php?144127-Checking-if-running-in-PhoneGap-or-Mobile-Web-Browser\">http://www.sencha.com/forum/showthread.php?144127-Checking-if-running-in-PhoneGap-or-Mobile-Web-Browser</a></li>\n<li><a href=\"http://groups.google.com/group/phonegap/browse_thread/thread/322e80bd41bb1a54/a421300eb2a2029f?lnk=gst&amp;q=detect+desktop#a421300eb2a2029f\">http://groups.google.com/group/phonegap/browse_thread/thread/322e80bd41bb1a54/a421300eb2a2029f?lnk=gst&amp;q=detect+desktop#a421300eb2a2029f</a></li>\n<li><a href=\"http://groups.google.com/group/phonegap/browse_thread/thread/8a95dfeb0f313792/3ff10d8f35211739?lnk=gst&amp;q=detect+desktop+browser#3ff10d8f35211739\">http://groups.google.com/group/phonegap/browse_thread/thread/8a95dfeb0f313792/3ff10d8f35211739?lnk=gst&amp;q=detect+desktop+browser#3ff10d8f35211739</a></li>\n</ul>\n\n<p>None of which work, unless you remove the PhoneGap Javascript file from the desktop version of the app, which defeats my goal of having one codebase.</p>\n\n<p>So far the only solution I have come up with is browser / user agent sniffing, but this is not robust to say the least. Any better solutions welcome!</p>\n\n<p>EDIT: A marginally better solution is to try calling a PhoneGap function after some small timeout - if it doesn't work, then assume the user is on a desktop web browser.</p>\n",
            "last_activity_date": 1420221483,
            "question_id": 8068052,
            "score": 70,
            "tags": [
                "javascript",
                "cordova"
            ],
            "title": "PhoneGap: Detect if running on desktop browser"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>There are several different ways to check if an argument was passed to a function. In addition to the two you mentioned in your (original) question - checking <code>arguments.length</code> or using the <code>||</code> operator to provide default values - one can also explicitly check the arguments for <code>undefined</code> via <code>argument2 === undefined</code> or <code>typeof argument2 === 'undefined'</code> if one is paranoid (see comments).</p>\n\n<p>Using the <code>||</code> operator has become standard practice - all the cool kids do it - but be careful: The default value will be triggered if the argument evaluates to <code>false</code>, which means it might actually be <code>undefined</code>, <code>null</code>, <code>false</code>, <code>0</code>, <code>''</code> (or anything else for which <code>Boolean(...)</code> returns <code>false</code>).</p>\n\n<p>So the question is when to use which check, as they all yield slightly different results.</p>\n\n<p>Checking <code>arguments.length</code> exhibits the 'most correct' behaviour, but it might not be feasible if there's more than one optional argument.</p>\n\n<p>The test for <code>undefined</code> is next 'best' - it only 'fails' if the function is explicitly called with an <code>undefined</code> value, which in all likelyhood should be treated the same way as omitting the argument.</p>\n\n<p>The use of the <code>||</code> operator might trigger usage of the default value even if a valid argument is provided. On the other hand, its behaviour might actually be desired.</p>\n\n<p>To summarize: <em>Only use it if you know what you're doing!</em></p>\n\n<p>In my opinion, using <code>||</code> is also the way to go if there's more than one optional argument and one doesn't want to pass an object literal as a workaround for named parameters.</p>\n\n<p>Another nice way to provide default values using <code>arguments.length</code> is possible by falling through the labels of a switch statement:</p>\n\n<pre><code>function test(requiredArg, optionalArg1, optionalArg2, optionalArg3) {\n    switch(arguments.length) {\n        case 1: optionalArg1 = 'default1';\n        case 2: optionalArg2 = 'default2';\n        case 3: optionalArg3 = 'default3';\n        case 4: break;\n        default: throw new Error('illegal argument count')\n    }\n    // do stuff\n}\n</code></pre>\n\n<p>This has the downside that the programmer's intention is not (visually) obvious and uses 'magic numbers'; it is therefore possibly error prone.</p>\n",
                    "is_accepted": true,
                    "score": 133
                },
                {
                    "body": "<p>I'm sorry, I still yet cant comment, so to answer Tom's answer...\nIn javascript (undefined != null) == false\nIn fact that function wont work with \"null\", you should use \"undefined\"</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is one of the few cases where I find the test:  </p>\n\n<pre><code>if(! argument2) {  \n\n}\n</code></pre>\n\n<p>works quite nicely and carries the correct implication syntactically.</p>\n\n<p>(With the simultaneous restriction that I wouldn't allow a legitimate null value for <code>argument2</code> which has some other meaning; but that would be <strong>really</strong> confusing.)</p>\n\n<p>EDIT:</p>\n\n<p>This is a really good example of a stylistic difference between loosely-typed and strongly-typed languages; and a stylistic option that javascript affords in spades.  </p>\n\n<p>My personal preference (with no criticism meant for other preferences) is minimalism. The less the code has to say, as long as I'm consistent and concise, the less someone else has to comprehend to correctly infer my meaning.  </p>\n\n<p>One implication of that preference is that I don't want to - don't find it useful to - pile up a bunch of type-dependency tests. Instead, I try to make the code mean what it looks like it means; and test only for what I really will need to test for.  </p>\n\n<p>One of the aggravations I find in some other peoples' code is needing to figure out whether or not they expect, in the larger context, to actually run into the cases they are testing for. Or if they are trying to test for everything possible, on the chance that they don't anticipate the context completely enough. Which means I end up needing to track them down exhaustively in both directions before I can confidently refactor or modify anything. I figure that there's a good chance they might have put those various tests in place because they foresaw circumstances where they would be needed (and which usually aren't apparent to me).</p>\n\n<p>(I consider that a serious downside in the way these folks use dynamic languages. Too often people don't want to give up all the static tests, and end up faking it.)</p>\n\n<p>I've seen this most glaringly in comparing comprehensive ActionScript 3 code with elegant javascript code. The AS3 can be 3 or 4 times the bulk of the js, and the reliability I suspect is at least no better, just because of the number (3-4X) of coding decisions that were made.</p>\n\n<p>As you say, Shog9, YMMV. :D</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>There are significant differences. Let's set up some test cases:</p>\n\n<pre><code>var unused; // value will be undefined\nTest(\"test1\", \"some value\");\nTest(\"test2\");\nTest(\"test3\", unused);\nTest(\"test4\", null);\nTest(\"test5\", 0);\nTest(\"test6\", \"\");\n</code></pre>\n\n<p>With the first method you describe, only the second test will use the default value. The second method will default all but the first (as JS will convert <code>undefined</code>, <code>null</code>, <code>0</code>, and <code>\"\"</code> into the boolean <code>false</code>. And if you were to use Tom's method, only the fourth test will use the default!</p>\n\n<p>Which method you choose really depends on your intended behavior. If values other than <code>undefined</code> are allowable for <code>argument2</code>, then you'll probably want some variation on the first; if a non-zero, non-null, non-empty value is desired, then the second method is ideal - indeed, it is often used to quickly eliminate such a wide range of values from consideration.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>url = url === undefined ? location.href : url;</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It can be convenient to approach argument detection by evoking your function with an Object of optional properties:</p>\n\n<pre><code>function foo(options) {\n    var config = { // defaults\n        list: 'string value',\n        of: [a, b, c],\n        optional: {x: y},\n        objects: function(param){\n           // do stuff here\n        }\n    }; \n    if(options !== undefined){\n        for (i in config) {\n            if (config.hasOwnProperty(i)){\n                if (options[i] !== undefined) { config[i] = options[i]; }\n            }\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are using jQuery, one option that is nice (especially for complicated situations) is to use <a href=\"http://api.jquery.com/jQuery.extend/\" rel=\"nofollow\">jQuery's extend method</a>.</p>\n\n<pre><code>function foo(options) {\n\n    default_options = {\n        timeout : 1000,\n        callback : function(){},\n        some_number : 50,\n        some_text : \"hello world\"\n    };\n\n    options = $.extend({}, default_options, options);\n}\n</code></pre>\n\n<p>If you call the function then like this:</p>\n\n<pre><code>foo({timeout : 500});\n</code></pre>\n\n<p>The options variable would then be:</p>\n\n<pre><code>{\n    timeout : 500,\n    callback : function(){},\n    some_number : 50,\n    some_text : \"hello world\"\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have now seen 2 methods for determining if an argument has been passed to a JavaScript function. I'm wondering if one method is better than the other or if one is just bad to use?</p>\n\n<pre><code> function Test(argument1, argument2) {\n      if (Test.arguments.length == 1) argument2 = 'blah';\n\n      alert(argument2);\n }\n\n Test('test');\n</code></pre>\n\n<p>Or</p>\n\n<pre><code> function Test(argument1, argument2) {\n      argument2 = argument2 || 'blah';\n\n      alert(argument2);\n }\n\n Test('test');\n</code></pre>\n\n<p>As far as I can tell, they both result in the same thing, but I've only used the first one before in production.</p>\n\n<p>Another Option as mentioned by <a href=\"http://stackoverflow.com/questions/411352/how-best-to-determine-if-an-argument-is-not-sent-to-the-javascript-function#411368\">Tom</a>:</p>\n\n<pre><code>function Test(argument1, argument2) {\n    if(argument2 === null) {\n        argument2 = 'blah';\n    }\n\n    alert(argument2);\n}\n</code></pre>\n\n<p>As per Juan's comment, it would be better to change Tom's suggestion to:</p>\n\n<pre><code>function Test(argument1, argument2) {\n    if(argument2 === undefined) {\n        argument2 = 'blah';\n    }\n\n    alert(argument2);\n}\n</code></pre>\n",
            "last_activity_date": 1381951711,
            "question_id": 411352,
            "score": 108,
            "tags": [
                "javascript",
                "arguments"
            ],
            "title": "How best to determine if an argument is not sent to the JavaScript function"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>There is a fairly complete recording demo available at:  <a href=\"http://webaudiodemos.appspot.com/AudioRecorder/index.html\">http://webaudiodemos.appspot.com/AudioRecorder/index.html</a></p>\n\n<p>It allows you to record audio in the browser, then gives you the option to export and download what you've recorded.</p>\n\n<p>You can view the source of that page to find links to the javascript, but to summarize, there's a <code>Recorder</code> object that contains an <code>exportWAV</code> method, and a <code>forceDownload</code> method.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>This is a simple JavaScript sound recorder and editor. You can try it.\n<a href=\"http://danieldemmel.me/JSSoundRecorder/\">http://danieldemmel.me/JSSoundRecorder/</a></p>\n\n<p>Can <strong>download</strong> from here</p>\n\n<p><a href=\"https://github.com/daaain/JSSoundRecorder\">https://github.com/daaain/JSSoundRecorder</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The code shown below is copyrighted to Matt Diamond and available for use under MIT license. The original files are here: </p>\n\n<ul>\n<li><a href=\"http://webaudiodemos.appspot.com/AudioRecorder/index.html\" rel=\"nofollow\">http://webaudiodemos.appspot.com/AudioRecorder/index.html</a></li>\n<li><a href=\"http://webaudiodemos.appspot.com/AudioRecorder/js/recorderjs/recorderWorker.js\" rel=\"nofollow\">http://webaudiodemos.appspot.com/AudioRecorder/js/recorderjs/recorderWorker.js</a></li>\n</ul>\n\n<p>Save this files and use<div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>(function(window){\r\n\r\n      var WORKER_PATH = 'recorderWorker.js';\r\n      var Recorder = function(source, cfg){\r\n        var config = cfg || {};\r\n        var bufferLen = config.bufferLen || 4096;\r\n        this.context = source.context;\r\n        this.node = this.context.createJavaScriptNode(bufferLen, 2, 2);\r\n        var worker = new Worker(config.workerPath || WORKER_PATH);\r\n        worker.postMessage({\r\n          command: 'init',\r\n          config: {\r\n            sampleRate: this.context.sampleRate\r\n          }\r\n        });\r\n        var recording = false,\r\n          currCallback;\r\n\r\n        this.node.onaudioprocess = function(e){\r\n          if (!recording) return;\r\n          worker.postMessage({\r\n            command: 'record',\r\n            buffer: [\r\n              e.inputBuffer.getChannelData(0),\r\n              e.inputBuffer.getChannelData(1)\r\n            ]\r\n          });\r\n        }\r\n\r\n        this.configure = function(cfg){\r\n          for (var prop in cfg){\r\n            if (cfg.hasOwnProperty(prop)){\r\n              config[prop] = cfg[prop];\r\n            }\r\n          }\r\n        }\r\n\r\n        this.record = function(){\r\n       \r\n          recording = true;\r\n        }\r\n\r\n        this.stop = function(){\r\n        \r\n          recording = false;\r\n        }\r\n\r\n        this.clear = function(){\r\n          worker.postMessage({ command: 'clear' });\r\n        }\r\n\r\n        this.getBuffer = function(cb) {\r\n          currCallback = cb || config.callback;\r\n          worker.postMessage({ command: 'getBuffer' })\r\n        }\r\n\r\n        this.exportWAV = function(cb, type){\r\n          currCallback = cb || config.callback;\r\n          type = type || config.type || 'audio/wav';\r\n          if (!currCallback) throw new Error('Callback not set');\r\n          worker.postMessage({\r\n            command: 'exportWAV',\r\n            type: type\r\n          });\r\n        }\r\n\r\n        worker.onmessage = function(e){\r\n          var blob = e.data;\r\n          currCallback(blob);\r\n        }\r\n\r\n        source.connect(this.node);\r\n        this.node.connect(this.context.destination);    //this should not be necessary\r\n      };\r\n\r\n      Recorder.forceDownload = function(blob, filename){\r\n        var url = (window.URL || window.webkitURL).createObjectURL(blob);\r\n        var link = window.document.createElement('a');\r\n        link.href = url;\r\n        link.download = filename || 'output.wav';\r\n        var click = document.createEvent(\"Event\");\r\n        click.initEvent(\"click\", true, true);\r\n        link.dispatchEvent(click);\r\n      }\r\n\r\n      window.Recorder = Recorder;\r\n\r\n    })(window);\r\n\r\n    //ADDITIONAL JS recorderWorker.js\r\n    var recLength = 0,\r\n      recBuffersL = [],\r\n      recBuffersR = [],\r\n      sampleRate;\r\n    this.onmessage = function(e){\r\n      switch(e.data.command){\r\n        case 'init':\r\n          init(e.data.config);\r\n          break;\r\n        case 'record':\r\n          record(e.data.buffer);\r\n          break;\r\n        case 'exportWAV':\r\n          exportWAV(e.data.type);\r\n          break;\r\n        case 'getBuffer':\r\n          getBuffer();\r\n          break;\r\n        case 'clear':\r\n          clear();\r\n          break;\r\n      }\r\n    };\r\n\r\n    function init(config){\r\n      sampleRate = config.sampleRate;\r\n    }\r\n\r\n    function record(inputBuffer){\r\n\r\n      recBuffersL.push(inputBuffer[0]);\r\n      recBuffersR.push(inputBuffer[1]);\r\n      recLength += inputBuffer[0].length;\r\n    }\r\n\r\n    function exportWAV(type){\r\n      var bufferL = mergeBuffers(recBuffersL, recLength);\r\n      var bufferR = mergeBuffers(recBuffersR, recLength);\r\n      var interleaved = interleave(bufferL, bufferR);\r\n      var dataview = encodeWAV(interleaved);\r\n      var audioBlob = new Blob([dataview], { type: type });\r\n\r\n      this.postMessage(audioBlob);\r\n    }\r\n\r\n    function getBuffer() {\r\n      var buffers = [];\r\n      buffers.push( mergeBuffers(recBuffersL, recLength) );\r\n      buffers.push( mergeBuffers(recBuffersR, recLength) );\r\n      this.postMessage(buffers);\r\n    }\r\n\r\n    function clear(){\r\n      recLength = 0;\r\n      recBuffersL = [];\r\n      recBuffersR = [];\r\n    }\r\n\r\n    function mergeBuffers(recBuffers, recLength){\r\n      var result = new Float32Array(recLength);\r\n      var offset = 0;\r\n      for (var i = 0; i &lt; recBuffers.length; i++){\r\n        result.set(recBuffers[i], offset);\r\n        offset += recBuffers[i].length;\r\n      }\r\n      return result;\r\n    }\r\n\r\n    function interleave(inputL, inputR){\r\n      var length = inputL.length + inputR.length;\r\n      var result = new Float32Array(length);\r\n\r\n      var index = 0,\r\n        inputIndex = 0;\r\n\r\n      while (index &lt; length){\r\n        result[index++] = inputL[inputIndex];\r\n        result[index++] = inputR[inputIndex];\r\n        inputIndex++;\r\n      }\r\n      return result;\r\n    }\r\n\r\n    function floatTo16BitPCM(output, offset, input){\r\n      for (var i = 0; i &lt; input.length; i++, offset+=2){\r\n        var s = Math.max(-1, Math.min(1, input[i]));\r\n        output.setInt16(offset, s &lt; 0 ? s * 0x8000 : s * 0x7FFF, true);\r\n      }\r\n    }\r\n\r\n    function writeString(view, offset, string){\r\n      for (var i = 0; i &lt; string.length; i++){\r\n        view.setUint8(offset + i, string.charCodeAt(i));\r\n      }\r\n    }\r\n\r\n    function encodeWAV(samples){\r\n      var buffer = new ArrayBuffer(44 + samples.length * 2);\r\n      var view = new DataView(buffer);\r\n\r\n      /* RIFF identifier */\r\n      writeString(view, 0, 'RIFF');\r\n      /* file length */\r\n      view.setUint32(4, 32 + samples.length * 2, true);\r\n      /* RIFF type */\r\n      writeString(view, 8, 'WAVE');\r\n      /* format chunk identifier */\r\n      writeString(view, 12, 'fmt ');\r\n      /* format chunk length */\r\n      view.setUint32(16, 16, true);\r\n      /* sample format (raw) */\r\n      view.setUint16(20, 1, true);\r\n      /* channel count */\r\n      view.setUint16(22, 2, true);\r\n      /* sample rate */\r\n      view.setUint32(24, sampleRate, true);\r\n      /* byte rate (sample rate * block align) */\r\n      view.setUint32(28, sampleRate * 4, true);\r\n      /* block align (channel count * bytes per sample) */\r\n      view.setUint16(32, 4, true);\r\n      /* bits per sample */\r\n      view.setUint16(34, 16, true);\r\n      /* data chunk identifier */\r\n      writeString(view, 36, 'data');\r\n      /* data chunk length */\r\n      view.setUint32(40, samples.length * 2, true);\r\n\r\n      floatTo16BitPCM(view, 44, samples);\r\n\r\n      return view;\r\n    }</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;html&gt;\r\n    \t&lt;body&gt;\r\n    \t\t&lt;audio controls autoplay&gt;&lt;/audio&gt;\r\n    \t\t&lt;script type=\"text/javascript\" src=\"recorder.js\"&gt; &lt;/script&gt;\r\n                    &lt;fieldset&gt;&lt;legend&gt;RECORD AUDIO&lt;/legend&gt;\r\n    \t\t&lt;input onclick=\"startRecording()\" type=\"button\" value=\"start recording\" /&gt;\r\n    \t\t&lt;input onclick=\"stopRecording()\" type=\"button\" value=\"stop recording and play\" /&gt;\r\n                    &lt;/fieldset&gt;\r\n    \t\t&lt;script&gt;\r\n    \t\t\tvar onFail = function(e) {\r\n    \t\t\t\tconsole.log('Rejected!', e);\r\n    \t\t\t};\r\n\r\n    \t\t\tvar onSuccess = function(s) {\r\n    \t\t\t\tvar context = new webkitAudioContext();\r\n    \t\t\t\tvar mediaStreamSource = context.createMediaStreamSource(s);\r\n    \t\t\t\trecorder = new Recorder(mediaStreamSource);\r\n    \t\t\t\trecorder.record();\r\n\r\n    \t\t\t\t// audio loopback\r\n    \t\t\t\t// mediaStreamSource.connect(context.destination);\r\n    \t\t\t}\r\n\r\n    \t\t\twindow.URL = window.URL || window.webkitURL;\r\n    \t\t\tnavigator.getUserMedia  = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n\r\n    \t\t\tvar recorder;\r\n    \t\t\tvar audio = document.querySelector('audio');\r\n\r\n    \t\t\tfunction startRecording() {\r\n    \t\t\t\tif (navigator.getUserMedia) {\r\n    \t\t\t\t\tnavigator.getUserMedia({audio: true}, onSuccess, onFail);\r\n    \t\t\t\t} else {\r\n    \t\t\t\t\tconsole.log('navigator.getUserMedia not present');\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n\r\n    \t\t\tfunction stopRecording() {\r\n    \t\t\t\trecorder.stop();\r\n    \t\t\t\trecorder.exportWAV(function(s) {\r\n                                \r\n                                 \taudio.src = window.URL.createObjectURL(s);\r\n    \t\t\t\t});\r\n    \t\t\t}\r\n    \t\t&lt;/script&gt;\r\n    \t&lt;/body&gt;\r\n    &lt;/html&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here's a gitHub project that does just that.</p>\n\n<p>It records audio from the browser in mp3 format, and it automatically saves it to the webserver.\n<a href=\"https://github.com/nusofthq/Recordmp3js\" rel=\"nofollow\">https://github.com/nusofthq/Recordmp3js</a></p>\n\n<p>You can also view a detailed explanation of the implementation:\n<a href=\"http://nusofthq.com/blog/recording-mp3-using-only-html5-and-javascript-recordmp3-js/\" rel=\"nofollow\">http://nusofthq.com/blog/recording-mp3-using-only-html5-and-javascript-recordmp3-js/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Stream audio in realtime without waiting for recording to end:\n<a href=\"https://github.com/noamtcohen/AudioStreamer\" rel=\"nofollow\">https://github.com/noamtcohen/AudioStreamer</a></p>\n\n<p>This streams PCM data but you could modify the code to stream mp3 or <a href=\"https://github.com/jpemartins/speex.js/\" rel=\"nofollow\">Speex</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use <strong>Recordmp3js</strong> from GitHub to achieve your requirements. You can record from user's microphone and then get the file as an mp3. Finally upload it to your server.  </p>\n\n<p>I used this in my demo. There is a already a sample available with the source code by the author in this location :\n<a href=\"https://github.com/nusofthq/Recordmp3js\" rel=\"nofollow\">https://github.com/nusofthq/Recordmp3js</a></p>\n\n<p>The demo is here:\n<a href=\"http://audior.ec/recordmp3js/\" rel=\"nofollow\">http://audior.ec/recordmp3js/</a></p>\n\n<p>But currently works only on Chrome and Firefox.</p>\n\n<p>Seems to work fine and pretty simple. Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What I ultimately want to do is record from the user's microphone, and upload the file to the server when they're done. So far, I've managed to make a stream to an  element with the following code:</p>\n\n<pre><code>var audio = document.getElementById(\"audio_preview\");\n\nnavigator.getUserMedia  = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\nnavigator.getUserMedia({video: false, audio: true}, function(stream) {\n   audio.src = window.URL.createObjectURL(stream);\n}, onRecordFail);\n\nvar onRecordFail = function (e) {\n   console.log(e);\n}\n</code></pre>\n\n<p>How do I go from that, to recording to a file?</p>\n",
            "last_activity_date": 1411469954,
            "question_id": 16413063,
            "score": 34,
            "tags": [
                "javascript",
                "html5",
                "html5-audio",
                "audio-recording"
            ],
            "title": "HTML5 record audio to file"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>It's all about event models: <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-flow\" rel=\"nofollow\">http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-flow</a>\nYou can catch event in bubbling phase or in capturing phase. Your choice.<br>\nTake a look at <a href=\"http://www.quirksmode.org/js/events_order.html\" rel=\"nofollow\">http://www.quirksmode.org/js/events_order.html</a> - you'll find it very useful.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Events can be activated at two occasions: At the beginning (\"capture\"), and at the end (\"bubble\").\n     \nEvents are executed in the order of how they're defined. Say, you define 4 event listeners:</p>\n\n<pre><code>window.addEventListener(\"click\", function(){alert(1)}, false);\nwindow.addEventListener(\"click\", function(){alert(2)}, true);\nwindow.addEventListener(\"click\", function(){alert(3)}, false);\nwindow.addEventListener(\"click\", function(){alert(4)}, true);\n</code></pre>\n\n<p>The alert boxes will pop up in this order:</p>\n\n<ul>\n<li>2 (defined first, using <code>capture=true</code>)</li>\n<li>4 (defined second using <code>capture=true</code>)</li>\n<li>1 (first defined event with <code>capture=false</code>)</li>\n<li>3 (second defined event with <code>capture=false</code>)</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 120
                },
                {
                    "body": "<p>When you say useCapture = true the Events execute top to down in the capture phase when false it does a bubble bottom to top.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I find this diagram is very useful for understanding the capture/target/bubble phases:\n<a href=\"http://www.w3.org/TR/2003/NOTE-DOM-Level-3-Events-20031107/events.html#Events-phases\">http://www.w3.org/TR/2003/NOTE-DOM-Level-3-Events-20031107/events.html#Events-phases</a></p>\n\n<p>Below, content extracted from the link.</p>\n\n<p><strong>Phases</strong></p>\n\n<p>The event is dispatched following a path from the root of the tree to this target node. It can then be handled locally at the target node level or from any target's ancestors higher in the tree. The event dispatching (also called event propagation) occurs in three phases and the following order:</p>\n\n<ol>\n<li>The capture phase: the event is dispatched to the target's ancestors\nfrom the root of the tree to the direct parent of the target node.</li>\n<li>The target phase: the event is dispatched to the target node.</li>\n<li>The bubbling phase: the event is dispatched to the target's\nancestors from the direct parent of the target node to the root of\nthe tree.</li>\n</ol>\n\n<p><img src=\"http://i.stack.imgur.com/liJ5u.png\" alt=\"graphical representation of an event dispatched in a DOM tree using the DOM event flow\"></p>\n\n<p>The target's ancestors are determined before the initial dispatch of the event. If the target node is removed during the dispatching, or a target's ancestor is added or removed, the event propagation will always be based on the target node and the target's ancestors determined before the dispatch.</p>\n\n<p>Some events may not necessarily accomplish the three phases of the DOM event flow, e.g. the event could only be defined for one or two phases. As an example, events defined in this specification will always accomplish the capture and target phases but some will not accomplish the bubbling phase (\"bubbling events\" versus \"non-bubbling events\", see also the Event.bubbles attribute).</p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>The order of definition only matters if the items are at the same level.  If you reverse the order of definition in your code you will get the same results.  </p>\n\n<p>However, if you reverse the useCapture setting on the two event handlers, the child event handler responds before that of the parent.  The reason for this is that the child event handler will now be triggered in the capture phase which is prior to the bubbling phase in which the parent event handler will be triggered.  </p>\n\n<p>If you set useCapture to true for both event handlers--regardless of order of definition--the parent event handler will be triggered first because it comes before the child in the capturing phase.</p>\n\n<p>Conversely, if you set useCapture to false for both event handlers--again regardless of order of definition--the child event handler will be triggered first because it comes before the parent in the bubbling phase.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Capture Event vs Bubble Event</p>\n\n<ul>\n<li>Capture Event will be dispatch before Bubble Event</li>\n<li>Event propagation order is\n<ol>\n<li>Parent Capture</li>\n<li>Children Capture</li>\n<li>Children Bubble</li>\n<li>Parent Bubble</li>\n</ol></li>\n</ul>\n\n<p>( <code>stopPropagation()</code> will stop the flow )</p>\n\n<pre><code>                  |  A\n -----------------|--|-----------------\n | Parent         |  |                |\n |   -------------|--|-----------     |\n |   |Children    V  |          |     |\n |   ----------------------------     |\n |                                    |\n --------------------------------------\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/sc5Xa/2/\"><kbd>Demo</kbd></a></p>\n\n<pre><code>&lt;div id=\"parent\"&gt;\n    &lt;div id=\"children\"&gt;\n        Click\n    &lt;/div&gt;\n&lt;/div&gt;\n\n\n&lt;script&gt;\nvar parent = document.getElementById('parent'),\n    children = document.getElementById('children');\n\nchildren.addEventListener('click', function (e) { \n    alert('Children Capture');\n    // e.stopPropagation();\n}, true);\n\nchildren.addEventListener('click', function (e) { \n    alert('Children Bubble');\n    // e.stopPropagation();\n}, false);\n\nparent.addEventListener('click', function (e) { \n    alert('Parent Capture');\n    // e.stopPropagation();\n}, true);\n\nparent.addEventListener('click', function (e) { \n    alert('Parent Bubble');\n    // e.stopPropagation();\n}, false);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Code example:</p>\n\n<pre><code>&lt;div id=\"div1\" style=\"background:#9595FF\"&gt;\n  Outer Div&lt;br /&gt;\n  &lt;div id=\"div2\" style=\"background:#FFFFFF\"&gt;\n    Inner Div\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Javascript code:</p>\n\n<pre><code>d1 = document.getElementById(\"div1\");\nd2 = document.getElementById(\"div2\");\n</code></pre>\n\n<p>if both are set to false</p>\n\n<pre><code>d1.addEventListener('click',function(){alert(\"Div 1\")},false);\nd2.addEventListener('click',function(){alert(\"Div 2\")},false);\n</code></pre>\n\n<p>Executes: Onclicking Inner Div, alerts are displayed as:\n Div 2 > Div 1</p>\n\n<p>Here the script is executed from the inner element: Event Bubbling (useCapture has been set to false)</p>\n\n<p>div 1 is set to true and div 2 set to false</p>\n\n<pre><code>d1.addEventListener('click',function(){alert(\"Div 1\")},true);\nd2.addEventListener('click',function(){alert(\"Div 2\")},false);\n</code></pre>\n\n<p>Executes: Onclicking Inner Div, alerts are displayed as:\n Div 1 > Div 2</p>\n\n<p>Here the script is executed from the ancestor / outer element: Event Capturing (useCapture has been set to true)</p>\n\n<p>div 1 is set to false and div 2 set to true</p>\n\n<pre><code>d1.addEventListener('click',function(){alert(\"Div 1\")},false);\nd2.addEventListener('click',function(){alert(\"Div 2\")},true);\n</code></pre>\n\n<p>Executes: Onclicking Inner Div, alerts are displayed as:\n Div 2 > Div 1</p>\n\n<p>Here the script is executed from the inner element: Event Bubbling (useCapture has been set to false)</p>\n\n<p>div 1 is set to true and div 2 set to true</p>\n\n<pre><code>d1.addEventListener('click',function(){alert(\"Div 1\")},true);\nd2.addEventListener('click',function(){alert(\"Div 2\")},true);\n</code></pre>\n\n<p>Executes: Onclicking Inner Div, alerts are displayed as:\n Div 1 > Div 2</p>\n\n<p>Here the script is executed from the ancestor / outer element: Event Capturing since useCapture has been set to true</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have read article at <a href=\"https://developer.mozilla.org/en/DOM/element.addEventListener\">https://developer.mozilla.org/en/DOM/element.addEventListener</a> but unable to understand useCapture attribute.Defination there is-</p>\n\n<blockquote>\n  <p>If true, useCapture indicates that the user wishes to initiate capture. After initiating capture, all events of the specified type will be dispatched to the registered listener before being dispatched to any EventTargets beneath it in the DOM tree. Events which are bubbling upward through the tree will not trigger a listener designated to use capture. </p>\n</blockquote>\n\n<p>In this code parent event triggers before child,so I am not able to understand its \nbehavior.Document object has usecapture true and child div has usecapture set false and document usecapture is followed.So why document property is preferred over child.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script&gt;\nfunction load()\n{\ndocument.addEventListener(\"click\",function(){alert(\"parent event\")},true);\ndocument.getElementById(\"div1\").addEventListener(\"click\",function(){alert(\"child event\")},false);\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onload=\"load()\"&gt;\n&lt;div id=\"div1\"&gt;click me&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1416933732,
            "question_id": 7398290,
            "score": 84,
            "tags": [
                "javascript",
                "dom",
                "javascript-events",
                "dom-events"
            ],
            "title": "Unable to understand useCapture attribute in addEventListener"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>This is a longshot, but IE (and even Firefox) sometimes \"remembers\" \nthe connection it uses for an HTTP request. Notes/examples: </p>\n\n<ul>\n<li><p>In Firefox, if I change the proxy settings and hit SHIFT-RELOAD on \na page, it still uses the old proxy. However, if I kill the old \nproxy (\"killall squid\"), it starts using the new proxy. </p></li>\n<li><p>When you disconnect/reconnect, do you receive a new IP address or \nanything similar? Can you somehow monitor the old IP address to see \nif IE is sending data to that now-dead address? </p></li>\n<li><p>My guess is that IE is sending the data, just down the wrong \npath. It might be smart enough to not cache network connections for \n\"POST\" packets, but might not be smart enough to do that for POST \npayloads. </p></li>\n<li><p>This probably doesn't affect most AJAX apps, since people rarely \ndisconnect and re-connect to their networks? </p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had a similar problem where some older versions of IE would send back only the Header and not the body of a POST. My problem turned out to be related to IE and NTLM. Since you didn't mention NTLM, this probably does not help, but just in case:</p>\n\n<p><a href=\"http://support.microsoft.com/kb/251404\" rel=\"nofollow\">http://support.microsoft.com/kb/251404</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Are you using NTLM authentication?</p>\n\n<p>When using NTLM authentication, IE doesn't send post-data. It sends header info, expects an unauthorized response send authorization, and after the 're-authentication' sends the post.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There does not seem to be a clear answer to this question, so I will provide my empirical data as a substitute and provide some ways to work around it. Maybe some MS insider will one day shed some light on this...</p>\n\n<ol>\n<li><p>If HTTP Keep-Alive is <strong>disabled</strong> on the server, this issue goes away. In other words, your HTTP 1.1 server will respond to every Ajax request with a <code>Connection: Close</code> line in the response. This keeps IE happy but causes every Ajax request to open a new connection. This can have a significant performance impact, especially on high latency networks.</p></li>\n<li><p>The issue is triggered easily if Ajax requests are made in rapid succession. For example, we make Ajax requests every 100ms and then the network status changes, the error is easy to reproduce. Although most applications probably do not make such requests, you might well have a couple of server calls happening right after each other which could lead to this problem. Less chatty keeps IE happy.</p></li>\n<li><p>It happens even without NTLM authentication.</p></li>\n<li><p>It happens when your HTTP keep-alive timeout on the server is shorter than the default (which defaults to 60 seconds on Windows). Details provided in link in question.</p></li>\n<li><p>It does not happen with Chrome or Firefox. FF sends one packet so seems to avoid this issue altogether. </p></li>\n<li><p>It happens in IE 6, 7, 8. Could not reproduce with IE 9 beta.</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>The microsoft KB article titled <em><a href=\"http://support.microsoft.com/kb/895954\">When you use Microsoft Internet Explorer or another program to perform a re-POST operation, only the header data is posted</a></em> seems to fix this problem.</p>\n\n<p>The article provides a hotfix. For later browsers such as IE8 it says the hotfix is already included <strong>but needs to be enabled</strong> through the registry settings on the client PC.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>We are able to reliably recreate the following scenario:</p>\n\n<ol>\n<li>Create a small HTML page that makes AJAX requests to a server (using HTTP POST)</li>\n<li>Disconnect from the network and reconnect</li>\n<li>Monitor the packets that IE generates after the failure</li>\n</ol>\n\n<p>After a failed network connection, IE makes the next AJAX request but only sends the <strong>HTTP header</strong> (not the body) when doing the HTTP post. This causes all sorts of problems on the server as it is only a partial request. Google this issue with Bing and you'll find lots of people complaining about \"random server errors\" using AJAX or unexplained AJAX failures. </p>\n\n<p>We know that IE (unlike most other browsers) always sends an HTTP POST as TWO TCP/IP packets. The header and body is sent separately. In the case directly after a failure, <strong>IE only sends the header</strong>.</p>\n\n<p>So my question is - why does it behave this way? It seems wrong based on the HTTP spec and other browsers don't behave this way. Is it simply a bug? Surely this creates havoc in any serious AJAX based Web application.</p>\n\n<p><strong>Reference information:</strong></p>\n\n<p>There is a similar problem, triggered by HTTP keep-alive timeouts that are shorter than 1 minute and is documented here:</p>\n\n<p><a href=\"http://us.generation-nt.com/xmlhttprequest-post-sometimes-fails-when-server-using-keep-aliv-help-188813541.html\">http://us.generation-nt.com/xmlhttprequest-post-sometimes-fails-when-server-using-keep-aliv-help-188813541.html</a></p>\n\n<p><a href=\"http://support.microsoft.com/default.aspx?kbid=831167\">http://support.microsoft.com/default.aspx?kbid=831167</a></p>\n\n<p>Here are the before and after failure packet captures:</p>\n\n<p>Notice how the HTTP Header and Payload is sent\n<a href=\"http://img827.imageshack.us/i/beforee.png/\">http://img827.imageshack.us/i/beforee.png/</a></p>\n\n<p>After a failure, notice how only the Header is sent. IE <em>never</em> sends the payload and the server eventually responds with a Timeout.\n<a href=\"http://img203.imageshack.us/i/retryt.png/\">http://img203.imageshack.us/i/retryt.png/</a></p>\n",
            "last_activity_date": 1378398166,
            "question_id": 4796305,
            "score": 91,
            "tags": [
                "javascript",
                "ajax",
                "internet-explorer"
            ],
            "title": "Why does Internet Explorer not send HTTP post body on Ajax call after failure?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I have found three different solutions to this problem, none of them pleasant.</p>\n\n<h1>Defining Dependencies Inline</h1>\n\n<pre><code>define('hurp', [], function () {\n  return {\n    beans: 'Beans'\n  };\n});\n\ndefine('durp', [], function () {\n  return {\n    beans: 'durp beans'\n  };\n});\n\nrequire('hurpdhurp', function () {\n  // test hurpdurp in here\n});\n</code></pre>\n\n<p>Fugly. You have to clutter up your tests with lots of AMD boilerplate.</p>\n\n<h1>Loading Mock Dependencies From Different Paths</h1>\n\n<p>This involves using a seperate config.js file to define paths for each of the dependencies that point to mocks instead of the original dependencies. This is also fugly, requiring the creation of tons of test files and configurations files.</p>\n\n<h1>Fake It In Node</h1>\n\n<p>This is my current solution, but is still a terrible one.</p>\n\n<p>You create your own <code>define</code> function to provide your own mocks to the module and put your tests in the callback. Then you <code>eval</code> the module to run your tests, like so:</p>\n\n<pre><code>var fs = require('fs')\n  , hurp = {\n      beans: 'BEANS'\n    }\n  , durp = {\n      beans: 'durp beans'\n    }\n  , hurpDurp = fs.readFileSync('path/to/hurpDurp', 'utf8');\n  ;\n\n\n\nfunction define(deps, cb) {\n  var TestableHurpDurp = cb(hurp, durp);\n  // now run tests below on TestableHurpDurp, which is using your\n  // passed-in mocks as dependencies.\n}\n\n// evaluate the AMD module, running your mocked define function and your tests.\neval(hurpDurp);\n</code></pre>\n\n<p>This is my preferred solution. It looks a little magic, but it has a few benefits.</p>\n\n<ol>\n<li>Run your tests in node, so no messing with browser automation.</li>\n<li>Less need for messy AMD boilerplate in your tests.</li>\n<li>You get to use <code>eval</code> in anger, and imagine Crockford exploding with rage.</li>\n</ol>\n\n<p>It still has some drawbacks, obviously.</p>\n\n<ol>\n<li>Since you are testing in node, you can't do anything with browser events or DOM manipulation. Only good for testing logic.</li>\n<li>Still a little clunky to set up. You need to mock out <code>define</code> in every test, since that is where your tests actually run.</li>\n</ol>\n\n<p>I am working on a test runner to give a nicer syntax for this kind of stuff, but I still have no good solution for problem 1.</p>\n\n<h1>Conclusion</h1>\n\n<p>Mocking deps in requirejs sucks hard. I found a way that sortof works, but am still not very happy with it. Please let me know if you have any better ideas.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>So after reading <a href=\"https://groups.google.com/forum/?fromgroups#!topic/requirejs/UuRL0wQwRRw\">this post</a> I came up with a solution that use the requirejs config function to create a new context for your test where you can simply mock your dependencies: </p>\n\n<pre><code>var cnt = 0;\nfunction createContext(stubs) {\n  cnt++;\n  var map = {};\n\n  var i18n = stubs.i18n;\n  stubs.i18n = {\n    load: sinon.spy(function(name, req, onLoad) {\n      onLoad(i18n);\n    })\n  };\n\n  _.each(stubs, function(value, key) {\n    var stubName = 'stub' + key + cnt;\n\n    map[key] = stubName;\n\n    define(stubName, function() {\n      return value;\n    });\n  });\n\n  return require.config({\n    context: \"context_\" + cnt,\n    map: {\n      \"*\": map\n    },\n    baseUrl: 'js/cfe/app/'\n  });\n}\n</code></pre>\n\n<p>So it creates a new context where the definitions for <code>Hurp</code> and <code>Durp</code> will be set by the objects you passed into the function. The Math.random for the name is maybe a bit dirty but it works. Cause if you'll have a bunch of test you need to create new context for every suite to prevent reusing your mocks, or to load mocks when you want the real requirejs module.</p>\n\n<p>In your case it would look like this:</p>\n\n<pre><code>(function () {\n\n  var stubs =  {\n    hurp: 'hurp',\n    durp: 'durp'\n  };\n  var context = createContext(stubs);\n\n  context(['yourModuleName'], function (yourModule) {\n\n    //your normal jasmine test starts here\n\n    describe(\"yourModuleName\", function () {\n      it('should log', function(){\n         spyOn(console, 'log');\n         yourModule.foo();\n\n         expect(console.log).toHasBeenCalledWith('hurp');\n      })\n    });\n  });\n})();\n</code></pre>\n\n<p>So I'm using this approach in production for a while and its really robust.</p>\n",
                    "is_accepted": false,
                    "score": 41
                },
                {
                    "body": "<p>There's a <code>config.map</code> option <a href=\"http://requirejs.org/docs/api.html#config-map\">http://requirejs.org/docs/api.html#config-map</a>.</p>\n\n<p>On how-to use it:</p>\n\n<ol>\n<li>Define normal module;</li>\n<li>Define stub module;</li>\n<li><p>Configure RequireJS expicitely;</p>\n\n<pre><code>requirejs.config({\n  map: {\n    'source/js': {\n      'foo': 'normalModule'\n    },\n    'source/test': {\n      'foo': 'stubModule'\n    }\n  }\n});\n</code></pre></li>\n</ol>\n\n<p>In this case for normal and test code you could use the <code>foo</code> module which will be real module reference and stub accordingly.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can use <a href=\"https://github.com/mattfysh/testr.js\" rel=\"nofollow\">testr.js</a> to mock dependencies. You can set testr to load the mock dependencies instead of the original ones. Here is an example usage:</p>\n\n<pre><code>var fakeDep = function(){\n    this.getText = function(){\n        return 'Fake Dependancy';\n    };\n};\n\nvar Module1 = testr('module1', {\n    'dependancies/dependancy1':fakeDep\n});\n</code></pre>\n\n<p>Check out this as well: <a href=\"http://cyberasylum.janithw.com/mocking-requirejs-dependencies-for-unit-testing/\" rel=\"nofollow\">http://cyberasylum.janithw.com/mocking-requirejs-dependencies-for-unit-testing/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>you might want to check out the new <a href=\"https://github.com/iammerrick/Squire.js/\">Squire.js lib</a></p>\n\n<p>from the docs:</p>\n\n<p><em>Squire.js is a dependency injector for Require.js users to make mocking dependencies easy!</em></p>\n",
                    "is_accepted": false,
                    "score": 33
                }
            ],
            "body": "<p>I have an AMD module I want to test, but I want to mock out its dependencies instead of loading the actual dependencies. I am using requirejs, and the code for my module looks something like this:</p>\n\n<pre><code>define(['hurp', 'durp'], function(Hurp, Durp) {\n  return {\n    foo: function () {\n      console.log(Hurp.beans)\n    },\n    bar: function () {\n      console.log(Durp.beans)\n    }\n  }\n}\n</code></pre>\n\n<p>How can I mock out <code>hurp</code> and <code>durp</code> so I can effectively unit test?</p>\n",
            "last_activity_date": 1398994583,
            "question_id": 11439540,
            "score": 83,
            "tags": [
                "javascript",
                "unit-testing",
                "mocking",
                "requirejs"
            ],
            "title": "How can I mock dependencies for unit testing in RequireJS?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Syntax error means that you miswrote something. It is not related to a particular framework / library. You probably forgot to add \",\" or close a paranthesis. Check it out again</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I believe that the problem has to do with scoping.  Initially the inner textbox doesn't have <code>name</code> set, so it is inherited from the outer scope.  This is why typing in the outer box is reflected in the inner box.  However, once typing in the inner box occurs, the inner scope now contains <code>name</code> which means it is no longer bound to the outer <code>name</code> so the outer text box doesn't sync up.</p>\n\n<p>The appropriate way to fix is only storing models in the scope, not your values.  I fixed it in <a href=\"http://jsfiddle.net/pdgreen/5RVza/\">http://jsfiddle.net/pdgreen/5RVza/</a>  The trick is to create a model object (<code>data</code>) and referencing values on it.</p>\n\n<p>The incorrect code modifies the scope in the directive, the correct code modifies the model in the scope in the directive.  This subtle difference allows the scope inheritance to work properly.</p>\n\n<p>I believe the way Mi\u0161ko Hevery phrased it was, scope should be <em>write-only</em> in the controller, and <em>read-only</em> in directives.  </p>\n\n<p>update: reference: <a href=\"https://www.youtube.com/watch?v=ZhfUv0spHCY#t=29m19s\">https://www.youtube.com/watch?v=ZhfUv0spHCY#t=29m19s</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>A directive with <code>transclude: true</code> results in the directive creating a new (transcluded) child scope.  This new scope prototypically inherits from the parent scope.  In your case, the parent scope is the scope associated with the editCtrl controller.</p>\n\n<p>Using two-way databinding in a child scope (i.e., ng-model) to bind to a parent scope property that holds a primitive value (e.g., <code>name</code>) always causes problems -- well, I should say that it doesn't work as expected.  When the scope property is changed in the child (e.g., you type into the second textbox) the child creates a new scope property that hides/shadows the parent scope property of the same name.  If the parent property holds a primitive value, that value is (essentially) copied to the child property <em>when the child property is created</em>.  Future changes in the child scope (e.g., the second textbox) only affect the child property.</p>\n\n<p>Before typing into the second textbox (i.e., before the property is changed in the child), the child/transcluded scope finds the <code>name</code> property in the parent scope via prototypal inheritance (dashed line in picture below).  This is why the two textboxes initially remain in synch.  Below, if you type \"Mark\" into the first text box, this is what the scopes look like:</p>\n\n<p><img src=\"http://i.stack.imgur.com/alj5a.png\" alt=\"transcluded scope follows inheritance chain\"></p>\n\n<p>I created a <a href=\"http://jsfiddle.net/mrajcok/V5cyH/\">fiddle</a> where you can examine the two scopes.  Click the \"show scope\" link next to the second textbox before typing into the second textbox.  This will allow you to see the transcluded child scope.  You will notice that it does not have a <code>name</code> property at this point.  Clear the console, type into the second text box, then click the link again.  You will notice that the child scope now has a <code>name</code> property, and the initial value was the value that parent property had (\"Mark\").  If you typed \" likes Angular\" into the second text box, this is what the scopes look like:</p>\n\n<p><img src=\"http://i.stack.imgur.com/V04nh.png\" alt=\"transcluded primitive hides parent property\"></p>\n\n<p>There are two solutions:</p>\n\n<ol>\n<li>do what @pgreen2 suggests (this is the \"best practice\" solution) -- use an object instead of a primitive.  When an object is used, the child/transcluded scope does not get a new property.  Only prototypal inheritance is in play here.  In the picture below, assume the editCtrl's $scope has this object defined: <br> <code>$scope.myObject = { name: \"Mark\", anotherProp: ... }</code>:\n<br> <img src=\"http://i.stack.imgur.com/V8OaP.png\" alt=\"object in parent\"></li>\n<li>use $parent in the child scope (this is a fragile solution, and not recommended, as it makes assumptions about HTML structure): use <code>ng-model=\"$parent.name\"</code> inside the &lt;input> that is within the &lt;tabs> element.  The first picture above shows how this works.</li>\n</ol>\n\n<p>A syntax error occurs when using <code>scope: {name: '='}</code> because when using two-way databinding (i.e., when using '='), interpolation is not allowed -- i.e., {{}} can't be used.  Instead of <code>&lt;tabs name=\"{{name}}\"&gt;</code> use <code>&lt;tabs name=\"name\"&gt;</code>.</p>\n\n<p>Using '@' works the same as the transclude case because ng-transclude uses the transcluded scope, not the isolate scope that is created by using <code>scope: { ... }</code>.</p>\n\n<p>For (lots) more information about scopes (including pictures) see <br> <a href=\"http://stackoverflow.com/questions/14049480/what-are-the-nuances-of-scope-prototypal-prototypical-inheritance-in-angularjs/14049482\">What are the nuances of scope prototypal / prototypical inheritance in AngularJS?</a></p>\n",
                    "is_accepted": true,
                    "score": 88
                }
            ],
            "body": "<p>I've a textbox in a controller which is bound to model <code>name</code>. There's a directive inside the controller and there's another textbox inside the directive which is bound to the same model <code>name</code>:</p>\n\n<pre><code>&lt;div class=\"border\" ng-controller=\"editCtrl\"&gt;\n   Controller: editCtrl &lt;br/&gt;\n   &lt;input type=\"text\" ng-model=\"name\" /&gt;\n   &lt;br/&gt;\n   &lt;tabs&gt;\n      Directive: tabs &lt;br/&gt;\n      &lt;input type=\"text\" ng-model=\"name\"/&gt;\n   &lt;/tabs&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p></p>\n\n<pre><code>mod.directive('tabs', function() {\n  return {\n    restrict: 'E',\n    transclude: true, \n    template:\n      '&lt;div class=\"border\" ng-transclude&gt;&lt;/div&gt;',\n  };\n});\n</code></pre>\n\n<p>When you type something in the outer textbox it's reflected in the inner textbox but if you type something in the inner textbox it stops working i.e. both textbox no more reflects the same value.</p>\n\n<p>See example at: <a href=\"http://jsfiddle.net/uzairfarooq/MNBLd/\">http://jsfiddle.net/uzairfarooq/MNBLd/</a></p>\n\n<p>I've also tried using two way binding attr (<code>scope: {name: '='}</code>) but it gives syntax error.And using <code>scope: {name: '@'}</code> has same effect.</p>\n\n<p>Any help would be greatly appreciated.</p>\n\n<p><strong>In addition to the accepted answer, <a href=\"https://github.com/angular/angular.js/wiki/Understanding-Scopes#wiki-ngController\">this article</a> really helped me in understanding the prototypical inheritance in child scpoes. I'd highly recommend anyone having problem with scopes to read it thoroughly.</strong></p>\n",
            "last_activity_date": 1423304848,
            "question_id": 14481610,
            "score": 40,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "two way binding not working in directive with transcluded scope"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>There is a limit the constructor can take as arguments.</p>\n\n<p>On most systems I encoutered the limit is 2^16 (2 bytes):</p>\n\n<pre><code>var myFreshArr = new Array(0,1,2,3 ..... 65536);\n</code></pre>\n\n<p>That will cause an error (too many arguments....)</p>\n\n<p>When using the literal [] you don't have such problems.</p>\n\n<p>In case you don't care about such big arrays, I think you can use whatever you prefer.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><em>Mostly</em>, people use <code>var a = []</code> because <a href=\"http://yuiblog.com/blog/2006/11/13/javascript-we-hardly-new-ya/\">Douglas Crockford says so</a>.</p>\n\n<p>His reasons include the non-intuitive and inconsistent behaviour of <code>new Array()</code>:</p>\n\n<pre><code>var a = new Array(5);     // an array pre-sized to 5 elements long\nvar b = new Array(5, 10); // an array with two elements in it\n</code></pre>\n\n<p>Note that there's no way with <code>new Array()</code> to create an array with just <em>one</em> pre-specified number element in it!</p>\n\n<p>Using <code>[]</code> is actually more efficient, <a href=\"http://stackoverflow.com/questions/2280285/what-does-mean-in-javascript\">and safer too</a>!  It's possible to overwrite the <code>Array</code> constructor and make it do odd things, but you can't overwrite the behaviour of <code>[]</code>.</p>\n\n<p>Personally, I always use the <code>[]</code> syntax, and similarly always use <code>{}</code> syntax in place of <code>new Object()</code>.</p>\n",
                    "is_accepted": true,
                    "score": 252
                },
                {
                    "body": "<p>It's because <code>new Array()</code> is ambiguous. These are the correct constructors:</p>\n\n<pre><code>// Using brackets\n[element0, element1, ..., elementN]\n\n// Using new AND a list of elements\nnew Array(element0, element1, ..., elementN)\n\n// Using new AND an integer specifying the array length\nnew Array(arrayLength)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>No, there is actually no reason to use one notation over the other one for empty Arrays.</p>\n\n<p>However, most browsers show a slightly better performance using <code>x = [];</code> than calling the <em>Constructor</em>.</p>\n\n<p>If you need to create an Array with a specific size, you kind of <em>need</em> to use <code>x = new Array(10);</code> for instance, which would create an Array with 10 <code>undefined</code> slots.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Both are correct only. But most of the people use <code>var a = []</code> </p>\n\n<p>Three Ways to Declare an Array in JavaScript.</p>\n\n<p><strong>method 1</strong>: We can explicitly declare an array with the JavaScript \"new\" keyword to instantiate the array in memory (i.e. create it, and make it available).</p>\n\n<pre><code>// Declare an array (using the array constructor)\nvar arlene1 = new Array();\nvar arlene2 = new Array(\"First element\", \"Second\", \"Last\");\n</code></pre>\n\n<p><strong>method 2</strong>: we use an alternate method to declaring arrays.</p>\n\n<pre><code>// Declare an array (using literal notation)\nvar arlene1 = [];\nvar arlene2 = [\"First element\", \"Second\", \"Last\"];\n</code></pre>\n\n<p><strong>method 3</strong>: JavaScript also lets you create arrays indirectly, by calling specific methods.</p>\n\n<pre><code>// Create an array from a method's return value\nvar carter = \"I-learn-JavaScript\";\nvar arlene3 = carter.split(\"-\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<ul>\n<li>var arr=[] uses the array/object literal</li>\n<li>var arr = new Array() use the array/object constructor</li>\n</ul>\n\n<p>The speediest way to define an array or object is literal way, because you don't need to call the constructor</p>\n\n<pre><code>var arr1 = new Array(1, 2, 3, 4);\nvar arr2 = [1, 2, 3, 4];\n\nalert(arr1[0]); // 1\nalert(arr2[0]); // 1\n\nvar arr3 = new Array(200);\nvar arr4 = [200];\n\nalert(arr3[0]); // 'undefined'\nalert(arr4[0]); // 200\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>var array = [ 1, 2, 3, 4];\n</code></pre>\n\n<p>is sugar</p>\n\n<pre><code>var array = new Array(1, 2, 3, 4);\n</code></pre>\n\n<p>is salt</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>One significant difference is that <code>[]</code> will <em>always</em> instantiate a new Array, whereas <code>new Array</code> could be <a href=\"http://jsfiddle.net/ASvqT/\">hijacked to create a different object</a>.</p>\n\n<pre><code>(function () {\n    \"use strict\";\n    var foo,\n        bar;\n    //don't do this, it's a bad idea\n    function Array() {\n        alert('foo');\n    }\n    foo = new Array();\n    bar = [];\n}());\u200b\n</code></pre>\n\n<p>In my example code, I've kept the <code>Array</code> function hidden from the rest of the document scope, however it's more likely that if you ever run into this sort of issue that the code won't have been left in a nice closure, and will likely be difficult to locate.</p>\n\n<p><sub><strong>Disclaimer</strong>: It's not a good idea to hijack the <code>Array</code> constructor.</sub></p>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<h1>for maintainability, use <code>[]</code></h1>\n\n<p>The array literal is more predictable, as most developers use it. Most array usage out there will be using the literal, and there is value in having your code match up with what other developers use.</p>\n\n<h1>for empty arrays, use <code>[]</code></h1>\n\n<pre class=\"lang-js prettyprint-override\"><code>var ns = [];\nvar names = [ 'john', 'brian' ];\n</code></pre>\n\n<p>As shown <a href=\"http://jsperf.com/array-constructor-versus-literal\">here</a>, using the literal for empty and a couple of known elements is fatster than the Array constructor.</p>\n\n<h1>for an array of known size, use <code>new Array(size)</code></h1>\n\n<p>If the size is known, then using the Array constructor significantly improves performance. However it also means you have to deal with an array which already has 'undefined' filling \nall it's values.</p>\n\n<p>As shown <a href=\"http://jsperf.com/array-filling-speed/\">here</a></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// fill an array with 100 numbers\nvar ns = new Array( 100 );\nfor ( var i = 0; i &lt; 100; i++ ) {\n    ns[i] = i;\n}\n</code></pre>\n\n<p>This also works for <a href=\"http://jsperf.com/array-filling-speed/2\">very small arrays too</a>.</p>\n",
                    "is_accepted": false,
                    "score": 23
                }
            ],
            "body": "<p>When I need to declare a new array I use this notation</p>\n\n<pre><code>var arr = new Array();\n</code></pre>\n\n<p>But when testing online, for example on <a href=\"http://jsbin.com/#javascript,html\">jsbin</a>, a warning signals me to \"Use the array literal notation [].\"</p>\n\n<p>I didn't find a reason to avoid using the constructor. Is in some way less efficient than using <code>[]</code>? Or is it bad practice?</p>\n\n<p>Is there a good reason to use <code>var arr = [];</code> instead of <code>var arr = new Array();</code>?</p>\n",
            "last_activity_date": 1348104278,
            "question_id": 11500492,
            "score": 164,
            "tags": [
                "javascript"
            ],
            "title": "What are the best practices to follow when declaring an array in Javascript? "
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You want your 'el' to reference an element that contains a child element that has any event that triggers a change in your view.  Could be as wide as a \"body\" tag.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A views el is where all the event binding takes place. You don't have to use it but if you want backbone to fire events you need to do your rendering work on the el. A views el is a DOM element but it does not have to be a pre-existing element. It will be created if you do not pull one from your current page, but you will have to insert it into the page if you ever want to see it do anything.</p>\n\n<p>An example:\nI have a view that creates individual items </p>\n\n<pre><code>window.ItemView = Backbone.View.extend({\n    tagName: \"li\", //this defaults to div if you don't declare it.\n    template: _.template(\"&lt;p&gt;&lt;%= someModelKey %&gt;&lt;/p&gt;\"),\n    events: {\n         //this event will be attached to the model elements in\n         //the el of every view inserted by AppView below\n        \"click\": \"someFunctionThatDoesSomething\"\n    },\n    initialize: function () { \n        _.bindAll(this, \"render\");\n        this.render();\n    },\n    render: function () {\n        this.el.innerHTML = this.template(this.model.toJSON());\n        return this;\n    }\n});\nwindow.AppView = Backbone.View.extend({\n    el: $(\"#someElementID\"), //Here we actually grab a pre-existing element\n    initialize: function () { \n        _.bindAll(this, \"render\");\n        this.render(new myModel());\n    },\n    render: function (item) { \n        var view = new ItemView({ model: item });\n        this.el.append(view.render().el);\n    }\n});\n</code></pre>\n\n<p>The first view just creates the list items and the second view actually places them on the page. I think this is pretty similar to what happens in the <a href=\"http://documentcloud.github.com/backbone/docs/todos.html\">ToDo example</a> on the backbone.js site. I think convention is to render you content into the el. So the el serves as a landing place or a container for placing your templated content. Backbone then binds its events to the model data inside of it. </p>\n\n<p>When you create a view you can manipulate the el in four ways using <code>el:</code>, <code>tagName:</code>, <code>className:</code>, and <code>id:</code>. If none of these are declared el defaults to a div without id or class. It is also not associated with the page at this point. You can change the tag to something else by using using tagName (e.g. <code>tagName: \"li\"</code>, will give you an el of <code>&lt;li&gt;&lt;/li&gt;</code>). You can set the id and class of el likewise. Still el is not a part of your page. The el property allows you to do very fine grain manipulation of the el object. Most of the time I use an <code>el: $(\"someElementInThePage\")</code> which actually binds all the manipulation you do to el in your view to the current page. Otherwise if you want to see all the hard work you have done in your view show up on the page you will need to insert/append it to the page somewhere else in your view (probably in render). I like to think of el as the container that all your view manipulates.</p>\n",
                    "is_accepted": true,
                    "score": 89
                },
                {
                    "body": "<p>Bit old now, but I was confused as well, and so for other people that get here, this fiddle might help - <a href=\"http://jsfiddle.net/hRndn/2/\" rel=\"nofollow\">http://jsfiddle.net/hRndn/2/</a></p>\n\n<pre><code>var MyView = Backbone.View.extend({\n\n    events: {\n        \"click .btn\" : \"sayHello\",\n    },\n\n    sayHello : function() {\n        alert(\"Hello\");\n    },\n\n\n    render : function() {\n        this.$el.html(\"&lt;input type='button' class='btn' value='Say Hello'&gt;&lt;/input&gt;\");\n\n    }\n});\n\n$(function() {\n    myView = new MyView({el:\"#parent_id\"});\n    myView.render();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am building my first app with Backbone.js and really like it so far. The documentation is a bit out of date and spread out, but so far I could solve all problems I ran into.\nOne thing I am wondering since I read the first tutorial, though: how should a view's \"el\" be handled?\nIt has to be set, otherwise events don't fire (see <a href=\"http://stackoverflow.com/questions/4909564/backbone-js-why-isnt-this-event-bound\">here</a>).</p>\n\n<p>But should it be a element that is already on the page?\nIn my app I render a (jQuery Templates) template into a Fancybox. What should the \"el\" be in that case?</p>\n\n<p>None of the tutorials or introductions I read picked up on that...</p>\n\n<p>Thoughts and comments welcome...</p>\n",
            "last_activity_date": 1391496455,
            "question_id": 5624929,
            "score": 78,
            "tags": [
                "javascript",
                "backbone.js",
                "backbone-views"
            ],
            "title": "Backbone.View &quot;el&quot; confusion"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><em>Updated March, 2013</em></p>\n\n<p>You can find the current DOM documents at <a href=\"http://www.w3.org/DOM/DOMTR\">W3C Document Object Model (DOM) Technical Reports</a> (individual links below). Unfortunately I can no longer find an official pdf from Mozilla of their <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference\">Javascript Reference</a></p>\n\n<p>This will get you started, I think: </p>\n\n<ol>\n<li><a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\">ECMA-262 ECMAScript Language Specification</a> (ECMA) aka Javascript</li>\n<li><a href=\"http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/DOM3-Core.pdf\">DOM3 CORE</a> or <a href=\"http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/DOM2-Core.pdf\">DOM2 CORE</a> (W3C)</li>\n<li><a href=\"http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/DOM2-HTML.pdf\">DOM2 HTML</a> (W3C)</li>\n<li><a href=\"http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/DOM2-Style.pdf\">DOM2 CSS</a> (W3C)</li>\n<li><a href=\"http://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/DOM2-Events.pdf\">DOM2 Events</a> (W3C)</li>\n<li><a href=\"http://www.w3.org/TR/2004/REC-DOM-Level-3-Val-20040127/\">DOM3 Validation</a> (W3C)</li>\n<li><a href=\"http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407/\">DOM3 Load and Save</a> (W3C)</li>\n<li><a href=\"http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113/traversal.html\">DOM2 Traversal</a> (W3C)</li>\n<li><a href=\"http://www.planetpdf.com/forumarchive/CoreRefrenceJS15.pdf\">Javascript 1.5</a> (unofficial pdf of the Mozilla info, not updated)</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>How about finding a copy of both (or either one of) <a href=\"http://rads.stackoverflow.com/amzn/click/0596101996\" rel=\"nofollow\">\nJavaScript: The Definitive Guide by David Flanagan</a> and <a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\" rel=\"nofollow\">JavaScript: The Good Parts </a> ?</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"https://github.com/rgarcia/dochub\">https://github.com/rgarcia/dochub</a> is a node application that can be installed locally which serves up a pile of relevant web development documentation.  </p>\n\n<p>Online version of the app here: <a href=\"http://dochub.io/\">http://dochub.io/</a>  </p>\n\n<p>This works great for me while travelling.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Here's an update to this problem. You can use this app called Dash.</p>\n\n<p><a href=\"http://kapeli.com/dash\">http://kapeli.com/dash</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I am going offline for a few days, and would like to bring the javascript documentation with me on my laptop :)</p>\n\n<p>Does anyone know of a place where I can get downloadable reference documentation for javascript, preferably for firefox? </p>\n\n<p>I have cheked <a href=\"http://www.mozilla.org/docs/web-developer/\">the mozilla site</a>, but have only been able to find an online version.</p>\n\n<p>Thanks, Jonas</p>\n",
            "last_activity_date": 1381958802,
            "question_id": 401969,
            "score": 45,
            "tags": [
                "javascript",
                "documentation",
                "reference",
                "download"
            ],
            "title": "Javascript reference for offline browsing"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use PHP to get an array of the color palette like so:</p>\n\n<pre><code>&lt;?php \nfunction colorPalette($imageFile, $numColors, $granularity = 5) \n{ \n   $granularity = max(1, abs((int)$granularity)); \n   $colors = array(); \n   $size = @getimagesize($imageFile); \n   if($size === false) \n   { \n      user_error(\"Unable to get image size data\"); \n      return false; \n   } \n   $img = @imagecreatefromjpeg($imageFile);\n   // Andres mentioned in the comments the above line only loads jpegs, \n   // and suggests that to load any file type you can use this:\n   // $img = @imagecreatefromstring(file_get_contents($imageFile)); \n\n   if(!$img) \n   { \n      user_error(\"Unable to open image file\"); \n      return false; \n   } \n   for($x = 0; $x &lt; $size[0]; $x += $granularity) \n   { \n      for($y = 0; $y &lt; $size[1]; $y += $granularity) \n      { \n         $thisColor = imagecolorat($img, $x, $y); \n         $rgb = imagecolorsforindex($img, $thisColor); \n         $red = round(round(($rgb['red'] / 0x33)) * 0x33); \n         $green = round(round(($rgb['green'] / 0x33)) * 0x33); \n         $blue = round(round(($rgb['blue'] / 0x33)) * 0x33); \n         $thisRGB = sprintf('%02X%02X%02X', $red, $green, $blue); \n         if(array_key_exists($thisRGB, $colors)) \n         { \n            $colors[$thisRGB]++; \n         } \n         else \n         { \n            $colors[$thisRGB] = 1; \n         } \n      } \n   } \n   arsort($colors); \n   return array_slice(array_keys($colors), 0, $numColors); \n} \n// sample usage: \n$palette = colorPalette('rmnp8.jpg', 10, 4); \necho \"&lt;table&gt;\\n\"; \nforeach($palette as $color) \n{ \n   echo \"&lt;tr&gt;&lt;td style='background-color:#$color;width:2em;'&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;#$color&lt;/td&gt;&lt;/tr&gt;\\n\"; \n} \necho \"&lt;/table&gt;\\n\";\n</code></pre>\n\n<p>Which gives you an array whose values are higher for how often that color has been used.</p>\n\n<p><strong>EDIT</strong>\nA commenter asked how to use this on all files in a directory, here it is:</p>\n\n<pre><code>    if ($handle = opendir('./path/to/images')) {\n\n        while (false !== ($file = readdir($handle))) {\n           $palette = colorPalette($file, 10, 4);\n           echo \"&lt;table&gt;\\n\"; \n           foreach($palette as $color) { \n               echo \"&lt;tr&gt;&lt;td style='background-color:#$color;width:2em;'&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;#$color&lt;/td&gt;&lt;/tr&gt;\\n\"; \n           } \n           echo \"&lt;/table&gt;\\n\";\n        }\n        closedir($handle);\n    }\n</code></pre>\n\n<p>might not want to do this on too many files, but it's your server.</p>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>Start with PIL.  <a href=\"http://www.pythonware.com/products/pil/\" rel=\"nofollow\">http://www.pythonware.com/products/pil/</a></p>\n\n<p>Open the Image object.  Use the <code>getdata</code> method to get all pixels.  Average the values you get back.</p>\n\n<p>Something like this.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/2270874/image-color-detection-using-python\">http://stackoverflow.com/questions/2270874/image-color-detection-using-python</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A shorter solution for true color image would be to scale it down to 1x1 pixel size and sample the color at that pixel:</p>\n\n<p>$scaled = imagescale($img, 1, 1, IMG_BICUBIC);\n$meanColor = imagecolorat($img, 0, 0);</p>\n\n<p>...but I haven't tested this myself.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a jpg image.</p>\n\n<p>I need to know \"overall average\" the color of the image. At first glance there can use the histogram of the image (channel RGB).</p>\n\n<p>At work I use mostly JavaScript and PHP (a little Python) therefore welcomed the decision in these languages. Maybe ther are library for working with images that address similar problems.</p>\n\n<p>I do not need to dynamically determine the color of the picture. I need just once go through the entire array of images and determine the color of each separately (this information I will remember for future use).</p>\n",
            "last_activity_date": 1414608128,
            "question_id": 3468500,
            "score": 34,
            "tags": [
                "php",
                "javascript",
                "python",
                "image-processing"
            ],
            "title": "Detect &quot;overall average&quot; color of the picture"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<pre><code>typeof(callback) == \"function\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 186
                },
                {
                    "body": "<p>try </p>\n\n<pre><code>if (typeof(callback) == 'function')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>typeof(callback) == \"function\"</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>try:</p>\n\n<pre><code>if (!(typeof(callback)=='undefined')) {...}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function something_cool(text, callback){\n    alert(text);\n    if(typeof(callback)=='function'){ \n        callback(); \n    };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>if (callback &amp;&amp; typeof(callback) == \"function\")\n</code></pre>\n\n<p>Note that callback (by itself) evaluates to <code>false</code> if it is <code>undefined</code>, <code>null</code>, <code>0</code>, or <code>false</code>. Comparing to <code>null</code> is overly specific.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>All of the current answers use a literal string, which I prefer to not have in my code if possible - this does not:</p>\n\n<pre><code>function isFunction(possibleFunction) {\n  return typeof(possibleFunction) === typeof(Function);\n}\n</code></pre>\n\n<p>Personally, I try to reduce the number of strings hanging around in my code...</p>\n\n<hr>\n\n<p>Also, while I am aware that <code>typeof</code> is an operator and not a function, there is little harm in using syntax that makes it appear as the latter.</p>\n",
                    "is_accepted": false,
                    "score": 151
                },
                {
                    "body": "<pre><code>if ('function' === typeof callback) ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Those methods to tell if a function is implemented also fail if variable is not defined so we are using something more powerful that supports receiving an string:</p>\n\n<pre><code>function isFunctionDefined(functionName) {\n    if(eval(\"typeof(\" + functionName + \") == typeof(Function)\")) {\n        return true;\n    }\n}\n\nif (isFunctionDefined('myFunction')) {\n    myFunction(foo);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>callback instanceof Function\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>New to JavaScript I am not sure if the behaviour has changed but the solution given by Jason Bunting (6 years ago) won't work if possibleFunction is not defined. </p>\n\n<pre><code>function isFunction(possibleFunction) {\n  return (typeof(possibleFunction) == typeof(Function));\n}\n</code></pre>\n\n<p>This will throw a <code>ReferenceError: possibleFunction is not defined</code> error as the engine tries to resolve the symbol possibleFunction (as mentioned in the comments to Jason's answer)</p>\n\n<p>To avoid this behaviour you can only pass the name of the function you want to check if it exists. So</p>\n\n<pre><code>var possibleFunction = possibleFunction || {};\nif (!isFunction(possibleFunction)) return false;\n</code></pre>\n\n<p>This sets a variable to be either the function you want to check or the empty object if it is not defined and so avoids the issues mentioned above. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I might do</p>\n\n<pre><code>try{\n    callback();\ncatch(e){};\n</code></pre>\n\n<p>I know there's an accepted answer, but no one suggested this. I'm not really sure if this fits the description of idiomatic, but it works for all cases.</p>\n\n<p>In newer js engines a <code>finally</code> can be used instead.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you use <a href=\"http://underscorejs.org\" rel=\"nofollow\">http://underscorejs.org</a>, you have:\n<a href=\"http://underscorejs.org/#isFunction\" rel=\"nofollow\">http://underscorejs.org/#isFunction</a></p>\n\n<pre><code>_.isFunction(callback);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do you tell if a function in Javascript is defined? </p>\n\n<p>I want to do something like </p>\n\n<pre><code>function something_cool(text, callback){\n    alert(text);\n    if( callback != null ){ callback(); };\n}\n</code></pre>\n\n<p>but that gets me a 'callback is not a function' error when callback is not defined.</p>\n",
            "last_activity_date": 1422478906,
            "question_id": 85815,
            "score": 129,
            "tags": [
                "javascript",
                "reflection"
            ],
            "title": "How to tell if a Javascript function is defined"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I think you don't have a <code>grunt.js</code> file in your project directory.  Use <code>grunt:init</code>, which gives you options such as <code>jQuery, node,commonjs</code>.  Select what you want, then proceed.  This really works. For more information you can visit <a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/meeting-grunt-the-build-tool-for-javascript/\">this</a>.</p>\n\n<p>Do this: </p>\n\n<pre><code> 1. npm install -g grunt\n 2. grunt:init  ( you will get following options ):\n      jquery: A jQuery plugin\n      node: A Node module\n      commonjs: A CommonJS module\n      gruntplugin: A Grunt plugin\n      gruntfile: A Gruntfile (grunt.js)\n 3 .grunt init:jquery (if you want to create a jQuery related project.).\n</code></pre>\n\n<p>It should work.</p>\n\n<p>Solution for v1.4:</p>\n\n<pre><code>1. npm install -g grunt-cli\n2. npm init\n   fill all details and it will create a package.json file.\n3. npm install grunt (for grunt dependencies.)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 104
                },
                {
                    "body": "<h2>Install Grunt in node_modules rather than globally</h2>\n\n<p><code>Unable to find local Grunt</code> likely means that you have installed Grunt globally. </p>\n\n<p>The Grunt CLI insists that you install grunt in your local node_modules directory, so Grunt is local to your project. </p>\n\n<p>This will fail:</p>\n\n<pre><code>npm install -g grunt\n</code></pre>\n\n<p>Do this instead:</p>\n\n<pre><code>npm install grunt --save-dev\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>If you already have a file <code>package.json</code> in the project and it contains <code>grunt</code> in dependency, </p>\n\n<pre><code>  \"devDependencies\": {\n    \"grunt\": \"~0.4.0\",\n</code></pre>\n\n<p>Then you can run <code>npm install</code> to resolve the issue</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Do</p>\n\n<pre><code>npm install\n</code></pre>\n\n<p>to install Grunt locally in <code>./node_modules</code> (and everything else specified in the <code>package.json</code> file)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I removed the old grunt first,and I install the new grunt.But I got an error:</p>\n\n<pre>\nD:\\www\\grunt-test\\grunt\ngrunt-cli: The grunt command line interface. (v0.1.4)\n\nFatal error: Unable to find local grunt.\n\nIf you're seeing this message, either a Gruntfile wasn't found or grunt hasn't been installed locally to your project. For more information about installing and configuring grunt, please see the Getting Started guide: http://gruntjs.com/getting-started\n</pre>\n\n<p>Is there haven't a grunt in my system path, or something else? I tried to re-install it for few times.</p>\n",
            "last_activity_date": 1426069390,
            "question_id": 13925916,
            "score": 107,
            "tags": [
                "javascript",
                "gruntjs"
            ],
            "title": "Fatal error: Unable to find local grunt"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>Note 4/16/2011:</strong> stream.publish seems to have been deprecated, There's a new way to do this: <a href=\"http://developers.facebook.com/docs/reference/dialogs/feed/\">http://developers.facebook.com/docs/reference/dialogs/feed/</a></p>\n\n<p>You can use something like this to publish to a wall, the user will need to confirm before it get sent.\nDon't forget that you'll need to use FB.init and include the JS SDK link.</p>\n\n<pre><code> function fb_publish() {\n     FB.ui(\n       {\n         method: 'stream.publish',\n         message: 'Message here.',\n         attachment: {\n           name: 'Name here',\n           caption: 'Caption here.',\n           description: (\n             'description here'\n           ),\n           href: 'url here'\n         },\n         action_links: [\n           { text: 'Code', href: 'action url here' }\n         ],\n         user_prompt_message: 'Personal message here'\n       },\n       function(response) {\n         if (response &amp;&amp; response.post_id) {\n           alert('Post was published.');\n         } else {\n           alert('Post was not published.');\n         }\n       }\n     );  \n  }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>Considering that you have a proxy to make cross domain calls, you can simply do this...</p>\n\n<p>In this example, YourProxyMethod takes a jQuery.ajax like hash, makes a server side post &amp; returns the response in success/error callbacks. Any regular proxy should do.</p>\n\n<p>The trick is to include app_id and access_token in the URL irself.\nAlso, your FB app should have sufficient permissions to make this call.</p>\n\n<pre><code>YourProxyMethod({\n  url : \"https://graph.facebook.com/ID/feed?app_id=APP_ID&amp;access_token=ACCESS_TOKEN\",\n  method : \"post\",\n  params : {\n    message : \"message\",\n    name : \"name\",\n    caption : \"caption\",\n    description  : \"desc\"\n  },\n  success : function(response) {\n    console.log(response);\n  },\n  error : function(response) {\n    console.log(\"Error!\");\n    console.log(response);\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"http://developers.facebook.com/docs/reference/dialogs/feed\">Post on wall</a> will show a dialog box to share the message on wall or not. But I wanted to post the message silently on user's wall, assuming that user had already given \"Post on wall\" permission.</p>\n\n<pre><code>FB.api('/me/feed', 'post', {\n      message:'my_message',\n      link:YOUR_SITE_URL,\n      picture:picture_url\n      name: 'Post name',\n      description: 'description'\n },function(data) {\n      console.log(data);\n });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>Hey guys,\nNow I know this question has been asked similarly a lot of times but I'm really struggling here.</p>\n\n<p>Its a simple thing I need to do:</p>\n\n<p>I would like to post a message onto a users wall saying \"I scored 8/10 on objects game\" then a URL</p>\n\n<p>Thats it. I don't mind if facebook needs to authenticate and then post the message. and I really don't want to have to use the full API - as I don't want to handle user login details.</p>\n\n<p>Is it possible using the new Graph API and javascript. </p>\n\n<p>Uber thanks guys > this'll allow me to sleep tonight.</p>\n",
            "last_activity_date": 1353416439,
            "question_id": 2724977,
            "score": 34,
            "tags": [
                "javascript",
                "facebook",
                "facebook-graph-api"
            ],
            "title": "Using Facebook Graph to simply post a wall message with just javascript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Javascript is very flexible with regards to checking for \"null\" values.  I'm guessing you're actually looking for empty strings, in which case this simpler code will work:</p>\n\n<pre><code>if(!pass || !cpass || !email || !cemail || !user){\n</code></pre>\n\n<p>Which will check for empty strings (<code>\"\"</code>), <code>null</code>, <code>undefined</code>, <code>false</code> and the numbers <code>0</code> and <code>NaN</code></p>\n",
                    "is_accepted": true,
                    "score": 201
                },
                {
                    "body": "<p>Firstly, you have a return statement without a function body. Chances are that that will throw an error.</p>\n\n<p>A cleaner way to do your check would be to simply use the ! operator:</p>\n\n<pre><code>if (!pass || !cpass || !email || !cemail || !user) {\n\n    alert(\"fill all columns\");\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>you can use try catch finally</p>\n\n<pre><code> try {\n     document.getElementById(\"mydiv\").innerHTML = 'Success' //assuming \"mydiv\" is undefined\n } catch (e) {\n\n     if (e.name.toString() == \"TypeError\") //evals to true in this case\n     //do something\n\n } finally {}   \n</code></pre>\n\n<p>you can also <code>throw</code> your own errors. See <a href=\"http://www.javascriptkit.com/javatutors/trycatch2.shtml\" rel=\"nofollow\">this</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>just replace the <code>==</code> with <code>===</code> in all places.</p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>To check for null <strong>SPECIFICALLY</strong> you would use this:</p>\n\n<pre><code>if(variable === null &amp;&amp; typeof variable === \"object\")\n</code></pre>\n\n<p>This test will <strong>ONLY</strong> pass for <code>null</code> and will not pass for <code>\"\"</code>, <code>undefined</code>, <code>false</code>, <code>0</code>, or <code>NaN</code>.</p>\n\n<p>The rest of this is in response to inorganik's comment, Yes, you can check each one individually.</p>\n\n<p>You need to implement use of the <code>absolutely equals: ===</code> and <code>typeof</code> to be absolutely sure with your checks.</p>\n\n<p><a href=\"http://jsfiddle.net/WebWanderer/8n9vtyek/\">I've created a <strong>JSFiddle</strong> here to show all of the individual tests working</a></p>\n\n<p>Here is all of the output of the tests:</p>\n\n<pre><code>Null Test:\n\nif(variable === null &amp;&amp; typeof variable === \"object\")\n\n- variable = \"\"; (false) typeof variable = string\n\n- variable = null; (true) typeof variable = object\n\n- variable = undefined; (false) typeof variable = undefined\n\n- variable = false; (false) typeof variable = boolean\n\n- variable = 0; (false) typeof variable = number\n\n- variable = NaN; (false) typeof variable = number\n\n\n\nEmpty String Test:\n\nif(variable === \"\" &amp;&amp; typeof variable === \"string\")\n\n- variable = \"\"; (true) typeof variable = string\n\n- variable = null; (false) typeof variable = object\n\n- variable = undefined; (false) typeof variable = undefined\n\n- variable = false; (false) typeof variable = boolean\n\n- variable = 0; (false) typeof variable = number\n\n- variable = NaN; (false) typeof variable = number\n\n\n\n\nUndefined Test:\n\nif(variable === undefined &amp;&amp; typeof variable === \"undefined\")\n\n- variable = \"\"; (false) typeof variable = string\n\n- variable = null; (false) typeof variable = object\n\n- variable = undefined; (true) typeof variable = undefined\n\n- variable = false; (false) typeof variable = boolean\n\n- variable = 0; (false) typeof variable = number\n\n- variable = NaN; (false) typeof variable = number\n\n\n\nFalse Test:\n\nif(variable === false &amp;&amp; typeof variable === \"boolean\")\n\n- variable = \"\"; (false) typeof variable = string\n\n- variable = null; (false) typeof variable = object\n\n- variable = undefined; (false) typeof variable = undefined\n\n- variable = false; (true) typeof variable = boolean\n\n- variable = 0; (false) typeof variable = number\n\n- variable = NaN; (false) typeof variable = number\n\n\n\nZero Test:\n\nif(variable === 0 &amp;&amp; typeof variable === \"number\")\n\n- variable = \"\"; (false) typeof variable = string\n\n- variable = null; (false) typeof variable = object\n\n- variable = undefined; (false) typeof variable = undefined\n\n- variable = false; (false) typeof variable = boolean\n\n- variable = 0; (true) typeof variable = number\n\n- variable = NaN; (false) typeof variable = number\n\n\n\nNaN Test:\n\nif(!parseInt(variable) &amp;&amp; variable != 0 &amp;&amp; typeof variable === \"number\")\n\n- variable = \"\"; (false) typeof variable = string\n\n- variable = null; (false) typeof variable = object\n\n- variable = undefined; (false) typeof variable = undefined\n\n- variable = false; (false) typeof variable = boolean\n\n- variable = 0; (false) typeof variable = number\n\n- variable = NaN; (true) typeof variable = number\n</code></pre>\n\n<p>As you can see, its a little more difficult to test against <code>NaN</code>;</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>underscore: <a href=\"http://underscorejs.org/#isNull\" rel=\"nofollow\">_.isNull</a></p>\n\n<pre><code>_.isNull(null);\n=&gt; true\n_.isNull(undefined);\n=&gt; false\n</code></pre>\n\n<p>jQuery: <a href=\"https://api.jquery.com/jQuery.type/\" rel=\"nofollow\">jQuery.type</a></p>\n\n<pre><code>jQuery.type( null ) === \"null\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is a comment on WebWanderer's solution regarding checking for NaN (I don't have enough rep yet to leave a formal comment).  The solution reads as </p>\n\n<pre><code>if(!parseInt(variable) &amp;&amp; variable != 0 &amp;&amp; typeof variable === \"number\")\n</code></pre>\n\n<p>but this will fail for rational numbers which would round to <code>0</code>, such as <code>variable = 0.1</code>.  A better test would be:</p>\n\n<pre><code>if(isNaN(variable) &amp;&amp; typeof variable === \"number\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>to check for <strong>undifined</strong> and <strong>null</strong> in javascript you need just to whrite the folowing :</p>\n\n<pre><code>if (!var) {\n        console.log(\"var IS null or undefined\");\n} else {\n        console.log(\"var is NOT null or undefined\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>How can I check for null values in javascript? I wrote the code below but it didn\u2019t work.</p>\n\n<pre><code>if (pass == null || cpass == null || email == null || cemail == null || user == null) {      \n\n    alert(\"fill all columns\");\n    return false;  \n\n}   \n</code></pre>\n\n<p>And how can I find errors in my javascript programs?</p>\n",
            "last_activity_date": 1424861321,
            "question_id": 6003884,
            "score": 110,
            "tags": [
                "javascript",
                "null",
                "compare"
            ],
            "title": "How do I check for null values in javascript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Coffeescript really just makes writing JS easier. You end up with cleaner, more efficient code. </p>\n\n<p>That being said, you still can only do whatever you can do in vanilla JS. Once you use coffeescript enough, it does become a lot easier to write (good) JS. </p>\n\n<p>So if you haven't used JS a ton, I'd suggest learning coffescript instead. You'll get better, cleaner, less buggy code. If you're already really fluent in JS, it might not be a good idea to start using coffeescript on a \"real\" app.</p>\n\n<p>(Also, coffeescript does irk me a bit in that it seems to encourage rather \"floofy\" code. I don't know if it's a good thing or a bad thing, but it seems an extreme case of TMTOWTDI)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>We've started to use CoffeeScript in our product - a non-public facing website which is basically an app for browsing certain kinds of data.\nWe use CoffeeScript as a command-line compiler (not on the server, which we'd eventually like to do).</p>\n\n<h2><strong>PROS</strong> (for us):</h2>\n\n<ul>\n<li>It gets rid of a lot of needless clutter in javascript (eg braces, semi-colons, some brackets) to the extent that the code is cleaner & easier to comprehend at-a-glance than javascript\n<li>20-30% less lines of code than javascript (to do exactly the same thing)</li>\n<li>CoffeeScript not only removes noise but adds keywords, classes, and features like heredocs to make coding cleaner and somewhat more enjoyable</li>\n<li>Given the previous points, it is undoubtedly faster to code in CoffeeScript once you learn the ropes</li>\n</ul>\n\n<h2><strong>CONS</strong></h2>\n\n<ul>\n<li> When using the command-line compiler: to debug, you're looking at different code when solving the problem (javascript) as when writing the fix (coffeescript). However, somewhat unbelievably, our CoffeeScript is so awesome we've never needed to debug it!\n</li>\n</ul>\n\n<p>Importantly, we can turn back at anytime. Our coffeescript compiler is just producing readable javascript, so if anyone changes their mind or can't figure something out, then we can just drop back to using the javascript that coffeescript produced - and keep coding.</p>\n",
                    "is_accepted": true,
                    "score": 109
                },
                {
                    "body": "<p>We use coffeescript for <em>all</em> of the javascript in <a href=\"http://busyconf.com\">BusyConf</a>.  A large portion of BusyConf is a client side application that runs in browers, including support for offline mode.</p>\n\n<p>All of our coffeescript code is fully tested.  The tests themselves are written in coffeescript, and use the <a href=\"http://docs.jquery.com/Qunit\">Qunit</a> framework (which is written in javascript).  We also wrote an extension to the Qunit framework that makes the tests nicer.  The Qunit extension is written in <a href=\"http://jashkenas.github.com/coffee-script/\">CoffeeScript</a>.  Our application has a mobile version which is written in CoffeeScript, and it uses the <a href=\"http://www.sencha.com/products/touch/\">Sencha Touch</a> framework (which is written in javascript).</p>\n\n<p>The take away from that is that you can freely intermix javascript dependencies in your application, but all of the code you write (your application code, tests, etc) can (and should!) be coffeescript.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Coffeescript was used in the Ars Technica reader for iPad <a href=\"http://arstechnica.com/apple/news/2010/11/introducing-the-ars-technica-reader-for-ipad.ars\">http://arstechnica.com/apple/news/2010/11/introducing-the-ars-technica-reader-for-ipad.ars</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I really love Coffeescript these days.  Essentially the entire <a href=\"http://www.hoteltonight.com/\">HotelTonight</a> iPhone application is written in it (using Appcelerator Titanium, which lets you write \"native\" apps in JavaScript - they are not web apps, say like Phonegap).  I chose to use Coffeescript in this case because it makes organizing and maintaining a large amount of JS a lot easier.  I also find it simply a lot more pleasurable to write code with Coffeescript (vs. JavaScript).  We also use Coffeescript for the JS in our Rails app, but this is incredibly minor/small amount of code in relation to the entire phone app.</p>\n\n<p>The pros mostly have to do with just being a nicer syntax, but also that it standardizes an OO mechanism, and then adds some nice additions (list comprehensions, some scope things, etc.).</p>\n\n<p>The cons are almost zero for me.  The primary one is that it's an extra layer to debug.  You will need to look at the generated JS (which is VERY readable and nice), and then map that to your Coffeescript code.  For us, this hasn't been an issue at all, but YMMV.</p>\n\n<p>In the end, my take is, there is zero risk in terms of using it on a production app, so, don't let that be a blocker.  Then, go try it out.  Write some code with it, compare that to what you'd write in JS, look at the generated code to see if you are comfy with being able to read that for debugging needs.  Also, hang out in the #coffeescript IRC, people are good there.  And finally, see how it would integrate with your app, e.g. what's your \"build\" process (e.g. for Rails, try Barista, for something standalone, just use the included \"coffee -w\", etc.).</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Almost a year later, it's worth posting some updates:</p>\n\n<ol>\n<li>Ruby on Rails 3.1 is incorporating official CoffeeScript support, which means it's going to see far more real-world use. I gave a talk at RailsConf last month, where most of the attendees hadn't heard of CoffeeScript before and\u2014given dhh's strong endorsement\u2014were eager to get into it.</li>\n<li>There's a book on CoffeeScript, currently in eBook and soon to be in print from The Pragmatic Bookshelf. It's called <a href=\"http://pragprog.com/titles/tbcoffee/coffeescript\">CoffeeScript: Accelerated JavaScript Development</a>, and it's by yours truly. It's based on CoffeeScript 1.1.1.</li>\n<li>The language has actually changed very little in the six months between 1.0 and 1.1.1; nearly all of the changes qualify as \"bugfixes.\" I had to make very few tweaks to the code in the book for the transition from 1.0.1 to 1.1.1. However, I'm sure the language will see more significant changes in the future.</li>\n</ol>\n\n<p>The most definitive list of CoffeeScript projects is on the CoffeeScript wiki's <a href=\"https://github.com/jashkenas/coffee-script/wiki/In-The-Wild\">In the Wild</a> page.</p>\n\n<p>I'd say that most of the production use of CoffeeScript so far is in conjunction with Appcelerator to create iPhone/Android apps. (Wynn Netherland of The Changelog blurbed my book by describing CoffeeScript as \"my secret weapon for iOS, Android, and WebOS mobile development\"), but there's going to be a lot more use in production Rails apps\u2014and, I hope, elsewhere\u2014in the coming months.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Note that although there is a compiler, you don't get static checking due to JavaScript's dynamic nature. As written in the FAQ:</p>\n\n<blockquote>\n  <p>Static Analysis</p>\n  \n  <p>CoffeeScript uses a straight source-to-source compiler. No type\n  checking is performed, and we can't work out if a variable even exists\n  or not. This means that we can't implement features that other\n  languages can build in natively without costly runtime checks. As a\n  result, any feature which relies on this kind of analysis won't be\n  considered.</p>\n</blockquote>\n\n<p>IDE support is less mature than that of JavaScript (Cloud9 has syntax highlight support, but Eclipse JSDT has refactorings and more): <a href=\"http://stackoverflow.com/questions/4084167/ide-or-its-add-in-for-coffescript-programming\">IDE (or its add-in) for CoffeScript programming</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p><a href=\"http://jashkenas.github.com/coffee-script/\">Coffeescript</a> looks pretty cool. Has anyone used it? What are its Pros &amp; Cons?</p>\n",
            "last_activity_date": 1313058095,
            "question_id": 2954557,
            "score": 89,
            "tags": [
                "javascript",
                "coffeescript"
            ],
            "title": "Has anyone used Coffeescript for a production application?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Looks like a regular expression is the way to go:</p>\n\n<pre><code>var isInt = /^\\+?\\d+$/.test('the string');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Two answers for you:</p>\n\n<ul>\n<li><p>Based on parsing</p></li>\n<li><p>Regular expression</p></li>\n</ul>\n\n<p>Note that in both cases, I've interpreted \"positive integer\" to include <code>0</code>, even though <code>0</code> is not positive. I include notes if you want to disallow <code>0</code>.</p>\n\n<h3>Based on Parsing</h3>\n\n<p>If you want it to be a normalized decimal integer string over a reasonable range of values, you can do this:</p>\n\n<pre><code>function isNormalInteger(str) {\n    var n = ~~Number(str);\n    return String(n) === str &amp;&amp; n &gt;= 0;\n}\n</code></pre>\n\n<p><a href=\"http://jsbin.com/uximig\">Live testbed</a> | <a href=\"http://jsbin.com/uximig/edit\">source</a></p>\n\n<p>If you want to disallow <code>0</code>, just change <code>&gt;= 0</code> to <code>&gt; 0</code>.</p>\n\n<p>How that works:</p>\n\n<ol>\n<li><p><code>Number(str)</code>: Convert <code>str</code> to a number; the number may well have a fractional portion, or may be <code>NaN</code>.</p></li>\n<li><p><code>~~</code>: Truncate the number (chops off any fractional portion).</p></li>\n<li><p><code>String(...)</code>: Converts the result back into a normal decimal string. For really big numbers, this will go to scientific notation, which may break this approach. (I don't quite know where the split is, <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-9.8.1\">the details are in the spec</a>, but for whole numbers I believe it's at the point you've exceeded 21 digits [by which time the number has become very imprecise, as IEEE-754 double-precision numbers only have roughtly 15 digits of precision..)</p></li>\n<li><p><code>... === str</code>: Compares that to the original string.</p></li>\n<li><p><code>n &gt;= 0</code>: Check that it's positive.</p></li>\n</ol>\n\n<p>Note that this fails for the input <code>\"+1\"</code> and any input in scientific notation that doesn't turn back into the same scientific notation at the <code>String(...)</code> stage. The former is an easy fix, the latter not so much, but only relevant for very, very large numbers.</p>\n\n<h3>Regular Expression</h3>\n\n<p>The other approach is to test the characters of the string via a regular expression, if your goal is to just allow (say) an optional <code>+</code> followed by either <code>0</code> or a string in normal decimal format:</p>\n\n<pre><code>function isNormalInteger(str) {\n    return /^\\+?(0|[1-9]\\d*)$/.test(str);\n}\n</code></pre>\n\n<p><a href=\"http://jsbin.com/ifipax\">Live testbed</a> | <a href=\"http://jsbin.com/ifipax/edit\">source</a></p>\n\n<p>How that works:</p>\n\n<ol>\n<li><p><code>^</code>: Match start of string</p></li>\n<li><p><code>\\+?</code>: Allow a single, optional <code>+</code> (remove this if you don't want to)</p></li>\n<li><p><code>(?:...|...)</code>: Allow one of these two options (without creating a capture group):</p>\n\n<ol>\n<li><p><code>(0|...)</code>: Allow <code>0</code> on its own...</p></li>\n<li><p><code>(...|[1-9]\\d*)</code>: ...or a number starting with something other than <code>0</code> and followed by any number of decimal digits.</p></li>\n</ol></li>\n<li><p><code>$</code>: Match end of string.</p></li>\n</ol>\n\n<p>If you want to disallow <code>0</code> (because it's not positive), the regular expression becomes just <code>/^\\+?[1-9]\\d*$/</code> (e.g., we can lose the alternation that we needed to allow <code>0</code>).</p>\n",
                    "is_accepted": true,
                    "score": 102
                },
                {
                    "body": "<pre><code>return ((parseInt(str, 10).toString() == str) &amp;&amp; str.indexOf('-') === -1);\n</code></pre>\n\n<p>won't work if you give a string like '0001' though</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is almost a duplicate question fo this one:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric\">Validate numbers in JavaScript - IsNumeric()</a></p>\n\n<p>It's answer is:</p>\n\n<pre><code>function isNumber(n) {\n  return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n);\n}\n</code></pre>\n\n<p>so, a positive integer would be:</p>\n\n<pre><code>function isPositiveInteger(n) {\n  var floatN = parseFloat(n);\n  return !isNaN(floatN) &amp;&amp; isFinite(n) &amp;&amp; floatN &gt; 0\n      &amp;&amp; floatN % 1 == 0;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h1>Solution 1</h1>\n\n<p>If we <a href=\"http://stackoverflow.com/a/7179733/1249581\">consider</a> a JavaScript integer to be a value of maximum <code>4294967295</code> (i.e. <code>Math.pow(2,32)-1</code>), then the following short solution will perfectly work:</p>\n\n<pre><code>function isPositiveInteger(n) {\n    return n &gt;&gt;&gt; 0 === parseFloat(n);\n}\n</code></pre>\n\n<p><strong>DESCRIPTION:</strong></p>\n\n<ol>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Bitwise_Operators#%3E%3E%3E_%28Zero-fill_right_shift%29\">Zero-fill right shift operator</a> does three important things:\n<ul>\n<li>truncates decimal part\n<ul>\n<li><code>123.45 &gt;&gt;&gt; 0 === 123</code></li>\n</ul></li>\n<li>does the shift for negative numbers\n<ul>\n<li><code>-1 &gt;&gt;&gt; 0 === 4294967295</code></li>\n</ul></li>\n<li>\"works\" in range of <code>MAX_INT</code>\n<ul>\n<li><code>1e10 &gt;&gt;&gt; 0 === 1410065408</code></li>\n<li><code>1e7 &gt;&gt;&gt; 0 === 10000000</code></li>\n</ul></li>\n</ul></li>\n<li><code>parseFloat</code> does correct parsing of string numbers (setting <code>NaN</code> for non numeric strings)</li>\n</ol>\n\n<p><strong>TESTS:</strong></p>\n\n<pre><code>\"0\"                     : true\n\"23\"                    : true\n\"-10\"                   : false\n\"10.30\"                 : false\n\"-40.1\"                 : false\n\"string\"                : false\n\"1234567890\"            : true\n\"129000098131766699.1\"  : false\n\"-1e7\"                  : false\n\"1e7\"                   : true\n\"1e10\"                  : false\n\"1edf\"                  : false\n\" \"                     : false\n\"\"                      : false\n</code></pre>\n\n<p><strong>DEMO:</strong> <a href=\"http://jsfiddle.net/5UCy4/37/\">http://jsfiddle.net/5UCy4/37/</a></p>\n\n<hr>\n\n<h1>Solution 2</h1>\n\n<p>Another way is good for all numeric values which are valid up to <code>Number.MAX_VALUE</code>, i.e. to about <code>1.7976931348623157e+308</code>:</p>\n\n<pre><code>function isPositiveInteger(n) {\n    return 0 === n % (!isNaN(parseFloat(n)) &amp;&amp; 0 &lt;= ~~n);\n}\n</code></pre>\n\n<p><strong>DESCRIPTION:</strong></p>\n\n<ol>\n<li><code>!isNaN(parseFloat(n))</code> is used to filter <em>pure</em> string values, e.g. <code>\"\"</code>, <code>\" \"</code>, <code>\"string\"</code>;</li>\n<li><code>0 &lt;= ~~n</code> filters negative and large non-integer values, e.g. <code>\"-40.1\"</code>, <code>\"129000098131766699\"</code>;</li>\n<li><code>(!isNaN(parseFloat(n)) &amp;&amp; 0 &lt;= ~~n)</code> returns <code>true</code> if value is both <em>numeric</em> and <em>positive</em>;</li>\n<li><code>0 === n % (...)</code> checks if value is non-float -- here <code>(...)</code> (see 3) is evaluated as <code>0</code> in case of <code>false</code>, and as <code>1</code> in case of <code>true</code>.</li>\n</ol>\n\n<p><strong>TESTS:</strong></p>\n\n<pre><code>\"0\"                     : true\n\"23\"                    : true\n\"-10\"                   : false\n\"10.30\"                 : false\n\"-40.1\"                 : false\n\"string\"                : false\n\"1234567890\"            : true\n\"129000098131766699.1\"  : false\n\"-1e10\"                 : false\n\"1e10\"                  : true\n\"1edf\"                  : false\n\" \"                     : false\n\"\"                      : false\n</code></pre>\n\n<p><strong>DEMO:</strong> <a href=\"http://jsfiddle.net/5UCy4/14/\">http://jsfiddle.net/5UCy4/14/</a></p>\n\n<hr>\n\n<p><strong>The previous version:</strong></p>\n\n<pre><code>function isPositiveInteger(n) {\n    return n == \"0\" || ((n | 0) &gt; 0 &amp;&amp; n % 1 == 0);\n}\n</code></pre>\n\n<p><strong>DEMO:</strong> <a href=\"http://jsfiddle.net/5UCy4/2/\">http://jsfiddle.net/5UCy4/2/</a></p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p><code>(~~a == a)</code> where <code>a</code> is the string.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I would like the simplest, failsafe test to check that a string in JavaScript is a positive integer.</p>\n\n<p><code>isNan(str)</code> returns true for all sorts of non-integer values and <code>parseInt(str)</code> is returning integers for float strings, like \"2.5\". And I don't want to have to use some jQuery plugin either.</p>\n",
            "last_activity_date": 1396390469,
            "question_id": 10834796,
            "score": 55,
            "tags": [
                "javascript"
            ],
            "title": "Validate that a string is a positive integer"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p><a href=\"http://code.google.com/p/flot/\">Flot</a> is a pure Javascript plotting library for jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Here are a few physics engines written in javascript that have some graphics capabilities.  </p>\n\n<p><a href=\"http://blog.quantumstate.co.uk/javascript-physics-engine.html\" rel=\"nofollow\">http://blog.quantumstate.co.uk/javascript-physics-engine.html</a></p>\n\n<p><a href=\"http://box2d-js.sourceforge.net/\" rel=\"nofollow\">http://box2d-js.sourceforge.net/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>John Resig's port of the Processing library to Javascript:</p>\n\n<p><a href=\"http://ejohn.org/blog/processingjs\">http://ejohn.org/blog/processingjs</a></p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>See question about SVG posted earlier:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/188731/is-it-sensible-to-dynamically-generate-svg-images-on-websites-yet\">Is it sensible to dynamically generate SVG images on websites yet?</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'm very psyched about <a href=\"http://raphaeljs.com/\">Rapha\u00ebl</a>. I've used it in one project and it works like a charm.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Check out Walter Zorn's library</p>\n\n<p><a href=\"http://www.walterzorn.de/en/jsgraphics/jsgraphics_e.htm\" rel=\"nofollow\">www.walterzorn.de/en</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The canvas html element may be the best backing and is used as such in many libraries (I know flot and processingjs mentionned by sibblings are using it)</p>\n\n<p>canvas element is the lower API abstraction level you can get, which may be conceptually similar to <a href=\"http://www.cairographics.org/\" rel=\"nofollow\" title=\"Cairo graphics library\">Cairo</a> or <a href=\"http://fr.wikipedia.org/wiki/Graphics_Device_Interface\" rel=\"nofollow\">GDI</a></p>\n\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Canvas_(HTML_element)\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Canvas_(HTML_element)</a></li>\n<li><a href=\"https://developer.mozilla.org/En/HTML:Canvas\" rel=\"nofollow\">https://developer.mozilla.org/En/HTML:Canvas</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Take a look at dojox.gfx: <a href=\"http://docs.dojocampus.org/dojox/gfx\" rel=\"nofollow\">docs</a>, <a href=\"http://archive.dojotoolkit.org/nightly/dojotoolkit/dojox/gfx/tests/\" rel=\"nofollow\">tests</a>, <a href=\"http://archive.dojotoolkit.org/nightly/dojotoolkit/dojox/gfx/demos/\" rel=\"nofollow\">demos</a> (last two links to the nightly snapshot on the test server optimized for debugging, not for production).</p>\n\n<p>It uses native graphics: SVG, VML, Silverlight or Canvas &mdash; whatever is available on the client covering all major browsers (IE, Firefox, Safari/Webkit, Opera).</p>\n\n<p>While it is 2D, it can be used as a foundation for 3D stuff. In fact there is a library that takes advantage of it: <a href=\"http://archive.dojotoolkit.org/nightly/dojotoolkit/dojox/gfx3d/\" rel=\"nofollow\">dojox.gfx3d</a>. Examples (can be found in tests):</p>\n\n<ul>\n<li><a href=\"http://archive.dojotoolkit.org/nightly/dojotoolkit/dojox/gfx3d/tests/test_cylinder.html\" rel=\"nofollow\">cylinders</a></li>\n<li><a href=\"http://archive.dojotoolkit.org/nightly/dojotoolkit/dojox/gfx3d/tests/test_cube.html\" rel=\"nofollow\">cube</a></li>\n<li><a href=\"http://archive.dojotoolkit.org/nightly/dojotoolkit/dojox/gfx3d/tests/test_drawer.html\" rel=\"nofollow\">pilot test</a></li>\n</ul>\n\n<p>And for truly adventurous types there is a library done for Dojo as part of Google Summer of Code 2008: <a href=\"http://svn.dojotoolkit.org/soc/2008/gfx3d_robertusj/\" rel=\"nofollow\">True 3D</a>. Obviously it is much faster than 2D/3D hybrid, and suitable for fluid animation. You can explore it on your own (the previous link is a publicly available Subversion repository), but be warned: it works only on Firefox and Opera with special 3D graphics add-ons from respective vendors. You'll find all gory details in the documentation.</p>\n\n<p>Have fun!</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>After staring at <a href=\"http://maettig.com/code/javascript/3d_dots.html\">this 3D cube</a> and <a href=\"http://www.uselesspickles.com/triangles/demo.html\">these triangles</a> for a while I started wondering if there's any good reliable Javascript graphics library with basic 3D support.</p>\n\n<p>Any suggestion?</p>\n",
            "last_activity_date": 1342808521,
            "question_id": 221710,
            "score": 33,
            "tags": [
                "javascript",
                "graphics",
                "3d"
            ],
            "title": "Are there any good Javascript graphics libraries?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><code>JSON.stringify</code> takes more <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Parameters\">optional arguments</a>.</p>\n\n<p>Try:</p>\n\n<pre><code> JSON.stringify({a:1,b:2,c:{d:1,e:[1,2]}}, null, 4); // Indented 4 spaces\n JSON.stringify({a:1,b:2,c:{d:1,e:[1,2]}}, null, \"\\t\"); // Indented with tab\n</code></pre>\n\n<p>From:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/2614862/json-beautifier\">How can I beautify JSON programmatically?</a></p>\n\n<p>Should work in modern browsers, and it is included in <a href=\"https://github.com/douglascrockford/JSON-js\">json2.js</a> if you need a fallback for browsers that don't support the JSON helper functions.</p>\n",
                    "is_accepted": true,
                    "score": 185
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/2614862/how-can-i-beautify-json-programmatically\">How can I beautify JSON programmatically?</a>  </p>\n</blockquote>\n\n\n\n<p>I know how to generate JSON from an object using JSON.stringify, or in my case the handy jquery-json from google code (<a href=\"http://code.google.com/p/jquery-json/\">http://code.google.com/p/jquery-json/</a>).  </p>\n\n<p>Now this works fine, but the output is hard to read for humans.  Is there an easy way / function / whatever to output a neatly formatted json file?</p>\n\n<p>This is what I mean:</p>\n\n<pre><code>JSON.stringify({a:1,b:2,c:{d:1,e:[1,2]}}); \n</code></pre>\n\n<p>gives..</p>\n\n<pre><code>\"{\"a\":1,\"b\":2,\"c\":{\"d\":1,\"e\":[1,2]}}\"\n</code></pre>\n\n<p>I'd like something like this instead:</p>\n\n<pre><code>{\n \"a\":1,\n \"b\":2,\n \"c\":{\n    \"d\":1,\n    \"e\":[1,2]\n }\n}\n</code></pre>\n\n<p>E.g. with newlines and tabs added. It's much easier to read for larger documents.</p>\n\n<p>I'd like to do this ideally without adding any huge libraries - e.g. not prototype or YUI or whatever.  </p>\n",
            "last_activity_date": 1378630152,
            "question_id": 3515523,
            "score": 73,
            "tags": [
                "javascript",
                "json",
                "formatting"
            ],
            "title": "Javascript: How to generate formatted easy-to-read JSON straight from an object?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>After many long hours of being unable to get this working, I finally stumbled across a demo that I don't think is linked any of the documentation: <a href=\"http://bl.ocks.org/1095795\">http://bl.ocks.org/1095795</a>:</p>\n\n<p><img src=\"http://i.stack.imgur.com/u3Iwh.gif\" alt=\"enter image description here\"></p>\n\n<p>This demo contained the keys which finally helped me crack the problem.</p>\n\n<p>Adding multiple objects on an <code>enter()</code> can be done by assigning the <code>enter()</code> to a variable, and then appending to that. This makes sense. The second critical part is that the node and link arrays must be based on the <code>force()</code> -- otherwise the graph and model will go out of synch as nodes are deleted and added.</p>\n\n<p>This is because if a new array is constructed instead, it will lack the following <a href=\"https://github.com/mbostock/d3/wiki/Force-Layout#nodes\">attributes</a>:</p>\n\n<blockquote>\n  <ul>\n  <li>index - the zero-based index of the node within the nodes array.</li>\n  <li>x - the x-coordinate of the current node position.</li>\n  <li>y - the y-coordinate of the current node position.</li>\n  <li>px - the x-coordinate of the previous node position.</li>\n  <li>py - the y-coordinate of the previous node position.</li>\n  <li>fixed - a boolean indicating whether node position is locked.</li>\n  <li>weight - the node weight; the number of associated links.</li>\n  </ul>\n</blockquote>\n\n<p>These attributes are not strictly needed for the call to <a href=\"https://github.com/mbostock/d3/wiki/Force-Layout#wiki-nodes\"><code>force.nodes()</code></a>, but if these are not present, then they would be <em>randomly</em> initialised by <a href=\"https://github.com/mbostock/d3/wiki/Force-Layout#wiki-start\"><code>force.start()</code></a> on the first call.</p>\n\n<p>If anybody is curious, the working code looks like this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nfunction myGraph(el) {\n\n    // Add and remove elements on the graph object\n    this.addNode = function (id) {\n        nodes.push({\"id\":id});\n        update();\n    }\n\n    this.removeNode = function (id) {\n        var i = 0;\n        var n = findNode(id);\n        while (i &lt; links.length) {\n            if ((links[i]['source'] === n)||(links[i]['target'] == n)) links.splice(i,1);\n            else i++;\n        }\n        var index = findNodeIndex(id);\n        if(index !== undefined) {\n            nodes.splice(index, 1);\n            update();\n        }\n    }\n\n    this.addLink = function (sourceId, targetId) {\n        var sourceNode = findNode(sourceId);\n        var targetNode = findNode(targetId);\n\n        if((sourceNode !== undefined) &amp;&amp; (targetNode !== undefined)) {\n            links.push({\"source\": sourceNode, \"target\": targetNode});\n            update();\n        }\n    }\n\n    var findNode = function (id) {\n        for (var i=0; i &lt; nodes.length; i++) {\n            if (nodes[i].id === id)\n                return nodes[i]\n        };\n    }\n\n    var findNodeIndex = function (id) {\n        for (var i=0; i &lt; nodes.length; i++) {\n            if (nodes[i].id === id)\n                return i\n        };\n    }\n\n    // set up the D3 visualisation in the specified element\n    var w = $(el).innerWidth(),\n        h = $(el).innerHeight();\n\n    var vis = this.vis = d3.select(el).append(\"svg:svg\")\n        .attr(\"width\", w)\n        .attr(\"height\", h);\n\n    var force = d3.layout.force()\n        .gravity(.05)\n        .distance(100)\n        .charge(-100)\n        .size([w, h]);\n\n    var nodes = force.nodes(),\n        links = force.links();\n\n    var update = function () {\n\n        var link = vis.selectAll(\"line.link\")\n            .data(links, function(d) { return d.source.id + \"-\" + d.target.id; });\n\n        link.enter().insert(\"line\")\n            .attr(\"class\", \"link\");\n\n        link.exit().remove();\n\n        var node = vis.selectAll(\"g.node\")\n            .data(nodes, function(d) { return d.id;});\n\n        var nodeEnter = node.enter().append(\"g\")\n            .attr(\"class\", \"node\")\n            .call(force.drag);\n\n        nodeEnter.append(\"image\")\n            .attr(\"class\", \"circle\")\n            .attr(\"xlink:href\", \"https://d3nwyuy0nl342s.cloudfront.net/images/icons/public.png\")\n            .attr(\"x\", \"-8px\")\n            .attr(\"y\", \"-8px\")\n            .attr(\"width\", \"16px\")\n            .attr(\"height\", \"16px\");\n\n        nodeEnter.append(\"text\")\n            .attr(\"class\", \"nodetext\")\n            .attr(\"dx\", 12)\n            .attr(\"dy\", \".35em\")\n            .text(function(d) {return d.id});\n\n        node.exit().remove();\n\n        force.on(\"tick\", function() {\n          link.attr(\"x1\", function(d) { return d.source.x; })\n              .attr(\"y1\", function(d) { return d.source.y; })\n              .attr(\"x2\", function(d) { return d.target.x; })\n              .attr(\"y2\", function(d) { return d.target.y; });\n\n          node.attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n        });\n\n        // Restart the force layout.\n        force.start();\n    }\n\n    // Make it all go\n    update();\n}\n\ngraph = new myGraph(\"#graph\");\n\n// You can do this from the console as much as you like...\ngraph.addNode(\"Cause\");\ngraph.addNode(\"Effect\");\ngraph.addLink(\"Cause\", \"Effect\");\ngraph.addNode(\"A\");\ngraph.addNode(\"B\");\ngraph.addLink(\"A\", \"B\");\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 92
                }
            ],
            "body": "<p>First question on Stack Overflow, so bear with me! I am new to d3.js, but have been consistently amazed by what others are able to accomplish with it... and almost as amazed by how little headway I've been able to make with it myself! Clearly I'm not grokking something, so I hope that the kind souls here can show me the light.</p>\n\n<p>My intention is to make a reusable javascript function which simply does the following:</p>\n\n<ul>\n<li>Creates a blank force-directed graph in a specified DOM element</li>\n<li>Allows you to add and delete labeled, image-bearing nodes to that graph, specifying connections between them</li>\n</ul>\n\n<p>I've taken <a href=\"http://bl.ocks.org/950642\">http://bl.ocks.org/950642</a> as a starting point, since that's essentially the kind of layout I want to be able to create:</p>\n\n<p><img src=\"http://i.stack.imgur.com/yUhkK.png\" alt=\"enter image description here\"></p>\n\n<p>Here's what my code looks like:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;script type=\"text/javascript\" src=\"jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"underscore-min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"d3.v2.min.js\"&gt;&lt;/script&gt;\n    &lt;style type=\"text/css\"&gt;\n        .link { stroke: #ccc; }\n        .nodetext { pointer-events: none; font: 10px sans-serif; }\n        body { width:100%; height:100%; margin:none; padding:none; }\n        #graph { width:500px;height:500px; border:3px solid black;border-radius:12px; margin:auto; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"graph\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;script type=\"text/javascript\"&gt;\n\nfunction myGraph(el) {\n\n    // Initialise the graph object\n    var graph = this.graph = {\n        \"nodes\":[{\"name\":\"Cause\"},{\"name\":\"Effect\"}],\n        \"links\":[{\"source\":0,\"target\":1}]\n    };\n\n    // Add and remove elements on the graph object\n    this.addNode = function (name) {\n        graph[\"nodes\"].push({\"name\":name});\n        update();\n    }\n\n    this.removeNode = function (name) {\n        graph[\"nodes\"] = _.filter(graph[\"nodes\"], function(node) {return (node[\"name\"] != name)});\n        graph[\"links\"] = _.filter(graph[\"links\"], function(link) {return ((link[\"source\"][\"name\"] != name)&amp;&amp;(link[\"target\"][\"name\"] != name))});\n        update();\n    }\n\n    var findNode = function (name) {\n        for (var i in graph[\"nodes\"]) if (graph[\"nodes\"][i][\"name\"] === name) return graph[\"nodes\"][i];\n    }\n\n    this.addLink = function (source, target) {\n        graph[\"links\"].push({\"source\":findNode(source),\"target\":findNode(target)});\n        update();\n    }\n\n    // set up the D3 visualisation in the specified element\n    var w = $(el).innerWidth(),\n        h = $(el).innerHeight();\n\n    var vis = d3.select(el).append(\"svg:svg\")\n        .attr(\"width\", w)\n        .attr(\"height\", h);\n\n    var force = d3.layout.force()\n        .nodes(graph.nodes)\n        .links(graph.links)\n        .gravity(.05)\n        .distance(100)\n        .charge(-100)\n        .size([w, h]);\n\n    var update = function () {\n\n        var link = vis.selectAll(\"line.link\")\n            .data(graph.links);\n\n        link.enter().insert(\"line\")\n            .attr(\"class\", \"link\")\n            .attr(\"x1\", function(d) { return d.source.x; })\n            .attr(\"y1\", function(d) { return d.source.y; })\n            .attr(\"x2\", function(d) { return d.target.x; })\n            .attr(\"y2\", function(d) { return d.target.y; });\n\n        link.exit().remove();\n\n        var node = vis.selectAll(\"g.node\")\n            .data(graph.nodes);\n\n        node.enter().append(\"g\")\n            .attr(\"class\", \"node\")\n            .call(force.drag);\n\n        node.append(\"image\")\n            .attr(\"class\", \"circle\")\n            .attr(\"xlink:href\", \"https://d3nwyuy0nl342s.cloudfront.net/images/icons/public.png\")\n            .attr(\"x\", \"-8px\")\n            .attr(\"y\", \"-8px\")\n            .attr(\"width\", \"16px\")\n            .attr(\"height\", \"16px\");\n\n        node.append(\"text\")\n            .attr(\"class\", \"nodetext\")\n            .attr(\"dx\", 12)\n            .attr(\"dy\", \".35em\")\n            .text(function(d) { return d.name });\n\n        node.exit().remove();\n\n        force.on(\"tick\", function() {\n          link.attr(\"x1\", function(d) { return d.source.x; })\n              .attr(\"y1\", function(d) { return d.source.y; })\n              .attr(\"x2\", function(d) { return d.target.x; })\n              .attr(\"y2\", function(d) { return d.target.y; });\n\n          node.attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n        });\n\n        // Restart the force layout.\n        force\n          .nodes(graph.nodes)\n          .links(graph.links)\n          .start();\n    }\n\n    // Make it all go\n    update();\n}\n\ngraph = new myGraph(\"#graph\");\n\n// These are the sort of commands I want to be able to give the object.\ngraph.addNode(\"A\");\ngraph.addNode(\"B\");\ngraph.addLink(\"A\", \"B\");\n\n&lt;/script&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Every time I add a new node, it re-labels all of the existing nodes; these pile on top of each other and things start to get ugly. I understand why this is: because when I call the <code>update()</code> function function upon adding a new node, it does a <code>node.append(...)</code> to the entire data set. I can't figure out how to do this for <em>only the node I'm adding</em>... and I can only apparently use <code>node.enter()</code> to create a single new element, so that doesn't work for the additional elements I need bound to the node. How can I fix this?</p>\n\n<p>Thank you for any guidance that you're able to give on any of this issue!</p>\n\n<p><em>Edited because I quickly fixed a source of several other bugs that were previously mentioned</em></p>\n",
            "last_activity_date": 1399725134,
            "question_id": 9539294,
            "score": 59,
            "tags": [
                "javascript",
                "d3.js",
                "force-layout"
            ],
            "title": "Adding new nodes to Force-directed layout"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Dreamweaver uses a nice little trick by default that I've started using. </p>\n\n<pre><code>&lt;a href='javascript:;'&gt;&lt;/a&gt;\n</code></pre>\n\n<p>It's small, it doesn't trip and anchors and it's library agnostic.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The only advantage that I can think of to using <code>javascript:void(0)</code> is that it will be supported even by the oldest browsers. That said, I would use one of the other <em>unobtrusive</em> approaches you have mentioned:</p>\n\n<ul>\n<li>For most uses, <code>event.preventDefault()</code> and <code>return false</code> can be used interchangeably.</li>\n<li><code>event.preventDefault()</code> will prevent the page from reloading, as desired, but will allow the click event to bubble up to the parent. If you want to stop the bubbling, you can use it in conjunction with <code>event.stopPropagation</code>.</li>\n<li><code>return false</code> will additionally stop the event from bubbling up to the parent.</li>\n</ul>\n\n<p>I say 'interchangeably' in the first point above because much of the time we do not care whether or not an event bubbles up to the parent(s). However, when <em>do</em> we need some fine-tuning, we should consider points two and three.</p>\n\n<p>Consider the following example:</p>\n\n<pre><code>&lt;div&gt;Here is some text &lt;a href=\"www.google.com\"&gt;Click!&lt;/a&gt;&lt;/div&gt;\u200b\n\n$(\"a\").click(function(e) {\n    e.preventDefault();\n});\n\n$(\"div\").click(function() {\n    $(this).css(\"border\", \"1px solid red\");\n});\n\u200b\n</code></pre>\n\n<p>Clicking on the anchor will prevent the default action of the event from being triggered, so the browser will not redirect to www.google.com. However, the event will still 'bubble up' and cause the div's click event to fire, which will add a border around it. Add <code>e.stopPropagation()</code> <em>or just</em> <code>return false</code> and the div's click event will not fire. You can mess with it here: <a href=\"http://jsfiddle.net/cMKsN/1/\">http://jsfiddle.net/cMKsN/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I tend to prefer using <code>return false</code>, as that gives the option to give the user a choice whether to continue that action, such as shown here, in quirksmode:</p>\n\n<p><a href=\"http://www.quirksmode.org/js/events_early.html#default\" rel=\"nofollow\">http://www.quirksmode.org/js/events_early.html#default</a></p>\n\n<p>It's simple, it's old, but it works well, cross-browser, regardless of the version of javascript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>event.preventDefault()</code> and <code>return false;</code> are one thing - they instruct the browser not to process the default action for the event (in this case, navigating to the href of the anchor tag that was clicked).  <code>href=javascript:</code> and its ilk are something else - they're causing the default action to be 'do nothing'.</p>\n\n<p>It's a question of style.  Do you want to do all your work in the onclick, or do you want to be able to put actions in both the onclick and the href and rely on the capabilities of the browser to modulate between the two?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'd rather not put JavaScript into the <code>href</code> because that's not what it's meant for. I prefer something like</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"return handler();\"&gt;Link&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I like using <code>href=\"javascript:void(0)\"</code> in the link as <code>#</code> implies jumping to the top of the page and that may in fact happen if for some reason your jQuery event does not load e.g. jQuery fails to load.</p>\n\n<p>I also use <code>event.preventDefault();</code> as it will not follow the link even if an error is encountered before return false; for example:</p>\n\n<h3>HTML:</h3>\n\n<pre><code>&lt;a id=\"link\" href=\"http://www.google.com\"&gt;Test&lt;/a&gt;\n</code></pre>\n\n<h3>jQuery Example 1:</h3>\n\n<pre><code>$(\"#link\").click(\n    function(){\n        alert(\"Hi\");\n        invalidCode();\n        return false;\n    }\n);\n</code></pre>\n\n<h3>jQuery Example 2:</h3>\n\n<pre><code>$(\"#link\").click(\n    function(event){\n        event.preventDefault();\n        alert(\"Hi\");\n        invalidCode();\n        return false;\n    }\n);\n</code></pre>\n\n<p>Since <code>invalidCode();</code> will throw an error <code>return false</code> is never reached and if jQuery Example 1 is used the user will be redirected to Google whereas in jQuery Example 2 he will not.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Binding:</p>\n\n<ul>\n<li><code>javascript:</code> URLs are a horror to be avoided at all times;</li>\n<li>inline event handler attributes aren't brilliant either, but OK for a bit of rapid development/testing;</li>\n<li>binding from script, leaving the markup clean, is typically considered a best practice. jQuery encourages this, but there is no reason you can't do it in any library or plain JS.</li>\n</ul>\n\n<p>Responses:</p>\n\n<ul>\n<li>In jQuery <code>return false</code> means both <code>preventDefault</code> and <code>stopPropagation</code>, so the meaning is different if you care about parent elements receiving the event notification;</li>\n<li>jQuery is hiding it here but <code>preventDefault</code>/<code>stopPropagation</code> have to be spelled differently in IE usually (<code>returnValue</code>/<code>cancelBubble</code>).</li>\n</ul>\n\n<p>However:</p>\n\n<ul>\n<li>You have a link that isn't a link. It doesn't link anywhere; it's an action. <code>&lt;a&gt;</code> isn't really the ideal markup for this. It'll go wrong if someone tries to middle-click it, or add it to bookmarks, or any of the other affordances a link has.</li>\n<li>For cases where it really does point to something, like when it opens/closes another element on the page, set the link to point to <code>#thatelementsid</code> and use unobtrusive scripting to grab the element ID from the link name. You can also sniff the <code>location.hash</code> on document load to open that element, so the link becomes useful in other contexts.</li>\n<li>Otherwise, for something that is purely an action, it would be best to mark it up like one: <code>&lt;input type=\"button\"&gt;</code> or <code>&lt;button type=\"button\"&gt;</code>. You can style it with CSS to look like a link instead of a button if want.</li>\n<li>However there are some aspects of the button styling you can't quite get rid of in IE and Firefox. It's usually not significant, but if you really need absolute visual control a compromise is to use a <code>&lt;span&gt;</code> instead. You can add a <code>tabindex</code> property to make it keyboard-accessible in most browsers although this isn't really properly standardised. You can also detect keypresses like Space or Enter on it to activate. This is kind of unsatisfactory, but still quite popular (SO, for one, does it like this).</li>\n<li>Another possibility is <code>&lt;input type=\"image\"&gt;</code>. This has the accessibility advantages of the button with full visual control, but only for pure image buttons.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p>I think that I have seen as well javascript:; around as the web develops, is hard to keep track to the tricks that are available out there.. but this is mainly about accessability (besides javascript:void(0); ) and just a small correction is not javascript:void(0) but javascript:void(0); which means do nothing so pretty much as return false; although not sure if javascript:return false; does the same.. </p>\n\n<p>I always use and would suggest to use javascript:void(0); for a couple of reasons.. in my humble opinion, of course.</p>\n\n<p>1.) I use it because of the same someone mentioned above.. href=\"#\" is not appropriate as it might indicate going to the top and even in that case '#top' would be more adequate for that case. But also this can trigger something else in your code that makes use of # (hashes) so another reason is to avoid conflicts with other javascript that might be using #. And I tend to look for this when using a plugin for example, and replace them immediately.. href='#' to href='javascript:void(0);' or href='javascript:;'</p>\n\n<p>2.) If I want to re-use a function for a group of specific Anchor tags, I can call it with the selector on any attribute without worrying about detecting the click event and preventing the default action and I do it without even thinking of it as a development preference.</p>\n\n<p>3.) In most cases if you are doing link building using javascript:void(0); tries to make a link to not be followed as the old href= rel=nofollow so it avoid indexing links that are actions. I'm not so sure about this one merely because I heard that crawlers and robots can now read even Flash so would not be surprised if they can read javascript links</p>\n\n<p>4.) Referring from 2.) you can target on a class like and forget about preventing the click event default action by using a href=\"javascript:void(0);\" and then targetting the class directly from the selector at the jQuery function.</p>\n\n<pre><code>        jQuery(function($)\n        {\n            //from the rel\n            $('a[rel=\"-your-rel-id\"]') ... off('click').on('click',function()\n\n            //from the class\n            $('a.-the-class') ... off('click').on('click',function()\n\n            //from the id\n\n            $('a#-the-id').off('click').on('click',function()\n            {\n            --do something with this link\n        });\n\n}); \n</code></pre>\n\n<p>I rather feel more comfortable using the class as you can always do...</p>\n\n<p>$(a#-your-id).hasClass(-yourclass-)</p>\n\n<p>or any other interesting combination and affect many links.. so I really won't suggest to use the A as a selector solely..</p>\n\n<p>Normally what I see in here being suggested is this:</p>\n\n<pre><code>  jQuery(function($)\n        {\n            //from the rel\n            $('a[rel=\"-your-rel-id\"]').on('click',function(event)\n            //do something\n            //prevent the click as is passed to the function as an event\n            event.preventDefault();\n        });\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><br>\nWhen I want some link to not do anything but only respond to javascript actions what's the best way to avoid the link scrolling to the top edge of the page ?<br>\nI know several ways of doing it, they all seem to work fine :</p>\n\n<pre><code>&lt;a href=\"javascript:void(0)\"&gt;Hello&lt;/a&gt;\n</code></pre>\n\n<p>or </p>\n\n<pre><code>&lt;a id=\"hello\" href=\"#\"&gt;Hello&lt;/a&gt;\n&lt;script type=\"text/javascript&gt;\n  $(document).ready(function() {\n    $(\"#toto\").click(function(){\n      //...\n      return false;\n    });\n  });\n&lt;/script&gt;\n</code></pre>\n\n<p>and even : </p>\n\n<pre><code>&lt;a id=\"hello\" href=\"#\"&gt;Hello&lt;/a&gt;\n&lt;script type=\"text/javascript&gt;\n  $(document).ready(function() {\n    $(\"#toto\").click(function(event){\n      event.preventDefault();          \n      //...\n    });\n  });\n&lt;/script&gt;\n</code></pre>\n\n<p>Do you have any preference ? why ? in which conditions ? </p>\n\n<p>PS: of course the above examples assume you're using jquery but there's equivalents for mootools or prototype.</p>\n",
            "last_activity_date": 1353445792,
            "question_id": 3498492,
            "score": 45,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "&quot;javascript:void(0);&quot; vs &quot;return false&quot; vs &quot;preventDefault()&quot;"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Put a version on your javascript code like this that is updated when you make a change</p>\n\n<pre><code>&lt;script src=\"/code.js?ver=123\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>They will then always get new version.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>HTTP provides several controls for caching that browsers ignore in different ways.  If you set a reasonable expiration date, most browsers will check to see if they have the current version are appropriate frequencies.</p>\n\n<p>The search term you want to include here (to avoid browser user instructions) is HTTP.</p>\n\n<p>For more see: </p>\n\n<ul>\n<li><a href=\"http://www.mnot.net/cache_docs/\">Caching Tutorial for Web Authors and Webmasters</a></li>\n<li><a href=\"http://www.web-caching.com/mnot_tutorial/how.html\">How Web Caches Work</a> (a little old, but still useful).</li>\n<li><a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html\">HTTP/1.1: Caching in HTTP</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You may pass a version string as a get parameter to the URL of your script tag. The parameter won't be evaluated by the static JavaScript file but force the browser to get the new version. </p>\n\n<p>If you do not want to assign the version string every time you edited the source you may compute it based on the file system time stamp or your subversion commit number:</p>\n\n<pre><code>&lt;script src=\"/script.js?time_stamp=1224147832156\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/script.js?svn_version=678\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>\u00a0 \u00a0 </p>\n",
                    "is_accepted": true,
                    "score": 47
                }
            ],
            "body": "<p>I have a JavaScript resource that has the possibility of being edited at any time. Once it is edited I would want it to be propagated to the user's browser relatively quickly (like maybe 15 minutes or so), however, the frequency of this resource being editing is few and far between (maybe 2 a month).</p>\n\n<p>I'd rather the resource to be cached in the browser, since it will be retrieved frequently, but I'd also like the cache to get reset on the browser at a semi-regular interval.</p>\n\n<p>I know I can pass a no-cache header when I request for the resource, but I was wondering when the cache would automatically reset itself on the browser if I did not pass no-cache.</p>\n\n<p>I imagine this would be independent for each browser, but I'm not sure.</p>\n\n<p>I tried to Google this, but most of the hits I found were about clearing the browser's cache... which isn't what I'm looking for.</p>\n",
            "last_activity_date": 1378281385,
            "question_id": 206783,
            "score": 42,
            "tags": [
                "javascript",
                "browser",
                "caching"
            ],
            "title": "When Does Browser Automatically Clear JavaScript Cache?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You don't have to jump through all these hoops. Simply check if the console exists before using it.</p>\n\n<p>So, instead of:</p>\n\n<pre><code>console.log('foo');\n</code></pre>\n\n<p>Use:</p>\n\n<pre><code>window.console &amp;&amp; console.log('foo');\n</code></pre>\n\n<p>...and you won't get any errors.</p>\n\n<hr>\n\n<p>Alternatively, you could just check for it at the top of your script, and if it's undefined, just fill it with an empty function:</p>\n\n<pre><code>// At the top of your script:\nif ( ! window.console ) console = { log: function(){} };\n// If you use other console methods, add them to the object literal above\n\n// Then, anywhere in your script:\nconsole.log('This message will be logged, but will not cause an error in IE7');\n</code></pre>\n\n<hr>\n\n<p>For a more robust solution, use this piece of code (taken from twitter's source code):</p>\n\n<pre><code>// Avoid `console` errors in browsers that lack a console.\n(function() {\n    var method;\n    var noop = function () {};\n    var methods = [\n        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\n        'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\n        'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\n        'timeStamp', 'trace', 'warn'\n    ];\n    var length = methods.length;\n    var console = (window.console = window.console || {});\n\n    while (length--) {\n        method = methods[length];\n\n        // Only stub undefined methods.\n        if (!console[method]) {\n            console[method] = noop;\n        }\n    }\n}());\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 126
                },
                {
                    "body": "<p>'console' itself needs to be a function, as well as 'log'.  So:</p>\n\n<pre><code>if(typeof(console) === 'undefined') {\n    console = function(){};\n    console.log = function(){consoleMsg()};\n}   \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Did you try <code>try-catch</code>:</p>\n\n<pre><code>var debugging = false; // or true \ntry {  \n    console.log();\n} catch(ex) {\n    /*var*/ console = { log: function() {consoleMsg()} };   \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>(function(debug) {\n    var console;\n\n    function wrapConsoleMethod(fnName) {\n        if(fnName in console)\n            console[ fnName ] = function(fn) {\n                return function() {\n                    if(debug)\n                        return fn.apply(console, arguments);\n                    else\n                        alert('Console event in Production Code');\n                };\n            }(console[ fnName ]);\n        else\n            ; // fn not in console\n    };\n\n    if(!('console' in window))\n        window.console = {\n            log : function() {}\n            // ...\n        };\n    console = window.console;\n    wrapConsoleMethod('log');\n    // ...\n})(true /* debug */);\n\nconsole.log('test');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/3326650/console-is-undefined-error-for-internet-explorer\">&#39;console&#39; is undefined error for internet explorer</a>  </p>\n</blockquote>\n\n\n\n<p>If you have <code>console.log</code> statements in your code, Internet Explorer will throw a JavaScript error (at least in IE7 which is what our intranet users have installed).</p>\n\n<p>I am using Firefox for most of my development testing primarily because of the functionality provided by Firebug (where I use a lot of console statements) but I also need to test in IE.</p>\n\n<p>if I add the following to my JavaScript, the error does not get thrown.</p>\n\n<pre><code>var debugging = false;\nif (typeof console == \"undefined\") \n    var console = { log: function() {} };  \n</code></pre>\n\n<p>The problem is that I would like to trigger an event if debugging mode is false.  If I create a function to test whether debugging is false and do an action (at this point just an alert) but when I try do the following I receive an IE error saying <strong>Console is not defined</strong>.</p>\n\n<pre><code>var debugging = false; // or true   \nif (typeof console == \"undefined\") \n    var console = { log: function() {consoleMsg()} };   \n\nfunction consoleMsg() {\n    if(!debugging) {\n    alert('Console.log event in Production Code');\n}   \n</code></pre>\n\n<p>If someone could help me to fix my code, provide a better way to help me achieve my goal, or direct me to a resource to edumacate myself I would be very appreciative.</p>\n",
            "last_activity_date": 1370288359,
            "question_id": 7585351,
            "score": 39,
            "tags": [
                "javascript",
                "internet-explorer",
                "firebug"
            ],
            "title": "Testing for console.log statements in IE"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Don't know if you've already found it... I mention it anyway for future surfers...</p>\n\n<p>I was looking for the same, and found this piece of code : </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt; \n function trackConv(google_conversion_id,google_conversion_label) {\n         var image = new Image(1,1); \n         image.src = \"//www.googleadservices.com/pagead/\n conversion/\"+google_conversion_id+\"/?label=\"+google_conversion_label \n +\"&amp;script=0\";  } \n\n &lt;/script&gt;\n</code></pre>\n\n<p>Then for links which you want to track just do this : </p>\n\n<pre><code>&lt;a onclick=\"trackConv(1234567890,'LQV8CNq6RxCKlPbvAw');\" href=\"http://www.example.com\"&gt;Link&lt;/a&gt; \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 65
                },
                {
                    "body": "<p>I've a similar problem.</p>\n\n<p>The Problem:\nMy client have a contact page that have a form. After the user fill all the form fields, there is a validation(to check if the user filled correctly all the fields). After the validation, the user is redirected to the webmail server page. There isn't an \"Success\" or \"Thank You\" page. So i needed to put the Adwords tag, after the form validation.</p>\n\n<p>The Solution:</p>\n\n<p>The validation was done this way:</p>\n\n<pre><code>var missinginfo = \"\";\nvar f = document.forms[\"CONTACT\"];\nif (f.name.value == \"\"){\nmissinginfo += \"\\n     -  name\";}\n.\n.\n.\nif (missinginfo != \"\") \n{\nmissinginfo =\"_____________________________\\n\" +\n\"Empty Field\" + \"incorrectly filled\" +\nmissinginfo + \"\\n_____________________________\"\nalert(missinginfo);\nreturn false;\n}\n//End of Validation\n</code></pre>\n\n<p>So i added this snippet code:</p>\n\n<pre><code>else if(missinginfo == \"\"){   //Check if the form was filled correctly\nadw_conv();  //Function Name\nreturn false;\n}\nfunction adw_conv(){\nvar img = new Image()  //Creates an image using JS to make the request\nimg.src = \"http://www.googleadservices.com/pagead/conversion/123456789/?label=-8bcaCNHv6AIQl_v8_QM&amp;amp;guid=ON&amp;amp;script=0\"; \nimg.onload = function(){    \nvar form = document.getElementsByName('CONTACT')[0];\nform.submit();\n}}\n</code></pre>\n\n<p>This way, after the form validation and before the website redirect the user to the webmail page, is triggered the Adwords Conversion!</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Google Adwords offers no code to add to your page to count a conversion if somebody clicks on a link. But as it's Javascript, I am sure there is a way to do this.</p>\n\n<p>Here's the code (unaltered) Google gives you to include in the page, that should count as a conversion (most of the time a thank you page):</p>\n\n<pre><code>&lt;!-- Google Code for Klick Conversion Page --&gt;\n&lt;script type=\"text/javascript\"&gt;\n&lt;!--\nvar google_conversion_id = 1062751462;\nvar google_conversion_language = \"de\";\nvar google_conversion_format = \"1\";\nvar google_conversion_color = \"ffffff\";\nvar google_conversion_label = \"dKXuCODvugEQ5pnh-gM\";\nvar google_conversion_value = 0;\n//--&gt;\n&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"http://www.googleadservices.com/pagead/conversion.js\"&gt;\n&lt;/script&gt;\n&lt;noscript&gt;\n&lt;div style=\"display:inline;\"&gt;\n&lt;img height=\"1\" width=\"1\" style=\"border-style:none;\" alt=\"\" src=\"http://www.googleadservices.com/pagead/conversion/1062751462/?label=dKXuCODvugEQ5pnh-gM&amp;amp;guid=ON&amp;amp;script=0\"/&gt;\n&lt;/div&gt;\n&lt;/noscript&gt;\n</code></pre>\n\n<p>With other conversion tracking scripts some function has to be executed to count the conversion. Here, just adding the JS-File to your page can be enough to trigger the conversion-tracking, as conversion.js calls a function on load (download it and look at it after running it through a code beatuifier, it's really quite nice work!).</p>\n\n<p>Any idea how to tackle this?</p>\n",
            "last_activity_date": 1420676470,
            "question_id": 2082129,
            "score": 39,
            "tags": [
                "javascript",
                "onclick",
                "tracking",
                "google-adwords"
            ],
            "title": "How to track a Google Adwords conversion onclick?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>First of all, this is not a question with a unique solution. I'll explain the way I use RequireJS that works for me, and may work for you :)</p>\n\n<p>Second, English is not my mother language. Corrections and tips about the language will be very appreciated. Feel free, guys :)</p>\n\n<blockquote>\n  <p>1) Is require js even practical for projects that are not single-page?</p>\n</blockquote>\n\n<p>It depends. If your project does not have shared code between pages for example, RequireJS help will be modest. The main idea of RequireJS is modularize the application into chunks of reusable code. If your application uses only page-specific code, then using RequireJS may not be a good idea.</p>\n\n<blockquote>\n  <p>2) Without using the optimizer, each of my main files start with essentially the same config options. Is there a way to avoid this? Like having each main file include the same build profile without having to actually build it?</p>\n</blockquote>\n\n<p>The only way I see is making the configuration on the main file, or create a module that will configure RequireJS and then use that module as the first dependency on main.js. But this can be tricky. I do not use many main.js files in my applications; I use only one that acts as a loader (see below).</p>\n\n<blockquote>\n  <p>3) Should r.js go in httpdocs_siteroot's parent directory?</p>\n</blockquote>\n\n<p>Not necessarily. You can put it inside the /media directory, since all your client stuff is there.</p>\n\n<blockquote>\n  <p>4) Is there something glaringly wrong with my app dir structure or my use of requirejs?</p>\n</blockquote>\n\n<p>I would not say that. On the other hand, the structure is perhaps a bit too fragmented. For example, you can put all '3rd party stuff' inside a /vendor directory. But this is just sugar; your structure will work well and seems right. I think the major problem is the requirejs.config() call in multiple main files.</p>\n\n<p>I had the same problems you are having now and I ended up with the following solution:</p>\n\n<p>1) Do not wrap the non-AMD-compliant files with a define. Although it works, you can achieve the same results using the \"shim\" property in requirejs.config (see below).</p>\n\n<p>2) In a multi-page application, the solution for me is not to require the page-specific modules from the optimized main.js file. Instead, I require all the shared code (3rd party and my own) from the main file, leaving the page-specific code to load on each page. The main file ends up only being a loader that starts the page-specific code after loading all shared/lib files.</p>\n\n<p><strong>This is the boilerplate I use to build a multi-page application with requirejs</strong></p>\n\n<p>Directory structure:</p>\n\n<p>/src - I put all the client stuff inside a src directory, so I can run the optimizer inside this directory (this is your media directory).</p>\n\n<p>/src/vendor - Here I place all 3rd party files and plugins, including require.js.</p>\n\n<p>/src/lib - Here I place all my own code that is shared by the entire application or by some pages. In other words, modules that are not page-specific.</p>\n\n<p>/src/page-module-xx - And then, I create one directory for each page that I have. This is not a strict rule.</p>\n\n<p><strong>/src/main.js</strong>: This is the only main file for the entire application. It will:</p>\n\n<ul>\n<li>configure RequireJS, including shims</li>\n<li>load shared libraries/modules</li>\n<li>load the page-specific main module</li>\n</ul>\n\n<p>This is an example of a requirejs.config call:</p>\n\n<pre><code>requirejs.config({\n        baseUrl: \".\",\n        paths: {\n            // libraries path\n            \"json\": \"vendor/json2\",\n            \"jquery\": \"vendor/jquery\",\n            \"somejqueryplugion\": \"vendor/jquery.somejqueryplufin\",\n            \"hogan\": \"vendor/hogan\",\n\n            // require plugins\n            \"templ\": \"vendor/require.hogan\",\n            \"text\": \"vendor/require.text\"\n        },\n        // The shim section allows you to specify \n        // dependencies between non AMD compliant files.\n        // For example, \"somejqueryplugin\" must be loaded after \"jquery\".\n        // The 'exports' attribute tells RequireJS what global variable\n        // it must assign as the module value for each shim.\n        // For example: By using the configutation below for jquery, \n        // when you request the \"jquery\" module, RequireJS will \n        // give the value of global \"$\" (this value will be cached, so it is\n        // ok to modify/delete the global '$' after all plugins are loaded.\n        shim: {\n            \"jquery\": { exports: \"$\" },\n            \"util\": { exports: \"_\" },\n            \"json\": { exports: \"JSON\" },\n            \"somejqueryplugin\": { exports: \"$\", deps: [\"jquery\"] }\n        }\n    });\n</code></pre>\n\n<p>And then, after configuration we can make the first require() request \nfor all those libraries and after that do the request for our \"page main\" module.</p>\n\n<pre><code>//libs\nrequire([\n    \"templ\",     //require plugins\n    \"text\",\n    \"json\",      //3rd libraries\n    \"jquery\",\n    \"hogan\", \n    \"lib/util\"  // app lib modules\n ],\n    function () {\n        var $ = require(\"jquery\"),\n            // the start module is defined on the same script tag of data-main.\n            // example: &lt;script data-main=\"main.js\" data-start=\"pagemodule/main\" src=\"vendor/require.js\"/&gt;\n            startModuleName = $(\"script[data-main][data-start]\").attr(\"data-start\");\n\n        if (startModuleName) {\n            require([startModuleName], function (startModule) {\n                $(function(){\n                    var fn = $.isFunction(startModule) ? startModule : startModule.init;\n                    if (fn) { fn(); }\n                });\n            });\n        }\n    });\n</code></pre>\n\n<p>As you can see in the body of the require() above, we're expecting another attribute on the require.js script tag. The <strong>data-start</strong> attribute will hold the name of the module for the current page.</p>\n\n<p>Thus, on the HTML page we must add this extra attribute:</p>\n\n<pre><code>&lt;script data-main=\"main\" data-start=\"pagemodule/main\" src=\"vendor/require.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>By doing this, we will end up with an optimized main.js that contains all the files in \"/vendor\" and \"/lib\" directories (the shared resources), but not the page-specific scripts/modules, as they are not hard-coded in the main.js as dependencies. The page-specific modules will be loaded separately on each page of the application.</p>\n\n<p>The \"page main\" module should return a <code>function()</code> that will be executed by the \"app main\" above. </p>\n\n<pre><code>define(function(require, exports, module) {\n    var util = require(\"lib/util\");\n\n    return function() {\n        console.log(\"initializing page xyz module\");\n    };\n});\n</code></pre>\n\n<p><strong>EDIT</strong> </p>\n\n<p>Here is example of how you can use build profile to optimize the page-specific modules that have more than one file.</p>\n\n<p>For example, let's say we have the following page module:</p>\n\n<p>/page1/main.js</p>\n\n<p>/page1/dep1.js</p>\n\n<p>/page1/dep2.js</p>\n\n<p>If we do not optimize this module, then the browser will make 3 requests, one for each script.\nWe can avoid this by instructing r.js to create a package and include these 3 files.</p>\n\n<p>On the \"modules\" attribute of the build profile:</p>\n\n<pre><code>...\n\"modules\": [\n   { \n      name: \"main\"  // this is our main file\n   },\n   {\n        // create a module for page1/main and include in it\n        // all its dependencies (dep1, dep2...)\n        name: \"page1/main\",\n        // excluding any dependency that is already included on main module\n        // i.e. all our shared stuff, like jquery and plugins should not\n        // be included in this module again.\n        exclude: [\"main\"]\n   }\n]\n</code></pre>\n\n<p>By doing this, we create another per-page main file with all its dependencies. But, since we already have a main file that will load all our shared stuff, we don't need to include them again in page1/main module. \nThe config is a little verbose since you have to do this for each page module where you have more than one script file.</p>\n\n<p>I uploaded the code of the boilerplate in GitHub: <a href=\"https://github.com/mdezem/MultiPageAppBoilerplate\">https://github.com/mdezem/MultiPageAppBoilerplate</a>.\nIt is a working boilerplate, just install node and r.js module for node and execute build.cmd (inside the /build directory, otherwise it will fail because it uses relative paths)</p>\n\n<p>I hope I have been clear. Let me know if something sounds strange ;)</p>\n\n<p>Regards!</p>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<pre class=\"lang-js prettyprint-override\"><code>&lt;script data-main=\"js/main\" src=\"js/lib/require.js\"&gt;&lt;/script&gt;\n\n\n// file: js/main\n\nrequire(['./global.config'], function(){\n    require(['./view/home'], function() {\n        // do something\n    });\n});\n</code></pre>\n\n<p>This is what I used in my project.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am currently learning RequireJS fundamentals and have some questions regarding a build profile, main files, and use of RequireJS with multi-page projects.</p>\n\n<p>My project's directory structure is as follows:</p>\n\n<pre>\nhttpdocs_siteroot/\n    app/\n        php files...\n    media/\n        css/\n            css files...\n        js/\n            libs/\n                jquery.js\n                require.js\n                mustache.js\n            mains/\n                main.page1.js\n                main.page2.js\n                main.page3.js\n            plugins/\n                jquery.plugin1.js\n                jquery.plugin2.js\n                jquery.plugin3.js\n            utils/\n                util1.js\n                util2.js\n        images/\n</pre>\n\n<p>Since this project is not a single-page app, I have a separate main file for each page (although some pages use the same main file). </p>\n\n<p>My questions are: </p>\n\n<ol>\n<li><p>Is RequireJS even practical for projects that are not single-page?</p></li>\n<li><p>Without using the optimizer, each of my main files start with essentially the same config options:</p>\n\n<pre><code>requirejs.config({\n  paths: {\n    'jquery': 'http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min'\n  },\n  baseUrl: '/media/js/',\n  // etc...\n});\nrequire(['deps'], function() { /* main code */ });\n</code></pre>\n\n<p>Is there a way to avoid this? Like having each main file include the same build profile without having to actually build it?</p></li>\n<li><p>Should r.js go in <code>httpdocs_siteroot</code>'s parent directory?</p></li>\n<li><p>Is there something glaringly wrong with my app dir structure or my use of RequireJS?</p></li>\n</ol>\n",
            "last_activity_date": 1377152117,
            "question_id": 11674824,
            "score": 30,
            "tags": [
                "javascript",
                "requirejs"
            ],
            "title": "How to use RequireJS build profile + r.js in a multi-page project"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I believe that continuations are a special case of callbacks. A function may callback any number of functions, any number of times. For example:</p>\n\n<pre><code>var array = [1, 2, 3];\n\nforEach(array, function (element, array, index) {\n    array[index] = 2 * element;\n});\n\nfunction forEach(array, callback) {\n    var length = array.length;\n    for (var i = 0; i &lt; length; i++)\n        callback(array[i], array, i);\n}\n</code></pre>\n\n<p>However if a function calls back another function as the last thing it does then the second function is called a continuation of the first. For example:</p>\n\n<pre><code>var array = [1, 2, 3];\n\nforEach(array, function (element, array, index) {\n    array[index] = 2 * element;\n});\n\nfunction forEach(array, callback) {\n    var length = array.length;\n\n    // This is the last thing forEach does\n    // cont is a continuation of forEach\n    cont(0);\n\n    function cont(index) {\n        if (index &lt; length) {\n            callback(array[index], array, index);\n            // This is the last thing cont does\n            // cont is a continuation of itself\n            cont(++index);\n        }\n    }\n}\n</code></pre>\n\n<p>If a function calls another function as the last thing it does then it's called a tail call. Some languages like Scheme perform tail call optimizations. This means that the tail call does not incur the full overhead of a function call. Instead it's implemented as a simple goto (with the stack frame of the calling function replaced by the stack frame of the tail call).</p>\n\n<p><strong>Bonus</strong>: Proceeding to continuation passing style. Consider the following program:</p>\n\n<pre><code>alert(pythagoras(3, 4));\n\nfunction pythagoras(x, y) {\n    return x * x + y * y;\n}\n</code></pre>\n\n<p>Now if every operation (including addition, multiplication, etc.) were written in the form of functions then we would have:</p>\n\n<pre><code>alert(pythagoras(3, 4));\n\nfunction pythagoras(x, y) {\n    return add(square(x), square(y));\n}\n\nfunction square(x) {\n    return multiply(x, x);\n}\n\nfunction multiply(x, y) {\n    return x * y;\n}\n\nfunction add(x, y) {\n    return x + y;\n}\n</code></pre>\n\n<p>In addition if we weren't allowed to return any values then we would have to use continuations as follows:</p>\n\n<pre><code>pythagoras(3, 4, alert);\n\nfunction pythagoras(x, y, cont) {\n    square(x, function (x_squared) {\n        square(y, function (y_squared) {\n            add(x_squared, y_squared, cont);\n        });\n    });\n}\n\nfunction square(x, cont) {\n    multiply(x, x, cont);\n}\n\nfunction multiply(x, y, cont) {\n    cont(x * y);\n}\n\nfunction add(x, y, cont) {\n    cont(x + y);\n}\n</code></pre>\n\n<p>This style of programming in which you are not allowed to return values (and hence you must resort to passing continuations around) is called continuation passing style.</p>\n\n<p>There are however two problems with continuation passing style:</p>\n\n<ol>\n<li>Passing around continuations increases the size of the call stack. Unless you're using a language like Scheme which eliminates tail calls you'll risk running out of stack space.</li>\n<li>It's a pain to write nested functions.</li>\n</ol>\n\n<p>The first problem can be easily solved in JavaScript by calling continuations asynchronously. By calling the continuation asynchronously the function returns before the continuation is called. Hence the call stack size doesn't increase:</p>\n\n<pre><code>Function.prototype.async = async;\n\npythagoras.async(3, 4, alert);\n\nfunction pythagoras(x, y, cont) {\n    square.async(x, function (x_squared) {\n        square.async(y, function (y_squared) {\n            add.async(x_squared, y_squared, cont);\n        });\n    });\n}\n\nfunction square(x, cont) {\n    multiply.async(x, x, cont);\n}\n\nfunction multiply(x, y, cont) {\n    cont.async(x * y);\n}\n\nfunction add(x, y, cont) {\n    cont.async(x + y);\n}\n\nfunction async() {\n    setTimeout.bind(null, this, 0).apply(null, arguments);\n}\n</code></pre>\n\n<p>The second problem is usually solved using a function called <code>call-with-current-continuation</code> which is often abbreviated as <code>callcc</code>. Unfortunately <code>callcc</code> can't be fully implemented in JavaScript, but we could write a replacement function for most of its use cases:</p>\n\n<pre><code>pythagoras(3, 4, alert);\n\nfunction pythagoras(x, y, cont) {\n    var x_squared = callcc(square.bind(null, x));\n    var y_squared = callcc(square.bind(null, y));\n    add(x_squared, y_squared, cont);\n}\n\nfunction square(x, cont) {\n    multiply(x, x, cont);\n}\n\nfunction multiply(x, y, cont) {\n    cont(x * y);\n}\n\nfunction add(x, y, cont) {\n    cont(x + y);\n}\n\nfunction callcc(f) {\n    var cc = function (x) {\n        cc = x;\n    };\n\n    f(cc);\n\n    return cc;\n}\n</code></pre>\n\n<p>The <code>callcc</code> function takes a function <code>f</code> and applies it to the <code>current-continuation</code> (abbreviated as <code>cc</code>). The <code>current-continuation</code> is a continuation function which wraps up the rest of the function body after the call to <code>callcc</code>.</p>\n\n<p>Consider the body of the function <code>pythagoras</code>:</p>\n\n<pre><code>var x_squared = callcc(square.bind(null, x));\nvar y_squared = callcc(square.bind(null, y));\nadd(x_squared, y_squared, cont);\n</code></pre>\n\n<p>The <code>current-continuation</code> of the second <code>callcc</code> is:</p>\n\n<pre><code>function cc(y_squared) {\n    add(x_squared, y_squared, cont);\n}\n</code></pre>\n\n<p>Similarly the <code>current-continuation</code> of the first <code>callcc</code> is:</p>\n\n<pre><code>function cc(x_squared) {\n    var y_squared = callcc(square.bind(null, y));\n    add(x_squared, y_squared, cont);\n}\n</code></pre>\n\n<p>Since the <code>current-continuation</code> of the first <code>callcc</code> contains another <code>callcc</code> it must be converted to continuation passing style:</p>\n\n<pre><code>function cc(x_squared) {\n    square(y, function cc(y_squared) {\n        add(x_squared, y_squared, cont);\n    });\n}\n</code></pre>\n\n<p>So essentially <code>callcc</code> logically converts the entire function body back to what we started from (and gives those anonymous functions the name <code>cc</code>):</p>\n\n<pre><code>square(x, function cc(x_squared) {\n    square(y, function cc(y_squared) {\n        add(x_squared, y_squared, cont);\n    });\n});\n</code></pre>\n\n<p>Again you can't implement <code>callcc</code> in JavaScript, but you can implement it the continuation passing style in JavaScript as follows:</p>\n\n<pre><code>Function.prototype.async = async;\n\npythagoras.async(3, 4, alert);\n\nfunction pythagoras(x, y, cont) {\n    callcc.async(square.bind(null, x), function cc(x_squared) {\n        callcc.async(square.bind(null, y), function cc(y_squared) {\n            add.async(x_squared, y_squared, cont);\n        });\n    });\n}\n\nfunction square(x, cont) {\n    multiply.async(x, x, cont);\n}\n\nfunction multiply(x, y, cont) {\n    cont.async(x * y);\n}\n\nfunction add(x, y, cont) {\n    cont.async(x + y);\n}\n\nfunction async() {\n    setTimeout.bind(null, this, 0).apply(null, arguments);\n}\n\nfunction callcc(f, cc) {\n    f.async(cc);\n}\n</code></pre>\n\n<p>The function <code>callcc</code> can be used to implement complex control flow structures such as try-catch blocks, coroutines, generators, <a href=\"https://github.com/aaditmshah/fiber\">fibers</a>, etc.</p>\n",
                    "is_accepted": true,
                    "score": 71
                },
                {
                    "body": "<p>Despite the wonderful writeup, I think you're confusing your terminology a bit. For example, you are correct that a tail call happens when the call is the last thing a function needs to execute, but in relation to continuations, a tail call means the function does not modify the continuation that it is called with, only that it updates the value passed to the continuation (if it desires). This is why converting a tail recursive function to CPS is so easy (you just add the continuation as a parameter and call the continuation on the result).</p>\n\n<p>It's also a bit odd to call continuations a special case of callbacks. I can see how they are easily grouped together, but continuations didn't arise from the need to distinguish from a callback.  A continuation actually represents the <strong><em>instructions remaining to complete a computation</em></strong>, or the remainder of the computation from <em>this</em> point in time.  You can think of a continuation as a hole that needs to be filled in.  If I can capture a program's current continuation, then I can go back to exactly how the program was when I captured the continuation.  (That sure makes debuggers easier to write.)  </p>\n\n<p>In this context, the answer to your question is that a <em>callback</em> is a generic thing that gets called at any point in time specified by some contract provided by the caller [of the callback].  A callback can have as many arguments as it wants and be structured in any way it wants.  A <em>continuation</em>, then, is necessarily a one argument procedure that resolves the value passed into it.  A continuation must be applied to a single value and the application must happen at the end.  When a continuation finishes executing the expression is complete, and, depending on the semantics of the language, side effects may or may not have been generated.  </p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I've been browsing all over the web in search of enlightenment about continuations, and it's mind boggling how the simplest of explanations can so utterly confound a JavaScript programmer like myself. This is especially true when most articles explain continuations with code in Scheme or use monads.</p>\n\n<p>Now that I finally think I've understood the essence of continuations I wanted to know whether what I do know is actually the truth. If what I think is true is not actually true, then it's ignorance and not enlightenment.</p>\n\n<p>So, here's what I know:</p>\n\n<p>In almost all languages functions explicitly return values (and control) to their caller. For example:</p>\n\n<pre><code>var sum = add(2, 3);\n\nalert(sum);\n\nfunction add(x, y) {\n    return x + y;\n}\n</code></pre>\n\n<p>Now in a language with first class functions we may pass the control and return value to a callback instead of explicitly returning to the caller:</p>\n\n<pre><code>add(2, 3, function (sum) {\n    alert(sum);\n});\n\nfunction add(x, y, cont) {\n    cont(x + y);\n}\n</code></pre>\n\n<p>Thus instead of returning a value from a function we are continuing with another function. Therefore this function is called a continuation of the first.</p>\n\n<p>So what's the difference between a continuation and a callback?</p>\n",
            "last_activity_date": 1387509718,
            "question_id": 14019341,
            "score": 59,
            "tags": [
                "javascript",
                "continuations",
                "callcc",
                "continuation-passing"
            ],
            "title": "What&#39;s the difference between a continuation and a callback?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You need to have an event listener for when the window resizes.  This worked for me (put it in your initialize function):</p>\n\n<pre><code>google.maps.event.addDomListener(window, 'resize', function() {\n    map.setCenter(center);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 75
                },
                {
                    "body": "<p>Detect the browser resize event, resizes the Google Map while preserving the center point:</p>\n\n<pre><code>var map = ...; // your map initialisation code\n\ngoogle.maps.event.addDomListener(window, \"resize\", function() {\n    var center = map.getCenter();\n    google.maps.event.trigger(map, \"resize\");\n    map.setCenter(center); \n});\n</code></pre>\n\n<p>You can use the same code in other event handlers when resizing the google map via other means (e.g. with a jQuery-UI 'resizable' control).</p>\n\n<p>Source: <a href=\"http://hsmoore.com/keep-google-map-v3-centered-when-browser-is-resized/\">http://hsmoore.com/keep-google-map-v3-centered-when-browser-is-resized/</a> credit to <a href=\"http://stackoverflow.com/questions/8792676/center-google-maps-v3-on-browser-resize-responsive#comment21566492_8792945\">@smftre</a> for the link.</p>\n\n<p><em>Note: This code was linked in @smftre's comment on the accepted answer. I think it's worth adding it as its own answer since it is really superior to the accepted answer. It eliminates the need of a global variable to track the center point and an event handler to update that variable.</em> </p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>Some good examples on w3schools.com. I used the following and it works great. </p>\n\n<pre><code>google.maps.event.addDomListener(window, 'resize', function() {\n  map.panTo(myLatlng);\n});\n</code></pre>\n\n<p><a href=\"http://www.w3schools.com/googleapi/google_maps_events.asp\" rel=\"nofollow\">http://www.w3schools.com/googleapi/google_maps_events.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a Google Maps (V3) in my page at 100% page width with one marker in the middle. When I resize my browser window's width I would like the map to stay centered (responsive). Now the map just stays at the left side of the page and gets smaller.</p>\n\n<p>UPDATE\nGot it to work exactly as described thanks to duncan. This is the final code:</p>\n\n<pre><code>var center;\nfunction calculateCenter() {\n  center = map.getCenter();\n}\ngoogle.maps.event.addDomListener(map, 'idle', function() {\n  calculateCenter();\n});\ngoogle.maps.event.addDomListener(window, 'resize', function() {\n  map.setCenter(center);\n});\n</code></pre>\n",
            "last_activity_date": 1411647988,
            "question_id": 8792676,
            "score": 54,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3"
            ],
            "title": "Center Google Maps (V3) on browser resize (responsive)"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Script you posted is WORKING, sample.html is not parsed as HTML.\n<a href=\"http://debconf11.com/so2.php\">http://debconf11.com/so2.php</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/2ogdv.png\" alt=\"alt text\"></p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>If you can't find a native JavaScript implementation, you can always AJAX the image yourself from your server.</p>\n\n<p><a href=\"http://www.swetake.com/qr/qr_cgi_e.html\" rel=\"nofollow\">http://www.swetake.com/qr/qr_cgi_e.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><s>I couldn't find a javascript qr code generator.</s></p>\n\n<p><s>But you could </s>Consider using Google's API:</p>\n\n<p><a href=\"http://code.google.com/apis/chart/docs/gallery/qr_codes.html\" rel=\"nofollow\">http://code.google.com/apis/chart/docs/gallery/qr_codes.html</a>\n<a href=\"http://togosoft.com/web/qrcode/qrcode.js\" rel=\"nofollow\">http://togosoft.com/web/qrcode/qrcode.js</a></p>\n\n<p><strong>Update:</strong>\nI just tried <a href=\"http://d-project.googlecode.com/svn/trunk/misc/qrcode/js/qrcode.js\" rel=\"nofollow\">http://d-project.googlecode.com/svn/trunk/misc/qrcode/js/qrcode.js</a> and seems fine to me. The only thing I did was increase the size and made it close the TDs properly, since self closing is not correct html. <a href=\"http://k3rmit.org/nopaste/759\" rel=\"nofollow\">http://k3rmit.org/nopaste/759</a>\nI tested 3 different strings and used a App called QRReader on my iPhone to decode.</p>\n\n<p><strong>Update 2:</strong>\nWith <code>var qr = new QRCode(10, QRErrorCorrectLevel.L);</code> I was able to fit 271 chars in the QRCode however might not be the most reliable setting.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I wrote a simple GPLv3 qr encoder in javascript that is local, uses HTML5 and is really fast as it is a port of an embedded C version I wrote for Atmel AVR processors.</p>\n\n<p><a href=\"http://code.google.com/p/jsqrencode/downloads/list\">http://code.google.com/p/jsqrencode/downloads/list</a></p>\n\n<p>There is a live version (which is saveable as a webapp on iOS devices)</p>\n\n<p><a href=\"http://zdez.org/qrenc2.html\">http://zdez.org/qrenc2.html</a> (save to home, opens in safari so you can copy the image or use airprint)</p>\n\n<p>There is a qrenc1.html that is full screen</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>The QR code in the initial post only supports up to 271 bytes (version 10, Size = 57x57, EC level L). </p>\n\n<p>To make it support the full specs of QR code (version 40, 177x177, 2953 bytes), you have to add more values into its RS_BLOCK_TABLE. </p>\n\n<p>See the remaining matrices (version 11-40) here:\n<a href=\"http://two.pairlist.net/pipermail/reportlab-users/2010-September/009707.html\" rel=\"nofollow\">http://two.pairlist.net/pipermail/reportlab-users/2010-September/009707.html</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I've found a working javascript-jquery based qrcode generator that you might be interested. Its opensource and it's really working. Here is the link: <a href=\"https://github.com/jeromeetienne/jquery-qrcode\">https://github.com/jeromeetienne/jquery-qrcode</a></p>\n\n<p>The good thing about this one is that its light weight and it does not call any remote service or website.</p>\n\n<p>Best regards,</p>\n\n<p>Randy D. Binondo</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There is a simple JavaScript library which I found sometime back called <a href=\"http://davidshimjs.github.com/qrcodejs/\">QRCode.js</a>. </p>\n\n<p>QRCode.js is a cross-browser JavaScript library which allows you to generate QRCodes on the fly, on the client-side.  QRCode.js makes use of HTMl5 Canvas and Tables to display the QRCode.  The library itself has no dependencies whatsoever.</p>\n\n<p>To generate a QRCode, you just need to include the JavaScript library and then pass as parameters to the QRCode function, the text you want to encode as the QRCode, the width &amp; height of the QRCode you want to display, as well as your specified foreground color and background color.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>npm has a few. I have no idea which ones are good.</p>\n\n<pre><code>$ npm search qrcode\nnpm http GET https://registry.npmjs.org/-/all/since?stale=update_after&amp;startkey=1379059929305\nnpm http 200 https://registry.npmjs.org/-/all/since?stale=update_after&amp;startkey=1379059929305\nNAME             DESCRIPTION                                                   A\njsqrcode         a node port of Lazar Laszlo's `jsqrcode` qr code decoder      =\njsqrcode-lite    Simplified version of Lazar Laszlo's `jsqrcode` for node.     =\nnode-zxing       ZXing Wrapper                                                 =\nqr               A small library to generate QR codes with libqrencode.        =\nqr-element       qrcode dom element                                            =\nqr.js            qrcode encoding in javascript                                 =\nqrcode           QRCode / 2d Barcode api with both server side and client side s\nqrcode-emitter   Emits QR codes found in an image stream.                      =\nqrcode-npm       QRCode Generator for JavaScript                               =\nqrcode-terminal  QRCodes, in the terminal                                      =\nqrcode.js        QR Code Detection / Decoding / Generation                     =\nqread            QRcode detector &amp; decoder                                     =\nqruri            NodeJS port of Kang Seonghoon's qr.js                         =\nrescode          Generate Codes (EAN13, QRCODE ..)                             =\nzbar             node-zbar is a NodeJS binding to the ZBar QR Code library.   \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm currently looking for a js library that can encode text in qr codes. <a href=\"http://d-project.googlecode.com/svn/trunk/misc/qrcode/js/\"><strong>The only one</strong></a> I've been able to find so far seems broken, although other people claim to be using it. The sample page doesn't work. By playing a bit with it I managed to generate codes but they don't get decoded by the phone software.</p>\n\n<p>Is there another library is js for this? Has anyone managed to get it to work?</p>\n\n<p>I'm not interested in a solution that pulls the code from an online service (kaywa, google etc.).</p>\n\n<hr>\n\n<p><strong>Update:</strong></p>\n\n<p>Well, you guys are right, that library <em>does</em> work. My problem was that I tried including it in a HTML5 Boilerplate page, and document.write doesn't seem to work in that. I modified the sample code anyway to make the browser draw in a canvas not a table and I got the order of the fillRect function backwards. Below is the corrected function call.</p>\n\n<pre><code>context.fillRect(c * UNIT_SIZE, r * UNIT_SIZE, UNIT_SIZE, UNIT_SIZE);\n// it's column-row, not row-column; don't ask why :)\n</code></pre>\n\n<p>Since I don't get my image transposed anymore :), now the qr decodes fine. Thanks for the support.</p>\n",
            "last_activity_date": 1417101567,
            "question_id": 4542632,
            "score": 45,
            "tags": [
                "javascript",
                "qr-code"
            ],
            "title": "QR code generation library in javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If you can, return an HTML page instead of the XML.\n<br/>In that page you can use in a <code>SCRIPT</code> tag the command:<a href=\"https://developer.mozilla.org/en/DOM/window.postMessage\" rel=\"nofollow\"><code>parent.postMessage</code></a></p>\n\n<p>If you have to support older browsers(&lt; IE8 mainly), you can write and read <a href=\"http://www.sitepen.com/blog/2008/07/22/windowname-transport\" rel=\"nofollow\"><code>window.name</code></a> for messages below 2Mb.</p>\n\n<p>Both techniques allows you to pass string data between frames of different domains.</p>\n\n<p>Another technique is to use a <code>setInterval</code> that will call repeatedly the remote domain from the parent page using <a href=\"http://bob.pythonmac.org/archives/2005/12/05/remote-json-jsonp\" rel=\"nofollow\">JSONP</a> to know the status.</p>\n\n<p>In any case, you will need a cooperation from the remote domain to get the data.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The following approach is working in my setup (Firefox 3.6):</p>\n\n<pre><code>&lt;!-- hidden target frame --&gt;\n&lt;iframe name=\"load_target\" id=\"load_target\" onload=\"process(this);\" src=\"#\" ...&gt;\n\n&lt;!-- get data from iframe after load and process them --&gt; \n&lt;script type=\"text/javascript\"&gt;\n    function process(iframe) {\n       var data = iframe.contentWindow.document.body.innerHTML; \n       // got test data=\"&lt;xml&gt;&lt;a&gt;b&lt;/a&gt;&lt;/xml&gt;\"\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>It is working in Chrome as well, but it is needed to exclude a first onload call after the loading of the parent page. This is easily accomplished by setting a \"global\" variable which is tested in <code>process()</code>.</p>\n\n<p><strong>ADDITION</strong> </p>\n\n<p>The method works together with a form</p>\n\n<pre><code>&lt;form action=\"URL\" method=\"post\" enctype=\"multipart/form-data\" target=\"load_target\"&gt;\n</code></pre>\n\n<p>which is submitted to <code>URL</code>. This <code>URL</code> needs to reside on the same domain as the parent page <code>page.html</code>. If data from a <code>REMOTE_URL</code> are to be downloaded, then <code>URL</code> would be a PHP <code>proxy.php</code> on the own domain with the content</p>\n\n<pre><code>&lt;?php echo file_get_contents(\"REMOTE_URL\"); ?&gt;\n</code></pre>\n\n<p>This is a simple approach - however, it is probably excluded by the condition (2) of the question. I have added it here to make my answer complete. </p>\n\n<p>Other approaches, considering iframes only, are discussed by <a href=\"http://softwareas.com/cross-domain-communication-with-iframes\" rel=\"nofollow\">Mahemoff</a> and <a href=\"http://ternarylabs.com/2011/03/27/secure-cross-domain-iframe-communication/\" rel=\"nofollow\">Georges Auberger</a>.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Just send a cross-domain XHR request with the data from the form instead of submitting the form. CORS is only for the former.</p>\n\n<p>If you must do it the other way, negotiate with the frame using postMessage.</p>\n\n<blockquote>\n  <p>And since the contents of the IFRAME is an XML document, there is no JavaScript code inside the IFRAME which could make use of postMessage or something.</p>\n</blockquote>\n\n<p>How does that stop you? Include a script element under the HTML or SVG namespace (<code>&lt;script xmlns=\"http://www.w3.org/1999/xhtml\" type=\"application/ecmascript\" src=\"...\"/&gt;</code>) anywhere in the XML.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>I think it can't be done with the way you're describing. Normally if you have cross domain issues you can solve it by a JSONp approach but that only works for GET requests. With HTML5 you could potentially send binary with the GET request but that's just iffy.</p>\n\n<ul>\n<li><p>A solution would be to make the remote webservice available locally by proxying the request on the local webserver. This will cause additional load for your local webserver so I can imagine that it is infeasible. If the files are small and infrequent though, this will do nicely.</p></li>\n<li><p>Another solution would be to start polling the server after you've sent the file. You could send along a token and poll the status of the server using regular JSONp. This way you don't need to read from the iframe.</p></li>\n<li><p>Put the whole page in an iframe that runs on the remote server. This might just move the problem, but if the XML output is the final step in some process it's quite feasible.</p></li>\n</ul>\n\n<p>I'm sure you have a good reasons for the processing server to be on a different domain, but if it weren't you wouldn't have all these problems. Perhaps it's worthwhile to reconsider?</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<h1>It is possible! Read below.</h1>\n\n<hr>\n\n<p>First of all, let me use this diagram to explain how <strong>asynchronous file uploads</strong> can be achieved:</p>\n\n<hr>\n\n<p><em>Sorry. I've shut down one of my domains, and the image is gone now. It was a really nice image though. This was before I found out that Stack Overflow enables uploading images via Imgur.</em> </p>\n\n<hr>\n\n<p>As you can see, the trick is to let the HTTP-response load into a hidden IFRAME element instead of the page itself. (This is done by setting the <code>target</code> property of the FORM element when submitting the FORM with JavaScript.)</p>\n\n<p>This works. However, the problem I'm facing is that the server-side script is on a <strong>different domain</strong>. The FORM-submit is a cross-domain HTTP-request. Now, the server-side script has CORS enabled which gives my web-page the rights to read the response-data of HTTP-requests made from my page to that script - but that works only if I receive the HTTP-response via Ajax, ergo, JavaScript.</p>\n\n<p>However, int this case, the response is directed towards the IFRAME element. And once the XML response lands into the IFRAME, its URL will be the remove script - e.g. <code>http://remote-domain.com/script.pl</code>.</p>\n\n<p>Unfortunately, CORS does not cover this case (at least I think) - I am not able to read the contents of the IFRAME since its URL doesn't match the URL of the page (different domain). I get this error:</p>\n\n<blockquote>\n  <p>Unsafe JavaScript attempt to access frame with URL\n  hxxp://remote-domain.com/script.pl from frame with URL\n  hxxp://my-domain.com/outer.html. Domains, protocols and ports must\n  match.</p>\n</blockquote>\n\n<p>And since the contents of the IFRAME is an XML document, there is no JavaScript code inside the IFRAME which could make use of <code>postMessage</code> or something.</p>\n\n<p>So my question is: <strong>How can I get the XML contents from the IFRAME?</strong></p>\n\n<p>As I said above, I am able to retrieve cross-domain HTTP-responses directly (CORS enabled), but it seems that I am not able to read cross-domain HTTP-responses once they load into an IFRAME.</p>\n\n<p>And as if this question is not unsolvable enough, let me <strong>exclude these solutions</strong>:</p>\n\n<ol>\n<li><p>easyXDM and similar techniques which require an end-point on the remote domain,</p></li>\n<li><p>altering the XML response (to include a SCRIPT element), </p></li>\n<li><p>server-side proxy - I understand that I could have a server-side script on my domain which could serve as a proxy.</p></li>\n</ol>\n\n<p>So, apart from those two solutions, can this be done?</p>\n\n<hr>\n\n<h1>It can be done!!</h1>\n\n<p>It turns out that it is possible to forge a XHR-request (Ajax-request) which imitates a <code>multipart/form-data</code> FORM submit (which is used in the image above to upload the file to the server).</p>\n\n<p>The trick is to use <code>FormData</code> constructor - read <a href=\"http://hacks.mozilla.org/2010/07/firefox-4-formdata-and-the-new-file-url-object/\">this Mozilla Hacks article</a> for more information.</p>\n\n<p>This is how you do it:</p>\n\n<pre><code>// STEP 1\n// retrieve a reference to the file\n// &lt;input type=\"file\"&gt; elements have a \"files\" property\nvar file = input.files[0];\n\n// STEP 2\n// create a FormData instance, and append the file to it\nvar fd = new FormData();\nfd.append('file', file);\n\n// STEP 3 \n// send the FormData instance with the XHR object\nvar xhr = new XMLHttpRequest();\nxhr.open('POST', 'http://remote-domain.com/script.pl', true);\nxhr.onreadystatechange = responseHandler;\nxhr.send(fd);\n</code></pre>\n\n<p>The above method executes an asynchronous file-uplaod, which is equivalent to the regular file-upload described in the image above and achieved by submitting this form:</p>\n\n<pre><code>&lt;form action=\"http://remote-domain.com/script.pl\" \n        enctype=\"multipart/form-data\" method=\"post\"&gt;\n    &lt;input type=\"file\" name=\"file\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n<h1>Like a Boss :)</h1>\n",
            "last_activity_date": 1396144692,
            "question_id": 6718664,
            "score": 33,
            "tags": [
                "javascript",
                "html",
                "iframe",
                "file-upload",
                "cross-domain"
            ],
            "title": "Is it possible to perform an asynchronous cross-domain file-upload?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I've found out the solution! Thanks to Firebug ;)</p>\n\n<pre><code>//V2 version is:\nGEvent.trigger(markers[i], 'click');\n\n//V3 version is:\ngoogle.maps.event.trigger(markers[i], 'click');\n</code></pre>\n\n<p>If theres a better way, let me know...</p>\n",
                    "is_accepted": true,
                    "score": 191
                }
            ],
            "body": "<p>How do I trigger the <em>onclick</em> event of a marker on a Google Maps from outside the map?</p>\n\n<p>I use <strong>version 3</strong> of the API. I've seen many tutorials for version 2, but can't find this for version 3.</p>\n\n<p>I have a global array (named <em>markers</em>) containing all the marker of the map (google.maps.Marker). Now I want do do something like:</p>\n\n<pre><code>markers[i].click(); //I know it's not working, but you get the idea...\n\n//Next line seems to be the way in v2, but what's the equivalent in v3?\nGEvent.trigger(markers[i], 'click');\n</code></pre>\n\n<p>Thanks for your help and if you need more info, let me know!</p>\n",
            "last_activity_date": 1289487457,
            "question_id": 2730929,
            "score": 63,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3"
            ],
            "title": "How to trigger the onclick event of a marker on a Google Maps V3?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>you can use Json from the action direct,</p>\n\n<p>you action would look something like</p>\n\n<pre><code>virtual public JsonResult DisplaySomeWidget(int id)\n            {\n                SomeModelView returnData = someDataMapper.getbyid(1);\n\n                return Json(returnData);\n            }\n</code></pre>\n\n<p>edit</p>\n\n<p>just seen that you assume that this is the Model of a View so the above isnt strictly correct, you would have to make an Ajax call to the controller method to get this, the ascx would not then have a model per se, I will leave my code in just in case it is useful to you and you can ammend the call</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>well done, youve only just started using MVC and youve found its first major flaw.</p>\n\n<p>You don't really want to be converting it to JSON in the view, and you dont really want to convert it in the controller, as neither of these locations make sense. Unfortunately, youre stuck with this situation.</p>\n\n<p>The best thing I've found to do is send the JSON to the view in a ViewModel, like this:</p>\n\n<pre><code>var data = somedata;\nvar viewModel = new ViewModel();\nvar serializer = new JavaScriptSerializer();\nviewModel.JsonData = serializer.Serialize(data);\n\nreturn View(\"viewname\", viewModel);\n</code></pre>\n\n<p>then use </p>\n\n<pre><code>&lt;%= Model.JsonData %&gt;\n</code></pre>\n\n<p>in your view. Be aware that the standard .NET JavaScriptSerializer is pretty crap.</p>\n\n<p>doing it in the controller at least makes it testable (although no exactly like the above, you probably want to take an ISerializer as a dependency so you can mock it)</p>\n\n<p><strong>Update</strong> also, in reference to your javascript, it would be good practice to wrap ALL the widget JS you have above like so:</p>\n\n<pre><code>(\n    // all js here\n)();\n</code></pre>\n\n<p>this way if you put multiple widgets on a page, you wont get conflicts (unless you need to access the methods from elsewhere in the page, but in that case you should be registering the widget with some widget framework anyway). It may not be a problem now, but it would be good practice to add the brackets now to save yourself muchos effort in the future when it becomes a requirement, its also good OO practice to encapsulate the functionality.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Andrew had a great response but I wanted to tweek it a little. The way this is different is that I like my ModelViews to not have overhead data in them. Just the data for the object.  It seem that ViewData fits the bill for over head data, but of course I'm new at this. I suggest doing something like this.</p>\n\n<p><strong>Controller</strong></p>\n\n<pre><code>virtual public ActionResult DisplaySomeWidget(int id)\n            {\n                SomeModelView returnData = someDataMapper.getbyid(1);\n                var serializer = new JavaScriptSerializer();\n                ViewData[\"JSON\"] = serializer.Serialize(returnData);\n                return View(myview, returnData);\n            }\n</code></pre>\n\n<p><strong>View</strong></p>\n\n<pre><code>   //create base js object;\n    var myWidget= new Widget(); //Widget is a class with a public member variable called data.\n    myWidget.data= &lt;%= ViewData[\"JSON\"] %&gt;;\n</code></pre>\n\n<p>What This does for you is it gives you the same data in your JSON as in your ModelView so you can potentially return the JSON back to your controller and it would have all the parts.  This is similar to just requesting it via a JSONRequest however it requires one less call so it saves you that overhead.  BTW this is funky for Dates but that seems like another thread.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In mvc3 with razor <code>@Html.Raw(Json.Encode(object))</code> seems to do the trick.</p>\n",
                    "is_accepted": true,
                    "score": 148
                },
                {
                    "body": "<p>I found it to be pretty nice to do it like this (usage in the view):</p>\n\n<pre><code>    @Html.HiddenJsonFor(m =&gt; m.TrackingTypes)\n</code></pre>\n\n<p>Here is the according helper method Extension class:</p>\n\n<pre><code>public static class DataHelpers\n{\n    public static MvcHtmlString HiddenJsonFor&lt;TModel, TProperty&gt;(this HtmlHelper&lt;TModel&gt; htmlHelper, Expression&lt;Func&lt;TModel, TProperty&gt;&gt; expression)\n    {\n        return HiddenJsonFor(htmlHelper, expression, (IDictionary&lt;string, object&gt;) null);\n    }\n\n    public static MvcHtmlString HiddenJsonFor&lt;TModel, TProperty&gt;(this HtmlHelper&lt;TModel&gt; htmlHelper, Expression&lt;Func&lt;TModel, TProperty&gt;&gt; expression, object htmlAttributes)\n    {\n        return HiddenJsonFor(htmlHelper, expression, HtmlHelper.AnonymousObjectToHtmlAttributes(htmlAttributes));\n    }\n\n    public static MvcHtmlString HiddenJsonFor&lt;TModel, TProperty&gt;(this HtmlHelper&lt;TModel&gt; htmlHelper, Expression&lt;Func&lt;TModel, TProperty&gt;&gt; expression, IDictionary&lt;string, object&gt; htmlAttributes)\n    {\n        var name = ExpressionHelper.GetExpressionText(expression);\n        var metadata = ModelMetadata.FromLambdaExpression(expression, htmlHelper.ViewData);\n\n        var tagBuilder = new TagBuilder(\"input\");\n        tagBuilder.MergeAttributes(htmlAttributes);\n        tagBuilder.MergeAttribute(\"name\", name);\n        tagBuilder.MergeAttribute(\"type\", \"hidden\");\n\n        var json = JsonConvert.SerializeObject(metadata.Model);\n\n        tagBuilder.MergeAttribute(\"value\", json);\n\n        return MvcHtmlString.Create(tagBuilder.ToString());\n    }\n}\n</code></pre>\n\n<p>It is not super-sofisticated, but it solves the problem of where to put it (in Controller or in view?) The answer is obviously: neither ;)</p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I am Java developer new to .NET. I am working on a .Net MVC2 project where I want to have a partial view to wrap a widget.  Each JS widget object has a JSON data object that would be populated by the model data. Then methods to update this data bound to events when data is changed in the widget or if that data is changed in another widget. The code is something like this.</p>\n\n<p><strong>MyController</strong>    </p>\n\n<pre><code>virtual public ActionResult DisplaySomeWidget(int id)\n            {\n                SomeModelView returnData = someDataMapper.getbyid(1);\n\n                return View(myview, returnData);\n            }\n</code></pre>\n\n<p><strong>myview.ascx</strong>    </p>\n\n<pre><code> &lt;%@ Control Language=\"C#\" Inherits=\"System.Web.Mvc.ViewUserControl&lt;SomeModelView&gt;\" %&gt;\n\n            &lt;script type=\"text/javascript\"&gt;\n\n                //creates base widget object;\n                var thisWidgetName= new Widget();\n\n                thisWidgetName.updateTable= function() {\n                  //  UpdatesData\n                };\n\n                    $(document).ready(function () {\n                        thisWidgetName.data = &lt;% converttoJSON(model) %&gt;\n                        $(document).bind('DATA_CHANGED',  thisWidgetName.updateTable());\n                    });\n                &lt;/script&gt;\n\n            &lt;div&gt;&lt;%:model.name%&gt;&lt;/div&gt;\n</code></pre>\n\n<p>What I don't know is how to send the data over as SomeModelView and then be able to use that to populate the widget as well as convert that to Json.  I had seem some real simple ways to do it in the controller but not in the view.  I figure this is a basic question bu I've been going for a few hours trying to make this slick.</p>\n",
            "last_activity_date": 1353529256,
            "question_id": 3365551,
            "score": 62,
            "tags": [
                ".net",
                "javascript",
                "asp.net-mvc",
                "json"
            ],
            "title": "ASP.NET MVC: How to convert View Model into Json object"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I've used closures to do things like:</p>\n\n<pre><code>a = (function () {\n    var privatefunction = function () {\n        alert('hello');\n    }\n\n    return {\n        publicfunction : function () {\n            privatefunction();\n        }\n    }\n})();\n</code></pre>\n\n<p>As you can see there, <code>a</code> is now an object, with a method <code>publicfunction</code> ( <code>a.publicfunction()</code> ) which calls <code>privatefunction</code>, which only exists inside the closure.  You can <strong>NOT</strong> call <code>privatefunction</code> directly (i.e. <code>a.privatefunction()</code> ), just <code>publicfunction()</code>.</p>\n\n<p>Its a minimal example but maybe you can see uses to it? We used this to enforce public/private methods.</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>Yes, that is a good example of a useful closure. The call to warnUser creates the <code>calledCount</code> variable in its scope and returns an anonymous function which is stored in the <code>warnForTamper</code> variable.  Because there is still a closure making use of the calledCount variable, it isn't deleted upon the function's exit, so each call to the <code>warnForTamper()</code> will increase the scoped variable and alert the value.</p>\n\n<p>The most common issue I see on StackOverflow is where someone wants to \"delay\" use of a variable that is increased upon each loop, but because the variable is scoped then each reference to the variable would be after the loop has ended, resulting in the end state of the variable:</p>\n\n<pre><code>for (var i = 0; i &lt; someVar.length; i++)\n    window.setTimeout(function () { \n        alert(\"Value of i was \"+i+\" when this timer was set\" )\n    }, 10000);\n</code></pre>\n\n<p>This would result in every alert showing the same value of <code>i</code>, the value it was increased to when the loop ended.  The solution is to create a new closure, a separate scope for the variable.  This can be done using an instantly executed anonymous function, which receives the variable and stores its state as an argument:</p>\n\n<pre><code>for (var i = 0; i &lt; someVar.length; i++)\n    (function (i) {\n        window.setTimeout(function () { \n            alert(\"Value of i was \"+i+\" when this timer was set\" )\n        }, 10000);\n    })(i); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>The example you give is an excellent one. Closures are an abstraction mechanism that allow you to separate concerns very cleanly. Your example is a case of separating instrumentation (counting calls) from semantics (an error-reporting API). Other uses include:</p>\n\n<ol>\n<li><p>Passing parameterised behaviour into an algorithm (classic higher-order programming):</p>\n\n<pre><code>function proximity_sort(arr, midpoint) {\n    arr.sort(function(a, b) { a -= midpoint; b -= midpoint; return a*a - b*b; });\n}\n</code></pre></li>\n<li><p>Simulating object oriented programming:</p>\n\n<pre><code>function counter() {\n    var a = 0;\n    return {\n        inc: function() { ++a; },\n        dec: function() { --a; },\n        get: function() { return a; },\n        reset: function() { a = 0; }\n    }\n}\n</code></pre></li>\n<li><p>Implementing exotic flow control, such as jQuery's Event handling and AJAX APIs.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>In the JavaScript (or any ECMAScript) language, in particular, closures are useful in hiding the implementation of functionality while still revealing the interface.</p>\n\n<p>For example, imagine you are writing a class of date utility methods and you want to allow users to lookup weekday names by index but you don't want them to be able to modify the array of names you use under the hood.</p>\n\n<pre><code>var dateUtil = {\n  weekdayShort: (function() {\n    var days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n    return function(x) {\n      if ((x != parseInt(x)) || (x &lt; 1) || (x &gt; 7)) {\n        throw new Error(\"invalid weekday number\");\n      }\n      return days[x - 1];\n    };\n  }())\n};\n</code></pre>\n\n<p>Note that the <code>days</code> array could simply be stored as a property of the <code>dateUtil</code> object but then it would be visible to users of the script and they could even change it if they wanted, without even needing your source code.  However, since it's enclosed by the anonymous function which returns the date lookup function it is only accessible by the lookup function so it is now tamper-proof.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I wrote an article a while back about how closures can be used to simplify event-handling code. It compares ASP.NET event handling to client-side jQuery.</p>\n\n<p><a href=\"http://www.hackification.com/2009/02/20/closures-simplify-event-handling-code/\" rel=\"nofollow\">http://www.hackification.com/2009/02/20/closures-simplify-event-handling-code/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're comfortable with the concept of instantiating a class in the object-oriented sense (i.e. to create an object of that class) then you're close to understanding closures. </p>\n\n<p>Think of it this way: when you instantiate two Person objects you know that the class member variable \"Name\" is not shared between instances; each object has its own 'copy'. Similarly, when you create a closure, the <em>free variable</em> ('calledCount' in your example above) is bound to the 'instance' of the function. </p>\n\n<p>I think your conceptual leap is slightly hampered by the fact that every function/closure returned by the warnUser function (aside: that's a <em>higher-order function</em>) closure binds 'calledCount' with the same initial value (0), whereas often when creating closures it is more useful to pass different initializers into the higher-order function, much like passing different values to the constructor of a class.</p>\n\n<p>So, suppose when 'calledCount' reaches a certain value you want to end the user's session; you might want different values for that depending on whether the request comes in from the local network or the big bad internet (yes, it's a contrived example). To achieve this, you could pass different initial values for calledCount into warnUser (i.e. -3, or 0?).</p>\n\n<p>Part of the problem with the literature is the nomenclature used to describe them (\"lexical scope\", \"free variables\"). Don't let it fool you, closures are more simple than would appear... prima facie ;-)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is a section on <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Closures#Practical_closures\" rel=\"nofollow\">Practical Closures</a> at the <a href=\"https://developer.mozilla.org/en\" rel=\"nofollow\">Mozilla Developer Network</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Another common use for closures is to bind <code>this</code> in a method to a specific object, allowing it to be called elsewhere (such as as an event handler).</p>\n\n<pre><code>function bind(obj, method) {\n    if (typeof method == 'string') {\n        method = obj[method];\n    }\n    return function () {\n        method.apply(obj, arguments);\n    }\n}\n...\ndocument.body.addEventListener('mousemove', bind(watcher, 'follow'), true);\n</code></pre>\n\n<p>Whenever a mousemove event fires, <code>watcher.follow(evt)</code> is called.</p>\n\n<p>Closures are also an essential part of higher-order functions, allowing the very common pattern of rewriting multiple similar functions as a single higher order function by parameterizing the dissimilar portions. As an abstract example,</p>\n\n<pre><code>foo_a = function (...) {A a B}\nfoo_b = function (...) {A b B}\nfoo_c = function (...) {A c B}\n</code></pre>\n\n<p>becomes</p>\n\n<pre><code>fooer = function (x) {\n    return function (...) {A x B}\n}\n</code></pre>\n\n<p>where A and B aren't syntactical units but source code strings (not string literals).</p>\n\n<p>See \"<a href=\"http://stackoverflow.com/questions/2775630/streamlining-my-javascript-with-a-function\">Streamlining my javascript with a function</a>\" for a concrete example.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>Another great example would be a converter class:</strong><br/></p>\n\n<pre><code>function converter(toUnit, factor, offset, input) {\n     offset = offset || 0;\n     return [((offset+input)*factor).toFixed(2), toUnit].join(\" \");\n}\n\nvar milesToKm = converter.curry('km',1.60936,undefined);\nvar poundsToKg = converter.curry('kg',0.45460,undefined);\nvar farenheitToCelsius = converter.curry('degrees C',0.5556, -32);\n\nmilesToKm(10);            // returns \"16.09 km\"\npoundsToKg(2.5);          // returns \"1.14 kg\"\nfarenheitToCelsius(98);   // returns \"36.67 degrees C\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Closures are a useful way to create <a href=\"/questions/tagged/generators\" class=\"post-tag\" title=\"show questions tagged &#39;generators&#39;\" rel=\"tag\">generators</a>, a sequence incremented on-demand:</p>\n\n<pre><code>var foobar = function(i){var count = count || i; return function(){return ++count;}}\n\nbaz = foobar(1);\nbaz(); //2\nbaz(); //3\n</code></pre>\n\n<p>The differences are summarized as follows:</p>\n\n<pre>\nAnonymous functions                                    Defined functions\n\nCannot be used as a method                             Can be used as a method of an object\n\nExists only in the scope in which it is defined        Exists within the object it is defined in\n\nCan only be called in the scope in which it is defined Can be called at any point in the code\n\nCan be reassigned a new value or deleted               Cannot be deleted or changed\n</pre>\n\n<p><strong>References</strong></p>\n\n<ul>\n<li><a href=\"http://www.adobe.com/devnet/actionscript/learning/as3-fundamentals/functions.html\" rel=\"nofollow\">AS3 Fundamentals: Functions</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm <a href=\"http://jsbin.com/ojuxo/edit\">trying</a> my hardest to wrap my head around JavaScript closures.</p>\n\n<p>I get that by returning an inner function, it will have access to any variable defined in its immediate parent.</p>\n\n<p>Where would this be useful to me? Perhaps I haven't quite got my head around it yet. Most of the <a href=\"http://blog.morrisjohns.com/javascript_closures_for_dummies.html\">examples I have seen online</a> don't provide any real world code, just vague examples.</p>\n\n<p>Can someone show me a real world use of a closure?</p>\n\n<p>Is this one, for example?</p>\n\n<pre><code>var warnUser = function (msg) {\n    var calledCount = 0;\n    return function() {\n       calledCount++;\n       alert(msg + '\\nYou have been warned ' + calledCount + ' times.');\n    };\n};\n\nvar warnForTamper = warnUser('You can not tamper with our HTML.');\nwarnForTamper();\nwarnForTamper();\n</code></pre>\n",
            "last_activity_date": 1418657787,
            "question_id": 2728278,
            "score": 61,
            "tags": [
                "javascript",
                "closures",
                "terminology",
                "sample"
            ],
            "title": "What is a practical use for a closure in JavaScript?"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>Try Jquery Interface Elements here - <a href=\"http://interface.eyecon.ro/docs/carousel\" rel=\"nofollow\">http://interface.eyecon.ro/docs/carousel</a></p>\n\n<p>Here's a sample.  <a href=\"http://interface.eyecon.ro/demos/carousel.html\" rel=\"nofollow\">http://interface.eyecon.ro/demos/carousel.html</a></p>\n\n<p>I looked around for a Jquery image carousel a few months ago and didn't find a good one so I gave up.  This one was the best I could find.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Not sure if you're talking about Coverflow (scroll through images) or Quicklook (preview files in lightbox), try editing your question.</p>\n\n<p>Here's some JS Coverflow implementations:</p>\n\n<ul>\n<li><a href=\"http://www.outcut.de/MooFlow/example-ajax.html\">MooFlow - Coverflow for MooTools</a></li>\n<li><a href=\"http://radnan.public.iastate.edu/coverflow/\">Coverflow in JS proof of concept</a></li>\n<li><a href=\"http://paulbakaus.com/?p=6&amp;language=en\">Coverflow using JS and CSS Transforms (Webkit only)</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>There is an Apple style Gallery Slider over at \n<a href=\"http://www.jqueryfordesigners.com/slider-gallery/\" rel=\"nofollow\">http://www.jqueryfordesigners.com/slider-gallery/</a> which uses jQuery and the UI.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This one looks really promising, and closer to the actual Apple coverflow effect than the other examples:</p>\n\n<p><a href=\"http://www.blarnee.com/projects/cflow/\" rel=\"nofollow\">blarnee.com/projects/cflow</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://www.jacksasylum.eu/ContentFlow/\">http://www.jacksasylum.eu/ContentFlow/</a></p>\n\n<ul>\n<li>is the best I ever found. \na true 'CoverFlow', highly configurable, cross-browser, very smooth action, has relections and supports scroll wheel + keyboard control. - has to be what your looking for! </li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 68
                },
                {
                    "body": "<p>Check out momoflow: <a href=\"http://flow.momolog.info\" rel=\"nofollow\">http://flow.momolog.info</a>\nTrue coverflow effect, and performant on Webkit (Safari and Chrome) and Opera, ok on Firefox.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>the effect that happens when you hit the space bar in a folder of\n  documents, allowing you to preview them in a lightbox fashion</p>\n</blockquote>\n\n<p>Looks like a classic lightbox plugin is needed. This is my favorite jQuery lightbox plugin: <a href=\"http://colorpowered.com/colorbox/\" rel=\"nofollow\">http://colorpowered.com/colorbox/</a>. It's easy to customize, etc.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just to let you all know, xFlow! has had some major work done on it and is vastly improved.</p>\n\n<p>Go to <a href=\"http://xflow.pwhitrow.com\" rel=\"nofollow\">http://xflow.pwhitrow.com</a> for more info and the latest version.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://www.jcoverflip.com\" rel=\"nofollow\">jCoverflip</a> was just released and is very customizable.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>i am currently working on this and planning on releasing it as a jQuery-ui plugin.</p>\n\n<p>-> <a href=\"http://coulisse.luvdasun.com/\" rel=\"nofollow\">http://coulisse.luvdasun.com/</a></p>\n\n<p>please let me know if you are interested and what you are hoping to see in such a plugin.</p>\n\n<p>gr</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think this is what you want <a href=\"http://addyosmani.com/blog/jqueryuicoverflow/\">http://addyosmani.com/blog/jqueryuicoverflow/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>colorbox has such amazing features..loving it.\nAlso like this one <a href=\"http://www.webappers.com/2008/03/05/galleria-simple-but-nice-jquery-image-gallery/\" rel=\"nofollow\">http://www.webappers.com/2008/03/05/galleria-simple-but-nice-jquery-image-gallery/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I tried using the the Jack's Asylum cover flow but it wouldn't let me easily remove and re-add an entire coverflow. I eventually found <a href=\"http://finnrudolph.de/ImageFlow\" rel=\"nofollow\">http://finnrudolph.de/ImageFlow</a> and not only is it more reliable, it's easier to hook into, uses less markup, and doesn't jitter when flipping through images. It's by far the best I've found, and I've tried several on this page.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Is this what you are looking for? </p>\n\n<p>\"<a href=\"http://youhack.me/2011/08/11/create-an-itunes-like-banner-rotatorslideshow-with-jquery/\" rel=\"nofollow\">Create an Apple Itunes-like banner rotator/slideshow with jQuery</a>\" is an article explaining how you can make such effect using jQuery.</p>\n\n<p>You can also view the\n<a href=\"http://youhack.me/demo/Apple%20itunes%20banner%20rotator/index.html\" rel=\"nofollow\">live demo</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Does anyone know how to achieve the cover-flow effect using JS to scroll through a bunch of images.  I'm not talking about the 3d rotating itunes cover-art, but the effect that happens when you hit the space bar in a folder of documents, allowing you to preview them in a lightbox fashion.</p>\n",
            "last_activity_date": 1390260775,
            "question_id": 67207,
            "score": 53,
            "tags": [
                "javascript",
                "jquery",
                "client-side-scripting"
            ],
            "title": "Apple Cover-flow effect using jQuery or other library?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>The problem is that Paste plugin automatically resets plain text paste on every paste. So all we need to do - set it back. The following code should help.</p>\n\n<pre><code>tinyMCE.init({\n...\noninit : \"setPlainText\",\nplugins : \"paste\"\n\n....\n});\n</code></pre>\n\n<p>The definition of  setPlainText</p>\n\n<pre><code> function setPlainText() {\n        var ed = tinyMCE.get('elm1');\n\n        ed.pasteAsPlainText = true;  \n\n        //adding handlers crossbrowser\n        if (tinymce.isOpera || /Firefox\\/2/.test(navigator.userAgent)) {\n            ed.onKeyDown.add(function (ed, e) {\n                if (((tinymce.isMac ? e.metaKey : e.ctrlKey) &amp;&amp; e.keyCode == 86) || (e.shiftKey &amp;&amp; e.keyCode == 45))\n                    ed.pasteAsPlainText = true;\n            });\n        } else {            \n            ed.onPaste.addToTop(function (ed, e) {\n                ed.pasteAsPlainText = true;\n            });\n        }\n    }\n</code></pre>\n\n<p>So now it always will be plain. </p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>I'm not sure this is possible, since \"paste as plaintext\" actually performs cleanup on the text before it adds it to the window. If you just paste data into the window, no operations can be done. (Unless you hooked into the <code>onChange</code> or something), but they you might end up fixing code that had already been pasted and thus, 'double fixing' it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have solved this problem with this code</p>\n\n<pre><code>tinyMCE.init({\n...\nplugins : \"paste\",\npaste_text_sticky : true,\nsetup : function(ed) {\n    ed.onInit.add(function(ed) {\n      ed.pasteAsPlainText = true;\n    });\n  }\n....\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 69
                },
                {
                    "body": "<p>Isn't it better to use:</p>\n\n<pre><code>var ed = tinyMCE.activeEditor;\n</code></pre>\n\n<p>instead of:</p>\n\n<pre><code>var ed = tinyMCE.get('elm1');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just ran into this one myself and discovered that as of TinyMCE 3.4.2 you can simply:</p>\n\n<pre><code>paste_text_sticky: true,\npaste_text_sticky_default: true\n</code></pre>\n\n<p>...which was nice.</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>FYI, TinyMCE has improved this by implementing it as a default option in the paste plugin.\nMore info: <a href=\"http://www.tinymce.com/wiki.php/Plugin:paste\" rel=\"nofollow\">http://www.tinymce.com/wiki.php/Plugin:paste</a></p>\n\n<p>However, it's still not perfect.\nSo here is a script that also trips off all HTML:</p>\n\n<pre><code>// Paste\n        paste_auto_cleanup_on_paste : true,\n        paste_remove_spans: true,\n        paste_remove_styles: true,\n        paste_retain_style_properties: false,\n\n        paste_preprocess : function(pl, o) \n        {    // Replace &lt;div&gt; with &lt;p&gt;\n            o.content = o.content.replace(/&lt;div&gt;/gi, \"&lt;p&gt;\");    \n            o.content = o.content.replace(/&lt;\\/div&gt;/gi, \"&lt;/p&gt;\");\n            o.content = o.content.replace(/&lt;\\r\\n/gi, \"\\n\");\n            o.content = o.content.replace(/&lt;\\n\\n/gi, \"\\n\");\n            o.content = o.content.replace(/&lt;\\n\\n/gi, \"\\n\");\n\n            // Replace empty styles\n            o.content = o.content.replace(/&lt;style&gt;&lt;\\/style&gt;/gi, \"\");    \n\n            o.wordContent = true;            \n        },\n\n        paste_postprocess : function(pl, o) \n        {    //console.log(o.node.innerHTML);\n            var ed = pl.editor, dom = ed.dom;\n\n            // Remove all tags which are not &lt;p&gt; or &lt;br&gt;\n            tinymce.each(dom.select('*', o.node), function(el) \n            {    if (el.tagName.toLowerCase() != \"p\" &amp;&amp; el.tagName.toLowerCase() != \"br\") \n                {    dom.remove(el, 1); // 1 = KeepChildren\n                    console.log(el.tagName);\n                }\n                dom.setAttrib(el, 'style', '');\n            });\n\n        },\n</code></pre>\n\n<p>Source:\n<a href=\"http://www.tinymce.com/forum/viewtopic.php?pid=60121#p60121\" rel=\"nofollow\">http://www.tinymce.com/forum/viewtopic.php?pid=60121#p60121</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I did as follows:</p>\n\n<pre><code>var pastePlainText = function() {\n    // No need to pass in an ID, instead fetch the first tinyMCE instance\n    var ed = tinyMCE.get(0); \n    ed.pasteAsPlainText = true;  \n\n    //adding handlers crossbrowser\n    if (tinymce.isOpera || /Firefox\\/2/.test(navigator.userAgent)) {\n        ed.onKeyDown.add(function (ed, e) {\n            if (((tinymce.isMac ? e.metaKey : e.ctrlKey) &amp;&amp; e.keyCode == 86) || (e.shiftKey &amp;&amp; e.keyCode == 45))\n                ed.pasteAsPlainText = true;\n        });\n    } else {            \n        ed.onPaste.addToTop(function (ed, e) {\n            ed.pasteAsPlainText = true;\n        });\n    }\n};\n</code></pre>\n\n<p>And then:    </p>\n\n<pre><code>tinyMCE.init({\n    // ...\n    plugins: \"paste\",\n    oninit: pastePlainText // Note, without \"\n    // ...\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For the tinyMCE 3X or 4X things have change a little.\nnow you can do this and it works fine.</p>\n\n<pre><code>tinymce.init({\n    plugins: \"paste\",\n    paste_as_text: true\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>I think the easiest way would be this:</p>\n\n<pre><code>tinymce.init({\n   ...\n   paste_as_text: true,\n   plugins: \"paste\",\n   ...\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>Without plug-in: Listen to paste event, get clipboard data</h2>\n\n<p>If you cannot use or do not want to use a plug-in for whatever reason, you can create your own \"paste as plain text\" callback function like so:</p>\n\n<pre><code>tinyMCE.init({\n\n    // ...,\n\n    setup: function (editor) {\n\n        // Listen for paste event, add \"Paste as plain text\" callback\n        editor.onPaste.add(function (editor, e) {\n\n            // Prevent default paste behavior\n            e.preventDefault();\n\n            // Check for clipboard data in various places for cross-browser compatibility.\n            // Get that data as text.\n            var content = ((e.originalEvent || e).clipboardData || window.clipboardData).getData('Text');\n\n            // Let TinyMCE do the heavy lifting for inserting that content into the editor.\n            editor.execCommand('mceInsertContent', false, content);\n        });\n    }\n});\n</code></pre>\n\n<p><em>Note: This was created for TinyMCE 3.5.x. Compatibility may vary by version.</em></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Googled it thousands of times, No one gives a complete solution of how to make Tinymce paste in plain text by default and strip out any formatting without clicking the \"paste as text\" button.</p>\n\n<p>Any Ideas of how to implement that? or how to enable the \"paste as text\" button automatically?</p>\n\n<p>Thank you</p>\n",
            "last_activity_date": 1422912092,
            "question_id": 2695731,
            "score": 46,
            "tags": [
                "javascript",
                "jquery",
                "tinymce"
            ],
            "title": "How to make tinymce paste in plain text by default"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I am not sure I fully understand your needs, but I have used the Really Simple History library (<a href=\"http://code.google.com/p/reallysimplehistory/\" rel=\"nofollow\">http://code.google.com/p/reallysimplehistory/</a>) for implementing something similar. You can see it here: <a href=\"http://whiteoak.sourceforge.net/\" rel=\"nofollow\">http://whiteoak.sourceforge.net/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Based on the effort that you've put into this, I would assume that you've seen <a href=\"http://developer.yahoo.com/yui/history/\" rel=\"nofollow\">YUI Browser History Manager</a>, but just in case ...</p>\n\n<p>They give a nice write up of their implementation, and I find their source code very readable.</p>\n\n<p>Here's what it says about Opera </p>\n\n<pre><code>* location.hash is a bit buggy on Opera. I have seen instances where\n* navigating the history using the back/forward buttons, and hence\n* changing the URL, would not change location.hash. That's ok, the\n* implementation of an equivalent is trivial ... more below\n</code></pre>\n\n<p>Searching the source I found some accomodations for Safari 1.x &amp; 2.0 also. Seems like you'd be interested in it.</p>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>First of all, thanks to you guys who answered! =)</p>\n\n<p>I've now done a lot more research and I believe I'm satisfied with my implementation. Here are the results of my research.</p>\n\n<p>First of all, <a href=\"http://github.com/blixt/js-hash\">my finished <code>Hash</code> library</a>. It's a stand-alone library with no dependencies. It has two functions: <code>Hash.init(callback, iframe)</code> and <code>Hash.go(newHash)</code>. The callback function is called whenever the hash changes with the new hash as its first argument, and as its second argument a flag indicating whether the callback is called due to initial state (<code>true</code>) or an actual change to the hash (<code>false</code>).</p>\n\n<blockquote>\n  <p><a href=\"http://github.com/blixt/js-hash/raw/master/Hash.js\">Hash.js</a> (MIT license)</p>\n</blockquote>\n\n<p>I also made a jQuery plugin for making it easier to use. Adds a global <code>hashchange</code> event as well. See example in source code for how to use it.</p>\n\n<blockquote>\n  <p><a href=\"http://github.com/blixt/js-hash/raw/master/jquery/jquery.hash.js\">jquery.hash.js</a> (MIT license)</p>\n</blockquote>\n\n<p>To see them in use, go to my JavaScript \"realm\" page:</p>\n\n<blockquote>\n  <p><a href=\"http://blixt.org/js\">Blixt's JavaScript realm</a></p>\n</blockquote>\n\n<h3>Internet Explorer 8</h3>\n\n<p>Smooooth cruisin'! Just smack on one o' them <code>onhashchange</code> events to the <code>window</code> object (using <code>attachEvent</code>) and get the <code>location.hash</code> value in the event handler.</p>\n\n<p>It doesn't matter if the user clicks a link with a hash, or if you set the hash programmatically; history is kept perfectly.</p>\n\n<h3>Chrome, Firefox, Safari 3+, Opera 8+</h3>\n\n<p>Smooth cruisin'! Just poll for changes to the <code>location.hash</code> property using <code>setInterval</code> and a function.</p>\n\n<p>History works perfectly. For Opera, I set <code>history.navigationMode</code> to <code>'compatible'</code>. To be honest, I'm not sure what it does, I did it on recommendation from a comment in the YUI code.</p>\n\n<p><em><strong>Note</strong>: Opera needs some additional testing, but it has worked fine for me so far.</em></p>\n\n<p><em><strong>Surprise quirk bonus! (Can it be?!)</strong> It turns out that Firefox (only confirmed in 3.5+) decodes the <code>location.hash</code> property, so this can trigger a <code>hashchange</code> event twice (first for the encoded version then for the unencoded version.) There is a new version of my Hash.js library that takes this into account by using the <code>location.href</code> property instead (changes provided by Aaron Ogle.)</em></p>\n\n<h3>Internet Explorer 6, 7</h3>\n\n<p>Now it gets nastier. The navigation history in older Internet Explorer versions ignore hash changes. To work around this, the commonly accepted solution is to create an <code>iframe</code> and set its content to the new hash. This creates a new entry in the navigation history. When the user goes back, this changes the content of the <code>iframe</code> to its previous content. By detecting the change of content, you can get it and set it as the active hash.</p>\n\n<p>Checking for changes to the <code>location.hash</code> property is still needed to manual changes to the current address. Beware of the quirks I've mentioned below, though.</p>\n\n<p>While this solution seems to be the best one out there, it's still not perfect in Internet Explorer 6, which is a bit quirky about the back/forward buttons. Internet Explorer 7 works fine, though.</p>\n\n<p><em><strong>Surprise quirk bonus #1!</strong> In Internet Explorer 6, whenever there's a question mark in the hash, this gets extracted and put in the</em> <code>location.search</code> <em>property! It is removed from the</em> <code>location.hash</code> <em>property. If there is a real query string, however,</em> <code>location.search</code> <em>will contain that one instead, and you'll only be able to get the whole true hash by parsing the</em> <code>location.href</code> <em>property.</em></p>\n\n<p><em><strong>Surprise quirk bonus #2!</strong> If the</em> <code>location.search</code> <em>property is set, any subsequent</em> <code>#</code> <em>characters will be removed from the</em> <code>location.href</code> <em>(and</em> <code>location.hash</code><em>) property. In Internet Explorer 6 this means that whenever there's a question mark in the path or the hash, you'll experience this quirk. In Internet Explorer 7, this quirk only occurs when there's a question mark in the path. Don't you just love the consistency in Internet Explorer?</em></p>\n\n<p><em><strong>Surprise quirk bonus #3!</strong> If another element on the page has the same id as the value of a hash, that hash will totally mess up the history. So rule of thumb is to avoid hashes with the same id as any elements on the page. If the hashes are generated dynamically and may collide with ids, consider using a prefix/suffix.</em></p>\n\n<h3>Other browsers</h3>\n\n<p>Unless you've got an out-of-the-ordinary user base, you won't need to support more browsers. The browsers not listed above are in the &lt;1% usage category.</p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>I haven't seen anything mentioned about what I am about to say anywhere so I thought I'd share and see how common knowledge it is.</p>\n\n<p>In IE (only verified in IE7), the history with the hash works correctly when there is a page element on the screen with an id equal to the hash.  For example, think of a table of contents (TOC) on a wiki page.  Each link in the TOC links to a hash of an id or anchor name element somewhere on the page:</p>\n\n<pre><code>&lt;div id=\"TOC\"&gt;\n&lt;a id=\"SampleHeaderLink\" href=\"#SampleHeader\"&gt;Sample Header&lt;/a&gt;\n&lt;/div&gt;\n\n&lt;h2 id=\"SampleHeader\"&gt;Sample Header&lt;/a&gt;\n</code></pre>\n\n<p>So when SampleHeaderLink is clicked, the IE browser default setting is to navigate to SampleHeader and register the state in the history.  Using the back button and forward button works as expected.</p>\n\n<p>However, if the SampleHeader div does not exist on the page, the browser only registers the url changing but does not create a new state for it.</p>\n\n<p>Again, this is only verified in IE7.  And I don't know how common-knowledge this information is but I never found anything related when I was browsing to fix this very issue in my own application.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>GWT provides history management. It is also an integral part of their MVP framework. They have also enhanced the history API with places and activities. </p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm currently implementing a JavaScript library that keeps track of the history of changes to the hash part in the address bar. The idea is that you can keep a state in the hash part, and then use the back button to go back to the previous state.</p>\n\n<p>In most of the recent browsers, this is automatic and you only have to poll the <code>location.hash</code> property for changes (In IE8 you don't even have to do that; you simply attach a function to the <code>onhashchange</code> event.)</p>\n\n<p><strong>What I'm wondering is</strong>, what different methods are there to keep track of the history? I've implemented functionality that has been tested to work in Internet Explorer 6/7/8, Firefox and Chrome, but what about other browsers? Here's the ways I currently keep the history:</p>\n\n<p><strong><em>Edit</strong>: See my answer below instead for a walk-through of the various browsers.</em></p>\n",
            "last_activity_date": 1374818655,
            "question_id": 1078501,
            "score": 28,
            "tags": [
                "javascript",
                "fragment-identifier"
            ],
            "title": "Keeping history of hash/anchor changes in JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Basically, you need to project from the 3D world space and the 2D screen space.</p>\n\n<p>Renderers use <code>projectVector</code> for translating 3D points to the 2D screen. <code>unprojectVector</code> is basically for doing the inverse, unprojecting 2D points into the 3D world. For both methods you pass the camera you're viewing the scene through.</p>\n\n<p>So, in this code you're creating a normalised vector in 2D space. To be honest, I was never too sure about the <code>z = 0.5</code> logic.</p>\n\n<pre><code>mouse3D.x = (event.clientX / window.innerWidth) * 2 - 1;\nmouse3D.y = -(event.clientY / window.innerHeight) * 2 + 1;\nmouse3D.z = 0.5;\n</code></pre>\n\n<p>Then, this code uses the camera projection matrix to transform it to our 3D world space.</p>\n\n<pre><code>projector.unprojectVector(mouse3D, camera);\n</code></pre>\n\n<p>With the mouse3D point converted into the 3D space, we can now use it for getting the direction and then use the camera position to throw a ray from.</p>\n\n<pre><code>var ray = new THREE.Ray(camera.position, mouse3D.subSelf(camera.position).normalize());\nvar intersects = ray.intersectObject(plane);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>I found that I needed to go a bit deeper under the surface to work outside of the scope of the sample code (such as having a canvas that does not fill the screen or having additional effects). I wrote a blog post about it <strong><a href=\"http://barkofthebyte.azurewebsites.net/post/2014/05/05/three-js-projecting-mouse-clicks-to-a-3d-scene-how-to-do-it-and-how-it-works\">here</a></strong>. This is a shortened version, but should cover pretty much everything I found.</p>\n\n<h3>How to do it</h3>\n\n<p>The following code (similar to that already provided by @mrdoob) will change the color of a cube when clicked:</p>\n\n<pre><code>    var mouse3D = new THREE.Vector3( ( event.clientX / window.innerWidth ) * 2 - 1,   //x\n                                    -( event.clientY / window.innerHeight ) * 2 + 1,  //y\n                                    0.5 );                                            //z\n    projector.unprojectVector( mouse3D, camera );   \n    mouse3D.sub( camera.position );                \n    mouse3D.normalize();\n    var raycaster = new THREE.Raycaster( camera.position, mouse3D );\n    var intersects = raycaster.intersectObjects( objects );\n    // Change color if hit block\n    if ( intersects.length &gt; 0 ) {\n        intersects[ 0 ].object.material.color.setHex( Math.random() * 0xffffff );\n    }\n</code></pre>\n\n<p>With the more recent three.js releases (around r55 and later), you can use pickingRay which simplifies things even further so that this becomes:</p>\n\n<pre><code>    var mouse3D = new THREE.Vector3( ( event.clientX / window.innerWidth ) * 2 - 1,   //x\n                                    -( event.clientY / window.innerHeight ) * 2 + 1,  //y\n                                    0.5 );                                            //z\n    var raycaster = projector.pickingRay( mouse3D.clone(), camera );\n    var intersects = raycaster.intersectObjects( objects );\n    // Change color if hit block\n    if ( intersects.length &gt; 0 ) {\n        intersects[ 0 ].object.material.color.setHex( Math.random() * 0xffffff );\n    }\n</code></pre>\n\n<p>Let's stick with the old approach as it gives more insight into what is happening under the hood. You can see this working <strong><a href=\"http://barkofthebyte.azurewebsites.net/demos/projspikesfssimple.htm\">here</a></strong>, simply click on the cube to change its colour.</p>\n\n<h3>What's happening?</h3>\n\n<pre><code>    var mouse3D = new THREE.Vector3( ( event.clientX / window.innerWidth ) * 2 - 1,   //x\n                                    -( event.clientY / window.innerHeight ) * 2 + 1,  //y\n                                    0.5 );                                            //z\n</code></pre>\n\n<p><code>event.clientX</code> is the x coordinate of the click position. Dividing by <code>window.innerWidth</code> gives the position of the click in proportion of the full window width. Basically, this is translating from screen coordinates that start at (0,0) at the top left through to (<code>window.innerWidth</code>,<code>window.innerHeight</code>) at the bottom right, to the cartesian coordinates with center (0,0) and ranging from (-1,-1) to (1,1) as shown below:</p>\n\n<p><img src=\"http://i.stack.imgur.com/Mcycw.png\" alt=\"translation from web page coordinates\"></p>\n\n<p>Note that  z has a value of 0.5. I won't go into too much detail about the z value at this point except to say that this is the depth of the point away from the camera that we are projecting into 3D space along the z axis. More on this later. </p>\n\n<p>Next:</p>\n\n<pre><code>    projector.unprojectVector( mouse3D, camera );\n</code></pre>\n\n<p>If you look at the three.js code you will see that this is really an inversion of the projection matrix from the 3D world to the camera. Bear in mind that in order to get from 3D world coordinates to a projection on the screen, the 3D world needs to be projected onto the 2D surface of the camera (which is what you see on your screen). We are basically doing the inverse.</p>\n\n<p>Note that mouse3D will now contain this unprojected value. This is the position of a point in 3D space along the ray/trajectory that we are interested in. The exact point depends on the z value (we will see this later).  </p>\n\n<p>At this point, it may be useful to have a look at the following image: </p>\n\n<p><img src=\"http://i.stack.imgur.com/qhJVf.png\" alt=\"Camera, unprojected value and ray\"></p>\n\n<p>The point that we have just calculated (mouse3D) is shown by the green dot. Note that the size of the dots are purely illustrative, they have no bearing on the size of the camera or mouse3D point. We are more interested in the coordinates at the center of the dots. </p>\n\n<p>Now, we don't just want a single point in 3D space, but instead we want a ray/trajectory (shown by the black dots) so that we can determine whether an object is positioned along this ray/trajectory. Note that the points shown along the ray are just arbitrary points, <strong>the ray is a direction from the camera, not a set of points</strong>. </p>\n\n<p>Fortunately, because we a have a point along the ray and we know that the trajectory must pass from the camera to this point, we can determine the direction of the ray. Therefore, the next step is to subtract the camera position from the mouse3D position, this will give a directional vector rather than just a single point:</p>\n\n<pre><code>    mouse3D.sub( camera.position );                \n    mouse3D.normalize();\n</code></pre>\n\n<p>We now have a direction from the camera to this point in 3D space (mouse3D now contains this direction). This is then turned into a unit vector by normalizing it.</p>\n\n<p>The next step is to create a ray (Raycaster) starting from the camera position and using the direction (mouse3D) to cast the ray: </p>\n\n<pre><code>    var raycaster = new THREE.Raycaster( camera.position, mouse3D );\n</code></pre>\n\n<p>The rest of the code determines whether the objects in 3D space are intersected by the ray or not. Happily it is all taken care of us behind the scenes using <code>intersectsObjects</code>.</p>\n\n<h3>The Demo</h3>\n\n<p>OK, so let's look at a demo from my site <strong><a href=\"http://barkofthebyte.azurewebsites.net/demos/projspikes.htm\">here</a></strong> that shows these rays being cast in 3D space. When you click anywhere, the camera rotates around the object to show you how the ray is cast. Note that when the camera returns to its original position, you only see a single dot. This is because all the other dots are along the line of the projection and therefore blocked from view by the front dot. This is similar to when you look down the line of an arrow pointing directly away from you - all that you see is the base. Of course, the same applies when looking down the line of an arrow that is travelling directly towards you (you only see the head), which is generally a bad situation to be in.  </p>\n\n<h3>The z coordinate</h3>\n\n<p>Let's take another look at that z coordinate. Refer to <strong><a href=\"http://barkofthebyte.azurewebsites.net/demos/projspikesfs.htm\">this demo</a></strong> as you read through this section and experiment with different values for z.</p>\n\n<p>OK, lets take another look at this function:</p>\n\n<pre><code>    var mouse3D = new THREE.Vector3( ( event.clientX / window.innerWidth ) * 2 - 1,   //x\n                                    -( event.clientY / window.innerHeight ) * 2 + 1,  //y\n                                    0.5 );                                            //z  \n</code></pre>\n\n<p>We chose 0.5 as the value. I mentioned earlier that the z coordinate dictates the depth of the projection into 3D. So, let's have a look at different values for z to see what effect it has. To do this, I have placed a blue dot where the camera is, and a line of green dots from the camera to the unprojected position. Then, after the intersections have been calculated, I move the camera back and to the side to show the ray. Best seen with a few examples.</p>\n\n<p>First, a z value of 0.5:</p>\n\n<p><img src=\"http://i.stack.imgur.com/5tT2M.png\" alt=\"z value of 0.5\"></p>\n\n<p>Note the green line of dots from the camera (blue dot) to the unprojected value (the coordinate in 3D space). This is like the barrel of a gun, pointing in the direction that they ray should be cast. The green line essentially represents the direction that is calculated before being normalised.</p>\n\n<p>OK, let's try a value of 0.9:</p>\n\n<p><img src=\"http://i.stack.imgur.com/dNacS.png\" alt=\"z value of 0.9\"></p>\n\n<p>As you can see, the green line has now extended further into 3D space. 0.99 extends even further.</p>\n\n<p>I do not know if there is any importance as to how big the value of z is. It seems that a bigger value would be more precise (like a longer gun barrel), but since we are calculating the direction, even a short distance should be pretty accurate. The examples that I have seen use 0.5, so that is what I will stick with unless told otherwise.</p>\n\n<h3>Projection when the canvas is not full screen</h3>\n\n<p>Now that we know a bit more about what is going on, we can figure out what the values should be when the canvas does not fill the window and is positioned on the page. Say, for example, that: </p>\n\n<ul>\n<li>the div containing the three.js canvas is offsetX from the left and offsetY from the top of the screen. </li>\n<li>the canvas has a width equal to viewWidth and height equal to viewHeight.</li>\n</ul>\n\n<p>The code would then be: </p>\n\n<pre><code>    var mouse3D = new THREE.Vector3( ( event.clientX - offsetX ) / viewWidth * 2 - 1,\n                                    -( event.clientY - offsetY ) / viewHeight * 2 + 1,\n                                    0.5 );\n</code></pre>\n\n<p>Basically, what we are doing is calculating the position of the mouse click relative to the canvas (for x: <code>event.clientX - offsetX</code>). Then we determine proportionally where the click occurred (for x: <code>/viewWidth</code>) similar to when the canvas filled the window.</p>\n\n<p>That's it, hopefully it helps.</p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>Projector.unprojectVector() treats the vec3 as a position. During the process the vector gets translated, hence we use <strong><em>.sub(camera.position)</em></strong> on it. Plus we need to normalize it after after this operation. </p>\n\n<p>I will add some graphics to this post but for now I can describe the geometry of the operation. </p>\n\n<p>We can think of the camera as a pyramid in terms of geometry. We in fact define it with 6 panes - left, right, top, bottom, near and far (near being the plane closest to the tip).</p>\n\n<p>If we were standing in some 3d and observing these operations, we would see this pyramid in an arbitrary position with an arbitrary rotation in space. Lets say that this pyramid's origin is at it's tip, and it's negative z axis runs towards the bottom. </p>\n\n<p>Whatever ends up being contained within those 6 planes will end up being rendered on our screen if we apply the correct sequence of matrix transformations. Which i opengl go something like this:</p>\n\n<pre><code>NDC_or_homogenous_coordinates = projectionMatrix * viewMatrix * modelMatrix * position.xyzw; \n</code></pre>\n\n<p>This takes our mesh from it's object space into world space, into camera space and finally it projects it does the perspective projection matrix which essentially puts everything into a small cube (NDC with ranges from -1 to 1).</p>\n\n<p>Object space can be a neat set of xyz coordinates in which you generate something procedurally or say, a 3d model, that an artist modeled using symmetry and thus neatly sits aligned with the coordinate space, as opposed to an architectural model obtained from say something like REVIT or AutoCAD. </p>\n\n<p>An objectMatrix could happen in between the model matrix and the view matrix, but this is usually taken care of ahead of time. Say, flipping y and z, or bringing a model thats far away from the origin into bounds, converting units etc. </p>\n\n<p>If we think of our flat 2d screen as if it had depth, it could be described the same way as the NDC cube, albeit, slightly distorted. This is why we supply the aspect ratio to the camera. If we imagine a square the size of our screen height, the remainder is the aspect ratio that  we need to scale our x coordinates. </p>\n\n<p>Now back to 3d space.</p>\n\n<p>We're standing in a 3d scene and we see the pyramid. If we cut everything around the pyramid, and then take the pyramid along with the part of the scene contained in it and put it's tip at 0,0,0, and point the bottom towards the -z axis we will end up here:</p>\n\n<pre><code>viewMatrix * modelMatrix * position.xyzw\n</code></pre>\n\n<p>Multiplying this by the projection matrix will be the same as if we took the tip, and started pulling it appart in the x and y axis creating a square out of that one point, and turning the pyramid into a box. </p>\n\n<p>In this process the box gets scaled to -1 and 1 and we get our perspective projection and we end up here:</p>\n\n<pre><code>projectionMatrix * viewMatrix * modelMatrix * position.xyzw; \n</code></pre>\n\n<p>In this space, we have control over a 2 dimensional mouse event. Since it's on our screen, we know that it's two dimensional, and that it's somewhere within the NDC cube. If it's two dimensional, we can say that we know X and Y but not the Z, hence the need for ray casting. </p>\n\n<p>So when we cast a ray, we are basically sending a line through the cube, perpendicular to one of it's sides. </p>\n\n<p>Now we need to figure out if that ray hits something in the scene, and in order to do that we need to transform the ray from this cube, into some space suitable for computation. We want the ray in world space. </p>\n\n<p>Ray is an infinite line in space. It's different from a vector because it has a direction, and it must pass through a point in space. And indeed this is how the Raycaster takes its arguments.</p>\n\n<p>So if we squeeze the top of the box along with the line, back into the pyramid, the line will originate from the tip and run down and intersect the bottom of the pyramid somewhere between -- mouse.x * farRange and -mouse.y * farRange. </p>\n\n<p><em>(-1 and 1 at first, but view space is in world scale, just rotated and moved)</em></p>\n\n<p>Since this is the default location of the camera so to speak (it's object space) if we apply it's own world matrix to the ray, we will transform it along with the camera. </p>\n\n<p>Since the ray passes through 0,0,0, we only have it's direction and THREE.Vector3 has a method for transforming a direction:</p>\n\n<pre><code>THREE.Vector3.transformDirection()\n</code></pre>\n\n<p>It also normalizes the vector in the process.</p>\n\n<p><strong>The Z coordinate in the method above</strong></p>\n\n<p>This essentially works with any value, and acts the same because of the way the NDC cube works. \nThe near plane and far plane are projected onto -1 and 1. </p>\n\n<p>So when you say, shoot a ray at: </p>\n\n<pre><code>[ mouse.x | mouse.y | someZpositive ]\n</code></pre>\n\n<p>you send a line, through a point (mouse.x, mouse.y, 1) in the direction of (0,0,someZpositive)</p>\n\n<p>If you relate this to the box/pyramid example, this point is at the bottom, and since the line originates from the camera it goes through that point as well. </p>\n\n<p>BUT, in the NDC space, this point is stretched to infinity, and this line ends up being parallel with the left,top,right,bottom planes. </p>\n\n<p>Unprojecting with the above method turns this into a position/point essentially. The far plane just gets mapped into world space, so our point sits somewhere at z=-1, between -camera aspect and + cameraAspect on X and -1 and 1 on y.</p>\n\n<p>since it's a point, applying the cameras world matrix will not only rotate it but translate it as well. Hence the need to bring this back to the origin by subtracting the cameras position. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have been trying to work with the Projector and Ray classes in order to do some collision detection demos. I have started just trying to use the mouse to select objects or to drag them. I have looked at examples that use the objects, but none of them seem to have comments explaining what exactly some of the methods of Projector and Ray are doing. I have a couple questions that I am hoping will be easy for someone to answer.</p>\n\n<p><strong>What exactly is happening and what is the difference between Projector.projectVector() and Projector.unprojectVector()?</strong> I notice that it seems in all the examples using both projector and ray objects the unproject method is called before the ray is created. <strong>When would you use projectVector?</strong></p>\n\n<p>I am using the following code in this <strong><a href=\"http://cmg0030.zxq.net/threejs/acclDemo7/\">demo</a></strong> to spin the cube when dragged on with the mouse. <strong>Can someone explain in simple terms what exactly is happening when I unproject with the mouse3D and camera and then create the Ray. Does the ray depend on the call to unprojectVector()</strong></p>\n\n<pre><code>/** Event fired when the mouse button is pressed down */\nfunction onDocumentMouseDown(event) {\n    event.preventDefault();\n    mouseDown = true;\n    mouse3D.x = mouse2D.x = mouseDown2D.x = (event.clientX / window.innerWidth) * 2 - 1;\n    mouse3D.y = mouse2D.y = mouseDown2D.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    mouse3D.z = 0.5;\n\n    /** Project from camera through the mouse and create a ray */\n    projector.unprojectVector(mouse3D, camera);\n    var ray = new THREE.Ray(camera.position, mouse3D.subSelf(camera.position).normalize());\n    var intersects = ray.intersectObject(crateMesh); // store intersecting objects\n\n    if (intersects.length &gt; 0) {\n        SELECTED = intersects[0].object;\n        var intersects = ray.intersectObject(plane);\n    }\n\n}\n\n/** This event handler is only fired after the mouse down event and\n    before the mouse up event and only when the mouse moves */\nfunction onDocumentMouseMove(event) {\n    event.preventDefault();\n\n    mouse3D.x = mouse2D.x = (event.clientX / window.innerWidth) * 2 - 1;\n    mouse3D.y = mouse2D.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    mouse3D.z = 0.5;\n    projector.unprojectVector(mouse3D, camera);\n\n    var ray = new THREE.Ray(camera.position, mouse3D.subSelf(camera.position).normalize());\n\n    if (SELECTED) {\n        var intersects = ray.intersectObject(plane);\n        dragVector.sub(mouse2D, mouseDown2D);\n        return;\n    }\n\n    var intersects = ray.intersectObject(crateMesh);\n\n    if (intersects.length &gt; 0) {\n        if (INTERSECTED != intersects[0].object) {\n            INTERSECTED = intersects[0].object;\n        }\n    }\n    else {\n        INTERSECTED = null;\n    }\n}\n\n/** Removes event listeners when the mouse button is let go */\nfunction onDocumentMouseUp(event) {\n    event.preventDefault();\n\n    /** Update mouse position */\n    mouse3D.x = mouse2D.x = (event.clientX / window.innerWidth) * 2 - 1;\n    mouse3D.y = mouse2D.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    mouse3D.z = 0.5;\n\n    if (INTERSECTED) {\n        SELECTED = null;\n    }\n\n    mouseDown = false;\n    dragVector.set(0, 0);\n}\n\n/** Removes event listeners if the mouse runs off the renderer */\nfunction onDocumentMouseOut(event) {\n    event.preventDefault();\n\n    if (INTERSECTED) {\n        plane.position.copy(INTERSECTED.position);\n        SELECTED = null;\n    }\n    mouseDown = false;\n    dragVector.set(0, 0);\n}\n</code></pre>\n",
            "last_activity_date": 1409822024,
            "question_id": 11036106,
            "score": 25,
            "tags": [
                "javascript",
                "3d",
                "three.js"
            ],
            "title": "Three.js Projector and Ray objects"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I haven't done it with PHP before but you're best bet would probably be some kind of socket connection. Here's the <a href=\"http://us2.php.net/manual-lookup.php?pattern=socket&amp;lang=en\" rel=\"nofollow\">PHP manual</a> for sockets. </p>\n\n<p>I don't remember who's tutorial it was but I made a chat room like what you want using Flash for the client and Java for the server. I think <a href=\"http://ec2-50-16-39-169.compute-1.amazonaws.com/blog/?p=205\" rel=\"nofollow\">this link</a> might be where the tutorial was and it may help you out.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Have you looked at <a href=\"http://github.com/kakserpom/phpdaemon\" rel=\"nofollow\">PHPDaemon</a>, which is written with active usage of libevent and pnctl? <a href=\"http://phpdaemon.net/\" rel=\"nofollow\">It</a> has lots of features and even simple <a href=\"http://phpdaemon.net/examples/simplechat/\" rel=\"nofollow\">chat</a> demo application. Even it has some production implementations.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I suggest you to try <a href=\"http://socket.io/\" rel=\"nofollow\">Socket.IO</a> together with <a href=\"http://nodejs.org/\" rel=\"nofollow\">NodeJS</a>. Socket.IO gives you a nice and very easy client API, works on most modern browsers and uses appropriate transport where possible (Websocket, long polling, etc). NodeJS is a server-side daemon, which holds HTTP connections. Official site of the Socket.IO contains information on how to use them together. Hope it will help you.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I believe the problem you are looking at requires the use of comet web programming. You can find more details on wikipedia, by searching for Comet programming, and on Ajaxian (I'm still new to this site and I can't post more than 1 link in the response).</p>\n\n<p>The problem is that this can't be easily achieved with php on the server side. More details:\n<a href=\"http://stackoverflow.com/questions/603201/using-comet-with-php\">using comet with php</a></p>\n\n<p>Also, if you search on google for 'php comet' you'll find a tutorial to achieve the desired effect.</p>\n\n<p><strong>LATER EDIT</strong></p>\n\n<p><a href=\"http://www.ape-project.org/demos/1/ape-real-time-chat.html\" rel=\"nofollow\">Ape project</a></p>\n\n<p>Implemented a project using this engine. Is great.</p>\n\n<p><a href=\"http://www.zeitoun.net/articles/comet_and_php/start\" rel=\"nofollow\">Comet with php</a></p>\n\n<p>Hope this helps,\nGabriel</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>this could be a good starting point</p>\n\n<p><a href=\"http://css-tricks.com/jquery-php-chat/\" rel=\"nofollow\">http://css-tricks.com/jquery-php-chat/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h1>Chat with PHP/AJAX/JSON</h1>\n\n<p>I used this book/tutorial to write my chat application: </p>\n\n<p><a href=\"http://www.codeproject.com/KB/books/AJAXChatJSON.aspx\">AJAX and PHP: Building Responsive Web Applications: Chapter 5: AJAX chat and JSON</a>. </p>\n\n<p>It shows how to write a complete chatscript from scratch.</p>\n\n<hr>\n\n<h1>Comet based chat</h1>\n\n<p><em>You can also use <a href=\"http://en.wikipedia.org/wiki/Comet_%28programming%29\">Comet</a> with <a href=\"http://stackoverflow.com/questions/603201/using-comet-with-php\">PHP</a>.</em></p>\n\n<p>From: <a href=\"http://www.zeitoun.net/articles/comet_and_php/start\">zeitoun</a>:</p>\n\n<p>Comet enables web servers to send data to the client without having any need for the client to request it. Therefor, this technique will produce more responsive applications than classic AJAX. In classic AJAX applications, web browser (client) cannot be notified in real time that the server data model has changed. The user must create a request (for example by clicking on a link) or a periodic AJAX request must happen in order to get new data fro the server. </p>\n\n<p>I'll show you two ways to implement Comet with PHP. For example:</p>\n\n<ol>\n<li>based on hidden <code>&lt;iframe&gt;</code> using server timestamp</li>\n<li>based on a classic AJAX non-returning request</li>\n</ol>\n\n<p>The first shows the server date in real time on the clients, the displays a mini-chat. </p>\n\n<h3>Method 1: iframe + server timestamp</h3>\n\n<p>You need:</p>\n\n<ul>\n<li>a backend PHP script to handle the persistent http request <code>backend.php</code></li>\n<li>a frondend HTML script load Javascript code <code>index.html</code></li>\n<li>the <a href=\"http://www.prototypejs.org/\">prototype JS library</a>, but you can also use jQuery</li>\n</ul>\n\n<p>The backend script (<code>backend.php</code>) will do an infinite loop and will return the server time as long as the client is connected.</p>\n\n<pre><code>&lt;?php\nheader(\"Cache-Control: no-cache, must-revalidate\");\nheader(\"Expires: Sun, 5 Mar 2012 05:00:00 GMT\");\nflush();\n?&gt;\n\n&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n\n&lt;head&gt;\n    &lt;title&gt;Comet php backend&lt;/title&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;script type=\"text/javascript\"&gt;\n// KHTML browser don't share javascripts between iframes\nvar is_khtml = navigator.appName.match(\"Konqueror\") || navigator.appVersion.match(\"KHTML\");\nif (is_khtml)\n{\n  var prototypejs = document.createElement('script');\n  prototypejs.setAttribute('type','text/javascript');\n  prototypejs.setAttribute('src','prototype.js');\n  var head = document.getElementsByTagName('head');\n  head[0].appendChild(prototypejs);\n}\n// load the comet object\nvar comet = window.parent.comet;\n&lt;/script&gt;\n\n&lt;?php\nwhile(1) {\n    echo '&lt;script type=\"text/javascript\"&gt;';\n    echo 'comet.printServerTime('.time().');';\n    echo '&lt;/script&gt;';\n    flush(); // used to send the echoed data to the client\n    sleep(1); // a little break to unload the server CPU\n}\n?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>The frontend script (<code>index.html</code>) creates a \"comet\" javascript object that will connect the backend script to the time container tag. </p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n  &lt;title&gt;Comet demo&lt;/title&gt;\n  &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n  &lt;script type=\"text/javascript\" src=\"prototype.js\"&gt;&lt;/script&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div id=\"content\"&gt;The server time will be shown here&lt;/div&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nvar comet = {\nconnection   : false,\niframediv    : false,\n\ninitialize: function() {\n  if (navigator.appVersion.indexOf(\"MSIE\") != -1) {\n\n    // For IE browsers\n    comet.connection = new ActiveXObject(\"htmlfile\");\n    comet.connection.open();\n    comet.connection.write(\"&lt;html&gt;\");\n    comet.connection.write(\"&lt;script&gt;document.domain = '\"+document.domain+\"'\");\n    comet.connection.write(\"&lt;/html&gt;\");\n    comet.connection.close();\n    comet.iframediv = comet.connection.createElement(\"div\");\n    comet.connection.appendChild(comet.iframediv);\n    comet.connection.parentWindow.comet = comet;\n    comet.iframediv.innerHTML = \"&lt;iframe id='comet_iframe' src='./backend.php'&gt;&lt;/iframe&gt;\";\n\n  } else if (navigator.appVersion.indexOf(\"KHTML\") != -1) {\n\n    // for KHTML browsers\n    comet.connection = document.createElement('iframe');\n    comet.connection.setAttribute('id',     'comet_iframe');\n    comet.connection.setAttribute('src',    './backend.php');\n    with (comet.connection.style) {\n      position   = \"absolute\";\n      left       = top   = \"-100px\";\n      height     = width = \"1px\";\n      visibility = \"hidden\";\n    }\n    document.body.appendChild(comet.connection);\n\n  } else {\n\n    // For other browser (Firefox...)\n    comet.connection = document.createElement('iframe');\n    comet.connection.setAttribute('id',     'comet_iframe');\n    with (comet.connection.style) {\n      left       = top   = \"-100px\";\n      height     = width = \"1px\";\n      visibility = \"hidden\";\n      display    = 'none';\n    }\n    comet.iframediv = document.createElement('iframe');\n    comet.iframediv.setAttribute('src', './backend.php');\n    comet.connection.appendChild(comet.iframediv);\n    document.body.appendChild(comet.connection);\n\n  }\n},\n\n// this function will be called from backend.php  \nprintServerTime: function (time) {\n  $('content').innerHTML = time;\n},\n\nonUnload: function() {\n  if (comet.connection) {\n    comet.connection = false; // release the iframe to prevent problems with IE when reloading the page\n  }\n}\n}\nEvent.observe(window, \"load\",   comet.initialize);\nEvent.observe(window, \"unload\", comet.onUnload);\n\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<h3>Method 2: AJAX non-returning request</h3>\n\n<p>You need the same as in method 1 + a file for dataexchange (<code>data.txt</code>)</p>\n\n<p>Now, backend.php will do 2 things: </p>\n\n<ol>\n<li>Write into \"data.txt\" when new messages are sent</li>\n<li>Do an infinite loop as long as \"data.txt\" file is unchanged</li>\n</ol>\n\n<blockquote>\n<pre><code>&lt;?php\n$filename  = dirname(__FILE__).'/data.txt';\n\n// store new message in the file\n$msg = isset($_GET['msg']) ? $_GET['msg'] : '';\nif ($msg != '')\n{\n    file_put_contents($filename,$msg);\n    die();\n}\n\n// infinite loop until the data file is not modified\n$lastmodif    = isset($_GET['timestamp']) ?\n</code></pre>\n  \n  <p>$_GET['timestamp'] : 0;\n      $currentmodif = filemtime($filename);\n      while ($currentmodif &lt;= $lastmodif) // check if the data file\n  has been modified\n      {\n          usleep(10000); // sleep 10ms to unload the CPU\n          clearstatcache();\n          $currentmodif = filemtime($filename);\n      }</p>\n\n<pre><code>// return a json array\n$response = array();\n$response['msg']       = file_get_contents($filename);\n$response['timestamp'] = $currentmodif;\necho json_encode($response);\nflush();\n?&gt;\n</code></pre>\n</blockquote>\n\n<p>The frontend script (<code>index.html</code>) creates the <code>&lt;div id=\"content\"&gt;&lt;/div&gt;</code> tags hat will contains the chat messages comming from \"data.txt\" file, and finally it create a \"comet\" javascript object that will call the backend script in order to watch for new chat messages.</p>\n\n<p>The comet object will send AJAX requests each time a new message has been received and each time a new message is posted. The persistent connection is only used to watch for new messages. A timestamp url parameter is used to identify the last requested message, so that the server will return only when the \"data.txt\" timestamp is newer that the client timestamp. </p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n  &lt;title&gt;Comet demo&lt;/title&gt;\n\n  &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n  &lt;script type=\"text/javascript\" src=\"prototype.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;div id=\"content\"&gt;\n&lt;/div&gt;\n\n&lt;p&gt;\n&lt;form action=\"\" method=\"get\" onsubmit=\"comet.doRequest($('word').value);$('word').value='';return false;\"&gt;\n  &lt;input type=\"text\" name=\"word\" id=\"word\" value=\"\" /&gt;\n  &lt;input type=\"submit\" name=\"submit\" value=\"Send\" /&gt;\n&lt;/form&gt;\n&lt;/p&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nvar Comet = Class.create();\nComet.prototype = {\n\ntimestamp: 0,\nurl: './backend.php',\nnoerror: true,\n\ninitialize: function() { },\n\nconnect: function()\n{\n  this.ajax = new Ajax.Request(this.url, {\n    method: 'get',\n    parameters: { 'timestamp' : this.timestamp },\n    onSuccess: function(transport) {\n      // handle the server response\n      var response = transport.responseText.evalJSON();\n      this.comet.timestamp = response['timestamp'];\n      this.comet.handleResponse(response);\n      this.comet.noerror = true;\n    },\n    onComplete: function(transport) {\n      // send a new ajax request when this request is finished\n      if (!this.comet.noerror)\n        // if a connection problem occurs, try to reconnect each 5 seconds\n        setTimeout(function(){ comet.connect() }, 5000); \n      else\n        this.comet.connect();\n      this.comet.noerror = false;\n    }\n  });\n  this.ajax.comet = this;\n},\n\ndisconnect: function()\n{\n},\n\nhandleResponse: function(response)\n{\n  $('content').innerHTML += '&lt;div&gt;' + response['msg'] + '&lt;/div&gt;';\n},\n\ndoRequest: function(request)\n{\n  new Ajax.Request(this.url, {\n    method: 'get',\n    parameters: { 'msg' : request \n  });\n}\n}\nvar comet = new Comet();\ncomet.connect();\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<hr>\n\n<h1>Alternatively</h1>\n\n<p>You can also have a look at other chat applications to see how they did it: </p>\n\n<ul>\n<li><p><a href=\"http://hot-things.net/?q=blite\">http://hot-things.net/?q=blite</a> - BlaB! Lite is an AJAX based and best viewed with any browser chat system that supports MySQL, SQLite &amp; PostgreSQL databases. </p></li>\n<li><p><a href=\"http://anantgarg.com/2009/05/13/gmail-facebook-style-jquery-chat/\">Gmail/Facebook Style jQuery Chat </a> - This jQuery chat module enables you to seamlessly integrate Gmail/Facebook style chat into your existing website.</p></li>\n<li><p><a href=\"http://code.jenseng.com/jenChat/\">Writing a JavaScript/PHP Chat Server</a> - An tutorial</p></li>\n<li><p><a href=\"http://www.cometchat.com/\">CometChat</a> - CometChat runs on standard shared servers. Only PHP + mySQL required. </p></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>I suggest to implement it with HTML5 WebSockets, with long polling or comet as a fallback for older browsers. WebSockets open a persistent connection to the browser.\nThere is an open source <a href=\"http://code.google.com/p/phpwebsocket/\" rel=\"nofollow\">php implementation of a websocket server</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Polling is not a good idea.  You need a solution that use long polling or web sockets.</p>\n\n<p><a href=\"http://hookbox.org\" rel=\"nofollow\">http://hookbox.org</a> is probably the best tool you can use.</p>\n\n<p>It is a box that lives between the server and the browsers and manages abstractions called channels (think about an IRC channel).  It is open source on github: <a href=\"https://github.com/hookbox/hookbox\" rel=\"nofollow\">https://github.com/hookbox/hookbox</a> The box is written in Python but it can easily be used with a server written in any language. It also come with a Javascript library that is built on jsio (uses websockets, long-polling, or whatever is the best technology available on the browser) that guarantee that it uses the best technology available in the browsers.In a demo I saw a <strong>realtime chat</strong> implemented  with few line of code.</p>\n\n<p>Hookbox\u2019s purpose is to ease the development of real-time web applications, with an emphasis on tight integration with existing web technology. Put simply, Hookbox is a web-enabled message queue. Browers may directly connect to Hookbox, subscribe to named channels, and publish and receive messages on those channels in real-time. An external application (typically the web application itself) may also publish messages to channels by means of the Hookbox REST interface. All authentication and authorization is performed by an external web application via designated \u201cwebhook\u201d callbacks.</p>\n\n<p><img src=\"http://i.stack.imgur.com/RQNhU.png\" alt=\"alt text\"></p>\n\n<p>Any time a user connects or operates on a channel, ( subscribe, publish, unsubscribe) Hookbox makes an http request to the web application for authorization for the action. Once subscribed to a channel, the user\u2019s browser will receive real-time events that originate either in another browser via the javascript api, or from the web application via the REST api.</p>\n\n<p>They key insight is that all application development with hookbox Happens either in javascript, or in the native language of the web application itself (e.g. PHP.)</p>\n\n<p>You need a server that can run Python BUT you do NOT have to know Python.</p>\n\n<p>If instead you want to use just websockets and PHP this is good starting point: <a href=\"http://blancer.com/tutorials/69066/start-using-html5-websockets-today/\" rel=\"nofollow\">http://blancer.com/tutorials/69066/start-using-html5-websockets-today/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I know this is very late, but <a href=\"http://www.sudoforlunch.org/adityas-chatbox/\" rel=\"nofollow\">here</a></p>\n\n<p>EDIT: Updated link</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This looks promising! Might even be super easy to restyle :)</p>\n\n<blockquote>\n  <p><a href=\"http://www.php-development.ru/javascripts/ajax-chat.php\" rel=\"nofollow\">http://www.php-development.ru/javascripts/ajax-chat.php</a></p>\n</blockquote>\n\n<h1>Ajax Chat script in Javascript/PHP</h1>\n\n<h3>Description</h3>\n\n<blockquote>\n  <p>Ajax Chat is a light-weight customizable web chat software implemented in JavaScript and PHP. The script does not require Java, Flash, or any other plugins.</p>\n</blockquote>\n\n<h3>Features</h3>\n\n<ul>\n<li>Public and private chat.</li>\n<li>Login as a registered user or as a guest.</li>\n<li>Away status, custom colors, smileys, user gender/status icons.</li>\n<li>Ajax Chat can be integrated with a third-party membership system by implementing user authentication routine. Advanced integration options: if user is logged in to the website, he can be logged in to the chat automatically.</li>\n</ul>\n\n<p><img src=\"http://i.stack.imgur.com/hvxe4.png\" alt=\"Ajax lightweight chat script\"></p>\n\n<p>*Please note that this is a copy/paste from <a href=\"http://www.php-development.ru/javascripts/ajax-chat.php\" rel=\"nofollow\">the original site</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking to implement a chat room using PHP/Javascript (Jquery) with both group chat and private chat features.</p>\n\n<p>The problem is how to continually update the interface in a natural way and possibly also how to show 'X is typing..' messages in private chat.</p>\n\n<p>The obvious way seems to be that every X seconds/milliseconds the javascript pings the server and fetches a list of new messages between the last ping and now. However, this can make the interface seem a bit unnatural, if suddenly the chat room is flooded with 5 messages. I would rather each message appear as it is typed.</p>\n\n<p>Is there a way for javascript to maintain a continuous connection to the server, the server pushes any new messages to this connection, and javascript adds them to the interface so they appear simultaneously, almost as soon as the server receives them?</p>\n\n<p>I know there are some polling options that require you to install some apache modules etc, but I'm pretty bad of a sysadmin, therefore I'd prefer if there was a very easy to install solution on a shared hosting account, or a php/mysql only solution.</p>\n",
            "last_activity_date": 1420238045,
            "question_id": 4174521,
            "score": 22,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "ajax",
                "ajax-polling"
            ],
            "title": "How to implement a chat room using Jquery/PHP?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<pre><code>(\"0\" + this.getDate()).slice(-2)\n</code></pre>\n\n<p>for the date, and similar:</p>\n\n<pre><code>(\"0\" + (this.getMonth() + 1)).slice(-2)\n</code></pre>\n\n<p>for the month.</p>\n",
                    "is_accepted": true,
                    "score": 208
                },
                {
                    "body": "<p>Example for month:  </p>\n\n<pre><code>function getMonth(date) {\n    var month = date.getMonth();\n    return month &lt; 10 ? '0' + month : month; // ('' + month) for string result\n}  \n</code></pre>\n\n<p>You can also extend <code>Date</code> object with such function:  </p>\n\n<pre><code>Date.prototype.getMonthFormatted = function() {\n    var month = this.getMonth();\n    return month &lt; 10 ? '0' + month : month; // ('' + month) for string result\n}\n</code></pre>\n\n<p>Thanks, <strong>Salman A</strong>. Remember, that <code>date.getMonth()</code> returns number from 0 to 11.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<pre><code>function monthFormated(){\n    var date = new Date(),\n        month = date.getMonth();\n    return month &lt; 10 ? \"0\" + (month+1) : month+1;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This was my solution:</p>\n\n<pre><code>function leadingZero(value){\n   if(value &lt; 10){\n      return \"0\" + value.toString();\n   }\n   return value.toString();    \n}\n\nvar targetDate = new Date(); \ntargetDate.setDate(targetDate.getDate() ); \nvar dd = targetDate.getDate(); \nvar mm = targetDate.getMonth() + 1; var yyyy = targetDate.getFullYear();  \nvar dateCurrent = leadingZero(mm) + \"/\" + leadingZero(dd) + \"/\" + yyyy; \n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The following is used to convert db2 date format\n i.e  YYYY-MM-DD using ternary operator</p>\n\n<pre><code>var currentDate = new Date();\nvar twoDigitMonth=((currentDate.getMonth()+1)&gt;=10)? (currentDate.getMonth()+1) : '0' + (currentDate.getMonth()+1);  \nvar twoDigitDate=((currentDate.getDate())&gt;=10)? (currentDate.getDate()) : '0' + (currentDate.getDate());\nvar createdDateTo = currentDate.getFullYear() + \"-\" + twoDigitMonth + \"-\" + twoDigitDate; \nalert(createdDateTo);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Not an answer but here is how I get the date format I require in a variable</p>\n\n<pre><code>function setDateZero(date){\nreturn date &lt; 10 ? '0' + date : date;\n}\n\nvar curr_date = ev.date.getDate();\nvar curr_month = ev.date.getMonth() + 1;\nvar curr_year = ev.date.getFullYear();\nvar thisDate = curr_year+\"-\"+setDateZero(curr_month)+\"-\"+setDateZero(curr_date);\n</code></pre>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>function monthFormated(date){\n   //If date is not passed, get current date\n   if(!date)\n     date = new Date();\n\n     month = date.getMonth();\n\n    return month &lt; 10 ? \"0\" + (month+1) : month+1;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want a format like \"YYYY-MM-DDTHH:mm:ss\", then this might be quicker:</p>\n\n<pre><code>var date = new Date().toISOString().substr(0, 19);\n// toISOString() will give you YYYY-MM-DDTHH:mm:ss.sssZ\n</code></pre>\n\n<p>Or the commonly used MySQL datetime format \"YYYY-MM-DD HH:mm:ss\":</p>\n\n<pre><code>var date2 = new Date().toISOString().substr(0, 19).replace('T', ' ');\n</code></pre>\n\n<p>I hope this helps</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>My solution:</p>\n\n<pre><code>function addLeadingChars(string, nrOfChars, leadingChar) {\n    string = string + '';\n    return Array(Math.max(0, (nrOfChars || 2) - string.length + 1)).join(leadingChar || '0') + string;\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var\n    date = new Date(),\n    month = addLeadingChars(date.getMonth() + 1),\n    day = addLeadingChars(date.getDate());\n</code></pre>\n\n<p>jsfiddle: <a href=\"http://jsfiddle.net/8xy4Q/1/\" rel=\"nofollow\">http://jsfiddle.net/8xy4Q/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function (date){\n   // 01, 02, 03, ... 29, 30, 31\n   var day = (date.getDate() &lt; 10 ? '0' : '') + date.getDate();\n   // 01, 02, 03, ... 10, 11, 12\n   var month = ((date.getMonth() + 1) &lt; 10 ? '0' : '') + (date.getMonth() + 1);\n   var year = date.getFullYear();\n\n   // create the format you want\n   return (day + \"-\" + month + \"-\" + year);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>When we call <code>getMonth()</code> and <code>getDate()</code> on <code>date</code> object, we will get the <code>single digit number</code>.\nFor example :</p>\n\n<p>For <code>january</code>, it displays <code>1</code>, but I need to display it as <code>01</code>. How to do that?</p>\n",
            "last_activity_date": 1418724511,
            "question_id": 6040515,
            "score": 80,
            "tags": [
                "javascript"
            ],
            "title": "How do I get Month and Date of JavaScript in 2 digit format?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>That's because jQuery can do much more than <code>querySelectorAll</code>.</p>\n\n<p>First of all, jQuery (and Sizzle, in particular), works for older browsers like IE7-8 that doesn't support CSS2.1-3 selectors.</p>\n\n<p>Plus, Sizzle (which is the selector engine behind jQuery) offers you a lot of more advanced selector instruments, like the <code>:selected</code> pseudo-class, an advanced <code>:not()</code> selector, a more complex syntax like in <code>$(\"&gt; .children\")</code> and so on.</p>\n\n<p>And it does it cross-browsers, flawlessly, offering all that jQuery can offer (plugins and APIs).</p>\n\n<p>Yes, if you think you can rely on simple class and id selectors, jQuery is too much for you, and you'd be paying an exaggerated pay-off. But if you don't, and want to take advantage of all jQuery goodness, then use it.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><code>document.querySelectorAll()</code> <strike>has several inconsistencies across browsers and is not supported in older browsers</strike><sup>This probably won't cause any trouble anymore nowadays</sup>. It has a very unintuitive <a href=\"http://jsfiddle.net/QdMc5/\">scoping mechanism</a> and some other <a href=\"http://ejohn.org/blog/thoughts-on-queryselectorall/\">not so nice features</a>. Also with javascript you have a harder time working with the result sets of these queries, which in many cases you might want to do. jQuery provides functions to work on them like: <code>filter()</code>, <code>find()</code>, <code>children()</code>, <code>parent()</code>, <code>map()</code>, <code>not()</code> and several more. Not to mention the jQuery ability to work with pseudo-class selectors.</p>\n\n<p>However, I would not consider these things as jQuery's strongest features but other things like \"working\" on the dom (events, styling, animation &amp; manipulation) in a <strong>crossbrowser compatible</strong> way or the ajax interface.</p>\n\n<p>If you only want the selector engine from jQuery you can use the one jQuery itself is using: <strong><a href=\"http://sizzlejs.com/\">Sizzle</a></strong> That way you have the power of jQuerys Selector engine without the nasty overhead.</p>\n\n<p>EDIT:\nJust for the record, I'm a huge vanilla JavaScript fan. Nonetheless it's a fact that you sometimes need 10 lines of JavaScript where you would write 1 line jQuery.</p>\n\n<p>Of course you have to be disciplined to not write jQuery like this:</p>\n\n<pre><code>$('ul.first').find('.foo').css('background-color', 'red').end().find('.bar').css('background-color', 'green').end();\n</code></pre>\n\n<p>This is extremely hard to read, while the latter is pretty clear:</p>\n\n<pre><code>$('ul.first')\n   .find('.foo')\n      .css('background-color', 'red')\n.end()\n   .find('.bar')\n      .css('background-color', 'green')\n.end();\n</code></pre>\n\n<p>The equivalent JavaScript would be far more complex illustrated by the pseudocode above:</p>\n\n<p>1) Find the element, consider taking all element or only the first.</p>\n\n<pre><code>// $('ul.first')\n// taking querySelectorAll has to be considered\nvar e = document.querySelector(\"ul.first\");\n</code></pre>\n\n<p>2) Iterate over the array of child nodes via some (possibly nested or recursive) loops and check the class (classlist not available in all browsers!)</p>\n\n<pre><code>//.find('.foo')\nfor (var i = 0;i&lt;e.length;i++){\n     // older browser don't have element.classList -&gt; even more complex\n     e[i].children.classList.contains('.foo');\n     // do some more magic stuff here\n}\n</code></pre>\n\n<p>3) apply the css style</p>\n\n<pre><code>// .css('background-color', 'green')\n// note different notation\nelement.style.backgroundColor = \"green\" // or\nelement.style[\"background-color\"] = \"green\"\n</code></pre>\n\n<p>This code would be at least two times as much lines of code you write with jQuery. Also you would have to consider cross-browser issues which will compromise the <a href=\"http://jsperf.com/jquery-vs-native-selector-and-element-style\">severe speed advantage</a> (besides from the reliability) of the native code.</p>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p>as the official site says:\n\"jQuery: The Write Less, Do More, JavaScript Library\"</p>\n\n<p>try to tranlate the following jQuery code without any library</p>\n\n<pre><code>$(\"p.neat\").addClass(\"ohmy\").show(\"slow\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>jQuery's Sizzle selector engine can use <code>querySelectorAll</code> if it's available. It also smooths out inconsistencies between browsers to achieve uniform results. If you don't want to use all of jQuery, you could just use Sizzle separately. This is a pretty fundamental wheel to invent.</p>\n\n<p>Here's some cherry-pickings from the source that show the kind of things jQuery(w/ Sizzle) sorts out for you:</p>\n\n<p>Safari quirks mode:</p>\n\n<pre><code>if ( document.querySelectorAll ) {\n  (function(){\n    var oldSizzle = Sizzle,\n      div = document.createElement(\"div\"),\n      id = \"__sizzle__\";\n\n    div.innerHTML = \"&lt;p class='TEST'&gt;&lt;/p&gt;\";\n\n    // Safari can't handle uppercase or unicode characters when\n    // in quirks mode.\n    if ( div.querySelectorAll &amp;&amp; div.querySelectorAll(\".TEST\").length === 0 ) {\n      return;\n    }\n</code></pre>\n\n<p>If that guard fails it uses it's a version of Sizzle that isn't enhanced with <code>querySelectorAll</code>. Further down there are specific handles for inconsistencies in IE, Opera, and the Blackberry browser.</p>\n\n<pre><code>  // Check parentNode to catch when Blackberry 4.6 returns\n  // nodes that are no longer in the document #6963\n  if ( elem &amp;&amp; elem.parentNode ) {\n    // Handle the case where IE and Opera return items\n    // by name instead of ID\n    if ( elem.id === match[3] ) {\n      return makeArray( [ elem ], extra );\n    }\n\n  } else {\n    return makeArray( [], extra );\n  }\n</code></pre>\n\n<p>And if all else fails it will return the result of <code>oldSizzle(query, context, extra, seed)</code>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I think the true answer is that jQuery was developed long before <code>querySelector/querySelectorAll</code> became available in all major browsers.</p>\n\n<p>Initial release of <a href=\"http://en.wikipedia.org/wiki/JQuery\" rel=\"nofollow\">jQuery was in 2006</a>. In fact, even jQuery <a href=\"http://www.paulirish.com/2008/javascript-css-selector-engine-timeline/\" rel=\"nofollow\">was not the first which implemented CSS selectors</a>.</p>\n\n<p><a href=\"http://caniuse.com/queryselector\" rel=\"nofollow\">IE was the last browser</a> to implement <code>querySelector/querySelectorAll</code>. Its 8th version <a href=\"http://en.wikipedia.org/wiki/Internet_Explorer#Internet_Explorer_8\" rel=\"nofollow\">was released in 2009</a>.</p>\n\n<p>So now, DOM elements selectors is not the strongest point of jQuery anymore. However, it still has a lot of goodies up its sleeve, like shortcuts to change element's css and html content, animations, events binding, ajax.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In terms of code maintainability, there are several reasons to stick with a widely used library. </p>\n\n<p>One of the main ones is that they are well documented, and have communities such as ... say ... stackexchange, where help with the libraries can be found. With a custom coded library, you have the source code, and maybe a how-to document, unless the coder(s) spent more time documenting the code than writing it, which is vanishingly rare. </p>\n\n<p>Writing your own library might work for <em>you</em> , but the intern sitting at the next desk may have an easier time getting up to speed with something like jQuery.</p>\n\n<p>Call it network effect if you like. This isn't to say that the code will be superior in jQuery; just that the concise nature of the code makes it easier to grasp the overall structure for programmers of all skill levels, if only because there's more functional code visible at once in the file you are viewing. In this sense, 5 lines of code is better than 10.</p>\n\n<p>To sum up, I see the main benefits of jQuery as being concise code, and ubiquity.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you are optimizing your page for IE8 or newer, you should really consider whether you need jquery or not. Modern browsers have many assets natively which jquery provides. </p>\n\n<p>If you care for performance, you can have incredible performance benefits <strong><em>(2-10 faster)</em></strong> using native javascript:\n<a href=\"http://jsperf.com/jquery-vs-native-selector-and-element-style/2\">http://jsperf.com/jquery-vs-native-selector-and-element-style/2</a></p>\n\n<p>I transformed a div-tagcloud from <em>jquery</em> to <em>native javascript</em> (IE8+ compatible), the results are impressive. 4 times faster with just a little overhead.</p>\n\n<pre><code>                    Number of lines       Execution Time                       \nJquery version :        340                    155ms\nNative version :        370                    27ms\n</code></pre>\n\n<p>You Might Not Need Jquery provides a really nice overview, which native methods replace for which browser version.</p>\n\n<p><a href=\"http://youmightnotneedjquery.com/\">http://youmightnotneedjquery.com/</a></p>\n\n<hr>\n\n<p>Appendix: Further speed comparisons how native methods compete to jquery</p>\n\n<ul>\n<li><p><a href=\"http://jsperf.com/in-array-vs-inarray-vs-indexof\">Array: $.inArray vs Array.indexOf: Jquery 24% slower</a></p></li>\n<li><p><a href=\"http://jsperf.com/innerhtml-vs-removechild/147\">DOM: $.empty vs Node.innerHtml: Jquery 97% slower</a></p></li>\n<li><p><a href=\"http://jsperf.com/click-vs-addeventlistener/15\">DOM: $.on vs Node.addEventListener: Jquery 90% slower</a></p></li>\n<li><p><a href=\"http://jsperf.com/jquery-vs-native-selector-and-element-style/2\">DOM: $.find vs Node.queryselectorall: Jquery 90% slower</a></p></li>\n<li><p><a href=\"http://jsperf.com/jquery-grep-vs-for-loop/6\">Array: $.grep vs Array.filter: Native 70% slower</a></p></li>\n<li><p><a href=\"http://jsperf.com/jquery-css-display-none-vs-hide/17\">DOM: $.show/hide vs display none: Jquery 85% slower</a></p></li>\n<li><p><a href=\"http://jsperf.com/native-xhr-vs-jquery-ajax\">AJAX: $.ajax vs XMLHttpRequest: Jquery 89% slower</a></p></li>\n<li><p><a href=\"http://jsperf.com/outerheight-vs-offsetheight\">Height: $.outerHeight vs offsetHeight: Jquery 87% slower</a></p></li>\n<li><p><a href=\"http://jsperf.com/jquery-attr-vs-native-setattribute/21\">Attr: $.attr vs setAttribute: Jquery 86% slower</a></p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 22
                }
            ],
            "body": "<p>I heard several times that jQuery's strongest asset is the way it queries and manipulates elements in the DOM: you can use CSS queries to create complex queries that would be very hard to do in regular javascript . \nHowever , as far as I know , you can achieve the same result with <code>document.querySelector</code> or <code>document.querySelectorAll</code> (which are supported in Internet Explorer 8 and above) . </p>\n\n<p>So the question is - why 'risk' jQuery's overhead if it's strongest asset can be achieved with pure JavaScript ? </p>\n\n<p>I know jQuery has more than just CSS selectors , for example cross browser AJAX, nice event attaching etc. But it's querying part is a very big part of the strength of jQuery .</p>\n\n<p>Any thoughts?</p>\n",
            "last_activity_date": 1401983244,
            "question_id": 11503534,
            "score": 65,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "jQuery vs document.querySelectorAll"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>concat.js is being included in the <code>concat</code> task's source files <code>public/js/*.js</code>. You could have a task that removes <code>concat.js</code> (if the file exists) before concatenating again, pass an array to explicitly define which files you want to concatenate and their order, or change the structure of your project. </p>\n\n<p>If doing the latter, you could put all your sources under <code>./src</code> and your built files under <code>./dest</code></p>\n\n<pre><code>src\n\u251c\u2500\u2500 css\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 1.css\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 2.css\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 3.css\n\u2514\u2500\u2500 js\n    \u251c\u2500\u2500 1.js\n    \u251c\u2500\u2500 2.js\n    \u2514\u2500\u2500 3.js\n</code></pre>\n\n<p>Then set up your <strong>concat</strong> task</p>\n\n<pre><code>concat: {\n  js: {\n    src: 'src/js/*.js',\n    dest: 'dest/js/concat.js'\n  },\n  css: {\n    src: 'src/css/*.css',\n    dest: 'dest/css/concat.css'\n  }\n},\n</code></pre>\n\n<p>Your <strong>min</strong> task</p>\n\n<pre><code>min: {\n  js: {\n    src: 'dest/js/concat.js',\n    dest: 'dest/js/concat.min.js'\n  }\n},\n</code></pre>\n\n<p>The build-in <strong>min</strong> task uses UglifyJS, so you need a replacement. I found <strong>grunt-css</strong> to be pretty good. After installing it, load it into your grunt file </p>\n\n<pre><code>grunt.loadNpmTasks('grunt-css');\n</code></pre>\n\n<p>And then set it up</p>\n\n<pre><code>cssmin: {\n  css:{\n    src: 'dest/css/concat.css',\n    dest: 'dest/css/concat.min.css'\n  }\n}\n</code></pre>\n\n<p>Notice that the usage is similar to the built-in min. </p>\n\n<p>Change your <code>default</code> task to </p>\n\n<pre><code>grunt.registerTask('default', 'concat min cssmin');\n</code></pre>\n\n<p>Now, running <code>grunt</code> will produce the results you want.</p>\n\n<pre><code>dest\n\u251c\u2500\u2500 css\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 concat.css\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 concat.min.css\n\u2514\u2500\u2500 js\n    \u251c\u2500\u2500 concat.js\n    \u2514\u2500\u2500 concat.min.js\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 69
                },
                {
                    "body": "<p>I agree with above answer.  But here is another way of CSS compression.</p>\n\n<p>You can concat your CSS by using <strong>YUI compressor</strong>:</p>\n\n<pre><code>module.exports = function(grunt) {\n  var exec = require('child_process').exec;\n   grunt.registerTask('cssmin', function() {\n    var cmd = 'java -jar -Xss2048k '\n      + __dirname + '/../yuicompressor-2.4.7.jar --type css '\n      + grunt.template.process('/css/style.css') + ' -o '\n      + grunt.template.process('/css/style.min.css')\n    exec(cmd, function(err, stdout, stderr) {\n      if(err) throw err;\n    });\n  });\n}; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I want to mention here a very, VERY, interesting technique that is being used in huge projects like jQuery and Modernizr for concatenate things. </p>\n\n<p>Both of this projects are entirely developed with requirejs modules (you can see that in their github repos) and then they use the requirejs optimizer as a very smart concatenator. The interesting thing is that, as you can see, nor jQuery neither Modernizr needs on requirejs to work, and this happen because they erase the requirejs syntatic ritual in order to get rid of requirejs in their code. So they end up with a standalone library that was developed with requirejs modules! Thanks to this they are able to perform cutsom builds of their libraries, among other advantages. </p>\n\n<p>For all those interested in concatenation with the requirejs optimizer, check out <a href=\"http://augustoaltman.tumblr.com/post/103432024045/from-requirejs-modules-to-standalone-javascript\" rel=\"nofollow\">this post</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p><em>Note: This question is only relevant for Grunt 0.3.x and has been left for reference. For help with the latest Grunt 0.4.x release please see my comment below this question.</em></p>\n\n<p>I'm currently trying to use Grunt.js to setup an automatic build process for first concatenating and then minifying CSS and JavaScript files.</p>\n\n<p>I have been able to successfully concatenate and minify my JavaScript files, although each time I run grunt it seems to just append to the file instead of overwriting them.</p>\n\n<p>As for the minifying or even concatenating CSS, I have been unable to do this as of yet!</p>\n\n<p>In terms of grunt CSS modules I have tried using <code>consolidate-css</code>, <code>grunt-css</code> &amp; <code>cssmin</code> but to no avail. Could not get my head around how to use them!</p>\n\n<p>My directory structure is as follows (being a typical node.js application):</p>\n\n<ul>\n<li>app.js</li>\n<li>grunt.js</li>\n<li>/public/index.html</li>\n<li>/public/css/[various css files]</li>\n<li>/public/js/[various javascript files]</li>\n</ul>\n\n<p>Here is what my grunt.js file currently looks like in the root folder of my application:</p>\n\n<pre><code>module.exports = function(grunt) {\n\n  // Project configuration.\n  grunt.initConfig({\n    pkg: '&lt;json:package.json&gt;',\n    concat: {\n      dist: {\n        src: 'public/js/*.js',\n        dest: 'public/js/concat.js'\n      }\n    },\n    min: {\n      dist: {\n        src: 'public/js/concat.js',\n        dest: 'public/js/concat.min.js'\n      }\n    },\n    jshint: {\n      options: {\n        curly: true,\n        eqeqeq: true,\n        immed: true,\n        latedef: true,\n        newcap: true,\n        noarg: true,\n        sub: true,\n        undef: true,\n        boss: true,\n        eqnull: true,\n        node: true\n      },\n      globals: {\n        exports: true,\n        module: false\n      }\n    },\n    uglify: {}\n  });\n\n  // Default task.\n  grunt.registerTask('default', 'concat min');\n\n};\n</code></pre>\n\n<p>So just to summarise I need help with two questions:</p>\n\n<ol>\n<li>How to concatenate and minify all my css files under the folder <code>/public/css/</code> into one file, say <code>main.min.css</code></li>\n<li>Why does grunt.js keep on appending to the concatenated and minified javascript files <code>concat.js</code> and <code>concat.min.js</code> under <code>/public/js/</code> instead of overwriting them each time the command <code>grunt</code> is run?</li>\n</ol>\n\n<hr>\n\n<p><strong>Updated 20th of June 2013 - Upgrading from Grunt 0.3.x to Grunt 0.4.x</strong></p>\n\n<p><code>Grunt.js</code> has moved to a new structure in <code>Grunt 0.4.x</code> (the file is now called <code>Gruntfile.js</code>). Please see my open source project <a href=\"https://github.com/jasdeepkhalsa/gruntjs-skeleton\">Grunt.js Skeleton</a> for help with setting up a build process for <code>Grunt 0.4.x</code>.</p>\n",
            "last_activity_date": 1417137014,
            "question_id": 13713273,
            "score": 57,
            "tags": [
                "javascript",
                "css",
                "concatenation",
                "minify",
                "gruntjs"
            ],
            "title": "How to concatenate and minify multiple CSS and JavaScript files with Grunt.js"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Untested.\nModify to suit:</p>\n\n<pre><code>$form = $('#my-form');\n\n$rows = $form.find('.person-input-row');\n\n$('button#add-new').click(function() {\n\n    $rows.find(':first').clone().insertAfter($rows.find(':last'));\n\n    $justInserted = $rows.find(':last');\n    $justInserted.hide();\n    $justInserted.find('input').val(''); // it may copy values from first one\n    $justInserted.slideDown(500);\n\n\n});\n</code></pre>\n\n<p>This is better than copying innerHTML because you will lose all attached events etc.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This will get you close, the add button has been removed out of the table so you might want to consider this...</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function() {\n        $(\"#add\").click(function() {\n          $('#mytable tbody&gt;tr:last').clone(true).insertAfter('#mytable tbody&gt;tr:last');\n          return false;\n        });\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>HTML markup looks like this</p>\n\n<pre><code>  &lt;a  id=\"add\"&gt;+&lt;/a&gt;&lt;/td&gt;\n  &lt;table id=\"mytable\" width=\"300\" border=\"1\" cellspacing=\"0\" cellpadding=\"2\"&gt;\n  &lt;tbody&gt;\n    &lt;tr&gt;\n      &lt;td&gt;Name&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class=\"person\"&gt;\n      &lt;td&gt;&lt;input type=\"text\" name=\"name\" id=\"name\" /&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/tbody&gt;\n  &lt;/table&gt;\n</code></pre>\n\n<p><strong>EDIT</strong> To empty a value of a textbox after insert..</p>\n\n<pre><code>    $('#mytable tbody&gt;tr:last').clone(true).insertAfter('#mytable tbody&gt;tr:last');\n    $('#mytable tbody&gt;tr:last #name').val('');\n    return false;\n</code></pre>\n\n<p><strong>EDIT2</strong> Couldn't help myself, to reset all dropdown lists in the inserted TR you can do this</p>\n\n<pre><code>$(\"#mytable tbody&gt;tr:last\").each(function() {this.reset();});           \n</code></pre>\n\n<p>I will leave the rest to you!</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>I have Tried something like this and its works fine;</p>\n\n<p><img src=\"http://i.stack.imgur.com/qpBN4.png\" alt=\"enter image description here\"></p>\n\n<p>this is the html part : </p>\n\n<pre><code>&lt;table class=\"dd\" width=\"100%\" id=\"data\"&gt;\n&lt;tr&gt;\n&lt;td&gt;Year&lt;/td&gt;\n&lt;td&gt;:&lt;/td&gt;\n&lt;td&gt;&lt;select name=\"year1\" id=\"year1\" &gt;\n&lt;option value=\"2012\"&gt;2012&lt;/option&gt;\n&lt;option value=\"2011\"&gt;2011&lt;/option&gt;\n&lt;/select&gt;&lt;/td&gt;\n&lt;td&gt;Month&lt;/td&gt;\n&lt;td&gt;:&lt;/td&gt;\n&lt;td width=\"17%\"&gt;&lt;select name=\"month1\" id=\"month1\"&gt;\n  &lt;option value=\"1\"&gt;January&lt;/option&gt;\n  &lt;option value=\"2\"&gt;February&lt;/option&gt;\n  &lt;option value=\"3\"&gt;March&lt;/option&gt;\n  &lt;option value=\"4\"&gt;April&lt;/option&gt;\n  &lt;option value=\"5\"&gt;May&lt;/option&gt;\n  &lt;option value=\"6\"&gt;June&lt;/option&gt;\n  &lt;option value=\"7\"&gt;July&lt;/option&gt;\n  &lt;option value=\"8\"&gt;August&lt;/option&gt;\n  &lt;option value=\"9\"&gt;September&lt;/option&gt;\n  &lt;option value=\"10\"&gt;October&lt;/option&gt;\n  &lt;option value=\"11\"&gt;November&lt;/option&gt;\n  &lt;option value=\"12\"&gt;December&lt;/option&gt;\n&lt;/select&gt;&lt;/td&gt;\n&lt;td width=\"7%\"&gt;Week&lt;/td&gt;\n&lt;td width=\"3%\"&gt;:&lt;/td&gt;\n&lt;td width=\"17%\"&gt;&lt;select name=\"week1\" id=\"week1\" &gt;\n  &lt;option value=\"1\"&gt;1&lt;/option&gt;\n  &lt;option value=\"2\"&gt;2&lt;/option&gt;\n  &lt;option value=\"3\"&gt;3&lt;/option&gt;\n  &lt;option value=\"4\"&gt;4&lt;/option&gt;\n&lt;/select&gt;&lt;/td&gt;\n&lt;td width=\"8%\"&gt;&amp;nbsp;&lt;/td&gt;\n&lt;td colspan=\"2\"&gt;&amp;nbsp;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Actual&lt;/td&gt;\n&lt;td&gt;:&lt;/td&gt;\n&lt;td width=\"17%\"&gt;&lt;input name=\"actual1\" id=\"actual1\" type=\"text\" /&gt;&lt;/td&gt;\n&lt;td width=\"7%\"&gt;Max&lt;/td&gt;\n&lt;td width=\"3%\"&gt;:&lt;/td&gt;\n&lt;td&gt;&lt;input name=\"max1\" id=\"max1\" type=\"text\" /&gt;&lt;/td&gt;\n&lt;td&gt;Target&lt;/td&gt;\n&lt;td&gt;:&lt;/td&gt;\n&lt;td&gt;&lt;input name=\"target1\" id=\"target1\" type=\"text\" /&gt;&lt;/td&gt;\n&lt;/tr&gt;\n</code></pre>\n\n<p>\n     \n </p>\n\n<p>\n</p>\n\n<p>this is Javascript part;</p>\n\n<pre><code>&lt;script src=\"http://code.jquery.com/jquery-latest.js\"&gt;&lt;/script&gt;\n&lt;script type='text/javascript'&gt;\n//&lt;![CDATA[\n$(document).ready(function() {\nvar currentItem = 1;\n$('#addnew').click(function(){\ncurrentItem++;\n$('#items').val(currentItem);\nvar strToAdd = '&lt;tr&gt;&lt;td&gt;Year&lt;/td&gt;&lt;td&gt;:&lt;/td&gt;&lt;td&gt;&lt;select name=\"year'+currentItem+'\" id=\"year'+currentItem+'\" &gt;&lt;option value=\"2012\"&gt;2012&lt;/option&gt;&lt;option value=\"2011\"&gt;2011&lt;/option&gt;&lt;/select&gt;&lt;/td&gt;&lt;td&gt;Month&lt;/td&gt;&lt;td&gt;:&lt;/td&gt;&lt;td width=\"17%\"&gt;&lt;select name=\"month'+currentItem+'\" id=\"month'+currentItem+'\"&gt;&lt;option value=\"1\"&gt;January&lt;/option&gt;&lt;option value=\"2\"&gt;February&lt;/option&gt;&lt;option value=\"3\"&gt;March&lt;/option&gt;&lt;option value=\"4\"&gt;April&lt;/option&gt;&lt;option value=\"5\"&gt;May&lt;/option&gt;&lt;option value=\"6\"&gt;June&lt;/option&gt;&lt;option value=\"7\"&gt;July&lt;/option&gt;&lt;option value=\"8\"&gt;August&lt;/option&gt;&lt;option value=\"9\"&gt;September&lt;/option&gt;&lt;option value=\"10\"&gt;October&lt;/option&gt;&lt;option value=\"11\"&gt;November&lt;/option&gt;&lt;option value=\"12\"&gt;December&lt;/option&gt;&lt;/select&gt;&lt;/td&gt;&lt;td width=\"7%\"&gt;Week&lt;/td&gt;&lt;td width=\"3%\"&gt;:&lt;/td&gt;&lt;td width=\"17%\"&gt;&lt;select name=\"week'+currentItem+'\" id=\"week'+currentItem+'\" &gt;&lt;option value=\"1\"&gt;1&lt;/option&gt;&lt;option value=\"2\"&gt;2&lt;/option&gt;&lt;option value=\"3\"&gt;3&lt;/option&gt;&lt;option value=\"4\"&gt;4&lt;/option&gt;&lt;/select&gt;&lt;/td&gt;&lt;td width=\"8%\"&gt;&lt;/td&gt;&lt;td colspan=\"2\"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Actual&lt;/td&gt;&lt;td&gt;:&lt;/td&gt;&lt;td width=\"17%\"&gt;&lt;input name=\"actual'+currentItem+'\" id=\"actual'+currentItem+'\" type=\"text\" /&gt;&lt;/td&gt;&lt;td width=\"7%\"&gt;Max&lt;/td&gt; &lt;td width=\"3%\"&gt;:&lt;/td&gt;&lt;td&gt;&lt;input name=\"max'+currentItem+'\" id =\"max'+currentItem+'\"type=\"text\" /&gt;&lt;/td&gt;&lt;td&gt;Target&lt;/td&gt;&lt;td&gt;:&lt;/td&gt;&lt;td&gt;&lt;input name=\"target'+currentItem+'\" id=\"target'+currentItem+'\" type=\"text\" /&gt;&lt;/td&gt;&lt;/tr&gt;';\n  $('#data').append(strToAdd);\n\n });\n });\n\n //]]&gt;\n &lt;/script&gt;\n</code></pre>\n\n<p>Finaly PHP submit part:</p>\n\n<pre><code>    for( $i = 1; $i &lt;= $count; $i++ )\n{\n    $year = $_POST['year'.$i];\n    $month = $_POST['month'.$i];\n    $week = $_POST['week'.$i];\n    $actual = $_POST['actual'.$i];\n    $max = $_POST['max'.$i];\n    $target = $_POST['target'.$i];\n    $extreme = $_POST['extreme'.$i];\n    $que = \"insert INTO table_name(id,year,month,week,actual,max,target) VALUES ('\".$_POST['type'].\"','\".$year.\"','\".$month.\"','\".$week.\"','\".$actual.\"','\".$max.\"','\".$target.\"')\";\n    mysql_query($que);\n\n}\n</code></pre>\n\n<p>you can find more details via <a href=\"http://phpmysqlmania.blogspot.com/p/dynamic-table-row-inserter.html\" rel=\"nofollow\">Dynamic table row inserter</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As an addition to answers above: you probably might need to change ids in names/ids of input elements (pls note, you should not have digits in fields name): </p>\n\n<pre><code>&lt;input name=\"someStuff.entry[2].fieldOne\" id=\"someStuff_fdf_fieldOne_2\" ..&gt;\n</code></pre>\n\n<p>I have done this having some global variable by default set to 0:</p>\n\n<pre><code>var globalNewIndex = 0;\n</code></pre>\n\n<p>and in the add function after you've cloned and resetted the values in the new row:</p>\n\n<pre><code>                var newIndex = globalNewIndex+1;\n                var changeIds = function(i, val) {\n                    return val.replace(globalNewIndex,newIndex);\n                }\n                $('#mytable tbody&gt;tr:last input').attr('name', changeIds ).attr('id', changeIds );\n                globalNewIndex++;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Building on the other answers, I simplified things a bit. By cloning the last element, we get the \"add new\" button for free (you have to change the ID to a class because of the cloning) and also reduce DOM operations. I had to use filter() instead of find() to get only the last element.</p>\n\n<pre><code>$('.js-addNew').on('click', function(e) {\n   e.preventDefault();\n   var $rows   = $('.person'),\n       $last   = $rows.filter(':last'),\n       $newRow = $last.clone().insertAfter($last);\n\n   $last.find($('.js-addNew')).remove(); // remove old button\n   $newRow.hide().find('input').val('');\n   $newRow.slideDown(500);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm building a form where I need multiple optional inputs, what I have is basically this:</p>\n\n<p><img src=\"http://i49.tinypic.com/fcscyh.png\" alt=\"form example\"></p>\n\n<p>Every time a user presses the plus button a new row of form inputs should be added to the form, how can I do this in jQuery? <strong>Also, is it possible to automatically add a new row when all rows</strong> (or just the last row, if it's easier / faster) <strong>are filled?</strong> That way the user wouldn't need to press the plus button.</p>\n\n<p>I'm sorry for asking maybe such a basic question but I'm still very green with jQuery, I could do this with PHP but I'm sure Javascript / jQuery plays a more appropriate role here.</p>\n\n<p>Thanks in advance!</p>\n\n<hr>\n\n<h2>@alex:</h2>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.0/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n$form = $('#personas');\n$rows = $form.find('.person');\n\n$('a#add').click(function() {\n    $rows.find(':first').clone().insertAfter($rows.find(':last'));\n    $justInserted = $rows.find(':last');\n    $justInserted.hide();\n    $justInserted.find('input').val(''); // it may copy values from first one\n    $justInserted.slideDown(500);\n});\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;form id=\"personas\" name=\"personas\" method=\"post\" action=\"\"&gt;\n  &lt;table width=\"300\" border=\"1\" cellspacing=\"0\" cellpadding=\"2\"&gt;\n    &lt;tr&gt;\n      &lt;td&gt;Name&lt;/td&gt;\n      &lt;td&gt;More?&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class=\"person\"&gt;\n      &lt;td&gt;&lt;input type=\"text\" name=\"name[]\" id=\"name[]\" /&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;a href=\"#\" id=\"add\"&gt;+&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/table&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1380609851,
            "question_id": 2145012,
            "score": 46,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "forms"
            ],
            "title": "Adding rows dynamically with jQuery"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I would take a look at <a href=\"http://developer.yahoo.com/yui/2/\" rel=\"nofollow\">YUI</a>, and at Dean Edward's <code>Base</code> library: <a href=\"http://dean.edwards.name/weblog/2006/03/base/\" rel=\"nofollow\">http://dean.edwards.name/weblog/2006/03/base/</a></p>\n\n<p>For YUI you can take a quick look at the <a href=\"http://developer.yahoo.com/yui/yahoo/#lang\" rel=\"nofollow\">lang module</a>, esp. the YAHOO.lang.extend method. And then, you can browse the source of some widgets or utilities and see how they use that method.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>There's also Microsoft's <a href=\"http://en.wikipedia.org/wiki/ASP.NET\" rel=\"nofollow\">ASP.NET</a> Ajax library, <a href=\"http://www.asp.net/ajax/\" rel=\"nofollow\">http://www.asp.net/ajax/</a>.</p>\n\n<p>There are a lot of good MSDN articles around as well, including <em><a href=\"http://msdn.microsoft.com/en-us/magazine/cc163419.aspx\" rel=\"nofollow\">Create Advanced Web Applications With Object-Oriented Techniques</a></em>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Douglas Crockford has a nice page on <a href=\"http://javascript.crockford.com/prototypal.html\">JavaScript Prototypal Inheritance</a>:</p>\n\n<blockquote>\n  <p>Five years ago I wrote <a href=\"http://javascript.crockford.com/inheritance.html\">Classical Inheritance</a> in JavaScript. It showed that JavaScript is a class-free, prototypal language, and that it has sufficient expressive power to simulate a classical system. My programming style has evolved since then, as any good programmer's should. I have learned to fully embrace prototypalism, and have liberated myself from the confines of the classical model.</p>\n</blockquote>\n\n<p>Dean Edward's <a href=\"http://code.google.com/p/base2/\">Base.js</a>, <a href=\"http://mootools.net/docs/core/Class/Class\">Mootools's Class</a> or <a href=\"http://ejohn.org/blog/simple-javascript-inheritance/\">John Resig's Simple Inheritance</a> works are ways to do <a href=\"http://javascript.crockford.com/inheritance.html\">classical inheritance</a> in JavaScript.</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>I suggest looking at PrototypeJS' Class.create:<br>\nLine 83 @ <a href=\"http://prototypejs.org/assets/2009/8/31/prototype.js\" rel=\"nofollow\">http://prototypejs.org/assets/2009/8/31/prototype.js</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The best examples I've seen are in Douglas Crockford's <a href=\"http://www.amazon.co.uk/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742/ref=sr_1_1?ie=UTF8&amp;s=books&amp;qid=1264190264&amp;sr=8-1\" rel=\"nofollow\">JavaScript: The Good Parts</a>. It's definitely worth buying to help you get a balanced view on the language.</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Douglas_Crockford\" rel=\"nofollow\">Douglas Crockford</a> is responsible for the JSON format and works at Yahoo as a JavaScript guru.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As mentioned, the movies by Douglas Crockford give a good explanation about the why and it convers the how. But to put it in a couple of lines of JavaScript:</p>\n\n<pre><code>// Declaring our Animal object\nvar Animal = function () {\n\n    this.name = 'unknown';\n\n    this.getName = function () {\n        return this.name;\n    }\n\n    return this;\n};\n\n// Declaring our Dog object\nvar Dog = function () {\n\n    // A private variable here        \n    var private = 42;\n\n    // overriding the name\n    this.name = \"Bello\";\n\n    // Implementing \".bark()\"\n    this.bark = function () {\n        return 'MEOW';\n    }  \n\n    return this;\n};\n\n\n// Dog extends animal\nDog.prototype = new Animal();\n\n// -- Done declaring --\n\n// Creating an instance of Dog.\nvar dog = new Dog();\n\n// Proving our case\nconsole.log(\n    \"Is dog an instance of Dog? \", dog instanceof Dog, \"\\n\",\n    \"Is dog an instance of Animal? \", dog instanceof Animal, \"\\n\",\n    dog.bark() +\"\\n\", // Should be: \"MEOW\"\n    dog.getName() +\"\\n\", // Should be: \"Bello\"\n    dog.private +\"\\n\" // Should be: 'undefined'\n);\n</code></pre>\n\n<p>The problem with this approach however, is that it will re-create the object every time you create on. So this is not the best way to go about it. The best way is by declaring your objects on the prototype stack, like so:</p>\n\n<pre><code>// Defining test one, prototypal\nvar testOne = function () {};\ntestOne.prototype = (function () {\n    var me = {}, privateVariable = 42;\n    me.someMethod = function () {\n        return privateVariable;\n    };\n\n    me.publicVariable = \"foo bar\";\n    me.anotherMethod = function () {\n        return this.publicVariable;\n    };\n\n    return me;\n\n})();\n\n\n// Defining test two, function\nvar testTwo = \u200bfunction() {\n    var me = {}, privateVariable = 42;\n    me.someMethod = function () {\n        return privateVariable;\n    };\n\n    me.publicVariable = \"foo bar\";\n    me.anotherMethod = function () {\n        return this.publicVariable;\n    };\n\n    return me;\n};\n\n\n// Proving that both techniques are functionally identical\nvar resultTestOne = new testOne(),\n    resultTestTwo = new testTwo();\n\nconsole.log(\n    resultTestOne.someMethod(), // Should print 42\n    resultTestOne.publicVariable // Should print \"foo bar\"\n);\n\nconsole.log(\n    resultTestTwo.someMethod(), // Should print 42\n    resultTestTwo.publicVariable // Should print \"foo bar\"\n);\n\n\n\n// Performance benchmark start\nvar stop, start, loopCount = 1000000;\n\n// Running testOne\nstart = (new Date()).getTime(); \nfor (var i = loopCount; i&gt;0; i--) {\n    new testOne();\n}\nstop = (new Date()).getTime();\n\nconsole.log('Test one took: '+ Math.round(((stop/1000) - (start/1000))*1000) +' milliseconds');\n\n\n\n// Running testTwo\nstart = (new Date()).getTime(); \nfor (var i = loopCount; i&gt;0; i--) {\n    new testTwo();\n}\nstop = (new Date()).getTime();\n\nconsole.log('Test two took: '+ Math.round(((stop/1000) - (start/1000))*1000) +' milliseconds');\n</code></pre>\n\n<p>There is a slight downside when it comes to introspection. Dumping testOne, will result in less useful information.</p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<pre><code>function Shape(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\n// 1. Explicitly call base (Shape) constructor from subclass (Circle) constructor passing this as the explicit receiver\nfunction Circle(x, y, r) {\n    Shape.call(this, x, y);\n    this.r = r;\n}\n\n// 2. Use Object.create to construct the subclass prototype object to avoid calling the base constructor\nCircle.prototype = Object.create(Shape.prototype);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I have been programming with OOP languages for over 10 years but I'm learning JavaScript now and it's the first time I've encountered prototype-based inheritance. I tend to learn fastest by studying good code. What's a well-written example of a JavaScript application (or library) that properly uses prototypal inheritance? And can you describe (briefly) how/where prototypal inheritance is used, so I know where to start reading?</p>\n",
            "last_activity_date": 1397575282,
            "question_id": 2064731,
            "score": 45,
            "tags": [
                "javascript",
                "prototypal-inheritance"
            ],
            "title": "Good Example of JavaScript&#39;s Prototype-Based Inheritance"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>In the $routeProvider URI patters, you can specify variable parameters, like so: <code>$routeProvider.when('/page/:pageNumber' ...</code> , and access it in your controller via $routeParams.</p>\n\n<p>There is a good example at the end of the $route page: <a href=\"http://docs.angularjs.org/api/ng.%24route\">http://docs.angularjs.org/api/ng.$route</a></p>\n\n<p><strong>EDIT (for the edited question):</strong></p>\n\n<p>The routing system is unfortunately very limited - there is a lot of discussion on this topic, and some solutions have been proposed, namely via creating multiple named views, etc.. But right now, the ngView directive serves only ONE view per route, on a one-to-one basis. You can go about this in multiple ways - the simpler one would be to use the view's template as a loader, with a <code>&lt;ng-include src=\"myTemplateUrl\"&gt;&lt;/ng-include&gt;</code> tag in it ($scope.myTemplateUrl would be created in the controller).</p>\n\n<p>I use a more complex (but cleaner, for larger and more complicated problems) solution, basically skipping the $route service altogether, that is detailed here: </p>\n\n<p><a href=\"http://www.bennadel.com/blog/2420-Mapping-AngularJS-Routes-Onto-URL-Parameters-And-Client-Side-Events.htm\">http://www.bennadel.com/blog/2420-Mapping-AngularJS-Routes-Onto-URL-Parameters-And-Client-Side-Events.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Ok solved it.</p>\n\n<p><strong>Added the solution to GitHub</strong> - <a href=\"http://gregorypratt.github.com/AngularDynamicRouting\">http://gregorypratt.github.com/AngularDynamicRouting</a></p>\n\n<p>In my app.js routing config:</p>\n\n<pre><code>$routeProvider.when('/pages/:name', {\n    templateUrl: '/pages/home.html', \n    controller: CMSController \n});\n</code></pre>\n\n<p>Then in my CMS controller:</p>\n\n<pre><code>function CMSController($scope, $route, $routeParams) {\n\n    $route.current.templateUrl = '/pages/' + $routeParams.name + \".html\";\n\n    $.get($route.current.templateUrl, function (data) {\n        $scope.$apply(function () {\n            $('#views').html($compile(data)($scope));\n        });\n    });\n    ...\n}\nCMSController.$inject = ['$scope', '$route', '$routeParams'];\n</code></pre>\n\n<p>With #views being my <code>&lt;div id=\"views\" ng-view&gt;&lt;/div&gt;</code></p>\n\n<p><strong>So now it works with standard routing and dynamic routing.</strong></p>\n\n<p>To test it I copied about.html called it portfolio.html, changed some of it's contents and entered <code>/#/pages/portfolio</code> into my browser and hey presto portfolio.html was displayed....</p>\n\n<p><em><strong>Updated</em></strong>\n<em>Added $apply and $compile to the html so that dynamic content can be injected.</em></p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>I think the easiest way to do such thing is to resolve the routes later, you could ask the routes via json, for example. Check out that I make a factory out of the $routeProvider during config phase, via $provide, so I can keep using the $routeProvider object in the run phase, and even in controllers.</p>\n\n<pre><code>'use strict';\n\nangular.module('myapp', []).config(function($provide, $routeProvider) {\n    $provide.factory('$routeProvider', function () {\n        return $routeProvider;\n    });\n}).run(function($routeProvider, $http) {\n    $routeProvider.when('/', {\n        templateUrl: 'views/main.html',\n        controller: 'MainCtrl'\n    }).otherwise({\n        redirectTo: '/'\n    });\n\n    $http.get('/dynamic-routes.json').success(function(data) {\n        $routeProvider.when('/', {\n            templateUrl: 'views/main.html',\n            controller: 'MainCtrl'\n        });\n        // you might need to call $route.reload() if the route changed\n        $route.reload();\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>As of AngularJS 1.1.3, you can now do exactly what you want using the new catch-all parameter.</p>\n\n<p><a href=\"https://github.com/angular/angular.js/commit/7eafbb98c64c0dc079d7d3ec589f1270b7f6fea5\" rel=\"nofollow\">https://github.com/angular/angular.js/commit/7eafbb98c64c0dc079d7d3ec589f1270b7f6fea5</a></p>\n\n<p>From the commit:</p>\n\n<blockquote>\n  <p>This allows routeProvider to accept parameters that matches\n  substrings even when they contain slashes if they are prefixed\n  with an asterisk instead of a colon.\n  For example, routes like edit/color/:color/largecode/*largecode\n  will match with something like this\n  <a href=\"http://appdomain.com/edit/color/brown/largecode/code/with/slashs\" rel=\"nofollow\">http://appdomain.com/edit/color/brown/largecode/code/with/slashs</a>.</p>\n</blockquote>\n\n<p>I have tested it out myself (using 1.1.5) and it works great. Just keep in mind that each new URL will reload your controller, so to keep any kind of state, you may need to use a custom service.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Not sure why this works but dynamic (or wildcard if you prefer) routes are possible in angular 1.2.0-rc.2...</p>\n\n<pre><code>http://code.angularjs.org/1.2.0-rc.2/angular.min.js\nhttp://code.angularjs.org/1.2.0-rc.2/angular-route.min.js\n\nangular.module('yadda', [\n  'ngRoute'\n]).\n\nconfig(function ($routeProvider, $locationProvider) {\n  $routeProvider.\n    when('/:a', {\n  template: '&lt;div ng-include=\"templateUrl\"&gt;Loading...&lt;/div&gt;',\n  controller: 'DynamicController'\n}).\n\n\ncontroller('DynamicController', function ($scope, $routeParams) {\nconsole.log($routeParams);\n$scope.templateUrl = 'partials/' + $routeParams.a;\n}).\n</code></pre>\n\n<p>example.com/foo -> loads \"foo\" partial</p>\n\n<p>example.com/bar-> loads \"bar\" partial</p>\n\n<p>No need for any adjustments in the ng-view.  The '/:a' case is the only variable I have found that will acheive this.. '/:foo' does not work unless your partials are all foo1, foo2, etc...  '/:a' works with any partial name.</p>\n\n<p>All values fire the dynamic controller - so there is no \"otherwise\" but, I think it is what you're looking for in a dynamic or wildcard routing scenario..</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>angular.module('myapp', ['myapp.filters', 'myapp.services', 'myapp.directives']).\n        config(['$routeProvider', function($routeProvider) {\n        $routeProvider.when('/page/:name', {\n            templateUrl: function(urlattr){\n                return '/pages/' + urlattr.name + '.html';\n            },\n            controller: 'CMSController'\n        });\n    }\n]);\n</code></pre>\n\n<p>From the docs (1.3.0): </p>\n\n<blockquote>\n  <p>\"If templateUrl is a function, it will be called with the following\n  parameters:</p>\n  \n  <p>{Array.} - route parameters extracted from the current\n  $location.path() by applying the current route\"</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 33
                }
            ],
            "body": "<p>I currently have an AngularJS application with routing built in.\nIt works and everything is ok.</p>\n\n<p>My app.js file looks like this:</p>\n\n<pre><code>angular.module('myapp', ['myapp.filters', 'myapp.services', 'myapp.directives']).\n  config(['$routeProvider', function ($routeProvider) {\n      $routeProvider.when('/', { templateUrl: '/pages/home.html', controller: HomeController });\n      $routeProvider.when('/about', { templateUrl: '/pages/about.html', controller: AboutController });\n      $routeProvider.when('/privacy', { templateUrl: '/pages/privacy.html', controller: AboutController });\n      $routeProvider.when('/terms', { templateUrl: '/pages/terms.html', controller: AboutController });\n      $routeProvider.otherwise({ redirectTo: '/' });\n  }]);\n</code></pre>\n\n<p>My app has a CMS built in where you can copy and add new html files within the <strong>/pages</strong> directory.</p>\n\n<p>I would like to still go through the routing provider though even for the new dynamically added files.</p>\n\n<p>In an ideal world the routing pattern would be:</p>\n\n<p>$routeProvider.when('/<strong>pagename</strong>', { templateUrl: '/pages/<strong>pagename</strong>.html', controller: CMSController });</p>\n\n<p>So if my new page name was \"contact.html\" I would like angular to pick up \"/contact\" and redirect to \"/pages/contact.html\".</p>\n\n<p>Is this even possible?! and if so how?!</p>\n\n<p><strong>Update</strong></p>\n\n<p>I now have this in my routing config:</p>\n\n<pre><code>$routeProvider.when('/page/:name', { templateUrl: '/pages/home.html', controller: CMSController })\n</code></pre>\n\n<p>and in my CMSController:</p>\n\n<pre><code>function CMSController($scope, $route, $routeParams) {\n    $route.current.templateUrl = '/pages/' + $routeParams.name + \".html\";\n    alert($route.current.templateUrl);\n}\nCMSController.$inject = ['$scope', '$route', '$routeParams'];\n</code></pre>\n\n<p>This sets the current templateUrl to the right value.</p>\n\n<p><em>However</em> I would now like to change the <em>ng-view</em> with the new templateUrl value. How is this accomplished?</p>\n",
            "last_activity_date": 1406121090,
            "question_id": 13681116,
            "score": 37,
            "tags": [
                "javascript",
                "routing",
                "content-management-system",
                "angularjs"
            ],
            "title": "AngularJS dynamic routing"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>You have a couple options: <a href=\"http://developer.mozilla.org/en/SVG/Tutorial/Getting_Started\" rel=\"nofollow\">svg</a> or <a href=\"http://developer.mozilla.org/en/Canvas_tutorial\" rel=\"nofollow\">canvas</a>.</p>\n\n<p>From the looks of it you don't need these arrows to have any particular mathematical form, you just need them to go between elements.</p>\n\n<p>Try <a href=\"http://neyric.github.io/wireit/\" rel=\"nofollow\">WireIt</a>. Have a look at this <a href=\"http://neyric.github.io/wireit/sandbox/presentation.html\" rel=\"nofollow\">WireIt Demo</a> (<em>which has been deprecated</em>). It uses a <code>canvas</code> tag for each individual wire between the floating dialog <code>div</code>s, then sizes and positions each <code>canvas</code> element to give the appearance of a connecting line at just the right spot. You may have to implement an additional rotating arrowhead, unless you don't mind the arrows coming in to each element at the same angle.</p>\n\n<p><strong>Edit</strong>: <a href=\"https://github.com/neyric/wireit/commit/73fab603636490e68ce9e82ef05e9d99086e675c\" rel=\"nofollow\">the demo has been deprecated</a>.</p>\n\n<p><strong>Edit</strong>: Ignore this answer, <a href=\"http://stackoverflow.com/questions/554167/drawing-arrows-on-an-html-page-to-visualize-semantic-links-between-textual-spans#623770\"><em>@Phil H</em> nailed it</a></p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>You could try <a href=\"http://www.walterzorn.com/jsgraphics/jsgraphics_e.htm\" rel=\"nofollow\">this library</a> - it's very clever stuff, hope it helps.</p>\n\n<p>EDIT: As this link is dead, here is another link from <a href=\"http://web.archive.org/web/20090220143503/http://walterzorn.com/jsgraphics/jsgraphics_e.htm\" rel=\"nofollow\">Archive.org</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I try to go with open web technologies wherever possible but the truth is that HTML &amp; JavaScript (or jQuery) aren't the tools for this particular job (sad but true), especially as the diagrams you're drawing increase in complexity.</p>\n\n<p>On the other hand, <strong>Flash</strong> was made for this. Significantly less ActionScript 3.0 code would be required to parse that XML, layout your text (with more control over fonts &amp; super/subscripts) and render the curves (see the <a href=\"http://help.adobe.com/en_US/AS3LCR/Flash_10.0/flash/display/Graphics.html\" rel=\"nofollow\">flash.display.Graphics class</a> methods like <code>curveTo</code>). Overall you'll be looking at less code, better maintainability, fewer hacks, wider compatibility and more stable drawing libraries.</p>\n\n<p>Good luck with the project.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As others have mentioned, Javascript and html are not good tools for this sort of thing.</p>\n\n<p>John Resig wrote <a href=\"http://ejohn.org/blog/processingjs/\" rel=\"nofollow\">an implementation of Processing.org in JavaScript</a>. It uses the canvas element, so it will work in modern versions of Firefox, but it will not work in all browsers. If you only care about Firefox, this would probably be the way to go.</p>\n\n<p>You might be able to use SVG, but again, this is not supported in all browsers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you don't need curved arrows, you could use absolutely positioned divs above or below the list.  You could then use css to style those divs plus a couple of images that make up the arrow head. Below is an example using the icon set from the jQuery UI project (sorry about the long URL).</p>\n\n<p>Here's the CSS to get things started:</p>\n\n<pre><code>&lt;style&gt;\n .below{\n     border-bottom:1px solid #000;\n     border-left:1px solid #000;\n     border-right:1px solid #000;\n }\n .below span{\n    background-position:0px -16px;\n    top:-8px;\n }\n .above{\n     border-top:1px solid #000;\n     border-left:1px solid #000;\n     border-right:1px solid #000;\n }\n .above span{\n    background-position:-64px -16px;\n    bottom:-8px;\n }\n\n .arrow{\n    position:absolute;\n    display:block;\n    background-image:url(http://jquery-ui.googlecode.com/svn/trunk/themes/base/images/ui-icons_454545_256x240.png);\n    width:16px;\n    height:16px;\n    margin:0;\n    padding:0;\n }\n\n.left{left:-8px;}\n\n.right{right:-9px;}\n\n&lt;/style&gt;\n</code></pre>\n\n<p>Now we can start to assemble arrow divs. For instance, to style the arrow from \"requires\" to \"promoter\" in your example above, you could do left,bottom, and right borders on the div with and upward facing arrow graphic in  the top left of the div.  </p>\n\n<pre><code>&lt;div class='below' style=\"position:absolute;top:30px;left:30px;width:100px;height:16px\"&gt;\n   &lt;span class='arrow left'&gt;&lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>The inline styles would be need to be applied by script after you figured out the locations of the things you would need to connect. Let's say that your list looks like this:</p>\n\n<pre><code>&lt;span id=\"promoter\"&gt;Promoter&lt;/span&gt;&lt;span&gt;Something Else&lt;/span&gt;&lt;span id=\"requires\"&gt;Requires&lt;/span&gt;\n</code></pre>\n\n<p>Then the following script will position your arrow:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js\"&gt;&lt;/script&gt; \n&lt;script&gt;\n$(function(){\n var promoterPos=$(\"#promoter\").offset();\n var requiresPos=$(\"#requires\").offset();\n $(\"&lt;div class='below'&gt;&lt;span class='arrow left'&gt;&lt;/span&gt;&lt;/div&gt;\")\n .css({position:\"absolute\",left:promoterPos.left,right:promoterPos.top+$(\"#promoter\").height()})\n .width(requiresPos.left-promoterPos.left)\n .height(16)\n .appendTo(\"body\");\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>Go ahead and paste the examples above into a blank html page.  It's kind of neat.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could get the curved arrow ends using a handful of <code>position:absolute</code> divs with <code>background-image</code> set to transparent GIFs... a set for beginning (top and bottom)... a <code>bacground:repeat</code> div for expandible middle, and another pair for the ends (top and bottom).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This captured my interest for long enough to produce a little test. The code is below, and you can <a href=\"http://www.things.org.uk/examples/arrowtest.html\">see it in action</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/WOrC8.png\" alt=\"screenshot\"></p>\n\n<p>It lists all the spans on the page (might want to restrict that to just those with ids starting with T if that is suitable), and uses the 'ids' attribute to build the list of links. Using a canvas element behind the spans, it draws arc arrows alternately above and below the spans for each source span. </p>\n\n<pre><code>&lt;script type=\"application/x-javascript\"&gt; \n\nfunction generateNodeSet() {\n  var spans = document.getElementsByTagName(\"span\");\n  var retarr = [];\n  for(var i=0;i&lt;spans.length; i++) { \n     retarr[retarr.length] = spans[i].id; \n  } \n  return retarr; \n} \n\nfunction generateLinks(nodeIds) { \n  var retarr = []; \n  for(var i=0; i&lt;nodeIds.length; i++) { \n    var id = nodeIds[i];\n    var span = document.getElementById(id); \n    var atts = span.attributes; \n    var ids_str = false; \n    if((atts.getNamedItem) &amp;&amp; (atts.getNamedItem('ids'))) { \n      ids_str = atts.getNamedItem('ids').value; \n    } \n    if(ids_str) { \n      retarr[id] = ids_str.split(\" \");\n    }\n  } \n  return retarr; \n} \n\n// degrees to radians, because most people think in degrees\nfunction degToRad(angle_degrees) {\n   return angle_degrees/180*Math.PI;\n}\n// draw a horizontal arc\n//   ctx: canvas context;\n//   inax: first x point\n//   inbx: second x point\n//   y: y value of start and end\n//   alpha_degrees: (tangential) angle of start and end\n//   upside: true for arc above y, false for arc below y.\nfunction drawHorizArc(ctx, inax, inbx, y, alpha_degrees, upside)\n{\n  var alpha = degToRad(alpha_degrees);\n  var startangle = (upside ? ((3.0/2.0)*Math.PI + alpha) : ((1.0/2.0)*Math.PI - alpha));\n  var endangle = (upside ? ((3.0/2.0)*Math.PI - alpha) : ((1.0/2.0)*Math.PI + alpha));\n\n  var ax=Math.min(inax,inbx);\n  var bx=Math.max(inax,inbx);\n\n  // tan(alpha) = o/a = ((bx-ax)/2) / o\n  // o = ((bx-ax)/2/tan(alpha))\n  // centre of circle is (bx+ax)/2, y-o\n  var circleyoffset = ((bx-ax)/2)/Math.tan(alpha);\n  var circlex = (ax+bx)/2.0;\n  var circley = y + (upside ? 1 : -1) * circleyoffset;\n  var radius = Math.sqrt(Math.pow(circlex-ax,2) + Math.pow(circley-y,2));\n\n  ctx.beginPath();\n  if(upside) {\n      ctx.moveTo(bx,y);\n    ctx.arc(circlex,circley,radius,startangle,endangle,1);\n  } else {\n    ctx.moveTo(bx,y);\n    ctx.arc(circlex,circley,radius,startangle,endangle,0);\n  }\n  ctx.stroke();\n}\n\n\n// draw the head of an arrow (not the main line)\n//  ctx: canvas context\n//  x,y: coords of arrow point\n//  angle_from_north_clockwise: angle of the line of the arrow from horizontal\n//  upside: true=above the horizontal, false=below\n//  barb_angle: angle between barb and line of the arrow\n//  filled: fill the triangle? (true or false)\nfunction drawArrowHead(ctx, x, y, angle_from_horizontal_degrees, upside, //mandatory\n                       barb_length, barb_angle_degrees, filled) {        //optional\n   (barb_length==undefined) &amp;&amp; (barb_length=13);\n   (barb_angle_degrees==undefined) &amp;&amp; (barb_angle_degrees = 20);\n   (filled==undefined) &amp;&amp; (filled=true);\n   var alpha_degrees = (upside ? -1 : 1) * angle_from_horizontal_degrees; \n\n   //first point is end of one barb\n   var plus = degToRad(alpha_degrees - barb_angle_degrees);\n   a = x + (barb_length * Math.cos(plus));\n   b = y + (barb_length * Math.sin(plus));\n\n   //final point is end of the second barb\n   var minus = degToRad(alpha_degrees + barb_angle_degrees);\n   c = x + (barb_length * Math.cos(minus));\n   d = y + (barb_length * Math.sin(minus));\n\n   ctx.beginPath();\n   ctx.moveTo(a,b);\n   ctx.lineTo(x,y);\n   ctx.lineTo(c,d);\n   if(filled) {\n    ctx.fill();\n   } else {\n    ctx.stroke();\n   }\n   return true;\n}\n\n// draw a horizontal arcing arrow\n//  ctx: canvas context\n//  inax: start x value\n//  inbx: end x value\n//  y: y value\n//  alpha_degrees: angle of ends to horizontal (30=shallow, &gt;90=silly)\nfunction drawHorizArcArrow(ctx, inax, inbx, y,                 //mandatory\n                           alpha_degrees, upside, barb_length) { //optional\n   (alpha_degrees==undefined) &amp;&amp; (alpha_degrees=45);\n   (upside==undefined) &amp;&amp; (upside=true);\n   drawHorizArc(ctx, inax, inbx, y, alpha_degrees, upside);\n   if(inax&gt;inbx) { \n    drawArrowHead(ctx, inbx, y, alpha_degrees*0.9, upside, barb_length); \n   } else { \n    drawArrowHead(ctx, inbx, y, (180-alpha_degrees*0.9), upside, barb_length); \n   }\n   return true;\n}\n\n\nfunction drawArrow(ctx,fromelem,toelem,    //mandatory\n                     above, angle) {        //optional\n  (above==undefined) &amp;&amp; (above = true);\n  (angle==undefined) &amp;&amp; (angle = 45); //degrees \n  midfrom = fromelem.offsetLeft + (fromelem.offsetWidth / 2) - left - tofromseparation/2; \n  midto   =   toelem.offsetLeft + (  toelem.offsetWidth / 2) - left + tofromseparation/2;\n  //var y = above ? (fromelem.offsetTop - top) : (fromelem.offsetTop + fromelem.offsetHeight - top);\n  var y = fromelem.offsetTop + (above ? 0 : fromelem.offsetHeight) - canvasTop;\n  drawHorizArcArrow(ctx, midfrom, midto, y, angle, above);\n}\n\n    var canvasTop = 0;\nfunction draw() { \n  var canvasdiv = document.getElementById(\"canvas\");\n  var spanboxdiv = document.getElementById(\"spanbox\");\n  var ctx = canvasdiv.getContext(\"2d\");\n\n  nodeset = generateNodeSet(); \n  linkset = generateLinks(nodeset);\n  tofromseparation = 20;\n\n  left = canvasdiv.offsetLeft - spanboxdiv.offsetLeft;\n  canvasTop = canvasdiv.offsetTop - spanboxdiv.offsetTop; \n  for(var key in linkset) {  \n    for (var i=0; i&lt;linkset[key].length; i++) {  \n      fromid = key; \n      toid = linkset[key][i]; \n      var above = (i%2==1);\n      drawArrow(ctx,document.getElementById(fromid),document.getElementById(toid),above);\n    } \n  } \n} \n\n&lt;/script&gt; \n</code></pre>\n\n<p>And you just need a call somewhere to the draw() function:</p>\n\n<pre><code>&lt;body onload=\"draw();\"&gt; \n</code></pre>\n\n<p>Then a canvas behind the set of spans.</p>\n\n<pre><code>&lt;canvas style='border:1px solid red' id=\"canvas\" width=\"800\" height=\"7em\"&gt;&lt;/canvas&gt;&lt;br /&gt; \n&lt;div id=\"spanbox\" style='float:left; position:absolute; top:75px; left:50px'&gt;\n&lt;span id=\"T2\"&gt;p50&lt;/span&gt;\n...\n&lt;span id=\"T3\"&gt;p65&lt;/span&gt; \n...\n&lt;span id=\"T34\" ids=\"T2 T3\"&gt;recruitment&lt;/span&gt;\n&lt;/div&gt; \n</code></pre>\n\n<p>Future modifications, as far as I can see: </p>\n\n<ul>\n<li>Flattening the top of longer arrows</li>\n<li>Refactoring to be able to draw non-horizontal arrows: add a new canvas for each?</li>\n<li>Use a better routine to get the total offsets of the canvas and span elements.</li>\n</ul>\n\n<p>[Edit Dec 2011: Fixed, thanks @Palo]</p>\n\n<p>Hope that's as useful as it was fun.</p>\n",
                    "is_accepted": false,
                    "score": 53
                },
                {
                    "body": "<p>I needed a similar solution, and I was looking into <a href=\"http://raphaeljs.com/\" rel=\"nofollow\">RaphaelJS JavaScript Library</a>. For example you can draw a straight arrow from <code>(x1,y1)</code> to <code>(x2,y2)</code> with:</p>\n\n<pre><code>Raphael.fn.arrow = function (x1, y1, x2, y2, size) {\n  var angle = Math.atan2(x1-x2,y2-y1);\n  angle = (angle / (2 * Math.PI)) * 360;\n  var arrowPath = this.path(\u201cM\u201d + x2 + \u201d \u201d + y2 + \u201d L\u201d + (x2 - size) + \u201d \u201d + (y2 - size) + \u201d L\u201d + (x2 - size) + \u201d \u201d + (y2 + size) + \u201d L\u201d + x2 + \u201d \u201d + y2 ).attr(\u201cfill\u201d,\u201dblack\u201d).rotate((90+angle),x2,y2);\n  var linePath = this.path(\u201cM\u201d + x1 + \u201d \u201d + y1 + \u201d L\u201d + x2 + \u201d \u201d + y2);\n  return [linePath,arrowPath];\n}\n</code></pre>\n\n<p>I haven't figure out how to draw a curved arrow, but I'm sure it's possible.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A great library for arrows is <a href=\"http://www.jointjs.com\" rel=\"nofollow\">JointJS</a> that is based on Raphael as shown above. With JointJS you can easily draw arrows with curves or vertices without any complicated stuff ;-)</p>\n\n<pre><code>var j34 = s3.joint(s4, uml.arrow).setVertices([\"170 130\", \"250 120\"]);\n</code></pre>\n\n<p>This defines an arrow 'j34' that connects two js items s3 with s4. Everything else can be read in the documentation of JointJS.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use <a href=\"https://github.com/thSoft/SvgConnectors\" rel=\"nofollow\">this library</a>: just annotate your SVG lines with the ids of the source &amp; target element. It uses <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\" rel=\"nofollow\">MutationObserver</a> to observe changes in the connected elements.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an HTML page with some textual spans marked up something like this</p>\n\n<pre><code>...\n&lt;span id=\"T2\" class=\"Protein\"&gt;p50&lt;/span&gt;\n...\n&lt;span id=\"T3\" class=\"Protein\"&gt;p65&lt;/span&gt;\n...\n&lt;span id=\"T34\" ids=\"T2 T3\" class=\"Positive_regulation\"&gt;recruitment&lt;/span&gt;\n...\n</code></pre>\n\n<p>I.e. each span has an ID and refers to zero or more spans via their IDs.</p>\n\n<p>I would like to visualize these references as arrows, like on this drawing. </p>\n\n<p><img src=\"http://img27.imageshack.us/img27/3769/faspromoterrv4.png\" alt=\"Spans connected by arrows\" /></p>\n\n<p>Two questions:</p>\n\n<ul>\n<li>How can I map an ID of a span to the screen coordinates of the rendering of the span?</li>\n<li>How do I draw arrows going from one rendering to another?</li>\n</ul>\n\n<p>The solution should work in Firefox, working in other browsers is a plus but not really necessary. The solution could use jQuery, or some other lightweight Javascript library.</p>\n",
            "last_activity_date": 1422546887,
            "question_id": 554167,
            "score": 27,
            "tags": [
                "javascript",
                "html",
                "visualization"
            ],
            "title": "Drawing arrows on an HTML page to visualize semantic links between textual spans"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<pre><code>$(this).css('marginBottom').replace('px','')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>parseFloat($(this).css('marginBottom'))\n</code></pre>\n\n<p>Even if marginBottom defined in em, the value inside of parseFloat above will be in px, as it's a calculated CSS property.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>parseInt($(this).css('marginBottom'), 10);\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\"><code>parseInt</code></a> will automatically ignore the units.</p>\n\n<p>For example:</p>\n\n<pre><code>var marginBottom = \"10px\";\nmarginBottom = parseInt(marginBottom, 10);\nalert(marginBottom); // alerts: 10\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 171
                },
                {
                    "body": "<p>Should remove units while preserving decimals.</p>\n\n<pre><code>var regExp = new RegExp(\"[a-z][A-Z]\",\"g\");\nparseFloat($(this).css(\"property\").replace(regExp, \"\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This will clean up all non-digits, non-dots, and not-minus-sign from the string:</p>\n\n<pre><code>$(this).css('marginBottom').replace(/[^-\\d\\.]/g, '');\n</code></pre>\n\n<p>UPDATED for negative values</p>\n",
                    "is_accepted": true,
                    "score": 81
                },
                {
                    "body": "<p><code>parseint</code> will truncate any decimal values (e.g. <code>1.5em</code> gives <code>1</code>).</p>\n\n<p>Try a <code>replace</code> function with regex \ne.g.</p>\n\n<pre><code>$this.css('marginBottom').replace(/([\\d.]+)(px|pt|em|%)/,'$1');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I use a simple jQuery plugin to return the numeric value of any single CSS property.</p>\n\n<p>It applies <code>parseFloat</code> to the value returned by jQuery's default <code>css</code> method.</p>\n\n<p><strong>Plugin Definition:</strong> </p>\n\n<pre><code>$.fn.cssNum = function(){\n  return parseFloat($.fn.css.apply(this,arguments));\n}\n</code></pre>\n\n<p><strong>Usage:</strong></p>\n\n<pre><code>var element = $('.selector-class');\nvar numericWidth = element.cssNum('width') * 10 + 'px';\nelement.css('width', numericWidth);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>With the replace method, your css value is a string, and not a number.</p>\n\n<p>This method is more clean, simple, and returns a number :</p>\n\n<pre><code>parseFloat($(this).css('marginBottom'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 75
                },
                {
                    "body": "<p>Id go for:</p>\n\n<pre><code>Math.abs(parseFloat($(this).css(\"property\")));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The simplest way to get the element width without units is :</p>\n\n<pre><code>target.width()\n</code></pre>\n\n<p>Source : <a href=\"https://api.jquery.com/width/#width2\" rel=\"nofollow\">https://api.jquery.com/width/#width2</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>use</p>\n\n<pre><code>$(this).cssUnit('marginBottom');\n</code></pre>\n\n<p>which return an array.\nfirst index returns margin bottom's value(example <strong>20</strong> for 20px)\nand second index returns margin bottom's unit(example <strong>px</strong> for 20px)</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can implement this very simple <strong>jQuery</strong> plugin:</p>\n\n<p><strong>Plugin Definition:</strong></p>\n\n<pre><code>(function($) {\n    $.fn.cssValue = function(p) {\n        return isNaN(parseFloat(this.css(p))) ? 0 : parseFloat(this.css(p));\n    };\n})(jQuery);\n</code></pre>\n\n<p>It is resistant to <code>NaN</code> values that may occur in old IE version (will return <code>0</code> instead)</p>\n\n<p><strong>Usage:</strong></p>\n\n<pre><code>$(this).cssValue('marginBottom');\n</code></pre>\n\n<p>Enjoy! :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to do a numeric calculation based on CSS properties. However, when I use this to get info:</p>\n\n<pre><code>$(this).css('marginBottom')\n</code></pre>\n\n<p>it returns the value '10px'. Is there a trick to just getting the number part of the value no matter whether it is <code>px</code> or <code>%</code> or <code>em</code> or whatever?</p>\n",
            "last_activity_date": 1424833633,
            "question_id": 1100503,
            "score": 80,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "parsing"
            ],
            "title": "How to get just numeric part of CSS property with jQuery?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>JavaScript supports first class functions. See <em><a href=\"http://www.ibm.com/developerworks/library/wa-javascript.html\">Use functional programming techniques to write elegant JavaScript</a></em>.</p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>Although javascript supports FP to some degree, it does not directly encourage it. That's why projects like <a href=\"http://osteele.com/sources/javascript/functional/\" rel=\"nofollow\">Oliver Steele's Functional</a> exist, to fill in the gaps. So I wouldn't recommend it for learning FP. Check out F# instead.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Javascript is a multi-paradigm language.  If your goal is to learn functional language concepts, try starting with a pure functional language like <a href=\"http://caml.inria.fr/ocaml/\" rel=\"nofollow\">OCaml</a> or <a href=\"http://www.haskell.org/\" rel=\"nofollow\">Haskell</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I would say that although you can quickly grasp some functional programming concepts with JavaScript, using JavaScript consistently like a functional programming language is not a common practice. At least not obviously common. Most people don't post tutorials that pinpoint how to do functional programming with JavaScript -- the one marxidad pointed out is actually a pretty decent example, but you won't find a lot of that. The functional aspects are not often apparent, just like when people use closures in JavaScript, but are unaware that they are doing it.</p>\n\n<p>The idea that you would pass two functions through as arguments to a third function, and then have the return value be some execution related to the first two functions is an advanced technique that almost always appears only in the core of full-blown libraries like jQuery. Self executing anonymous functions and the like have gained ground, but are still not used consistently. The majority of tutorials often focus instead on JavaScript's OO capabilities, like how to create properties and methods, scope, access control and also how to use the prototype property of constructors. Honestly, if functional programming is what you want, then I would choose a language known strictly for this capability.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"http://interglacial.com/hoj/hoj.html\">Higher Order Javascript</a> is a <em>great</em> way to get familiar with the functional aspects of javascript.  It's also a relatively short read in case you want to get your feet wet without diving into a larger book.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Also, <a href=\"http://eloquentjavascript.net/chapter6.html\" rel=\"nofollow\">Eloquent JavaScript: Functional Programming chapter</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I would recommend reading <a href=\"http://rads.stackoverflow.com/amzn/click/0262560992\" rel=\"nofollow\">The Little Schemer</a>, which is a fairly slim book about recursion and is a good introduction to the functional style.  Whilst it's focused on Scheme it can easily be applied to JavaScript, see <a href=\"http://javascript.crockford.com/little.html\" rel=\"nofollow\">http://javascript.crockford.com/little.html</a>.  I found it really helpful in my javascript development, although it gets quite tricky towards the end.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I don't remember who said it, but javascript has been called \"Scheme with Algol syntax\". So for learning Scheme/Lisp, Javascript isn't a bad start. Note though that functional languages like Lisp are quite different from pure functional languages, such as Haskell.</p>\n\n<p>Apart from \"first-class functions\" (Meaning that functions are values, that can be assigned to variables), lexical scope is also an inherent part of what makes a functional language.</p>\n\n<p><a href=\"http://interglacial.com/hoj/hoj.html\">Higher Order Javascript</a> and <a href=\"http://javascript.crockford.com/little.html\">The Little Javascripter</a> has been mentioned already. They are both excellent texts. In addition, <a href=\"http://w3future.com/html/stories/hop.xml\">Higher Order Programming in Javascript</a> may be an easier start.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I am looking get to grips with functional programming concepts.</p>\n\n<p>I've used Javascript for many years for client side scripting in web applications and apart from using prototypes it was all simple DOM manipulation, input validation etc.  </p>\n\n<p>Of late, I have <a href=\"http://eloquentjavascript.net/chapter6.html\">often read</a> that Javascript is one of the languages that supports functional programming.</p>\n\n<p>With my familiarity and experience with Javascript, my preference is to use it to learn functional programming. I expect I would be able to concentrate more on the main functional concepts and not get bogged down or distracted by a completely new syntax.</p>\n\n<p>So in summary, is Javascript a good choice to learn functional programming concepts?  What capabilities in Javascript are relevant/support functional programming?</p>\n",
            "last_activity_date": 1364091260,
            "question_id": 145053,
            "score": 55,
            "tags": [
                "javascript",
                "functional-programming",
                "language-features"
            ],
            "title": "Javascript as a functional language"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I use <a href=\"http://closure-compiler.appspot.com/home\" rel=\"nofollow\">Googles JS Compiler</a> or <a href=\"http://developer.yahoo.com/yui/compressor/\" rel=\"nofollow\">YUI Compressor</a> for both.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There are a wide variety of options. In terms of actual tools, the most common are:</p>\n\n<ol>\n<li><a href=\"http://closure-compiler.appspot.com/home\">Google Closure Compiler Service</a></li>\n<li><a href=\"http://aspnet.codeplex.com/releases/view/40584\">Microsoft AJAX Minifier</a></li>\n<li><a href=\"https://github.com/yui/ycssmin\">Yahoo's CSS Minifier</a> (also <a href=\"http://yuicompressor.codeplex.com/\">YuiCompressor.NET</a>)</li>\n</ol>\n\n<p>and likely many more, but I have used each of these tools, and all are great to work with. </p>\n\n<p>If you are working with a .NET application library, there are also various other options that extend these base tools, to combine like resources and reduce overall HTTP requests. </p>\n\n<ol>\n<li><a href=\"http://combres.codeplex.com/\">Combres</a></li>\n<li><a href=\"http://xpedite.codeplex.com/\">Xpedite</a></li>\n<li><a href=\"http://www.codethinked.com/post/2010/05/26/SquishIt-The-Friendly-ASPNET-JavaScript-and-CSS-Squisher.aspx\">SquishIt</a> </li>\n</ol>\n\n<p>Again, also likely many more...</p>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>I like to use Google's Closure Compiler (<a href=\"http://closure-compiler.appspot.com/home\">http://closure-compiler.appspot.com/home</a>) for minification (best of class) followed by a code obfuscator (<a href=\"http://www.daftlogic.com/projects-online-javascript-obfuscator.htm\">http://www.daftlogic.com/projects-online-javascript-obfuscator.htm</a>) for source protection.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I don't bother with minizers at all. Instead, I statically generate a gzipped version of all text files and let content-negotiation and caching handle the rest.</p>\n\n<p>Also, Javascript-obfuscation is mostly pointless - I can think of few valid reasons to do so...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For CSS I personaly use <a href=\"http://cleancss.com/\" rel=\"nofollow\">CleanCSS</a>, at the moment best solution for me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking for a good and reliable JS and CSS minimizer. Preferably one that refactors my javascript variables to something more obscure and something it's easy to use.</p>\n\n<p>Which ones do you use?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1376554787,
            "question_id": 4843871,
            "score": 40,
            "tags": [
                "javascript",
                "css",
                "minimize"
            ],
            "title": "JavaScript and CSS minimizer"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Yes, that's what the <code>set</code> object is for:</p>\n\n<pre><code>var myWords = r.set();\nmyWords.push(\n    r.text(190, 100, \"Hello\"),\n    r.text(480,100, \"Good Bye\"\n);\n\n// now you can treat the set as a single object:\nmyWords.rotate(90);\n</code></pre>\n\n<hr>\n\n<p><em>Additional answer:</em></p>\n\n<p>OK, I see that you've tried using set but you are using it wrong. A set creates a group of things. Just like if you were to group shapes and text in Adobe Illustrator or Inkscape or Microsoft Word or Open Office. If I understand you correctly what you want is this:</p>\n\n<pre><code>shapes = [  r.set(r.text (190, 100, \"node1\"), r.ellipse(190, 100, 30, 20)),\n            r.set(r.text (290, 80, \"Center\"), r.rect(290, 80, 60, 40, 10)),\n            r.set(r.text (290, 180, \"node2\"), r.rect(290, 180, 60, 40, 2)),\n            r.set(r.text (450, 100, \"node3\"), r.ellipse(450, 100, 20, 20))\n         ];\n</code></pre>\n\n<p>You'll also have to modify your dragger and move functions since the shapes are no longer of type 'rect' but are of type 'set':</p>\n\n<pre><code>var dragger = function () {\n    this.ox = this.attr(\"x\");\n    this.oy = this.attr(\"y\");\n    this.animate({\"fill-opacity\": .2}, 500);\n};\nvar move = function (dx, dy) {\n    var att = {x: this.ox + dx, y: this.oy + dy};\n    this.attr(att);\n    for (var i = connections.length; i--;) {\n        r.connection(connections[i]);\n    }\n    r.safari();\n};\n</code></pre>\n\n<p>All sets have <code>x</code> and <code>y</code> attributes.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><em>Did major edit to associate elements in a more elegant way.</em></p>\n\n<hr>\n\n<p><strong><a href=\"http://raphaeljs.com/reference.html#set\">Sets</a></strong> are good for grouping Raphael objects, but sets do not create their own elements, so you cannot drag and drop a set, since when you click on the canvas you either select the shape or the text, but never the set (since there is no set element).</p>\n\n<p><strong><a href=\"http://jsfiddle.net/v2ahW/\">Here is a simple jsFiddle showing the properties of a set.</a></strong> Note that a set has no <code>x</code> or <code>y</code> properties.</p>\n\n<p>From the <strong><a href=\"http://raphaeljs.com/reference.html\">Raphael documentation</a></strong>:  </p>\n\n<blockquote>\n  <p>[A set c]reates array-like object to keep and operate couple of elements at once. <strong>Warning: it doesn\u2019t create any elements for itself in the page.</strong></p>\n</blockquote>\n\n<p><br/></p>\n\n<p>The simple work around is to make both the text and shape separately draggable. Then move the associated text along with the shape... and the associated shape along with the text.</p>\n\n<p>Associating objects like this is simple... create a property. In this case each shape and each text has a property called <code>.pair</code> which is a reference to the associated element.</p>\n\n<p>Here's how it's done:</p>\n\n<pre><code>var i, ii, tempS, tempT\n     shapes = [  ... ],\n     texts = [  ... ];\nfor (i = 0, ii = shapes.length; i &lt; ii; i++) {\n    tempS = shapes[i].attr( ... );\n    tempT = texts[i].attr( ...);\n\n      // Make all the shapes and texts dragable\n    shapes[i].drag(move, dragger, up);\n    texts[i].drag(move, dragger, up);\n\n      // Associate the elements\n    tempS.pair = tempT;\n    tempT.pair = tempS;\n}\n</code></pre>\n\n<p>And then in the drag and drop code, which is the <code>move()</code>, <code>dragger()</code>, and <code>up()</code> functions you have to make sure to deal with both the clicked on element and its associated element.</p>\n\n<p>For example here is the pertinent part of the <code>move()</code> function. Note that <code>text</code> can be dealt with in the same way as <code>rectangle</code> (by changing attributes <code>x</code> and <code>y</code>), so the <code>false</code> condition in each of the Javascript conditional operators below handles both the case for <code>rectangle</code> and for <code>text</code></p>\n\n<pre><code>move = function (dx, dy) {\n\n      // Move main element\n    var att = this.type == \"ellipse\" ? \n                           {cx: this.ox + dx, cy: this.oy + dy} : \n                           {x: this.ox + dx, y: this.oy + dy};\n    this.attr(att);\n\n      // Move paired element\n    att = this.pair.type == \"ellipse\" ? \n                            {cx: this.pair.ox + dx, cy: this.pair.oy + dy} : \n                            {x: this.pair.ox + dx, y: this.pair.oy + dy};\n    this.pair.attr(att);\n    ...\n}\n</code></pre>\n\n<p><br/></p>\n\n<p>And below is the full working code:</p>\n\n<h2><strong><a href=\"http://jsfiddle.net/CHUrB/\">Working jsFiddle example of draggable text and shapes</a></strong></h2>\n\n<pre><code>Raphael.fn.connection = function (obj1, obj2, line, bg) {\n    if (obj1.line &amp;&amp; obj1.from &amp;&amp; obj1.to) {\n        line = obj1;\n        obj1 = line.from;\n        obj2 = line.to;\n    }\n    var bb1 = obj1.getBBox(),\n        bb2 = obj2.getBBox(),\n        p = [{x: bb1.x + bb1.width / 2, y: bb1.y - 1},\n        {x: bb1.x + bb1.width / 2, y: bb1.y + bb1.height + 1},\n        {x: bb1.x - 1, y: bb1.y + bb1.height / 2},\n        {x: bb1.x + bb1.width + 1, y: bb1.y + bb1.height / 2},\n        {x: bb2.x + bb2.width / 2, y: bb2.y - 1},\n        {x: bb2.x + bb2.width / 2, y: bb2.y + bb2.height + 1},\n        {x: bb2.x - 1, y: bb2.y + bb2.height / 2},\n        {x: bb2.x + bb2.width + 1, y: bb2.y + bb2.height / 2}],\n        d = {}, dis = [];\n    for (var i = 0; i &lt; 4; i++) {\n        for (var j = 4; j &lt; 8; j++) {\n            var dx = Math.abs(p[i].x - p[j].x),\n                dy = Math.abs(p[i].y - p[j].y);\n            if ((i == j - 4) || (((i != 3 &amp;&amp; j != 6) || p[i].x &lt; p[j].x) &amp;&amp; ((i != 2 &amp;&amp; j != 7) || p[i].x &gt; p[j].x) &amp;&amp; ((i != 0 &amp;&amp; j != 5) || p[i].y &gt; p[j].y) &amp;&amp; ((i != 1 &amp;&amp; j != 4) || p[i].y &lt; p[j].y))) {\n                dis.push(dx + dy);\n                d[dis[dis.length - 1]] = [i, j];\n            }\n        }\n    }\n    if (dis.length == 0) {\n        var res = [0, 4];\n    } else {\n        res = d[Math.min.apply(Math, dis)];\n    }\n    var x1 = p[res[0]].x,\n        y1 = p[res[0]].y,\n        x4 = p[res[1]].x,\n        y4 = p[res[1]].y;\n    dx = Math.max(Math.abs(x1 - x4) / 2, 10);\n    dy = Math.max(Math.abs(y1 - y4) / 2, 10);\n    var x2 = [x1, x1, x1 - dx, x1 + dx][res[0]].toFixed(3),\n        y2 = [y1 - dy, y1 + dy, y1, y1][res[0]].toFixed(3),\n        x3 = [0, 0, 0, 0, x4, x4, x4 - dx, x4 + dx][res[1]].toFixed(3),\n        y3 = [0, 0, 0, 0, y1 + dy, y1 - dy, y4, y4][res[1]].toFixed(3);\n    var path = [\"M\", x1.toFixed(3), y1.toFixed(3), \"C\", x2, y2, x3, y3, x4.toFixed(3), y4.toFixed(3)].join(\",\");\n    if (line &amp;&amp; line.line) {\n        line.bg &amp;&amp; line.bg.attr({path: path});\n        line.line.attr({path: path});\n    } else {\n        var color = typeof line == \"string\" ? line : \"#000\";\n        return {\n            bg: bg &amp;&amp; bg.split &amp;&amp; this.path(path).attr({stroke: bg.split(\"|\")[0], fill: \"none\", \"stroke-width\": bg.split(\"|\")[1] || 3}),\n            line: this.path(path).attr({stroke: color, fill: \"none\"}),\n            from: obj1,\n            to: obj2\n        };\n    }\n};\n\nvar el;\nwindow.onload = function () {\n    var color, i, ii, tempS, tempT,\n        dragger = function () {\n                // Original coords for main element\n            this.ox = this.type == \"ellipse\" ? this.attr(\"cx\") : this.attr(\"x\");\n            this.oy = this.type == \"ellipse\" ? this.attr(\"cy\") : this.attr(\"y\");\n            if (this.type != \"text\") this.animate({\"fill-opacity\": .2}, 500);\n\n                // Original coords for pair element\n            this.pair.ox = this.pair.type == \"ellipse\" ? this.pair.attr(\"cx\") : this.pair.attr(\"x\");\n            this.pair.oy = this.pair.type == \"ellipse\" ? this.pair.attr(\"cy\") : this.pair.attr(\"y\");\n            if (this.pair.type != \"text\") this.pair.animate({\"fill-opacity\": .2}, 500);            \n        },\n        move = function (dx, dy) {\n                // Move main element\n            var att = this.type == \"ellipse\" ? {cx: this.ox + dx, cy: this.oy + dy} : \n                                               {x: this.ox + dx, y: this.oy + dy};\n            this.attr(att);\n\n                // Move paired element\n            att = this.pair.type == \"ellipse\" ? {cx: this.pair.ox + dx, cy: this.pair.oy + dy} : \n                                               {x: this.pair.ox + dx, y: this.pair.oy + dy};\n            this.pair.attr(att);            \n\n                // Move connections\n            for (i = connections.length; i--;) {\n                r.connection(connections[i]);\n            }\n            r.safari();\n        },\n        up = function () {\n                // Fade original element on mouse up\n            if (this.type != \"text\") this.animate({\"fill-opacity\": 0}, 500);\n\n                // Fade paired element on mouse up\n            if (this.pair.type != \"text\") this.pair.animate({\"fill-opacity\": 0}, 500);            \n        },\n        r = Raphael(\"holder\", 640, 480),\n        connections = [],\n        shapes = [  r.ellipse(190, 100, 30, 20),\n                    r.rect(290, 80, 60, 40, 10),\n                    r.rect(290, 180, 60, 40, 2),\n                    r.ellipse(450, 100, 20, 20)\n                ],\n        texts = [   r.text(190, 100, \"One\"),\n                    r.text(320, 100, \"Two\"),\n                    r.text(320, 200, \"Three\"),\n                    r.text(450, 100, \"Four\")\n                ];\n    for (i = 0, ii = shapes.length; i &lt; ii; i++) {\n        color = Raphael.getColor();\n        tempS = shapes[i].attr({fill: color, stroke: color, \"fill-opacity\": 0, \"stroke-width\": 2, cursor: \"move\"});\n        tempT = texts[i].attr({fill: color, stroke: \"none\", \"font-size\": 15, cursor: \"move\"});\n        shapes[i].drag(move, dragger, up);\n        texts[i].drag(move, dragger, up);\n\n        // Associate the elements\n        tempS.pair = tempT;\n        tempT.pair = tempS;\n    }\n    connections.push(r.connection(shapes[0], shapes[1], \"#fff\"));\n    connections.push(r.connection(shapes[1], shapes[2], \"#fff\", \"#fff|5\"));\n    connections.push(r.connection(shapes[1], shapes[3], \"#000\", \"#fff\"));\n};\u200b\n</code></pre>\n\n<hr>\n\n<p>For completeness here is the code for <strong><a href=\"http://jsfiddle.net/v2ahW/\">the linked to jsFiddle for showing the properties of a set</a></strong>:</p>\n\n<pre><code>window.onload = function () {\n    var paper = Raphael(\"canvas\", 320, 200),\n        st = paper.set(), \n        propArr = [];\n\n    st.push(\n        paper.circle(10, 10, 5),\n        paper.circle(30, 10, 5)\n    );\n\n    st.attr({fill: \"red\"});\n\n    for(var prop in st) {\n        if (st.hasOwnProperty(prop)) {\n            // handle prop as required\n            propArr.push(prop + \" : \" + st[prop]);\n        }\n    }\n    alert(propArr.join(\"\\n\"));\n};\u200b\n\n// Output:\n// 0 : Raphael's object\n// 1 : Raphael's object\n// items : Raphael's object,Raphael's object\n// length : 2\n// type : set\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>Wouldn't it be easier just to change the attributes of the paired object along with the attributes which are changing when the main object is dragged?</p>\n\n<p>Something like this:</p>\n\n<pre><code>window.onload = function () {\n        var R = Raphael(\"holder\"),\n            circ = R.circle(100, 100, 50).attr({ \"fill\": \"#d9d9d9\", \"stroke-width\": 1 }),\n        circ2 = R.circle(50, 50, 5),\n            start = function () {\n                this.ox = this.attr(\"cx\"); //ox = original x value\n                this.oy = this.attr(\"cy\");\n                this.animate({ \"opacity\": .5, \"stroke-width\": 15 }, 200);\n            },\n            move = function (dx, dy) {  //dx - delta x - diiference in movement between point a and b\n                var cdx = circ2.attr(\"cx\") - this.attr(\"cx\"),\n                    cdy = circ2.attr(\"cy\") - this.attr(\"cy\");\n                this.attr({ \"cx\": this.ox + dx, \"cy\": this.oy + dy });\n                group(this,circ2,cdx,cdy);\n                R.safari();\n            },\n            up = function () {\n                this.animate({ \"opacity\": 1, \"stroke-width\": 1 }, 200);\n            },\n            group = function (refObj,thisObj, dx, dy) {                    \n                thisObj.attr({ \"cx\": refObj.attr(\"cx\") + dx, \"cy\": refObj.attr(\"cy\") + dy });\n            };\n\n            circ.drag(move, start, up);\n\n\n\n\n    };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Or, try this \"group\" plugin for Raphael which lets you create a proper SVG  group element.</p>\n\n<p><a href=\"https://github.com/rhyolight/Raphael-Plugins/blob/master/raphael.group.js\">https://github.com/rhyolight/Raphael-Plugins/blob/master/raphael.group.js</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Sorry for a long question but here goes.  I am trying to modify the drag shapes around demo here:</p>\n\n<p><a href=\"http://raphaeljs.com/graffle.html\">http://raphaeljs.com/graffle.html</a></p>\n\n<p>The demo works fine.  What I want to do is put words inside the shapes and move the shape and text around as a composite single object.</p>\n\n<p>Here is the code for creating the objects:</p>\n\n<pre><code>window.onload = function () {\n    var dragger = function () {\n        this.ox = this.type == \"rect\" ? this.attr(\"x\") : this.attr(\"cx\");\n        this.oy = this.type == \"rect\" ? this.attr(\"y\") : this.attr(\"cy\");\n        this.animate({\"fill-opacity\": .2}, 500);\n    },\n        move = function (dx, dy) {\n            var att = this.type == \"rect\" ? {x: this.ox + dx, y: this.oy + dy} : {cx: this.ox + dx, cy: this.oy + dy};\n            this.attr(att);\n            for (var i = connections.length; i--;) {\n                r.connection(connections[i]);\n            }\n            r.safari();\n        },\n        up = function () {\n            this.animate({\"fill-opacity\": 0}, 500);\n        },\n        r = Raphael(\"holder\", 640, 480),\n        connections = [],\n        shapes = [  r.ellipse(190, 100, 30, 20),\n                    r.rect(290, 80, 60, 40, 10),\n                    r.rect(290, 180, 60, 40, 2),\n                    r.ellipse(450, 100, 20, 20)\n                ];\n    for (var i = 0, ii = shapes.length; i &lt; ii; i++) {\n        var color = Raphael.getColor();\n        shapes[i].attr({fill: color, stroke: color, \"fill-opacity\": 0, \"stroke-width\": 2, cursor: \"move\"});\n        shapes[i].drag(move, dragger, up);\n    }\n    connections.push(r.connection(shapes[0], shapes[1], \"#fff\"));\n    connections.push(r.connection(shapes[1], shapes[2], \"#fff\", \"#fff|5\"));\n    connections.push(r.connection(shapes[1], shapes[3], \"#000\", \"#fff\"));\n};\n</code></pre>\n\n<p>I tried something like this:</p>\n\n<pre><code> myWords = [ r.text(190, 100,  \"Hello\"),\n      r.text(480,100, \"Good Bye\")\n    ];\n</code></pre>\n\n<p>and made adjustments elsewhere so that it would work, but then it just moves text and shapes but the shape and text are never seen as a whole.  I can move the text separate from the shape and vice versa.  I need them to be one object. so they move together. How can I do that?  Thank you for any help.</p>\n\n<p>EDIT:</p>\n\n<p>I tried this:</p>\n\n<pre><code>  st.push(r.text (190, 100, \"node1\"), r.ellipse(190, 100, 30, 20)),\n  st.push(r.text (290, 80, \"Center\"), r.rect(290, 80, 60, 40, 10)),\n  st.push(r.text (290, 180, \"node2\"), r.rect(290, 180, 60, 40, 2)),\n  st.push(r.text (450, 100, \"node3\"), r.ellipse(450, 100, 20, 20))\n</code></pre>\n\n<p>But the text and shape did not stay together when I moved the shape.  The text just stayed still.</p>\n\n<p>EDIT:  I cannot get the stock demo at <a href=\"http://raphaeljs.com/graffle.html\">http://raphaeljs.com/graffle.html</a> to work with Chrome.  IE it works.</p>\n",
            "last_activity_date": 1370542654,
            "question_id": 3679436,
            "score": 39,
            "tags": [
                "javascript",
                "raphael"
            ],
            "title": "How can I combine objects in the Raphael javascript library?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>var a=new Array('a','b','c');\nvar b=new Array('d','e','f');\nvar d=new Array('x','y','z');\nvar c=a.concat(b,d)\n</code></pre>\n\n<p>Does that solve your problem ?</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Use the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/concat\">concat</a> function, like so:</p>\n\n<pre><code>var arrayA = [1, 2];\nvar arrayB = [3, 4];\nvar newArray = arrayA.concat(arrayB);\n</code></pre>\n\n<p>The value of <code>newArray</code> will be <code>[1, 2, 3, 4]</code> (<code>arrayA</code> and <code>arrayB</code> remain unchanged; <code>concat</code> creates and returns a new array for the result).</p>\n",
                    "is_accepted": true,
                    "score": 189
                },
                {
                    "body": "<p>Provided your arrays are not huge (see caveat below), you can use the <code>push()</code> method of the array to which you wish to append values. <code>push()</code> can take multiple parameters so you can use its <code>apply()</code> method to pass the array of values to be pushed as a list of function parameters. This has the advantage over using <code>concat()</code> of adding elements to the array in place rather than creating a new array.</p>\n\n<p>However, it seems that for large arrays (of the order of 100,000 members or more), <strong>this trick can fail</strong>. For such arrays, using a loop is a better approach. See <a href=\"http://stackoverflow.com/a/17368101/96100\">http://stackoverflow.com/a/17368101/96100</a> for details.</p>\n\n<pre><code>var newArray = [];\nnewArray.push.apply(newArray, dataArray1);\nnewArray.push.apply(newArray, dataArray2);\n</code></pre>\n\n<p>You might want to generalize this into a function:</p>\n\n<pre><code>function pushArray(arr, arr2) {\n    arr.push.apply(arr, arr2);\n}\n</code></pre>\n\n<p>... or add it to <code>Array</code>'s prototype:</p>\n\n<pre><code>Array.prototype.pushArray = function(arr) {\n    this.push.apply(this, arr);\n};\n\nvar newArray = [];\nnewArray.pushArray(dataArray1);\nnewArray.pushArray(dataArray2);\n</code></pre>\n\n<p>... or emulate the original <code>push()</code> method by allowing multiple parameters using the fact that <code>concat()</code>, like <code>push()</code>, allows multiple parameters:</p>\n\n<pre><code>Array.prototype.pushArray = function() {\n    this.push.apply(this, this.concat.apply([], arguments));\n};\n\nvar newArray = [];\nnewArray.pushArray(dataArray1, dataArray2);\n</code></pre>\n\n<p>Here's a loop-based version of the last example, suitable for large arrays and all major browsers, including IE &lt;= 8:</p>\n\n<pre><code>Array.prototype.pushArray = function() {\n    var toPush = this.concat.apply([], arguments);\n    for (var i = 0, len = toPush.length; i &lt; len; ++i) {\n        this.push(toPush[i]);\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 265
                },
                {
                    "body": "<p>instead of push() function use concat function for IE. example,</p>\n\n<pre><code>var a=a.concat(a,new Array('amin'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>\u0422his is a working code and it works fine:</p>\n\n<pre><code>var els = document.getElementsByTagName('input'), i;\nvar invnum = new Array();\nvar k = els.length;\nfor(i = 0; i &lt; k; i++){invnum.push(new Array(els[i].id,els[i].value))}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I have a javascript array <code>dataArray</code> which I want to push into a new array <code>newArray</code>.  Except I don't want <code>newArray[0]</code> to be <code>dataArray</code>. I want to push in all the values into the new array:</p>\n\n<pre><code>var newArray = [];\n\nnewArray.pushValues(dataArray1);\nnewArray.pushValues(dataArray2);\n// ...\n</code></pre>\n\n<p>or even better:</p>\n\n<pre><code>var newArray = new Array (\n   dataArray1.values(),\n   dataArray2.values(),\n   // ... where values() (or something equivalent) would push the individual values into the array, rather than the array itself\n);\n</code></pre>\n\n<p>So now the new array contains all the values of the individual data arrays.  Is there some shorthand like <code>pushValues</code> available so I don't have to iterate over each individual dataArray, adding the values 1 by 1?</p>\n",
            "last_activity_date": 1418387475,
            "question_id": 4156101,
            "score": 167,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "Javascript push array values into another array"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I wanted to post this as a comment to your question, but apparently StackOverflow won't let me.</p>\n\n<p>I just ran a rudimentary test of 100,000 iterations in Chrome using the UUID algorithm you posted and got no collisions. Here's a code snippet:</p>\n\n<pre><code>var createGUID = function() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&amp;0x3|0x8);\n        return v.toString(16);\n    });\n}\n\nvar testGUIDs = function(upperlimit) {\n    alert('Doing collision test on ' + upperlimit + ' GUID creations.');\n    var i=0, guids=[];\n    while (i++&lt;upperlimit) {\n        var guid=createGUID();\n        if (guids.indexOf(guid)!=-1) {\n            alert('Collision with ' + guid + ' after ' + i + ' iterations');\n        }\n        guids.push(guid);\n    }\n    alert(guids.length + ' iterations completed.');\n}\n\ntestGUIDs(100000);\n</code></pre>\n\n<p>Are you sure there isn't something else going on here?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Indeed there are collisions but only under Google Chrome. Check out my experience on the topic here </p>\n\n<p><a href=\"http://devoluk.com/google-chrome-math-random-issue.html\">http://devoluk.com/google-chrome-math-random-issue.html</a></p>\n\n<p>Seems like collisions only happen on the first few calls of Math.random. Cause if you just run the createGUID / testGUIDs method above (which obviously was the first thing I tried) it just works with no collisions whatsoever.</p>\n\n<p>So to make a full test one needs to restart Google Chrome, generate 32 byte, restart Chrome, generate, restart, generate...</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>my best guess is that Math.random() is broken on your system for some reason (bizarre as that sounds.)  This is the first report I've seen of anyone getting collisions.</p>\n\n<p>node-uuid has a <a href=\"https://github.com/broofa/node-uuid\">test harness</a> that you can use to test the distribution of hex digits in that code.  If that looks okay then it's not Math.random(), so then try substituting the UUID implementation you're using into the uuid() method there and see if you still get good results.</p>\n\n<p>[Update: Just saw Veselin's report about the bug with Math.random() at startup.  Since the problem is only at startup, the node-uuid test is unlikely to be useful. I'll comment in more detail on the devoluk.com link.]</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>I too was struggling with generating guaranteed globally unique identifiers that were not subject to collisions. I ended up writing a javascript plugin that supposedly guarantees uniqueness.</p>\n\n<p>Feel free to try it out: <a href=\"https://github.com/mongoh/tuid\" rel=\"nofollow\">https://github.com/mongoh/tuid</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just so that other folks can be aware of this - I was running into a surprisingly large number of apparent collisions using the UUID generation technique mentioned here. These collisions continued even after I switched to <a href=\"https://github.com/davidbau/seedrandom\" rel=\"nofollow\">seedrandom</a> for my random number generator. That had me tearing my hair out, as you can imagine.</p>\n\n<p>I eventually figured out that the problem was almost exclusively associated with Google's web crawler bots. As soon as I started ignoring requests with \"googlebot\" in the user-agent field, the collisions disappeared.</p>\n\n<p>Just an FYI.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>This relates to <a href=\"http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\">this question</a>. I am using <a href=\"http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\">this answer</a> to generate UUID in JavaScript:</p>\n\n<pre><code>'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random()*16|0, v = c == 'x' ? r : (r&amp;0x3|0x8);\n    return v.toString(16);\n});\n</code></pre>\n\n<p>This solution appeared to be working fine, however i am getting collisions. Here's what i have:</p>\n\n<ul>\n<li>A web-app running in Google Chrome.</li>\n<li>16 users.</li>\n<li>about 4000 UUIDs have been generated in the past 2 months by these users.</li>\n<li>i got about 20 collisions - e.g. new UUID genereated today was the same as about 2 months ago (different user).</li>\n</ul>\n\n<p>So the <strong>questions</strong> are:</p>\n\n<ol>\n<li>What's causing the issue?</li>\n<li>How can i avoid it?</li>\n</ol>\n",
            "last_activity_date": 1402778272,
            "question_id": 6906916,
            "score": 64,
            "tags": [
                "javascript",
                "random",
                "uuid",
                "collision"
            ],
            "title": "Collisions when generating UUIDs in JavaScript?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.mozilla.org/js/spidermonkey/\">Mozilla's SpiderMonkey</a> is fairly easy and well-documented.  It's a C API, but it's straightforward to wrap it in C++.  It can be compiled to be thread-safe, which is useful for games since you'd likely want to have your main logic in one thread and user interface logic in a second thread.</p>\n\n<p><a href=\"http://code.google.com/p/v8/\">Google's V8</a> might be a good choice, since you're using C++, but I have no experience with it yet.  According to <a href=\"http://code.google.com/p/v8/source/browse/trunk/include/v8.h\">the documentation</a> (thanks to <a href=\"http://stackoverflow.com/questions/93692/which-javascript-engine-would-you-embed-in-an-application#97195\">Daniel James</a>), V8 is not thread-safe, although this may change in the future.</p>\n\n<p>There's also <a href=\"http://trac.webkit.org/wiki/SquirrelFish\">WebKit's SquirrelFish</a>, but I couldn't find a standalone version of that when I was looking earlier.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>I'd wait for TraceMonkey, the next evolution of SpiderMonkey to come out. Faster and better designed.  ( Uses code donated from Adobe Flash ). </p>\n\n<p>Tracemonkey prides itself in making repetitious actions much faster by aggressively optimizing the structure at runtime based on actual usage, which aught to be handy for game-augmentation. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You may also want to look at <a href=\"http://code.google.com/p/v8/\" rel=\"nofollow\">V8</a> from Google. It's pretty new, though.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Is Java Script really the right language for your game?\nMany of games out there are using the <a href=\"http://www.lua.org/\" rel=\"nofollow\">Lua</a> programming language for scripting. It's easy to integrate, it's very small, it compiles on almost every platform and it's easy to learn.</p>\n\n<p>This somewhat off topic, but thinking outside the box can be important to get things right .</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I believe that v8 only works on x86, x64 and arm processors at the moment. Which might be a disadvantage.</p>\n\n<p>With regards to thread safety, from <a href=\"http://code.google.com/p/v8/source/browse/trunk/include/v8.h\" rel=\"nofollow\">include/v8.h</a>:</p>\n\n<pre><code> * Multiple threads in V8 are allowed, but only one thread at a time\n * is allowed to use V8.  The definition of 'using V8' includes\n * accessing handles or holding onto object pointers obtained from V8\n * handles.  It is up to the user of V8 to ensure (perhaps with\n * locking) that this constraint is not violated.\n</code></pre>\n\n<p>You can read more in the source file (it looks like doxygen documentation, but they don't seem to have put it up anywhere).</p>\n\n<p><strong>Update:</strong> That comment has been removed, probably some time ago. It looks like v8 now has an <code>Isolate</code> object which represents an instance of the engine. A single <code>Isolate</code> instance can only be used in a single thread at a time, but other <code>Isolate</code> instances can be used in other threads at the same time.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I would keep an eye on v8 as it is screaming fast javascript engine, and i'm sure it will develop cross-platform support as it grows to maturity.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The <a href=\"http://news.cnet.com/8301-1001_3-10030888-92.html\">benchmark</a> that came out when V8 first hit the scene that showed V8 being 1000% (or whatever) faster than other engines was heavily weighted towards favoring engines that were good at recursion. If your code uses a lot of recursion, then V8 might give you a significant advantage, speed-wise. For \"real world\" (currently, at least) web stuff, SquirrelFish Extreme seems to be the hands down winner at the moment (see <a href=\"http://andrew.hedges.name/blog/2008/09/11/v8-neither-all-that-nor-a-bag-of-chips\">my blog post on the topic</a> for the results of my own, informal testing).</p>\n\n<p>As others have pointed out, ease of integration and quality of documentation might prevail over pure speed. It don't mean jack if you don't ship!</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I've tried both SpiderMonkey and V8. With SpiderMonkey, I couldn't get anything to work. I couldn't even get the examples on mozilla.org to compile.  </p>\n\n<p>V8 worked out-of-the-box and I got some basic C++ &lt;-> Javascript interaction going pretty quickly. There are some google lists for people using V8, and I found most of my questions answered there already.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Try Javascript .NET:</p>\n\n<p><a href=\"http://javascriptdotnet.codeplex.com/\" rel=\"nofollow\">http://javascriptdotnet.codeplex.com/</a></p>\n\n<p>It implements Google V8. You can compile and run Javascript directly from .NET code with it, and supply CLI objects to be used by the Javascript code as well. And V8 is probably the best engine ever created in terms of performance, it generates native code from Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>When speaking of a scripting engine and c++ you could also consider <a href=\"http://www.chaiscript.com\" rel=\"nofollow\">chaiscript</a>. It is close to ecma script (~Javascript) and very easy to embed in c++.</p>\n\n<p>Seller from the webpage:</p>\n\n<blockquote>\n  <p>... ChaiScript, on the other hand, was designed from the ground up\n  with integration with C++ in mind.\n  ...\n  ChaiScript has no meta-compiler, no library dependencies, no build\n  system requirements and no legacy baggage of any kind. At can work\n  seamlessly with any C++ functions you expose to it. It does not have\n  to be told explicitly about any type, it is function centric.</p>\n  \n  <p>With ChaiScript you can literally begin scripting your application by\n  adding three lines of code to your program and not modifying your\n  build steps at all.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I want to embed Javascript in a hobby game engine of mine. Now that we have the 5th generation of Javascript engines out (all blazing fast) I'm curious what engine would you choose to embed in a C++ framework (that includes actual ease of embeding it)? </p>\n\n<p><sup><em>Note: Just to make it clear, I'm not interested in DOM scripting or writing Javascript in a browser.</em></sup></p>\n\n<p>Here's a compilation of links so far and some tips from the thread</p>\n\n<ul>\n<li><a href=\"http://www.mozilla.org/js/spidermonkey/\">SpiderMonkey</a></li>\n<li><a href=\"http://wiki.mozilla.org/JavaScript%3aTraceMonkey\">tracemonkey</a> (note:backwards compatible with spidermonkey):</li>\n<li><a href=\"http://code.google.com/p/v8/\">V8</a></li>\n<li><a href=\"http://trac.webkit.org/wiki/SquirrelFish\">Squirrelfish</a></li>\n</ul>\n\n<p>Just for the record, I love Lua and have already embedded it in game engines about 5 times at work.</p>\n\n<p>However now this is a hobby project, and I think that Javascript being known by most web developers and because its ECMA, Flash and Flex developers, a game engine that uses Javascript and XML for scripting would be more user-friendly and cater to a larger user base (and one that so far has not had a chance to use their skills for games) than one with Lua (and there are plenty of those around!).</p>\n\n<p>Also for the record I'll go with V8 on this one, mostly because I like it's C++ style.</p>\n",
            "last_activity_date": 1422823756,
            "question_id": 93692,
            "score": 47,
            "tags": [
                "javascript",
                "c++",
                "embed"
            ],
            "title": "Which Javascript engine would you embed in your application?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Try something like</p>\n\n<pre><code>$('div.toggle').hide();\n  $('ul.product-info li a').click(function(event){\n    event.preventDefault();\n    $(this).next('div').slideToggle(200);\n  }             \n);\n</code></pre>\n\n<p>Here is the page about that in the jQuery documentation:</p>\n\n<p><a href=\"http://learn.jquery.com/events/event-basics/#preventdefault\" rel=\"nofollow\">http://learn.jquery.com/events/event-basics/#preventdefault</a></p>\n",
                    "is_accepted": true,
                    "score": 94
                },
                {
                    "body": "<p>Alternatively, you could just return false from the click event: </p>\n\n<pre><code> $('div.toggle').hide();\n $('ul.product-info li a').click(function(event){\n  $(this).next('div').slideToggle(200);\n+ return false; \n });\n</code></pre>\n\n<p>Which would stop the A-Href being triggered. </p>\n\n<p>Note however, for usability reasons, in an ideal world that href should still go somewhere, for the people whom want to open link in new tab ;)</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Why not just do it in css? </p>\n\n<p>Take out the 'href' attribute in your anchor tag</p>\n\n<pre><code>&lt;ul class=\"product-info\"&gt;\n  &lt;li&gt;\n    &lt;a&gt;YOU CLICK THIS TO SHOW/HIDE&lt;/a&gt;\n    &lt;div class=\"toggle\"&gt;\n      &lt;p&gt;CONTENT TO SHOW/HIDE&lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>In your css,</p>\n\n<pre><code>  a{\n    cursor: pointer;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If stopping the propagation of the event doesn't bother you, just use </p>\n\n<pre><code>return false;\n</code></pre>\n\n<p>at the end of your handler. In jQuery it prevents the default behaviour and it stop the event bubbling.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I know this is an old post, but it's actually suggested that you do not use return false, as 3 things occur as a result:</p>\n\n<ol>\n<li>event.preventDefault();</li>\n<li>event.stopPropagation();</li>\n<li>Stops callback execution and returns immediately when called.</li>\n</ol>\n\n<p>So you should really only use the first one (in this type of situation):\nevent.preventDefault();</p>\n\n<p>Read this: <a href=\"http://fuelyourcoding.com/jquery-events-stop-misusing-return-false/\">http://fuelyourcoding.com/jquery-events-stop-misusing-return-false/</a> for more details on this.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>This is a non-JQuery solution I just tested and it works. </p>\n\n<pre><code>&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\naddEventListener(\"load\",function(){\n    var links= document.getElementsByTagName(\"a\");\n    for (var i=0;i&lt;links.length;i++){\n        links[i].addEventListener(\"click\",function(e){\n        alert(\"NOPE!, I won't take you there haha\");\n        //prevent event action\n        e.preventDefault();\n        })\n    }\n}); \n\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div&gt;\n&lt;ul&gt;\n    &lt;li&gt;&lt;a href=\"http://www.google.com\"&gt;Google&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"http://www.facebook.com\"&gt;Facebook&lt;/a&gt;&lt;/li&gt;\n    &lt;p id=\"p1\"&gt;Paragraph&lt;/p&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;p&gt;By Jefrey Bulla&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Set the href attribute as href=\"javascript:;\"    </p>\n\n<pre><code>&lt;ul class=\"product-info\"&gt;\n  &lt;li&gt;\n   &lt;a href=\"javascript:;\"&gt;YOU CLICK THIS TO SHOW/HIDE&lt;/a&gt;\n  &lt;div class=\"toggle\"&gt;\n    &lt;p&gt;CONTENT TO SHOW/HIDE&lt;/p&gt;\n  &lt;/div&gt;\n &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>&lt;ul class=\"product-info\"&gt;\n  &lt;li&gt;\n    &lt;a href=\"javascript:void(0);\"&gt;YOU CLICK THIS TO SHOW/HIDE&lt;/a&gt;\n      &lt;div class=\"toggle\"&gt;\n        &lt;p&gt;CONTENT TO SHOW/HIDE&lt;/p&gt;\n      &lt;/div&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>Use </p>\n\n<blockquote>\n  <p>javascript:void(0);</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>after several operations, when the page should finally go to  link you can do the following:</p>\n\n<pre><code>          jQuery(\"a\").click(function(e){\n            var self = jQuery(this);\n            var href = self.attr('href');\n            e.preventDefault();\n            // needed operations\n\n            window.location = href;\n          });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have some html/jquery that slides a div up and down to show/hide it, when a link is clicked:</p>\n\n<pre><code>&lt;ul class=\"product-info\"&gt;\n  &lt;li&gt;\n    &lt;a href=\"#\"&gt;YOU CLICK THIS TO SHOW/HIDE&lt;/a&gt;\n    &lt;div class=\"toggle\"&gt;\n      &lt;p&gt;CONTENT TO SHOW/HIDE&lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>and my jquery...</p>\n\n<pre><code>$('div.toggle').hide();\n  $('ul.product-info li a').click(function(event){\n    $(this).next('div').slideToggle(200);\n  } \t\t\n);\n</code></pre>\n\n<p>My question is: How do I use preventDefault() to stop the link acting as a link and adding # to the end of my URL &amp; jumping to the top of the page? I can't figure out the right syntax, I just keep getting an error saying that preventDefault() is not a function.</p>\n",
            "last_activity_date": 1421173381,
            "question_id": 265478,
            "score": 46,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "preventDefault() on an &lt;a&gt; tag"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<h2>Synchronous:</h2>\n\n<pre><code>var fs = require('fs');\nvar array = fs.readFileSync('file.txt').toString().split(\"\\n\");\nfor(i in array) {\n    console.log(array[i]);\n}\n</code></pre>\n\n<h2>Asynchronous:</h2>\n\n<pre><code>var fs = require('fs');\nfs.readFile('file.txt', function(err, data) {\n    if(err) throw err;\n    var array = data.toString().split(\"\\n\");\n    for(i in array) {\n        console.log(array[i]);\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 94
                },
                {
                    "body": "<p>If you can fit the final data into an array then wouldn't you also be able to fit it in a string and split it, as has been suggested?\nIn any case if you would like to process the file one line at a time you can also try something like this:</p>\n\n<pre><code>var fs = require('fs');\n\nfunction readLines(input, func) {\n  var remaining = '';\n\n  input.on('data', function(data) {\n    remaining += data;\n    var index = remaining.indexOf('\\n');\n    while (index &gt; -1) {\n      var line = remaining.substring(0, index);\n      remaining = remaining.substring(index + 1);\n      func(line);\n      index = remaining.indexOf('\\n');\n    }\n  });\n\n  input.on('end', function() {\n    if (remaining.length &gt; 0) {\n      func(remaining);\n    }\n  });\n}\n\nfunction func(data) {\n  console.log('Line: ' + data);\n}\n\nvar input = fs.createReadStream('lines.txt');\nreadLines(input, func);\n</code></pre>\n\n<p><strong>EDIT:</strong> (in response to comment by <em>phopkins</em>) I think (at least in newer versions) substring does not copy data but creates a special SlicedString object (from a quick glance at the v8 source code). In any case here is a modification that avoids the mentioned substring (tested on a file several megabytes worth of \"All work and no play makes Jack a dull boy\"):</p>\n\n<pre><code>function readLines(input, func) {\n  var remaining = '';\n\n  input.on('data', function(data) {\n    remaining += data;\n    var index = remaining.indexOf('\\n');\n    var last  = 0;\n    while (index &gt; -1) {\n      var line = remaining.substring(last, index);\n      last = index + 1;\n      func(line);\n      index = remaining.indexOf('\\n', last);\n    }\n\n    remaining = remaining.substring(last);\n  });\n\n  input.on('end', function() {\n    if (remaining.length &gt; 0) {\n      func(remaining);\n    }\n  });\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>With a <a href=\"https://github.com/Gagle/Node-BufferedReader\" rel=\"nofollow\">BufferedReader</a>, but the function should be asynchronous:</p>\n\n<pre><code>var load = function (file, cb){\n    var lines = [];\n    new BufferedReader (file, { encoding: \"utf8\" })\n        .on (\"error\", function (error){\n            cb (error, null);\n        })\n        .on (\"line\", function (line){\n            lines.push (line);\n        })\n        .on (\"end\", function (){\n            cb (null, lines);\n        })\n        .read ();\n};\n\nload (\"file\", function (error, lines){\n    if (error) return console.log (error);\n    console.log (lines);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var fs = require('fs');\nvar filename = process.argv[2];\nrequire('readline').createInterface({\n    input: fs.createReadStream(filename),\n    terminal: false\n}).on('line', function(line){\n   console.log('Line: ' + line);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>This is a variation on the answer above by @mtomis.</p>\n\n<p>It creates a stream of lines. It emits 'data' and 'end' events, allowing you to handle the end of the stream.</p>\n\n<pre><code>var events = require('events');\n\nvar LineStream = function (input) {\n    var remaining = '';\n\n    input.on('data', function (data) {\n        remaining += data;\n        var index = remaining.indexOf('\\n');\n        var last = 0;\n        while (index &gt; -1) {\n            var line = remaining.substring(last, index);\n            last = index + 1;\n            this.emit('data', line);\n            index = remaining.indexOf('\\n', last);\n        }\n        remaining = remaining.substring(last);\n    }.bind(this));\n\n    input.on('end', function() {\n        if (remaining.length &gt; 0) {\n            this.emit('data', remaining);\n        }\n        this.emit('end');\n    }.bind(this));\n}\n\nLineStream.prototype = new events.EventEmitter;\n</code></pre>\n\n<p>Use it as a wrapper:</p>\n\n<pre><code>var lineInput = new LineStream(input);\n\nlineInput.on('data', function (line) {\n    // handle line\n});\n\nlineInput.on('end', function() {\n    // wrap it up\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I would like to read a very very large file into a JavaScript array in node.js.</p>\n\n<p>So if the file is like this:</p>\n\n<pre><code>first line\ntwo \nthree\n...\n...\n</code></pre>\n\n<p>I would have the array: </p>\n\n<pre><code>['first line','two','three', ... , ... ] \n</code></pre>\n\n<p>The function would look like this:</p>\n\n<pre><code>var array = load(filename); \n</code></pre>\n\n<p>Therefore the idea of loading it all as a string and then split it is not acceptable.</p>\n",
            "last_activity_date": 1385188057,
            "question_id": 6831918,
            "score": 35,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "node.js: read a text file into an array. (Each line an item in the array.)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>We have a GWT app with a bunch of Selenium acceptance tests. I thought (like you) that it would surely be safe to upgrade GWT from 1.7 to 2.0. And it was - mostly. The app still worked the same for \"human\" users, but the selenium tests all broke. There's a newer version of Selenium in preparation (at alpha release, with many UnsupportedOperations), but if we want to stay with GWT 2, it seems we have to give up some testability. So be careful about \"future-proof\" assumptions.</p>\n\n<p>Our decision to use GWT was made months ago, after comparing YUI and ZK. I'm still glad we chose GWT. The level of support on the GWT website and the general quality of the documentation seems very high.</p>\n\n<p>GWT does module splitting and provides performance profiling which help to counter arguments that it is not lightweight enough.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<h2>Trade-offs</h2>\n\n<p>Let's start with all the trade-offs I can come up with:</p>\n\n<ul>\n<li><strong>you're using Java</strong> - it means that your webdevs' proficiency in javascript won't come in handy as much (it will be helpful if you dabble in JSNI)</li>\n<li><strong>problems with indexing by search engines</strong> - IMHO, this should be the\nbiggest disadvantage of using GWT, or\npure JS web applications in general.\nSince the content, layout, everything\nis created \"on-the-fly\" with JS, the\nsearch engine will only see a very\nshort HTML page and that's that - you\nhave to take care of this somehow\nyourself (for example, using\n<a href=\"http://en.wikipedia.org/wiki/Cloaking\">cloaking</a>). Google has finally\n<a href=\"http://googlewebmastercentral.blogspot.com/2009/10/proposal-for-making-ajax-crawlable.html\">started to work on a solution for\nthis</a>, however it doesn't seem to\nattractive to me.<br>\n<strong><em>Update:</em></strong> Google has <a href=\"http://code.google.com/web/ajaxcrawling/\">finally addressed</a> this problem. However, I'll leave this as a trade-off because making the application crawable still requires more effort than in other frameworks. At least now we have a \"standard\" to follow and don't have to use some dubious techniques (like <a href=\"http://en.wikipedia.org/wiki/Cloaking\">cloaking</a>).</li>\n<li>it's easy (especially for a beginner in GWT, <em>especially</em> when that person comes from a HTML/JS background - without too much object-oriented experience) to go all \"wow, these 'object' things are so cool, let me make all my <code>&lt;div&gt;</code>s into separate objects, that will make the code all nice and neat\". Of course, I'm over-exaggerating it, but you get the point - it's easy to imagine that an unexperienced programmer could put a full-blown <code>Widget</code> with lots of <code>Handlers</code> in every cell of a <code>FlexTable</code>... And then (s)he'll waste a lot of time wondering why the application feels sluggish ;) <strong>tl;dr: it's easy for beginners in GWT to make their applications \"bloaty\" by writing code that seems in line with what the documentation/samples/common sense ;) suggest</strong></li>\n</ul>\n\n<p>That's all for the trade-offs I can think of - if anyone wants to add something, please add comments.</p>\n\n<h2>Advantages</h2>\n\n<p>Now for the advantages. I'm gonna skip some like <a href=\"http://code.google.com/webtoolkit/doc/latest/DevGuideI18n.html\">internationalization</a>, <a href=\"http://code.google.com/webtoolkit/doc/latest/DevGuideUiBrowser.html\">cross-browser compatibility</a> for free, easy integration with other Google's libraries, etc, because they are kinda obvious and easy to grasp. I'll try to focus on the less emphasized but still very important features:</p>\n\n<ul>\n<li><strong>the compiler</strong> - now, most people I've talked with about GWT doesn't\nrealize just how amazing this part of\nGWT is - for starters try <a href=\"http://code.google.com/events/io/2009/sessions/StoryCompilerGwtCompiler.html\">this\npresentation from last year's Google\nIO</a>. The compiler has the view of\nthe whole application.</li>\n</ul>\n\n<p>So it <em>can</em> optimize such a something like this:</p>\n\n<pre><code>public class ShapeExample implements EntryPoint {\n  private static final double SIDE_LEN_SMALL = 2;\n  private final Shape shape = new SmallSquare();\n  public static abstract class Shape {\n    public abstract double getArea();\n  }\n  public static abstract class Square extends Shape {\n    public double getArea() { return getSideLength() * getSideLength(); }\n    public abstract double getSideLength();\n  }\n  public static class SmallSquare extends Square {\n    public double getSideLength() { return SIDE_LEN_SMALL; }\n  }\n  public void onModuleLoad() {\n    Shape shape = getShape();\n    Window.alert(\"Area is \" + shape.getArea());\n  }\n  private Shape getShape() { return shape; }\n}\n</code></pre>\n\n<p>..to this:</p>\n\n<pre><code>public class ShapeExample implements EntryPoint {\n  public void onModuleLoad() {\n    Window.alert(\"Area is 4.0\");\n  }\n}\n</code></pre>\n\n<p>And then obfuscate this and minimize. Additionally, this is done in such way, that makes the resulting files more compressible via gzip.</p>\n\n<ul>\n<li><strong>you're using Java</strong> - whether or not you like Java, there's no denying\nthat it's a very good object-oriented\n<em>language</em>, that allows to write easy to maintain and testable code\n(something I don't think is possible\nto such extent with JavaScript). If\nyou follow some <a href=\"http://misko.hevery.com/code-reviewers-guide/\">good guidelines</a>,\nyou'll arrive at a code that is\nunderstandable not only for you, but\nfor other developers as well. Another\nthing worth mentioning is that all\nthose nice design patterns, etc, that\nwork in \"pure\" Java, work here too.</li>\n<li>one nifty thing about GWT is that you\nget <strong>performance gains and new\nfeatures for free</strong> with almost every\nnew release of the framework. Since\nit's Java compiled to JavaScript, it\ntakes only a recompile to benefit\nfrom the optimizations made in the\nnew compiler or get new features (like the <a href=\"http://code.google.com/webtoolkit/doc/latest/DevGuideA11y.html\">accessibility support</a> introduced in GWT 1.5).</li>\n<li><strong>debugging</strong> - it is worth mentioning that you can (and should :)) debug your GWT apps just like any other Java application, using your IDE's debugger. And, in general, the Java debuggers I've seen are more advanced then their JavaScript counterparts.</li>\n<li><strong>UiBinder</strong> - while it's still not \"perfect\", <a href=\"http://code.google.com/webtoolkit/doc/latest/DevGuideUiBinder.html\">UiBinder</a> let's you design your Widgets in an easy and intuitive way using XML (as opposed to the pre-2.0 way that forced you to do this in Java). Mixing HTML and GWT's Widgets has never been so easy and fun ;)</li>\n<li><strong>working with CSS</strong> - GWT has always, of course, embraced CSS, but with the introduction of GWT 2.0 (and UiBinder) they took it to another level. Let's look at a CSS file from a \"normal\" web application - hundreds, if not thousands of lines, hard to navigate, some styles are redundant but it's hard to notice that, some aren't used at all, add to this mix the need to please IE6/7 and you get yourself a nightmare. With GWT, you can instruct it to perform the similar tasks it did for the JS code for CSS - so it will prune all the unused CSS styles, merge where appropriate, minimize and obfuscate the class names, <a href=\"http://code.google.com/p/google-web-toolkit/wiki/CssResource\">and many more</a> (including conditionals, constants, etc in your CSS files). You are encouraged to keep your styles in their respective UiBinder's XML files - makes organizing and finding them so much easier. Last but not least, you get an error when you misspell a CSS style name - less hassle then trying to do the same via Firebug or a similar tool</li>\n<li><strong>OOPHM</strong> - Out of Process Hosted Mode, with this, they fixed one of the biggest disadvantages of GWT - now, you get to use Hosted Mode in the browser of your choice (if that choice is Firefox, Safari, IE or Chrome, but at least you can use any version you want). The design of OOPHM also allows you to do cool stuff like run Windows in a VM, and connect from the IE there to the Hosted Mode running on the host OS (Linux/MacOS) - no need for hacks, copying files after every compile, etc</li>\n<li>you get to say /\u02c8\u0261w\u026at/ a lot ;) (this is a quote from one of the presentations on <a href=\"http://code.google.com/events/io/2009/sessions.html\">Google IO 2009</a>, IIRC)</li>\n<li>many more.. Take a look at the videos from <a href=\"http://code.google.com/events/io/2009/sessions.html\">Google IO 2009</a> and browse through the <a href=\"http://code.google.com/p/google-web-toolkit/w/list\">GWT wiki</a> to see more stuff that makes creating RIA easier and less error-prone with GWT :)</li>\n</ul>\n\n<h2>In between</h2>\n\n<p>Depending on your experience and/or preferences, the following might be an advantage (it is to me, but at times it's a PITA ;)) or not:</p>\n\n<ul>\n<li><strong>the out-of-box <a href=\"http://code.google.com/webtoolkit/doc/latest/RefWidgetGallery.html\">collection of Widgets</a> is kept small and simple</strong>. Now, if you're coming from some full-blown GUI framework (be it web or desktop), you might be surprised at how relatively small the number of Widgets GWT has. But according to the GWT's devs, it's kept like this on purpose - the basic Widgets are all the tools/\"blocks\" you need to build your own, customized to your needs Widgets. The alternative is to provide a variety of all-purpose Widgets that have to support many use-cases... The result is a kinda sluggish UI (at least IMHO - check out for yourself projects like <a href=\"http://www.smartclient.com/smartgwt/showcase/\">SmartGWT</a> or <a href=\"http://www.sencha.com/products/extgwt/examples/\">Ext GWT</a>). That is to say, the GWT Widgets are quite nicely written - for example the <a href=\"http://google-web-toolkit.googlecode.com/svn/javadoc/latest/com/google/gwt/user/client/ui/SuggestBox.html\"><code>SuggestBox</code></a> has a lot places where you can override the default behavior with your own - you can specify a different way to display the suggestions (<a href=\"http://google-web-toolkit.googlecode.com/svn/javadoc/latest/com/google/gwt/user/client/ui/SuggestBox.SuggestionDisplay.html\"><code>SuggestBox.SuggestionDisplay</code></a>), fire a custom action when the user selects a suggestion (<a href=\"http://google-web-toolkit.googlecode.com/svn/javadoc/latest/com/google/gwt/user/client/ui/SuggestBox.SuggestionCallback.html\"><code>SuggestBox.SuggestionCallback</code></a>) or just provide a custom <a href=\"http://google-web-toolkit.googlecode.com/svn/javadoc/latest/com/google/gwt/user/client/ui/SuggestOracle.html\"><code>SuggestOracle</code></a> for feeding the <code>SuggestBox</code> with <a href=\"http://google-web-toolkit.googlecode.com/svn/javadoc/latest/com/google/gwt/user/client/ui/SuggestOracle.Suggestion.html\"><code>Suggestion</code></a>s...</li>\n</ul>\n\n<hr>\n\n<p>Bottom line is - try GWT, chances are you'll love it and will never want to write in pure JavaScript ever again ;)</p>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>We are building small (~2K Java classes) to medium (~6K) enterprise systems on regular basis using GWT since version 1.3 was out. I understand that there is a different set of problems to solve in public site having thousand clicks per second, but I will try to tell about our biggest problems in GWT 1.x and how GWT 2.0 approaches that.</p>\n\n<p><strong>Browser Memory Leaks</strong> IE6 leaks with GWT are tremendous, IE7 leaks can be compensated with periodic page refreshes, IE8 promises some stability in this area, but not yet widely accepted in enterprise. And yes, even valid GWT code without native JS calls leaks memory in certain cases. Especially when UI is complex and you are doing a lot of Panel.clear() calls. There are no useful tools to identify the real cause of the leak at the moment. Unless you know how to hack into browser itself.</p>\n\n<p><strong>Rendering Performance</strong> you have to write your UI code very carefully, especially when building commonly used custom widgets. Deep JavaScript, CSS and DOM knowledge is still required. There is a lot of materials in internet on this topic. You need to know how and when to get down from GWT widget level to direct DOM manipulations.</p>\n\n<p><strong>Size of Downloadable Content</strong> it was impossible prior to 2.0 to split module onto different downloadable pieces without having \"hard\" navigation built in the application. But that will clear JavaScript context and require window reload.</p>\n\n<p><strong>UI Developers Mind Shift</strong> Experienced UI developers just don't know Java and OOP. Experienced Java developers don't know CSS,JS,HTML and don't like building UI. UI Binder goes into right direction.</p>\n\n<p>We have done migration 1.3 -> 1.5 -> 1.7 and it was always just a recompile and a couple of CSS fixes. GWT 2.0 removes a lot of deprecated code and initial approaches (project structure, GWTShell) and may be tricky to migrate quickly. But all features looks promising and its good that Google have dropped legacy code at some point. I am not sure about the stability of 2.0 though, as we have not used it yet in real projects.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I'm new to stackoverflow and have been reading through a bunch of the \"highest voted\" questions for GWT. Several of these questions talk about the pitfalls or problems with GWT. In  the articles: <a href=\"http://stackoverflow.com/questions/394601/which-javascript-framework-jquery-vs-dojo-vs\">Which Javascript framework (jQuery vs Dojo vs \u2026 )?</a> and <a href=\"http://stackoverflow.com/questions/99866/biggest-gwt-pitfalls\">Biggest GWT Pitfalls?</a>, some posters seem to suggest that GWT is not lightweight enough or that there are better alternatives that may be used. Do most of you feel that there are problems with GWT that have not been fixed with GWT 2.0 -- which would make you inclined to suggest using a simpler framework for a new project?</p>\n\n<p>To some extent, shouldn't GWT be somewhat future-proof (since you don't have to worry about it changing drastically from release to release and since it is backed by Google)? I realize that the answer to this question depends greatly upon what you want to do or what you wish to make. I am looking at this from the perspective of starting a new web application that will eventually be used by millions of users.</p>\n",
            "last_activity_date": 1348585338,
            "question_id": 2097964,
            "score": 29,
            "tags": [
                "java",
                "javascript",
                "ajax",
                "gwt"
            ],
            "title": "Why GWT? Advantages and Trade-Offs of Using This RIA Framework"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>First, you need to understand the difference between window and document. The window object is a top level client side object. There is nothing above the window object. Javascript is an object orientated language. You start with an object and apply methods to it's properties or the properties of it's object groups. For example, the document object is an object of the window object. To change the document's background color, you'd set the document's bgcolor property.</p>\n\n<pre><code>window.document.bgcolor = \"red\" \n</code></pre>\n\n<p>To answer your question, There is No difference in the end result between window and document scrollTop. Both will give the same output.</p>\n\n<h2>Check working example at <a href=\"http://jsfiddle.net/7VRvj/6/\">http://jsfiddle.net/7VRvj/6/</a></h2>\n\n<p>In general use document mainly to register events and use window to do things like scroll, scrollTop, and resize. </p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>They are both going to have the same effect.</p>\n\n<p>Both scroll to the top of the object. \nAn html document is considered the \"document\" thus scrolling to the top of the html page. </p>\n\n<p>A \"window\" object is created with each frame, thus your main window is one frame, if you had an \"iframe\" that would create another window object. (accessible through window.frames)</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>I've just had some of the similar problems with <code>scrollTop</code> described here. </p>\n\n<p>In the end I got around this on <strong>Firefox</strong> and <strong>IE</strong> by using the selector <code>$('*').scrollTop(0);</code></p>\n\n<p>Not perfect if you have elements you don't want to effect but it gets around the Document, Body, HTML and Window disparity. If it helps...</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>What's the difference between:</p>\n\n<pre><code>$(window).scrollTop()\n</code></pre>\n\n<p>and </p>\n\n<pre><code>$(document).scrollTop()\n</code></pre>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1416665512,
            "question_id": 5371139,
            "score": 70,
            "tags": [
                "javascript",
                "jquery",
                "window",
                "document",
                "scrolltop"
            ],
            "title": "$(window).scrollTop() vs. $(document).scrollTop()"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You're making this hard on yourself - just render a new iframe-based one.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n  &lt;title&gt;Test Page&lt;/title&gt;\n\n  &lt;script src=\"http://code.jquery.com/jquery-latest.js\"&gt;&lt;/script&gt;\n  &lt;script type=\"text/javascript\"&gt;  \n\n  $(function()\n  {\n    $( '#ChangeToGoogle' ).click( function( event )\n    {\n      event.preventDefault();\n\n      $( '#Container' ).empty().append( $('&lt;iframe /&gt;')\n        .attr( 'src', 'http://www.facebook.com/plugins/like.php?href=www.google.com&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=450&amp;amp;action=like&amp;amp;colorscheme=light&amp;amp;height=80' )\n        .attr( 'scrolling', 'no' )\n        .attr( 'frameborder', 'no' )\n        .attr( 'style', 'border:none; overflow:hidden; width:450px; height:80px;' )\n        .attr( 'allowTransparency', 'true' )        \n      );            \n    });\n  });\n\n  &lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;form id=\"form1\" runat=\"server\"&gt;\n    &lt;a id=\"ChangeToGoogle\" href=\"#\"&gt;Change To Google&lt;/a&gt;\n    &lt;div id=\"Container\"&gt;\n      &lt;iframe src=\"http://www.facebook.com/plugins/like.php?href=www.yahoo.com&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=450&amp;amp;action=like&amp;amp;colorscheme=light&amp;amp;height=80\"\n        scrolling=\"no\" frameborder=\"0\"\n        style=\"border:none; overflow:hidden; width:450px; height:80px;\"\n        allowTransparency=\"true\"&gt;\n      &lt;/iframe&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is the solution I ended up going with:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head runat=\"server\"&gt;\n    &lt;title&gt;&lt;/title&gt;\n\n    &lt;script src=\"JS/jquery/jquery.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    &lt;script src=\"http://connect.facebook.net/en_US/all.js#xfbml=1\"&gt;&lt;/script&gt;\n\n    &lt;script language=\"javascript\" type=\"text/javascript\"&gt;\n        $(\"document\").ready\n        (\n            function ()\n            {\n                CreateNewLikeButton(\"http://www.yahoo.com\")\n\n                $(\"#ChangeToGoogle\").click\n                (\n                    function (e)\n                    {\n                        e.preventDefault();\n                        CreateNewLikeButton(\"http://www.google.ca\")\n                    }\n                );\n\n            }\n        );\n\n        function CreateNewLikeButton(url)\n        {\n            var elem = $(document.createElement(\"fb:like\"));\n            elem.attr(\"href\", url);\n            $(\"#Container\").empty().append(elem);\n            FB.XFBML.parse($(\"#Container\").get(0));\n        }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=\"form1\" runat=\"server\"&gt;\n    &lt;a id=\"ChangeToGoogle\" href=\"#\"&gt;Change To Google&lt;/a&gt;\n    &lt;div id=\"Container\"&gt;\n        &lt;fb:like href=\"http://www.NEVER_LINK_TO_THIS_12345.com\"&gt;&lt;/fb:like&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>This is how I handled this situation when I ran into it - seems to work well.</p>\n\n<pre><code>// Set Facebook Like Button with jQuery\nsetFBLikeButtons = function (container,url,send,layout,width,show_faces,font) {\n  // Set Default Args\n  if(!send) { send = \"false\"; }\n  if(!layout) { layout = \"button_count\"; }\n  if(!width) { width = \"100\"; }\n  if(!show_faces) { show_faces = \"false\"; }\n  if(!font) { font = \"arial\"; }\n\n  $(container).empty(); // Remove current like button\n  $(container).html('&lt;fb:like href=\"'+url+'\" send=\"'+send+'\" \n       layout=\"'+layout+'\" width=\"'+width+'\" show_faces=\"'+show_faces+'\" \n       font=\"'+font+'\"&gt;&lt;/fb:like&gt;');\n  FB.XFBML.parse(); // This is the magical syrup\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>SIMPLE SOLUTION </p>\n\n<p>Just parse trigger the parse function when load complete. </p>\n\n<p>If you\u2019re using jQuery, there\u2019s a real easy and slick solution to this problem:</p>\n\n<pre><code>$(document).ajaxComplete(function(){\n    try{\n        FB.XFBML.parse(); \n    }catch(ex){}\n});\n</code></pre>\n\n<p><a href=\"http://developers.facebook.com/docs/reference/plugins/like/\">http://developers.facebook.com/docs/reference/plugins/like/</a></p>\n",
                    "is_accepted": true,
                    "score": 116
                },
                {
                    "body": "<p>create like button</p>\n\n<pre><code>&lt;head&gt;\n&lt;script src=\"http://connect.facebook.net/en_US/all.js#xfbml=1\"&gt;&lt;/script&gt;\n&lt;script&gt;\nwindow.onload = function(){\nvar divs = document.getElementsByTagName(\"span\");\nfor(var i=0; i&lt;divs.length i++){\nif(divs[i].className == \"likes\"){\nif(divs[i].title){ var Href = divs[i].title; }else{ var Href = window.location; }\nvar fb_like = document.createElement(\"fb:like\");\nfb_like.setAttribute(\"href\", Href);\nfb_like.setAttribute(\"layout\", \"box_count\");\nfb_like.setAttribute(\"show_faces\", \"false\");\nfb_like.setAttribute(\"width\", \"55\");\ndocument.getElementById(\"likes2\").appendChild(fb_like);\n}\n}\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;span class=\"likes\" title=\"www.bzzs.me\"&gt;&lt;/span&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Load it after the window loads, this is what works for me:</p>\n\n<pre><code>$(window).load(function(){\n     $.getScript('http://connect.facebook.net/en_US/all.js', function() {\n          try{\n                FB.XFBML.parse();\n            } catch(ex) {}\n      });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're using the <a href=\"http://jquerymobile.com/\" rel=\"nofollow\">jQuery Mobile framework</a> you can run the same code as the accepted answer in the <code>pagecontainershow</code> event which jQuery Mobile uses when it displays a new page.</p>\n\n<pre><code>// initialize new pages\n$(document).on(\"pagecontainershow\", (e, ui) =&gt;\n{\n    try\n    {\n        FB.XFBML.parse();\n    } catch (ex) { }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have trolled the net + Stackoverflow and have not found an adequate answer to this question and before I start the trial and error process of finding my own solution, I thought I would turn to the Stackoverflow braintrust and see if there was already a successful implementation.</p>\n\n<p>Specifically, I have an AJAX powered page that degrades properly for non-javascript browsers + SEO.  Each click in the AJAX version can be represented by a unique URL.  What I want to do is to dynamically change the HREF of the  button.  I do understand that this tag is converted to standard HTML at runtime (namely into a nasty table / iframe layout).</p>\n\n<p>I was just wondering if anyone had any insight as to how to implement this FB like button onto AJAX powered pages?</p>\n\n<p>Cheers in advance :)</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>What do you think of this method I just hacked together?  See any huge problems with it?</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head runat=\"server\"&gt;\n    &lt;title&gt;&lt;/title&gt;\n\n    &lt;script src=\"JS/jquery/jquery.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    &lt;script src=\"http://connect.facebook.net/en_US/all.js#xfbml=1\"&gt;&lt;/script&gt;\n\n    &lt;script language=\"javascript\" type=\"text/javascript\"&gt;\n        $(\"document\").ready\n        (\n            function ()\n            {\n                CreateNewLikeButton(\"http://www.yahoo.com\")\n\n                $(\"a#ChangeToGoogle\").click\n                (\n                    function (e)\n                    {\n                        e.preventDefault();\n                        CreateNewLikeButton(\"http://www.google.ca\")\n                    }\n                );\n\n            }\n        );\n\n        function CreateNewLikeButton(url)\n        {\n            var elem = $(document.createElement(\"fb:like\"));\n            elem.attr(\"href\", url);\n            $(\"div#Container\").empty().append(elem);\n            FB.XFBML.parse($(\"div#Container\").get(0));\n        }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=\"form1\" runat=\"server\"&gt;\n    &lt;a id=\"ChangeToGoogle\" href=\"#\"&gt;Change To Google&lt;/a&gt;\n    &lt;div id=\"Container\"&gt;\n        &lt;fb:like href=\"http://www.NEVER_LINK_TO_THIS_12345.com\"&gt;&lt;/fb:like&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1401568944,
            "question_id": 4219729,
            "score": 62,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "facebook"
            ],
            "title": "How to add a Facebook &quot;Like&quot; button to an AJAX driven page"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I think you can use <code>for in</code> but checking if the property is not inerithed</p>\n\n<pre><code>myObj= {1:[Array-Data], 2:[Array-Data]}\nvar arr =[];\nfor( var i in myObj ) {\n    if (myObj.hasOwnProperty(i)){\n       arr.push(myObj[i]);\n    }\n}\n</code></pre>\n\n<p>EDIT - if you want you could also keep the indexes of your object, but you have to check if they are numeric (and you get undefined values for missing indexes:</p>\n\n<pre><code>function isNumber(n) {\n  return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n);\n}\n\nmyObj= {1:[1,2], 2:[3,4]}\nvar arr =[];\nfor( var i in myObj ) {\n    if (myObj.hasOwnProperty(i)){\n        if (isNumber(i)){\n            arr[i] = myObj[i];\n        }else{\n          arr.push(myObj[i]);\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<pre><code>x = [];\nfor( var i in myObj ) {\n    x[i] = myObj[i];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>var myObj = {\n    1: [1, 2, 3],\n    2: [4, 5, 6]\n};\n\nvar array = $.map(myObj, function(value, index) {\n    return [value];\n});\n\n\nconsole.log(array);\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>[[1, 2, 3], [4, 5, 6]]\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 97
                },
                {
                    "body": "<p>If you know the maximum index in you object you can do the following:</p>\n\n<pre><code>var myObj= {1:['c', 'd'], 2:['a', 'b']},\n    myArr;\n\nmyObj.length = 3; //max index + 1\nmyArr = Array.prototype.slice.apply( myObj );\nconsole.log(myArr); //[undefined, ['c', 'd'], ['a', 'b']]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p><kbd><a href=\"http://jsfiddle.net/cse_tushar/eVHB2/\" rel=\"nofollow\"><strong>Fiddle Demo</strong></a></kbd></p>\n\n<p>Extension to answer of <a href=\"http://stackoverflow.com/users/367960/bjornd\">bjornd</a> .</p>\n\n<pre><code>var myObj = {\n    1: [1, [2], 3],\n    2: [4, 5, [6]]\n}, count = 0,\n    i;\n//count the JavaScript object length supporting IE &lt; 9 also\nfor (i in myObj) {\n    if (myObj.hasOwnProperty(i)) {\n        count++;\n    }\n}\n//count = Object.keys(myObj).length;// but not support IE &lt; 9\nmyObj.length = count + 1; //max index + 1\nmyArr = Array.prototype.slice.apply(myObj);\nconsole.log(myArr);\n</code></pre>\n\n<p><hr>\nReference</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\" rel=\"nofollow\">Array.prototype.slice()</a></p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\" rel=\"nofollow\">Function.prototype.apply()</a></p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\" rel=\"nofollow\">Object.prototype.hasOwnProperty()</a></p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FObject%2Fkeys\" rel=\"nofollow\">Object.keys()</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>How about <code>jQuery.makeArray(obj)</code></p>\n\n<p>This is how I did it in my app.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I made a custom function:</p>\n\n<pre><code>    Object.prototype.toArray=function(){\n    var arr=new Array();\n    for( var i in this ) {\n        if (this.hasOwnProperty(i)){\n            arr.push(this[i]);\n        }\n    }\n    return arr;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The best method would be using a javascript -only function:</p>\n\n<pre><code>var myArr = Array.prototype.slice.call(myObj, 0);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you are looking for a functional approach:</p>\n\n<pre><code>var obj = {1: 11, 2: 22};\nvar arr = Object.keys(obj).map(function (key) {return obj[key]});\n</code></pre>\n\n<p>Results in:</p>\n\n<pre><code>[11, 22]\n</code></pre>\n\n<p>Or if you are already using Underscore/Lo-Dash:</p>\n\n<pre><code>var arr = _.values(obj)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>With the use of map and arrow function from ES6 </p>\n\n<pre><code>Object.keys(yourObject).map(key =&gt; yourObject[key]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>My application creates a javascript object, like the following:</p>\n\n<pre><code>myObj= {1:[Array-Data], 2:[Array-Data]}\n</code></pre>\n\n<p>But I need this object as an array. </p>\n\n<pre><code>array[1]:[Array-Data]\narray[2]:[Array-Data]\n</code></pre>\n\n<p>So I tried to convert this object to an array by iterating with <code>$.each</code> through the object and adding the element to an array:</p>\n\n<pre><code>x=[]\n$.each(myObj, function(i,n) {\n    x.push(n);});\n</code></pre>\n\n<p>Is there an better way to convert an object to an array or maybe an function, I don't know?!?</p>\n\n<p>Thank you.</p>\n",
            "last_activity_date": 1417541173,
            "question_id": 6857468,
            "score": 46,
            "tags": [
                "javascript",
                "jquery",
                "arrays",
                "object"
            ],
            "title": "a better way to convert JS object to array"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Use</p>\n\n<pre><code>contentType:\"application/json\"\n</code></pre>\n\n<p>You need to use <code>JSON.stringify</code> method to convert it to JSON format when you send it,</p>\n\n<p>And the model binding will bind the json data to your class object.</p>\n\n<p>The below code will work fine (tested)</p>\n\n<pre><code>$(function () {\n    var customer = {contact_name :\"Scott\",company_name:\"HP\"};\n    $.ajax({\n        type: \"POST\",\n        data :JSON.stringify(customer),\n        url: \"api/Customer\",\n        contentType: \"application/json\"\n    });\n});\n</code></pre>\n\n<p><strong>Result</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/69yQt.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": true,
                    "score": 73
                },
                {
                    "body": "<p>Working with POST in webapi can be tricky!\nWould like to add to the already correct answer..</p>\n\n<p>Will focus specifically on POST as dealing with GET is trivial. I don't think many would be searching around for resolving an issue with GET with webapis. Anyways..</p>\n\n<p>If your question is - In MVC Web Api, how to- - Use custom action method names other than the generic HTTP verbs? - Perform multiple posts? - Post multiple simple types? - Post complex types via jQuery?</p>\n\n<p>Then the following solutions may help:</p>\n\n<p>First, to use <strong>Custom</strong> Action Methods in Web API, add a web api route as:</p>\n\n<pre><code>public static void Register(HttpConfiguration config)\n{\n    config.Routes.MapHttpRoute(\n        name: \"ActionApi\",\n        routeTemplate: \"api/{controller}/{action}\");\n}\n</code></pre>\n\n<p>And then you may create action methods like:</p>\n\n<pre><code>[HttpPost]\npublic string TestMethod([FromBody]string value)\n{\n    return \"Hello from http post web api controller: \" + value;\n}\n</code></pre>\n\n<p>Now, fire the following jQuery from your browser console</p>\n\n<pre><code>$.ajax({\n    type: 'POST',\n    url: 'http://localhost:33649/api/TestApi/TestMethod',\n    data: {'':'hello'},\n    contentType: 'application/x-www-form-urlencoded',\n    dataType: 'json',\n    success: function(data){ console.log(data) }\n});\n</code></pre>\n\n<p>Second, to <strong>perform multiple posts</strong>, It is simple, create multiple action methods and decorate with the [HttpPost] attrib. Use the [ActionName(\"MyAction\")] to assign custom names, etc. Will come to jQuery in the fourth point below</p>\n\n<p>Third, First of all, posting multiple <strong>SIMPLE</strong> types in a single action is not possible.\nMoreover, there is a <strong>special format</strong> to post even a <strong>single simple type</strong> (apart from passing the parameter in the query string or REST style). \nThis was the point that had me banging my head with Rest Clients (like Fiddler and Chrome's Advanced REST client extension) and hunting around the web for almost 5 hours when eventually, the following URL proved to be of help. Will quote the relevant content for the link might turn dead!</p>\n\n<pre><code>Content-Type: application/x-www-form-urlencoded\nin the request header and add a = before the JSON statement:\n={\"Name\":\"Turbo Tina\",\"Email\":\"na@Turbo.Tina\"}\n</code></pre>\n\n<p>PS: Noticed the <em>peculiar syntax</em>?</p>\n\n<p><a href=\"http://forums.asp.net/t/1883467.aspx?The+received+value+is+null+when+I+try+to+Post+to+my+Web+Api\" rel=\"nofollow\">http://forums.asp.net/t/1883467.aspx?The+received+value+is+null+when+I+try+to+Post+to+my+Web+Api</a></p>\n\n<p>Anyways, let us get over that story. Moving on:</p>\n\n<p>Fourth, <strong>posting complex types</strong> via jQuery, ofcourse, $.ajax() is going to promptly come in the role:</p>\n\n<p>Let us say the action method accepts a Person object which has an id and a name. So, from javascript:</p>\n\n<pre><code>var person = { PersonId:1, Name:\"James\" }\n$.ajax({\n    type: 'POST',\n    url: 'http://mydomain/api/TestApi/TestMethod',\n    data: JSON.stringify(person),\n    contentType: 'application/json; charset=utf-8',\n    dataType: 'json',\n    success: function(data){ console.log(data) }\n});\n</code></pre>\n\n<p>And the action will look like:</p>\n\n<pre><code>[HttpPost]\npublic string TestMethod(Person person)\n{\n    return \"Hello from http post web api controller: \" + person.Name;\n}\n</code></pre>\n\n<p>All of the above, worked for me!! Cheers!</p>\n",
                    "is_accepted": false,
                    "score": 31
                }
            ],
            "body": "<p>ASP.NET MVC4 Web API application defines post method to save customer.\nCustomer is passed in json format in POST request body.\nCustomer parameter in post method contains null values for properties.</p>\n\n<p>How to fix this so that posted data will passed as customer object ?</p>\n\n<p>If possible Content-Type: application/x-www-form-urlencoded should used since I dont know how to change it in javascript method which posts form.</p>\n\n<p>Controller:</p>\n\n<pre><code>public class CustomersController : ApiController {\n\n  public object Post([FromBody] Customer customer)\n        {\n            return Request.CreateResponse(HttpStatusCode.OK,\n            new\n            {\n                customer = customer\n            });\n        }\n    }\n}\n\npublic class Customer\n    {\n        public string company_name { get; set; }\n        public string contact_name { get; set; }\n     }\n</code></pre>\n\n<p>Request:</p>\n\n<pre><code>POST http://localhost:52216/api/customers HTTP/1.1\nAccept: application/json, text/javascript, */*; q=0.01\nX-Requested-With: XMLHttpRequest\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\n\n{\"contact_name\":\"sdfsd\",\"company_name\":\"ssssd\"}\n</code></pre>\n",
            "last_activity_date": 1425391171,
            "question_id": 20226169,
            "score": 43,
            "tags": [
                "javascript",
                "asp.net-mvc",
                "json",
                "asp.net-mvc-4",
                "asp.net-web-api"
            ],
            "title": "How to pass json POST data to Web API method as object"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The first one would fail if \"property\" is false of 0. To make sure that there actually exist a property you need to check that <code>object.property !== undefined</code>, or use the in-keyword.</p>\n\n<h3>[Edit]</h3>\n\n<p>There is also the hasOwnProperty-function, but I've never really used that one so I can't say much about it. Though I think it won't return true if the property is set in a prototype, which sometimes you want, other times you don't want.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<ul>\n<li><p><code>if(object.property)</code></p>\n\n<p>will fail in cases it is not set (which is what you want), and in cases it has been set to some false value, e.g. <code>undefined</code>, <code>null</code>, <code>0</code> etc (which is not what you want).</p>\n\n<pre><code>var object = {property: 0};\nif(object.property) { ... } // will not run\n</code></pre></li>\n<li><p><code>if('property' in object)</code></p>\n\n<p>is slightly better, since it will actually return whether the object really has the property, not looking at its value.</p>\n\n<pre><code>var object = {property: 0};\nif('property' in object) { ... } // will run\nif('toString' in object) { ... } // will also run; from prototype\n</code></pre></li>\n<li><p><code>if(object.hasOwnProperty('property'))</code></p>\n\n<p>is even better, since it will allow you to distinguish between instance properties and prototype properties.</p>\n\n<pre><code>var object = {property: 0};\nif(object.hasOwnProperty('property')) { ... } // will run\nif(object.hasOwnProperty('toString')) { ... } // will not run\n</code></pre></li>\n</ul>\n\n<p>I would say performance is not that big of an issue here, unless you're checking thousands of time a second but in that case you should consider another code structure. All of these functions/syntaxes are supported by recent browsers, <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/hasOwnProperty#See_also\"><code>hasOwnProperty</code></a> has been around for a long time, too.</p>\n\n<hr>\n\n<p><strong>Edit:</strong> You can also make a general function to check for existence of a property by passing anything (even things that are not objects) as an object like this:</p>\n\n<pre><code>function has(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n</code></pre>\n\n<p>Now this works:</p>\n\n<pre><code>has(window, 'setTimeout'); // true\n</code></pre>\n\n<p>even if <code>window.hasOwnProperty === undefined</code> (which is the case in IE version 8 or lower).</p>\n",
                    "is_accepted": true,
                    "score": 72
                },
                {
                    "body": "<p>Definitely <code>if ('property' in object)</code> is the right way to go. That actually tests if the property is in the object (or in its prototype chain, more on that below).</p>\n\n<p><code>if (object.property)</code> on the other hand, will coerce 'property' into a truth/flase value. If the property is unset, it will return \"undefined\", which will be coerced into false, and appear to work. But this will also fail for a number of other set values of properties. javascript is notoriously inconsistent in what it treats as truthy and falsy.</p>\n\n<p>Finally, like I said above, <code>'property' in 'object'</code> will return true if it's in anywhere in the prototype chain. If you want to test that's on the object itself, and not somewhere higher up in the chain, you use the <code>hasOwnProperty</code> method like so:</p>\n\n<pre><code>if (object.hasOwnProperty('property')) ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It really depends what you want to achieve. Are you talking about host objects (such as <code>window</code> and DOM nodes)? If so, the safest check is <code>typeof</code>, which works for all host objects I know of:</p>\n\n<pre><code> if (typeof object.property != \"undefined\") { ... }\n</code></pre>\n\n<p>Notes:</p>\n\n<ul>\n<li>Avoid <code>object.hasOwnProperty()</code> for host objects, because host objects are not obliged to inherit from <code>Object.prototype</code> and therefore may not have a <code>hasOwnProperty()</code> method (and indeed in IE &lt; 9, they generally do not).</li>\n<li>A simple Boolean coercion (e.g. <code>if (object.property) { ... }</code>) is a poor test of the existence of a property, since it will give false negatives for falsy values. For example, for an empty textarea, <code>if (textarea.selectionStart) { ... }</code> will not execute the block even though the property exists. Also, some host object properties throw an error in older versions of IE when attempting to coerce to a Boolean (e.g. <code>var xhr = new ActiveXObject(\"Microsoft.XMLHTTP\"); if (xhr.responseXML) { ... }</code>). </li>\n<li>The <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special/in\"><code>in</code> operator</a> is a better test of the existence of a property, but there are once again no guarantees about support for it in host objects.</li>\n<li>I recommend against considering performance for this kind of task. Choose the safest option for your project and only optimize later. There will almost certainly be much better candidates for optimization than property existence checks.</li>\n</ul>\n\n<p>For more background on this, I recommend <a href=\"http://michaux.ca/articles/feature-detection-state-of-the-art-browser-scripting\">this excellent article by Peter Michaux</a>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>This allows you to use window.hasOwnProperty as either referring to itself or something else, regardless of your scripting host.</p>\n\n<pre><code>// No enclosing functions here\nif (!('hasOwnProperty' in this))\n    function hasOwnProperty(obj, prop) {\n        var method = Object.prototype.hasOwnProperty;\n        if (prop === undefined)\n            return method.call(this, obj);\n        return method.call(obj, prop);\n    }\n\n//Example of use\nvar global = global || this; //environment-agnostic way to get the global object\nvar x = 'blah';\nWScript.Echo(global.hasOwnProperty('x') ? 'true' : 'false'); //true\n\n//Use as non-object method\nvar y = { z: false };\nWScript.Echo(hasOwnProperty(y, 'z') ? 'true' : 'false'); //true\nWScript.Echo(hasOwnProperty(y, 'w') ? 'true' : 'false'); //false\n\n// true \u0ca0_\u0ca0\nWScript.Echo(hasOwnProperty(global, 'hasOwnProperty') ? 'true' : 'false');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have seen two ways of detecting whether a UA implements a specific JS property: <code>if(object.property)</code> and <code>if('property' in object)</code>.</p>\n\n<p>I would like to hear opinions on which is better, and most importantly, why. Is one unequivocally better than the other? Are there more than just these two ways to do object property detection? Please cover browser support, pitfalls, execution speed, and such like, rather than aesthetics.</p>\n\n<p><strong>Edit:</strong>  Readers are encouraged to run the tests at <a href=\"http://jsperf.com/object-detection/6\">jsperf.com/object-detection</a></p>\n",
            "last_activity_date": 1375429347,
            "question_id": 7174748,
            "score": 40,
            "tags": [
                "javascript",
                "properties"
            ],
            "title": "JavaScript object detection: dot syntax versus &#39;in&#39; keyword"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>My solution breaks down in 3 parts : the state of the user is stored in a service, in the run method you watch when the route changes and you check if the user is allowed to access the requested page, in your main controller you watch if the state of the user change.</p>\n\n<pre><code>app.run(['$rootScope', '$location', 'Auth', function ($rootScope, $location, Auth) {\n    $rootScope.$on('$routeChangeStart', function (event) {\n\n        if (!Auth.isLoggedIn()) {\n            console.log('DENY');\n            event.preventDefault();\n            $location.path('/login');\n        }\n        else {\n            console.log('ALLOW');\n            $location.path('/home');\n        }\n    });\n}]);\n</code></pre>\n\n<p>You should create a service (i will name it <code>Auth</code>) which will handle the user object and \nhave a method to know if the user is logged or not. </p>\n\n<p><strong>service</strong>:</p>\n\n<pre><code> .factory('Auth', function(){\nvar user;\n\nreturn{\n    setUser : function(aUser){\n        user = aUser;\n    },\n    isLoggedIn : function(){\n        return(user)? user : false;\n    }\n  }\n})\n</code></pre>\n\n<p>From your <code>app.run</code>, you should listen the <code>routeChangeStart</code> event. When the route will change, it will check if the user is logged (the <code>isLoggedIn</code> method should handle it). It won't load the requested route if the user is not logged and it will redirect the user to the right page (in your case login).</p>\n\n<p>The <code>loginController</code> should be used in your login page to handle login. It should just interract with the <code>Auth</code> service and set the user as logged or not.</p>\n\n<p><strong>loginController</strong>:</p>\n\n<pre><code>.controller('loginCtrl', [ '$scope', 'Auth', function ($scope, Auth) {\n  //submit\n  $scope.login = function () {\n    // Ask to the server, do your job and THEN set the user\n\n    Auth.setUser(user); //Update the state of the user in the app\n  };\n}])\n</code></pre>\n\n<p>From your main controller, you could listen if the user state change and react with a redirection.</p>\n\n<pre><code>.controller('mainCtrl', ['$scope', 'Auth', '$location', function ($scope, Auth, $location) {\n\n  $scope.$watch(Auth.isLoggedIn, function (value, oldValue) {\n\n    if(!value &amp;&amp; oldValue) {\n      console.log(\"Disconnect\");\n      $location.path('/login');\n    }\n\n    if(value) {\n      console.log(\"Connect\");\n      //Do something when the user is connected\n    }\n\n  }, true);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>Gert Hengeveld actually write a post about technique for authentication in AngularJS.</p>\n\n<p><a href=\"https://medium.com/opinionated-angularjs/techniques-for-authentication-in-angularjs-applications-7bbf0346acec\">https://medium.com/opinionated-angularjs/techniques-for-authentication-in-angularjs-applications-7bbf0346acec</a></p>\n\n<p>The approach is pretty much similar to the gab's answer, he goes into more technical details that involve session expiration.</p>\n\n<p>HTH.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>**app.js** \n\n**In your main route .js page from where you manage routing, Put code similar like below** like app\n\n var config = function ($routeProvider) { &lt;br&gt;\n  $routeProvider &lt;br&gt;\n .when(\"/login\", { templateUrl: \"/client/views/login.html\" }) &lt;br&gt;\n .when(\"/list\", { templateUrl: \"/client/views/list.html\" })&lt;br&gt;         \n .otherwise({ redirectTo: \"/list\" }); &lt;br&gt;\napp.run([\"$rootScope\", \"Notification\", function ($rootScope, Notification) { &lt;br&gt;&lt;br&gt;\n**//For Authentication part - start &lt;br&gt;&lt;br&gt;**\n $rootScope.$on(\"$routeChangeStart\", function (event, next, current) {   &lt;br&gt;\n  if ($rootScope.loggedInUser == null &amp;&amp; $rootScope.loggedInUser == undefined) {    &lt;br&gt;\n window.location = \"/index.html#/login\";    &lt;br&gt;\n } &lt;br&gt;&lt;br&gt;\n **//For Authentication part - End &lt;br&gt;**\n  }); &lt;br&gt;\n return $rootScope.Notification = Notification; &lt;br&gt;\n}\n\n**Login Conntroller** &lt;br&gt;\n $scope.login = (function () {&lt;br&gt;\n            loginService &lt;br&gt;\n                    .login($scope.userLogin.username,  &lt;br&gt;$scope.userLogin.password).then(function (status) {&lt;br&gt;\n                        if (status != \"true\") {&lt;br&gt;&lt;br&gt;\n**//Set value for authenticate User**        &lt;br&gt; \n                        $rootScope.loggedInUser = null;&lt;br&gt;\n            return;&lt;br&gt;\n                        } &lt;br&gt;\n                        else { &lt;br&gt;      \n**//Set value for authenticate User**        &lt;br&gt;          \n                            $rootScope.loggedInUser = $scope.userLogin.username; &lt;br&gt;\n                            window.location = \"/index.html# &lt;br&gt;/list\";                           \n                        } &lt;br&gt;\n                    }); &lt;br&gt;\n        });&lt;br&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<blockquote>\n  <blockquote>\n    <p>It might help you for authentication and authorization in AngularJs.\n    Below are some interesting links.</p>\n  </blockquote>\n</blockquote>\n\n<p><a href=\"http://code.tutsplus.com/tutorials/token-based-authentication-with-angularjs-nodejs--cms-22543\" rel=\"nofollow\">http://code.tutsplus.com/tutorials/token-based-authentication-with-angularjs-nodejs--cms-22543</a></p>\n\n<p><a href=\"http://www.sitepoint.com/implementing-authentication-angular-applications/\" rel=\"nofollow\">http://www.sitepoint.com/implementing-authentication-angular-applications/</a></p>\n\n<p><a href=\"https://medium.com/opinionated-angularjs/techniques-for-authentication-in-angularjs-applications-7bbf0346acec\" rel=\"nofollow\">https://medium.com/opinionated-angularjs/techniques-for-authentication-in-angularjs-applications-7bbf0346acec</a></p>\n\n<p><a href=\"http://beletsky.net/2013/11/simple-authentication-in-angular-dot-js-app.html\" rel=\"nofollow\">http://beletsky.net/2013/11/simple-authentication-in-angular-dot-js-app.html</a></p>\n\n<p><a href=\"http://www.code-sample.com/2014/12/login-http-authentication-in-angularjs.html\" rel=\"nofollow\">http://www.code-sample.com/2014/12/login-http-authentication-in-angularjs.html</a></p>\n\n<p><a href=\"http://jasonwatmore.com/post/2014/05/26/AngularJS-Basic-HTTP-Authentication-Example.aspx\" rel=\"nofollow\">http://jasonwatmore.com/post/2014/05/26/AngularJS-Basic-HTTP-Authentication-Example.aspx</a> </p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have an AngularJS application created by using yeoman, grunt and bower.</p>\n\n<p>I have a login page that has a controller that checks for authentication. If the credentials are correct I reroute to home page.</p>\n\n<p><strong>app.js</strong></p>\n\n<pre><code>'use strict';\n//Define Routing for app\nangular.module('myApp', []).config(['$routeProvider', '$locationProvider',\n  function($routeProvider,$locationProvider) {\n    $routeProvider\n    .when('/login', {\n        templateUrl: 'login.html',\n        controller: 'LoginController'\n    })\n    .when('/register', {\n        templateUrl: 'register.html',\n        controller: 'RegisterController'\n      })\n    .when('/forgotPassword', {\n        templateUrl: 'forgotpassword.html',\n        controller: 'forgotController'\n      })\n   .when('/home', {\n       templateUrl: 'views/home.html',\n       controller: 'homeController'\n    })\n    .otherwise({\n       redirectTo: '/login'\n    });\n//    $locationProvider.html5Mode(true); //Remove the '#' from URL.\n}]);\n\nangular.module('myApp').factory(\"page\", function($rootScope){\n    var page={};\n    var user={};\n    page.setPage=function(title,bodyClass){\n        $rootScope.pageTitle = title;\n        $rootScope.bodylayout=bodyClass;\n    };\n    page.setUser=function(user){\n        $rootScope.user=user;\n    }\n    return page;\n});\n</code></pre>\n\n<p><strong>LoginControler.js</strong></p>\n\n<pre><code>'use strict';\n\nangular.module('myApp').controller('LoginController', function($scope, $location, $window,page) {\n    page.setPage(\"Login\",\"login-layout\");\n    $scope.user = {};\n    $scope.loginUser=function()\n    {\n        var username=$scope.user.name;\n        var password=$scope.user.password;\n        if(username==\"admin\" &amp;&amp; password==\"admin123\")\n        {\n            page.setUser($scope.user);\n            $location.path( \"/home\" );\n        }\n        else\n        {\n            $scope.message=\"Error\";\n            $scope.messagecolor=\"alert alert-danger\";\n        }\n    }\n});\n</code></pre>\n\n<p>On the home page I have</p>\n\n<pre><code>&lt;span class=\"user-info\"&gt;\n    &lt;small&gt;Welcome,&lt;/small&gt;\n    {{user.name}}\n&lt;/span&gt;\n&lt;span class=\"logout\"&gt;&lt;a href=\"\" ng-click=\"logoutUser()\"&gt;Logout&lt;/a&gt;&lt;/span&gt;\n</code></pre>\n\n<p>In the <code>loginController</code>, I check the login info and if it's successful, I set the user object in the service factory. I don't know whether this is correct or not.</p>\n\n<p>What I need is, When the user is logged in, It sets some value in the user object so that all other pages can get that value.</p>\n\n<p>Whenever any route changes happen, the controller should check if the user is logged in or not. If not, it should reroute to the login page. Also, if the user is already logged in and come back to the page, it should go to home page. The controller should also check the credentials on all of the routes.</p>\n\n<p>I have heard about ng-cookies, but I don't know how to use them.</p>\n\n<p>Many of the examples I saw were not very clear and they use some kind of access roles or something. I don't want that. I only want a login filter.\nCan someone give me some ideas?</p>\n",
            "last_activity_date": 1419001609,
            "question_id": 20969835,
            "score": 17,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "angularjs",
                "angularjs-authentication"
            ],
            "title": "AngularJS- Login and Authentication in each route and controller"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>var options = {\n  types: ['geocode'] //this should work !\n};\nvar autocomplete = new google.maps.places.Autocomplete(input,options);\n</code></pre>\n\n<p>reference to other types: <a href=\"http://code.google.com/apis/maps/documentation/places/supported_types.html#table2\">http://code.google.com/apis/maps/documentation/places/supported_types.html#table2</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can try the country restriction</p>\n\n<pre><code>function initialize() {\n\n var options = {\n  types: ['(cities)'],\n  componentRestrictions: {country: \"us\"}\n };\n\n var input = document.getElementById('searchTextField');\n var autocomplete = new google.maps.places.Autocomplete(input, options);\n}\n</code></pre>\n\n<h2>More info:</h2>\n\n<p><strong><a href=\"http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">ISO 3166-1 alpha-2</a></strong> can be used to restrict results to specific groups. Currently, you can use componentRestrictions to filter by country.<br /><br />\nThe country must be passed as as a two character, ISO 3166-1 Alpha-2 compatible country code.\n<hr />\n<a href=\"http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">Officially assigned country codes</a></p>\n",
                    "is_accepted": true,
                    "score": 76
                },
                {
                    "body": "<p>I've been playing around with the Google Autocomplete API for a bit and here's the best solution I could find for limiting your results to only countries:</p>\n\n<pre><code>var autocomplete = new google.maps.places.Autocomplete(input, options);\nvar result = autocomplete.getPlace();\nconsole.log(result); // take a look at this result object\nconsole.log(result.address_components); // a result has multiple address components\n\nfor(var i = 0; i &lt; result.address_components.length; i += 1) {\n  var addressObj = result.address_components[i];\n  for(var j = 0; j &lt; addressObj.types.length; j += 1) {\n    if (addressObj.types[j] === 'country') {\n      console.log(addressObj.types[j]); // confirm that this is 'country'\n      console.log(addressObj.long_name); // confirm that this is the country name\n    }\n  }\n}\n</code></pre>\n\n<p>If you look at the result object that's returned, you'll see that there's an address_components array which will contain several objects representing different parts of an address. Within each of these objects, it will contain a 'types' array and within this 'types' array, you'll see the different labels associated with an address, including one for country.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Also you will need to zoom and center the map due to your country restrictions!</p>\n\n<p>Just use zoom and center parameters! ;)</p>\n\n<pre><code>function initialize() {\n  var myOptions = {\n    zoom: countries['us'].zoom,\n    center: countries['us'].center,\n    mapTypeControl: false,\n    panControl: false,\n    zoomControl: false,\n    streetViewControl: false\n  };\n\n  ... all other code ...\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am using google autocomplete places javascript to return suggested results for my searchbox , what I need is to only show the city and the country related to the characters entered but google api will give a lot of general places results which I dont need , so how to limit the result to show only city and the country .</p>\n\n<p>I am using the following Example:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;style type=\"text/css\"&gt;\n   body {\n         font-family: sans-serif;\n         font-size: 14px;\n   }\n&lt;/style&gt;\n\n&lt;title&gt;Google Maps JavaScript API v3 Example: Places Autocomplete&lt;/title&gt;\n&lt;script src=\"http://maps.googleapis.com/maps/api/js?sensor=false&amp;amp;libraries=places\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n   function initialize() {\n      var input = document.getElementById('searchTextField');\n      var autocomplete = new google.maps.places.Autocomplete(input);\n   }\n   google.maps.event.addDomListener(window, 'load', initialize);\n&lt;/script&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n   &lt;div&gt;\n      &lt;input id=\"searchTextField\" type=\"text\" size=\"50\" placeholder=\"Enter a location\" autocomplete=\"on\"&gt;\n   &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1426085040,
            "question_id": 8282026,
            "score": 36,
            "tags": [
                "javascript",
                "autocomplete",
                "google-maps-api-3"
            ],
            "title": "How to limit google autocomplete results to City and Country only"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Sorry, this is a lousy answer.  Apparently this has been an <a href=\"http://groups.google.com/group/google-help-dataapi/browse_thread/thread/eceba34c7fbc58e3\" rel=\"nofollow\">issue</a> for almost two years so don't hold your breath. </p>\n\n<p>Here is the official request that you can <a href=\"http://code.google.com/p/gdata-javascript-client/issues/detail?id=7&amp;q=spreadsheet\" rel=\"nofollow\">\"star\"</a></p>\n\n<p>Probably the closest you can come is <a href=\"http://code.google.com/appengine/articles/more_google_data.html\" rel=\"nofollow\">rolling your own service with Google App Engine/Python</a> and exposing whatever subset you need with your own JS library.  Though I'd love to have a better solution myself.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<blockquote>\n  <p><strong><em>edit:</em></strong> This was answered before the google doc's api was released. See <a href=\"http://stackoverflow.com/a/8666573/42082\">Evan Plaice</a>'s answer for more up-to-date\n  information.</p>\n</blockquote>\n\n<p>It looks lke you can, but it's a pain to use.  It involves using the Google data API.</p>\n\n<p><a href=\"http://gdatatips.blogspot.com/2008/12/using-javascript-client-library-w-non.html\" rel=\"nofollow\">http://gdatatips.blogspot.com/2008/12/using-javascript-client-library-w-non.html</a></p>\n\n<p>\"The JavaScript client library has helper methods for Calendar, Contacts, Blogger, and Google Finance. However, you can use it with just about any Google Data API to access authenticated/private feeds. This example uses the DocList API.\"</p>\n\n<p>and an example of writing a gadget that interfaces with spreadsheets: <a href=\"http://code.google.com/apis/spreadsheets/gadgets/\" rel=\"nofollow\">http://code.google.com/apis/spreadsheets/gadgets/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>'JavaScript accessing Google Docs' would be tedious to implement and moreover Google documentation is also not that simple to get it.  I have some good links to share by which you can achieve js access to gdoc:</p>\n\n<blockquote>\n  <p><a href=\"http://code.google.com/apis/documents/docs/3.0/developers_guide_protocol.html#UploadingDocs\" rel=\"nofollow\">http://code.google.com/apis/documents/docs/3.0/developers_guide_protocol.html#UploadingDocs</a></p>\n  \n  <p><a href=\"http://code.google.com/apis/spreadsheets/gadgets/\" rel=\"nofollow\">http://code.google.com/apis/spreadsheets/gadgets/</a></p>\n  \n  <p><a href=\"http://code.google.com/apis/gdata/docs/js.html\" rel=\"nofollow\">http://code.google.com/apis/gdata/docs/js.html</a></p>\n  \n  <p><a href=\"http://www.mail-archive.com/google-help-dataapi@googlegroups.com/msg01924.html\" rel=\"nofollow\">http://www.mail-archive.com/google-help-dataapi@googlegroups.com/msg01924.html</a></p>\n</blockquote>\n\n<p>May be these would help you out..</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I have created a simple javascript library that retrieves google spreadsheet data (if they are published) via the JSON api:</p>\n\n<p><a href=\"https://github.com/mikeymckay/google-spreadsheet-javascript\">https://github.com/mikeymckay/google-spreadsheet-javascript</a></p>\n\n<p>You can see it in action here:</p>\n\n<p><a href=\"http://mikeymckay.github.com/google-spreadsheet-javascript/sample.html\">http://mikeymckay.github.com/google-spreadsheet-javascript/sample.html</a></p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>For this type of thing you should use <a href=\"http://www.google.com/drive/apps.html#fusiontables\" rel=\"nofollow\">Google Fusion Tables</a>. The <a href=\"https://developers.google.com/fusiontables/\" rel=\"nofollow\">API</a> is designed for that purpose. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>Here's the Gist.</strong></p>\n\n<p>You can create a spreadsheet using the <a href=\"http://code.google.com/apis/spreadsheets/data/3.0/developers_guide.html#CreatingSpreadsheets\">Google Docs API</a>. There is currently no way to delete a spreadsheet using the API (read the documentation). Think of Google Docs API as the route to create and look-up documents.</p>\n\n<p>You can add/remove worksheets within the spreadsheet using the <a href=\"http://code.google.com/apis/spreadsheets/data/3.0/developers_guide.html#WorksheetFeeds\">worksheet based feeds</a>.</p>\n\n<p>Updating a spreadsheet is done through either <a href=\"http://code.google.com/apis/spreadsheets/data/3.0/developers_guide.html#ListFeeds\">list based feeds</a> or <a href=\"http://code.google.com/apis/spreadsheets/data/3.0/developers_guide.html#CellFeeds\">cell based feeds</a>.</p>\n\n<p>Reading the spreadsheet can be done through either the Google Spreadsheets APIs mentioned above or by using the <a href=\"http://blog.ouseful.info/2009/05/18/using-google-spreadsheets-as-a-databace-with-the-google-visualisation-api-query-language/\">Google Visualiation API</a> to query the data (which can return results in CSV, JSON, or HTML table format).</p>\n\n<p>Forget jQuery. jQuery is only really valuable if you're traversing the DOM. Since GAS (Google Apps Scripting) doesn't use the DOM jQuery will add no value to your code. Stick to vanilla.</p>\n\n<p>I'm really surprised that nobody has provided this information in an answer yet. Not only <strong>can</strong> it be done, but it's relatively easy to do using vanilla JS. The only exception being the Google Visualization API which is relatively new. The Visualization API also works exclusively through a http querystring URI.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>In this fast changing world most of these link are obsolet.</p>\n\n<p>Now you can use <a href=\"https://developers.google.com/drive/web/\" rel=\"nofollow\"><strong>Google Drive Web APIs</strong></a>:</p>\n\n<ul>\n<li><a href=\"https://developers.google.com/drive/web/quickstart/quickstart-java\" rel=\"nofollow\">Java</a></li>\n<li><a href=\"https://developers.google.com/drive/web/quickstart/quickstart-php\" rel=\"nofollow\">PHP</a></li>\n<li><a href=\"https://developers.google.com/drive/web/quickstart/quickstart-js\" rel=\"nofollow\">Javacript</a></li>\n<li><a href=\"https://developers.google.com/drive/web/quickstart/quickstart-cs\" rel=\"nofollow\">.NET</a></li>\n<li><a href=\"https://developers.google.com/drive/web/quickstart/quickstart-python\" rel=\"nofollow\">Python</a></li>\n<li><a href=\"https://developers.google.com/drive/web/quickstart/quickstart-ruby\" rel=\"nofollow\">Ruby</a></li>\n<li>and others...</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want to access Google Spreadsheets using JavaScript Only. ( no .NET C#, Java )</p>\n\n<p>I came <a href=\"http://code.google.com/apis/gdata/samples.html\">here</a> and was shock to know that there is NO api for JavaScript\nfor accessing Google Spreadsheet.</p>\n\n<p>Please tell me how to access(CREATE/EDIT/DELETE) Google Spreadsheets using JavaScript or any of its frameworks like jQuery,etc or so.</p>\n",
            "last_activity_date": 1419410613,
            "question_id": 4143901,
            "score": 35,
            "tags": [
                "javascript",
                "jquery",
                "google-api",
                "google-spreadsheet",
                "google-data-api"
            ],
            "title": "Access Google Spreadsheet or Google Data API only with Javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I can't say for sure without seeing the entire script, but it's likely to be the <a href=\"http://requirejs.org/docs/api.html#define\"><code>define</code> function from RequireJS</a>, in particular the \"<a href=\"http://requirejs.org/docs/api.html#defdep\">define with dependencies</a>\" form of that function. It is used to define a \"module\":</p>\n\n<blockquote>\n  <p>A module is different from a traditional script file in that it\n  defines a well-scoped object that avoids polluting the global\n  namespace. It can explicitly list its dependencies and get a handle on\n  those dependencies without needing to refer to global objects, but\n  instead receive the dependencies as arguments to the function that\n  defines the module.</p>\n</blockquote>\n\n<p>And the \"define with dependencies\" form of <code>define</code> is described as follows:</p>\n\n<blockquote>\n  <p>If the module has dependencies, the first argument should be an array\n  of dependency names, and the second argument should be a definition\n  function. The function will be called to define the module once all\n  dependencies have loaded. The function should return an object that\n  defines the module.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 88
                }
            ],
            "body": "<p>I have searched high and low for documentation on this but just cannot find anything anywhere.</p>\n\n<p>I am using Aloha and want to use their sidebar prototype to create a new side bar of my own attached to other plugin functionality.</p>\n\n<p>Their sidebar.js starts off with this, but I can't for the life of me find any documentation  that explains what it means.</p>\n\n<pre><code>define( [\n'aloha/core',\n'aloha/jquery',\n'aloha/selection'\n], function ( Aloha, jQuery, Selection, Plugin ) {\n</code></pre>\n\n<p>It then goes on in that wrapper to define a bunch of functions, so <code>vars</code> and some <code>proptotypes</code>- which I can just about get my head around...</p>\n\n<p>Can anyone explain what that is saying to me or give me somewhere where I can find an explanation?</p>\n",
            "last_activity_date": 1417735289,
            "question_id": 10331305,
            "score": 70,
            "tags": [
                "javascript",
                "requirejs",
                "define"
            ],
            "title": "What is define used for in Javascript (aside from the obvious)"
        },
        {
            "answer_count": 18,
            "answers": [
                {
                    "body": "<p>You can fix it in Firefox with a little inspiration from the <a href=\"https://github.com/jquery/jquery/blob/2d275dfd050eaea985b12595ea042fa68ddd1ab8/src/event.js#L652\">jQuery source code</a>:</p>\n\n<pre><code>dragleave: function(e) {\n    var related = e.relatedTarget,\n        inside = false;\n\n    if (related !== this) {\n\n        if (related) {\n            inside = jQuery.contains(this, related);\n        }\n\n        if (!inside) {\n\n            $(this).removeClass('red');\n        }\n    }\n\n}\n</code></pre>\n\n<p>Unfortunately it doesn't work in Chrome because <a href=\"https://developer.mozilla.org/en/DOM/event.relatedTarget\"><code>relatedTarget</code></a> appears not to exist on <code>dragleave</code> events, and I assume you're working in Chrome because your example did't work in Firefox.  <a href=\"http://jsfiddle.net/robertc/HU6Mk/3/\">Here's a version</a> with the above code implemented.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The problem is that the <code>dragleave</code> event is being fired when the mouse goes in front of the child element.</p>\n\n<p>I've tried various methods of checking to see if the <code>e.target</code> element is the same as the <code>this</code> element, but couldn't get any improvement.</p>\n\n<p>The way I fixed this problem was a bit of a hack, but works 100%.</p>\n\n<pre><code>dragleave: function(e) {\n               // Get the location on screen of the element.\n               var rect = this.getBoundingClientRect();\n\n               // Check the mouseEvent coordinates are outside of the rectangle\n               if(e.x &gt; rect.left + rect.width || e.x &lt; rect.left\n               || e.y &gt; rect.top + rect.height || e.y &lt; rect.top) {\n                   $(this).removeClass('red');\n               }\n           }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Not sure if this cross browser, but I tested in Chrome and it solves my problem:</p>\n\n<p>I want to drag and drop a file over entire page, but my dragleave is fired when i drag over child element.  My fix was to look at the x and y of mouse:</p>\n\n<p>i have a div that overlays my entire page, when the page loads i hide it.</p>\n\n<p>when you drag over document i show it, and when you drop on the parent it handles it, and when you leave the parent i check x and y.</p>\n\n<pre><code>$('#draganddrop-wrapper').hide();\n\n$(document).bind('dragenter', function(event) {\n    $('#draganddrop-wrapper').fadeIn(500);\n    return false;\n});\n\n$(\"#draganddrop-wrapper\").bind('dragover', function(event) {\n    return false;\n}).bind('dragleave', function(event) {\n    if( window.event.pageX == 0 || window.event.pageY == 0 ) {\n        $(this).fadeOut(500);\n        return false;\n    }\n}).bind('drop', function(event) {\n    handleDrop(event);\n\n    $(this).fadeOut(500);\n    return false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>And here it goes, a solution for Chrome:</p>\n\n<pre><code>.bind('dragleave', function(event) {\n                    var rect = this.getBoundingClientRect();\n                    var getXY = function getCursorPosition(event) {\n                        var x, y;\n\n                        if (typeof event.clientX === 'undefined') {\n                            // try touch screen\n                            x = event.pageX + document.documentElement.scrollLeft;\n                            y = event.pageY + document.documentElement.scrollTop;\n                        } else {\n                            x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n                            y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n                        }\n\n                        return { x: x, y : y };\n                    };\n\n                    var e = getXY(event.originalEvent);\n\n                    // Check the mouseEvent coordinates are outside of the rectangle\n                    if (e.x &gt; rect.left + rect.width - 1 || e.x &lt; rect.left || e.y &gt; rect.top + rect.height - 1 || e.y &lt; rect.top) {\n                        console.log('Drag is really out of area!');\n                    }\n                })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Here is another approach based on the timing of events.</p>\n\n<p>The <code>dragenter</code> event dispatched from the child element can be captured by the parent element and it always occurs before the <code>dragleave</code>. The timing between these two events is really short, shorter than any possible human mouse action. So, the idea is to memorize the time when a <code>dragenter</code> happens and filter <code>dragleave</code> events that occurs \"not too quickly\" after ...</p>\n\n<p>This short example works on Chrome and Firefox:</p>\n\n<pre><code>var node = document.getElementById('someNodeId'),\n    on   = function(elem, evt, fn) { elem.addEventListener(evt, fn, false) },\n    time = 0;\n\non(node, 'dragenter', function(e) {\n    e.preventDefault();\n    time = (new Date).getTime();\n    // Drag start\n})\n\non(node, 'dragleave', function(e) {\n    e.preventDefault();\n    if ((new Date).getTime() - time &gt; 5) {\n         // Drag end\n    }\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here, the simplest Cross-Browser solution (seriously):</p>\n\n<p><a href=\"http://jsfiddle.net/pk7_diego/Wyr5K/18/\">jsfiddle</a> &lt;-- try dragging some file inside the box</p>\n\n<p>You can do something like that:</p>\n\n<pre><code>var dropZone= document.getElementById('box');\nvar dropMask = document.getElementById('drop-mask');\n\ndropZone.addEventListener('dragover', drag_over, false);\ndropMask.addEventListener('dragleave', drag_leave, false);\ndropMask.addEventListener('drop', drag_drop, false);\n</code></pre>\n\n<p>In a few words, you create a \"mask\" inside the dropzone, with width &amp; height inherited, position absolute, that will just show when the dragover starts.<br>\nSo, after showing that mask, you can do the trick by attaching the others dragleave &amp; drop events on it.</p>\n\n<p>After leaving or dropping, you just hide the mask again. <br>\nSimple and without complications.</p>\n\n<p>(Obs.: Greg Pettit advice -- You must be sure that the mask hover the entire box, including the border)</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>I've stumbled into the same problem and here's my solution - which I think is much easier then above. I'm not sure if it's crossbrowser (might depend on even bubbling order)</p>\n\n<p>I'll use jQuery for simplicity, but solution should be framework independent.</p>\n\n<p>The event bubbles to parent either way so given:</p>\n\n<pre><code>&lt;div class=\"parent\"&gt;Parent &lt;span&gt;Child&lt;/span&gt;&lt;/div&gt;\n</code></pre>\n\n<p>We attach events</p>\n\n<pre><code>el = $('.parent')\nsetHover = function(){ el.addClass('hovered') }\nonEnter  = function(){ setTimeout(setHover, 1) }\nonLeave  = function(){ el.removeClass('hovered') } \n$('.parent').bind('dragenter', onEnter).bind('dragleave', onLeave)\n</code></pre>\n\n<p>And that's about it. :) it works because even though onEnter on child fires before onLeave on parent, we delay it slightly reversing the order, so class is removed first then reaplied after a milisecond.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>After spending so many hours I got that suggestion working exactly as intended. I wanted to provide a cue only when files were dragged over, and document dragover, dragleave was causing painful flickers on Chrome browser.</p>\n\n<p>This is how I solved it, also throwing in proper cues for user.</p>\n\n<pre><code>$(document).on('dragstart dragenter dragover', function(event) {    \n    // Only file drag-n-drops allowed, http://jsfiddle.net/guYWx/16/\n    if ($.inArray('Files', event.originalEvent.dataTransfer.types) &gt; -1) {\n        // Needed to allow effectAllowed, dropEffect to take effect\n        event.stopPropagation();\n        // Needed to allow effectAllowed, dropEffect to take effect\n        event.preventDefault();\n\n        $('.dropzone').addClass('dropzone-hilight').show();     // Hilight the drop zone\n        dropZoneVisible= true;\n\n        // http://www.html5rocks.com/en/tutorials/dnd/basics/\n        // http://api.jquery.com/category/events/event-object/\n        event.originalEvent.dataTransfer.effectAllowed= 'none';\n        event.originalEvent.dataTransfer.dropEffect= 'none';\n\n         // .dropzone .message\n        if($(event.target).hasClass('dropzone') || $(event.target).hasClass('message')) {\n            event.originalEvent.dataTransfer.effectAllowed= 'copyMove';\n            event.originalEvent.dataTransfer.dropEffect= 'move';\n        } \n    }\n}).on('drop dragleave dragend', function (event) {  \n    dropZoneVisible= false;\n\n    clearTimeout(dropZoneTimer);\n    dropZoneTimer= setTimeout( function(){\n        if( !dropZoneVisible ) {\n            $('.dropzone').hide().removeClass('dropzone-hilight'); \n        }\n    }, dropZoneHideDelay); // dropZoneHideDelay= 70, but anything above 50 is better\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>An alternate working solution, a little simpler.</p>\n\n<pre><code>//Note: Due to a bug with Chrome the 'dragleave' event is fired when hovering the dropzone, then\n//      we must check the mouse coordinates to be sure that the event was fired only when \n//      leaving the window.\n//Facts:\n//  - [Firefox/IE] e.originalEvent.clientX &lt; 0 when the mouse is outside the window\n//  - [Firefox/IE] e.originalEvent.clientY &lt; 0 when the mouse is outside the window\n//  - [Chrome/Opera] e.originalEvent.clientX == 0 when the mouse is outside the window\n//  - [Chrome/Opera] e.originalEvent.clientY == 0 when the mouse is outside the window\n//  - [Opera(12.14)] e.originalEvent.clientX and e.originalEvent.clientY never get\n//                   zeroed if the mouse leaves the windows too quickly.\nif (e.originalEvent.clientX &lt;= 0 || e.originalEvent.clientY &lt;= 0) {\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The \"right\" way to solve this issue is to disable pointer events on child elements of the drop target (as in @H.D.'s answer). <a href=\"http://jsfiddle.net/theodorejb/4ZGvv/\">Here's a jsFiddle I created which demonstrates this technique</a>. Unfortunately, this doesn't work in versions of Internet Explorer prior to IE11, since they <a href=\"http://caniuse.com/pointer-events\">didn't support pointer events</a>.</p>\n\n<p>Luckily, I was able to come up with a workaround which <em>does</em> work in old versions of IE. Basically, it involves identifying and ignoring <code>dragleave</code> events which occur when dragging over child elements. Because the <code>dragenter</code> event is fired on child nodes before the <code>dragleave</code> event on the parent, separate event listeners can be added to each child node which add or remove an \"ignore-drag-leave\" class from the drop target. Then the drop target's <code>dragleave</code> event listener can simply ignore calls which occur when this class exists. Here's a <a href=\"http://jsfiddle.net/theodorejb/j2fDt/8/\">jsFiddle demonstrating this workaround</a>. It is tested and working in Chrome, Firefox, and IE8+.</p>\n\n<p><strong>Update:</strong></p>\n\n<p>I created <a href=\"http://jsfiddle.net/theodorejb/j2fDt/9/\">a jsFiddle demonstrating a combined solution</a> using feature detection, where pointer events are used if supported (currently Chrome, Firefox, and IE11), and the browser falls back to adding events to child nodes if pointer event support isn't available (IE8-10).</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<blockquote>\n  <p>Is it possible to prevent dragleave from firing when dragging into a child element?</p>\n</blockquote>\n\n<p>Yes.</p>\n\n<pre><code>#drop * {pointer-events: none;}\n</code></pre>\n\n<p>That CSS seem to be enough for Chrome.</p>\n\n<p>While using it with Firefox, the #drop shouldn't have text nodes directly (else there's a strange <a href=\"http://stackoverflow.com/questions/14194324/firefox-firing-dragleave-when-dragging-over-text\">issue where a element \"leave it to itself\"</a>), so I suggest to leave it with only one element (e.g., use a div inside #drop to put everything inside)</p>\n\n<p><a href=\"http://jsfiddle.net/djsbellini/6yZV6/1/\" rel=\"nofollow\">Here's a jsfiddle</a> solving the <a href=\"http://jsfiddle.net/pimvdb/HU6Mk/1/\" rel=\"nofollow\">original question (broken) example</a>.</p>\n\n<p>I've also made a <a href=\"http://jsfiddle.net/djsbellini/yR8t8/\" rel=\"nofollow\">simplified version</a> forked from the @Theodore Brown example, but based only in this CSS.</p>\n\n<p>Not all browsers have this CSS implemented, though:\n<a href=\"http://caniuse.com/pointer-events\" rel=\"nofollow\">http://caniuse.com/pointer-events</a></p>\n\n<p>Seeing the Facebook source code I could find this <code>pointer-events: none;</code> several times, however it's probably used together with graceful degradation fallbacks. At least it's so simple and solves the problem for a lot of environments.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've written a little library called <a href=\"http://bensmithett.github.io/dragster/\" rel=\"nofollow\">Dragster</a> to handle this exact issue, works everywhere except silently doing nothing in IE (which doesn't support DOM Event Constructors, but it'd be pretty easy to write something similar using jQuery's custom events)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>pimvdb..</p>\n\n<p>Why don't you try out using <em>drop</em> instead of <em>dragleave</em>. It worked for me. hope this solves your problem. </p>\n\n<p>Please check the jsFiddle : <a href=\"http://jsfiddle.net/HU6Mk/118/\" rel=\"nofollow\">http://jsfiddle.net/HU6Mk/118/</a></p>\n\n<pre><code>$('#drop').bind({\n                 dragenter: function() {\n                     $(this).addClass('red');\n                 },\n\n                 drop: function() {\n                     $(this).removeClass('red');\n                 }\n                });\n\n$('#drag').bind({\n                 dragstart: function(e) {\n                     e.allowedEffect = \"copy\";\n                     e.setData(\"text/plain\", \"test\");\n                 }\n                });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You just need to keep a reference counter, increment it when you get a dragenter, decrement when you get a dragleave.  When the counter is at 0 - remove the class.</p>\n\n<pre><code>var counter = 0;\n\n$('#drop').bind({\n             dragenter: function() {\n                 counter++;\n                 $(this).addClass('red');\n             },\n\n             dragleave: function() {\n                 counter--;\n                 if (counter === 0) { \n                     $(this).removeClass('red');\n                 }\n             }\n            });\n</code></pre>\n\n<p>You can run it <a href=\"http://jsfiddle.net/HU6Mk/145/\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>I was having the same issue and tried to use pk7s solution. It worked but it could be done a little bit better without any extra dom elements.</p>\n\n<p>Basicly the idea is same - add an extra unvisible overlay over droppable area. Only lets do this without any extra dom elements. Here is the part were CSS pseudo-elements come to play.</p>\n\n<h2>Javascript</h2>\n\n<pre><code>var dragOver = function (e) {\n    e.preventDefault();\n    this.classList.add('overlay');\n};\n\nvar dragLeave = function (e) {\n    this.classList.remove('overlay');\n};\n\n\nvar dragDrop = function (e) {\n    this.classList.remove('overlay');\n    window.alert('Dropped');\n};\n\nvar dropArea = document.getElementById('box');\n\ndropArea.addEventListener('dragover', dragOver, false);\ndropArea.addEventListener('dragleave', dragLeave, false);\ndropArea.addEventListener('drop', dragDrop, false);\n</code></pre>\n\n<h2>CSS</h2>\n\n<p>This after rule will create a fully covered overlay for droppable area.</p>\n\n<pre><code>#box.overlay:after {\n    content:'';\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: 1;\n}\n</code></pre>\n\n<p>Here is the full solution: <a href=\"http://jsfiddle.net/F6GDq/8/\" rel=\"nofollow\">http://jsfiddle.net/F6GDq/8/</a></p>\n\n<p>I hope it helps anyone with the same problem.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use a timeout with a <code>transitioning</code> flag and listen on the top element.  <code>dragenter</code> / <code>dragleave</code> from child events will bubble up to the container.</p>\n\n<p>Since <code>dragenter</code> on the child element fires before <code>dragleave</code> of the container, we will set the flag show as transitioning for 1ms... the <code>dragleave</code> listener will check for the flag before the 1ms is up.</p>\n\n<p>The flag will be true only during transitions to child elements, and will not be true when transitioning to a parent element (of the container)</p>\n\n<pre><code>var $el = $('#drop-container'),\n    transitioning = false;\n\n$el.on('dragenter', function(e) {\n\n  // temporarily set the transitioning flag for 1 ms\n  transitioning = true;\n  setTimeout(function() {\n    transitioning = false;\n  }, 1);\n\n  $el.toggleClass('dragging', true);\n\n  e.preventDefault();\n  e.stopPropagation();\n});\n\n// dragleave fires immediately after dragenter, before 1ms timeout\n$el.on('dragleave', function(e) {\n\n  // check for transitioning flag to determine if were transitioning to a child element\n  // if not transitioning, we are leaving the container element\n  if (transitioning === false) {\n    $el.toggleClass('dragging', false);\n  }\n\n  e.preventDefault();\n  e.stopPropagation();\n});\n\n// to allow drop event listener to work\n$el.on('dragover', function(e) {\n  e.preventDefault();\n  e.stopPropagation();\n});\n\n$el.on('drop', function(e) {\n  alert(\"drop!\");\n});\n</code></pre>\n\n<p>jsfiddle: <a href=\"http://jsfiddle.net/ilovett/U7mJj/\" rel=\"nofollow\">http://jsfiddle.net/ilovett/U7mJj/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It has been quite some time after this question is asked and a lot of solutions (including ugly hacks) are provided. </p>\n\n<p>I managed to fix the same problem I had recently thanks to the answer in this <a href=\"http://stackoverflow.com/questions/10867506/dragleave-of-parent-element-fires-when-dragging-over-children-elements\"><strong>answer</strong></a> and thought it may be helpful to someone who comes through to this page.\nThe whole idea is to store the <code>evenet.target</code> in <code>ondrageenter</code> everytime it is called on any of the parent or children elementes. Then in <code>ondragleave</code> check if the current target (<code>event.target</code>) is equal to the object you stored in <code>ondragenter</code>.</p>\n\n<p>The only case these two are matched is when your drag is leaving the browser window.</p>\n\n<p>The reason that this works fine is when you the mouse leave an element (say <code>el</code>) and enters another element(say <code>el2</code>), first the <code>el1.ondragenter</code> is called before <code>el2.ondragleave</code>. And in <code>ondragenter</code>  and <code>ondragleave</code> the <code>event.target</code> is <code>''</code>.</p>\n\n<p>Here is my working sample. I have tested it on IE9+, Chrome, Firefox and Safari.</p>\n\n<pre><code>(function() {\n    var bodyEl = document.body;\n    var flupDiv = document.getElementById('file-drop-area');\n\n    flupDiv.onclick = function(event){\n        console.log('HEy! some one clicked me!');\n    };\n\n    var enterTarget = null;\n\n    document.ondragenter = function(event) {\n        console.log('on drag enter: ' + event.target.id);\n        enterTarget = event.target;\n        event.stopPropagation();\n        event.preventDefault();\n        flupDiv.className = 'flup-drag-on-top';\n        return false;\n    };\n\n    document.ondragleave = function(event) {\n        console.log('on drag leave: currentTarget: ' + event.target.id + ', old target: ' + enterTarget.id);\n        //Only if the two target are equal it means the drag has left the window\n        if (enterTarget == event.target){\n            event.stopPropagation();\n            event.preventDefault();\n            flupDiv.className = 'flup-no-drag';         \n        }\n    };\n    document.ondrop = function(event) {\n        console.log('on drop: ' + event.target.id);\n        event.stopPropagation();\n        event.preventDefault();\n        flupDiv.className = 'flup-no-drag';\n        return false;\n    };\n})();\n</code></pre>\n\n<p>And here is the simple html page:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;title&gt;Multiple File Uploader&lt;/title&gt;\n&lt;link rel=\"stylesheet\" href=\"my.css\" /&gt;\n&lt;/head&gt;\n&lt;body id=\"bodyDiv\"&gt;\n    &lt;div id=\"cntnr\" class=\"flup-container\"&gt;\n        &lt;div id=\"file-drop-area\" class=\"flup-no-drag\"&gt;blah blah&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;script src=\"my.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>With proper styling what I have done is to make the inner div (#file-drop-area) much bigger whenever a file is dragged into the screen so that the user can easily drop the files into the proper place.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had a similar problem \u2014 my code for hiding the dropzone on dragleave event for body was fired contatantly when hovering child elements making the dropzone flicker in Google Chrome.</p>\n\n<p>I was able to solve this by scheduling the function for hiding dropzone instead of calling it right away. Then, if another dragover or dragleave is fired, the scheduled function call is cancelled.</p>\n\n<pre><code>body.addEventListener('dragover', function() {\n    clearTimeout(body_dragleave_timeout);\n    show_dropzone();\n}, false);\n\nbody.addEventListener('dragleave', function() {\n    clearTimeout(body_dragleave_timeout);\n    body_dragleave_timeout = setTimeout(show_upload_form, 100);\n}, false);\n\ndropzone.addEventListener('dragover', function(event) {\n    event.preventDefault();\n    dropzone.addClass(\"hover\");\n}, false);\n\ndropzone.addEventListener('dragleave', function(event) {\n    dropzone.removeClass(\"hover\");\n}, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The problem I'm having is that the <code>dragleave</code> event of an element is fired when hovering a child element of that element. Also, <code>dragenter</code> is not fired when hovering back the parent element again.</p>\n\n<p>I made a simplified fiddle: <a href=\"http://jsfiddle.net/pimvdb/HU6Mk/1/\">http://jsfiddle.net/pimvdb/HU6Mk/1/</a>.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"drag\" draggable=\"true\"&gt;drag me&lt;/div&gt;\n\n&lt;hr&gt;\n\n&lt;div id=\"drop\"&gt;\n    drop here\n    &lt;p&gt;child&lt;/p&gt;\n    parent\n&lt;/div&gt;\n</code></pre>\n\n<p>with the following JavaScript:</p>\n\n<pre><code>$('#drop').bind({\n                 dragenter: function() {\n                     $(this).addClass('red');\n                 },\n\n                 dragleave: function() {\n                     $(this).removeClass('red');\n                 }\n                });\n\n$('#drag').bind({\n                 dragstart: function(e) {\n                     e.allowedEffect = \"copy\";\n                     e.setData(\"text/plain\", \"test\");\n                 }\n                });\n</code></pre>\n\n<p>What it is supposed to do is notifying the user by making the drop <code>div</code> red when dragging something there. This works, but if you drag into the <code>p</code> child, the <code>dragleave</code> is fired and the <code>div</code> isn't red anymore. Moving back to the drop <code>div</code> also doesn't make it red again. It's necessary to move completely out of the drop <code>div</code> and drag back into it again to make it red.</p>\n\n<p>Is it possible to prevent <code>dragleave</code> from firing when dragging into a child element?</p>\n",
            "last_activity_date": 1422979036,
            "question_id": 7110353,
            "score": 64,
            "tags": [
                "javascript",
                "jquery",
                "html5",
                "javascript-events",
                "drag-and-drop"
            ],
            "title": "HTML5 dragleave fired when hovering a child element"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>No not all browsers support SVG.  I believe IE needs a plugin to use them.   Since svg is just an xml document, JavaScript can create them.  I am not certain about loading it into the browser though.  I haven't tried that. </p>\n\n<p>This link has information about javascript and svg:</p>\n\n<p><a href=\"http://srufaculty.sru.edu/david.dailey/svg/SVGAnimations.htm\" rel=\"nofollow\">http://srufaculty.sru.edu/david.dailey/svg/SVGAnimations.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Have a look at <a href=\"http://en.wikipedia.org/wiki/Comparison_of_web_browsers#Image_format_support\" rel=\"nofollow\">this list on Wikipedia</a> about which browsers support SVG. It also provides links to more details in the footnotes. Firefox for example supports basic SVG, but at the moment lacks most animation features.</p>\n\n<p>A tutorial about how to create SVG objects using Javascript can be found <a href=\"http://softwareas.com/ajaxjavascript-8-ways-to-create-graphics-on-the-fly\" rel=\"nofollow\">here</a>:</p>\n\n<pre><code>var svgns = \"http://www.w3.org/2000/svg\";\nvar svgDocument = evt.target.ownerDocument;\nvar shape = svgDocument.createElementNS(svgns, \"circle\");\nshape.setAttributeNS(null, \"cx\", 25);\nshape.setAttributeNS(null, \"cy\", 25);\nshape.setAttributeNS(null, \"r\",  20);\nshape.setAttributeNS(null, \"fill\", \"green\"); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>There's a jQuery plugin that allows you to manipulate SVG via Javascript:</p>\n\n<p><a href=\"http://plugins.jquery.com/project/svg\" rel=\"nofollow\">http://plugins.jquery.com/project/svg</a></p>\n\n<p>From its intro:</p>\n\n<blockquote>\n  <p>Supported natively in Firefox, Opera,\n  and Safari and via the Adobe SVG\n  viewer or Renesis player in IE, SVG\n  lets you display graphics within your\n  Web pages. Now you can easily drive\n  the SVG canvas from your JavaScript\n  code.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To do it cross-browser, I strongly recommend <a href=\"http://raphaeljs.com\" rel=\"nofollow\">RaphaelJS</a>.  It has a hell of a good API and does VML in IE, that can't understand SVG.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>IE needs a plugin to display SVG.  Most common is the one available for download by Adobe; however, Adobe no longer supports or develops it.  Firefox, Opera, Chrome, Safari, will all display basic SVG fine but will run into quirks if advanced features are used, as support is incomplete.  Firefox has no support for declarative animation.</p>\n\n<p>SVG elements can be created with javascript as follows:</p>\n\n<pre><code>// \"circle\" may be any tag name\nvar shape = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n// Set any attributes as desired\nshape.setAttribute(\"cx\", 25);\nshape.setAttribute(\"cy\", 25);\nshape.setAttribute(\"r\",  20);\nshape.setAttribute(\"fill\", \"green\");\n// Add to a parent node; document.documentElement should be the root svg element.\n// Acquiring a parent element with document.getElementById() would be safest.\ndocument.documentElement.appendChild(shape);\n</code></pre>\n\n<p>The <a href=\"http://www.w3.org/TR/SVG11/\">SVG specification</a> describes the DOM interfaces for all SVG elements.  For example, the SVGCircleElement, which is created above, has <code>cx</code>, <code>cy</code>, and <code>r</code> attributes for the center point and radius, which can be directly accessed. These are the SVGAnimatedLength attributes, which have a <code>baseVal</code> property for the normal value, and an <code>animVal</code> property for the animated value. Browsers at the moment are not reliably supporting the <code>animVal</code> property. <code>baseVal</code> is an SVGLength, whose value is set by the <code>value</code> property.</p>\n\n<p>Hence, for script animations, one can also set these DOM properties to control SVG. The following code should be equivalent to the above code:</p>\n\n<pre><code>var shape = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\nshape.cx.baseVal.value = 25;\nshape.cy.baseVal.value = 25;\nshape.r.baseVal.value = 20;\nshape.setAttribute(\"fill\", \"green\");\ndocument.documentElement.appendChild(shape);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I like <a href=\"http://keith-wood.name/svg.html\"><strong>jQuery SVG</strong></a> library very much. It helps me every time I need to manipulate with SVG. It really facilitate the work with SVG from JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>All modern browsers except IE support SVG</p>\n\n<p>Here is a tutorial that provides step by step guide on how to work with SVG using javascript:</p>\n\n<blockquote>\n  <p><a href=\"http://blazingcloud.net/2010/09/17/svg-scripting-with-javascript-part-1-simple-circle/\">SVG Scripting with JavaScript Part 1: Simple Circle</a></p>\n</blockquote>\n\n<p>Like <a href=\"http://stackoverflow.com/questions/1034712/creating-svg-graphics-using-javascript/1040307#1040307\">Boldewyn</a> has said already if you want </p>\n\n<blockquote>\n  <p>To do it cross-browser, I strongly recommend RaphaelJS: <a href=\"http://raphaeljs.com\">rapaheljs.com</a></p>\n</blockquote>\n\n<p>Although right now I feel the size of the library is too large. It has many great features some of which you might not need. </p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>IE 9 now supports basic SVG 1.1. It was about time, although IE9 still is far behind Google Chrome and Firefox SVG support. </p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/ie/hh410107.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/ie/hh410107.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://d3js.org/\" rel=\"nofollow\">You can use d3.js. It is easy to use and powerful.</a></p>\n\n<p><code>D3.js</code> is a JavaScript library for manipulating documents based on data. D3 helps you bring data to life using HTML, SVG and CSS.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>So if you want to build your SVG stuff piece by piece in JS, then don't just use <code>createElement()</code>, those won't draw, use this instead:</p>\n\n<pre><code>var ci = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I create SVG graphics using Javascript? Do all browsers support SVG?</p>\n",
            "last_activity_date": 1424442224,
            "question_id": 1034712,
            "score": 56,
            "tags": [
                "javascript",
                "graphics",
                "svg"
            ],
            "title": "Creating SVG graphics using javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use the <a href=\"https://github.com/Pasvaz/bindonce\">bindonce module</a>.  You'll need to include the JS file and add it as a dependency to your app module:</p>\n\n<pre><code>var myApp = angular.module(\"myApp\", ['pasvaz.bindonce']);\n</code></pre>\n\n<p>This library allows you to render items that are bound only once \u2014 when they are first initialized.  Any further updates to those values will be ignored.  It's a great way to reduce the number of watches on the page for things that won't change after they are rendered.</p>\n\n<p>Usage example:</p>\n\n<pre><code>&lt;div bo-text=\"value\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>When used like this, the property under <code>value</code> will be set once it is available, but then the watch will be disabled.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p><strong>Angular 1.3+</strong></p>\n\n<p>In 1.3, Angular has supported this using the following syntax.</p>\n\n<pre><code>&lt;div&gt;{{::message}}&lt;/div&gt;\n</code></pre>\n\n<p>As mentioned in <a href=\"http://stackoverflow.com/a/24043072/1907358\">this answer</a>.</p>\n\n<hr>\n\n<p><strong>Angular 1.2 and below</strong></p>\n\n<p>This is really simple and doesn't need a plugin. Check this out.</p>\n\n<p>This tiny directive will accomplish what you are trying to achieve.</p>\n\n<pre><code>app.directive('bindOnce', function() {\n    return {\n        scope: true,\n        link: function( $scope ) {\n            setTimeout(function() {\n                $scope.$destroy();\n            }, 0);\n        }\n    }\n});\n</code></pre>\n\n<p>You can bind once like this </p>\n\n<pre><code>&lt;div bind-once&gt;I bind once - {{message}}&lt;/div&gt;\n</code></pre>\n\n<p>You can bind like normal </p>\n\n<pre><code>&lt;div ng-bind=\"message\" bind-once&gt;&lt;/div&gt;\n</code></pre>\n\n<p><strong>Demo: <a href=\"http://jsfiddle.net/fffnb/\">http://jsfiddle.net/fffnb/</a></strong></p>\n\n<p>Some of you may be using angular batarang, and as mentioned in the comments if you use this directive the element still shows as binding when it is not, I am pretty sure this has something to do with the classes that are attached to the element so try this, it should work <em>(not tested)</em>. Let me know in the comments if it worked for you.</p>\n\n<pre><code>app.directive('bindOnce', function() {\n    return {\n        scope: true,\n        link: function( $scope, $element ) {\n            setTimeout(function() {\n                $scope.$destroy();\n                $element.removeClass('ng-binding ng-scope');\n            }, 0);\n        }\n    }\n});\n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/questions/18790333/angular-js-render-value-without-data-binding/18791503?noredirect=1#comment35565641_18791503\">@x0b</a>: If you have OCD and you want to remove the empty <code>class</code> attribute do this </p>\n\n<pre><code>!$element.attr('class') &amp;&amp; $element.removeAttr('class')\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 81
                },
                {
                    "body": "<p>Comparison between @OverZealous and @Connor answers :</p>\n\n<p>With the traditional ngRepeat of angular : 15s for 2000 rows and 420mo of RAM (<a href=\"http://plnkr.co/edit/jwrHVb?p=preview\">Plunker</a>)</p>\n\n<p>With ngRepeat and the module of @OverZealous : 7s for 2000 rows and 240mo of RAM(<a href=\"http://plnkr.co/edit/0DGOrk?p=preview\">Plunker</a>)</p>\n\n<p>With ngRepeat and the directive of @Connor : 8s for 2000 rows and 500mo of RAM (<a href=\"http://plnkr.co/edit/SDn0LT18VwHhhA67wMfX?p=preview\">Plunker</a>)</p>\n\n<p>I made my tests with Google Chrome 32.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>It looks like Angular 1.3 (starting with beta 10) has one-time binding built in:</p>\n\n<p><a href=\"https://docs.angularjs.org/guide/expression#one-time-binding\" rel=\"nofollow\">https://docs.angularjs.org/guide/expression#one-time-binding</a></p>\n\n<blockquote>\n  <p>One-time binding</p>\n  \n  <p>An expression that starts with :: is considered a one-time expression.\n  One-time expressions will stop recalculating once they are stable,\n  which happens after the first digest if the expression result is a\n  non-undefined value (see value stabilization algorithm below).</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>As an alternative, there is <a href=\"https://github.com/tadeuszwojcik/angular-once\" rel=\"nofollow\"><code>angular-once</code></a> package:</p>\n\n<blockquote>\n  <p>If you use AngularJS, have performance issues and need to display lots\n  of readonly data, this project is for you!</p>\n</blockquote>\n\n<p><code>angular-once</code> was actually inspired by <code>bindonce</code> and provides similar <code>once-*</code> attributes:</p>\n\n<pre><code>&lt;ul&gt;\n    &lt;li ng-repeat=\"user in users\"&gt;\n      &lt;a once-href=\"user.profileUrl\" once-text=\"user.name\"&gt;&lt;/a&gt;\n        &lt;a once-href=\"user.profileUrl\"&gt;&lt;img once-src=\"user.avatarUrl\"&gt;&lt;/a&gt;\n        &lt;div once-class=\"{'formatted': user.description}\" once-bind=\"user.description\"&gt;&lt;/div&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In AngularJS, how can I render a value without 2-way data binding? One may want to do this for performance reasons, or even rendering a value at a given point in time.</p>\n\n<p><strong>The following examples both use data binding:</strong></p>\n\n<p><code>&lt;div&gt;{{value}}&lt;/div&gt;</code></p>\n\n<p><code>&lt;div data-ng-bind=\"value\"&gt;&lt;/div&gt;</code></p>\n\n<p>How do I render <code>value</code> <strong>without any</strong> data binding?</p>\n",
            "last_activity_date": 1425346626,
            "question_id": 18790333,
            "score": 54,
            "tags": [
                "javascript",
                "angularjs",
                "data-binding"
            ],
            "title": "Render value without data-binding"
        }
    ]
}
