{
    "items": [
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I would suggest having a look at a JS library like jQuery or Prototype. They make this kind of thing easy.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It'll be pretty close to this:</p>\n\n<pre><code>function find_index(options, value) {\n    for (var i=0; i&lt;options.length; i++) {\n        if (options[i].value == value) {\n            return i;\n        }\n    }\n    return -1\n}\n\nfunction set_selected_option(select_element, value) {\n    var index = find_index(select_element.options, value)\n    if (index != -1){\n        select_element.selectedIndex = index;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'd second Toby's answer. Still, if you can't use an existing library for some reason, it's easy enough to do in plain javascript:</p>\n\n<pre><code>function selectByValue(el, value) {\n    for (var i=0, len=options.length; i&lt;len; i++) {\n        if (el.options[i].value == value) {\n            el.selectedIndex = i;\n            break;\n        }\n    }\n}\n</code></pre>\n\n<p>If you'd like to use the text of the option instead, replace <code>.value</code> with <code>.text</code>. I assume you meant \"text\" since select options don't have a \"name\" property.</p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I have a select box that is populated with all the available options it can have.  When a user clicks on a record in my application, I get an xml response that includes the value of the option for that record.  I'd like to use javascript to set the selected index for that particular option in the select box without having to reload the select box.  Is there an easy way to find the index of an option based on the value or name of the option?  Then, I could set that option as the selected index.  </p>\n",
            "last_activity_date": 1314998121,
            "question_id": 2143197,
            "score": 0,
            "tags": [
                "javascript"
            ],
            "title": "How to select an option in a select box by the value of the option using Javascript?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>you could send a tiny ajax call to your server every 5 seconds. and users that doesn't do this aren't in the room any more</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Sorry, there is no reliable way of doing this, that's the way HTTP was built - it's a \"pull\"  protocol. \nThe only solution I can think of is that \"valid\"  and logged in clients must query the server in a very small interval. If they don't, they're logged out.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>If you can't modify the JS code for some reason, there really is little you can do. Only thing you <em>can</em> do with PHP is to check if there's been for example over 15 minutes from the last activity, the user has left. But this is in no way a smart thing to do &ndash; a user might just sit and watch the conversation for 15 minutes.</p>\n\n<p>Only proper way to do is using AJAX polling in set intervals if you want to do it reliably.</p>\n\n<p>You noted that a user polls the server for new messages constantly, can't you use that to detect if user has left?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You answered your own question: if you don't detect a request for new messages from a user over a given length of time (more than a few seconds), then they left the room.</p>\n\n<p>The nature of HTTP dictates that you need to do some AJAX type of communication. If you don't want to listen for the \"give me more messages\" request (not sure why you wouldn't want to), then build in a heartbeat type communication.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Maintain a list of active users on the server, as well as the last time they connected to the chat to request new messages.</p>\n\n<p>When a user connects to check for messages update their time.</p>\n\n<p>Whenever your code runs iterate through this list and remove users who haven't connected in too long.</p>\n\n<p>The only failure is that if the number of users in the channel drops to zero, the server wont notice until someone comes back.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To address your edit, you can ignore client termination by using <a href=\"http://php.net/manual/en/function.ignore-user-abort.php\" rel=\"nofollow\">ignore_user_abort</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Using javascript u can do the following :</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nwindow.onunload = unloadPage;\n\nfunction unloadPage()\n{\n alert(\"unload event detected!\");\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>Make the necessary ajax call on the unloadPage() function to ur PHP Script</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Request a PHP script that goes a little something like this, with AJAX:</p>\n\n<pre><code>register_shutdown_function(\"disconnect_current_user\");\nheader('Content-type: multipart/x-mixed-replace; boundary=\"pulse\"');\n\nwhile(true) {\n   echo \"--pulse\\r\\n.\\r\\n\";\n   sleep(2);\n}\n</code></pre>\n\n<p>This way, you won't constantly be opening/closing connections.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The answers to all the questions asked by the OP are covered in the section in the manual about connection handling:</p>\n\n<p><a href=\"http://uk3.php.net/manual/en/features.connection-handling.php\" rel=\"nofollow\">http://uk3.php.net/manual/en/features.connection-handling.php</a></p>\n\n<p>No Ajax.</p>\n\n<p>No Javascript.</p>\n\n<p>No keep alives.</p>\n\n<p>C.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I made a chat using PHP and JavaScript chat and there is a disconnect button which removes user from the chat removing him from user list first. But if the user closes browser then he will remain in the user list. How do I check if he left?</p>\n\n<p>This must be done <strong>without putting any handles on page closing</strong> in JS because if user kills the browser then he will remain in chat.</p>\n\n<p><em>By the way , JS script always sends a request to the PHP page which constantly checks for new messages in a loop and when there are some, the script prints them out and exits. Then it repeats all over again.</em></p>\n\n<p><em><strong>EDIT : How do I make a heartbeat thing in PHP? If a user closes the page the script execution will be terminated therefore we won't be able to check if the user is still connected in the same script.</em></strong></p>\n",
            "last_activity_date": 1392659869,
            "question_id": 1992753,
            "score": 0,
            "tags": [
                "javascript",
                "php"
            ],
            "title": "Check if user closed the page in PHP?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The random number function is an equation that simulates being random, but, it is still a function. If you give it the same seed the first answer will be the same.</p>\n\n<p>You could try changing the seed, and do this when the javascript is first loaded, so that if there is a time component to the random number generator, then it can use the delays of pages being loaded to randomize the numbers more.</p>\n\n<p>But, you may want to change the seed.  You can use the <code>Date()</code> function, then get the milliseconds and use that as the seed, and that may help to scramble it up first.</p>\n\n<p>My thought that there is a time component to the generator is the fact that it changes with an alert, as that will delay when the next number is generated, though I haven't tested this out.</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>I realize the specification states that there is no parameter for Math.random, but when you look at this article, he explains that there was a seed being used:</p>\n\n<p><a href=\"http://codepunk.hardwar.org.uk/ajs13.htm\" rel=\"nofollow\">http://codepunk.hardwar.org.uk/ajs13.htm</a></p>\n\n<p>I came at this from C and then Java, so the fact that there was no error using an argument led me to think it used it, but now I see that that was incorrect.</p>\n\n<p>If you really need a seed, your best bet is to write a random number generator, and then Knuth books are the best starting point for that.</p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>Random number generators are really pseudo random number generators - ie they use a formula to calculate a stream of numbers that is practically random. </p>\n\n<p>So, for the same initial input values (seed) you will get the same stream. So the trick is to seed the random number generator with a good actually random seed. </p>\n\n<p>So you need to pass in a seed into random() somehow - you could use some kind of hashing of the current time, or any other data that you think has some kind of randomness (if you want it to be \"securely random\" - that is a whole other subject and probably covered somewhere else). </p>\n\n<p>So use something like: <strong>Math.random(Date.getMilliseconds())</strong> - might do closer to what you want. </p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>You could use  </p>\n\n<pre><code>#include &lt;sys/time.h&gt;\n</code></pre>\n\n<p>and then to get a range of seeds ranging from 0 to 999,999, use</p>\n\n<pre><code>gettimeofday(&amp;tv, NULL);\nsrand(tv.tv_usec);\n</code></pre>\n\n<p>Then, to get the random number in the range 0 - 499, use</p>\n\n<pre><code>r = 500*((double)rand() /((double)(RAND_MAX)+(double)(1.0))));\n</code></pre>\n\n<p>or add 1 to this result to shift it to the range 1 - 500.</p>\n\n<p>Good luck</p>\n",
                    "is_accepted": false,
                    "score": -11
                }
            ],
            "body": "<p>I created a jQuery plugin but I have a problem, I use the following code:</p>\n\n<pre><code>Math.floor(Math.random()*500)\n</code></pre>\n\n<p>I add the result to a element,\nbut bizarrely the result is every time the same.</p>\n\n<p>If I add a alert() to the line after the random-number-generation,\nI get random values, why?\nI want to get without the alert() random integers. But how?</p>\n",
            "last_activity_date": 1329960161,
            "question_id": 1972550,
            "score": 0,
            "tags": [
                "javascript",
                "jquery",
                "math",
                "random"
            ],
            "title": "Math.random() - Not random"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.quirksmode.org/js/cookies.html\" rel=\"nofollow\">Quirksmode has an article discussing cookies</a>, which also includes three very handy helper functions (scroll down to the bottom). Read the article and all will become clear anyway.</p>\n\n<p>Just remember that all information is stored as a string, and hence it is retrieved as a string. Therefore you should definitely be doing some manual type juggling before performing any operations on the data. See here:</p>\n\n<pre><code>var x = 1;\ncreateCookie(\"myVar\", x);\n\nvar newX = readCookie(\"myVar\") + 1;\n\nalert(newX); // \"11\"\n\n// --- instead, do this: ---\n\nvar newX = parseInt(readCookie(\"myVar\"), 10) + 1;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Nobody will have exactly the piece of code you are asking for, but it should be easy to compose it yourself, starting from these 2 necessary functions:</p>\n\n<pre><code>function createCookie(name,value,days) {\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime()+(days*24*60*60*1000));\n        var expires = \"; expires=\"+date.toGMTString();\n    }\n    else expires = \"\";\n    document.cookie = name+\"=\"+value+expires+\"; path=/\";\n}\n\nfunction readCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0;i &lt; ca.length;i++) {\n        var c = ca[i];\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) == 0)\n            return c.substring(nameEQ.length,c.length);\n    }\n    return null;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>let's say you have the variable visits in the cookies, you mainly use something similar to this</p>\n\n<pre><code>function getCookie(c_name)\n{\nif (document.cookie.length&gt;0)\n  {\n  c_start=document.cookie.indexOf(c_name + \"=\");\n  if (c_start!=-1)\n    {\n    c_start=c_start + c_name.length+1;\n    c_end=document.cookie.indexOf(\";\",c_start);\n    if (c_end==-1) c_end=document.cookie.length;\n    return unescape(document.cookie.substring(c_start,c_end));\n    }\n  }\nreturn \"\";\n}\n\nvar visits = getCookie(\"visits_number\");\n\nif (visists &gt; 5)\n    document.getElementById(\"your_div_name\").setAttribute(\"style\", \"visibility: hidde\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 1
                }
            ],
            "body": "<p>I am displaying a div on my site, and I want to only display this div 5 times that the user has visited my site. So after 5 times, it wont show the div anymore.</p>\n\n<p>I can do it with cookies. But Im only familiar with PHP. Javascript isn't my strong side.</p>\n\n<p>Does anybody have a short piece of code to set a cookie, increase it for every visit, and if value is greater than 5 then don't show the DIV anymore?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1260707845,
            "question_id": 1896364,
            "score": 0,
            "tags": [
                "javascript",
                "cookies"
            ],
            "title": "javascript cookie, little help please"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Have you tried</p>\n\n<pre><code>$('#' + theArrayOfStrings[i]).foo();\n</code></pre>\n\n<p>Have a look at <a href=\"http://docs.jquery.com/Selectors/id#id\" rel=\"nofollow\">API/1.3/Selectors</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://www.w3schools.com/jsref/jsref%5Feval.asp\" rel=\"nofollow\">eval() function</a> is used to evaluate script in a string variable. For example :</p>\n\n<pre><code>var test1;\neval(\"test1=\" + theArrayOfStrings[i]);\ntest1.foo();\n</code></pre>\n\n<p>But take a lok at this question before use <a href=\"http://stackoverflow.com/questions/197769/when-is-javascripts-eval-not-evil\">When is JavaScript\u2019s eval() not evil?</a></p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<pre><code>var test = [], n = 5;\n$(document).ready(function () {\n    for(var i=0; i &lt; n; i++)\n        test.push($(\"#test\"+i+\"ID\").jQueryPlugin());\n});\n\n// the values in test won't be accessible before the document is loaded.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It might be worth creating an object to hold all your \"tests\":</p>\n\n<pre><code>var tests = {};\n\n$(document).ready(function () {\n    tests.test1 = $(\"#test1ID\").jQueryPlugin();\n    tests.test2 = $(\"#test2ID\").jQueryPlugin();\n});\n\nfor(i=0; i &lt; theArrayOfStrings.length; i++){\n    tests[theArrayOfStrings[i]].foo();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If <code>test1</code> is a global variable you can access it by name through the <code>window</code> object:</p>\n\n<pre><code>window[theArrayOfStrings[0]].foo();   // test1();\n</code></pre>\n\n<p>If it's not, <code>eval</code> is the only way, but I'd strongly advise avoiding <code>eval</code> in all circumstances. Using a lookup as in J-P's answer (+1) is much much more appropriate than selecting variable names.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<pre><code>var test1;\n$(document).ready(function () {\n    test1 = $(\"#test1ID\").jQueryPlugin();\n});\n\nvar test2;\n$(document).ready(function () {\n    test2 = $(\"#test2ID\").jQueryPlugin();\n});\n\n...\n</code></pre>\n\n<p>This is done so we could just do <code>test1.foo()</code>... foo is a function inside the jQueryPlugin that is accessible using <code>test1.foo()</code> syntax;</p>\n\n<p>So we have an array of strings which contains (test1, test2, ...)\nand we need to access foo() while on the loop:</p>\n\n<pre><code>for(i=0; i &lt; theArrayOfStrings.length; i++){\n    theArrayOfStrings[i].foo();\n    //so here is the problem... we can't do test1.foo(), test2.foo() ... =(\n}\n</code></pre>\n\n<p>Any idea on how to call function foo() while on the loop?\nOr can we convert a string value to a variable in javascript?</p>\n",
            "last_activity_date": 1260628048,
            "question_id": 1893277,
            "score": 0,
            "tags": [
                "javascript",
                "string",
                "variables"
            ],
            "title": "How to convert a string value to a variable in javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>That doesn't do what you probably think it does. It'll work, but the PHP gets run once, when the page is loaded, not every time the JavaScript function is called.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>your can use php to dynamically generate javascript code, but you cannot execute php client side. If you need to execute php you will need to postback or use AJAX</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just for clarification, this is what will happen</p>\n\n<p>index.php<br></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n&lt;?php echo \"alert('hello!');\"; ?&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>output html in browser</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nalert('hello!');\n&lt;/script&gt;\n</code></pre>\n\n<p>If that is what you want to do, then you can output all the javascript you like.  What you <b>cannot</b> do is execute PHP code in the user's browser.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There seems to be a good bit of misunderstanding of the question...  Here is what you want to do to generate JS from PHP on the server:</p>\n\n<p><strong>file javascript.js.php</strong></p>\n\n<pre><code>&lt;?php\n    header('Content-Type: text/javascript');\n?&gt;\n\n// javascript code here\n\nfunction PrintTime()\n{\n   alert(\"The time is \" + &lt;?php echo json_encode(time()); ?&gt;);\n}\n</code></pre>\n\n<p><strong>Now,</strong>  include it on the HTML page using normal script tags:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"/url/to/javascript.js.php\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>The server will process the PHP file, and return javascript from it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can't run PHP inside a javascript file. Primarily because PHP runs server side and is processed before the client is sent any actual http info.  JavaScript is processed by the browser on the client side and is sent as text. </p>\n\n<p>It looks like you want to pass some kind of dynamic info to the JavaScript.  You can do this by passing a variable like this:</p>\n\n<pre><code>&lt;?php $variable=\"its me\"; ?&gt; \n\n&lt;script&gt; \n   alert('&lt;?php print($variable)?&gt;') \n&lt;/script&gt;\n</code></pre>\n\n<p>The output passed to the client is:</p>\n\n<pre><code>&lt;script&gt;\n    alert('its me')\n&lt;/script&gt;\n</code></pre>\n\n<p>What are you trying to accomplish and maybe we can help you come up with a better solution?  </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>i need to have some php code inside javascript</p>\n\n<pre><code>      &lt;script ...&gt;\n\n        &lt;?php\n        echo \" ... \";\n        ?&gt;\n\n       &lt;/script&gt;\n</code></pre>\n\n<p>but this doesnt work. how can u implement php inside javascript that is in a own file javascript.php?</p>\n",
            "last_activity_date": 1259963574,
            "question_id": 1849812,
            "score": 0,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "php in javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Why don't you make the same Ajax call in the popup to get the file names?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Parent Window:</p>\n\n<pre><code>&lt;span id=\"popup\"&gt; Click to Open Popup &lt;/span&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nvar ar=new Array(\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\", \"Item 5\", \"Item 6\", \n                 \"Item 7\", \"Item 8\", \"Item 9\", \"Item 10\");\nfunction getArray(){\n    return ar;\n}\n$(document).ready(function(){\n    $(\"span#popup\").click(function(){\n    \tvar p=window.open(\"Popup.html\");\n    });\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>Popup Window:</p>\n\n<pre><code>&lt;ul id=\"list\"&gt;&lt;/ul&gt;\n&lt;script type=\"text/javascript\"&gt;\n    if(window.opener &amp;&amp; !window.opener.closed){\n    \tvar ar= window.opener.getArray();\n    \tvar items=\"\";\n    \tfor(var i=0;i&lt;ar.length;i++){\n    \t\titems +=\"&lt;li&gt;\" + ar[i] + \"&lt;/li&gt;\";\n    \t}\n    \t$(\"ul#list\").html(items);\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>How can I use Javascript/jQuery to populate a popup-window with data from JS-variables in the parent page?</p>\n\n<p>In my example I have an array of filenames. I list at most five in the parent window and if there's more I want to provide a link that opens a popup window and lists each post in the array.</p>\n\n<p>So if I open a popup that contains a <code>&lt;ul id=\"all_files\"&gt;&lt;/ul&gt;</code>. How can I add <code>&lt;li&gt;</code>-items to that list?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1258362286,
            "question_id": 1740783,
            "score": 0,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Open popup and poulate it with data from parent window?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>While there's nothing wrong with the line you seperated out, this part in the original code does bother me:</p>\n\n<pre><code>&lt;%= Url.Action('FormParts') %&gt;\n</code></pre>\n\n<p>You used single quotes for the string in ASP. This marks it as a character literal, and not a string. Replace them with double quotes and you should be fine.</p>\n\n<pre><code>&lt;%= Url.Action(\"FormParts\") %&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I'm not sure where that issue was coming from, I've updated the script to the following and it works.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    &lt;!--\n\n    $(function() {\n        $('#FormTypes').change(function() {\n            //clear all items in list and replace \"All\" option\n            $parts = $('#FormParts');\n            $parts.html(\"\");\n            $parts.append('&lt;option value=\"\"&gt;All&lt;/option&gt;');\n\n            var selectedValue = $(this).val();\n            if (selectedValue != \"\") {\n                $.ajax({\n                    url: '&lt;%= Url.Action(\"FormParts\") %&gt;',\n                    dataType: 'json',\n                    data: { FormTypeID: selectedValue },\n                    success: function(parts) {\n                        //repopulate list with JSON objects\n                        $.each(parts, function(i, part) {\n                            $parts.append('&lt;option value=\"' + part.ID + '\"&gt;' + part.Code + '&lt;/option&gt;');\n                        });\n                    },\n                    error: function() {\n                        alert('Parts list could not be retreived. \\n Please use the feedback link to inform us');\n                    }\n                });\n            }\n        });\n    });\n    //--&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>For anyone using this code, in future, please note I've added the evaluation</p>\n\n<pre><code>if (selectedValue != \"\")\n</code></pre>\n\n<p>this has been added if the option \"All\" is selected in the first FormTypes drop down list, there is no dependent part list that should be populated.</p>\n",
                    "is_accepted": true,
                    "score": 0
                }
            ],
            "body": "<p>Good morning all,</p>\n\n<p>I'm sure this is a gimme, but I have no idea where this issue is coming from.</p>\n\n<p>I have the following lines in a view:</p>\n\n<pre><code>&lt;fieldset&gt;\n    &lt;dl&gt;\n        &lt;dt&gt;\n            &lt;label for=\"FormTypes\"&gt;Form Type:&lt;/label&gt;\n        &lt;/dt&gt;\n        &lt;dd&gt;           \n            &lt;% =Html.DropDownList(\"FormTypes\", \"All\") %&gt;\n        &lt;/dd&gt;\n    &lt;/dl&gt;\n&lt;/fieldset&gt;\n&lt;fieldset&gt;\n    &lt;dl&gt;\n        &lt;dt&gt;\n            &lt;label for=\"Parts\"&gt;Form Part:&lt;/label&gt;\n        &lt;/dt&gt;\n        &lt;dd&gt;           \n            &lt;% =Html.DropDownList(\"Parts\", \"All\") %&gt;\n        &lt;/dd&gt;\n    &lt;/dl&gt;\n&lt;/fieldset&gt;\n</code></pre>\n\n<p>This causes no problems, but when adding the following script to the top of  to update Parts based on the selection of form type (following the answer to this SO question <a href=\"http://stackoverflow.com/questions/1585642/bind-dropdownlists-with-jquery-in-asp-net\">http://stackoverflow.com/questions/1585642/bind-dropdownlists-with-jquery-in-asp-net</a>)</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    &lt;!--\n        $('#FormTypes').change(function() {\n            var val = $(this).val();\n            $parts = $('#Parts');\n            $.ajax({\n                url: '&lt;%= Url.Action('FormParts') %&gt;',\n                dataType: 'json',\n                data: { ID: val },\n                success: function(parts) {\n                    $.each(parts, function(i, part) {\n                        $parts.append('option value=\"' + part.ID+ '\"&gt;' + part.Code + '&lt;/option&gt;');\n                    });\n                },\n                error: function() {\n                    alert('Failed to retrieve parts list.');\n                }\n            });\n        });\n\n    //--&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>(where the FormParts action will return a new object to populate the parts drop down list)</p>\n\n<p>I get the message: <b>Too many characters in character literal</b> on the line</p>\n\n<pre><code>&lt;% =Html.DropDownList(\"Types\") %&gt;\n</code></pre>\n\n<p>It appears this issue is caused by the javascript being added, but why and why the error is on the previously good line of code in the markup and not in the script?</p>\n\n<p>Thanks in advance.</p>\n",
            "last_activity_date": 1256815277,
            "question_id": 1629920,
            "score": 0,
            "tags": [
                "asp.net",
                "javascript",
                "asp.net-mvc",
                "asp.net-ajax"
            ],
            "title": "Where is this &quot;Too Many Characters in String literal&quot; message coming from?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If you're looking to only trap script error dialogs that appear, I would recommend trapping the <a href=\"http://msdn.microsoft.com/en-us/library/cc197053%28VS.85%29.aspx\" rel=\"nofollow\">window.onerror</a> DOM event.  If you assign a handler for this event, the message, (script) file name and line number are passed as arguments, those are all things shown in the error dialog that pops up.  Note that most users have scripting error dialogs switched off by default so it would be wise to honour this if the intended purpose is for a large audience.</p>\n\n<p>I'm not sure if there's an easier way, I've only worked with the old COM WebBrowser component.</p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>Just do this:</p>\n\n<pre><code>window.alert = function(txt) {\n   // Do something\n}\n</code></pre>\n\n<p>This will allow you to do a callback or anything else you want with the alert text.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Using the webbrowswer control to cruise a site. Sometimes errors occur which involve a javascript popup box. I would like to do a couple of things when this happens. </p>\n\n<ol>\n<li>Know when a javascript alert popups up. </li>\n</ol>\n\n<p>I have used the LostFocus event with some success but anytime it losses focus that code runs which is annoying.</p>\n\n<ol>\n<li>I would like to know the exact text that the alert box says. </li>\n</ol>\n\n<p>I am not sure where to find the alert box object or cast it for use in C#. I looked all over the internet and couldn't find it. </p>\n\n<p>Any one any clue?</p>\n",
            "last_activity_date": 1256238080,
            "question_id": 1609150,
            "score": 0,
            "tags": [
                "c#",
                "event-handling",
                "alert",
                "javascript"
            ],
            "title": "Capturing Javascript Alert in Webbrowser Control"
        },
        {
            "answer_count": 0,
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1594411/call-php-from-javascript-and-return-an-array-from-php-to-javascript-function\">Call php from javascript and return an array from php to Javascript function</a>  </p>\n</blockquote>\n\n\n\n<p>How to pass value from JavaScript to PHP and get return of PHP back to JavaScript function?</p>\n\n<p>I have an HTML page which will have JavaScript function which should call PHP (PHP is another file) </p>\n\n<p>for example like</p>\n\n<pre><code>function JavaCallphp()\n{\ntest = Validate.php\n}\n</code></pre>\n\n<p><code>test</code> is variable on JavaScript</p>\n\n<p><code>Validate.php</code> is the File which contain Validation code and returns the Bool Value. </p>\n\n<p>I want to get true/false in <code>test</code> variable</p>\n",
            "last_activity_date": 1356411615,
            "question_id": 1599675,
            "score": 0,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "How to pass value from JavaScript to PHP and get return of PHP back to JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can't assign a client-side value to a smarty variable, as smarty is a templating language that runs on the server. Smarty assignments can only be done on the server-side, that is to say, from PHP. E.g.:</p>\n\n<pre><code>$smarty-&gt;assign('timestamp',time());\n</code></pre>\n\n<p>So what you can do is something like:</p>\n\n<pre><code>    $smarty-&gt;assign('timestamp',time()); //in your PHP script\n\n    //in your JS\n    var currentTS = {$timestamp};\n</code></pre>\n\n<p>See <a href=\"http://www.smarty.net/manual/en/api.assign.php\">http://www.smarty.net/manual/en/api.assign.php</a></p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>For anything AJAX with PHP, I'd propose the xajax library:</p>\n\n<p><a href=\"http://www.xajax-project.org/\" rel=\"nofollow\">http://www.xajax-project.org/</a></p>\n\n<p>Using xajax, you register a PHP function to be exposed to your client side JS code. By magic, if you call registered functions in JS, xajax packs the request with parameters and passes it back to the server.</p>\n\n<p>Moreover, you are able to push more than update from your PHP code to the browser. Something like 'Replace element X with ... and replace element Y with ...' in a single XHR reply.</p>\n\n<p>xajax makes AJAX style code very clean.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I got a problem regarding how to assign a java script variable to a smarty variable. Here is the code snippet.</p>\n\n<pre><code>function getDateInfo(date, wantsClassName)\n{                  \n    var as_number = Calendar.dateToInt(date); //This as_number is the variable which should be assigned to smarty variable    \n}\n</code></pre>\n\n<p>How can i accomplish this.</p>\n\n<p>any help will be appreciated..</p>\n\n<p>Thanks n advance -- Fero</p>\n",
            "last_activity_date": 1297817018,
            "question_id": 1271026,
            "score": 0,
            "tags": [
                "javascript",
                "smarty"
            ],
            "title": "how to assign a javascript variable to a smarty variable"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Using jQuery, you could try this:</p>\n\n<pre><code>$(document).ready(function(){\n    $(\"object\").append('&lt;param name=\"wmode\" value=\"opaque\"&gt;');\n});\n</code></pre>\n\n<p>Not entirely sure if that would work, but it's worth a shot.  Good luck!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since you seem to have abandoned <a href=\"http://stackoverflow.com/questions/1168349\">this question</a> I'll paste the answer here:</p>\n\n<pre><code>// makeObjectsOpaque() adds a &lt;param&gt; tag to each &lt;object&gt; tag\n// analogous to &lt;object ...&gt;&lt;param name=\"wmode\" value=\"opaque\"&gt;&lt;/object&gt;\n// it seems unlikely that adding a &lt;param&gt; to an &lt;object&gt; dynamically after\n// it has been rendered by the browser will actually apply the &lt;param&gt; value\n// correctly; in other words, it *probably* WILL NOT WORK\nfunction makeObjectsOpaque() {\n    var elementToAppend = document.createElement('param');\n    elementToAppend.setAttribute('name', 'wmode');\n    elementToAppend.setAttribute('value', 'opaque');\n    var objects = document.getElementsByTagName('object');\n    for(var i = 0; i &lt; objects.length; i++) {\n        elementToAppend = elementToAppend.cloneNode(true);\n        objects[i].appendChild(elementToAppend);\n    }\n}\n\n// makeObjectsOpaque2() adds a 'wmode' attribute to each &lt;object&gt; tag\n// this should be analogous to &lt;object ... wmode=\"opaque\"&gt; in HTML\n// THIS DOES NOT APPEAR TO BE WHAT YOU WANT TO DO ACCORDING TO\n// THIS URL: http://kb2.adobe.com/cps/127/tn_12701.html\nfunction makeObjectsOpaque2() {\n    var objects = document.getElementsByTagName('object');\n    for(var i = 0; i &lt; objects.length; i++) {\n        objects[i].setAttribute('wmode', 'opaque');\n        // you can also try:\n        // objects[i].wmode = 'opaque';\n    }\n}\n\n// makeObjectsOpaque3() replaces every &lt;object&gt; tag on the page with\n// a cloned copy, adding a &lt;param&gt; tag before replacing it\n// analogous to replacing &lt;object ...&gt;...&lt;/object&gt;\n// with &lt;object ...&gt;...&lt;param name=\"wmode\" value=\"opaque\"&gt;&lt;/object&gt;\n// this *may* cause the browser to re-render the &lt;object&gt; and apply\n// the newly added &lt;param&gt;, or it may not\nfunction makeObjectsOpaque3() {\n    var elementToAppend = document.createElement('param');\n    elementToAppend.setAttribute('name', 'wmode');\n    elementToAppend.setAttribute('value', 'opaque');\n    var objects = document.getElementsByTagName('object');\n    for(var i = 0; i &lt; objects.length; i++) {\n        var newObject = objects[i].cloneNode(true);\n        elementToAppend = elementToAppend.cloneNode(true);\n        newObject.appendChild(elementToAppend);\n        objects[i].parentNode.replaceChild(newObject, objects[i]);\n    }\n}\n\nwindow.onload = makeObjectsOpaque3;\n</code></pre>\n\n<p>If there is already an <code>onload</code> event handler you'll have to do something like:</p>\n\n<pre><code>if(window.onload) {\n    var onLoad = window.onload;\n    window.onload = function() {\n        onLoad();\n        makeObjectsOpaque3();\n    };\n} else {\n    window.onload = makeObjectsOpaque3;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>How about this.  It sets it on the object and as a param (if the param already exists, it updates it; otherwise, it adds it).</p>\n\n<pre><code>var setWmode = function(wmode, object) {\n    $(object || \"object\").each(function(i, node) {\n    \t// Set wmode on the object\n    \tnode.setAttribute(\"wmode\", wmode);\n\n    \t// See if wmode already exists to avoid duplication param conflicts\n    \tvar currentWmode = $(\"param[name='wmode']\", node);\n\n    \t// If it already exists, make sure its the new wmode\n    \tif ( currentWmode.length ) {\n    \t\tcurrentWmode.attr(\"value\", wmode);\n    \t}\n    \t// Otherwise, add it\n    \telse {\n    \t\t$(node).append('&lt;param name=\"wmode\" value=\"' + wmode + '\"&gt;');\n    \t}\n    });\n};\n\n$(document).ready(function() {\n    setWmode(\"opaque\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To avoid confusion with all the edits I've done to my previous answer, I'm creating a new answer with a fully tested and working sample page. It has been tested and is working in IE 6, 7 &amp; 8, Opera 9.6 &amp; 10, Safari 3 &amp; 4, Google Chrome, but no version of Firefox I tested (2, 3 or 3.5):</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;&lt;title&gt;Opacity text&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;\n&lt;div style=\"color:Red;position:absolute;top:0px;left:0px;\"&gt;\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;\n&lt;/div&gt;\n&lt;object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" height=\"200\" width=\"300\"&gt;\n    &lt;param name=\"movie\" value=\"http://freevideocoding.com/flvplayer.swf?file=http://www.freevideoediting.com/TVQvideos/Queen Demo--flv.flv&amp;autoStart=false\"&gt;\n    &lt;param name=\"bgcolor\" value=\"#ffff00\"&gt;\n&lt;/object&gt;\n&lt;!--\nall you need to make this work is the script listed below.\neverything else is just sample code to provide a demonstration\nthat the script shown below actually works\n--&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction makeObjectsOpaque_TestedAndWorking() {\n    var elementToAppend = document.createElement('param');\n    elementToAppend.setAttribute('name', 'wmode');\n    elementToAppend.setAttribute('value', 'opaque');\n    var objects = document.getElementsByTagName('object');\n    for (var i = 0; i &lt; objects.length; i++) {\n        var newObject = objects[i].cloneNode(true);\n        elementToAppend = elementToAppend.cloneNode(true);\n        newObject.appendChild(elementToAppend);\n        objects[i].parentNode.replaceChild(newObject, objects[i]);\n    }\n}\nwindow.onload = makeObjectsOpaque_TestedAndWorking;\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For the record, it needs to be changed in TWO places: see <a href=\"http://www.communitymx.com/content/article.cfm?cid=e5141\" rel=\"nofollow\">here</a>. </p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>I think the problem is that you need to create a wmode=\"opaque\" attribute inside of the embed tag AS WELL AS add a param element with wmode set to \"opaque.\" While Grant Wagner's code is effective at adding the wmode=\"opaque\" as a param inside the object, it does not add it as an attribute in the embed tag. You need them both if you want this to work cross-browser, cross-platform. That might be why Grant Wagner is seeing it work, while patricksweeney is not.</p>\n\n<p><a href=\"http://www.onlineaspect.com/2009/08/13/javascript_to_fix_wmode_parameters/\" rel=\"nofollow\">Josh Fraser</a> wrote a nice function that rewrites the embed tag to include the wmode attribute. soooooo I combined Grant Wagner's solution for adding the wmode param, and Josh Fraser's solution for adding a wmode attribute to the embed in one function, and it looks a little something like this:</p>\n\n<pre><code> function fix_flash() {\n    // loop through every embed tag on the site\n    var embeds = document.getElementsByTagName('embed');\n    for(i=0; i&lt;embeds.length; i++)  {\n        embed = embeds[i];\n        var new_embed;\n        // everything but Firefox &amp; Konqueror\n        if(embed.outerHTML) {\n            var html = embed.outerHTML;\n            // replace an existing wmode parameter\n            if(html.match(/wmode\\s*=\\s*('|\")[a-zA-Z]+('|\")/i))\n                new_embed = html.replace(/wmode\\s*=\\s*('|\")window('|\")/i,\"wmode='opaque'\");\n            // add a new wmode parameter\n            else \n                new_embed = html.replace(/&lt;embed\\s/i,\"&lt;embed wmode='opaque' \");\n            // replace the old embed object with the fixed version\n            embed.insertAdjacentHTML('beforeBegin',new_embed);\n            embed.parentNode.removeChild(embed);\n        } else {\n            // cloneNode is buggy in some versions of Safari &amp; Opera, but works fine in FF\n            new_embed = embed.cloneNode(true);\n            if(!new_embed.getAttribute('wmode') || new_embed.getAttribute('wmode').toLowerCase()=='window')\n                new_embed.setAttribute('wmode','opaque');\n            embed.parentNode.replaceChild(new_embed,embed);\n        }\n    }\n    // loop through every object tag on the site\n    var elementToAppend = document.createElement('param');\n    elementToAppend.setAttribute('name', 'wmode');\n    elementToAppend.setAttribute('value', 'opaque');\n    var objects = document.getElementsByTagName('object');\n    for (var i = 0; i &lt; objects.length; i++) {\n        var newObject = objects[i].cloneNode(true);\n        elementToAppend = elementToAppend.cloneNode(true);\n        newObject.appendChild(elementToAppend);\n        objects[i].parentNode.replaceChild(newObject, objects[i]);\n    }\n}\nwindow.onload = fix_flash;\n</code></pre>\n\n<p>It's a little bit of code, but it works very well, and it saved me from hours of pulling out my hair.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a client who is embedding videos into his WordPress blog. The problem is they have a large CSS dropdown that sneaks behind the flash video. I understand that setting the video's wmode to opaque will fix this, but I obviously need this to apply to every video they upload and not have to go to the HTML to add this tag</p>\n\n<p>Is there any way I can do this programatically? </p>\n",
            "last_activity_date": 1282710586,
            "question_id": 1168494,
            "score": 0,
            "tags": [
                "javascript",
                "flash",
                "video"
            ],
            "title": "How do I programmatically set all &lt;object&gt;&#39;s to have the wmode set to opaque?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I had this once, too. It is a scoping issue. I had to change my structure a little bit but maybe in your case changing the callback could already help:</p>\n\n<pre><code>GEvent.addListener(marker, \"click\", function() {\n marker.openInfoWindowHtml(pins[i].getElementsByTagName(\"message\")[0].childNodes[0].nodeValue;);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Daff is right about the scope.  One alternative, however, is to use <a href=\"http://code.google.com/apis/maps/documentation/reference.html#GMarker.bindInfoWindowHtml\" rel=\"nofollow\">bindInfoWindowHtml()</a> instead of a listener with openInfoWindowHtml().  Just replace the listener with this code:</p>\n\n<pre><code>marker.bindInfoWindowHtml(mess);\n</code></pre>\n\n<p><hr/>\n<strong>UPDATE:</strong>  As a sidenote - because of <a href=\"http://econym.org.uk/gmap/closure.htm\" rel=\"nofollow\">closure</a>, any variable created in a for loop will be remembered.  A direct solution to the problem is to make a separate function to create the Listener.</p>\n\n<p>Replace the listener with </p>\n\n<pre><code>createMarker(marker,mess);\n</code></pre>\n\n<p>and add the function:</p>\n\n<pre><code>function createMarker(marker, mess) {\n    GEvent.addListener(marker, \"click\", function() {\n        marker.openInfoWindowHtml(mess);\n    });\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I've got a page that retrieves a bunch of locations and some data about their associated markers and puts them on a Google Maps map. Each one is supposed to pop up its own little message when clicked on. However, clicking on ANY of them makes the most recently added message pop up at the most recently added marker. What gives? Am I not scripting the click event properly? Here's the relevant code:</p>\n\n<pre><code>var xmlDoc;\n    if (window.XMLHttpRequest)\n    {\n    xmlDoc=new window.XMLHttpRequest();\n    xmlDoc.open(\"GET\",\"locs.php\",false);\n    xmlDoc.send(\"\");\n    xmlDoc=xmlDoc.responseXML;\n    }\n    // IE 5 and IE 6\n    else if (ActiveXObject(\"Microsoft.XMLDOM\"))\n    {\n    xmlDoc=new ActiveXObject(\"Microsoft.XMLDOM\");\n    xmlDoc.async=false;\n    xmlDoc.load(\"locs.php\");\n    }\n\n    var pins = xmlDoc.getElementsByTagName(\"pin\");\n    //alert(pins);\n\n    for (i=0;i&lt;pins.length;i++)\n    {\n       //alert(pins[i].getElementsByTagName(\"lat\")[0].childNodes[0].nodeValue);\n       var point = new GLatLng( pins[i].getElementsByTagName(\"lat\")[0].childNodes[0].nodeValue, \n                                pins[i].getElementsByTagName(\"lon\")[0].childNodes[0].nodeValue);\n       var colord;\n       var curgender = pins[i].getElementsByTagName(\"gender\")[0].childNodes[0].nodeValue;\n       if(curgender == \"Male\")\n       {colord = blueOpt;}else if(curgender==\"Female\"){colord = pinkOpt;}else{colord = purpleOpt;}\n\n       var marker = new GMarker(point, colord);\n       var mess =  pins[i].getElementsByTagName(\"message\")[0].childNodes[0].nodeValue;\n\n       GEvent.addListener(marker, \"click\", function() {\n         marker.openInfoWindowHtml(mess);\n       });\n\n       map.addOverlay(marker);\n\n    }\n  }\n</code></pre>\n",
            "last_activity_date": 1256613423,
            "question_id": 1078309,
            "score": 0,
            "tags": [
                "javascript",
                "google-maps"
            ],
            "title": "Google Maps API, all markers opening the same infowindow"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>First of all, I really think you should use bindAsEventListener when binding functions as event listeners. By doing that, you have access to the event's arguments. You may need it later.</p>\n\n<p>In your case, the first thing I noticed is that your sendActiveSignal is declared as a member of you IdleMonitor class. The JS engine won't find it if you just call it by parent.sendActiveSignal, since I'm guessing that parent is not a IdleMonitor instance. (And it is not, I can tell it right now :])</p>\n\n<p>Inside your iframe, you have to access the idleMonitor variable, and you can do that by referencing it this way:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nElement.observe(window, \"mousemove\", function(p) { parent.document.idleMonitor.sendActiveSignal(); });\n&lt;/script&gt;\n</code></pre>\n\n<p>This pretty much should work, I can't test it right now.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Turns out it's much easier to just access the child iframe from the parent using the contentDocument property of the iframe element, e.g.</p>\n\n<pre><code>document.observe(\"dom:loaded\", function() {\n\n    Element.observe($('id-of-iframe').contentDocument, \"mousemove\", function() {\n      // call whatever...\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've got an HTML page (the parent) with an embedded IFRAME. The parent page has a couple of event listeners for mouse and keyboard events, as shown below (I'm using the Prototype library). </p>\n\n<pre><code>var IdleMonitor = Class.create({\n\n    active: null,\n    initialize: function(ii) {\n        Element.observe(window, \"mousemove\", this.sendActiveSignal.bind(this));\n    },\n\n    sendActiveSignal: function() {\n        console.log(\"MOUSE\");\n    }\n});\n\nvar idleMonitor = new IdleMonitor();\n</code></pre>\n\n<p>The IFRAME, being a separate document and all, doesn't respond to the parent's events. So I've set up some code in the IFRAME like:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" &gt;\n\n        Element.observe(window, \"mousemove\", function(p) {\n    \t\tparent.sendActiveSignal();\n\n    \t});\n&lt;/script&gt;\n</code></pre>\n\n<p>But that's giving me an error (sendActiveSignal is an undefined function).\nHow do I make the IFRAME also listen for the same events and fire the parent's event handlers, preferably in a Prototype-y way?</p>\n",
            "last_activity_date": 1325172757,
            "question_id": 998286,
            "score": 0,
            "tags": [
                "javascript",
                "iframe",
                "prototypejs",
                "event-listeners"
            ],
            "title": "How to get IFRAME to listen to same events as parent (and fire the same handlers)"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Look at using the callback mechanism for <a href=\"http://docs.jquery.com/Effects/fadeOut#speedcallback\" rel=\"nofollow\">fadeOut</a> so you can chain the animations.  The callback on the animation methods are called after the previous animation is complete.</p>\n\n<pre class=\"lang-html prettyprint-override\"><code> &lt;script type=\"text/javascript\"&gt;\n    $(function() {\n        $('#jlogin').click(function() {\n           $('#reg').fadeOut('fast', function() {\n               $('#login').toggle('fast');\n           });\n        });\n        $('#jreg').click(function() {\n            $('#login').fadeOut( 'fast', function() {\n                $('#reg').toggle('fast');\n            });\n        });\n     });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I have two elements that shouldn't be active at the same time, so when one is toggled I fade the other out, however I would like to be able to fade the open element out and then bring the other one in. Is there a way to do this that isn't a hack?</p>\n\n<pre><code>&lt;script =\"text/javascript\"&gt;\n\n$(function() {\n\t$('#jlogin').click(function() {\n\t\t$('#login').toggle('fast');\n\t\t$('#reg').fadeOut('fast');\n\t});\n\n\t$('#jreg').click(function() {\n\t\t$('#reg').toggle('fast');\n\t\t$('#login').fadeOut('fast');\n\t});\n});\n\n&lt;/script&gt;\n</code></pre>\n\n<p>That is my current script.</p>\n",
            "last_activity_date": 1313361660,
            "question_id": 951528,
            "score": 0,
            "tags": [
                "javascript",
                "jquery",
                "function",
                "delay"
            ],
            "title": "jQuery delay between animations"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>From the looks of it, no, you can't just capture the Ctrl key. <a href=\"http://code.google.com/p/js-hotkeys/\" rel=\"nofollow\">The hotkeys jQuery plugin</a> which focuses exclusively on capturing keys doesn't capture the straight \"Ctrl\" key either, so I'm guessing it's not possible. <a href=\"http://www.javascripter.net/faq/ctrl%5Falt.htm\" rel=\"nofollow\">You can catch it with the mouse events</a>, but that's not quite the same thing.</p>\n\n<p><a href=\"http://jshotkeys.googlepages.com/test-static-01.html\" rel=\"nofollow\">http://jshotkeys.googlepages.com/test-static-01.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>onkeypress</code> just catches character keys. Use <code>onkeydown</code> and/or <code>onkeyup</code> for the other keys. See <a href=\"http://www.quirksmode.org/dom/events/keys.html\">Peter-Paul Koch on key events</a>.</p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>I have a question regarding the onkeypress event on Javascript.</p>\n\n<p>Is it possible to detect Just Ctl key or Alt Key? At the moment if both Ctl and m are pressed the onkeypress event can trigger a click. Is it possible to do just Ctl key by itself?</p>\n\n<p>Looking forward to your comments</p>\n",
            "last_activity_date": 1293797924,
            "question_id": 929729,
            "score": 0,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "Javascript onkeypress"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Putting an <code>onclick</code> handler on an <code>&lt;option&gt;</code> element seems.... weird to me. You might want to switch that to the more common <code>onchange</code> event of the <code>&lt;select&gt;</code>. You can still do whatever you want to do from there, and this is the \"accepted\" way of doing whatever you want to do to the select. That being said, you might want to try removing the <code>javascript:</code> part of it. That is only needed when you are executing Javascript in a link <code>href</code> for example. An <code>onclick</code> handler <em>expects</em> javascript.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Have you tried just:</p>\n\n<pre><code>onclick=\"alert('test');\"\n</code></pre>\n\n<p>Pretty sure you don't need the javascript: prefix.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>All versions of IE (6,7,8) do not support <strong>ANY</strong> event handlers on the option elements.</p>\n\n<p>This is a (fairly) well known bug that the IE team has indicated they are in no rush to fix. :-(</p>\n\n<p>Then again Opera, Safari &amp; Chrome all have limited or no support for event handlers on options too.</p>\n\n<p>Lack of events on options: <a href=\"http://webbugtrack.blogspot.com/2007/11/bug-280-lack-of-events-for-options.html\" rel=\"nofollow\">bug 280</a></p>\n\n<p>(related) Lack of styles on options: <a href=\"http://webbugtrack.blogspot.com/2007/11/bug-291-no-styling-options-in-ie.html\" rel=\"nofollow\">bug 281</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Why isn't the following piece of code working in IE8?</p>\n\n<pre><code>&lt;select&gt;\n    &lt;option onclick=\"javascript: alert('test');\"&gt;5&lt;/option&gt;\n</code></pre>\n\n<p>Quite bizarre - no alert is shown in IE8. I do not see the error icon in the left corner as well. Of course it works in FF and Opera. Any ideas?</p>\n",
            "last_activity_date": 1315408081,
            "question_id": 845848,
            "score": 0,
            "tags": [
                "javascript",
                "internet-explorer-8"
            ],
            "title": "IE8 simple alert is failing?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Is it something IE can't handle?</p>\n</blockquote>\n\n<p><strong>No</strong> it is not an IE thing. You can never assume that your code will  be the only script used in the document. So it is important that you make sure your code does not have global function or variable names that other scripts can override. </p>\n\n<p>Refer to <a href=\"http://74.125.93.132/search?q=cache:zzyCvm7mUdcJ:icant.co.uk/articles/seven-rules-of-unobtrusive-javascript/%2Bwhy%2Bnot%2Bmake%2Bevents%2Bglobal%2Bin%2Bjs&amp;cd=1&amp;hl=en&amp;ct=clnk&amp;gl=us&amp;client=firefox-a\" rel=\"nofollow\">Play Well With Others</a> for examples.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I don't think that's an implementation issue, but more a good vs bad practice issue. Usually global * is bad practice and should be avoided (global variables and so on) since you never really know how the scope of the project will evolve and how your file will be included. </p>\n\n<p>I'm not a big JS freak so I won't be able to give you the specifics on exactly why JS events are bad but <a href=\"http://www.slideshare.net/cheilmann/javascript-best-practices-1041724\" rel=\"nofollow\">Christian Heilmann talks about JS best practices here</a>, you could take a look. Also try googling \"JS best practices\"</p>\n\n<p>Edit: Wikipedia about global variables, that could also apply to your problem :</p>\n\n<blockquote>\n  <p>[global variables] are usually\n  considered bad practice precisely\n  because of their nonlocality: a global\n  variable can potentially be modified\n  from anywhere, (unless they reside in\n  protected memory) and any part of the\n  program may depend on it. A global\n  variable therefore has an unlimited\n  potential for creating mutual\n  dependencies, and adding mutual\n  dependencies increases complexity. See\n  Action at a distance. However, in a\n  few cases, global variables can be\n  suitable for use. For example, they\n  can be used to avoid having to pass\n  frequently-used variables continuously\n  throughout several functions.</p>\n</blockquote>\n\n<p>via <a href=\"http://en.wikipedia.org/wiki/Global_variable\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Global_variable</a></p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>I assume by \"events\" you mean the event-handling JavaScript (functions).</p>\n\n<p>In general, it's bad to use more than one global variable in JS.  (It's impossible not to use at least one if you're storing any data for future use.)  That's because it runs into the same problem as all <a href=\"http://en.wikipedia.org/wiki/Namespace%5F%28computer%5Fscience%29\" rel=\"nofollow\">namespacing</a> tries to solve - what if you wrote a method doSomething() and someone else wrote a method called doSomething()?</p>\n\n<p>The best way to get around this is to make a global variable that is an object to hold all of your data and functions.  For example:</p>\n\n<pre><code>var MyStuff = {};\nMyStuff.counter = 0;\nMyStuff.eventHandler = function() { ... };\nMyStuff.doSomething = function() { ... };\n\n// Later, when you want to call doSomething()...\nMyStuff.doSomething();\n</code></pre>\n\n<p>This way, you're minimally polluting the global namespace; you only need worry that someone else uses your global variable.</p>\n\n<p>Of course, none of this is a problem if your code will never play with anyone else's...  but this sort of thinking will bite you in the ass later if you ever do end up using someone else's code.  As long as everyone plays nice in terms of JS global names, all code can get along.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There shouldn't be any problem using global variables in your code as long as you are wrapping them inside a uniqe namespase/object (to avoid collision with scripts that are not yours)</p>\n\n<p>the main adventage of using global variable in javascript derives from the fact that javascript is not a strong type language. there for, if you pass somes complex objects as arguments to a function, you will probebly lose all the intellisence for those objects (inside the function scope.) \nwhile using global objects insteads, will preserve that intellisence.</p>\n\n<p>I personally find that very usfull and it certainly have place in my code.</p>\n\n<p>(of course, one should alwayse make the right balance between locales and globals variables)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've heard that it's not a good idea to make elements global in JavaScript. I don't understand why. Is it something IE can't handle?</p>\n\n<p>For example:</p>\n\n<pre><code>    div = getElementById('topbar');\n</code></pre>\n",
            "last_activity_date": 1349711452,
            "question_id": 794598,
            "score": 0,
            "tags": [
                "javascript",
                "internet-explorer",
                "variables",
                "events",
                "global"
            ],
            "title": "Why is it bad to make elements global variables in Javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Why? </p>\n\n<p>And anyway you can't detect it. User can open new window not only with ctrl+n but also with File->New Window.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes and no,</p>\n\n<p>You'll always see it if a control have focus, else the event is sent directly to the browser and the code on the page never hear about it.</p>\n\n<p>In my experience you can't hijack the browsers shortcut, your mileage may vary.  You are likely to know it happened but the browser will do its thing (for obvious reason)</p>\n\n<p>In most browser the effect of Ctrl+N is to open a new window at the same URL as the old one and associate it with the same sessionID.  </p>\n\n<p>Your best bet would be to modify the back end code if possible and allow for such things.  Breaking the browser's feature is never a good thing.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>We were trying to avoid ctrl-n javascript hooks</p>\n</blockquote>\n\n<p>Forget it. Whilst you could in theory try to catch keypress events for \u2018n\u2019 with the Control key modifier, there are any number of other ways to open a new window or tab which may be more likely to be used, and you won't be able to catch. File->New Window/Tab, middle click or shift-click link, middle click back/forward buttons, right-click-open-in-new-window, open bookmark in new tab, double-click browser icon...</p>\n\n<blockquote>\n  <p>The user is already authenticated and we make heavy use of sessions.</p>\n</blockquote>\n\n<p>That shouldn't be a problem in itself. I guess what you mean is that your application is dumping all sorts of page-specific data in the session that it shouldn't have, and now you find the application breaks when you have more than one window open on it? Well, commiserations and happy rewriting.</p>\n\n<p>In the meantime about all you can do is tell the user \u201cplease don't try to open two browser windows on the same application\u201d. There are potential ways you can make JavaScript on one page notice that JavaScript is running on another page in the same domain at the same time, generally involving using document.cookie as a inter-page communications conduit. But that's also a bit fragile.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>If opening a new window causes a problem in your application, then you should fix the application code to handle it instead of trying to apply an inconsistent and unreliable client-side \"bandage\".  That's my opinion.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could possibly put a window count into the session and increment it on <code>window.onload</code> and decrement it on <code>window.onunload</code>.</p>\n\n<p>Imagine me tutting, sucking air through my teeth and going \"better you than me, guvna\" if you use that, though.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What I have done to solve this issue is when the user authenticates set the window name on valid login.</p>\n\n<pre><code>&lt;script&gt;\n\nwindow.name = 'oneWindow';\n\n&lt;/script&gt;\n</code></pre>\n\n<p>And then on the master page do a javascript check:</p>\n\n<pre><code>&lt;script&gt;\n\nif (window.history.length == 0 || window.name != 'oneWindow') \n\n//history length to see if it's a new tab or opened in a new window  0 for IE, 1 for FF\n\n//window name to see if it's a CTRL + N new window\n\n&lt;/script&gt;\n</code></pre>\n\n<p>If the check is true then hide/remove the main content of the page and show a message stating they are doing something unsupported.</p>\n\n<p>This works when your login page is not tied into the master page.</p>\n\n<p>If you do not have a master page then I would suggest putting the check on all your pages.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can we detect when a user opens a new window.  The user is already authenticated and we make heavy use of sessions.</p>\n\n<p>We were trying to avoid ctrl-n javascript hooks but maybe that is an option.</p>\n\n<p>I am assuming the request is the exact same URL...with CTRL-n?</p>\n",
            "last_activity_date": 1255620030,
            "question_id": 632062,
            "score": 0,
            "tags": [
                "javascript",
                "html",
                "new-window"
            ],
            "title": "Ways to detect CTRL-N or when a user opens a new window"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The short answer: you can not do it. Browsers restrict the interaction between content from different websites using the <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\" rel=\"nofollow\">same origin policy</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm trying to get the contents of an <code>&lt;iframe&gt;</code> from another page.</p>\n\n<p>The other page is a different website; I'm logged into that website and I get its contents and store it in the <code>&lt;iframe&gt;</code>.</p>\n\n<p>How do I get the contents of that <code>&lt;iframe&gt;</code> into the current window ?</p>\n",
            "last_activity_date": 1326835707,
            "question_id": 540283,
            "score": 0,
            "tags": [
                "javascript",
                "html",
                "iframe"
            ],
            "title": "Getting contents of iframe"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It because of recycling use of views in ListView. You should create some HashMap:</p>\n\n<pre><code>HashMap&lt;Integer, Boolean&gt; checked;\n</code></pre>\n\n<p>Then in your constructor do this:</p>\n\n<pre><code>checked = new HashMap&lt;Integer, Boolean&gt;(getCount());\n</code></pre>\n\n<p>After set OnCheckedChangeListener on your checkboxes, and in event method do this:</p>\n\n<pre><code>checked.put(position, yourCheckBoxCheckedState);\n</code></pre>\n\n<p>And in getView() method do this:</p>\n\n<pre><code>Boolean isChecked = checked.get(position);\ncheckBox.setChecked(isChecked == null ? false : isChecked)\n</code></pre>\n\n<p>Try this, I think it should help</p>\n\n<p>UPDATE</p>\n\n<pre><code>resetBtn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                adapter.deselectAll();\n            }\n        });\n</code></pre>\n\n<p>Then in adapter create method:</p>\n\n<pre><code> public void deselectAll() {\n   checked = new HashMap&lt;Integer, Boolean&gt;(getCount());\n   notifyDataSetChanged();\n }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>In your <code>FilterDrawerItem</code> class, make a boolean variable <code>isChecked</code>.</p>\n\n<p>Now in your adapter class, write something like this:</p>\n\n<pre><code>if(dItem.isChecked){\n    drawerHolder.checkBox.setChecked(true);\n}\nelse{\n    drawerHolder.checkBox.setChecked(false);\n}\n</code></pre>\n\n<p>and in your <code>OnCheckedChangeListener</code>:</p>\n\n<pre><code>if (isChecked) {\n    //your other code\n    dItem.setChecked(true);\n    notifyDataSetChanged();\n} else {\n    //your other code\n    dItem.setChecked(false);\n    notifyDataSetChanged();\n}\n</code></pre>\n\n<p>@Orest Savchak's answer is also right, but keeping track of checkboxes in your POJO classes will help you to retrieve the checked items later and also do other things easier, like you want to uncheck all the checkboxes on click of \"Reset\" button. For that, in <code>onClick()</code> on reset button, you'll just need to do:</p>\n\n<pre><code>for(int i=0; i&lt;FilterDrawerItem.size; i++){\n    FilterDrawerItem.get(i).setChecked(false);\n}\nadapterObject.notifyDataSetChanged();\n</code></pre>\n\n<p><strong>EDIT 1:</strong></p>\n\n<p>Create getter setter for <code>drawerItemList</code> in your adapter and then in <code>onClick()</code> of reset button, in place of <code>dataList</code>, do as following:</p>\n\n<pre><code>List&lt;FilterDrawerItem&gt; adapterDataList=adapter.getDataList();\nfor(int i=0; i&lt;adapterDataList.size(); i++){\n    adapterDataList.get(i).setCheckBoxId(false);\n}\nadapter.setDataList(adapterDataList);\nadapter.notifyDataSetChanged();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have drawn a customized navigation drawer with ListView and header but when i scroll the List the checkbox in the List are getting unchecked. </p>\n\n<p>Secondly when i click on the reset button in the header part I want that all the checkbox in the Listview should get get unchecked. I have been trying this to get it working but unable to find any solution..</p>\n\n<p>The snippets are</p>\n\n<pre><code>public class NavigationDrawer extends Fragment{\n   @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n\n        View view = inflater.inflate(R.layout.filter_navigation_drawer, container,false);\n        drawerListView= ( ListView ) view.findViewById( R.id.listDrawer );\n        drawerListView.setOnItemClickListener(new FilterDrawerItemClickListener());\n\n        dataList.add(new FilterDrawerItem(\"sample1\",true));\n        dataList.add(new FilterDrawerItem(\"sample2\",true));\n        dataList.add(new FilterDrawerItem(\"sample3\",true));\n        dataList.add(new FilterDrawerItem(\"sample4\",true));\n        dataList.add(new FilterDrawerItem(\"sample5\",true));\n        dataList.add(new FilterDrawerItem(\"sample2\",true));\n        dataList.add(new FilterDrawerItem(\"sample2\",true));\n        dataList.add(new FilterDrawerItem(\"sample2\",true));\n        dataList.add(new FilterDrawerItem(\"sample2\",true));\n\n        adapter = new FilterCustomDrawerAdapter(getActivity(), R.layout.drawer_filter,dataList,drawerStatus);\n        drawerListView.setAdapter(adapter);\n        adapter.getFilterList();\n\n        resetBtn = (TextView)view.findViewById(R.id.filterby_reset);\n        if(resetBtn != null){\n            resetBtn.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    application.setFilterStatus(\"reset\");\n                    for(int i=0; i&lt;dataList.size(); i++){\n                       dataList.get(i).setCheckBoxId(false);\n                    }\n                    adapter.notifyDataSetChanged();\n                    // this.onCreateView();\n                }\n            });\n        }\n\n        return view;\n    }\n}\n</code></pre>\n\n<p><strong>FilterCustomDrawerAdapter.java</strong></p>\n\n<pre><code>public class FilterCustomDrawerAdapter extends ArrayAdapter&lt;FilterDrawerItem&gt; {\n\n    Context context;\n    List&lt;FilterDrawerItem&gt; drawerItemList;\n    int layoutResID;\n    int item = 0;\n    String status;\n    List&lt;Integer&gt; filterList = new ArrayList&lt;Integer&gt;();\n    DrawerStatus drawerStatus;\n    StataApplication application = StataApplication.getInstance();\n\n    HashMap&lt;Integer, Boolean&gt; checked;   // newly added code\n\n    public FilterCustomDrawerAdapter(Context context, int layoutResourceID,\n                                     List&lt;FilterDrawerItem&gt; listItems,DrawerStatus drawerStatus) {\n        super(context, layoutResourceID, listItems);\n        this.context = context;\n        this.drawerItemList = listItems;\n        this.layoutResID = layoutResourceID;\n        this.drawerStatus = drawerStatus;\n        checked = new HashMap&lt;Integer, Boolean&gt;(getCount());\n    }\n\n    public FilterCustomDrawerAdapter(Context context, int layoutResourceID,\n                                     List&lt;FilterDrawerItem&gt; listItems) {\n        super(context, layoutResourceID, listItems);\n        this.context = context;\n        this.drawerItemList = listItems;\n        this.layoutResID = layoutResourceID;\n    }\n\n    @Override\n    public View getView(final int position, View convertView, ViewGroup parent) {\n        // TODO Auto-generated method stub\n\n        final FilterDrawerItemHolder drawerHolder;\n        View view = convertView;\n\n        if (view == null) {\n            LayoutInflater inflater = ((Activity) context).getLayoutInflater();\n            drawerHolder = new FilterDrawerItemHolder();\n\n            view = inflater.inflate(layoutResID, parent, false);\n            drawerHolder.ItemName = (TextView) view.findViewById(R.id.drawer_filterName);\n            drawerHolder.checkBox = (CheckBox) view.findViewById(R.id.drawer_cbox);\n\n            view.setTag(drawerHolder);\n        } else {\n            drawerHolder = (FilterDrawerItemHolder) view.getTag();\n        }\n\n        FilterDrawerItem dItem = (FilterDrawerItem) this.drawerItemList.get(position);\n\n        drawerHolder.ItemName.setText(dItem.getItemName());\n        TextView resetView = (TextView)view.findViewById(R.id.filterby_reset);\n        CheckBox checkBox = (CheckBox) view.findViewById(R.id.drawer_cbox);\n\n        // Newly added code\n        Boolean isChecked = checked.get(position);\n        checkBox.setChecked(isChecked == null ? false : isChecked);\n\n      // if(application.getFilterStatus() != null) {\n           if(checkBox.isChecked()){\n               drawerHolder.checkBox.setChecked(false);\n           }\n      // }\n\n        checkBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            @Override\n            public void onCheckedChanged(CompoundButton buttonView,boolean isChecked) {\n                if (isChecked) {\n                    filterList.add(new Integer(position));\n                    checked.put(position, true);\n                } else {\n                    filterList.remove(new Integer(position));\n                    checked.put(position, false);\n                }\n            }\n        });\n\n        drawerHolder.checkBox.setTag(position);\n        Log.d(\"FILTER_LIST_SIZE\",String.valueOf(filterList.size()));\n\n        return view;\n    }\n\n    private static class FilterDrawerItemHolder {\n        TextView ItemName;\n        CheckBox checkBox;\n    }\n\n    public List&lt;Integer&gt; getFilterList(){\n        return filterList;\n    }\n}\n</code></pre>\n\n<p>In the image below when I scroll the list and if i make the checkbox sample1 and sample 2 checked it becomes unchecked on scrolling.\nand also on clicking reset button in the header i want all my checkbox to be unchecked..\nNot able to get this working ...</p>\n\n<p><strong>UPDATE 1</strong></p>\n\n<pre><code> resetBtn.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    List&lt;FilterDrawerItem&gt; adapterDataList = adapter.getDrawerItemList();\n                    for(int i=0; i&lt;adapterDataList.size(); i++){  // At this place i am getting the size as 9\n                        adapterDataList.get(i).setCheckBoxId(false);\n                    }\n                    adapter.setDrawerItemList(adapterDataList);\n                    adapter.notifyDataSetChanged();\n                }\n            });\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/PIqRK.png\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1416414671,
            "question_id": 27013996,
            "score": -1,
            "tags": [
                "javascript",
                "android",
                "android-navigation"
            ],
            "title": "Listview containing checkbox and text is getting reset on scrolling"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You need to require the Firebase module in your app.</p>\n\n<p>Somewhere in your code, you have this,</p>\n\n<pre><code>var myApp = angular.module(\"myApp\",[]);\n</code></pre>\n\n<p>It needs to say</p>\n\n<pre><code>var myApp = angular.module(\"myApp\",['firebase']);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I am trying to setup firebase, angularfire for my Yeoman, AngularJS Application. I followed this tutorial here (<a href=\"https://www.firebase.com/tutorial/#tutorial/angular/0\" rel=\"nofollow\">https://www.firebase.com/tutorial/#tutorial/angular/0</a>) but I keep getting a</p>\n\n<pre><code>Uncaught Error: [$injector:modulerr] Failed to instantiate module MyApp due to:\nError: [$injector:modulerr] Failed to instantiate module firebase due to:\nError: [$injector:nomod] Module 'firebase' is not available! You either misspelled the m...&lt;omitted&gt;...1)\n</code></pre>\n\n<p>How do I get past this?</p>\n\n<p>I believe it is these two line from the tutorial which says it downloads firebase for us but I might be putting it in the wrong place. I tried putting it inbetween the head tags, right by the bower components, as well as next to all my scripts</p>\n\n<pre><code>&lt;script src='https://cdn.firebase.com/js/client/1.0.15/firebase.js'&gt;&lt;/script&gt;\n&lt;script src='https://cdn.firebase.com/libs/angularfire/0.8.0/angularfire.min.js'&gt;&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1406654819,
            "question_id": 25021003,
            "score": -1,
            "tags": [
                "javascript",
                "angularjs",
                "firebase",
                "yeoman",
                "angularfire"
            ],
            "title": "Firebase, AngularFire Error: Module firebase is not available"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Try This i have added counter to stop the execution of adding even number after it reaches 50, let me if it works</p>\n\n<pre><code>    var fibonacci = new Array();\n\n//Add fibonacci array items\nfibonacci[0] = 0;\nfibonacci[1] = 1;\nvar sum=0;\n\n//Since it takes 150 fib numbers to obtain 50 even, loop through that many.\nvar counter=0;\nfor(loopFib=2; loopFib&lt;=150; loopFib++) {\n\n    // Next fibonacci number = previous + one before previous\n    fibonacci[loopFib] = fibonacci[loopFib-2] + fibonacci[loopFib-1];\n\n    //test for even numbers with if then statement\n    var integer = parseInt(fibonacci[loopFib]);\n\n    if (integer % 2 == 0  &amp;&amp; counter &lt; 50) {\n        counter++;\n        //Add up the even fib numbers if even and output into dispay variable\n        var display = sum += fibonacci[loopFib];\n    //console.log(fibonacci[loopFib]);   //output results to html page\n            //console.log(counter);  \n        document.getElementById(\"sumFibResult\").innerHTML = display ;\n\n}\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to \u201cdisplays the sum of first 50 even Fibonacci numbers\u201d and currently am getting the wrong output.</p>\n\n<p>I need to: </p>\n\n<ol>\n<li><p>create a loop that generates Fibonacci numbers.</p></li>\n<li><p>test each one for whether it's even or odd. </p></li>\n<li><p>Add up up the even ones, counting them as you go.</p></li>\n</ol>\n\n<p>I am new to JavaScript and am having trouble getting my code to work. Any help/guidance is greatly appreciated. Is their a better, simpler way?</p>\n\n<p>------------HERE IS MY CODE THUS FAR -------- </p>\n\n<pre><code>&lt;div id=\"sumFib\" class=\"hwbutton\"&gt;Get the Sum!&lt;/div&gt;&lt;br&gt;\n\nThe sum of the first 50 even Fibonacci numbers is: &lt;span class=\"\" id=\"sumFibResult\"&gt;&lt;/span&gt;\n&lt;br&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nvar getFibSum = document.getElementById(\"sumFib\");\ngetFibSum.onclick = function(){\nfiftyEvenFibonacciSum();\n }\n\nfunction fiftyEvenFibonacciSum(){\n\nvar loopFib;\n\n//Initialize fibonacci array\n\nvar fibonacci = new Array();\n\n//Add fibonacci array items\nfibonacci[0] = 0;\nfibonacci[1] = 1;\nvar sum=0;\n\n//Since it takes 150 fib numbers to obtain 50 even, loop through that many.\nfor(loopFib=2; loopFib&lt;=150; loopFib++) {\n\n    // Next fibonacci number = previous + one before previous\n    fibonacci[loopFib] = fibonacci[loopFib-2] + fibonacci[loopFib-1];\n\n    //test for even numbers with if then statement\n    var integer = parseInt(fibonacci[loopFib]);\n\n    if (integer % 2 == 0) {\n\n    //Add up the even fib numbers if even and output into dispay variable\n    var display = sum += fibonacci[loopFib];\n\n    //output results to html page\n    document.getElementById(\"sumFibResult\").innerHTML = display ;\n\n}\n}\n}\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1394387590,
            "question_id": 22240354,
            "score": -1,
            "tags": [
                "javascript",
                "arrays",
                "loops",
                "if-statement"
            ],
            "title": "Javascript looping through Fibonacci numbers and testing for even numbers"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Not sure if I understand what you need to do, but you can always watch the number of DIVs on page with</p>\n\n<pre><code>var divCount = document.getElementsByTagName('div').length;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you can either set <code>display:none</code> on the divs you don't want to display, or in jQuery <code>$('#element').hide();</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I programmed this countdown. How can I control the max number of divs displaying on the page. Example: Thare are 20 countdowns on the page but only 5 are displaying(visible) to user.  </p>\n\n<blockquote>\n  <p>EDIT: Now there are 19 countdown displaying on page, how can I set\n  that thare are max 7 countdown displaying on page?</p>\n</blockquote>\n\n<p>Here is the code: \u00a0\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</p>\n\n<pre><code>    &lt;html&gt;\n    &lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;title&gt;Tramvaj.info&lt;/title&gt;\n    &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;link rel=\"shortcut icon\" type=\"image/png\" href=\"favi.png\" /&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\"/&gt;\n    &lt;style type=\"text/css\"&gt;\n    html, body {\n        height: 100%;\n        margin: 0;\n        overflow-x: hidden;\n        overflow-y: auto;\n        padding: 0;\n        width: 100%;\n        background-image: url(\"bg.jpg\");\n        background-repeat: no-repeat;\n        background-position: center center;\n        background-attachment: fixed;       \n    }\n\n            #header_container { background:#1f62a7; border:0px solid #1f62a7; height:35px; left:0; position:relative; width:100%; top:0; }\n\n\n            #headermenu {\n        width:100%;\n        height:100%;\n        position:relative;\n        top:-8px;\n        background-color: rgba(255,255,255,0.6);\n    }\n    .headermenu {\n        width: 150px;\n        height: 26px;\n        padding-top:15px;\n        display: block;\n        float: left;\n\n        text-align: center;\n        text-decoration: none!important;\n        text-transform: uppercase;\n\n        font-family: \"Lucida Grande\", \"Lucida Sans Unicode\", \"Lucida Sans\", Geneva, Verdana, sans-serif;\n        font-weight: 400;\n        font-size: 15px;\n        letter-spacing: 2px;\n        color: #ffffff!important;\n\n        transition: all .5s ease;\n    }\n\n    #page-wrap { width: 230px; margin: 50px auto; padding: 20px; background: white; -moz-box-shadow: 0 0 20px black; -webkit-box-shadow: 0 0 20px black; box-shadow: 0 0 20px black; }\n            p { font: 30px/2 Georgia, Serif; margin: 0 0 30px 0; text-indent: 40px; }\n\n    a { color: inherit;\n    text-decoration: none;\n      } \n\n    #dani1Box, #sati1Box, #minute1Box, #sekunde1Box, #dani2Box, #sati2Box, #minute2Box, #sekunde2Box, #dani3Box, #sati3Box, #minute3Box, #sekunde3Box, #dani4Box, #sati4Box, #minute4Box, #sekunde4Box, \n    #dani5Box, #sati5Box, #minute5Box, #sekunde5Box, #dani6Box, #sati6Box, #minute6Box, #sekunde6Box, #dani7Box, #sati7Box, #minute7Box, #sekunde7Box, #dani8Box, #sati8Box, #minute8Box, #sekunde8Box,\n    #dani9Box, #sati9Box, #minute9Box, #sekunde9Box, #dani10Box, #sati10Box, #minute10Box, #sekunde10Box, #dani11Box, #sati11Box, #minute11Box, #sekunde11Box, #dani12Box, #sati12Box, #minute12Box, #sekunde12Box, #dani1Box, #sati13Box, #minute13Box, #sekunde13Box, #dani14Box, #sati14Box, #minute14Box, #sekunde14Box, #dani15Box, #sati15Box, #minute15Box, #sekunde15Box, #dani16Box, #sati16Box, #minute16Box, #sekunde16Box, #dani17Box, #sati17Box, #minute17Box, #sekunde17Box, #dani18Box, #sati18Box, #minute18Box, #sekunde18Box, #dani19Box, #sati19Box, #minute19Box, #sekunde19Box, #dani20Box, #sati20Box, #minute20Box, #sekunde20Box{\n             font-size:25px;\n             color:#1f62a7;\n             font-family:Sans-serif;\n             display: inline-block;\n    }\n\n    &lt;/style&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n    &lt;div id=\"header_container\"&gt;\n        &lt;div id=\"header\"&gt;&lt;/div&gt; \n    &lt;div align=\"center\"&gt;\n    &lt;div id=\"headermenu\"&gt;\n    &lt;a href=\"stanice.html\" class=\"headermenu\"&gt;SVE STANICE&lt;/a&gt;\n    &lt;a href=\"about.html\" class=\"headermenu\"&gt;HOME&lt;/a&gt;\n    &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div id=\"page-wrap\"&gt;\n\n    &lt;script&gt;\n    var d = new Date();\n    var n = d.getDay();\n    //if(n == 1 || n == 2 || n == 3 || n == 4 || n == 5){\n    var timer1;\n    function cdtd1() {\n        var sad1 = new Date();\n        var dolazak1 = new Date(sad1.getFullYear(),sad1.getMonth(),sad1.getDate(),18,00,00);\n        var timeDiff1 = dolazak1.getTime() - sad1.getTime();\n        if (timeDiff1 &lt;= 0) {\n            clearInterval(timer1);\n            $(\"#Box1\").remove();\n\n        }\n        var sekunde1 = Math.floor(timeDiff1 / 1000);\n        var minute1 = Math.floor(sekunde1 / 60);\n        var sati1 = Math.floor(minute1 / 60);\n        var dani1 = Math.floor(sati1 / 24);\n        sati1 %= 24;\n        minute1 %= 60;\n        sekunde1 %= 60;\n\n        $(\"#dani1Box\").html(dani1);\n        $(\"#sati1Box\").html('7-Dubrava ' + sati1 + ':');\n        $(\"#minute1Box\").html(minute1 + ':');\n        $(\"#sekunde1Box\").html(sekunde1);\n\n        timer1 = setTimeout(cdtd1, 1000);\n    }\n\n    $(document).ready(function() {\n         cdtd1();\n    });\n    //--------------------------------------------------------------------------------------------------\n    var timer2;\n    function cdtd2() {\n        var sad2 = n\n\n        ew Date();\n            var dolazak2 = new Date(sad2.getFullYear(),sad2.getMonth(),sad2.getDate(),18,00,00);\n            var timeDiff2 = dolazak2.getTime() - sad2.getTime();\n            if (timeDiff2 &lt;= 0) {\n                clearInterval(timer2);\n                $(\"#Box2\").remove();\n\n            }\n            var sekunde2 = Math.floor(timeDiff2 / 1000);\n            var minute2 = Math.floor(sekunde2 / 60);\n            var sati2 = Math.floor(minute2 / 60);\n            var dani2 = Math.floor(sati2 / 24);\n            sati2 %= 24;\n            minute2 %= 60;\n            sekunde2 %= 60;\n            $(\"#dani2Box\").html(dani2);\n            $(\"#sati2Box\").html('7-Dubrava ' + sati2 + ':');\n            $(\"#minute2Box\").html(minute2 + ':');\n            $(\"#sekunde2Box\").html(sekunde2);\n\n            timer2 = setTimeout(cdtd2, 1000);\n        }\n\n        $(document).ready(function() {\n             cdtd2();\n        });\n        //----------------------------------------------------------------------------------\n        var timer3;\n        function cdtd3() {\n            var sad3 = new Date();\n            var dolazak3 = new Date(sad3.getFullYear(),sad3.getMonth(),sad3.getDate(),18,00,00);\n            var timeDiff3 = dolazak3.getTime() - sad3.getTime();\n            if (timeDiff3 &lt;= 0) {\n                clearInterval(timer3);\n                $(\"#Box3\").remove();\n\n\n            }\n            var sekunde3 = Math.floor(timeDiff3 / 1000);\n            var minute3 = Math.floor(sekunde3 / 60);\n            var sati3 = Math.floor(minute3 / 60);\n            var dani3 = Math.floor(sati3 / 24);\n            sati3 %= 24;\n            minute3 %= 60;\n            sekunde3 %= 60;\n\n            $(\"#dani3Box\").html(dani3);\n            $(\"#sati3Box\").html('7-Dubrava ' + sati3 + ':');\n            $(\"#minute3Box\").html(minute3 + ':');\n            $(\"#sekunde3Box\").html(sekunde3);\n\n            timer3 = setTimeout(cdtd3, 1000);\n        }\n\n        $(document).ready(function() {\n             cdtd3();\n        });\n        //-----------------------------------------------------------------------------------------\n        var timer4;\n        function cdtd4() {\n            var sad4 = new Date();\n            var dolazak4 = new Date(sad4.getFullYear(),sad4.getMonth(),sad4.getDate(),18,00,00);\n            var timeDiff4 = dolazak4.getTime() - sad4.getTime();\n            if (timeDiff4 &lt;= 0) {\n                clearInterval(timer4);\n                $(\"#Box4\").remove();\n\n\n            }\n            var sekunde4 = Math.floor(timeDiff4 / 1000);\n            var minute4 = Math.floor(sekunde4 / 60);\n            var sati4 = Math.floor(minute4 / 60);\n            var dani4 = Math.floor(sati4 / 24);\n            sati4 %= 24;\n            minute4 %= 60;\n            sekunde4 %= 60;\n\n            $(\"#dani4Box\").html(dani4);\n            $(\"#sati4Box\").html('7-Dubrava ' + sati4 + ':');\n            $(\"#minute4Box\").html(minute4 + ':');\n            $(\"#sekunde4Box\").html(sekunde4);\n\n            timer4 = setTimeout(cdtd4, 1000);\n        }\n\n        $(document).ready(function() {\n             cdtd4();\n        });\n\n        var timer5;\n        function cdtd5() {\n            var sad5 = new Date();\n            var dolazak5 = new Date(sad5.getFullYear(),sad5.getMonth(),sad5.getDate(),18,00,00);\n            var timeDiff5 = dolazak5.getTime() - sad5.getTime();\n            if (timeDiff5 &lt;= 0) {\n                clearInterval(timer5);\n                $(\"#Box5\").remove();\n\n\n            }\n            var sekunde5 = Math.floor(timeDiff5 / 1000);\n            var minute5 = Math.floor(sekunde5 / 60);\n            var sati5 = Math.floor(minute5 / 60);\n            var dani5 = Math.floor(sati5 / 24);\n            sati5 %= 24;\n            minute5 %= 60;\n            sekunde5 %= 60;\n\n            $(\"#dani5Box\").html(dani5);\n            $(\"#sati5Box\").html('14-Zapru\u0111e ' + sati5 + ':');\n            $(\"#minute5Box\").html(minute5 + ':');\n            $(\"#sekunde5Box\").html(sekunde5);\n\n\n\n\n\n\n\n     timer5 = setTimeout(cdtd5, 1000);\n        }\n\n        $(document).ready(function() {\n             cdtd5();\n        });\n\n\n        var timer6;\n        function cdtd6() {\n            var sad6 = new Date();\n            var dolazak6 = new Date(sad6.getFullYear(),sad6.getMonth(),sad6.getDate(),18,00,00);\n            var timeDiff6 = dolazak6.getTime() - sad6.getTime();\n            if (timeDiff6 &lt;= 0) {\n                clearInterval(timer6);\n                $(\"#Box6\")\n\n    .remove();\n\n\n        }\n        var sekunde6 = Math.floor(timeDiff6 / 1000);\n        var minute6 = Math.floor(sekunde6 / 60);\n        var sati6 = Math.floor(minute6 / 60);\n        var dani6 = Math.floor(sati6 / 24);\n        sati6 %= 24;\n        minute6 %= 60;\n        sekunde6 %= 60;\n\n        $(\"#dani6Box\").html(dani6);\n        $(\"#sati6Box\").html('7-Dubrava ' + sati6 + ':');\n        $(\"#minute6Box\").html(minute6 + ':');\n        $(\"#sekunde6Box\").html(sekunde6);\n\n        timer6 = setTimeout(cdtd6, 1000);\n    }\n\n    $(document).ready(function() {\n         cdtd6();\n    });\n\n    var timer7;\n    function cdtd7() {\n        var sad7 = new Date();\n        var dolazak7 = new Date(sad7.getFullYear(),sad7.getMonth(),sad7.getDate(),18,00,00);\n        var timeDiff7 = dolazak7.getTime() - sad7.getTime();\n        if (timeDiff7 &lt;= 0) {\n            clearInterval(timer7);\n            $(\"#Box7\").remove();\n\n\n        }\n        var sekunde7 = Math.floor(timeDiff7 / 1000);\n        var minute7 = Math.floor(sekunde7/ 60);\n        var sati7 = Math.floor(minute7 / 60);\n        var dani7 = Math.floor(sati7 / 24);\n        sati7 %= 24;\n        minute7 %= 60;\n        sekunde7 %= 60;\n\n        $(\"#dani7Box\").html(dani7);\n        $(\"#sati7Box\").html('14-Zapru\u0111e ' + sati7 + ':');\n        $(\"#minute7Box\").html(minute7 + ':');\n        $(\"#sekunde7Box\").html(sekunde7);\n\n\n\n        timer7 = setTimeout(cdtd7, 1000);\n    }\n\n    $(document).ready(function() {\n         cdtd7();\n    });\n\n\n    var timer8;\n    function cdtd8() {\n        var sad8 = new Date();\n        var dolazak8 = new Date(sad8.getFullYear(),sad8.getMonth(),sad8.getDate(),18,00,00);\n        var timeDiff8 = dolazak8.getTime() - sad8.getTime();\n        if (timeDiff8 &lt;= 0) {\n            clearInterval(timer8);\n            $(\"#Box8\").remove();\n\n\n        }\n        var sekunde8 = Math.floor(timeDiff8 / 1000);\n        var minute8 = Math.floor(sekunde8 / 60);\n        var sati8 = Math.floor(minute8 / 60);\n        var dani8 = Math.floor(sati8 / 24);\n        sati8 %= 24;\n        minute8 %= 60;\n        sekunde8 %= 60;\n\n        $(\"#dani8Box\").html(dani8);\n        $(\"#sati8Box\").html('14-Zapru\u0111e ' + sati8 + ':');\n        $(\"#minute8Box\").html(minute8 + ':');\n        $(\"#sekunde8Box\").html(sekunde8);\n\n        timer8 = setTimeout(cdtd8, 1000);\n    }\n\n    $(document).ready(function() {\n         cdtd8();\n    });\n\nvar timer9;\nfunction cdtd9() {\n    var sad9 = new Date();\n    var dolazak9 = new Date(sad9.getFullYear(),sad9.getMonth(),sad9.getDate(),18,00,00);\n    var timeDiff9= dolazak9.getTime() - sad9.getTime();\n    if (timeDiff9 &lt;= 0) {\n        clearInterval(timer9);\n        $(\"#Box9\").remove();\n\n\n    }\n    var sekunde9 = Math.floor(timeDiff9/ 1000);\n    var minute9 = Math.floor(sekunde9/ 60);\n    var sati9= Math.floor(minute9 / 60);\n    var dani9= Math.floor(sati9/ 24);\n    sati9 %= 24;\n    minute9 %= 60;\n    sekunde9 %= 60;\n\n    $(\"#dani9Box\").html(dani9);\n    $(\"#sati9Box\").html('14-Zapru\u0111e ' + sati9 + ':');\n    $(\"#minute9Box\").html(minute9 + ':');\n    $(\"#sekunde9Box\").html(sekunde9);\n\n    timer9 = setTimeout(cdtd9, 1000);\n}\n\n$(document).ready(function() {\n     cdtd9();\n});\n\nvar timer10;\nfunction cdtd10() {\n    var sad10 = new Date();\n    var dolazak10 = new Date(sad10.getFullYear(),sad10.getMonth(),sad10.getDate(),18,00,00);\n    var timeDiff10 = dolazak10.getTime() - sad10.getTime();\n    if (timeDiff10 &lt;= 0) {\n        clearInterval(timer10);\n        $(\"#Box10\").remove();\n\n\n    }\n    var sekunde10 = Math.floor(timeDiff10/ 1000);\n    var minute10 = Math.floor(sekunde10 / 60);\n    var sati10 = Math.floor(minute10 / 60);\n    var dani10 = Math.floor(sati10/ 24);\n    sati10 %= 24;\n    minute10 %= 60;\n    sekunde10 %= 60;\n\n    $(\"#dani10Box\").html(dani10);\n    $(\"#sati10Box\").html('14-Zapru\u0111e ' + sati10 + ':');\n    $(\"#minute10Box\").html(minute10 + ':');\n    $(\"#sekunde10Box\").html(sekunde10);\n\n    timer10 = setTimeout(cdtd10, 1000);\n}\n\n$(document).ready(function() {\n     cdtd10();\n});\n\nvar timer11;\nfunction cdtd11() {\n    var sad11 = new Date();\n    var dolazak11 = new Date(sad11.getFullYear(),sad11.getMonth(),sad11.getDate(),18,00,00);\n    var timeDiff11 = dolazak11.getTime() - sad11.getTime();\n    if (timeDiff11 &lt;= 0) {\n        clearInterval(timer11);\n        $(\"#Box11\").remove();\n\n    }\n    var sekunde11 = Math.floor(timeDiff11 / 1000);\n    var minute11 = Math.floor(sekunde11 / 60);\n    var sati11 = Math.floor(minute11 / 60);\n    var dani11 = Math.floor(sati11 / 24);\n    sati11 %= 24;\n    minute11 %= 60;\n    sekunde11 %= 60;\n\n    $(\"#dani11Box\").html(dani11);\n    $(\"#sati11Box\").html('7-Dubrava ' + sati11 + ':');\n    $(\"#minute11Box\").html(minute11 + ':');\n    $(\"#sekunde11Box\").html(sekunde11);\n\n    timer11 = setTimeout(cdtd11, 1000);\n}\n\n$(document).ready(function() {\n     cdtd11();\n});\n\nvar timer12;\nfunction cdtd12() {\n    var sad12 = new Date();\n    var dolazak12 = new Date(sad12.getFullYear(),sad12.getMonth(),sad12.getDate(),18,00,00);\n    var timeDiff12 = dolazak12.getTime() - sad12.getTime();\n    if (timeDiff12 &lt;= 0) {\n        clearInterval(timer12);\n        $(\"#Box12\").remove();\n\n    }\n    var sekunde12 = Math.floor(timeDiff12 / 1000);\n    var minute12 = Math.floor(sekunde12 / 60);\n    var sati12 = Math.floor(minute12 / 60);\n    var dani12 = Math.floor(sati12 / 24);\n    sati12 %= 24;\n    minute12 %= 60;\n    sekunde12 %= 60;\n\n    $(\"#dani12Box\").html(dani12);\n    $(\"#sati12Box\").html('7-Dubrava ' + sati12 + ':');\n    $(\"#minute12Box\").html(minute12 + ':');\n    $(\"#sekunde12Box\").html(sekunde12);\n\n    timer12 = setTimeout(cdtd12, 1000);\n}\n\n$(document).ready(function() {\n     cdtd12();\n});\n\nvar timer13;\nfunction cdtd13() {\n    var sad13 = new Date();\n    var dolazak13 = new Date(sad13.getFullYear(),sad13.getMonth(),sad13.getDate(),18,00,00);\n    var timeDiff13 = dolazak13.getTime() - sad13.getTime();\n    if (timeDiff13 &lt;= 0) {\n        clearInterval(timer13);\n        $(\"#Box13\").remove();\n\n    }\n    var sekunde13 = Math.floor(timeDiff13 / 1000);\n    var minute13 = Math.floor(sekunde13 / 60);\n    var sati13 = Math.floor(minute13 / 60);\n    var dani13 = Math.floor(sati13 / 24);\n    sati13 %= 24;\n    minute13 %= 60;\n    sekunde13 %= 60;\n\n    $(\"#dani13Box\").html(dani13);\n    $(\"#sati13Box\").html('7-Dubrava ' + sati13 + ':');\n    $(\"#minute13Box\").html(minute13 + ':');\n    $(\"#sekunde13Box\").html(sekunde13);\n\n    timer13 = setTimeout(cdtd13, 1000);\n}\n\n$(document).ready(function() {\n     cdtd13();\n});\n\nvar timer14;\nfunction cdtd14() {\n    var sad14 = new Date();\n    var dolazak14 = new Date(sad14.getFullYear(),sad14.getMonth(),sad14.getDate(),18,00,00);\n    var timeDiff14 = dolazak14.getTime() - sad14.getTime();\n    if (timeDiff14 &lt;= 0) {\n        clearInterval(timer14);\n        $(\"#Box14\").remove();\n\n    }\n    var sekunde14 = Math.floor(timeDiff14 / 1000);\n    var minute14 = Math.floor(sekunde14 / 60);\n    var sati14 = Math.floor(minute14 / 60);\n    var dani14 = Math.floor(sati14 / 24);\n    sati14 %= 24;\n    minute14 %= 60;\n    sekunde14 %= 60;\n\n    $(\"#dani14Box\").html(dani14);\n    $(\"#sati14Box\").html('7-Dubrava ' + sati14 + ':');\n    $(\"#minute14Box\").html(minute14 + ':');\n    $(\"#sekunde14Box\").html(sekunde14);\n\n    timer14 = setTimeout(cdtd14, 1000);\n}\n\n$(document).ready(function() {\n     cdtd14();\n});\n\nvar timer15;\nfunction cdtd15() {\n    var sad15 = new Date();\n    var dolazak15 = new Date(sad15.getFullYear(),sad15.getMonth(),sad15.getDate(),18,00,00);\n    var timeDiff15 = dolazak15.getTime() - sad15.getTime();\n    if (timeDiff15 &lt;= 0) {\n        clearInterval(timer15);\n        $(\"#Box15\").remove();\n\n    }\n    var sekunde15 = Math.floor(timeDiff15 / 1000);\n    var minute15 = Math.floor(sekunde15 / 60);\n    var sati15 = Math.floor(minute15 / 60);\n    var dani15 = Math.floor(sati15 / 24);\n    sati15 %= 24;\n    minute15 %= 60;\n    sekunde15 %= 60;\n\n    $(\"#dani15Box\").html(dani15);\n    $(\"#sati15Box\").html('7-Dubrava ' + sati15 + ':');\n    $(\"#minute15Box\").html(minute15 + ':');\n    $(\"#sekunde15Box\").html(sekunde15);\n\n    timer15 = setTimeout(cdtd15, 1000);\n}\n\n$(document).ready(function() {\n     cdtd15();\n});\n\nvar timer16;\nfunction cdtd16() {\n    var sad16 = new Date();\n    var dolazak16 = new Date(sad16.getFullYear(),sad16.getMonth(),sad16.getDate(),18,00,00);\n    var timeDiff16 = dolazak16.getTime() - sad16.getTime();\n    if (timeDiff16 &lt;= 0) {\n        clearInterval(timer16);\n        $(\"#Box16\").remove();\n\n    }\n    var sekunde16 = Math.floor(timeDiff16 / 1000);\n    var minute16 = Math.floor(sekunde16 / 60);\n    var sati16 = Math.floor(minute16 / 60);\n    var dani16 = Math.floor(sati16 / 24);\n    sati16 %= 24;\n\n\nminute16 %= 60;\n    sekunde16 %= 60;\n\n    $(\"#dani16Box\").html(dani16);\n    $(\"#sati16Box\").html('7-Dubrava ' + sati16 + ':');\n    $(\"#minute16Box\").html(minute16 + ':');\n    $(\"#sekunde16Box\").html(sekunde16);\n\n    timer16 = setTimeout(cdtd16, 1000);\n}\n\n$(document).ready(function() {\n     cdtd16();\n});\n\nvar timer17;\nfunction cdtd17() {\n    var sad17 = new Date();\n    var dolazak17 = new Date(sad17.getFullYear(),sad17.getMonth(),sad17.getDate(),18,00,00);\n    var timeDiff17 = dolazak17.getTime() - sad17.getTime();\n    if (timeDiff17 &lt;= 0) {\n        clearInterval(timer17);\n        $(\"#Box17\").remove();\n\n    }\n    var sekunde17 = Math.floor(timeDiff17 / 1000);\n    var minute17 = Math.floor(sekunde17 / 60);\n    var sati17 = Math.floor(minute17 / 60);\n    var dani17 = Math.floor(sati17 / 24);\n    sati17 %= 24;\n    minute17 %= 60;\n    sekunde17 %= 60;\n\n    $(\"#dani17Box\").html(dani17);\n    $(\"#sati17Box\").html('7-Dubrava ' + sati17 + ':');\n    $(\"#minute17Box\").html(minute17 + ':');\n    $(\"#sekunde17Box\").html(sekunde17);\n\n    timer17 = setTimeout(cdtd17, 1000);\n}\n\n$(document).ready(function() {\n     cdtd17();\n});\n\n\n\nvar timer18;\nfunction cdtd18() {\n    var sad18 = new Date();\n    var dolazak18 = new Date(sad18.getFullYear(),sad18.getMonth(),sad18.getDate(),18,00,00);\n    var timeDiff18 = dolazak18.getTime() - sad18.getTime();\n    if (timeDiff18 &lt;= 0) {\n        clearInterval(timer18);\n        $(\"#Box18\").remove();\n\n    }\n    var sekunde18 = Math.floor(timeDiff18 / 1000);\n    var minute18 = Math.floor(sekunde18 / 60);\n    var sati18 = Math.floor(minute18 / 60);\n    var dani18 = Math.floor(sati18 / 24);\n    sati18 %= 24;\n    minute18 %= 60;\n    sekunde18 %= 60;\n\n    $(\"#dani18Box\").html(dani18);\n    $(\"#sati18Box\").html('7-Dubrava ' + sati18 + ':');\n    $(\"#minute18Box\").html(minute18 + ':');\n    $(\"#sekunde18Box\").html(sekunde18);\n\n    timer18 = setTimeout(cdtd18, 1000);\n}\n\n$(document).ready(function() {\n     cdtd18();\n});\n\nvar timer19;\nfunction cdtd19() {\n    var sad19 = new Date();\n    var dolazak19 = new Date(sad19.getFullYear(),sad19.getMonth(),sad19.getDate(),18,00,00);\n    var timeDiff19 = dolazak19.getTime() - sad19.getTime();\n    if (timeDiff19 &lt;= 0) {\n        clearInterval(timer19);\n        $(\"#Box19\").remove();\n\n    }\n    var sekunde19 = Math.floor(timeDiff19 / 1000);\n    var minute19 = Math.floor(sekunde19 / 60);\n    var sati19 = Math.floor(minute19 / 60);\n    var dani19 = Math.floor(sati19 / 24);\n    sati19 %= 24;\n    minute19 %= 60;\n    sekunde19 %= 60;\n\n    $(\"#dani19Box\").html(dani19);\n    $(\"#sati19Box\").html('7-Dubrava ' + sati19 + ':');\n    $(\"#minute19Box\").html(minute19 + ':');\n    $(\"#sekunde19Box\").html(sekunde19);\n\n    timer19 = setTimeout(cdtd19, 1000);\n}\n\n$(document).ready(function() {\n     cdtd19();\n});\n\n\n\n//}\n&lt;/script&gt;           \n\n&lt;center&gt;\n&lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:2px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n\n    &lt;div id=\"Box1\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati1Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute1Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde1Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n\n\n    &lt;div id=\"Box2\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati2Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute2Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde2Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n\n\n    &lt;div id=\"Box3\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati3Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute3Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde3Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n\n\n    &lt;div id=\"Box4\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati4Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute4Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde4Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n\n    &lt;div id=\"Box5\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati5Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute5Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde5Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"Box6\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati6Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute6Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde6Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"Box7\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati7Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute7Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde7Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"Box8\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati8Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute8Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde8Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"Box9\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati9Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute9Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde9Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"Box10\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati10Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute10Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde10Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"Box11\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati11Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute11Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde11Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"Box12\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati12Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute12Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde12Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"Box13\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati13Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute13Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde13Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"Box14\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati14Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute14Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde14Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"Box15\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati15Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute15Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde15Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"Box16\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati16Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute16Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde16Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"Box17\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati17Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute17Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde17Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"Box18\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati18Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute18Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde18Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"Box19\"&gt;\n    &lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:5px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n    &lt;div id=\"sati19Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"minute19Box\"&gt;&lt;/div&gt;\n    &lt;div id=\"sekunde19Box\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n\n\n&lt;h1 style=\"font-family:Helvetica;color:#FFFFFF;font-size:2px;\"&gt;&amp;nbsp;&lt;/h1&gt;\n   &lt;/center&gt;    \n\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Thanks\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n</code></pre>\n",
            "last_activity_date": 1391884841,
            "question_id": 21650056,
            "score": -1,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "html"
            ],
            "title": "Control the max number of divs on page"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Here's how you can update the votes. You don't need update_votes to be an ajax function.</p>\n\n<pre><code>def update_votes(song_id):\n    song = Song.objects.get(id=song_id)\n    song.votes += 1\n    song.save()\n</code></pre>\n\n<p>You can then call this function from within disable_button.</p>\n\n<pre><code>@dajaxice_register\ndef disable_button(request, song_id):\n    update_votes(song_id)\n    #disable the buttons\n    return #whatever\n</code></pre>\n\n<p>And are you sure you're using the right selector to disable your buttons?</p>\n",
                    "is_accepted": true,
                    "score": 1
                }
            ],
            "body": "<p>I have a <code>Song</code> model with a <code>votes</code> attribute. I have a <code>Vote as Favourite</code> button displayed below each <code>Song</code> object. I want when a user clicks on the <code>Vote as Favourite</code> button the <code>votes</code> attribute associated with that <code>Song</code> object should increment by 1 and all the <code>Vote as Favourite</code> buttons should be disabled.</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>{% for song in dj_song_list %}\n    &lt;div&gt;\n        &lt;p class=\"song\"&gt;&lt;h3&gt;&lt;strong&gt;{{ song.name }}&lt;/strong&gt;&lt;/h3&gt;&lt;/p&gt;\n        &lt;p&gt;&lt;strong&gt;Artist: &lt;/strong&gt;{{ song.artists}}&lt;/p&gt;\n        &lt;button type=\"button\" class=\"btn btn-default btn-custom\" id='vote' onclick=\"Dajaxice.hunt.disable_button(Dajax.process)\"&gt;Vote as Favourite&lt;/button&gt;\n    &lt;/div&gt;\n{% endfor %}\n</code></pre>\n\n<p>I'm using dajaxice/dajax for my AJAX call. This is what I've come up with as my ajax.py</p>\n\n<p><strong>ajax.py</strong></p>\n\n<pre><code>from django.utils import simplejson\nfrom dajaxice.decorators import dajaxice_register\nfrom dajax.core import Dajax\n\n@dajaxice_register\ndef disable_button(request):\n    dajax = Dajax()\n    dajax.assign('#vote', 'disabled', 'disabled')\n    return dajax.json()\n\n@dajaxice_register(method=\"POST\")   \ndef update_votes(request, song):\n    song.votes += 1\n    song.save()\n    return simplejson.dumps({'message':'Thank you for voting'})\n</code></pre>\n\n<p><strong>JS</strong></p>\n\n<pre><code>function callback(data){\n    alert(data.message);\n}\n</code></pre>\n\n<p>How do I get the value of <code>Song</code> object to send to <code>update_votes()</code>?</p>\n\n<p>The <code>disable_button()</code> disables only the first vote button. How can I disable all the vote buttons?</p>\n\n<p>How can I call both <code>update_votes()</code> and <code>disable_button()</code> using the same buttons onclick attribute?</p>\n",
            "last_activity_date": 1387816327,
            "question_id": 20731943,
            "score": -1,
            "tags": [
                "javascript",
                "python",
                "ajax",
                "django",
                "dajaxice"
            ],
            "title": "Getting object value for AJAX call using Dajaxice"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I think you are calling the function <code>returndata()</code> at any random point which you can't do. The reason is- the variable <code>PASON</code> is assigned value asynchronously. So, you have to code in such a way that you call <code>returndata()</code> after the value is assigned!</p>\n\n<p>Its not quite clear what you are trying to do with the function <code>returndata()</code>. But, I hope your concept is clear now.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If you view this question thank you in advance!, I am working on pulling data from Facebook.</p>\n\n<p>I am trying to pull the username from Facebook so i can use it in a later stage I have embedded the following code in the FB Root div.</p>\n\n<p>I know the retrieve works! however i am not able to pass it on to the function <code>returndata</code> I am relative new to javascript could you please help me out? i have tried everything    </p>\n\n<p>There is an alert in there to check if it is retrieving data</p>\n\n<pre><code>&lt;div id=\"fb-root\"&gt;&lt;/div&gt;\n&lt;script type=\"text/javascript\"&gt;\n\n     $(document).ready(function()\n     {\n        var appId = \"121070974711874\";\n\n        // If logging in as a Facebook canvas application use this URL.\n        var redirectUrl = \"http://apps.facebook.com/bggressive\";\n\n        // If logging in as a website do this. Be sure to add the host to your           application's App Domain list. \n        var redirectUrl = window.location.href;\n\n        // If the user did not grant the app authorization go ahead and tell them that. Stop code execution.\n        if (0 &lt;= window.location.href.indexOf (\"error_reason\"))\n        {\n             $(document.body).append (\"&lt;p&gt;Authorization denied!&lt;/p&gt;\");\n             return;\n        }\n\n\n       // When the Facebook SDK script has finished loading init the\n       // SDK and then get the login status of the user. The status is\n       // reported in the handler.\n       window.fbAsyncInit = function()\n       {\n           FB.init({\n                     appId : appId,\n                     status : true,\n                     cookie : true,\n                     oauth : true\n           });\n           FB.getLoginStatus (onCheckLoginStatus);\n       };\n\n       (function(d)\n       {\n          var js, id = 'facebook-jssdk'; if (d.getElementById(id)) {return;}\n          js = d.createElement('script'); js.id = id; js.async = true;\n          js.src = \"//connect.facebook.net/en_US/all.js\";\n          d.getElementsByTagName('head')[0].appendChild(js);\n       }(document));\n\n\n       function onCheckLoginStatus (response)\n       {\n          if (response.status != \"connected\")\n          {\n              top.location.href = \"https://www.facebook.com/dialog/oauth?client_id=\" + appId + \"&amp;redirect_uri=\" + encodeURIComponent (redirectUrl) + \"&amp;scope=user_photos,friends_photos\";\n          }\n          else\n          {\n              FB.api('/me', function(response) \n              {\n                  PASON = response.username\n                  alert(response.username)\n              });\n          }\n       }\n   });\n\n   function returndata()\n   {\n      get = PASON\n      return get\n   };\n\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1374929950,
            "question_id": 17897470,
            "score": -1,
            "tags": [
                "javascript",
                "facebook",
                "function",
                "facebook-graph-api"
            ],
            "title": "Unable to pass a response form facebook to another function"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Because <code>localStorage</code> doesn't store booleans, it stores strings. So you're assigning <code>\"false\"</code> (not <code>false</code>), which is a truthy value. Instead, use</p>\n\n<pre><code>document.getElementById(\"a\").checked = JSON.parse(localStorage[\"a\"]);\n// or\ndocument.getElementById(\"a\").checked = localStorage[\"a\"] !== \"false\";\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>It is a string. You have to parse it. </p>\n\n<pre><code>document.getElementById(\"a\").checked = JSON.parse(localStorage[\"a\"]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm working on a chrome extension, and the page shown in this example is the options page. I'm using <code>localStorage[value]</code> to save the config values, and then when the page loads, I'm calling a function that sets the checkboxes to the value that the user seleced before.</p>\n\n<pre><code>&lt;body onload=\"restore_options()\"&gt;\n\nfunction restore_options() {\n    alert(localStorage[\"a\"]); //says false if unchecked when I saved options\n    document.getElementById(\"a\").checked = localStorage[\"a\"]; //even if false, it checks the checkbox\n}\n</code></pre>\n\n<p>Oddly enough, if I did something like <code>document.getElementById(\"a\").checked = false;</code> it doesn't check the checkbox, whereas the above code does, even though <code>localStorage[\"a\"]</code> is false. Why is this, and how do I set the checked value of the checkbox to what it's actually supposed to be?</p>\n",
            "last_activity_date": 1372871738,
            "question_id": 17453613,
            "score": -1,
            "tags": [
                "javascript",
                "html",
                "local-storage"
            ],
            "title": "Why doesn&#39;t my boolean value return correctly from localStorage?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Suggest you look at DateJS <a href=\"http://code.google.com/p/datejs/\" rel=\"nofollow\">http://code.google.com/p/datejs/</a> or <a href=\"http://www.datejs.com/\" rel=\"nofollow\">http://www.datejs.com/</a>. Handles PDT for you.</p>\n\n<p>Here is an alternative for you:</p>\n\n<p>Use: Date.UTC(year, month, day, hours, minutes, seconds, ms)</p>\n\n<p>Example:\nFor 1 Jan 2013 6AM PST</p>\n\n<blockquote>\n  <p>var date = new Date(Date.UTC(2013, 0, 1, 14, 0, 0))<br>\n  console.log(date.toUTCString());  </p>\n</blockquote>\n\n<p>Prints: \"Tue, 01 Jan 2013 14:00:00 GMT\"</p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>I believe you can simply add 14 hours before converting to UTC.</p>\n\n<p>Or you can create a new Date object out of the UTC string:\n</p>\n\n<pre><code>var date = new Date();\ndate = date.addHours(14);\nvar dateUTC = new Date(date.toUTCString());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Mostly comment:</p>\n\n<blockquote>\n  <p>I need to pick a future date from calender, suppose the date I am\n  selecting is 10/14/2014,</p>\n</blockquote>\n\n<p>Since there isn't a 14th month, I suppose you mean 14 October, 2014. Since this is an international forum, better to use an unambiguous format.</p>\n\n<blockquote>\n  <p>\u2026 and the format of date should be UTC</p>\n</blockquote>\n\n<p>UTC is not a format, it's a standard time. </p>\n\n<p>I think you are confused. If you want say 2014-10-14T06:00:00-08:00 in UTC, then the equivalent is 2014-10-14T14:00:00Z.</p>\n\n<p>You are using the <code>toUTCString</code> method, but it is implementation dependent, so you'll get different results in different browsers. You probably want the <code>toISOString</code> method, but it's ES5 and not implemented in all browsers.</p>\n\n<p>You need to provide some examples of how you want times to be converted, otherwise you may as well just get the date in ISO8601 format and append \"T14:00:00Z\" to it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You said:</p>\n\n<blockquote>\n  <p>My understanding is that PST timezone is -8:00 so I have added 14 hours to the UTC time so that time becomes 6:00am PST</p>\n</blockquote>\n\n<p>Uh - no.  That will put you on the following day.  If you wanted to stay in PST, you would <em>subtract</em> 8 hours from the UTC time.  <code>-8:00</code> means that it is 8 hours <em>behind</em> UTC.</p>\n\n<p>However, the Pacific Time zone isn't just fixed at PST.  It alternates between PST (-8) and PDT (-7) for daylight saving time.  In order to determine the correct offset, you need to use a library that implements the TZDB database.  Refer to <a href=\"http://stackoverflow.com/a/17476856/634824\">this duplicate answer here</a>.</p>\n\n<p>The only way to do it without a fancy library is to actually <em>be</em> in the pacific time zone.  JavaScript will convert UTC dates to the local time zone for display, and it will use the correct offset.  But it only knows about the <em>local</em> time zone.  If Pacific Time is not your local time zone, then you must use a library.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I need to pick a future date from calender, suppose the date I am selecting is <code>10/14/2014</code>, now what I want is to send the date with the time to server, so that at server end it always reaches as 6am time in PST timezone and the format of date should be UTC.</p>\n\n<p>What I am doing is </p>\n\n<p><code>targetDate = new Date($(\"#calendar\").val());\n targetDate = targetDate.toUTCString();\n targetDate = targetDate.addHours(14);</code></p>\n\n<p>My understanding is that PST timezone is -8:00 so I have added 14 hours to the UTC time so that time becomes 6:00am PST</p>\n\n<p>The problem I am facing is that it is not letting me to add 14 hours since the object has already been converted to string.</p>\n\n<p>addHours is the custom function I am having to add the hours in given time.</p>\n\n<p>If I write</p>\n\n<p><code>targetDate = new Date($(\"#calendar\").val());\n targetDate = targetDate.addHours(14);\n targetDate = targetDate.toUTCString();</code></p>\n\n<p>then it works good but in this case problem is time will always be different when the request is coming from different timezones.</p>\n\n<p>Any help is appreciated.</p>\n",
            "last_activity_date": 1372965784,
            "question_id": 13854105,
            "score": -1,
            "tags": [
                "javascript",
                "datetime"
            ],
            "title": "Convert Javascript Date object to PST time zone"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Onclick should be a function, not a statement. Try </p>\n\n<pre><code>btn.onclick=function(){ \n  alert('hi');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try this: <a href=\"http://jsfiddle.net/uxfD4/\" rel=\"nofollow\">http://jsfiddle.net/uxfD4/</a></p>\n\n<p>the onclick assignment accepts a function.  What your code did was evaluate alert('hi'), returning null.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>window.onload=initall();\n</code></pre>\n\n<p><strong>calls</strong> the function <code>initall</code> and assigns the <em>return value</em> of <code>initall</code> as event handler. That is, <code>initall</code> is executed immediately and not when the <code>load</code> event is triggered.<br>\n Similar for <code>btn.onclick=alert('hi');</code>. But in both cases, the return value is not a function.</p>\n\n<p>You have to assign <strong>functions</strong> to those properties, which are then being called when the event occurs.</p>\n\n<pre><code>function initall(){\n    var btn = document.getElementById('btn');\n\n    btn.onclick = function() { // creates and assigns the function at once\n        alert('hi');\n    };\n}\n\nwindow.onload = initall; // assign the function reference, no `()`.\n</code></pre>\n\n<p>I recommend to <a href=\"http://www.quirksmode.org/js/introevents.html\" rel=\"nofollow\">read the excellent tutorials at quirksmode.org</a> to learn about event handling and of course the <a href=\"https://developer.mozilla.org/en/JavaScript/Guide\" rel=\"nofollow\">MDN JavaScript Guide</a> for the JavaScript basics.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>all! I am having a problem using the a simple onclick method.  Kindly please help me out.  Here is that code... When i click on the button nothing really happens. </p>\n\n<pre><code>window.onload=initall();\nvar xhr = false;\n\nfunction initall(){\n\n    var btn=document.getElementById('btn');\n\n    btn.onclick=alert('hi');\n}\n\n\n\n&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=\"utf-8\"&gt;\n\n&lt;title&gt;Untitled Document&lt;/title&gt;\n\n&lt;script type=\"text/javascript\" src=\"testjs.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;input type=\"text\" required name=\"id\"&gt;\n&lt;input type=\"button\"  id=\"btn\" value=\"send\"&gt;\n&lt;div id=\"result\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1346787321,
            "question_id": 12270046,
            "score": -1,
            "tags": [
                "javascript"
            ],
            "title": "Onclick() function on working"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This line,</p>\n\n<p><code>console.log( pic_real_width + 'x' + pic_real_height );</code></p>\n\n<p>does not wait for these lines </p>\n\n<pre><code>    pic_real_width = this.width;   \n    pic_real_height = this.height;\n\n    console.log( pic_real_width + 'x' + pic_real_height );\n    // -- returns true 570x320 -- \n</code></pre>\n\n<p>to execute, because its asynchronous. </p>\n\n<p>Thus,\n <code>console.log( pic_real_width + 'x' + pic_real_height );</code> executes before callback function gets called (i.e. before you set the <code>width</code> and <code>height</code> ).</p>\n\n<p>Since, you havent defined them already, they show <code>undefined</code>.</p>\n\n<p>A trivial solution would be,</p>\n\n<pre><code>$('&lt;img/&gt;').attr('src', $(img).attr('src')).load(function() {\n        pic_real_width = this.width;   \n        pic_real_height = this.height;\n\n        console.log( pic_real_width + 'x' + pic_real_height );\n        // -- returns true 570x320 --\n        restOfMyProcessing();\n\n}); \n\nfunction restOfMyProcessing() {\n    console.log( pic_real_width + 'x' + pic_real_height );\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>You try to use pic_real_width and pic_real_height before they set in image load event.<br>\nLike in your code, first <code>alert( pic_real_width + 'x' + pic_real_height )</code> is the one after image load function which returns <code>undefined</code> and the second <code>alert</code> in load event returns what you expect.<br>\nAlthough it's better to move setting of source attribute after load function/event:  </p>\n\n<pre><code>$('&lt;img/&gt;')\n.load(function() {\n    pic_real_width = this.width;\n    pic_real_height = this.height;\n\n    alert( pic_real_width + 'x' + pic_real_height );\n    // -- returns true 570x320 --\n    //now continue process here or call another function...\n})\n.attr('src', $(img).attr('src'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am in a situation that needs be solve with this way; need convert a <code>local variable</code> to a <code>global variable</code>. There is an example returning image's real width and height which i found these method from <a href=\"http://stackoverflow.com/a/670433/1428241\"><strong>this answer.</strong></a>.</p>\n\n<p>Need to convert local varialbes <code>pic_real_height</code> and <code>pic_real_width</code> to global variables with returning their true values.</p>\n\n<p><strong><a href=\"http://jsfiddle.net/mjaA3/78/\" rel=\"nofollow\">Here is jsFiddle.</a></strong></p>\n\n<p>CSS :</p>\n\n<pre><code>img { width:0px; height:0px; }\u200b\n</code></pre>\n\n<p>jQuery :</p>\n\n<pre><code>console.log($('.imgCon img').height());//returns 0\n\nvar img = $('.imgCon img')[0]; // Get my img elem\nvar pic_real_width, pic_real_height;\n$('&lt;img/&gt;').attr('src', $(img).attr('src')).load(function() {\n        pic_real_width = this.width;   \n        pic_real_height = this.height;\n\n        console.log( pic_real_width + 'x' + pic_real_height );\n        // -- returns true 570x320 --\n});\n//problem starts here:\nconsole.log( pic_real_width + 'x' + pic_real_height );\n//returns undefined\n// need to return this as an global variable 570x320\n</code></pre>\n",
            "last_activity_date": 1347972929,
            "question_id": 11811980,
            "score": -1,
            "tags": [
                "javascript",
                "jquery",
                "global-variables",
                "undefined",
                "local-variables"
            ],
            "title": "jQuery: how to access outside variable?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>o = JSON.parse('your string here');\nconsole.log(o);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Lenuk/\" rel=\"nofollow\">http://jsfiddle.net/Lenuk/</a></p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>Your syntax for <code>JSON</code> data is incorrect. Json data is enclosed within {} and not []. Still for parsing JSON data use json2.js library from the link.</p>\n\n<p><a href=\"https://github.com/douglascrockford/JSON-js/blob/master/json2.js\" rel=\"nofollow\">https://github.com/douglascrockford/JSON-js/blob/master/json2.js</a> </p>\n\n<p>and use;</p>\n\n<pre><code>var myObject = JSON.parse(myJSONtext, reviver);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>var obj = JSON.parse($record);\ndocument.getElementById(\"hello\").innerHTML =obj.id[0];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can someone please show me how I can get my JSON data and use it in javascript?</p>\n\n<p>My data looks like this...</p>\n\n<pre><code>[{\n    \"id\": \"1\",\n    \"0\": \"1\",\n    \"filename\": \"CONFIG 1\",\n    \"1\": \"CONFIG 1\",\n    \"setting_name\": \"Parameter 501\",\n    \"2\": \"Parameter 501\",\n    \"setting_value\": \"true\",\n    \"3\": \"true\"\n}, {\n    \"id\": \"1\",\n    \"0\": \"1\",\n    \"filename\": \"CONFIG 1\",\n    \"1\": \"CONFIG 1\",\n    \"setting_name\": \"Parameter 502\",\n    \"2\": \"Parameter 502\",\n    \"setting_value\": \"true\",\n    \"3\": \"true\"\n}, {\n    \"id\": \"1\",\n    \"0\": \"1\",\n    \"filename\": \"CONFIG 1\",\n    \"1\": \"CONFIG 1\",\n    \"setting_name\": \"Parameter 503\",\n    \"2\": \"Parameter 503\",\n    \"setting_value\": \"false\",\n    \"3\": \"false\"\n}, {\n    \"id\": \"1\",\n    \"0\": \"1\",\n    \"filename\": \"CONFIG 1\",\n    \"1\": \"CONFIG 1\",\n    \"setting_name\": \"Parameter 504\",\n    \"2\": \"Parameter 504\",\n    \"setting_value\": \"6\",\n    \"3\": \"6\"\n}, {\n    \"id\": \"1\",\n    \"0\": \"1\",\n    \"filename\": \"CONFIG 1\",\n    \"1\": \"CONFIG 1\",\n    \"setting_name\": \"Parameter 505\",\n    \"2\": \"Parameter 505\",\n    \"setting_value\": \"16\",\n    \"3\": \"16\"\n}, {\n    \"id\": \"1\",\n    \"0\": \"1\",\n    \"filename\": \"CONFIG 1\",\n    \"1\": \"CONFIG 1\",\n    \"setting_name\": \"Parameter 506\",\n    \"2\": \"Parameter 506\",\n    \"setting_value\": \"17\",\n    \"3\": \"17\"\n}, {\n    \"id\": \"1\",\n    \"0\": \"1\",\n    \"filename\": \"CONFIG 1\",\n    \"1\": \"CONFIG 1\",\n    \"setting_name\": \"Parameter 507\",\n    \"2\": \"Parameter 507\",\n    \"setting_value\": \"3\",\n    \"3\": \"3\"\n}, {\n    \"id\": \"1\",\n    \"0\": \"1\",\n    \"filename\": \"CONFIG 1\",\n    \"1\": \"CONFIG 1\",\n    \"setting_name\": \"Parameter 508\",\n    \"2\": \"Parameter 508\",\n    \"setting_value\": \"19\",\n    \"3\": \"19\"\n}, {\n    \"id\": \"1\",\n    \"0\": \"1\",\n    \"filename\": \"CONFIG 1\",\n    \"1\": \"CONFIG 1\",\n    \"setting_name\": \"Parameter 509\",\n    \"2\": \"Parameter 509\",\n    \"setting_value\": \"19\",\n    \"3\": \"19\"\n}, {\n    \"id\": \"2\",\n    \"0\": \"2\",\n    \"filename\": \"CONFIG 2\",\n    \"1\": \"CONFIG 2\",\n    \"setting_name\": \"Parameter 502\",\n    \"2\": \"Parameter 502\",\n    \"setting_value\": \"false\",\n    \"3\": \"false\"\n}, {\n    \"id\": \"2\",\n    \"0\": \"2\",\n    \"filename\": \"CONFIG 2\",\n    \"1\": \"CONFIG 2\",\n    \"setting_name\": \"Parameter 503\",\n    \"2\": \"Parameter 503\",\n    \"setting_value\": \"true\",\n    \"3\": \"true\"\n}, {\n    \"id\": \"2\",\n    \"0\": \"2\",\n    \"filename\": \"CONFIG 2\",\n    \"1\": \"CONFIG 2\",\n    \"setting_name\": \"Parameter 504\",\n    \"2\": \"Parameter 504\",\n    \"setting_value\": \"6\",\n    \"3\": \"6\"\n}, {\n    \"id\": \"2\",\n    \"0\": \"2\",\n    \"filename\": \"CONFIG 2\",\n    \"1\": \"CONFIG 2\",\n    \"setting_name\": \"Parameter 505\",\n    \"2\": \"Parameter 505\",\n    \"setting_value\": \"16\",\n    \"3\": \"16\"\n}, {\n    \"id\": \"2\",\n    \"0\": \"2\",\n    \"filename\": \"CONFIG 2\",\n    \"1\": \"CONFIG 2\",\n    \"setting_name\": \"Parameter 506\",\n    \"2\": \"Parameter 506\",\n    \"setting_value\": \"17\",\n    \"3\": \"17\"\n}, {\n    \"id\": \"2\",\n    \"0\": \"2\",\n    \"filename\": \"CONFIG 2\",\n    \"1\": \"CONFIG 2\",\n    \"setting_name\": \"Parameter 507\",\n    \"2\": \"Parameter 507\",\n    \"setting_value\": \"3\",\n    \"3\": \"3\"\n}, {\n    \"id\": \"2\",\n    \"0\": \"2\",\n    \"filename\": \"CONFIG 2\",\n    \"1\": \"CONFIG 2\",\n    \"setting_name\": \"Parameter 508\",\n    \"2\": \"Parameter 508\",\n    \"setting_value\": \"18\",\n    \"3\": \"18\"\n}, {\n    \"id\": \"2\",\n    \"0\": \"2\",\n    \"filename\": \"CONFIG 2\",\n    \"1\": \"CONFIG 2\",\n    \"setting_name\": \"Parameter 509\",\n    \"2\": \"Parameter 509\",\n    \"setting_value\": \"19\",\n    \"3\": \"19\"\n}, {\n    \"id\": \"2\",\n    \"0\": \"2\",\n    \"filename\": \"CONFIG 2\",\n    \"1\": \"CONFIG 2\",\n    \"setting_name\": \"Parameter 501\",\n    \"2\": \"Parameter 501\",\n    \"setting_value\": \"false\",\n    \"3\": \"false\"\n}, false]\n</code></pre>\n\n<p>Basically I have four fields...\nid, filename, setting_name and setting_value.</p>\n\n<p>I need to know how I can get this and convert it into a javascript array, so that I may use it withing my logic. N</p>\n",
            "last_activity_date": 1409391890,
            "question_id": 7199023,
            "score": -1,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "How to parse JSON data, using javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You will not be able to simply copy and paste JavaScript functionality into a CSS-only menu.  You will need to refactor the menu into a JS menu to stick a delay on it.  If you get stuck with that, please ask a new question about the specific issue you run into.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do you apply a hover intent to this all css menu? I really need help with this issue!!!!!!!</p>\n\n<p>This is the name and link to the menu code I want to use.</p>\n\n<p>Professional dropline #2\n<a href=\"http://www.stunicholls.com/menu/pro_dropline_2.html\" rel=\"nofollow\">http://www.stunicholls.com/menu/pro_dropline_2.html</a></p>\n\n<p>I have looked at alot of sites but was not sure if the code there was what I needed or not. Two such are listed below.</p>\n\n<ol>\n<li><a href=\"http://cherne.net/brian/resources/jquery.hoverIntent.html\" rel=\"nofollow\">http://cherne.net/brian/resources/jquery.hoverIntent.html</a></li>\n<li><a href=\"http://users.tpg.com.au/j_birch/plugins/superfish/#getting-started\" rel=\"nofollow\">http://users.tpg.com.au/j_birch/plugins/superfish/#getting-started</a></li>\n</ol>\n\n<p>Any assistance would be appreciated.</p>\n",
            "last_activity_date": 1306583529,
            "question_id": 5759237,
            "score": -1,
            "tags": [
                "javascript",
                "css",
                "menu",
                "hover",
                "hoverintent"
            ],
            "title": "How do you add Javascript Hover Intent to stunicholls Professional dropline #2 all CSS menu"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here is a jfiddle example of a modal overlay using jQuery.</p>\n\n<p><a href=\"http://jsfiddle.net/r77K8/1/\" rel=\"nofollow\">http://jsfiddle.net/r77K8/1/</a></p>\n\n<p>Hope this gets you started.</p>\n\n<p>Bob</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A simple modal pop up div or dialog box can be done by CSS properties and little bit of jQuery.The basic idea is simple:\n  <li>\n    1. Create a div with semi transparent background &amp; show it on top of your content page on click. \n  </li>\n  <li>\n    2. Show your pop up div or alert div on top of the semi transparent dimming/hiding div.\n  </li></p>\n\n<p>So we need three divs: \n<li>content(main content of the site).\n<li>hider(To dim the content).\n<li>popup_box(the modal div to display).</p>\n\n<p>First let us define the CSS:</p>\n\n<pre><code>    #hider\n    {\n        position:absolute;\n        top: 0%;\n        left: 0%;\n        width:1600px;\n        height:2000px;\n        margin-top: -800px; /*set to a negative number 1/2 of your height*/\n        margin-left: -500px; /*set to a negative number 1/2 of your width*/\n        /*\n        z- index must be lower than pop up box\n       */\n        z-index: 99;\n       background-color:Black;\n       //for transparency\n       opacity:0.6;\n    }\n\n    #popup_box  \n    {\n\n    position:absolute;\n        top: 50%;\n        left: 50%;\n        width:10em;\n        height:10em;\n        margin-top: -5em; /*set to a negative number 1/2 of your height*/\n        margin-left: -5em; /*set to a negative number 1/2 of your width*/\n        border: 1px solid #ccc;\n        border:  2px solid black;\n        z-index:100; \n\n    }\n</code></pre>\n\n<p>It is important that we set our hider div's z-index lower than pop_up box as we want to show popup_box on top.\n<br/>\nHere comes the java Script:</p>\n\n<pre><code>        $(document).ready(function () {\n        //hide hider and popup_box\n        $(\"#hider\").hide();\n        $(\"#popup_box\").hide();\n\n        //on click show the hider div and the message\n        $(\"#showpopup\").click(function () {\n            $(\"#hider\").fadeIn(\"slow\");\n            $('#popup_box').fadeIn(\"slow\");\n        });\n        //on click hide the message and the\n        $(\"#buttonClose\").click(function () {\n\n            $(\"#hider\").fadeOut(\"slow\");\n            $('#popup_box').fadeOut(\"slow\");\n        });\n\n        });\n</code></pre>\n\n<p>And finally the HTML:</p>\n\n<pre><code>&lt;div id=\"hider\"&gt;&lt;/div&gt;\n&lt;div id=\"popup_box\"&gt;\n    Message&lt;br /&gt;\n    &lt;a id=\"buttonClose\"&gt;Close&lt;/a&gt;\n&lt;/div&gt;    \n&lt;div id=\"content\"&gt;\n    Page's main content.&lt;br /&gt;\n    &lt;a id=\"showpopup\"&gt;ClickMe&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I have used jquery-1.4.1.min.js www.jquery.com/download and tested the code in Firefox. Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I need a JavaScript that shows hidden div on the center of the screen as modal with darked background like jquery dialog!</p>\n\n<p>example:</p>\n\n<pre><code>&lt;div id='divToShow' style='display:none'&gt;\n\nHere is the content of the div that should be shown as modal on the center of the page!\n\n&lt;/div&gt;\n</code></pre>\n\n<p>Who can help? Thanks</p>\n",
            "last_activity_date": 1410239269,
            "question_id": 4502435,
            "score": -1,
            "tags": [
                "javascript",
                "html",
                "background",
                "modal-dialog"
            ],
            "title": "Div as modal - javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Just created the following html file and it alerted the window.location for me in Google Chrome 4.0 - are you using an old version?</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" &gt;\n&lt;head&gt;\n    &lt;title&gt;Untitled Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\nalert(window.location);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The most common use of <code>window.location</code> is to make the browser load a new page. A common error is to assign the URL to the <code>window.location</code> object instead of it's property <code>href</code>. So, the correct way to do it is:</p>\n\n<pre><code>window.location.href = 'http://www.guffa.com';\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Resolved the issue.  There wasn't a problem with the function or with Chrome. The function should be called by a drupal form element.  I was adding the onclick event which called the function to the drupal form itself, instead of a particular form element.</p>\n\n<p>Pretty much doing this:</p>\n\n<pre><code>$form['testform'] = array(\n    '#type' =&gt; 'fieldset',\n    '#collapsible' =&gt; TRUE,\n    '#collapsed' =&gt; FALSE,\n        '#attributes' =&gt; array(\n        'onchange' =&gt; 'testfunc()'),\n );\n</code></pre>\n\n<p>Instead of this:</p>\n\n<pre><code>$form['testform']['element1'] = array(\n    '#type' =&gt; 'select',\n        '#options' =&gt; options,\n        '#required' =&gt; false,\n        '#attributes' =&gt; array(\n        'onchange' =&gt; 'testfunc()'),\n\n);\n</code></pre>\n\n<p>Don't I feel silly.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had the same problem, and I wasn't careful enough to make sure that the new redirected url contained white spaces (shame on me).</p>\n\n<p>So only Chrome stops this new location if the url is not standardized.</p>\n\n<p>Make sure you have an UpdatePanel if you are using a Master Page .</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was having this problem, and it ended up being that my javascript function was returning true after the window.location tag (due to nested functions).  FF and IE never processed that far, while chrome did.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try without <code>window.</code>.  For example, use <code>location.assign()</code> instead of <code>window.location.assign()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try appending \"return false;\" to your javascript call like so...</p>\n\n<pre><code>window.location.href='google.com;\nreturn false;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have a javascript function that uses window.location.  It works fine in Firefox and internet Explorer, but not in Chrome.  I've tested this on both Ubunutu Hardy and Windows Vista.  What is the underlying problem, and how can I circumvent it?</p>\n",
            "last_activity_date": 1357835558,
            "question_id": 2345807,
            "score": -1,
            "tags": [
                "javascript",
                "google-chrome"
            ],
            "title": "window.location Does Not Work on Chrome Browser"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Any UTF-8 string that is reversibly convertible to ASCII is already ASCII.</p>\n\n<p>UTF-8 can represent any unicode character - ASCII cannot.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>As others have said, you can't convert UTF-8 text/plain into ASCII text/plain without dropping data.</p>\n\n<p>You could convert UTF-8 text/plain into ASCII someother/format. For instance, HTML lets any character in UTF-8 be representing in an ASCII data file using <a href=\"http://www.w3.org/TR/html4/intro/sgmltut.html#h-3.2.3\" rel=\"nofollow\">character references</a>.</p>\n\n<p>If we continue with that example, in JavaScript, <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Global%5FObjects/String/charCodeAt\" rel=\"nofollow\">charCodeAt</a> could help with converting a string to a representation of it using HTML character references.</p>\n\n<p>Another approach is taken by <a href=\"http://tools.ietf.org/html/rfc1738#section-2.2\" rel=\"nofollow\">URLs</a>, and implemented in JS as <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Global%5FFunctions/encodeURIComponent\" rel=\"nofollow\">encodeURIComponent</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If the string is encoded as UTF-8, it's not a string any more. It's binary data, and if you want to represent the binary data as ASCII, you have to format it into a string that can be represented using the limited ASCII character set.</p>\n\n<p>One way is to use base-64 encoding (example in C#):</p>\n\n<pre><code>string original = \"asdf\";\n// encode the string into UTF-8 data:\nbyte[] encodedUtf8 = Encoding.UTF8.GetBytes(original);\n// format the data into base-64:\nstring base64 = Convert.ToBase64String(encodedUtf8);\n</code></pre>\n\n<p>If you want the string encoded as ASCII data:</p>\n\n<pre><code>// encode the base-64 string into ASCII data:\nbyte[] encodedAscii = Encoding.ASCII.GetBytes(base64);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could use an ASCII-only version of Douglas Crockford's json2.js quote function. Which would look like this:</p>\n\n<pre><code>    var escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        };\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n        escapable.lastIndex = 0;\n        return escapable.test(string) ?\n            '\"' + string.replace(escapable, function (a) {\n                var c = meta[a];\n                return typeof c === 'string' ? c :\n                    '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n            }) + '\"' :\n            '\"' + string + '\"';\n    }\n</code></pre>\n\n<p>This will produce a valid ASCII-only, javascript-quoted of the input string </p>\n\n<p>e.g. <code>quote(\"Doppelg\u00e4nger!\")</code> will be \"Doppelg\\u00e4nger!\"</p>\n\n<p>To revert the encoding you can just eval the result</p>\n\n<pre><code>var encoded = quote(\"Doppelg\u00e4nger!\");\nvar back = JSON.parse(encoded); // eval(encoded);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>An implementation of the <code>quote()</code> function might do what you want.\nMy version <a href=\"http://mercurial.intuxication.org/hg/js-hacks/raw-file/tip/quote.js\" rel=\"nofollow\">can be found here</a></p>\n\n<p>You can use <code>eval()</code> to reverse the encoding:</p>\n\n<pre><code>var foo = 'H\u00e4gar';\nvar quotedFoo = quote(foo);\nvar unquotedFoo = eval(quotedFoo);\nalert(foo === unquotedFoo);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Your requirement is pretty strange.</p>\n\n<p>Converting UTF-8 into ASCII would loose all information about Unicode codepoints > 127 (i.e. everything that's not in ASCII).</p>\n\n<p>You could, however try to encode your Unicode data (no matter what source encoding) in an ASCII-compatible encoding, such as <a href=\"http://en.wikipedia.org/wiki/UTF-7\" rel=\"nofollow\">UTF-7</a>. This would mean that the data that is produced could legally be interpreted as ASCII, but it is really UTF-7.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Do you want to strip all non ascii chars (slash replace them with '?', etc) or to store Unicode code points in a non unicode system?</p>\n\n<p>First can be done in a loop checking for values > 128 and replacing them.</p>\n\n<p>If you don't want to use \"any platform/framework/library\" then you will need to write your own encoder. Otherwise I'd just use JQuery's .html();</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It is impossible to <strong>convert</strong> an UTF-8 string into ASCII but it is possible to <strong>encode</strong> Unicode as an ASCII compatible string. </p>\n\n<p>Probably you want to use <a href=\"http://en.wikipedia.org/wiki/Punycode\" rel=\"nofollow\">Punycode</a> - this is already a standard Unicode encoding that encodes all Unicode characters into ASCII. For JavaScript code check this <a href=\"http://stackoverflow.com/questions/183485/can-anyone-recommend-a-good-free-javascript-for-punycode-to-unicode-conversion\">question</a></p>\n\n<p>Please edit you question title and description in order to prevent others from down-voting it - do not use term conversion, use encoding. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to convert large UTF-8 strings into ASCII. It should be reversible, and ideally a quick/lightweight algorithm.</p>\n\n<p>How can I do this? I need the <strong>source</strong> code (using loops) or the <strong>JavaScript</strong> code. (should not be dependent on any platform/framework/library) </p>\n\n<p><strong>Edit:</strong> I understand that the ASCII representation will not look correct and would be larger (in terms of bytes) than its UTF-8 counterpart, since its an encoded form of the UTF-8 original.</p>\n",
            "last_activity_date": 1421864010,
            "question_id": 834316,
            "score": -1,
            "tags": [
                "javascript",
                "utf-8",
                "character-encoding",
                "ascii"
            ],
            "title": "How to convert large UTF-8 strings into ASCII?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>function formatDate(date) {\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var format = hours &lt; 12 ? 'am' : 'pm';\n  hours = hours % 12;\n  hours = hours ? hours : 12; // making 0 a 12\n  minutes = minutes &lt; 10 ? '0'+minutes : minutes;\n  var time = hours + ':' + minutes + ' ' + format;\n  return date.getMonth()+1 + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \" \" + time;\n}\n\nvar date = new Date();\nvar output = formatDate(date);\nalert(output);\n</code></pre>\n\n<p>Demo\n<a href=\"http://jsfiddle.net/64oyzhng/3/\" rel=\"nofollow\">http://jsfiddle.net/64oyzhng/3/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It is pretty easy to do using just javascript, as demonstrated by @chrana. There are also a number of libraries which use javascript's native <code>Date</code> object and allow formatting, <a href=\"http://momentjs.com/\" rel=\"nofollow\"><code>moments.js</code></a> is one of them. I have also been working on a library which will also allow formatting dates by using standard <a href=\"http://cldr.unicode.org/translation/date-time\" rel=\"nofollow\"><code>CLDR notation</code></a> but does not rely on <code>Date</code>, instead everything is done in pure math, for accurate astronomy dating.</p>\n\n<p>The format that you have shown is very similar to the standard US short date, except you have no <code>,</code></p>\n\n<pre><code>03/02/1991, 12:01 AM\n</code></pre>\n\n<p>But using my library and any library using CLDR notation it could be done like this.</p>\n\n<pre><code>MM/dd/Y h:mm a\n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>require.config({\r\n    paths: {\r\n        'astrodate': '//rawgit.com/Xotic750/astrodate/master/lib/astrodate'\r\n    }\r\n});\r\n\r\nrequire(['astrodate'], function (AstroDate) {\r\n    \"use strict\";\r\n    \r\n    var date = new AstroDate('1991-03-02T00:01');\r\n\r\n    document.body.appendChild(document.createTextNode(date.format('MM/dd/Y h:mm a')));\r\n});</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"http://requirejs.org/docs/release/2.1.8/minified/require.js\"&gt;&lt;/script&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>HTML </p>\n\n<pre><code>&lt;input type=\"datetime-local\" onblur=\"window.setValue(this.value)\" /&gt;\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/f15pu.png\" alt=\"enter image description here\"></p>\n\n<p>JS</p>\n\n<pre><code>window.setValue = function (val) {\n    console.log(val);\n}\n</code></pre>\n\n<p>The output above is <code>1991-03-02T00:01</code>, how to get the exact value? Like <code>03/02/1991 12:01 AM</code>.</p>\n",
            "last_activity_date": 1420754316,
            "question_id": 27751096,
            "score": -2,
            "tags": [
                "javascript",
                "date",
                "datetime"
            ],
            "title": "Formatting date value in javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>ASP is a tecnology, NOT a lenguage. You can write your ASP pages in any language which is registered as Scripting Engine. So you can use VBScript, Javascript, Perl, ... if there is a scripting engine registered in your server, you can use it.</p>\n\n<p>How? </p>\n\n<pre><code>&lt;%@ Language= \"Javascript\" %&gt; \n&lt;% \n  var message = 'This is my message: ';\n  for (var i = 0, endI = 10 ; i &lt; endI ; i++){ \n      Response.Write( message + ' ' + i + '&lt;br&gt;' ) ;\n  };\n%&gt; \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 1
                }
            ],
            "body": "<p>Is it possible (and how if so) to write JavaScript code directly into an ASP classic file?</p>\n\n<p>I want to create validation functions inside an ASP classic file.</p>\n",
            "last_activity_date": 1383225934,
            "question_id": 19704736,
            "score": -2,
            "tags": [
                "javascript",
                "asp-classic"
            ],
            "title": "Writing JavaScript in ASP classic"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can split the list by a comma delimiter and validate each individual element.</p>\n\n<pre><code>$.each(enteredData.split(\",\"), function(i, str){\n    var esnList = +str;\n    /* enter validation here */\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>Instead of using <code>parseInt()</code> directly on <code>enteredData</code> you would first use</p>\n\n<pre><code>esnList = enteredData.split(',');\n</code></pre>\n\n<p>and then you can go over that array with a loop, using <code>parseInt()</code> and performing your checks or use the map function of your favorite JS library for that like Alexander did.</p>\n\n<p>Plain JS:</p>\n\n<pre><code>for(var i = 0; i &lt; esnList.length; i++) {\n    ... // parseInt(esnList[i]) and perform checks\n}\n</code></pre>\n\n<p>jQuery:</p>\n\n<pre><code>$.each(esnList, function(i, esn) {\n    ... // parseInt(esn) and perform checks\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Expecting clean, well-formed data from a user in an input field is optimistic - even with visual instructions.</p>\n\n<p>Without going into security and sanitation lets assume the user has put in a well formed comma separated list:</p>\n\n<pre><code>153, 189, 635\n</code></pre>\n\n<p>You will need to write a function that takes the input value of the input element and then do a split() on the variable. This will give you an array which you can loop over to check the value against your criteria.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The Jquery code below works very well and checks for input values based on conditions .. But for the ESNList text field in the HTML form , many ESNs(numbers) can be entered and separated by a comma in the same text field , how can I make so Jquery makes sure that all the numbers entered on the same text field still match the condition for ESNList , your help would be greatly appreciated .. </p>\n\n<pre><code> &lt;html&gt;\n    &lt;head&gt;\n    &lt;script type=\"text/javascript\" src=\"jquery/jquery-1.8.3.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n\n    $(function () {\n\n\n    $(\":text\").css(\"border\", \"2px solid red\");\n      $(\":text\").keyup(function(){\n        var enteredData = $(this).val()\n        console.log(enteredData);\n        if (enteredData == \"\") {\n          $(this).css(\"border\", \"2px solid red\");\n        } else {\n          $(this).css(\"border\", \"inherit\");\n        }\n        if ($(this).attr(\"id\") == \"ESNList\"){\n          esnList = parseInt(enteredData);\n          switch (true){\n            case ( esnList &gt;= 986329 &amp;&amp; esnList &lt;= 999999):\n                $(\"#ddl_StxName\").val(\"stx2\");\n                $(\"#ddl_rtumodel\").val(\"globalstar\");\n                break;\n            case ( esnList &gt;= 660000 &amp;&amp; esnList &lt;= 699999):\n                $(\"#ddl_StxName\").val(\"mmt\");\n                $(\"#ddl_rtumodel\").val(\"globalstar\");\n                break;\n            case ( esnList &gt;= 200000 &amp;&amp; esnList &lt;= 299999):\n                $(\"#ddl_StxName\").val(\"stm3\");\n                $(\"#ddl_rtumodel\").val(\"stmcomtech\");\n                break;\n            case ( esnList &gt;= 1202114 &amp;&amp; esnList &lt;= 1299999):\n                $(\"#ddl_StxName\").val(\"smartone\");\n                $(\"#ddl_rtumodel\").val(\"globalstar\");\n                break;\n          }\n\n        }\n      });\n      });\n    &lt;/script&gt; &lt;/head&gt;\n    &lt;body&gt;\n    &lt;form id=\"provision\"&gt;\n        ESNList:    &lt;input  type=\"text\" id=\"ESNList\" name=\"ESNList\" size=\"30\" /&gt; &lt;br /&gt;\n        ESN Start:&lt;input type=\"text\" id=\"ESNStart\" name=\"ESNStart\" size=\"10\" /&gt; &lt;br /&gt;\n        ESN End: &lt;input type=\"text\" id=\"ESNStart\" name=\"ESNStart\" size=\"10\" /&gt; &lt;br /&gt;\n        UnitName:&lt;input type=\"text\" id=\"STxName\" name=\"STxName\" size=\"30\"  /&gt;  &lt;br /&gt;  \n         Unit Model:   &lt;select name=\"STxName\" id=\"ddl_StxName\"&gt;\n        &lt;option value=\"stx2\"&gt;STX2&lt;/option&gt;\n        &lt;option value=\"stm3\" selected&gt;STM3&lt;/option&gt;\n        &lt;option value=\"acutec\"&gt;Acutec&lt;/option&gt;\n         &lt;option value=\"trackpack\"&gt;Trackpack&lt;/option&gt;\n        &lt;option value=\"mmt\"&gt;MMT&lt;/option&gt;\n        &lt;option value=\"smartone\"&gt;Smartone&lt;/option&gt;\n        &lt;option value=\"smartoneb\" &gt;SmartOneB&lt;/option&gt;\n        &lt;/select&gt; &lt;br /&gt;\n        RTU Model Type:\n         &lt;select name=\"rtumodel\" id =\"ddl_rtumodel\"&gt;\n        &lt;option value=\"globalstar\"&gt;GlobalStar&lt;/option&gt;\n        &lt;option value=\"both\"&gt;Both&lt;/option&gt;\n        &lt;option value=\"comtech\"&gt;Comtech&lt;/option&gt;\n        &lt;option value=\"stmcomtech\"&gt;STMComtech&lt;/option&gt;\n        &lt;/select&gt; &lt;br /&gt;\n        &lt;input type=\"submit\" value =\"submit\"  /&gt;\n        &lt;/form&gt;\n    &lt;/body&gt;\n    &lt;/html&gt; \n</code></pre>\n",
            "last_activity_date": 1359540719,
            "question_id": 14593480,
            "score": -2,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "javascript-events",
                "javascript-library"
            ],
            "title": "How can I make Jquery to check multiple values?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I assume you can't calculate <code>K</code> from <code>A</code>, <code>B</code>, and <code>C</code>, which would of course be best. Assuming that's the case:</p>\n\n<p>Your way works. It's an unusual way of using <code>switch</code>, but it's valid in JavaScript. (Not in most other languages.)</p>\n\n<p>The other way to do it would be to have a table as a nested bunch of objects, and look the values up in the table:</p>\n\n<pre><code>var Values = {\n    // Values for A\n    100: {\n        // Values for B when A = 100\n        3: {\n            // Values for C when A == 100 and B == 3\n            124: 21.4,\n            256: 21.9,\n            512: 22.2\n        },\n        6: {\n            // Values for C when A == 100 and B == 6\n            124: 42.9,\n            256: 42.78,\n            512: 43.01\n        },\n        9: {\n            // Values for C when A == 100 and B == 9\n            124: 54.84,\n            256: 55.02,\n            512:39.4\n        }\n    },\n    150: {\n        // Values for B when A = 150\n        3: {\n            // Values for C when A == 150 and B == 3\n            124: 39.4\n        }\n    }\n};\n</code></pre>\n\n<p>I'm not sure that makes the data more readable/maintainable, but it's quite quick to use, and you <em>can</em> write it a bit more concisely (see the end of the answer); I wanted to include the comments above.</p>\n\n<p><code>CalculateSum</code> ends up looking like this:</p>\n\n<pre><code>function CalculateSum(Atext, Btext, Ctext,form)\n{\n    var A = parseFloat(Atext);\n    var B = parseFloat(Btext);\n    var C = parseFloat(Ctext);\n    var entry;\n\n    // Get the top-level entry for A\n    entry = Values[A];\n    if (entry) {\n        // We have one, get its entry for this value of B\n        entry = entry[B];\n        if (entry) {\n            // We have one, get _its_ entry for C\n            entry = entry[C];\n        }\n    }\n\n    if (typeof entry === \"number\") {  \n        form.Ans.value = entry  + \"   Kg/Rmt\"; \n    }\n    else {\n        // Didn't find it\n    }\n}\n</code></pre>\n\n<p>Or as Deestan points out in the comments, you can shorten that a bit if you're not doing this in a hyper-tight loop you run hundreds of thousands of times (which I'm guessing you're not):</p>\n\n<pre><code>function CalculateSum(Atext, Btext, Ctext,form)\n{\n    var A = parseFloat(Atext);\n    var B = parseFloat(Btext);\n    var C = parseFloat(Ctext);\n    var K;\n\n    // Get the entry from our tables\n    K = Values[A] &amp;&amp; Values[A][B] &amp;&amp; Values[A][B][C];\n\n    if (typeof K === \"number\") {  \n        form.Ans.value = K  + \"   Kg/Rmt\"; \n    }\n    else {\n        // Didn't find it\n    }\n}\n</code></pre>\n\n<p>(There I changed <code>entry</code> to <code>K</code> because we never store anything but the final value in it.)</p>\n\n<p>And here's the more concise <code>Values</code>:</p>\n\n<pre><code>var Values = {\n    100: {\n        3: { 124: 21.4,  256: 21.9,  512: 22.2  },\n        6: { 124: 42.9,  256: 42.78, 512: 43.01 },\n        9: { 124: 54.84, 256: 55.02, 512: 39.4  }\n    },\n    150: {\n        3: { 124: 39.4 }\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am putting an interactive java script form whereas the the out put is getting confused with switch case. Kindly help me:  It is pipe weight calculation.</p>\n\n<p>Pipe sizes: 100mm, 150 mm, 200 mm, 250mm up to 1000mm\nFor each pipe the pressure class varies: PN3, PN6 and PN9\nFor each pressure class the stiffness varies: SN124 and SN256</p>\n\n<p>For given Pipes size, pressure class and stiffness class - the weight will be different.  To arrive the out put - I am using the switch case, which is very lengthy and time consuming. Any body can help me in solving the java script so that same will be put in the HTML file. </p>\n\n<p>This is the code I have, but I think there must be a better way to do it.</p>\n\n<p>What's a better way?</p>\n\n<pre><code>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;\nfunction CalculateSum(Atext, Btext, Ctext,form)\n{\nvar A = parseFloat(Atext);\nvar B = parseFloat(Btext);\nvar C = parseFloat(Ctext);\n\nswitch (true){\ncase (A == 100 &amp;&amp; B == 3  &amp;&amp; C == 124): K =21.4; L=102; M =55; break ;\ncase (A == 100 &amp;&amp; B == 3  &amp;&amp; C == 256): K =21.9; L=125; M=49;  break ;\ncase (A == 100 &amp;&amp; B == 3  &amp;&amp; C == 512): K =22.2; L=133; M=45;  break ;\ncase (A == 100 &amp;&amp; B == 6  &amp;&amp; C == 124): K =42.9; L=139; M=41;  break ;\ncase (A == 100 &amp;&amp; B == 6  &amp;&amp; C == 256): K =42.78;L=141; M=39;  break ;\ncase (A == 100 &amp;&amp; B == 6  &amp;&amp; C == 512): K =43.01;L=144; M=37;  break ;\ncase (A == 100 &amp;&amp; B == 9  &amp;&amp; C == 124): K =54.84;L=148; M=34;  break ;\ncase (A == 100 &amp;&amp; B == 9  &amp;&amp; C == 256): K =55.02;L=152; M=31;  break ;\ncase (A == 100 &amp;&amp; B == 9  &amp;&amp; C == 512): K =56.90;L=157; M=29;  break ;\ncase (A == 150 &amp;&amp; B == 3  &amp;&amp; C == 124): K =39.4; L=164; M=25;  break ;\n....\n......\n.......\nbreak ;\n}\n    form.Ans1.value = K  + \"   Kg/Rmt\"; \n    form.Ans1.value = L  + \"   Rmt\";\n    form.Ans1.value = M  + \"   Nos\";\n\n}\n&lt;/SCRIPT&gt;\n</code></pre>\n",
            "last_activity_date": 1341673343,
            "question_id": 11348073,
            "score": -2,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript programme"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>First, I would like to recommend that you reconsider your DB schema.  You have far more tables than you need to create a DB of questions, and all the joins etc. you need to retrieve a single question are expensive operations.</p>\n\n<p>Let's say you want your <code>HTML</code> to look something like the following:</p>\n\n<pre><code>&lt;div class=\"queWrap\" id=\"question-72\"&gt;\n    &lt;h2 class=\"question-text\"&gt;What is 4+4?&lt;/h2&gt;\n    &lt;h3&gt;Answers: &lt;span class=\"questionMarks\"&gt;(this question is worth 2 points)&lt;/span&gt;&lt;/h3&gt;\n\n    &lt;div class=\"ck-button\"&gt;\n        &lt;label class=\"fixedLabelCheckbox\"&gt;\n            &lt;input type=\"checkbox\" name=\"options_72[]\" id=\"option-A\" value=\"A\"&gt;\n            &lt;span&gt;0&lt;/span&gt;\n        &lt;/label&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"ck-button\"&gt;\n        &lt;label class=\"fixedLabelCheckbox\"&gt;\n            &lt;input type=\"checkbox\" name=\"options_72[]\" id=\"option-B\" value=\"B\"&gt;\n            &lt;span&gt;4&lt;/span&gt;\n        &lt;/label&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"ck-button\"&gt;\n        &lt;label class=\"fixedLabelCheckbox\"&gt;\n            &lt;input type=\"checkbox\" name=\"options_72[]\" id=\"option-C\" value=\"C\"&gt;\n            &lt;span&gt;8&lt;/span&gt;\n        &lt;/label&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"ck-button\"&gt;\n        &lt;label class=\"fixedLabelCheckbox\"&gt;\n            &lt;input type=\"checkbox\" name=\"options_72[]\" id=\"option-D\" value=\"D\"&gt;\n            &lt;span&gt;16&lt;/span&gt;\n        &lt;/label&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Now let's say your query's <code>result-&gt;fetch()</code> above was rewritten more smartly like so:</p>\n\n<pre><code>$_Questions = array();\nwhile( $qandaqrystmt-&gt;fetch() ) {\n   $_Questions[] = array('id'=&gt;$qandaQuestionId,'num'=&gt;$qandaQuestionNo,'content'=&gt;$qandaQuestionContent,'type'=&gt;$qandaOptionType,'answer'=&gt;$qandaAnswer,'marks'=&gt;$qandaAnswerMarks);\n}\n</code></pre>\n\n<p>Then to output the questions we just want to loop this and generate the appropriate HTML.  I want to point out that it would be incredibly stupid to send the correct answer along with the question to the test taker, even if it is hidden within the html.  You'll note that this HTML is similar to your own, but has one alteration that is CRITICAL to make: because you only have ONE form element surrounding all of your questions, each question's checkbox array needs a unique name.  I've chosen to append _(questionID) to each array like so </p>\n\n<p>(e.g. question 72) <code>&lt;input type=\"checkbox\" name=\"options_72[]\" id=\"option-D\" value=\"D\"&gt;</code></p>\n\n<p>Here's how you would loop it using a <a href=\"http://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc\" rel=\"nofollow\">heredoc</a></p>\n\n<pre><code>foreach( $_Questions AS $question ) {\n  echo &lt;&lt;&lt;EOT\n    &lt;div class=\"queWrap\" id=\"question-{$question['id']}\"&gt;\n        &lt;h2 class=\"question-text\"&gt;{$question['content']}&lt;/h2&gt;\n        &lt;h3&gt;Answers: &lt;span class=\"questionMarks\"&gt;(this question is worth {$question['marks']} points)&lt;/span&gt;&lt;/h3&gt;\n    EOT;\n\n$options = ['A','B','C','D','E','F'];\n$lastOption = substr($question['type'], -1, 1);\nforeach( $options as $opt ) {\n  echo &lt;&lt;&lt;EOT\n    &lt;div class=\"ck-button\"&gt;\n        &lt;label class=\"fixedLabelCheckbox\"&gt;\n            &lt;input type=\"checkbox\" name=\"options_{$questions['id']}[]\" value=\"$opt\"&gt;\n            &lt;span&gt;$opt&lt;/span&gt;\n        &lt;/label&gt;\n    &lt;/div&gt;\n    EOT;\n  if( $opt == $lastOption )\n    break;\n}\n\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 0
                }
            ],
            "body": "<p>I have an application here: <a href=\"http://helios.hud.ac.uk/u0867587/Mobile_app/Text34.php\" rel=\"nofollow\">APPLICATION</a></p>\n\n<p>What I have is some questions and associated with each questions in their possible answers in checkbox buttons, and three text inputs showing questionId, option type and number of marks for each individual answer. </p>\n\n<p>Actually the number of marks for each individual answer if the problem I am getting. What I want to attempt is that for every correct answer for each question, they are associated with their own text input showing the number of marks they are worth (found in Individual_Answer Table below) else for all incorrect answers, they are all worth <code>0</code> in their text inputs/</p>\n\n<p>Now here is the database tables for this example application:</p>\n\n<p><strong>Question:</strong></p>\n\n<pre><code>QuestionId (PK auto)  QuestionNo  SessionId (FK Session) OptionId (FK Option)    \n72                    1           26                     3\n73                    2           26                     4\n</code></pre>\n\n<p><strong>Option_Table:</strong></p>\n\n<pre><code>OptionId (PK Auto)  OptionType\n1                   A-C\n2                   A-D\n3                   A-E\n4                   A-F\n</code></pre>\n\n<p><strong>Answer:</strong></p>\n\n<pre><code>AnswerId (PK auto)    QuestionId (FK Question)      Answer  \n1                          72                         C             \n2                          73                         A             \n3                          73                         C             \n4                          73                         D    \n</code></pre>\n\n<p><strong>Individual_Answer:</strong>         </p>\n\n<pre><code>AnswerId (PK auto)  AnswerMarks\n1                   2\n2                   2\n3                   1\n4                   2\n</code></pre>\n\n<p>The actual code is below:</p>\n\n<pre><code>//$qandaqry query is here and executed\n\n\n        $qandaqrystmt-&gt;bind_result($qandaQuestionId,$qandaQuestionNo,$qandaQuestionContent,$qandaOptionType,$qandaAnswer,$qandaAnswerMarks );\n\n        $arrQuestionId = array();\n        $arrQuestionNo = array();\n        $arrQuestionContent = array();\n        $arrOptionType = array();\n        $arrAnswer = array();\n        $arrAnswerMarks = array();\n\n        while ($qandaqrystmt-&gt;fetch()) {\n        $arrQuestionId[ $qandaQuestionId ] = $qandaQuestionId; //QuestionId\n        $arrQuestionNo[ $qandaQuestionId ] = $qandaQuestionNo; //QuestionNo\n        $arrQuestionContent[ $qandaQuestionId ] = $qandaQuestionContent; //QuestionContent\n        $arrOptionType[ $qandaQuestionId ] = $qandaOptionType; //OptionType\n        $arrAnswer[ $qandaQuestionId ] = $qandaAnswer; //Answer\n        $arrAnswerMarks[ $qandaQuestionId ] = $qandaAnswerMarks; //AnswerMarks\n      }\n\n\n    ?&gt;\n    &lt;form action='results.php' method='post' id='exam'&gt;\n\n    &lt;?php\n\n//Retrieve options for each question\n\n    function ExpandOptionType($option) { \n        $options = explode('-', $option);\n        if(count($options) &gt; 1) {\n            $start = array_shift($options);\n            $end = array_shift($options);\n            do {\n                $options[] = $start;\n            }while(++$start &lt;= $end);\n         }\n         else{\n            $options = explode(' or ', $option);\n         }\n         echo '&lt;p&gt;';\n         foreach($options as $indivOption) {\n             echo '&lt;div class=\"ck-button\"&gt;&lt;label class=\"fixedLabelCheckbox\"&gt;&lt;input type=\"checkbox\" name=\"options[]\" id=\"option-' . $indivOption . '\" value=\"' . $indivOption . '\" /&gt;&lt;span&gt;' . $indivOption . '&lt;/span&gt;&lt;/label&gt;&lt;/div&gt;';\n         }\n          echo '&lt;/p&gt;';\n\n\n    }\n\n\n    foreach ($arrQuestionId as $key=&gt;$question) {\n\n    ?&gt;\n\n    &lt;div class=\"queWrap\"&gt;\n\n//Each QuestionNo and QuestionContent\n    &lt;p&gt;&lt;?php echo htmlspecialchars($arrQuestionNo[$key]) . \": \" .  htmlspecialchars($arrQuestionContent[$key]); ?&gt;&lt;/p&gt;\n\n//Output each Individual Option\n    &lt;p&gt;&lt;?php echo ExpandOptionType(htmlspecialchars($arrOptionType[$key])); ?&gt;&lt;/p&gt;\n\n//Output each QuestionId text input per question\n    &lt;p&gt;Question Id:&lt;input type='text' class='questionIds' name='questionids' value='&lt;?php echo htmlspecialchars($arrQuestionId[$key]); ?&gt;' /&gt;&lt;/p&gt;\n\n//Output each OptionType text input per question\n    &lt;p&gt;Option Type: &lt;input type='text' class='optionType' name='optiontype' value='&lt;?php echo htmlspecialchars($arrOptionType[$key]); ?&gt;' /&gt;&lt;/p&gt;\n\n//Output each AnswerMarks per answer in each question\n    &lt;p&gt;Each Answer's Marks&lt;input type='text' class='answermarks' name='answerMarks' value='&lt;?php echo htmlspecialchars($arrAnswerMarks[$key]); ?&gt;' /&gt;&lt;/p&gt;\n\n    &lt;/div&gt;\n\n\n    &lt;?php\n\n    }\n\n    ?&gt;\n    &lt;/form&gt;\n</code></pre>\n",
            "last_activity_date": 1360701677,
            "question_id": 11199379,
            "score": -2,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "mysqli"
            ],
            "title": "How to associate each option button with their own individual marks?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>AJAX it. Just like anything else you want to send to the server without a full page reload.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You would typically convert the array to a JSON string with <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify</code></a>, then make an AJAX request to the server, receive the string parameter and <a href=\"http://php.net/manual/en/function.json-decode.php\"><code>json_decode</code></a> it to get back an array in the PHP side.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>here is the (very) basic idea.</p>\n\n<p>javascript</p>\n\n<pre><code>var arr=your array;\nvar str;\nfor(var i=0; i&lt;arr.length; i++) {\n\n    str+='&amp;array_items[]='+arr[i];\n}\ndocument.location.href='url.php?'+str;\n</code></pre>\n\n<p>php</p>\n\n<pre><code>for ($i=0; $i&lt;count($_GET['array_items']); $i++){ \n\n    $arr[] = $_GET['array_items'][$i];\n\n}\n\n//display php array on page\nprint_r($arr);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could convert the javascript to a PHP object too...</p>\n\n<pre><code>/**\n* Takes a json encoded string and turns it into a PHP object\n* \n* @param string string\n* @return object\n*/\npublic static function jsonToPhp($string)\n{\n    $obj = json_decode(stripslashes($string));\n    if (!is_object($obj))\n    {\n        $obj = json_decode($string);\n        if (!is_object($obj))\n        {\n            print \"Cannot convert $string to an object\";\n                            return NULL;\n        }\n    }\n    return $obj;\n}\n</code></pre>\n\n<p>Requires that your javascript be converted to json.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I convert a javascript array to a php array??</p>\n\n<p>I have a javascript array which I want to put the values into a php array\nplease help me? </p>\n\n<p>How would I go about doing this?</p>\n",
            "last_activity_date": 1344436859,
            "question_id": 9880904,
            "score": -2,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "javascript array converted to a php array?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The console outputs the return value of the function you're executing.</p>\n\n<p>See what happens if you put a return statement in your function e.g.</p>\n\n<pre><code>return function () {\n    console.log(msg, name);\n    return \"If you run me from console you'll see this line\";\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 1
                }
            ],
            "body": "<p>Can someone tell me what's going on here (tested in Firefox and Chrome).</p>\n\n<p>I have a simple function returning a closure.</p>\n\n<pre><code>function say (name) {\n  var msg = 'hallo';\n  return function () {\n    console.log(msg, name);\n  }\n}\n\nvar sayName = say('joe');\nsayName();\n</code></pre>\n\n<p>If check the browser console I get the expected result:</p>\n\n<pre><code>Hallo Joe\n</code></pre>\n\n<p>However, if I leave out the last line and run sayName() from the console I get the following:</p>\n\n<pre><code>Hallo Joe\nundefined\n</code></pre>\n\n<p>Where is the extra undefined coming from?</p>\n",
            "last_activity_date": 1376647458,
            "question_id": 18270531,
            "score": -3,
            "tags": [
                "javascript",
                "closures",
                "undefined"
            ],
            "title": "Why does the JS console return an extra undefined?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It's just hex codes in a string \\x20 is a space which is decimal 32.</p>\n\n<pre><code>print _0xe91d\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It does some replacement on some text using Regular Expression.\nThe expression is in hex code, you can use .toString() to bring it back to unicode:\nfor example:</p>\n\n<pre><code>\"\\x66\\x72\\x6F\\x6D\\x43\\x68\\x61\\x72\\x43\\x6F\\x64\\x65\".toString() : fromCharCode\n</code></pre>\n\n<p>or</p>\n\n<pre><code>\"\\x72\\x65\\x70\\x6C\\x61\\x63\\x65\".toString() : replace\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/6145796/decode-obfuscated-javascript\">Decode obfuscated JavaScript</a>  </p>\n</blockquote>\n\n\n\n<p>Question:</p>\n\n<p>I have the following javascript code:</p>\n\n<pre><code>var _0xe91d=[\"\\x28\\x35\\x28\\x24\\x29\\x7B\\x24\\x2E\\x32\\x77\\x2E\n\n...\n\n\nx5F\\x63\\x6F\\x6E\\x74\\x5F\\x64\\x75\\x72\\x7C\\x76\\x5F\\x74\\x61\\x62\\x73\\x5F\\x61\\x6C\\x69\\x67\\x6E\\x7C\\x76\\x5F\\x74\\x61\\x62\\x73\\x5F\\x64\\x75\\x72\\x7C\\x76\\x5F\\x73\\x63\\x72\\x6F\\x6C\\x6C\\x7C\\x63\\x6F\\x6E\\x74\\x5F\\x61\\x6E\\x69\\x6D\\x7C\\x63\\x6F\\x6E\\x74\\x5F\\x66\\x78\\x7C\\x74\\x61\\x62\\x5F\\x66\\x78\\x7C\\x72\\x65\\x70\\x6C\\x61\\x63\\x65\\x7C\\x62\\x61\\x6C\\x69\\x67\\x6E\\x7C\\x61\\x6C\\x69\\x67\\x6E\\x5F\\x7C\\x75\\x6E\\x6D\\x6F\\x75\\x73\\x65\\x77\\x68\\x65\\x65\\x6C\\x7C\\x73\\x77\\x69\\x74\\x63\\x68\\x7C\\x64\\x65\\x66\\x61\\x75\\x6C\\x74\\x7C\\x6A\\x51\\x75\\x65\\x72\\x79\",\"\",\"\\x66\\x72\\x6F\\x6D\\x43\\x68\\x61\\x72\\x43\\x6F\\x64\\x65\",\"\\x72\\x65\\x70\\x6C\\x61\\x63\\x65\",\"\\x5C\\x77\\x2B\",\"\\x5C\\x62\",\"\\x67\"];eval(function (_0x173cx1,_0x173cx2,_0x173cx3,_0x173cx4,_0x173cx5,_0x173cx6){_0x173cx5=function (_0x173cx3){return (_0x173cx3&lt;_0x173cx2?_0xe91d[4]:_0x173cx5(parseInt(_0x173cx3/_0x173cx2)))+((_0x173cx3=_0x173cx3%_0x173cx2)&gt;35?String[_0xe91d[5]](_0x173cx3+29):_0x173cx3.toString(36));} ;if(!_0xe91d[4][_0xe91d[6]](/^/,String)){while(_0x173cx3--){_0x173cx6[_0x173cx5(_0x173cx3)]=_0x173cx4[_0x173cx3]||_0x173cx5(_0x173cx3);} ;_0x173cx4=[function (_0x173cx5){return _0x173cx6[_0x173cx5];} ];_0x173cx5=function (){return _0xe91d[7];} ;_0x173cx3=1;} ;while(_0x173cx3--){if(_0x173cx4[_0x173cx3]){_0x173cx1=_0x173cx1[_0xe91d[6]]( new RegExp(_0xe91d[8]+_0x173cx5(_0x173cx3)+_0xe91d[8],_0xe91d[9]),_0x173cx4[_0x173cx3]);} ;} ;return _0x173cx1;} (_0xe91d[0],62,284,_0xe91d[3][_0xe91d[2]](_0xe91d[1]),0,{}));\n</code></pre>\n\n<p>How exactly can I decipher it, and find out what it does ?<br />\nAnd what's the principle behind this obfuscation ?</p>\n",
            "last_activity_date": 1329685345,
            "question_id": 9352971,
            "score": -3,
            "tags": [
                "javascript",
                "obfuscation",
                "reverse-engineering",
                "deobfuscation"
            ],
            "title": "How to deobfuscate this JavaScript code?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>It depends on how you write your html. Assuming the footer element is always there:</p>\n\n<pre><code>if (document.getElementById('footer').childNodes.length == 0) {\n\n//If function find the copyright links, then null - don't make anything\n}\nelse\n//If function doesn't find copyright links, then give an alert\nalert(\"Please protect original copyright links.\")\n</code></pre>\n\n<p>but remember, this just counts what you put in there.</p>\n\n<p>If your footer is absent if you did not put copyrights in, then see peehaa's comment.</p>\n\n<p>Should be good to note, however, that it looks like you're just referencing links in the copyright area. Like saying - I understand this measure does nothing in the way of security, but in case you care, here are links to the rights owners. If this is true, then goody. Here you go. If you actually want security in place to copyright the content on a page, this will not protect anything.</p>\n",
                    "is_accepted": true,
                    "score": 0
                }
            ],
            "body": "<p>A javascript function must search the special links (copyright urls) in a web page (html body).\n<br />\nIf it doesn't find the special urls, then must give an alert.</p>\n\n<p><strong>Example of JavaScript file:</strong></p>\n\n<pre><code>if () {\n\n//If function find the copyright links, then null - don't make anything\n}\nelse\n//If function doesn't find copyright links, then give an alert\nalert(\"Please protect original copyright links.\")\n</code></pre>\n\n<p><br /></p>\n\n<p><strong>Example of html page:</strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type='text/javascript' src='http:// ... file.js'&gt;&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;!-- Start Copyrigt Area --&gt;\n  &lt;div id=\"footer\"&gt;\n    &lt;a href=\"http://example1.com\"&gt;example1.com&lt;/a&gt;\n    &lt;a href=\"http://example2.com\"&gt;example2.com&lt;/a&gt;\n  &lt;/div&gt;\n  &lt;!-- End Copyrigt Area --&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><br /><br /></p>\n\n<blockquote>\n  <p><strong>WHY?</strong></p>\n  \n  <p>I made some themes for special blog community site.  Sometimes, our\n  theme users remove or change our copyright links in the footer area.</p>\n  \n  <p>The blog community site doesn't support any dynamic content like php,\n  we can use only html and some special content tags in a one page.</p>\n  \n  <p>On the other side, this site doesn't allow JS hosting, etc. So, JS\n  files provided by third party hosting providers.</p>\n  \n  <p>I don't want encrypt the code.  So I think we check the links with a\n  JavaScript function.  If our links removed or changed, then users must\n  get an alert.</p>\n  \n  <p>Maybe, some theme users find these javascript function and removes\n  them and re-host the codes. But I think most of them will can not\n  anything.</p>\n</blockquote>\n",
            "last_activity_date": 1354055454,
            "question_id": 13593777,
            "score": -4,
            "tags": [
                "javascript",
                "html",
                "web"
            ],
            "title": "If html page doesn&#39;t have the special links, then give an alert with Javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Try this to limit your phone character:</p>\n\n<pre><code>['phone', elem('phone').value.length &gt; 7 &amp;&amp; elem('phone').value.length &lt; 11 &amp;&amp; /^(\\+\\d{1,2})?[\\d ()-]+$/.test(elem('phone').value)]\n</code></pre>\n\n<p>As for your email validation, I don't see something went wrong with that. The error message does disappear after a while.</p>\n\n<p>Hope it helps!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm creating my Javascript and have had help. I'm making the following fields required..</p>\n\n<p>First Name\nLast Name\nPhone\nEmail</p>\n",
            "last_activity_date": 1399548408,
            "question_id": 23511090,
            "score": -5,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "validation"
            ],
            "title": "This doesn&#39;t seem right? Javascript isn&#39;t working"
        },
        {
            "answer_count": 27,
            "answers": [
                {
                    "body": "<pre><code>v = v == 0 ? 1 : 0;\n</code></pre>\n\n<p>Is enough !</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>You could write a function for it and use it like:</p>\n\n<p><code>v = inv(v)</code></p>\n",
                    "is_accepted": false,
                    "score": 71
                },
                {
                    "body": "<p>If it must be the integer 1 or 0, then the way you're doing it is fine, though parentheses aren't needed.  If these a are to be used as booleans, then you can just do:</p>\n\n<pre><code>v = !v;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>If you don't care about any possibility other than 1:</p>\n\n<pre><code>v = v ? 0 : 1;\n</code></pre>\n\n<p>In the above case, v will end up being 1 if v is 0, false, undefined or null.  Take care using this kind of approach - v will be 0 even if v is \"hello world\".</p>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<p>Since <code>0</code> is a <code>false</code> value and <code>1</code> is a <code>true</code> value.</p>\n\n<pre><code>v = (v ? 0 : 1);\n</code></pre>\n\n<p>If you are happy to use <code>true</code> and <code>false</code> instead of numbers</p>\n\n<pre><code>v = !v;\n</code></pre>\n\n<p>or if they must be numbers:</p>\n\n<pre><code>v = +!v; /* Boolean invert v then cast back to a Number */\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 302
                },
                {
                    "body": "<p>You can simply use:</p>\n\n<pre><code>v = 1 - v;\n</code></pre>\n\n<p>This of course assumes that the variable is initialised properly, i.e. that it only has the value 0 or 1.</p>\n\n<p>Another method that is shorter but uses a less common operator:</p>\n\n<pre><code>v ^= 1;\n</code></pre>\n\n<h3>Edit:</h3>\n\n<p>To be clear; I never approached this question as code golf, just to find a short way of doing the task without using any obscuring tricks like side effects of operators.</p>\n",
                    "is_accepted": false,
                    "score": 577
                },
                {
                    "body": "<p><code>v = (v + 1) % 2</code> and if you need to cycle through more values just change <code>2</code> for <code>(n + 1)</code>. Say you need to cycle 0,1,2 just do <code>v = (v + 1) % 3</code>.</p>\n",
                    "is_accepted": false,
                    "score": 186
                },
                {
                    "body": "<p>You could do </p>\n\n<pre><code>v = Math.abs(--v);\n</code></pre>\n\n<p>The decrement sets the value to 0 or -1, and then the <code>Math.abs</code> converts -1 to +1.</p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>Lines like <code>v = 1 - v</code>, or <code>v ^= 1</code> or <code>v= +!v</code> will all get the job done, but they constitute what I would refer to as hacks. These are not beautiful lines of code, but cheap tricks to have the intended effect. <code>1 - v</code> does not communicate \"toggle the value between 0 and 1\". This makes your code less expressive and introduces a place (albeit a small one) where another developer will have to parse your code.</p>\n\n<p>Having instead a function like <code>v = toggle(v)</code> communicates the intent at the quickest glance.</p>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>Another creative way of doing it, with <code>v</code> being equal to any value, will always return <code>0</code> or <code>1</code></p>\n\n<pre><code>v = !!v^1;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Another form of your original solution:</p>\n\n<pre><code>v = Number(v == 0);\n</code></pre>\n\n<p>EDIT: Thanks TehShrike and Guffa for pointing out the error in my original solution.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>One more:\n<code>v=++v%2</code></p>\n\n<p>(in C it would be simple <code>++v%=2</code>)</p>\n\n<p><em>ps. Yeah, I know it's double assignment, but this is just raw rewrite of C's method (which doesn't work as is, cause JS pre-increment operator dosen't return lvalue.</em></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>To sum up another answer, a comment and my own opinion, I suggest combining two things:</p>\n\n<ol>\n<li>Use a function for the toggle</li>\n<li>Inside this function use a more readable implementation</li>\n</ol>\n\n<p>Here is the function which you could place in a library or maybe wrap it in a Plugin for another Javascript Framework.</p>\n\n<pre><code>function inv(i) {\n  if (i == 0) {\n    return 1\n  } else {\n    return 0;\n  }\n}\n</code></pre>\n\n<p>And the usage is simply:</p>\n\n<pre><code>v = inv(v);\n</code></pre>\n\n<p>The advantages are:</p>\n\n<ol>\n<li>No code Duplication</li>\n<li>If you or anybody read this again in the future, you will understand your code in a minimum of time.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I don't know why you want to build your own booleans? I like the funky syntaxes, but why not write understandable code?</p>\n\n<p>This is not the shortest/fastest, but the most clearest (and readable for everyone) is using the well-known if/else state:</p>\n\n<pre><code>if (v === 0)\n{\n  v = 1;\n}\nelse\n{\n  v = 0;\n}\n</code></pre>\n\n<p>If you want to be really clear, you should use booleans instead of numbers for this. They are fast enough for most cases. With booleans, you could just use this syntax, which will win in shortness:</p>\n\n<pre><code>v = !v;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>(<em>Honesty and mathematical integrity - given the number of votes on this \"answer\" - have led me to edit this answer.  I held off as long as possible because it was intended as a short quip and not as anything \"deep\" so putting in any explanation seemed counter to the purpose.  However, the comments are making it clear that I should be clear to avoid misunderstanding.</em>)</p>\n\n<p><em>My original answer:</em></p>\n\n<p>The wording of this part of the specification:</p>\n\n<blockquote>\n  <p>If it's 0, I want to set it to 1, else set it to 0.</p>\n</blockquote>\n\n<p>implies that the most accurate solution is:</p>\n\n<pre><code>v = dirac_delta(0,v)\n</code></pre>\n\n<hr>\n\n<p>First, the confession: I <strong>did</strong> get my delta functions confused.  The Kronecker delta would have been slightly more appropriate, but not by much as I wanted something that was domain-independent (the Kronecker delta is mainly used just for integers).  But I really shouldn't have used delta functions at all, I should have said:</p>\n\n<pre><code>v = characteristic_function({0},v)\n</code></pre>\n\n<p>Let me clarify.  Recall that a <em>function</em> is a triple, <em>(X,Y,f)</em>, where <em>X</em> and <em>Y</em> are sets (called the <em>domain</em> and <em>codomain</em> respectively) and <em>f</em> is a rule that assigns an element of <em>Y</em> to each element of <em>X</em>.  We often write the triple <em>(X,Y,f)</em> as <em>f: X &rightarrow; Y</em>.  Given a subset of <em>X</em>, say <em>A</em>, there is a <em>characteristic function</em> which is a function <em>&chi;<sub>A</sub>: X &rightarrow; {0,1}</em> (it can also be thought of as a function to a larger codomain such as &Nopf; or &Ropf;).  This function is defined by the rule:</p>\n\n<p><em>&chi;<sub>A</sub>(x) = 1</em> if <em>x &in; A</em> and <em>&chi;<sub>A</sub>(x) = 0</em> if <em>x &notin; A</em>.</p>\n\n<p>If you like truth tables, it's the truth table for the question \"Is the element <em>x</em> of <em>X</em> an element of the subset <em>A</em>?\".</p>\n\n<p>So from this definition, it's clear that the characteristic function is what is needed here, with <em>X</em> some big set containing 0 and <em>A = {0}</em>.  That's what I <em>should</em> have written.</p>\n\n<p>And so to delta functions.  For this, we need to know about integration.  Either you already know it, or you don't.  If you don't, nothing I can say here will tell you about the intricacies of the theory, but I can give a one sentence summary.  A <em>measure</em> on a set <em>X</em> is in essence \"that which is needed to make averages work\".  That is to say that if we have a set <em>X</em> and a measure <em>&mu;</em> on that set then there is a class of functions <em>X &rightarrow; &Ropf;</em>, called <em>measurable functions</em> for which the expression <em>&int;<sub>X</sub> f d&mu;</em> makes sense and is, in some vague sense, the \"average\" of <em>f</em> over <em>X</em>.</p>\n\n<p>Given a measure on a set, one can define a \"measure\" for subsets of that set.  This is done by assigning to a subset the integral of its characteristic function (assuming that this is a measurable function).  This <em>can</em> be infinite, or undefined (the two are subtly different).</p>\n\n<p>There are lots of measures around, but there are two that are important here.  One is the <em>standard measure</em> on the real line, &Ropf;.  For this measure, then <em>&int;<sub>&Ropf;</sub> f d&mu;</em> is pretty much what you get taught in school (is calculus still taught in schools?): sum up little rectangles and take smaller and smaller widths.  In this measure, the measure of an interval is its width.  The measure of a point is 0.</p>\n\n<p>Another important measure, which works on <em>any</em> set, is called the <em>point measure</em>.  It is defined so that the integral of a function is the <strong>sum</strong> of its values:</p>\n\n<p><em>&int;<sub>X</sub> f d&mu; = &sum;<sub>x &in;X</sub> f(x)</em></p>\n\n<p>This measure assigns to each singleton set the measure 1.  This means that a subset has <em>finite</em> measure if and only if it is itself finite.  And very few functions have finite integral.  If a function has a finite integral, it must be non-zero only on a <em>countable</em> number of points.  So the vast majority of functions that you probably know do not have finite integral under this measure.</p>\n\n<p>And now to delta functions.  Let's take a very broad definition.  We have a measurable space <em>(X,&mu;)</em> (so that's a set with a measure on it) and an element <em>a &in; X</em>.  We \"define\" the <em>delta function</em> (depending on <em>a</em>) to be the \"function\" <em>&delta;<sub>a</sub>: X &rightarrow; &Ropf;</em> with the property that <em>&delta;<sub>a</sub>(x) = 0</em> if <em>x &ne; a</em> and <em>&int;<sub>X</sub> &delta;<sub>a</sub> d&mu; = 1</em>.</p>\n\n<p>The most important fact about this to get a-hold of is this: The delta function <strong>need not be a function</strong>.  It is <em>not</em> properly defined: I have not said what <em>&delta;<sub>a</sub>(a)</em> is.</p>\n\n<p>What you do at this point depends on who you are.  The world here divides in to two categories.  If you are a mathematician, you say the following:</p>\n\n<blockquote>\n  <p>Okay, so the delta function might not be defined.  Let's look at its hypothetical properties and see if we can find a proper home for it where it <em>is</em> defined.  We can do that, and we end up with <em>distributions</em>.  These are <em>not</em> (necessarily) functions, but are things that behave a little like functions, and often we can work with them as if they were functions; but there are certain things that they don't have (such as \"values\") so we need to be careful.</p>\n</blockquote>\n\n<p>If you are not a mathematician, you say the following:</p>\n\n<blockquote>\n  <p>Okay, so the delta function might not be properly defined.  Who says so?  A bunch of mathematicians?  Ignore them!  What do they know?</p>\n</blockquote>\n\n<p>Having now offended my audience, I shall continue.</p>\n\n<p>The <strong>dirac delta</strong> is usually taken to be the delta function of a point (often 0) in the real line with its standard measure.  So those who are complaining in the comments about me not knowing my deltas are doing so because they are using this definition.  To them, I apologise: although I can wriggle out of that by using the <em>Mathematician's defence</em> (as popularised by <em>Humpty Dumpty</em>: simply redefine everything so that it is correct), it is bad form to use a standard term to mean something different.</p>\n\n<p>But there <em>is</em> a delta function which does do what I want it to do and it is that which I need here.  If I take a <em>point measure</em> on a set <em>X</em> then there <em>is</em> a genuine function <em>&delta;<sub>a</sub> : X &rightarrow; &Ropf;</em> which satisfies the criteria for a delta function.  This is because we are looking for a function <em>X &rightarrow; &Ropf;</em> which is zero except at <em>a</em> and such that the sum of all of its values is 1.  Such a function is simple: the only missing piece of information is its value at <em>a</em>, and to get the sum to be 1 we just assign it the value 1.  This is none other than the characteristic function on <em>{a}</em>.  Then:</p>\n\n<p><em>&int;<sub>X</sub> &delta;<sub>a</sub> d&mu; = &sum;<sub>x &in; X</sub> &delta;<sub>a</sub>(x) = &delta;<sub>a</sub>(a) = 1.</em></p>\n\n<p>So in this case, for a singleton set, the characteristic function and the delta function agree.</p>\n\n<p>In conclusion, there are three families of \"functions\" here:</p>\n\n<ol>\n<li>The characteristic functions of singleton sets,</li>\n<li>The delta functions,</li>\n<li>The Kronecker delta functions.</li>\n</ol>\n\n<p>The <em>second</em> of these is the most general as any of the others is an example of it when using the point measure.  But the first and third have the advantage that they are always genuine functions.  The third is actually a special case of the first, for a particular family of domains (integers, or some subset thereof).</p>\n\n<p>So, finally, when I originally wrote the answer I <em>wasn't</em> thinking properly (I wouldn't go so far as to say that I was <em>confused</em>, as I hope I've just demonstrated I <em>do</em> know what I'm talking about when I actually think first, I just didn't think very much).  The usual meaning of the dirac delta is not what is wanted here, but one of the points of my answer was that the input domain was <em>not</em> defined so the Kronecker delta would also not have been right.  Thus the best <em>mathematical</em> answer (which I was aiming for) would have been the <strong>characteristic</strong> function.</p>\n\n<p>I hope that that is all clear; and I also hope that I never have to write a mathematical piece again using HTML entities instead of TeX macros!</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>Untested, but if you're after a boolean I think <code>var v = !v</code> will work.</p>\n\n<p>Reference: <a href=\"http://www.jackfranklin.co.uk/blog/2011/05/a-better-way-to-reverse-variables\" rel=\"nofollow\">http://www.jackfranklin.co.uk/blog/2011/05/a-better-way-to-reverse-variables</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>in general whenever you need to toggle between two values , you can just subtract the current value from the sum of the two toggle values :</p>\n\n<blockquote>\n<pre><code>    0,1 -&gt; v = 1 - v\n    1,2 -&gt; v = 3 - v\n    4,5 -&gt; v = 9 - v \n</code></pre>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>If you're guaranteed your input is either a 1 or a 0, then you could use:</p>\n\n<pre><code>v = 2+~v;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I would make it more explicit.</p>\n\n<p>What does <code>v</code> mean?</p>\n\n<p>For example when v is some state. Create an object Status. In DDD an value object.</p>\n\n<p>Implement the logic in this value object. Then you can write your code in a more functional way which is more readable. Switching status can be done by creating a new Status based on the current status. Your if statement / logic is then encapsulated in your object, which you can unittest. An valueObject is always immutable, so it has no identity. So for changing it's value you have to create a new one.</p>\n\n<p>Example:</p>\n\n<pre><code>public class Status\n{\n    private readonly int _actualValue;\n    public Status(int value)\n    {\n        _actualValue = value;\n    }\n    public Status(Status status)\n    {\n        _actualValue = status._actualValue == 0 ? 1 : 0; \n    }\n\n    //some equals method to compare two Status objects\n}\n\nvar status = new Status(0);\n\nStatus = new Status(status);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If possible values for v are only 0 and 1, then for any integer x, the expression:\nv = Math.pow((Math.pow(x, v) - x), v);\nwill toggle the value.</p>\n\n<p>I know this is an ugly solution and the OP was not looking for this...but I was thinking about just another solution when I was in the loo :P</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<h2>List of solutions</h2>\n\n<p>There are three solutions I would like to propose. All of them convert any value to <code>0</code> (if <code>1</code>, <code>true</code> etc.) or <code>1</code> (if <code>0</code>, <code>false</code>, <code>null</code> etc.):</p>\n\n<ul>\n<li><code>v = 1*!v</code></li>\n<li><code>v = +!v</code></li>\n<li><code>v = ~~!v</code></li>\n</ul>\n\n<p>and one additional, already mentioned, but clever and fast (although works only for <code>0</code>s and <code>1</code>s):</p>\n\n<ul>\n<li><code>v = 1-v</code></li>\n</ul>\n\n<h2>Solution 1</h2>\n\n<p>You can use the following solution:</p>\n\n<pre><code>v = 1*!v\n</code></pre>\n\n<p>This will first convert the integer to the opposite boolean (<code>0</code> to <code>True</code> and any other value to <code>False</code>), then will treat it as integer when multiplying by <code>1</code>. As a result <code>0</code> will be converted to <code>1</code> and any other value to <code>0</code>.</p>\n\n<p>As a proof see this jsfiddle and provide any values you wish to test: <a href=\"http://jsfiddle.net/rH3g5/\">jsfiddle.net/rH3g5/</a></p>\n\n<p>The results are as follows:</p>\n\n<ul>\n<li><code>-123</code> will convert to integer <code>0</code>,</li>\n<li><code>-10</code> will convert to integer <code>0</code>,</li>\n<li><code>-1</code> will convert to integer <code>0</code>,</li>\n<li><code>0</code> will convert to integer <code>1</code>,</li>\n<li><code>1</code> will convert to integer <code>0</code>,</li>\n<li><code>2</code> will convert to integer <code>0</code>,</li>\n<li><code>60</code> will convert to integer <code>0</code>,</li>\n</ul>\n\n<h2>Solution 2</h2>\n\n<p>As mblase75 noted, jAndy had some other solution that works as mine:</p>\n\n<pre><code>v = +!v\n</code></pre>\n\n<p>It also first makes boolean from the original value, but uses <code>+</code> instead of <code>1*</code> to convert it into integer. The result is exactly the same, but the notation is shorter.</p>\n\n<h2>Solution 3</h2>\n\n<p>The another approach is to use <code>~~</code> operator:</p>\n\n<pre><code>v = ~~!v\n</code></pre>\n\n<p>It is pretty uncommon and always converts to integer from boolean.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Another way to do it:</p>\n\n<pre><code>v = ~(v|-v) &gt;&gt;&gt; 31;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Just for kicks: <code>v = Math.pow(v-1,v)</code> also toggles between 1 and 0.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>v=!v;\n</code></pre>\n\n<p>will work for v=0 and v=1; and toggle the state;</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>define an array{1,0}, set v to v[v], therefore v with a value of 0 becomes 1, and vica versa.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If there are just two values, as in this case(0, 1), i believe it's wasteful to use int. Rather go for boolean and work in bits. I know I'm assuming but in case of toggle between two states boolean seems to be ideal choice. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Since this is JavaScript, we can use the unary <code>+</code> to convert to int:</p>\n\n<pre><code>v = +!v;\n</code></pre>\n\n<p>This will logical <code>NOT</code> the value of <code>v</code> (giving <code>true</code> if <code>v == 0</code> or <code>false</code> if <code>v == 1</code>). Then we convert the returned boolean value into its corresponding integer representation.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want to toggle a variable between 0 and 1. If it's 0 I want to set it to 1, else if it's 1 I want to set it to 0.</p>\n\n<p>This is such a fundamental operation that I write so often I'd like to investigate the shortest, clearest possible way of doing it. Here's my best so far:</p>\n\n<pre><code>v = (v == 0 ? 1 : 0);\n</code></pre>\n\n<p>Can you improve on this?</p>\n\n<p>Edit: the question is asking how to write the above statement in the fewest characters while retaining clarity - how is this 'not a real question'? This wasn't intended to be a code-golf exercise, though some interesting answers have come out of people approaching it as golf - it's nice to see golf being used in a constructive and thought-provoking manner.</p>\n",
            "last_activity_date": 1353782019,
            "question_id": 6911235,
            "score": 372,
            "tags": [
                "javascript",
                "variables",
                "coding-style",
                "toggle",
                "code-golf"
            ],
            "title": "Is there a better way of writing v = (v == 0 ? 1 : 0);"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Ask how <a href=\"http://www.jibbering.com/faq/faq_notes/closures.html#clMem\" rel=\"nofollow\">accidental closures</a> might cause memory leaks in IE.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Ask \"What unit testing framework do you use? and why?\"</p>\n\n<p>You can decide if actually using a testing framework is really necessary, but the conversation might tell you a lot about how expert the person is.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Ask about \"this\". This is one good question which can be true test of JavaScript developer.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>(I'm assuming you mean browser-side JavaScript)</p>\n\n<p>Ask him why, despite his infinite knowledge of JavaScript, it is still a good idea to use existing frameworks such as jQuery, Mootools, Prototype, etc.</p>\n\n<p>Answer:\nGood coders code, great coders reuse. Thousands of man hours have been poured into these libraries to abstract DOM capabilities away from browser specific implementations. There's no reason to go through all of the different browser DOM headaches yourself just to reinvent the fixes.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Ask them how they ensure their pages continue to be usable when the user has JavaScript turned off or JavaScript isn't available.</p>\n\n<p>There's no One True Answer, but you're fishing for an answer talking about some strategies for <a href=\"http://en.wikipedia.org/wiki/Progressive_enhancement\">Progressive Enhancement</a>.</p>\n\n<blockquote>\n  <p>Progressive Enhancement consists of\n  the following core principles:</p>\n  \n  <ul>\n  <li>basic content should be accessible to all browsers</li>\n  <li>basic functionality should be accessible to all browsers</li>\n  <li>sparse, semantic markup contains all content</li>\n  <li>enhanced layout is provided by externally linked CSS</li>\n  <li>enhanced behavior is provided by [[Unobtrusive\n  JavaScript|unobtrusive]], externally\n  linked JavaScript</li>\n  <li>end user browser preferences are respected</li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Because JavaScript is such a small language, yet with incredible complexity, you should be able to ask relatively basic questions and find out if they are really that good based on their answers.  For instance, my standard first question to gauge the rest of the interview is:</p>\n\n<blockquote>\n  <p>In JavaScript, what is the difference between <code>var x = 1</code> and <code>x = 1</code>?  Answer in as much or as little detail as you feel comfortable.</p>\n</blockquote>\n\n<p>Novice JS programmers <em>might</em> have a basic answer about locals vs globals.  Intermediate JS guys should definitely have that answer, and should probably mention function-level scope.  Anyone calling themselves an \"advanced\" JS programmer should be prepared to talk about locals, implied globals, the <code>window</code> object, function-scope, declaration hoisting, and scope chains.  Furthermore, I'd love to hear about <code>[[DontDelete]]</code>, hoisting precedence (parameters vs <code>var</code> vs <code>function</code>), and <code>undefined</code>.</p>\n\n<p>Another good question is to ask them to write a <code>sum()</code> function that accepts any number of arguments, and returns their sum.  Then, ask them to use that function (without modification) to sum all the values in an array.  They should write a function that looks like this:</p>\n\n<pre><code>function sum() {\n  var i, l, result = 0;\n  for (i = 0, l = arguments.length; i &lt; l; i++) {\n    result += arguments[i];\n  }\n  return result;\n}\nsum(1,2,3); // 6\n</code></pre>\n\n<p>And they should invoke it on your array like this (context for <code>apply</code> can be whatever, I usually use <code>null</code> in that case):</p>\n\n<pre><code>var data = [1,2,3];\nsum.apply(null, data); // 6\n</code></pre>\n\n<p>If they've got those answers, they probably know their JavaScript.  You should then proceed to asking them about non-JS specific stuff like testing, workflows, version control, etc. to find out if they're a good <em>programmer</em>.</p>\n",
                    "is_accepted": false,
                    "score": 73
                },
                {
                    "body": "<p><strong>Basic JS programmming</strong></p>\n\n<ul>\n<li><code>Scope of variable</code></li>\n<li>What is <code>Associative Array</code>? How do we use it?</li>\n</ul>\n\n<p><strong>OOPS JS</strong></p>\n\n<ul>\n<li><code>Difference between Classic Inheritance and Prototypical Inheritance</code> </li>\n<li>What is <code>difference between private variable, public variable and static variable</code>? How we achieve this in JS?</li>\n<li>How to <code>add/remove properties to object</code> in run time?</li>\n<li>How to achieve <code>inheritance</code> ?</li>\n<li>How to <code>extend built-in objects</code>?</li>\n<li>Why <code>extending array is bad idea</code>?</li>\n</ul>\n\n<p><strong>DOM and JS</strong></p>\n\n<ul>\n<li><code>Difference between browser detection and feature detection</code></li>\n<li><code>DOM Event Propagation</code></li>\n<li><code>Event Delegation</code></li>\n<li><code>Event bubbling V/s Event Capturing</code></li>\n</ul>\n\n<p><strong>Misc</strong></p>\n\n<ul>\n<li><code>Graceful Degradation V/s Progressive Enhancement</code></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 55
                },
                {
                    "body": "<p>intermediate programmers should have technical mastery of their tools.</p>\n\n<p>if he's passed the technical phone screen-esque questions above, make him sketch out something stupid on the spot, like an ajax url shortner. then grill him on his portfolio. no amazing portfolio = intermediate developer in this domain and not the guy you want in charge of your shiny new project.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>What are good questions to determine if applicant is really a pro JavaScript (browser side) developer ?</p>\n\n<p>Questions that can distinguish if someone is not an ad-hoc JavaScript programmer, but is really doing professional JavaScript development, object-oriented, reusable, and maintainable.</p>\n\n<p><strong>Please provide answers</strong>, so an intermediate and ad-hoc JavaScript programmers can interview someone more experienced, coming up with answers to quite few of those advanced questions will elude me. <strong>Please avoid open questions</strong>.</p>\n\n<p>Please keep <strong>one <em>interview question/answer</em> per <em>SO answer</em></strong> for better reading experience and easier interview preparation.</p>\n",
            "last_activity_date": 1391788624,
            "question_id": 2492123,
            "score": 66,
            "tags": [
                "javascript"
            ],
            "title": "Pro JavaScript programmer interview questions (with answers)"
        },
        {
            "answer_count": 22,
            "answers": [
                {
                    "body": "<p>Unfortunately, at the moment it seems like this isn't possible:\n<a href=\"http://www.mobilexweb.com/blog/ipad-mini-detection-for-html5-user-agent\">http://www.mobilexweb.com/blog/ipad-mini-detection-for-html5-user-agent</a></p>\n\n<blockquote>\n  <p>Two days ago, I\u2019ve tweeted about the first detected problem: \u201c<strong>It is\n  confirmed that the iPad Mini User Agent is the same as the iPad 2</strong>\u201c.\n  I\u2019ve received literally hundreds of answers saying that user agent\n  sniffing is a bad practice, that we should detect features not\n  devices, etc, etc.</p>\n  \n  <p>Well yes guys, you are right, but it has no direct relationship with\n  the problem. And I need to add the second bad news: <strong>there is no\n  client-side technique to make  \u201dfeature detection\u201d neither</strong>.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>I know that is a horrible solution, but at the moment the only way to differentiate between an iPad Mini and an iPad 2 is to check its build number and map each build number with the related device.</p>\n\n<p>Let me give you an example: iPad mini, version 6.0, is exposing \"<code>10A406</code>\" as build number, while iPad 2 is exposing \"<code>10A5376e</code>\".</p>\n\n<p>This value can be easily obtained through a regex on the user agent (<code>window.navigator.userAgent</code>); that number is prefixed with \"<code>Mobile/</code>\".</p>\n\n<p>Unfortunately this is the only unequivocal way to detect an iPad Mini; I would suggest to adopt a <code>viewport</code> related approach (where supported, using vh / vw units) to properly display contents on different screen sizes.</p>\n",
                    "is_accepted": false,
                    "score": 70
                },
                {
                    "body": "<p>I understand this might be a bit low-tech solution, but since we can't seem to come up with anything else yet..</p>\n\n<p>I am assuming you already check for most of the other devices, so I see the following scenarios possible.</p>\n\n<p>You could check for ALL the possible most popular devices that require special CSS/sizing, and if it matches none of those either assume it's an iPad mini or simply ask the user?</p>\n\n<pre><code>// Device checks here\n...\nelse {\n  // it would probably be better to make this a nicer popup-thing\n  var mini = prompt(\"Are you using a iPad mini? Press yes for a better user experience\");\n  // Store the result for future visits somehow.\n}\n</code></pre>\n\n<p>I know that might seem like a stupid approach right now, but if we currently have no way of deciding if the device is a iPad mini or an iPad 2 at least the website will be usable with iPad mini devices doing something like this.</p>\n\n<p>You could even go with something like this:</p>\n\n<p>\"To give you the best possible browsing experience we try to detect your device-type to customise the website to your device. Unfortunately due to limitations this is not always possible and we can't currently determine if you use an iPad 2 or an iPad mini by using these methods.</p>\n\n<p>For the best possible browsing experience, please select what device you are using below.</p>\n\n<p>This choice will be stored for future visits to the website on this device.</p>\n\n<pre><code>[] iPad 2 \n[*] iPad mini\n[] Ancient blackberry device\n</code></pre>\n\n<p>\"</p>\n\n<p>I am not entirely familiar with what you can and can't do client-side in Javascript. I know you can get a user's IP, but is it possible to get a user's mac address? Are those ranges different between iPad2's and iPad mini's?</p>\n",
                    "is_accepted": false,
                    "score": 82
                },
                {
                    "body": "<p>This is a wild shot, but one of the difference between iPad 2 and iPad mini is that the former does not have a 3-axis gyroscope. Maybe it'll be possible to use the WebKit device orientation API to see what sort of information you can get from it.</p>\n\n<p>For example, <a href=\"http://developer.apple.com/library/safari/#documentation/SafariDOMAdditions/Reference/DeviceMotionEventClassRef/DeviceMotionEvent/DeviceMotionEvent.html\">this page</a> seems to suggest that you can only get the <code>rotationRate</code> value if the device has a gyroscope.</p>\n\n<p>Sorry I can't give a working POC - I don't have access to an iPad mini. Maybe someone who knows a bit more about these orientation APIs can chime in here.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Yes, it's a good point to check gyroscope. \nYou can easily do it with </p>\n\n<p><a href=\"http://developer.apple.com/library/safari/#documentation/SafariDOMAdditions/Reference/DeviceMotionEventClassRef/DeviceMotionEvent/DeviceMotionEvent.html\">http://developer.apple.com/library/safari/#documentation/SafariDOMAdditions/Reference/DeviceMotionEventClassRef/DeviceMotionEvent/DeviceMotionEvent.html</a></p>\n\n<p>or something like </p>\n\n<pre><code>window.ondevicemotion = function(event) {\nif (navigator.platform.indexOf(\"iPad\") != -1 &amp;&amp; window.devicePixelRatio == 1) {\n    var version = \"\";\n    if (event.acceleration) version = \"iPad2\";\n    else version=\"iPad Mini\";\n\n    alert(version);\n\n}\nwindow.ondevicemotion = null;\n</code></pre>\n\n<p>}\u200b</p>\n\n<p>Don't have any iPads to test it out.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Play a stereo audio file and compare the accelerometer response when volume is high on the right channel and on the left channel - iPad2 had mono speakers whereas iPad Mini has built-in stereo speakers.</p>\n\n<p><em>Need your help to gather the data please visit <a href=\"http://www.intechrity365.com/collectIpadMini2.html\">this page</a> and help me collect data for this crazy idea. I don't have an iPad mini so I really need your help</em></p>\n",
                    "is_accepted": false,
                    "score": 238
                },
                {
                    "body": "<p>What about a micro benchmark, calculate something that takes roughly X microseconds on iPad 2 and Y sec on iPad mini.</p>\n\n<p>It's probably not accurate enough, but there might be some instruction the iPad mini's chip is more efficient at.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p><strong>Update:</strong> <a href=\"http://konstruktors.com/blog/web-design/4396-detect-ipad-mini-javascript/#comment-24726\">It looks like</a> these values are reporting the viewport width and height at the time of tab creation, and they don't change upon rotation, so <strong>this method can't be used for device detection</strong>!</p>\n\n<p>You can use the either <code>screen.availWidth</code> or <code>screen.availHeight</code> as they seem to be different for iPad Mini and iPad 2.</p>\n\n<h2>iPad Mini</h2>\n\n<pre><code>screen.availWidth = 768\nscreen.availHeight = 1004\n</code></pre>\n\n<h2>iPad 2</h2>\n\n<pre><code>screen.availWidth = 748\nscreen.availHeight = 1024\n</code></pre>\n\n<p>Source: <a href=\"http://konstruktors.com/blog/web-design/4396-detect-ipad-mini-javascript/\">http://konstruktors.com/blog/web-design/4396-detect-ipad-mini-javascript/</a></p>\n",
                    "is_accepted": false,
                    "score": 126
                },
                {
                    "body": "<p>tl;dr Don't compensate for the difference between iPad mini and iPad 2 unless you'll also compensate between fat and skinny fingers. </p>\n\n<p>Apple appears to be deliberately trying not to let you tell the difference. Apple appears not to want us to write different code for the different size versions of iPads. Not being part of Apple myself, I don't know this for sure, I'm just saying that this is what it appears like. Maybe, if the developer community comes up with a fancy detector for iPad minis, Apple may deliberately break that detector in future versions of iOS. Apple wants you to set your minimum target size to 44 iOS points, and iOS will display that in two sizes, the larger iPad size and the smaller iPhone/iPad mini size. 44 points is plenty generous, and your users will certainly know if they are on the smaller iPad, so can compensate on their own.</p>\n\n<p>I suggest stepping back to your stated reason for asking for the detector: adjusting target size for end user comfort. By deciding to design for one size on the large iPad and another size on the small iPad you are deciding that all people have the same size fingers. If your design is tight enough that the difference in size from an iPad 2 and an iPad mini makes a difference, than the size of fingers between me and my wife will make a bigger difference. So compensate for user finger size, not iPad model. </p>\n\n<p>I have a suggestion on how to measure finger size. I'm a native iOS developer, so I don't know if this can be accomplished in HTML5, but here's how I would measure finger size in a native app. I'd have the user pinch two objects together, then measure how close they get together. Smaller fingers will get the objects closer together, and you can use this measurement to derive a scaling factor. This automatically adjusts for iPad size. The same person will have a larger measurement of on screen points on an iPad mini than on an iPad 2. For a game you can call this a calibration step, or not even call it out. Have it as a starting step. For example in a shooting game have the player put the ammo in the gun with a pinching motion.</p>\n",
                    "is_accepted": false,
                    "score": 65
                },
                {
                    "body": "<p><strong>EDIT 1:</strong>  My original answer, below, was \"don't do it\".  In the interest of being positive:</p>\n\n<p>The real question, I think, has nothing to do with the iPad X vs. iPad mini.  I think it is about optimizing UI element dimensions and placement to the user's ergonomics. You need to determine the size of the user's finger/s in order to drive your UI element sizing and, perhaps, positioning.  This, again, is and should probably be arrived at without needing to actually know what device you are running on.  Let's exaggerate: Your app is running on a 40 inch diagonal screen.  Don't know the make and model or the DPI.  How do you size the controls?</p>\n\n<p>You need to display a button that is the gating element into the site/game.  I'll leave it up to you to decide where or how it makes sense to do this.</p>\n\n<p>While the user will see this as a single button, in reality it will be composed of a matrix of small tightly packed buttons that is visually covered to appear as a single button image.  Imagine a 100 x 100 pixel button made up of 400 buttons, each 5 x 5 pixels.  You need to experiment to see what makes sense here and how small your sampling needs to be.</p>\n\n<p>Possible CSS for button array:</p>\n\n<pre><code>.sense_row {\n  width:100px;\n  height:5px;\n  margin:0;\n  padding:0;\n}\n\n.sense_button {\n  float:left;\n  width:3px;\n  height:3px;\n  padding:0px;\n  margin:0px;\n  background-color:#FF0;\n  border:1px solid #000;\n} \n</code></pre>\n\n<p>And the resulting array:</p>\n\n<p><img src=\"http://i.stack.imgur.com/azVsS.png\" alt=\"button array\"></p>\n\n<p>When the user touches the button array you will, effectively, get an image of the user's finger's contact area.  You can then use whatever criteria you want (probably empirically derived) in order to arrive at a set of numbers that you can use to scale and position the various UI elements per your requirements.  </p>\n\n<p>The beauty of this approach is that you no-longer care about what device name or model you might be dealing with.  All you care about is the size of the user's finger in relation to the device.</p>\n\n<p>I would imagine that this sense_array button could be hidden as part of the entry process into the application.  For example, if it is a game, maybe there's a \"Play\" button or various buttons with the user's names or a means to select what level they'll play, etc.  You get the idea.  The sense_array button could live anywhere the user has to touch in order to get into the game.</p>\n\n<p><strong>EDIT 2:</strong>  Just noting that you probably don't need that many sense buttons.  A set of concentric circles or buttons arranged like a huge asterisk <code>*</code> might do just fine.  You have to experiment.</p>\n\n<p>With my old answer, below, I am giving you both sides of the coin.</p>\n\n<p><strong>OLD ANSWER:</strong></p>\n\n<p>The right answer is:  Don't do this.  It's a bad idea.</p>\n\n<p>If your buttons are so small that they become unusable on a mini you need to make your buttons larger.  </p>\n\n<p>If I have learned anything at all in doing native iOS apps it's that trying to outsmart Apple is a formula for undue pain and aggravation.  If they chose to not allow you to identify the device it's because, well, in their sandbox, you shouldn't.</p>\n\n<p>I wonder, are you adjusting the size/location in portrait vs. landscape?</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Not tested, but instead of playing an audio file and check the balance, it could work to listen to the microphone, extract the background noise, and compute its \"color\" (frequency graph). If IPad Mini has a different microphone model than IPad 2, then their background color should be measurably different and some audio fingerprinting techniques might help you tell which device is in use.</p>\n\n<p>I don't seriously think it could be feasible and worth the hassle in this specific case, but I think <strong>fingerprinting the background noise</strong> could be used in some apps, for example to tell you where you are when you are inside a building.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could always ask the user?! </p>\n\n<p>If the User can't see the buttons or content, then give them a way to manage the scaling themselves. You could always build in some scaling buttons to the site to make the content (text/buttons) larger / smaller. This would be (almost) guaranteed to work for any current iPad resolution and probably any future resolution apple decide they want to make.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Well, the iPad 2 and the iPad Mini have different sized batteries.</p>\n\n<p>If iOS 6 supports it, you can get the current battery level from <code>0.0..1.0</code> using <code>window.navigator.webkitBattery.level</code>. At some level either in hardware or software, that is likely calculated as <code>CurrentLevel / TotalLevel</code>, where both are ints. If so, that will result in a float which is a multiple of <code>1 / TotalLevel</code>. If you take lots of battery level readings from both devices, and calculate <code>battery.level * n</code> you might be able to find a value of n where all the results start to be close to integers, which will give you <code>iPad2TotalLevel</code> and <code>iPadMiniTotalLevel</code>.</p>\n\n<p>If those two numbers are different, and mutually prime, then in production you can calculate <code>battery.level * iPad2TotalLevel</code> and <code>battery.level * iPadMiniTotalLevel</code>. Whichever is closer to an integer will indicate which device is being used.</p>\n\n<p>Sorry about the number of ifs in this answer! Hopefully something better will come along.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Not answering the question, but the question behind the question:</p>\n\n<p>Your goal is to improve the user experience on a smaller screen. The appearance of the UI controls is one part of it. Another part of UX is the way the application responds.</p>\n\n<p>What if you make the area that responds to taps big enough to be user friendly on the iPad Mini while keeping the visual representation of the UI controls small enough to be visually pleasing on the iPad?</p>\n\n<p>If you have gathered enough taps that were not in the visual area, you can decide to visually scale the UI Controls.</p>\n\n<p>As a bonus, this works for big hands on iPad as well.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This isn't an answer to your question as posed, but I hope it will be more useful than saying \"don't do that\":</p>\n\n<p>Instead of detecting the iPad Mini, why not detect that a user is having a hard time hitting the control (or: is consistently hitting in a subregion of the control), and grow / shrink the size of the control to accommodate them?</p>\n\n<p>Users who need bigger controls get them regardless of hardware; users who don't need bigger controls and want to see more content get that too.  It's not a simple as just detecting the hardware, and there will be some subtle things to get right, but if it were done carefully it could be really nice.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Require all users with the iPad2 user agent to supply a photo <a href=\"http://howto.cnet.com/8301-11310_39-57507927-285/with-ios-6-you-can-upload-photos-in-safari/\">using the built in camera</a> and detect the resolution using the <a href=\"http://www.w3.org/TR/FileAPI/\">HTML File API</a>. iPad Mini photos will be higher resolution due to the improvements in the camera.</p>\n\n<p>You could also play around with creating an invisible canvas element, and convert it to a PNG/JPG using the Canvas API. I don't have any way to test it, but the resulting bits <em>might</em> be different due to the underlying compression algorithm and the device's pixel density.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Ask the user to drop their iPad from several thousand feet above the ground. Then use the internal accelerometer to measure the time it takes for the iPad to reach terminal velocity. The larger iPad has a greater drag coefficient and should reach terminal velocity in less time than an <a href=\"http://en.wikipedia.org/wiki/IPad_Mini\">iPad Mini</a>.</p>\n\n<p>Here is some sample code to get you started.</p>\n\n<pre><code>function isIPadMini( var timeToReachTerminalVelocity )\n{\n    return (timeToReachTerminalVelocity &gt; IPAD_MINI_THRESHOLD);\n}\n</code></pre>\n\n<p>You almost certainly need to revisit this code when Apple inevitably releases the next iPad in a different form factor. But I am sure you will stay on top of things and maintain the this hack for each new version of the iPad.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>This reminds me of a quote from the movie Equilibrium:</p>\n\n<blockquote>\n  <p>\"What, would you say, is the easiest way to get a weapon away from a Grammaton Cleric?\"</p>\n  \n  <p>\"You ask him for it.\"</p>\n</blockquote>\n\n<p>We're so used to fighting for solutions, when sometimes, it may be better to ask. (There are good reasons that we usually don't do this, but it's always an option.) All of the suggestions here are brilliant, but a simple solution might be to have your program ask which iPad they're using when they start it.</p>\n\n<p>I know that this is kind of a cheeky answer, but I hope it's a reminder that we don't have to fight for everything. (I've braced myself for the downvotes. :P)</p>\n\n<p>Some examples:</p>\n\n<ul>\n<li>Keyboard detection during OS installations sometimes can't detect a\nspecific keyboard, so the installer has to ask.</li>\n<li>Windows asks whether a\nnetwork you connect to is a home network or a public network.</li>\n<li>Computers can't detect the person who is about to use it, so they require a username and password.</li>\n</ul>\n\n<p>Best of luck - I hope you find an awesome solution! If you don't, though, don't forget this one.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>All solutions here are not future-proof (what prevents Apple from releasing an iPad with the same screen size as the iPad 2 but same resolution as the iPad Mini). So I came up with an idea:</p>\n\n<p>Create a div with 1 inch width and append it to the body. Then I create another div with 100% width and append it to the body:</p>\n\n<pre><code>var div1= $(\"&lt;div/&gt;\").appendTo(document.body).width(\"1in\");\nvar div2= $(\"&lt;div/&gt;\").appendTo(document.body).width(\"100%\");\n</code></pre>\n\n<p>jQuery width() function always returns values in pixels so you can just:</p>\n\n<pre><code>var screenSize= div2.width() / div1.width();\n</code></pre>\n\n<p>screenSize now holds the size <strong>available to the application</strong> in inches (beware rounding erros though). You can use that to place your GUI the way you like it. Also don't forget to remove the useless divs afterwards.</p>\n\n<p>Also note that the algorithm proposed by Kaspars not only will not work if the user runs the application as full screen, but it will also break if Apple patches the browser UI.</p>\n\n<p>This won't differentiate the devices, but as you explained in your edit what you actually wants to know is the device screen size. My idea will also not tell you exactly the screen size, but it will give you an even more useful information, the actual size (in inches) that you have available to draw your GUI.</p>\n\n<p><strong>EDIT:</strong>\nUse this code to check if it actually works on your device. I don't own any iPads to test it on.</p>\n\n<pre><code>var div1= $(\"&lt;div/&gt;\").appendTo(document.body).width(\"1in\").height(\"1in\").css(\"position\", \"absolute\");\nvar div2= $(\"&lt;div/&gt;\").appendTo(document.body).width(\"100%\").height(\"100%\").css(\"position\", \"absolute\");\nvar width= div2.width() / div1.width()\nvar height= div2.height() / div1.height()\nalert(Math.sqrt(width*width + height*height));\n</code></pre>\n\n<p>It should popup a window with your screensize in inches. It seems to work on my laptop, returning 15.49 while my laptop screen is marketed as 15.4''. Can anyone test this on iPads and post comments please? Don't forget to run it full screen.</p>\n\n<p><strong>EDIT2:</strong> It turns out that the page I tested it in had some conflicting <a href=\"http://en.wikipedia.org/wiki/Cascading_Style_Sheets\" rel=\"nofollow\">CSS</a>. I fixed the test code to work properly now. You need position: absolute on the divs so you can use height in %.</p>\n\n<p><strong>EDIT3:</strong> I did some research, and it seems there is no way to actually get the size of the screen on any device. It's not something the OS can know. When you use a real world unit in CSS it is actually just an estimation based on some properties of your screen. Needless to say that this is not accurate at all.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Based on <a href=\"http://stackoverflow.com/users/119271/douglas\">Douglas</a> question about <code>new webkitAudioContext().destination.numberOfChannels</code> on iPad 2 I decided to run some tests.</p>\n\n<p>Checking numberOfChannels returned <code>2</code> on iPad mini but nothing on iPad 2 with iOS 5 and <code>2</code> as well with iOS 6.</p>\n\n<p>Then I tried to check if webkitAudioContext is available</p>\n\n<pre><code>var hasWebkitAudio = typeof(webkitAudioContext) === \"object\";\nalert(hasWebkitAudio);\u200b\n</code></pre>\n\n<p>Same here iPad Mini and iPad 2 with iOS 6 returns true while iPad 2 with iOS 5 returns false.</p>\n\n<p>(This test don't work on desktop, for desktop check if webkitAudioContext is a function).</p>\n\n<p>Here's the code for you to try out: <a href=\"http://jsfiddle.net/sqFbc/\" rel=\"nofollow\">http://jsfiddle.net/sqFbc/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>What if you created a bunch of 1\"x1\" wide divs and appended them one by one to a parent div until the bounding box jumped from 1 inch to 2 inches? An inch on the mini is the same size as an inch on the iPad, right?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In iOS7 there is a system-wide setting user can tweak: when things become too small to read, <strong>Text Size</strong> setting can be changed.</p>\n\n<p>That text size can be used to form UI of plausible dimensions, e.g. for a button (tested on iPad Mini Retina to react to Text Size setting changes):</p>\n\n<pre><code>padding: 0.5em 1em 0.5em 1em;\nfont: -apple-system-body;    \n</code></pre>\n\n<p>(<a href=\"http://jsfiddle.net/fU8QK/\" rel=\"nofollow\">sample</a> button CSS, thanks to jsfiddle and cssbuttongenerator)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Apple's iPad Mini is a smaller clone of the iPad 2 in more ways than we'd want. In JavaScript, the <code>window.navigator</code> object exposes the same values for the Mini and iPad 2. My tests so far to detect the difference have not lead to success.</p>\n\n<p>Why is this important? </p>\n\n<p>As the iPad Mini and iPad 2 screens are identical in pixels but vary in actual size (inches / centimeters), they vary in <a href=\"http://en.wikipedia.org/wiki/Pixel_density\">PPI</a> (pixels per inch).</p>\n\n<p>For web applications and games to offer a friendly user interface, certain elements are adjusted in size relative to a user's thumb or finger position, thus, we may want to scale certain images or buttons to provide for that better user experience.</p>\n\n<p>Things I have tried so far (including some pretty obvious approaches):</p>\n\n<ul>\n<li><code>window.devicepixelratio</code></li>\n<li>CSS element width in cm unit</li>\n<li>CSS media queries (such as <code>resolution</code> and <code>-webkit-device-pixel-ratio</code>)</li>\n<li>SVG drawings in similar units</li>\n<li>Doing all sorts of CSS webkit transforms for a set time and counting rendered frames with <code>requestAnimFrame</code> (I was hoping to detect a measurable difference)</li>\n</ul>\n\n<p>I'm fresh out of ideas. How about you?</p>\n\n<p><strong>Update</strong>\nThanks for the responses so far. I would like to comment on people voting against detecting iPad mini versus 2 as Apple has uhm, one guideline to rule them all. Okay, here's my reasoning why I feel it really makes all sense in the world to know if a person is using an iPad mini or a 2. And do with my reasoning what you like.</p>\n\n<p>The iPad mini is not only a much smaller device (9.7 inch versus 7.9 inch), but its form factor allows for a different usage. The iPad 2 is usually held with two hands when gaming unless you're <a href=\"http://en.wikipedia.org/wiki/Chuck_Norris_facts\">Chuck Norris</a>. The mini is smaller, but it is also much lighter and allows for gameplay where you hold it in one hand and use another to swipe or tap or whatnot. As a game designer and developer myself, I'd just like to <strong>know</strong> if it's a mini so I can choose to provide the player with a different controlscheme if I want (for instance after A/B testing with a group of players). </p>\n\n<p>Why? Well, it's a proven fact that the majority of users tend to go with the default settings, so leaving out a virtual thumbstick and putting some other tap-based control on the screen (just giving an arbitrary example here) when the player loads up the game for the first time is what I, and probably other game designers, would love to <strong>be able to</strong> do.</p>\n\n<p>So IMHO this goes beyond the thick fingers / guidelines discussions and is just something Apple and all other vendors ought to do: allow us to uniquely identify your device and <strong>think different</strong> instead of <strong>following</strong> guidelines.</p>\n",
            "last_activity_date": 1400393614,
            "question_id": 13248493,
            "score": 335,
            "tags": [
                "javascript",
                "html5",
                "ipad",
                "svg"
            ],
            "title": "Detect iPad Mini in HTML5"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Npm and Bower are both dependency management tools. But the main difference between both is <strong>npm is used for installing Node js modules but bower js is used for managing front end components like html,css,js etc</strong>. </p>\n\n<p>The fact that npm provides some packages which can be used in front-end development like <code>grunt</code>, <code>jshint</code>.</p>\n\n<p>These lines add more meaning</p>\n\n<blockquote>\n  <p>Bower, unlike npm, can have multiple files (e.g. .js, .css, .html, .png, .ttf) which are considered the main file(s). Bower semantically considers these main files, when packaged together, a component.</p>\n</blockquote>\n\n<p>Read <a href=\"http://tech.pro/tutorial/1190/package-managers-an-introductory-guide-for-the-uninitiated-front-end-developer#front_end_developers\">this article for much more detailed explanation</a></p>\n\n<p><strong>Edit</strong>: <strong>Grunt</strong> is quite different from Npm and Bower. Grunt is a javascript task runner tool. You can do a lot of things using grunt which you had to do manually otherwise. Highlighting some of the uses of Grunt:</p>\n\n<ol>\n<li>Zipping some files (e.g. zipup plugin)</li>\n<li>Linting on js files (jshint)</li>\n<li>Compiling less files (grunt-contrib-less)</li>\n</ol>\n\n<p>There are grunt plugins for sass compilation, uglifying your javascript, copy files/folders, minifying javascript etc. </p>\n\n<p>Please Note grunt plugin is also an npm package.</p>\n\n<p><strong>Question-1</strong></p>\n\n<blockquote>\n  <p>When I want to add a package (and check in the dependency into git), where does it belong - into package.json or into bower.json</p>\n</blockquote>\n\n<p>It really depends where does this package belong to. If it is a node module(like grunt,request) then it will go in package.json otherwise into bower json.</p>\n\n<p><strong>Question-2</strong></p>\n\n<blockquote>\n  <p>When should I ever install packages explicitly like that without adding them to the file that manages dependencies</p>\n</blockquote>\n\n<p>It does not matter whether you are installing packages explicitly or mentioning the dependency in .json file. Suppose you are in middle of node project and you need another project say <code>request</code>, you have two options:</p>\n\n<ul>\n<li>Edit the package.json file and add dependency</li>\n<li>npm install</li>\n</ul>\n\n<p>OR</p>\n\n<ul>\n<li>Use commandline: <code>npm install --save request</code></li>\n</ul>\n\n<p><code>--save</code> options adds the dependency to package.json file as well. If you don't specify <code>--save</code> option, it will only download the package but json file will be unaffected.</p>\n\n<p>You can do this either way, there will not be a substantial difference.</p>\n",
                    "is_accepted": true,
                    "score": 169
                }
            ],
            "body": "<p>I'm new to using npm and bower, building my first app in emberjs :).<br>\nI do have a bit of experience with rails, so I'm familiar with the idea of files for listing dependencies (such as bundler Gemfile)</p>\n\n<p>Question: when I want to add a package (and check in the dependency into git), where does it belong - into <code>package.json</code> or into <code>bower.json</code>?</p>\n\n<p>From what I gather,<br>\nrunning <code>bower install</code> will fetch the package and put it in <code>/vendor</code> directory,<br>\nrunning <code>npm install</code> it will fetch it and put it into <code>/node_modules</code> directory. </p>\n\n<p><a href=\"http://stackoverflow.com/a/16493586/1592915\">This SO answer</a> says bower is for front-end and npm is for backend stuff.<br>\n<a href=\"https://github.com/stefanpenner/ember-app-kit\">Ember-app-kit</a> seems to adhere to this distinction from the first glance... But instructions in gruntfile for <a href=\"https://github.com/stefanpenner/ember-app-kit/blob/master/Gruntfile.js#L40-L42\">enabling some functionality</a> give two explicit commands, so I'm totally confused here.</p>\n\n<p>Intuitively I would guess that  </p>\n\n<ol>\n<li><p><strong>npm install --save-dev package-name</strong> would be equivalent to adding the package-name to my package.json </p></li>\n<li><p><strong>bower install --save package-name</strong> might be the same as adding the package to my <em>bower.json</em> and running <strong>bower install</strong>?  </p></li>\n</ol>\n\n<p>If that is the case, when should I ever install packages explicitly like that without adding them to the file that manages dependencies (apart from installing command line tools globally)?</p>\n",
            "last_activity_date": 1418242857,
            "question_id": 21198977,
            "score": 133,
            "tags": [
                "javascript",
                "gruntjs",
                "bower",
                "web-frontend"
            ],
            "title": "Difference between Grunt, NPM and Bower ( package.json vs bower.json )"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>I assume you have <a href=\"https://github.com/isaacs/npm\">npm</a> installed the correct way using one of these <a href=\"https://gist.github.com/579814\">snippets</a>(I used the top one).</strong></p>\n\n<h2>Redis</h2>\n\n<p>I would use redis as a database. For one it is really <a href=\"http://redis.io/topics/benchmarks\">fast</a>, persistent. You need to install it, but that is really easy.</p>\n\n<pre><code>make\n</code></pre>\n\n<h2>Redis-cli</h2>\n\n<p>Next you should play with redis yourself. I would advice you to look at this excellent tutorial by <a href=\"http://simonwillison.net/static/2010/redis-tutorial/\">Simon Willison</a>. He and I also advice you to just play with the <code>redis-cli</code> to get a feeling of the database.</p>\n\n<h2>Redis client</h2>\n\n<p>Finally you need to install a redis client. I would advise you to use mranney's <a href=\"https://github.com/mranney/node_redis\">node_redis</a> because I think it is the fastest and most actively developed client.</p>\n\n<p><strong>Installation</strong></p>\n\n<pre><code>npm install hiredis redis\n</code></pre>\n\n<p><strong>Simple example, included as example.js:</strong></p>\n\n<pre><code>var redis = require(\"redis\"),\n    client = redis.createClient();\n\nclient.on(\"error\", function (err) {\n    console.log(\"Error \" + err);\n});\n\nclient.set(\"string key\", \"string val\", redis.print);\nclient.hset(\"hash key\", \"hashtest 1\", \"some value\", redis.print);\nclient.hset([\"hash key\", \"hashtest 2\", \"some other value\"], redis.print);\nclient.hkeys(\"hash key\", function (err, replies) {\n    console.log(replies.length + \" replies:\");\n    replies.forEach(function (reply, i) {\n        console.log(\"    \" + i + \": \" + reply);\n    });\n    client.quit();\n});\n</code></pre>\n\n<h2>Storing sessions in database</h2>\n\n<p>Also the author of express has created a library to handle your <a href=\"https://github.com/visionmedia/connect-redis\">sessions</a> using redis.</p>\n\n<p><strong>Installation:</strong></p>\n\n<pre><code>npm install connect-redis\n</code></pre>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>var connect = require('connect')\n      , RedisStore = require('connect-redis');\n\nconnect.createServer(\n  connect.cookieDecoder(),\n  // 5 minutes\n  connect.session({ store: new RedisStore({ maxAge: 300000 }) })\n);\n</code></pre>\n\n<h2>Storing messages in database</h2>\n\n<p>I think I would use a <a href=\"http://redis.io/commands#sorted_set\">sorted set</a> for this. Store the messages using <code>ZADD</code> and retrieve them using <code>ZRANK</code>, <code>ZRANGEBYSCORE</code>.</p>\n\n<h2>Socket.io</h2>\n\n<p>Finally if you are trying to create a simple chat I would advise you to have a look at socket.io.</p>\n\n<blockquote>\n  <p>socket.io aims to make realtime apps\n  possible in every browser and mobile\n  device, blurring the differences\n  between the different transport\n  mechanisms.</p>\n</blockquote>\n\n<p>I also created a chat using socket.io which I posted on <a href=\"http://stackoverflow.com/questions/4441798/how-to-use-redis-publish-subscribe-with-nodejs-by-event-driven/4446424#4446424\">stackoverflow</a>. Adding persistence + authentication should be a breeze.</p>\n",
                    "is_accepted": true,
                    "score": 88
                },
                {
                    "body": "<p>In addition to the NodeCamp tutorial you mention there is another NodeCamp <a href=\"http://www.ustream.tv/recorded/11435693\" rel=\"nofollow\">tutorial</a> given by Matt Ranney the aforementioned author of the redis node library. It goes into a wee bit more depth.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"http://howtonode.org/express-mongodb\" rel=\"nofollow\">Here's a good walkthrough</a> that includes the use of MongoDB.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Express authentication using Redis for session store and Couchdb for database using coffeescript..</p>\n\n<p>Check this gist: <a href=\"https://gist.github.com/652819\" rel=\"nofollow\">https://gist.github.com/652819</a></p>\n\n<p>I use this template for most of my projects. You can implement a similar mongodb version of it too using:</p>\n\n<p>node-mongodb-native by christkv : <a href=\"https://github.com/christkv/node-mongodb-native\" rel=\"nofollow\">https://github.com/christkv/node-mongodb-native</a>, or</p>\n\n<p>mongoose : <a href=\"https://github.com/learnboost/mongoose\" rel=\"nofollow\">https://github.com/learnboost/mongoose</a>, or </p>\n\n<p>amark's mongous: <a href=\"https://github.com/amark/mongous\" rel=\"nofollow\">https://github.com/amark/mongous</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I know this is an old post, but in case anyone else stumbles upon it, I created a tutorial using most of the OP's components, especially the connection to the database. It does have some added complexity with the use of Backbone.js, but it is all in good fun!</p>\n\n<p><a href=\"http://fzysqr.com/2011/02/28/nodechat-js-using-node-js-backbone-js-socket-io-and-redis-to-make-a-real-time-chat-app/\" rel=\"nofollow\">http://fzysqr.com/2011/02/28/nodechat-js-using-node-js-backbone-js-socket-io-and-redis-to-make-a-real-time-chat-app/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am new to node.js but am excited to try it out. I am using <a href=\"http://expressjs.com/\">Express</a> as a web framework, and <a href=\"http://jade-lang.com\">Jade</a> as a template engine. Both were easy to get setup following <a href=\"http://www.ustream.tv/recorded/11434722\">this tutorial</a> from <a href=\"http://camp.nodejs.org/\">Node Camp</a>.</p>\n\n<p>However the one problem I am finding is <strong>I can't find a simple tutorial for getting a DB set up</strong>. I am trying to build a basic chat application (store session and message).</p>\n\n<p><strong>Does anyone know of a good tutorial?</strong> </p>\n\n<p>This other <a href=\"http://stackoverflow.com/questions/2750673/node-js-database\">SO post</a> talks about dbs to use- but as this is very different from the Django/MySQL world I've been in, I want to make sure I understand what is going on.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1342815027,
            "question_id": 4542694,
            "score": 80,
            "tags": [
                "javascript",
                "database",
                "node.js"
            ],
            "title": "Getting-started: Setup Database for Node.js"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>It adds the two <strong>arrays</strong> as if they were <strong>strings</strong>.</p>\n\n<p>The string representation for the first array would be <strong>\"1,2\"</strong> and the second would be <strong>\"3,4\"</strong>. So when the <code>+</code> sign is found, it cannot sum arrays and then concatenate them as being strings.</p>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>It's doing exactly what you asked it to do.</p>\n\n<p>What you're adding together are array references (which JS converts to strings), not numbers as it seems. It's a bit like adding strings together: <code>\"hello \" + \"world\"</code> = <code>\"hello world\"</code> </p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>The <code>+</code> operator <strong>is not defined for arrays</strong>. </p>\n\n<p>What happens is that Javascript <strong>converts arrays into strings</strong> and concatenates those.</p>\n\n<p>&nbsp;</p>\n\n<h2>Update</h2>\n\n<p>Since this question and consequently my answer is getting a lot of attention I felt that in addition to the insightful stuff posted by <a href=\"http://stackoverflow.com/questions/7124884/why-does-1-2-3-4-1-23-4-in-javascript/7124918#7124918\">Jeremy Banks</a> it would be useful to have an <strong>overview</strong> about how the <code>+</code> operator behaves in general.</p>\n\n<p>So, here it goes.</p>\n\n<p>Excluding E4X and implementation-specific stuff, JavaScript has <strong>6</strong> built-in <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special/typeof\">data types</a>: </p>\n\n<ol>\n<li><code>undefined</code></li>\n<li><code>boolean</code></li>\n<li><code>number</code></li>\n<li><code>string</code></li>\n<li><code>function</code></li>\n<li><code>object</code></li>\n</ol>\n\n<p>Note that <strong>neither</strong> <code>null</code> <strong>nor</strong> <code>[]</code> is a separate type - both return <code>object</code> when fed to <code>typeof</code>. However <code>+</code> works differently in either case.</p>\n\n<p>That's right - JavaScript has <strong>no primitive arrays</strong> as such; only instances of a class called <code>Array</code> with some syntactic sugar to ease the pain.</p>\n\n<p>Adding more to the confusion, wrapper entities such as <code>new Number(5)</code>, <code>new Boolean(true)</code> and <code>new String(\"abc\")</code> are all of <code>object</code> type, not numbers, booleans or strings as one might expect. Nevertheless for arithmetic operators <code>Number</code> and <code>Boolean</code> behave as numbers.</p>\n\n<p>Easy, huh? With all that out of the way, we can move on to the overview itself.</p>\n\n<p><strong>Different result types of <code>+</code> by operand types</strong></p>\n\n<pre><code>-------------------------------------------------------------------------------------------\n            | undefined | boolean | number | string | function | object | null   | array  | \n-------------------------------------------------------------------------------------------\n\nundefined   | number    | number  | number | string | string   | string | number | string | \n\nboolean     | number    | number  | number | string | string   | string | number | string | \n\nnumber      | number    | number  | number | string | string   | string | number | string | \n\nstring      | string    | string  | string | string | string   | string | string | string | \n\nfunction    | string    | string  | string | string | string   | string | string | string | \n\nobject      | string    | string  | string | string | string   | string | string | string | \n\nnull        | number    | number  | number | string | string   | string | number | string | \n\narray       | string    | string  | string | string | string   | string | string | string | \n\n-------------------------------------------------------------------------------------------\n</code></pre>\n\n<p>* <sup>this applies to Chrome 13, Firefox 6, Opera 11 and IE9. Checking other browsers and versions is left as an exercise for the reader.</sup></p>\n\n<p><strong>Note:</strong> As pointed out by <a href=\"http://stackoverflow.com/users/5445/cms\">CMS</a>, for certain cases of objects such as <code>Number</code>, <code>Boolean</code> and custom ones the <code>+</code> operator doesn't necessarily produce a string result. It can vary depending on the implementation of object to primitive conversion. For example <code>var o = { valueOf:function () { return 4; } };</code> evaluating <code>o + 2;</code> produces <code>6</code>, a <code>number</code>, evaluating <code>o + '2'</code> produces <code>'42'</code>, a <code>string</code>.</p>\n\n<p>To see how the overview table was generated visit <a href=\"http://jsfiddle.net/4EjXd/\">http://jsfiddle.net/4EjXd/</a></p>\n",
                    "is_accepted": true,
                    "score": 442
                },
                {
                    "body": "<p>It looks like JavaScript is turning your arrays into strings and joining them together. If you want to add tuples together, you'll have to use a loop or a map function.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>It's converting the individual arrays to strings, then combining the strings.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>JavaScript's <code>+</code> operator has two purposes: adding two numbers, or joining two strings. It doesn't have a specific behaviour for arrays, so it's converting them to strings and then joining them.</p>\n\n<p>If you want to join two arrays to produce a new one, use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/concat\">the <code>.concat</code> method</a> instead: </p>\n\n<pre><code>[1, 2].concat([3, 4]) // [1, 2, 3, 4]\n</code></pre>\n\n<p>If you want to efficiently add all elements from one array to another, you need to use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/push\">the .push method</a> in this somewhat-verbose way:</p>\n\n<pre><code>var data = [1, 2];\nArray.prototype.push.apply(data, [3, 4]); // data is now [1, 2, 3, 4]\n</code></pre>\n\n<p>The behaviour of the <code>+</code> operator is defined in <a href=\"http://ecma262-5.com/ELS5_Section_11.htm#Section_11.6.1\">ECMA-262 5e Section 11.6.1</a>:</p>\n\n<blockquote>\n  <h3>11.6.1   The Addition operator ( + )</h3>\n  \n  <p>The addition operator either performs string concatenation or numeric addition. The production <code>AdditiveExpression : AdditiveExpression + MultiplicativeExpression</code> is evaluated as follows:</p>\n  \n  <ol>\n  <li>Let <code>lref</code> be the result of evaluating <code>AdditiveExpression</code>.</li>\n  <li>Let <code>lval</code> be <code>GetValue(lref)</code>.</li>\n  <li>Let <code>rref</code> be the result of evaluating <code>MultiplicativeExpression</code>.</li>\n  <li>Let <code>rval</code> be <code>GetValue(rref)</code>.</li>\n  <li>Let <code>lprim</code> be <code>ToPrimitive(lval)</code>.</li>\n  <li>Let <code>rprim</code> be <code>ToPrimitive(rval)</code>.</li>\n  <li>If <code>Type(lprim)</code> is <code>String</code> or <code>Type(rprim)</code> is <code>String</code>, then\n  <ol>\n  <li>Return the String that is the result of concatenating <code>ToString(lprim)</code> followed by <code>ToString(rprim)</code></li>\n  </ol></li>\n  <li>Return the result of applying the addition operation to <code>ToNumber(lprim)</code> and <code>ToNumber(rprim)</code>. See the Note below 11.6.3.</li>\n  </ol>\n</blockquote>\n\n<p>You can see that each operand is converted <code>ToPrimitive</code>. By reading further we can find that <code>ToPrimitive</code> will always convert arrays to strings, producing this result.</p>\n",
                    "is_accepted": false,
                    "score": 209
                },
                {
                    "body": "<p>The <code>+</code> concats strings, so it converts the arrays to strings.</p>\n\n<pre><code>[1,2] + [3,4]\n'1,2' + '3,4'\n1,23,4\n</code></pre>\n\n<p>To combine arrays, use <code>concat</code>.</p>\n\n<pre><code>[1,2].concat([3,4])\n[1,2,3,4]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p>In JavaScript, the binary addition operator (<code>+</code>) performs both numerical addition and string concatenation.  However, when it's first argument is neither a number nor a string then it converts it into a string (hence \"<code>1,2</code>\") then it does the same with the second \"<code>3,4</code>\" and concatenates them to \"<code>1,23,4</code>\".</p>\n\n<p>Try using the \"concat\" method of Arrays instead:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var a = [1, 2];\nvar b = [3, 4];\na.concat(b) ; // =&gt; [1, 2, 3, 4];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p><code>[1,2]+[3,4]</code> in JavaScript is same as evaluating:</p>\n\n<pre><code>new Array( [1,2] ).toString() + new Array( [3,4] ).toString();\n</code></pre>\n\n<p>and so to solve your problem, best thing would be to add two arrays in-place or without creating a new array:</p>\n\n<pre><code>var a=[1,2];\nvar b=[3,4];\na.push.apply(a, b);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>It is because, + operator assumes that the operands are string, if they are not numbers. So, it first converts them to string and concats to give the final result , if its not a number. Also, it does not support arrays.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>would be nice if you could overload operators in JavaScript but you can't:\n<a href=\"http://stackoverflow.com/questions/4700085/can-i-define-custom-operator-overloads-in-javascript\">Can I define custom operator overloads in Javascript?</a>\nyou can only hack the \"==\" operator which converts to strings before comparing:\n<a href=\"http://blogger.xs4all.nl/peterned/archive/2009/04/01/462517.aspx\">http://blogger.xs4all.nl/peterned/archive/2009/04/01/462517.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Another result using just a simple \"+\" sign will be:</p>\n\n<pre><code>[1,2]+','+[3,4] === [1,2,3,4]\n</code></pre>\n\n<p>So something like this should work (but!):</p>\n\n<pre><code>var a=[1,2];\nvar b=[3,4];\na=a+','+b; // [1,2,3,4]\n</code></pre>\n\n<p>... but it will convert the variable a from an Array to String! Keep it in mind.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I wanted to add the elements of an array into another, so I tried this simple sentence in our beloved Firebug:</p>\n\n<pre><code>[1,2] + [3,4]\n</code></pre>\n\n<p>It responded with:</p>\n\n<pre><code>\"1,23,4\"\n</code></pre>\n\n<p>What is going on?</p>\n",
            "last_activity_date": 1378976868,
            "question_id": 7124884,
            "score": 329,
            "tags": [
                "javascript",
                "arrays",
                "string",
                "concatenation"
            ],
            "title": "Why does [1,2] + [3,4] = &quot;1,23,4&quot; in JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This is misunderstanding of the definition of web server -- it should only be used to \"talk\" with clients. Heavy load tasks should be delegated to standalone programs (that of course can be also written in JS).<br>\nYou'd probably say that it is dirty, but I assure you that a web server process stuck in resizing images is just worse (even for lets say Apache, when it does not block other queries). Still, you may use a common library to avoid code redundancy.    </p>\n\n<p>EDIT: I have come up with an analogy; web application should be as a restaurant. You have waiters (web server) and cooks (workers). Waiters are in contact with clients and do simple tasks like providing menu or explaining if some dish is vegetarian. On the other hand they delegate harder tasks to the kitchen. Because waiters are doing only simple things they respond quick, and cooks can concentrate on their job.</p>\n\n<p>Node.js here would be a single but very talented waiter that can process many requests at a time, and Apache would be a gang of dumb waiters that just process one request each. If this one Node.js waiter would begin to cook, it would be an immediate catastrophe. Still, cooking could also exhaust even a large supply of Apache waiters, not mentioning the chaos in the kitchen and the progressive decrease of responsitivity.</p>\n",
                    "is_accepted": false,
                    "score": 164
                },
                {
                    "body": "<p>What you need is a task queue! Moving your long running tasks out of the web-server is a GOOD thing. Keeping each task in \"separate\" js file promotes modularity and code reuse. It forces you to think about how to structure your program in a way that will make it easier to debug and maintain in the long run. Another benefit of a task queue is the workers can be written in a different language. Just pop a task, do the work, and write the response back.</p>\n\n<p>something like this <a href=\"https://github.com/resque/resque\">https://github.com/resque/resque</a></p>\n\n<p>Here is an article from github about why they built it <a href=\"http://github.com/blog/542-introducing-resque\">http://github.com/blog/542-introducing-resque</a></p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>Couple of approaches you can use.</p>\n\n<p>As @Tim notes, you can create an asynchronous task that sits outside or parallel to your main serving logic. Depends on your exact requirements, but even <a href=\"https://en.wikipedia.org/wiki/Cron\" rel=\"nofollow\">cron</a> can act as a queueing mechanism. </p>\n\n<p>WebWorkers can work for your async processes but they are currently not supported by node.js. There are a couple of extensions that provide support, for example: <a href=\"http://github.com/cramforce/node-worker\" rel=\"nofollow\">http://github.com/cramforce/node-worker</a></p>\n\n<p>You still get you can still reuse modules and code through the standard \"requires\" mechanism. You just need to ensure that the initial dispatch to the worker passes all the information needed to process the results. </p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I've started tinkering with Node.js HTTP server and really like to write server side Javascript but something is keeping me from starting to use Node.js for my web application.</p>\n\n<p>I understand the whole async I/O concept but I'm somewhat concerned about the edge cases where procedural code is very CPU intensive such as image manipulation or sorting large data sets.</p>\n\n<p>As I understand it, the server will be very fast for simple web page requests such as viewing a listing of users or viewing a blog post. However, if I want to write very CPU intensive code (in the admin back end for example) that generates graphics or resizes thousands of images, the request will be very slow (a few seconds). Since this code is not async, every requests coming to the server during those few seconds will be blocked until my slow request is done. </p>\n\n<p>One suggestion was to use Web Workers for CPU intensive tasks. However, I'm afraid web workers will make it hard to write clean code since it works by including a separate JS file. What if the CPU intensive code is located in an object's method? It kind of sucks to write a JS file for every method that is CPU intensive.</p>\n\n<p>Another suggestion was to spawn a child process, but that makes the code even less maintainable.</p>\n\n<p>Any suggestions to overcome this (perceived) obstacle? How do you write clean object oriented code with Node.js while making sure CPU heavy tasks are executed async? </p>\n",
            "last_activity_date": 1419854900,
            "question_id": 3491811,
            "score": 113,
            "tags": [
                "javascript",
                "node.js",
                "serverside-javascript",
                "web-worker"
            ],
            "title": "Node.js and CPU intensive requests"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>They probably use it to measure how quickly users move from one UI item to another, how often clicks miss etc.</p>\n\n<p>I normally have a deeply cynical view of invasive features but I don't think this is a privacy risk. It's shocking because it's so unusually fine-grained, but it's not very <em>revealing</em>. Does your mouse movement encode bank details? Porn?</p>\n\n<p>Google and the like have plenty of high-quality data to track you with. Mouse coordinates have very limited application.</p>\n\n<p>To go off-topic a bit:</p>\n\n<p>To an extent, the more data you collect about people the more problems you have. I hear (from Schneier and the like) that intelligence agencies are suffering from the huge numbers of false positives triggered by their ever-accelerating data aquisition -- the signal-to-noise ratio is abysmal. I find this somewhat amusing.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you can get your script loaded first, you could hook addEventListener and log everyone who is setting addEventListener and see who's doing it and then, by looking at the relevant code, see what they're doing.</p>\n\n<p>Put this in place before the Google code loads:</p>\n\n<pre><code>var oldListener = document.addEventListener;\ndocument.addEventListener = function(type, listener, capture) {\n    if (type == \"mousedown\" || type == \"mouseup\" || type == \"mousemove\") {\n        console.log(\"type=\" + type + \" listener=\" + listener.toString().slice(0, 80));\n    }\n    return (oldListener.apply(this, arguments));\n}\n</code></pre>\n\n<p>To see what was listening to window.onmousemove, you'd have to do it afterwards because it's just a variable assignment, not a function that you can intercept.  So sometimes after the initialization code of the page runs, you would do this to log what was hooked up to it:</p>\n\n<pre><code>if (window.onmousemove) {\n    console.log(window.onmousemove.toString().slice(0,80));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>It's impossible to tell for certain, what Google does with this mouse movement data. As you can see yourself, it's not returning loads and loads of information back to the server, therefore, nothing to worry about.</p>\n\n<p>The first is probably a generic event handler. Reason why I think that is if you read the source, you can see that on the line before there is throw Error(\"Invalid listener argument\"); and next or one after the next there's throw Error(\"Invalid event type\"). Since the fired line is in between these two (event related) exceptions, I'm pretty sure that it's some kind of an event handler. Using debugger, it doesn't do anything really (doesn't jump to some other function) so it seems that it's there for future implementation.</p>\n\n<p>The second function is identical to the first one. Since it's gTalk's I suppose it updates your status (away, online etc). </p>\n\n<p>The third seems to be content updater or something similar, since you can see strings like cacheTimeout etc scattered around it.</p>\n\n<p>My 2 cents.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It appears to be seeding a random number generator with your mouse movements.</p>\n\n<p>The mouse move handler itself does something along the lines of the following:</p>\n\n<pre><code>var b = ((event.X &lt;&lt; 16) + event.Y) * (new Date().getTime() % 1000000);\nc = c * b % d;\nif (previousMouseMoveHandler) previousMouseMoveHandler.call(arguments);\n</code></pre>\n\n<p><code>d</code> is <code>(screen.width * screen.width + screen.height) * 1000000</code>, and <code>c</code> is a variable that starts out as 1.</p>\n\n<p>All of this is wrapped in the scope of an anonymous function, which itself is immediately evaluated to return a function that is assigned to a property named \"random\". That returned function looks something like this:</p>\n\n<pre><code>var b = c;\nb += parseInt(hash.substr(0,20), 16);\nhash = MD5(hash);\nreturn b / (d + Math.pow(16, 20));\n</code></pre>\n\n<p><code>hash</code>, BTW, is a variable that starts out as the MD5 hash of the page's cookies, location, the <code>new Date().getTime()</code>, and <code>Math.random()</code>.</p>\n\n<p>(Note, of course, that Google may change the script returned at any time and hence invalidate this analysis)</p>\n",
                    "is_accepted": true,
                    "score": 117
                },
                {
                    "body": "<p>I bet you its \"In-Page Analytics\" Beta. Making a cursor and click heat-map.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>In the <a href=\"http://codetidy.com/920/#\" rel=\"nofollow\">uncluttered code</a> as of Jul 22, you'll notice the onmousemove is part of the Gb.random class:</p>\n\n<pre><code>Gb.random = function () {\n    function a(a) {\n        var b = Jb();\n        b.update(a);\n        return b.ib()\n    }\n    var b = la.random(),\n        c = 1,\n        d = (screen[za] * screen[za] + screen[J]) * 1E6,\n        e = i.onmousemove || Db();\n    i.onmousemove = function (a) {\n        if (i.event) a = i.event;\n        var b = a.screenX + a.clientX &lt;&lt; 16;\n        b += a.screenY + a.clientY;\n        b *= (new Date)[Ta]() % 1E6;\n        c = c * b % d;\n        return e[G](i, ka[x][Aa][G](arguments))\n    };\n    var f = a(k.cookie + \"|\" + k[B] + \"|\" + (new Date)[Ta]() + \"|\" + b);\n    return function () {\n        var b = c;\n        b += ia(f[cb](0, 20), 16);\n        f = a(f);\n        return b / (d + la.pow(16, 20))\n    }\n}();\n</code></pre>\n\n<p>It's multiplying sum of x and y by 2^16 using bitshift, then adding some other dimensions and multiplying all this by time in milliseconds mod 1000000. This definitely looks like a randomizing algorithm.</p>\n\n<p>I'm not sure why the page would need something like this, perhaps it's using a cookie, preventing automated +1 clicking? When you click the \"+1\" the login screen that pops up appears to have a random number appended as the hash, the url ends with \"&amp;hl=en-US#RANDOMNUMBER\"</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I think that the paper by Guo and Agichtein from CHI 2010 <a href=\"http://www.mathcs.emory.edu/~qguo3/wip287-guo11.pdf\" rel=\"nofollow\">http://www.mathcs.emory.edu/~qguo3/wip287-guo11.pdf</a> can provide further ideas on why Google is doing that. </p>\n\n<p>Apparently mouse movements is a rough proxy for eye movement and allows people to approximate eye tracking results. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The actual code that is being executed is derived from the Shindig code found here:</p>\n\n<p><a href=\"http://svn.apache.org/repos/asf/shindig/trunk/features/src/main/javascript/features/shindig.random/random.js\">http://svn.apache.org/repos/asf/shindig/trunk/features/src/main/javascript/features/shindig.random/random.js</a></p>\n\n<p>A secure random number is needed to ensure that the secure postMessage channel created here cannot be compromised by scripts on the page to execute arbitrary actions.</p>\n\n<p>Here's an article that explains why using Math.random() is bad:</p>\n\n<p><a href=\"http://baagoe.com/en/RandomMusings/javascript/\">http://baagoe.com/en/RandomMusings/javascript/</a></p>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>I wonder about this because I've noticed hinky behavior when I've had to use arrow keys to move inside the text field.  There would be a multi-second freeze-up.  That made me ask this:</p>\n\n<p><a href=\"https://plus.google.com/110951214658958923630/posts/R8o4GpDc6K9\" rel=\"nofollow\">https://plus.google.com/110951214658958923630/posts/R8o4GpDc6K9</a></p>\n\n<p>As you can see, no reply.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>this is really beyond from far fetched, but here it goes anyway ...</p>\n\n<p>it revolves around the type of trajectory &amp; curvature of a mousemovement from a start point towards different attractors take i.e. 2 items/links on a page. </p>\n\n<p><a href=\"http://sciencestage.com/v/26698/dynamics-and-embodiment-in-language-comprehension.html\" rel=\"nofollow\">http://sciencestage.com/v/26698/dynamics-and-embodiment-in-language-comprehension.html</a></p>\n\n<p>in short, if you put two <em>competing</em> links/buttons and analyze the trajectory  towards one of those links, you can deduce a <strong>pattern</strong> or <strong>how</strong> you reached the <strong>decision</strong> to click only 1 of those links (see vid around 13:00)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>This is only on pages with a Google +1 box on my website:</p>\n\n<p><img src=\"http://i.stack.imgur.com/wA91m.gif\" alt=\"enter image description here\"></p>\n\n<p>It seems to be firing off an event on every mouse move.  Anyone know what it is doing?  I searched on Google (perhaps I should try Bing for once on this one!) but no one seems to have written about it.  Is it recording information about my visitors browsing habits?  Is it some sort of CAPTCHA to detect human like behviour?</p>\n\n<p>Example URL, press F12 in chrome, go to timeline and press record, then move your mouse around this page (it plus ones this question, don't worry):</p>\n\n<p><a href=\"https://plusone.google.com/u/0/_/+1/button?hl=en-US&amp;jsh=r%3Bgc%2F22224365-adc8a19e#url=http://stackoverflow.com/questions/6667544/google-1-recording-mouse-move&amp;size=tall&amp;count=true&amp;id=I1_1310488711647&amp;parent=https://plusone.google.com/u/0/_/+1/button?hl=en-US&amp;jsh=r%3Bgc%2F22224365-adc8a19e#url=http://stackoverflow.com/questions/6667544/google-1-recording-mouse-move&amp;size=tall&amp;count=true&amp;id=I1_1310488711647\">https://plusone.google.com/u/0/_/+1/button?hl=en-US&amp;jsh=r%3Bgc%2F22224365-adc8a19e#url=http://stackoverflow.com/questions/6667544/google-1-recording-mouse-move&amp;size=tall&amp;count=true&amp;id=I1_1310488711647&amp;parent=https://plusone.google.com/u/0/_/+1/button?hl=en-US&amp;jsh=r%3Bgc%2F22224365-adc8a19e#url=http://stackoverflow.com/questions/6667544/google-1-recording-mouse-move&amp;size=tall&amp;count=true&amp;id=I1_1310488711647</a></p>\n\n<p>For what it's worth (I can see this is going to be a popular question), I don't think there is anything sinister behind it, it might even be a useless artifact/bug, but if it is doing some sort of tracking, well, it seems a little deceptive to me.</p>\n\n<p><strong>Google +1 privacy policy</strong></p>\n\n<p><a href=\"http://www.google.com/intl/en/privacy/plusone/\">http://www.google.com/intl/en/privacy/plusone/</a></p>\n\n<blockquote>\n  <p>Google +1 Button Privacy Policy</p>\n  \n  <p>June 28, 2011</p>\n  \n  <p>The Google Privacy Policy describes how we treat personal information\n  when you use Google\u2019s products and services, including information\n  provided when you use the Google +1 button. In addition, the following\n  describes our additional privacy practices specific to your use of the\n  +1 button.</p>\n  \n  <p>Information we collect and how it is shared</p>\n  \n  <p>The Google +1 button is a way for you to share information publicly\n  with the world. The Google +1 button helps you and others receive\n  personalized content from Google and our partners. The fact that you\n  +1\u2019d something will be recorded by Google, along with information about the page you were viewing when you clicked on the +1 button.\n  Your +1\u2019s may appear to others as an annotation with your profile name\n  and photo in Google services (such as in search results or on your\n  Google Profile) or elsewhere on websites and ads on the Internet.</p>\n  \n  <p>We will record information about your +1 activity in order to provide\n  you and other users with a better experience on Google services.</p>\n  \n  <p>In order to use the Google +1 button, you need to have a public Google\n  Profile visible to the world, which at a minimum includes the name you\n  chose for the profile. That name will be used across Google services\n  and in some cases it may replace another name you\u2019ve used when sharing\n  content under your Google Account. We may display your Google Profile\n  identity to people who have your email address or other identifying\n  information.</p>\n  \n  <p>Use of the collected information</p>\n  \n  <p>In addition to the above-described uses, the information you provide\n  to us is used subject to our main Google Privacy Policy.</p>\n  \n  <p>We may share aggregate statistics related to users\u2019 +1 activity with\n  the public, our users, and partners, such as publishers, advertisers,\n  or connected sites. For example, we may tell a publisher that \u201c10% of\n  the people who +1\u2019d this page are in Tacoma, Washington.\u201d</p>\n  \n  <p>Your choices</p>\n  \n  <p>You may view the list of items you have +1\u2019d on the +1 tab on your\n  Profile. You can remove individual items from that list.</p>\n  \n  <p>You may opt out of seeing +1 recommendations on third-party websites\n  (including on ads on third-party sites) from people you know.</p>\n  \n  <p>We will store data (such as your recent +1\u2019s) locally in your browser.\n  You may be able to access and clear this information in your browser\n  settings.</p>\n  \n  <p>More information</p>\n  \n  <p>Google adheres to the U.S. Safe Harbor privacy principles. For more\n  information about the Safe Harbor framework or our registration, see\n  the Department of Commerce\u2019s website.</p>\n</blockquote>\n",
            "last_activity_date": 1336833066,
            "question_id": 6667544,
            "score": 187,
            "tags": [
                "javascript",
                "privacy",
                "mousemove",
                "google-plus-one",
                "data-protection"
            ],
            "title": "Why does Google +1 record my mouse movements?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"https://github.com/n1k0/landslide\">Landslide</a> is a pretty neat application that generates slideshows:</p>\n\n<ul>\n<li>using the <a href=\"http://slides.html5rocks.com/#landing-slide\">html5 presentation template</a></li>\n<li>ReStructured Text, Markdown syntax </li>\n</ul>\n\n<p><a href=\"http://imakewebthings.github.com/deck.js/\">Deck.js</a> is another nice project; this time, slides are pure HTML/CSS/JS.</p>\n\n<p>Even better, <a href=\"http://bartaz.github.com/impress.js/\">impress.js</a> relies on CSS3 transforms and transitions.</p>\n",
                    "is_accepted": true,
                    "score": 61
                },
                {
                    "body": "<p>If you want to get websocket support and the ability to control Deck.js presentations via a Sencha 2.0 HTML5 mobile application you can try <a href=\"http://jessecravens.github.com/robodeck/\" rel=\"nofollow\">Robodeck</a>. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This library is for making presentations, stories and ads.</p>\n\n<p><a href=\"http://board.porizm.com\" rel=\"nofollow\">BoardJS</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As an aside to the answers, you may also be interested in a nodejs controller to keep multiple remote viewers in sync with each other.</p>\n\n<p><a href=\"http://controldeck.aws.af.cm/\" rel=\"nofollow\">controldesk.js</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As a presentation tool i use <a href=\"http://lab.hakim.se/reveal-js/#/\">Reveal.js</a>, it's a very clean and modern presentation tool.</p>\n\n<p>It's made 100% with HTML5/CSS3/JS, the features i like the most are : </p>\n\n<ul>\n<li>3D like CSS3 transitions between slides</li>\n<li>You can create nested slides - vertical slides into horizontal ones</li>\n<li>Support font-face</li>\n<li>you make internal links between slides</li>\n<li>The code is pretty, thanks to highlight.js</li>\n<li>Overview &amp; two screens mode with <code>Esc</code> and `s``</li>\n</ul>\n\n<p>I know you don't really want it but you can export to PDF, and fork it on <a href=\"https://github.com/hakimel/reveal.js\">github</a> :)</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Do you know a framework for making presentations using only HTML5 and javascript technologies?<br>\nI'm not talking about \"export\" features of various presentation software (powerpoint or OOo presentation).</p>\n\n<p>Some requirements for the presentations made with this \"framework\":</p>\n\n<ul>\n<li>take advantage of the latest HTML5 features (audio, video, canvas?)</li>\n<li>same with CSS3 (font support, gradient, shadows, transitions and transformations) </li>\n</ul>\n\n<p>If there's no such thing, <strike>example of good presentations or</strike> pointers on the subject would be appreciated.</p>\n\n<p>Edit: Found a nice example, <a href=\"http://slides.html5rocks.com/#landing-slide\">HTML5 - web development to the next level</a>.</p>\n",
            "last_activity_date": 1369320920,
            "question_id": 2533908,
            "score": 97,
            "tags": [
                "javascript",
                "html5",
                "presentation"
            ],
            "title": "Basic framework for presentations using HTML5 + javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>This means that you should filter the properties of evtListeners with the <a href=\"https://developer.mozilla.org/En/Core%5FJavaScript%5F1.5%5FReference%3AGlobal%5FObjects%3AObject%3AhasOwnProperty\" rel=\"nofollow\">hasOwnProperty method</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "\n\n<p>First of all, <strong>never</strong> use a <code>for in</code> loop to enumerate over an array. Never. Use good old <code>for(var i = 0; i&lt;arr.length; i++)</code>.</p>\n\n<p>The reason behind this is the following: each object in JavaScript has a special field called <code>prototype</code>. Everything you add to that field is going to be accessible on every object of that type. Suppose you want all arrays to have a cool new function called <code>filter_0</code> that will filter zeroes out.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>Array.prototype.filter_0 = function() {\n    var res = [];\n    for (var i = 0; i &lt; this.length; i++) {\n        if (this[i] != 0) {\n            res.push(this[i]);\n        }\n    }\n    return res;\n};\n\nconsole.log([0, 5, 0, 3, 0, 1, 0].filter_0());\n//prints [5,3,1]\n</code></pre>\n\n<p>This is a standard way to extend objects and add new methods. Lots of libraries do this.\nHowever, let's look at how <code>for in</code> works now:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var listeners = [\"a\", \"b\", \"c\"];\nfor (o in listeners) {\n    console.log(o);\n}\n//prints:\n//  0\n//  1\n//  2\n//  filter_0\n</code></pre>\n\n<p>Do you see? It suddenly thinks filter_0 is another array index. Of course, it is not really a numeric index,  but <code>for in</code> enumerates through object fields, not just numeric indexes. So we're now enumerating through every numeric index <em>and</em> <code>filter_0</code>. But <code>filter_0</code> is not a field of any particular array object, every array object has this property now.</p>\n\n<p>Luckily, all objects have a <code>hasOwnProperty</code> method, which checks if this field really belongs to the object itself or if it is simply inherited from the prototype chain and thus belongs to all the objects of that type.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>for (o in listeners) {\n    if (listeners.hasOwnProperty(o)) {\n       console.log(o);\n    }\n}\n //prints:\n //  0\n //  1\n //  2\n</code></pre>\n\n<p>Note, that although this code works as expected for arrays, you should never, <strong>never</strong>, use <code>for in</code> and <code>for each in</code> for arrays. Remember that <code>for in</code> enumerates the fields of an object, not array indexes or values.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var listeners = [\"a\", \"b\", \"c\"];\nlisteners.happy = \"Happy debugging\";\n\nfor (o in listeners) {\n    if (listeners.hasOwnProperty(o)) {\n       console.log(o);\n    }\n}\n\n //prints:\n //  0\n //  1\n //  2\n //  happy\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 231
                },
                {
                    "body": "<p>Douglas Crockford, the author of jslint has written (and spoken) about this issue many times. There's a section on <a href=\"http://javascript.crockford.com/code.html\">this</a> page of his website which covers this: </p>\n\n<blockquote>\n  <p><strong>for Statement</strong></p>\n  \n  <p>A for class of statements should have\n  the following form:</p>\n\n<pre><code>for (initialization; condition; update) {\n    statements\n}\n\nfor (variable in object) {\n    if (filter) {\n        statements\n    } \n}\n</code></pre>\n  \n  <p>The first form should be used with\n  arrays and with loops of a\n  predeterminable number of iterations.</p>\n  \n  <p>The second form should be used with\n  objects. Be aware that members that\n  are added to the prototype of the\n  object will be included in the\n  enumeration. It is wise to program\n  defensively by using the\n  hasOwnProperty method to distinguish\n  the true members of the object:</p>\n\n<pre><code>for (variable in object) {\n    if (object.hasOwnProperty(variable)) {\n        statements\n    } \n}\n</code></pre>\n</blockquote>\n\n<p>Crockford also has a video series on YUI theater where he talks about this. Crockford's series of videos/talks about javascript are a must see if you're even slightly serious about javascript.</p>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>Vava's answer is on the mark. If you use jQuery, then the <code>$.each()</code> function takes care of this, hence it is safer to use.</p>\n\n<pre><code>$.each(evtListeners, function(index, elem) {\n    // your code\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Surely it's a little extreme to say</p>\n\n<blockquote>\n  <p>...never use a for in loop to\n  enumerate over an array. Never. Use\n  good old for(var i = 0;\n  i&lt;arr.length; i++)</p>\n</blockquote>\n\n<p>?</p>\n\n<p>It is worth highlighting the section in the Douglas Crockford extract </p>\n\n<blockquote>\n  <p>...The second form should be used with\n  objects...</p>\n</blockquote>\n\n<p>If you require an associative array ( aka hashtable / dictionary ) where keys are named instead of numerically indexed, you will have to implement this as an object, e.g. <code>var myAssocArray = {key1: \"value1\", key2: \"value2\"...};</code>.</p>\n\n<p>In this case <code>myAssocArray.length</code> will come up null (because this object doesn't have a 'length' property), and your <code>i &lt; myAssocArray.length</code> won't get you very far.  In addition to providing greater convenience, I would expect associative arrays to offer performance advantages in many situations, as the array keys can be useful properties (i.e. an array member's ID property or name), meaning you don't have to iterate through a lengthy array repeatedly evaluating if statements to find the array entry you're after.</p>\n\n<p>Anyway, thanks also for the explanation of the JSLint error messages, I will use the 'isOwnProperty' check now when interating through my myriad associative arrays!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>@all - everything in JavaScript is an object (), so statements like \"only use this on objects\" are a bit misleading.  In addition JavaScript is not strongly typed so that 1 == \"1\" is true (although 1 === \"1\" is not, Crockford is big on this).  When it comes to the progromatic concept of arrays in JS, typing is important in the definition.</p>\n\n<p>@Brenton - No need to be a terminology dictator; \"associative array\", \"dictionary\", \"hash\", \"object\", these programming concepts all apply to one structure in JS.  It is name (key, index) value pairs, where the value can be any other object (strings are objects too)</p>\n\n<p>So,\n<code>new Array()</code> is the same as <code>[]</code></p>\n\n<p><code>new Object()</code> is roughly similar to <code>{}</code></p>\n\n<pre><code>var myarray = [];\n</code></pre>\n\n<p>Creates a structure that is an array with the restriction that all indexes (aka keys) must be a whole number.  It also allows for auto assigning of new indexes via .push()</p>\n\n<pre><code>var myarray = [\"one\",\"two\",\"three\"];\n</code></pre>\n\n<p>Is indeed best dealt with via <code>for(initialization;condition;update){</code></p>\n\n<p>But what about:</p>\n\n<pre><code>var myarray = [];\nmyarray[100] = \"foo\";\nmyarray.push(\"bar\");\n</code></pre>\n\n<p>Try this:</p>\n\n<pre><code>var myarray = [], i;\nmyarray[100] = \"foo\";\nmyarray.push(\"bar\");\nmyarray[150] = \"baz\";\nmyarray.push(\"qux\");\nalert(myarray.length);\nfor(i in myarray){\n    if(myarray.hasOwnProperty(i)){  \n        alert(i+\" : \"+myarray[i]);\n    }\n}\n</code></pre>\n\n<p>Perhaps not the best usage of an array, but just an illustration that things are not always clearcut.</p>\n\n<p>If you know your keys, and definitely if they are not whole numbers, your only array like structure option is the object.</p>\n\n<pre><code>var i, myarray= {\n   \"first\":\"john\",\n   \"last\":\"doe\",\n   100:\"foo\",\n   150:\"baz\"\n};\nfor(i in myarray){\n    if(myarray.hasOwnProperty(i)){  \n        alert(i+\" : \"+myarray[i]);\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Just to add on to the topic of for in/for/$.each, I added a jsperf test case for using $.each vs for in: <a href=\"http://jsperf.com/each-vs-for-in/2\" rel=\"nofollow\">http://jsperf.com/each-vs-for-in/2</a></p>\n\n<p>Different browsers/versions handle it differently, but it seems $.each and straight out for in are the cheapest options performance-wise.</p>\n\n<p>If you're using for in to iterate through an associative array/object, knowing what you're after and ignoring everything else, use $.each if you use jQuery, or just for in (and then a break; once you've reached what you know should be the last element)</p>\n\n<p>If you're iterating through an array to perform something with each key pair in it, should use the hasOwnProperty method if you DON'T use jQuery, and use $.each if you DO use jQuery.</p>\n\n<p>Always use <code>for(i=0;i&lt;o.length;i++)</code> if you don't need an associative array though... lol chrome performed that 97% faster than a for in or <code>$.each</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I used <a href=\"http://www.jslint.com/\">JSLint</a> on a JavaScript file of mine. It threw the error:</p>\n\n<pre><code>for( ind in evtListeners ) {\n</code></pre>\n\n<blockquote>\n  <p>Problem at line 41 character 9: The body of a for in should be\n  wrapped in an if statement to filter unwanted \n  properties from the prototype.</p>\n</blockquote>\n\n<p>What does this mean?</p>\n",
            "last_activity_date": 1400613933,
            "question_id": 1963102,
            "score": 119,
            "tags": [
                "javascript",
                "jslint"
            ],
            "title": "What does the JSLint error &#39;body of a for in should be wrapped in an if statement&#39; mean?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>My approach:</p>\n\n<ul>\n<li>don't treat the language as a class-based OO language</li>\n<li>explore the functional traits (you can offload a lot of primitive ops into prepackaged functions)</li>\n<li>don't conflate the language with the browser environment</li>\n<li>write unit tests</li>\n</ul>\n\n<blockquote>\n  <p>For example, syntax errors can get caught as late as the point when the code is actually executed, rather than before it is run as would be the case in a more static language.</p>\n</blockquote>\n\n<p>That's expected from a language without separate compilation.  Nothing prevents you from using a lint-like program.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Nobody writes high quality software straight way in any language, even the experienced programmers in some other language.So I can't answer that part.</p>\n\n<p>But i can recommend you to use JQuery,mootools and Yahoo UI and various frameworks of javascript.Play with them and <code>look at the source</code> of these javascript libraries.Read this book, <code>JavaScript: The Definitive Guide</code> by David Flanagan and read <a href=\"http://www.crockford.com/javascript/\" rel=\"nofollow\">crockford</a> blog</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Normally I don't do this, but since the question has a fairly broad scope, I'm going to recommend a couple of books:</p>\n\n<p><a href=\"http://oreilly.com/catalog/9780596101992\" rel=\"nofollow\">Javascript, the Definitive Guide, 5th Edition</a><br>\n<a href=\"http://oreilly.com/catalog/9780596517748\" rel=\"nofollow\">Javascript, the Good Parts</a></p>\n\n<p>I would imagine that, after reading these two books, you would have a very good grasp on what best practices are.</p>\n\n<p>I'm not sure what to tell you about the newbies and sloppy programmers.  You can only control you.  You might try recommending these two books to them.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<ul>\n<li>Learn <a href=\"http://www.yuiblog.com/blog/2010/02/24/video-crockonjs-3/\">to think functionally</a> ( <em>because that's where the power is</em> )</li>\n<li>Use the <a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\">The Good Parts</a> ( <em>to sleep well</em> )</li>\n<li>Use <a href=\"http://jslint.com/\">Jslint</a> ( <em>to validate</em> ) </li>\n<li>Avoid browser sniffing, and use <a href=\"http://peter.michaux.ca/articles/feature-detection-state-of-the-art-browser-scripting\">feature detection</a> instead ( <em>because browsers lie</em> )</li>\n<li>Keep the <a href=\"http://yuiblog.com/blog/2006/06/01/global-domination/\">global scope clear</a> ( <em>to avoid collisions</em> )</li>\n<li><a href=\"http://peter.michaux.ca/articles/javascript-namespacing\">Namespace</a> your code ( <em>to avoid collisions</em> )</li>\n<li><a href=\"http://perfectionkills.com/whats-wrong-with-extending-the-dom/\">Don't mess with host objects</a> ( <em>because they can't be trusted</em> )</li>\n<li>Consider <a href=\"http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/\">ES5 Strict</a> mode ( <em>because it is the future</em> )</li>\n<li>Follow the <a href=\"http://stackoverflow.com/questions/409056/top-rated-javascript-blogs\">Top-Rated bloggers</a> ( <em>because they know \"stuff\"</em> )</li>\n</ul>\n\n<p>Bonus: avoid gotchas</p>\n\n<blockquote>\n  <p><strong>Gotchas</strong> </p>\n</blockquote>\n\n<ul>\n<li>using for.. in for arrays (use simple loop, because Array properties can interfere)</li>\n<li>relying on global undefined, which can be modified (use typeof instead or define your own)</li>\n<li>not using <em>var</em> for local variables</li>\n<li>using more than one <em>var</em> for the same variable (can be confusing, error prone)</li>\n<li>checking \"if (somevar)\" to see if it's defined, when <em>somevar</em> can be 0, false, or \"\" (empty string)</li>\n<li>polluting global scope (possible collisions)</li>\n<li>misusing closures and causing memory leaks (release event listeners!)</li>\n<li>using browser sniffing (use feature detection instead)</li>\n<li>augmenting host objects (don't do that, they cannot be trusted)</li>\n<li>augmenting native objects too much (anyone can overwrite your functions)</li>\n<li>not using built-in functions (learn the language!)</li>\n<li>forgetting to use <em>new</em> for constuctor functions (convention: capitalize first letter)</li>\n<li>typing/see <em>new</em>, and think: I know this stuff from somewhere (it's not Java)</li>\n<li>unconsciously initializing variables to null (it's not C/C++ either)</li>\n<li>not realizing that functions are objects (yes they can have properties)</li>\n<li>relying too much on floating point arithmetic (check: 0.1 + 0.2 == 0.3)</li>\n<li>not realizing the difference between == v. === ( the last one is type safe, use == if you know it well)</li>\n<li>not realizing that arguments are passed by reference (except primitive types)</li>\n<li>changing the arguments array</li>\n<li>relying on semicolon insertion</li>\n</ul>\n\n<p><strong>Learn the language. Always do things for a reason. If you're not sure about something, go and read the <a href=\"http://es5.github.com/\">specification</a>.</strong></p>\n",
                    "is_accepted": false,
                    "score": 61
                },
                {
                    "body": "<ul>\n<li><p><strong>Syntax Errors:</strong> Code in any single Javascript file or <code>&lt;script&gt;</code> tag will not be executed if it contains syntax errors. Other sources of Javascript will still run, but this is expected behavior of an interpreted language whose source code is loaded over a high latency network. Waiting until every last bit of code is in memory would be wasteful. However most browsers only seem to report the first syntax error found (not sure if this is normal for interperted languages) in any one script source.</p></li>\n<li><p><strong>Soft Type System:</strong> Just be sure to use <code>===</code> and <code>!==</code> for comparisons. As with many other things in JS, it is only a minefield if you let it become one.</p></li>\n<li><p><strong>OOP:</strong> Javascript IS NOT (!==) class based. \"Going out of its way\" would be adding syntax for traditional class constructs that do not fit in with a prototype based object model. It really is important to approach Javascript with a different mindset than many other popular languages. If you are coming from Lisp you will feel right at home. There is much documentation out there on how to achieve things like private/privileged/static variables/methods in JS. Almost all of this involves <strong>Clousers, Functions as first-class objects, and Scope</strong> (maybe the three most important keywords in Javascript). Take some time upfront to really <strong>understand</strong> these aspects of Javascript rather than just copying code. Also experiment, use the console in Firebug to throw together examples of code whose behavior you might find confusing. Once you understand the how and why of advanced Javascript techniques, you will no longer feel like you are \"going out of your way\" to emulate certain class based OOP techniques. More so, you'll realize that those techniques are not always the best solution and find better methods that take advantage of Javascript's flexibility. </p>\n\n<p>This page is a good proper introduction to Javascript and its ways:\n<a href=\"http://www.crockford.com/javascript/javascript.html\" rel=\"nofollow\">http://www.crockford.com/javascript/javascript.html</a></p></li>\n<li><p><strong>Sloppy Mindset:</strong> Javascript will not force or even nudge you into using good practices. Such are the consequences of a language that is at the same time extremely flexible and extremely lenient. Accept this. Then use tools like jslint to keep your code in check especially in the beginning. In the end the best way to avoid this sloppy mindset is again to understand the language. For instance, many PHP coders coming to Javascript ended up treating it's array's just like PHP's associative arrays. In some cases this bad practice worked without issue, and of course no JS interpreter threw any kind of warning about it. But if you understand the differences between object properties and array indexes in Javascript, you will not likely make this mistake as you will know the potential problems that can result because of it. </p>\n\n<p>The paradox of Javascript is that by its very nature it invites you to jump right in and start banging out superficially procedural code, while at the same time demanding a fundamental understanding of functional programing and prototype based objects in order to use it properly and harness its full potential. </p>\n\n<p>Also remember that this understanding is equally essential when using libraries like jQuery.</p></li>\n</ul>\n\n<p>So in summary, how do you write quality Javascript? By fundamentaly understanding how the language works. This is not hard, though it might be intimidating because <strong>it is different</strong>. Read about, and experiment with <strong>Clousers, Scope, and Functions as objects</strong>. Learning Javascript is kind of like learning to drive a stick shift. Once you <strong>get it</strong>, you'll find you might like it and the high level of control it provides, even if it can be a pain in the ass sometimes. </p>\n\n<p>What practices should you use? Once you understand the language, you will already know.</p>\n\n<p>Tools for debugging? Well that is pretty simple, use Firebug. And when testing for compatibility, use the console that is built in to every major browser, even IE. Also use whatever text editor/IDE you are comfortable with. I like to use Vim, but that's just me.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I just want to add my two cents. <strong>Don't fight it</strong>. Javascript is a very nice language, but people (including myself) initially approach it with a \"similar to...\" vision, and try to force concepts and patterns found in other languages into it. </p>\n\n<p>I used to hate JavaScript, but after a while I improved my skills and learned to appreciate the language for what it is, without trying to coerce an unnatural programming style imported from any foreign language. Don't trust Crockford's \"the good parts\" as a mantra. His view is, in my opinion, excessive as he tries to force javascript into unnatural, eventually complex designs borrowed from other languages, in particular when it comes to class inheritance and \"abuse\" of closures to achieve results the language does not provide (such as private vars). </p>\n\n<p>It takes a bit of time, but once you realize how javascript works, it comes out as a language pleasant to learn and use.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have been in the process of learning Javascript to complement ASP.NET. I have a strong background in general programming, and have always been an advocate of disciplined practices and good hygiene to reduce the error count in code.</p>\n\n<p>However, the language that Javascript is seems to make this very difficult. Its dynamic and interpreted nature seem to push error detection to the last point possible in the cycle. For example, syntax errors can get caught as late as the point when the code is actually executed, rather than before it is run as would be the case in a more static language. Similarly the soft type system is a minefield of potential hidden errors. Although you can represent object oriented design patterns in the language, it almost seems like they have made it as hard as possible to do so with little in the way of syntactic support.</p>\n\n<p>This is compounded by the fact that Javascript seems to attract a sloppy mindset, and a lot of newbie programmers who confuse conscision and cleverness with quality (and I am not referring to minimized code, but examples of putatively good programming.) I Feel like I am reading entries in the obfuscated C contest sometimes.</p>\n\n<p>Of course I also recognize that there are a lot of assets to Javascript that makes it powerful and extensible. Some of the fluid functional like techniques in, for example, jquery are very attractive.</p>\n\n<p>I guess my question then is this: how do you write quality javascript? What tools, practices, idioms, debugging and logging libraries and so forth do you incorporate to reduce the bug count in your javascript applications? Are there web sites or discussion groups that focus on bug free javascript rather than cute programming hacks?</p>\n",
            "last_activity_date": 1384464639,
            "question_id": 3142250,
            "score": 45,
            "tags": [
                "javascript",
                "code-quality",
                "software-quality"
            ],
            "title": "How to write high quality Javascript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>How about JSLint right in VIM, <a href=\"http://github.com/hallettj/jslint.vim\" rel=\"nofollow\">http://github.com/hallettj/jslint.vim</a> ?</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I like ZenCoding : <a href=\"http://www.vim.org/scripts/script.php?script_id=2981\" rel=\"nofollow\">http://www.vim.org/scripts/script.php?script_id=2981</a></p>\n\n<p>Also, for folding Php : <a href=\"http://www.vim.org/scripts/script.php?script_id=1623\" rel=\"nofollow\">http://www.vim.org/scripts/script.php?script_id=1623</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>ctags aka <a href=\"http://ctags.sourceforge.net/\" rel=\"nofollow\">Exuberant ctags</a> </p>\n\n<p><a href=\"http://amix.dk/blog/post/19329\" rel=\"nofollow\">A blog post about it.</a></p>\n\n<p>That blog post also mentions the <a href=\"http://vim.sourceforge.net/scripts/script.php?script_id=273\" rel=\"nofollow\">taglist plugin</a>, which I have yet to use.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"http://www.vim.org/scripts/script.php?script_id=1658\" rel=\"nofollow\">NERDTree</a>, <a href=\"http://www.vim.org/scripts/script.php?script_id=159\" rel=\"nofollow\">minibufexpl</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I find <a href=\"http://www.vim.org/scripts/script.php?script_id=2736\" rel=\"nofollow\">Syntastic</a> to be fairly helpful in spotting minor PHP problems. (and/or blend it with some form of setting php -l as :make.) Syntastic also shows you tidy warnings on your html.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Very helpful when dealing with html or xml: <a href=\"http://www.vim.org/scripts/script.php?script_id=1697\" rel=\"nofollow\">surround.vim</a>; it allows to easily add/delete/change any kind of tags.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here are the plugins I'm currently using as well as some vimrc mappings to make things a bit easier.</p>\n\n<p><strong>Plugins</strong></p>\n\n<p><strong><a href=\"https://github.com/tpope/vim-pathogen\" rel=\"nofollow\">Pathogen</a></strong> is an essential vim plugin for every user. It helps keep all the plugins you need organized within their own directories. This makes it much easier to uninstall plugins at a later time, since your plugins don't all live in the same tree. Pathogen will handle adding everything together at runtime.</p>\n\n<p><strong><a href=\"http://www.vim.org/scripts/script.php?script_id=3025\" rel=\"nofollow\">Command-T</a></strong> adds the popular textmate feature that makes it easy to open files.</p>\n\n<p><strong><a href=\"https://github.com/msanders/snipmate.vim\" rel=\"nofollow\">Snipmate</a></strong> gives vim the power of textmate like snippets. </p>\n\n<p><strong><a href=\"https://github.com/kogakure/vim-sparkup\" rel=\"nofollow\">Sparkup</a></strong> adds zencoding to vim to make it faster and easier to write HTML.</p>\n\n<p><strong><a href=\"https://github.com/scrooloose/nerdcommenter\" rel=\"nofollow\">NERDCommenter</a></strong> makes it easy to toggle commented blocks of code.</p>\n\n<p><strong><a href=\"https://github.com/scrooloose/syntastic\" rel=\"nofollow\">Syntastic</a></strong> adds syntax checking to lots of different file types, and if vim has signs support enabled, you get markers to the left of your line numbers telling you where your errors are. </p>\n\n<p><strong>.vimrc config settings</strong></p>\n\n<p>Encode/Decode HTML to HTML Entities (Great for writing documentation)</p>\n\n<pre><code>\"EASILY ESCAPE OR UNESCAPE HTML\nfunction HtmlEscape()\n  silent s/&amp;/\\&amp;amp;/eg\n  silent s/&lt;/\\&amp;lt;/eg\n  silent s/&gt;/\\&amp;gt;/eg\nendfunction\n\nfunction HtmlUnEscape()\n  silent s/&amp;lt;/&lt;/eg\n  silent s/&amp;gt;/&gt;/eg\n  silent s/&amp;amp;/\\&amp;/eg\nendfunction\n\nmap &lt;silent&gt; &lt;c-h&gt; :call HtmlEscape()&lt;CR&gt;\nmap &lt;silent&gt; &lt;c-u&gt; :call HtmlUnEscape()&lt;CR&gt;\n</code></pre>\n\n<p>Toggle Relative Line Numbers (new VIM 7.3 feature)</p>\n\n<pre><code>function! g:ToggleNuMode() \n  if(&amp;rnu == 1) \n    set nu \n  else \n    set rnu \n  endif \nendfunc\nnnoremap &lt;C-L&gt; :call g:ToggleNuMode()&lt;cr&gt;\n</code></pre>\n\n<p>Highlight unwanted whitespace</p>\n\n<pre><code>\"HIGHLIGHT POTENTIALLY UNWANTED WHITESPACE\nhighlight BadWhitespace term=standout ctermbg=red guibg=red\nmatch BadWhitespace /[^* \\t]\\zs\\s\\+$\\| \\+\\ze\\t/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've written answers for <a href=\"http://stackoverflow.com/questions/473478/vim-jslint/5893447#5893447\">this question</a> and <a href=\"http://stackoverflow.com/questions/4777366/recommended-vim-plugins-for-javascript-coding/5893600#5893600\">this question</a> explaining how to get JavaScript <strong>syntax checking / linting</strong> and <strong>source-code browsing / tag-list</strong> for Vim using the community-driven <a href=\"http://jshint.com\" rel=\"nofollow\">jshint.com</a> (which is way better than JSLint IMO) and Mozilla's <em>DoctorJS</em> (formerly <em>jsctags</em>).</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Adapted by someone else from <a href=\"http://www.reddit.com/r/vim/comments/vbvzy/the_vim_holy_grail_why_the_hell_is_the_esc_key_so/c53iq0i\" rel=\"nofollow\">a couple of functions of mine</a> (in turn adapted <a href=\"http://vim.wikia.com/wiki/HTML_entities\" rel=\"nofollow\">from others</a>), <a href=\"https://github.com/pydave/textconv.vim\" rel=\"nofollow\">this plugin</a> allows you to turn \"special\" characters into HTML entities (and back) or URL Escapes (and back).</p>\n\n<p>This is <em>extremely</em> useful when writing stupid HTML Emails.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Right now I'm using <code>surround.vim</code> to enclose text in HTML tags, and a <a href=\"http://lanpartei.de/~niklas/vim/after/syntax/css-color-vim.png\">plugin</a> that highlights text according to the hex value in the CSS file (e.g. #888 will have gray background in the CSS file).</p>\n\n<p>Are there other useful plugins for web development?</p>\n\n<p><strong>Recommendations</strong></p>\n\n<p>Here is a list of the plugins mentioned in the answers so far:</p>\n\n<ul>\n<li><a href=\"http://www.vim.org/scripts/script.php?script_id=1697\">surround.vim</a> to enclose text in HTML tags</li>\n<li><a href=\"http://www.vim.org/scripts/script.php?script_id=2729\">jslint.vim</a> to check for JavaScript errors with JSLint</li>\n<li><a href=\"http://www.vim.org/scripts/script.php?script_id=2981\">ZenCoding.vim</a> for HTML and CSS high-speed coding</li>\n<li><a href=\"http://www.vim.org/scripts/script.php?script_id=1623\">phpfolding.vim</a> to for automatic folding of PHP</li>\n<li><a href=\"http://www.vim.org/scripts/script.php?script_id=2736\">Syntastic</a> for automatic syntax checking of e.g. PHP</li>\n<li><a href=\"http://ctags.sourceforge.net/\">Exuberant ctags</a> for tagging of a wide array of languages.</li>\n<li><a href=\"http://majutsushi.github.com/tagbar/\">Tagbar</a> Helps view/navigate source, displays call signature in status area.</li>\n</ul>\n",
            "last_activity_date": 1348470174,
            "question_id": 3173963,
            "score": 47,
            "tags": [
                "javascript",
                "design",
                "vim",
                "plugins"
            ],
            "title": "Useful Vim plugins for web development and design (php, html, css, javascript)?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I believe it has to do with the order of evaulation. While the sum is naturally the same in a math world, in the binary world instead of A + B + C = D, it's</p>\n\n<pre><code>A + B = E\nE + C = D(1)\n</code></pre>\n\n<p>So there's that secondary step where floating point numbers can get off.</p>\n\n<p>When you change the order,</p>\n\n<pre><code>A + C = F\nF + B = D(2)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<blockquote>\n  <p>Maybe this question is stupid, but why does simply changing the order of the elements affects the result?</p>\n</blockquote>\n\n<p>It will change the points at which the values are rounded, based on their magnitude. As an example of the <em>kind</em> of thing that we're seeing, let's pretend that instead of binary floating point, we were using a decimal floating point type with 4 significant digits, where each addition is performed at \"infinite\" precision and then rounded to the nearest representable number. Here are two sums:</p>\n\n<pre><code>1/3 + 2/3 + 2/3 = (0.3333 + 0.6667) + 0.6667\n                = 1.000 + 0.6667 (no rounding needed!)\n                = 1.667 (where 1.6667 is rounded to 1.667)\n\n2/3 + 2/3 + 1/3 = (0.6667 + 0.6667) + 0.3333\n                = 1.333 + 0.3333 (where 1.3334 is rounded to 1.333)\n                = 1.666 (where 1.6663 is rounded to 1.666)\n</code></pre>\n\n<p>We don't even need non-integers for this to be a problem:</p>\n\n<pre><code>10000 + 1 - 10000 = (10000 + 1) - 10000\n                  = 10000 - 10000 (where 10001 is rounded to 10000)\n                  = 0\n\n10000 - 10000 + 1 = (10000 - 10000) + 1\n                  = 0 + 1\n                  = 1\n</code></pre>\n\n<p>This demonstrates possibly more clearly that the important part is that we have a limited number of <em>significant digits</em> - not a limited number of <em>decimal places</em>. If we could always keep the same number of decimal places, then with addition and subtraction at least, we'd be fine (so long as the values didn't overflow). The problem is that when you get to bigger numbers, smaller information is lost - the 10001 being rounded to 10000 in this case. (This is an example of the problem that <a href=\"http://stackoverflow.com/a/19821327/22656\">Eric Lippert noted in his answer</a>.)</p>\n\n<p>It's important to note that the values on the first line of the right hand side are the same in all cases - so although it's important to understand that your decimal numbers (23.53, 5.88, 17.64) won't be represented exactly as <code>double</code> values, that's only a problem because of the problems shown above.</p>\n",
                    "is_accepted": true,
                    "score": 243
                },
                {
                    "body": "<p>Floating point numbers are represented using the IEEE 754 format, which provides a specific size of bits for the mantissa (significand). Unfortunately this gives you a specific number of 'fractional building blocks' to play with, and certain fractional values cannot be represented precisely. </p>\n\n<p>What is happening in your case is that in the second case, the addition is probably running into some precision issue because of the order the additions are evaluated. I haven't calculated the values, but it could be for example that 23.53 + 17.64 cannot be precisely represented, while 23.53 + 5.88 can. </p>\n\n<p>Unfortunately it is a known problem that you just have to deal with.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>This actually covers much more than just Java and Javascript, and would likely affect any programming language using floats or doubles.</p>\n\n<p>In memory, floating points use a special format along the lines of IEEE 754 (the converter provides much better explanation than I can).</p>\n\n<p>Anyways, here's the float converter.</p>\n\n<p><a href=\"http://www.h-schmidt.net/FloatConverter/\" rel=\"nofollow\">http://www.h-schmidt.net/FloatConverter/</a></p>\n\n<p>The thing about the order of operations is the \"fineness\" of the operation.</p>\n\n<p>Your first line yields 29.41 from the first two values, which gives us 2^4 as the exponent.</p>\n\n<p>Your second line yields 41.17 which gives us 2^5 as the exponent.</p>\n\n<p>We're losing a significant figure by increasing the exponent, which is likely to change the outcome.</p>\n\n<p>Try ticking the last bit on the far right on and off for 41.17 and you can see that something as \"insignificant\" as 1/2^23 of the exponent would be enough to cause this floating point difference.</p>\n\n<p>Edit: For those of you who remember significant figures, this would fall under that category. 10^4 + 4999 with a significant figure of 1 is going to be 10^4. In this case, the significant figure is much smaller, but we can see the results with the .00000000004 attached to it.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Here's what's going on in binary.  As we know, some floating-point values cannot be represented exactly in binary, even if they can be represented exactly in decimal.  These 3 numbers are just examples of that fact.</p>\n\n<p>With this program I output the hexadecimal representations of each number and the results of each addition.</p>\n\n<pre><code>public class Main{\n   public static void main(String args[]) {\n      double x = 23.53;   // Inexact representation\n      double y = 5.88;    // Inexact representation\n      double z = 17.64;   // Inexact representation\n      double s = 47.05;   // What math tells us the sum should be; still inexact\n\n      printValueAndInHex(x);\n      printValueAndInHex(y);\n      printValueAndInHex(z);\n      printValueAndInHex(s);\n\n      System.out.println(\"--------\");\n\n      double t1 = x + y;\n      printValueAndInHex(t1);\n      t1 = t1 + z;\n      printValueAndInHex(t1);\n\n      System.out.println(\"--------\");\n\n      double t2 = x + z;\n      printValueAndInHex(t2);\n      t2 = t2 + y;\n      printValueAndInHex(t2);\n   }\n\n   private static void printValueAndInHex(double d)\n   {\n      System.out.println(Long.toHexString(Double.doubleToLongBits(d)) + \": \" + d);\n   }\n}\n</code></pre>\n\n<p>The <code>printValueAndInHex</code> method is just a hex-printer helper.</p>\n\n<p>The output is as follows:</p>\n\n<pre><code>403787ae147ae148: 23.53\n4017851eb851eb85: 5.88\n4031a3d70a3d70a4: 17.64\n4047866666666666: 47.05\n--------\n403d68f5c28f5c29: 29.41\n4047866666666666: 47.05\n--------\n404495c28f5c28f6: 41.17\n4047866666666667: 47.050000000000004\n</code></pre>\n\n<p>The first 4 numbers are <code>x</code>, <code>y</code>, <code>z</code>, and <code>s</code>'s hexadecimal representations.  In IEEE floating point representation, bits 2-12 represent the binary <em>exponent</em>, that is, the scale of the number.  (The first bit is the sign bit, and the remaining bits for the <em>mantissa</em>.) The exponent represented is actually the binary number minus 1023.</p>\n\n<p>The exponents for the first 4 numbers are extracted:</p>\n\n<pre><code>    sign|exponent\n403 =&gt; 0|100 0000 0011| =&gt; 1027 - 1023 = 4\n401 =&gt; 0|100 0000 0001| =&gt; 1025 - 1023 = 2\n403 =&gt; 0|100 0000 0011| =&gt; 1027 - 1023 = 4\n404 =&gt; 0|100 0000 0100| =&gt; 1028 - 1023 = 5\n</code></pre>\n\n<p><strong>First set of additions</strong></p>\n\n<p>The second number (<code>y</code>) is of smaller magnitude.  When adding these two numbers to get <code>x + y</code>, the last 2 bits of the second number (<code>01</code>) are shifted out of range and do not figure into the calculation.</p>\n\n<p>The second addition adds <code>x + y</code> and <code>z</code> and adds two numbers of the same scale.</p>\n\n<p><strong>Second set of additions</strong></p>\n\n<p>Here, <code>x + z</code> occurs first.  They are of the same scale, but they yield a number that is higher up in scale:</p>\n\n<pre><code>404 =&gt; 0|100 0000 0100| =&gt; 1028 - 1023 = 5\n</code></pre>\n\n<p>The second addition adds <code>x + z</code> and <code>y</code>, and now <em>3</em> bits are dropped from <code>y</code> to add the numbers (<code>101</code>).  Here, there must be a round upwards, because the result is the next floating point number up: <code>4047866666666666</code> for the first set of additions vs. <code>4047866666666667</code> for the second set of additions.  That error is significant enough to show in the printout of the total.</p>\n\n<p>In conclusion, be careful when performing mathematical operations on IEEE numbers.  Some representations are inexact, and they become even more inexact when the scales are different.  Add and subtract numbers of similar scale if you can.</p>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>Jon's answer is of course correct. In your case the error is no larger than the error you would accumulate doing any simple floating point operation. You've got a scenario where in one case you get zero error and in another you get a tiny error; that's not actually that interesting a scenario. A good question is: <strong>are there scenarios where changing the order of calculations goes from a tiny error to a (relatively) enormous error?</strong> The answer is unambiguously yes. </p>\n\n<p>Consider for example:</p>\n\n<pre><code>x1 = (a - b) + (c - d) + (e - f) + (g - h);\n</code></pre>\n\n<p>vs</p>\n\n<pre><code>x2 = (a + c + e + g) - (b + d + f + h);\n</code></pre>\n\n<p>vs</p>\n\n<pre><code>x3 = a - b + c - d + e - f + g - h;\n</code></pre>\n\n<p>Obviously in exact arithmetic they would be the same. It is entertaining to try to find values for a, b, c, d, e, f, g, h such that the values of x1 and x2 and x3 differ by a large quantity. See if you can do so!</p>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>I recommend watching this great video that explains how the floating point arithmetic works in Javascript (and in other languages too).</p>\n\n<p><a href=\"https://www.youtube.com/watch?v=MqHDDtVYJRI\" rel=\"nofollow\">Everything you never wanted to know about JavaScript numbers</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Why does changing the sum order returns a different result?</p>\n\n<p><code>23.53 + 5.88 + 17.64</code> <strong>=</strong> <code>47.05</code></p>\n\n<p><code>23.53 + 17.64 + 5.88</code> <strong>=</strong> <code>47.050000000000004</code></p>\n\n<p>Both <a href=\"http://en.wikipedia.org/wiki/Java_%28programming_language%29\" rel=\"nofollow\">Java</a> and <a href=\"http://en.wikipedia.org/wiki/JavaScript\" rel=\"nofollow\">JavaScript</a> return the same results.</p>\n\n<p>I understand that, due to the way floating point numbers are represented in binary, some rational numbers (<em>like 1/3 - 0.333333...</em>) cannot be represented precisely.</p>\n\n<p>Why does simply changing the order of the elements affects the result?</p>\n",
            "last_activity_date": 1407013301,
            "question_id": 19820297,
            "score": 239,
            "tags": [
                "java",
                "javascript",
                "floating-point"
            ],
            "title": "Why does changing the sum order returns a different result?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Basically you need to look at the number of objects inside your heap snapshot. If the number of objects increases between two snapshots and you've disposed of objects then you have a memory leak. My advice is to look for event handlers in your code which do not get detached.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could also look at the Timeline tab in developer tools. Record the usage of your app and keep an eye on the DOM Node and Event listener count.</p>\n\n<p>If the memory graph would indeed indicate a memory leak, then you can use the profiler to figure out what is leaking.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's a tip on memory profiling of a jsfiddle: Use the following URL to isolate your jsfiddle result, it removes all of the jsfiddle framework and loads only your result.</p>\n\n<p><a href=\"http://jsfiddle.net/4QhR2/show/\" rel=\"nofollow\">http://jsfiddle.net/4QhR2/show/</a></p>\n\n<p>I was never able to figure out how to use the Timeline and Profiler to track down memory leaks, until I read the following documentation. After reading the section entitled 'Object allocation tracker' I was able to use the 'Record Heap Allocations' tool, and track some some Detached DOM nodes. </p>\n\n<p>I fixed the problem by switching from jQuery event binding, to using Backbone event delegation. It's my understanding that newer versions of Backbone will automatically unbind the events for you if you call <code>View.remove()</code>. Execute some of the demos yourself, they are set up with memory leaks for you to identify. Feel free to ask questions here if you still don't get it after studying this documentation.</p>\n\n<p><a href=\"https://developers.google.com/chrome-developer-tools/docs/javascript-memory-profiling\" rel=\"nofollow\">https://developers.google.com/chrome-developer-tools/docs/javascript-memory-profiling</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A good workflow to find memory leaks is the <strong>three snapshot</strong> technique, first used by Loreena Lee and the Gmail team to solve some of their memory problems. The steps are, in general:</p>\n\n<ul>\n<li>Take a heap snapshot.</li>\n<li>Do stuff.</li>\n<li>Take another heap snapshot.</li>\n<li>Repeat the same stuff.</li>\n<li>Take another heap snapshot.</li>\n<li>Filter objects allocated between Snapshots 1 and 2 in Snapshot 3's \"Summary\" view.</li>\n</ul>\n\n<p>For your example, I have adapted the code to show this process (you can find it <a href=\"http://jsfiddle.net/t2epG/\">here</a>) delaying the creation of the Backbone View until the click event of the Start button. Now:</p>\n\n<ul>\n<li>Run the HTML (saved locally of using this <a href=\"http://jsfiddle.net/t2epG/show\">address</a>) and take a snapshot.</li>\n<li>Click Start to create the view.</li>\n<li>Take another snapshot.</li>\n<li>Click remove.</li>\n<li>Take another snapshot.</li>\n<li>Filter objects allocated between Snapshots 1 and 2 in Snapshot 3's \"Summary\" view.</li>\n</ul>\n\n<p>Now you are ready to find memory leaks! </p>\n\n<p>You will notice nodes of a few different colors. Red nodes do not have direct references from Javascript to them, but are alive because they are part of a detached DOM tree. There may be a node in the tree referenced from Javascript (maybe as a closure or variable) but is coincidentally preventing the entire DOM tree from being garbage collected. </p>\n\n<p><img src=\"http://i.stack.imgur.com/os7y7.png\" alt=\"enter image description here\"></p>\n\n<p>Yellow nodes however do have direct references from Javascript. Look for yellow nodes in the same detached DOM tree to locate references from your Javascript. There should be a chain of properties leading from the DOM window to the element.</p>\n\n<p>In your particular you can see a HTML Div element marked as red. If you expand the element you will see that is referenced by a \"cache\" function. </p>\n\n<p><img src=\"http://i.stack.imgur.com/hmsdk.png\" alt=\"enter image description here\"></p>\n\n<p>Select the row and in your console type $0, you will see the actual function and location:</p>\n\n<pre><code>&gt;$0\nfunction cache( key, value ) {\n        // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n        if ( keys.push( key += \" \" ) &gt; Expr.cacheLength ) {\n            // Only keep the most recent entries\n            delete cache[ keys.shift() ];\n        }\n        return (cache[ key ] = value);\n    }                                                     jquery-2.0.2.js:1166\n</code></pre>\n\n<p>This is where your element is being referenced. Unfortunally there is not much you can do, it is a internal mechanism from jQuery. But, just for testing purpose, go the function and change the method to:</p>\n\n<pre><code>function cache( key, value ) {\n    return value;\n}\n</code></pre>\n\n<p>Now if you repeat the process you will not see any red node :)</p>\n\n<p>Documentation:</p>\n\n<ul>\n<li><a href=\"https://docs.google.com/presentation/d/1wUVmf78gG-ra5aOxvTfYdiLkdGaR9OhXRnOlIcEmu2s/pub?start=false&amp;loop=false&amp;delayms=3000#slide=id.g31ec7af_0_58\">Eliminating memory leaks in Gmail</a>.</li>\n<li><a href=\"http://addyosmani.com/blog/taming-the-unicorn-easing-javascript-memory-profiling-in-devtools/\">Easing JavaScript Memory Profiling In Chrome DevTools</a>.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 72
                },
                {
                    "body": "<p>I second the advice to take a heap snapshot, they're excellent for detecting memory leaks, chrome does an excellent job of snapshotting. </p>\n\n<p>In my research project for my degree I was building an interactive web application that had to generate a lot of data built up in 'layers', many of these layers would be 'deleted' in the UI but for some reason the memory wasn't being deallocated, using the snapshot tool I was able to determine that JQuery had been keeping a reference on the object (the source was when I was trying to trigger a <code>.load()</code> event which kept the reference despite going out of scope). Having this information at hand single-handedly saved my project, it's a highly useful tool when you're using other people's libraries and you have this issue of lingering references stopping the GC from doing its job.</p>\n\n<p>EDIT: \nIt's also useful to plan ahead what actions you're going to perform to minimize time spent snapshotting, hypothesize what could be causing the problem and test each scenario out, making snapshots before and after.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You also might want to read : </p>\n\n<p><a href=\"http://addyosmani.com/blog/taming-the-unicorn-easing-javascript-memory-profiling-in-devtools/\" rel=\"nofollow\">http://addyosmani.com/blog/taming-the-unicorn-easing-javascript-memory-profiling-in-devtools/</a></p>\n\n<p>It explains the use of the chrome developer tools and gives some step-by-step advices on how to confirm and locate a memory leak using heap snapshot comparison and the different hep snapshot views available.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is an introduction video from Google, which will be very helpful to find JavaScript memory leaks.</p>\n\n<p><a href=\"https://www.youtube.com/watch?v=L3ugr9BJqIs\" rel=\"nofollow\">https://www.youtube.com/watch?v=L3ugr9BJqIs</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've created a very simple test case that creates a Backbone view, attaches a handler to an event, and instantiates a user-defined class. I believe that by clicking the \"Remove\" button in this sample, everything will be cleaned up and there should be no memory leaks.</p>\n\n<p>A jsfiddle for the code is here: <a href=\"http://jsfiddle.net/4QhR2/\">http://jsfiddle.net/4QhR2/</a></p>\n\n<pre><code>// scope everything to a function\nfunction main() {\n\n    function MyWrapper() {\n        this.element = null;\n    }\n    MyWrapper.prototype.set = function(elem) {\n        this.element = elem;\n    }\n    MyWrapper.prototype.get = function() {\n        return this.element;\n    }\n\n    var MyView = Backbone.View.extend({\n        tagName : \"div\",\n        id : \"view\",\n        events : {\n            \"click #button\" : \"onButton\",\n        },    \n        initialize : function(options) {        \n            // done for demo purposes only, should be using templates\n            this.html_text = \"&lt;input type='text' id='textbox' /&gt;&lt;button id='button'&gt;Remove&lt;/button&gt;\";        \n            this.listenTo(this,\"all\",function(){console.log(\"Event: \"+arguments[0]);});\n        },\n        render : function() {        \n            this.$el.html(this.html_text);\n\n            this.wrapper = new MyWrapper();\n            this.wrapper.set(this.$(\"#textbox\"));\n            this.wrapper.get().val(\"placeholder\");\n\n            return this;\n        },\n        onButton : function() {\n            // assume this gets .remove() called on subviews (if they existed)\n            this.trigger(\"cleanup\");\n            this.remove();\n        }\n    });\n\n    var view = new MyView();\n    $(\"#content\").append(view.render().el);\n}\n\nmain();\n</code></pre>\n\n<p>However, I am unclear how to use Google Chrome's profiler to verify that this is, in fact, the case. There are a gazillion things that show up on the heap profiler snapshot, and I have no idea how to decode what's good/bad. The tutorials I've seen on it so far either just tell me to \"use the snapshot profiler\" or give me a hugely detailed manifesto on how the entire profiler works. Is it possible to just use the profiler as a tool, or do I really have to understand how the whole thing was engineered?</p>\n\n<p><strong>EDIT:</strong> Tutorials like these:</p>\n\n<p><a href=\"https://docs.google.com/presentation/d/1wUVmf78gG-ra5aOxvTfYdiLkdGaR9OhXRnOlIcEmu2s/pub?start=false&amp;loop=false&amp;delayms=3000#slide=id.g14717ff3_0_23\">Gmail memory leak fixing</a></p>\n\n<p><a href=\"http://addyosmani.com/blog/taming-the-unicorn-easing-javascript-memory-profiling-in-devtools/\">Using DevTools</a></p>\n\n<p>Are representative of some of the stronger material out there, from what I've seen. However, beyond introducing the concept of the <em>3 Snapshot Technique</em>, I find they offer very little in terms of practical knowledge (for a beginner like me). The 'Using DevTools' tutorial doesn't work through a real example, so its vague and general conceptual description of things aren't overly helpful. As for the 'Gmail' example:</p>\n\n<blockquote>\n  <p><em><strong>So you found a leak. Now what?</em></strong></p>\n  \n  <ul>\n  <li><p>Examine the retaining path of leaked objects in the lower half of the Profiles panel</p></li>\n  <li><p>If the allocation site cannot be easily inferred (i.e. event listeners):</p></li>\n  <li><p>Instrument the constructor of the retaining object via the JS console to save the stack trace for allocations</p></li>\n  <li><p>Using Closure? Enable the appropriate existing flag (i.e. goog.events.Listener.ENABLE_MONITORING) to set the creationStack property during construction</p></li>\n  </ul>\n</blockquote>\n\n<p>I find myself more confused after reading that, not less. And, again, it's just telling me to <em>do</em> things, not <em>how</em> to do them. From my perspective, all of the information out there is either too vague or would only make sense to someone who already understood the process.</p>\n\n<p>Some of these more specific issues have been raised in <a href=\"http://stackoverflow.com/a/19726918/20578\">@Jonathan Naguin's answer</a> below.</p>\n",
            "last_activity_date": 1415951999,
            "question_id": 19621074,
            "score": 66,
            "tags": [
                "javascript",
                "google-chrome",
                "backbone.js",
                "memory-leaks"
            ],
            "title": "Finding JavaScript memory leaks with Chrome"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>Install <a href=\"http://en.wikipedia.org/wiki/Firebug_%28software%29\">Firebug</a> and then you can use <code>console.log(...)</code> and <code>console.debug(...)</code>, etc. (see <a href=\"http://getfirebug.com/wiki/index.php/Console_Panel#Message_types\">the documentation</a> for more).</p>\n",
                    "is_accepted": true,
                    "score": 355
                },
                {
                    "body": "<p>If you are using <a href=\"http://getfirebug.com/\">Firebug</a> and need to support IE, Safari or Opera as well, <a href=\"http://getfirebug.com/lite.html\">Firebug Lite</a> adds console.log() support to these browsers.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The <a href=\"http://en.wikipedia.org/wiki/WebKit\" rel=\"nofollow\">WebKit</a> Web Inspector also supports <a href=\"http://en.wikipedia.org/wiki/Firebug\" rel=\"nofollow\">Firebug's</a> console API (just a minor addition to <a href=\"http://stackoverflow.com/questions/164397/javascript-how-do-i-print-a-message-to-the-error-console/164408#164408\">Dan's answer</a>).</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>One good way to do this that works cross-browser is outlined in <em><a href=\"http://www.sitepoint.com/debugging-javascript-throw-away-your-alerts/\">Debugging JavaScript: Throw Away Your Alerts!</a></em>.</p>\n",
                    "is_accepted": false,
                    "score": 50
                },
                {
                    "body": "<p>Exceptions are logged into the JavaScript console. You can use that if you want to keep <a href=\"http://en.wikipedia.org/wiki/Firebug_%28software%29\">Firebug</a> disabled.</p>\n\n<pre><code>function log(msg) {\n    setTimeout(function() {\n        throw new Error(msg);\n    }, 0);\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>log('Hello World');\nlog('another message');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 76
                },
                {
                    "body": "<p>A note about 'throw()' mentioned above. It seems that it stops execution of the page completely (I checked in IE8) , so it's not very useful for logging \"on going processes\" (like to track a certain variable...)</p>\n\n<p>My suggestion is perhaps to add a <em>textarea</em> element somewhere in your document and to change (or append to) its <em>value</em> (which would change its text) for logging information whenever needed...</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is a solution to the literal question of how to print a message to the browser's error console, not the debugger console.  (There might be good reasons to bypass the debugger.)</p>\n\n<p>As I noted in comments about the suggestion to throw an error to get a message in the error console, one problem is that this will interrupt the thread of execution.  If you don't want to interrupt the thread, you can throw the error in a separate thread, one created using setTimeout.  Hence my solution (which turns out to be an elaboration of the one by Ivo Danihelka):</p>\n\n<pre><code>var startTime = (new Date()).getTime();\nfunction logError(msg)\n{\n  var milliseconds = (new Date()).getTime() - startTime;\n  window.setTimeout(function () {\n    throw( new Error(milliseconds + ': ' + msg, \"\") );\n  });\n}\nlogError('testing');\n</code></pre>\n\n<p>I include the time in milliseconds since the start time because the timeout could skew the order in which you might expect to see the messages.  </p>\n\n<p>The second argument to the Error method is for the filename, which is an empty string here to prevent output of the useless filename and line number.  It is possible to get the caller function but not in a simple browser independent way.  </p>\n\n<p>It would be nice if we could display the message with a warning or message icon instead of the error icon, but I can't find a way to do that.</p>\n\n<p>Another problem with using throw is that it could be caught and thrown away by an enclosing try-catch, and putting the throw in a separate thread avoids that obstacle as well.  However, there is yet another way the error could be caught, which is if the window.onerror handler is replaced with one that does something different.  Can't help you there.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>As always, Internet&nbsp;Explorer is the big elephant in rollerskates that stops you just simply using <code>console.log()</code>.</p>\n\n<p><a href=\"http://plugins.jquery.com/files/jquery.log.js_0.txt\" rel=\"nofollow\">jQuery's log</a> can be adapted quite easily, but is a pain having to add it everywhere. One solution if you're using jQuery is to put it into your jQuery file at the end, minified first:</p>\n\n<pre><code>function log()\n{\n    if (arguments.length &gt; 0)\n    {\n        // Join for graceful degregation\n        var args = (arguments.length &gt; 1) ? Array.prototype.join.call(arguments, \" \") : arguments[0];\n\n        // This is the standard; Firebug and newer WebKit browsers support this.\n        try {\n            console.log(args);\n            return true;\n        } catch(e) {\n            // Newer Opera browsers support posting erros to their consoles.\n            try {\n                opera.postError(args);\n                return true;\n            } \n            catch(e) \n            {\n            }\n        }\n\n        // Catch all; a good old alert box.\n        alert(args);\n        return false;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you use <strong>Safari</strong>, you can write</p>\n\n<pre><code>console.log(\"your message here\");\n</code></pre>\n\n<p>and it appears right on the console of the browser.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<pre><code>console.error(message); //gives you the red errormessage\nconsole.log(message); //gives the default message\nconsole.warn(message); //gives the warn message with the exclamation mark in front of it\nconsole.info(message); //gives an info message with an 'i' in front of the message\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 83
                },
                {
                    "body": "<p>This does not print to the Console, but will open you an alert Popup with your message which might be useful for some debugging:</p>\n\n<p>just do:</p>\n\n<pre><code>alert(\"message\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<pre><code>console.log(\"your message here\");\n</code></pre>\n\n<p>working for me.. i'm searching for this.. i used Firefox.\nhere is my Script.</p>\n\n<pre><code> $('document').ready(function() {\nconsole.log('all images are loaded');\n});\n</code></pre>\n\n<p>works in Firefox and Chrome.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To actually answer the question:</p>\n\n<pre><code>console.error('An error occurred!');\nconsole.error('An error occurred! ', 'My variable = ', myVar);\nconsole.error('An error occurred! ' + 'My variable = ' + myVar);\n</code></pre>\n\n<p>Instead of error, you can also use info, log or warn.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How can I print a message to the error console, preferably including a variable? </p>\n\n<p>For example, something like:</p>\n\n<pre><code>print('x=%d', x);\n</code></pre>\n",
            "last_activity_date": 1395846866,
            "question_id": 164397,
            "score": 280,
            "tags": [
                "javascript",
                "debugging"
            ],
            "title": "JavaScript: How do I print a message to the error console?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I have on several projects.</p>\n\n<p>The biggest difference in my opinion </p>\n\n<ul>\n<li><p><a href=\"http://jqueryui.com/download/\">jQuery UI</a> is fallback safe, it works correctly and looks good in old browsers, where <a href=\"http://getbootstrap.com/\">Bootstrap</a> is based on CSS3 which basically means GREAT in new browsers, not so great in old</p></li>\n<li><p>Update frequency: Bootstrap is getting some great big updates with awesome new features, but sadly they might break previous code, so you can't just install bootstrap and update when there is a new major release, it basically requires a lot of new coding</p></li>\n<li><p>jQuery UI is based on good html structure with transformations from JavaScript, while Bootstrap is based on visually and customizable inline structure. (calling a widget in JQUERY UI, defining it in Bootstrap)</p></li>\n</ul>\n\n<p>So what to choose? </p>\n\n<p>That always depends on the type of project you are working on. Is cool and fast looking widgets better, or are your users often using old browsers?</p>\n\n<p>I always end up using both, so I can use the best of both worlds.</p>\n\n<p>Here are the links to both frameworks, if you decide to use them.</p>\n\n<ol>\n<li><a href=\"http://jqueryui.com/download/\">jQuery UI</a></li>\n<li><a href=\"http://getbootstrap.com/\">Bootstrap</a></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 91
                },
                {
                    "body": "<p>You can use both with relatively few issues. Twitter Bootstrap uses jQuery 1.7.1 (as of this writing), and I can't think of any reasons why you cannot integrate additional Jquery UI components into your HTML templates.</p>\n\n<p>I've been using a combination of HTML5 Boilerplate &amp; Twitter Bootstrap built at Initializr.com.  This combines two awesome starter templates into one great starter project.  Check out the details at <a href=\"http://html5boilerplate.com/\">http://html5boilerplate.com/</a> and <a href=\"http://www.initializr.com/\">http://www.initializr.com/</a>  Or to get started right away, go to <a href=\"http://www.initializr.com/\">http://www.initializr.com/</a>, click the \"Bootstrap 2\" button, and click \"Download It\".  This will give you all the js and css you need to get started.</p>\n\n<p>And don't be scared off by HTML5 and CSS3.  Initializr and HTML5 Boilerplate include polyfills and IE specific code that will allow all features to work in IE 6, 7 8, and 9.</p>\n\n<p>The use of LESS in Twitter Bootstrap is also optional.  They use LESS to compile all the CSS that is used by Bootstrap, but if you just want to override or add your own styles, they provide an empty css file for that purpose.  </p>\n\n<p>There is also a blank js file (script.js) for you to add custom code.  This is where you would add your handlers or selectors for additional jQueryUI components.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>We have used both and we like Bootstrap for its simplicity and the pace at which it's being developed and enhanced. The problem with jQuery UI is that it's moving at a snail's pace. It's taking years to roll out common features like Menubar, Tree control and DataGrid which are in planning/development stage for ever. We waited waited waited and finally given up and used other libraries like ExtJS for our product <a href=\"http://dblite.com\">http://dblite.com</a>.</p>\n\n<p>Bootstrap has come up with quite a comprehensive set of features in a very short period of time and I am sure it will outpace jQuery UI pretty soon. </p>\n\n<p>So I see no point in using something that will eventually be outdated...</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Having used both, Twitter's Bootstrap is a superior technology set. Here are some differences,</p>\n\n<ul>\n<li><strong>Widgets</strong>: jQuery UI wins here. The date widget it provides is immensely useful, and Twitter Bootstrap provides nothing of the sort.</li>\n<li><strong>Scaffolding</strong>: Bootstrap wins here. Twitter's grid both fluid and fixed are top notch. jQuery UI doesn't even provide this direction leaving page layout up to the end user.</li>\n<li><strong>Out of the box professionalism</strong>: Bootstrap using CSS3 is leagues ahead, jQuery UI looks dated by comparison.</li>\n<li><strong>Icons</strong>: I'll go tie on this one. <a href=\"http://twitter.github.com/bootstrap/base-css.html#icons\">Bootstrap has nicer icons imho</a> than <a href=\"http://jqueryui.com/themeroller/\">jQuery UI</a>, but I don't like the terms one bit, <em>Glyphicons Halflings are normally not available for free, but an arrangement between Bootstrap and the Glyphicons creators have made this possible at no cost to you as developers. As a thank you, we ask you to include an optional link back to Glyphicons whenever practical.</em></li>\n<li><strong>Images &amp; Thumbnails</strong>: <a href=\"http://twitter.github.com/bootstrap/base-css.html#images\">goes to Bootstrap</a>, jQuery UI doesn't even help here.</li>\n</ul>\n\n<p>Other notes,</p>\n\n<ul>\n<li>It's important to understand how these two technologies compete in the spheres too. There is a lot of overlap, but if you want simple scaffolding and fixed/fluid creation Bootstrap isn't another technology, it's the best technology. If you want any single widget, jQuery UI probably isn't even in the top three. Today, jQuery UI is mainly just a toy for consistency and proof of concept for a client-side widget creation using a unified framework.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 46
                }
            ],
            "body": "<p>I've been using jQuery UI for some basic page enhancements. Button and input styling and modal dialog boxes. Now I've come across Bootstrap and it looks pretty good. </p>\n\n<p>Has anyone any experience of going from using jQuery UI to Bootstrap?  This what I am thinking to do but before I do this I'd like to be aware of what problems I could face.</p>\n",
            "last_activity_date": 1415307501,
            "question_id": 9782622,
            "score": 137,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "twitter-bootstrap"
            ],
            "title": "Twitter Bootstrap vs jQuery UI?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I would recommend you use only what you need. Build your app in a browser that supports the features you are using, and periodically test in other browsers that you support. If something isn't working correctly, find the appropriate fix, whether it be html5shiv, IE9.js, Modernizr, or CSS3 Pie. You are not going to use all of the new features in HTML5 and CSS3 all in one page, so you don't need to include every polyfill library in existence. Wait until you find problems with the features you're trying to use, then try and find the library necessary to do that.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I've got extensive experience with all of these, having used them for a few years each.</p>\n\n<p><strong>Modernizr</strong></p>\n\n<p>Includes HTML5shiv functionality\nAlso does a lot more \u2013 if you don't use the other features, then don't use it, it does slow down page loads, but is worth it if you need it!</p>\n\n<p><strong>HTML5shiv</strong></p>\n\n<p>Very small, just fixes html5 elements in IE, nothing else.</p>\n\n<p><strong>CSS3PIE</strong></p>\n\n<p>Lets you use border-radius, gradients and box shadow in older versions of IE. Also can allow PNGs in IE 6. Adds a noticeable delay to page load.</p>\n\n<p><strong>ie7.js (and ie9.js)</strong></p>\n\n<p>Gives you many CSS3 selectors, min and max width, multiple classes and fixed positioning. Also can have a png fix if you like. Doesn't seem to slow things down much.</p>\n\n<p><strong>Conclusion</strong></p>\n\n<p>My advice would fall into two categories:</p>\n\n<p>If you are just using the new (is 2 years new on the internet?!) elements, and CSS3 selectors, then use ie9.js + the html5shiv. This is lightweight, and just lets you get on with things without having to remember that IE6 doesn't support anything.</p>\n\n<p>If you are using a lot of CSS3 stuff, then CSS3PIE will sort out border-radius and box-shadow. The gradient support seems a little flaky, so I've always used a fallback image instead. Modernizr lets you easily deliver different properties to browsers with different support. I've mainly used this for determining whether a browser has CSS transitions and transforms, as they are useful for any image sliders or content carousels. It's worth using the customisation tool to only include the functionality that you want \u2013 the webforms stuff shows a textbox with 50 in it for a couple of milliseconds, so it's worth disabling if you don't want it.</p>\n\n<p>Hope that's helpful!</p>\n",
                    "is_accepted": true,
                    "score": 67
                },
                {
                    "body": "<p>I've used mainly CSS3Pie...it works great. But this afternoon i tested it on my laptop with I.E8 and there was an problem with it...it was disabling some css lines...when i removed the css3pie code my site gained twice the speed...then i came accross the posts with people arguing about the css3 slowdown...So at the moment i'm busy to find another way for IE7 &amp; IE8 to have border-radius and shades.</p>\n\n<p>If you want to use it...please test alot as it is NON-official fixes</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm just starting to use HTML5 and CSS3 in my documents. \nI understand the need for JavaScript to bring Internet Explorer up to speed with these new tags and styles, but I don't know which to use and when!</p>\n\n<p>My plan was to use html5shiv and IE9.js to look after the HTML5 tags as well as the transparent pngs (and whatever other pesky errors they fix) but then Modernizr and CSS3 Pie were brought to my attention. </p>\n\n<p>My question is, if I use Modernizr, does it look after my need for html5shiv as well as IE9.js? Or should I include these as well? What is the overlap, if any?</p>\n\n<p>And what does CSS3 Pie do that Modernizr or the others doesn't? Or vice versa?</p>\n\n<p>I appreciate your guys help. Let me know what you do!?</p>\n",
            "last_activity_date": 1313050562,
            "question_id": 5667076,
            "score": 46,
            "tags": [
                "javascript",
                "internet-explorer",
                "html5",
                "modernizr",
                "css3pie"
            ],
            "title": "Modernizr, html5shiv, ie7.js, and CSS3 Pie. Which to use and when?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Since Backbone.js is not a framework as such, there's no single \"right\" way to do anything. However, there are some hints in the implementation that help you to get the idea. Also, there are some general time-tested code organization practices which you can apply. But I'll explain the views first.</p>\n\n<h2>Views</h2>\n\n<p>Views in Backbone are tied to particular DOM elements (that's what the <code>el</code> property is for). </p>\n\n<p>If, when the view is initialized, it has an <code>el</code> attribute, then Backbone.js makes it a property of the new view instance. Otherwise it looks for <code>tagName</code>, <code>id</code>, and <code>className</code> attributes, creates the corresponding DOM object, and assigns it to the <code>el</code> property of the new view instance anyway. (It's explained in <a href=\"http://documentcloud.github.com/backbone/docs/backbone.html#section-119\">the source</a>.) If there's even no <code>tagName</code>, then <code>&lt;div&gt;</code> element is created by default.</p>\n\n<p>So, you can guess why <code>TodoView</code> and <code>AppView</code> use different approaches. The <code>#todoapp</code> element exists initially on the page in the HTML, so <code>AppView</code> can just use it. But when a view for a todo item is created, there's no DOM element for it yet; so the developer has <code>tagName</code> defined on the class for Backbone to create a list item automatically. (It wouldn't be hard to do by hand in the <code>initialize()</code> method, but Backbone saves some time by doing it for you.)</p>\n\n<p>Usually a view falls into one of two categories: views for model instances, and views for collections. Backbone doesn't <em>force</em> it, but it <em>suggests</em> that it's probably what you want: if you instantiate the view with <code>collection</code> or <code>model</code> options, they become properties of the newly created view instance, so you can access them via <code>view.collection</code> or <code>view.model</code>. (If you, for example, instantiate the view with <code>foo</code> option, it will be put into <code>view.options.foo</code>.)</p>\n\n<h2>Dependencies</h2>\n\n<h3>Good practices</h3>\n\n<p>This is just my opinion.</p>\n\n<ul>\n<li><p>Less dependency is better.</p></li>\n<li><p>Following the MVC pattern has a lot of advantages.</p>\n\n<p>Note that Backbone.js terminology does not match MVC's classical one. That's normal, MVC != a set of classes, and its definitions vary a bit. It's more of \u2018an ideal that you should have in the back of your mind\u2019 (quoted from <a href=\"http://stackoverflow.com/questions/26685/what-is-mvc-and-what-are-the-advantages-of-it\">What is MVC and what are the advantages of it?</a>).</p></li>\n</ul>\n\n<pre>\nMVC        | Backbone.js                 | What it does\nController | View (mostly)               | Handles user interaction\nView       | template rendered by a view | Displays the data\nModel      | Model & Collection          | Represents the data, handles data access\n</pre>\n\n<ul>\n<li><p>The model layer should not normally depend on anything. In MVC, model is where you access your data. That has nothing to do with, say, the presentation of this data.</p>\n\n<p>In Backbone, a model can be a part of some collection, but that's not a heavy dependency (AFAIK, it just helps to automatically figure out URLs of API endpoints corresponding to this model.)</p></li>\n<li><p>In Backbone, a collection may have a corresponding model class assigned, but that's also not necessary.</p></li>\n<li><p>In Backbone, a router usually depends on higher-level views (like views for entire pages or sections of the page), to render them in response to a change in application's state. These views, in turn, depend on some lower-level views, like widgets / page sections. These views can depend on collections and other, even more low-level views. These, in turn, can depend on particular model instances.</p></li>\n</ul>\n\n<p>As an example (arrows denote \"depends on\" type of relationship):</p>\n\n<pre>\n           +-------------+              +---------------+   +------------+\nState      |MainRouter   |       Data:  |ItemCollection |   |ItemModel   |\nControl:   |-------------|              |---------------|   |------------|\n           |             |              |/api/items     +-->|/api/items/*|\n           |             |              |               |   |            |\n           |             |              |               |   |            |\n           +---+-+-------+              +---------------+   +------------+\n               | +----------------+                  ^              ^\n               v                  v                  |              |\n           +-------------+   +-------------+         |              |\nPage-level |AboutView    |   |AppView      |         |              |\nviews:     |-------------|   |-------------|         |              |\n           | section     |   | section     |         |              |\n           | role=\"main\" |   | role=\"main\" |         |              |\n           +--+-+--------+   +--+-+-+------+         |              |\n              | +---------------|-|-|----+           |              |\n              |      +----------+ | +----|---------+ |              |\n              v      v            v      v         v |              |\n           +--------------+   +--------------+   +---+-----------+  |\nWidget     |SidebarView   |   |HeaderView    |   |ItemListView   |  |\nviews:     |--------------|   |--------------|   |---------------|  |\n           | aside        |   | header       |   | ul            |  |\n           |              |   |              |   |               |  |\n           |              |   |              |   |               |  |\n           +--------------+   +--------------+   +-----------+---+  |\n                                                             |      |\n                                                             v      |\n                                                           +--------+---+\n                                                           |ItemAsLiView|\n                                                           |------------|\n                                                           | li         |\n                                                           |            |\n                                                           +------------+\n</pre>\n\n<p>Note that you can have multiple routers set up, in which case things may look a bit differently.</p>\n\n<h3>todos.js</h3>\n\n<p>In the Todos example, the developer decided that <code>Todo</code> model instances should depend on corresponding TodoView instances. When <code>TodoView</code> is instantiated, it creates on the corresponding model instance a property <code>view</code> and assigns itself to it. So that it could be accessed by <code>some_todo_model.view</code>. However, it should be noted that <code>model.view</code> is only used once\u2014in <code>Todo</code> model's <code>clear()</code> method, to remove the view instance when the model is cleared.</p>\n\n<p>I think <em>that</em> particular dependency isn't necessary. However, for such a small application, it may be okay.</p>\n\n<p>I couldn't find any example of accessing <code>this.model.view</code> in the view, so I can't comment on this.</p>\n\n<h2>See also</h2>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/users/477245/julien\">Answers by Julien Guimont</a>\u2014almost all of them are about Backbone.js, I think it's a great source of information.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 76
                }
            ],
            "body": "<p>I'm a bit confused w.r.t. the structural dependencies when designing your MVC - so we have a Model, Collection and View (I'm not using controllers as yet, but the question applies to it too). Now <em>who has a reference of whom</em> to speak in OO terms. So the collection is a list of models so we can think of it as a one to many dependency from collection to model. In some of the example codes I sometimes see some reference to a view in the 'model' object and the reference of the model in the view. Sometimes a collection in the view.</p>\n\n<p>In the model I sometimes see a <code>this.view</code> and in the view I see something like <code>this.model.view</code> or a <code>this.model</code> and thus the confusion to clarify :)</p>\n\n<p>So what is the 'right' set of dependencies (if there is \"a\" right way that is) or can everyone be dependent on everyone (don't think that is correct) I.e., who should ideally be dependent on whom in Backbone's MVC design of objects? It's just a bit confusing to know how should they be structurally related when I see such disparate examples - from a noob point of view :) As a noob what is the 'right' way to start structuring my dependencies - once I'm up the learning curve I'd probably figure it out myself, but to start with, how should one go about it? A UML-like diagram would be an added bonus ;)</p>\n\n<p>Another question:\nSometimes I see two views in the same piece of code: Eg: the famous todo.js <a href=\"http://documentcloud.github.com/backbone/docs/todos.html\">http://documentcloud.github.com/backbone/docs/todos.html</a> </p>\n\n<p>Now although I understand the need of multiple views, what is confusing is how are they different? I mean what's the difference between an 'el' and 'tagName' and how does the view behave differently if either one of them is absent? I mean in the link above one view uses 'tagName' and the other 'el' and I'm not really sure how they correlate (if at all).</p>\n\n<p>I've gone through the documentation intensively, but as I said I'm still learning so I may just not understand parts of it clearly even with all the resources in place and may need some human intervention :)</p>\n",
            "last_activity_date": 1360954471,
            "question_id": 6659713,
            "score": 29,
            "tags": [
                "javascript",
                "backbone.js"
            ],
            "title": "Understanding the internal structural dependencies of MVC in Backbone.js"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>The <code>window</code> object contains all the public variables, so you can type it in the console and then expand to view all variables/attributes/functions. </p>\n\n<p><img src=\"http://i.stack.imgur.com/J7bAh.png\" alt=\"chrome-show-all-variables-expand-window-object\"></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>As all \"public variables\" are in fact properties of the window object (of the window/tab you are looking at), you can just inspect the \"window\" object instead. If you have multiple frames, you will have to select the correct window object (like in Firebug) anyway.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Is this the kind of output you're looking for?</p>\n\n<pre><code>for(var b in window) { \n  if(window.hasOwnProperty(b)) console.log(b); \n}\n</code></pre>\n\n<p>This will list everything available on the <code>window</code> object (all the functions and variables, e.g. <code>$</code> and <code>jQuery</code> on this page, etc).  Though, this is quite a list, not sure how helpful it is...</p>\n\n<p>Otherwise just do <code>window</code> and start going down it's tree:</p>\n\n<pre><code>window\n</code></pre>\n\n<p>This will give you <code>DOMWindow</code>, an expandable/explorable object.</p>\n",
                    "is_accepted": true,
                    "score": 100
                },
                {
                    "body": "<p>You may want to try this <a href=\"http://getfirebug.com/releases/lite/chrome/\" rel=\"nofollow\">Firebug lite</a> extension for Chrome.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>When script execution is halted (e.g., on a breakpoint) you can simply view all globals in the right pane of the Developer Tools window:</p>\n\n<p><a href=\"http://www.flickr.com/photos/marcel-/4649969826/sizes/l/\"><img src=\"http://farm4.static.flickr.com/3399/4649969826_38bab44126.jpg\" width=\"500\" height=\"356\" alt=\"chrome-globals\" /></a></p>\n",
                    "is_accepted": false,
                    "score": 48
                },
                {
                    "body": "<p><img src=\"http://i.stack.imgur.com/vhf7f.jpg\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Open console and than  enter:\nkeys(window) - to see variables\ndir(window) - to see objects </p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>If you want to exclude all the standard properties of the window object and view application-specific globals, this will print them to the Chrome console:</p>\n\n<pre><code>(function(){var standardGlobals=[\"top\",\"window\",\"location\",\"external\",\"chrome\",\"document\",\"inlineCSS\",\"target\",\"width\",\"height\",\"canvas\",\"data\",\"DOMURL\",\"img\",\"svg\",\"ctx\",\"url\",\"w\",\"a\",\"speechSynthesis\",\"webkitNotifications\",\"localStorage\",\"sessionStorage\",\"applicationCache\",\"webkitStorageInfo\",\"indexedDB\",\"webkitIndexedDB\",\"crypto\",\"CSS\",\"performance\",\"console\",\"devicePixelRatio\",\"styleMedia\",\"parent\",\"opener\",\"frames\",\"self\",\"defaultstatus\",\"defaultStatus\",\"status\",\"name\",\"length\",\"closed\",\"pageYOffset\",\"pageXOffset\",\"scrollY\",\"scrollX\",\"screenTop\",\"screenLeft\",\"screenY\",\"screenX\",\"innerWidth\",\"innerHeight\",\"outerWidth\",\"outerHeight\",\"offscreenBuffering\",\"frameElement\",\"clientInformation\",\"navigator\",\"toolbar\",\"statusbar\",\"scrollbars\",\"personalbar\",\"menubar\",\"locationbar\",\"history\",\"screen\",\"postMessage\",\"close\",\"blur\",\"focus\",\"ondeviceorientation\",\"ondevicemotion\",\"onunload\",\"onstorage\",\"onresize\",\"onpopstate\",\"onpageshow\",\"onpagehide\",\"ononline\",\"onoffline\",\"onmessage\",\"onhashchange\",\"onbeforeunload\",\"onwaiting\",\"onvolumechange\",\"ontimeupdate\",\"onsuspend\",\"onsubmit\",\"onstalled\",\"onshow\",\"onselect\",\"onseeking\",\"onseeked\",\"onscroll\",\"onreset\",\"onratechange\",\"onprogress\",\"onplaying\",\"onplay\",\"onpause\",\"onmousewheel\",\"onmouseup\",\"onmouseover\",\"onmouseout\",\"onmousemove\",\"onmouseleave\",\"onmouseenter\",\"onmousedown\",\"onloadstart\",\"onloadedmetadata\",\"onloadeddata\",\"onload\",\"onkeyup\",\"onkeypress\",\"onkeydown\",\"oninvalid\",\"oninput\",\"onfocus\",\"onerror\",\"onended\",\"onemptied\",\"ondurationchange\",\"ondrop\",\"ondragstart\",\"ondragover\",\"ondragleave\",\"ondragenter\",\"ondragend\",\"ondrag\",\"ondblclick\",\"oncuechange\",\"oncontextmenu\",\"onclose\",\"onclick\",\"onchange\",\"oncanplaythrough\",\"oncanplay\",\"oncancel\",\"onblur\",\"onabort\",\"onwheel\",\"onwebkittransitionend\",\"onwebkitanimationstart\",\"onwebkitanimationiteration\",\"onwebkitanimationend\",\"ontransitionend\",\"onsearch\",\"getSelection\",\"print\",\"stop\",\"open\",\"showModalDialog\",\"alert\",\"confirm\",\"prompt\",\"find\",\"scrollBy\",\"scrollTo\",\"scroll\",\"moveBy\",\"moveTo\",\"resizeBy\",\"resizeTo\",\"matchMedia\",\"requestAnimationFrame\",\"cancelAnimationFrame\",\"webkitRequestAnimationFrame\",\"webkitCancelAnimationFrame\",\"webkitCancelRequestAnimationFrame\",\"captureEvents\",\"releaseEvents\",\"atob\",\"btoa\",\"setTimeout\",\"clearTimeout\",\"setInterval\",\"clearInterval\",\"TEMPORARY\",\"PERSISTENT\",\"getComputedStyle\",\"getMatchedCSSRules\",\"webkitConvertPointFromPageToNode\",\"webkitConvertPointFromNodeToPage\",\"webkitRequestFileSystem\",\"webkitResolveLocalFileSystemURL\",\"openDatabase\",\"addEventListener\",\"removeEventListener\",\"dispatchEvent\"];\n    var appSpecificGlobals={};\n    for (var w in window){\n        if (standardGlobals.indexOf(w)==-1) appSpecificGlobals[w]=window[w];\n    }\n    console.log(appSpecificGlobals);})()\n</code></pre>\n\n<p>The script works well as a bookmarklet. To use the script as a bookmarklet, create a new bookmark and replace the URL with the following:</p>\n\n<pre><code>javascript:(function(){var standardGlobals=[\"top\",\"window\",\"location\",\"external\",\"chrome\",\"document\",\"inlineCSS\",\"target\",\"width\",\"height\",\"canvas\",\"data\",\"DOMURL\",\"img\",\"svg\",\"ctx\",\"url\",\"w\",\"a\",\"speechSynthesis\",\"webkitNotifications\",\"localStorage\",\"sessionStorage\",\"applicationCache\",\"webkitStorageInfo\",\"indexedDB\",\"webkitIndexedDB\",\"crypto\",\"CSS\",\"performance\",\"console\",\"devicePixelRatio\",\"styleMedia\",\"parent\",\"opener\",\"frames\",\"self\",\"defaultstatus\",\"defaultStatus\",\"status\",\"name\",\"length\",\"closed\",\"pageYOffset\",\"pageXOffset\",\"scrollY\",\"scrollX\",\"screenTop\",\"screenLeft\",\"screenY\",\"screenX\",\"innerWidth\",\"innerHeight\",\"outerWidth\",\"outerHeight\",\"offscreenBuffering\",\"frameElement\",\"clientInformation\",\"navigator\",\"toolbar\",\"statusbar\",\"scrollbars\",\"personalbar\",\"menubar\",\"locationbar\",\"history\",\"screen\",\"postMessage\",\"close\",\"blur\",\"focus\",\"ondeviceorientation\",\"ondevicemotion\",\"onunload\",\"onstorage\",\"onresize\",\"onpopstate\",\"onpageshow\",\"onpagehide\",\"ononline\",\"onoffline\",\"onmessage\",\"onhashchange\",\"onbeforeunload\",\"onwaiting\",\"onvolumechange\",\"ontimeupdate\",\"onsuspend\",\"onsubmit\",\"onstalled\",\"onshow\",\"onselect\",\"onseeking\",\"onseeked\",\"onscroll\",\"onreset\",\"onratechange\",\"onprogress\",\"onplaying\",\"onplay\",\"onpause\",\"onmousewheel\",\"onmouseup\",\"onmouseover\",\"onmouseout\",\"onmousemove\",\"onmouseleave\",\"onmouseenter\",\"onmousedown\",\"onloadstart\",\"onloadedmetadata\",\"onloadeddata\",\"onload\",\"onkeyup\",\"onkeypress\",\"onkeydown\",\"oninvalid\",\"oninput\",\"onfocus\",\"onerror\",\"onended\",\"onemptied\",\"ondurationchange\",\"ondrop\",\"ondragstart\",\"ondragover\",\"ondragleave\",\"ondragenter\",\"ondragend\",\"ondrag\",\"ondblclick\",\"oncuechange\",\"oncontextmenu\",\"onclose\",\"onclick\",\"onchange\",\"oncanplaythrough\",\"oncanplay\",\"oncancel\",\"onblur\",\"onabort\",\"onwheel\",\"onwebkittransitionend\",\"onwebkitanimationstart\",\"onwebkitanimationiteration\",\"onwebkitanimationend\",\"ontransitionend\",\"onsearch\",\"getSelection\",\"print\",\"stop\",\"open\",\"showModalDialog\",\"alert\",\"confirm\",\"prompt\",\"find\",\"scrollBy\",\"scrollTo\",\"scroll\",\"moveBy\",\"moveTo\",\"resizeBy\",\"resizeTo\",\"matchMedia\",\"requestAnimationFrame\",\"cancelAnimationFrame\",\"webkitRequestAnimationFrame\",\"webkitCancelAnimationFrame\",\"webkitCancelRequestAnimationFrame\",\"captureEvents\",\"releaseEvents\",\"atob\",\"btoa\",\"setTimeout\",\"clearTimeout\",\"setInterval\",\"clearInterval\",\"TEMPORARY\",\"PERSISTENT\",\"getComputedStyle\",\"getMatchedCSSRules\",\"webkitConvertPointFromPageToNode\",\"webkitConvertPointFromNodeToPage\",\"webkitRequestFileSystem\",\"webkitResolveLocalFileSystemURL\",\"openDatabase\",\"addEventListener\",\"removeEventListener\",\"dispatchEvent\"]; var $appSpecificGlobals={};for (var w in window){if (standardGlobals.indexOf(w)==-1) $appSpecificGlobals[w]=window[w];} window.$appSpecificGlobals=$appSpecificGlobals;console.log(window.$appSpecificGlobals);})()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>In Firebug, the DOM tab shows a list of all your public variables and objects. In Chrome's console you have to type the name of the public variable or object you want to explore.</p>\n\n<p>Is there a way - or at least a command - for Chrome's console to display a list all the public variables and objects? It will save a lot of typing.</p>\n",
            "last_activity_date": 1416797715,
            "question_id": 2934787,
            "score": 76,
            "tags": [
                "javascript",
                "google-chrome",
                "google-chrome-devtools"
            ],
            "title": "View list of all JavaScript variables in Google Chrome Console"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I'd strongly advise you to check <a href=\"http://aheckmann.github.com/gm/\" rel=\"nofollow\">gm</a> with GraphicsMagick.\nStable, feature rich, clean API, great docs, and fast.</p>\n\n<p>And it works both on Windows and Linux / MacOS / BSD / ...</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><em>Answering my own question</em></p>\n\n<p>I spent two days digging through Node.js graphics libraries.</p>\n\n<p><a href=\"https://github.com/learnboost/node-canvas\" rel=\"nofollow\"><strong>node-canvas</strong></a></p>\n\n<ul>\n<li>I tried it first since I'm quite familiar with <code>&lt;canvas&gt;</code> API. It's a huge plus for a library.</li>\n<li>it requires Cairo which doesn't have an easy Windows download. I found it in GTK+ distribution though.</li>\n<li>moreover it needs native library binding code to be compiled on module installation. It uses Node-Waf hasn't being ported to Windows yet.</li>\n</ul>\n\n<p><a href=\"https://github.com/aheckmann/gm\" rel=\"nofollow\"><strong>gm</strong></a> </p>\n\n<ul>\n<li>mature</li>\n<li>runs on Windows smoothly</li>\n<li>docs are <em>ok</em> but not thorough: I had to look up into source code to figure out what API is available</li>\n<li>unfortunately there's no easy way to combine images with gm. Maybe there's some way to achieve that but I haven't found one after two hours spent with it.</li>\n</ul>\n\n<p><a href=\"https://github.com/rsms/node-imagemagick\" rel=\"nofollow\"><strong>node-imagemagick</strong></a></p>\n\n<ul>\n<li>The official repo has very few basic ImageMagick commands covered but I used <a href=\"https://github.com/msealand/node-imagemagick\" rel=\"nofollow\">this fork</a> (good thing that NPM can pull libraries directly from git repositories). It has bindings for <code>montage</code> which does exactly what I need.</li>\n<li><a href=\"http://www.graphicsmagick.org/benchmarks.html#the-benchmark\" rel=\"nofollow\">ImageMagick is quite slow</a>, though it works on Windows.</li>\n</ul>\n\n<p><a href=\"https://github.com/dosx/node-vips\" rel=\"nofollow\"><strong>Node-Vips</strong></a></p>\n\n<ul>\n<li>Huge plus: it uses an incredible <a href=\"http://www.vips.ecs.soton.ac.uk/\" rel=\"nofollow\">VIPS library</a> which I'm familiar with. VIPS is very fast and optimized for large images. It's very smart about utilizing hardware resources: if your machine has a lot of RAM it'll do all processing in memory but will switch to hard-drive caches if memory is scarce or required for other applications.</li>\n<li>same as node-canvas it requires Node-Waf so it's now available yet for Windows.</li>\n</ul>\n\n<p>I also looked at other libraries from the list but most of them are either very immature or do not suit my use case. I would really like to try migrating to either Node-Canvas or Node-Vips when Node-Waf gets ported to Windows but until then I'll stick to node-imagemagick.</p>\n",
                    "is_accepted": true,
                    "score": 101
                },
                {
                    "body": "<p>Her is the <a href=\"https://bitbucket.org/pastorgluk/node-canvas-win\" rel=\"nofollow\">link</a> to canvas implementation based on GDI+ </p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I found a quite <a href=\"https://github.com/joyent/node/wiki/modules#wiki-graphics\">large list of available libraries</a> on Node.JS wiki but I'm not sure which of those are more mature and provide better performance. Basically I want to do the following:</p>\n\n<ol>\n<li>load some images to a server from external sources</li>\n<li>put them onto one big canvas</li>\n<li>crop and mask them a bit</li>\n<li>apply a filter or two</li>\n<li>Resize the final image and give a link to it</li>\n</ol>\n\n<p>Big plus if the node package works on both Linux <em>and Windows</em>.</p>\n",
            "last_activity_date": 1423951146,
            "question_id": 10692075,
            "score": 54,
            "tags": [
                "javascript",
                "image",
                "node.js",
                "image-processing",
                "image-manipulation"
            ],
            "title": "Which library should I use for server-side image manipulation on Node.JS?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>When you include Underscore, it attaches itself to the <code>window</code> object, and so is available globally.</p>\n\n<p>So you can use it from Angular code as-is.</p>\n\n<p>You can also wrap it up in a service or a factory, if you'd like it to be injected:</p>\n\n<pre><code>var underscore = angular.module('underscore', []);\nunderscore.factory('_', function() {\n  return window._; // assumes underscore has already been loaded on the page\n});\n</code></pre>\n\n<p>And then you can ask for the <code>_</code> in your app's module:</p>\n\n<pre><code>// Declare it as a dependency of your module\nvar app = angular.module('app', ['underscore']);\n\n// And then inject it where you need it\napp.controller('Ctrl', function($scope, _) {\n  // do stuff\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 127
                },
                {
                    "body": "<p>You can also take a look at this module for angular</p>\n\n<p><a href=\"https://github.com/floydsoft/angular-underscore\" rel=\"nofollow\">https://github.com/floydsoft/angular-underscore</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have implemented @satchmorun's suggestion here:\n<a href=\"https://github.com/andresesfm/angular-underscore-module\">https://github.com/andresesfm/angular-underscore-module</a></p>\n\n<p>To use it:</p>\n\n<ol>\n<li><p>Make sure you have included underscore.js in your project</p>\n\n<pre><code>&lt;script src=\"bower_components/underscore/underscore.js\"&gt;\n</code></pre></li>\n<li><p>Get it:</p>\n\n<pre><code>bower install angular-underscore-module\n</code></pre></li>\n<li><p>Add angular-underscore-module.js to your main file (index.html)</p>\n\n<pre><code>&lt;script src=\"bower_components/angular-underscore-module/angular-underscore-module.js\"&gt;&lt;/script&gt;\n</code></pre></li>\n<li><p>Add the module as a dependency in your App definition</p>\n\n<pre><code>var myapp = angular.module('MyApp', ['underscore'])\n</code></pre></li>\n<li><p>To use, add as an injected dependency to your Controller/Service and it is ready to use</p>\n\n<pre><code>angular.module('MyApp').controller('MyCtrl', function ($scope, _) {\n...\n//Use underscore\n_.each(...);\n...\n</code></pre></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I use this:</p>\n\n<pre><code>var myapp = angular.module('myApp', [])\n  // allow DI for use in controllers, unit tests\n  .constant('_', window._)\n  // use in views, ng-repeat=\"x in _.range(3)\"\n  .run(function ($rootScope) {\n     $rootScope._ = window._;\n  });\n</code></pre>\n\n<p>See <a href=\"https://github.com/angular/angular.js/wiki/Understanding-Dependency-Injection\">https://github.com/angular/angular.js/wiki/Understanding-Dependency-Injection</a> about halfway for some more info on <code>run</code>.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>If you don't mind using lodash try out <a href=\"https://github.com/rockabox/ng-lodash\" rel=\"nofollow\">https://github.com/rockabox/ng-lodash</a> it wraps lodash completely so it is the only dependency and you don't need to load any other script files such as lodash. </p>\n\n<p>Lodash is completely off of the window scope and no \"hoping\" that it's been loaded prior to your module.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I use underscore library inside angularjs controllers?</p>\n\n<p>On this post: <a href=\"http://stackoverflow.com/questions/11943130/angularjs-limitto-by-last-2-records\">AngularJS limitTo by last 2 records</a>\n somebody suggested to assign an _ variable to the rootScope so that the library will be available to all the scopes within the app. </p>\n\n<p>But I'm not clear where to do it. I mean should it go on the app module declaration? i.e: </p>\n\n<pre><code>var myapp = angular.module('offersApp', [])\n            .config(['$rootScope', function($rootScope) { }\n</code></pre>\n\n<p>But then where do I load underscore lib? I just have on my index page the ng-app directive and script reference to both the angular-js and underscore libs?</p>\n\n<p><code>index.html</code>:</p>\n\n<pre><code>&lt;head&gt;\n&lt;/head&gt;\n&lt;body ng-app=\"offersApp\"&gt;\n...\n&lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"scripts/vendor/angular.js\"&gt;&lt;/script&gt;\n&lt;script src=\"scripts/vendor/underscore.js\"&gt;&lt;/script&gt;\n...  \n</code></pre>\n\n<p>How do I achieve this?</p>\n",
            "last_activity_date": 1417791267,
            "question_id": 14968297,
            "score": 51,
            "tags": [
                "javascript",
                "angularjs",
                "underscore.js"
            ],
            "title": "Use underscore inside Angular controllers"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Any <code>Error</code> object has a <code>stack</code> member that traps the point at which it was constructed.</p>\n\n<pre><code>var stack = new Error().stack\nconsole.log( stack )\n</code></pre>\n\n<p>or more simply:</p>\n\n<pre><code>console.trace(\"Here I am!\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 235
                },
                {
                    "body": "<p>Now there's dedicated function on console for that:</p>\n\n<pre><code>console.trace()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 89
                },
                {
                    "body": "<p>For what I know printing the complete stack trace in nodejs is not possible, you can just print a \"partial\" stack trace, you can not see from where you came from in the code, just where the Exception occur. That's what Ryan Dahl explains in this youtube video. <a href=\"http://youtu.be/jo_B4LTHi3I\" rel=\"nofollow\">http://youtu.be/jo_B4LTHi3I</a>  at min 56:30 for being precise. Hope this helps</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>With a readily available Node module, it is possible to get full-length stack traces out of Node (albeit with a minor performance penalty):  <a href=\"http://www.mattinsler.com/post/26396305882/announcing-longjohn-long-stack-traces-for-node-js\" rel=\"nofollow\">http://www.mattinsler.com/post/26396305882/announcing-longjohn-long-stack-traces-for-node-js</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use console.trace() for printing stack trace\n    console.trace()</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Does anyone know how to print a stack trace in Node.js?</p>\n",
            "last_activity_date": 1419849359,
            "question_id": 2923858,
            "score": 164,
            "tags": [
                "javascript",
                "stack-trace",
                "node.js",
                "printstacktrace"
            ],
            "title": "How to print a stack trace in Node.js?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><strong>Edit</strong>: As of November 16th, <a href=\"http://code.google.com/apis/analytics/community/gajs_changelog.html#release-2011-11\">the <code>_trackPageLoadTime</code> function has been deprecated and its functionality has been set as a default setting</a>. (Functionally speaking, it has gone from being an opt-in feature to being an opt-out feature.)</p>\n\n<p><code>_setSiteSpeedSampleRate</code> is the new function for setting the sample rate on this feature; its default value is <code>1</code> (as in 1%). To opt out of using this the Site Speed feature, you have to pass a <code>0</code> to this function:</p>\n\n<pre><code>_gaq.push([\"_setSiteSpeedSampleRate\", 0]);\n</code></pre>\n\n<hr>\n\n<p>From the <a href=\"http://www.google.com/support/analyticshelp/bin/answer.py?hl=en&amp;answer=1205784&amp;topic=1120718#setup\">Google Analytics Help Center</a>:</p>\n\n<blockquote>\n  <p>This report currently supports the\n  following browsers: Chrome, Internet\n  Explorer 9 and previous versions of\n  Internet Explorer with the Google\n  Toolbar installed. More specifically,\n  the Site Speed reports require\n  browsers that support the HTML5\n  NavigationTiming interface or have the\n  Google Internet Explorer toolbar\n  installed</p>\n</blockquote>\n\n<p>So, it doesn't implement its own timer, like many prior homeback solutions had, to figure out how long it takes a page to load. Instead, it uses a new HTML5 feature, currently only supported in the above listed cases, called NavigationTiming. </p>\n\n<p><strong>EDIT</strong>: This is now supported in <a href=\"http://hacks.mozilla.org/2011/09/whats-new-for-web-developers-in-firefox-7/\">Firefox 7</a></p>\n\n<p>(Important to note that it doesn't run on every load; instead, it currently samples around 2% of pageviews, though it is configured to <em>try</em> to track all page loads on 10% of visits; as more browsers support the NavigationTiming API, you can expect the total sampled percentage to begin to get closer to 10%.)</p>\n\n<p>This interface is accessed under the DOM object <code>window.performance</code> (or, in earlier versions of Chrome, <code>window.webkitPerformance</code>), using the <code>timing</code> attribute (so, <code>window.performance.timing</code>). The object stores measured values of all of the key page load event times, and Google Analytics subtracts 2 of the more important outer values to judge page load speed. </p>\n\n<p>For a load of Mashable.com without cache, here's an example of what it measures (in Chrome 11):</p>\n\n<pre><code>timing = {\nconnectEnd: 1306677079337,\nconnectStart: 1306677079337,\ndomComplete: 1306677083482,\ndomContentLoadedEventEnd: 1306677081765,\ndomContentLoadedEventStart: 1306677081576,\ndomInteractive: 1306677081576,\ndomLoading: 1306677079478,\ndomainLookupEnd: 1306677079337,\ndomainLookupStart: 1306677079337,\nfetchStart: 1306677079337,\nloadEventEnd: 1306677083483,\nloadEventStart: 1306677083482,\nnavigationStart: 1306677079337,\nredirectEnd: 0,\nredirectStart: 0,\nrequestStart: 1306677079394,\nresponseEnd: 1306677079669,\nresponseStart: 1306677079476,\nsecureConnectionStart: 0,\nunloadEventEnd: 0,\nunloadEventStart: 0\n}\n</code></pre>\n\n<p>Those numbers are epoch milliseconds, or milliseconds since January 1, 1970. I have not seen any documentation as to which values they subtract to generate their values, but from a cursory inspection of the <a href=\"http://google-analytics.com/ga.js\">ga.js</a>, it looks like it is <code>loadEventStart-fetchStart</code>:</p>\n\n<pre><code>h&amp;&amp;h[c]!=k&amp;&amp;h.isValidLoadTime?b=h[c]:e&amp;&amp;e[a]&amp;&amp;(b=e[a].loadEventStart-e[a].fetchStart);\n</code></pre>\n\n<p>For the above sample, that means it would record <strong>4.14 seconds</strong> in the <code>_trackPageLoadTime</code> call. </p>\n\n<h3>From the W3C Navigation Timing spec:</h3>\n\n<blockquote>\n  <p><a href=\"http://www.w3.org/TR/2010/WD-navigation-timing-20101026/#nt-fetch-start\"><strong>fetchStart attribute</strong></a> </p>\n  \n  <p>If the new\n  resource is to be fetched using HTTP\n  GET or equivalent, fetchStart must\n  return the time immediately before the\n  user agent starts checking any\n  relevant application caches.\n  Otherwise, it must return the time\n  when the user agent starts fetching\n  the resource.</p>\n  \n  <p><a href=\"http://www.w3.org/TR/2010/WD-navigation-timing-20101026/#nt-load-start\"><strong>loadEventStart attribute</strong></a></p>\n  \n  <p>This\n  attribute must return the time\n  immediately before the load event of\n  the the current document is fired. It\n  must return zero when the load event\n  is not fired yet.</p>\n</blockquote>\n\n<p>For curious parties, the ordering appears to be as follows:</p>\n\n<blockquote>\n  <p>connectStart, connectEnd,\n  domainLookupStart, domainLookupEnd,\n  fetchStart, navigationStart,\n  requestStart, responseStart,\n  domLoading, responseEnd,\n  domContentLoadedEventStart,\n  domInteractive,\n  domContentLoadedEventEnd, domComplete,\n  loadEventStart, loadEventEnd</p>\n</blockquote>\n\n<p>For the 0 values listed:</p>\n\n<p><code>unloadEventStart</code> and <code>unloadEventStart</code> show the times for the previous page load's unloading (but only if that page has the same origin as the current one.)</p>\n\n<p><code>redirectEnd</code> and <code>redirectStart</code> measure the latency added if there was an HTTP redirect in the page load chain. </p>\n\n<p><code>secureConnectionStart</code> appears to be an optional measurement for measuring the SSL connection time. </p>\n",
                    "is_accepted": true,
                    "score": 171
                }
            ],
            "body": "<p>How does the Google Analytics Site Speed feature, <code>_gaq.push(['_trackPageLoadTime'])</code>, work? Is there any documentation about how it works?</p>\n",
            "last_activity_date": 1324315492,
            "question_id": 6166074,
            "score": 94,
            "tags": [
                "javascript",
                "html",
                "performance",
                "html5",
                "google-analytics"
            ],
            "title": "How does _gaq.push([&#39;_trackPageLoadTime&#39;]) work?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>In order of increasing security / complexity:</p>\n\n<h2>Basic HTTP Auth</h2>\n\n<p>Many API libraries will let you build this in (Piston in Django for example) or you can let your webserver handle it. Both Nginx and Apache can use server directives to secure a site with a simple b64encoded password. It's not the most secure thing in the world but it is at least a username and password!</p>\n\n<p>If you're using Nginx you can add a section to your host config like so:</p>\n\n<pre><code>auth_basic \"Restricted\";\nauth_basic_user_file /path/to/htpasswd;\n</code></pre>\n\n<p>(Put it in your <code>location /</code> block)</p>\n\n<p>Docs: <a href=\"http://wiki.nginx.org/HttpAuthBasicModule\">http://wiki.nginx.org/HttpAuthBasicModule</a></p>\n\n<p>You'll need to get the python script to generate that password and put the output into a file: <a href=\"http://trac.edgewall.org/browser/trunk/contrib/htpasswd.py?format=txt\">http://trac.edgewall.org/browser/trunk/contrib/htpasswd.py?format=txt</a></p>\n\n<p>The location of the file doesn't matter too much as long as Nginx has access to it.</p>\n\n<h2>HTTPS</h2>\n\n<p>Secure the connection from your server to the app, this is the most basic and will prevent man in the middle attacks.</p>\n\n<p>You can do this with Nginx, the docs for it are very comprehensive: <a href=\"http://wiki.nginx.org/HttpSslModule\">http://wiki.nginx.org/HttpSslModule</a></p>\n\n<p>A self-signed certificate for this would be fine (and free!).</p>\n\n<h2>API Keys</h2>\n\n<p>These could be in any format you like but they give you the benefit of revoking access should you need to. Possibly not the perfect solution for you if you're developing both ends of the connection. They tend to be used when you have third parties using the API, eg Github.</p>\n\n<h2>OAuth</h2>\n\n<p>OAuth 2.0 is the one to go with here. While I don't know the underlying workings of the spec it's the defacto standard for most authentication now (Twitter, Facebook, Google, etc.) and there are a ton of libraries and docs to help you get those implemented. That being said, it's usually used to authenticate a user by asking a third party service for the authentication.</p>\n\n<p>Given that you doing the development both ends it would probably be enough to put your API behind Basic HTTP Auth and serve it over HTTPS, especially if you don't want to waste time messing around with OAuth.</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>Here's a different way of thinking about it:</p>\n\n<p>Let's suppose for a moment that you're not using an API. Your user logs into the app, providing some credentials, and you give a cookie or similar token of some sort to the user, which you use to identify that user has logged in. The user then requests a page containing restricted information (or creating/modifying/deleting it), so you check that this token to ensure that the user is allowed to view that information.</p>\n\n<p>Now, it sounds to me that the only thing you're changing here is the way that information is delivered. Instead of delivering the information as rendered HTML, you're returning the information as JSON and rendering it on the client side. Your AJAX requests to the server will carry that same logged-in token as before, so I suggest just checking that token, and restricting the information down to 'just what the user is allowed to know' in the same way.</p>\n\n<p>Your API is now as secure as your login is - if anyone was to know the token necessary for accessing the api, they would also be logged into the site and have access to all the information anyway. Best bit is, if you've already implemented login, you've not really had to do any more work.</p>\n\n<p>The point of systems such as OAuth is to provide this 'logging in' method, usually from a third party application and as a developer. This would potentially be a good solution for an iPhone app or similar, but that's in the future. Nothing wrong with the API accepting more than one authentication method!</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>The answers so far do a great job of explaining, but don't give any actual steps. I came across this blog post that goes into great detail about how to create and manage tokens securely with Node + Passport.</p>\n\n<p><a href=\"http://aleksandrov.ws/2013/09/12/restful-api-with-nodejs-plus-mongodb/\">http://aleksandrov.ws/2013/09/12/restful-api-with-nodejs-plus-mongodb/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I could do with some help on my REST API. I'm writing a Node.js app which is using Express, MongoDB and has Backbone.js on the client side. I've spent the last two days trying to work out all of this and not having much luck. I've already checked out:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/2676241/securing-a-rest-api\">Securing a REST API</a></li>\n<li><a href=\"http://stackoverflow.com/questions/4574868/securing-my-rest-api-with-oauth-while-still-allowing-authentication-via-third-pa\">Securing my REST API with OAuth while still allowing authentication via third party OAuth providers (using DotNetOpenAuth)</a></li>\n<li><a href=\"http://www.thebuzzmedia.com/designing-a-secure-rest-api-without-oauth-authentication/\">http://www.thebuzzmedia.com/designing-a-secure-rest-api-without-oauth-authentication/</a></li>\n<li><a href=\"http://tesoriere.com/2011/10/10/node.js-getting-oauth-up-and-working-using-express.js-and-railway.js/\">http://tesoriere.com/2011/10/10/node.js-getting-oauth-up-and-working-using-express.js-and-railway.js/</a></li>\n</ul>\n\n<p>I want to keep my backend and frontend as separate as possible so I thought about using a carefully designed REST API would be good. My thinking is that if I ever get round to developing an iPhone app (or something else like that), it could use the API to access data.</p>\n\n<p>BUT, I want this to be secure. A user has logged into my web app and I want to ensure my API is secure. I read about OAuth, OAuth 2.0, OpenID, Hmac, hashes etc... I want to avoid using external logging in (Facebook/Twitter/etc) I want the registering and logging in to be on my app/server.</p>\n\n<p>...but I'm still confused here. Maybe it's late at night or my brain is just fried, but I could really do with some steps on what to do here. What are the steps for me to create a secure API?</p>\n\n<p>Any help, any information, any examples, steps or anything would be great. Please help!</p>\n",
            "last_activity_date": 1406488863,
            "question_id": 9119648,
            "score": 55,
            "tags": [
                "javascript",
                "rest",
                "node.js",
                "backbone.js",
                "restful-authentication"
            ],
            "title": "Securing my Node.js app&#39;s REST API?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Scott Hanselman recently blogged about <a href=\"http://www.hanselman.com/blog/ASPNETAjaxScriptCombiningAndMovingScriptResourceaxdsToStaticScripts.aspx\" rel=\"nofollow\">combining and moving scripts to static files</a>, basically using the <a href=\"http://msdn.microsoft.com/en-us/library/system.web.ui.scriptmanager.aspx\" rel=\"nofollow\"><code>ScriptManager</code></a> with <code>CompositeScript</code> references and a <code>Path</code> attribute:</p>\n\n<pre><code>&lt;asp:ScriptManager runat=\"server\"&gt;\n    &lt;CompositeScript path=\"http://www.example.com/1.js\"&gt;\n    \t&lt;Scripts&gt;\n    \t\t&lt;asp:ScriptReference /&gt;\n    \t\t&lt;asp:ScriptReference /&gt;\n    \t\t&lt;!-- etc. --&gt;\n    \t&lt;/Scripts&gt;\n    &lt;/CompositeScript&gt;\n&lt;/asp:ScriptManager&gt;\n</code></pre>\n\n<p>In terms of minifying the static files, you probably have to (and should) use minifying tools at build/deployment time.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I personally think that keeping the files separate during development is invaluable and that during production is when something like this counts. So I modified my deployment script in order to do that above.</p>\n\n<p>I have a section that reads:</p>\n\n<pre><code>&lt;Target Name=\"BeforeDeploy\"&gt;\n\n    \t&lt;ReadLinesFromFile File=\"%(JsFile.Identity)\"&gt;\n    \t\t&lt;Output TaskParameter=\"Lines\" ItemName=\"JsLines\"/&gt;\n    \t&lt;/ReadLinesFromFile&gt;\n\n    \t&lt;WriteLinesToFile File=\"Scripts\\all.js\" Lines=\"@(JsLines)\" Overwrite=\"true\"/&gt;\n\n    \t&lt;Exec Command=\"java -jar tools\\yuicompressor-2.4.2.jar Scripts\\all.js -o Scripts\\all-min.js\"&gt;&lt;/Exec&gt;\n\n    &lt;/Target&gt;\n</code></pre>\n\n<p>And in my master page file I use:</p>\n\n<pre><code>if (HttpContext.Current.IsDebuggingEnabled)\n   {%&gt;\n    &lt;script type=\"text/javascript\" src=\"&lt;%=Url.UrlLoadScript(\"~/Scripts/jquery-1.3.2.js\")%&gt;\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"&lt;%=Url.UrlLoadScript(\"~/Scripts/jquery-ui-1.7.2.min.js\")%&gt;\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"&lt;%=Url.UrlLoadScript(\"~/Scripts/jquery.form.js\")%&gt;\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"&lt;%=Url.UrlLoadScript(\"~/Scripts/jquery.metadata.js\")%&gt;\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"&lt;%=Url.UrlLoadScript(\"~/Scripts/jquery.validate.js\")%&gt;\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"&lt;%=Url.UrlLoadScript(\"~/Scripts/additional-methods.js\")%&gt;\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"&lt;%=Url.UrlLoadScript(\"~/Scripts/form-interaction.js\")%&gt;\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"&lt;%=Url.UrlLoadScript(\"~/Scripts/morevalidation.js\")%&gt;\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"&lt;%=Url.UrlLoadScript(\"~/Scripts/showdown.js\") %&gt;\"&gt;&lt;/script&gt;\n&lt;%\n   }  else  {%&gt; \n  &lt;script type=\"text/javascript\" src=\"&lt;%=Url.UrlLoadScript(\"~/Scripts/all-min.js\")%&gt;\"&gt;&lt;/script&gt;\n&lt;% } %&gt;\n</code></pre>\n\n<p>The build script takes all the files in the  section and combines them all together. Then I use YUI's minifier to get a minified version of the javascript. Because this is served by IIS, I would rather turn on compression in IIS to get gzip compression.\n<strong>** Added **</strong>\nMy deployment script is an MSBuild script. I also use the excellent MSBuild community tasks (<a href=\"http://msbuildtasks.tigris.org/\">http://msbuildtasks.tigris.org/</a>) to help deploy an application.</p>\n\n<p>I'm not going to post my entire script file here, but here are some relevant lines to should demonstrate most of what it does.</p>\n\n<p>The following section will run the build in asp.net compiler to copy the application over to the destination drive. (In a previous step I just run exec net use commands and map a network share drive).</p>\n\n<pre><code>&lt;Target Name=\"Precompile\" DependsOnTargets=\"build;remoteconnect;GetTime\"&gt;\n\n     \t&lt;MakeDir Directories=\"%(WebApplication.SharePath)\\$(buildDate)\" /&gt;\n\n     \t&lt;Message Text=\"Precompiling Website to %(WebApplication.SharePath)\\$(buildDate)\" /&gt;\n\n     \t&lt;AspNetCompiler\n     \t\tVirtualPath=\"/%(WebApplication.VirtualDirectoryPath)\"\n     \t\tPhysicalPath=\"%(WebApplication.PhysicalPath)\"\n     \t\tTargetPath=\"%(WebApplication.SharePath)\\$(buildDate)\"\n     \t\tForce=\"true\"\n    \t\tUpdateable=\"true\"\n    \t\tDebug=\"$(Debug)\"\n     \t\t/&gt;\n     \t&lt;Message Text=\"copying the correct configuration files over\" /&gt;\n\n     \t&lt;Exec Command=\"xcopy $(ConfigurationPath) %(WebApplication.SharePath)\\$(buildDate) /S /E /Y\" /&gt;\n\n     &lt;/Target&gt;\n</code></pre>\n\n<p>After all of the solution projects are copied over I run this:</p>\n\n<pre><code>    &lt;Target Name=\"_deploy\"&gt;\n    \t&lt;Message Text=\"Removing Old Virtual Directory\" /&gt;\n    \t&lt;WebDirectoryDelete\n    \t\tVirtualDirectoryName=\"%(WebApplication.VirtualDirectoryPath)\"\n    \t\tServerName=\"$(IISServer)\"\n    \t\tContinueOnError=\"true\"\n    \t\tUsername=\"$(username)\"\t\n    \t\tHostHeaderName=\"$(HostHeader)\"\n    \t\t/&gt;\n\n    \t&lt;Message Text=\"Creating New Virtual Directory\" /&gt;\n\n    \t&lt;WebDirectoryCreate \n    \t\tVirtualDirectoryName=\"%(WebApplication.VirtualDirectoryPath)\" \n    \t\tVirtualDirectoryPhysicalPath=\"%(WebApplication.IISPath)\\$(buildDate)\"\n    \t\tServerName=\"$(IISServer)\"\n    \t\tEnableDefaultDoc=\"true\"\n    \t\tDefaultDoc=\"%(WebApplication.DefaultDocument)\"\n    \t\tUsername=\"$(username)\"\n    \t\tHostHeaderName=\"$(HostHeader)\"\n    \t\t/&gt;\n&lt;/Target&gt;\n</code></pre>\n\n<p>That should be enough to get you started on automating deployment. I put all this stuff in a separate file called Aspnetdeploy.msbuild. I just msbuild  /t:Target whenever I need to deploy to an environment.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>As others have suggested, you'd be best off creating a static minified build. Alternatively, there's a version of YUICompressor available for .NET here: <a href=\"http://www.codeplex.com/YUICompressor\" rel=\"nofollow\">http://www.codeplex.com/YUICompressor</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Actually there is a much easier way using <a href=\"http://www.microsoft.com/downloads/details.aspx?FamilyId=0AA30AE8-C73B-4BDD-BB1B-FE697256C459&amp;displaylang=en\">Web Deployment Projects</a> (WDP). The WDP will manage the complexities of the <strong>aspnet__compiler</strong> and <strong>aspnet__merge</strong> tool. You can customize the process by a UI inside of Visual Studio.</p>\n\n<p>As for the compressing the js files you can leave all of your js files in place and just compress these files during the build process. So in the WDP you would declare something like this:</p>\n\n<pre><code>&lt;Project&gt;\n   REMOVE CONTENT HERE FOR WEB\n\n&lt;Import \n  Project=\"$(MSBuildExtensionsPath)\\MSBuildCommunityTasks\\MSBuild.Community.Tasks.Targets\" /&gt;\n&lt;!-- Extend the build process --&gt;\n&lt;PropertyGroup&gt;\n  &lt;BuildDependsOn&gt;\n    $(BuildDependsOn);\n    CompressJavascript\n  &lt;/BuildDependsOn&gt;\n&lt;/PropertyGroup&gt;\n\n&lt;Target Name=\"CompressJavascript\"&gt;\n  &lt;ItemGroup&gt;\n    &lt;_JSFilesToCompress Include=\"$(OutputPath)Scripts\\**\\*.js\" /&gt;\n  &lt;/ItemGroup&gt;\n  &lt;Message Text=\"Compresing Javascript files\" Importance=\"high\" /&gt;\n  &lt;JSCompress Files=\"@(_JSFilesToCompress)\" /&gt;\n&lt;/Target&gt;\n&lt;/Project&gt;\n</code></pre>\n\n<p>This uses the JSCompress MSBuild task from the <a href=\"http://msbuildtasks.tigris.org/\">MSBuild Community Tasks</a> which I think is based off of JSMin. </p>\n\n<p>The idea is, leave all of your js files as they are <em>(i.e. debuggable/human-readable)</em>. When you build your WDP it will first copy the js files to the <strong>OutputPath</strong> and then the <strong>CompressJavascript</strong> target is called to minimize the js files. This doesn't modify your original source files, just the ones in the output folder of the WDP project. Then you deploy the files in the WDPs output path, which includes the pre-compilied site. I covered this exact scenario in my book <em>(link below my name)</em>.</p>\n\n<p>You can also let the WDP handle creating the Virtual Directory as well, just check a checkbox and fill in the name of the virtual directory.</p>\n\n<p>For some links on MSBuild:</p>\n\n<ul>\n<li><a href=\"http://msdn.microsoft.com/en-us/magazine/cc163589.aspx\">Inside MSBuild</a></li>\n<li><a href=\"http://brennan.offwhite.net/blog/2006/11/30/7-steps-to-msbuild/\">7 Steps To MSBuild</a></li>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/0k6kkbsd.aspx\">MSDN MSBuild Docs</a></li>\n</ul>\n\n\n\n\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I have written something to handle this for me automatically.  It uses google's closure compiler.  You can read the code here:</p>\n\n<p><a href=\"http://www.picnet.com.au/blogs/Guido/post/2009/12/10/Javascript-runtime-compilation-using-AspNet-and-Googles-Closure-Compiler.aspx\" rel=\"nofollow\">http://www.picnet.com.au/blogs/Guido/post/2009/12/10/Javascript-runtime-compilation-using-AspNet-and-Googles-Closure-Compiler.aspx</a></p>\n\n<p>Thanks </p>\n\n<p>Guido</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use MvcContrib.IncludeHandling.  It:</p>\n\n<ul>\n<li>Supports CSS and JS</li>\n<li>Combines to a single request</li>\n<li>Minifies</li>\n<li>Gzip/Deflate compresses</li>\n<li>Sets up cache headers</li>\n<li>Uses HTMLHelper extension methods to register includes to then combine them at run-time</li>\n<li>Is pluggable via IoC</li>\n</ul>\n\n<p>Under the covers, it uses YUICompressor.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://github.com/petemounce/includecombiner\" rel=\"nofollow\">MvcContrib.IncludeHandling</a> works well for this situation.\nIn the example, I have a Model with a collection of styles (string).\nAlso if I need to add a custom Style/JS to the page then can do that as well.\nThen calling Html.RenderCss combines all the styles/js together in one file and minifies it.</p>\n\n<pre><code>&lt;head&gt;\n&lt;% foreach (var styleSheet in Model.Styles) {%&gt;\n&lt;% Html.IncludeCss(styleSheet)); \n\n&lt;% } %&gt;\n&lt;% Html.IncludeCss(\"~/Scripts/jquery.1.4.2.js\")); \n\n&lt;%= Html.RenderCss() %&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>Same way for javascript.</p>\n\n<pre><code>&lt;%\nHtml.IncludeJs(\"~/scripts/ConsoleLogger.js\");\nHtml.IncludeJs(\"~/scripts/jquery.log.js\");\nHtml.IncludeJs(\"~/Scripts/2010.1.416/jquery.validate.min.js\");\nHtml.IncludeJs(\"~/Scripts/2010.1.416/telerik.calendar.min.js\");\nHtml.IncludeJs(\"~/Scripts/2010.1.416/telerik.datepicker.js\");\nHtml.IncludeJs(\"~/scripts/jquery.ui.datepicker-en-GB.js\");\n%&gt;\n</code></pre>\n\n<p>&lt;%=Html.RenderJs()%></p>\n\n<p>When this gets rendered to the client the output looks like this (minified combined 1 file)</p>\n\n<pre><code>&lt;link rel='stylesheet' type='text/css' href='/include/css/-QdUg9EnX5mpI0e4aKAaOySIbno%40'/&gt;\n</code></pre>\n\n<p>The API also offers a debug flag which when on doesn't minify or combine the scripts when set which is greatly useful.</p>\n\n<p>In a matter of minutes I went from Yslow score of F to B. (24 scripts down to 2)... Awesome!  And a drop of 40kbs.</p>\n\n<p>Obvious downside is the server is doing the compression on the fly.  I think there are options to cache the combined script for a defined period which would quickly alleviate this though.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I know this is an old question, but it came up first as I was doing some minification searches. I would recommend using Gruntjs, <a href=\"http://gruntjs.com\" rel=\"nofollow\">http://gruntjs.com</a>. It is a complete web build tool.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>So I have an ASP.NET MVC app that references a number of javascript files in various places (in the site master and additional references in several views as well).  </p>\n\n<p>I'd like to know if there is an automated way, and if so what is the recommended approach, for compressing and minimizing such references into a single .js file where possible.  Such that this ...</p>\n\n<pre><code>&lt;script src=\"&lt;%= ResolveUrl(\"~\") %&gt;Content/ExtJS/Ext.ux.grid.GridSummary/Ext.ux.grid.GridSummary.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"&lt;%= ResolveUrl(\"~\") %&gt;Content/ExtJS/ext.ux.rating/ext.ux.ratingplugin.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"&lt;%= ResolveUrl(\"~\") %&gt;Content/ExtJS/ext-starslider/ext-starslider.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"&lt;%= ResolveUrl(\"~\") %&gt;Content/ExtJS/ext.ux.dollarfield.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"&lt;%= ResolveUrl(\"~\") %&gt;Content/ExtJS/ext.ux.combobox.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"&lt;%= ResolveUrl(\"~\") %&gt;Content/ExtJS/ext.ux.datepickerplus/ext.ux.datepickerplus-min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"&lt;%= ResolveUrl(\"~\") %&gt;Content/ExtJS/SessionProvider.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"&lt;%= ResolveUrl(\"~\") %&gt;Content/ExtJS/TabCloseMenu.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"&lt;%= ResolveUrl(\"~\") %&gt;Content/ActivityViewer/ActivityForm.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"&lt;%= ResolveUrl(\"~\") %&gt;Content/ActivityViewer/UserForm.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"&lt;%= ResolveUrl(\"~\") %&gt;Content/ActivityViewer/SwappedGrid.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"&lt;%= ResolveUrl(\"~\") %&gt;Content/ActivityViewer/Tree.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>... could be reduced to something like this ...</p>\n\n<pre><code>&lt;script src=\"&lt;%= ResolveUrl(\"~\") %&gt;Content/MyViewPage-min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1385238407,
            "question_id": 1224292,
            "score": 36,
            "tags": [
                "javascript",
                "asp.net-mvc",
                "compression",
                "extjs",
                "minimize"
            ],
            "title": "Best Way to automatically compress and minimize JavaScript files in an ASP.NET MVC app"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>The lookup function returns an array of matching elements.  You could check if the length is zero.  Note the change to only look up the elements once and reuse the results as needed.</p>\n\n<pre><code>var elem = $(\"#btext\" + i);\nif (elem.length != 0) {\n   elem.text(\"Branch \" + i);\n}\n</code></pre>\n\n<p>Also, have you tried just using the text function -- if no element exists, it will do nothing.</p>\n\n<pre><code>$(\"#btext\" + i).text(\"Branch \" + i);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Check the <a href=\"http://docs.jquery.com/Frequently_Asked_Questions#How_do_I_test_whether_an_element_exists.3F\">jQuery FAQ</a>...</p>\n\n<p>You can use the length property of the jQuery collection returned by your selector:</p>\n\n<pre><code>if ( $('#myDiv').length ){}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 202
                },
                {
                    "body": "<p>jquery $() function always return non null value - mean elements matched you selector cretaria. If the element was not found it will return an empty array. \nSo your code will look something like this - </p>\n\n<pre><code>if ($(\"#btext\" + i).length){\n        //alert($(\"#btext\" + i).text());\n    $(\"#btext\" + i).text(\"Branch \" + i);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<pre><code>if ( $('#whatever')[0] ) {...}\n</code></pre>\n\n<p>The jQuery object which is returned by all native jQuery methods is NOT an array, it is an object with many properties; one of them being a \"length\" property. You can also check for size() or get(0) or get() - 'get(0)' works the same as accessing the first element, i.e. $(elem)[0]</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>if (typeof($(\"#btext\" + i)) == 'object'){\n    $(\"#btext\" + i).text(\"Branch \" + i);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>no matter what you selection is the function <code>$()</code> always returns a jQuery object so that cant be used to test. The best way yet (if not the only) is to use the <code>size()</code> function or the native length property as explained above.</p>\n\n<pre><code>if ( $('selector').size() ) {...}                   \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Calling length property on undefined or a null object will cause IE and webkit browsers to fail!</p>\n\n<p>Instead try this:</p>\n\n<pre><code>if($(\"#something\") !== null){\n  // do something\n}\n</code></pre>\n\n<p>or</p>\n\n<pre><code>if($(\"#something\") === null){\n  // don't do something\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -6
                },
                {
                    "body": "<p>(Since I don't seem to have enough reputation to vote down the answer...)</p>\n\n<p><strong>Wolf</strong> wrote:</p>\n\n<blockquote>\n  <p>Calling length property on undefined\n  or a null object will cause IE and\n  webkit browsers to fail!</p>\n  \n  <p>Instead try this:</p>\n\n<pre><code> // NOTE!! THE FOLLOWING IS WRONG; DO NOT USE!  -- EleotleCram\nif($(\"#something\") !== null){\n  // do something\n}\n</code></pre>\n  \n  <p>or</p>\n\n<pre><code> // NOTE!! THE FOLLOWING IS WRONG; DO NOT USE!  -- EleotleCram\nif($(\"#something\") === null){\n  // don't do something\n}\n</code></pre>\n</blockquote>\n\n<p>While it is true that calling the length property on an undefined or null object will cause browsers to fail, the result of jQuery's selectors (the $('...')) will <em>never</em> be null or undefined. Thus the code suggestions make no sense. Use one of the other answers, they make more sense.</p>\n\n<hr>\n\n<p>(Update 2012) Because people look at code and this answer is pretty high up the list: For the last couple of years, I have been using this small plugin:</p>\n\n<pre><code>  jQuery.fn['any'] = function() {\n     return (this.length &gt; 0);\n  };\n</code></pre>\n\n<p>I think <strong>$('div').any()</strong> reads better than <strong>$('div').length</strong>, plus you won't suffer as much from typos: <strong>$('div').ayn()</strong> will give a runtime error, <strong>$('div').lentgh</strong> will silently most likely always be falsy.</p>\n\n<p>__<br/>\nEdits november 2012:</p>\n\n<p>1) Because people tend to look at code and not read what is said around the code, I added two big caveat lector notes to the quoted code of Wolf.<br/>\n2) I added code of the small plugin I use for this situation.</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>use <code>$(\"#selector\").get(0)</code> to check with null like that. get returns the dom element, until then you re dealing with an array, where you need to check the length property. I personally don't like length check for null handling, it confuses me for some reason :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In jQuery 1.4 you get the $.isEmptyObject function, but if you are forced to use an older version of jQ like us poor Drupal developers just steal use this code:</p>\n\n<pre><code>// This is a function similar to the jQuery 1.4 $.isEmptyObject.\nfunction isObjectEmpty(obj) {\n  for ( var name in obj ) {\n    return false;\n  }\n  return true;\n}\n</code></pre>\n\n<p>Use it like:</p>\n\n<pre><code>console.log(isObjectEmpty(the_object)); // Returns true or false.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Using the length property you can do this.</p>\n\n<pre><code>jQuery.fn.exists = function(){return ($(this).length &lt; 0);}\nif ($(selector).exists()) { \n   //do somthing\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>jquery check element not null</p>\n\n<pre><code>var dvElement = $('#dvElement');\n\nif (dvElement.length  &gt; 0) {\n    //do something\n}\nelse {\n    //else do something else\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using jQuery and I want to check the existence of an element in my page. I have written following code, but it's not working:</p>\n\n<pre><code>if($(\"#btext\" + i) != null) {\n    //alert($(\"#btext\" + i).text());\n    $(\"#btext\" + i).text(\"Branch \" + i);\n}\n</code></pre>\n\n<p>How do I check the existence of the element?</p>\n",
            "last_activity_date": 1425491469,
            "question_id": 477667,
            "score": 126,
            "tags": [
                "javascript",
                "jquery",
                "dom",
                "object",
                "null"
            ],
            "title": "How to check null objects in jQuery"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I'm assuming this is for a game or for a fast-responding type of application hence the use of KEYDOWN than KEYPRESS.</p>\n\n<p><strong>Edit</strong>:\nDang! I stand corrected (thank you Crescent Fresh and David): JQuery (or even rather the underlying DOM hosts) do <em>not</em> expose the detail of the WM_KEYDOWN and of other events.  Rather they pre-digest this data and, in the case of keyDown even in JQuery, we get:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/En/DOM/Event.keyCode\" rel=\"nofollow\">event.keyCode</a>   for non-character keys</li>\n<li><a href=\"https://developer.mozilla.org/en/DOM/event.charCode\" rel=\"nofollow\">event.charCode</a>  for character keys</li>\n</ul>\n\n<p>Note that these properties are the UniCode values.<br>\nNote, I wasn't able to find an authorititative reference to that in JQuery docs, but many reputable examples on the net refer to these two properties.</p>\n\n<p>The following code, adapted from some java (not javascript) of mine, is therefore totally wrong...</p>\n\n<p>The following will give you the \"interesting\" parts of the keycode:</p>\n\n<pre><code>  value = e.KeyCode;\n  repeatCount = value &amp; 0xFF;\n  scanCode = (value &gt;&gt; 16) &amp; 0xFF;  // note we take the \"extended bit\" deal w/ it later.\n  wasDown = ((value &amp; 0x4000) != 0);  // indicate key was readily down (auto-repeat)\n  if (scanCode &gt; 127)\n      // deal with extended\n  else\n      // \"regular\" character\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Maybe I didn't understand the question correctly, but can you not use <code>keyup</code> if you want to capture both inputs?</p>\n\n<pre><code>$(\"input\").bind(\"keyup\",function(e){\n    var value = this.value + String.fromCharCode(e.keyCode);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 79
                },
                {
                    "body": "<p>In my experience String.fromCharCode(e.keyCode) is unreliable.  String.fromCharCode expects unicode charcodes as an argument; e.keyCode returns javascript keycodes.  Javascript keycodes and unicode charcodes are <em>not</em> the same thing!  In particular, the numberpad keys return a different keycode from the ordinary number keys (since they are different keys) while the same keycode is returned for both upper and lowercase letters (you pressed the same key in both cases), despite them having different charcodes.  </p>\n\n<p>For example, the ordinary number key 1 generates an event with keycode 49 while numberpad key 1 (with numlock on) generates keycode 97.  Used with String.fromCharCode we get the following:</p>\n\n<ul>\n<li>String.fromCharCode(49) returns \"1\"</li>\n<li>String.fromCharCode(97) returns \"a\"</li>\n</ul>\n\n<p>String.fromCharCode expects unicode charcodes, not javascript keycodes.  The key  generates an event with a keycode of 65, independentant of the case of the character it would generate (there is also a modifier for if the shift key is pressed, etc. in the event).  The character \"a\" has a a unicode charcode of 61 while the character \"A\" has a charcode of 41 (according to, for example, <a href=\"http://www.utf8-chartable.de/\">http://www.utf8-chartable.de/</a>).  However, those are hex values, converting to decimal gives us a charcode of 65 for \"A\" and 97 for \"a\".[1]  This is consistent with what we get from String.fromCharCode for these values.</p>\n\n<p>My own requirement was limited to processing numbers and ordinary letters (accepting or rejecting depending on the position in the string) and letting control characters (F-keys, ctrl-something) through.  Thus I can check for the control characters, if it's not a control character I check against a range and only then do I need to get the actual character.  Given I'm not worried about case (I change all letters to uppercase anyway) and have already limited the range of keycodes, I only have to worry about the numberpad keys.  The following suffices for that:</p>\n\n<pre><code>String.fromCharCode((96 &lt;= key &amp;&amp; key &lt;= 105)? key-48 : key)\n</code></pre>\n\n<p>More generally, a function to reliably return the character from a charcode would be great (maybe as a jQuery plugin), but I don't have time to write it just now.  Sorry.</p>\n\n<p>I'd also mention e.which (if you're using jQuery) which normalises e.keyCode and e.charCode, so that you don't need to worry about what sort of key was pressed.  The problem with combining it with String.fromCharCode remains.</p>\n\n<p>[1] I was confused for a while -. all the docs say that String.fromCharCode expects a unicode charcode, while in practice it seemed to work for ASCII charcodes, but that was I think due to the need to convert to decimal from hex, combined with the fact that ASCII charcodes and unicode decimal charcodes overlap for ordinary latin letters.</p>\n",
                    "is_accepted": false,
                    "score": 98
                },
                {
                    "body": "<p>In response to this problem I just wrote a jQuery plugin: <a href=\"https://github.com/bpeacock/key-to-charCode/\" rel=\"nofollow\">https://github.com/bpeacock/key-to-charCode/</a></p>\n\n<p>It is a bit down and dirty and could be better integrated into jQuery, but it's a start.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Refer this link\n<a href=\"http://jsfiddle.net/YKeye/\" rel=\"nofollow\">Get Keycode from key press and char value for any key code</a></p>\n\n<pre><code>$('input#inp').keyup(function(e){\n   $(this).val(String.fromCharCode(e.keyCode)); \n   $('div#output').html('Keycode : ' + e.keyCode);  \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are relatively few key_codes so I just listed them all out in an array.</p>\n\n<p><strong>Array of key_names indexed by key_code:</strong></p>\n\n<pre><code>// names of known key codes (0-255)\nvar keyboardMap = [\"\",\"\",\"\",\"CANCEL\",\"\",\"\",\"HELP\",\"\",\"BACK_SPACE\",\"TAB\",\"\",\"\",\"CLEAR\",\"ENTER\",\"RETURN\",\"\",\"SHIFT\",\"CONTROL\",\"ALT\",\"PAUSE\",\"CAPS_LOCK\",\"KANA\",\"EISU\",\"JUNJA\",\"FINAL\",\"HANJA\",\"\",\"ESCAPE\",\"CONVERT\",\"NONCONVERT\",\"ACCEPT\",\"MODECHANGE\",\"SPACE\",\"PAGE_UP\",\"PAGE_DOWN\",\"END\",\"HOME\",\"LEFT\",\"UP\",\"RIGHT\",\"DOWN\",\"SELECT\",\"PRINT\",\"EXECUTE\",\"PRINTSCREEN\",\"INSERT\",\"DELETE\",\"\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"COLON\",\"SEMICOLON\",\"LESS_THAN\",\"EQUALS\",\"GREATER_THAN\",\"QUESTION_MARK\",\"AT\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"WIN\",\"\",\"CONTEXT_MENU\",\"\",\"SLEEP\",\"NUMPAD0\",\"NUMPAD1\",\"NUMPAD2\",\"NUMPAD3\",\"NUMPAD4\",\"NUMPAD5\",\"NUMPAD6\",\"NUMPAD7\",\"NUMPAD8\",\"NUMPAD9\",\"MULTIPLY\",\"ADD\",\"SEPARATOR\",\"SUBTRACT\",\"DECIMAL\",\"DIVIDE\",\"F1\",\"F2\",\"F3\",\"F4\",\"F5\",\"F6\",\"F7\",\"F8\",\"F9\",\"F10\",\"F11\",\"F12\",\"F13\",\"F14\",\"F15\",\"F16\",\"F17\",\"F18\",\"F19\",\"F20\",\"F21\",\"F22\",\"F23\",\"F24\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"NUM_LOCK\",\"SCROLL_LOCK\",\"WIN_OEM_FJ_JISHO\",\"WIN_OEM_FJ_MASSHOU\",\"WIN_OEM_FJ_TOUROKU\",\"WIN_OEM_FJ_LOYA\",\"WIN_OEM_FJ_ROYA\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"CIRCUMFLEX\",\"EXCLAMATION\",\"DOUBLE_QUOTE\",\"HASH\",\"DOLLAR\",\"PERCENT\",\"AMPERSAND\",\"UNDERSCORE\",\"OPEN_PAREN\",\"CLOSE_PAREN\",\"ASTERISK\",\"PLUS\",\"PIPE\",\"HYPHEN_MINUS\",\"OPEN_CURLY_BRACKET\",\"CLOSE_CURLY_BRACKET\",\"TILDE\",\"\",\"\",\"\",\"\",\"VOLUME_MUTE\",\"VOLUME_DOWN\",\"VOLUME_UP\",\"\",\"\",\"SEMICOLON\",\"EQUALS\",\"COMMA\",\"MINUS\",\"PERIOD\",\"SLASH\",\"BACK_QUOTE\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"OPEN_BRACKET\",\"BACK_SLASH\",\"CLOSE_BRACKET\",\"QUOTE\",\"\",\"META\",\"ALTGR\",\"\",\"WIN_ICO_HELP\",\"WIN_ICO_00\",\"\",\"WIN_ICO_CLEAR\",\"\",\"\",\"WIN_OEM_RESET\",\"WIN_OEM_JUMP\",\"WIN_OEM_PA1\",\"WIN_OEM_PA2\",\"WIN_OEM_PA3\",\"WIN_OEM_WSCTRL\",\"WIN_OEM_CUSEL\",\"WIN_OEM_ATTN\",\"WIN_OEM_FINISH\",\"WIN_OEM_COPY\",\"WIN_OEM_AUTO\",\"WIN_OEM_ENLW\",\"WIN_OEM_BACKTAB\",\"ATTN\",\"CRSEL\",\"EXSEL\",\"EREOF\",\"PLAY\",\"ZOOM\",\"\",\"PA1\",\"WIN_OEM_CLEAR\",\"\"];\n</code></pre>\n\n<hr>\n\n<p><strong>Simple keyboardMap example showing the registered key codes as you type:</strong></p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var keyCodes = [];\r\n\r\n$(\"#reset\").click(function() {\r\n  keyCodes = [];\r\n  $(\"#in\").val(\"\");\r\n  $(\"#key-codes\").html(\"var keyCodes = [ ];\");\r\n  $(\"#key-names\").html(\"var keyNames = [ ];\");\r\n});\r\n\r\n$(document).keydown(function(e) {\r\n  keyCodes.push(e.which);\r\n  updateOutput();\r\n});\r\n\r\nfunction updateOutput() {\r\n  var kC = \"var keyCodes = [ \";\r\n  var kN = \"var keyNames = [ \";\r\n\r\n  var len = keyCodes.length;\r\n\r\n  for (var i = 0; i &lt; len; i++) {\r\n    kC += keyCodes[i];\r\n    kN += \"'\"+keyboardMap[keyCodes[i]]+\"'\";\r\n    if (i !== (len - 1)) {\r\n      kC += \", \";\r\n      kN += \", \";\r\n    }\r\n  }\r\n\r\n  kC += \" ];\";\r\n  kN += \" ];\";\r\n\r\n  $(\"#key-codes\").html(kC);\r\n  $(\"#key-names\").html(kN);\r\n}\r\n\r\n\r\n\r\nvar keyboardMap = [\r\n  \"\", // [0]\r\n  \"\", // [1]\r\n  \"\", // [2]\r\n  \"CANCEL\", // [3]\r\n  \"\", // [4]\r\n  \"\", // [5]\r\n  \"HELP\", // [6]\r\n  \"\", // [7]\r\n  \"BACK_SPACE\", // [8]\r\n  \"TAB\", // [9]\r\n  \"\", // [10]\r\n  \"\", // [11]\r\n  \"CLEAR\", // [12]\r\n  \"ENTER\", // [13]\r\n  \"ENTER_SPECIAL\", // [14]\r\n  \"\", // [15]\r\n  \"SHIFT\", // [16]\r\n  \"CONTROL\", // [17]\r\n  \"ALT\", // [18]\r\n  \"PAUSE\", // [19]\r\n  \"CAPS_LOCK\", // [20]\r\n  \"KANA\", // [21]\r\n  \"EISU\", // [22]\r\n  \"JUNJA\", // [23]\r\n  \"FINAL\", // [24]\r\n  \"HANJA\", // [25]\r\n  \"\", // [26]\r\n  \"ESCAPE\", // [27]\r\n  \"CONVERT\", // [28]\r\n  \"NONCONVERT\", // [29]\r\n  \"ACCEPT\", // [30]\r\n  \"MODECHANGE\", // [31]\r\n  \"SPACE\", // [32]\r\n  \"PAGE_UP\", // [33]\r\n  \"PAGE_DOWN\", // [34]\r\n  \"END\", // [35]\r\n  \"HOME\", // [36]\r\n  \"LEFT\", // [37]\r\n  \"UP\", // [38]\r\n  \"RIGHT\", // [39]\r\n  \"DOWN\", // [40]\r\n  \"SELECT\", // [41]\r\n  \"PRINT\", // [42]\r\n  \"EXECUTE\", // [43]\r\n  \"PRINTSCREEN\", // [44]\r\n  \"INSERT\", // [45]\r\n  \"DELETE\", // [46]\r\n  \"\", // [47]\r\n  \"0\", // [48]\r\n  \"1\", // [49]\r\n  \"2\", // [50]\r\n  \"3\", // [51]\r\n  \"4\", // [52]\r\n  \"5\", // [53]\r\n  \"6\", // [54]\r\n  \"7\", // [55]\r\n  \"8\", // [56]\r\n  \"9\", // [57]\r\n  \"COLON\", // [58]\r\n  \"SEMICOLON\", // [59]\r\n  \"LESS_THAN\", // [60]\r\n  \"EQUALS\", // [61]\r\n  \"GREATER_THAN\", // [62]\r\n  \"QUESTION_MARK\", // [63]\r\n  \"AT\", // [64]\r\n  \"A\", // [65]\r\n  \"B\", // [66]\r\n  \"C\", // [67]\r\n  \"D\", // [68]\r\n  \"E\", // [69]\r\n  \"F\", // [70]\r\n  \"G\", // [71]\r\n  \"H\", // [72]\r\n  \"I\", // [73]\r\n  \"J\", // [74]\r\n  \"K\", // [75]\r\n  \"L\", // [76]\r\n  \"M\", // [77]\r\n  \"N\", // [78]\r\n  \"O\", // [79]\r\n  \"P\", // [80]\r\n  \"Q\", // [81]\r\n  \"R\", // [82]\r\n  \"S\", // [83]\r\n  \"T\", // [84]\r\n  \"U\", // [85]\r\n  \"V\", // [86]\r\n  \"W\", // [87]\r\n  \"X\", // [88]\r\n  \"Y\", // [89]\r\n  \"Z\", // [90]\r\n  \"WIN\", // [91]\r\n  \"\", // [92]\r\n  \"CONTEXT_MENU\", // [93]\r\n  \"\", // [94]\r\n  \"SLEEP\", // [95]\r\n  \"NUMPAD0\", // [96]\r\n  \"NUMPAD1\", // [97]\r\n  \"NUMPAD2\", // [98]\r\n  \"NUMPAD3\", // [99]\r\n  \"NUMPAD4\", // [100]\r\n  \"NUMPAD5\", // [101]\r\n  \"NUMPAD6\", // [102]\r\n  \"NUMPAD7\", // [103]\r\n  \"NUMPAD8\", // [104]\r\n  \"NUMPAD9\", // [105]\r\n  \"MULTIPLY\", // [106]\r\n  \"ADD\", // [107]\r\n  \"SEPARATOR\", // [108]\r\n  \"SUBTRACT\", // [109]\r\n  \"DECIMAL\", // [110]\r\n  \"DIVIDE\", // [111]\r\n  \"F1\", // [112]\r\n  \"F2\", // [113]\r\n  \"F3\", // [114]\r\n  \"F4\", // [115]\r\n  \"F5\", // [116]\r\n  \"F6\", // [117]\r\n  \"F7\", // [118]\r\n  \"F8\", // [119]\r\n  \"F9\", // [120]\r\n  \"F10\", // [121]\r\n  \"F11\", // [122]\r\n  \"F12\", // [123]\r\n  \"F13\", // [124]\r\n  \"F14\", // [125]\r\n  \"F15\", // [126]\r\n  \"F16\", // [127]\r\n  \"F17\", // [128]\r\n  \"F18\", // [129]\r\n  \"F19\", // [130]\r\n  \"F20\", // [131]\r\n  \"F21\", // [132]\r\n  \"F22\", // [133]\r\n  \"F23\", // [134]\r\n  \"F24\", // [135]\r\n  \"\", // [136]\r\n  \"\", // [137]\r\n  \"\", // [138]\r\n  \"\", // [139]\r\n  \"\", // [140]\r\n  \"\", // [141]\r\n  \"\", // [142]\r\n  \"\", // [143]\r\n  \"NUM_LOCK\", // [144]\r\n  \"SCROLL_LOCK\", // [145]\r\n  \"WIN_OEM_FJ_JISHO\", // [146]\r\n  \"WIN_OEM_FJ_MASSHOU\", // [147]\r\n  \"WIN_OEM_FJ_TOUROKU\", // [148]\r\n  \"WIN_OEM_FJ_LOYA\", // [149]\r\n  \"WIN_OEM_FJ_ROYA\", // [150]\r\n  \"\", // [151]\r\n  \"\", // [152]\r\n  \"\", // [153]\r\n  \"\", // [154]\r\n  \"\", // [155]\r\n  \"\", // [156]\r\n  \"\", // [157]\r\n  \"\", // [158]\r\n  \"\", // [159]\r\n  \"CIRCUMFLEX\", // [160]\r\n  \"EXCLAMATION\", // [161]\r\n  \"DOUBLE_QUOTE\", // [162]\r\n  \"HASH\", // [163]\r\n  \"DOLLAR\", // [164]\r\n  \"PERCENT\", // [165]\r\n  \"AMPERSAND\", // [166]\r\n  \"UNDERSCORE\", // [167]\r\n  \"OPEN_PAREN\", // [168]\r\n  \"CLOSE_PAREN\", // [169]\r\n  \"ASTERISK\", // [170]\r\n  \"PLUS\", // [171]\r\n  \"PIPE\", // [172]\r\n  \"HYPHEN_MINUS\", // [173]\r\n  \"OPEN_CURLY_BRACKET\", // [174]\r\n  \"CLOSE_CURLY_BRACKET\", // [175]\r\n  \"TILDE\", // [176]\r\n  \"\", // [177]\r\n  \"\", // [178]\r\n  \"\", // [179]\r\n  \"\", // [180]\r\n  \"VOLUME_MUTE\", // [181]\r\n  \"VOLUME_DOWN\", // [182]\r\n  \"VOLUME_UP\", // [183]\r\n  \"\", // [184]\r\n  \"\", // [185]\r\n  \"SEMICOLON\", // [186]\r\n  \"EQUALS\", // [187]\r\n  \"COMMA\", // [188]\r\n  \"MINUS\", // [189]\r\n  \"PERIOD\", // [190]\r\n  \"SLASH\", // [191]\r\n  \"BACK_QUOTE\", // [192]\r\n  \"\", // [193]\r\n  \"\", // [194]\r\n  \"\", // [195]\r\n  \"\", // [196]\r\n  \"\", // [197]\r\n  \"\", // [198]\r\n  \"\", // [199]\r\n  \"\", // [200]\r\n  \"\", // [201]\r\n  \"\", // [202]\r\n  \"\", // [203]\r\n  \"\", // [204]\r\n  \"\", // [205]\r\n  \"\", // [206]\r\n  \"\", // [207]\r\n  \"\", // [208]\r\n  \"\", // [209]\r\n  \"\", // [210]\r\n  \"\", // [211]\r\n  \"\", // [212]\r\n  \"\", // [213]\r\n  \"\", // [214]\r\n  \"\", // [215]\r\n  \"\", // [216]\r\n  \"\", // [217]\r\n  \"\", // [218]\r\n  \"OPEN_BRACKET\", // [219]\r\n  \"BACK_SLASH\", // [220]\r\n  \"CLOSE_BRACKET\", // [221]\r\n  \"QUOTE\", // [222]\r\n  \"\", // [223]\r\n  \"META\", // [224]\r\n  \"ALTGR\", // [225]\r\n  \"\", // [226]\r\n  \"WIN_ICO_HELP\", // [227]\r\n  \"WIN_ICO_00\", // [228]\r\n  \"\", // [229]\r\n  \"WIN_ICO_CLEAR\", // [230]\r\n  \"\", // [231]\r\n  \"\", // [232]\r\n  \"WIN_OEM_RESET\", // [233]\r\n  \"WIN_OEM_JUMP\", // [234]\r\n  \"WIN_OEM_PA1\", // [235]\r\n  \"WIN_OEM_PA2\", // [236]\r\n  \"WIN_OEM_PA3\", // [237]\r\n  \"WIN_OEM_WSCTRL\", // [238]\r\n  \"WIN_OEM_CUSEL\", // [239]\r\n  \"WIN_OEM_ATTN\", // [240]\r\n  \"WIN_OEM_FINISH\", // [241]\r\n  \"WIN_OEM_COPY\", // [242]\r\n  \"WIN_OEM_AUTO\", // [243]\r\n  \"WIN_OEM_ENLW\", // [244]\r\n  \"WIN_OEM_BACKTAB\", // [245]\r\n  \"ATTN\", // [246]\r\n  \"CRSEL\", // [247]\r\n  \"EXSEL\", // [248]\r\n  \"EREOF\", // [249]\r\n  \"PLAY\", // [250]\r\n  \"ZOOM\", // [251]\r\n  \"\", // [252]\r\n  \"PA1\", // [253]\r\n  \"WIN_OEM_CLEAR\", // [254]\r\n  \"\" // [255]\r\n];</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>#key-codes,\r\n#key-names {\r\n  font-family: courier, serif;\r\n  font-size: 1.2em;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;input id=\"in\" placeholder=\"Type here...\" /&gt;\r\n&lt;button id=\"reset\"&gt;Reset&lt;/button&gt;\r\n&lt;br/&gt;\r\n&lt;br/&gt;\r\n&lt;div id=\"key-codes\"&gt;var keyCodes = [ ];&lt;/div&gt;\r\n&lt;div id=\"key-names\"&gt;var keyNames = [ ];&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<hr>\n\n<p>Below are some of the key codes worth noting.</p>\n\n<p><strong>Letters A-Z:</strong> (65-90)</p>\n\n<pre><code>keyboardMap[65];  // A\n...\nkeyboardMap[90];  // Z\n</code></pre>\n\n<p><strong>Digits 0-9:</strong> (48-57)</p>\n\n<pre><code>keyboardMap[48];  // 0\n...\nkeyboardMap[57];  // 9\n</code></pre>\n\n<p><strong>Number Pad 0-9:</strong> (96-105)</p>\n\n<pre><code>keyboardMap[96];   // NUMPAD0\n...\nkeyboardMap[105];  // NUMPAD9\n</code></pre>\n\n<p><strong>Enter Key:</strong> (13)</p>\n\n<pre><code>keyboardMap[13];   // ENTER\n</code></pre>\n\n<p><strong>Spacebar Key:</strong> (32)</p>\n\n<pre><code>keyboardMap[32];   // SPACE\n</code></pre>\n\n<p><strong>Arrow Keys:</strong> (37-40)</p>\n\n<pre><code>keyboardMap[37];   // LEFT\nkeyboardMap[38];   // UP\nkeyboardMap[39];   // RIGHT\nkeyboardMap[40];   // DOWN\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>This will help you to understand better..difference between keydown() and keypress() events.</p>\n\n<p><a href=\"http://jsfiddle.net/uiupdates/dhb5zdv7/\" rel=\"nofollow\">DEMO</a></p>\n\n<pre><code>$('#textbox').keydown(function(event){\n        var keycode = (event.keyCode ? event.keyCode : event.which);\n        $('#keydownCode').html(keycode);\n    });\n\n    $('#textbox').keypress(function(event){\n        var keycode = (event.keyCode ? event.keyCode : event.which);\n        $('#keypressCode').html(keycode);\n    });\n</code></pre>\n\n<p>Check for reference tutorial <a href=\"http://www.uiupdates.com/capturing-keycode-find-ascii-value-using-jquery/\" rel=\"nofollow\">click</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>This is what i have now:</p>\n\n<pre><code>$(\"input\").bind(\"keydown\",function(e){\n\n    var value = this.value + String.fromCharCode(e.keyCode);\n}\n</code></pre>\n\n<p>If the e.keyCode may not be an ASCII character (alt, backspace, del, arrows, etc)...\nI would now need to \"trim\" these values from \"value\" somehow (preferably programmatically - not with lookup tables)</p>\n\n<p>I'm using jQuery.<br>\nI must use the \"keydown\" event. \"keyPress\" doesn't activate for certain keys I need to capture (esc, del, backspace, etc...).\nI cannot use setTimeout to get the input's value. (setTimeout(function(){},0) is too slow.)</p>\n\n<p>I'm stuck. Please help.</p>\n",
            "last_activity_date": 1423803035,
            "question_id": 1772179,
            "score": 70,
            "tags": [
                "javascript",
                "jquery",
                "special-characters",
                "keycode"
            ],
            "title": "Get Character value from KeyCode in Javascript...then trim"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>Look into <a href=\"http://developer.yahoo.com/yui/yuitest/\" rel=\"nofollow\">YUITest</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There are many javascript unit test framework out there (jsUnit, scriptaculous, ...) but jsUnit is the only one I know that may be used with an automated build.</p>\n\n<p>If you are doing 'true' unit test you should not need AJAX support. For example, if you are using an RPC ajax framework such as DWR, you can easily write a mock function :</p>\n\n<pre>\n   function mockFunction(someArg, callback) {\n      var result = ...; // some treatments   \n      setTimeout(<br>\n        function() { callback(result); }, \n        300  // some fake latency<br>\n      );\n    }\n</pre>\n\n<p>And yes, JsUnit do handle timeouts : <a href=\"http://googletesting.blogspot.com/2007/03/javascript-simulating-time-in-jsunit.html\">Simulating Time in jsUnit Tests</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Another JS testing framework that can be run with Ant is <a href=\"https://dev.thefrontside.net/crosscheck\" rel=\"nofollow\">CrossCheck</a>. There's an example of running CrossCheck via Ant in the build file for the project.</p>\n\n<p>CrossCheck attempts, with limited success, to emulate a browser, including mock-style implementations of XMLHttpRequest and timeout/interval.</p>\n\n<p>It does not currently handle loading javascript from a web page, though. You have to specify the javascript files that you want to load and test. If you keep all of your JS separated from your HTML, it might work for you.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm just about to start doing Javascript TDD on a new project I am working on. My current plan is to use <a href=\"http://docs.jquery.com/QUnit\">qunit</a> to do the unit testing. While developing the tests can be run by simply refreshing the test page in a browser.</p>\n\n<p>For continuous integration (and ensuring the tests run in all browsers), I will use <a href=\"http://selenium.openqa.org/\">Selenium</a> to automatically load the test harness in each browser, and read the result. These tests will be run on every checkin to source control.</p>\n\n<p>I am also going to use <a href=\"http://siliconforks.com/jscoverage/\">JSCoverage</a> to get code coverage analysis of the tests. This will also be automated with Selenium.</p>\n\n<p>I'm currently in the middle of setting this up. I'll update this answer with more exact details once I have the setup hammered out.</p>\n\n<p><hr /></p>\n\n<p>Testing tools:</p>\n\n<ul>\n<li><a href=\"http://docs.jquery.com/QUnit\">qunit</a></li>\n<li><a href=\"http://siliconforks.com/jscoverage/\">JSCoverage</a></li>\n<li><a href=\"http://selenium.openqa.org/\">Selenium</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>I recently read an article by Bruno using JsUnit and creating a JsMock framework on top of that... very interesting. I'm thinking of using his work to start unit testing my Javascript code.</p>\n\n<p><a href=\"http://brunofigueiredo.com/post/Mock-Javascript-or-How-to-unit-test-Javascript-outside-the-Browser-environment-Part-1.aspx\" rel=\"nofollow\">Mock Javascript or How to unit test Javascript outside the Browser environment</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Im a big fan of <a href=\"http://code.google.com/p/js-test-driver/\" rel=\"nofollow\">js-test-driver</a></p>\n\n<p>It works well in a CI environment and is able to capture actual browsers for cross-browser testing.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I am in agreement that jsunit is kind of dying on the vine.  We just finished up replacing it with YUI Test.</p>\n\n<p>Similar to the example using qUnit, we are running the tests using Selenium.  We are running this test independently from our other selenium tests simply because it does not have the dependencies that the normal UI regression tests have (e.g. deploying the app to a server).</p>\n\n<p>To start out, we have a base javascript file that is included in all of our test html files.  This handles setting up the YUI instance, the test runner, the YUI.Test.Suite object as well as the Test.Case.  It has a methods that can be accessed via Selenium to run the test suite, check to see if the test runner is still running (results are not available until after it's done), and get the test results (we chose JSON format)</p>\n\n<pre><code>var yui_instance; //the YUI instance\nvar runner;  //The YAHOO.Test.Runner\nvar Assert; //an instance of YAHOO.Test.Assert to save coding\nvar testSuite; //The YAHOO.Test.Suite that will get run.\n\n/**\n * Sets the required value for the name property on the given template, creates\n * and returns a new YUI Test.Case object.\n * \n * @param template the template object containing all of the tests\n */\nfunction setupTestCase(template) {\n    template.name = \"jsTestCase\";\n    var test_case = new yui_instance.Test.Case(template);\n    return test_case;\n}\n\n/**\n * Sets up the test suite with a single test case using the given \n * template.\n * \n * @param template the template object containing all of the tests\n */\nfunction setupTestSuite(template) {\n    var test_case = setupTestCase(template);\n    testSuite = new yui_instance.Test.Suite(\"Bond JS Test Suite\");\n    testSuite.add(test_case);\n}\n\n/**\n * Runs the YAHOO.Test.Suite\n */\nfunction runTestSuite() {\n    runner = yui_instance.Test.Runner;\n    Assert = yui_instance.Assert;\n\n    runner.clear();\n    runner.add(testSuite);\n    runner.run();\n}\n\n/**\n * Used to see if the YAHOO.Test.Runner is still running.  The\n * test results are not available until it is done running.\n */\nfunction isRunning() {\n    return runner.isRunning();\n}\n\n/**\n * Gets the results from the YAHOO.Test.Runner\n */\nfunction getTestResults() {\n    return runner.getResults(yui_instance.Test.Format.JSON);\n}\n</code></pre>\n\n<p>As for the selenium side of things, we used a parameterized test.  We run our tests in both IE and FireFox in the data method, parsing the test results into a list of Object arrays with each array containing the browser name, the test file name, the test name, the result (pass, fail or ignore) and the message.</p>\n\n<p>The actual test just asserts the test result.  If it is not equal to \"pass\" then it fails the test with the message returned from the YUI Test result.</p>\n\n<pre><code>    @Parameters\npublic static List&lt;Object[]&gt; data() throws Exception {\n\tyui_test_codebase = \"file:///c://myapppath/yui/tests\";\n\n\tList&lt;Object[]&gt; testResults = new ArrayList&lt;Object[]&gt;();\n\n\tpageNames = new ArrayList&lt;String&gt;();\n\tpageNames.add(\"yuiTest1.html\");\n\tpageNames.add(\"yuiTest2.html\");\n\n\ttestResults.addAll(runJSTestsInBrowser(IE_NOPROXY));\n\ttestResults.addAll(runJSTestsInBrowser(FIREFOX));\n\treturn testResults;\n}\n\n/**\n * Creates a selenium instance for the given browser, and runs each\n * YUI Test page.\n * \n * @param aBrowser\n * @return\n */\nprivate static List&lt;Object[]&gt; runJSTestsInBrowser(Browser aBrowser) {\n\tString yui_test_codebase = \"file:///c://myapppath/yui/tests/\";\n\tString browser_bot = \"this.browserbot.getCurrentWindow()\"\n\tList&lt;Object[]&gt; testResults = new ArrayList&lt;Object[]&gt;();\n\tselenium = new DefaultSelenium(APPLICATION_SERVER, REMOTE_CONTROL_PORT, aBrowser.getCommand(), yui_test_codebase);\n\ttry {\n\t\tselenium.start();\n\n\t\t/*\n\t\t * Run the test here\n\t\t */\n\t\tfor (String page_name : pageNames) {\n\t\t\tselenium.open(yui_test_codebase + page_name);\n\t\t\t//Wait for the YAHOO instance to be available\n\t\t\tselenium.waitForCondition(browser_bot + \".yui_instance != undefined\", \"10000\");\n\t\t\tselenium.getEval(\"dom=runYUITestSuite(\" + browser_bot + \")\");\n\n\t\t\t//Output from the tests is not available until \n\t\t\t//the YAHOO.Test.Runner is done running the suite\n\t\t\tselenium.waitForCondition(\"!\" + browser_bot + \".isRunning()\", \"10000\");\n\t\t\tString output = selenium.getEval(\"dom=getYUITestResults(\" + browser_bot + \")\");\n\n\t\t\tJSONObject results = JSONObject.fromObject(output);\n\t\t\tJSONObject test_case = results.getJSONObject(\"jsTestCase\");\n\t\t\tJSONArray testCasePropertyNames = test_case.names();\n\t\t\tIterator itr = testCasePropertyNames.iterator();\n\n\t\t\t/*\n\t\t\t * From the output, build an array with the following:\n\t\t\t * \tTest file\n\t\t\t * \tTest name\n\t\t\t * \tstatus (result)\n\t\t\t * \tmessage\n\t\t\t */\n\t\t\twhile(itr.hasNext()) {\n\t\t\t\tString name = (String)itr.next();\n\t\t\t\tif(name.startsWith(\"test\")) {\n\t\t\t\t\tJSONObject testResult = test_case.getJSONObject(name);\n\t\t\t\t\tString test_name = testResult.getString(\"name\");\n\t\t\t\t\tString test_result = testResult.getString(\"result\");\n\t\t\t\t\tString test_message = testResult.getString(\"message\");\n\t\t\t\t\tObject[] testResultObject = {aBrowser.getCommand(), page_name, test_name, test_result, test_message};\n\t\t\t\t\ttestResults.add(testResultObject);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t} finally {\n\t\t//if an exception is thrown, this will guarantee that the selenium instance\n\t\t//is shut down properly\n\t\tselenium.stop();\n\t\tselenium = null;\n\t}\n\treturn testResults;\n}\n/**\n * Inspects each test result and fails if the testResult was not \"pass\"\n */\n@Test\npublic void inspectTestResults() {\n\tif(!this.testResult.equalsIgnoreCase(\"pass\")) {\n\t\tfail(String.format(MESSAGE_FORMAT, this.browser, this.pageName, this.testName, this.message));\n\t}\n}\n</code></pre>\n\n<p>I hope this is helpful.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I just <a href=\"http://skaug.no/ingvald/2010/10/javascript-unit-testing.html\" rel=\"nofollow\">got Hudson CI to run JasmineBDD</a> (headless), at least for pure javascript unit testing. </p>\n\n<p>(Hudson running Java via shell, running Envjs, running JasmineBDD.)</p>\n\n<p>I haven't got it to play nice with a big library yet, though, like prototype. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There's a new project that lets you run <a href=\"http://docs.jquery.com/Qunit\" rel=\"nofollow\">qunit</a> tests in a Java environment (like ant) so you can fully integrate your client-side test suite with your other unit tests.</p>\n\n<p><a href=\"http://qunit-test-runner.googlecode.com\" rel=\"nofollow\">http://qunit-test-runner.googlecode.com</a></p>\n\n<p>I've used it to unit test jQuery plugins, <a href=\"http://objx.googlecode.com\" rel=\"nofollow\">objx</a> code, custom OO JavaScript and it works for everything without modification.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The project I'm working on uses <a href=\"http://code.google.com/p/js-test-driver/\" rel=\"nofollow\">Js-Test-Driver</a> hosting <a href=\"http://pivotal.github.com/jasmine/\" rel=\"nofollow\">Jasmine</a> on Chrome 10 with <a href=\"https://github.com/ibolmo/jasmine-jstd-adapter\" rel=\"nofollow\">Jasmine-JSTD-Adapter</a> including making use of <a href=\"http://code.google.com/p/js-test-driver/wiki/CodeCoverage\" rel=\"nofollow\">Code Coverage</a> tests included in JS-Test-Driver. While there are some problems each time we change or update browsers on the <a href=\"http://en.wikipedia.org/wiki/Continuous_integration\" rel=\"nofollow\">CI environment</a> the jasmine tests are running pretty smoothly with only minor issues with ansynchronous tests, but as far as I'm aware these can be worked around using Jasmine Clock but I haven't had a chance to patch them yet. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've published a <a href=\"https://github.com/liammclennan/browsertest\" rel=\"nofollow\">little library</a> for verifying browser-dependent JavaScript tests without having to use a browser. It is a node.js module that uses zombie.js to load the test page and inspect the results. I've wrote about it <a href=\"http://hackingon.net/post/Testing-Browser-dependent-JavaScript.aspx\" rel=\"nofollow\">on my blog</a>. Here is what the automation looks like:</p>\n\n<pre><code>var browsertest = require('../browsertest.js').browsertest;\n\ndescribe('browser tests', function () {\n\nit('should properly report the result of a mocha test page', function (done) {\n    browsertest({\n        url: \"file:///home/liam/work/browser-js-testing/tests.html\",\n        callback: function() { \n            done();\n        }\n    });\n});\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've written an Ant task which uses <a href=\"http://phantomjs.org/\" rel=\"nofollow\">Phantom JS</a>, a headless webkit browser, to run QUnit html test files within an Ant build process. It can also fail the build if any tests fail.</p>\n\n<p><a href=\"https://github.com/philmander/ant-jstestrunner\" rel=\"nofollow\">https://github.com/philmander/ant-jstestrunner</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is a good evaluation of several testing tools.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/300855/looking-for-a-better-javascript-unit-test-tool\">Looking for a better JavaScript unit test tool</a></p>\n\n<p>I personally prefer \n<a href=\"https://code.google.com/p/js-test-driver/\" rel=\"nofollow\">https://code.google.com/p/js-test-driver/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I looked on your question date and back then there were a few good JS testing lib/framework.\nToday you can find much more and in different focus like TDD, BDD, Assetion and with/without runners support.</p>\n\n<p>There are Many players in this game like Mocha, Chai, QUnit, Jasmine, etc... \nYou can find some more information in <a href=\"http://catjs.blogspot.co.il/\" rel=\"nofollow\">this</a> blog about JS/Mobile/web testing...</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to incorporate some JavaScript unit testing into my automated build process.  Currently JSUnit works well with JUnit, but it seems to be abandonware and lacks good support for AJAX, debugging, and timeouts.  </p>\n\n<p>Has anyone had any luck automating (with ANT) a unit testing library such as YUI test, JQuery's QUnit, or jQUnit (<a href=\"http://code.google.com/p/jqunit/\">http://code.google.com/p/jqunit/</a>)?</p>\n\n<p>Note:  I use a custom built AJAX library, so the problem with Dojo's DOH is that it requires you to use their own AJAX function calls and event handlers to work with any AJAX unit testing.</p>\n",
            "last_activity_date": 1405432701,
            "question_id": 96066,
            "score": 49,
            "tags": [
                "javascript",
                "jquery",
                "unit-testing",
                "ant",
                "automation"
            ],
            "title": "Automated Unit Testing with JavaScript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Probably most of what you want is built-in to Javascript in one way or another, or easy to put together with built-in functionality (native Javascript data structures are incredibly flexible). You might like  <a href=\"http://jsclass.jcoglan.com/\" rel=\"nofollow\">JSClass</a>.</p>\n\n<p>As for the functional features of the language, <a href=\"http://documentcloud.github.com/underscore/\" rel=\"nofollow\">underscore.js</a> is where it's at..</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"http://substance.io/#michael/data-js\" rel=\"nofollow\">data.js</a>.</p>\n\n<p>I don't believe it's as feature rich as you want but it has graphs, hashes and collections.</p>\n\n<p>I would take this a lightweight start that you can extend on. </p>\n\n<p>As for what it does offer, it's well written, efficient and documented. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I can help you with the maps with arbitrary keys: my <a href=\"http://code.google.com/p/jshashtable/\" rel=\"nofollow\">jshashtable</a> does this, and there is also a hash set implementation built on top of it.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"http://code.stephenmorley.org/javascript/queues/\" rel=\"nofollow\">Efficient queue</a>.</p>\n\n<p>If you find more of these, could you please add them to <a href=\"https://github.com/bebraw/jswiki/wiki/Data-structures\" rel=\"nofollow\">jswiki</a>. Thanks. :)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can try <a href=\"https://github.com/mauriciosantos/buckets\">Buckets</a> is a very complete javascript data structure library and has everything you need.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I recommend to use Closure Library (especially with closure compiler).</p>\n\n<p>Here you have a library with data structures:\n<a href=\"http://docs.closure-library.googlecode.com/git/namespace_goog_structs.html\" rel=\"nofollow\">http://docs.closure-library.googlecode.com/git/namespace_goog_structs.html</a>\nThe library contains:</p>\n\n<pre><code>goog.structs.AvlTree\ngoog.structs.CircularBuffer\ngoog.structs.Heap\ngoog.structs.InversionMap\ngoog.structs.LinkedMap\ngoog.structs.Map\ngoog.structs.PriorityQueue\ngoog.structs.Set\n</code></pre>\n\n<p>As example you can use unit test:\n<a href=\"http://code.google.com/p/closure-library/source/browse/trunk/closure/goog/structs/priorityqueue_test.html\" rel=\"nofollow\">http://code.google.com/p/closure-library/source/browse/trunk/closure/goog/structs/priorityqueue_test.html</a></p>\n\n<p>If you need to work on arrays, there's also an array lib:\n<a href=\"http://docs.closure-library.googlecode.com/git/local_closure_goog_array_array.js.html\" rel=\"nofollow\">http://docs.closure-library.googlecode.com/git/local_closure_goog_array_array.js.html</a></p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>Is your javascript in an application, or a web page? If it's for an application, why not outsource the data structures to <a href=\"http://redis.io/\" rel=\"nofollow\">Redis</a>? There's a <a href=\"https://github.com/mranney/node_redis\" rel=\"nofollow\">client for nodejs</a></p>\n\n<blockquote>\n  <p>Redis is an open source, advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Adding a link to a custom javascript library which provides Priority Queues, Tries, Basic Graph processing and other implementation, for future reference of the visitors to this thread . Check out <a href=\"https://github.com/monmohan/dsjslib\" rel=\"nofollow\">dsjslib</a> </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'd like to ask for recommendation of JavaScript library/libraries that supply an implementation of some basic data structures such as a priority queue, map with arbitrary keys, tries, graphs, etc. along with some algorithms that operate on them.</p>\n\n<p>I'm mostly interested in: </p>\n\n<ul>\n<li>The set of features covered,</li>\n<li>Flexibility of the solution - this mostly applies to graphs. For example do I have to use a supplied graph implementation,</li>\n<li>Use of functional features of the language - again it sometimes gives greater flexibility,</li>\n<li>Performance of the implementation</li>\n</ul>\n\n<p><strong>EDIT</strong></p>\n\n<p>Ok, I'd like to point out that I'm aware that it's possible to implement using js the following data structures:</p>\n\n<ul>\n<li>A map, if key values are either strings or numbers,</li>\n<li>A set, (using a map implementation),</li>\n<li>A queue, although as was pointed out below, it's inefficient on some browsers,</li>\n</ul>\n\n<p>At the moment I'm mostly interested in priority queues (not to confuse with regular queues), graph implementations that aren't very intrusive as to the format of the input graph. For example they could use callbacks to traverse the structure of the graph rather than access some concrete properties with fixed names.</p>\n",
            "last_activity_date": 1416847960,
            "question_id": 5909452,
            "score": 48,
            "tags": [
                "javascript",
                "algorithm",
                "data-structures",
                "javascript-library"
            ],
            "title": "javascript data structures library"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>If you want to apply a selector to the context provided by an existing jQuery set, try the <a href=\"http://api.jquery.com/find/\">find() function</a>:</p>\n\n<pre><code>element.find(\"&gt;:first-child\").toggleClass(\"redClass\");\n</code></pre>\n\n<p>J\u00f8rn Schou-Rode noted that you probably only want to find the first <em>direct descendant</em> of the context element, hence <a href=\"http://api.jquery.com/child-selector/\">the child selector</a> (>). <a href=\"http://stackoverflow.com/questions/2275702/jquery-first-child-of-this/2275728#2275728\">He also points out</a> that you could just as well use the <a href=\"http://api.jquery.com/children\">children() function</a>, which is very similar to find() but only searches one level deep in the hierarchy (which is all you need...): </p>\n\n<pre><code>element.children(\":first\").toggleClass(\"redClass\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 278
                },
                {
                    "body": "<p>Have you tried</p>\n\n<pre><code>$(\":first-child\", element).toggleClass(\"redClass\");\n</code></pre>\n\n<p>I think you want to set your element as a context for your search. There might be a better way to do this which some other jQuery guru will hop in here and throw out at you :)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Use the <a href=\"http://api.jquery.com/children/\"><code>children</code> function</a> with the <a href=\"http://api.jquery.com/first-selector/\"><code>:first</code> selector</a> to get the <em>single</em> first child of <code>element</code>:</p>\n\n<pre><code>element.children(\":first\").toggleClass(\"redClass\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>I've added <a href=\"http://jsperf.com/jquery-first-child-fetch\" title=\"jQuery first child fetch\">jsperf</a> test to see the speed difference for different approaches to get the first child (total 1000+ children)</p>\n\n<p>given, <code>notif = $('#foo')</code></p>\n\n<p><em>jQuery ways:</em></p>\n\n<ol>\n<li><code>$(\":first-child\", notif)</code> - 4,304 ops/sec - fastest</li>\n<li><code>notif.children(\":first\")</code> - 653 ops/sec - 85% slower</li>\n<li><code>notif.children()[0]</code> - 1,416 ops/sec - 67% slower</li>\n</ol>\n\n<p><em>Native ways:</em></p>\n\n<ol>\n<li>JavaScript native' <code>ele.firstChild</code> - <strong>4,934,323</strong> ops/sec (all the above approaches are 100% slower compared to <code>firstChild</code>)</li>\n<li>Native DOM ele from jQery: <code>notif[0].firstChild</code> - <strong>4,913,658</strong> ops/sec</li>\n</ol>\n\n<p>So, first 3 jQuery approaches are not recommended, at least for first-child (I doubt that would be the case with many other too). If you have a jQuery object and need to get the first-child, then <strong>get the native DOM element</strong> from the jQuery object, using array reference <code>[0]</code> <em>(recommended)</em> or <code>.get(0)</code> and use the <code>ele.firstChild</code>. This gives the same identical results as regular JavaScript usage.</p>\n\n<p><em>all tests are done in Chrome Canary build v15.0.854.0</em></p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<pre><code>element.firstChild\n</code></pre>\n\n<p>from mrCoder</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>please use it like this\nfirst thing give a class name to tag p like \"myp\"</p>\n\n<p>then on use the following code</p>\n\n<pre><code>$(document).ready(function() {\n    $(\".myp\").click(function() {\n        $(this).children(\":first\").toggleClass(\"classname\"); // this will access the span.\n    })\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want immediate first child you need</p>\n\n<pre><code>    $(element).first();\n</code></pre>\n\n<p>If you want particular first element in the dom from your element then use below</p>\n\n<pre><code>    var spanElement = $(elementId).find(\".redClass :first\");\n    $(spanElement).addClass(\"yourClassHere\");\n</code></pre>\n\n<p>try out : <a href=\"http://jsfiddle.net/vgGbc/2/\" rel=\"nofollow\">http://jsfiddle.net/vgGbc/2/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've just written a plugin which uses <code>.firstElementChild</code> if possible, and falls back to iterating over each individual node if necessary:</p>\n\n<pre><code>(function ($) {\n    var useElementChild = ('firstElementChild' in document.createElement('div'));\n\n    $.fn.firstChild = function () {\n        return this.map(function() {\n            if (useElementChild) {\n                return this.firstElementChild;\n            } else {\n                var node = this.firstChild;\n                while (node) {\n                    if (node.type === 1) {\n                        break;\n                    }\n                    node = node.nextSibling;\n                }\n                return node;\n            }\n        });\n    };\n})(jQuery);\n</code></pre>\n\n<p>It's not as fast as a pure DOM solution, but in <a href=\"http://jsperf.com/jquery-first-child-fetch/6\" rel=\"nofollow\">jsperf tests</a> under Chrome 24 it was a couple of orders of magnitude faster than any other jQuery selector-based method.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm trying to pass \"this\" from a clicked span to a jQuery function that can then execute jQuery on that clicked element's first child. Can't seem to get it right...</p>\n\n<pre><code>&lt;p onclick=\"toggleSection($(this));\"&gt;&lt;span class=\"redClass\"&gt;&lt;/span&gt;&lt;/p&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>function toggleSection(element) {\n  element.toggleClass(\"redClass\");\n}\n</code></pre>\n\n<p>How do I reference the :first-child of element?</p>\n",
            "last_activity_date": 1384506516,
            "question_id": 2275702,
            "score": 173,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors",
                "css-selectors"
            ],
            "title": "jQuery first child of &quot;this&quot;"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Stick some of the anon functions into global scope functions (or your own \"namespace\" object), especially the re-used functions, and it begins to look less like what you posted. Kind of like what you linked to.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Well, for one, having a good IDE that understands javascript can help tremendously, even if just to identify matching demarcations (braces, parens, etc).</p>\n\n<p>If your code starts to really get that complex, consider making your own static object to organize the mess - you don't have to work so hard to keep everything anonymous.</p>\n\n<pre><code>var aCustomObject = {\n    container: $(\"#inputContainer\"),\n    initialize: function()\n    {\n    \tfor(var i=0; i &lt; 5; i++)\n    \t{\n    \t\t$(\"&lt;input/&gt;\").changed( aCustomObject.changeHandler );\n    \t}\n    },\n    changeHandler: function( event )\n    {\n    \t$.ajax( {success: aCustomObject.ajaxSuccessHandler} );\n    },\n    ajaxSuccessHandler: function( data )\n    {\n    \t$.each( aCustomObject.container.children(), aCustomObject.updateBindings )\n    },\n    updateBindings: function( j, w )\n    {\n    \t$(w).unbind().changed( function(){} );\n    }\n}\naCustomObject.initialize();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>So far, I do it like this:</p>\n\n<pre><code>// initial description of this code block\n$(function() {        \n    var container = $(\"#inputContainer\");\n\n    for(var i=0; i &lt; 5; i++) {\n        $(\"&lt;input/&gt;\").changed(inputChanged).appendTo(container);\n    }; \n\n    function inputChanged() {\n        $.ajax({\n            success: inputChanged_onSuccess\n        });\n     } \n\n     function inputChanged_onSuccess(data) {\n        $.each(container.children(), function(j,w) {\n          $(w).unbind().changed(function() {\n             //replace the insanity with another refactored function\n          });\n        });\n      }\n});\n</code></pre>\n\n<p>In JavaScript, functions are first-class objects and can thus be used as variables.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>In my opinion the method described by BaileyP is what I use to start off with then I normally abstract everything into more re-usable chunks, especially when some functionality expands to the point where it's easier to abstract it into a plugin then have it specific to one site.</p>\n\n<p>As long as you keep the large blocks of code in a seperate file and coded nicely you can then end up with some really clean syntax.</p>\n\n<pre><code>// Page specific code\njQuery(function() {\n    for(var i = 0; i &lt; 5; i++) {\n         $(\"&lt;input/&gt;\").bindWithServer(\"#inputContainer\");\n    }\n});\n\n// Nicely abstracted code\njQuery.fn.bindWithServer = function(container) {\n     this.change(function() {\n             jQuery.ajax({\n                 url: 'http://example.com/',\n                 success: function() { jQuery(container).unbindChildren(); }\n             });\n     });\n}\njQuery.fn.unbindChildren = function() {\n    this.children().each(function() {\n        jQuery(this).unbind().change(function() {});\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Just want to add to what was mentioned previously that this:</p>\n\n<pre><code>$.each(container.children(), function(j,w) {\n    $(w).unbind().change(function() { ... });\n});\n</code></pre>\n\n<p>can be optimized to:</p>\n\n<pre><code>container.children().unbind().change(function() { ... });\n</code></pre>\n\n<p>It's all about chaining, a great way to simplify your code.</p>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>I described my approach <a href=\"http://stackoverflow.com/questions/247209/javascript-how-do-you-organize-this-mess#284700\">in your other post</a>. Short form:</p>\n\n<ul>\n<li>do not mix javascript and HTML</li>\n<li>use classes (basically start to see your application as a collection of widgets)</li>\n<li>only have a single $(document).ready(...) block</li>\n<li>send jQuery instances into your classes (instead of using plugins)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Somebody wrote a post on the similar topic.</p>\n\n<p><a href=\"http://weblogs.asp.net/stevewellens/archive/2010/01/25/jquery-code-does-not-have-to-be-ugly.aspx\" rel=\"nofollow\">jQuery Code Does not have to be Ugly</a></p>\n\n<p>For instance, the author, Steve Wellens, suggests to not use anonymous functions, as it makes code harder to read. Instead, push the function reference into the jQuery methods, like so:</p>\n\n<pre><code>$(document).ready(DocReady);\n\nfunction DocReady()\n{       \n    AssignClickToToggleButtons();\n    ColorCodeTextBoxes();\n}\n</code></pre>\n\n<p>Another takeaway from the article is to assign a jQuery object to a concrete variable, which makes the code look cleaner, less dependent on the actual jQuery object, and easier to tell what a certain line of code is doing:</p>\n\n<pre><code>function ColorCodeTextBoxes()\n{\n    var TextBoxes = $(\":text.DataEntry\");\n\n    TextBoxes.each(function()\n    {\n        if (this.value == \"\")\n            this.style.backgroundColor = \"yellow\";\n        else\n            this.style.backgroundColor = \"White\";\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use <a href=\"http://coffeescript.com/\" rel=\"nofollow\">http://coffeescript.com/</a> ;)</p>\n\n<pre>\n$ ->\n  container = $ '#inputContainer'\n  for i in [0...5]\n    $('&lt;input/&gt;').change ->\n      $.ajax success: (data) ->\n        for w in container.children()\n          $(w).unbind().change ->\n            alert 'duh'\n</pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I've been struggling lately with understanding the best way to organize jQuery code. I asked another question earlier and I don't think I was specific enough (<a href=\"http://stackoverflow.com/questions/247209/javascript-how-do-you-organize-this-mess\">found in this question here</a>).</p>\n\n<p>My problem is that the richer you make an application, the quicker your client side gets out of control. Consider this situation...</p>\n\n<pre><code>//Let's start some jQuery\n$(function() {        \n    var container = $(\"#inputContainer\");\n\n    //Okay let's list text fields that can be updated\n    for(var i=0; i &lt; 5; i++) {\n\n        //okay let's add an event for when a field changes\n        $(\"&lt;input/&gt;\").change(function() {\n\n            //okay something changed, let's update the server\n            $.ajax({\n                success:function(data) {\n\n                    //Okay - no problem from the server... let's update\n                    //the bindings on our input fields\n                    $.each(container.children(), function(j,w) {\n\n                        //YIKES!! We're deep in here now!!\n                        $(w).unbind().change(function() {\n\n                            //Then insanity starts...\n\n                        }); // end some function\n\n                    }); //end some loop\n\n                } // what was this again?\n\n            }); //ending something... not sure anymore\n\n        }).appendTo(container); //input added to the page... logic WAY split apart\n\n    }; //the first loop - whew! almost out!\n\n});  //The start of the code!!\n</code></pre>\n\n<p>Now this situation isn't too far from impossible. I'm not saying this is the right way to do it, but it's not uncommon to find yourself several levels down into a jQuery command and starting to wonder how much more logic can add before the screen begins to melt.</p>\n\n<p><strong>My question is how are people managing this or organizing to limit the complexity of their code?</strong></p>\n\n<p><em><a href=\"http://stackoverflow.com/questions/247209/javascript-how-do-you-organize-this-mess#247382\">I listed how I'm doing it in my other post</a>...</em></p>\n",
            "last_activity_date": 1399689846,
            "question_id": 251814,
            "score": 46,
            "tags": [
                "javascript",
                "jquery",
                "code-organization"
            ],
            "title": "jQuery and &quot;Organized Code&quot;"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<h2>TL;DR</h2>\n\n<h3>DNode</h3>\n\n<ul>\n<li>provides RMI;</li>\n<li>remote functions can accept callbacks as arguments;</li>\n<li>which is nice, since it is fully asynchronous;</li>\n<li>runs stand-alone or through an existing http server;</li>\n<li>can have browser and Node clients;</li>\n<li>supports middleware, just like <code>connect</code>;</li>\n<li>has been around longer than NowJS.</li>\n</ul>\n\n<h3>NowJS</h3>\n\n<ul>\n<li>goes beyond just RMI and implements a \"shared scope\" API. <a href=\"http://www.quora.com/Dropbox/Why-is-Dropbox-more-popular-than-other-programs-with-similar-functionality/answer/Michael-Wolfe\">It's like \nDropbox</a>, only with variables and functions instead of files;</li>\n<li>remote functions <strong>also accept callbacks</strong> (<a href=\"http://stackoverflow.com/questions/5317282/what-is-the-difference-between-dnode-and-nowjs/5332557#5332557\">thanks to Sridatta and Eric from NowJS \nfor the clarification</a>);</li>\n<li>depends on a listening http server to work;</li>\n<li>can only have browser clients;</li>\n<li>became public very recently;</li>\n<li>is somewhat buggy right now.</li>\n</ul>\n\n<h3>Conclusion</h3>\n\n<p>NowJS is more of a toy right now -- but keep a watch as it matures. For \nserious stuff, maybe go with DNode. For a more detailed review of these \nlibraries, read along.</p>\n\n<h2>DNode</h2>\n\n<p>DNode provides a Remote Method Invocation framework. Both the client and server \ncan expose functions to each other. </p>\n\n<pre><code>// On the server\n\nvar server = DNode(function () {\n    this.echo = function (message) {\n        console.log(message)\n    }\n}).listen(9999)\n\n// On the client\n\ndnode.connect(9999, function (server) {\n    server.echo('Hello, world!')\n})\n</code></pre>\n\n<p>The function that is passed to <code>DNode()</code> is a handler not unlike the one passed to\n<code>http.createServer</code>. It has two parameters: <code>client</code> can be used to access the \nfunctions exported by the client and <code>connection</code> can be used to handle \nconnection-related events:</p>\n\n<pre><code>// On the server\n\nvar server = DNode(function (client, connection) {\n    this.echo = function (message) {\n        console.log(message)\n        connection.on('end', function () {\n            console.log('The connection %s ended.', conn.id)\n        })\n    }       \n}).listen(9999)\n</code></pre>\n\n<p>The exported methods can be passed anything, including functions. They are properly \nwrapped as proxies by DNode and can be called back at the other endpoint. This is\nfundamental: DNode is fully asynchronous; it does not block while waiting \nfor a remote method to return:</p>\n\n<pre><code>// A contrived example, of course.\n// On the server\n\nvar server = DNode(function (client) {\n    this.echo = function (message) {\n        console.log(message)\n        return 'Hello you too.'\n    }\n}).listen(9999)\n\n// On the client\n\ndnode.connect(9999, function (server) {\n    var ret = server.echo('Hello, world!')\n    console.log(ret) // This won't work\n})\n</code></pre>\n\n<p>Callbacks must be passed around in order to receive responses from the other\nendpoint. Complicated conversations can become unreadable quite fast. <a href=\"http://stackoverflow.com/questions/5265743/node-js-what-techniques-are-there-for-writing-clean-simple-callback-code\">This \nquestion</a> discusses possible solutions for this problem.</p>\n\n<pre><code>// On the server\n\nvar server = DNode(function (client, callback) {\n    this.echo = function (message, callback) {\n        console.log(message)\n        callback('Hello you too.')\n    }\n\n    this.hello = function (callback) {\n        callback('Hello, world!')\n    }\n}).listen(9999)\n\n// On the client\n\ndnode.connect(9999, function (server) {\n    server.echo(\"I can't have enough nesting with DNode!\", function (response) {\n        console.log(response)\n        server.hello(function (greeting) {\n            console.log(greeting)\n        })\n    })\n})\n</code></pre>\n\n<p>The DNode client can be a script running inside a Node instance or can be \nembedded inside a webpage. In this case, it will only connect to the server that\nserved the webpage. <a href=\"http://senchalabs.github.com/connect/\">Connect</a> is of great assistance in this case. This scenario was tested with all modern browsers and with Internet Explorer 5.5 and 7.</p>\n\n<p>DNode was started less than a year ago, on June 2010. It's as mature as a Node\nlibrary can be. In my tests, I found no obvious issues.</p>\n\n<h2>NowJS</h2>\n\n<p>NowJS provides a kind of magic API that borders on being cute. The server has an \n<code>everyone.now</code> scope. Everything that is put inside <code>everyone.now</code> becomes \nvisible to every client through their <code>now</code> scope.</p>\n\n<p>This code, on the server, will share an <code>echo</code> function with every client that\nwrites a message to the server console:</p>\n\n<pre><code>// Server-side:\n\neveryone.now.echo = function (message) {\n    console.log(message)\n}\n\n// So, on the client, one can write:\n\nnow.echo('This will be printed on the server console.')\n</code></pre>\n\n<p>When a server-side \"shared\" function runs, <code>this</code> will have a <code>now</code> attribute\nthat is specific to the client that made that call.</p>\n\n<pre><code>// Client-side\n\nnow.receiveResponse = function (response) {\n    console.log('The server said: %s')\n}\n\n// We just touched \"now\" above and it must be synchronized \n// with the server. Will things happen as we expect? Since \n// the code is not multithreaded and NowJS talks through TCP,\n// the synchronizing message will get to the server first.\n// I still feel nervous about it, though.\n\nnow.echo('This will be printed on the server console.')\n\n// Server-side:\n\neveryone.now.echo = function (message) {\n    console.log(message)\n    this.now.receiveResponse('Thank you for using the \"echo\" service.')\n}\n</code></pre>\n\n<p>Functions in NowJS can have return values. To get them, a callback must be \npassed:</p>\n\n<pre><code>// On the client\n\nnow.twice(10, function (r) { console.log(r) }\n\n// On the server\n\neveryone.now.twice = function(n) {\n    return 2 * n\n}\n</code></pre>\n\n<p>This has an implication if you want to pass a callback as an honest argument (not \nto collect a return value) -- one must always pass the return value collector, or \nNowJS may get confused. According to the developers, this way of retrieving the \nreturn value with an implicit callback will probably change in the future:</p>\n\n<pre><code>// On the client\n\nnow.crunchSomeNumbers('compute-primes', \n\n    /* This will be called when our prime numbers are ready to be used. */\n\n    function (data) { /* process the data */ }, \n\n    /* This will be called when the server function returns. Even if we\n    didn't care about our place in the queue, we'd have to add at least\n    an empty function. */\n\n    function (queueLength) { alert('You are number ' + queueLength + ' on the queue.') }\n)\n\n// On the server\n\neveryone.now.crunchSomeNumbers = function(task, dataCallback) {\n    superComputer.enqueueTask(task, dataCallback)\n    return superComputer.queueLength\n}\n</code></pre>\n\n<p>And this is it for the NowJS API. Well, actually there are 3 more functions that \ncan be used to detect client connection and disconnection. I don't know why they \ndidn't expose these features using <code>EventEmitter</code>, though.</p>\n\n<p>Unlike DNode, NowJS requires that the client be a script running inside a web browser.\nThe page containing the script must be served by the same Node that is running \nthe server.</p>\n\n<p>On the server side, NowJS also needs an http server listening. It must be passed\nwhen initializing NowJS:</p>\n\n<pre><code>var server = http.createServer(function (req, response) {\n    fs.readFile(__dirname + '/now-client.html', function (err, data) {\n        response.writeHead(200, {'Content-Type':'text/html'})  \n        response.write(data)\n        response.end()\n    })\n})\nserver.listen(8080)\nvar everyone = now.initialize(server)\n</code></pre>\n\n<p>NowJS first commit is from a couple weeks ago (Mar 2011). As such, expect it to \nbe buggy. I found <a href=\"https://github.com/Flotype/now/pull/9\">issues</a> myself while writing this answer. Also expect its \nAPI to change a lot. </p>\n\n<p>On the positive side, the developers are very accessible -- Eric even guided me \nto making callbacks work. The source code is not documented, but is fortunately \nsimple and short and the user guide and examples are enough to get one started.</p>\n",
                    "is_accepted": true,
                    "score": 61
                },
                {
                    "body": "<p>NowJS team member here. Correction to andref's answer:</p>\n\n<p>NowJS <strong>fully supports \"Remote Method Invocation\"</strong>. You can pass functions as arguments in remote calls and you can have functions as return values as well. </p>\n\n<p>These functions are wrapped by NowJS just as they are in DNode so that they are executed on the machine on which the function was defined. This makes it easy to expose new functions to the remote end, just like in DNode.</p>\n\n<p>P.S. Additionally, I don't know if andref meant to imply that remote calls are only asynchronous on DNode. Remote calls are also async on NowJS. They do not block your code.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Haven't tried Dnode so my answer is not a comparison. But I would like to put forth few experiences using nowjs.</p>\n\n<p>Nowjs is based on <a href=\"http://socket.io\" rel=\"nofollow\">socket.io</a> which is quite buggy. I frequently experience session time-outs, disconnects and <code>now.ready</code> event firing multiple times in a short duration. Check out <a href=\"https://github.com/Flotype/now/issues/194\" rel=\"nofollow\">this issue</a> on nowjs github page.</p>\n\n<p>Also I found using websockets unviable on certain platforms, however this can be circumvented by explicitly disabling websockets.</p>\n\n<p>I had planned creating a production app using nowjs but it seems its not mature enough to be relied upon. I will try dnode if it serves my purpose, else I will switch to plain-old <code>express</code>.</p>\n\n<h3>Update:</h3>\n\n<p>Nowjs <a href=\"https://github.com/Flotype/now/issues/190\" rel=\"nofollow\">seems</a> to be scrapped. No commits since 8 months.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How do the two compare to each other?</p>\n",
            "last_activity_date": 1356685008,
            "question_id": 5317282,
            "score": 43,
            "tags": [
                "javascript",
                "node.js",
                "nowjs",
                "dnode"
            ],
            "title": "What is the difference between dnode and nowjs?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Given the interface you're after, I think you'll want FireQuery: <a href=\"http://firequery.binaryage.com/\" rel=\"nofollow\">http://firequery.binaryage.com/</a> </p>\n\n<p>It's a Firebug addon <em>specifically</em> for areas like this (a jQuery specific addon, strong in data/events).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>FireQuery is the most convenient, but if you need to do it manually, you can get a reference to the click handling function with <code>$(element).data('events').click[0].handler</code> (of course it is not necessarily 0 if there are multiple click handlers). From there it is up to your favorite debugger to locate that function in the code. (Using named functions helps. Firebug can sometimes locate anonymous functions, but more often not. It will show the body of the function though, if you hover above it with the mouse.)</p>\n\n<p><strong>Update</strong> this is how data is shown with FireQuery:</p>\n\n<p>HTML view:</p>\n\n<p><img src=\"http://i.stack.imgur.com/IAW0Y.png\" alt=\"jQuery data in Firebug HTML view\"></p>\n\n<p>console:</p>\n\n<p><img src=\"http://i.stack.imgur.com/1TZUD.png\" alt=\"jQuery data in Firebug console\"></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Well eventbug will show you all of the event handlers for an element,\n<a href=\"http://getfirebug.com/releases/eventbug\" rel=\"nofollow\">http://getfirebug.com/releases/eventbug</a>\nbut often the handler is some generic code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>Using <a href=\"http://getfirebug.com/\">Firebug</a>, <a href=\"http://firequery.binaryage.com/\">FireQuery</a> and <a href=\"http://jsfiddle.net/gnarf/qpJWp/\">this fiddle</a>:</h2>\n\n<p>Hitting Cmd+Shift+C (Inspect Element) and clicking on <em>the button</em> reveals this:\n<img src=\"http://i.stack.imgur.com/LAtHL.png\" alt=\"Screenshot 1\"></p>\n\n<p>Clicking on the events <code>Object {click= }</code> reveals this (after expanding some info)</p>\n\n<p><img src=\"http://i.stack.imgur.com/VX2gI.png\" alt=\"Screenshot 2\"></p>\n\n<p>And clicking on the <code>function()</code> reveals this:<br>\n<img src=\"http://i.stack.imgur.com/GBWQ4.png\" alt=\"Screenshot 3\"></p>\n\n<p>Which should be the code you are looking for, right?</p>\n\n<p>As a note, Firebug can't always find the exact line of code something came from. I've had this method fail completely! Another approach is to use named function expressions.  Changing the code to:</p>\n\n<pre><code>$('#bigButton').click(function showMyLlama(){\n  $('img#theLlama').show();\n})\n</code></pre>\n\n<p>Now reveals this when inspecting the <code>events</code> object:</p>\n\n<p><img src=\"http://i.stack.imgur.com/rdO9R.png\" alt=\"alt text\"></p>\n\n<p>Which is way more useful than just <code>function()</code> as it is now obvious that this handler shows us a llama.  You can also now search the code for the function name and find it!</p>\n\n<hr>\n\n<h2>Using <a href=\"http://www.google.com/chrome\">Chrome</a>, its built in web inspector and <a href=\"http://jsfiddle.net/gnarf/qpJWp/show\">this fiddle</a>:</h2>\n\n<p>Hitting Cmd+Shift+C (Inspect Element) and clicking on the button shows this:<br>\n<img src=\"http://f.cl.ly/items/3S3C0m0l1e3g321U2f0y/Screen%20shot%202011-08-19%20at%205.25.33%20PM.png\" alt=\"Screenshot\"></p>\n\n<p>Clicking on the button in the elements inspector then pressing Escape to open the JS Console:\n<img src=\"http://f.cl.ly/items/2I2A410N271I2X3C030U/Screen%20shot%202011-08-19%20at%205.26.16%20PM.png\" alt=\"Screenshot\"></p>\n\n<p>In the Chrome Console, <code>$0</code> refers to the selected element in the elements panel.</p>\n\n<p>Typing in <code>$._data( $0 )</code> will give us the jQuery (internal) data object which includes events, just like in our Firebug example, sadly, Chrome wont let us click on the function, but it will let us see the source:<br>\n<img src=\"http://cl.ly/1J3r021X1z1Q2J0v2z18/Screen_shot_2011-08-19_at_5.31.58_PM.png\" alt=\"Screenshot\"></p>\n\n<hr>\n\n<h2>A note about <a href=\"http://api.jquery.com/live\"><code>.live()</code></a> events:</h2>\n\n<p>Live Events are stored on <code>$._data( document, \"events\" )</code> and contain an <code>origHandler</code> that points at the function:</p>\n\n<p><img src=\"http://cl.ly/381Y1b253d0N463O0p3v/Screen_shot_2011-08-19_at_5.36.58_PM.png\" alt=\"Screenshot\"></p>\n",
                    "is_accepted": true,
                    "score": 86
                }
            ],
            "body": "<p>Hypothetical:  I find a page with a button ('#bigButton'), that when clicked causes a llama ('img#theLlama') to show() using jQuery.</p>\n\n<p>So, somewhere (say, Line 76) in buttons.js:</p>\n\n<pre><code>$('#bigButton').click(function(){\n$('img#theLlama').show();\n})\n</code></pre>\n\n<p>Now, let's say I have a big HTML page with a whole bunch of .js files included.  I can click on the button and see the llama appear, but I have no idea where the code above is.</p>\n\n<p>The solution I am looking for is very similar to that which is available with CSS in Firebug.  I want to inspect the element and have it show me that this jQuery occurs in Line 76 of buttons.js, along with any other bindings on this element.</p>\n\n<p>*<em>Note: The bounty is for a specific answer to the 'llama question,' ie pointing to a the solution that is described above.  *</em></p>\n\n<p>FireQuery is a great tool for many jQuery tasks, but it does not seem to answer the llama question.  If I am wrong about this, please correct me.</p>\n",
            "last_activity_date": 1357837150,
            "question_id": 3960709,
            "score": 42,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "firebug",
                "onclick"
            ],
            "title": "Inspect an element to investigate jQuery event bindings"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<ul>\n<li><p><a href=\"http://ejohn.org/about/\">John Resig</a> (of jQuery fame) has <a href=\"http://ejohn.org/blog/web-workers/\">a bunch of interesting examples of using web workers here</a> - games, graphics, crypto.</p></li>\n<li><p>Another use is Web I/O - in other words, polling URLs in background. That way you don't block the UI waiting for polling results.</p></li>\n<li><p>Another practical use: in Bespin, they\u2019re using Web Workers to do the syntax highlighting, which you <em>wouldn\u2019t</em> want to block your code editing whilst you\u2019re using the app.</p></li>\n<li><p>From <a href=\"https://developer.mozilla.org/En/Using_web_workers\">Mozilla</a>: One way workers are useful is to allow your code to perform processor-intensive calculations without blocking the user interface thread. </p>\n\n<p>As a practical example, think of an app which has a large table of #s (this is real world, BTW - taken from an app I programmed ~2 years ago). You can change one # in a table via inpput field and a bunch of other numbers in different columns get re-computed in a fairly intensive process. </p>\n\n<p>The old workflow was: Change the #. Go get coffee while JavaScript crunches through changes to other numbers and the web page is unresponsive for 3 minutes - after I optimized it to hell and back. Get Back with coffee. Change a second #. Repeat many times. Click SAVE button.</p>\n\n<p>The new workflow with the workers could be: Change the #. Get a status message that something is being recomputed but you can change other #s. Change more #s. When done changing, wait till status changes to \"all calculations complete, you can now review the final #s and save\".</p></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 53
                },
                {
                    "body": "<p>I have used them for sending larger amounts of data from the browser to server.  Obviously, you can do this with regular AJAX calls, but if this takes up one of the precious connections per hostname.  Also, if the user does a page transition during this process (e.g clicks a link), your JavaScript objects from the previous page go away and you can't process callbacks.  When a web worker is used, this activity happens out of band, so you have a better guarantee that it will complete.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Another Use case:</p>\n\n<p>Compressing/De-compressing files in the background, if you have a lot of images and other media files that are exchanged from the server in compressed format. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>One more use case :</p>\n\n<p>This involves creating and maintaing the index in the web worker and querying it for a efficient search.  <a href=\"http://www.bacondarwin.co.uk/angularjs-docs-performance/\" rel=\"nofollow\">More details here.</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am looking for real-world scenarious for using <a href=\"http://www.w3.org/TR/workers/\">Web Workers API</a>.</p>\n",
            "last_activity_date": 1412628596,
            "question_id": 2773682,
            "score": 63,
            "tags": [
                "javascript",
                "html5",
                "web-worker"
            ],
            "title": "What are the use-cases for Web Workers?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You might get better answers over on ServerFault, but there's a description of <a href=\"http://cuppster.com/2011/05/12/diy-node-js-server-on-amazon-ec2/\" rel=\"nofollow\">one user's experience here</a> using <a href=\"http://supervisord.org/\" rel=\"nofollow\"><code>supervisord</code></a>. You're going to need to use some sort of process watcher to keep the <code>node</code> process alive, and another common recommendation seems to be to reverse-proxy connections to the <code>node</code> process somehow. I'd probably vote for <code>nginx</code> (this way you can have <code>nginx</code> handle the logging, authentication, or any other higher-level HTTP features you need as opposed to somehow baking them into node), but the aforementioned article mentions <code>haproxy</code> in the comments here and there which may be more lightweight. Your choice of reverse-proxy will probably depend largely on whether or not you need WebSocket support.</p>\n\n<p>I'm not sure any more \"standard\" workflow exists for node just yet; it's not quite as mature as something like Rails that has a myriad of ways to keep a webapp running.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>See <a href=\"http://dailyjs.com/2010/03/15/hosting-nodejs-apps/\">Hosting Node Apps</a>.</p>\n\n<blockquote>\n  <p>This tutorial walks you through setting up a server that can host node.js apps for server-side JavaScript applications. Right now, the node.js hosting options boil down to running node daemon processes that talk to a web server. Most web servers can proxy connections to a different port, so you\u2019ll be able to use Apache or nginx to do this.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<ul>\n<li>You should really really use a framework (I recommend something like Express since it was battle-tested) unless you want to deal with sessions, cookies, middleware etc by yourself. Express is really light.</li>\n<li>Starting the server with nohup: you shouldn't do that, just start it with the regular \"node\" command. Also Express wraps the routes in a try-catch, so your server won't crash in a route. However if your server does have a serious problem, you shouldn't feat restarting it (besides, if you have 2-3 processes at least, only one will die, so there will be at least 1-2 remaining and the user won't feel a thing). </li>\n<li>For monitoring I personally prefer something more at the OS-level such as <a href=\"http://upstart.ubuntu.com/\">Upstart</a> and <a href=\"http://mmonit.com/monit/\">Monit</a>.</li>\n<li>Hosting solution: since you already have your own serious hardware stuff, no need to invest money in something else. Just use a load-balancer (maybe nginx or node-http-proxy) to proxy stuff.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>There are three questions here, I think.</p>\n\n<p>Question 0: \"Should I use a framework for my node app?\" </p>\n\n<p>Question 1: \"How do I run node servers on production machines?\"</p>\n\n<p>Question 2: \"How do I deploy node apps to production\".</p>\n\n<p>For <strong>Question 1</strong>, I really like <a href=\"http://learnboost.github.com/cluster/\" rel=\"nofollow\">Cluster</a> (although the latest Node version has something like that built in, so you might check that out). I've had good success with something like Monit/Upstart to monitor OS level events and make sure your servers are in good health. (This was monitoring N clusters of Ruby Thin servers, but same thing).</p>\n\n<p>Depending on the traffic you may want to run cluster on multiple machines, then putting a load balancer in front of that. This depends on your traffic, how long requests take to complete / how long you block the event loop, and how many processors/node instances you launch per machine.</p>\n\n<p>A framework gives you better error handling, and catches errors that would exit normal node.js apps. If you do it without a framework, make sure you read up on error handling in node.js.</p>\n\n<p>For <strong>Question 2</strong>, I don't think the node community has a good deploy standard yet. You could try using Ruby's Capistrano tool (and here's <a href=\"http://railsbros.de/2011/02/18/deploying_a_node_js_server_with_capistrano_and_cluster.html\" rel=\"nofollow\">a blog entry talking about deploying cluster with Capinstrano</a>).</p>\n\n<p>The bad thing about Capistrano is that it makes some assumptions that might not be true (ie: that you're deploying a Rails project), so you may end up fighting with the framework a lot.</p>\n\n<p>My goto deployment solution in general is Python's <a href=\"http://docs.fabfile.org/en/1.3.3/index.html\" rel=\"nofollow\">Fabric</a> tool, which gives you deployment tools and lets you do what you need to do.</p>\n\n<p>Another deployment option is \"the cloud\", with things like <a href=\"http://nodester.com/\" rel=\"nofollow\">Nodester</a>: let them take care of it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The guys at Cloudkick wrote an an excellent solution to this. It's called <code>Cast</code>, <a href=\"http://cast-project.org/\" rel=\"nofollow\">http://cast-project.org/</a>. </p>\n\n<p>Install cast on your server and on your workstation. You start the cast-agent on the server and have your workstation sign with the servers cast instance. You can then create \"bundles\", upload them to the server, create/upgrade/destroy from them as well as start/stop the your instances. Cast will automatically restart your services when they crash. You can also tail the stdout/strerr remotely as well as get a list of running instances and PID#s and manage your instances/servers from your workstation (no SSHing required). The docs are slightly out of date, but the results are worth the little bit of extra work. All of the interactions/commands are over HTTPS and a RESTful API. </p>\n\n<p>Prior to this I was doing all the upgrades by hand with SCP/SSH. We has <code>supervise</code> keeping things up. We haven't looked back.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've written a Node.js app, I'm looking to get it running on one of our production machines. This seems like a pretty common request yet I can't find an adequate solution. Is there not established solutions for deploying production Node.js apps?</p>\n\n<p>The app is simple (&lt;100 LOC), but needs to be very efficient, reliable and could run continuously for years without restarting. It's going to be run on a large site, with dozens of connections/second. (the app is not used as a webserver, it only has a JSON API)</p>\n\n<p>Here are the approaches I've considered but I'm still not sure about:</p>\n\n<p><strong>Using a framework (eg. Express)</strong></p>\n\n<p>Because the app needs to be high performance and is so simple, adding bloat in the form of a framework is something I want to avoid.</p>\n\n<p><strong>Starting the server with <code>nohup</code></strong></p>\n\n<p>The main problem here is with exception handling, we (obviously) don't want the entire server to crash because of an exception. From what I understand, wrapping the entire app in a <code>try {} catch {}</code> loop won't help because the Javascript interpreter is left in an unpredictable state after an exception. Is that correct?</p>\n\n<p><strong>Using something like Forever</strong></p>\n\n<p>I've installed Forever in a FreeBSD machine of ours and it was very buggy. It ended up spawning endless processes that couldn't be killed from Forever. I had to run <code>kill -9</code> to get my machine back and I don't feel too confident about running a production app on Forever. It also seems that Upstart (similar tool, but more generic) won't run on FreeBSD.</p>\n\n<p><strong>Hosted solutions (eg. Heroku, Rackspace, Amazon EC2, etc.)</strong></p>\n\n<p>This is probably the simplest solution, but we already have a the serious hardware for the rest of our webservers. For financial considerations, it doesn't make sense.</p>\n\n<p>Surely there must be some established solution to this? Am I missing something?</p>\n",
            "last_activity_date": 1323114037,
            "question_id": 8386455,
            "score": 47,
            "tags": [
                "javascript",
                "deployment",
                "node.js",
                "production-environment"
            ],
            "title": "Deploying a production Node.js server"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>A few things right on top of my head. I'll edit this list when I think of more.</p>\n\n<ul>\n<li>Don't pollute global namespace. Organize things in objects instead;</li>\n<li>Don't omit 'var' for variables. That pollutes global namespace and might get you in trouble with other such scripts.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Language:</p>\n\n<ul>\n<li><p>Namespace polluting by creating a large footprint of variables in the global context.</p></li>\n<li><p>Binding event handlers in the form 'foo.onclick = myFunc' (inextensible, should be using attachEvent/addEventListener).</p></li>\n<li><p>Using eval in almost any non-JSON context</p></li>\n<li><p>Almost every use of document.write (use the DOM methods like document.createElement)</p></li>\n<li><p>Prototyping against the Object object (BOOM!)</p></li>\n<li><p>A small one this, but doing large numbers of string concats with '+' (creating an array and joining it is much more efficient)</p></li>\n<li><p>Referring to the non-existent <code>undefined</code> constant</p></li>\n</ul>\n\n<p>Design/Deployment:</p>\n\n<ul>\n<li><p>(Generally) not providing noscript support.</p></li>\n<li><p>Not packaging your code into a single resource</p></li>\n<li><p>Putting inline (i.e. body) scripts near the top of the body (they block loading)</p></li>\n</ul>\n\n<p>Ajax specific:</p>\n\n<ul>\n<li><p>not indicating the start, end, or error of a request to the user</p></li>\n<li><p>polling</p></li>\n<li><p>passing and parsing XML instead of JSON or HTML (where appropriate)</p></li>\n</ul>\n\n<p><em>edit: I keep thinking of more!</em></p>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>any reference to</p>\n\n<pre><code>document.all\n</code></pre>\n\n<p>in your code, <em>unless</em> it is within special code, just for IE to overcome an IE bug. (<em>cough</em> document.getElementById() <em>cough</em>)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<ul>\n<li>browser detection (instead of testing whether the specific methods/fields you want to use exist)</li>\n<li>using alert() in most cases</li>\n</ul>\n\n<p>see also Crockford's <a href=\"http://oreilly.com/catalog/9780596517748/\">\"Javascript: The Good Parts\"</a> for various other things to avoid. (<strong>edit:</strong> warning, he's a bit strict in some of his suggestions like the use of \"===\" over \"==\" so take them with whatever grain of salt works for you)</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Not using a community based framework to do repetitive tasks like DOM manipulation, event handling, etc.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>any use of 'with'</p>\n\n<blockquote>\n  <blockquote>\n    <p>with (document.forms[\"mainForm\"].elements) {<br />\n    input1.value = \"junk\";<br />\n    input2.value = \"junk\"; \n    }</p>\n  </blockquote>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Besides those already mentioned...</p>\n\n<ul>\n<li><p>Using the <code>for..in</code> construct to iterate over arrays<br />\n<em>(iterates over array methods AND indices)</em></p></li>\n<li><p>Using Javascript inline like <code>&lt;body onload=\"doThis();\"&gt;</code><br />\n<em>(inflexible and prevents multiple event listeners)</em></p></li>\n<li><p>Using the 'Function()' constructor<br />\n<em>(bad for the same reasons <code>eval()</code> is bad)</em></p></li>\n<li><p>Passing strings instead of functions to <code>setTimeout</code> or <code>setInterval</code><br />\n<em>(also uses <code>eval()</code> internally)</em></p></li>\n<li><p>Relying on implicit statements by not using semicolons<br />\n<em>(bad habit to pick up, and can lead to unexpected behavior)</em></p></li>\n<li><p>Using /* .. */ to block out lines of code<br />\n<em>(can interfere with regex literals, e.g.: <code>/* /.*/ */</code>)</em></p>\n\n<p>&lt;evangelism&gt;\nAnd of course, not using Prototype ;)\n&lt;/evangelism&gt;</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>The biggest for me is not understanding the JavaScript programming language itself.</p>\n\n<ul>\n<li>Overusing object hierarchies and building very deep inheritance chains. Shallow hierarchies work fine in most cases in JS.</li>\n<li>Not understanding prototype based object orientation, and instead building huge amounts of scaffolding to make JS behave like traditional OO languages.</li>\n<li>Unnecessarily using OO paradigms when procedural / functional programming could be more concise and efficient.</li>\n</ul>\n\n<p>Then there are those for the browser runtime:</p>\n\n<ul>\n<li>Not using good established event patterns like event delegation or the observer pattern (pub/sub) to optimize event handling.</li>\n<li>Making frequent DOM updates (like .appendChild in a loop), when the DOM nodes can be in memory and appended in one go. (HUGE performance benefit).</li>\n<li>Overusing libraries for selecting nodes with complex selectors when native methods can be used (getElementById, getElementByTagName, etc.). This is becoming lesser of an issue these days, but it's worth mentioning.</li>\n<li>Extending DOM objects when you expect third-party scripts to be on the same page as yours (you will end up clobbering each other's code).</li>\n</ul>\n\n<p>And finally the deployment issues.</p>\n\n<ul>\n<li>Not minifying your files.</li>\n<li>Web-server configs - not gzipping your files, not caching them sensibly.</li>\n</ul>\n\n<p>&lt;plug> I've got some <a href=\"http://piecesofrakesh.blogspot.com/2007/10/client-side-performance-optimization-of.html\">client-side optimization tips</a> which cover some of the things I've mentioned above, and more, on my blog.&lt;/plug></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><strong>Effective caching is seldomly done:</strong></p>\n\n<ul>\n<li>Don't store a copy of the library (jQuery, Prototype, Dojo) on your server when you can use a shared API like <a href=\"http://code.google.com/apis/libraries/devguide.html\" rel=\"nofollow\">Google's Libraries API</a> to speed up page loads</li>\n<li><a href=\"http://www.webappers.com/2009/01/22/minify-combine-compress-css-or-javascript-files/\" rel=\"nofollow\">Combine and minify</a> all your script that you can into one</li>\n<li>Use <a href=\"http://www.webproworld.com/webmaster-forum/threads/100407-How-To-Set-Up-The-Mod_Expires-On-An-Apache-Server\" rel=\"nofollow\">mod_expires</a> to give all your scripts infinite cache lifetime (never redownload)</li>\n<li>Version your javascript filenames so that a new update will be taken by clients without need to reload/restart\n(i.e. myFile_r231.js, or myFile.js?r=231)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>Bad use of brace positioning when creating statements</h2>\n\n<p>You should always put a brace after the statement due to automatic semicolon insertion.</p>\n\n<p>For example this:</p>\n\n<pre><code>function()\n{\n    return\n    {\n        price: 10\n    }\n}\n</code></pre>\n\n<p>differs greatly from this:</p>\n\n<pre><code>function(){\n    return{\n        price: 10\n    }\n}\n</code></pre>\n\n<p>Becuase in the first example, javascript will insert a semicolon for you actually leaving you with this:</p>\n\n<pre><code>function()\n{\n    return;    // oh dear!\n    {\n        price: 10\n    }\n}\n</code></pre>\n\n<hr>\n\n<h2>Using setInterval for potentially long running tasks.</h2>\n\n<p>You should use setTimeout rather than setInterval for occasions where you need to do something repeatedly.</p>\n\n<p>If you use setInterval, but the function that is executed in the timer is not finished by the time the timer next ticks, this is bad. Instead use the following pattern using setTimeout</p>\n\n<pre><code>function doThisManyTimes(){\n    alert(\"It's happening again!\");\n}\n\n(function repeat(){\n    doThisManyTimes();\n    setTimeout(repeat, 500);\n})();\n</code></pre>\n\n<p>This is explained very well by <a href=\"http://paulirish.com/\" rel=\"nofollow\">Paul Irish</a> on his <a href=\"http://paulirish.com/2010/10-things-i-learned-from-the-jquery-source/\" rel=\"nofollow\">10 things I learned from the jQuery source</a> video</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I find that what not to do is a harder lesson to learn than what should be done. </p>\n\n<p>From my experience, what separates an expert from an intermediate is the ability to select from among various seemingly equivalent ways of doing the same thing.</p>\n\n<p>So, when it comes to JavaScript <strong>what kinds of things should you not do and why</strong>?</p>\n\n<p>I'm able to find lots of these for Java, but since JavaScript's typical context (in a browser) is very different from Java's I'm curious to see what comes out.</p>\n",
            "last_activity_date": 1396515653,
            "question_id": 377999,
            "score": 43,
            "tags": [
                "javascript",
                "anti-patterns"
            ],
            "title": "What anti-patterns exist for JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>As per your comment that the question is mainly \"is constructor knowledge necessary?\" I feel it is.</p>\n\n<p>A toy example would be storing <em>partial</em> data. On a given data set in memory, when persisting I may only choose to store certain elements (either for the sake of efficiency or for data consistency purposes, e.g. the values are inherently useless once persisted). Let's take a session where I store the user name and the number of times they've clicked on the help button (for lack of a better example). When I persist this in my example, I do have no use for the number of clicks, since I keep it in memory now, and next time I load the data (next time the user logs in or connects or whatever) I will initialise the value from scratch (presumably to 0). This particular use case is a good candidate for constructor logic.</p>\n\n<p>Aahh, but you could always just embed that in the static prototype: <code>Object.create({name:'Bob', clicks:0});</code> Sure, in this case. But what if the value wasn't always 0 at first, but rather it was something that required computation. Uummmm, say, the users age in seconds (assuming we stored the name and the DOB). Again, an item that there is little use persisting, since it will need to be recalculated on retrieval anyway. So how do you store the user's age in the static prototype?</p>\n\n<p>The obvious answer is constructor/initialiser logic.</p>\n\n<p>There are many more scenarios, although I don't feel the idea is much related to js oop or any language in particular. The necessity for entity creation <em>logic</em> is inherent in the way I see computer systems model the world. Sometimes the items we store will be a simple retrieval and injection into a blueprint like prototype shell, and sometimes the values are dynamic, and will need to be initialised.</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>OK, I'm going to try for a more real-world example, and to avoid confusion assume that I have no database and need not persist any data. Let's say I'm making a solitaire server. Each new game will be (naturally) a new instance of the <code>Game</code> prototype. It is clear to me that their is initialiser logic required here (and lots of it):</p>\n\n<p>I will, for example, need on each game instance not just a static/hard-coded deck of cards, but a randomly shuffled deck. If it were static the user would play the same game every time, which is clearly not good.</p>\n\n<p>I may also have to start a timer to finish the game if the player runs out. Again, not something that can be static, since my game has a few requirements: the number of seconds is inversely related to the number of games the connected player has won so far (again, no saved info, just how many for this connection), and proportional to the difficulty of the shuffle (there is an algorithm that according to the shuffle results can determine the degree of difficulty of the game).</p>\n\n<p>How do you do that with a static <code>Object.create()</code>?</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I don't think the constructor/factory logic is necessary at all, as long as you change how you think about Object-Oriented Programming. In my recent exploration of the topic, I've discovered that Prototypical inheritance lends itself more to defining a set of functions that use particular data. This isn't a foreign concept to those trained in classical inheritance, but the hitch is that these \"parent\" objects don't define the data to be operated on.</p>\n\n<pre><code>var animal = {\n    walk: function()\n    {\n        var i = 0,\n            s = '';\n        for (; i &lt; this.legs; i++)\n        {\n            s += 'step ';\n        }\n\n        console.log(s);\n    },\n    speak: function()\n    {\n        console.log(this.favoriteWord);\n    }\n}\n\nvar myLion = Object.create(animal);\nmyLion.legs = 4;\nmyLion.favoriteWord = 'woof';\n</code></pre>\n\n<p>So, in the above example, we create the functionality that goes along with an animal, and then create an object that has that functionality, along with the data necessary to complete the actions. This feels uncomfortable and odd to anyone who's used to classical inheritance for any length of time. It has none of the warm fuzziness of the public/private/protected hierarchy of member visibility, and I'll be the first to admit that it makes me nervous.</p>\n\n<p>Also, my first instinct, when I see the above initialization of the <code>myLion</code> object is to create a factory for animals, so I can create lions, and tigers, and bears (oh my) with a simple function call. And, I think, that's a natural way of thinking for most programmers - the verbosity of the above code is ugly, and seems to lack elegance. I haven't decided whether that's simply due to classical training, or whether that's an actual fault of the above method.</p>\n\n<p>Now, on to inheritance.</p>\n\n<p>I have always understood inhertance in JavaScript to be difficult. Navigating the ins and outs of the prototype chain is not exactly clear. Until you use it with <code>Object.create</code>, which takes all the function-based, new-keyword redirection out of the equation.</p>\n\n<p>Let's say we wanted to extend the above <code>animal</code> object, and make a human.</p>\n\n<pre><code>var human = Object.create(animal)\nhuman.think = function()\n{\n    console.log('Hmmmm...');\n}\n\nvar myHuman = Object.create(human);\nmyHuman.legs = 2;\nmyHuman.favoriteWord = 'Hello';\n</code></pre>\n\n<p>This creates an object which has <code>human</code> as a prototype, which, in turn, has <code>animal</code> as a prototype. Easy enough. No misdirection, no \"new object with a prototype equal to the prototype of the function\". Just simple prototypal inheritance. It's simple, and straightforward. Polymorphism is easy, too.</p>\n\n<pre><code>human.speak = function()\n{\n    console.log(this.favoriteWord + ', dudes');\n}\n</code></pre>\n\n<p>Due to the way the prototype chain works, <code>myHuman.speak</code> will be found in <code>human</code> before it's found in <code>animal</code>, and thus our human is a surfer instead of just a boring old animal.</p>\n\n<p>So, in conclusion (<strong>TLDR</strong>):</p>\n\n<p>The pseudo-classical constructor functionality was kind of tacked on to JavaScript to make those programmers trained in classical OOP more comfortable. It is <em>not</em>, by any means, necessary, but it means giving up classical concepts such as member visibility and (tautologically) constructors.</p>\n\n<p>What you get in return is flexibility, and simplicity. You can create \"classes\" on the fly - every object is, itself, a template for other objects. Setting values on child objects will not affect the prototype of those objects (i.e. if I used <code>var child = Object.create(myHuman)</code>, and then set <code>child.walk = 'not yet'</code>, <code>animal.walk</code> would be unaffected - really, test it).</p>\n\n<p>The simplicity of inheritance is honestly mind-boggling. I've read a lot on inheritance in JavaScript, and written many lines of code attempting to understand it. But it really boils down to <em>objects inherit from other objects</em>. It's as simple as that, and all the <code>new</code> keyword does is muddle that up.</p>\n\n<p>This flexibility is difficult to use to its fullest extent, and I'm sure I have yet to do it, but it's there, and it's interesting to navigate. I think most of the reason that it hasn't been used for a large project is that it simply isn't understood as well as it could be, and, IMHO, we're locked into the classical inheritance patterns we all learned when we were taught C++, Java, etc.</p>\n\n<p><strong>Edit</strong></p>\n\n<p>I think I've made a pretty good case against constructors. But my argument against factories is fuzzy.</p>\n\n<p>After further contemplation, during which I've flip-flopped to both sides of the fence several times, I have come to the conclusion that factories are also unnecessary. If <code>animal</code> (above) were given another function <code>initialize</code>, it would be trivial to create and initialize a new object that inherits from <code>animal</code>.</p>\n\n<pre><code>var myDog = Object.create(animal);\nmyDog.initialize(4, 'Meow');\n</code></pre>\n\n<p>New object, initialized and ready for use.</p>\n\n<p>@Raynos - You totally nerd sniped me on this one. I should be getting ready for 5 days of doing absolutely nothing productive.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Example of a staticly-clonable \"Type\":</p>\n\n<pre><code>var MyType = {\n  size: Sizes.large,\n  color: Colors.blue,\n  decay: function _decay() { size = Sizes.medium },\n  embiggen: function _embiggen() { size = Sizes.xlarge },\n  normal: function _normal() { size = Sizes.normal },\n  load: function _load( dbObject ) { \n    size = dbObject.size\n    color = dbObject.color \n  }\n}\n</code></pre>\n\n<p>Now, we could clone this type elsewhere, yes? Sure, we would need to use <code>var myType = Object.Create(MyType)</code>, but then we're done, yes? Now we can just <code>myType.size</code> and that is the size of the thing. Or we could read the color, or change it, etc. We haven't created a constructor or anything, right?</p>\n\n<p>If you said there's no constructor there, you're wrong. Let me show you where the constructor is:</p>\n\n<pre><code>// The following var definition is the constructor\nvar MyType = {\n  size: Sizes.large,\n  color: Colors.blue,\n  decay: function _decay() { size = Sizes.medium },\n  embiggen: function _embiggen() { size = Sizes.xlarge },\n  normal: function _normal() { size = Sizes.normal },\n  load: function _load( dbObject ) { \n    size = dbObject.size\n    color = dbObject.color \n  }\n}\n</code></pre>\n\n<p>Because we've already gone and created all the things we wanted and we've already defined everything. That's all a constructor does. So even if we only clone/use static things (which is what I see the above snippets as doing) we've still had a constructor. Just a static constructor. By defining a type, we have defined a constructor. The alternative is this model of object construction:</p>\n\n<pre><code>var MyType = {}\nMyType.size = Sizes.large\n</code></pre>\n\n<p>But eventually you're going to want to use Object.Create(MyType) and when you do, you will have used a static object to create the target object. And then it becomes the same as the previous example.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The short answer to your question \"Do we need factories/constructors in prototypical OO?\" is no.  Factories/Constructors serve 1 purpose only: initialize the newly created object (an instance) to a specific state.  </p>\n\n<p>That being said, it is often uses because some objects need initialization code of some sort.</p>\n\n<p>Let's use the component-based entity code you provided.  A typical entity is simply a collection of components and few properties:</p>\n\n<pre><code>var BaseEntity = Object.create({},\n{\n    /* Collection of all the Entity's components */\n    components:\n    {\n        value: {}\n    }\n\n    /* Unique identifier for the entity instance */\n    , id:\n    {\n        value: new Date().getTime()\n        , configurable: false\n        , enumerable: true\n        , writable: false\n    }\n\n    /* Use for debugging */\n    , createdTime:\n    {\n        value: new Date()\n        , configurable: false\n        , enumerable: true\n        , writable: false\n    }\n\n    , removeComponent:\n    {\n        value: function() { /* code left out for brevity */ }\n        , enumerable: true\n        , writable: false\n    }\n\n    , addComponent:\n    {\n        value: function() { /* code left out for brevity */ }\n        , enumerable: true\n        , writable: false\n    }\n});\n</code></pre>\n\n<p>Now the following code will create new entities based on the 'BaseEntity'</p>\n\n<pre><code>function CreateEntity()\n{\n    var obj = Object.create(BaseEntity);\n\n    //Output the resulting object's information for debugging\n    console.log(\"[\" + obj.id + \"] \" + obj.createdTime + \"\\n\");\n\n    return obj;\n}\n</code></pre>\n\n<p>Seems straight forward enough, until you go to reference the properties:</p>\n\n<pre><code>setTimeout(CreateEntity, 1000);\nsetTimeout(CreateEntity, 2000);\nsetTimeout(CreateEntity, 3000);\n</code></pre>\n\n<p>outputs:</p>\n\n<pre><code>[1309449384033] Thu Jun 30 2011 11:56:24 GMT-0400 (EDT)\n[1309449384033] Thu Jun 30 2011 11:56:24 GMT-0400 (EDT)\n[1309449384033] Thu Jun 30 2011 11:56:24 GMT-0400 (EDT)\n</code></pre>\n\n<p>So why is this?  The answer is simple: because of prototype based inheritance.  When we created the objects, there wasn't any code to set the properties <code>id</code> and <code>createdTime</code> on the actual instance, as is normally done in constructors/factories.  As a result, when the property is accessed, it pulls from the prototype chain, which ends up being a single value for all entities.</p>\n\n<p>The argument to this is that the Object.create() should be passed the second parameter to set this values.  My response would simply be:  Isn't that basically the same as calling a constructor or using a factory?  It's just another way of setting an object's state.</p>\n\n<p>Now with your implementation where you treat (and rightfully so) all prototypes as a collection of static methods and properties, you do initialize the object by assigning the values of the properties to the data from a data source.  It may not be using <code>new</code> or some type of factory, but it is initialization code.</p>\n\n<p>To summarize:\nIn JavaScript prototype OOP\n- <code>new</code> is not needed\n- Factories are not needed\n- Initialization code is usually needed, which is normally done through <code>new</code>, factories, or some other implementation that you don't want to admit is initializing an object</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p><strong>TL;DR:</strong></p>\n\n<p>Do we need factories/constructors in prototypical OO? Can we make a paradigm switch and drop them completely?</p>\n\n<p><strong>The BackStory:</strong></p>\n\n<p>I've been toying with doing prototypical OO in JavaScript lately and find that 99% of OO done in JavaScript is forcing classical OO patterns into it.</p>\n\n<p>My take on prototypical OO is that it involves two things. A static prototype of methods (and static data) and a data binding. We don't need factories or constructors.</p>\n\n<p>In JavaScript these are Object literals containing functions and <code>Object.create</code>.</p>\n\n<p>This would mean we can model everything as a static blueprint/prototype and a data binding abstraction that's preferably hooked straight into a document-style database. I.e. objects are taken out of the database and created by cloning a prototype with the data. This would mean there is no constructor logic, no factories, no <code>new</code>.</p>\n\n<p><strong>The Example code:</strong></p>\n\n<p>An pseudo example would be :</p>\n\n<pre><code>var Entity = Object.create(EventEmitter, {\n    addComponent: {\n        value: function _addComponent(component) {\n            if (this[component.type] !== undefined) {\n                this.removeComponent(this[component.type]);\n            }\n\n            _.each(_.functions(component), (function _bind(f) {\n                component[f] = component[f].bind(this);\n            }).bind(this));\n\n            component.bindEvents();\n\n            Object.defineProperty(this, component.type, {\n                value: component,\n                configurable: true\n            });\n\n            this.emit(\"component:add\", this, component);\n        }\n    },\n    removeComponent: {\n        value: function _removeComponent(component) {\n            component = component.type || component;\n\n            delete this[component];\n\n            this.emit(\"component:remove\", this, component);\n        }\n    }\n}\n\nvar entity = Object.create(Entity, toProperties(jsonStore.get(id)))\n</code></pre>\n\n<p><strong>The minor explanation:</strong></p>\n\n<p>The particular code is verbose because ES5 is verbose. <code>Entity</code> above is a blueprint/prototype. Any actual object with data would be created by using <code>Object.create(Entity, {...})</code>. </p>\n\n<p>The actual data (in this case the components) is directly loaded from a JSON store and injected directly into the <code>Object.create</code> call. Of course a similar pattern is applied to creating components and only properties that pass <code>Object.hasOwnProperty</code> are stored in the database.</p>\n\n<p>When an entity is created for the first time it's created with an empty <code>{}</code></p>\n\n<p><strong>The actual Questions:</strong></p>\n\n<p>Now my actual questions are</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/6534333/open-source-examples-of-javascript-prototypical-oo\">Open source examples of JS prototypical OO?</a></li>\n<li>Is this a good idea?</li>\n<li>Is it in-line with the ideas and concepts behind prototypical OOP?</li>\n<li>Will not using any constructors/factory <em>functions</em> bite me in the ass somewhere? Can we really get away with not using constructors. Are there any limitations using the above methodology where we would need factories to overcome them.</li>\n</ul>\n",
            "last_activity_date": 1410202217,
            "question_id": 6526241,
            "score": 40,
            "tags": [
                "javascript",
                "oop",
                "node.js",
                "prototypal-inheritance",
                "ecmascript-5"
            ],
            "title": "Prototypical OO in JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I would either turn it in to a jQuery plugin or a static object.</p>\n\n<p>The static object just acts as a kind or wrapper. I would also break it up in to smaller functions e.g.</p>\n\n<pre><code>init()\ncheckLength()\ncheckTime()\n</code></pre>\n\n<p>So you might end up with something like:</p>\n\n<pre><code>Widget = {\n\ninit:function(){//setup events etc},\ncheckLength:function(){},\ncheckTime:function(){},\ndoMessage:function(){}\n\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Matpol gave a literal solution to the specific information provided. Your edit implies that you are looking for an answer to a more hypothetical question. In other words, you're looking for the \"approach\".</p>\n\n<p>Answering the question in this manner; the single example you gave is a bit of a red herring. It is but a single item in the whole app, and prevents us from \"seeing the forest from the trees\". So what is the Forest? The question, asked as such, doesn't define it. But I think all programmers will agree when I say it's a nightmare to work on a project that has no definition. So, I'll rephrase your question and answer, \"What is the process for defining a project?\"</p>\n\n<p>Mine is, in fact, asking a series of questions:</p>\n\n<ul>\n<li>What is the core purpose of this application?</li>\n<li>When do you want it launched? If we had to launch it in 1/4 that time, which features would you keep?</li>\n<li>Which features are you absolutely certain you're going to need afterwards?</li>\n</ul>\n\n<p>A lot of the time, to get to the bottom of those questions, I need to ask other business questions:</p>\n\n<ul>\n<li>Who is your audience?</li>\n<li>Why do they care about this site? What's going to keep them coming back?</li>\n<li>How are you going to generate revenue?</li>\n<li>What is your call to action? If you could funnel all of your users down a single path, which would it be?</li>\n</ul>\n\n<p>Hopefully, these questions will result in a set of foundational code that you can consider your core. Your core, as you suspected, probably doesn't fit the modular approach. And as you identified, you will want to break that core down into a Model / View / Controller layout.</p>\n\n<p>But it's inevitable that you will need to add design fluff. And this brings us back to your code example - its fluff. Fluff belongs in a plugin, separated from the core. This isn't to say that all of your plugins should be delivered to the user in separate js files... but for your development purposes, they should be viewed as modular, and independent from the core code base.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The current code is a good start and can be made to \"scale\" into large apps that avoid hard-coding and have clear MVC separation with just a few changes. </p>\n\n<blockquote>\n  <ul>\n  <li>This should ideally be a widget or some sort of packaged functionality</li>\n  </ul>\n</blockquote>\n\n<p>A widget will make reusing comment functionality easier and provide for reuse in different pages/apps. Extend the encapsulation and separation of concerns not only to the presentation, but also to the widget model. When you think of a comment field, it's intuitive to think of the state of the component as the comment text, yet all the parameters affecting it's behaviour can be part of it's model, including validation parameters. So, in addition to the comment text, I would have the model include:</p>\n\n<ul>\n<li>a mapping of character count to a size-category (too-small, small, medium, large, overflow).</li>\n<li>the max comment submit frequency (15 seconds)</li>\n</ul>\n\n<p>The widget model updates the size-category as the text is changed. The view listens to changes to the size-category, and the size-category value used to update the text class to produce CSS-styling for different comment lengths. The size-category is also checked when \"Add Comment\" is clicked. If it is \"too-small\" or \"overflow\" then a popup can be shown. Note that the Add Comment handler does not checking character count - that is isolated in the model - it checks the size-category. If necessary, the \"Add Comment\" controller could use the same mapping of character count to size-category that the model uses to produce helpful messages for the user. E.g. \"Comments must be at least 15 characters\" where 15 is fetched from the size-category map. </p>\n\n<p>The model also provides a \"number of characters left\" property whose change events are used to update the widget's UI. The maximum character count is fetched from the character to size-category map.</p>\n\n<blockquote>\n  <ul>\n  <li>Things like a comment per 15 seconds, and minimum 15 character comment belong to some application wide policies rather than being embedded inside each widget.</li>\n  <li>Too many hard-coded values.</li>\n  <li>No code organization. Model, Views, Controllers are all bundled together. Not that MVC is the only approach for organizing rich client side web applications, but there is none in this example.</li>\n  </ul>\n</blockquote>\n\n<p>There may be many types of comments (e.g. different items being commented on) and different types of comment-widget. If they should all have the same minimum/maximum range then they should all be parameterized with the same model values controlling the comment validation. This is best done server-side when building the data for the comment model. The comment text is fetched for that specific comment, and the comment validation values, such as size-category mapping are fetched from page or application configuration defaults. By having central logic for producing the component validation model, adding new rules becomes much simpler - e.g. such as \"moderators can post comments upto 1K\", becomes a change in one piece of code. Another point to having the component model computed server side is that the model should also be validated server-side - client validation is more a user-convenience (inconvenience some might think!) - and not a hard enforcement. JavaScript can be disabled and HTTP requests constructed independently from the validating client.</p>\n\n<p>To sum up, much of this can be seen as organizing production of the widget model server side. By doing this server side, the server can enforce validation rules and shield the widget from the complexity of the rules and application-wide configuration.</p>\n\n<p>I've not mentioned jQuery or any UI technogy since this pattern is valid for applications irrespective of UI technology. How you apply the pattern will be UI-specific to some extent such as how the validation model is provided to the widget, or how to hook up listeners to the model, but the organizational level of the pattern is orthogonal to the UI. The primary focus is on the model - extending it to include validation aspects and computing it server side. Once that is in place, the organization problem is pretty much solved.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The way in which I would do this is 3 fold.</p>\n\n<ol>\n<li>Encapsulate javascript in small well-defined classes within namespaces</li>\n<li>Javascript classes should have HTML they require \"injected\" into them as dependency allowing <a href=\"http://stackoverflow.com/questions/300855/looking-for-a-better-javascript-unit-test-tool\">out-of-browser unit testing</a></li>\n<li>Move as much client-side functionality to server as possible and use a concept known as AHAH</li>\n</ol>\n\n<p><strong>Javascript name-spacing</strong></p>\n\n<p>This can be achieved easily and has been covered in other posts such as this <a href=\"http://stackoverflow.com/questions/13021/is-there-a-concise-way-to-do-namespacing-in-javascript\">http://stackoverflow.com/questions/13021/is-there-a-concise-way-to-do-namespacing-in-javascript</a></p>\n\n<p><strong>Small encapsulated classes</strong></p>\n\n<p>Javascript code, just like server-side code should be well encapsulated with small cohesive classes and methods.  Each class lives in a separate file, named along with the namespace it is in, eg: MyCompany.SomePackage.MyClass.js.\nExcessive HTTP requests to each file can be saved via <a href=\"http://stackoverflow.com/questions/841253/javascript-good-tool-to-minify-jquery-based-js-files\">combining and minifying</a> these class files at build time.</p>\n\n<p><strong>Dependency Inversion in Javascript</strong></p>\n\n<p>So effectively instead of selecting the elements you require to work with inside your class, like this:</p>\n\n<pre><code>var MyNamespace.MyClass = function() {\n  var elementINeed = $('#IdOfElementINeed');\n}\n</code></pre>\n\n<p>You would inject it as such:</p>\n\n<pre><code>var foo = new MyNamspace.MyClass($('#IdOfElementINeed'));\n\nvar MyNamespace.MyClass = function(incomingDependency) {\n  var elementINeed = incomingDependency;\n}\n</code></pre>\n\n<p>This technique lends itself well to testable javscript and seperation of concerns through <a href=\"http://stackoverflow.com/questions/386885/is-there-a-javascript-mvc-micro-framework\">MVC style</a> layering of your code.</p>\n\n<p><strong>AHAH and Client-side simplification</strong></p>\n\n<p><a href=\"http://www.xfront.com/microformats/AHAH.html\">AHAH</a> is quite an old technique that has been around for quite some time in web-development, although is making a resurgence amongst web aficionados for its pure simplicity.  However, the philosophy must be bought into at more than the architectural technique level and it must be used as a replacement for all your client side javascript eg: validation, showing/hiding dynamic content, calculations etc</p>\n\n<p>Where you may used to have attached an onClick event with client-side complexity:</p>\n\n<pre><code>$('#someElement').click(function(){\n  // insert complex client-side functionality here, such as validating input\n  // eg var isValid = $(this).val() &lt; minimumCommentLength;\n  // update page based on result of javascript code\n  // eg $('#commentTooLong').show();\n})\n</code></pre>\n\n<p>Now you would simply trigger an ajax request back to the server to get the new HTML and simply replace all or some of the elements you are interested in as such:</p>\n\n<pre><code>$('#addCommentButton').click(function(){\n  $.ajax({ \n    url: \"/comment/add\", \n    context: document.body, success: \n    function(responseHTML){\n        $('body').html(reponseHTML);\n      }});\n})\n</code></pre>\n\n<p>Obviously this is a trivial example, but when used effectively, ANY javascript event on the page, simply fires off the identical ajax request and HTML replacement, greatly reducing the amount of client-side code required.  Moving it to the server where it can be effectively tested.</p>\n\n<p>AHAH nay-sayers, will argue that this is not a performant way to run a web-site, however I have used and seen this technique on sites with 56k modem access and also massively scaled public web-sites. The result is of course slower, but you can still produce sub 100 millisecond round trips, which is practically instant to humans.</p>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>Just to keep things interesting and close my final open question, the solution that implements the below functionality in a nicely organized manner with a decent architecture  gets a good bounty. The full code is on jsfiddle, and feel free to ask any questions  :)</p>\n\n<p>How do you usually organize complex web applications that are extremely rich on the client side. I have created a contrived example to indicate the kind of mess it's easy to get into if things are not managed well for big apps. Feel free to modify/extend this example as you wish - <a href=\"http://jsfiddle.net/NHyLC/1/\">http://jsfiddle.net/NHyLC/1/</a></p>\n\n<p>The example basically mirrors part of the comment posting on SO, and follows the following rules:</p>\n\n<ol>\n<li>Must have 15 characters minimum,\nafter multiple spaces are trimmed\nout to one.</li>\n<li>If <code>Add Comment</code> is clicked, but the\nsize is less than 15 after removing\nmultiple spaces, then show a popup\nwith the error.</li>\n<li>Indicate amount of characters remaining and\nsummarize with color coding. Gray indicates a\nsmall comment, brown indicates a\nmedium comment, orange a large\ncomment, and red a comment overflow.</li>\n<li>One comment can only be submitted\nevery 15 seconds. If comment is\nsubmitted too soon, show a popup\nwith appropriate error message.</li>\n</ol>\n\n<p>A couple of issues I noticed with this example.</p>\n\n<ul>\n<li>This should ideally be a widget or some sort of packaged functionality.</li>\n<li>Things like a comment per 15 seconds, and minimum 15 character comment  belong to some application wide policies rather than  being embedded inside each widget.</li>\n<li>Too many hard-coded values.</li>\n<li>No code organization. Model, Views, Controllers are all bundled together. Not that MVC is the only approach for organizing rich client side web applications, but there is none in this example.</li>\n</ul>\n\n<p>How would you go about cleaning this up? Applying a little MVC/MVP along the way?</p>\n\n<p>Here's some of the relevant functions, but it will make more sense if you saw the entire code on jsfiddle:</p>\n\n<pre><code>/**\n * Handle comment change.\n * Update character count. \n * Indicate progress\n */\nfunction handleCommentUpdate(comment) {\n    var status = $('.comment-status');\n\n    status.text(getStatusText(comment));\n    status.removeClass('mild spicy hot sizzling');\n    status.addClass(getStatusClass(comment));\n}\n\n/**\n * Is the comment valid for submission\n * But first, check if it's all good.\n */\nfunction commentSubmittable(comment) {\n    var notTooSoon = !isTooSoon();\n    var notEmpty = !isEmpty(comment);\n    var hasEnoughCharacters = !isTooShort(comment);\n\n    return notTooSoon &amp;&amp; notEmpty &amp;&amp; hasEnoughCharacters;\n}\n\n/**\n * Submit comment.\n * But first, check if it's all good!\n */\n$('.add-comment').click(function() {\n    var comment = $('.comment-box').val();\n\n    // submit comment, fake ajax call\n    if(commentSubmittable(comment)) {\n        .. \n    }\n\n    // show a popup if comment is mostly spaces\n    if(isTooShort(comment)) {\n        if(comment.length &lt; 15) {\n            // blink status message\n        }\n        else {\n           popup(\"Comment must be at least 15 characters in length.\");\n        }\n    }\n    // show a popup is comment submitted too soon\n    else if(isTooSoon()) {\n        popup(\"Only 1 comment allowed per 15 seconds.\");\n    }\n\n});\n</code></pre>\n\n<p><strong>Edit 1:</strong></p>\n\n<p>@matpol Thanks for the suggestion for a wrapper object and plugin. That will really be a big improvement over the existing mess. However, the plugin is not independent and as I mentioned, it would be part of a larger complex application. Application wide policies on client/server side would dictate things like minimum/maximum length of a comment, how often can a user comment, etc. Surely the plugin can be fed this information as parameters. </p>\n\n<p>Also, for a rich client side application, the data would have to be separated from its html representation, as many server round-trips can be saved since the application is data-aware and things could be stored locally, and periodically updated on the server, or upon interesting events within the application itself (such as when the window is closed). Here's why I don't really like a plugin approach. It would work as in provide a packaged representation, but it would still be centered around the DOM, which is going to be problematic when you have 20 such plugins in the application, which is not an absurd number by any means.</p>\n",
            "last_activity_date": 1276454176,
            "question_id": 2468311,
            "score": 16,
            "tags": [
                "javascript",
                "design-patterns",
                "web-applications",
                "code-organization"
            ],
            "title": "How would you organize a large complex web application (see basic example)?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I am a big fan of Peter Michaux's guide on how <a href=\"http://peter.michaux.ca/articles/how-i-write-javascript-widgets\">he writes javascript widgets</a></p>\n\n<p>Also useful are Christian Heilmann's <a href=\"http://www.wait-till-i.com/2008/05/23/script-configuration/\">script configuration</a> and the <a href=\"http://www.wait-till-i.com/2007/07/24/show-love-to-the-module-pattern/\">module pattern</a></p>\n\n<p>Those are generic javascript articles and aren't specific to a single library</p>\n\n<p>Other useful tricks are things like wrapping your code in an anonymous function to stop it interfering with other global libraries.</p>\n\n<pre><code>(function() {\n    //Your code goes in here\n})();\n</code></pre>\n\n<p>Regarding errors and best practice, John Resig has an interesting article on <a href=\"http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/\">javascript strict</a> that isn't in yet, but does have some handy information on the sort of things you should be avoiding.</p>\n\n<p>If you're still coming to terms with scoping within your objects, then you might find <a href=\"http://phrogz.net/js/Classes/OOPinJS.html\">this article</a> on private and public variables useful as well a a bit more technical definition by <a href=\"http://www.crockford.com/javascript/private.html\">Douglas Crockford</a></p>\n\n<p>Finally, remember to run your completed code through a <a href=\"http://www.jslint.com/\">code quality tool</a></p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>This can also give you some idea  <a href=\"http://alexmarandon.com/articles/web_widget_jquery/\">http://alexmarandon.com/articles/web_widget_jquery/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have a JS script (widget) which is added to other websites. Technically its similar to Google analytics. My question is: what are your advices for ensuring robustness, keeping the code from interfering with other code on the site, avoiding errors for users etc. In general, what should I know to write a professional grade widget.</p>\n\n<p>Notes: \nI can't use any JS library such as jquery etc..</p>\n",
            "last_activity_date": 1389827121,
            "question_id": 899812,
            "score": 22,
            "tags": [
                "javascript",
                "widget"
            ],
            "title": "Best practices for writing javascript widgets"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>if(arrayName.length &gt; index &amp;&amp; arrayName[index] !== null) {\n    //arrayName[index] has a value\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>if(!arrayName[index]){\n     // do stuff\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>All real arrays in Javascript contain <code>array.length</code> elements, starting with <code>array[0]</code> up until <code>array[array.length - 1]</code>.  Conceptually, there is no way for an array to have \"gaps\" in it ie specific indexes that just don't exist, unlike languages like PHP - though it <em>is</em> possible for some array values to be null, undefined, NaN, Infinity, 0, or a whole host of different values.</p>\n\n<p>Therefore, to find out if a value exists at a given position index (where index is 0 or a positive integer), you literally just use</p>\n\n<pre><code>if (index &lt; array.length) {\n  // do stuff\n}\n</code></pre>\n\n<p>That is, as long as your array index is <code>index &lt; array.length</code> then that index in the array is said to \"exist\" (whether it actually occupies memory or not is a detail left up to Javascript engine implementations, I guess).</p>\n\n<p>I suspect, however, you are not wanting to know if a given value exists, but whether that value is something meaningful.  That is, not \"undefined\", or perhaps, not \"undefined or null\".</p>\n\n<pre><code>if (typeof array[index] !== 'undefined') {\n</code></pre>\n\n<p>or</p>\n\n<pre><code>if (typeof array[index] !== 'undefined' &amp;&amp; array[index] !== null) {\n</code></pre>\n\n<p>It depends on what you're trying to achieve.</p>\n\n<p>Interestingly, because of Javascript's comparison rules, my last example can be optimised down to:</p>\n\n<pre><code>if (array[index] != null) {\n  // The == and != operator consider null equal to only null or undefined\n</code></pre>\n\n<hr>\n\n<p>Additional info Oct 2014:</p>\n\n<p>Another point that can be made is that even real arrays are also objects, and you can set arbitrary properties on them, so they could have an array <code>arr</code> with an <code>arr.length</code> of <code>3</code> but you can still set an arr[5], where \"5\" is the name of an arbitrary property not considered part of the array because it doesn't fall within <code>[0 ... arr.length-1]</code>.</p>\n",
                    "is_accepted": true,
                    "score": 216
                },
                {
                    "body": "<p>Can't we just do this:</p>\n\n<pre><code>if(arrayName.length &gt; 0){   \n    //this array is not empty \n}else{\n   //this array is empty\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<pre><code>if(typeof arr ==='object' &amp;&amp; arr instanceof Array ){\n   if(!arr.length){\n      println 'empty'\n   }else{\n      printn 'not Empty'\n   }\n\n}else{\n   println 'Null'\n}\n</code></pre>\n\n<p>If you mean by 'Null' -> Its elements are null or equals to '' , in this case : Check if the array is empty after filtering all 'null' elements</p>\n\n<pre><code>if(!arr.clean().length){return 'is null'}\n</code></pre>\n\n<p>Of course ,Add <strong>Clean</strong>  method before : </p>\n\n<pre><code>Array.prototype.clean=function(){return this.filter(function(e){return (typeof  e !=='undefined')&amp;&amp;(e!= null)&amp;&amp;(e!='')})}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>try this if array[index] is null</p>\n\n<pre><code>if (array[index] != null) \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Will this work for testing whether a value at position \"index\" exists or not, or is there a better way:</p>\n\n<pre><code>if(arrayName[index]==\"\"){\n     // do stuff\n}\n</code></pre>\n",
            "last_activity_date": 1425979972,
            "question_id": 2672380,
            "score": 119,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "How do I check if a (javascript) array value is empty or null"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Have you tried this?</p>\n\n<pre><code>$(\"#notification\").fadeOut(300, function(){ \n    $(this).remove();\n});\n</code></pre>\n\n<p>That is, using the current <strong>this</strong> context to target the element in the inner function and not the id. I use this pattern all the time - it should work.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>&lt;a onclick='$(\"#notification\").fadeOut(300, function() { $(this).remove(); });' class=\"notificationClose \"&gt;&lt;img src=\"close.png\"/&gt;&lt;/a&gt;\n</code></pre>\n\n<p>I think your double quotes around the <code>onclick</code> were making it not work. :)</p>\n\n<p><strong>EDIT</strong>: As pointed out below, inline javascript is evil and you should probably take this out of the <code>onclick</code> and move it to jQuery's <a href=\"http://docs.jquery.com/Events/click\"><code>click()</code></a> event handler. That is how the cool kids are doing it nowadays.</p>\n",
                    "is_accepted": true,
                    "score": 218
                },
                {
                    "body": "<p>you really should try to use jQuery in a separate file, not inline.  Here is what you need:</p>\n\n<pre><code>&lt;a class=\"notificationClose \"&gt;&lt;img src=\"close.png\"/&gt;&lt;/a&gt;\n</code></pre>\n\n<p>And then this at the bottom of your page in <code>&lt;script&gt;</code> tags at the very least or in a external JavaScript file.</p>\n\n<pre><code>$(\".notificationClose\").click(function() {\n    $(\"#notification\").fadeOut(\"normal\", function() {\n        $(this).remove();\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<p>If you're using it in several different places, you should turn it into a plugin.</p>\n\n<pre><code>jQuery.fn.fadeOutAndRemove = function(speed){\n    $(this).fadeOut(speed,function(){\n        $(this).remove();\n    })\n}\n</code></pre>\n\n<p>And then:</p>\n\n<pre><code>// Somewhere in the program code.\n$('div').fadeOutAndRemove('fast');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Use </p>\n\n<pre><code>.fadeOut(360).delay(400).remove();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>I'm trying to give fadeout effect to a div &amp; delete that div(id = \"notification\"), when an image is clicked.</p>\n\n<p>This is how I'm doing that:</p>\n\n<pre><code>&lt;a onclick=\"$(\"#notification\").fadeOut(300,function() { $(\"#notification\").remove(); });\" class=\"notificationClose \"&gt;&lt;img src=\"close.png\"/&gt;&lt;/a&gt;\n</code></pre>\n\n<p>This seems to not be working.\nWhat do I need to do to fix this?</p>\n",
            "last_activity_date": 1421087318,
            "question_id": 553402,
            "score": 87,
            "tags": [
                "javascript",
                "jquery",
                "inline"
            ],
            "title": "How to &quot;fadeOut&quot; &amp; &quot;remove&quot; a div in jQuery?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Gulp doesn't offer any kind of util for that, but you can use one of the many command args parsers. I like <a href=\"https://www.npmjs.org/package/yargs\"><code>yargs</code></a>. Should be:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var argv = require('yargs').argv;\n\ngulp.task('my-task', function() {\n    return gulp.src(argv.a == 1 ? options.SCSS_SOURCE : options.OTHER_SOURCE)\n        .pipe(sass({style:'nested'}))\n        .pipe(autoprefixer('last 10 version'))\n        .pipe(concat('style.css'))\n        .pipe(gulp.dest(options.SCSS_DEST));\n});\n</code></pre>\n\n<p>You can also combine it with <a href=\"https://github.com/robrich/gulp-if\"><code>gulp-if</code></a> to conditionally pipe the stream, very useful for dev vs. prod building:</p>\n\n<pre><code>var argv = require('yargs').argv,\n    gulpif = require('gulp-if'),\n    rename = require('gulp-rename'),\n    uglify = require('gulp-uglify');\n\ngulp.task('my-js-task', function() {\n  gulp.src('src/**/*.js')\n    .pipe(concat('out.js'))\n    .pipe(gulpif(argv.production, uglify()))\n    .pipe(gulpif(argv.production, rename({suffix: '.min'})))\n    .pipe(gulp.dest('dist/'));\n});\n</code></pre>\n\n<p>And call with <code>gulp my-js-task</code> or <code>gulp my-js-task --production</code>.</p>\n",
                    "is_accepted": true,
                    "score": 112
                },
                {
                    "body": "<p>In my project I use the following flag:</p>\n\n<pre><code>gulp styles --theme literature\n</code></pre>\n\n<p>Gulp offers an object <code>gulp.env</code> for that. It's deprecated in newer versions, so you must use gulp-util for that. The tasks looks like this:</p>\n\n<pre><code>var util = require('gulp-util');\n\ngulp.task('styles', function() {\n  return gulp.src(['src/styles/' + (util.env.theme ? util.env.theme : 'main') + '.scss'])\n    .pipe(compass({\n        config_file: './config.rb',\n        sass   : 'src/styles',\n        css    : 'dist/styles',\n        style  : 'expanded'\n\n    }))\n    .pipe(autoprefixer('last 2 version', 'safari 5', 'ie 8', 'ie 9', 'ff 17', 'opera 12.1', 'ios 6', 'android 4'))\n    .pipe(livereload(server))\n    .pipe(gulp.dest('dist/styles'))\n    .pipe(notify({ message: 'Styles task complete' }));\n});\n</code></pre>\n\n<p>The environment setting is available during all subtasks. So I can use this flag on the watch task too:</p>\n\n<pre><code>gulp watch --theme literature\n</code></pre>\n\n<p>And my styles task also works.</p>\n\n<p>Ciao\nRalf</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Here's a quick recipe I found:</p>\n\n<h2>gulpfile.js</h2>\n\n<pre><code>var gulp   = require('gulp');\n\n// npm install gulp yargs gulp-if gulp-uglify\nvar args   = require('yargs').argv;\nvar gulpif = require('gulp-if');\nvar uglify = require('gulp-uglify');\n\nvar isProduction = args.type === 'production';\n\ngulp.task('scripts', function() {\n  return gulp.src('**/*.js')\n    .pipe(gulpif(isProduction, uglify())) // only minify if production\n    .pipe(gulp.dest('dist'));\n});\n</code></pre>\n\n<h2>CLI</h2>\n\n<pre><code>gulp scripts --type production\n</code></pre>\n\n<p>Ref: <a href=\"https://github.com/gulpjs/gulp/blob/master/docs/recipes/pass-params-from-cli.md\">https://github.com/gulpjs/gulp/blob/master/docs/recipes/pass-params-from-cli.md</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If you've some strict (ordered!) arguments, then you can get them simply by checking <code>process.argv</code>.</p>\n\n<pre><code>var args = process.argv.slice(2);\nvar env = args[0];\n\nif (args[0] === 'env' &amp;&amp; args[1] === 'production');\n</code></pre>\n\n<p>Execute it: <code>gulp --env production</code></p>\n\n<p>...however, I think that this is <em>tooo</em> strict and not bulletproof! So, I fiddled a bit around... and ended up with this simple solution, below:</p>\n\n<pre><code>function getArg(key) {\n  var index = process.argv.indexOf(key);\n  var next = process.argv[index + 1];\n  return (index &lt; 0) ? null : (!next || next[0] === \"-\") ? true : next;\n}\n</code></pre>\n\n<p>The function eats an argument-name and will search for it in <code>process.argv</code>. If nothing was found it spits out <code>null</code>. Otherwise if their is no next argument or the next argument is a command and not a value (we differ with a dash) <code>true</code> gets returned. (That's because the key exist, but there's just no value). If all the cases before will fail, the next argument-value is what we get.</p>\n\n<p><strong><code>&gt; gulp watch --foo --bar 1337 -boom \"Foo isn't equal to bar.\"</code></strong></p>\n\n<pre><code>getArg(\"--foo\") // =&gt; true\ngetArg(\"--bar\") // =&gt; \"1337\"\ngetArg(\"-boom\") // =&gt; \"Foo isn't equal to bar.\"\ngetArg(\"--404\") // =&gt; null\n</code></pre>\n\n<p>Ok, enough for now... Here's a simple example using <em>gulp</em>:</p>\n\n<pre><code>var gulp = require(\"gulp\");\nvar sass = require(\"gulp-sass\");\nvar rename = require(\"gulp-rename\");\n\nvar env = getArg(\"--env\");\n\ngulp.task(\"styles\", function () {\n  return gulp.src(\"./index.scss\")\n  .pipe(sass({\n    style: env === \"production\" ? \"compressed\" : \"nested\"\n  }))\n  .pipe(rename({\n    extname: env === \"production\" ? \".min.css\" : \".css\"\n  }))\n  .pipe(gulp.dest(\"./build\"));\n});\n</code></pre>\n\n<p>Run it <code>gulp --env production</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There's a very simple way to do <code>on/off</code> flags without parsing the arguments. <code>gulpfile.js</code> is just a file that's executed like any other, so you can do:</p>\n\n<pre><code>var flags = {\n  production: false\n};\n\ngulp.task('production', function () {\n  flags.production = true;\n});\n</code></pre>\n\n<p>And use something like <code>gulp-if</code> to conditionally execute a step</p>\n\n<pre><code>gulp.task('build', function () {\n  gulp.src('*.html')\n    .pipe(gulp_if(flags.production, minify_html()))\n    .pipe(gulp.dest('build/'));\n});\n</code></pre>\n\n<p>Executing <code>gulp build</code> will produce a nice html, while <code>gulp production html</code> will minify it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I built a plugin to inject parameters from the commandline into the task callback.</p>\n\n<pre><code>gulp.task('mytask', function (production) {\n  console.log(production); // =&gt; true\n});\n\n// gulp mytask --production\n</code></pre>\n\n<p><a href=\"https://github.com/stoeffel/gulp-param\" rel=\"nofollow\">https://github.com/stoeffel/gulp-param</a></p>\n\n<p>If someone finds a bug or has a improvement to it, I am happy to merge PRs.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h2>Pass arguments from the command line</h2>\n\n<pre><code>// npm install --save-dev gulp gulp-if gulp-uglify minimist\n\nvar gulp = require('gulp');\nvar gulpif = require('gulp-if');\nvar uglify = require('gulp-uglify');\n\nvar minimist = require('minimist');\n\nvar knownOptions = {\n  string: 'env',\n  default: { env: process.env.NODE_ENV || 'production' }\n};\n\nvar options = minimist(process.argv.slice(2), knownOptions);\n\ngulp.task('scripts', function() {\n  return gulp.src('**/*.js')\n    .pipe(gulpif(options.env === 'production', uglify())) // only minify in production\n    .pipe(gulp.dest('dist'));\n});\n</code></pre>\n\n<p>Then run gulp with:</p>\n\n<pre><code>$ gulp scripts --env development\n</code></pre>\n\n<p><a href=\"https://github.com/gulpjs/gulp/edit/master/docs/recipes/pass-arguments-from-cli.md\" rel=\"nofollow\">Source</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Normally in Gulp tasks look like this:</p>\n\n<pre><code>gulp.task('my-task', function() {\n    return gulp.src(options.SCSS_SOURCE)\n        .pipe(sass({style:'nested'}))\n        .pipe(autoprefixer('last 10 version'))\n        .pipe(concat('style.css'))\n        .pipe(gulp.dest(options.SCSS_DEST));\n});\n</code></pre>\n\n<p>Is it possible to pass a command line flag to gulp (that's not a task) and have it run tasks conditionally based on that? For instance</p>\n\n<pre><code>gulp my-task -a 1\n\ngulp.task('my-task', function() {\n         if (a==1) {\n         var source = options.SCSS_SOURCE;\n         } else {\n       var source = options.OTHER_SOURCE;\n         }\n        return gulp.src(source)\n            .pipe(sass({style:'nested'}))\n            .pipe(autoprefixer('last 10 version'))\n            .pipe(concat('style.css'))\n            .pipe(gulp.dest(options.SCSS_DEST));\n    });\n</code></pre>\n",
            "last_activity_date": 1420656508,
            "question_id": 23023650,
            "score": 55,
            "tags": [
                "javascript",
                "node.js",
                "gulp"
            ],
            "title": "Is it possible to pass a flag to Gulp to have it run tasks in different ways?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>require('crypto').randomBytes(48, function(ex, buf) {\n  var token = buf.toString('hex');\n});\n</code></pre>\n\n<p>However, the 'hex' encoding only works in node v0.6.x or newer (well, actually it already worked in some 0.5.x releases, too).</p>\n",
                    "is_accepted": true,
                    "score": 98
                },
                {
                    "body": "<p>Synchronous option in-case if you are not a JS expert like me. Had to spend some time on how to access the inline function variable</p>\n\n<pre><code>var token = crypto.randomBytes(64).toString('hex');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<h2>1. Base 64 Encoding with URL and Filename Safe Alphabet</h2>\n\n<p><a href=\"http://tools.ietf.org/html/rfc4648#page-7\">Page 7 of RCF 4648</a> describes how to encode in base 64 with URL safety.\nYou can use an existing library like <a href=\"https://www.npmjs.org/package/base64url\">base64url</a> to do the job.</p>\n\n<p>The function will be:</p>\n\n<pre><code>var crypto = require('crypto');\nvar base64url = require('base64url');\n\n/** Sync */\nfunction randomStringAsBase64Url(size) {\n    return base64url(crypto.randomBytes(size));\n}\n</code></pre>\n\n<p>Usage example:</p>\n\n<pre><code>randomStringAsBase64Url(20);\n// Returns 'AXSGpLVjne_f7w5Xg-fWdoBwbfs' which is 27 characters length.\n</code></pre>\n\n<p>Note that the returned string length will not match with the size argument (size != final length).</p>\n\n<p><br></p>\n\n<h2>2. Crypto random values from limited set of characters</h2>\n\n<p>You can also build a strong random string from a limited set of characters like that:</p>\n\n<pre><code>var crypto = require('crypto');\n\n/** Sync */\nfunction randomString(length, chars) {\n    if(!chars) {\n        throw new Error('Argument \\'chars\\' is undefined');\n    }\n\n    var charsLength = chars.length;\n    if(charsLength &gt; 256) {\n        throw new Error('Argument \\'chars\\' should not have more than 256 characters'\n            + ', otherwise unpredictability will be broken');\n    }\n\n    var randomBytes = crypto.randomBytes(length)\n    var result = new Array(length);\n\n    var cursor = 0;\n    for (var i = 0; i &lt; length; i++) {\n        cursor += randomBytes[i];\n        result[i] = chars[cursor % charsLength]\n    };\n\n    return result.join('');\n}\n\n/** Sync */\nfunction randomAsciiString(length) {\n    return randomString(length,\n        'abcdefghijklmnopqrstuwxyzABCDEFGHIJKLMNOPQRSTUWXYZ0123456789');\n}\n</code></pre>\n\n<p>Usage example:</p>\n\n<pre><code>randomAsciiString(20);\n// Returns 'rmRptK5niTSey7NlDk5y' which is 20 characters length.\n\nrandomString(20, 'ABCDEFG');\n// Returns 'CCBAAGDGBBEGBDBECDCE' which is 20 characters length.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>In <a href=\"http://stackoverflow.com/questions/8838624/nodejs-send-email-on-registration/8842959#8842959\">this question</a> Erik needs to generate a secure random token in Node.js. There's the method <code>crypto.randomBytes</code> that generates a random Buffer. However, the base64 encoding in node is not url-safe, it includes <code>/</code> and <code>+</code> instead of <code>-</code> and <code>_</code>. Therefore, the easiest way to generate such token I've found is</p>\n\n<pre><code>require('crypto').randomBytes(48, function(ex, buf) {\n    token = buf.toString('base64').replace(/\\//g,'_').replace(/\\+/g,'-'));\n});\n</code></pre>\n\n<p>Is there a more elegant way?</p>\n",
            "last_activity_date": 1413538794,
            "question_id": 8855687,
            "score": 66,
            "tags": [
                "javascript",
                "node.js",
                "base64",
                "securestring"
            ],
            "title": "Secure random token in Node.js"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>My suggestion to you would the same another questioned I just answered at <a href=\"http://stackoverflow.com/questions/7499133/mapping-deeply-hierarchical-objects-to-custom-classes-using-knockout-mapping-plug\">http://stackoverflow.com/questions/7499133/mapping-deeply-hierarchical-objects-to-custom-classes-using-knockout-mapping-plug.</a></p>\n\n<p>Your reasoning for using mapping plug-in is reasonable and the one that I use.  Why type more code than you have to?</p>\n\n<p>In my experience with knockout (all of 4 months), I've found that the less I do manually and let the knockout routines do their thing, the better my apps seem to run.  My suggestion is try the simplest approach first.  If it doesn't meet your needs, look at how the simple approach is doing it's \"thing\" and determine what has to change to meet your needs.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>After using Knockout for a little longer, I've noticed that the mapping plugin has some additional options that give you much more fine grained control over the mapping process.  </p>\n\n<h1>Control type and amount of properties generated</h1>\n\n<p>There are several ways to accomplish this, and I'll go over some, but the end result is that you end up with a lighter result from the mapping plugin because everything isn't observable.  </p>\n\n<p>Basically you leave everything that you don't think will change, as a normal property and only make observables out of the specific items that you want to observe.</p>\n\n<h2>Make <code>mapping</code> omit certain properties</h2>\n\n<p>You can make the mapping plugin omit properties entirely from the end result by specifying things like <code>ignore</code> or <code>include</code>.  Both of these accomplish the same thing, just in opposite ways.  </p>\n\n<p>Note: Samples are from the <a href=\"http://knockoutjs.com/documentation/plugins-mapping.html\">knockout.js mapping plugin documentation</a>, comments added by me</p>\n\n<h3>Mapping Plugin Argument: <code>include</code></h3>\n\n<p>The following snippet will <strong>omit all properties</strong> from the source object other than those passed in via the <code>include</code> argument.  </p>\n\n<pre><code>// specify the specific properties to include as observables in the end result \nvar mapping = {\n    // only include these two properties\n    'include': [\"propertyToInclude\", \"alsoIncludeThis\"]\n}\n\n// viewModel will now only contain the two properties listed above, \n//    and they will be observable\nvar viewModel = ko.mapping.fromJS(data, mapping);\n</code></pre>\n\n<h3>Mapping Plugin Argument: <code>ignore</code></h3>\n\n<p>If you want to only <strong>omit certain properties</strong> from the source object, use the <code>ignore</code> argument as shown below.  It will make observables from all properties in the source object except for the specified properties.</p>\n\n<pre><code>// specify the specific properties to omit from the result, \n//    all others will be made observable\nvar mapping = {\n    // only ignore these two properties\n    'ignore': [\"propertyToIgnore\", \"alsoIgnoreThis\"]\n}\n\n// viewModel will now omit the two properties listed above, \n//    everything else will be included and they will be an observable\nvar viewModel = ko.mapping.fromJS(data, mapping);\n</code></pre>\n\n<h2>Control what properties are or are not made observable</h2>\n\n<p>If you need to include properties but you don't think that they will need to be made observable (for whatever reason), the mapping plugin has something that can help.</p>\n\n<h3>Mapping Plugin Argument: <code>copy</code></h3>\n\n<p>If you want the mapping plugin to simply copy the plain properties and not make them observable, use this argument, as shown below.</p>\n\n<pre><code>// tell the mapping plugin to handle all other properties normally, \n//    but to simply copy this property instead of making it observable\nvar mapping = {\n    'copy': [\"propertyToCopy\"]\n}\nvar viewModel = ko.mapping.fromJS(data, mapping);\n</code></pre>\n\n<h2>Gain complete control over the mapping process</h2>\n\n<p>If you want to have 100% control over what is created in the mapping process, <em>including the ability to put closures and subscriptions in your objects</em>, then you want to use the \"create\" option.</p>\n\n<h3>plain result with calculated properties</h3>\n\n<p>Here is an example where I was mapping data from an ajax call to an object with a <code>results</code> property.  I didn't want anything observable and I just wanted a simple generated property that would be made of the other simple properties on the object.  Maybe not the most compelling example but it demonstrates the functionality.</p>\n\n<pre><code>var searchMappingConfig = {\n    // specific configuration for mapping the results property\n    \"results\": {\n                    // specific function to use to create the items in the results array\n        \"create\": function (options) {\n            // return a new function so we can have the proper scope/value for \"this\", below\n            return new function () {\n\n                // instead of mapping like we normally would: ko.mapping.fromJS(options.data, {}, this);\n                // map via extend, this will just copy the properties from the returned json element to \"this\"\n                // we'll do this for a more light weight vm since every last property will just be a plain old property instead of observable\n                $.extend(this, options.data);\n\n                // all this to add a vehicle title to each item\n                this.vehicleTitle = this.Year + \"&lt;br /&gt;\" + this.Make + \" \" + this.Model;\n                }, this);\n            };\n        }\n    }\n}\n</code></pre>\n\n<h3>subscriptions and closures and mapping, oh my</h3>\n\n<p>Another situation is if you want closures and subscriptions in your result.  This example is too long to be included in its entirety but its for a vehicle make/model hierarchy.  I wanted all the models (children) for a given make (parent) to be un-enabled if the model was un-enabled and I wanted this to be done with a subscription.</p>\n\n<pre><code>// here we are specifying the way that items in the make array are created, \n//    since makes has a child array (Models), we will specify the way that \n//    items are created for that as well\nvar makesModelsMappingConfig = {\n   // function that has the configuration for creating makes\n   \"create\": function (options) {\n      // return a new function so we can have the proper \n      //    scope/value for \"this\", below\n      return new function () {\n\n         // Note: we have a parent / child relationship here, makes have models. In the \n         //    UI we are selecting makes and then using that to allow the user to select \n         //    models. Because of this, there is going to be some special logic in here \n         //    so that all the child models under a given make, will automatically \n         //    unselect if the user unselects the parent make.\n\n         // make the selected property a private variable so it can be closure'd over\n         var makeIsSelected = ko.protectedComputed(false);\n\n         // expose our property so we can bind in the UI\n         this.isSelected = makeIsSelected;\n\n         // ... misc other properties and events ...\n\n         // now that we've described/configured how to create the makes, \n         //    describe/configure how to create the models under the makes\n         ko.mapping.fromJS(options.data, {\n            // specific configuration for the \"Models\" property                  \n            \"Models\": {\n               // function that has the configuration for creating items \n               //    under the Models property\n               \"create\": function (model) {\n\n                  // we'll create the isSelected as a local variable so \n                  //    that we can flip it in the subscription below, \n                  //    otherwise we wouldnt have access to flip it\n                  var isSelected = ko.protectedComputed(false);\n\n                  // subscribe to the parents \"IsSelected\" property so \n                  //    the models can select/unselect themselves\n                  parentIsSelected.current.subscribe(function (value) {\n                     // set the protected computed to the same \n                     //    value as its parent, note that this \n                     //    is just protected, not the actual value\n                     isSelected(value);\n                  });\n\n\n                  // this object literal is what makes up each item \n                  //    in the Models observable array \n                  return {\n                     // here we're returning our local variable so \n                     //    we can easily modify it in our subscription\n                     \"isSelected\": isSelected,\n\n                     // ... misc properties to expose \n                     //     under the item in the Model array ...\n\n                  };\n               }\n            }\n         }, this);\n      };\n   }\n};\n</code></pre>\n\n<p>All in all, what I've found is that you rarely need 100% of an object that you'd pass to the plugin and you rarely need 100% of it to be observable.  Dig in with the mapping configuration options and create all sorts of complex and simple objects.  The idea is to only get everything you need, nothing more or less.</p>\n",
                    "is_accepted": false,
                    "score": 49
                },
                {
                    "body": "<p>A simpler but help-full add-on could be <a href=\"https://knockoutprojections.codeplex.com/\" rel=\"nofollow\">knockout-data-projections</a></p>\n\n<p>Currently, it does not handle js to viewmodel mappings, but it handles quite well view model to JS mappings.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Allen, my recent learning experience with Knockout.js has been similar to yours. We work with a deep hierarchical object graph from the server and I have defined explicit instantiable view model functions which preserve the basic structure of it.</p>\n\n<p>I began by defining each property explicitly as an observable on the relevant view model, but that quickly got out of hand. Also, a major reason for switching to using the mapping plugin was that we have to do frequent Ajax posts of the graph back to the server where it is merged with the persisted version, then validated on the server in such a way that numerous properties can change and collections be modified, and a new instance returned as the Ajax result where it has to be re-merged with the client representation. That became seriously difficult, and the mapping plugin helped big time by allowing the specification of identifiers for resolving adds / deletes / updates and to remap an updated graph onto the original.</p>\n\n<p>It also helped in the original graph creation through the use of the \"create\" option for sub view models. In each view model constructor I receive a reference to the parent view model plus the data with which to construct the child view model, then create further mapping options to create grandchildren from the passed-in child data.</p>\n\n<p>The only (slight) downside I recently found, as detailed in <a href=\"http://stackoverflow.com/questions/11148214/tojson-view-model-overrides-not-being-reflected-after-knockout-unmapping\">this question</a>, is that when doing ko.mapping.toJSON it doesn't hook into any toJSON overrides you may have defined on the prototypes of your view models in order to exclude properties from serialization. I have been able to get around that by specifying ignore options in the unmapping, as recommended by Ryan Niemeyer in that post.</p>\n\n<p>So in summary, I'll definitely be sticking with the mapping plugin. Knockout.js rules.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm still learning the proper usage of Knockout and I've found myself quickly getting away from ever typing <code>ko.observable</code> when setting up my viewmodel and instead just defining an object literal and passing it through the mapping plugin with something like </p>\n\n<pre><code>var viewModel = ko.mapping.fromJS(data);\n</code></pre>\n\n<p>or at the very least, something along the lines of stuffing all of my data into an attribute on the viewModel like so</p>\n\n<pre><code>var viewModel = { \n    ... events etc ... , \n    \"data\": ko.mapping.fromJS(data)\n}\n</code></pre>\n\n<p>To be honest, the main reason I've been doing this is to get around having to type <code>ko.observable</code> and <code>ko.observableArray</code> repetitively.  I'm just trying to figure out if this is a good approach and if there are any downsides to dropping the specific <code>var x = ko.observable()</code> declaration all together.  Also, I'm doing this all on load, not in response to any ajax call etc, which from what I can tell, is what the mapping plugin was designed for.</p>\n\n<p>In your work with knockout, do you still declare the observables manually, one by one, or have you gone with the mapping.fromJS method that I use?  Are there any specific downsides to using the mapping plugin so frequently like this? </p>\n\n<p>Edit:</p>\n\n<h2>Specific Example</h2>\n\n<p><a href=\"http://blog.stevensanderson.com/2010/07/12/editing-a-variable-length-list-knockout-style/\">In this article</a>, Steve sets up his viewModel by doing</p>\n\n<pre><code>var initialData = [ { ... } , { ... } ]; // json from the serializer\nvar viewModel = {\n    gifts : ko.observableArray(initialData)\n};\n</code></pre>\n\n<p>Normally, I'd just use <code>ko.mapping.fromJS</code> for this situation as well, specifically to make sure the objects within the array are turned into observables as well.  Looking at what he did, my approach seems like its overkill and adds a bit of unnecessary overhead.</p>\n",
            "last_activity_date": 1357223839,
            "question_id": 7488208,
            "score": 50,
            "tags": [
                "javascript",
                "mvvm",
                "knockout.js",
                "knockout-mapping-plugin"
            ],
            "title": "Am I overusing the Knockout mapping plugin by always using it to do my viewmodel?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You should be calling the <code>tick</code> function in the callback for <code>query</code>.</p>\n\n<pre><code>function dataCtrl($scope, $timeout, Data) {\n    $scope.data = [];\n\n    (function tick() {\n        $scope.data = Data.query(function(){\n            $timeout(tick, 1000);\n        });\n    })();\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 68
                },
                {
                    "body": "<p>More recent versions of angular have introduced <a href=\"http://docs.angularjs.org/api/ng.%24interval\">$interval</a> which works even better than <a href=\"http://docs.angularjs.org/api/ng.%24timeout\">$timeout</a> for server polling.</p>\n\n<pre><code>var refreshData = function() {\n    // Assign to scope within callback to avoid data flickering on screen\n    Data.query({ someField: $scope.fieldValue }, function(dataElements){\n        $scope.data = dataElements;\n    });\n};\n\nvar promise = $interval(refreshData, 1000);\n\n// Cancel interval on page changes\n$scope.$on('$destroy', function(){\n    if (angular.isDefined(promise)) {\n        $interval.cancel(promise);\n        promise = undefined;\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I'm trying to learn AngularJS.  My first attempt to get new data every second worked:</p>\n\n<pre><code>'use strict';\n\nfunction dataCtrl($scope, $http, $timeout) {\n    $scope.data = [];\n\n    (function tick() {\n        $http.get('api/changingData').success(function (data) {\n            $scope.data = data;\n            $timeout(tick, 1000);\n        });\n    })();\n};\n</code></pre>\n\n<p>When I simulate a slow server by sleeping the thread for 5 seconds it waits for the response before updating the UI and setting another timeout.  The problem is when I rewrote the above to use Angular modules and DI for module creation:</p>\n\n<pre><code>'use strict';\n\nangular.module('datacat', ['dataServices']);\n\nangular.module('dataServices', ['ngResource']).\n    factory('Data', function ($resource) {\n        return $resource('api/changingData', {}, {\n            query: { method: 'GET', params: {}, isArray: true }\n        });\n    });\n\nfunction dataCtrl($scope, $timeout, Data) {\n    $scope.data = [];\n\n    (function tick() {\n        $scope.data = Data.query();\n        $timeout(tick, 1000);\n    })();\n};\n</code></pre>\n\n<p>This only works if the server response is fast. If there's any delay it spams out 1 request a second without waiting for a response and seems to clear the UI. I think I need to use a callback function. I tried:</p>\n\n<pre><code>var x = Data.get({}, function () { });\n</code></pre>\n\n<p>but got an error: \"Error: destination.push is not a function\"  This was based on the docs for <a href=\"http://docs.angularjs.org/api/ngResource.%24resource\">$resource</a> but I didn't really understand the examples there.</p>\n\n<p>How do I make the second approach work?</p>\n",
            "last_activity_date": 1390973746,
            "question_id": 13671031,
            "score": 47,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Server polling with AngularJS"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Backbone.localStorage is an external file you can use which overwrites Backbone.Sync. </p>\n\n<p>You can use simple feature detection for whether the user is offline or online and then asynchronously load Backbone.localStorage.js if they are offline.</p>\n\n<p>If neccesary you can also pass in a specific version of <code>Backbone.sync</code> to your models and collections.</p>\n\n<p>If you want to do both at the same time you'll have to write your own version of Backbone.sync that both calls the server and calls localStorage.</p>\n\n<p>The easiest way to do this is to just define</p>\n\n<pre><code>Backbone.sync = function() {\n    originalSync.apply(this, arguments);\n    localStorageSync.apply(this, arguments);\n}\n</code></pre>\n\n<p><strong>Edit:</strong></p>\n\n<p>As mentioned in the comments, if you use the latest backbone <a href=\"https://github.com/jeromegn/Backbone.localStorage\">localStorage plugin</a> then you can do the following</p>\n\n<pre><code>Backbone.sync = function Sync() {\n    Backbone.ajaxSync.apply(this, arguments);\n    return Backbone.localSync.apply(this, arguments);\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 44
                }
            ],
            "body": "<p>I have been experimenting with the localstorage module for Backbone.js (https://github.com/jeromegn/Backbone.localStorage). As I understand it this overloads Backbone.sync and therefore stops backbone from pushing to the server(?). Ideally, I would like pass my data back to the server as well and persist it locally when online and just use localstorage when offline (you know, the perfect app). I haven't found any documentation yet. </p>\n\n<p>Is Backbone.localStorage a part of this?\nHas anyone been able to build this scenario? \nHow is this done? (Please tell me I don't have to roll my own.)</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1338550098,
            "question_id": 5761349,
            "score": 41,
            "tags": [
                "javascript",
                "local-storage",
                "offline",
                "backbone.js"
            ],
            "title": "Backbone.js able to do rest and localstorage?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>In <code>drinkLonghand</code>, you use the code</p>\n\n<pre><code>scope.flavor = attrs.flavor;\n</code></pre>\n\n<p>During the linking phase, interpolated attributes haven't yet been evaluated, so their values are <code>undefined</code>. (They work outside of the <code>ng-repeat</code> because in those instances you aren't using string interpolation; you're just passing in a regular ordinary string, e.g. \"strawberry\".) This is mentioned in the <a href=\"http://docs.angularjs.org/guide/directive\">Directives developer guide</a>, along with a method on <code>Attributes</code> that is not present <a href=\"http://docs.angularjs.org/api/ng.%24compile.directive.Attributes\">in the API documentation</a> called <code>$observe</code>:</p>\n\n<blockquote>\n  <p>Use <code>$observe</code> to observe the value changes of attributes that contain interpolation (e.g. <code>src=\"{{bar}}\"</code>). Not only is this very efficient but it's also the only way to easily get the actual value because during the linking phase the interpolation hasn't been evaluated yet and so the value is at this time set to <code>undefined</code>.</p>\n</blockquote>\n\n<p>So, to fix <em>this</em> problem, your <code>drinkLonghand</code> directive should look like this:</p>\n\n<pre><code>app.directive(\"drinkLonghand\", function() {\n  return {\n    template: '&lt;div&gt;{{flavor}}&lt;/div&gt;',\n    link: function(scope, element, attrs) {\n      attrs.$observe('flavor', function(flavor) {\n        scope.flavor = flavor;\n      });\n    }\n  };\n});\n</code></pre>\n\n<p>However, the problem with this is that it doesn't use an isolate scope; thus, the line</p>\n\n<pre><code>scope.flavor = flavor;\n</code></pre>\n\n<p>has the potential to overwrite a pre-existing variable on the scope named <code>flavor</code>. Adding a blank isolate scope also doesn't work; this is because Angular attempts to interpolate the string on based on the directive's scope, upon which there is no attribute called <code>flav</code>. (You can test this by adding <code>scope.flav = 'test';</code> above the call to <code>attrs.$observe</code>.)</p>\n\n<p>Of course, you could fix this with an isolate scope definition like</p>\n\n<pre><code>scope: { flav: '@flavor' }\n</code></pre>\n\n<p>or by creating a non-isolate child scope</p>\n\n<pre><code>scope: true\n</code></pre>\n\n<p>or by not relying on a <code>template</code> with <code>{{flavor}}</code> and instead do some direct DOM manipulation like</p>\n\n<pre><code>attrs.$observe('flavor', function(flavor) {\n  element.text(flavor);\n});\n</code></pre>\n\n<p>but that defeats the purpose of the exercise (e.g. it'd be easier to just use the <code>drinkShortcut</code> method). So, to make this directive work, we'll break out the <a href=\"http://docs.angularjs.org/api/ng.%24interpolate\"><code>$interpolate</code> service</a> to do the interpolation ourself on the directive's <code>$parent</code> scope:</p>\n\n<pre><code>app.directive(\"drinkLonghand\", function($interpolate) {\n  return {\n    scope: {},\n    template: '&lt;div&gt;{{flavor}}&lt;/div&gt;',\n    link: function(scope, element, attrs) {\n      // element.attr('flavor') == '{{flav}}'\n      // `flav` is defined on `scope.$parent` from the ng-repeat\n      var fn = $interpolate(element.attr('flavor'));\n      scope.flavor = fn(scope.$parent);\n    }\n  };\n});\n</code></pre>\n\n<p>Of course, this only works for the initial value of <code>scope.$parent.flav</code>; if the value is able to change, you'd have to <a href=\"http://docs.angularjs.org/api/ng.%24rootScope.Scope#%24watch\">use <code>$watch</code></a> and reevaluate the result of the interpolate function <code>fn</code> (I'm not positive off the top of my head how you'd know what to <code>$watch</code>; you might just have to pass in a function). <code>scope: { flavor: '@' }</code> is a nice shortcut to avoid having to manage all this complexity.</p>\n\n<p><strong>[Update]</strong></p>\n\n<p>To answer the question from the comments:</p>\n\n<blockquote>\n  <p>How is the shortcut method solving this problem behind the scenes? Is it using the $interpolate service as you did, or is it doing something else?</p>\n</blockquote>\n\n<p>I wasn't sure about this, so I looked in the source. I found the following in <code>compile.js</code>:</p>\n\n<pre><code>forEach(newIsolateScopeDirective.scope, function(definiton, scopeName) {\n   var match = definiton.match(LOCAL_REGEXP) || [],\n       attrName = match[2]|| scopeName,\n       mode = match[1], // @, =, or &amp;\n       lastValue,\n       parentGet, parentSet;\n\n   switch (mode) {\n\n     case '@': {\n       attrs.$observe(attrName, function(value) {\n         scope[scopeName] = value;\n       });\n       attrs.$$observers[attrName].$$scope = parentScope;\n       break;\n     }\n</code></pre>\n\n<p>So it seems that <code>attrs.$observe</code> can be told internally to use a different scope than the current one to base the attribute observation on (the next to last line, above the <code>break</code>). While it may be tempting to use this yourself, keep in mind that anything with the double-dollar <code>$$</code> prefix should be considered private to Angular's private API, and is subject to change without warning (not to mention you get this for free anyway when using the <code>@</code> mode).</p>\n",
                    "is_accepted": true,
                    "score": 60
                }
            ],
            "body": "<p>If you prefer to see the question in working code, start here: <a href=\"http://jsbin.com/ayigub/2/edit\">http://jsbin.com/ayigub/2/edit</a></p>\n\n<p>Consider this almost equivalent ways to write a simple direcive:</p>\n\n<pre><code>app.directive(\"drinkLonghand\", function() {\n  return {\n    scope: {},\n    template: '&lt;div&gt;{{flavor}}&lt;/div&gt;',\n    link: function(scope, element, attrs) {\n      scope.flavor = attrs.flavor;\n    }\n  };\n});\n\napp.directive(\"drinkShortcut\", function() {\n  return {\n    scope: { flavor: '@'},\n    template: '&lt;div&gt;{{flavor}}&lt;/div&gt;'\n  };\n});\n</code></pre>\n\n<p>When used by themselves, the two directives work and behave identically:</p>\n\n<pre><code>  &lt;!-- This works --&gt;\n  &lt;div drink-longhand flavor=\"strawberry\"&gt;&lt;/div&gt;\n  &lt;hr/&gt;\n\n  &lt;!-- This works --&gt;\n  &lt;div drink-shortcut flavor=\"blueberry\"&gt;&lt;/div&gt;\n  &lt;hr/&gt;\n</code></pre>\n\n<p>However, when used within an ng-repeat, only the shortcut version works:</p>\n\n<pre><code>  &lt;!-- Using the shortcut inside a repeat also works --&gt;\n  &lt;div ng-repeat=\"flav in ['cherry', 'grape']\"&gt;\n    &lt;div drink-shortcut flavor=\"{{flav}}\"&gt;&lt;/div&gt;\n  &lt;/div&gt;\n  &lt;hr/&gt;\n\n  &lt;!-- HOWEVER: using the longhand inside a repeat DOESN'T WORK --&gt;      \n  &lt;div ng-repeat=\"flav in ['cherry', 'grape']\"&gt;\n    &lt;div drink-longhand flavor=\"{{flav}}\"&gt;&lt;/div&gt;\n  &lt;/div&gt;\n</code></pre>\n\n<p>My questions are:</p>\n\n<ol>\n<li>Why does the longhand version not work inside an ng-repeat?</li>\n<li>How could you make the longhand version work inside an ng-repeat?</li>\n</ol>\n",
            "last_activity_date": 1422641262,
            "question_id": 16502559,
            "score": 36,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-directive"
            ],
            "title": "Using a directive inside an ng-repeat, and a mysterious power of scope &#39;@&#39;"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>(function($) {\n$.fn.swipe = function(options) {\n    // Default thresholds &amp; swipe functions\n    var defaults = {\n        threshold: {\n            x: 30,\n            y: 10\n        },\n        swipeLeft: function() { alert('swiped left') },\n        swipeRight: function() { alert('swiped right') },\n        preventDefaultEvents: true\n    };\n\n    var options = $.extend(defaults, options);\n\n    if (!this) return false;\n\n    return this.each(function() {\n\n        var me = $(this)\n\n        // Private variables for each element\n        var originalCoord = { x: 0, y: 0 }\n        var finalCoord = { x: 0, y: 0 }\n\n        // Screen touched, store the original coordinate\n        function touchStart(event) {\n            console.log('Starting swipe gesture...')\n            originalCoord.x = event.targetTouches[0].pageX\n            originalCoord.y = event.targetTouches[0].pageY\n        }\n\n        // Store coordinates as finger is swiping\n        function touchMove(event) {\n            if (defaults.preventDefaultEvents)\n                event.preventDefault();\n            finalCoord.x = event.targetTouches[0].pageX // Updated X,Y coordinates\n            finalCoord.y = event.targetTouches[0].pageY\n        }\n\n        // Done Swiping\n        // Swipe should only be on X axis, ignore if swipe on Y axis\n        // Calculate if the swipe was left or right\n        function touchEnd(event) {\n            console.log('Ending swipe gesture...')\n            var changeY = originalCoord.y - finalCoord.y\n            if(changeY &lt; defaults.threshold.y &amp;&amp; changeY &gt; (defaults.threshold.y*-1)) {\n                changeX = originalCoord.x - finalCoord.x\n\n                if(changeX &gt; defaults.threshold.x) {\n                    defaults.swipeLeft()\n                }\n                if(changeX &lt; (defaults.threshold.x*-1)) {\n                    defaults.swipeRight()\n                }\n            }\n        }\n\n        // Swipe was canceled\n        function touchCancel(event) { \n            console.log('Canceling swipe gesture...')\n        }\n\n        // Add gestures to all swipable areas\n        this.addEventListener(\"touchstart\", touchStart, false);\n        this.addEventListener(\"touchmove\", touchMove, false);\n        this.addEventListener(\"touchend\", touchEnd, false);\n        this.addEventListener(\"touchcancel\", touchCancel, false);\n\n    });\n};\n})(jQuery);\n\n\n$('.swipe').swipe({\n swipeLeft: function() { $('#someDiv').fadeIn() },\n swipeRight: function() { $('#someDiv').fadeOut() },\n})\n</code></pre>\n\n<p>and this is how you detect iphone</p>\n\n<pre><code>if((navigator.userAgent.match(/iPhone/i)) || (navigator.userAgent.match(/iPod/i))) {\n     if (document.cookie.indexOf(\"iphone_redirect=false\") == -1) window.location = \"path to iphone page\";\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>There's also jQuery.touchwipe at <a href=\"http://www.netcu.de/jquery-touchwipe-iphone-ipad-library\">http://www.netcu.de/jquery-touchwipe-iphone-ipad-library</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The smallest and most jQuery-esque solution is here: <a href=\"https://github.com/eikes/jquery.swipe-events.js\">https://github.com/eikes/jquery.swipe-events.js</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>So, I'm looking to implement the ability for a plugin I wrote to read a touch \"swipe\" from a touch-capable internet device, like an iPhone, iPad or android.</p>\n\n<p>Is there anything out there? I'm not looking for something as full as jQtouch, though was considering reverse engineering the code I would need out of it.</p>\n\n<p>Any suggestions on the best way to approach this? A snippet of code already available?</p>\n\n<p>Addendum: I realize in hindsight the solution won't strictly be jQuery, as I'm pretty sure there aren't any built-in methods to handle this. I would expect standard Javascript to find itself in the answer.</p>\n",
            "last_activity_date": 1333120258,
            "question_id": 2701139,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "iphone",
                "ipad"
            ],
            "title": "Standalone jQuery &quot;touch&quot; method?"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>Believe it or not, the \"FINALLY\" moment for me was the addition of <a href=\"http://api.jquery.com/delay/\" rel=\"nofollow\"><code>delay()</code></a>:</p>\n\n<pre><code>$(\"#notice\").slideDown('500').delay(4000).slideUp('500'); // = Pure awesome :)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 58
                },
                {
                    "body": "<p>I don't really have a favorite, here's an overview of 15 new features for those who don't know what this is all about:</p>\n\n<p><a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/jquery-1-4-released-the-15-new-features-you-must-know/\" rel=\"nofollow\">http://net.tutsplus.com/tutorials/javascript-ajax/jquery-1-4-released-the-15-new-features-you-must-know/</a></p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Well the performance improvements are of course something I appreciate, but I guess I can't say it's a \"finally\" since it's something that's subject to constant improvement :) The DOM-building (Quick Element Construction) syntax looks really convenient, and the <code>detach</code> method also looks quite usable: it allows you to temporarily remove an object from the DOM, but keeps all the handlers assigned to it, so that it'll work just the same way, when reinserted.</p>\n\n<p>I guess there's not so much a lot of things that I've been missing, but now that these new features are out there, there's a bunch that I'm anxious to start using :)</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Event delegation for focus and bubble events:</p>\n\n<ul>\n<li><p><a href=\"http://api.jquery.com/focusin/\" rel=\"nofollow\">http://api.jquery.com/focusin/</a></p></li>\n<li><p><a href=\"http://api.jquery.com/focusout/\" rel=\"nofollow\">http://api.jquery.com/focusout/</a></p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The ability to create elements on the fly in a more terse manner, by passing all attributes as the second argument to <code>jQuery()</code>:</p>\n\n<pre><code>jQuery('&lt;div/&gt;', {\n    id: 'foo',\n    mouseenter: function() {\n        // do stuff\n    },\n    html: jQuery('&lt;a/&gt;', {\n        href: 'http://google.com',\n        click: function() {\n            // do stuff\n        }\n    })\n});\n</code></pre>\n\n<p>All non-attribute properties map to the corresponding jQuery method. So having <code>html</code> there will call <code>.html()</code> and having <code>click</code> will bind a new <code>click</code> event via <code>.click()</code>...</p>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>For me it was this:</p>\n\n<blockquote>\n  <p>\"All Events Can Be Live Events\"</p>\n  \n  <p>\"We\u2019re very proud to count some\n  addtional events amongst those\n  supported by live(). 1.4 introduces\n  cross-browser support for change,\n  submit, focusin, focusout, mouseenter,\n  and mouseleave via the event\n  delegation in .live().\"</p>\n</blockquote>\n\n<p>I've been waiting for this on the change event for ages!</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I am a speed freak so any speed improvement is always welcomed by me</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I really like delay() and detach() the most, to be honest. The performance improvements are a huge plus as well but delay() is probably the single most amazing part of it. Simple but ultra useful. No more setTimeouts().</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>For me, it's the ability to now write event handlers with the <code>live()</code> handler. I know that <code>live</code> was present in the last version (1.3.2) also, but it wasn't fully supported.</p>\n\n<p>This makes the code infinitely simpler especially if you have most of the DOM being created on the fly or via Ajax requests.</p>\n\n<p>More about <code>live</code> here: <a href=\"http://api.jquery.com/live/\" rel=\"nofollow\">http://api.jquery.com/live/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>live() calls with events such as change is a big one for me. I have been wanting this for sometime now.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It has been very modular since 1.3+.  For example, when you don't need the ajax library, it is nice to build without it.  Keep file sizes down.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Best feature in my opinion is allowing functions in setters:</p>\n\n<pre><code>jQuery('li.selected').html(function(i, li) {\n   return \"&lt;strong&gt;\" + li + \"&lt;/strong&gt;\";\n});\n</code></pre>\n\n<p>A lot of code that required $.each can be removed now.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>Call me crazy, but just the added number of tests gives me a warm fuzzy feeling.  I almost want to upvote every answer :)_</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think unwrap() is simple, elegant, and you get an innerHTML present at the end!</p>\n\n<blockquote>\n  <p>The new unwrap method will take the\n  children of a given parent and replace\n  said parent with them. Like so:</p>\n</blockquote>\n\n<pre><code>&lt;body&gt;\n    &lt;div&gt;\n        &lt;p&gt;this&lt;/p&gt; &lt;p&gt;is&lt;/p&gt; &lt;p&gt;fun&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n\n$('div').unwrap();\n\n&lt;body&gt;\n   &lt;p&gt;this&lt;/p&gt; &lt;p&gt;is&lt;/p&gt; &lt;p&gt;fun&lt;/p&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>$.proxy()\n</code></pre>\n\n<p>To make sure that <em>this</em> always means <em>this</em> rather than <em>that</em>...</p>\n\n<p>Example from <a href=\"http://www.jimmycuadra.com/blog/16-understanding-jquery-1-4-s-proxy-method\" rel=\"nofollow\">here</a></p>\n\n<pre><code>MyModule = function() {\n  this.$div = $('#testdiv');\n  this.myString = \"Hi! I'm an object property!\";\n\n  this.$div.click($.proxy(this.handleClick, this));\n};\n\nMyModule.prototype.handleClick = function() {\n  console.log(this.myString); // Hi! I'm an object property!\n};\n\nvar m = new MyModule();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>A recent new jQuery version has been released, the jQuery v1.4. You can read all about it <a href=\"http://jquery14.com/day-01/jquery-14\" rel=\"nofollow\">here</a>. It allows you to do some pretty neat stuff such as:</p>\n\n<pre><code>$(\"div.test\").bind({\n  click: function(){\n    $(this).addClass(\"active\");\n  },\n  mouseenter: function(){\n    $(this).addClass(\"inside\");\n  },\n  mouseleave: function(){\n    $(this).removeClass(\"inside\");\n  }\n});\n</code></pre>\n\n<p><strong>What do you like the most about this new version? What is the thing that made you go \"FINALLY!\"?</strong> </p>\n\n<hr>\n\n<p><em>Added a bounty to get more feedback and accept an answer</em></p>\n",
            "last_activity_date": 1264397856,
            "question_id": 2070375,
            "score": 53,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "What are you the most excited about in the new versions of jQuery?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>var matches = [];\n$(\".className:checked\").each(function() {\n    matches.push(this.value);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>You can use the <a href=\"http://docs.jquery.com/Selectors/checkbox\"><code>:checkbox</code></a> and <a href=\"http://docs.jquery.com/Selectors/checked\"><code>:checked</code></a> pseudo-selectors and the <code>.class</code> selector, with that you will make sure that you are getting the right elements, only checked checkboxes with the class you specify.</p>\n\n<p>Then you can easily use the <a href=\"http://docs.jquery.com/Traversing/map\">Traversing/map</a> method to get an array of values:</p>\n\n<pre><code>var values = $('input:checkbox:checked.group1').map(function () {\n  return this.value;\n}).get(); // [\"18\", \"55\", \"10\"]\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 142
                },
                {
                    "body": "<p>You can also add <a href=\"http://underscorejs.org/#map\">underscore.js</a> to your project and will be able to do it in one line:</p>\n\n<pre><code>_.map($(\"input[name='category_ids[]']:checked\"), function(el){return $(el).val()})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/416752/select-values-of-checkbox-group-with-jquery\">Select values of checkbox group with jQuery</a>  </p>\n</blockquote>\n\n\n\n<p>In HTML I have a set of checkboxes grouped together by a class. I want to get an array in jQuery containing all the checkboxes that are selected/checked for that class (so other checkboxes on the page are ignored). </p>\n\n<p>So HTML code like this:</p>\n\n<pre><code>&lt;input type=\"checkbox\" class=\"group1\" value=\"18\" checked=\"checked\" /&gt;\n&lt;input type=\"checkbox\" class=\"group1\" value=\"20\" /&gt;\n&lt;input type=\"checkbox\" class=\"group1\" value=\"15\" /&gt;\n&lt;input type=\"checkbox\" class=\"group2\" value=\"14\" /&gt;\n&lt;input type=\"checkbox\" class=\"group1\" value=\"55\" checked=\"checked\" /&gt;\n&lt;input type=\"checkbox\" class=\"group1\" value=\"10\" checked=\"checked\" /&gt;\n&lt;input type=\"checkbox\" class=\"group2\" value=\"77\" checked=\"checked\" /&gt;\n&lt;input type=\"checkbox\" class=\"group1\" value=\"11\" /&gt;\n</code></pre>\n\n<p>Would return the values of the checked/selected <code>group1</code> checkboxes into an array like this:</p>\n\n<pre><code>var values = [ 18, 55, 10 ];\n</code></pre>\n",
            "last_activity_date": 1352899530,
            "question_id": 2099164,
            "score": 52,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "jQuery Array of all selected checkboxes (by class)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can use <a href=\"http://api.rubyonrails.org/classes/ActionView/Helpers/JavaScriptHelper.html#M001756\"><code>link_to_function</code></a> (removed in Rails 4.1):</p>\n\n<pre class=\"lang-rb prettyprint-override\"><code>link_to_function 'My link with obtrusive JavaScript', 'alert(\"Oh no!\")'\n</code></pre>\n\n<p>Or, if you absolutely need to use <a href=\"http://api.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html#M001597\"><code>link_to</code></a>:</p>\n\n<pre class=\"lang-rb prettyprint-override\"><code>link_to 'Another link with obtrusive JavaScript', '#',\n        :onclick =&gt; 'alert(\"Please no!\")'\n</code></pre>\n\n<p>However, putting JavaScript right into your generated HTML is <strong>obtrusive</strong>, and is <strong>bad practice</strong>.</p>\n\n<p>Instead, your Rails code should simply be something like this:</p>\n\n<pre class=\"lang-rb prettyprint-override\"><code>link_to 'Link with unobtrusive JavaScript',\n        '/actual/url/in/case/javascript/is/broken',\n        :id =&gt; 'my-link'\n</code></pre>\n\n<p>And assuming you're using the <a href=\"http://prototypejs.org/\">Prototype JS framework</a>, JS like this in your <code>application.js</code>:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$('my-link').observe('click', function (event) {\n  alert('Hooray!');\n  event.stop(); // Prevent link from following through to its given href\n});\n</code></pre>\n\n<p>Or if you're using <a href=\"http://jquery.com/\">jQuery</a>:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$('#my-link').click(function (event) {\n  alert('Hooray!');\n  event.preventDefault(); // Prevent link from following its href\n});\n</code></pre>\n\n<p>By using this third technique, you guarantee that the link will follow through to some other page&mdash;not just fail silently&mdash;if JavaScript is unavailable for the user. Remember, JS could be unavailable because the user has a poor internet connection (e.g., mobile device, public wifi), the user or user's sysadmin disabled it, or an unexpected JS error occurred (i.e., developer error).</p>\n",
                    "is_accepted": true,
                    "score": 123
                },
                {
                    "body": "<p>To follow up on Ron's answer if using JQuery and putting it in application.js or the head section you need to wrap it in a ready() section...</p>\n\n<pre><code>$(document).ready(function() {\n  $('#my-link').click(function(event){\n    alert('Hooray!');\n    event.preventDefault(); // Prevent link from following its href\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>How do I create a link of this type...</p>\n\n<pre><code>&lt;a href=\"#\" onClick=\"document.getElementById('search').value=this.value\"&gt;\n</code></pre>\n\n<p>...using method <code>link_to</code> in Rails?</p>\n\n<p>I couldn't figure it out from <a href=\"http://api.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html\">http://api.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html</a>.</p>\n",
            "last_activity_date": 1401833528,
            "question_id": 698858,
            "score": 46,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "ruby"
            ],
            "title": "Link_to method and onClick event in Rails"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>First, I'll clear something up about Google's offering. It will actually load the smallest format your browser can handle. WOFF offers small file sizes, and your browser supports it, so it's the one you see. WOFF is also fairly widely supported. However, in Opera for example, you'll probably get the TrueType version of the font.</p>\n\n<p>The file size logic is also, I believe, why Font Squirrel tries them in that order. But that is mostly speculation on my part.</p>\n\n<p>If you're working in an environment where every request and byte counts, you'll have to do some profiling to find out which works best for your use case. Will people be only viewing one page, and never visiting again? If so, caching rules don't matter as much. If they're browsing or returning, Google might have better caching rules than your server. Is latency the bigger problem, or bandwidth? If latency, aim for fewer requests, so host it locally and combine files as much as possible. If bandwidth, go with whichever option ends up with the smallest code and smallest font format.</p>\n\n<p>Now, on to the CSS vs JS consideration. Let's look at the following piece of HTML:</p>\n\n<pre><code>&lt;head&gt;\n    &lt;script type=\"text/javascript\" src=\"script1.js\"&gt;&lt;/script&gt;\n    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style1.css\" /&gt;\n    &lt;style type=\"text/css\"&gt;\n        @import url(style2.css);\n    &lt;/style&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        (function() {\n            var wf = document.createElement('script');\n            wf.src = 'script2.js';\n            wf.type = 'text/javascript';\n            wf.async = 'true';\n            var s = document.getElementsByTagName('script')[0];\n            s.parentNode.insertBefore(wf, s);\n        })();\n    &lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>In many cases, <code>script1</code>, <code>style1</code>, and <code>style2</code> would be blocking. This means the browser can't continue displaying the document until that resource has loaded (although modern browsers fudge this a bit). Which can actually be a good thing, especially with stylesheets. It prevents a flash of unstyled content, and it also prevents the giant shift that would occur when applying the styles (and shifting content is really annoying as a user).</p>\n\n<p>On the other hand, <code>script2</code> wouldn't be blocking. It can be loaded later, and the browser can move on to parsing and displaying the rest of the document. So that can be beneficial too.</p>\n\n<p>Specifically talking about fonts (and even more specifically, Google's offering), I would probably stick with a CSS method (I like <code>@import</code> because it keeps styling with the stylesheet, but that could be just me). The JS file loaded by the script (<a href=\"http://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js\">http://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js</a>) is larger than the <code>@font-face</code> declaration, and just <em>looks</em> like a lot more work. And I don't believe loading the actual font itself (the WOFF or TTF) is blocking, so it shouldn't delay things too much. I'm not personally a huge fan of CDNs, but the fact is that they're REALLY fast. Google's servers will beat most shared hosting plans by a landslide, and because their fonts are so popular, people might even have them cached already.</p>\n\n<p>And that's all I've got.</p>\n\n<p><em>I have no experience with Typekit, so I left it out of my theorizing. If there's any inaccuracies, not counting generalizations between browsers for arguments sake, please point them out.</em></p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Personally I use Google Fonts. They have a nice variety of choices and they have recently <a href=\"https://plus.google.com/app/basic/stream/z135v1m4jmmfezc0523huvmhdta0iv4ev\" rel=\"nofollow\">improved compression on the fonts by moving to Zopfli compression</a> too. Google is striving to make the web faster, so I guess more optimization on that part is going to come from them as well.</p>\n\n<p>Whatever you choose as an outsourced font delivery, you will always get reductions in speed by the requests for getting the fonts. The best thing, viewed from a speed perspective, would be to serve the fonts yourself. If you do not care for those extra milliseconds it takes to load from an outsourced delivery, you should go with that if you think the ease of using them is worth the milliseconds.</p>\n\n<p>I do not know about Typekit and the others, but with Google Fonts you can choose to be served specific subsets and range of characters to speed up the delivery even more.</p>\n\n<p><strong>Choosing a subset:</strong></p>\n\n<pre><code>&lt;link href=\"http://fonts.googleapis.com/css?family=Open+Sans&amp;subset=latin\" rel=\"stylesheet\"&gt;\n</code></pre>\n\n<p><strong>Choosing a range of characters:</strong></p>\n\n<pre><code>&lt;!-- Only serve H,W,e,l,o,r and d --&gt;\n&lt;link href=\"http://fonts.googleapis.com/css?family=Open+Sans&amp;text=HelloWorld\" rel=\"stylesheet\"&gt;\n</code></pre>\n\n<p>You can use <em>dns-prefetch</em> to improve speeds even further with font delivery.</p>\n\n<p>I do think, and hope, that Google will do all they can to speed up their font delivery as much as they can. The milliseconds it takes to load them doesn't hurt my website, so I happily use them.</p>\n\n<p><strong>Long story short:</strong></p>\n\n<p>If the milliseconds font delivery takes are hurting your site, for example by making it load more than the recommended 1 second, I think you should host them yourself.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think you've addressed the load times very well in your question. From my perspective, there are a few sources that should be added to the list, and a few other considerations that should be examined to get a full view of the options.</p>\n\n<hr>\n\n<h2>Some other reputable font sources</h2>\n\n<h3>cloud.typography</h3>\n\n<p><a href=\"http://www.typography.com/cloud/welcome/\" rel=\"nofollow\">http://www.typography.com/cloud/</a></p>\n\n<p>From what I can tell, the fonts are embedded as data in a CSS file:</p>\n\n<pre><code>@font-face{ \n    font-family: \"Font Name\"; \n    src: url(data:application/x-font-woff;base64,d09GRk9UVE8AACSCAA0AAAAARKwAAQAAAAAiVAAAAi4AAAadAAAAAAAAAABDRkYgAAAIyAAAFCgAABmIK5m+CkdERUYAABzwAAAAHQAAACAAXQAER1BPUwAAHRAAAAQlAAAYAq+OkMNHU1VC ... ); \n    font-weight:400; font-style:normal; \n} \n</code></pre>\n\n<p>Here are my specs:</p>\n\n<pre><code>94ms load of css from their server\n37ms load of css from our server (will vary based on your configuration)\n195ms load of data:fonts from our server (will vary based on your configuration)\n</code></pre>\n\n<p><a href=\"http://www.typography.com/cloud/how-it-works/#delivering-production-projects\" rel=\"nofollow\">Here is their very high-level description of their deployment</a>.</p>\n\n<h3>Fonts.com</h3>\n\n<p>I haven't used this service, but they're a <em>very</em> established font vendor, and the information they've listed on their site is quite impressive. I don't have specs on their exact methods, but here's what I do know they have:</p>\n\n<ul>\n<li>Some of the most well-known fonts in the world available</li>\n<li>A really big font library (over 20,000)</li>\n<li>Desktop font downloads for making mockups</li>\n<li>A custom tool for testing web fonts in the browser</li>\n<li>Fine typography controls and subsetting</li>\n<li>Self-hosting options</li>\n</ul>\n\n<h3>FontSpring</h3>\n\n<p>Affiliated with FontSquirrel. Fonts can be purchased here for a fixed price. The font files an accompanying CSS are delivered, to be deployed on your own server, much like FontSquirrel.</p>\n\n<hr>\n\n<h1>Expanded specs</h1>\n\n<p>As to the overall pros and cons of each font service, here are a few comparisons:</p>\n\n<h2>Font Library Size</h2>\n\n<ul>\n<li><strong>Fonts.com</strong>: 20,000+</li>\n<li><strong>FontSpring</strong>: 1000+</li>\n<li><strong>FontSquirrel</strong>: 300+</li>\n<li><strong>Google</strong>: 600+</li>\n<li><strong>Typekit</strong>: 900+</li>\n<li><strong>Typography.com</strong> (cloud.typography.com): probably 300+ (35 families)</li>\n</ul>\n\n<h2>Pricing</h2>\n\n<ul>\n<li><strong>Fonts.com</strong>: $20/month for 500,000 page views</li>\n<li><strong>FontSpring</strong>: Varies by font (one-time purchase of fonts)</li>\n<li><strong>FontSquirrel</strong>: Free</li>\n<li><strong>Google</strong>: Free</li>\n<li><strong>Typekit</strong>: $4/month for 500,000 page views</li>\n<li><strong>Typography.com</strong>: $12.50/month for 1,000,000 page views</li>\n</ul>\n\n<h2>Font Quality</h2>\n\n<p>The quality of web fonts can vary quite a bit. This can encompass things like the letterforms themselves or the spacing or the size of the character set. All of these determine the overall impression of quality that a font will give. While the free options have some good options, they also have some fonts that are not as high quality, so you want to choose carefully from those sources.</p>\n\n<ul>\n<li><strong>Fonts.com</strong>: High</li>\n<li><strong>FontSpring</strong>: Mixed to High</li>\n<li><strong>FontSquirrel</strong>: Mixed</li>\n<li><strong>Google</strong>: Mixed</li>\n<li><strong>Typekit</strong>: High</li>\n<li><strong>Typography.com</strong>: Very high (I give this a \"very high\" designation because Fonts.com, FontSpring, and Typekit support multiple type foundries, where this is only fonts from the H&amp;FJ foundry, which is among the best in the world)</li>\n</ul>\n\n<h2>Font Quality II: Typography</h2>\n\n<p>There are a lot of refinements in desktop typography that have been really hard to get in web fonts. Some of these services offer ways of delivering those.</p>\n\n<ul>\n<li><strong>Fonts.com</strong>: kerning, letterspacing, ligatures, alternate characters, fractions, etc.</li>\n<li><strong>FontSpring</strong>: None</li>\n<li><strong>FontSquirrel</strong>: None</li>\n<li><strong>Google</strong>: None</li>\n<li><strong>Typekit</strong>: None</li>\n<li><strong>Typography.com</strong>: small caps, ligatures, alternate characters, alternate number styles, fractions, etc.</li>\n</ul>\n\n<h2>Browser support</h2>\n\n<p>This mostly comes down to the font formats that are supported by each service. The major ones are:</p>\n\n<ul>\n<li>EOT: for Internet Explorer (IE 4+)</li>\n<li>TrueType and OpenType: Traditional formats (Safari 3.1+, FF 3.5+, Opera 10+)</li>\n<li>WOFF: New standard for web fonts (FF 3.6+, Chrome 5+)</li>\n<li>SVG: IOS &lt;4.2</li>\n</ul>\n\n<p>More information at <a href=\"http://www.smashingmagazine.com/2011/03/02/the-font-face-rule-revisited-and-useful-tricks/\" rel=\"nofollow\">The @Font-Face Rule And Useful Web Font Tricks</a></p>\n\n<p>All of these services support the major font formats. With self-hosted fonts, as long as you use the right syntax you should be covered. Here's a 2011 update of the bulletproof syntax from <a href=\"http://www.fontspring.com/blog/further-hardening-of-the-bulletproof-syntax\" rel=\"nofollow\">FontSpring</a>:</p>\n\n<pre><code>@font-face {\n  font-family: 'MyWebFont';\n  src: url('webfont.eot'); /* IE9 Compat Modes */\n  src: url('webfont.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\n       url('webfont.woff') format('woff'), /* Modern Browsers */\n       url('webfont.ttf')  format('truetype'), /* Safari, Android, iOS */\n       url('webfont.svg#svgFontName') format('svg'); /* Legacy iOS */\n  }\n</code></pre>\n\n<h2>Performance I: Downloads</h2>\n\n<p>As far as I understand it, using the above syntax allows browsers to grab the specific format that works for them, so there's no wasted downloads on font formats that don't work.</p>\n\n<p>The paid services like Fonts.com, Typekit, or Typography.com use methods to detect the correct format and <em>then</em> deliver the right font format, often as base64 data in a CSS file.</p>\n\n<p>From what I can see, the differences in the methods you've listed above are fairly negligible for high-speed internet users (seems like &lt;200ms difference), but could be worth considering for devices on slower networks, especially for uncached page hits.</p>\n\n<h2>Performance II: Subsetting</h2>\n\n<p>If you know that there will only be certain characters you want to use, you can build your font with a subset of characters and thus reduce the size of the download.</p>\n\n<ul>\n<li><strong>Fonts.com</strong>: Very detailed control</li>\n<li><strong>FontSpring</strong>: Can recompile as subset via <a href=\"http://www.fontsquirrel.com/tools/webfont-generator\" rel=\"nofollow\">FontSquirrel webfont generator</a></li>\n<li><strong>FontSquirrel</strong>: Can recompile as subset via <a href=\"http://www.fontsquirrel.com/tools/webfont-generator\" rel=\"nofollow\">webfont generator</a></li>\n<li><strong>Google</strong>: Very detailed control</li>\n<li><strong>Typekit</strong>: limited options of \"all characters\" or \"default\"</li>\n<li><strong>Typography.com</strong>: Very detailed control</li>\n</ul>\n\n<h2>Performance III: Delivery</h2>\n\n<ul>\n<li><strong>Fonts.com</strong>: Global CDN <em>or</em> your own server </li>\n<li><strong>FontSpring</strong>: Based on your server</li>\n<li><strong>FontSquirrel</strong>: Based on your server</li>\n<li><strong>Google</strong>: Global super-CDN</li>\n<li><strong>Typekit</strong>: Global CDN</li>\n<li><strong>Typography.com</strong>: Global CDN (125,000 servers)</li>\n</ul>\n\n<h2>Language support</h2>\n\n<ul>\n<li><strong>Fonts.com</strong>: 40 languages, including Asian and Middle Eastern</li>\n<li><strong>FontSpring</strong>: Western, depending on font</li>\n<li><strong>FontSquirrel</strong>: Western, depending on font</li>\n<li><strong>Google</strong>: Western, depending on font</li>\n<li><strong>Typekit</strong>: Western, depending on font</li>\n<li><strong>Typography.com</strong>: Western, depending on font</li>\n</ul>\n\n<h2>Testing and Implementation</h2>\n\n<ul>\n<li><strong>Fonts.com</strong>: Very easy, with extensive and customizable tools</li>\n<li><strong>FontSpring</strong>: Technical (do it yourself)</li>\n<li><strong>FontSquirrel</strong>: Technical (do it yourself)</li>\n<li><strong>Google</strong>: Easy</li>\n<li><strong>Typekit</strong>: Easy</li>\n<li><strong>Typography.com</strong>: Easy testing, a little more involved to change once deployed</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I use the inline css method because the overhead of the extra request is more than the size increase when bease64 encoding. This is also further offset by gizip compression by the server of the css files.</p>\n\n<p>Other option is to use asynchronous loading of fonts but most often users will see the fonts popping in after load.</p>\n\n<p>Regardless of the method, you can reduce the size of the font file by only including the character sets you will use.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well, as you are after </p>\n\n<blockquote>\n  <p>... looking for best practices here, performance is a big thing but so is scalability and ease of use. Not to mention, look and feel.</p>\n</blockquote>\n\n<p>the answer is (like always in web design): <strong>It depends!</strong></p>\n\n<p>One thing for sure is, that I would not recommend to use the JS approach (shown in your second example).</p>\n\n<p>Personally I dislike making presentational things and CSS styles depending on Javascript, even though the vast majority of users have it enabled. It is a question of not mixing things up.</p>\n\n<p>And as you can see in your given example there is some kind of FOUC (flas of unstyled content), because the page is already rendered by the browser before the font is available. As soon as it is, the page is redrawn. And the larger the site the larger the (performance) impact!</p>\n\n<p><strong>So I would never ever use any JS solution for fonts embedding.</strong></p>\n\n<p>Now let's have a look at the pure CSS methods.<br>\nSince quite a while here is a discussion about \" vs. @import\". Personally I prefer to avoid the use of @import and always use <code>&lt;link&gt;</code> only. But this is mainly a question of personal preferences. The one thing you should never do indeed is to mix them both!</p>\n\n<p>Local vs. CDN<br>\nWhen deciding if to host your font files locally or use a CDN, then imho it mostly depends on the number of different fonts and the respective fonts you want to embed.</p>\n\n<p>Why is this important, or plays a role?<br>\nFrom the performance point of view, I would recommend to include the font Base64 encoded in your (one) style sheet. But only the .woff format, as this is used by nearly all modern browsers, which means for the majority of your visitors. For all other users live with the additional request.</p>\n\n<p>But due to the \"overhead\" caused by Base64 encoding and the size of a font file (even in .woff format) this technique should only be used, if you have not more than 3 or 4 different fonts. And always make sure, that your server delivers the (CSS) files gzip'ed.</p>\n\n<p>The big advantage of doing so is that you don't have an additional request for the font file. And after the first page load (no matter which page of your site) the CSS file is cached. This is also an advantage if you use the HTML5 application cache (which you certainly will do).</p>\n\n<p>Beside the fact, that an author shouldn't use more than a maximum of 3 or 4 different fonts on his site, let's have a look at the method of using Google's CDN.</p>\n\n<p>First of all be aware, that you can (and always should) include all desired fonts into one single <code>&lt;link&gt;</code>, like so:</p>\n\n<pre><code>&lt;link href='http://fonts.googleapis.com/css?family=PT+Serif:400,700,400italic,700italic|PT+Sans:400,700,400italic,700italic|Montez' rel='stylesheet' type='text/css'&gt;\n</code></pre>\n\n<p>This will result in the following response:</p>\n\n<pre><code>@font-face {\n  font-family: 'Montez';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Montez'), local('Montez-Regular'), url(http://themes.googleusercontent.com/static/fonts/montez/v4/Zfcl-OLECD6-4EcdWMp-Tw.woff) format('woff');\n}\n@font-face {\n  font-family: 'PT Sans';\n  font-style: normal;\n  font-weight: 400;\n  src: local('PT Sans'), local('PTSans-Regular'), url(http://themes.googleusercontent.com/static/fonts/ptsans/v6/LKf8nhXsWg5ybwEGXk8UBQ.woff) format('woff');\n}\n@font-face {\n  font-family: 'PT Sans';\n  font-style: normal;\n  font-weight: 700;\n  src: local('PT Sans Bold'), local('PTSans-Bold'), url(http://themes.googleusercontent.com/static/fonts/ptsans/v6/0XxGQsSc1g4rdRdjJKZrNBsxEYwM7FgeyaSgU71cLG0.woff) format('woff');\n}\n@font-face {\n  font-family: 'PT Sans';\n  font-style: italic;\n  font-weight: 400;\n  src: local('PT Sans Italic'), local('PTSans-Italic'), url(http://themes.googleusercontent.com/static/fonts/ptsans/v6/PIPMHY90P7jtyjpXuZ2cLD8E0i7KZn-EPnyo3HZu7kw.woff) format('woff');\n}\n@font-face {\n  font-family: 'PT Sans';\n  font-style: italic;\n  font-weight: 700;\n  src: local('PT Sans Bold Italic'), local('PTSans-BoldItalic'), url(http://themes.googleusercontent.com/static/fonts/ptsans/v6/lILlYDvubYemzYzN7GbLkHhCUOGz7vYGh680lGh-uXM.woff) format('woff');\n}\n@font-face {\n  font-family: 'PT Serif';\n  font-style: normal;\n  font-weight: 400;\n  src: local('PT Serif'), local('PTSerif-Regular'), url(http://themes.googleusercontent.com/static/fonts/ptserif/v6/sDRi4fY9bOiJUbgq53yZCfesZW2xOQ-xsNqO47m55DA.woff) format('woff');\n}\n@font-face {\n  font-family: 'PT Serif';\n  font-style: normal;\n  font-weight: 700;\n  src: local('PT Serif Bold'), local('PTSerif-Bold'), url(http://themes.googleusercontent.com/static/fonts/ptserif/v6/QABk9IxT-LFTJ_dQzv7xpIbN6UDyHWBl620a-IRfuBk.woff) format('woff');\n}\n@font-face {\n  font-family: 'PT Serif';\n  font-style: italic;\n  font-weight: 400;\n  src: local('PT Serif Italic'), local('PTSerif-Italic'), url(http://themes.googleusercontent.com/static/fonts/ptserif/v6/03aPdn7fFF3H6ngCgAlQzBsxEYwM7FgeyaSgU71cLG0.woff) format('woff');\n}\n@font-face {\n  font-family: 'PT Serif';\n  font-style: italic;\n  font-weight: 700;\n  src: local('PT Serif Bold Italic'), local('PTSerif-BoldItalic'), url(http://themes.googleusercontent.com/static/fonts/ptserif/v6/Foydq9xJp--nfYIx2TBz9QFhaRv2pGgT5Kf0An0s4MM.woff) format('woff');\n}\n</code></pre>\n\n<p>As you can see, there are 9 different font files, which means a total of 10 (including the one of the link element) requests, if the user does not have one or more of the requested fonts installed locally. And these requests are repeated at every single new page request to your site (although no more data is transferred)! Also the response to the request of the <code>&lt;link&gt;</code> is never be cached.</p>\n\n<p><strong>Recommendation:</strong><br>\nAfter all I really would recommend to include your font file(s) in .woff format Base64 encoded in your style sheet!</p>\n\n<p><a href=\"http://sosweetcreative.com/2613/font-face-and-base64-data-uri\" rel=\"nofollow\"><strong>See this nice article</strong></a> for an example and description of how to do it!</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Ever since the troubles brought on by using <em>Cufon</em> I ventured away from using external font resources, but as of late, I have been looking for alternate methods of loading fonts to see if there's a better way; better methods have a way of just appearing out of the blue.</p>\n\n<p>There are a lot of new methods out there, and variations for each method it seems; Should I use <em>typekit</em>? or <em>google webfonts</em> (with js or css)? should I continue to use locally loading fonts (e.g. fontsquirrel.com generated method)? </p>\n\n<p>I'll list the methods that seem the most well received below, with some tests, but is it really worth moving to a webfont? It seems like it would carry a higher resource load (http requests) and have less file format types (less compatibility) etc. But looks like files are loaded async and efficiently in most cases.</p>\n\n<ol>\n<li>Is it just a matter of situation and need? If so, what are they?</li>\n<li>Are there drastic differences between these methods?</li>\n<li>Is there a better method out there I haven't listed?</li>\n<li>What are the pro's/con's for performance? Look? dependencies? compatibilities?</li>\n</ol>\n\n<p>I'm really looking for best practices here, performance is a big thing but so is scalability and ease of use. Not to mention, look and feel.</p>\n\n<p><em>I removed code from question to make it easier to read, code can be seen on test pages provided</em></p>\n\n<hr>\n\n<h2><strong>Google CSS</strong></h2>\n\n<ul>\n<li>only uses external stylesheet</li>\n<li>only uses smallest compatible file type</li>\n<li>can use <code>@import</code> or <code>&lt;link&gt;</code> or take the contents of the styleshee (<code>@font-face</code>) and put it directly into your own stylesheet.</li>\n</ul>\n\n<p>Test page URL: <a href=\"http://leftdeaf.com/so/gwebfontcss.html\">http://leftdeaf.com/so/gwebfontcss.html</a></p>\n\n<p><strong>test results</strong></p>\n\n<blockquote>\n<pre><code>  78ms load of html\n  36ms load of css\n</code></pre>\n</blockquote>\n\n<p><img src=\"http://i.stack.imgur.com/ARy4Y.jpg\" alt=\"enter image description here\"></p>\n\n<hr>\n\n<h2><strong>Google JS Method</strong></h2>\n\n<ul>\n<li>uses <code>webfont.js</code> to load styleshet</li>\n<li>only uses smallest compatible file type</li>\n<li>appends <code>:root</code> element with class</li>\n<li>adds script to head.</li>\n</ul>\n\n<p>Test page URL: <a href=\"http://leftdeaf.com/so/gwebfontjs.html\">http://leftdeaf.com/so/gwebfontjs.html</a></p>\n\n<p><strong>test results</strong></p>\n\n<blockquote>\n<pre><code>    171ms load of html\n    176ms load of js\n    32ms load of css\n</code></pre>\n</blockquote>\n\n<p><img src=\"http://i.stack.imgur.com/E6eCr.jpg\" alt=\"enter image description here\"></p>\n\n<hr>\n\n<h2><strong>Typekit method</strong></h2>\n\n<ul>\n<li>appends <code>:root</code> element with class.</li>\n<li>can use <code>*.js</code> snippet or externally loaded file <code>*.js</code> file</li>\n<li>uses <code>data:font/opentype</code> instead of font file.</li>\n<li>adds script to head</li>\n<li>adds embedded css to head</li>\n<li><p>adds external stylesheet to head</p>\n\n<p><em>you can easily add/remove/adjust fonts and targetted selectors from typekit.com</em></p></li>\n</ul>\n\n<p>Test page URL: <a href=\"http://leftdeaf.com/so/typekitjs.html\">http://leftdeaf.com/so/typekitjs.html</a></p>\n\n<p><strong>test results</strong></p>\n\n<blockquote>\n<pre><code>  169ms load of html\n  213ms load of js\n  31ms load of css\n  3ms load of data:font/\n</code></pre>\n</blockquote>\n\n<p><img src=\"http://i.stack.imgur.com/gEVPu.jpg\" alt=\"enter image description here\"></p>\n\n<hr>\n\n<h2><strong>&hellip;&amp; the Font Squirrel Method</strong></h2>\n\n<pre><code>@font-face{\n    font-weight:400;\n    font-style:normal;\n    font-family:open_sanslight;\n    src:url(../font/opensans-light-webfont.eot);\n    src:url(../font/opensans-light-webfont.eot?#iefix) format(embedded-opentype),\n        url(../font/opensans-light-webfont.woff) format(woff),\n        url(../font/opensans-light-webfont.ttf) format(truetype),\n        url(../font/opensans-light-webfont.svg#open_sanslight) format(svg)\n}\n</code></pre>\n\n<p>&hellip;or with data:font method&hellip;</p>\n\n<pre><code>@font-face {\n    font-family: 'open_sanslight';\n    src: url('opensans-light-webfont-f.eot');\n}\n\n@font-face {\n    font-family: 'open_sanslight';\n    src: url(data:application/x-font-woff;charset=utf-8;base64,d09GRgABAAAAAF4sABMAAAAArXQAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABqAAAABwAAAAcZLn0KkqwK44Jq866WBSpzpsNY2IyGAhoJFBbYjuxmyns5sNa4NwldcJ7eh3Uy5gQkURIlqWzONe3HcLsDX1x/+jifDXvbzgTBjopZElndil3hJkERJkmRJkVRJk3TJkEzJkmzOc4HLXOEOF7nEX/*thisisnotafullencodingjustanexample*/bZwUnK4yS3JlTx2Sr4USKEUSbHVX9fcGNBs4fqgw+GoNHU7lKr36Eqn0lCWt6pHFpWaUlc6lS6loSxRlirLlP/uuU01dVfT7L6gPxyqraluCpgj3WtqeC1V4VBDW2N4K1r1esw/IupKp9L1FwlqnuIAAAB42j3NvQ7BUBjG8R5tTz/0u2UjNTTESYQbMGmXLiISbeI6zBYjbuWtye7CeMJxtuf3LP8ne1+IXbWa7G3TMXZru4qLZkJRW1O2wzi3I+Li2Gik5yXpYkNGXj70YU98YQLGHxwwXxIWwO8SNmAdJBzAXku4gFNI9AF38QMjTwZ9vN6yJzq9OoEB6I8VQzDYK0ZguFKMwWiumIDxTDEFk6liBqaF4gDMFFvKxAfOxFUGAAABUxSL9gAA) format('woff'),\n         url('opensans-light-webfont-f.ttf') format('truetype'),\n         url('opensans-light-webfont-f.svg#open_sanslight') format('svg');\n    font-weight: normal;\n    font-style: normal;\n\n}\n</code></pre>\n\n<p><em>test to come&hellip;</em></p>\n",
            "last_activity_date": 1394214436,
            "question_id": 22116682,
            "score": 40,
            "tags": [
                "javascript",
                "css",
                "fonts",
                "webfonts"
            ],
            "title": "Webfonts or Locally loaded fonts?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Do you know how colour codes work?</p>\n\n<p>Here's a nitfy tool: <a href=\"http://www.javascripter.net/faq/rgbtohex.htm\" rel=\"nofollow\">http://www.javascripter.net/faq/rgbtohex.htm</a></p>\n\n<p>Basically the format is like this:</p>\n\n<p><code>#RRGGBB</code> where <code>RR</code> is a value between <code>00</code> and <code>ff</code> denoting the redness index, <code>G</code> is for green and <code>B</code> is blue, and as you know red + green + blue = white.</p>\n\n<p>So the colour: <code>#00FF00</code> is <em>bright</em> green. Just checking the first two characters isn't going to work, you have to look at all of them.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You have to extact the three RGB components individually, and then use a standard formula to convert the resulting RGB values into their perceived brightness.</p>\n\n<p>Assuming a six character colour:</p>\n\n<pre><code>var c = c.substring(1);      // strip #\nvar rgb = parseInt(c, 16);   // convert rrggbb to decimal\nvar r = (rgb &gt;&gt; 16) &amp; 0xff;  // extract red\nvar g = (rgb &gt;&gt;  8) &amp; 0xff;  // extract green\nvar b = (rgb &gt;&gt;  0) &amp; 0xff;  // extract blue\n\nvar luma = 0.2126 * r + 0.7152 * g + 0.0722 * b; // per ITU-R BT.709\n\nif (luma &lt; 40) {\n    // pick a different colour\n}\n</code></pre>\n\n<p>You can use <code>tinycolor(c).toRgb()</code> to extract the RGB components too.</p>\n",
                    "is_accepted": true,
                    "score": 87
                },
                {
                    "body": "<p>A possible solution would be to convert your color from RGB (red / green / blue) to another color model called HSB - hue / saturation / brightness. (Also called HSL with the L standing for luminosity).</p>\n\n<p>And then you have just one parameter to check - brightness.</p>\n\n<p>Check this : <a href=\"http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\" rel=\"nofollow\">http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can compute the luminance: <a href=\"http://en.wikipedia.org/wiki/Luminance\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Luminance</a></p>\n\n<blockquote>\n  <p>Luminance is thus an indicator of how bright the surface will appear.</p>\n</blockquote>\n\n<p>So it's great to choose if the text should be white or black.</p>\n\n<pre><code>var getRGB = function(b){\n    var a;\n    if(b&amp;&amp;b.constructor==Array&amp;&amp;b.length==3)return b;\n    if(a=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(b))return[parseInt(a[1]),parseInt(a[2]),parseInt(a[3])];\n    if(a=/rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*\\)/.exec(b))return[parseFloat(a[1])*2.55,parseFloat(a[2])*2.55,parseFloat(a[3])*2.55];\n    if(a=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(b))return[parseInt(a[1],16),parseInt(a[2],16),parseInt(a[3],\n16)];\n    if(a=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(b))return[parseInt(a[1]+a[1],16),parseInt(a[2]+a[2],16),parseInt(a[3]+a[3],16)];\n    return (typeof (colors) != \"undefined\")?colors[jQuery.trim(b).toLowerCase()]:null\n};\n\nvar luminance_get = function(color) {\n    var rgb = getRGB(color);\n    if (!rgb) return null;\n        return 0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2];\n}\n</code></pre>\n\n<p>The method above allows you to pass the color in different format, but the algorithm is basically just in <code>luminance_get</code>.</p>\n\n<p>When I used it, I was setting the color to black if the luminance was greater than <code>180</code>, white otherwise.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There's an important distinction here between luminance and brightness. Luminance, at the end of the day, is a measure of how much energy travels through a certain area and completely ignores how our perceptual systems perceive that energy. Brightness, on the other hand, is a measure of how we perceive that energy and takes into the account the relationship between luminance and our perceptual system. (As a point of confusion, there is a term called relative luminance, which seems to be used synonymously with brightness terms. It tripped me up good).</p>\n\n<p>To be precise, you are looking for \"brightness\" or \"value\" or \"relatively luminance\" as others have suggested. You can calculate this in several different way (such is to be human!) <a href=\"http://en.wikipedia.org/wiki/HSL_and_HSV#Lightness\" rel=\"nofollow\">http://en.wikipedia.org/wiki/HSL_and_HSV#Lightness</a></p>\n\n<ol>\n<li>Take the max of R, G, and B.</li>\n<li>Take the average of the max and the min from R, G, and B.</li>\n<li>Take the average of all three.</li>\n<li>Use some weighted average as others have suggested here.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I'm trying to evaluate the darkness of a color chosen by a color picker to see if it's \"too black\", and if so, set it to white. I thought I could use the first characters of the hex value to pull this off. It's working, but it's switching some legitimately \"light\" colors too.</p>\n\n<p>I have code doing this:</p>\n\n<pre><code>        if (lightcolor.substring(0,3) == \"#00\"|| lightcolor.substring(0,3) == \"#010\"){\n            lightcolor=\"#FFFFFF\";\n            color=lightcolor;\n        }\n</code></pre>\n\n<p>There must be a more efficient way with hex math to know that a color has gone beyond a certain level of darkness? Like if lightcolor + \"some hex value\" &lt;= \"some hex value\" then set it to white.. </p>\n\n<p>I have tinyColor added, which might be of use for this, but I don't know for sure..</p>\n\n<p>Thanks a bunch!</p>\n",
            "last_activity_date": 1345574941,
            "question_id": 12043187,
            "score": 40,
            "tags": [
                "javascript",
                "colors",
                "hex"
            ],
            "title": "How to check if hex color is &quot;too black&quot;?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You could try Express with Jade (Haml-like templates). Express builds on Connect for routing static files. Jade is one of the faster template engines I've tried with Node.js</p>\n\n<p><a href=\"http://expressjs.com/\" rel=\"nofollow\">http://expressjs.com/</a></p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I know this would somewhat going around the question but here we go :)</p>\n\n<p>I my rails app I use haml for all views on the backend. It is awesome. For some reasons (mainly i18n), I do not like to use templates on the client side. This is how I do it:</p>\n\n<ul>\n<li>create all your template in ruby haml and store them into script tag with a funky type (i use text/js-template). This will create prerendered html that you can play with with jquery and backbone.</li>\n<li>when you create your backbone views, load the stored template and append it to your document</li>\n<li>Render your view by altering the preexisting template</li>\n</ul>\n\n<p>You deal only with html and jQuery is awesome for that. For some views that do not requires i18n, I use underscore templating because it's already there.</p>\n\n<p>As for haml templating performance, it seems mustache and handlebars are faster. </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I know you already mentioned it but I would suggest using haml-js with Jammit. Simply include haml.js in your javascripts and in your assets.yml add <code>template_function: Haml</code> as well as including your template files in to a package. e.g.</p>\n\n<pre><code>  javascript_templates:\n    - app/views/**/*.jst.haml\n</code></pre>\n\n<p>Then in your views you can include this package (<code>= include_javascripts :javascript_templates</code>) and Jammit will package any .jst.haml files in to <code>window.JST['file/path']</code>. (If you view page source you should see a javascript file like <code>&lt;script src=\"/assets/javascript_templates.jst\" type=\"text/javascript\"&gt;&lt;/script&gt;</code>)</p>\n\n<p>To use these templates simply call one of those JSTs Jammit created. i.e.</p>\n\n<pre><code>$('div').html(JST['file/path']({ foo: 'Hello', bar: 'World' }));\n</code></pre>\n\n<p>And Jammit will use the Haml-js template function function to render the template.</p>\n\n<p>Note: Be sure to point to the github repo of Jammit in your Gemfile to get the latest version that supports newline characters necessary for haml-js to work.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>I can't answer inline on Craig's thread (I'm guessing I need some sort of reputation to post on existing answers), but you no longer need to grab a fork of jammit to use haml-js -- the commit made it into the main branch of jammit. See here for details: <a href=\"https://github.com/documentcloud/jammit/commit/b52e429f99cac3cd1aa2bf3ab95f1bfaf478d50d\" rel=\"nofollow\">https://github.com/documentcloud/jammit/commit/b52e429f99cac3cd1aa2bf3ab95f1bfaf478d50d</a></p>\n\n<p><em>EDIT: the last gem release was in Jan, and the commits were added in March, so you'll need to set up bundler to run against the github repo or build it locally. If you don't use HEAD of jammit you'll have trouble getting the templates to be parsed properly since the newlines are stripped.</em> </p>\n\n<p>All I needed to do to set this up is:</p>\n\n<p>1) Add the following to my \"assets.yml\" file: </p>\n\n<p>template_function: \"Haml\"</p>\n\n<p>2) Add the haml-js source and templates I wanted to load to my assets file: \n  javascripts:\n    core:\n      - public/javascripts/vendor/haml.js\n    templates:\n      - app/views/events/_form.haml.jst</p>\n\n<p>3) Make sure I was loading both core and templates in my application.html.erb</p>\n\n<p>&lt;%= include_javascripts :core, :templates %></p>\n\n<p>4) Access templates in my source files via JST[filename] (ie, in this case JST['_form']). One gotcha worth mentioning -- jammit will look at all your templates and namespace them down to the common path, so if you have app/views/foo/file.jst and app/views/bar/file.jst, you'd access with JST['foo/file.jst'] and JST['bar/file.jst']. If you had app/views/foo/file1.jst and app/views/foo/file2.jst, they'd be directly at JST['file1.jst'] and JST['file2.jst'] -- which is easy to forget when you're starting out with your first few templates.</p>\n\n<p>Everything worked quite nicely. I'm not sure why Craig needed to define a function -- I just used the default Haml function provided by haml.js, but maybe I'm missing something. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm about to give <a href=\"http://9elements.com/io/?p=551\">haml-coffee</a> a shot. (no pun intended)  I can't sing the praises of coffeescript enough; plus it's a default now in Rails 3.1.  Now I can embed coffeescript within my favorite templating language, and pre-compile the lot.  </p>\n\n<p>Oh, the joy.. now to get it to work.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I've been working on Rails 3/Backbone app and have taken a different approach after evaluating <a href=\"https://github.com/thegorgon/hamlbars\" rel=\"nofollow\">hamlbars</a>, <a href=\"https://github.com/infbio/haml_assets\" rel=\"nofollow\">haml_assets</a>, and playing around with <a href=\"https://github.com/creationix/haml-js\" rel=\"nofollow\">haml-js</a>.  </p>\n\n<p>These are all solid gems which offer solutions to the problem, each having a certain set of trade-offs.  Haml-js, for instance, requires rendering templates client side (there's nothing wrong with this, it's simply a tradeoff).  Hamlbars and haml_assets both plug into the asset pipeline but because they exist outside of the request object some helpers will not work.  Both make some adjustments for this and include url helpers and ActionView helpers, but don't expect to have the same features as writing haml in a view.</p>\n\n<p>My approach is somewhat bulky (I am planning on putting this into an engine) but it works well  and easily replicable. It uses haml_assets when possible, but falls back on serving a template from a \"templates\" controller with a \"show\" action </p>\n\n<ul>\n<li>Put your views in the view/templates/ directory</li>\n<li>You can add a layout that renders this view into a JST function</li>\n<li>You can specify the show action to return \"application/javascript\" as its content type</li>\n<li>You have access to all helpers when writing templates</li>\n<li>You can add script tags for \"/template/whatever\" that will render the whatever template, or use route globbing for better organized views.</li>\n</ul>\n\n<p>The benefit of this approach is that because your views are accessible from controllers, you have the option to render them as jst templates (via the templates controller) or via other controllers as partials.  This would allow you to serve seo-friendly pages directly from url's (like /products/widgets/super-cool-widget) were users may get the cached templated /templates/widgets/super-cool-widget.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Looks like <a href=\"https://github.com/netzpirat/haml_coffee_assets\" rel=\"nofollow\">https://github.com/netzpirat/haml_coffee_assets</a> gives you what you want. (<code>window.JST</code> templates, written in HAML, with inline coffescript support)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Check out Middleman. It includes haml, sass, coffee, slim, etc. It uses gems like rails does and has a lot of other awesome functionality.</p>\n\n<p><a href=\"http://middlemanapp.com/\" rel=\"nofollow\">http://middlemanapp.com/</a></p>\n\n<p>They even have a custom extension for backbone,\n<a href=\"https://github.com/middleman/middleman-backbone\" rel=\"nofollow\">https://github.com/middleman/middleman-backbone</a></p>\n\n<p>It also allows you to build it into static html, css, and js for super fast loading.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Im getting into Backbone.js to structure the javascript code for my project and I love HAML for templating on the backend(rails), so Id like to use it for Backbone Views templating. I know there is several HAML ports to Javascript, like\n<a href=\"https://github.com/creationix/haml-js\">https://github.com/creationix/haml-js</a> and backbone supports JST and mustache with ease. </p>\n\n<p>Whats the best way to use haml templating instead.</p>\n\n<p>Are there any downsides to using HAML on the client side? Performance, extra script load time(taken care by asset packaging tools like jammit)</p>\n",
            "last_activity_date": 1408482046,
            "question_id": 5254396,
            "score": 38,
            "tags": [
                "javascript",
                "templates",
                "haml",
                "backbone.js"
            ],
            "title": "Best strategy to use HAML template with Backbone.js"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Normally on an event bind, you would just use <code>$(this)</code>, but I'm fairly sure Backbone views are set up so that <code>this</code> always refer to the view, so try this:</p>\n\n<pre><code>perpage: function(ev) {\n   alert($(ev.target).text());\n}\n</code></pre>\n\n<p><strong>REALLY LATE EDIT</strong>: You probably want to use <code>$(ev.currentTarget)</code>. See dicussion on pawlik's answer below</p>\n",
                    "is_accepted": true,
                    "score": 101
                },
                {
                    "body": "<p><code>ev.target</code> can be misleading, you should use <code>ev.currentTarget</code> as described on <a href=\"http://www.quirksmode.org/js/events_order.html\">http://www.quirksmode.org/js/events_order.html</a></p>\n",
                    "is_accepted": false,
                    "score": 83
                }
            ],
            "body": "<p>In one of my backbone.js view classes, I have something like:</p>\n\n<pre><code>...\n\nevents: {\n  'click ul#perpage span' : 'perpage'\n},\n\nperpage: function() {\n  // Access the text of the span that was clicked here\n  // Something like: alert($(element).text())\n},\n\n...\n</code></pre>\n\n<p>because my per page markup might have something like:</p>\n\n<pre><code>&lt;ul id=\"perpage\"&gt;\n  &lt;li&gt;&lt;span&gt;5&lt;/span&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;span&gt;10&lt;/span&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>So how exactly can I find information about the element that caused the event? Or in this instance, that was clicked?</p>\n",
            "last_activity_date": 1338840156,
            "question_id": 5680807,
            "score": 76,
            "tags": [
                "javascript",
                "jquery",
                "backbone.js",
                "underscore.js"
            ],
            "title": "backbone.js - events, knowing what was clicked"
        }
    ]
}
