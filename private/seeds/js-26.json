{
    "items": [
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The event is called <code>beforeunload</code>, so you can assign a function to <code>window.onbeforeunload</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can try something like this:</p>\n\n<pre><code>&lt;SCRIPT language=\"JavaScript\"&gt;\n&lt;!--\nfunction loadOut()\n{\nwindow.location=\"http://www.google.com\";\n}\n//--&gt;\n&lt;/SCRIPT&gt;\n\n&lt;body onBeforeUnload=\"loadOut()\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use <code>window.onbeforeunload</code>. </p>\n\n<pre><code>window.onbeforeunload = confirmExit;\nfunction confirmExit(){\n    alert(\"confirm exit is being called\");\n    return false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is both <code>window.onbeforeunload</code> and <code>window.onunload</code>, which are used differently depending on the browser. You can assing them either by setting the window properties to functions, or using the <code>.addEventListener</code>:</p>\n\n<pre><code>window.onbeforeunload = function(){\n   // Do something\n}\n// OR\nwindow.addEventListener(\"beforeunload\", function(e){\n   // Do something\n}, false);\n</code></pre>\n\n<p>Usually, <code>onbeforeunload</code> is used if you need to stop the user from leaving the page (ex. the user is working on some unsaved data, so he/she should save before leaving). <code>onunload</code> isn't supported by <em>Opera</em>, as far as I know, but you could always set both.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Ok, I found a working solution for this, it consists of using the <code>beforeunload</code> event and then making the handler return <code>null</code>. This executes the wanted code without a confirmation box popping-up. It goes something like this:</p>\n\n<pre><code>window.onbeforeunload = closingCode;\nfunction closingCode(){\n   // do something...\n   return null;\n}\n</code></pre>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>Is there a way to run a final JavaScript code when a user closes a browser window? </p>\n\n<p>I'm thinking of something similar to onload but more like onclose? Thanks.</p>\n\n<p>I don't like the onbeforeunload method, which always yields to a confirmation box popping up (leave page/ stay on mozilla) or (reload/ don't reload on chrome). Is there a way to execute the code quietly?</p>\n",
            "last_activity_date": 1397168683,
            "question_id": 13443503,
            "score": 14,
            "tags": [
                "javascript",
                "browser"
            ],
            "title": "Run JavaScript code on window close?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Attach a handler to the <code>unload</code> event.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>onbeforeunload</code></p>\n\n<pre><code>&lt; body onbeforeunload=\"alert('Closing');\"&gt;\n</code></pre>\n\n<p><strong>Example :</strong> </p>\n\n<pre><code>&lt;html&gt; \n&lt;head&gt;\n&lt;title&gt;`onbeforeunload` Event Demo&lt;/title&gt;\n&lt;/head&gt;\n&lt;body onbeforeunload=\"return 'Are you sure you want to exit ?';\"&gt;\n&lt;/body&gt; \n&lt;/html&gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use the <a href=\"https://developer.mozilla.org/en/DOM/window.onbeforeunload\" rel=\"nofollow\"><code>beforeunload</code></a> event.</p>\n\n<pre><code>window.onbeforeunload = function(event) {\n\n    event = event || window.event;\n\n    var confirmClose = 'Are you sure?';\n\n    // For IE and Firefox prior to version 4\n    if (event) {\n       event.returnValue = confirmClose;\n    }\n\n    // For Safari\n    return confirmClose;\n\n}\n</code></pre>\n\n<p>Keep in mind this will be fire for other events besides closing the window, such as reloading and form submission.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>window.onbeforeunload = function () {\n  var shallIAlertUser = Do_Whatever(); //get boolen value\n  if (shallIAlertUser) {\n    //this will alert user\n    return 'Are you sure?';\n  }\n  else {\n    //this wont\n    window.onbeforeunload = undefined;\n  }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>I want to capture the browser close event in my application and show a confirm box to user.\nI am using JSF 2.0 and richfaces 4.0.</p>\n",
            "last_activity_date": 1425294950,
            "question_id": 6622461,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "browser"
            ],
            "title": "How to capture browser close event?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No, Javascript doesn't have access to the filesystem. <a href=\"http://en.wikipedia.org/wiki/Server-side_JavaScript\">Server side Javascript</a> is a whole different story but I guess you don't mean that.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>It is generally not a good idea to access client computer files via javascript for <strong>security</strong> reasons, however i suspect you can use the <strong><a href=\"http://www.java2s.com/Tutorial/JavaScript/0600__MS-JScript/0220__FileSystemObject.htm\" rel=\"nofollow\">File System Object</a></strong> for that. I am not sure about browser-compatibility for that, it should work in IE only probably though.</p>\n\n<p>You need to use server-side languages such as <strong>PHP, ASP.Net</strong>, <strong>JSP</strong>, etc</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>JavaScript runs inside a host environment.  So if the host provides a facility to list files in this manner, then yes.  But in the typical scenario where JavaScript is running in a browser with default configuration, no.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't know if you architecture allows it but ikf you can install and use node.js as its <a href=\"http://nodejs.org/api/\" rel=\"nofollow\">node API</a> mentions, you can interact with the filesystem by requiring the fs module.</p>\n\n<p>This is the environment Node.js relies on:</p>\n\n<blockquote>\n  <p>Node eventually wants to support all\n  POSIX operating systems (including\n  Windows with MinGW) but at the moment\n  it is only being tested on Linux,\n  Macintosh, and Solaris. The build\n  system requires Python 2.4 or better.\n  V8, on which Node is built, supports\n  only IA-32 and ARM processors. V8 is\n  included in the Node distribution. To\n  use TLS, OpenSSL are required. There\n  are no other dependencies.</p>\n</blockquote>\n\n<p>You can run It side-by-side with another web app. and this will avoid blocking your web application if the interaction with the filesystem takes too long.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Very late to this party, but my google search for this exact request led me here.</p>\n\n<p>The answer is \"not really\", but I've found the frankenstein of hacks elsewhere: If +Indexes is (or can be) enabled in the .htaccess for the folder containing the files you want to list, then use XMLHTTPRequest with the folder name as the url (which will return an html page listing the files).</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Is it possible to list the files in a directory using only javascript? To clarify, I mean list the files on the server, not the files on the clients computer. For instance:</p>\n\n<p>www.domain.com/files/</p>\n\n<p>contains 4 images (.jpg)</p>\n\n<p>Can I make an extra page (www.domain.com/files/list.html) that lists those 4 files using javascript?</p>\n",
            "last_activity_date": 1371490993,
            "question_id": 2924935,
            "score": 11,
            "tags": [
                "javascript"
            ],
            "title": "List files in a directory using only javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Yes, it is a bad practise. A constructor should return an instance of its class, nothing else. It would mess up the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code> operator</a> and inheritance otherwise.</p>\n\n<p>Moreover, a constructor should only create and initialize a new instance. It should set up data structures and all instance-specific properties, but <strong>not execute</strong> any tasks. It should be a <a href=\"https://en.wikipedia.org/wiki/Pure_function\">pure function</a> without side effects if possible, with all the benefits that has.</p>\n\n<blockquote>\n  <p>What if I want to execute things from my constructor?</p>\n</blockquote>\n\n<p>That should go in a method of your class. You want to mutate global state? Then call that procedure explicitly, not as a side effect of generating an object. This call can go right after the instantiation:</p>\n\n<pre><code>var engine = new Engine()\nengine.displayPosts();\n</code></pre>\n\n<p>If that task is asynchronous, you can now easily return a promise for its results from the method, to easily wait until it is finished.<br>\nI would however not recommend this pattern when the method (asynchronously) mutates the instance and other methods depend on that, as that would lead to them being required to wait (become async even if they're actually synchronous) and you'd quickly have some internal queue management going on. Do not code instances to exist but be actually unusable.</p>\n\n<blockquote>\n  <p>What if I want to load data into my instance asynchronously?</p>\n</blockquote>\n\n<p>Ask yourself: <em>Do you actually need the instance without the data? Could you use it somehow?</em></p>\n\n<p>If the answer to that is <em>No</em>, then you should not create it before you have the data. Make the data ifself a parameter to your constructor, instead of telling the constructor how to fetch the data (or passing a promise for the data).</p>\n\n<p>Then, use a static method to load the data, from which you return a promise. Then chain a call that wraps the data in a new instance on that:</p>\n\n<pre><code>Engine.load({path: '/path/to/posts'}).then(function(posts) {\n    new Engine(posts).displayPosts();\n});\n</code></pre>\n\n<p>This allows much greater flexibility in the ways to acquire the data, and simplifies the constructor a lot. Similarly, you might write static factory functions that return promises for <code>Engine</code> instances:</p>\n\n<pre><code>Engine.fromPosts = function(options) {\n    ajax(options.path).then(Engine.parsePosts).then(function(posts) {\n        return new Engine(posts, options);\n    });\n};\n\n\u2026\n\nEngine.fromPosts({path: '/path/to/posts'}).then(function(engine) {\n    engine.registerWith(framework).then(function(framePage) {\n        engine.showPostsOn(framePage);\n    });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I'm trying to create a constructor for a blogging platform and it has many async operations going on inside. These range from grabbing the posts from directories, parsing them, sending them through template engines, etc.</p>\n\n<p>So my question is, would it be unwise to have my constructor function return a promise instead of an object of the function they called <code>new</code> against.</p>\n\n<p>For instance:</p>\n\n<pre><code>var engine = new Engine({path: '/path/to/posts'}).then(function (eng) {\n   // allow user to interact with the newly created engine object inside 'then'\n   engine.showPostsOnOnePage();\n});\n</code></pre>\n\n<p>Now, the user may also <strong>not</strong> supply a supplement Promise chain link:</p>\n\n<pre><code>var engine = new Engine({path: '/path/to/posts'});\n\n// ERROR\n// engine will not be available as an Engine object here\n</code></pre>\n\n<p><em>This could pose a problem as the user may be confused why</em> <code>engine</code> <em>is not available after construction.</em></p>\n\n<p>The reason to use a Promise in the constructor makes sense. I want the entire blog to be functioning after the construction phase. However, it seems like a smell almost to not have access to the object immediately after calling <code>new</code>.</p>\n\n<p>I have debated using something along the lines of <code>engine.start().then()</code> or <code>engine.init()</code> which would return the Promise instead. But those also seem smelly.</p>\n\n<p>Edit: This is in a Node.js project.</p>\n",
            "last_activity_date": 1405029347,
            "question_id": 24398699,
            "score": 9,
            "tags": [
                "javascript",
                "node.js",
                "architecture",
                "constructor",
                "promise"
            ],
            "title": "Is it bad practice to have a constructor function return a Promise?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Think of protoypal inheritance as dealing solely with objects and without the concept of classes.  In your code you have a <code>BaseObject</code> object which has a <code>prop</code> attribute.  You have 2 other objects that extend from 1 instance of that object, but the property belongs to the original object.  If you need each object to have their own copy, then they need to be given a distinct variable that is intialized for that object (such as in their constructor).</p>\n\n<p>As an aside the Java style accessors are overkill in JavaScript (you can intercept access natively if needed) and can further muddy these questions since they will behave differently.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is only one <code>BaseObject</code> instance from which all <code>TestObject</code>s inherit. Don't use instances for creating prototype chains!</p>\n\n<p>What you want is:</p>\n\n<pre><code>var TestObject = function(){\n    BaseObject.call(this); // give this instance own properties from BaseObject\n    // do something\n}\nTestObject.prototype = Object.create(BaseObject.prototype);\n</code></pre>\n\n<p>See <a href=\"http://stackoverflow.com/questions/13040684/javascript-inheritance-object-create-vs-new/13040858#13040858\">JavaScript inheritance: Object.create vs new</a>, <a href=\"http://stackoverflow.com/questions/10898786/correct-javascript-inheritance/10898859#10898859\">Correct javascript inheritance</a> and <a href=\"http://stackoverflow.com/questions/12592913/what-is-the-reason-to-use-the-new-keyword-here/12593049#12593049\">What is the reason to use the &#39;new&#39; keyword here?</a> for a detailed explanation of the problems with <code>new</code>. Also have a look at <a href=\"http://stackoverflow.com/q/10131052/1048572\">Crockford&#39;s Prototypal inheritance - Issues with nested objects</a></p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I created an object like the following.</p>\n\n<pre><code>var BaseObject = function(){\n\nvar base = this;\nbase.prop;\n\nbase.setProp = function(val){\n    base.prop = val;\n}\n}\n</code></pre>\n\n<p>When I call the <code>setProp</code> method, I get the following.</p>\n\n<pre><code>var a = new BaseObject();\nvar b = new BaseObject();           \n\na.setProp(\"foo\");\nb.setProp(\"bar\");\n\nconsole.log(a.prop); // outputs 'foo'\nconsole.log(b.prop); // outputs 'bar'\n</code></pre>\n\n<p>I then created another object that inherits from <code>BaseObject</code> like this.</p>\n\n<pre><code>var TestObject = function(){\n    // do something\n}\n\nTestObject.prototype = new BaseObject();\n</code></pre>\n\n<p>When I do the same, I get a result I wasn't expecting.</p>\n\n<pre><code>var a = new TestObject();\nvar b = new TestObject();\n\na.setProp(\"foo\");\nb.setProp(\"bar\");\n\nconsole.log(a.prop); // outputs 'bar'\nconsole.log(b.prop); // outputs 'bar'\n</code></pre>\n\n<p>I don't know why. I've been reading alot about closures and prototypal inheritance recently and I suspect I've gotten it all confused. So any pointers on why this particular example works the way it does would be greatly appreciated. </p>\n",
            "last_activity_date": 1375992051,
            "question_id": 13127589,
            "score": 5,
            "tags": [
                "javascript",
                "oop",
                "inheritance"
            ],
            "title": "Why are my JavaScript object properties being overwritten by other instances?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>In order for the AJAX get to \"wait for the page to be rendered\", it would actually have to fully process the page, fetching <em>and running</em> all the included CSS and javascript files.  That's not easy and not recommended.  Fortunately, you don't need to do that anyway.</p>\n\n<p>Here are three better ways to approach this kind of problem:</p>\n\n<ol>\n<li><p>The <strong><em>resource page</em></strong> (mpdining.rewardsnetwork.com, for this question) might have an API.  If it does, find it and use it.  This is your best bet, if it's available.</p></li>\n<li><p>Analyze the resource page's javascript and/or AJAX requests. Use <code>GM_xmlhttpRequest()</code> to directly fetch just the payload data, instead of trying to parse the resource page.</p>\n\n<p>Sometimes this process is fairly easy, but some sites require complex interaction and/or authentication.</p></li>\n<li><p>Load the resource page in a hidden iframe; set your Greasemonkey script to run on both the resource page and the master page and to relay the desired data using <a href=\"https://developer.mozilla.org/en/DOM/window.postMessage\" rel=\"nofollow\"><code>postMessage()</code></a>.</p>\n\n<p>This approach will almost always work, although you may have to prevent some pages from attempting to \"bust out\" of the iframe.</p></li>\n</ol>\n\n<hr>\n\n<p><br></p>\n\n<h2>Using a hidden iframe to get data from a cross-domain, resource page:</h2>\n\n<p>Greasemonkey scripts will run on both a normal page and on pages within iframes.  In fact, you can set the same script to run on both, and on multiple domains.</p>\n\n<p>If a <strong><em>master page</em></strong> and an iframed <strong><em>resource page</em></strong> are both running GM script(s), the script instances can communicate with each other, cross-domain, using <a href=\"https://developer.mozilla.org/en/DOM/window.postMessage\" rel=\"nofollow\"><code>postMessage()</code></a>.</p>\n\n<p>For example, suppose we have a site, <a href=\"http://fiddle.jshell.net/9ttvF/show/\" rel=\"nofollow\">fiddle.jshell.net/9ttvF/show</a>, that contains travel data, and we want to <strong><em>mash-up</em></strong> that site with matching data from a <strong><em>resource site</em></strong>, <a href=\"http://jsbin.com/ahacab\" rel=\"nofollow\">jsbin.com/ahacab</a>, that uses AJAX to get its payload data.</p>\n\n<p><a href=\"http://fiddle.jshell.net/9ttvF/show/\" rel=\"nofollow\">The target (master) site</a> looks like this:<br>\n<img src=\"http://i.stack.imgur.com/aPRa3.gif\" alt=\"target site\"></p>\n\n<p><a href=\"http://jsbin.com/ahacab\" rel=\"nofollow\">The resource site</a> looks like this at first:<br>\n<img src=\"http://i.stack.imgur.com/3xYcT.gif\" alt=\"resource site, start\"></p>\n\n<p>Then finishes like this:\n<img src=\"http://i.stack.imgur.com/49xzt.gif\" alt=\"resource site, finish\"></p>\n\n<p><br>\nThe following script:</p>\n\n<ol>\n<li>Loads the resource page in a hidden iframe.</li>\n<li>Starts a second instance of itself running on the iframed page.</li>\n<li>Waits for the iframed page to finish, processing the results as desired.</li>\n<li>Sends the desired payload data to the GM script running on the target (master) page.</li>\n<li>The target-page's script then inserts the payload data to complete the mash-up.</li>\n</ol>\n\n<pre class=\"lang-js prettyprint-override\"><code>// ==UserScript==\n// @name     _Cross-site, AJAX scrape demo\n// @include  http://fiddle.jshell.net/9ttvF/show/\n// @include  http://jsbin.com/ahacab*\n// @require  http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js\n// @require  https://gist.github.com/raw/2625891/waitForKeyElements.js\n// @grant    GM_addStyle\n// ==/UserScript==\n\nif (/fiddle\\.jshell\\.net/i.test (location.host) ) {\n    console.log (\"***Master-page start...\");\n\n    /*--- Inform the user.\n    */\n    $(\"#plainResults\").before (\n        '&lt;div id=\"gmFetchRez\"&gt;Greasemonkey is fetching results from jsbin.com...&lt;/div&gt;'\n    );\n\n    /*--- Setup to process messages from the GM instance running on the iFrame:\n    */\n    window.addEventListener (\"message\", receiveMessage, false);\n\n    /*--- Load the resource site in a hidden iframe.\n    */\n    $(\"body\").append ('&lt;iframe src=\"http://jsbin.com/ahacab\" id=\"gmIframe\"&gt;&lt;/iframe&gt;');\n}\nelse {\n    console.log (\"***Framed start...\");\n    /*--- Wait for the AJAXed-in content...\n    */\n    waitForKeyElements (\"#results table.rezTable\", sendResourcePageData);\n}\n\nfunction sendResourcePageData (jNode) {\n    console.log (\"Results found!  Sending them to the main window...\");\n\n    window.top.postMessage (jNode.html(), \"*\");\n}\n\nfunction receiveMessage (event) {\n    if (event.origin != \"http://jsbin.com\")     return;\n\n    $(\"#gmFetchRez\").html (event.data);\n}\n\n//--- Use CSS to control appearances.\nGM_addStyle ( \"                                 \\\n    #gmIframe {                                 \\\n        display:            none;               \\\n    }                                           \\\n    #gmFetchRez {                               \\\n        background:         lightYellow;        \\\n        border:             3px double red;     \\\n        padding:            1em;                \\\n    }                                           \\\n\" );\n</code></pre>\n\n<hr>\n\n<p>The final result looks like this, with the script installed and running:\n<img src=\"http://i.stack.imgur.com/Zg6iY.gif\" alt=\"mashup result\"></p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I am in the process of writing a Greasemonkey Script for pages in <a href=\"http://www.livingsocial.com/cities/368-albany-capital-region/deals/382236-20-to-spend-on-food-and-drink\" rel=\"nofollow\">this site</a> (Site1). Site1 has deals and offers of various kinds and my GM script aims to do the following:</p>\n\n<p>When one visits an offer on Site1, the script queries  <a href=\"http://mpdining.rewardsnetwork.com/\" rel=\"nofollow\">Site2</a> to find out whether this hotel is also listed on Site2. If so, display the search results from Site2 on Site1.</p>\n\n<p>The problem is that Site2 displays a progress bar (\"Loading Results\") and then displays the results. Thus my Ajax request always returns empty results and looks like this (See the red-boxed portion):<br>\n<a href=\"http://i.stack.imgur.com/XNqB0.png\" rel=\"nofollow\">(Click for larger image)<img src=\"http://i.stack.imgur.com/XNqB0.png\" alt=\"unfinished results\"></a></p>\n\n<p><br>\nHowever, it should actually have the complete contents of the search results from Site2, like so:<br>\n<a href=\"http://i.stack.imgur.com/fYomL.jpg\" rel=\"nofollow\">(Click for larger image)<img src=\"http://i.stack.imgur.com/fYomL.jpg\" alt=\"finished results\"></a></p>\n\n<p><br>\nI have tried a synchronous Ajax request as well as <code>GM_xmlhttpRequest</code> to no avail.</p>\n\n<p>This is the problematic progress bar of Site 2:<br>\n<a href=\"http://i.stack.imgur.com/HjssP.jpg\" rel=\"nofollow\">(Click for larger image)<img src=\"http://i.stack.imgur.com/HjssP.jpg\" alt=\"status bar\"></a></p>\n\n<p><br>\nHow can I get the AJAX request to wait for the the search on Site2 to be completely rendered before returning the response to Site1?</p>\n\n<p>For reference, <a href=\"http://pastebin.com/NC0cTmY9\" rel=\"nofollow\">my complete working script code is at pastebin.com</a>.</p>\n\n<p>This is the relevant snippet:</p>\n\n<pre><code>$(document).ready(function(){   \nvar rewardsSiteResults = $('&lt;div class=\"panel deal-panel rc-lr\"&gt;&lt;/div&gt;').attr('id', \"rewardsSiteResults\")\n        .html(\"&lt;p&gt;\" + progressMessageText + \"&lt;/p&gt; \").append(spinnerGif);\n$(insertSelector).after(rewardsSiteResults);\n\nvar addressMap = getAddressOfHotel();\nvar pinCode = addressMap[pinCodePlaceHolder];\nvar hotelName = addressMap[hotelNamePlaceHolder];\nvar queryURL = constructQueryURL(pinCode, hotelName);\n\n$.ajaxSetup({async:true, timeout: 5000});\n$.get(queryURL,null, function(response) {\n    if(!displayed){\n        displayed=true;\n        //rewardsSiteResults.html(\"adfaasddsf\");\n        var text = $(response).find(\"#col2\");\n        $(text).find(\"script\").remove();\n\n        //console.log(text.html())\n//          $('&lt;iframe id=\"someId\"/&gt;').appendTo('#rewardsSiteResults')\n//          .contents().find('body').append(response);\n        rewardsSiteResults.html(\"&lt;div class='panel deal-panel rc-lr'&gt;\" + text.html() +\"&lt;/div&gt;\");\n        //console.log(response);\n    }\n},'html');  \n});\n</code></pre>\n",
            "last_activity_date": 1398384472,
            "question_id": 11486256,
            "score": 5,
            "tags": [
                "javascript",
                "ajax",
                "jquery",
                "greasemonkey"
            ],
            "title": "How to get an AJAX get-request to wait for the page to be rendered before returning a response?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here is a blog post that explains this issue</p>\n\n<p><strong><a href=\"http://joshuaink2006.johnoxton.co.uk/blog/82/flash-content-and-z-index\">Flash content and z-index</a></strong></p>\n\n<p>Use</p>\n\n<pre><code>&lt;param name=\"wmode\" value=\"transparent\"&gt; \n</code></pre>\n\n<p>From <strong><a href=\"http://kb2.adobe.com/cps/127/tn_12701.html\">Flash OBJECT and EMBED tag attributes</a></strong></p>\n\n<blockquote>\n  <p><strong>wmode</strong></p>\n</blockquote>\n\n<p>Possible values: window, opaque, transparent. Sets the Window Mode property of the Flash movie for transparency, layering, and positioning in the browser.</p>\n\n<pre><code>* window - movie plays in its own rectangular window on a web page.\n* opaque - the movie hides everything on the page behind it.\n* transparent - the background of the HTML page shows through all \n  transparent portions of the movie, this may slow animation performance.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I had this problem with Flash getting in front of my fly-out menus. I tried two different techniques for element z-index re-ordering and they only worked for IE10.</p>\n\n<p>This morning, I tried something that worked for all versions of IE, down to 7.</p>\n\n<p><a href=\"http://willstechcafe.wordpress.com/2013/06/20/overlays-vs-flash/\" rel=\"nofollow\">http://willstechcafe.wordpress.com/2013/06/20/overlays-vs-flash/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have two simple HTML divs one contains flash movie and another div contains simple text now my problem is that i have to put textual div onto the flash movie div what i am doing is setting the position of both divs to Absolute in CSS and setting the Z-Index of flash movie div to 1 and Z-Index of textual div to 2 but the text is coming behind the movie in every case but i have to put text onto movie, please help me in this regards so that my text may appear onto the flash movie. Thanks in advance.</p>\n",
            "last_activity_date": 1371749308,
            "question_id": 2040887,
            "score": 5,
            "tags": [
                "javascript",
                "html",
                "css",
                "flash",
                "xhtml"
            ],
            "title": "Div Z-Index issue with Flash movie"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>An object literal needs to be wrapped in parentheses to properly be evaluated in <code>eval</code> context and other contexts:</p>\n\n<p><code>eval('{}')</code> is undefined, for example. whereas <code>eval('(' + '{}' + ')' )</code> evaluates to Object.</p>\n\n<p>If you tried this in the console, for example: <code>{\"foo\":\"bar\"}</code> it would throw an invalid label at you. Wrap it in parentheses and it becomes a valid expression.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The syntax ambiguity that Crockford refers is that if an open curly brace is not found on <em>expression</em> context, it will be recognized like a <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_12.1\">block</a>, and not like the start of a object literal.</p>\n\n<p>For example:</p>\n\n<pre><code>{\"foo\": \"bar\"} // SyntaxError\n</code></pre>\n\n<p>Will give you a syntax error, because it will be interpreted as a block, with a string literal \"foo\", and a unexpected usage of the token <code>:</code>.</p>\n\n<p>On the other hand, the parentheses, formally called <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_11.1.6\">the grouping operator</a>, can only evaluate expressions, therefore we will not have any syntax ambiguity because a block can only be expected on a <em>statement</em> context.</p>\n\n<pre><code>({\"foo\": \"bar\"})\n</code></pre>\n\n<hr>\n\n<p><strong>Edit:</strong> <a href=\"http://stackoverflow.com/questions/3360356/why-the-open-quote-and-bracket-for-eval-jsonstring-when-parsing-json#comment-3490319\">@el.pescado</a> makes an interesting question:</p>\n\n<blockquote>\n  <p>Can you explain why eval('{}') is undefined?</p>\n</blockquote>\n\n<p>ECMAScript describes an internal type to explain the behavior of statements, it's called <a href=\"http://www.ecma262-5.com/ELS5_HTML.htm#Section_8.9\">The Completion Specification Type</a>.</p>\n\n<p>Values of the Completion type are triples of the form of <code>(type, value, target)</code>, where <code>type</code> can be <code>normal</code>, <code>break</code>, <code>continue</code>, <code>return</code>, or <code>throw</code>.</p>\n\n<p><code>value</code> can be any language value or <code>empty</code>, and <code>target</code> any Identifier or <code>empty</code>.</p>\n\n<p>An empty block (the production <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_12.1\"><code>Block : {}</code></a>) explicitly returns the following completion:</p>\n\n<pre><code>Return (normal, empty, empty).\n</code></pre>\n\n<p>The <a href=\"http://www.ecma262-5.com/ELS5_HTML.htm#Section_15.1.2.1\"><code>eval</code></a> function, after executing the code, and exiting the newly created execution context, checks the result completion of the evaluated code, and in the Step 7 we can see that <code>undefined</code> is explicitly returned if the completion type is <code>normal</code> and the completion value is <code>empty</code>:</p>\n\n<blockquote>\n  <p>...</p>\n  \n  <p>7- If result.type is normal and its completion value is empty, then return the value undefined.</p>\n  \n  <p>...</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>@el.pescado, the string after executed by eval should be javascript understandable.\ni.e if you are assigning the above string to  the varible as follows</p>\n\n<p>eval(' var foo1 = {\"foo\" : \"bar\"}');\nfoo1.foo will return bar</p>\n\n<p>so, my assumption is, as there is no statement like that starts with \"{\" in javascript, it is throwing the error.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can you please tell me the reason for this specific syntax structure </p>\n\n<pre><code> eval('(' + jsonString+ ')')\n</code></pre>\n\n<p>When parsing json text. Crockford says \"<em>The text must be wrapped in parens to avoid tripping on an ambiguity in JavaScript's syntax</em>.\"  <a href=\"http://www.json.org/js.html\">here</a>. What does that mean?</p>\n\n<p>Can we avoid it?</p>\n",
            "last_activity_date": 1281222982,
            "question_id": 3360356,
            "score": 16,
            "tags": [
                "javascript",
                "json",
                "eval"
            ],
            "title": "Why the open quote and bracket for eval(&#39;(&#39; + jsonString+ &#39;)&#39;) when parsing json string"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>First try their own static demo code:</p>\n\n<pre><code>&lt;div  data-role=\"fieldcontain\"&gt;\n                &lt;fieldset data-role=\"controlgroup\"&gt;\n                    &lt;legend&gt;Choose as many snacks as you'd like:&lt;/legend&gt;\n                    &lt;input type=\"checkbox\" name=\"checkbox-1a\" id=\"checkbox-1a\" class=\"custom\" /&gt;\n                    &lt;label for=\"checkbox-1a\"&gt;Cheetos&lt;/label&gt;\n\n                    &lt;input type=\"checkbox\" name=\"checkbox-2a\" id=\"checkbox-2a\" class=\"custom\" /&gt;\n                    &lt;label for=\"checkbox-2a\"&gt;Doritos&lt;/label&gt;\n\n                    &lt;input type=\"checkbox\" name=\"checkbox-3a\" id=\"checkbox-3a\" class=\"custom\" /&gt;\n                    &lt;label for=\"checkbox-3a\"&gt;Fritos&lt;/label&gt;\n\n                    &lt;input type=\"checkbox\" name=\"checkbox-4a\" id=\"checkbox-4a\" class=\"custom\" /&gt;\n                    &lt;label for=\"checkbox-4a\"&gt;Sun Chips&lt;/label&gt;\n                &lt;/fieldset&gt;\n            &lt;/div&gt;\n</code></pre>\n\n<p>They are using just one fieldset as I mentioned in comments.<br>\nIf this works, then adjust your script to generate the same markup dynamically and then refresh them</p>\n\n<pre><code>$(\"input[type='checkbox']\").checkboxradio(\"refresh\");\n</code></pre>\n\n<p>If this will work with their code, you will know that you have error in markup. If not, there is an error with that refresh function. (I know it's not final solution but you have to do a bit of debugging sometimes :)</p>\n\n<p>Edit:<br>\nFound similar problems, solved by using <code>Page()</code><br>\n<a href=\"http://jquerymobiledictionary.dyndns.org/faq.html\">JQM FAQ</a><br>\n<a href=\"http://stackoverflow.com/questions/4039428/jquery-mobile-dynamically-creating-form-elements\">SO Question</a></p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>try </p>\n\n<pre><code>$('input:checkbox').checkboxradio('refresh');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>        &lt;!DOCTYPE HTML&gt;\n    &lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;checkbox&lt;/title&gt;\n        &lt;link rel=\"stylesheet\" href=\"jQuery/css/jquery.mobile-1.0a4.1.min.css\" /&gt;\n        &lt;script type=\"text/javascript\" src=\"jQuery/js/jquery-1.6.1.min.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\" src=\"jQuery/js/jquery.mobile-1.0a4.1.min.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\"&gt;\n             var myArray = [];\n             $(document).ready(function() {\n                // put all your jQuery goodness in here.\n                myArray[myArray.length] = 'Item - 0';\n                checkboxRefresh();\n             });\n\n             function checkboxRefresh(){\n                var newhtml = \"&lt;fieldset data-role=\\\"controlgroup\\\"&gt;\";\n                newhtml +=\"&lt;legend&gt;Select items:&lt;/legend&gt;\" ;\n                for(var i = 0 ; i &lt; myArray.length; i++){\n                    newhtml += \"&lt;input type=\\\"checkbox\\\" name=\\\"checkbox-\"+i+\"a\\\" id=\\\"checkbox-\"+i+\"a\\\" class=\\\"custom\\\" /&gt;\" ;\n                    newhtml += \"&lt;label for=\\\"checkbox-\"+i+\"a\\\"&gt;\"+myArray[i]+\"&lt;/label&gt;\";\n                }\n                newhtml +=\"&lt;/fieldset&gt;\";\n                $(\"#checkboxItems\").html(newhtml).page();\n\n                //$('input').checkboxradio('disable');\n                //$('input').checkboxradio('enable');\n                //$('input').checkboxradio('refresh');\n                //$('input:checkbox').checkboxradio('refresh');\n\n                $(\"input[type='checkbox']\").checkboxradio(\"refresh\");\n\n                $('#my-home').page();\n             }\n\n            $('#bAdd').live('click', function () {\n                myArray[myArray.length] = 'Item - ' + myArray.length;\n                checkboxRefresh();\n            });\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;div data-role=\"page\" data-theme=\"b\" id=\"my-home\"&gt;\n        &lt;div id=\"my-homeheader\"&gt;\n            &lt;h1 id=\"my-logo\"&gt;checkbox&lt;/h1&gt;\n        &lt;/div&gt;\n\n        &lt;div data-role=\"content\"&gt;\n\n            &lt;div id=\"checkboxItems\" data-role=\"fieldcontain\"&gt;&lt;/div&gt;\n\n            &lt;fieldset class=\"ui-grid-b\"&gt;\n                &lt;div data-role=\"controlgroup\" data-type=\"horizontal\"&gt;\n                    &lt;a id=\"bAdd\" href=\"#\" data-role=\"button\" data-icon=\"plus\" &gt;Add new item&lt;/a&gt;\n                &lt;/div&gt;\n            &lt;/fieldset&gt;\n\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;/body&gt;\n    &lt;/html&gt;\n</code></pre>\n\n<p>It works just ones for me. Any idea why? </p>\n\n<p>The Answer for me is:</p>\n\n<pre><code>$(\"input[type='checkbox']\").checkboxradio();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>try with  <code>$(\"#&lt;id of fieldset controlgroup&gt;\").trigger(\"create\");</code></p>\n\n<p><a href=\"http://jsfiddle.net/YKvR3/36/\">http://jsfiddle.net/YKvR3/36/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>What work out for me was to remove the whole fieldset then replace place a new fieldset with the new item I wanted to add then I called the <code>.trigger('pagecreate');</code> method on the whole page. This is not the most efficient solution but that is the only one that worked in my case.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When appending checkboxes or radio buttons to a <em>controlgroup</em> dynamically, you deal with two jQuery Mobile widgets, <code>.checkboxradio()</code> and <code>.controlgroup()</code>.</p>\n\n<p>Both should be created/updated/enhanced/styled with jQuery Mobile CSS once new elements are added.</p>\n\n<p>The way to achieve this is different in latest stable versions and RC version, but the methods are the same.</p>\n\n<h2>jQuery Mobile 1.2.x - 1.3.x (stable versions)</h2>\n\n<p>After appending <em>checkbox</em> / <em>radio button</em> to either a static or dynamic <em>controlgroup</em>, <code>.checkboxradio()</code> should be called first to enhance <em>checkbox</em> / <em>radio button</em> markup and then <code>.controlgroup(\"refresh\")</code> to re-style <em>controlgroup</em> div.</p>\n\n<pre><code>$(\"[type=checkbox]\").checkboxradio();\n$(\"[data-role=controlgroup]\").controlgroup(\"refresh\");\n</code></pre>\n\n<blockquote>\n  <p><strong><a href=\"http://jsfiddle.net/Palestinian/2yjgg/\">Demo</a></strong></p>\n</blockquote>\n\n<hr>\n\n<h2>jQuery Mobile 1.4.x (<strike>RC - not yet released</strike> Stable version)</h2>\n\n<p>The only difference here is elements should be appended to <code>.controlgroup(\"container\")</code></p>\n\n<pre><code>$(\"#foo\").controlgroup(\"container\").append(elements);\n</code></pre>\n\n<p>and then enhance both <em>controlgroup</em> and all elements within it, using <code>.enhanceWithin()</code>.</p>\n\n<pre><code>$(\"[data-role=controlgroup]\").enhanceWithin().controlgroup(\"refresh\");\n</code></pre>\n\n<blockquote>\n  <p><strong><a href=\"http://jsfiddle.net/Palestinian/ertz6/\">Demo</a></strong></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>So I'm trying to load dynamic content straight into my checkbox container (group_checkboxes)</p>\n\n<pre><code>&lt;div id='group_checkboxes' data-role=\"fieldcontain\"&gt;\n\n&lt;/div&gt;\n</code></pre>\n\n<p>This is the statement I'm running to populate the container:</p>\n\n<pre><code>$('#group_checkboxes').append('&lt;fieldset data-role=\"controlgroup\"&gt;&lt;input type=\"checkbox\" name=\"' + $(this).find('data').text() + '\" class=\"custom\" /&gt;&lt;label for=\"' + $(this).find('data').text() + '\"&gt;' + $(this).find('label').text() + '&lt;/label&gt;&lt;/fieldset&gt;');\n</code></pre>\n\n<p>The checkboxes are all populated but the jQuery style is not applied.</p>\n\n<p>According to the <a href=\"http://jquerymobile.com/demos/1.0a4.1/#docs/forms/forms-checkboxes.html\">docs</a> all I need to do is call this function to update the checkbox style...</p>\n\n<pre><code>$(\"input[type='checkbox']\").checkboxradio(\"refresh\");\n</code></pre>\n\n<p>That doesn't work though... Any idea what I'm doing wrong?</p>\n",
            "last_activity_date": 1390043124,
            "question_id": 5663033,
            "score": 13,
            "tags": [
                "javascript",
                "dynamic",
                "jquery-mobile",
                "checkbox"
            ],
            "title": "Dynamic controlgroup and checkboxes unstyled"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Start by reading <em>What Every Computer Scientist Should Know About Floating Point</em>: \n<a href=\"http://docs.sun.com/source/806-3568/ncg_goldberg.html\">http://docs.sun.com/source/806-3568/ncg_goldberg.html</a></p>\n\n<p>Short answer: double precision floats (which are the default in JavaScript) have about 16 decimal digits of precision. Rounding can vary from platform to platform. If it is absolutely essential that you get the consistently right answer, you should do rational arithmetic yourself (this doesn't need to be hard - for currency, maybe you can just multiply by 100 to store the number of cents as an integer).</p>\n\n<p>But if it suffices to get the answer with a high degree of precision, floats should be good enough, especially double precision.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>There are two important thing you should now when dealing with floats:</p>\n\n<p>1- You should be aware of <a href=\"http://en.wikipedia.org/wiki/Machine_epsilon\" rel=\"nofollow\">machine epsilon</a>. To know how much precision you have.</p>\n\n<p>2- You <strong>should not</strong> assume <a href=\"http://en.wikipedia.org/wiki/Floating_point#Representable_numbers.2C_conversion_and_rounding\" rel=\"nofollow\">if two values are equal in base 10, they are equal in base 2 in a machine with precision limit</a>. </p>\n\n<pre><code>if ((6.0 / 10.0) / 3.0 != .2) {\n        cout &lt;&lt; \"gotcha\" &lt;&lt; endl;\n}\n</code></pre>\n\n<p>Number 2 may be convincing enough to make you avoid comparing floating point numbers for equality, instead a threshold and greater-than or less-than operators can be used for comparison</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>No, the number of decimal places has nothing to do with what can be represented.</p>\n\n<p>Try .1 * 3, or 162.295 / 10, or 24.0 + 47.98. Those fail for me in JS. But, 24.0 * 47.98 does not fail.</p>\n\n<p>So to answer your three questions, any operation for any precision is potentially vulnerable. Whether a given input will or won't is a question I don't know how to answer, but I have a hunch there are a number of factors. 1) How close the actual answer is to the nearest binary fraction. 2) The precision in the engine performing the calculation. 3) The method used to perform the calculation (eg, multiplying by bit-shifting may give different results than multiplying by repeated addition)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The other answers have pointed to good resources to understanding this problem. If your actually using monetary values in your code (as in your example) you should prefer Decimal types (System.Decimal in .Net). These will avoid some of the rounding problems from using floats and better match the domain.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><em>Tony the Pony</em>, also known as <a href=\"http://stackoverflow.com/users/22656/jon-skeet\">Jon Skeet</a>, has an <a href=\"http://codeblog.jonskeet.uk/2009/11/02/omg-ponies-aka-humanity-epic-fail/\" rel=\"nofollow\">excellent explanation</a>. Readable, clear, funny without being irritating, and not as heavy as <a href=\"http://docs.sun.com/source/806-3568/ncg_goldberg.html\" rel=\"nofollow\">some links</a> that are often posted on this subject.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Could someone here please help me understand how to determine when floating point limitations will cause errors in your calculations. For example the following code.</p>\n\n<pre><code>CalculateTotalTax = function (TaxRate, TaxFreePrice) {\n     return ((parseFloat(TaxFreePrice) / 100) * parseFloat(TaxRate)).toFixed(4);\n};\n</code></pre>\n\n<p>I have been unable to input any two values that have caused for me an incorrect result for this method. If I remove the toFixed(4) I can infact see where the calculations start to lose accuracy (somewhere around the 6th decimal place). Having said that though, my understanding of floats is that even small numbers can sometimes fail to be represented or have I misunderstood and can 4 decimal places (for example) always be represented accurately. </p>\n\n<p>MSDN explains floats as <a href=\"http://msdn.microsoft.com/en-us/library/ae382yt8.aspx\">such</a>... </p>\n\n<blockquote>\n  <p>This means they cannot hold an exact\n  representation of any quantity that is\n  not a binary fraction (of the form k /\n  (2 ^ n) where k and n are integers)</p>\n</blockquote>\n\n<p>Now I assume this applies to all floats (inlcuding those used in javascript).</p>\n\n<p>Fundamentally my question boils down to this. How can one determine if any specific method will be vulnerable to errors in floating point operations, at what precision will those errors materialize and what inputs will be required to produce those errors?</p>\n\n<p>Hopefully what I am asking makes sense.</p>\n",
            "last_activity_date": 1414424625,
            "question_id": 4664662,
            "score": 9,
            "tags": [
                "c#",
                "javascript",
                "vb.net",
                "floating-point"
            ],
            "title": "Understanding floating point problems"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can't close an alert box with Javascript.</p>\n\n<p>You could, however, use a window instead:</p>\n\n<pre><code>var w = window.open('','','width=100,height=100')\nw.document.write('Message')\nw.focus()\nsetTimeout(function() {w.close();}, 5000)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>tldr; <strong><a href=\"http://jsfiddle.net/Tq5m3/\">jsFiddle Demo</a></strong></p>\n\n<p>This functionality is not possible with an alert. However, you could use a div</p>\n\n<pre><code>function tempAlert(msg,duration)\n{\n var el = document.createElement(\"div\");\n el.setAttribute(\"style\",\"position:absolute;top:40%;left:20%;background-color:white;\");\n el.innerHTML = msg;\n setTimeout(function(){\n  el.parentNode.removeChild(el);\n },duration);\n document.body.appendChild(el);\n}\n</code></pre>\n\n<p>Use this like this:</p>\n\n<pre><code>tempAlert(\"close\",5000);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>impossible with javascript. \nJust as another alternative to suggestions from other answers: consider using jGrowl: <a href=\"http://archive.plugins.jquery.com/project/jGrowl\" rel=\"nofollow\">http://archive.plugins.jquery.com/project/jGrowl</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can also try Notification API. Here's an example:</p>\n\n<pre><code>function message(msg){\n    if (window.webkitNotifications) {\n        if (window.webkitNotifications.checkPermission() == 0) {\n        notification = window.webkitNotifications.createNotification(\n          'picture.png', 'Title', msg);\n                    notification.onshow = function() { // when message shows up\n                        setTimeout(function() {\n                            notification.close();\n                        }, 1000); // close message after one second...\n                    };\n        notification.show();\n      } else {\n        window.webkitNotifications.requestPermission(); // ask for permissions\n      }\n    }\n    else {\n        alert(msg);// fallback for people who does not have notification API; show alert box instead\n    }\n    }\n</code></pre>\n\n<p>To use this, simply write:</p>\n\n<pre><code>message(\"hello\");\n</code></pre>\n\n<p>Instead of:</p>\n\n<pre><code>alert(\"hello\");\n</code></pre>\n\n<hr>\n\n<p><strong>Note:</strong> Keep in mind that it's only currently supported in Chrome, Safari, Firefox and some mobile web browsers (jan. 2014)</p>\n\n<p>Find supported browsers <a href=\"http://caniuse.com/notifications\" rel=\"nofollow\"><strong>here.</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>All I want to do is, how can I auto hide alert box within specific seconds after showing it ?</p>\n\n<p>all I know is, </p>\n\n<pre><code>setTimeout(function() { \n      alert('close'); \n}, 5000);\n\n// this will appear alert after 5 seconds\n</code></pre>\n\n<p>no need for this I want to disappear alert after showing it within seconds.</p>\n\n<p><strong>Needed senario :</strong></p>\n\n<ol>\n<li><p>show alert. </p></li>\n<li><p>hide/terminate alert within 2 seconds.</p></li>\n</ol>\n",
            "last_activity_date": 1390556609,
            "question_id": 15466802,
            "score": 6,
            "tags": [
                "javascript"
            ],
            "title": "How can I auto hide alert box after it showing it?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Try negation, <code>[if !IE 8]</code> perhaps?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I can think of a trick. Set a variable inside the IE conditional tag and include your JS code if that variable isn't set.</p>\n\n<pre><code>&lt;script&gt;\n    var ie8 = false;\n&lt;/script&gt;\n\n&lt;!--[if IE 8]&gt;\n    &lt;script&gt;\n        ie8 = true;\n    &lt;/script&gt;\n&lt;![endif]--&gt;\n\n&lt;script&gt;\n    if (ie8 == false) {\n        // any code here will not be executed by IE 8\n        alert(\"Not IE 8!\");\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<blockquote>\n  <p>there's some JS that I want to load for all browsers EXCEPT IE8, what conditional comment should I use?</p>\n</blockquote>\n\n<p>For something to appear in \u2018other browsers\u2019 that don't support CCs, you need a <a href=\"http://msdn.microsoft.com/en-us/library/ms537512%28VS.85%29.aspx\">downlevel-revealed</a> conditional comment.</p>\n\n<pre><code>&lt;!--[if !IE 8]&gt;&lt;!--&gt;\n    ....\n&lt;!--&lt;![endif]--&gt;\n</code></pre>\n\n<p>(this is slightly different to Microsoft's official syntax which is not valid HTML.)</p>\n\n<p>\u201cAll browsers except IE8\u201d is an unusual requirement, are you sure that's what you want? What about future versions of IE?</p>\n",
                    "is_accepted": false,
                    "score": 17
                }
            ],
            "body": "<p>I'm using <code>&lt;!--[if IE 8]&gt;&lt;![endif]--&gt;</code> for targeting IE8, but there's some JS that I want to load for all browsers EXCEPT IE8, what conditional comment should I use?</p>\n\n<p>Edit: I wonder if this would work: <code>&lt;!--[if lte IE 8]&gt;&lt;![endif]--&gt;</code></p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1257587854,
            "question_id": 1692129,
            "score": 5,
            "tags": [
                "javascript",
                "html",
                "internet-explorer-8",
                "comments",
                "conditional"
            ],
            "title": "Conditional comment for &#39;Except IE8&#39;?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>PHP runs on the server. It outputs some text. Then it stops running. </p>\n\n<p>The text is sent to the client (a browser). The browser then interprets the text as HTML and JavaScript.</p>\n\n<p>If you want to get data from JavaScript to PHP then you need to make a new HTTP request and run a new (or the same) PHP script.</p>\n\n<p>You can make an HTTP request from JavaScript by using a form or Ajax.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>These are two different languages, that run at different time - you cannot interact with them like that.</p>\n\n<p>PHP is executed on the server while the page loads. Once loaded, the JavaScript will execute on the clients machine in the browser.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You might want to start by learning what Javascript and php are. Javascript is a <em>client side</em> script language running in the browser of the machine of the client connected to the webserver on which php runs. These languages <em>can not</em> communicate <em>directly</em>.</p>\n\n<p>Depending on your goal you'll need to issue an <a href=\"http://en.wikipedia.org/wiki/Ajax_(programming)\" rel=\"nofollow\">AJAX</a> get or post request to the server and return a json/xml/html/whatever response you need and inject the result back in the DOM structure of the site. I suggest Jquery, BackboneJS or any other JS framework for this. <a href=\"http://api.jquery.com/jquery.ajax/\" rel=\"nofollow\">See the Jquery documentation for examples.</a></p>\n\n<p>If you have to pass php data to JS on the same site you can echo the data as JS and turn your php data using <a href=\"http://php.net/manual/en/function.json-encode.php\" rel=\"nofollow\">json_encode()</a> into JS.</p>\n\n<pre><code>&lt;script type=\"text/javascript&gt;\n    var foo = &lt;?php echo json_encode($somePhpVar); ?&gt;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You will need to use JS to send the URL back with a variable in it such as:\n<a href=\"http://www.site.com/index.php?uid=1\" rel=\"nofollow\">http://www.site.com/index.php?uid=1</a></p>\n\n<p>by using something like this in JS:</p>\n\n<pre><code>window.location.href=\u201dindex.php?uid=1\";\n</code></pre>\n\n<p>Then in the PHP code use $_GET:</p>\n\n<pre><code>$somevar = $_GET[\"uid\"]; //puts the uid varialbe into $somevar\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>You need to add this value to the form data that is submitted to the server. You can use</p>\n\n<pre><code>&lt;input type=\"hidden\" value=\"1\" name=\"profile_viewer_uid\" id=\"profile_viewer_uid\"&gt;\n</code></pre>\n\n<p>inside your form tag.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is the Working example: Get javascript variable value on the same page.</p>\n\n<pre><code>&lt;script&gt;\nvar p1 = \"success\";\n&lt;/script&gt;\n\n&lt;?php\necho \"&lt;script&gt;document.writeln(p1);&lt;/script&gt;\";\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want the value of javascript variable which i could access using php. \ni am using the code below but it doesn't return value of that variable in php.</p>\n\n<pre><code>// set global variable in javascript\n    profile_viewer_uid = 1;\n</code></pre>\n\n<hr>\n\n<pre><code>// php code\n\n$profile_viewer_uid=$_POST['profile_viewer_uid']; \n</code></pre>\n\n<p>this gives me the following error :-\nA PHP Error was encountered\nSeverity: Notice\nMessage: Undefined index: profile_viewer_uid</p>\n\n<pre><code>// another php code i used which give empty value\n\n$profile_viewer_uid = \"&lt;script language=javascript&gt;document.write(profile_viewer_uid);&lt;/script&gt;\n</code></pre>\n\n<p>when i echo it shows nothing.           </p>\n",
            "last_activity_date": 1414324658,
            "question_id": 9789283,
            "score": 3,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "How to get javascript variable value in php"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The alert() function can't output an object in a read-friendly manner. Try using console.log(object) instead, and fire up your browser's console to debug.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It means you are alerting an instance of an object. When <code>alert</code>ing the object, <code>toString()</code> is called on the object, and the default implementation returns <code>[object Object]</code>.</p>\n\n<pre><code>var objA = {};\nvar objB = new Object;\nvar objC = {};\n\nobjC.toString = function () { return \"objC\" };\n\nalert(objA); // [object Object]\nalert(objB); // [object Object]\nalert(objC); // objC\n</code></pre>\n\n<p>If you want to inspect the object, you should either <code>console.log</code> it, <code>JSON.stringify()</code> it, or enumerate over it's properties and inspect them individually using <code>for in</code>.</p>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>One of my alert is giving the above result <strong>[object Object]</strong> What this exactly mean? This was the alert of some object of jquery type.</p>\n",
            "last_activity_date": 1326793822,
            "question_id": 8892465,
            "score": 3,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Javascript - [object Object] means?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Because you are accessing the same variable i in all the functions used in set timeout.  The setTimeout function sets the function to fire the number of milliseconds in the future on the same thread as the i variable.  The i value isn't copied in the function, the function is referencing the actual variable i when it is fired. Because you have looped through parent function until the i = 5 and this is done before anything else has a chance to fire, they all show up as 5.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Take a look at <a href=\"http://stackoverflow.com/questions/1552941/variables-in-anonymous-functions-can-someone-explain-the-following\">this question</a>.  It might help you understand the scope and closures better, very similar to your question.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The variable <code>i</code> exists in the scope of the outer function.</p>\n\n<p>It changes as the loop runs.</p>\n\n<p>The inner function references it.</p>\n\n<p>Try something like this:</p>\n\n<pre><code>var i_print_factory = function (value) {\n  return function () {\n    console.log(value);\n  };\n};\n\nvar init_timers = function () {\n  for (var i = 0; i &lt; 5; i++) {\n    setTimeout(i_print_factory(i), i * 200);\n  }\n};\n\nsetTimeout(init_timers, 200);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You're trying to create a closure containing the variable \"i\". But closures are only created at the end of a function. So if your functions are created in a <strong>for</strong> loop, they will all have the values from the last iteration.</p>\n\n<p>You can fix it with something like this:</p>\n\n<pre><code>var createFunction = function(index) {\n  return function() {\n    console.log(index);\n  }\n};\n\nfor (var i = 0; i &lt; 5; i++) {\n  setTimeout(createFunction(i), i * 200);\n}\n</code></pre>\n\n<p>where you return the function from another function.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The <code>setTimeout</code> callback functions are executed asynchronously, all the <code>console.log</code> calls you make refer to the same <code>i</code> variable, and at the time they are executed, the for loop <em>has ended</em> and <code>i</code> contains 4.</p>\n\n<p>You could wrap your inner <code>setTimeout</code> call inside a function accepting a parameter in order to store a reference to all the <code>i</code> values that are being iterated, something like this:</p>\n\n<pre><code>setTimeout(function() {\n    for (var i = 0; i &lt; 5; i++) {\n      (function (j) { // added a closure to store a reference to 'i' values\n        setTimeout(function() {\n            console.log(j);\n        }, j * 200);\n      })(i); // automatically call the function and pass the value\n    }\n}, 200);\n</code></pre>\n\n<p>Check my answer to the following question for more details:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/1552941\">Variables in Anonymous Functions \u2014 Can someone explain the following?</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>I'm having a problem with some JavaScript code.</p>\n\n<p><strong>Script</strong></p>\n\n<pre><code>setTimeout(function() {\n    for (var i = 0; i &lt; 5; i++) {\n        setTimeout(function() {\n            console.log(i);\n        }, i * 200);\n    }\n}, 200);\n</code></pre>\n\n<p><strong>Outputs</strong></p>\n\n<p>5, 5, 5, 5, 5 instead of 1, 2, 3, 4, 5</p>\n\n<p>I can kind of understand why this doesn't work, but I was wondering if someone could explain to me what's happening and why it's not working!</p>\n\n<p>Also, how can this scope problem be overcome? </p>\n",
            "last_activity_date": 1274429083,
            "question_id": 1579978,
            "score": 2,
            "tags": [
                "javascript",
                "loops",
                "closures",
                "variable-scope"
            ],
            "title": "JavaScript Variable Scope"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>change your loop to look like this: </p>\n\n<pre><code>for(var i = 1; i &lt; 4; i++)\n{\n    alert(eval(\"option\"+i));   \n}\n</code></pre>\n\n<p>Let me know if you have any questions</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If they are variables in the <code>window</code> scope, then you can access <code>window['option'+i]</code>. However, you really should just use an array:</p>\n\n<pre><code>var option = [\n    \"some text\",\n    \"option 2\",\n    \"option 3\"\n];\nfor( var i=0; i&lt;3; i++) alert(option[i]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>var option1 = \"some text\";\nvar option2 = \"some text\";\nvar option3 = \"some text\";\n\nfor(var i = 1; i &lt; 4; i++)\n{\n alert(eval('option'+i) + '\\n');\n}\n</code></pre>\n\n<p>It's better if you try and use an array or access it via <code>window</code> as Kolink posted. And if you do use <code>eval</code>, make sure nothing that is not in your control gets <code>eval</code>'ed as its a security risk.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Please try this one:</p>\n\n<pre><code>    option = new Array();\n    option[1] = \"some text\";\n    option[2] = \"some text\";\n    option[3] = \"some text\";\n    for(var i = 1; i &lt; 4; i++)\n    {\n        alert(option[i]);   \n    }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 1
                }
            ],
            "body": "<p>I know you might think this is a duplicate or a dumb question. But the answers doesn't help me.</p>\n\n<p>Here's my simple problem:</p>\n\n<pre><code>var option1 = \"some text\";\nvar option2 = \"some text\";\nvar option3 = \"some text\";\n</code></pre>\n\n<p>I want to access the elements \"option1, option2, option3\" in a for loop:</p>\n\n<pre><code>for(var i = 1; i &lt; 4; i++)\n{\n    alert(option+i);   \n}\n</code></pre>\n\n<p>I know that it shouldn't be option+i but I dont know how to solve this.</p>\n\n<p>Thanks for the help in advance.</p>\n\n<p>If you find this to be a duplicate just mark this question. Thanks</p>\n",
            "last_activity_date": 1342498994,
            "question_id": 11515924,
            "score": 1,
            "tags": [
                "javascript"
            ],
            "title": "Access Javascript variables dynamically"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I don't think so there is any such event across all the browsers. I would go with a custom event and trigger it whenever I manipulate the dom.</p>\n\n<pre><code>//Subscribe to domChanged event\n$(document).bind('domChanged', function(){\n     alert('Dom changed');\n});\n\n//Trigger the domChanged event\n$(document).trigger('domChanged');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>DOM mutation events (I believe not supported in all browsers) .. see <a href=\"http://en.wikipedia.org/wiki/DOM_events#Common.2FW3C_events\">http://en.wikipedia.org/wiki/DOM_events#Common.2FW3C_events</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I need to setup an event handler, which should fire whenever something is appended/changed/removed on the DOM. <a href=\"http://stackoverflow.com/questions/3219758/detect-changes-in-the-dom\">This answer</a> does not work in my case. The DOM can be modified by third party developers, and on each DOM change, we need to run our script to validate the code. The event should not fire on input/textarea/select change.</p>\n\n<p>We do <strong>not</strong> target all browsers. As long as it works on Webkit (Chrome, Safari), it's good enough.</p>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1352833318,
            "question_id": 9470931,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "dom"
            ],
            "title": "Is there any &quot;on DOM change&quot; event?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can't use straight CSS on the default title attribute, but you can use many JQuery tooltip plugins available to create new tool tips and those you can style with CSS.</p>\n\n<p><a href=\"http://www.1stwebdesigner.com/freebies/stylish-jquery-tooltip-plugins-webdesign/\" rel=\"nofollow\">http://www.1stwebdesigner.com/freebies/stylish-jquery-tooltip-plugins-webdesign/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can put newlines in your title attribute via HTML entities to force a line break in the text. Most browsers these days support this. This is the only change you can make to the native tooltip display of the browser.</p>\n\n<pre><code>&lt;a href=\"real_link\" title=\"check&amp;#13;&amp;#10;this&amp;#13;&amp;#10;out\"&gt;foo bar&lt;/a&gt;\n</code></pre>\n\n<p>See the above example <a href=\"http://jsfiddle.net/Rk9dp/\">on a web page</a>.</p>\n\n<p>As others have pointed out, there exist a large number of plugins for various JS libraries for making custom HTML tooltips which <em>are</em> styleable. Here is <a href=\"http://www.reynoldsftw.com/2009/03/10-excellent-tooltip-plugins-with-jquery/\">the top hit</a> for the Google search \"jquery tooltip plugin\", reviewing 10 such plugins.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>No. There is no way you can style the \"title\" attribute of any HTML element. However, I would agree that there are many jquery plugins available to style the tooltip using the title attribute. </p>\n\n<p>Try this. <a href=\"http://flowplayer.org/tools/tooltip/index.html\" rel=\"nofollow\">http://flowplayer.org/tools/tooltip/index.html</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>It is not possible in CSS, since the tooltip popup is an OS native thingy, but please have a look at this tutorial (article + screencast + source code): <a href=\"http://net.tutsplus.com/articles/news/you-still-cant-create-a-jquery-plugin/\" rel=\"nofollow\">http://net.tutsplus.com/articles/news/you-still-cant-create-a-jquery-plugin/</a>\nIt describes how to roll your very own custom jQuery plugin that will do exactly what you are asking for.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can do it with jQuery but there's no need for a plugin.</p>\n\n<p>Assign the element(s) a class and then, after the document is ready, set the title attribute for that class. For instance...</p>\n\n<pre><code>$(\".className\").attr(\"title\", \"Your title here.\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can create a CSS-only tooltips using the <code>:after</code> and <code>:hover</code> pseudo-class:</p>\n\n\n\n<pre><code>&lt;a href=\"#\" class=\"class-with-tooltip\"&gt;Link&lt;/a&gt;\n</code></pre>\n\n\n\n<pre><code>.class-with-tooltip:hover:after{\n    content: 'Tooltip';\n    position: absolute;\n    padding: 5px;\n    border: 1px solid gray;\n    background: whitesmoke;\n    font-size: 14px;\n}\n</code></pre>\n\n<p>I'm not sure how this going to work in old browsers, but it works in all major browsers.</p>\n\n<p>The <code>position: absolute;</code> is needed to prevent generated content from pushing the markup after the element.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I was wondering if it was possible to style a <code>title</code>:</p>\n\n<pre><code>&lt;a href=\"#\" title=\"This is a title\"&gt;Hello&lt;/a&gt;\n</code></pre>\n\n<p>The styling question has two aspects:</p>\n\n<ul>\n<li><strong>Text formatting</strong> / encoding (Which I guess is possible SO does it in questions*).</li>\n<li><strong>The Tooltip styling</strong>, can you make it bigger? other colors? etc.</li>\n</ul>\n\n<p>And the other issue I have is how do you <strong>\"point\" to title</strong>?</p>\n\n<ul>\n<li>From <strong>CSS</strong></li>\n<li>From <strong>Javascript</strong> / <strong>jQuery</strong></li>\n</ul>\n\n<p>Thanks in advance!</p>\n\n<hr>\n\n<p>*What I ment by text formatting / encoding:</p>\n\n<p><img src=\"http://i.stack.imgur.com/UMXeb.png\" alt=\"alt text\"></p>\n",
            "last_activity_date": 1422808192,
            "question_id": 4383148,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "css",
                "styling"
            ],
            "title": "Is it possible to style a title? (and with CSS or js?)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Have you considered a <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Statements/for...in\" rel=\"nofollow\"><code>for...in</code> loop</a>?</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can access objects like arrays:</p>\n\n<pre><code>alert(o[key]);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Change the last line to: <code>alert(o['k1']);</code> or <code>alert(o[key]);</code> where <code>key</code> is your dynamically constructed property key.</p>\n\n<p>Remember you can access object's properties with array notation.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How to access an object using a variable as key. Here is my code sample:</p>\n\n<pre><code>var o = {\"k1\": \"111\", \"k2\": \"222\"};\nalert(o.k1); //working fine\nvar key = \"k\"+1; alert(key); // k1\nalert(o.key); //not working\n</code></pre>\n",
            "last_activity_date": 1315844290,
            "question_id": 6921803,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "How to access  object using dynamic key?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>you cannot abort page unload by returning false. you must return string that will be shown to user in a message box, and he decides if he want to leave or stay on the page (by selecting either 'OK' or 'Cancel' button), so you need to write your code like this:</p>\n\n<pre><code> window.onbeforeunload = function() {\n    return \"Are you sure you want to leave this page bla bla bla?\"; // you can make this dynamic, ofcourse...\n };\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<pre><code>window.onbeforeunload = function () { return 'Are you sure?' };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>try this </p>\n\n<pre><code>  &lt;script type=\\\"text/javascript\\\"&gt;\n        var dont_confirm_leave = 0; //set dont_confirm_leave to 1 when you want the user to be able to leave withou confirmation\n        var leave_message = 'You sure you want to leave?'\n        function goodbye(e) \n        {\n            if(dont_confirm_leave!==1)\n            {\n                if(!e) e = window.event;\n                //e.cancelBubble is supported by IE - this will kill the bubbling process.\n                e.cancelBubble = true;\n                e.returnValue = leave_message;\n                //e.stopPropagation works in Firefox.\n                if (e.stopPropagation) \n                {\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n\n                //return works for Chrome and Safari\n                return leave_message;\n            }\n        }   \n    window.onbeforeunload=goodbye;\n    &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Check this code :</p>\n\n<pre><code>var validNavigation = false;\n\nfunction wireUpEvents() {\nvar dont_confirm_leave = 0; \nvar leave_message = \"You sure you want to leave ?\";\n\nfunction goodbye(e) {\nif (!validNavigation) {\nif (dont_confirm_leave !== 1) {\nif (!e) e = window.event;\ne.cancelBubble = true;\ne.returnValue = leave_message;\n//e.stopPropagation works in Firefox.\nif (e.stopPropagation) {\ne.stopPropagation();\ne.preventDefault();\n}\n//return works for Chrome and Safari\nreturn leave_message;\n}\n}\n}\n\nwindow.onbeforeunload = goodbye;\n\ndocument.onkeydown = function () {\nswitch (event.keyCode || e.which) {\ncase 116 : //F5 button\nvalidNavigation = true;\ncase 114 : //F5 button\nvalidNavigation = true;\ncase 82 : //R button\nif (event.ctrlKey) {\nvalidNavigation = true;\n}\ncase 13 : //Press enter\nvalidNavigation = true;\n}\n\n}\n// Attach the event click for all links in the page\n$(\"a\").bind(\"click\", function () {\nvalidNavigation = true;\n});\n\n// Attach the event submit for all forms in the page\n$(\"form\").bind(\"submit\", function () {\nvalidNavigation = true;\n});\n\n// Attach the event click for all inputs in the page\n$(\"input[type=submit]\").bind(\"click\", function () {\nvalidNavigation = true;\n});\n}\n\n// Wire up the events as soon as the DOM tree is ready\n$(document).ready(function () {\nwireUpEvents();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a system where I want to check with the user if they're sure they want to leave the page once a dirty flag is set. </p>\n\n<p>I'm using the following code - In FireFox, I can look at the page source through FireBug and the  tag correctly has the onbeforeunload attribute inserted in it. </p>\n\n<p>In Chrome and FireFox, this doesn't happen though and I'm able to navigate away from the page without any warning at all. The jQuery line to update the body tag is definitely being executed, it just isn't performing it.</p>\n\n<pre><code>if ($(\"body\").attr('onbeforeunload') == null) {\n    if (window.event) {\n        // IE and Chrome use this\n        $(\"body\").attr('onbeforeunload', 'CatchLeavePage(event)');\n    }\n    else {\n        // Firefox uses this\n        $(\"body\").attr('onbeforeunload', 'return false;CatchLeavePage(event)');\n    }\n}\n</code></pre>\n\n<p>Any ideas how to proceed from here?</p>\n",
            "last_activity_date": 1410799234,
            "question_id": 1802930,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "google-chrome",
                "onbeforeunload"
            ],
            "title": "Setting onbeforeunload on body element in Chrome and IE using jQuery"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>This isn't possible. You could try to somehow obfuscate the code, but you need to send something to client, don't you? You could use AJAX calls to load your html. This way, the source that the browser will show could be almost empty. However, there is nothing you can do to prevent an experienced user from viewing everything you are sending to the client. In fact there are so many tools he/she can use to reconstruct the page that any technique you will fight hard to apply, will only delay him/her for a couple of minutes.</p>\n\n<p>Regarding the Ctrl-C you could add javascript to block it, but it is useless, since the user can always disable javascript. In fact many users will find interception of right-click very annoying.</p>\n\n<p>All these could have a meaning if you are building an intranet application or you can ship an integrated browser for users to view the application. With public html, I believe it isn't even worth trying. One solution would be to build your application with flash or another plug-in. This way you can encrypt everything you've sent to the client.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>It is impossible. But if you really want to avoid copying information, you can generate image with text on it. Of course, Google and other search engines will not index your site information. But sometimes it is the goal :-)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you really don't want to give your code away there isn't much you can do. </p>\n\n<p>Using flash or a java applet will make it a little more difficult, but even this can be decompiled.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The best you could do is to obfuscate your javascript. Any encryption will have to let the browser decrypt it. Catch-22.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's pretty pointless trying to disable the 'view source' and 'ctrl-c' functionality, as anything you try will be easy to circumvent. You can use some JavaScript to stop the right-mouse button from displaying the context menu, but that's easy for the user to disable.</p>\n\n<p>If it's JavaScript, you can use a JavaScript obfuscation program or compactor which will help to hide your code a bit.</p>\n\n<p>Here's a couple to get you started.</p>\n\n<p><a href=\"http://www.javascriptobfuscator.com/\" rel=\"nofollow\">http://www.javascriptobfuscator.com/</a></p>\n\n<p>javascriptcompressor.com</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is no way to stop someone from reading the code you send to the browser. Even if you add browser tricks they could use an app that mimics a browser. The best thing to do is to move important code to the server, where they can't get at it.</p>\n\n<p>Rather compete on other axes - usability, service, first mover advantage, etc than trying to stop someone from stealing your code.</p>\n\n<p>Update: one thing you could do is use Google Web Toolkit, because then you'll be working in Java and your competitor/copier will spend their time deconstructing your Javascript.</p>\n\n<p>What are you trying to protect? HTML/Javascript/images/server locations?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you don't want users to view the code of your webpage then you should write your own web browser and define your own HTML protocol. </p>\n\n<p>But when you create a client application and use SOAP/Web services to send data to those clients, then you will be able to keep the code hidden on anything the client sees. (They would need a debugger to \"hack\" your application.)</p>\n\n<p>Of course, one way to distribute such an application would be by using Silverlight or Flash. It would still show up in browsers that have Flash or Silverlight enabled but they will not be able to see the code of anything inside the application.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Send the pages as raster images (JPG, PNG, etc.) with area links instead of text xD</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As others have said, there is no point to doing this, as well as the fact that it is impossible.</p>\n\n<p>It's like a newspaper giving out newspapers, but without letting people take clippings. If they have to read it to know what it is, then can copy it.</p>\n\n<p>Make the newspaper out of steel, they will just use laser to clip bits out, or take a photo.</p>\n\n<p>Make the text invisible, no one can read it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It's possible to disable CTRL+U and CTRL+C. This may work:</p>\n\n<pre><code>shortcut = {\nall_shortcuts: {},\n  add: function (e, t, n) {\n    var r = {\n      type: \"keydown\",\n      propagate: !1,\n      disable_in_input: !1,\n      target: document,\n      keycode: !1\n    };\n    if (n) for (var i in r) \"undefined\" == typeof n[i] &amp;&amp; (n[i] = r[i]);\n    else n = r;\n    r = n.target, \"string\" == typeof n.target &amp;&amp; (r = document.getElementById(n.target)), e = e.toLowerCase(), i = function (r) {\n      r = r || window.event;\n      if (n.disable_in_input) {\n        var i;\n        r.target ? i = r.target : r.srcElement &amp;&amp; (i = r.srcElement), 3 == i.nodeType &amp;&amp; (i = i.parentNode);\n        if (\"INPUT\" == i.tagName || \"TEXTAREA\" == i.tagName) return\n      }\n      r.keyCode ? code = r.keyCode : r.which &amp;&amp; (code = r.which), i = String.fromCharCode(code).toLowerCase(), 188 == code &amp;&amp; (i = \",\"), 190 == code &amp;&amp; (i = \".\");\n      var s = e.split(\"+\"),\n        o = 0,\n        u = {\n          \"`\": \"~\",\n          1: \"!\",\n          2: \"@\",\n          3: \"#\",\n          4: \"$\",\n          5: \"%\",\n          6: \"^\",\n          7: \"&amp;\",\n          8: \"*\",\n          9: \"(\",\n          0: \")\",\n          \"-\": \"_\",\n          \"=\": \"+\",\n          \";\": \":\",\n          \"'\": '\"',\n          \",\": \"&lt;\",\n          \".\": \"&gt;\",\n          \"/\": \"?\",\n          \"\\\\\": \"|\"\n        }, f = {\n          esc: 27,\n          escape: 27,\n          tab: 9,\n          space: 32,\n          \"return\": 13,\n          enter: 13,\n          backspace: 8,\n          scrolllock: 145,\n          scroll_lock: 145,\n          scroll: 145,\n          capslock: 20,\n          caps_lock: 20,\n          caps: 20,\n          numlock: 144,\n          num_lock: 144,\n          num: 144,\n          pause: 19,\n          \"break\": 19,\n          insert: 45,\n          home: 36,\n          \"delete\": 46,\n          end: 35,\n          pageup: 33,\n          page_up: 33,\n          pu: 33,\n          pagedown: 34,\n          page_down: 34,\n          pd: 34,\n          left: 37,\n          up: 38,\n          right: 39,\n          down: 40,\n          f1: 112,\n          f2: 113,\n          f3: 114,\n          f4: 115,\n          f5: 116,\n          f6: 117,\n          f7: 118,\n          f8: 119,\n          f9: 120,\n          f10: 121,\n          f11: 122,\n          f12: 123\n        }, l = !1,\n        c = !1,\n        h = !1,\n        p = !1,\n        d = !1,\n        v = !1,\n        m = !1,\n        y = !1;\n      r.ctrlKey &amp;&amp; (p = !0), r.shiftKey &amp;&amp; (c = !0), r.altKey &amp;&amp; (v = !0), r.metaKey &amp;&amp; (y = !0);\n      for (var b = 0; k = s[b], b &lt; s.length; b++) \"ctrl\" == k || \"control\" == k ? (o++, h = !0) : \"shift\" == k ? (o++, l = !0) : \"alt\" == k ? (o++, d = !0) : \"meta\" == k ? (o++, m = !0) : 1 &lt; k.length ? f[k] == code &amp;&amp; o++ : n.keycode ? n.keycode == code &amp;&amp; o++ : i == k ? o++ : u[i] &amp;&amp; r.shiftKey &amp;&amp; (i = u[i], i == k &amp;&amp; o++);\n      if (o == s.length &amp;&amp; p == h &amp;&amp; c == l &amp;&amp; v == d &amp;&amp; y == m &amp;&amp; (t(r), !n.propagate)) return r.cancelBubble = !0, r.returnValue = !1, r.stopPropagation &amp;&amp; (r.stopPropagation(), r.preventDefault()), !1\n    }, this.all_shortcuts[e] = {\n      callback: i,\n      target: r,\n      event: n.type\n    }, r.addEventListener ? r.addEventListener(n.type, i, !1) : r.attachEvent ? r.attachEvent(\"on\" + n.type, i) : r[\"on\" + n.type] = i\n  },\n  remove: function (e) {\n    var e = e.toLowerCase(),\n      t = this.all_shortcuts[e];\n    delete this.all_shortcuts[e];\n    if (t) {\n      var e = t.event,\n        n = t.target,\n        t = t.callback;\n      n.detachEvent ? n.detachEvent(\"on\" + e, t) : n.removeEventListener ? n.removeEventListener(e, t, !1) : n[\"on\" + e] = !1\n    }\n  }\n},\n    shortcut.add(\"Ctrl+U\",function(){\n // Script to be executed when user press CTRL+U;This also disable and cancel the CTRL+U method\n}),\n    shortcut.add(\"Ctrl+C\",function(){\n// Script to be executed when user press CTRL+C;This also disable and cancel the CTRL+C method\n}),\n</code></pre>\n\n<p>For demo, you can visit my fiddle:\n<a href=\"http://jsfiddle.net/dVSRM/\" rel=\"nofollow\">http://jsfiddle.net/dVSRM/</a>\n<br><br>\nSo the conclusion is it's possible to disable the CTRL+U and CTRL+C. But the high-grade plagiarism can know this and never uses the shortcut to view the source code. This tips can be for your reference if someone make a question about disabling the view source shortcut. But the CTRL+C is include in this script.<br><br>\nThis is my script. Thank you. See you later!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a chance to disable these two things from my site?\n(View Source) and (Ctrl + C )</p>\n",
            "last_activity_date": 1421752802,
            "question_id": 1037593,
            "score": 4,
            "tags": [
                "javascript"
            ],
            "title": "How to disable (View Source) and (Ctrl + C ) from my site"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You mean alert? You can't control/remove the title from javascript alert.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can't because <code>confirm</code> is a javascript function which you can't change. Might want to consider using other solution like a modal window where you can add custom header/title and stuff.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can't control the appearance of <code>confirm()</code> or <code>alert()</code> Javascript popups, because they are native controls, so their appearance is based on the OS and the browser.</p>\n\n<p>What you can do:</p>\n\n<ul>\n<li>create your <a href=\"http://www.google.hu/search?sourceid=chrome&amp;ie=UTF-8&amp;q=how%20to%20create%20javascript%20modal%20dialog\">own Javascript dialog</a></li>\n<li>use a pre-written dialog like <a href=\"http://jqueryui.com/demos/dialog/#modal\">jQuery UI's dialog</a></li>\n<li>if you don't want to include a full library (like jQuery UI) for a simple dialog, try something like <a href=\"http://code.google.com/p/javascript-simple-dialog/\">javascript-simple-dialog</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>I would like delete the title of my popup JavaScrip but i don't know how i can and where i make the code.</p>\n\n<p>This is my code :</p>\n\n<pre><code>&lt;a href=\"javascript:;\"\n onclick=\"if(confirm('voulez-vous vraiment supprimer cette \nstation?')) \nwindow.location.href='Supprimer_Station.php?id_sta=&lt;?php echo \n$valeur['ssiphone_idstation']; ?&gt;&amp;act=supprimer'; \"&gt;\n</code></pre>\n\n<p>Tthanks for your help</p>\n",
            "last_activity_date": 1309525947,
            "question_id": 5803305,
            "score": 3,
            "tags": [
                "javascript"
            ],
            "title": "Change the native confirm/alert"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You're right, this is very much unpossible in any sane way, since only the value gets passed into the function.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Here is a technique that you can use to keep the name and the value of the variable.</p>\n\n<pre><code>// Set up a global variable called g\nvar g = {};\n// All other variables should be defined as properties of this global object\ng.foo = 'hello';\ng.bar = 'world';\n\n// Setup function\nfunction doStuff(str) {\n  if (str in g) {\n    var name = str;\n    var value = g[str];\n    // Do stuff with the variable name and the variable value here\n    // For this example, simply print to console\n    console.log(name, value);\n  } else {\n    console.error('Oh snap! That variable does not exist!');\n  }\n}\n\n// Call the function\ndoStuff('foo'); // log: foo hello\ndoStuff('bar'); // log: bar world\ndoStuff('fakeVariable'); // error: Oh snap! That variable does not exist!\n</code></pre>\n\n<p>This is effectively creating a dictionary that maps variable names to their value. This probably won't work for your existing code without refactoring every variable. But using this style, you can achieve a solution for this type of problem.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well, all the global variables are properties of global object (this or window), aren't they?\nSo when I wanted to find out the name of my variables, I made following function:</p>\n\n<pre><code>var getName = function(variable) {\n  for (var prop in window) {\n    if (variable === window[prop]) {\n      return prop;\n    }\n  }\n}\nvar helloWorld = \"Hello World!\";\nalert(getName(helloWorld));\n</code></pre>\n\n<p>Checked, it's working for all the JS types.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've got a feeling this might not be possible, but I would like to determine the original variable name of a variable which has been passed to a function in javascript. I don't know how to explain it any better than that, so see if this example makes sense.</p>\n\n<pre><code>function getVariableName(unknownVariable){\n  return unknownVariable.originalName;\n}\n\ngetVariableName(foo); //returns string \"foo\";\ngetVariableName(bar); //returns string \"bar\";\n</code></pre>\n\n<p>This is for a jquery plugin i'm working on, and i would like to be able to display the name of the variable which is passed to a \"debug\" function.</p>\n",
            "last_activity_date": 1402169827,
            "question_id": 3404057,
            "score": 3,
            "tags": [
                "javascript"
            ],
            "title": "Determine original name of variable after its passed to a function"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You can do this with <code>eval</code>:</p>\n\n<pre><code>var myText = 'hello world!';\nvar someString = 'myText';\n\neval('var theTextInMyText = ' + someString + ';');\n\nalert(theTextInMyText);\n</code></pre>\n\n<p>The desire to do this at all usually is a \"code smell\". Perhaps there is a more elegant way...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use an <code>eval</code> to do it, though I try to avoid that sort of thing at all costs.</p>\n\n<pre><code>alert(eval(someString));\n</code></pre>\n\n<p>A better way, if you find yourself needing to do this, is to use a hash table.</p>\n\n<pre><code>var stuff = { myText: 'hello world!' };\nvar someString = 'myText';\nalert( stuff[someString] );\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<pre><code>eval(\"alert(\" + someString + \");\");\n</code></pre>\n\n<p>would work.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>eval</code> will do that:</p>\n\n<pre><code>var myText = 'hello world!!';\nvar someString = eval('myText');\n\ndocument.getElementById('hello').innerHTML = someString;\n</code></pre>\n\n<p>As <a href=\"http://jsbin.com/oyoqa\" rel=\"nofollow\">demonstrated here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If that variable is on the global scope, you can use the <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Operators/Member%5FOperators\">bracket notation</a> on the global object:</p>\n\n<pre><code>var myText = 'hello world!';\nvar someString = 'myText';\n\nalert(window[someString]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Assuming this is at the top level, <code>window[someString] === \"hello world!\"</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In JavaScript, there is no standard for creating a 'Master Object', or any built-in method to access variables on the initial scope with a string reference that I am aware of.</p>\n\n<p>However, if you are using JavaScript for web development on a browser, the <code>window</code> Object will give you complete access to your current scope. For example:</p>\n\n<pre><code>myVar = \"This is my var\"; \nif(myVar == window.myVar){\n     /*\n         This statement would return true\n         Because both variables reference\n         the same string;\n     */\n}\n</code></pre>\n\n<p>This method will allow you to reference any scope-variable WITHOUT making it a string, but you can also use a string as needed with the bracket (<code>[]</code>) Selectors.</p>\n\n<pre><code>window['myVar']\n</code></pre>\n\n<p>It is worth mentioning that keeping data as a variable directly on the current scope leaves it open to be re-defined by other scripts running. Your variable can be overwritten by function argument names, for loop variables, and simply by assigning a new value to that variable.</p>\n\n<p>To overcome this, I suggest using an Object to store all relevant data to your application (Static And/Or OOP). Like this:</p>\n\n<pre><code>$myApp = {\n     var1 : 'This is Var1',\n     apply : function(){\n          alert('Started!');\n     }\n}\n\n//Referencing relative variables\nalert($myApp.var1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>eval() did not work in my tests. But adding new JavaScript code to the DOM tree is possible. So here is a function that adds a new variable:</p>\n\n<pre><code>function createVariable(varName,varContent)\n{\n  var scriptStr = \"var \"+varName+\"= \\\"\"+varContent+\"\\\"\"\n\n  var node_scriptCode = document.createTextNode( scriptStr )\n  var node_script = document.createElement(\"script\");\n  node_script.type = \"text/javascript\"\n  node_script.appendChild(node_scriptCode);\n\n  var node_head = document.getElementById(\"head\")\n  node_head.appendChild(node_script);\n}\n\ncreateVariable(\"dynamicVar\", \"some content\")\nconsole.log(dynamicVar)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to refer to a Javascript variable with a string that contains its name?</p>\n\n<p>example:</p>\n\n<pre><code>var myText = 'hello world!';\nvar someString = 'myText';\n\n//how to output myText value using someString?\n</code></pre>\n",
            "last_activity_date": 1412600754,
            "question_id": 1664282,
            "score": 3,
            "tags": [
                "javascript",
                "syntax",
                "variables"
            ],
            "title": "Javascript, refer to a variable using a string containing its name?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>To answer your question; the only way to have intace specific private members is to have both the members and privileged functions (functions that can access them) in the same scope. This means they all have to be in the constructor body (var my private...this.myPrivileged=function(){ console.log (myPrivate...) or in a IIFE with a closure object keeping track of <a href=\"http://stackoverflow.com/a/21809587/1641941\">instances and their privates</a>.</p>\n\n<p>When returning an object private you already loose privacy because the calling code can mutate your private value. To prevent this you have to deep copy the value and return that.</p>\n\n<p>To have privates on the prototype the privates will be shared. This because the instance is not known when declaring your prototype and private members.</p>\n\n<p>This is because JavaScript doesn't have a private modifier and only simulates them through closures.</p>\n\n<p>One pattern that can use prototype for instance specific <strong>protected</strong> variables is using Crockford's box example. </p>\n\n<p>All protecteds are put in a box that can only be opened with a key, the key is available through closures to all prototype members defined in the IIFE.</p>\n\n<p>Because the instance isn't known when creating prototype you have to invoke initProtecteds from the instance in order to create instance specific protected members.</p>\n\n<p>Minimal code with an example protected instance member called medicalHistory is used in Animal.</p>\n\n<pre><code>function makeBox(key){\n  var ret = {};\n  return {\n    get : function(pKey){\n      if(pKey===key){\n        return ret;\n      }\n      return false;\n    }\n  }\n};\n\nvar Person = function(args){\n  args = args || {};\n  this.name = args.name || \"Nameless Person\";\n  this.initProtecteds();\n};\n\n//using IIFE to define some members on Person.prototype\n//  these members and only these members have access to \n//  the passed object key (through closures)\n//  later the key is used to create a box for each instance\n//  all boxes use the same key so instances of same type\n//  can access each other's protected members and instances\n//  inheriting from Person can do so too, extending parent methods\n//  will be trickier, no example for that is given in this code\n(function(key){\n  //private shared member\n  var privateBehavior =  function(instance,args){\n    //when you invoke this from public members you can pass\n    //  the instance or use call/apply, when using call/apply\n    //  you can refer to this as the current instance, when\n    //  passing it as an argument then instance will \n    //  be the current instance\n    console.log(\"private shared invoked\");\n  };\n  //set default _protecteds to false so init knows\n  //  it has not been initialised and needs to be shadowed\n  //  with a box\n  Person.prototype._protecteds=false;\n  Person.prototype.getMedicalHistory = function(){\n    //Maybe run some code that will check if you can access\n    //  medical history, invoking a private method\n    privateBehavior(this,{});\n    var protectedObject  = this._protecteds.get(key);\n    //if medicalHistory is an object the calling code\n    //  can now mutate it\n    return protectedObject.medicalHistory;\n  };\n  Person.prototype.hasSameDesease = function(person){\n    //this Person instance should be able to see\n    //  medical history of another Person instance\n    return person._protecteds.get(key);\n  };\n  Person.prototype.getArr = function(){\n    //Returns protecteds.get(key).arr so we can\n    //  mutate it and see if protecteds are instance\n    //  specific\n    return this._protecteds.get(key).arr;\n  };\n  Person.prototype.initProtecteds =  function(){\n    //only create box if it hasn't been created yet\n    if(this._protecteds!==false)\n      return;\n    //use the same key for all instance boxes, one instance\n    //  can now open another instance's box\n    this._protecteds=makeBox(key);\n    //retreive the object held by the box\n    var protectedObject  = this._protecteds.get(key);\n    //add protected members by mutating the object held\n    //   by the box\n    protectedObject.medicalHistory = \"something\";    \n    protectedObject.arr = [];\n    //protectedObject is no longer needed\n    protectedObject=null;\n  };\n}({}));\nvar Animal = function(){\n  this.initProtecteds();\n};\n(function(key){\n  Animal.prototype._protecteds=false;\n  Animal.prototype.initProtecteds =  function(){\n    if(this._protecteds!==false)\n      return;\n    this._protecteds=makeBox(key);\n    var protectedObject  = this._protecteds.get(key);\n    protectedObject.medicalHistory = \"something\";    \n  };\n}({}));\nvar Employee = function(args){\n  //re use Person constructor\n  Person.call(this,args);\n};\n//set up prototype part of inheritance\nEmployee.prototype = Object.create(Person.prototype);\n//repair prototype.constructor to point to the right function\nEmployee.prototype.constructor = Employee;\n\nvar ben = new Person({name:\"Ben\"});\nvar nameless = new Person();\nconsole.log(ben.getMedicalHistory());//=something\n//key is in closure and all privileged methods are in that closure\n//  since {} !== {} you can't open the box unless you're in the closure\n//  or modify the code/set a breakpoint and set window.key=key in the closure\nconsole.log(ben._protecteds.get({}));//=false\n//One Person instance can access another instance's protecteds\n//  Objects that inherit from Person are same\nconsole.log(ben.hasSameDesease(nameless));//=Object { medicalHistory=\"something\"}\nvar lady = new Animal();\n//An Animal type object cannot access a Person protected members\nconsole.log(ben.hasSameDesease(lady));//=false\nvar jon = new Employee({name:\"Jon\"});\nconsole.log(ben.hasSameDesease(jon));//=Object { medicalHistory=\"something\"}\n//making sure that protecteds are instance specific\nben.getArr().push(\"pushed in ben\");\nconsole.log(jon.getArr());\nconsole.log(nameless.getArr());\nconsole.log(ben.getArr());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is interesting to consider. </p>\n\n<p>To me (and I consider myself a student of js), it looks like only private member functions have access to the object's private variables.   This is because it creates a closure around the var:</p>\n\n<pre><code>var Ball = function(width, color) {\n   var width = width;\n   this.color = color;\n   this.getWidth=function(){return width}\n   this.specialWidthCalc=function(x){ width = width + x;}\n}\n</code></pre>\n\n<p>So programmers can do:</p>\n\n<pre><code>  var redBall = new Ball(5, \"red\");\n  consoloe.log( redBall.getWidth() );\n\n  redBall.specialWidthCalc(3);\n  consoloe.log( redBall.getWidth() );\n</code></pre>\n\n<p>I am unable to create a prototype which has access to width. </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In <em>JavaScript: The Good Parts</em>, Crockford argues that one of the downsides of using the pseudo-classical pattern of inheritance is that it publicly exposes instance variables. </p>\n\n<p>For example:</p>\n\n<pre><code>var Ball = function(width, color) {\n  this.width = width;\n  this.color = color;\n}\n\nvar redBall = new Ball(5, \"red\");\nredBall.width = 12; // Changes width to 12\n</code></pre>\n\n<p>Now, what if I want the width of the ball to be private? </p>\n\n<p>Here's what I've tried:</p>\n\n<pre><code>var Ball = function(width, color) {\n  this.getWidth = function() { return width; }\n  this.color = color;\n}\n\nvar redBall = new Ball(5, \"red\");\n</code></pre>\n\n<p>Problem with that is we can still change <code>this.getWidth</code> and there may be prototype methods that rely on it. </p>\n\n<p>What about ...</p>\n\n<pre><code>var Ball = function(width, color) {\n  return {\n    getWidth: function() { return width; },\n    color: color\n  }\n}\n\nvar redBall = new Ball(5, \"red\");\n</code></pre>\n\n<p>Problem with that is that the prototype methods no longer have access to the instance variables. It's also closer to the functional pattern of inheritance, but with more indirection using the <code>new</code> operator. </p>\n\n<p>So how do I achieve privacy using the pseudo-classical inheritance pattern? Is this even possible?</p>\n",
            "last_activity_date": 1398991599,
            "question_id": 21799353,
            "score": 2,
            "tags": [
                "javascript",
                "inheritance"
            ],
            "title": "Pseudo-classical inheritance with privacy?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here, this should work with any date format with 4 digit year and any delimiter. I extracted it from my plugin <a href=\"https://github.com/elclanrs/jq-idealforms\">Ideal Forms</a> which validates dates and much more.</p>\n\n<pre><code>var isValidDate = function (value, userFormat) {\n  var\n\n  userFormat = userFormat || 'mm/dd/yyyy', // default format\n\n  delimiter = /[^mdy]/.exec(userFormat)[0],\n  theFormat = userFormat.split(delimiter),\n  theDate = value.split(delimiter),\n\n  isDate = function (date, format) {\n    var m, d, y\n    for (var i = 0, len = format.length; i &lt; len; i++) {\n      if (/m/.test(format[i])) m = date[i]\n      if (/d/.test(format[i])) d = date[i]\n      if (/y/.test(format[i])) y = date[i]\n    }\n    return (\n      m &gt; 0 &amp;&amp; m &lt; 13 &amp;&amp;\n      y &amp;&amp; y.length === 4 &amp;&amp;\n      d &gt; 0 &amp;&amp; d &lt;= (new Date(y, m, 0)).getDate()\n    )\n  }\n\n  return isDate(theDate, theFormat)\n\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Use a regular expression.</p>\n\n<pre><code>var dateRegEx = /^(0[1-9]|1[012]|[1-9])[- /.](0[1-9]|[12][0-9]|3[01]|[1-9])[- /.](19|20)\\d\\d$/\n\nconsole.log(\"06/06/2012\".match(dateRegEx) !== null) // true\nconsole.log(\"6/6/2012\".match(dateRegEx) !== null) // true\nconsole.log(\"6/30/2012\".match(dateRegEx) !== null) // true\nconsole.log(\"30/06/2012\".match(dateRegEx) !== null) // false\n</code></pre>\n\n<p><a href=\"http://www.regular-expressions.info/regexbuddy/datemmddyyyy.html\" rel=\"nofollow\">Learn about RegEx.</a></p>\n\n<h2>Edit - A Disclaimer</h2>\n\n<p>As @elclanrs pointed out, this only validates the string's <strong>format</strong>, and not the actual date, which means that dates like February 31st would pass.  However, since the OP only asks \"<em>to validate date string format</em>,\" I'll keep this answer here because for some, it might be all you need.</p>\n\n<p>As a note, the <a href=\"http://docs.jquery.com/Plugins/Validation/Methods/date\" rel=\"nofollow\">jQuery Validation plugin</a> that the OP was using, also only validates format.</p>\n\n<p>Finally, for those wondering, if you needed to validate the date, and not just the format, this regular expression would have <strong>~2% rate of failure</strong> over the domain of <em>(1-12)/(1-31)/(1900-2099)</em> date strings.  Please don't use this in Mission Critical code for JPL.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I found a lot of links to validate string if it is a date.</p>\n\n<p>Like <a href=\"http://stackoverflow.com/questions/7760032/how-to-validate-if-string-is-date-with-jquery\">here</a> and <a href=\"http://stackoverflow.com/questions/2587345/javascript-date-parse\">here</a>.</p>\n\n<p>But anyway I cannot figure out how to validate if we have this thing:</p>\n\n<p><strong>6/6/2012</strong> where first <strong>6</strong> is month and the second  <strong>6</strong> is days </p>\n\n<p>and also if user input it like that:</p>\n\n<p><strong>06/06/2012</strong></p>\n\n<p>Any clue how it could be done in a proper way?</p>\n\n<p>Thanks!!</p>\n",
            "last_activity_date": 1340765333,
            "question_id": 11218181,
            "score": 2,
            "tags": [
                "javascript",
                "jquery",
                "jquery-validate"
            ],
            "title": "Best way to validate date string format via jQuery"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>In your grid you have 5 column which are visible and sortable: 'RoleLookupName', 'FullName', 'Entity', 'ContactInformation', 'DNumber'. After the loading of grid data from the server the datatype will be changed from <code>'json'</code> to <code>'local'</code> corresponds the behavior of the parameter <code>loadonce: true</code>. From now the sorting will be work locally. Because you don't define <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3acolmodel_options\">sorttype</a> property in any column the default <code>sorttype: 'text'</code> will be used.</p>\n\n<p>How I understand the data in columns 'RoleLookupName', 'Entity' and so on can contain duplicates, so you would like to sort the grid by combination of the main sorting column (like 'RoleLookupName' for example) and the second column ('FullName' for example). In the case of duplicates in the main sorting column the grid will be still sorted by the second criteria from the second column. To implement the behavior you should use custom sorting. You can implement it by the usage of <code>sorttype</code> as function (see <a href=\"http://stackoverflow.com/questions/3324613/jqgrid-with-custom-sorttype/3329852#3329852\">the answer</a>).</p>\n\n<p>The idea of <code>sorttype</code> as function is easy. The <code>sorttype</code> should return string or integer which should be used <strong>instead of</strong>  the main cell contain. For example you can define 'RoleLookupName' as following</p>\n\n<pre><code>{ name: 'RoleLookupName', index: 'RoleLookupName',\n    sorttype: function (cell, obj) {\n        return cell + '_' + obj.FullName;\n    }}\n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/questions/7202133/jqgrid-custom-filtering-with-build-in-filtering-toolbar/7206696#7206696\">Another answer</a> which includes <a href=\"http://www.ok-soft-gmbh.com/jqGrid/CustomSearchAndSortWithFilter.htm\">the demo</a> could you find probably also interesting for understanding. It demonstrates even more advanced technique where it is implemented not only custom sorting, but also custom searching.</p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>I have a JQGrid populated with data working correctly. The default sorting functionality is working as expected. However, I would like to sort by the clicked column, and the by a name column; every time. I think the <code>onSortCol</code> is where I should start, but there isn't much in the documentation about how to sort the contents of the table. Ideally, I would like to not have to write my own sorting algorithm and just plug into the JQGrid API somehow. All of the data is on the client and I would like to avoid a trip to the server if at all possible.</p>\n\n<p>Here is the code I'm using to create the grid:</p>\n\n<pre><code>$jqGrid = $('#people_SelectedContacts').jqGrid({\n    ajaxGridOptions: {\n        type: \"POST\"\n    },\n    url: 'AJAX/GetContacts',\n    datatype: \"json\",\n    postData: JSON.stringify({ ID: $('#ID').val() }),\n    loadonce: true,\n    sortable: true,\n    caption: \"Selected Contacts\",\n    hidegrid: false,\n    autowidth: true,\n    rowNum: 10000,\n    height: \"100%\",\n    loadui: 'block',\n    colNames: ['lecID', 'lrlID', 'mjID', 'Role', 'Name', 'Entity', 'Contact', 'D #', ''],\n    colModel: [\n        { name: 'LECID', hidden: true },\n        { name: 'LRLID', hidden: true },\n        { name: 'MJID', hidden: true },\n        { name: 'RoleLookupName', index: 'RoleLookupName' },\n        { name: 'FullName', index: 'FullName' },\n        { name: 'Entity', index: 'Entity' },\n        { name: 'ContactInformation', index: 'ContactInformation' },\n        { name: 'DNumber', index: 'DNumber' },\n        { name: 'Remove', sortable: false, width: 25 }\n    ],\n    jsonReader: {\n        root: 'ReturnValues.Contacts',\n        repeatitems: false\n    },\n    beforeProcessing: function (data, status, xhr) {\n        if (!data.ReturnValues.Contacts) {\n            data.ReturnValues.Contacts = new Array();\n        }\n        $.each(data.ReturnValues.Contacts, function (index, value) {\n            value.Entity = FormatAddress(value);\n            value.ContactInformation = FormatContact(value);\n            value.DNumber = FormatDocket(value);\n        });\n    },\n    gridComplete: function () {\n        var ids = $jqGrid.jqGrid('getDataIDs');\n        for (var i = 0; i &lt; ids.length; i++) {\n            removeButton = $('&lt;span&gt;').addClass('remove-contact jqui-button-fix');\n            $jqGrid.jqGrid('setRowData', ids[i], { Remove: $('&lt;div&gt;').append(removeButton).html() });\n        }\n    },\n    loadComplete: function (data) {\n\n    },\n    onSortCol: function (index, iCol, sortorder) {\n\n    }\n});\n</code></pre>\n",
            "last_activity_date": 1320354207,
            "question_id": 7917321,
            "score": 2,
            "tags": [
                "javascript",
                "jquery",
                "jqgrid"
            ],
            "title": "JQGrid Custom Sorting"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Because the <code>0</code> prefix indicates an octal number (base 8).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>With a leading zero, the numer is interpreted as octal and 4 * 8 = 32.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p><strong>History</strong></p>\n\n<p>The problem is that decimal integer literals can't have leading zeros:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>DecimalIntegerLiteral ::\n    0\n    NonZeroDigit DecimalDigits(opt)\n</code></pre>\n\n<p>However, ECMAScript&nbsp;3 allowed (as an optional extension) to parse literals with leading zeros in base&nbsp;8:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>OctalIntegerLiteral ::\n    0 OctalDigit\n    OctalIntegerLiteral OctalDigit\n</code></pre>\n\n<p>But <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.3\" rel=\"nofollow\">ECMAScript&nbsp;5</a> forbade doing that in strict-mode:</p>\n\n<blockquote>\n  <p>A conforming implementation, when processing <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-10.1.1\" rel=\"nofollow\">strict mode code (see\n  10.1.1)</a>, must not extend the syntax of <em>NumericLiteral</em> to include <em>OctalIntegerLiteral</em> as described in <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-B.1.1\" rel=\"nofollow\">B.1.1</a>.</p>\n</blockquote>\n\n<p><a href=\"http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-numeric-literals\" rel=\"nofollow\">ECMAScript&nbsp;6</a> introduces <em>BinaryIntegerLiteral</em> and <em>OctalIntegerLiteral</em>, so now we have more coherent literals:</p>\n\n<ul>\n<li><em>BinaryIntegerLiteral</em>, prefixed with <code>0b</code> or <code>0B</code>.</li>\n<li><em>OctalIntegerLiteral</em>, prefixed with <code>0o</code> or <code>0O</code>.</li>\n<li><em>HexIntegerLiteral</em>, prefixed with <code>0x</code> or <code>0X</code>.</li>\n</ul>\n\n<p>The old <em>OctalIntegerLiteral</em> extension has been renamed to <em>LegacyOctalIntegerLiteral</em>, which is still allowed in non-strict mode.</p>\n\n<p><strong>Conclusion</strong></p>\n\n<p>Therefore, if you want to parse a number in base&nbsp;8, use the <code>0o</code> or <code>0O</code> prefixes (not supported by old browsers), or use <code>parseInt</code>.</p>\n\n<p>And if you want to be sure your numbers will be parsed in base 10, remove leading zeros, or use <code>parseInt</code>.</p>\n\n<p><strong>Examples</strong></p>\n\n<ul>\n<li><code>010</code>\n<ul>\n<li>In strict mode (requires ECMAScript 5), it throws.</li>\n<li>In non strict mode, it may throw or return <code>8</code> (implementation dependent).</li>\n</ul></li>\n<li><code>0o10</code>, <code>0O10</code>\n<ul>\n<li>Before ECMAScript 6, they throw.</li>\n<li>In ECMAScript 6, they return <code>8</code>.</li>\n</ul></li>\n<li><code>parseInt('010', 8)</code>\n<ul>\n<li>It returns <code>8</code>.</li>\n</ul></li>\n<li><code>parseInt('010', 10)</code>\n<ul>\n<li>It returns <code>10</code>.</li>\n</ul></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Try this:</p>\n\n<pre><code>&lt;script language=\"javascript\"&gt;\n    var iTest=040;\n    alert(iTest);\n&lt;/script&gt;\n</code></pre>\n\n<p>Since when is 40 = 32?</p>\n",
            "last_activity_date": 1423172319,
            "question_id": 6505033,
            "score": 2,
            "tags": [
                "javascript"
            ],
            "title": "Leading zero in javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>for (i = 0; i &lt; n; i++)\n{\niimPlay(\"macroname.iim\");\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>There is this option too.</p>\n\n<pre><code>var macro;\n\nmacro =\"CODE:\";\nmacro +=\"TAG POS=1 TYPE=DIV ATTR=CLASS:some_class\"\n\n\nvar n=10;\n\n\nfor(var i=0;i&lt;n;i++)\n{\niimPlay(macro)\n}\n</code></pre>\n\n<p>In codes above n is not defined so it will return an error.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>how can i loop imm(imacros) script with javascript</p>\n\n<p>I searched a little bit and found this:</p>\n\n<pre><code>for (i = 0; i &lt; n; i++)\n{\niimPlay(marconame.iim);\n}\n</code></pre>\n\n<p>but when i use it my browser(Firefox 18) hangs :\\</p>\n",
            "last_activity_date": 1361222732,
            "question_id": 14909553,
            "score": 1,
            "tags": [
                "javascript",
                "imacros"
            ],
            "title": "Loop in Imacros using Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>just use php to print some dynamic javascript</p>\n\n<pre><code>&lt;script&gt;\nvar myVar = \"&lt;?php echo json_encode($_COOKIE['somevalue']);?&gt;\";\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>There are multiple methods for providing the data to the client, such as:  </p>\n\n<ol>\n<li>Echo the variables in your javascript, <code>var userid = &lt;?php echo\n$userid; ?&gt;</code> </li>\n<li>JSON'fy your variables and supply them to your javascript via AJAX/jQuery: <code>$.getJSON(url, function(data){  var userid = data.userid; });</code></li>\n</ol>\n\n<p>I typically utilize JSON as much as possible when trying to present server-side data to the client-side, as it helps to separate the different layers.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am trying to create a site where someone can create an \"item\" and the database will store an id and php generates a url for that id. So next time when the person comes back with that url it will remember the person's settings (variables). Now the problem is that in my site javascript need to know these variables.</p>\n\n<p>So what is the best solution for this? passing the variables in the superglobal \"GET\" or maybe cookies? Or is there a better way to pass these variables to javascript? </p>\n",
            "last_activity_date": 1313972767,
            "question_id": 7141860,
            "score": 1,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "passing variables from php to javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>That's an interesting property of <code>always</code> - I hadn't expected that behaviour.</p>\n\n<p>I suppose you could use a master, top-level deferred to monitor the states of the main deferreds, which is resolved only once the main deferreds are all either resolved or rejected. Something like:</p>\n\n<pre><code>//set up master deferred, to observe the states of the sub-deferreds\nvar master_dfd = new $.Deferred;\nmaster_dfd.done(function() { alert('done'); });\n\n//set up sub-deferreds\nvar dfds = [new $.Deferred, new $.Deferred, new $.Deferred];\nvar cb = function() {\n    if (dfds.filter(function(dfd) {\n        return /resolved|rejected/.test(dfd.state());\n    }).length == dfds.length)\n        master_dfd.resolve();\n};\ndfds.forEach(function(dfd) { dfd.always(cb); });\n\n//resolve or reject sub-deferreds. Master deferred resolves only once\n//all are resolved or rejected\ndfds[0].resolve();\ndfds[1].reject();\ndfds[2].resolve();\n</code></pre>\n\n<p>Fiddle: <a href=\"http://jsfiddle.net/Wtxfy/3/\" rel=\"nofollow\">http://jsfiddle.net/Wtxfy/3/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>More sophisticated promise libraries have an <a href=\"https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\" rel=\"nofollow\"><code>allSettled()</code> function like <code>Q</code></a>.</p>\n\n<p>In jQuery, you could implement such a function yourself as well and extend the <code>$</code> namespace with it, but that will only be necessary if you need it often and performance-optimized.</p>\n\n<p>A simpler solution would be to create a new promise for each of the ones you are waiting for, and fulfilling them even when the underlying one is rejected. Then you can use <code>$.when()</code> on them without problems. In short:</p>\n\n<pre><code>// using Underscore's .invoke() method:\n$.when.apply(null, _.invoke(promises, \"then\", null, $.when)).done(\u2026)\n</code></pre>\n\n<p>More stable:</p>\n\n<pre><code>$.when.apply($, $.map(promises, function(p) {\n    return p.then(null, function() {\n        return $.Deferred().resolveWith(this, arguments);\n    });\n})).done(\u2026);\n</code></pre>\n\n<p>You might change the <code>then</code> callbacks a bit to distinguish between fulfilled and rejected results in the final <code>done</code>.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>Smithy, </p>\n\n<p>First let's assume your promises are in an array.</p>\n\n<pre><code>var promises = [....];\n</code></pre>\n\n<p>What you appear to want is <code>.when()</code> applied to some transform of these promises, such that any rejected promise is converted to resolved, whilst being transparent to promises that are already resolved. </p>\n\n<p>The required operation can be written very succinctly as follows :</p>\n\n<pre><code>$.when.apply(null, $.map(promises, resolvize)).done(...);\n//or, if further filtering by .then() is required ...\n$.when.apply(null, $.map(promises, resolvize)).then(...);\n</code></pre>\n\n<p>where <code>resolvize</code> is the transform mechanism.</p>\n\n<p>So what should <code>resolvize()</code>, look like? Let's exploit the characteristics of <code>.then()</code> to make the distinction beteween a resolved and a rejected promise, and respond accordingly.</p>\n\n<pre><code>function resolvize(promise) {\n    //Note: null allows a resolved promise to pass straight through unmolested;\n    return promise.then(null, function() {\n        return $.Deferred().resolve.apply(null, arguments).promise();\n    });\n}\n</code></pre>\n\n<p><em>untested</em></p>\n\n<p>With <code>resolvize</code> in some outer scope, it can be made available to be used in a <code>$.when.apply($.map(promises, resolvize))</code> expression wherever it is needed. This is most likely adequate, without going to the extent of extending jQuery with a new method.</p>\n\n<p>Regardless of how the transform is achieved, you end up with a potential issue; namely knowing for each argument of the <code>.done()</code> callback, whether its corresponding promise was originally resolved or rejected. That's the price you pay for converting rejection to resolution. You may, however, be able to detect the original status from the parameter(s) with which the original promises were resolved/rejected.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a number of async tasks that need to be completed, so I'm using promises.</p>\n\n<p>I need to detect when each one of the promises has been executed (both resolved and rejected). I must not continue execution until that point.</p>\n\n<p>I was using something like this:</p>\n\n<pre><code>$.when(promise1, promise2, ...).always();\n</code></pre>\n\n<p>But this code is wrong, because the <code>when</code> method has lazy evaluation, and it returns as soon as one of the promises fails. So the <code>always</code> callback also runs as soon as one of the promises fail.</p>\n\n<p>I was thinking in coding a workaround, but this use case is so common that maybe somebody has done it already, or maybe there's even a way of doing this using just jQuery (if not, it would be nice to add a <code>Promise.whenNonLazy</code> or a <code>Promise.when(promise1, promise2, ..., false)</code> in the future.</p>\n\n<p>Is this possible?</p>\n",
            "last_activity_date": 1381154875,
            "question_id": 19177087,
            "score": 0,
            "tags": [
                "javascript",
                "jquery",
                "asynchronous",
                "promise",
                "jquery-deferred"
            ],
            "title": "$.Deferred: How to detect when every promise has been executed"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>In case you use jQuery UI Accordion, you can add simple event to your accordion.</p>\n\n<p>or add event:</p>\n\n<pre><code>$( \".selector\" ).bind( \"accordioncreate\", function(event, ui) {\n  $( \".selector\" ).accordion( \"option\", \"active\", -1 )\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have two different methods for simple accordion; 1st with close button, 2nd is with hover trigger.</p>\n\n<p><strong>1)</strong> Here is <a href=\"http://jsfiddle.net/gWcFD/66/\" rel=\"nofollow\">JsFiddle example with <strong>close</strong> button:</a></p>\n\n<p><strong>jQuery:</strong></p>\n\n<pre><code>$('.content').slideUp(400);//reset panels\n\n$('.panel').click(function() {//open\n   var takeID = $(this).attr('id');//takes id from clicked ele\n   $('#'+takeID+'C').slideDown(400);\n                             //show's clicked ele's id macthed div = 1second\n});\n$('span').click(function() {//close\n   var takeID = $(this).attr('id').replace('Close','');\n   //strip close from id = 1second\n    $('#'+takeID+'C').slideUp(400);//hide clicked close button's panel\n});\u200b\n</code></pre>\n\n<p><strong>html:</strong></p>\n\n<pre><code>&lt;div class=\"panel\" id=\"panel1\"&gt;panel1&lt;/div&gt;\n&lt;div id=\"panel1C\"&gt;content1\n  &lt;span id=\"panel1Close\"&gt;X&lt;/span&gt;\n&lt;/div&gt;\n&lt;div class=\"panel\" id=\"panel2\"&gt;panel2&lt;/div&gt;\n&lt;div id=\"panel2C\"&gt;content2\n  &lt;span id=\"panel2Close\"&gt;X&lt;/span&gt;\n&lt;/div&gt;\n&lt;div class=\"panel\" id=\"panel3\"&gt;panel3&lt;/div&gt;\n&lt;div id=\"panel3C\"&gt;content3\n  &lt;span id=\"panel3Close\"&gt;X&lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n\n<h2>-------</h2>\n\n<p>\u200b\n<strong>2)</strong> Here is <a href=\"http://jsfiddle.net/gWcFD/68/\" rel=\"nofollow\">JsFiddle example with <strong>hover</strong> trigger:</a></p>\n\n<pre><code>$('.panel').hover(function() {\n   var takeID = $(this).attr('id');//takes id from clicked ele\n   $('.content').stop(false,true).slideUp(400);//close\n   //used stop for prevent conflict\n   $('#'+takeID+'C').stop(false,true).slideDown(400);//open\n   //show's clicked ele's id macthed div\n});\u200b\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 0
                }
            ],
            "body": "<p>I have query regarding Accordion tabs ..</p>\n\n<p>I have used <strong>Accordion Menu</strong> plugin Below code i have used for the tabs in the page .</p>\n\n<pre><code>  [accordions]\n  [accordion title =\"about\"]**Content 1** [/accordion ]\n  [accordion title=\"Home\"]**Content 2** [/accordion ]\n  [/accordions]\n</code></pre>\n\n<p>The web page looks like as follows:</p>\n\n<p><img src=\"http://i.stack.imgur.com/JVA2Z.png\" alt=\"enter image description here\"></p>\n\n<p>I want first both these tabs to be collapsed and.When clicked on <strong>ABOUT</strong> it should expand and display the content .And once clicked on <strong>Home</strong> it should collapse <strong>ABOUT</strong> tab and expand the home page</p>\n\n<p>By jquery i can achieve this but i dont know which script to download and work with it..</p>\n\n<p>Any ideas??\nThanks in advance</p>\n",
            "last_activity_date": 1359120490,
            "question_id": 11504193,
            "score": 0,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "accordion"
            ],
            "title": "collapse and expand tabs jquery / simple accordion"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Window -> Preferences -> JavaScript -> Validator (also per project settings possible)</p>\n\n<p>or</p>\n\n<p>Window -> Preferences -> Validation (disable validations and configure their settings)</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Turn off the JavaScript Validator in the \"Builders\" config for your project:</p>\n\n<ol>\n<li>Right click your project</li>\n<li>Select Properties -> Builders</li>\n<li>Uncheck the \"JavaScript Validator\"</li>\n</ol>\n\n<p>Then either restart your Eclipse or/and rename the .js to something like .js_ then back again.</p>\n",
                    "is_accepted": false,
                    "score": 79
                },
                {
                    "body": "<p>I actually like MY JavaScript files to be validated, but I definitely don't want to validate and deal with trivial warnings with third party libraries.</p>\n\n<p>That's why I think that turning off validation all together is too drastic.  Fortunately with Eclipse Indigo ( 3.7 ) you can selectively remove some JavaScript sources from validation.</p>\n\n<ol>\n<li>Right click your project</li>\n<li>Select Properties -> JavaScript -> Include Path</li>\n<li>Select <code>Source</code> tab. ( It looks identical to Java Build Path Source tab )</li>\n<li>Expand JavaScript source folder</li>\n<li>Highlight <code>Excluded</code> pattern</li>\n<li>Click <code>Edit</code> button</li>\n<li>Click <code>Add</code> button next to <code>Exclusion patterns</code> box.</li>\n<li>You may either type Ant-style wildcard pattern, or click <code>Browse</code> button to mention the JavaScript source by name.</li>\n</ol>\n\n<p>The information about JavaScript source inclusion/exclusion is saved into <code>.settings/.jsdtscope</code> file.  Do not forget to add it to your SCM.</p>\n\n<p>Here is how configuration looks with jquery files removed from validation<img src=\"http://i.stack.imgur.com/6UJjs.jpg\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": true,
                    "score": 546
                },
                {
                    "body": "<p>Go to Windows->Preferences->Validation.  </p>\n\n<p>There would be a list of validators with checkbox options for Manual &amp; Build, go and individually disable the javascript validator there. </p>\n\n<p>If you select the Suspend All Validators checkbox on the top it doesn't necessarily take affect.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I was able to exclude the jquery.mobile 1.1.1 in Juno by selecting <em>Add Multiple</em> next to the Exlusion Patterns, which brings up the tree, then drilling down to the jquery-mobile folder and selecting that.</p>\n\n<p>This corrected all the warnings for the library!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Another reason could be that you acidentically added a Javascript nature to your project unintentionally (i just did this by accident) which enables javascript error checking.</p>\n\n<p>removing this ....javascriptnature from your project fixes that.</p>\n\n<p>(this is ofcourse only if you dont want eclipse to realise you have any JS)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I removed the tag in the .project .</p>\n\n<pre><code>    &lt;buildCommand&gt;\n        &lt;name&gt;org.eclipse.wst.jsdt.core.javascriptValidator&lt;/name&gt;\n        &lt;arguments&gt;\n        &lt;/arguments&gt;\n    &lt;/buildCommand&gt;\n</code></pre>\n\n<p>It's worked very well for me. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using eclipse on my project and while messing around with my eclipse settings, I turned on Javascript support. Now eclipse complains that JQuery library has errors in it and is not letting me compile the project. Does anyone know how to turn javascript validation off? </p>\n",
            "last_activity_date": 1423657956,
            "question_id": 3131878,
            "score": 256,
            "tags": [
                "javascript",
                "jquery",
                "eclipse",
                "validation",
                "syntax"
            ],
            "title": "How do I remove javascript validation from my eclipse project?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><em>Notice: I do update this answer as I find better solutions. I also keep the old answers for future reference as long as they remain related. Latest and best answer comes first.</em> </p>\n\n<h2>Better answer:</h2>\n\n<p>Directives in angularjs are very powerful, but it takes time to comprehend which processes lie behind them.</p>\n\n<p>While creating directives, angularjs allows you to create an <em>isolated scope</em> with some bindings to the parent scope. These bindings are specified by the <strong>attribute</strong> you attach the element in DOM and how you define <strong>scope</strong> property in the <em>directive definition object</em>.</p>\n\n<p>There are 3 types of binding options which you can define in scope and you write those as prefixes related attribute.</p>\n\n<pre><code>angular.module(\"myApp\", []).directive(\"myDirective\", function () {\n    return {\n        restrict: \"A\",\n        scope: {\n            text: \"@myText\",\n            twoWayBind: \"=myTwoWayBind\",\n            oneWayBind: \"&amp;myOneWayBind\"\n        }\n    };\n}).controller(\"myController\", function ($scope) {\n    $scope.foo = {name: \"Umur\"};\n    $scope.bar = \"qwe\";\n});\n</code></pre>\n\n<p><em>HTML</em></p>\n\n<pre><code>&lt;div ng-controller=\"myController\"&gt;\n    &lt;div my-directive my-text=\"hello {{ bar }}\" my-two-way-bind=\"foo\" my-one-way-bind=\"bar\"&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>In that case, in the scope of directive (whether it's in linking function or controller), we can access these properties like this:</p>\n\n<pre><code>/* Directive scope */\n\nin: $scope.text\nout: \"hello qwe\"\n// this would automatically update the changes of value in digest\n// this is always string as dom attributes values are always strings\n\nin: $scope.twoWayBind\nout: {name:\"Umur\"}\n// this would automatically update the changes of value in digest\n// changes in this will be reflected in parent scope\n\n// in directive's scope\nin: $scope.twoWayBind.name = \"John\"\n\n//in parent scope\nin: $scope.foo.name\nout: \"John\"\n\n\nin: $scope.oneWayBind() // notice the function call, this binding is read only\nout: \"qwe\"\n// any changes here will not reflect in parent, as this only a getter .\n</code></pre>\n\n<h2>\"Still OK\" Answer:</h2>\n\n<p>Since this answer got accepted, but has some issues, I'm going to update it to a better one. Apparently, <code>$parse</code> is a service which does not lie in properties of the current scope, which means it only takes angular expressions and cannot reach scope. \n<code>{{</code>,<code>}}</code> expressions are compiled while angularjs initiating which means when we try to access them in our directives <code>postlink</code> method, they are already compiled. (<code>{{1+1}}</code> is <code>2</code> in directive already).</p>\n\n<p>This is how you would want to use:</p>\n\n<pre><code>var myApp = angular.module('myApp',[]);\n\nmyApp.directive('myDirective', function ($parse) {\n    return function (scope, element, attr) {\n        element.val(\"value=\" + $parse(attr.myDirective)(scope));\n    };\n});\n\nfunction MyCtrl($scope) {\n    $scope.aaa = 3432;\n}\u200b\n</code></pre>\n\n<p>.</p>\n\n<pre><code>&lt;div ng-controller=\"MyCtrl\"&gt;\n    &lt;input my-directive=\"123\"&gt;\n    &lt;input my-directive=\"1+1\"&gt;\n    &lt;input my-directive=\"'1+1'\"&gt;\n    &lt;input my-directive=\"aaa\"&gt;\n&lt;/div&gt;\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\n</code></pre>\n\n<p>One thing you should notice here is that, if you want set the value string, you should wrap it in quotes. (See 3rd input)</p>\n\n<p>Here is the fiddle to play with: <a href=\"http://jsfiddle.net/neuTA/6/\">http://jsfiddle.net/neuTA/6/</a></p>\n\n<h2>Old Answer:</h2>\n\n<p><em>I'm not removing this for folks who can be misled like me, note that using <code>$eval</code> is perfectly fine the correct way to do it, but <code>$parse</code> has a different behavior, you probably won't need this to use in most of the cases.</em></p>\n\n<p>The way to do it is, once again, using <code>scope.$eval</code>. Not only it compiles the angular expression, it has also access to the current scope's properties.</p>\n\n<pre><code>var myApp = angular.module('myApp',[]);\n\nmyApp.directive('myDirective', function () {\n    return function (scope, element, attr) {\n        element.val(\"value = \"+ scope.$eval(attr.value));\n    }\n});\n\nfunction MyCtrl($scope) {\n\n}\u200b\n</code></pre>\n\n<p>What you are missing was <code>$eval</code>.</p>\n\n<blockquote>\n  <p><a href=\"http://docs.angularjs.org/api/ng.$rootScope.Scope#$eval\">http://docs.angularjs.org/api/ng.$rootScope.Scope#$eval</a></p>\n  \n  <p>Executes the expression on the current scope returning the result. Any exceptions in the expression are propagated (uncaught). This is useful when evaluating angular expressions.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 267
                },
                {
                    "body": "<p>For an attribute value that needs to be interpolated in a directive that is not using an isolated scope, e.g., </p>\n\n<pre><code>&lt;input my-directive value=\"{{1+1}}\"&gt;\n</code></pre>\n\n<p>use Attributes' method <code>$observe</code>:</p>\n\n<pre><code>myApp.directive('myDirective', function () {\n  return function (scope, element, attr) {\n    attr.$observe('value', function(actual_value) {\n      element.val(\"value = \"+ actual_value);\n    })\n }\n});\n</code></pre>\n\n<p>From the <a href=\"http://docs.angularjs.org/guide/directive\">directive</a> page, </p>\n\n<blockquote>\n  <p>observing interpolated attributes: Use <code>$observe</code> to observe the value changes of attributes that contain interpolation (e.g. <code>src=\"{{bar}}\"</code>). Not only is this very efficient but it's also the only way to easily get the actual value because during the linking phase the interpolation hasn't been evaluated yet and so the value is at this time set to <code>undefined</code>.</p>\n</blockquote>\n\n<p>If the attribute value is just a constant, e.g.,</p>\n\n<pre><code>&lt;input my-directive value=\"123\"&gt;\n</code></pre>\n\n<p>you can use <a href=\"http://docs.angularjs.org/api/ng.%24rootScope.Scope#%24eval\">$eval</a> if the value is a number or boolean, and you want the correct type:</p>\n\n<pre><code>return function (scope, element, attr) {\n   var number = scope.$eval(attr.value);\n   console.log(number, number + 1);\n});\n</code></pre>\n\n<p>If the attribute value is a string constant, or you want the value to be string type in your directive, you can access it directly:</p>\n\n<pre><code>return function (scope, element, attr) {\n   var str = attr.value;\n   console.log(str, str + \" more\");\n});\n</code></pre>\n\n<p>In your case, however, since you want to support interpolated values and constants, use <code>$observe</code>.</p>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>The other answers here are very much correct, and valuable. But sometimes you just want simple: to get a plain old parsed value at directive instantiation, without needing updates, and without messing with isolate scope. For instance, it can be handy to provide a declarative payload into your directive as an array or hash-object in the form:</p>\n\n<pre><code>my-directive-name=\"['string1', 'string2']\"\n</code></pre>\n\n<p>In that case, you can cut to the chase and just use a nice basic <code>angular.$eval(attr.attrName)</code>. </p>\n\n<pre><code>element.val(\"value = \"+angular.$eval(attr.value));\n</code></pre>\n\n<p>Working <a href=\"http://jsfiddle.net/neuTA/450/\" rel=\"nofollow\">Fiddle</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For the same solution I was looking for <code>Angularjs directive with ng-Model</code>.\n<br/> Here is the code that resolve the problem.\n<br/> </p>\n\n<pre><code>    myApp.directive('zipcodeformatter', function () {\n    return {\n        restrict: 'A', // only activate on element attribute\n        require: '?ngModel', // get a hold of NgModelController\n        link: function (scope, element, attrs, ngModel) {\n\n            scope.$watch(attrs.ngModel, function (v) {\n                if (v) {\n                    console.log('value changed, new value is: ' + v + ' ' + v.length);\n                    if (v.length &gt; 5) {\n                        var newzip = v.replace(\"-\", '');\n                        var str = newzip.substring(0, 5) + '-' + newzip.substring(5, newzip.length);\n                        element.val(str);\n\n                    } else {\n                        element.val(v);\n                    }\n\n                }\n\n            });\n\n        }\n    };\n});\n</code></pre>\n\n<p><br/>\n<strong>HTML DOM</strong><br/></p>\n\n<pre><code>&lt;input maxlength=\"10\" zipcodeformatter onkeypress=\"return isNumberKey(event)\" placeholder=\"Zipcode\" type=\"text\" ng-readonly=\"!checked\" name=\"zipcode\" id=\"postal_code\" class=\"form-control input-sm\" ng-model=\"patient.shippingZipcode\" required ng-required=\"true\"&gt;\n</code></pre>\n\n<p><br/>\n<strong>My Result is:</strong></p>\n\n<pre><code>92108-2223\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to get an <strong>evaluated</strong> attribute from my custom directive, but I can't find the right way of doing it.</p>\n\n<p>I've created <a href=\"http://jsfiddle.net/neuTA/1/\">this jsFiddle</a> to elaborate.</p>\n\n<pre><code>&lt;div ng-controller=\"MyCtrl\"&gt;\n    &lt;input my-directive value=\"123\"&gt;\n    &lt;input my-directive value=\"{{1+1}}\"&gt;\n&lt;/div&gt;\n\nmyApp.directive('myDirective', function () {\n    return function (scope, element, attr) {\n        element.val(\"value = \"+attr.value);\n    }\n});\n</code></pre>\n\n<p>What am I missing?</p>\n",
            "last_activity_date": 1416823710,
            "question_id": 12371159,
            "score": 145,
            "tags": [
                "javascript",
                "binding",
                "angularjs",
                "directive"
            ],
            "title": "How to get evaluated attributes inside a custom directive"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Setting <code>module.exports</code> allows the <code>database_module</code> function to be called like a function when <code>require</code>d.  Simply setting <code>exports</code> wouldn't allow the function to be \nexported.  The following code wouldn't allow the user to call the function. </p>\n\n<h3>The following won't work.</h3>\n\n<p><strong>module.js</strong> </p>\n\n<pre><code>exports = nano = function database_module(cfg) {return;}\n</code></pre>\n\n<p>Console</p>\n\n<pre><code>var func = require('./module.js');\n// the following line will fail\nfunc();\n</code></pre>\n\n<h3>The following will work if <code>module.exports</code> is set.</h3>\n\n<p><strong>module.js</strong> </p>\n\n<pre><code>module.exports = exports = nano = function database_module(cfg) {return;}\n</code></pre>\n\n<p>Console</p>\n\n<pre><code>var func = require('./module.js');\n// the following line will **work**\nfunc();\n</code></pre>\n\n<p>Basically <strong>nodes.js</strong> doesn't export the object that <code>exports</code> currently references, but exports the properties of what <code>exports</code> originally references.  Although <strong>Node.js</strong> does export the object <code>module.exports</code> references, allowing you to call it like a function.</p>\n\n<hr>\n\n<h3>2nd least important reason</h3>\n\n<p>They set both <code>module.exports</code> and <code>exports</code> to insure <code>exports</code> isn't referencing the prior exported object.  By setting both you use <code>exports</code> as a shorthand and avoid potential bugs later down the road.</p>\n\n<p>Using <code>exports.prop = true</code>  instead of <code>module.exports.prop = true</code> saves characters and avoids confusion.</p>\n",
                    "is_accepted": true,
                    "score": 180
                },
                {
                    "body": "<p>I found this link useful to answer the above question.</p>\n\n<p><a href=\"http://timnew.github.io/blog/2012/04/20/exports_vs_module_exports_in_node_js/\" rel=\"nofollow\">http://timnew.github.io/blog/2012/04/20/exports_vs_module_exports_in_node_js/</a></p>\n\n<p>To add to the other posts  The module system in node does    </p>\n\n<pre><code>var exports = module.exports \n</code></pre>\n\n<p>before executing your code. So when you want to exports = foo  , you probably want to do module.exports = exports = foo  but using exports.foo = foo should be fine</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Basically the answer lies in what really happens when a module is required via 'require' statement.Assuming this is the first time the module is being required.</p>\n\n<p>For example , </p>\n\n<pre><code>var x = require('file1.js');\n</code></pre>\n\n<p>contents of file1.js;</p>\n\n<pre><code>module.exports = '123'\n</code></pre>\n\n<p>When the above statement is executed, a 'Module' object is created. Module constructor function , </p>\n\n<pre><code>function Module(id, parent) {\n    this.id = id;\n    this.exports = {};\n    this.parent = parent;\n    if (parent &amp;&amp; parent.children) {\n        parent.children.push(this);\n    }\n\n    this.filename = null;\n    this.loaded = false;\n    this.children = [];\n}\n</code></pre>\n\n<p>As you see each module object has a property with name 'exports'.This is what is eventually returned as part of require.</p>\n\n<p>Next step of require is to wrap the contents of file1.js into an anonymous function like below : </p>\n\n<pre><code>(function (exports, require, module, __filename, __dirname) { \n    //contents from file1.js\n    module.exports = '123;\n});\n</code></pre>\n\n<p>And this anonymous function is invoked the following way, module here refers to the Module Object created earlier.</p>\n\n<pre><code>(function (exports, require, module, __filename, __dirname) { \n    //contents from file1.js\n    module.exports = '123;\n}) (module.exports,require, module, \"path_to_file1.js\",\"directory of the file1.js\");\n</code></pre>\n\n<p>As we can see inside the function , exports formal argument refers to module.exports.In essence its a convenience provided to the module programmer.</p>\n\n<p>However this convenience need to be exercised with care. In any case if trying to assign a new object to exports ensure we do it this way.</p>\n\n<pre><code>exports = module.exports = {};\n</code></pre>\n\n<p>If we do it following way <em>wrong way</em>, <code>module.exports</code> will still be pointing to the object created as part of module instance.</p>\n\n<pre><code>exports = {};\n</code></pre>\n\n<p>As as result adding anything to the above exports object will have no effect to module.exports object and nothing will be exported or returned as part of require.</p>\n",
                    "is_accepted": false,
                    "score": 83
                },
                {
                    "body": "<p>Initially,<code>module.exports=exports</code> , and the <code>require</code> function returns the object <code>module.exports</code> refers to.</p>\n\n<p>if we <strong>add property</strong> to the object, say <code>exports.a=1</code>, then module.exports and exports <strong>still</strong> refer to the same object. So if we call require and assign the module to a variable, then the variable has a property a and it's value is 1;</p>\n\n<p>But if we <strong>override</strong> one of them, for example, <code>exports=function(){}</code>, then they are <strong>different</strong> now: exports refers to a new object and module.exports refer to the original object. And if we require the file, it will not return the new object, since module.exports is not refer to the new object.</p>\n\n<p>For me, i will keep adding new property, or override both of them to a new object. Just override one is not right. And keep in mind that <code>module.exports</code> is the real boss.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I just make some test, it turns out that, inside nodejs's module code, it should something like this:</p>\n\n<pre><code>var module.exports = {};\nvar exports = module.exports;\n</code></pre>\n\n<p>so:</p>\n\n<h1>1:</h1>\n\n<pre><code>exports = function(){}; // this will not work! as it make the exports to some other pointer\nmodule.exports = function(){}; // it works! cause finally nodejs make the module.exports to export.\n</code></pre>\n\n<h1>2:</h1>\n\n<pre><code>exports.abc = function(){}; // works!\nexports.efg = function(){}; // works!\n</code></pre>\n\n<h1>3: but, while in this case</h1>\n\n<pre><code>module.exports = function(){}; // from now on we have to using module.exports to attach more stuff to exports.\nmodule.exports.a = 'value a'; // works\nexports.b = 'value b'; // the b will nerver be seen cause of the first line of code we have do it before (or later)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>in node js module.js file is use to run the module.load system.every time when node execute a file it wrap your js file content as follow</p>\n\n<pre><code>'(function (exports, require, module, __filename, __dirname) {',+\n     //your js file content\n '\\n});'\n</code></pre>\n\n<p>because of this wrapping inside ur js source code you can access exports,require,module,etc..\nthis approach is used because there is no other way to get functionalities wrote in on js file to another.</p>\n\n<p>then node execute this wrapped function using c++. at that moment exports object that passed into this function will be filled.</p>\n\n<p>you can see inside this function parameters exports and module.\nactually exports is a public member of module constructor function.</p>\n\n<p><strong>look at following code</strong></p>\n\n<p>copy this code into b.js</p>\n\n<pre><code>console.log(\"module is \"+Object.prototype.toString.call(module));\nconsole.log(\"object.keys \"+Object.keys(module));\nconsole.log(module.exports);\nconsole.log(exports === module.exports);\nconsole.log(\"exports is \"+Object.prototype.toString.call(exports));\nconsole.log('----------------------------------------------');\nvar foo = require('a.js');\nconsole.log(\"object.keys of foo: \"+Object.keys(foo));\nconsole.log('name is '+ foo);\nfoo();\n</code></pre>\n\n<p>copy this code to a.js</p>\n\n<pre><code>exports.name = 'hello';\nmodule.exports.name = 'hi';\nmodule.exports.age = 23;\nmodule.exports = function(){console.log('function to module exports')};\n//exports = function(){console.log('function to export');}\n</code></pre>\n\n<p>now run using node</p>\n\n<h2>this is the output</h2>\n\n<pre><code>module is [object Object]\nobject.keys id,exports,parent,filename,loaded,children,paths\n{}\ntrue\n</code></pre>\n\n<h2>    exports is [object Object]</h2>\n\n<p>object.keys of foo: \nname is function (){console.log('function to module exports')}\nfunction to module exports</p>\n\n<p>now remove the commented line in a.js and comment the line above that line\nand remove the last line of b.js and run.</p>\n\n<p>in javascript world you cannot reassign object that passed as parameter but you can change function's public member when object of that function set as a parameter to another function</p>\n\n<h2>do remember</h2>\n\n<p>use module.exports on and only if you wants to get a function when you use require keyword .\nin above example we var foo = require(a.js); you can see we can call foo as a function;</p>\n\n<p>this is how node documentation explain it\n\"The exports object is created by the Module system. Sometimes this is not acceptable, many want their module to be an instance of some class. To do this assign the desired export object to module.exports.\"</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>\"If you want the root of your module's export to be a function (such as a constructor) or if you want to export a complete object in one assignment instead of building it one property at a time, assign it to module.exports instead of exports.\" - <a href=\"http://nodejs.org/api/modules.html\" rel=\"nofollow\">http://nodejs.org/api/modules.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I went through some tests and I think this may shed some light on the subject...</p>\n\n<p><strong><code>app.js</code>:</strong></p>\n\n<pre><code>var ...\n  , routes = require('./routes')\n  ...;\n...\nconsole.log('@routes', routes);\n...\n</code></pre>\n\n<p><strong>versions of <code>/routes/index.js</code>:</strong></p>\n\n<pre><code>exports = function fn(){}; // outputs \"@routes {}\"\n\nexports.fn = function fn(){};  // outputs \"@routes { fn: [Function: fn] }\"\n\nmodule.exports = function fn(){};  // outputs \"@routes function fn(){}\"\n\nmodule.exports.fn = function fn(){};  // outputs \"@routes { fn: [Function: fn] }\"\n</code></pre>\n\n<p>I even added new files:</p>\n\n<p><strong><code>./routes/index.js</code>:</strong></p>\n\n<pre><code>module.exports = require('./not-index.js');\nmodule.exports = require('./user.js');\n</code></pre>\n\n<p><strong><code>./routes/not-index.js</code>:</strong></p>\n\n<pre><code>exports = function fn(){};\n</code></pre>\n\n<p><strong><code>./routes/user.js</code>:</strong></p>\n\n<pre><code>exports = function user(){};\n</code></pre>\n\n<p>We get the output \"@routes {}\"</p>\n\n<hr>\n\n<p><strong><code>./routes/index.js</code>:</strong></p>\n\n<pre><code>module.exports.fn = require('./not-index.js');\nmodule.exports.user = require('./user.js');\n</code></pre>\n\n<p><strong><code>./routes/not-index.js</code>:</strong></p>\n\n<pre><code>exports = function fn(){};\n</code></pre>\n\n<p><strong><code>./routes/user.js</code>:</strong></p>\n\n<pre><code>exports = function user(){};\n</code></pre>\n\n<p>We get the output \"@routes { fn: {}, user: {} }\"</p>\n\n<hr>\n\n<p><strong><code>./routes/index.js</code>:</strong></p>\n\n<pre><code>module.exports.fn = require('./not-index.js');\nmodule.exports.user = require('./user.js');\n</code></pre>\n\n<p><strong><code>./routes/not-index.js</code>:</strong></p>\n\n<pre><code>exports.fn = function fn(){};\n</code></pre>\n\n<p><strong><code>./routes/user.js</code>:</strong></p>\n\n<pre><code>exports.user = function user(){};\n</code></pre>\n\n<p>We get the output \"@routes { user: [Function: user] }\"\nIf we change <code>user.js</code> to <code>{ ThisLoadedLast: [Function: ThisLoadedLast] }</code>, we get the output \"@routes { ThisLoadedLast: [Function: ThisLoadedLast] }\".</p>\n\n<hr>\n\n<p>But if we modify <code>./routes/index.js</code>...</p>\n\n<p><strong><code>./routes/index.js</code>:</strong></p>\n\n<pre><code>module.exports.fn = require('./not-index.js');\nmodule.exports.ThisLoadedLast = require('./user.js');\n</code></pre>\n\n<p><strong><code>./routes/not-index.js</code>:</strong></p>\n\n<pre><code>exports.fn = function fn(){};\n</code></pre>\n\n<p><strong><code>./routes/user.js</code>:</strong></p>\n\n<pre><code>exports.ThisLoadedLast = function ThisLoadedLast(){};\n</code></pre>\n\n<p>... we get \"@routes { fn: { fn: [Function: fn] }, ThisLoadedLast: { ThisLoadedLast: [Function: ThisLoadedLast] } }\"</p>\n\n<p>So I would suggest always use <code>module.exports</code> in your module definitions.</p>\n\n<p>I don't completely understand what's going on internally with Node, but please comment if you can make more sense of this as I'm sure it helps.</p>\n\n<p>-- Happy coding</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Even question is answered and accepted long ago, just want to share my 2 cents:</p>\n\n<p>You can imagine that at very begining of your file there is something like (just for explanation):</p>\n\n<pre><code>var module = new Module(...);\nvar exports = module.exports;\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/JzZkz.png\" alt=\"enter image description here\"></p>\n\n<p>So whatever you do just keep in mind that <code>module.exports</code> and NOT <code>exports</code> will be returned from your module when you requiring that module from somewhere else.</p>\n\n<p>So when you do something like:</p>\n\n<pre><code>exports.a = function() {\n    console.log(\"a\");\n}\nexports.b = function() {\n    console.log(\"b\");\n}\n</code></pre>\n\n<p>You are adding 2 function 'a' and 'b' to the object on which module.exports points too, so typeof returning result will be an <code>object</code> : <code>{ a: [Function], b: [Function] }</code></p>\n\n<p>Of course the same result you will get if you are using <code>module.exports</code> in this example instead of <code>exports</code>.</p>\n\n<p>This is case where you want your module.exports to behave like container of exported values. In the case of when you want to export only constructor function, what you will do? (Remember again that module.exports will be returned when you required something not export).</p>\n\n<pre><code>module.exports = function Something() {\n    console.log('bla bla');\n}\n</code></pre>\n\n<p>Now typeof returning result is <code>'function'</code> and you can required it and immediately invoke like:\n<br> <code>var x = require('./file1.js')();</code> because you overwrite returning result to be an function.</p>\n\n<p>Why in this case you can't use something like:</p>\n\n<pre><code>exports = function Something() {\n    console.log('bla bla');\n}\n</code></pre>\n\n<p>Because with this <code>exports</code> reference doesn't 'point' anymore to the object where <code>module.exports</code> point, so there is not relationship between <code>exports</code> and <code>module.exports</code> anymore. In this case module.exports is still point to empty object <code>{}</code> which will be returned.</p>\n\n<p>Accepted answer from another topic should help also:\n<a href=\"http://stackoverflow.com/questions/13104494/does-javascript-pass-by-reference\">Does JavaScript pass by reference?</a></p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<h2>JavaScript passes by reference</h2>\n\n<p>It's a subtle difference to do with the way objects are passed by reference in JavaScript.</p>\n\n<p><code>exports</code> and <code>module.exports</code> both point to the same object. <code>exports</code> is a variable and <code>module.exports</code> is an attribute of the module object.</p>\n\n<p>Say I write something like this:</p>\n\n<pre><code>exports = {a:1};\nmodule.exports = {b:12};\n</code></pre>\n\n<p><code>exports</code> and <code>module.exports</code> now point to different objects. Modifying exports no longer modifies module.exports.</p>\n\n<p>When the import function inspects <code>module.exports</code> it gets <code>{b:12}</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've found the following contract in a Node.js module:</p>\n\n<pre><code>module.exports = exports = nano = function database_module(cfg) {...}\n</code></pre>\n\n<p>I wonder whats the different between <code>module.exports</code> and <code>exports</code> and why both are used here.</p>\n",
            "last_activity_date": 1424279694,
            "question_id": 7137397,
            "score": 213,
            "tags": [
                "javascript",
                "node.js",
                "commonjs"
            ],
            "title": "module.exports vs exports in Node.js"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I was feeling lucky: <a href=\"http://mikecantelon.com/story/javascript-syntax-checking-vim\" rel=\"nofollow\">Javascript Syntax Checking From Vim</a> :-)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can follow the intructions from <a href=\"http://wiki.whatwg.org/wiki/IDE\">JSLint web-service + VIM integration</a> or do what I did:</p>\n\n<p>Download <a href=\"http://jslint.webvm.net/mylintrun.js\">http://jslint.webvm.net/mylintrun.js</a> and <a href=\"http://www.jslint.com/fulljslint.js\">http://www.jslint.com/fulljslint.js\n</a> and put them in a directory of your choice.</p>\n\n<p>Then add the following line to the beginning of mylintrun.js:</p>\n\n<pre><code>var filename= arguments[0];\n</code></pre>\n\n<p>and change last line of code in mylintrun.js (\"print( ...)\") to:</p>\n\n<pre><code> print ( filename + \":\" + (obj[\"line\"] + 1) + \":\" + (obj[\"character\"] + 1) + \":\" + obj[\"reason\"] );\n</code></pre>\n\n<p>This makes in mylintrun.js output a error list that can be used with the VIM quickfix window (:copen).</p>\n\n<p>Now set the following in VIM:</p>\n\n<pre><code>set makeprg=cat\\ %\\ \\\\\\|\\ /my/path/to/js\\ /my/path/to/mylintrun.js\\ %\nset errorformat=%f:%l:%c:%m\n</code></pre>\n\n<p>where you have to change <em>/my/path/to/js</em> to the path to SpiderMonkey and <em>/my/path/to/mylintrun.js</em> to the path where you put the JS files.</p>\n\n<p>Now, you can use <strong>:make</strong> in VIM and use the <em>quickfix</em> window (:he quickfix-window) to jump from error to error.</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>Much better is to pipe the results through Lynx to deal with JSLint's unfortunate choice of HTML for output format. I have a blog post on how to do it here:</p>\n\n<p><a href=\"http://www.fleegix.org/articles/2008-09-06-jslint-in-vim-through-lynx\" rel=\"nofollow\">http://www.fleegix.org/articles/2008-09-06-jslint-in-vim-through-lynx</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Another option is jslint.vim from <a href=\"http://github.com/hallettj/jslint.vim\">Jesse Hallet</a>. It's available on GitHub and works with or without Vim's QuickFix window. It's a nice plugin!</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>The best-practice way IMO way is:</p>\n\n<ol>\n<li>Install <a href=\"http://www.vim.org/scripts/script.php?script_id=2736\">Syntastic Vim plugin</a> - Best syntax-checker around for plenty of languages, plus it integrates with Vim's <em>location-list</em> (==<em>quickfix</em>) window.\n<ul>\n<li>I recommend <a href=\"https://github.com/scrooloose/syntastic/\">cloning from the GitHub repo</a> and installing using a plugin manager like <a href=\"https://github.com/gmarik/vundle\">Vundle</a> or <a href=\"http://www.vim.org/scripts/script.php?script_id=2332\">Pathogen</a>, since it's more frequently updated.</li>\n</ul></li>\n<li>Choose one of the two options below:</li>\n</ol>\n\n<h2>JSLint</h2>\n\n<ol>\n<li>Install <code>jsl</code> (JSLint executable) using your favorite package manager (Ubuntu's <code>apt-get</code>, Mac's <a href=\"http://mxcl.github.com/homebrew/\">home <code>brew</code></a>, etc.).</li>\n</ol>\n\n<h2>Community-driven <a href=\"http://jshint.com\">jshint.com</a> (better than JSLint)</h2>\n\n<ol>\n<li>Install <em>node.js</em> using your favorite package manager.</li>\n<li>Install <em>Node Package Manager</em>: 'curl <a href=\"https://npmjs.org/install.sh\">https://npmjs.org/install.sh</a> | sh' <strong>EDIT: npm IS PART OF node.js NOW</strong>\n<ul>\n<li>See <a href=\"http://npmjs.org\">http://npmjs.org</a> for more info.</li>\n</ul></li>\n<li>Install <em>jshint</em> globally: 'npm install jshint -g'</li>\n<li>Put your jshint <em>config</em> file in your <em>$HOME</em> dir: '~/.jshintrc'\n<ul>\n<li><a href=\"https://github.com/jshint/jshint/blob/master/examples/.jshintrc\">Here's JSHint-Node's example configuration file</a>, they pulled from mine and added more stuff.</li>\n<li><a href=\"https://github.com/oryband/dotfiles/blob/master/jshintrc\">Here's my original copy, which you can also start from</a>.</li>\n</ul></li>\n<li>Overwrite <em>Syntastic</em>'s <code>syntax_checkers/javascript.vim</code> file with <a href=\"https://github.com/factorylabs/vimfiles/blob/master/home/.vim/syntax_checkers/javascript.vim\">this one</a> - <strong>EDIT: NO LONGER NECESSARY WITH NEWEST SYNTASTIC VERSION.</strong>\n<ul>\n<li>Script <a href=\"https://github.com/factorylabs/vimfiles/blob/master/home/.vim/syntax_checkers/javascript.vim\">copied</a> from <a href=\"https://github.com/factorylabs/vimfiles/\">FactorayLab's really helpful Vim GitHub page</a>, which I recommend every Vim user to check out.</li>\n</ul></li>\n</ol>\n\n<p>Enjoy! :)</p>\n",
                    "is_accepted": false,
                    "score": 153
                },
                {
                    "body": "<p>I've been very happy using node-lint</p>\n\n<pre><code>sudo npm -g install jslint\n</code></pre>\n\n<p>Then whack this somewhere in your <code>.vim</code></p>\n\n<pre><code>set makeprg=jslint\\ %\nset errorformat=%-P%f,\n        \\%E%&gt;\\ #%n\\ %m,%Z%.%#Line\\ %l\\\\,\\ Pos\\ %c,\n        \\%-G%f\\ is\\ OK.,%-Q\n</code></pre>\n\n<p>Now a <code>:make</code> will run jslint. Errors appear in the quickfix window.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here are the Mac OS instructions updated for Nov. 2012. Assumes you have <a href=\"http://mxcl.github.com/homebrew/\" rel=\"nofollow\">Homebrew</a> installed in order to get Node.js, and that you've already installed Syntastic for Vim (I use <a href=\"https://github.com/carlhuda/janus\" rel=\"nofollow\">https://github.com/carlhuda/janus</a> which provides this automatically):</p>\n\n<pre><code>$ brew install node.js\n$ npm install -g jshint\n</code></pre>\n\n<p>Then add '/usr/local/share/npm/bin' to your PATH (probably in ~/.bashrc). For example, add the line:\n<code>\nexport PATH=\"$PATH:/usr/local/share/npm/bin\"\n</code></p>\n\n<p>restart your Terminal and check that </p>\n\n<p><code>\n$ jshint\n</code></p>\n\n<p>is executable from the command line. Syntastic will discover jsHint automatically. Restart MacVim and enjoy!</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I spend my days in vim, currently writing a lot of JavaScript. I've been trying to find a way to integrate JSLint or something similar into vim to improve my coding. Has anyone managed to do something like this?</p>\n\n<p>Edit:</p>\n\n<p>tried this: <a href=\"http://mikecantelon.com/story/javascript-syntax-checking-vim\">Javascript Syntax Checking From Vim</a>, unfortunately the output is very crude.</p>\n",
            "last_activity_date": 1414691871,
            "question_id": 473478,
            "score": 96,
            "tags": [
                "javascript",
                "vim",
                "lint"
            ],
            "title": "VIM + JSLint?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Basically, jQuery is a great tool for you to manipulate and control DOM elements.\nIf you only focus on DOM elements and no Data CRUD, like building a website not web application, jQuery is the one of the top tools. (You can use AngularJS for this purpose as well.)</p>\n\n<p>AngularJS is a <strong>framework</strong>. It has following features</p>\n\n<ol>\n<li>Two way data binding</li>\n<li>MVW pattern (MVC-ish)</li>\n<li>Template</li>\n<li>Custom-directive (reusable components, custom markup)</li>\n<li>REST-friendly</li>\n<li>Deep Linking (set up a link for any dynamic page)</li>\n<li>Form Validation</li>\n<li>Server Communication</li>\n<li>Localization</li>\n<li>Dependency injection</li>\n<li>Full testing environment (both unit, e2e)</li>\n</ol>\n\n<p>check this <a href=\"http://sberan.github.com/angularTalk/\">presentation</a> and this <a href=\"http://www.yearofmoo.com/2012/08/use-angularjs-to-power-your-web-application.html\">badass introduction</a> </p>\n\n<p>Don't forget to read the official <a href=\"http://docs.angularjs.org/guide/\">developer guide</a> </p>\n\n<p>Or learn it from these awesome <a href=\"http://egghead.io/\">video tutorials</a> </p>\n\n<p>If you wanna watch more tutorial video, check out this post, <a href=\"http://www.thesocialmediatoday.com/collection-of-best-60-angularjs-tutorials/\">Collection of best 60+ Angularjs tutorials</a>.</p>\n\n<p>You can use jQuery with AngularJS without any issue. </p>\n\n<p>In fact, AngularJS uses jQuery lite in it. Like I said jQ is a great tool.</p>\n\n<p>From <a href=\"http://docs.angularjs.org/misc/faq\">FAQ</a></p>\n\n<blockquote>\n  <p>Does Angular use the jQuery library?</p>\n  \n  <p>Yes, Angular can use jQuery if it's present in your app when the\n  application is being bootstrapped. If jQuery is not present in your\n  script path, Angular falls back to its own implementation of the\n  subset of jQuery that we call jQLite.</p>\n</blockquote>\n\n<p>However, don't try to use jQuery to modify the DOM in AngularJS controllers, do it in your directives.</p>\n",
                    "is_accepted": true,
                    "score": 243
                },
                {
                    "body": "<p>I want to add something regarding <strong>AngularJS</strong> difference with <strong>jQuery</strong> from a developer's perspective. </p>\n\n<p>In AngularJS you have to have a very <strong>structured</strong> view and approach on what you want to accomplish. It is scarcely following a <strong>linear</strong> fashion to complete a task, but rather, the exchanges between various objects take care of the requests and actions, which, then, is necessary as angular is an <strong>MVC-Based</strong> framework. It also requires an at least general blueprint of the finalized application, since coding depends much on how you want the interactions to be completed.</p>\n\n<p>jQuery is like a <strong>free</strong> poetry, you write lines and keep some relations and momentum appropriate for your task to be accomplished.</p>\n\n<p>Though, in Angular JS, you should follow some rules as well as keeping the momentum and relations proper, maybe it is more like classical Spencerian sonnet (a famous classical poet) whose poem is structural and tied to many rules.</p>\n\n<p>Compared against AngularJS, jQuery is more like a collection of codes and functions (which is, as already mentioned, great for DOM manipulation and fast-effect achievement), while AngularJS is a real framework which gives the developer the ability to build an enterprise web-application with a lot of data-binding and exchange within a superbly organized-routing and management.</p>\n\n<p>Furthermore, AngularJS has no <strong>dependency on jQuery</strong> to complete its task. It has two very superb features which are not found in jQuery in any sense:</p>\n\n<p><strong>1-</strong> Angular JS teaches you how to CODE and accomplish a goal, not just accomplish a goal by any means. Worth to mention that AngularJS fully utilizes the core and heart of Javascripts and paves the way for you to incorporate in your app, the techniques such as DI (dependency-injection). To work with angularJS you should (or must) learn more elevated techniques of coding with Javascript.</p>\n\n<p><strong>2-</strong> Angular JS is fully independent to handle directives and structure your app; you might then simply claim that jQuery can do the same (independence), but, indeed, AngularJS, as several times mentioned within the above lines, has independence in the most excellent possible structurally MVC-Based way. </p>\n\n<p>A last note is that, there is no war of Names, since it is far disturbing to be biased, or subjective. jQuery's magnitude and greatness has been proved, but their usages and limitations( of any framework or software) are the concerns of the discussion and similar debates around.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p><strong>AngularJS :</strong>\n AngularJS is for developing heavy web applications. AngularJS can use jQuery if it\u2019s present in the web-app when the application is being bootstrapped. If it's not present in the script path, then AngularJS falls back to its own implementation of the subset of jQuery.</p>\n\n<p><strong>JQuery :</strong>\n jQuery is a small, fast, and feature-rich JavaScript library. It makes things like HTML document traversal and manipulation, event handling, animation, and Ajax much simpler. jQuery simplifies a lot of the complicated things from JavaScript, like AJAX calls and DOM manipulation.</p>\n\n<p>Read more details here: <a href=\"http://www.rrpowered.com/2014/04/angularjs-vs-jquery/\" rel=\"nofollow\">angularjs-vs-jquery</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jQuery will help you build your dot com, find an element inside of the DOM!\nAJAX traversal manipulation, then handling animation.\nProviding you with versatility, an API with extensibility!\njQuery is something you can\u2019t ignore: write less, do more.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I only know one js library and that is <a href=\"http://jquery.com/\">jQuery</a>.<br>\nBut my other coders in the group are changing <a href=\"http://angularjs.org/\">AngularJS</a> as their default library in new project.</p>\n\n<p>I don't know anything about it. How is it different from jQuery?<br>\nI already have a set of functions done for similar tasks in jQuery. Can I still use jQuery stuff with AngularJS?</p>\n",
            "last_activity_date": 1425004727,
            "question_id": 13151725,
            "score": 179,
            "tags": [
                "javascript",
                "jquery",
                "angularjs"
            ],
            "title": "How is AngularJS different from jQuery"
        },
        {
            "answer_count": 16,
            "answers": [
                {
                    "body": "<p>You should consider using <a href=\"http://getfirebug.com/\">FireBug</a> for JavaScript debugging. It will let you interactively inspect all of your variables, and even step through functions.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Use dir(object). Or you can always download <a href=\"http://getfirebug.com/\">Firebug for Firefox</a> (really helpful).</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can also use Prototype's Object.inspect() method, which \"Returns the debug-oriented string representation of the object\".</p>\n\n<p><a href=\"http://api.prototypejs.org/language/Object/inspect/\" rel=\"nofollow\">http://api.prototypejs.org/language/Object/inspect/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you just want to have a string representation of an object, you could use the <code>JSON.stringify</code> function, using a <a href=\"http://json.org/js.html\">JSON library</a>.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Aside from using a debugger, you can also access all elements of an object using a <code>foreach</code> loop. The following <code>printObject</code> function should <code>alert()</code> your object showing all properties and respective values.</p>\n\n<pre><code>function printObject(o) {\n  var out = '';\n  for (var p in o) {\n    out += p + ': ' + o[p] + '\\n';\n  }\n  alert(out);\n}\n\n// now test it:\nvar myObject = {'something': 1, 'other thing': 2};\nprintObject(myObject);\n</code></pre>\n\n<p>Using a DOM inspection tool is preferable because it allows you to dig under the properties that are objects themselves. Firefox has FireBug but all other major browsers (IE, Chrome, Safari) also have debugging tools built-in that you should check.</p>\n",
                    "is_accepted": false,
                    "score": 62
                },
                {
                    "body": "<p>Internet Explorer 8 has developer tools which is similar to <a href=\"http://getfirebug.com\" rel=\"nofollow\">Firebug</a> for Firefox. Opera has Opera DragonFly, and Google Chrome also has something called Developer Tools (Shift+Ctrl+J).</p>\n\n<p>Here is more a more detailed answer to debug JavaScript in IE6-8:\n<a href=\"http://stackoverflow.com/questions/780059/using-the-ie8-developer-tools-to-debug-earlier-ie-versions/801547#801547\">http://stackoverflow.com/questions/780059/using-the-ie8-developer-tools-to-debug-earlier-ie-versions/801547#801547</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are using Firefox, <code>alert(object.toSource())</code> should suffice for simple debugging purposes.</p>\n",
                    "is_accepted": true,
                    "score": 210
                },
                {
                    "body": "<p>You can give your objects their own toString methods in their prototypes.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use json.js from <a href=\"http://www.json.org/js.html\" rel=\"nofollow\">http://www.json.org/js.html</a> to change json data to string data.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This will give you very nice output with indented JSON object:</p>\n\n<pre><code>alert(JSON.stringify(YOUR_OBJECT_HERE, null, 4));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 281
                },
                {
                    "body": "<p>Javascript for all!</p>\n\n<pre><code>String.prototype.repeat = function(num) {\n    if (num &lt; 0) {\n        return '';\n    } else {\n        return new Array(num + 1).join(this);\n    }\n};\n\nfunction is_defined(x) {\n    return typeof x !== 'undefined';\n}\n\nfunction is_object(x) {\n    return Object.prototype.toString.call(x) === \"[object Object]\";\n}\n\nfunction is_array(x) {\n    return Object.prototype.toString.call(x) === \"[object Array]\";\n}\n\n/**\n * Main.\n */\nfunction xlog(v, label) {\n    var tab = 0;\n\n    var rt = function() {\n        return '    '.repeat(tab);\n    };\n\n    // Log Fn\n    var lg = function(x) {\n        // Limit\n        if (tab &gt; 10) return '[...]';\n        var r = '';\n        if (!is_defined(x)) {\n            r = '[VAR: UNDEFINED]';\n        } else if (x === '') {\n            r = '[VAR: EMPTY STRING]';\n        } else if (is_array(x)) {\n            r = '[\\n';\n            tab++;\n            for (var k in x) {\n                r += rt() + k + ' : ' + lg(x[k]) + ',\\n';\n            }\n            tab--;\n            r += rt() + ']';\n        } else if (is_object(x)) {\n            r = '{\\n';\n            tab++;\n            for (var k in x) {\n                r += rt() + k + ' : ' + lg(x[k]) + ',\\n';\n            }\n            tab--;\n            r += rt() + '}';\n        } else {\n            r = x;\n        }\n        return r;\n    };\n\n    // Space\n    document.write('\\n\\n');\n\n    // Log\n    document.write('&lt; ' + (is_defined(label) ? (label + ' ') : '') + Object.prototype.toString.call(v) + ' &gt;\\n' + lg(v));\n};\n\n\n\n// Demo //\n\nvar o = {\n    'aaa' : 123,\n    'bbb' : 'zzzz',\n    'o' : {\n        'obj1' : 'val1',\n        'obj2' : 'val2',\n        'obj3' : [1, 3, 5, 6],\n        'obj4' : {\n            'a' : 'aaaa',\n            'b' : null\n        }\n    },\n    'a' : [ 'asd', 123, false, true ],\n    'func' : function() {\n        alert('test');\n    },\n    'fff' : false,\n    't' : true,\n    'nnn' : null\n};\n\nxlog(o, 'Object'); // With label\nxlog(o); // Without label\n\nxlog(['asd', 'bbb', 123, true], 'ARRAY Title!');\n\nvar no_definido;\nxlog(no_definido, 'Undefined!');\n\nxlog(true);\n\nxlog('', 'Empty String');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Simple function to alert contents of an object or an array .<br>\nCall this function with an array or string or an object it alerts the contents.</p>\n\n<p><b>Function</b></p>\n\n<pre><code>function print_r(printthis, returnoutput) {\n    var output = '';\n\n    if($.isArray(printthis) || typeof(printthis) == 'object') {\n        for(var i in printthis) {\n            output += i + ' : ' + print_r(printthis[i], true) + '\\n';\n        }\n    }else {\n        output += printthis;\n    }\n    if(returnoutput &amp;&amp; returnoutput == true) {\n        return output;\n    }else {\n        alert(output);\n    }\n}\n</code></pre>\n\n<p><b>Usage</b></p>\n\n<pre><code>var data = [1, 2, 3, 4];\nprint_r(data);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could Node's <a href=\"http://nodejs.org/api/util.html#util_util_inspect_object_options\" rel=\"nofollow\">util.inspect(object)</a> to print out object's structure. </p>\n\n<p>It is especially helpful when your object has circular dependencies e.g.</p>\n\n<pre><code>$ node\n\nvar obj = {\n   \"name\" : \"John\",\n   \"surname\" : \"Doe\"\n}\nobj.self_ref = obj;\n\nutil = require(\"util\");\n\nvar obj_str = util.inspect(obj);\nconsole.log(obj_str);\n// prints { name: 'John', surname: 'Doe', self_ref: [Circular] }\n</code></pre>\n\n<p>It that case JSON.stringify throws exception: <code>TypeError: Converting circular structure to JSON</code></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Print content of object you can use</p>\n\n<pre><code>console.log(obj_str);\n</code></pre>\n\n<p>you can see the result in console like below.</p>\n\n<pre><code>Object {description: \"test\"} \n</code></pre>\n\n<p>For open console press F12 in chrome browser, you will found console tab in debug mode.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I faced similar problem, The reason for it was i make use of ajax to fetch data.\nIn this case i had made two asynchronous ajax call. In one i just return string msg and show in alert. In second ajax call i fetch arraylist in json format and decode it in js.\nSo my second request use to process first and i was getting alert of object.</p>\n\n<p>So just check.\n1. alert should contain string.\n2. If u get arrayList or any other Object decode it.</p>\n\n<p>All the best!</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>This will give you very nice output with indented Javascipt object:   </p>\n\n<pre><code>console.log(util.inspect(myObject, false, null));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Typically if we just use <code>alert(object);</code> it will show as <code>[object Object]</code>.  How to print all the content parameters of an object in JavaScript?</p>\n",
            "last_activity_date": 1418967278,
            "question_id": 1625208,
            "score": 193,
            "tags": [
                "javascript",
                "object"
            ],
            "title": "Print content of JavaScript object?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Stick with jQuery mobile. It faster then jQtouch. It also has better documentation then senchas. Senchas initial load time is slow. Overall, jQuery mobile wins my bet. </p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>jQuery Mobile is better and have nice support!!</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p><a href=\"http://jquerymobile.com/\" rel=\"nofollow\">jQuery mobile</a> is a good option to opt, it has <a href=\"http://jquerymobile.com/test/\" rel=\"nofollow\">Good documentation and support</a> <s>also <a href=\"http://interfacethis.com/2011/adventures-in-html5-part-one/\" rel=\"nofollow\">here</a> is a good article, you'll get some idea which one to choose...\n</s></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I would start with <a href=\"http://html5boilerplate.com/\" rel=\"nofollow\">HTML 5 boiler plate</a>. It's a little bit heavy but you can add or remove as much as you want from it. Definitely the most complete HTML5 template I've found.\nThen I would go with <a href=\"http://jquerymobile.com/\" rel=\"nofollow\">jQuery Mobile</a>. It's not out of alpha yet, so it's expectedly a little bit buggy but there's a great community behind it and it has a good structure for creating plugins.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This framework I recommended here is quite new, but you may want to try it in the future: <a href=\"http://www.infoq.com/news/2011/02/Mobl\" rel=\"nofollow\">Mobl - HTML5 for mobile appliccation</a>.</p>\n\n<p>Actually, it's a DSL (Domain specific language) to build HTML 5 application on mobile. It's constructed by <a href=\"http://zef.me/about\" rel=\"nofollow\">Zef Hemel</a> as part of his Ph.D thesis, and allow a very easy way to build an HTML5 application quickly</p>\n\n<p>About your request:</p>\n\n<ol>\n<li><p><strong>Quick start</strong>: yes, it's very simple to start developing with Mobl. Just add an Eclipse add-on and change some configuration.</p></li>\n<li><p><strong>Documentation:</strong> the tutorial is good enough, but it lacks the navigation, I mean, a comprehensive structure. I hope they will add it soon.</p></li>\n<li><p><strong>Similar web-development:</strong> I don't think it is. As a DSL, Mobl has different structure (similar syntax to javascript, though) comparing to web scripting language (HTML, Javascript,...). But it doesn't take much time to understand them.</p></li>\n<li><p><strong>Support</strong>: This thing is not good. At this early stage, Mobl community is very restricted.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>It depends on what your target audience is and how interactive the site you are building is.</p>\n\n<p><strong>jQTouch:</strong><br>\n<em>heavy on the CSS, light on the JavaScript, MIT license</em><br>\nFor a framework that provides a quick start, but not a lot of documentation unfortunately, use jQTouch. It requires very little to get started and coding is fairly straight forward. It uses CSS classes for detecting the appropriate animations and interactions.</p>\n\n<p><strong>Sencha Touch:</strong><br>\n<em>almost <strong>completely</strong> JavaScript, GPL not for use on commercial sites without a license</em><br>\nIf you are building a complex enterprise application with a lot of visual interactions, I would strongly recommend Sencha Touch, it is heavily documented, with a strong professional team providing support. </p>\n\n<p><strong>M-Project:</strong><br>\n<em>MIT license, heavy on the JavaScript, appears to be in Alpha, may be buggy</em><br>\nAlthough I have never worked with M-Project myself (thanks for pointing it out) it does appear to be a very robust, and the coding style appears to be very similar to Sencha Touch, which is based on ExtJS, so if your team already has experience with ExtJS, it might be wise to consider one of these frameworks.</p>\n\n<p><strong>Nimblekit:</strong><br>\nThis appears to be for iOS only, not a good thing if you ever decide to expand your application to Android or some other platform.</p>\n\n<p><strong>Wink Toolkit:</strong><br>\n<em>appears to be MIT, or some variation there of</em>\nIn my opinion, wink seems to have plenty going for it, but the documentation feels cold</p>\n\n<p><strong>jQuery Mobile:</strong><br>\n<em>Dual license MIT or GPL 2, just the right mixture of JavaScript and CSS</em><br>\nI will let someone with more experience talk about the merits, but jQuery mobile (though it is in alpha as well) is backed by a strong team and a community of supporters by extension of the core jQuery library. Probably the best choice for anything except the most enterprise centric applications.</p>\n\n<p><strong>Titanium:</strong><br>\n<em>Titanium is not an HTML5 mobile framework, it is a javascript based interface to native code modules included in the framework. It is a fairly straight forward framework, but I would consider the documentation sparse.</em></p>\n\n<p><strong>Bottom Line:</strong><br>\n1. jQuery mobile - as long as your app is not enterprise centric<br>\n2. Sencha Touch - if your application is enterprise centric or heavy on user interactions<br>\n3. jQTouch - if what you are looking for is a simple framework to get started with quickly, but you don't need a lot of gusto.<br>\n4. Titanium - if you are more concerned with having <em>actual</em> native controls in your application  </p>\n\n<p><strong>Demonstration Apps</strong></p>\n\n<p>There is an open source project, <a href=\"http://propertycross.com/\">PropertyCross</a>, which demonstrates the same application implemented with a range of cross platform frameworks. It is very useful for comparing the code, development experience and end-user experience of the various frameworks.</p>\n",
                    "is_accepted": true,
                    "score": 122
                },
                {
                    "body": "<p>There is also <a href=\"http://zeptojs.com\" rel=\"nofollow\">http://zeptojs.com</a>, which is aiming at small footprint, &lt; 5Kb with most jquery core features.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You may also want to take a look at PhoneGap (opensource). It also has a free build service in the cloud that will pump out native apps for most of the popular phones from a single source code base. I haven't tried it myself but it sounded intriguing.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I would also consider <strong>Skeleton</strong>.  </p>\n\n<p>Docs / demo site here: <a href=\"http://www.getskeleton.com/\" rel=\"nofollow\">http://www.getskeleton.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You might also want to look into Google Web Toolkit, which enables you to write mobile HTML5 apps in Java. GWT has a templating system where you can include HTML and CSS, so that the major difference will be that you're writing in Java instead of Javascript. Sencha Touch which has been mentioned before, also comes in a GWT version called Gwt4Touch. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For your future projects you may also look at <a href=\"http://www.dhtmlx.com/touch/\" rel=\"nofollow\">DHTMLX Touch</a>, a free, open source framework for building mobile web apps. It's quite easy to get start with and has live support forum.\nSome demos: <a href=\"http://www.dhtmlx.com/touch/samples/\" rel=\"nofollow\">http://www.dhtmlx.com/touch/samples/</a></p>\n\n<p>(I work for DHTMLX)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>For the new project, I have been searching for a framework with support of HTML5 and runs on mobile, that is IPhone, IPads. I found out these:</p>\n\n<ul>\n<li><a href=\"http://www.sencha.com/products/touch/\">Sencha Touch</a></li>\n<li><a href=\"http://the-m-project.net/index.html\">M-Project</a></li>\n<li><a href=\"http://jquerymobile.com/\">jQuery Mobile</a></li>\n<li><a href=\"http://jqtouch.com/\">jQTouch</a></li>\n<li><a href=\"http://www.appcelerator.com/products/titanium-mobile-application-development/\">Titanium</a></li>\n<li><a href=\"http://www.nimblekit.com/index.php\">NimbleKit</a></li>\n<li><a href=\"http://www.winktoolkit.org/\">Wink Toolkit</a></li>\n</ul>\n\n<p>The main thing for me is HTML5. Although I went over the features they offer, I just wanted to know your experience if any with them.</p>\n\n<p>Which one should I go for when looking for:</p>\n\n<ul>\n<li>Quick Start</li>\n<li>Good documentation</li>\n<li>Similar Web-way development</li>\n<li>Good support for the mobile platform</li>\n</ul>\n",
            "last_activity_date": 1361785785,
            "question_id": 5063117,
            "score": 124,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "html5",
                "mobile"
            ],
            "title": "Choosing Mobile Web HTML5 Framework"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Use the first example.  If the key doesn't exist it will be added.</p>\n\n<pre><code>var a = new Array();\na['name'] = 'oscar';\nalert(a['name']);\n</code></pre>\n\n<p>Will pop up a message box containing 'oscar'.</p>\n\n<p>Try:</p>\n\n<pre><code>var text = 'name = oscar'\nvar dict = new Array()\nvar keyValuePair = text.replace(/ /g,'').split('=');\ndict[ keyValuePair[0] ] = keyValuePair[1];\nalert( dict[keyValuePair[0]] );\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 76
                },
                {
                    "body": "<p>In response to MK_Dev, one is able to iterate, but not <em>consecutively.</em> (For that obviously an array is needed)</p>\n\n<p>Quick google search brings up <a href=\"http://www.mojavelinux.com/articles/javascript_hashes.html\">hash tables in javascript</a></p>\n\n<p>Example code for looping over values in a hash (from aforementioned link):</p>\n\n<pre><code>var myArray = new Array();\nmyArray['one'] = 1;\nmyArray['two'] = 2;\nmyArray['three'] = 3;\n\n// show the values stored\nfor (var i in myArray) {\n    alert('key is: ' + i + ', value is: ' + myArray[i]);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Javascript <em>does not have associative arrays</em>, it has <em>objects</em>.</p>\n\n<p>The following lines of code all do exactly the same thing - set the 'name' field on an object to 'orion'.</p>\n\n<pre><code>var f = new Object(); f.name = 'orion';\nvar f = new Object(); f['name'] = 'orion';\nvar f = new Array(); f.name = 'orion';\nvar f = new Array(); f['name'] = 'orion';\nvar f = new XMLHttpRequest(); f['name'] = 'orion';\n</code></pre>\n\n<p>It looks like you have an associative array because an <code>Array</code> is also an <code>Object</code> - however you're not actually adding things into the array at all, you're setting fields on the object.</p>\n\n<p>Now that that is cleared up, here is a working solution to your example</p>\n\n<pre><code>var text = '{ name = oscar }'\nvar dict = new Object();\n\n// Remove {} and spaces\nvar cleaned = text.replace(/[{} ]/g, '');\n\n// split into key and value\nvar kvp = cleaned.split('=');\n\n// put in the object\ndict[ kvp[0] ] = kvp[1];\nalert( dict.name ); // prints oscar.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Somehow all examples, while work well, are overcomplicated:</p>\n\n<ul>\n<li>They use <code>new Array()</code>, which is an overkill (and an overhead) for a simple associative array (AKA dictionary).</li>\n<li>The better ones use <code>new Object()</code>. Works fine, but why all this extra typing?</li>\n</ul>\n\n<p>This question is tagged \"beginner\", so let's make it simple.</p>\n\n<p>The uber-simple way to use a dictionary in JavaScript or \"Why JavaScript doesn't have a special dictionary object?\":</p>\n\n<pre><code>// create an empty associative array (in JavaScript it is called ... Object)\nvar dict = {};   // huh? {} is a shortcut for \"new Object()\"\n\n// add a key named fred with value 42\ndict.fred = 42;  // we can do that because \"fred\" is a constant\n                 // and conforms to id rules\n\n// add a key named 2bob2 with value \"twins!\"\ndict[\"2bob2\"] = \"twins!\";  // we use the subscript notation because\n                           // the key is arbitrary (not id)\n\n// add an arbitrary dynamic key with a dynamic value\nvar key = ..., // insanely complex calculations for the key\n    val = ...; // insanely complex calculations for the value\ndict[key] = val;\n\n// read value of \"fred\"\nval = dict.fred;\n\n// read value of 2bob2\nval = dict[\"2bob2\"];\n\n// read value of our cool secret key\nval = dict[key];\n</code></pre>\n\n<p>Now let's change values:</p>\n\n<pre><code>// change the value of fred\ndict.fred = \"astra\";\n// the assignment creates and/or replaces key-value pairs\n\n// change value of 2bob2\ndict[\"2bob2\"] = [1, 2, 3];  // any legal value can be used\n\n// change value of our secret key\ndict[key] = undefined;\n// contrary to popular beliefs assigning \"undefined\" does not remove the key\n\n// go over all keys and values in our dictionary\nfor(key in dict){\n  // for-in loop goes over all properties including inherited properties\n  // let's use only our own properties\n  if(dict.hasOwnProperty(key)){\n    console.log(\"key = \" + key + \", value = \" + dict[key]);\n  }\n}\n</code></pre>\n\n<p>Deleting values is easy too:</p>\n\n<pre><code>// let's delete fred\ndelete dict.fred;\n// fred is removed, the rest is still intact\n\n// let's delete 2bob2\ndelete dict[\"2bob2\"];\n\n// let's delete our secret key\ndelete dict[key];\n\n// now dict is empty\n\n// let's replace it, recreating all original data\ndict = {\n  fred:    42,\n  \"2bob2\": \"twins!\"\n  // we can't add the original secret key because it was dynamic,\n  // we can only add static keys\n  // ...\n  // oh well\n  temp1:   val\n};\n// let's rename temp1 into our secret key:\nif(key != \"temp1\"){\n  dict[key] = dict.temp1; // copy the value\n  delete dict.temp1;      // kill the old key\n}else{\n  // do nothing, we are good ;-)\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 377
                },
                {
                    "body": "<p>Original Code (I added the line numbers so can refer to them):</p>\n\n<pre><code>1  var text = ' name = oscar '\n2  var dict = new Array();\n3  var keyValuePair = text.split(' = ');\n4  dict[ keyValuePair[0] ] = 'whatever';\n5  alert( dict ); // prints nothing.\n</code></pre>\n\n<p>Almost there...</p>\n\n<ul>\n<li>line 1: you should do a <code>trim</code> on text so it is <code>name = oscar</code>.</li>\n<li>line 3: okay as long as you ALWAYS have spaces around your equal.\n      might be better to not <code>trim</code> in line 1, use <code>=</code> and trim each keyValuePair</li>\n<li><p>add a line after 3 and before 4:</p>\n\n<pre><code>key = keyValuePair[0];`\n</code></pre></li>\n<li><p>line 4: Now becomes:</p>\n\n<pre><code>dict[key] = keyValuePair[1];\n</code></pre></li>\n<li><p>line 5: Change to:</p>\n\n<pre><code>alert( dict['name'] );  // it will print out 'oscar'\n</code></pre></li>\n</ul>\n\n<p>What I'm trying to say is that the <code>dict[keyValuePair[0]]</code> does not work, you need to set a string to <code>keyValuePair[0]</code> and use that as the associative key.  That is the only way I got mine to work.  After you have set it up you can either refer to it with numeric index or key in quotes.</p>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var myArray = new Array();\nmyArray['one'] = 1;\nmyArray['two'] = 2;\nmyArray['three'] = 3;\n// show the values stored\nfor (var i in myArray) {\n    alert('key is: ' + i + ', value is: ' + myArray[i]);\n}\n</code></pre>\n\n<p>this is ok but iterates through every property of the array object.\nif you want to only iterate through the properties myArray.one, myArray.two... you try like this</p>\n\n<pre><code>myArray['one'] = 1;\nmyArray['two'] = 2;\nmyArray['three'] = 3;\nmyArray.push(\"one\");\nmyArray.push(\"two\");\nmyArray.push(\"three\");\nfor(i=0;i&lt;maArray.length;i++{\n    console.log(myArray[myArray[i]])\n}\n</code></pre>\n\n<p>now you can access both by myArray[\"one\"] and iterate only through these properties.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I dynamically create keys in javascript associative arrays? </p>\n\n<p>All the documentation I've found so far is to update keys that are already created:</p>\n\n<pre><code> arr['key'] = val;\n</code></pre>\n\n<p>I have a string like this <code>\" name =  oscar \"</code></p>\n\n<p>And I want to end up with something like this:</p>\n\n<pre><code>{ name: 'whatever' }\n</code></pre>\n\n<p>That is I split the string and get the first element, and I want to put that in a dictionary.</p>\n\n<h3>Code</h3>\n\n<pre><code>var text = ' name = oscar '\nvar dict = new Array();\nvar keyValuePair = text.split(' = ');\ndict[ keyValuePair[0] ] = 'whatever';\nalert( dict ); // prints nothing.\n</code></pre>\n",
            "last_activity_date": 1401968316,
            "question_id": 351495,
            "score": 123,
            "tags": [
                "javascript",
                "associative-array"
            ],
            "title": "Dynamically creating keys in JavaScript associative array"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p><strong>EDIT</strong>  Do not use this answer as it does not work in Internet Explorer.  Use <a href=\"http://stackoverflow.com/questions/5612787/converting-javascript-object-to-string/5612849#5612849\">Gary Chambers</a> solution.</p>\n\n<p><a href=\"http://www.w3schools.com/jsref/jsref_toSource_date.asp\">toSource()</a> is the function you are looking for which will write it out as JSON.</p>\n\n<pre><code>var object = {};\nobject.first = \"test\";\nobject.second = \"test2\";\nalert(object.toSource());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>I would recommend using <code>JSON.stringify</code>, which serializes an object. Most modern browsers support this method natively, but for those that don't, you can include a <a href=\"https://github.com/douglascrockford/JSON-js\">JS version</a>: </p>\n\n<pre><code>var obj = {\n  name: 'myObj'\n};\n\nJSON.stringify(obj);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 407
                },
                {
                    "body": "<p>Sure, to convert an object into a string, you either have to use your own method, such as:</p>\n\n<pre><code>function objToString (obj) {\n    var str = '';\n    for (var p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str += p + '::' + obj[p] + '\\n';\n        }\n    }\n    return str;\n}\n</code></pre>\n\n<p>Actually, the above just shows the general approach; you may wish to use something like <a href=\"http://phpjs.org/functions/var_export:578\">http://phpjs.org/functions/var_export:578</a> or <a href=\"http://phpjs.org/functions/var_dump:604\">http://phpjs.org/functions/var_dump:604</a></p>\n\n<p>or, if you are not using methods (functions as properties of your object), you may be able to use the new standard (but not implemented in older browsers, though you can find a utility to help with it for them too), JSON.stringify(). But again, that won't work if the object uses functions or other properties which aren't serializable to JSON.</p>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>I found these two links </p>\n\n<p><a href=\"http://www.davidpirek.com/blog/object-to-string-how-to-deserialize-json\" rel=\"nofollow\">http://www.davidpirek.com/blog/object-to-string-how-to-deserialize-json</a></p>\n\n<p><a href=\"http://forums.devshed.com/javascript-development-115/tosource-with-arrays-in-ie-386109.html\" rel=\"nofollow\">http://forums.devshed.com/javascript-development-115/tosource-with-arrays-in-ie-386109.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>JSON methods are quite inferior to the Gecko engine .toSource() primitive.</p>\n\n<p>See the <a href=\"http://stackoverflow.com/questions/171407/implementing-mozillas-tosource-method-in-internet-explorer/5628008#5628008\" title=\"comparig JSON.stringify&#40;&#41; and toSource&#40;&#41;\">SO article response</a> for comparison tests.</p>\n\n<p>Also, the <a href=\"http://stackoverflow.com/questions/5612787/converting-javascript-object-to-string/5612878#5612878/\" title=\"referenced code is not complete\">answer above</a> refers to <a href=\"http://forums.devshed.com/javascript-development-115/tosource-with-arrays-in-ie-386109.html/\">http://forums.devshed.com/javascript-development-115/tosource-with-arrays-in-ie-386109.html</a> which, like JSON, (which the other article <a href=\"http://www.davidpirek.com/blog/object-to-string-how-to-deserialize-json\">http://www.davidpirek.com/blog/object-to-string-how-to-deserialize-json</a> uses via <a href=\"http://www.extjs.com/deploy/dev/docs/source/JSON.html#cls-Ext.util.JSON\">\"ExtJs JSON encode source code\"</a>) cannot handle circular references and is incomplete. The code below shows it's (spoof's) limitations (corrected to handle arrays and objects without content).</p>\n\n<p>(<a href=\"http://forums.devshed.com/showpost.php?p=1615182&amp;postcount=3\">direct link to code in //forums.devshed.com/ ... /tosource-with-arrays-in-ie-386109</a>)</p>\n\n<pre><code>javascript:\nObject.prototype.spoof=function(){\n    if (this instanceof String){\n      return '(new String(\"'+this.replace(/\"/g, '\\\\\"')+'\"))';\n    }\n    var str=(this instanceof Array)\n        ? '['\n        : (this instanceof Object)\n            ? '{'\n            : '(';\n    for (var i in this){\n      if (this[i] != Object.prototype.spoof) {\n        if (this instanceof Array == false) {\n          str+=(i.match(/\\W/))\n              ? '\"'+i.replace('\"', '\\\\\"')+'\":'\n              : i+':';\n        }\n        if (typeof this[i] == 'string'){\n          str+='\"'+this[i].replace('\"', '\\\\\"');\n        }\n        else if (this[i] instanceof Date){\n          str+='new Date(\"'+this[i].toGMTString()+'\")';\n        }\n        else if (this[i] instanceof Array || this[i] instanceof Object){\n          str+=this[i].spoof();\n        }\n        else {\n          str+=this[i];\n        }\n        str+=', ';\n      }\n    };\n    str=/* fix */(str.length&gt;2?str.substring(0, str.length-2):str)/* -ed */+(\n        (this instanceof Array)\n        ? ']'\n        : (this instanceof Object)\n            ? '}'\n            : ')'\n    );\n    return str;\n  };\nfor(i in objRA=[\n    [   'Simple Raw Object source code:',\n        '[new Array, new Object, new Boolean, new Number, ' +\n            'new String, new RegExp, new Function, new Date]'   ] ,\n\n    [   'Literal Instances source code:',\n        '[ [], {}, true, 1, \"\", /./, function(){}, new Date() ]'    ] ,\n\n    [   'some predefined entities:',\n        '[JSON, Math, null, Infinity, NaN, ' +\n            'void(0), Function, Array, Object, undefined]'      ]\n    ])\nalert([\n    '\\n\\n\\ntesting:',objRA[i][0],objRA[i][1],\n    '\\n.toSource()',(obj=eval(objRA[i][1])).toSource(),\n    '\\ntoSource() spoof:',obj.spoof()\n].join('\\n'));\n</code></pre>\n\n<p>which displays:</p>\n\n<pre><code>testing:\nSimple Raw Object source code:\n[new Array, new Object, new Boolean, new Number, new String,\n          new RegExp, new Function, new Date]\n\n.toSource()\n[[], {}, (new Boolean(false)), (new Number(0)), (new String(\"\")),\n          /(?:)/, (function anonymous() {}), (new Date(1303248037722))]\n\ntoSource() spoof:\n[[], {}, {}, {}, (new String(\"\")),\n          {}, {}, new Date(\"Tue, 19 Apr 2011 21:20:37 GMT\")]\n</code></pre>\n\n<p>and</p>\n\n<pre><code>testing:\nLiteral Instances source code:\n[ [], {}, true, 1, \"\", /./, function(){}, new Date() ]\n\n.toSource()\n[[], {}, true, 1, \"\", /./, (function () {}), (new Date(1303248055778))]\n\ntoSource() spoof:\n[[], {}, true, 1, \", {}, {}, new Date(\"Tue, 19 Apr 2011 21:20:55 GMT\")]\n</code></pre>\n\n<p>and</p>\n\n<pre><code>testing:\nsome predefined entities:\n[JSON, Math, null, Infinity, NaN, void(0), Function, Array, Object, undefined]\n\n.toSource()\n[JSON, Math, null, Infinity, NaN, (void 0),\n       function Function() {[native code]}, function Array() {[native code]},\n              function Object() {[native code]}, (void 0)]\n\ntoSource() spoof:\n[{}, {}, null, Infinity, NaN, undefined, {}, {}, {}, undefined]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you are using the Dojo javascript framework then there is already a build in function to do this: dojo.toJson() which would be used like so. </p>\n\n<pre><code>var obj = {\n  name: 'myObj'\n};\ndojo.toJson(obj);\n</code></pre>\n\n<p>which will return a string. If you want to convert the object to json data then add a second parameter of true.</p>\n\n<pre><code>dojo.toJson(obj, true);\n</code></pre>\n\n<p><a href=\"http://dojotoolkit.org/reference-guide/dojo/toJson.html#dojo-tojson\" rel=\"nofollow\">http://dojotoolkit.org/reference-guide/dojo/toJson.html#dojo-tojson</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Take a look at the <a href=\"http://code.google.com/p/jquery-json/\" rel=\"nofollow\">jQuery-JSON</a> plugin</strong></p>\n\n<p>At its core, it uses JSON.stringify but falls back to its own parser if the browser doesn't implement it.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In cases where you know the object is just a Boolean, Date, String, number etc... The javascript String() function works just fine. I recently found this useful in dealing with values coming from jquery's $.each function.</p>\n\n<p>For example the following would convert all items in \"value\" to a string:</p>\n\n<pre><code>$.each(this, function (name, value) {\n  alert(String(value));\n});\n</code></pre>\n\n<p>More details here:</p>\n\n<p><a href=\"http://www.w3schools.com/jsref/jsref_string.asp\">http://www.w3schools.com/jsref/jsref_string.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>As firefox does not stringify some object as screen object ; if you want to have the same result such as : <code>JSON.stringify(obj)</code> : </p>\n\n<pre><code>function objToString (obj) {\n    var tabjson=[];\n    for (var p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            tabjson.push('\"'+p +'\"'+ ':' + obj[p]);\n        }\n    }  tabjson.push()\n    return '{'+tabjson.join(',')+'}';\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>None of the solutions here worked for me. JSON.stringify seems to be what a lot of people say, but it cuts out functions and seems pretty broken for some objects and arrays I tried when testing it.</p>\n\n<p>I made my own solution which works in Chrome at least. Posting it here so anyone that looks this up on Google can find it.</p>\n\n<pre><code>//Make an object a string that evaluates to an equivalent object\n//  Note that eval() seems tricky and sometimes you have to do\n//  something like eval(\"a = \" + yourString), then use the value\n//  of a.\n//\n//  Also this leaves extra commas after everything, but JavaScript\n//  ignores them.\nfunction convertToText(obj) {\n    //create an array that will later be joined into a string.\n    var string = [];\n\n    //is object\n    //    Both arrays and objects seem to return \"object\"\n    //    when typeof(obj) is applied to them. So instead\n    //    I am checking to see if they have the property\n    //    join, which normal objects don't have but\n    //    arrays do.\n    if (typeof(obj) == \"object\" &amp;&amp; (obj.join == undefined)) {\n        string.push(\"{\");\n        for (prop in obj) {\n            string.push(prop, \": \", convertToText(obj[prop]), \",\");\n        };\n        string.push(\"}\");\n\n    //is array\n    } else if (typeof(obj) == \"object\" &amp;&amp; !(obj.join == undefined)) {\n        string.push(\"[\")\n        for(prop in obj) {\n            string.push(convertToText(obj[prop]), \",\");\n        }\n        string.push(\"]\")\n\n    //is function\n    } else if (typeof(obj) == \"function\") {\n        string.push(obj.toString())\n\n    //all other values can be done with JSON.stringify\n    } else {\n        string.push(JSON.stringify(obj))\n    }\n\n    return string.join(\"\")\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you're just outputting to the console, you can use <code>console.log('string:', obj)</code>. Notice the <strong>comma</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>/*\n    This function is as JSON.Stringify (but if you has not in your js-engine you can use this)\n    Params:\n        obj - your object\n        inc_ident - can be \" \" or \"\\t\".\n        show_types - show types of object or not\n        ident - need for recoursion but you can not set this parameter.\n*/\nfunction getAsText(obj, inc_ident, show_types, ident) {\n    var res = \"\";\n    if (!ident)\n        ident = \"\";\n    if (typeof(obj) == \"string\") {\n        res += \"\\\"\" + obj + \"\\\" \";\n        res += (show_types == true) ? \"/* typeobj: \" + typeof(obj) + \"*/\" : \"\";\n    } else if (typeof(obj) == \"number\" || typeof(obj) == \"boolean\") {\n        res += obj;\n        res += (show_types == true) ? \"/* typeobj: \" + typeof(obj) + \"*/\" : \"\";\n    } else if (obj instanceof Array) {\n        res += \"[ \";\n        res += show_types ? \"/* typeobj: \" + typeof(obj) + \"*/\" : \"\";\n        res += \"\\r\\n\";\n        var new_ident = ident + inc_ident;\n        var arr = [];\n        for(var key in obj) {\n            arr.push(new_ident + getAsText(obj[key], inc_ident, show_types, new_ident));\n        } \n        res += arr.join(\",\\r\\n\") + \"\\r\\n\";\n        res += ident + \"]\";\n    } else {\n        var new_ident = ident + inc_ident;      \n        res += \"{ \";\n        res += (show_types == true) ? \"/* typeobj: \" + typeof(obj) + \"*/\" : \"\";\n        res += \"\\r\\n\";\n        var arr = [];\n        for(var key in obj) {\n            arr.push(new_ident + '\"' + key + \"\\\" : \" + getAsText(obj[key], inc_ident, show_types, new_ident));\n        }\n        res += arr.join(\",\\r\\n\") + \"\\r\\n\";\n        res += ident + \"}\\r\\n\";\n    } \n    return res;\n};\n</code></pre>\n\n<p>example to use:</p>\n\n<pre><code>var obj = {\n    str : \"hello\",\n    arr : [\"1\", \"2\", \"3\", 4],\nb : true,\n    vobj : {\n        str : \"hello2\"\n    }\n}\n\nvar ForReading = 1, ForWriting = 2;\nvar fso = new ActiveXObject(\"Scripting.FileSystemObject\")\nf1 = fso.OpenTextFile(\"your_object1.txt\", ForWriting, true)\nf1.Write(getAsText(obj, \"\\t\"));\nf1.Close();\n\nf2 = fso.OpenTextFile(\"your_object2.txt\", ForWriting, true)\nf2.Write(getAsText(obj, \"\\t\", true));\nf2.Close();\n</code></pre>\n\n<p>your_object1.txt:</p>\n\n<pre><code>{ \n    \"str\" : \"hello\" ,\n    \"arr\" : [ \n        \"1\" ,\n        \"2\" ,\n        \"3\" ,\n        4\n    ],\n    \"b\" : true,\n    \"vobj\" : { \n        \"str\" : \"hello2\" \n    }\n\n}\n</code></pre>\n\n<p>your_object2.txt:</p>\n\n<pre><code>{ /* typeobj: object*/\n    \"str\" : \"hello\" /* typeobj: string*/,\n    \"arr\" : [ /* typeobj: object*/\n        \"1\" /* typeobj: string*/,\n        \"2\" /* typeobj: string*/,\n        \"3\" /* typeobj: string*/,\n        4/* typeobj: number*/\n    ],\n    \"b\" : true/* typeobj: boolean*/,\n    \"vobj\" : { /* typeobj: object*/\n        \"str\" : \"hello2\" /* typeobj: string*/\n    }\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I was looking for this, and wrote a deep recursive one with indentation :</p>\n\n<pre><code>function objToString(obj, ndeep) {\n  if(obj == null){ return String(obj); }\n  switch(typeof obj){\n    case \"string\": return '\"'+obj+'\"';\n    case \"function\": return obj.name || obj.toString();\n    case \"object\":\n      var indent = Array(ndeep||1).join('\\t'), isArray = Array.isArray(obj);\n      return '{['[+isArray] + Object.keys(obj).map(function(key){\n           return '\\n\\t' + indent + key + ': ' + objToString(obj[key], (ndeep||1)+1);\n         }).join(',') + '\\n' + indent + '}]'[+isArray];\n    default: return obj.toString();\n  }\n}\n</code></pre>\n\n<p>Usage : <code>objToString({ a: 1, b: { c: \"test\" } })</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you just want to see the object for debugging, you can use</p>\n\n<pre><code>var o = {a:1, b:2} \nconsole.dir(o)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Keeping it simple with <code>console</code>, you can just use a comma instead of a <code>+</code>. The <code>+</code> will try to convert the object into a string, whereas the comma will display it separately in the console.</p>\n\n<p>Example:</p>\n\n<pre><code>var o = {a:1, b:2};\nconsole.log(o);\nconsole.log('Item: ' + o);\nconsole.log('Item: ', o);   // :)\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>Object { a=1, b=2}           // useful\nItem: [object Object]        // not useful\nItem:  Object {a: 1, b: 2}   // Best of both worlds! :)\n</code></pre>\n\n<p>Reference: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Console.log\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/Console.log</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How can I convert a JavaScript object into a string?</p>\n\n<p>Example:</p>\n\n<pre><code>var o = {a:1, b:2}\nconsole.log(o)\nconsole.log('Item: ' + o)\n</code></pre>\n\n<p>Output:</p>\n\n<blockquote>\n  <p>Object { a=1, b=2} // very nice readable output :)<br>\n  Item: [object Object] // no idea what's inside :(</p>\n</blockquote>\n",
            "last_activity_date": 1424051860,
            "question_id": 5612787,
            "score": 276,
            "tags": [
                "javascript",
                "string",
                "object",
                "tostring"
            ],
            "title": "Converting an object to a string"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>$resource was meant to retrieve data from an endpoint, manipulate it and send it back. You've got <em>some</em> of that in there, but you're not really leveraging it for what it was made to do.</p>\n\n<p>It's fine to have custom methods on your resource, but you don't want to miss out on the cool features it comes with OOTB.</p>\n\n<p><strong>EDIT</strong>: I don't think I explained this well enough originally, but $resource does some funky stuff with returns. Todo.get() and Todo.query() both <em>return</em> the resource object, <em>and</em> pass it into the <em>callback</em> for when the get completes. It does some fancy stuff with promises behind the scenes that mean you can call $save() before the get() callback actually fires, and it will wait. It's probably best just to deal with your resource inside of a promise then() or the callback method.</p>\n\n<h3>Standard use</h3>\n\n<pre><code>var Todo = $resource('/api/1/todo/:id');\n\n//create a todo\nvar todo1 = new Todo();\ntodo1.foo = 'bar';\ntodo1.something = 123;\ntodo1.$save();\n\n//get and update a todo\nvar todo2 = Todo.get({id: 123});\ntodo2.foo += '!';\ntodo2.$save();\n\n//which is basically the same as...\nTodo.get({id: 123}, function(todo) {\n   todo.foo += '!';\n   todo.$save();\n});\n\n//get a list of todos\nTodo.query(function(todos) {\n  //do something with todos\n  angular.forEach(todos, function(todo) {\n     todo.foo += ' something';\n     todo.$save();\n  });\n});\n\n//delete a todo\nTodo.$delete({id: 123});\n</code></pre>\n\n<p>Likewise, in the case of what you posted in the OP, you could get a resource object and then call any of your custom functions on it (theoretically):</p>\n\n<pre><code>var something = src.GetTodo({id: 123});\nsomething.foo = 'hi there';\nsomething.UpdateTodo();\n</code></pre>\n\n<p>I'd experiment with the OOTB implementation before I went and invented my own however.  ANd if you find you're not using any of the default features of $resource, you should probably just be using $http on it's own.</p>\n\n<h2>Update: Angular 1.2 and Promises</h2>\n\n<p>As of Angular 1.2, resources support promises. But they didn't change the rest of the behavior.</p>\n\n<p>To leverage promises with <code>$resource</code>, you need to use the <code>$promise</code> property on the returned value.</p>\n\n<h3>Example using promises</h3>\n\n<pre><code>var Todo = $resource('/api/1/todo/:id');\n\nTodo.get({id: 123}).$promise.then(function(todo) {\n   // success\n   $scope.todos = todos;\n}, function(errResponse) {\n   // fail\n});\n\nTodo.query().$promise.then(function(todos) {\n   // success\n   $scope.todos = todos;\n}, function(errResponse) {\n   // fail\n});\n</code></pre>\n\n<p>Just keep in mind that the $promise property is a property on the same values it was returning above. So you can get weird:</p>\n\n<h3>These are equivalent</h3>\n\n<pre><code>var todo = Todo.get({id: 123}, function() {\n   $scope.todo = todo;\n});\n\nTodo.get({id: 123}, function(todo) {\n   $scope.todo = todo;\n});\n\nTodo.get({id: 123}).$promise.then(function(todo) {\n   $scope.todo = todo;\n});\n\nvar todo = Todo.get({id: 123});\ntodo.$promise.then(function() {\n   $scope.todo = todo;\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 140
                }
            ],
            "body": "<p>I would like to use $resource to call my RESTful web service, (which I am still working on) but I would like to find out if I got my AngularJS script correct first.</p>\n\n<p>The todo DTO has: <code>{id, order, content, done}</code></p>\n\n<p><code>:cmd</code> is so I can call <code>api/1/todo/reset</code> to clear the todo table in database.</p>\n\n<p>Here is the code with comment of my understanding:</p>\n\n<pre><code>function TodoService($resource) {\n    var src = $resource('api/1/todo/:id:cmd',\n              {id: \"@id\", cmd: \"@cmd\"}, //parameters default\n              {\n                ListTodos: { method: \"GET\", params: {} },\n                GetTodo: { method: \"GET\", params: { id: 0 } },                            \n                CreateTodo: { method: \"POST\", params: { content: \"\", order: 0, done: false } },\n                UpdateTodo: { method: \"PATCH\", params: { /*...*/ } },\n                DeleteTodo: { method: \"DELETE\", params: { id: 0 } },\n                ResetTodos: { method: \"GET\", params: { cmd: \"reset\" } },\n              });\n\n    //Usage:\n\n    //GET without ID\n    //it calls -&gt; api/1/todo\n    src.ListTodos();\n\n    //GET with ID\n    //it calls -&gt; api/1/todo/4\n    src.GetTodo({ id: 4 });\n\n    //POST with content, order, done\n    //it calls -&gt; api/1/todo\n    src.CreateTodo({ content: \"learn Javascript\", order: 1, done: false });\n\n    //UPDATE content only\n    //it calls -&gt; api/1/todo/5\n    src.UpdateTodo({ id: 5, content: \"learn AngularJS\" }); \n\n    //UPDATE done only\n    //it calls -&gt; api/1/todo/5\n    src.UpdateTodo({ id: 5, done: true });\n\n    //RESET with cmd\n    //it calls -&gt; api/1/todo/reset\n    src.ResetTodos();\n}\n</code></pre>\n\n<p>One particular thing I am not sure is the PATCH method, I don't want to update everything, can I update just one field? Am I constructing this piece of code correctly?</p>\n",
            "last_activity_date": 1400272661,
            "question_id": 13269882,
            "score": 83,
            "tags": [
                "javascript",
                "rest",
                "angularjs"
            ],
            "title": "AngularJS $resource RESTful example"
        },
        {
            "answer_count": 18,
            "answers": [
                {
                    "body": "<p>First and foremost, this problem can be solved in a lot of ways. This way might not be the most elegant, but it cerntainly works.</p>\n\n<p>Here is a simple solution you should be able to add to any project.  You can just add a \"pageKey\" or some other property when you configure your route that you can use to key off of. Additionally, you can implement a listener on the $routeChangeSuccess method of the $route object to listen for the successful completion of a route change.</p>\n\n<p>When your handler fires you get the page key, and use that key to locate elements that need to be \"ACTIVE\" for this page, and you apply the ACTIVE class.</p>\n\n<p>Keep in mind you need a way to make ALL the elements \"IN ACTIVE\".  As you can see i'm using the .pageKey class on my nav items to turn them all off, and I'm using the .pageKey_{PAGEKEY} to individually turn them on. Switching them all to inactive, would be considered a naive approach, potentially you'd get better performance by using the previous route to make only active items inactive, or you could alter the jquery selector to only select active items to be made inactive.  Using jquery to select all active items is probably the best solution because it ensures everything is cleaned up for the current route in case of any css bugs that might have been present on the previous route.</p>\n\n<p>Which would mean changing this line of code:</p>\n\n<pre><code>$(\".pagekey\").toggleClass(\"active\", false);\n</code></pre>\n\n<p>to this one</p>\n\n<pre><code>$(\".active\").toggleClass(\"active\", false);\n</code></pre>\n\n<p>Here is some sample code:</p>\n\n<p>Given a bootstrap navbar of</p>\n\n<pre><code>&lt;div class=\"navbar navbar-inverse\"&gt;\n    &lt;div class=\"navbar-inner\"&gt;\n        &lt;a class=\"brand\" href=\"#\"&gt;Title&lt;/a&gt;\n        &lt;ul class=\"nav\"&gt;\n            &lt;li&gt;&lt;a href=\"#!/\" class=\"pagekey pagekey_HOME\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#!/page1/create\" class=\"pagekey pagekey_CREATE\"&gt;Page 1 Create&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#!/page1/edit/1\" class=\"pagekey pagekey_EDIT\"&gt;Page 1 Edit&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#!/page1/published/1\" class=\"pagekey pagekey_PUBLISH\"&gt;Page 1 Published&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>And an angular module and controller like the following:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    function Ctrl($scope, $http, $routeParams, $location, $route) {\n\n    }\n\n\n\n    angular.module('BookingFormBuilder', []).\n        config(function ($routeProvider, $locationProvider) {\n            $routeProvider.\n                when('/', { \n                   template: 'I\\'m on the home page', \n                   controller: Ctrl, \n                   pageKey: 'HOME' }).\n                when('/page1/create', { \n                   template: 'I\\'m on page 1 create', \n                   controller: Ctrl, \n                   pageKey: 'CREATE' }).\n                when('/page1/edit/:id', { \n                   template: 'I\\'m on page 1 edit {id}', \n                   controller: Ctrl, pageKey: 'EDIT' }).\n                when('/page1/published/:id', { \n                   template: 'I\\'m on page 1 publish {id}', \n                   controller: Ctrl, pageKey: 'PUBLISH' }).\n                otherwise({ redirectTo: '/' });\n\n            $locationProvider.hashPrefix(\"!\");\n        }).run(function ($rootScope, $http, $route) {\n\n            $rootScope.$on(\"$routeChangeSuccess\", \n                           function (angularEvent, \n                                     currentRoute,\n                                     previousRoute) {\n\n                var pageKey = currentRoute.pageKey;\n                $(\".pagekey\").toggleClass(\"active\", false);\n                $(\".pagekey_\" + pageKey).toggleClass(\"active\", true);\n            });\n\n        });\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You can have a look at <a href=\"http://mgcrea.github.io/angular-strap\" rel=\"nofollow\">AngularStrap</a>, the navbar directive seems to be what you are looking for:</p>\n\n<p><a href=\"https://github.com/mgcrea/angular-strap/blob/master/src/navbar/navbar.js\" rel=\"nofollow\">https://github.com/mgcrea/angular-strap/blob/master/src/navbar/navbar.js</a></p>\n\n<pre><code>.directive('bsNavbar', function($location) {\n  'use strict';\n\n  return {\n    restrict: 'A',\n    link: function postLink(scope, element, attrs, controller) {\n      // Watch for the $location\n      scope.$watch(function() {\n        return $location.path();\n      }, function(newValue, oldValue) {\n\n        $('li[data-match-route]', element).each(function(k, li) {\n          var $li = angular.element(li),\n            // data('match-rout') does not work with dynamic attributes\n            pattern = $li.attr('data-match-route'),\n            regexp = new RegExp('^' + pattern + '$', ['i']);\n\n          if(regexp.test(newValue)) {\n            $li.addClass('active');\n          } else {\n            $li.removeClass('active');\n          }\n\n        });\n      });\n    }\n  };\n});\n</code></pre>\n\n<p>To use this directive:</p>\n\n<ol>\n<li><p>Download AngularStrap from <a href=\"http://mgcrea.github.io/angular-strap/\" rel=\"nofollow\">http://mgcrea.github.io/angular-strap/</a>  </p></li>\n<li><p>Include the script on your page after bootstrap.js:<br>\n<code>&lt;script src=\"lib/angular-strap.js\"&gt;&lt;/script&gt;</code>  </p></li>\n<li><p>Add the directives to your module:<br>\n<code>angular.module('myApp', ['$strap.directives'])</code>  </p></li>\n<li><p>Add the directive to your navbar:<br>\n<code>&lt;div class=\"navbar\" bs-navbar&gt;</code>  </p></li>\n<li><p>Add regexes on each nav item:<br>\n<code>&lt;li data-match-route=\"/about\"&gt;&lt;a href=\"#/about\"&gt;About&lt;/a&gt;&lt;/li&gt;</code></p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>You can achieve this with a conditional in an angular expression, such as:</p>\n\n<pre><code>&lt;a href=\"#\" class=\"{{ condition ? 'active' : '' }}\"&gt;link&lt;/a&gt;\n</code></pre>\n\n<p>That being said, I do find an angular directive to be the more \"proper\" way of doing it, even though outsourcing a lot of this mini-logic can somewhat pollute your code base.</p>\n\n<p>I use conditionals for GUI styling every once in a while during development, because it's a little quicker than creating directives. I couldn't tell you an instance though in which they actually remained in the code base for long. In the end I either turn it into a directive or find a better way to solve the problem.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I use ng-class directive with $location to achieve it.</p>\n\n<pre><code>&lt;ul class=\"nav\"&gt;\n&lt;li data-ng-class=\"{active: ($location.path() == '/') }\"&gt;\n    &lt;a href=\"#/\"&gt;Carpeta Amarilla&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=\"dropdown\" data-ng-class=\"{active: ($location.path() == '/auditoria' || $location.path() == '/auditoria/todos') }\"&gt;\n    &lt;a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\"&gt;\n        Auditoria\n        &lt;b class=\"caret\"&gt;&lt;/b&gt;\n    &lt;/a&gt;\n    &lt;ul class=\"dropdown-menu pull-right\"&gt;\n        &lt;li data-ng-class=\"{active: ($location.path() == '/auditoria') }\"&gt;\n            &lt;a href=\"#/auditoria\"&gt;Por Legajo&lt;/a&gt;\n        &lt;/li&gt;\n        &lt;li data-ng-class=\"{active: ($location.path() == '/auditoria/todos') }\"&gt;\n            &lt;a href=\"#/auditoria/todos\"&gt;General&lt;/a&gt;\n        &lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>It requires the navbar to be inside a main Controller with access to $location service like this:</p>\n\n<pre><code>bajasApp.controller('MenuCntl', ['$scope','$route', '$routeParams', '$location', \n   function MenuCntl($scope, $route, $routeParams, $location) {\n   $scope.$route = $route;\n   $scope.$location = $location;\n   $scope.$routeParams = $routeParams;\n}]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here's a simple approach that works well with Angular. </p>\n\n<pre><code>&lt;ul class=\"nav navbar-nav\"&gt;\n    &lt;li ng-class=\"{ active: isActive('/View1') }\"&gt;&lt;a href=\"#/View1\"&gt;View 1&lt;/a&gt;&lt;/li&gt;\n    &lt;li ng-class=\"{ active: isActive('/View2') }\"&gt;&lt;a href=\"#/View2\"&gt;View 2&lt;/a&gt;&lt;/li&gt;\n    &lt;li ng-class=\"{ active: isActive('/View3') }\"&gt;&lt;a href=\"#/View3\"&gt;View 3&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>Within your AngularJS controller:</p>\n\n<pre><code>$scope.isActive = function (viewLocation) {\n     var active = (viewLocation === $location.path());\n     return active;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>A very elegant way is to use ng-controller to run a single controller outside of the ng-view:</p>\n\n<pre><code>&lt;div class=\"collapse navbar-collapse\" ng-controller=\"HeaderController\"&gt;\n    &lt;ul class=\"nav navbar-nav\"&gt;\n        &lt;li ng-class=\"{ active: isActive('/')}\"&gt;&lt;a href=\"/\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n        &lt;li ng-class=\"{ active: isActive('/dogs')}\"&gt;&lt;a href=\"/dogs\"&gt;Dogs&lt;/a&gt;&lt;/li&gt;\n        &lt;li ng-class=\"{ active: isActive('/cats')}\"&gt;&lt;a href=\"/cats\"&gt;Cats&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/div&gt;\n&lt;div ng-view&gt;&lt;/div&gt;\n</code></pre>\n\n<p>and include in controllers.js:</p>\n\n<pre><code>function HeaderController($scope, $location) \n{ \n    $scope.isActive = function (viewLocation) { \n        return viewLocation === $location.path();\n    };\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 295
                },
                {
                    "body": "<p>Extending myl answer, I needed this to handle an structure like this.</p>\n\n<p>-index</p>\n\n<p>-events&lt;-active<br>\n---event-list<br>\n---event-edit<br>\n---event-map &lt;-clicked</p>\n\n<p>-places<br>\n---place-list<br>\n---place-edit<br>\n---place-map</p>\n\n<p>so instead of matching, I had to use indexOf, in order to validate children links which are formatted to match the condition. So for 'events':</p>\n\n<pre><code>&lt;li ng-class=\"{ active: isActive('/event')}\" class=\"divider-vertical dropdown\"&gt;\n\n\nfunction NavController($scope, $location) { \n$scope.isActive = function (viewLocation) {\n    var s=false;\n    if($location.path().indexOf(viewLocation) != -1){\n     s = true;\n    }\n    return s;\n};}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In conjunction with @Olivier's AngularStrap answer, I also implemented kevinknelson's answer from: <a href=\"https://github.com/twbs/bootstrap/issues/9013\" rel=\"nofollow\">https://github.com/twbs/bootstrap/issues/9013</a>.  </p>\n\n<p>Natively, the Bootstrap3 navbar was not designed for a single-page (eg Angular) application and thus the menu when on a small screen was not collapsing upon click.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just wrote a directive to handle this, so you can simply add the attribute <code>bs-active-link</code> to the parent <code>&lt;ul&gt;</code> element, and any time the route changed, it will find the matching link, and add the <code>active</code> class to the corresponding <code>&lt;li&gt;</code>. </p>\n\n<p>You can see it in action here: <a href=\"http://jsfiddle.net/8mcedv3b/\" rel=\"nofollow\">http://jsfiddle.net/8mcedv3b/</a></p>\n\n<p>Example HTML:</p>\n\n<pre><code>&lt;ul class=\"nav navbar-nav\" bs-active-link&gt;\n  &lt;li&gt;&lt;a href=\"/home\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=\"/contact\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>angular.module('appName')\n.directive('bsActiveLink', ['$location', function ($location) {\nreturn {\n    restrict: 'A', //use as attribute \n    replace: false,\n    link: function (scope, elem) {\n        //after the route has changed\n        scope.$on(\"$routeChangeSuccess\", function () {\n            var hrefs = ['/#' + $location.path(),\n                         '#' + $location.path(), //html5: false\n                         $location.path()]; //html5: true\n            angular.forEach(elem.find('a'), function (a) {\n                a = angular.element(a);\n                if (-1 !== hrefs.indexOf(a.attr('href'))) {\n                    a.parent().addClass('active');\n                } else {\n                    a.parent().removeClass('active');   \n                };\n            });     \n        });\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you would rather not use <a href=\"http://mgcrea.github.io/angular-strap/\" rel=\"nofollow\">AngularStrap</a> then this directive should do the trick!. This is a modification of <a href=\"http://stackoverflow.com/a/16231859/910764\">http://stackoverflow.com/a/16231859/910764</a>.</p>\n\n<p><strong>JavaScript</strong></p>\n\n<pre><code>angular.module('myApp').directive('bsNavbar', ['$location', function ($location) {\n  return {\n    restrict: 'A',\n    link: function postLink(scope, element) {\n      scope.$watch(function () {\n        return $location.path();\n      }, function (path) {\n        angular.forEach(element.children(), (function (li) {\n          var $li = angular.element(li),\n            regex = new RegExp('^' + $li.attr('data-match-route') + '$', 'i'),\n            isActive = regex.test(path);\n          $li.toggleClass('active', isActive);\n        }));\n      });\n    }\n  };\n}]);\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;ul class=\"nav navbar-nav\" bs-navbar&gt;\n  &lt;li data-match-route=\"/home\"&gt;&lt;a href=\"#/home\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n  &lt;li data-match-route=\"/about\"&gt;&lt;a href=\"#/about\"&gt;About&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p><strong>Note:</strong> The above HTML classes assume you are using <a href=\"http://getbootstrap.com/\" rel=\"nofollow\">Bootstrap 3.x</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can also use this active-link directive <a href=\"http://stackoverflow.com/a/23138152/1387163\">http://stackoverflow.com/a/23138152/1387163</a></p>\n\n<p>Parent li will get active class when location matches <em>/url</em>:</p>\n\n<pre><code>&lt;li&gt;\n    &lt;a href=\"#!/url\" active-link active-link-parent&gt;\n&lt;/li&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Heres my take on it.  A little of a combination of answers found on this post.  I had a slightly different case, so my solution involves separating the menu into its own template to be used within the Directive Definition Ojbect then add my navbar to the page I needed it on.  Basically, I had a login page that I didnt want to include my menu on, so I used ngInclude and insert this directive when logged in:</p>\n\n<h1>DIRECTIVE:</h1>\n\n<pre><code>module.directive('compModal', function(){\n\n\nreturn {\n    restrict: 'E',\n    replace: true,\n    transclude: true,\n    scope: true,\n    templateUrl: 'templates/menu.html',\n    controller: function($scope, $element, $location){\n        $scope.isActive = function(viewLocation){\n\n            var active = false;\n\n            if(viewLocation === $location.path()){\n                active = true;\n            }\n\n            return active;\n\n        }\n    }\n }\n});\n</code></pre>\n\n<h1>DIRECTIVE TEMPLATE  (templates/menu.html)</h1>\n\n<pre><code>&lt;ul class=\"nav navbar-nav\"&gt;\n  &lt;li ng-class=\"{ active: isActive('/View1') }\"&gt;&lt;a href=\"#/View1\"&gt;View 1&lt;/a&gt;&lt;/li&gt;\n  &lt;li ng-class=\"{ active: isActive('/View2') }\"&gt;&lt;a href=\"#/View2\"&gt;View 2&lt;/a&gt;&lt;/li&gt;\n  &lt;li ng-class=\"{ active: isActive('/View3') }\"&gt;&lt;a href=\"#/View3\"&gt;View 3&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<h1>HTML WHICH INCLUDES THE DIRECTIVE</h1>\n\n<pre><code>&lt;comp-navbar/&gt;\n</code></pre>\n\n<p>Hope this helps</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This did the trick for me:</p>\n\n<pre><code>  var domain = '{{ DOMAIN }}'; // www.example.com or dev.example.com\n  var domain_index =  window.location.href.indexOf(domain);\n  var long_app_name = window.location.href.slice(domain_index+domain.length+1); \n  // this turns http://www.example.com/whatever/whatever to whatever/whatever\n  app_name = long_app_name.slice(0, long_app_name.indexOf('/')); \n  //now you are left off with just whatever\n</code></pre>\n\n<p>then you use jquery(works with angular too) to add class active </p>\n\n<pre><code>$('nav a[href*=' + app_name).closest('li').addClass('active');\n</code></pre>\n\n<p>and of course the css:</p>\n\n<pre><code>.active{background:red;}\n</code></pre>\n\n<p>this works if you have your html like this:</p>\n\n<pre><code>&lt;ul&gt;&lt;li&gt;&lt;a href=\"ee\"&gt;ee&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"dd\"&gt;dd&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;\n</code></pre>\n\n<p>this will atumatically add class active using the page url and color your background to red if your in www.somesite.com/ee thaen ee is the 'app' and it will be active</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I suggest using a directive on a link.\n<a href=\"http://jsfiddle.net/kprajapati22/aREmw/\" rel=\"nofollow\">Here</a> is the fiddle.</p>\n\n<p>But its not perfect yet. Watch out for the hashbangs ;)</p>\n\n<p>Here is the javascript for directive:</p>\n\n<pre><code>angular.module('link', []).\n  directive('activeLink', ['$location', function(location) {\n    return {\n      restrict: 'A',\n      link: function(scope, element, attrs, controller) {\n        var clazz = attrs.activeLink;\n        var path = attrs.href;\n        path = path.substring(1); //hack because path does not return including hashbang\n        scope.location = location;\n        scope.$watch('location.path()', function(newPath) {\n          if (path === newPath) {\n            element.addClass(clazz);\n          } else {\n            element.removeClass(clazz);\n          }\n        });\n      }\n    };\n  }]);\n</code></pre>\n\n<p>and here is how it would be used in html:</p>\n\n<pre><code>&lt;div ng-app=\"link\"&gt;\n  &lt;a href=\"#/one\" active-link=\"active\"&gt;One&lt;/a&gt;\n  &lt;a href=\"#/two\" active-link=\"active\"&gt;One&lt;/a&gt;\n  &lt;a href=\"#\" active-link=\"active\"&gt;home&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>afterwards styling with css:</p>\n\n<pre><code>.active{ color:red; }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can actually use <a href=\"http://angular-ui.github.io/ui-utils/#/routing\" rel=\"nofollow\"><strong>angular-ui-utils</strong></a>' <code>ui-route</code> directive:</p>\n\n<pre><code>&lt;a ui-route ng-href=\"/\"&gt;Home&lt;/a&gt;\n&lt;a ui-route ng-href=\"/about\"&gt;About&lt;/a&gt;\n&lt;a ui-route ng-href=\"/contact\"&gt;Contact&lt;/a&gt;\n</code></pre>\n\n<p>or:</p>\n\n<h3>Header Controller</h3>\n\n<pre><code>/**\n * Header controller\n */\nangular.module('myApp')\n  .controller('HeaderCtrl', function ($scope) {\n    $scope.menuItems = [\n      {\n        name: 'Home',\n        url:  '/',\n        title: 'Go to homepage.'\n      },\n      {\n        name:   'About',\n        url:    '/about',\n        title:  'Learn about the project.'\n      },\n      {\n        name:   'Contact',\n        url:    '/contact',\n        title:  'Contact us.'\n      }\n    ];\n  });\n</code></pre>\n\n<h3>Index page</h3>\n\n<pre><code>&lt;!-- index.html: --&gt;\n&lt;div class=\"header\" ng-controller=\"HeaderCtrl\"&gt;\n  &lt;ul class=\"nav navbar-nav navbar-right\"&gt;\n    &lt;li ui-route=\"{{menuItem.url}}\" ng-class=\"{active: $uiRoute}\"\n      ng-repeat=\"menuItem in menuItems\"&gt;\n      &lt;a ng-href=\"#{{menuItem.url}}\" title=\"{{menuItem.title}}\"&gt;\n        {{menuItem.name}}\n      &lt;/a&gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>If you're using ui-utils, you may also be interested in <a href=\"https://github.com/angular-ui/ui-router\" rel=\"nofollow\"><strong>ui-router</strong></a> for managing partial/nested views.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just to add my two cents in the debate I have made a pure angular module (no jquery), and it will also work with hash urls containing data. (<a href=\"http://www.elearnenglishlanguage.com/blog/english-mistakes/eg-vs-ie/\" rel=\"nofollow\">i.g.</a> <code>#/this/is/path?this=is&amp;some=data</code>)</p>\n\n<p>You just add the module as a dependency and <code>auto-active</code> to one of the ancestors of the menu. Like this:</p>\n\n<pre><code>&lt;ul auto-active&gt;\n    &lt;li&gt;&lt;a href=\"#/\"&gt;main&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"#/first\"&gt;first&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"#/second\"&gt;second&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"#/third\"&gt;third&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>And the module look like this:</p>\n\n<pre><code>(function () {\n    angular.module('autoActive', [])\n        .directive('autoActive', ['$location', function ($location) {\n        return {\n            restrict: 'A',\n            scope: false,\n            link: function (scope, element) {\n                function setActive() {\n                    var path = $location.path();\n                    if (path) {\n                        angular.forEach(element.find('li'), function (li) {\n                            var anchor = li.querySelector('a');\n                            if (anchor.href.match('#' + path + '(?=\\\\?|$)')) {\n                                angular.element(li).addClass('active');\n                            } else {\n                                angular.element(li).removeClass('active');\n                            }\n                        });\n                    }\n                }\n\n                setActive();\n\n                scope.$on('$locationChangeSuccess', setActive);\n            }\n        }\n    }]);\n}());\n</code></pre>\n\n<p>* (You can of course just use the directive part)</p>\n\n<p>** It's also worth noticing that this doesn't work for empty hashes (<a href=\"http://www.elearnenglishlanguage.com/blog/english-mistakes/eg-vs-ie/\" rel=\"nofollow\">i.g.</a> <code>example.com/#</code> or just <code>example.com</code>) it needs to have at least <code>example.com/#/</code> or just <code>example.com#/</code>. But this happens automatically with ngResource and the like.</p>\n\n<ul>\n<li>Here is the fiddle: <a href=\"http://jsfiddle.net/gy2an/8/\" rel=\"nofollow\">http://jsfiddle.net/gy2an/8/</a></li>\n<li>Here is the github: <a href=\"https://github.com/Karl-Gustav/autoActive\" rel=\"nofollow\">https://github.com/Karl-Gustav/autoActive</a></li>\n<li>Here is my original answer: <a href=\"http://stackoverflow.com/a/22282124/1465640\">http://stackoverflow.com/a/22282124/1465640</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>JavaScript</strong></p>\n\n<pre><code>/**\n * Main AngularJS Web Application\n */\n\nvar app = angular.module('yourWebApp', [\n    'ngRoute'\n]);\n\n\n/**\n * Setup Main Menu\n */\n\napp.controller('MainNavCtrl', [ '$scope', '$location', function ( $scope, $location) {\n    $scope.menuItems = [\n        {\n            name: 'Home',\n            url:  '/home',\n            title: 'Welcome to our Website'\n        },\n        {\n            name: 'ABOUT',\n            url:  '/about',\n            title: 'Know about our work culture'\n        },\n        {\n            name:   'CONTACT',\n            url:    '/contact',\n            title:  'Get in touch with us'\n        }\n    ];\n\n    $scope.isActive = function (viewLocation) {\n        return viewLocation === $location.path();\n    };\n}]);\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>  &lt;div class=\"navbar-collapse collapse\" ng-controller=\"MainNavCtrl\"&gt;\n    &lt;ul id=\"add-magic-line\" class=\"nav navbar-nav navbar-right\"&gt;\n      &lt;li data-ng-class=\"{current_page_item: isActive('{{ menuItem.url }}')}\" data-ng-repeat=\"menuItem in menuItems\"&gt;\n        &lt;a data-ng-href=\"#{{menuItem.url}}\" title=\"{{menuItem.title}}\"&gt;\n          {{menuItem.name}}\n        &lt;/a&gt;\n      &lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I find all of these answers a bit over complicated for me, sorry. So I have created a small directive that should work on a per navbar basis:</p>\n\n<pre><code>app.directive('tfActiveLink', function () {\n    return {\n        link: function (scope, element, attrs) {\n            element.find('.nav a').on('click', function () {\n                angular.element(this)\n                    .parent().siblings('.active')\n                    .removeClass('active');\n                angular.element(this)\n                    .parent()\n                    .addClass('active');\n            });\n        }\n    };\n});\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>&lt;ul class=\"nav navbar-nav navbar-right\" tf-active-link&gt;\n    &lt;li class=\"nav active\"&gt;&lt;a href=\"home\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n    &lt;li class=\"nav\"&gt;&lt;a href=\"foo\"&gt;Foo&lt;/a&gt;&lt;/li&gt;\n    &lt;li class=\"nav\"&gt;&lt;a href=\"bar\"&gt;Bar&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If I have a navbar in bootstrap with the items</p>\n\n<pre><code>Home | About | Contact\n</code></pre>\n\n<p>How do I set the active class for each menu item when they are active? That is, how can I set <code>class=\"active\"</code> when the angular route is at </p>\n\n<ol>\n<li><code>#/</code> for home</li>\n<li><code>#/about</code> for the about page</li>\n<li><code>#/contact</code> for the contact page</li>\n</ol>\n",
            "last_activity_date": 1425144749,
            "question_id": 16199418,
            "score": 135,
            "tags": [
                "javascript",
                "twitter-bootstrap",
                "angularjs",
                "angularjs-directive",
                "navbar"
            ],
            "title": "How do I implement the bootstrap navbar active class with Angular JS"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Modernizr.js will remove the <code>no-js</code> class.</p>\n\n<p>This allows you to make CSS rules for <code>.no-js something</code> to apply them only if Javascript is disabled.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>When Modernizr runs, it removes the \"no-js\" class and replaces it with \"js\". This is a way to know in your CSS whether or not Javascript support is enabled.</p>\n\n<p>See <a href=\"https://github.com/Modernizr/Modernizr/blob/master/src/setClasses.js#L9\">Modernizer's source code</a>.</p>\n",
                    "is_accepted": true,
                    "score": 273
                },
                {
                    "body": "<p>The <code>no-js</code> class gets removed by a javascript script, so you can modify/display/hide things using css if js is disabled.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>The <code>no-js</code> class is used by the <a href=\"http://modernizr.com/\">Modernizr</a> feature detection library. When Modernizr loads, it replaces <code>no-js</code> with <code>js</code>. If JavaScript is disabled, the class remains.  This allows you to write CSS which easily targets either condition.</p>\n\n<p>From <a href=\"https://web.archive.org/web/20130511051108/http://modernizr.github.io/Modernizr/annotatedsource.html#section-103\">Modernizrs' Anotated Source</a> <a href=\"https://github.com/Modernizr/Modernizr/issues/417\"><em>(no longer maintained)</em></a>:</p>\n\n<blockquote>\n  <p><em>Remove \"no-js\" class from element, if it exists:</em>\n  <code>docElement.className=docElement.className.replace(/\\bno-js\\b/,'') + ' js';</code></p>\n</blockquote>\n\n<hr>\n\n<p>I like to do this same thing, but without Modernizr.\nI put the following <code>&lt;script&gt;</code> in the <code>&lt;head&gt;</code> to change the class to <code>js</code> if JavaScript is enabled.</p>\n\n<pre><code>&lt;script&gt;\n    document.documentElement.className = \n       document.documentElement.className.replace(\"no-js\",\"js\");\n&lt;/script&gt;\n</code></pre>\n\n<p>Prior to this technique, I would generally just apply js-dependant styles directly with JavaScript.  For example:</p>\n\n<pre><code>$('#someSelector').hide();\n$('.otherStuff').css({'color' : 'blue'});\n</code></pre>\n\n<p>With the <code>no-js</code> trick, this can Now be done with <code>css</code>:</p>\n\n<pre><code>.js #someSelector {display: none;}\n.otherStuff { color: blue; }\n.no-js .otherStuff { color: green }\n</code></pre>\n\n<p>This is preferable because:</p>\n\n<ul>\n<li>It loads faster (no flash)</li>\n<li>Seperation of concerns, etc...</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 48
                },
                {
                    "body": "<p>This is not only applicable in Modernizer. I see some site implement like below to check whether it has javascript support or not.</p>\n\n<pre><code>&lt;body class=\"no-js\"&gt;\n    &lt;script&gt;document.body.classList.remove('no-js');&lt;/script&gt;\n    ...\n&lt;/body&gt;\n</code></pre>\n\n<p>If javascript support is there, then it will remove <code>no-js</code> class. Otherwise <code>no-js</code> will remain in the body tag. Then they control the styles in the css when no javascript support.</p>\n\n<pre><code>.no-js .some-class-name {\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I notice that in a lot of template engines, in the <a href=\"http://html5boilerplate.com/\">HTML5 Boilerplate</a>, in various frameworks and in plain php sites there is the <code>no-js</code> class added onto the <code>&lt;HTML&gt;</code> tag. </p>\n\n<p>Why is this done? Is there some sort of default browser behavior that reacts to this class? Why include it always? Does that not render the class itself obsolete, if there is no no-\"no-js\" case and html can be addressed directly?</p>\n\n<p>Here is an example from the HTML5 Boilerplate index.html:</p>\n\n<pre><code>&lt;!--[if lt IE 7 ]&gt; &lt;html lang=\"en\" class=\"no-js ie6\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 7 ]&gt;    &lt;html lang=\"en\" class=\"no-js ie7\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 8 ]&gt;    &lt;html lang=\"en\" class=\"no-js ie8\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 9 ]&gt;    &lt;html lang=\"en\" class=\"no-js ie9\"&gt; &lt;![endif]--&gt;\n&lt;!--[if (gt IE 9)|!(IE)]&gt;&lt;!--&gt; &lt;html lang=\"en\" class=\"no-js\"&gt; &lt;!--&lt;![endif]--&gt;\n</code></pre>\n\n<p>As you can see, the <code>&lt;html&gt;</code> element will always have this class.\nCan someone explain why this is done so often?</p>\n",
            "last_activity_date": 1408911010,
            "question_id": 6724515,
            "score": 258,
            "tags": [
                "javascript",
                "html",
                "modernizr",
                "html5boilerplate"
            ],
            "title": "What is the purpose of the HTML &quot;no-js&quot; class?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Dojo does, e.g. via JsonRestStore, see <a href=\"http://www.sitepen.com/blog/2008/06/13/restful-json-dojo-data/\" rel=\"nofollow\">http://www.sitepen.com/blog/2008/06/13/restful-json-dojo-data/</a> .</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You don't really need a specific client, it's fairly simple with most libraries. For example in jQuery you can just call the generic <code>$.ajax</code> function with the type of request you want to make:</p>\n\n<pre><code>$.ajax({\n    url: 'http://example.com/',\n    type: 'PUT',\n    data: 'ID=1&amp;Name=John&amp;Age=10', // or $('#myform').serializeArray()\n    success: function() { alert('PUT completed'); }\n});\n</code></pre>\n\n<p>You can replace <code>PUT</code> with <code>GET</code>/<code>POST</code>/<code>DELETE</code> or whatever.</p>\n",
                    "is_accepted": true,
                    "score": 101
                },
                {
                    "body": "<p>While you may wish to use a library, such as the excellent <a href=\"http://jquery.com/\">jQuery</a>, you don't have to: all modern browsers support HTTP very well in their JavaScript implementations via the <a href=\"http://en.wikipedia.org/wiki/XMLHttpRequest\">XMLHttpRequest API</a>, which, despite its name, is not limited to XML representations.</p>\n\n<p>Here's an example of making a synchronous HTTP PUT request in JavaScript:</p>\n\n<pre><code>var url = \"http://host/path/to/resource\";\nvar representationOfDesiredState = \"The cheese is old and moldy, where is the bathroom?\";\n\nvar client = new XMLHttpRequest();\n\nclient.open(\"PUT\", url, false);\n\nclient.setRequestHeader(\"Content-Type\", \"text/plain\");\n\nclient.send(representationOfDesiredState);\n\nif (client.status == 200)\n    alert(\"The request succeeded!\\n\\nThe response representation was:\\n\\n\" + client.responseText)\nelse\n    alert(\"The request did not succeed!\\n\\nThe response status was: \" + client.status + \" \" + client.statusText + \".\");\n</code></pre>\n\n<p>This example is synchronous because that makes it a little easier, but it's quite easy to make asynchronous requests using this API as well.</p>\n\n<p>There are thousands of pages and articles on the web about learning XmlHttpRequest \u2014 they usually use the term AJAX \u2013 unfortunately I can't recommend a specific one. You may find <a href=\"http://www.w3.org/TR/XMLHttpRequest/\">this reference</a> handy though.</p>\n",
                    "is_accepted": false,
                    "score": 56
                },
                {
                    "body": "<p>jQuery has <a href=\"http://plugins.jquery.com/project/Rest\">JSON-REST</a> plugin with REST style of URI parameter templates. According to its description example of using is the followin: <code>$.Read(\"/{b}/{a}\", { a:'foo', b:'bar', c:3 })</code> becomes a GET to \"/bar/foo?c=3\".</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>For reference I want to add about ExtJS, as explained in Manual: <a href=\"http://www.sencha.com/learn/legacy/Manual%3aRESTful_Web_Services\">RESTful Web Services</a>. In short, use method to specify GET, POST, PUT, DELETE. Example:</p>\n\n<pre><code>Ext.Ajax.request({\n    url: '/articles/restful-web-services',\n    method: 'PUT',\n    params: {\n        author: 'Patrick Donelan',\n        subject: 'RESTful Web Services are easy with Ext!'\n    }\n});\n</code></pre>\n\n<p>If the Accept header is necessary, it can be set as a default for all requests:</p>\n\n<pre><code>Ext.Ajax.defaultHeaders = {\n    'Accept': 'application/json'\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>abaaso is a RESTful framework I cooked up over the last year+. It conforms to the REST achitecture; providing multiple application states (HATEOAS) and security based around the responses. <a href=\"http://abaaso.com\" rel=\"nofollow\">http://abaaso.com</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can also use mvc frameworks like Backbone.js that will provide a javascript model of the data. Changes to the model will be translated into REST calls.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can use this jQuery plugin I just made :)\n<a href=\"https://github.com/jpillora/jquery.rest/\">https://github.com/jpillora/jquery.rest/</a></p>\n\n<p>Supports basic CRUD operations, nested resources, basic auth</p>\n\n<pre><code>  var client = new $.RestClient('/api/rest/');\n\n  client.add('foo');\n  client.foo.add('baz');\n  client.add('bar');\n\n  client.foo.create({a:21,b:42});\n  // POST /api/rest/foo/ (with data a=21 and b=42)\n  client.foo.read();\n  // GET /api/rest/foo/\n  client.foo.read(\"42\");\n  // GET /api/rest/foo/42/\n  client.foo.update(\"42\");\n  // PUT /api/rest/foo/42/\n  client.foo.delete(\"42\");\n  // DELETE /api/rest/foo/42/\n\n  //RESULTS USE '$.Deferred'\n  client.foo.read().success(function(foos) {\n    alert('Hooray ! I have ' + foos.length + 'foos !' );\n  });\n</code></pre>\n\n<p>If you find bugs or want new features, post them in the repositories 'Issues' page please</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use <a href=\"http://adodson.com/hello.js/\" rel=\"nofollow\">http://adodson.com/hello.js/</a> which has </p>\n\n<ol>\n<li>Rest API support </li>\n<li>Built in support for many sites google, facebook, dropbox</li>\n<li>It supports oAuth 1 and 2 support.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can try <a href=\"https://github.com/marmelab/restful.js\" rel=\"nofollow\">restful.js</a>, a framework-agnostic RESTful client, using a syntax similar to the popular Restangular.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>is there a javascript library with REST or REST-like (GET, POST, PUT and DELETE over http or https) capabilities? </p>\n",
            "last_activity_date": 1425998333,
            "question_id": 921942,
            "score": 82,
            "tags": [
                "javascript",
                "rest"
            ],
            "title": "javascript REST client"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I would download the jQuery source and modify the jQuery object to another (jQueryCustom).</p>\n\n<p>And then find the instance that sets the <code>$</code> symbol as a jQuery object and comment that routine.</p>\n\n<p>I don't know how easy or difficult could that be, but I'd sure give it a try.</p>\n\n<p>(Also, check your second option, as it is not bad, the site where the widget will be executing, might have a jQuery version older than the one you need).</p>\n\n<p><strong>EDIT:</strong> I just checked the source. You just have to replace <code>jQuery</code> with another string (<code>jQcustom</code> for example). Then, try commenting this line:</p>\n\n<pre><code>_$ = window.$\n</code></pre>\n\n<p>And you make reference to the custom jQuery like this:</p>\n\n<pre><code>jQcustom(\"#id\").attr(...)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>SEE <a href=\"http://stackoverflow.com/questions/1566595/can-i-use-multiple-versions-of-jquery-on-the-same-page/1566644#1566644\">Can I use multiple versions of jQuery on the same page?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Can you use document.write() to optionally add the jQuery script to the page? That should force jQuery to load synchronously. Try this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n// &lt;![CDATA\n if (typeof jQuery === 'undefined') {\n  document.write('&lt;script src=\"{{ URL }}/jquery.js\"&gt;&lt;' + '/script&gt;');\n }\n// ]]&gt;\n&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"{{ URL }}/widget.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>If you want to do the jQuery check inside your widget script then I believe the following works cross-browser:</p>\n\n<pre><code>(function() {\n function your_call($) {\n  // your widget code goes here\n }\n if (typeof jQuery !== 'undefined') your_call(jQuery);\n else {\n  var head = document.getElementsByTagName('head')[0];\n  var script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.src = '{{ URL }}/jquery.js';\n  var onload = function() {\n   if (!script.readyState || script.readyState === \"complete\") your_call(jQuery);\n  }\n  if (\"onreadystatechange\" in script) script.onreadystatechange = onload;\n  else script.onload = onload;\n  head.appendChild(script);\n }\n})()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>After reviewing some answers and pointers, and finding some helpful jQuery hackers, I ended up with something like the following:</p>\n\n<pre><code>(function(window, document, version, callback) {\n    var j, d;\n    var loaded = false;\n    if (!(j = window.jQuery) || version &gt; j.fn.jquery || callback(j, loaded)) {\n        var script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = \"/media/jquery.js\";\n        script.onload = script.onreadystatechange = function() {\n            if (!loaded &amp;&amp; (!(d = this.readyState) || d == \"loaded\" || d == \"complete\")) {\n                callback((j = window.jQuery).noConflict(1), loaded = true);\n                j(script).remove();\n            }\n        };\n        (document.getElementsByTagName(\"head\")[0] || document.documentElement).appendChild(script);\n    }\n})(window, document, \"1.3\", function($, jquery_loaded) {\n    // Widget code here\n});\n</code></pre>\n\n<p>This will load jQuery if it's not already loaded and encapsulates it in the callback so it doesn't conflict with a pre-existing jQuery on the page.  It also checks that a minimum version is available or else loads a known version -- in this case, v1.3.  It sends a boolean value to the callback (my widget) on whether or not jQuery was loaded in case there are any triggers needed to be made.  And only after jQuery is loaded does it call my widget, passing jQuery into it.</p>\n",
                    "is_accepted": true,
                    "score": 74
                },
                {
                    "body": "<p>What if you also want to use some jQuery plugins? Is it safe to make yourself a single file with the minified versions of the plugins, and also load those, as below?  (Loaded from S3, in this particular example.)</p>\n\n<pre><code>(function(window, document, version, callback) {\n  var j, d;\n  var loaded = false;\n  if (!(j = window.jQuery) || version &gt; j.fn.jquery || callback(j, loaded)) {\n    var script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src = \"http://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js\";\n    script.onload = script.onreadystatechange = function() {\n        if (!loaded &amp;&amp; (!(d = this.readyState) || d == \"loaded\" || d == \"complete\")) {\n            window.jQuery.getScript('http://mydomain.s3.amazonaws.com/assets/jquery-plugins.js', function() {\n              callback((j = window.jQuery).noConflict(1), loaded = true);\n              j(script).remove();\n            });\n        }\n    };\n    document.documentElement.childNodes[0].appendChild(script)\n  }\n})(window, document, \"1.5.2\", function($, jquery_loaded) {\n  // widget code goes here\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>See <a href=\"http://alexmarandon.com/articles/web_widget_jquery/\">How to build a web widget (using jQuery)</a> by Alex Marandon.</p>\n\n<pre><code>(function() {\n\n// Localize jQuery variable\nvar jQuery;\n\n/******** Load jQuery if not present *********/\nif (window.jQuery === undefined || window.jQuery.fn.jquery !== '1.4.2') {\n    var script_tag = document.createElement('script');\n    script_tag.setAttribute(\"type\",\"text/javascript\");\n    script_tag.setAttribute(\"src\",\n        \"http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js\");\n    if (script_tag.readyState) {\n      script_tag.onreadystatechange = function () { // For old versions of IE\n          if (this.readyState == 'complete' || this.readyState == 'loaded') {\n              scriptLoadHandler();\n          }\n      };\n    } else { // Other browsers\n      script_tag.onload = scriptLoadHandler;\n    }\n    // Try to find the head, otherwise default to the documentElement\n    (document.getElementsByTagName(\"head\")[0] || document.documentElement).appendChild(script_tag);\n} else {\n    // The jQuery version on the window is the one we want to use\n    jQuery = window.jQuery;\n    main();\n}\n\n/******** Called once jQuery has loaded ******/\nfunction scriptLoadHandler() {\n    // Restore $ and window.jQuery to their previous values and store the\n    // new jQuery in our local jQuery variable\n    jQuery = window.jQuery.noConflict(true);\n    // Call our main function\n    main(); \n}\n\n/******** Our main function ********/\nfunction main() { \n    jQuery(document).ready(function($) { \n        // We can use jQuery 1.4.2 here\n    });\n}\n\n})(); // We call our anonymous function immediately\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I know this is an old topic... but i got something faster that your hack.\nTry in your widget</p>\n\n<pre><code>\"init\": function()\n</code></pre>\n\n<p>that will fix the trouble</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm developing a javascript widget that depends on jQuery.  The widget may or may not be loaded onto a page that already has jQuery loaded.  There are many problems that come up in this case...</p>\n\n<ol>\n<li><p>If the web page does not have jQuery, I must load my own jQuery.  There seems to be a delicate timing issue when doing this, however.  For example, if my widget loads and executes before jQuery is finished loading and executing, I get a <code>jQuery is not defined</code> error.</p></li>\n<li><p>If the web page does have jQuery, I can usually work with it.  If the jQuery version is old, however, I would like to load my own.  If I do load my own, however, I need to do it in such a way as to not stomp on their <code>$</code> variable.  If I set <code>jQuery.noConflict()</code> and any of their scripts depend on <code>$</code>, then I have just broken their page.</p></li>\n<li><p>If the web page uses another javascript library (e.g. prototype), I needed to be sensitive of prototype's <code>$</code> variable also.</p></li>\n</ol>\n\n<p>Because of all of the above, it is seeming easier to not depend on jQuery.  But before I go down that road, which will involve mostly rewriting my widget code, I wanted to ask for advice first.</p>\n\n<p>The basic skeleton of my code, including the timing bug and sometimes <code>$</code> bugs, follows:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n// &lt;![CDATA\n if (typeof jQuery === 'undefined') {\n  var head = document.getElementsByTagName('head')[0];\n  var script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.src = '{{ URL }}/jquery.js';\n  head.appendChild(script);\n }\n// ]]&gt;\n&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"{{ URL }}/widget.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>My widget has the following structure:</p>\n\n<pre><code>(function($) {\n var mywidget = {\n  init: function() {\n   ...\n  }\n };\n $(document).ready(function() {\n   mywidget.init();\n });\n})(jQuery);\n</code></pre>\n\n<p>If there are any pointers or resources for achieving a widget that can work in all the mentioned environments, they would be greatly appreciated.</p>\n",
            "last_activity_date": 1386228169,
            "question_id": 2170439,
            "score": 54,
            "tags": [
                "javascript",
                "jquery",
                "widget"
            ],
            "title": "How to embed Javascript widget that depends on jQuery into an unknown environment"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>V8 is easy to build and does not come with the Java VM overhead from Mozilla's standalone Javascript interpreter. Luckily, V8 ships with code for building a console. Here is how to build this:</p>\n\n<pre>\n$> svn co http://v8.googlecode.com/svn/trunk v8-trunk\n...\n$> cd v8-trunk\n$> scons\n$> g++ ./samples/shell.cc -o v8-shell -I include libv8.a \n</pre>\n\n<p>Now, we have a standalone binary called <code>v8-shell</code>.</p>\n\n<p>Running the console:</p>\n\n<pre>\n$> ./v8-shell \nV8 version 2.0.2\n> var x = 10;\n> x\n10\n> function foo(x) { return x * x; }\n> foo\nfunction foo(x) { return x * x; }\n> quit()\n</pre>\n\n<p>Executing Javascript from the command line:</p>\n\n<pre>\n$> ./v8-shell -e 'print(\"10*10 = \" + 10*10)'\n10*10 = 100\n</pre>\n\n<p>Many more features are documented in the help:</p>\n\n<pre>\n$> ./v8-shell --help\nUsage:\n...\n</pre>\n",
                    "is_accepted": true,
                    "score": 90
                },
                {
                    "body": "<p>To build the developer console, rather than the example 'shell' toy application, copy-paste the below commands to your terminal.</p>\n\n<pre><code>sudo apt-get install subversion scons libreadline-dev\nsvn co http://v8.googlecode.com/svn/trunk v8\ncd v8/\nscons console=readline d8\n</code></pre>\n\n<p>These instruction will work for Ubuntu/Debian with a \"generic\" kernel. For other distributions, you will need to replace the apt-get command with whatever package tool you have available. On 64-bit systems you may need to add <code>arch=x64</code>. The <code>console=readline</code> option enables the <a href=\"http://www.gnu.org/s/readline/\">readline</a> system, to make it feel a bit more like a standard shell. </p>\n\n<p>More complete documentation here:\n<a href=\"http://code.google.com/apis/v8/build.html\">http://code.google.com/apis/v8/build.html</a></p>\n\n<hr>\n\n<p>Note: </p>\n\n<p><img src=\"http://i.stack.imgur.com/3XGMU.png\" alt=\"enter image description here\"></p>\n\n<p>See also: <a href=\"http://code.google.com/p/v8/wiki/BuildingWithGYP\">Building v8 with GYP</a></p>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>On Mac OS X be sure to have <a href=\"http://mxcl.github.com/homebrew\"><code>brew</code></a> installed. Then just run the command <code>(sudo) brew install v8</code>, depending on your machine this may take some time. To start the V8 console, just run <code>v8</code> - Voil\u00e0!</p>\n\n<p><strong>Tip:</strong> To quit the console, just run <code>quit()</code> and dont forget the parentheses!</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>If you use ArchLinux, you can use <code>pacman -S v8</code> to install it.\nThen use <code>d8</code> to start it in your shell.\nEnjoy it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>How about running V8 Javascript via command line using <a href=\"http://nodejs.org/\">node.js</a>?</p>\n\n<p>node.js uses v8 as it's engine and adds a lot of functionality on top of it.</p>\n\n<hr>\n\n<p>For example on Mac OSX if you have <a href=\"http://nodejs.org/\">Homebrew</a> installed, simply issue:</p>\n\n<pre><code>    $ brew install node\n    $ node\n    &gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>If you're planning to embed V8, then by all means build it and play with \"d8\".</p>\n\n<p>If on the other hand, you do not plan to extend V8 or treat it as optional,\nthen just use Node.JS.  Don't bother with pure V8.</p>\n\n<p>Node.js has truly rich I/O, extensions, libraries (like Perl CPAN, Python Eggs, Ruby Gems), and community.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>After following the build instructions (<a href=\"https://developers.google.com/v8/build\" rel=\"nofollow\">Google's V8 Build Docs</a>) for your system;</p>\n\n<pre><code>[v8 directory]$ cd out/native\n[v8 directory]$ ./shell (sample shell)\n[v8 directory]$ ./d8 (console: dumb)\n</code></pre>\n\n<p>I created an alias in my .bash_profile to facilitate invocation of the shell.</p>\n\n<pre><code>alias v8='/Volumes/Dev/GitHub/v8/out/native/shell'\n</code></pre>\n\n<p>Typing v8 at the CLI (in a new Terminal or shell -- to reload your bash profile) yields the v8 shell. JavaScript at the command prompt! :)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think this might have changed. I <a href=\"https://developers.google.com/v8/build\" rel=\"nofollow\">read the manual</a> and build v8 like this:</p>\n\n<pre><code>moose@pc08$ svn co http://v8.googlecode.com/svn/trunk v8-trunk\nmoose@pc08$ cd v8-trunk\nmoose@pc08$ make dependencies\nmoose@pc08$ make ia32.release\n</code></pre>\n\n<p>added <code>export PATH=${PATH}:/home/moose/Downloads/v8-trunk/out/ia32.release</code> to my .bashrc</p>\n\n<pre><code>moose@pc08 ~ $ source ~/.bashrc\nmoose@pc08 ~ $ d8 A_tic_tac_toe_Tomek.js &lt; A-small-practice.in\n</code></pre>\n\n<p>(With javascript from <a href=\"http://www.go-hero.net/jam/13/name/aditsu\" rel=\"nofollow\">aditsu</a> and A-small-practice.in from Google Code Jam)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want to run a Javascript console on top of V8. How do I do this?</p>\n",
            "last_activity_date": 1379707000,
            "question_id": 1802478,
            "score": 90,
            "tags": [
                "javascript",
                "v8"
            ],
            "title": "Running V8 Javascript Engine Standalone"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>EDIT: Google Chrome now supports FileReader as of version 7. However, this workaround is still necessary for drag-and-drop uploading in Safari 5 (Safari 6 has not been released yet).</p>\n\n<p>One possibility is to use <a href=\"http://playground.justswell.org/drag-and-drop-file-upload.html\">the method used in SwellJS</a>:</p>\n\n<p>Use <code>&lt;input type=\"file\" multiple=\"multiple\" /&gt;</code> like so:</p>\n\n<pre><code>&lt;form method=\"post\" enctype=\"multipart/form-data\" id=\"uploadform\"&gt;\n  &lt;input type=\"file\" name=\"dragupload[]\" multiple=\"multiple\"\n  onchange=\"if (this.value) document.getElementById('uploadform').submit();\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>The input element can be styled to have <code>opacity: 0</code> and positioned (absolutely) over an element that accepts uploads. The entire form can be placed inside an <code>iframe</code> for \"pseudo-Ajax\" like behavior. And the upload element can be a layer hidden until something is dragged over it.</p>\n\n<p>Such an iframe would look like:</p>\n\n<pre><code>&lt;script&gt;\n&lt;!--\n  var entered = 0;\n--&gt;\n&lt;/script&gt;\n&lt;body ondragenter=\"entered++;document.getElementById('uploadelement').style.display='block'\" ondragleave=\"entered--;if (!entered) document.getElementById('uploadelement').style.display='none'\"&gt;\n  &lt;form method=\"post\" enctype=\"multipart/form-data\" id=\"uploadform\"&gt;\n    Things can be dragged and dropped here!\n    &lt;input type=\"file\" id=\"uploadelement\" name=\"dragupload[]\" multiple=\"multiple\" onchange=\"if (this.value) { document.getElementById('uploadform').submit(); }\" style=\"display:none;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;\" /&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>This should only be done when Safari or Chrome is detected (since other browsers don't support drag-and-drop onto <code>&lt;input type=\"file\" /&gt;</code> elements), and can be used in combination with the HTML5 <code>drop</code> event for Firefox 3.6+.</p>\n\n<p>I can't tell if this is the method Gmail uses, but it certainly works about as well.</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>I've got something working in Chrome after much, much, much detective work. This <em>only</em> works on Chrome. On Safari, it freezes. On Firefox, it won't let me drop the file. IE opens the dropped file instead. Even in Chrome, the drag and drop only works once, for some reason, after which you have to refresh the page. (A possible reason for this is that something is wrong with the event handlers.)</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n    &lt;head&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            window.onload = function () {\n                var div = document.getElementById('div');\n                div.ondragenter = div.ondragover = function (e) {\n                    e.preventDefault();\n                    e.dataTransfer.dropEffect = 'copy';\n                    return false;\n                }\n                div.ondrop = function (e) {\n                    for (var i = 0; i &lt; e.dataTransfer.files.length; i++) { // e.dataTransfer is a DataTransfer object (https://developer.mozilla.org/En/DragDrop/DataTransfer), e.dataTransfer.files is a FileList object (https://developer.mozilla.org/en/DOM/FileList)\n                        var file = e.dataTransfer.files[i]; // file is a File object (https://developer.mozilla.org/en/DOM/File)\n\n                        var xhr = new XMLHttpRequest;\n                        xhr.open('post', 'handler.php', true);\n                        xhr.onreadystatechange = function () {\n                            if (this.readyState != 4)\n                                return;\n                            document.body.innerHTML += '&lt;pre&gt;' + this.responseText + '&lt;/pre&gt;';\n                        }\n                        xhr.setRequestHeader('Content-Type', 'multipart/form-data');\n                        xhr.setRequestHeader('X-File-Name', file.fileName);\n                        xhr.setRequestHeader('X-File-Size', file.fileSize);\n                        xhr.send(file); // For some reason sending the actual File object in Chrome works?\n                    }\n\n                    e.preventDefault();\n                    return false;\n                }\n            }\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div id=\"div\" style=\"width: 100%; height: 200px; border: 1px solid blue\"&gt;Drop here&lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>handler.php:</p>\n\n<pre><code>    // This is not a true file upload. Instead, it sends the raw data directly.\n    echo htmlentities(file_get_contents('php://input'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You wouldn't need to use an iframe to do pseudo ajax uploading. Chrome and Safari both support <a href=\"http://www.w3.org/TR/2009/WD-XMLHttpRequest2-20090820/#the-upload-attribute\" rel=\"nofollow\">XHR2 uploads</a> with progress events so you can do progress bars etc.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You may be interested on something more technology- and browser-compliant.</p>\n\n<p>Seems to me that <a href=\"http://www.plupload.com/example_all_runtimes.php\">Plupload</a> does it well, supporting the following features:</p>\n\n<ul>\n<li>Chunking</li>\n<li><strong>Drag/Drop</strong></li>\n<li>PNG Resize</li>\n<li>JPEG Resize</li>\n<li>Type filtering</li>\n<li>Stream upload</li>\n<li>Multipart upload</li>\n<li>File size restriction</li>\n<li>Upload progress</li>\n</ul>\n\n<p>for most of the following technologies:</p>\n\n<ul>\n<li>Flash</li>\n<li>Gears</li>\n<li><strong>HTML 5</strong></li>\n<li>Silverlight</li>\n<li>BrowserPlus</li>\n</ul>\n\n<p>And yes, <a href=\"http://www.plupload.com/example_all_runtimes.php\">since 2010.05.27</a>, it supports drag/drop for HTML5 running on Chrome beta.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>For our own application, we do drag and drop for FireFox only. We revert to the traditional iframe upload for others. In order to detect that drag and drop is supported, we run this code:</p>\n\n<pre><code>if (typeof(window.File) == 'object' &amp;&amp; typeof(window.FileReader) == 'function' &amp;&amp; typeof(window.FileList) == 'object') {\n   // DnD is supported!\n}\n</code></pre>\n\n<p>Hope this is helpful to some.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use html5uploader library: <a href=\"http://code.google.com/p/html5uploader/\" rel=\"nofollow\">http://code.google.com/p/html5uploader/</a></p>\n\n<p>It works with Firefox, Safari and Chrome.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>you can use FormData to store the File, then upload it. e.g  </p>\n\n<pre><code>function setUp(){\n  var dropContainer = document.getElementById(\"container\");\n  dropContainer.addEventListener(\"drop\",dropHandler,false);\n  dropContainer.addEventListener(\"dragenter\", function(event){event.stopPropagation();event.preventDefault();}, false);\n  dropContainer.addEventListener(\"dragover\", function(event){event.stopPropagation();event.preventDefault();}, false);\n  dropContainer.addEventListener(\"drop\", dropHandler, false);\n  getResult()\n}\nfunction dropHandler(event){\n  var files = event.dataTransfer.files;\n  var count = files.length;\n  form = new FormData();\n  for(var i= 0;i&lt;count;i++){\n    form.append(\"file\"+i, files[i]);\n  }\n  sendData();\n}\nfunction sendData(){\n  var xhr = new XMLHttpRequest();  \n  xhr.upload.addEventListener(\"progress\", uploadProgress, false);  \n  xhr.addEventListener(\"load\", uploadComplete, false);\n  xhr.addEventListener(\"error\", uploadFailed, false);  \n  xhr.open(\"POST\", \"/upload\");\n  xhr.send(form);\n  var progressBar = document.getElementById('progressBar');\n  progressBar.style.display = 'block';\n  progressBar.style.width = '0px';\n}\n</code></pre>\n\n<p>the demo is here(http://flexinnerp.appspot.com/) \njust enjoy it :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The latest browser support file upload well.\nYou could use:</p>\n\n<pre><code>xhr = new XMLHttpRequest();     \nxhr.open('POST', targetPHP, true);\nvar formData = new FormData();\nformData.append('upload',file);\nxhr.send(formData);\n</code></pre>\n\n<p>You do not need to set boundary or any head\uff0cjust like this it works fine.\nI tested this code in \nclient:firefox 6.02 and in chrome 13.\nserver:tomcat with \"spring mvc\"</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Set multiple attribute like:</p>\n\n<p>input type=\"file\" name=\"file1\" multiple=\"multiple\" class=\"DropHere\"</p>\n\n<p>and use this CSS DropHere class:</p>\n\n<pre><code>.DropHere\n{\n    height: 100px;\n    padding: 3px;\n    border: 2px dashed #555;\n    border-radius: 5px;\n    cursor: default;\n    background-image:url(\"data:image/svg+xml;utf8, &lt;svg xmlns='http://www.w3.org/2000/svg' version='1.1' height='100px' width='220px'&gt;&lt;text x='55' y='75' font-size='20'&gt;or drop files here&lt;/text&gt;&lt;/svg&gt;\");\n    background-repeat: no-repeat;\n}\n</code></pre>\n\n<p>The file field will now look like:</p>\n\n<p><img src=\"http://i.stack.imgur.com/YudI9.png\" alt=\"The file will now look like\"></p>\n\n<p>If you use asp.net you might also like this article I wrote \"Multiple file upload with progress bar and drag and drop\": <a href=\"http://www.codeproject.com/Articles/818561/Multiple-file-upload-with-progress-bar-and-drag-an\" rel=\"nofollow\">http://www.codeproject.com/Articles/818561/Multiple-file-upload-with-progress-bar-and-drag-an</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Drag-and-drop file uploading can be done in Firefox 3.6.</p>\n\n<p><a href=\"http://www.google.com/search?hl=en&amp;q=html5+drag-and-drop+file+uploading+-gmail\">A Google search for <em>html5 drag-and-drop file uploading -gmail</em></a> gives things like:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/2121018/native-drag-drop-file-upload-in-firefox-3-6\">Native Drag + Drop file upload in Firefox 3.6</a></li>\n<li><a href=\"http://www.appelsiini.net/2009/10/html5-drag-and-drop-multiple-file-upload\">http://www.appelsiini.net/2009/10/html5-drag-and-drop-multiple-file-upload</a></li>\n<li><a href=\"http://www.thecssninja.com/javascript/drag-and-drop-upload\">http://www.thecssninja.com/javascript/drag-and-drop-upload</a></li>\n</ul>\n\n<p>All of these guides use <code>FileReader</code> (or the Firefox 3.6's deprecated <code>getAsBinary</code>, which no other browser supports, either).</p>\n\n<p>However, Google recently released an update for Gmail that allowed drag-and-drop file uploading in Chromium as well as Firefox, and <a href=\"http://code.google.com/p/chromium/issues/detail?id=37785\">Chromium does not have <code>FileReader</code></a>. I'm using the latest Chromium nightly, and it can drag-drop upload files, while not supporting <code>FileReader</code>.</p>\n\n<p>I've seen someone mention that drag-drop uploading can be possible by dragging onto an <code>&lt;input type=\"file\" /&gt;</code>, but that can only support one file at a time, while Gmail's uploader can handle multiple files being dragged onto it, so that's clearly not what they're doing.</p>\n\n<p>So the question is, how do they do it? How do you support Chromium for HTML5 file uploading? In addition, can you support Safari?</p>\n",
            "last_activity_date": 1410770092,
            "question_id": 2657653,
            "score": 65,
            "tags": [
                "javascript",
                "ajax",
                "html5"
            ],
            "title": "Drag-and-drop file upload in Google Chrome/Chromium and Safari?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>For dropdown options you probably want something like this:</p>\n\n<pre><code>var conceptName = $('#aioConceptName').find(\":selected\").text();\n</code></pre>\n\n<p>The reason <code>val()</code> doesn't do the trick is because clicking an option doesn't change the value of the dropdown--it just adds the <code>:selected</code> property to the selected option which is a <em>child</em> of the dropdown.</p>\n",
                    "is_accepted": true,
                    "score": 567
                },
                {
                    "body": "<p>I stumbled across this question and developed a more concise version of Elliot BOnneville's answer:</p>\n\n<pre><code>var conceptName = $('#aioConceptName :selected').text();\n</code></pre>\n\n<p>or generically:</p>\n\n<pre><code>$('#id :pseudoclass')\n</code></pre>\n\n<p>This saves you an extra jQuery call, selects everything in one shot, and is more clear (my opinion).</p>\n",
                    "is_accepted": false,
                    "score": 72
                },
                {
                    "body": "<p>Try this for value...</p>\n\n<pre><code>$(\"select#id_of_select_element option\").filter(\":selected\").val();\n</code></pre>\n\n<p>or this for text...</p>\n\n<pre><code>$(\"select#id_of_select_element option\").filter(\":selected\").text();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<pre><code>&lt;select id=\"form-s\" multiple=\"multiple\"&gt;\n    &lt;option selected&gt;city1&lt;/option&gt;\n    &lt;option selected value=\"c2\"&gt;city2&lt;/option&gt;\n    &lt;option value=\"c3\"&gt;city3&lt;/option&gt;\n&lt;/select&gt;   \n&lt;select id=\"aioConceptName\"&gt;\n    &lt;option value=\"s1\" selected &gt;choose io&lt;/option&gt;\n    &lt;option value=\"s2\"&gt;roma &lt;/option&gt;\n    &lt;option value=\"s3\"&gt;totti&lt;/option&gt;\n&lt;/select&gt;\n&lt;select id=\"test\"&gt;\n    &lt;option value=\"s4\"&gt;paloma&lt;/option&gt;\n    &lt;option value=\"s5\" selected &gt;foo&lt;/option&gt;\n    &lt;option value=\"s6\"&gt;bar&lt;/option&gt;\n&lt;/select&gt;\n&lt;script&gt;\n$('select').change(function() {\n    var a=$(':selected').text(); // \"city1city2choose iofoo\"\n    var b=$(':selected').val();  // \"city1\" - selects just first query !\n    //but..\n    var c=$(':selected').map(function(){ // [\"city1\",\"city2\",\"choose io\",\"foo\"]\n        return $(this).text();\n    }); \n    var d=$(':selected').map(function(){ // [\"city1\",\"c2\",\"s1\",\"s5\"]\n        return $(this).val();\n    });\n    console.log(a,b,c,d);\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Have you considered using plain old javascript?</p>\n\n<pre><code>var box = document.getElementById('aioConceptName');\n\nconceptName = box.options[box.selectedIndex].text;\n</code></pre>\n\n<p>See also <a href=\"http://stackoverflow.com/questions/4641962/getting-an-option-text-value-with-javascript\">Getting an option text/value with javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>If you are in event context, in jQuery, you can retrieve the selected option element using :<br>\n<code>$(this).find('option:selected')</code> like this : </p>\n\n<pre><code>$('dropdown_selector').change(function() {\n    var option = $(this).find('option:selected');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p><strong>Set the values for each of the <code>&lt;option&gt;</code>s</strong></p>\n\n<p>The reason <code>.val()</code> didn't work is because <code>.val()</code> returns the <code>value</code> attribute. So to have it properly work, the <code>value</code> attributes must be set on each <code>&lt;option&gt;</code></p>\n\n<pre><code>&lt;select id=\"aioConceptName\"&gt;\n    &lt;option value=\"0\"&gt;choose io&lt;/option&gt;\n    &lt;option value=\"1\"&gt;roma&lt;/option&gt;\n    &lt;option value=\"2\"&gt;totti&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>Doing this allows you to do <code>$('#aioConceptName').val()</code> instead of all this <code>:selected</code> voodoo being suggested by others.</p>\n",
                    "is_accepted": false,
                    "score": 57
                },
                {
                    "body": "<pre><code>$('#aioConceptName option:selected').val();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>For anyone who found out that best answer don't work.</p>\n\n<p>Try to use:</p>\n\n<pre><code>  $( \"#aioConceptName option:selected\" ).attr(\"value\");\n</code></pre>\n\n<p>Works for me in recent projects so it is worth to look on it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Using jQuery, just add a <code>change</code> event and get selected value or text within that handler.</p>\n\n<p>If you need selected text, please use this code:</p>\n\n<pre><code>$(\"#aioConceptName\").change(function () {\n    alert($(\"#aioConceptName :selected\").text())\n});\n</code></pre>\n\n<p>Or if you need selected value, please use this code:</p>\n\n<pre><code>$(\"#aioConceptName\").change(function () {\n    alert($(\"#aioConceptName :selected\").attr('value'))\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Just this should work:</p>\n\n<pre><code>var conceptName = $('#aioConceptName').val();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use the <a href=\"http://api.jquery.com/val/\" rel=\"nofollow\"><code>jQuery.val()</code></a> function for select elements, too:</p>\n\n<blockquote>\n  <p>The .val() method is primarily used to get the values of form elements\n  such as input, select and textarea. In the case of select elements, it\n  returns <code>null</code> when no option is selected and an array containing the\n  value of each selected option when there is at least one and it is\n  possible to select more because the <code>multiple</code> attribute is present.</p>\n</blockquote>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$(function() {\r\n  $(\"#aioConceptName\").on(\"change\", function() {\r\n    $(\"#debug\").text($(\"#aioConceptName\").val());\r\n  }).trigger(\"change\");\r\n});</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n\r\n&lt;select id=\"aioConceptName\"&gt;\r\n  &lt;option&gt;choose io&lt;/option&gt;\r\n  &lt;option&gt;roma&lt;/option&gt;\r\n  &lt;option&gt;totti&lt;/option&gt;\r\n&lt;/select&gt;\r\n&lt;div id=\"debug\"&gt;&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p></p>Usually I use <code>$(\"#id\").val()</code> to return the value of the selected option , but this time it doesn't work.</p>\nThe selected tag has the id <code>aioConceptName</code></p>\n\n<h3>html code </h3>\n\n<pre><code>&lt;label&gt;Name&lt;/label&gt;\n    &lt;input type=\"text\" name=\"name\" /&gt;\n    &lt;select id=\"aioConceptName\"&gt;\n        &lt;option&gt;choose io&lt;/option&gt;\n        &lt;option&gt;roma&lt;/option&gt;\n        &lt;option&gt;totti&lt;/option&gt;\n    &lt;/select&gt;\n&lt;/label&gt;\n</code></pre>\n",
            "last_activity_date": 1423407007,
            "question_id": 10659097,
            "score": 300,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "jquery get selected option from dropdown"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<pre><code>var intvalue = Math.floor( floatvalue );\nvar intvalue = Math.ceil( floatvalue ); \nvar intvalue = Math.round( floatvalue );\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Math\">Math object reference</a></p>\n",
                    "is_accepted": true,
                    "score": 511
                },
                {
                    "body": "<p>For truncate:</p>\n\n<pre><code>var intvalue = Math.floor(value);\n</code></pre>\n\n<p>For round:</p>\n\n<pre><code>var intvalue = Math.round(value);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Note: You cannot use <code>Math.floor()</code> as a replacement for truncate, because <code>Math.floor(-3.1) = -4</code> and not <code>-3</code> !!</p>\n\n<p>A correct replacement for truncate would be:</p>\n\n<pre><code>function truncate(value)\n{\n    if (_value &lt; 0)\n        return Math.ceil(value);\n\n    return Math.floor(value);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 71
                },
                {
                    "body": "<p>In your case, when you want a string in the end (in order to insert commas), you can also just  use the Number.toFixed() function, however, this will perform rounding.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use the <a href=\"http://www.w3schools.com/jsref/jsref_parseInt.asp\">parseInt</a> method for no rounding.  Be careful with user input due to the 0x (hex) and 0 (octal) prefix options.</p>\n\n<pre><code>var intValue = parseInt(floatValue, 10);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>A double <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Bitwise_Operators#.7E_%28Bitwise_NOT%29\">bitwise not</a> operator can be used to truncate floats.  The other operations you mentioned are available through <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Math/floor\"><code>Math.floor</code></a>, <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Math/ceil\"><code>Math.ceil</code></a>, and <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Math/round\"><code>Math.round</code></a>.</p>\n\n<pre><code>&gt; ~~2.5\n2\n&gt; ~~(-1.4)\n-1\n</code></pre>\n\n<p><a href=\"http://james.padolsey.com/javascript/double-bitwise-not/\">More details courtesy of James Padolsey.</a></p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<h2>Bitwise OR operator</h2>\n\n<p>A bitwise or operator can be used to truncate floating point figures and it works for positives as well as negatives:</p>\n\n<pre><code>function float2int (value) {\n    return value | 0;\n}\n</code></pre>\n\n<p>Results</p>\n\n<pre><code>float2int(3.1) == 3\nfloat2int(-3.1) == -3\nfloat2int(3.9) == 3\nfloat2int(-3.9) == -3\n</code></pre>\n\n<h2>Performance comparison?</h2>\n\n<p>I've created a <a href=\"http://jsperf.com/float-to-int-conversion-comparison\">JSPerf test</a> that compares performance between:</p>\n\n<ul>\n<li><code>Math.floor(val)</code></li>\n<li><code>val | 0</code> <sup>bitwise <strong>OR</strong></sup></li>\n<li><code>~~val</code> <sup>bitwise <strong>NOT</strong></sup></li>\n<li><code>parseInt(val)</code></li>\n</ul>\n\n<p>that only works with positive numbers. In this case you're safe to use bitwise operations well as <code>Math.floor</code> function.</p>\n\n<p>But if you need your code to <strong>work with positives as well as negatives</strong>, then a bitwise operation is the fastest (OR being the preferred one). <a href=\"http://jsperf.com/truncating-decimals\">This other JSPerf test</a> compares the same where it's pretty obvious that because of the additional sign checking <strong>Math is now the slowest</strong> of the four.</p>\n",
                    "is_accepted": false,
                    "score": 123
                },
                {
                    "body": "<p>There are many suggestions here. The bitwise OR seems to be the simplest by far. Here is another short solution which works with negative numbers as well using the modulo operator. It is probably easier to understand than the bitwise OR:</p>\n\n<pre><code>intval = floatval - floatval%1;\n</code></pre>\n\n<p>This method also works with high value numbers where neither '|0' nor '~~' nor '>>0' work correctly:</p>\n\n<pre><code>&gt; n=4294967295;\n&gt; n|0\n-1\n&gt; ~~n\n-1\n&gt; n&gt;&gt;0\n-1\n&gt; n-n%1\n4294967295\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><em><strong>bit shift by 0 which is equivalent to div by 1</em></strong></p>\n\n<pre><code>// &gt;&gt; or &gt;&gt;&gt;\n2.0 &gt;&gt; 0; // 2\n2.0 &gt;&gt;&gt; 0; // 2\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I'd like to convert a float to a whole number in Javascript. Actually, I'd like to know how to do BOTH of the standard conversions: by truncating and by rounding. And efficiently, not via converting to a string and parsing.</p>\n",
            "last_activity_date": 1424976641,
            "question_id": 596467,
            "score": 394,
            "tags": [
                "javascript",
                "syntax"
            ],
            "title": "How do I convert a float to a whole number in Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There are about a hundred terminology issues here, mostly built around someone (not you) trying to make their idea sound like The Best.</p>\n\n<p>All object oriented languages need to be able to deal with several concepts:</p>\n\n<ol>\n<li>encapsulation of data along with associated operations on the data, variously known as data members and member functions, or as data and methods, among other things.</li>\n<li>inheritance, the ability to say that these objects are just like that other set of objects EXCEPT for these changes</li>\n<li>polymorphism (\"many shapes\") in which an object decides for itself what methods are to be run, so that you can depend on the language to route your requests correctly.</li>\n</ol>\n\n<p>Now, as far as comparison:</p>\n\n<p>First thing is the whole \"class\" vs \"prototype\" question.  The idea originally began in Simula, where with a class-based method each class represented a set of objects that shared the same state space (read \"possible values\") and the same operations, thereby forming an equivalence class.  If you look back at Smalltalk, since you can open a class and add methods, this is effectively the same as what you can do in Javascript.</p>\n\n<p>Later OO languages wanted to be able to use static type checking, so we got the notion of a fixed class set at compile time.  In the open-class version, you had more flexibility; in the newer version, you had the ability to check some kinds of correctness at the compiler that would otherwise have required testing.</p>\n\n<p>In a \"class-based\" language, that copying happens at compile time.  In a prototype language, the operations are stored in the prototype data structure, which is copied and modified at run time.  Abstractly, though, a class is still the equivalence class of all objects that share the same state space and methods.  When you add a method to the prototype, you're effectively making an element of a new equivalence class.</p>\n\n<p>Now, why do that?  primarily because it makes for a simple, logical, elegant mechanism at run time.  now, to create a new object, <em>or</em> to create a new class, you simply have to perform a deep copy, copying all the data and the prototype data structure.  You get inheritance and polymorphism more or less for free then: method lookup <em>always</em> consists of asking a dictionary for a method implementation by name.</p>\n\n<p>The reason that ended up in Javascript/ECMA script is basically that when we were getting started with this 10 years ago, we were dealing with much less powerful computers and much less sophisticated browsers.  Choosing the prototype-based method meant the interpreter could be very simple while preserving the desirable properties of object orientation.</p>\n",
                    "is_accepted": true,
                    "score": 88
                },
                {
                    "body": "<p>You should check out a <a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\" rel=\"nofollow\">great book on JavaScript</a> by <a href=\"http://www.crockford.com/\" rel=\"nofollow\">Douglas Crockford</a>. It provides a very good explanation of some of the design decisions taken by JavaScript creators.</p>\n\n<p>One of the important design aspect of JavaScript is its prototypal inheritance system. Objects are first class citizens in JavaScript, so much that regular functions are also implemented as objects ('Function' object to be precise). In my opinion when it was originally designed to run inside a browser, it was meant to be used to create lots of singleton objects. In browser DOM, you find that window, document etc all singleton objects. Also JavaScript is loosely typed dynamic language (as opposed to say Python which is strongly typed, dynamic language), as a result a concept of object extension was implemented through the use of 'prototype' property.</p>\n\n<p>So I think there are some pros for protytype-based OO as implemented in JavaScript:</p>\n\n<ol>\n<li>Suitable in loosely typed environments, no need to define explicit types.</li>\n<li>Makes it incredibly easy to implement singleton pattern (compare JavaScript and Java in this regard, and you'll know what I am talking about).</li>\n<li>Provides ways of applying a method of an object in the context of a different object, adding and replacing methods dynamically from an object etc. (things which are not possible in a strongly typed languages).</li>\n</ol>\n\n<p>Here are some of the cons of prototypal OO:</p>\n\n<ol>\n<li>No easy way of implementing private variables. Its possible to implement private vars using <a href=\"http://www.crockford.com/\" rel=\"nofollow\">Crockford</a>'s wizardry using <a href=\"http://www.crockford.com/javascript/private.html\" rel=\"nofollow\">closures</a>, but its definitely not as trivial as using private variables in say Java or C#.</li>\n<li>I don't know how to implement multiple inheritance (for what its worth) in JavaScript yet.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>A comparison, that is slightly biased towards the prototypes based approach, could be found in the paper - <a href=\"http://www.cs.ucsb.edu/~urs/oocsb/self/papers/self-power.html\">Self: The power of simplicity</a>. The paper makes the following arguments in favor of prototypes:</p>\n\n<p><strong>Creation by copying</strong>. Creating new objects from prototypes is accomplished by\na simple operation, copying, with a simple biological metaphor, cloning. Creating\nnew objects from classes is accomplished by instantiation, which includes the\ninterpretation of format information in a class. Instantiation is\nsimilar to building a house from a plan. Copying appeals to us as a simpler metaphor\nthan instantiation.</p>\n\n<p><strong>Examples of preexisting modules</strong>. Prototypes are more concrete than classes\nbecause they are examples of objects rather than descriptions of format and initialization.\nThese examples may help users to reuse modules by making them easier to\nunderstand. A prototype-based system allows the user to examine a typical representative\nrather than requiring him to make sense out of its description.</p>\n\n<p><strong>Support for one-of-a-kind objects</strong>. Self provides a framework that can easily\ninclude one-of-a-kind objects with their own behavior. Since each object has\nnamed slots, and slots can hold state or behavior, any object can have unique slots\nor behavior. Class-based systems are designed for situations where\nthere are many objects with the same behavior. There is no linguistic support for an\nobject to possess its own unique behavior, and it is awkward (<em>think Singleton pattern</em>) to create a class that is guaranteed to have only one instance. Self suffers from neither of these disadvantages.\nAny object can be customized with its own behavior. A unique object can\nhold the unique behavior, and a separate \"instance\" is not needed.</p>\n\n<p><strong>Elimination of meta-regress</strong>. No object in a class-based system can be self-sufficient;\nanother object (its class) is needed to express its structure and behavior.\nThis leads to a conceptually infinite meta-regress: a <code>point</code> is an instance of class\n<code>Point</code>, which is an instance of metaclass <code>Point</code>, which is an instance of metametaclass\n<code>Point</code>, ad infinitum. On the other hand, in prototype-based systems an object\ncan include its own behavior; no other object is needed to breathe life into it. Prototypes\neliminate meta-regress.</p>\n\n<p><a href=\"http://selflanguage.org/\">Self</a> is probably the first language to implement prototypes. (It also pioneered other interesting technologies like JIT, which later made its way to the JVM. So reading <a href=\"http://www.cs.ucsb.edu/~urs/oocsb/self/papers/papers.html\">the other Self papers</a> should also be instructive). </p>\n",
                    "is_accepted": false,
                    "score": 19
                }
            ],
            "body": "<p>In JavaScript, every object is at the same time an instance and a class. To do inheritance, you can use any object instance as a prototype.</p>\n\n<p>In Python, C++, etc.. there are classes, and instances, as separate concepts. In order to do inheritance, you have to use the base class to create a new class, which can then be used to produce derived instances.</p>\n\n<p>Why did JavaScript go in this direction (prototype-based object orientation)? what are the advantages (and disadvantages) of prototype-based OO with respect to traditional, class-based OO?</p>\n",
            "last_activity_date": 1423304696,
            "question_id": 816071,
            "score": 96,
            "tags": [
                "javascript",
                "oop",
                "design",
                "inheritance",
                "prototype-programming"
            ],
            "title": "prototype based vs. class based inheritance"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>I have recently been through the same dilemma so I am going first give you a few additional things to consider:</p>\n\n<ol>\n<li><p>Everybody does message translation, but doing properly plural forms is hard. Make a list of the languages you expect to support (including the future ones) and find out how complex your pluralization will get. If you are certain that you will only do languages with one plural form, most of the libraries will do that.</p></li>\n<li><p>I assume that you have large message catalogs, in multiple languages (if that's not the case then proper i18n is irrelevant I think to your app). These catalogs eventually get complicated and have to be managed by translators. The standard for i18n is <a href=\"http://www.gnu.org/software/gettext/\">gettext</a> (<a href=\"https://developer.mozilla.org/en/gettext\">here</a> for a short summary). All the tools around to manage translations are done for gettext. Do not have the expectation that your translators are going to manage json files in some obscure format.</p>\n\n<p>So in brief: You will need your library to either load .po or .mo files generated on the server, or have an easy way to convert those on the server to the library's json format. That restricts your choices to those that have translation keys and mechanisms similar to gettext's msgid's. This immediately kicked out for me i18next for instance. Check for the rest.</p></li>\n<li><p>Require.js should not drive your decision. Even if the library is not AMD-compliant you will wrap it and also find a way to async-load your catalog resources.</p></li>\n</ol>\n\n<p>Now, if I had to pick one of the ones you mention, based on completeness, feature-support, speed, ease of use, I wouldn't have to think at all. It would have to be <a href=\"http://slexaxton.github.com/Jed/\">Jed</a>. At the time I made my choice Jed did not exist, and frustrated I wrote a very minimal (&lt;100lines) &amp; fast .po/json loader/parser/message factory. I still use it, it covers my small needs, but for anything larger at last we have proper js i18n, and it's Jed.</p>\n\n<p><strong>UPDATE</strong>\nI saw your updated question concerning shortcomings of Jed with regards to missing keys. I presume this is because typically with gettext <em>all</em> your text corresponds to a key in the <em>default</em> language. Then generated .po/.mo translation files missing the translation simply return the text in the default language.</p>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>Just wanted to chime in as we're working on a similar issue, internationalizing a client-side MVC framework, and are using Dust.js as our templating engine. Our plan is this:</p>\n\n<ol>\n<li>Use RequireJS to define our translations</li>\n<li>Write a custom Dust helper method for translations (for instance called 'translate()')</li>\n<li>Mix this method into our base class for models and views</li>\n<li>require() the given dictionary in the base classes</li>\n</ol>\n\n<p>Since every template in our Backbone project will be using a model (or maybe a view) as it's context, it should have the Dust helper, and translations available.</p>\n\n<p>I stole the idea from this LinkedIn blog post <a href=\"http://engineering.linkedin.com/frontend/leaving-jsps-dust-moving-linkedin-dustjs-client-side-templates\" rel=\"nofollow\">Leaving JSPs in the dust: moving LinkedIn to dust.js client-side templates</a>, and I'm currently watching the LinkedIn github repos to see if they end up writing something similar: <a href=\"https://github.com/linkedin/dustjs-helpers/\" rel=\"nofollow\">LinkedIn/dust-helpers</a></p>\n\n<p>Not really sure how it's going to work out, but it seems cleaner since we'd just be leveraging the existing require/dust libs.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can also try Wikimedia's jquery.i18n (not related to Dave Perrett's jquery-i18n):\n<a href=\"https://github.com/wikimedia/jquery.i18n\" rel=\"nofollow\">https://github.com/wikimedia/jquery.i18n</a></p>\n\n<p>In addition to parameter replacement and multiple plural forms, it has support for gender a rather unique feature of custom grammar rules that some languages need. It's basically a version of the code that makes Wikipedia internationalized, but without any dependencies except jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The need for I18n often also means clients from remote locations with low bandwidth, latencies, etc. Therefore in this context it is worth to have a sharp look at the number and size of your requests to keep loading times bearable. The user just expects to read texts in his language so from his perspective some I18n library does not bring any application functionality - it's just some component that bloats the system and delays page loading. This considerations led to this small example that covers the basic requirements of localized web applications. It only needs jQuery - nothing else:</p>\n\n<p><a href=\"http://kirox.de/util/J42R/test.html\">J42R Demo Application</a></p>\n\n<p>Features:</p>\n\n<ul>\n<li>works in statically or dynamically created content</li>\n<li>switch languages without reloading the page</li>\n<li>load language resources on demand or preload all resources at page loading</li>\n<li>set language in javascript, cookie, url parameter or browser settings</li>\n<li>JSON resource bundles</li>\n<li>there is also a good <a href=\"http://kirox.de/util/J42R/\">Editor/Translator</a> for creating resource objects</li>\n<li>displays keys when translation is not present</li>\n<li>quite small (look at the page source)</li>\n</ul>\n\n<p>Create JSON files for each language: ./I18N/&lt;LANGUAGE_CODE&gt; (i.E. ./I18N/en):</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>{\n    \"path\": {\n        \"to\": {\n            \"message\": \"this is the message!\"\n        }\n    }\n}\n</code></pre>\n\n<p>In your HTML add class I18N for each text-only element you want to translate:</p>\n\n<pre><code>&lt;span class=\"I18N\"&gt;path.to.message&lt;/span&gt;\n</code></pre>\n\n<p>finally start the translator:</p>\n\n<pre><code>&lt;script&gt;J42R.t()&lt;/script&gt;\n</code></pre>\n\n<p>It will:</p>\n\n<ul>\n<li>detect the language</li>\n<li>load the resource file</li>\n<li>replace your keys</li>\n</ul>\n\n<p>It does not handle things like pluralization, number translation, date formatting, etc. You may consider to use symbols instead of language in some cases like</p>\n\n<p><b>&#x2709;(2)</b></p>\n\n<p>instead of</p>\n\n<p><b>\"You have two new messages!\"</b></p>\n\n<p>In the same way using a uniform international date format like the <a href=\"http://www.w3.org/QA/Tips/iso-date\">ISO Standard</a> instead of dozens of local variants could save you a lot of trouble.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>There is now also a i18n plugin for require.js itself: <a href=\"https://github.com/requirejs/i18n\" rel=\"nofollow\">https://github.com/requirejs/i18n</a>\nI used it with great success. Make sure to check the <a href=\"http://requirejs.org/docs/api.html#i18n\" rel=\"nofollow\">documentation</a>.</p>\n\n<p>Basically what you need to do is add i18n to require.js config (coffeescript)</p>\n\n<pre><code>require.config\n  config:\n    i18n:\n      locale: \"en\"\n\n  paths:\n    text: \"lib/requirejs/text/2.0.3\"\n    i18n: \"lib/requirejs/i18n/2.0.1\"\n</code></pre>\n\n<p>Then somewhere in your project you have a <code>nls</code> folder, inside is your <code>Locales.coffee</code> file.</p>\n\n<pre><code>define\n  \"root\":\n    \"topmenu\":\n      \"load\": \"Load\"\n      \"save\": \"Save\"\n      # ...\n\n\n  # activate additional languages here   \n  \"de\": true\n</code></pre>\n\n<p>and then you make a subfolder for each language, e.g. <code>de</code> and inside each folder is another <code>Locales.coffee</code> but now without the <code>root</code> element:</p>\n\n<pre><code># de\ndefine\n  \"topmenu\":\n    \"load\": \"Laden\"\n    \"save\": \"Speichern\"\n</code></pre>\n\n<p>Then you load the Locales via require.js like this</p>\n\n<pre><code>Locales = require \"i18n!./nls/Locales\"\n</code></pre>\n\n<p>and pass them in your view template:</p>\n\n<pre><code>@$el.html @template\n  locales: Locales\n</code></pre>\n\n<p>and inside your template you'd use:</p>\n\n<pre><code>&lt;li&gt;&lt;span class=\"text\"&gt;{{locales.topmenu.load}}&lt;/span&gt;&lt;/li&gt;\n&lt;li&gt;&lt;span class=\"text\"&gt;{{locales.topmenu.save}}&lt;/span&gt;&lt;/li&gt;\n</code></pre>\n\n<p>All in all quite easy and you can just add new languages by translating your root Locals file. Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here's a real easy and lightweight one, but suited me nicely for my purposes... Dynamically loads resources files, and can automatically execute phrase translations from declarative content (as well as in JS):</p>\n\n<p><a href=\"https://github.com/barkgolgafrincham/bbl\" rel=\"nofollow\">https://github.com/barkgolgafrincham/bbl</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Mozilla has a good series on localization with NodeJs and its libraries that are client/server agnostic.</p>\n\n<p><a href=\"https://hacks.mozilla.org/2013/04/localize-your-node-js-service-part-1-of-3-a-node-js-holiday-season-part-9/\" rel=\"nofollow\">https://hacks.mozilla.org/2013/04/localize-your-node-js-service-part-1-of-3-a-node-js-holiday-season-part-9/</a>\n<a href=\"https://hacks.mozilla.org/2013/04/localization-community-tools-process-part-2-of-3-a-node-js-holiday-season-part-10/\" rel=\"nofollow\">https://hacks.mozilla.org/2013/04/localization-community-tools-process-part-2-of-3-a-node-js-holiday-season-part-10/</a>\n<a href=\"https://hacks.mozilla.org/2013/04/localization-in-action-part-3-of-3-a-node-js-holiday-season-part-11/\" rel=\"nofollow\">https://hacks.mozilla.org/2013/04/localization-in-action-part-3-of-3-a-node-js-holiday-season-part-11/</a></p>\n\n<p>and the client/node library github page can be found here.</p>\n\n<p><a href=\"https://github.com/mozilla/i18n-abide/blob/master/docs/API.md\" rel=\"nofollow\">https://github.com/mozilla/i18n-abide/blob/master/docs/API.md</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Tutorial for i18n and pluralization</strong></p>\n\n<p>I've been using Polyglot developed by Airbnb for my backbone Application. It's compatible with require.js, implements a really flexible pluralization and give you the chance to modify it yourself!</p>\n\n<p>I wrote a blog article about it that you can find <a href=\"http://www.tipsfromsiliconvalley.com/2013/09/07/internationalization-i18n-of-a-backbone-js-application-using-polyglot/\" rel=\"nofollow\">there</a>. Hope that will be useful for people looking to internationalize their app!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would recommend using <a href=\"http://l10ns.org\" rel=\"nofollow\">l10ns</a>. For any i18n related project you need the following: </p>\n\n<ol>\n<li>A good storage system that stores localization string. </li>\n<li>A good localization format that can handle complex formatting and not just simple strings. And by complex formatting I mean a format that can handle plural formatting, genus/context based formatting, number formatting, date formatting etc.</li>\n</ol>\n\n<p>There are very few tools out there that handles both of these points. The most common solution is to use gettext together with <code>xgettext</code>. <code>Xgettext</code> is a tool that traverses your source code to sync localization keys between your source code and localization storage. Though gettext is not so good at handling point 2. For instance you can't format a string with two plural words. So strings such as <code>I like 2 cats and 1 dog</code> is very hard to format. Plural formatting is a very complex problem to solve and have a lot of edge cases. Let say that instead of liking just two cats we like 2000. The correct formatted string would be <code>I like 2,000 cats and 1 dog</code>. Did you notice the <code>,</code> in <code>2,000</code>?. So in order to use gettext's plural solution correctly we also need to use an external library for handling number formatting.</p>\n\n<p>So for point 2, having a good localization format. I find <a href=\"http://l10ns.org/docs.html#messageformat\" rel=\"nofollow\">ICU's MessageFormat</a> handle this the best. It handles the edge cases with plural formatting mentioned above. It also handles a lot of other types of complex formatting. Such as genus context, ordinal formatting, number formatting and date formatting etc.</p>\n\n<p>One tool that supports <a href=\"http://l10ns.org/docs.html#messageformat\" rel=\"nofollow\">ICU's MessageFormat</a> and have a storage system built in is <a href=\"http://l10ns.org\" rel=\"nofollow\">L10ns</a>. It also supports <code>Xgettext</code>'s workflow. You write your source code and then you sync your localization keys.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I haven't looked deeply into the matter, so I can't really tell how this compares with the others already mentioned above, but there is the up and coming <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"nofollow\">JavaScript Internationalization API</a>, which is an ECMAScript standard.</p>\n\n<p>Here is the <a href=\"http://www.ecma-international.org/ecma-402/1.0/\" rel=\"nofollow\">complete spec</a> or a <a href=\"https://hacks.mozilla.org/2014/12/introducing-the-javascript-internationalization-api/\" rel=\"nofollow\">writeup</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you want a hosted service that does translations, pluralization, variable detection, content detection, management, and translation.</p>\n\n<p>Check out Localize.js</p>\n\n<p><a href=\"https://localizejs.com/\" rel=\"nofollow\">https://localizejs.com/</a></p>\n\n<p>Feel free to email me @ support@localizejs.com if you have any questions</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>We are currently creating a JavaScript application with backbone.js,\nand we need it translated or at least to support internationalization (I18n) in the future.</p>\n\n<p>I've been looking around and found many libraries that help; Some are fairly simple where others seem overly complex. I found these in the past few hours:</p>\n\n<ul>\n<li><a href=\"http://i18next.com/\">i18next.js</a></li>\n<li><a href=\"https://github.com/jpjoyal/jsperanto\">jsperanto.js</a></li>\n<li><a href=\"http://slexaxton.github.com/Jed/\">jed.js</a></li>\n<li><a href=\"https://github.com/SlexAxton/messageformat.js\">messageformat.js</a></li>\n<li><a href=\"http://recursive-design.com/projects/jquery-i18n/\">jquery.i18n plugin</a></li>\n<li><a href=\"http://airbnb.github.io/polyglot.js/\">polyglot.js</a></li>\n</ul>\n\n<p>Are there some blogs or sites that compare such frameworks?\nI would like to see if others already pointed out the pluses or pitfalls on any of these libraries.</p>\n\n<p>We created our app module based on <a href=\"http://requirejs.org/\">Require.js</a> so if it has module support, that's definitely a plus.</p>\n\n<p>Another requirement would be setting the locale after initialization, after we fetch the data from a webservice. We can't store static JSON files, except maybe for a default language, with the app. The translations come from a database and need to be sent to the app via a webservice, so we need to set the localization data dynamically instead of through JSON files.  This is supported at least in Jed and i18next and jsperanto, but most likely also in others.  In any case the app must never be blocked from execution.</p>\n\n<p>I'm asking for help deciding which library suits best.</p>\n\n<hr>\n\n<p>Something I noticed that is already missing in Jed, is providing a graceful alternative when a translation is not present in the locale dictionary. Jed just throws an error, something I find disturbing.</p>\n\n<p>I prefer a cleaner way of handling missing translations, either provide a default string, print the key back to the screen. Additionally, but definitely not required, one could have the feature like i18next has, to post missing translations to a webservice. Though we won't need this, it is a nice feature.</p>\n",
            "last_activity_date": 1425594588,
            "question_id": 9640630,
            "score": 95,
            "tags": [
                "javascript",
                "internationalization",
                "backbone.js",
                "requirejs"
            ],
            "title": "JavaScript I18n (internationalization) frameworks/libraries for client-side use?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>have you thought about an rgb > hsl conversion? then just move the Luminosity up and down? thats the way I would go.</p>\n\n<p>A quick look for some algorithms got me the following sites.</p>\n\n<p>PHP:\n<a href=\"http://serennu.com/colour/rgbtohsl.php\" rel=\"nofollow\">http://serennu.com/colour/rgbtohsl.php</a></p>\n\n<p><strike>\nJavascript:\n<a href=\"http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\" rel=\"nofollow\">http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript</a></strike></p>\n\n<p><strong>EDIT</strong> the above link is no longer valid. You can view git hub for the <a href=\"https://github.com/mjijackson/mjijackson.github.com/blob/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.txt\" rel=\"nofollow\">page source</a> or the <a href=\"https://gist.github.com/mjijackson/5311256\" rel=\"nofollow\">gist</a></p>\n\n<p>Alternatively another StackOverflow <a href=\"http://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion\">question</a> might be a good place to look.</p>\n\n<hr>\n\n<p>Even though this is not the right choice for the OP the following is an approximation of the code I was originally suggesting. (Assuming you have rgb/hsl conversion functions)</p>\n\n<pre><code>var SHADE_SHIFT_AMOUNT = 0.1; \n\nfunction lightenShade(colorValue)\n{\n    if(colorValue &amp;&amp; colorValue.length &gt;= 6)\n    {\n        var redValue = parseInt(colorValue.slice(-6,-4), 16);\n        var greenValue = parseInt(colorValue.slice(-4,-2), 16);\n        var blueValue = parseInt(colorValue.slice(-2), 16);\n\n        var hsl = rgbToHsl(redValue, greenValue, blueValue);\n        hsl[2]= Math.min(hsl[2] + SHADE_SHIFT_AMOUNT, 1);\n        var rgb = hslToRgb(hsl[0], hsl[1], hsl[2]);\n        return \"#\" + rgb[0].toString(16) + rgb[1].toString(16) + rgb[2].toString(16);\n    }\n    return null;\n}\n\nfunction darkenShade(colorValue)\n{\n    if(colorValue &amp;&amp; colorValue.length &gt;= 6)\n    {\n        var redValue = parseInt(colorValue.slice(-6,-4), 16);\n        var greenValue = parseInt(colorValue.slice(-4,-2), 16);\n        var blueValue = parseInt(colorValue.slice(-2), 16);\n\n        var hsl = rgbToHsl(redValue, greenValue, blueValue);\n        hsl[2]= Math.max(hsl[2] - SHADE_SHIFT_AMOUNT, 0);\n        var rgb = hslToRgb(hsl[0], hsl[1], hsl[2]);\n        return \"#\" + rgb[0].toString(16) + rgb[1].toString(16) + rgb[2].toString(16);\n    }\n    return null;\n}\n</code></pre>\n\n<p>This assumes:</p>\n\n<ol>\n<li>You have functions <code>hslToRgb</code> and <code>rgbToHsl</code>.</li>\n<li>The parameter <code>colorValue</code> is a string in the form <strong>#RRGGBB</strong> </li>\n</ol>\n\n<p>Although if we are discussing css there is a syntax for specifying <a href=\"http://caniuse.com/css3-colors\" rel=\"nofollow\">hsl/hsla</a> for IE9/Chrome/Firefox. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I tried your function and there was a little bug: If some final 'r' value is 1 digit only, the result comes up like: 'a0a0a' when the right value is '0a0a0a', for example.\nI just quick-fixed it by adding this instead of your return:</p>\n\n<pre><code>var rStr = (r.toString(16).length &lt; 2)?'0'+r.toString(16):r.toString(16);\nvar gStr = (g.toString(16).length &lt; 2)?'0'+g.toString(16):g.toString(16);\nvar bStr = (b.toString(16).length &lt; 2)?'0'+b.toString(16):b.toString(16);\n\nreturn (usePound?\"#\":\"\") + rStr + gStr + bStr;\n</code></pre>\n\n<p>Maybe it's not so nice but it do the work. Great function, BTW. Just what I needed. :)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I made a solution that works very nice for me:</p>\n\n<pre><code>function shadeColor(color, percent) {\n\n    var R = parseInt(color.substring(1,3),16);\n    var G = parseInt(color.substring(3,5),16);\n    var B = parseInt(color.substring(5,7),16);\n\n    R = parseInt(R * (100 + percent) / 100);\n    G = parseInt(G * (100 + percent) / 100);\n    B = parseInt(B * (100 + percent) / 100);\n\n    R = (R&lt;255)?R:255;  \n    G = (G&lt;255)?G:255;  \n    B = (B&lt;255)?B:255;  \n\n    var RR = ((R.toString(16).length==1)?\"0\"+R.toString(16):R.toString(16));\n    var GG = ((G.toString(16).length==1)?\"0\"+G.toString(16):G.toString(16));\n    var BB = ((B.toString(16).length==1)?\"0\"+B.toString(16):B.toString(16));\n\n    return \"#\"+RR+GG+BB;\n}\n</code></pre>\n\n<p>Example Lighten:</p>\n\n<pre><code>shadeColor(\"#63C6FF\",40);\n</code></pre>\n\n<p>Example Darken:</p>\n\n<pre><code>shadeColor(\"#63C6FF\",-40);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>After some pondering... I decided to answer my own question. A year and a half later. This was truly an adventure with ideas from several helpful users, and I thank you all! This one is for the team! While its not necessarily the answer I was looking for.  Because if what James Khoury is saying is true, then there is no true hex math in javascript, I have to use decimals, this double conversion is necessary. If we make this assumption, then this is probably the fastest way I've seen (or can think of) to lighten (add white) or darken (add black) an arbitrary RBG color by percentage. It also accounts for the issues Cool Acid mentioned on his answer to this question (it pads 0s). But this version calls <code>toString</code> only once. This also accounts for out of range (it will enforce 0 and 255 as limits).</p>\n\n<p>But beware, the color input has to be EXACTLY 7 characters, like <code>#08a35c</code>. (or 6 if using the top version)</p>\n\n<p>Thanks to Pablo for the inspiration and idea for using percentage. For this I will keep the function name the same! lol! However, this one is different, as it normalizes the percentage to 255 and thus adding the same amount to each color (more white). If you pass in 100 for <code>percent</code> it will make your color pure white. If you pass in 0 for <code>percent</code>, nothing will happen. If you pass in 1 for <code>percent</code> it will add 3 shades to all colors (2.55 shades per 1%, rounded). So your really passing in a percentage of white (or black, use negative). Therefore, this version allows you to lighten pure red (FF0000), for example.</p>\n\n<p>I also used insight from Keith Mashinter's answer to this question: <a href=\"http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\">How to convert decimal to hex in JavaScript?</a></p>\n\n<p>I removed some, seemly, unnecessary parenthesis. (like in the double ternary statement and in crafting G) Not sure if this will mess with the operator precedence in some environments. Tested good in FireFox.</p>\n\n<pre><code>function shadeColor1(color, percent) {  \n    var num = parseInt(color,16),\n    amt = Math.round(2.55 * percent),\n    R = (num &gt;&gt; 16) + amt,\n    G = (num &gt;&gt; 8 &amp; 0x00FF) + amt,\n    B = (num &amp; 0x0000FF) + amt;\n    return (0x1000000 + (R&lt;255?R&lt;1?0:R:255)*0x10000 + (G&lt;255?G&lt;1?0:G:255)*0x100 + (B&lt;255?B&lt;1?0:B:255)).toString(16).slice(1);\n}\n</code></pre>\n\n<p>Or, if you want it to handle the \"#\":</p>\n\n<pre><code>function shadeColor1(color, percent) {  \n    var num = parseInt(color.slice(1),16), amt = Math.round(2.55 * percent), R = (num &gt;&gt; 16) + amt, G = (num &gt;&gt; 8 &amp; 0x00FF) + amt, B = (num &amp; 0x0000FF) + amt;\n    return \"#\" + (0x1000000 + (R&lt;255?R&lt;1?0:R:255)*0x10000 + (G&lt;255?G&lt;1?0:G:255)*0x100 + (B&lt;255?B&lt;1?0:B:255)).toString(16).slice(1);\n}\n</code></pre>\n\n<p>Hows that for two lines of code?</p>\n\n<p>EDIT: Fix B&lt;->G swap goof. Thanks svachalek!</p>\n\n<p><strong>--  UPDATE - Version 2 with Blending --</strong></p>\n\n<p>A little over a year later, again, and its still going. But this time I think its done. Noting the problems mentioned about not using HSL to properly lighten the color. There is a technique that eliminates most of that inaccuracy without having to convert to HSL. The main problem is that a color channel will get fully saturated before the rest of the color. Causing a shift in the hue after that point. I found these questions <a href=\"http://stackoverflow.com/questions/141855/programmatically-lighten-a-color\" title=\"here\">here</a>, <a href=\"http://stackoverflow.com/questions/801406/c-create-a-lighter-darker-color-based-on-a-system-color\" title=\"here\">here</a> and <a href=\"http://stackoverflow.com/questions/97646/how-do-i-determine-darker-or-lighter-color-variant-of-a-given-color/2690026#2690026\" title=\"here\">here</a> which got me on track. <a href=\"http://stackoverflow.com/questions/141855/programmatically-lighten-a-color/141943#141943\">Mark Ransom's post</a> showed me the difference, and <a href=\"http://stackoverflow.com/questions/97646/how-do-i-determine-darker-or-lighter-color-variant-of-a-given-color/2690026#2690026\">Keith's post</a> showed me the way. Lerp is the savior. It is the same as blending colors, so I created a <code>blendColors</code> function as well.</p>\n\n<p>So, without further ado:</p>\n\n<pre><code>function shadeColor2(color, percent) {   \n    var f=parseInt(color.slice(1),16),t=percent&lt;0?0:255,p=percent&lt;0?percent*-1:percent,R=f&gt;&gt;16,G=f&gt;&gt;8&amp;0x00FF,B=f&amp;0x0000FF;\n    return \"#\"+(0x1000000+(Math.round((t-R)*p)+R)*0x10000+(Math.round((t-G)*p)+G)*0x100+(Math.round((t-B)*p)+B)).toString(16).slice(1);\n}\n\nfunction blendColors(c0, c1, p) {\n    var f=parseInt(c0.slice(1),16),t=parseInt(c1.slice(1),16),R1=f&gt;&gt;16,G1=f&gt;&gt;8&amp;0x00FF,B1=f&amp;0x0000FF,R2=t&gt;&gt;16,G2=t&gt;&gt;8&amp;0x00FF,B2=t&amp;0x0000FF;\n    return \"#\"+(0x1000000+(Math.round((R2-R1)*p)+R1)*0x10000+(Math.round((G2-G1)*p)+G1)*0x100+(Math.round((B2-B1)*p)+B1)).toString(16).slice(1);\n}\n</code></pre>\n\n<p>Further ado:</p>\n\n<p>There is no error checking, so values that get passed in which are out of range will cause unexpected results. As well, the color input has to be EXACTLY 7 characters, like <code>#08a35c</code>. But all the other goodies are still here like output range capping (00-FF outputs), padding (0A), handles <code>#</code>, and usable on solid colors, like <code>#FF0000</code>.</p>\n\n<p>This new version of shadeColor takes in a float for its second parameter. For <code>shadeColor2</code> the valid range for the second (percent) parameter is <code>-1.0</code> to <code>1.0</code>.  </p>\n\n<p>And for <code>blendColors</code> the valid range for the third (percent) parameter is <code>0.0</code> to <code>1.0</code>, negatives not allowed here.</p>\n\n<p>This new version is no longer taking in a percentage of pure white, like the old version. Its taking in a percentage of the DISTANCE from the color given to pure white. In the old version, it was easy to saturate the color, and as a result, many colors would compute to pure white when using a sizable percentage. This new way, it only computes to pure white if you pass in <code>1.0</code>, or pure black, use <code>-1.0</code>.</p>\n\n<p>Calling <code>blendColors(color, \"#FFFFFF\", 0.5)</code> is the same as <code>shadeColor2(color,0.5)</code>. As well as, <code>blendColors(color,\"#000000\", 0.5)</code> is the same as <code>shadeColor2(color,-0.5)</code>. Just a touch slower.</p>\n\n<p><code>shadeColor2</code> is slower than <code>shadeColor1</code>, but not by a notable amount. (Wait, thats a self-contradicting statement!)</p>\n\n<p>The accuracy gained can be seen here:</p>\n\n<p><img src=\"http://i.stack.imgur.com/qTwqV.png\" alt=\"\"></p>\n\n<p><strong>-- RGB version --</strong></p>\n\n<pre><code>function shadeRGBColor(color, percent) {\n    var f=color.split(\",\"),t=percent&lt;0?0:255,p=percent&lt;0?percent*-1:percent,R=parseInt(f[0].slice(4)),G=parseInt(f[1]),B=parseInt(f[2]);\n    return \"rgb(\"+(Math.round((t-R)*p)+R)+\",\"+(Math.round((t-G)*p)+G)+\",\"+(Math.round((t-B)*p)+B)+\")\";\n}\n\nfunction blendRGBColors(c0, c1, p) {\n    var f=c0.split(\",\"),t=c1.split(\",\"),R=parseInt(f[0].slice(4)),G=parseInt(f[1]),B=parseInt(f[2]);\n    return \"rgb(\"+(Math.round((parseInt(t[0].slice(4))-R)*p)+R)+\",\"+(Math.round((parseInt(t[1])-G)*p)+G)+\",\"+(Math.round((parseInt(t[2])-B)*p)+B)+\")\";\n}\n</code></pre>\n\n<p>Usages:</p>\n\n<pre><code>var color1 = \"rbg(63,131,163)\";\nvar lighter-color = shadeRGBColor(color1, 0.5);  //  rgb(159,193,209)\nvar darker-color = shadeRGBColor(color1, -0.25); //  rgb(47,98,122)\n\nvar color2 = \"rbg(244,128,0)\";\nvar blend1 = blendRGBColors(color1, color2, 0.75);  //  rgb(199,129,41)\nvar blend2 = blendRGBColors(color2, color1, 0.62);  //  rgb(132,130,101)\n</code></pre>\n\n<p><strong>-- Uni Version --</strong></p>\n\n<pre><code>function shade(color, percent){\n    if (color.length &gt; 7 ) return shadeRGBColor(color,percent);\n    else return shadeColor2(color,percent);\n}\n\nfunction blend(color1, color2, percent){\n    if (color1.length &gt; 7) return blendRGBColors(color1,color2,percent);\n    else return blendColors(color1,color2,percent);\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var color1 = shade(\"rbg(63,131,163)\", 0.5);\nvar color2 = shade(\"#3f83a3\", 0.5);\nvar color3 = blend(\"rbg(63,131,163)\", \"rbg(244,128,0)\", 0.5);\nvar color4 = blend(\"#3f83a3\", \"#f48000\" 0.5);\n</code></pre>\n\n<p><strong>-- Uni Version 2 --</strong></p>\n\n<p>Ok, fine! The popularity of this answer made me think I could do a much better Universal version of this. So here you go! This version is an All-In-One function copy/paste-able shader/blender for both RGB and Hex colors. This one is not really any different than the other Uni version provided above. Except that its much much smaller and just one function to paste and use. I think the size went from about 1,592 characters to 557 characters, if you compress it into one line. Of course, if you don't need to use it interchangeably between RGB and Hex, then you don't need a Universal version such as this anyhow, lol. Just use one of the much tinier and faster versions above; appropriate for your color scheme. Moving on... In some ways its a little faster, in some ways its a little slower. I didn't do any final speed test analysis. There are two usage differences: First, the percentage is now the first parameter of the function, instead of the last. Second, when blending, you can use negative numbers. They will just get converted to positive numbers.</p>\n\n<p>No more ado:</p>\n\n<pre><code>function shadeBlend(p,c0,c1) {\n    var n=p&lt;0?p*-1:p,u=Math.round,w=parseInt;\n    if(c0.length&gt;7){\n        var f=c0.split(\",\"),t=(c1?c1:p&lt;0?\"rgb(0,0,0)\":\"rgb(255,255,255)\").split(\",\"),R=w(f[0].slice(4)),G=w(f[1]),B=w(f[2]);\n        return \"rgb(\"+(u((w(t[0].slice(4))-R)*n)+R)+\",\"+(u((w(t[1])-G)*n)+G)+\",\"+(u((w(t[2])-B)*n)+B)+\")\"\n    }else{\n        var f=w(c0.slice(1),16),t=w((c1?c1:p&lt;0?\"#000000\":\"#FFFFFF\").slice(1),16),R1=f&gt;&gt;16,G1=f&gt;&gt;8&amp;0x00FF,B1=f&amp;0x0000FF;\n        return \"#\"+(0x1000000+(u(((t&gt;&gt;16)-R1)*n)+R1)*0x10000+(u(((t&gt;&gt;8&amp;0x00FF)-G1)*n)+G1)*0x100+(u(((t&amp;0x0000FF)-B1)*n)+B1)).toString(16).slice(1)\n    }\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var color1 = \"#FF343B\";\nvar color2 = \"#343BFF\";\nvar color3 = \"rgb(234,47,120)\";\nvar color4 = \"rgb(120,99,248)\";\nvar shadedcolor1 = shadeBlend(0.75,color1);\nvar shadedcolor3 = shadeBlend(-0.5,color3);\nvar blendedcolor1 = shadeBlend(0.333,color1,color2);\nvar blendedcolor34 = shadeBlend(-0.8,color3,color4); // Same as using 0.8\n</code></pre>\n\n<p><strong><em>Now</em></strong> it might be perfect!     <code>;) @ Mevin</code></p>\n\n<p>PT</p>\n",
                    "is_accepted": true,
                    "score": 141
                },
                {
                    "body": "<p>C# Version...\nnote that I am getting color strings in this format #FF12AE34, and need to cut out the #FF.</p>\n\n<pre><code>    private string GetSmartShadeColorByBase(string s, float percent)\n    {\n        if (string.IsNullOrEmpty(s))\n            return \"\";\n        var r = s.Substring(3, 2);\n        int rInt = int.Parse(r, NumberStyles.HexNumber);\n        var g = s.Substring(5, 2);\n        int gInt = int.Parse(g, NumberStyles.HexNumber);\n        var b = s.Substring(7, 2);\n        int bInt = int.Parse(b, NumberStyles.HexNumber);\n\n        var t = percent &lt; 0 ? 0 : 255;\n        var p = percent &lt; 0 ? percent*-1 : percent;\n\n        int newR = Convert.ToInt32(Math.Round((t - rInt) * p) + rInt);\n        var newG = Convert.ToInt32(Math.Round((t - gInt) * p) + gInt);\n        var newB = Convert.ToInt32(Math.Round((t - bInt) * p) + bInt);\n\n        return String.Format(\"#{0:X2}{1:X2}{2:X2}\", newR, newG, newB);\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Here is a function I was working on to programmatically lighten or darken a hex color by a specific amount. Just pass in a string like \"3F6D2A\" for the color (col) and an base10 integer (amt) for the amount to lighten or darken. To darken, pass in a negative number (i.e. -20).</p>\n\n<p>The reason for me to do this was because of all the solutions I found, thus far, they seemed to over-complicate the issue. And I had a feeling it could be done with just a couple lines of code.  Please let me know if you find any problems, or have any adjustments to make that would speed it up.</p>\n\n<pre><code>function LightenDarkenColor(col,amt) {\n    col = parseInt(col,16);\n    return (((col &amp; 0x0000FF) + amt) | ((((col&gt;&gt; 8) &amp; 0x00FF) + amt) &lt;&lt; 8) | (((col &gt;&gt; 16) + amt) &lt;&lt; 16)).toString(16);\n}\n</code></pre>\n\n<p>For Development use here is an easier to read version:</p>\n\n<pre><code>function LightenDarkenColor(col,amt) {\n    var num = parseInt(col,16);\n    var r = (num &gt;&gt; 16) + amt;\n    var b = ((num &gt;&gt; 8) &amp; 0x00FF) + amt;\n    var g = (num &amp; 0x0000FF) + amt;\n    var newColor = g | (b &lt;&lt; 8) | (r &lt;&lt; 16);\n    return newColor.toString(16);\n}\n</code></pre>\n\n<p>And finally a version to handle colors that may (or may not) have the \"#\" in the beginning. Plus adjusting for improper color values:</p>\n\n<pre><code>function LightenDarkenColor(col,amt) {\n    var usePound = false;\n    if ( col[0] == \"#\" ) {\n        col = col.slice(1);\n        usePound = true;\n    }\n\n    var num = parseInt(col,16);\n\n    var r = (num &gt;&gt; 16) + amt;\n\n    if ( r &gt; 255 ) r = 255;\n    else if  (r &lt; 0) r = 0;\n\n    var b = ((num &gt;&gt; 8) &amp; 0x00FF) + amt;\n\n    if ( b &gt; 255 ) b = 255;\n    else if  (b &lt; 0) b = 0;\n\n    var g = (num &amp; 0x0000FF) + amt;\n\n    if ( g &gt; 255 ) g = 255;\n    else if  ( g &lt; 0 ) g = 0;\n\n    return (usePound?\"#\":\"\") + (g | (b &lt;&lt; 8) | (r &lt;&lt; 16)).toString(16);\n}\n</code></pre>\n\n<p>Ok, so now its not just a couple of lines, but it seems far simpler and if your not using the \"#\" and dont need to check for colors out of range, it is only a couple of lines. </p>\n\n<p>If not using the \"#\", you can just add it in code like:</p>\n\n<pre><code>var myColor = \"3F6D2A\";\nmyColor = LightenDarkenColor(myColor,10);\nthePlaceTheColorIsUsed = (\"#\" + myColor);\n</code></pre>\n\n<p>I guess my main question is, am I correct here? Does this not encompass some (normal) situations? Is there a faster way? Thats still KISS?</p>\n\n<p>Pimp Trizkit</p>\n",
            "last_activity_date": 1415607106,
            "question_id": 5560248,
            "score": 89,
            "tags": [
                "javascript",
                "colors",
                "hex",
                "darken"
            ],
            "title": "Programmatically Lighten or Darken a hex color (or rgb, and blend colors)"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I always check <a href=\"http://www.zvon.org\" rel=\"nofollow\">www.zvon.org</a>, especially the <a href=\"http://www.zvon.org/index.php?nav%5Fid=references&amp;mime=html\" rel=\"nofollow\">references</a> section.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I find the <a href=\"https://developer.mozilla.org/en/Web%5FDevelopment\">Mozilla Developer Centre</a> very helpful.</p>\n\n<p>Steve</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p><a href=\"http://msdn.microsoft.com/library/\" rel=\"nofollow\">MSDN</a> has a lot of reference materials for <a href=\"http://msdn.microsoft.com/library/aa155073(en-us).aspx\" rel=\"nofollow\">web development</a>. It contains only IE-specific information which can be either an advantage or a disadvantage depending on what you are looking for. Here are direct links to the <a href=\"http://msdn.microsoft.com/library/aa155133(en-us).aspx\" rel=\"nofollow\">HTML/CSS</a> (includes DOM), <a href=\"http://msdn.microsoft.com/library/hbxc2t98(en-us,VS.85).aspx\" rel=\"nofollow\">JScript</a> (Microsoft flavor of ECMAScript aka JavaScript) and <a href=\"http://msdn.microsoft.com/library/t0aew7h6(en-us,VS.85).aspx\" rel=\"nofollow\">VBScript</a>. The documentation is very well written, and is a great source for answers to DOM/JavaScript questions, since they tend to be mostly the same across browsers.</p>\n\n<p>Also, as references go, let's not forget the official specifications for <a href=\"http://www.w3.org/html/\" rel=\"nofollow\">HTML</a>, <a href=\"http://www.w3.org/Style/CSS/\" rel=\"nofollow\">CSS</a>, and the myriad of other standards specified by <a href=\"http://www.w3.org/\" rel=\"nofollow\">W3C</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://www.htmlcodetutorial.com/\" rel=\"nofollow\">HTML Code Tutorial</a> is a decent site, and its <a href=\"http://www.htmlcodetutorial.com/quicklist.html\" rel=\"nofollow\">Quick List</a> page helps me sometimes.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://dev.opera.com/\" rel=\"nofollow\">Dev Opera</a> is a great resource, especially the <a href=\"http://dev.opera.com/articles/wsc/\" rel=\"nofollow\">Web Standards Curriculum</a>. Another one is <a href=\"http://htmldog.com/\" rel=\"nofollow\">HTML dog</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A really helpfull tool for Firefox (with Firebug installed)\n<a href=\"http://tools.sitepoint.com/codeburner/\" rel=\"nofollow\">http://tools.sitepoint.com/codeburner/</a></p>\n\n<p>For rapidly find documentation on sitepoint reference.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>Best resources to learn JavaScript</p>\n</blockquote>\n\n<p>I have been catching up on modern Javascript techniques, and learning some handy tricks, by running, reading and editing GreaseMonkey scripts from userscripts.org.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The <a href=\"http://bclary.com/2004/11/07/\" rel=\"nofollow\">Unofficial online ECMAScript-262 3rd ed. specification</a> and <a href=\"http://es5.github.com/\" rel=\"nofollow\">Annotated ECMAScript 5.1</a> are very helpful.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>While not directly a reference site, LearningLine rolls many of these sites into their lessons as well as sites like <a href=\"http://caniuse.com/\" rel=\"nofollow\">http://caniuse.com/</a>.</p>\n\n<p><a href=\"https://learninglineapp.com/schedule\" rel=\"nofollow\">https://learninglineapp.com/schedule</a></p>\n\n<p>Here are some of the courses that are good starting points:</p>\n\n<ul>\n<li><a href=\"https://learninglineapp.com/courses/14/client-side-programming-with-knockoutjs\" rel=\"nofollow\">Essential jQuery</a></li>\n<li><a href=\"https://learninglineapp.com/courses/8/hmtl5-in-depth\" rel=\"nofollow\">HMTL5 in-depth</a></li>\n<li><a href=\"https://learninglineapp.com/courses/32/getting-started-with-javascript\" rel=\"nofollow\">Getting started with JavaScript</a></li>\n<li><a href=\"https://learninglineapp.com/courses/14/client-side-programming-with-knockoutjs\" rel=\"nofollow\">Client-side programming with KnockoutJS</a></li>\n</ul>\n\n<p>Cheers,\nMichael</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Best reference sites for HTML and JavaScript programming:</p>\n\n<ul>\n<li><a href=\"http://www.w3.org/community/webed/wiki/Main_Page\">W3C WebEd Wiki</a> (this site has a self-teaching curriculum as well as reference material): <a href=\"http://www.w3.org/community/webed/wiki/HTML/Elements\">HTML</a>, <a href=\"http://www.w3.org/community/webed/wiki/CSS/Properties\">CSS</a></li>\n<li>W3C Specifications: <a href=\"http://www.w3.org/TR/html4/\">HTML4</a>, <a href=\"http://www.w3.org/TR/html5/\">HTML5</a> (working draft), <a href=\"http://www.w3.org/TR/CSS2/\">CSS 2.1</a>, <a href=\"http://www.w3.org/DOM/DOMTR\">DOM Tech Reports: levels 1-3</a></li>\n<li>ECMAScript: <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\">ECMAScript 5.1</a> (PDF), <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf\">ECMAScript 3rd Ed.</a>, <a href=\"http://es5.github.com/\">Annotated ES 5.1</a>,  <a href=\"http://bclary.com/2004/11/07/\">HTML ES 3</a></li>\n<li>SitePoint: <a href=\"http://reference.sitepoint.com/javascript/domcore\">DOM JavaScript</a>, <a href=\"http://reference.sitepoint.com/html\">HTML</a>, <a href=\"http://reference.sitepoint.com/css\">CSS</a> -- <a href=\"http://tools.sitepoint.com/codeburner/\">Search</a></li>\n<li>Mozilla Dev Center: <a href=\"https://developer.mozilla.org/En/DOM\">DOM</a>, <a href=\"https://developer.mozilla.org/En/JavaScript\">JavaScript</a>, <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide\">JS Lang</a>, <a href=\"https://developer.mozilla.org/En/AJAX\">AJAX</a>, <a href=\"https://developer.mozilla.org/En/HTML\">HTML</a>, <a href=\"https://developer.mozilla.org/en/XHTML\">XHTML</a>, <a href=\"https://developer.mozilla.org/En/SVG\">SVG</a>, <a href=\"https://developer.mozilla.org/en/Web_Standards\">Standards</a></li>\n<li>MSDN: <a href=\"http://msdn.microsoft.com/en-us/library/ms533029.aspx\">HTML Elements</a>, <a href=\"http://msdn.microsoft.com/en-us/library/hh772960.aspx\">IE HTML Reference</a>, <a href=\"http://msdn.microsoft.com/en-us/library/ms533029.aspx\">CSS Attributes</a>, <a href=\"http://msdn.microsoft.com/en-us/library/ms531209.aspx\">IE CSS Reference</a>, <a href=\"http://msdn.microsoft.com/en-us/library/d1et7k7c.aspx\">JavaScript Language</a>, <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms764730.aspx\">DOM</a></li>\n<li>Quirksmode: <a href=\"http://quirksmode.org/js/contents.html\">DOM Javascript</a>, <a href=\"http://quirksmode.org/css/contents.html\">CSS</a>, <a href=\"http://quirksmode.org/compatibility.html\">Compatibility</a></li>\n<li>ZVON: <a href=\"http://www.zvon.org/index.php?nav_id=references&amp;mime=html\">HTML, XML, CSS</a></li>\n<li>DevGuru - <a href=\"http://devguru.com/technologies/javascript/home.asp\">JavaScript</a>, <a href=\"http://devguru.com/technologies/html/home.asp\">HTML</a>, <a href=\"http://devguru.com/technologies/css2/home.asp\">CSS</a>, <a href=\"http://devguru.com/technologies/technologies.asp\">XML, Server-side</a></li>\n<li>Aptana - <a href=\"http://www.aptana.com/reference/html/api/HTMLDOM0.index-frame.html\">DOM0</a>, <a href=\"http://www.aptana.com/reference/html/api/HTMLDOM2.index-frame.html\">DOM1+2</a>, <a href=\"http://www.aptana.com/reference/html/api/JSKeywords.index.html\">JavaScript Lang</a>, <a href=\"http://www.aptana.com/reference/html/api/JSCore.index-frame.html\">Core</a>, <a href=\"http://www.aptana.com/reference/html/api/HTML.index.html\">HTML</a>, <a href=\"http://www.aptana.com/reference/html/api/CSS.index.html\">CSS</a></li>\n<li>GotAPI - <a href=\"http://www.gotapi.com/jsdomw3s\">DOM JavaScript</a>, <a href=\"http://www.gotapi.com/html\">HTML</a>, <a href=\"http://www.gotapi.com/\">CSS, Server-side, Multimedia, XML</a></li>\n<li>SELFHTML French: <a href=\"http://fr.selfhtml.org/javascript/index.htm\">DOM JavaScript</a>, <a href=\"http://fr.selfhtml.org/html/index.htm\">HTML</a>, <a href=\"http://fr.selfhtml.org/dhtml/index.htm\">DHTML</a>, <a href=\"http://fr.selfhtml.org/css/index.htm\">CSS</a>, <a href=\"http://fr.selfhtml.org/xml/index.htm\">XML</a>, <a href=\"http://fr.selfhtml.org/\">Server-side</a></li>\n<li>SELFHTML German: <a href=\"http://de.selfhtml.org/javascript/index.htm\">DOM JavaScript</a>, <a href=\"http://de.selfhtml.org/html/index.htm\">HTML</a>, <a href=\"http://de.selfhtml.org/dhtml/index.htm\">DHTML</a>, <a href=\"http://de.selfhtml.org/css/index.htm\">CSS</a>, <a href=\"http://de.selfhtml.org/xml/index.htm\">XML</a>, <a href=\"http://de.selfhtml.org/\">Server-side</a></li>\n<li>Blooberry - <a href=\"http://blooberry.com/indexdot/html/index.html\">HTML</a>, <a href=\"http://blooberry.com/indexdot/css/index.html\">CSS</a></li>\n<li>HTMLDog - <a href=\"http://htmldog.com/reference/htmltags/\">HTML</a>, <a href=\"http://htmldog.com/reference/cssproperties/\">CSS</a></li>\n<li>W3schools: <a href=\"http://www.w3schools.com/htmldom/dom_reference.asp\">DOM</a>, <a href=\"http://www.w3schools.com/jsref/default.asp\">JavaScript</a>, <a href=\"http://www.w3schools.com/sitemap/sitemap_references.asp\">HTML, CSS, XML, Multimedia, Server-side</a><sup>*</sup></li>\n</ul>\n\n<p><sup>*</sup>There is some controversy over the quality and accuracy of the information in the tutorials offered by W3Schools. Not as many, however, take issue with the reference section.</p>\n\n<hr>\n\n<p>Related questions, mostly the source of the above links:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/63918/what-is-the-best-online-javascript-css-html-xhtml-dom-reference\">What is the best online javascript/css/html/xhtml/dom reference?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/11246/best-resources-to-learn-javascript\">Best resources to learn JavaScript</a></li>\n<li><a href=\"http://stackoverflow.com/questions/458453/good-javascript-reference/458474\">Good javascript reference</a></li>\n</ul>\n",
            "last_activity_date": 1365186762,
            "question_id": 823718,
            "score": 32,
            "tags": [
                "javascript",
                "html",
                "reference"
            ],
            "title": "What are some of the best reference sites for HTML and JavaScript programming"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can use the <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a> library in conjunction with <a href=\"http://jqueryui.com/\" rel=\"nofollow\">jQuery UI</a> to create <a href=\"http://docs.jquery.com/UI/Dialog\" rel=\"nofollow\">dialogs</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Although I was under the impression they used jQuery's UI Dialog for this, I am not too sure anymore. However, it is not too difficult to whip this up yourself. Try this code:</p>\n\n<pre><code>$('.showme').click(function() {\n    $('.error-notification').remove();\n    var $err = $('&lt;div&gt;').addClass('error-notification')\n                         .html('&lt;h2&gt;Paolo is awesome&lt;/h2&gt;(click on this box to close)')\n                         .css('left', $(this).position().left);\n    $(this).after($err);\n    $err.fadeIn('fast');\n});\n$('.error-notification').live('click', function() {\n    $(this).fadeOut('fast', function() { $(this).remove(); });\n});\n</code></pre>\n\n<p>With these styles:</p>\n\n<pre><code>.error-notification {\n    background-color:#AE0000;\n    color:white;\n    cursor:pointer;\n    display: none;\n    padding:15px;\n    padding-top: 0;\n    position:absolute;\n    z-index:1;\n    font-size: 100%;\n}\n\n.error-notification h2 {\n    font-family:Trebuchet MS,Helvetica,sans-serif;\n    font-size:140%;\n    font-weight:bold;\n    margin-bottom:7px;\n}\n</code></pre>\n\n<p>And <a href=\"http://jsbin.com/oqale\">click here</a> to see it in action.</p>\n\n<p>However, I think you'd still need to tweak it a little bit to give it the right positions depending on the situation in which you are using it. I took care of this for the left position because it is working for the top, but I think there may be some situations in which it won't. All things considered, this should get you started. If you want a more robust implementation, you should check out <a href=\"http://www.lullabot.com/files/bt/bt-latest/DEMO/index.html\">jQuery BeautyTips</a> which is <em>really</em> awesome and would make this trivial to implement.</p>\n",
                    "is_accepted": true,
                    "score": 50
                }
            ],
            "body": "<p>I am in <strong><em>love</em></strong> with stackoverflow's single-color \"click-to-close' hovering dialog boxes that greet a user when they try to vote and aren't logged in or use the site incorrectly.  Any idea how and/or what technology Jeff used to implement these neat little devices?</p>\n\n<p><strong>EDIT:  I'm specifically talking about the SQUARE dialog boxes that say \"Click To Close\" on them.  I know how to implement the rectangular strip on the top of the screen.</strong></p>\n",
            "last_activity_date": 1394453342,
            "question_id": 758906,
            "score": 32,
            "tags": [
                "javascript",
                "jquery",
                "dialog",
                "popup"
            ],
            "title": "How would I implement stackoverflow&#39;s hovering dialogs?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>I don't know jquery, but do know that if you get the select element, it contains an 'options' object.</p>\n\n<pre><code>var myOpts = document.getElementById('yourselect').options;\nalert(myOpts[0].value) //=&gt; value of the first option\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 87
                },
                {
                    "body": "<p>Second time I write an answer like that today...</p>\n\n<pre><code>$(\"#id option\").each(function()\n{\n    // add $(this).val() to your list\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 316
                },
                {
                    "body": "<pre><code>   $('select#id').find('option').each(function() {\n    \t\talert($(this).val());\n    \t});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This will put the option values of #myselectbox into a nice clean array for you:</p>\n\n<pre><code>// first get the elements into a list\nvar domelts = $('#myselectbox option');\n// next translate that into an array of just the values\nvar values = $.map(domelts, function(elt, i) { return $(elt).val();});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Some answers uses <code>each</code>, <code>map</code> is a better alternative here imho:</p>\n\n<pre><code>$(\"select#example option\").map(function() {return $(this).val();}).get();\n</code></pre>\n\n<p>There are (at least) two <code>map</code> functions in jQuery, Thomas Petersen's answer uses \"Utilities/jQuery.map\"; this answer uses \"Traversing/map\" (and therefore a little cleaner code).</p>\n\n<p>Edit, correction: It depends on what you are going to do with the values. If you, let's say, want to return the values from a function, <code>map</code> is probably the better alternative. But if you are going to use the values directly you probably want <code>each</code>.</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>Putting life to an old thread.</p>\n\n<p>You can take all your \"selected values\" by the name of the checkboxes and present them in a sting seperated by \",\". </p>\n\n<p>A nice way to do this is to use jQuery $.map().</p>\n\n<pre><code>var selected_val =$.map($(\"input[name='d_name']:checked\"),function(a){return a.value;}).join(',');\n\nalert(selected_val);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p><code>$.map</code> is probably the most efficient way to do this.</p>\n\n<pre><code>var options = $('#selectBox option');\n\nvar values = $.map(options ,function(option) {\n    return option.value;\n});\n</code></pre>\n\n<p>You can add change options to <code>$('#selectBox option:selected')</code> if you only want the ones that are selected.</p>\n\n<p>The first line selects all of the checkboxes and puts their jQuery element into a variable. We then use the <code>.map</code> function of jQuery to apply a function to each of the elements of that variable; all we are doing is returning the value of each element as that is all we care about. Because we are returning them inside of the map function it actually builds an array of the values just as requested.</p>\n",
                    "is_accepted": false,
                    "score": 69
                },
                {
                    "body": "<pre><code>$(\"#id option\").each(function()\n{\n    $(this).prop('selected', true);\n});\n</code></pre>\n\n<p>Although, the <strong>CORRECT</strong> way is to set the DOM property of the element, like so:</p>\n\n<pre><code>$(\"#id option\").each(function(){\n    $(this).attr('selected', true);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>$(\"input[type=checkbox][checked]\").serializeArray();\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>$(\".some_class[type=checkbox][checked]\").serializeArray();\n</code></pre>\n\n<p>To see the results:</p>\n\n<pre><code>alert($(\"input[type=checkbox][checked]\").serializeArray().toSource());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://jsbin.com/usizo/110/edit\" rel=\"nofollow\">Working example</a></p>\n\n<p>The most efficient way to do this is to use <code>$.map()</code></p>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>var values = $.map($('#selectBox option'), function(ele) {\n   return ele.value; \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use following code for that :-</p>\n\n<pre><code>var assignedRoleId = new Array();\n    $('#RolesListAssigned option').each(function(){\n            assignedRoleId.push(this.value);\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you're looking for all options with some selected text then the below code will work.</p>\n\n<pre><code>$('#test').find(\"select option:contains('B')\").filter(\":selected\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I get all the options of a select through Jquery by passing on its ID?</p>\n\n<p>Edit: Only looking to get their values, not the text</p>\n",
            "last_activity_date": 1419952214,
            "question_id": 590163,
            "score": 192,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors"
            ],
            "title": "How to get all options of a select using Jquery?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Well you have to grab the client for that (surprise), you can either go the simple way:</p>\n\n<pre><code>var io = io.listen(server);\nio.clients[sessionID].send()\n</code></pre>\n\n<p>Which may break, I hardly doubt it, but it's always a possibility that <code>io.clients</code> might get changed, so use the above with caution</p>\n\n<p>Or you keep track of the clients yourself, therefore you add them to your own <code>clients</code> object in the <code>connection</code> listener and remove them in the <code>disconnect</code> listener.</p>\n\n<p>I would use the latter one, since depending on your application you might want to have more state on the for the clients anyway, so something like <code>clients[id] = {conn: clientConnect, data: {...}}</code> might do the job.</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>Ivo Wetzel's answer doesn't seem to be valid in Socket.io 0.9 anymore.</p>\n\n<p>In short you must now save the <code>socket.id</code> and use <code>io.sockets.socket(savedSocketId).emit(...)</code>  to send messages to it.</p>\n\n<p>This is how I got this working in clustered Node.js server:</p>\n\n<p>First you need to set Redis store as the store so that messages can go cross processes:</p>\n\n<pre><code>var express = require(\"express\");\nvar redis = require(\"redis\");\nvar sio = require(\"socket.io\");\n\nvar client = redis.createClient()\nvar app = express.createServer();\nvar io = sio.listen(app);\n\nio.set(\"store\", new sio.RedisStore);\n\n\n// In this example we have one master client socket \n// that receives messages from others.\n\nio.sockets.on('connection', function(socket) {\n\n  // Promote this socket as master\n  socket.on(\"I'm the master\", function() {\n\n    // Save the socket id to Redis so that all processes can access it.\n    client.set(\"mastersocket\", socket.id, function(err) {\n      if (err) throw err;\n      console.log(\"Master socket is now\" + socket.id);\n    });\n  });\n\n  socket.on(\"message to master\", function(msg) {\n\n    // Fetch the socket id from Redis\n    client.get(\"mastersocket\", function(err, socketId) {\n      if (err) throw err;\n      io.sockets.socket(socketId).emit(msg);\n    });\n  });\n\n});\n</code></pre>\n\n<p>I omitted the clustering code here, because it makes this more cluttered, but it's trivial to add. Just add everything to the worker code. More docs here <a href=\"http://nodejs.org/api/cluster.html\">http://nodejs.org/api/cluster.html</a></p>\n",
                    "is_accepted": false,
                    "score": 77
                },
                {
                    "body": "<p>io.sockets.sockets[socket.id].emit(...) worked for me in v0.9</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A simpler solution than what was proposed so far, tested with socket.io v1.0.4:</p>\n\n<h1>Server</h1>\n\n<p><code>server.js</code> </p>\n\n<pre><code>var\n    io = require('socket.io'),\n    ioServer = io.listen(8000),\n    sequence = 1;\n    clients = [];\n\n// Event fired every time a new client connects:\nioServer.on('connection', function(socket) {\n    console.info('New client connected (id=' + socket.id + ').');\n    clients.push(socket);\n\n    // When socket disconnects, remove it from the list:\n    socket.on('disconnect', function() {\n        var index = clients.indexOf(socket);\n        if (index != -1) {\n            clients.splice(index, 1);\n            console.info('Client gone (id=' + socket.id + ').');\n        }\n    });\n});\n\n// Every 1 second, sends a message to a random client:\nsetInterval(function() {\n    var randomClient;\n    if (clients.length &gt; 0) {\n        randomClient = Math.floor(Math.random() * clients.length);\n        clients[randomClient].emit('foo', sequence++);\n    }\n}, 1000);\n</code></pre>\n\n<h1>Client</h1>\n\n<p><code>client.js</code></p>\n\n<pre><code>var\n    io = require('socket.io-client'),\n    ioClient = io.connect('http://localhost:8000');\n\nioClient.on('foo', function(msg) {\n    console.info(msg);\n});\n</code></pre>\n\n<h1>How to run</h1>\n\n<p>Install the required libraries:</p>\n\n<pre><code>npm install socket.io\nnpm install socket.io-client\n</code></pre>\n\n<p>Run the server:</p>\n\n<pre><code>node server\n</code></pre>\n\n<p>Run every client in a separate console:</p>\n\n<pre><code>node client\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>In 1.0 you should use:</p>\n\n<p>io.sockets.connected[socketid].emit();</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>each socket joins a room with a socket id for a name, so you can just </p>\n\n<pre class=\"lang-html prettyprint-override\"><code>io.to(socket#id).emit('hey')\n</code></pre>\n\n\n\n<p>docs: <a href=\"http://socket.io/docs/rooms-and-namespaces/#default-room\" rel=\"nofollow\">http://socket.io/docs/rooms-and-namespaces/#default-room</a></p>\n\n<p>Cheers</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Socket.IO allows you to \u201cnamespace\u201d your sockets, which essentially means assigning different endpoints or paths.</p>\n\n<p>This might help:\n<a href=\"http://socket.io/docs/rooms-and-namespaces/\" rel=\"nofollow\">http://socket.io/docs/rooms-and-namespaces/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm working with socket.io and node.js and until now it seems pretty good, but I don't know how to send a message from the server to an specific client, something like this:</p>\n\n<pre><code>client.send(message, receiverSessionId)\n</code></pre>\n\n<p>But neither the <code>.send()</code> nor the <code>.broadcast()</code> methods seem to supply my need.</p>\n\n<p>What I have found as a possible solution, is that the <code>.broadcast()</code> method accepts as a second parameter an array of SessionIds to which not send the message, so I could pass an array with all the SessionIds connected at that moment to the server, except the one I wish send the message, but I feel there must be a better solution.</p>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1421079522,
            "question_id": 4647348,
            "score": 49,
            "tags": [
                "javascript",
                "node.js",
                "sockets",
                "socket.io",
                "server-side"
            ],
            "title": "Send message to specific client with socket.io and node.js"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I have been personally reading the source code of node.js &amp; v8.</p>\n\n<p>I went into similar problem like you when I tried to understand node.js architecture in order to write native modules.</p>\n\n<p>What i am posting here is my understanding of node.js and this might be a bit off track as well.</p>\n\n<ol>\n<li><p><a href=\"http://software.schmorp.de/pkg/libev.html\">Libev</a> is the event loop which actually runs internally in node.js to perform simple event loop operations. It's written originally for *nix systems. Libev provides a simple yet optimized event loop for the process to run on. You can read more about libev <a href=\"http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod\">here</a>.</p></li>\n<li><p><a href=\"http://software.schmorp.de/pkg/libeio.html\">LibEio</a> is a library to perform input output asynchronously. It handles file descriptors, data handlers, sockets etc. You can read more about it here <a href=\"http://pod.tst.eu/http://cvs.schmorp.de/libeio/eio.pod\">here</a>.</p></li>\n<li><p><a href=\"https://github.com/joyent/libuv\">LibUv</a> is an abstraction layer on the top of libeio , libev, c-ares ( for DNS ) and iocp (for windows asyncronous-io). LibUv performs, mantains and manages all the io and events in the event pool. ( in case of libeio threadpool ). You should check out <a href=\"http://vimeo.com/24713213\">Ryan Dahl's tutorial</a> on libUv. That will start making more sense to you about how libUv works itself and then you will understand how node.js works on the top of libuv and v8.</p></li>\n</ol>\n\n<p>To understand just the javascript event loop you should consider watching these videos</p>\n\n<ul>\n<li><a href=\"http://jsconf.eu/2010/speaker/techniques_for_a_single_stack.html\">JS-conference</a></li>\n<li><a href=\"http://blip.tv/jsconf/jsconf2011-tom-hughes-croucher-5478056\">JSConf2011 ( has very irritative sfx) </a></li>\n<li><a href=\"http://code.danyork.com/2011/01/25/node-js-doctors-offices-and-fast-food-restaurants-understanding-event-driven-programming/\">Understanding event driven programming</a></li>\n<li><a href=\"http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop/\">Understanding the node.js event loop</a></li>\n</ul>\n\n<p>To see how libeio is used with node.js in order to create async modules you should see <a href=\"https://github.com/pkrumins/node-png\">this example</a>.</p>\n\n<p>Basically what happens inside the node.js is that v8 loop runs and handles all javascript parts as well as C++ modules [ when they are running in a main thread ( as per official documentation node.js itself is single threaded) ]. When outside of the main thread, libev and libeio handle it in the thread pool and libev provide the interaction with the main loop. So from my understanding, node.js has 1 permanent event loop: that's the v8 event loop. To handle C++ async tasks it's using a threadpool [via libeio &amp; libev ].</p>\n\n<p>For example:</p>\n\n<pre><code>eio_custom(Task,FLAG,AfterTask,Eio_REQUEST);\n</code></pre>\n\n<p>Which appears in all modules is usually calling the function <code>Task</code> in the threadpool. When it's complete, it calls the <code>AfterTask</code> function in the main thread. Whereas <code>Eio_REQUEST</code> is the request handler which can be a structure / object whose motive is to provide communication between the threadpool and main thead.</p>\n",
                    "is_accepted": true,
                    "score": 60
                }
            ],
            "body": "<p>Are there internally two event loops in nodejs architecture?</p>\n\n<ul>\n<li>libev/libuv </li>\n<li>v8 javascript event loop</li>\n</ul>\n\n<p>On an I/O request does node queue the request to libeio which in turn notifies the availability of data via events using libev and finally those events are handled by v8 event loop using callbacks?</p>\n\n<p>Basically, How are libev and libeio integrated in nodejs architecture?</p>\n\n<p>Are there any documentation available to give a clear picture of nodejs internal architecture?</p>\n",
            "last_activity_date": 1340021849,
            "question_id": 10680601,
            "score": 35,
            "tags": [
                "javascript",
                "node.js",
                "event-loop",
                "libev"
            ],
            "title": "Nodejs Event Loop"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I haven't done web design for iOS but from what I recall seeing in the WWDC sessions and in documentation, the search bar in Mobile Safari, and navigation bars across the OS, will now automatically resize and shrink to show more of your content.</p>\n\n<p>You can test this in Safari on an iPhone and notice that, when you scroll down to see more contents on a page, the navigation/search bar is hidden automatically.</p>\n\n<p>Perhaps leaving the address bar/navigation bar as is, and not creating a full-screen experience, is what's best. I don't see Apple doing that anytime soon. And at most they are not automatically controlling when the address bar shows/hides.</p>\n\n<p>Sure, you are losing screen real estate, specially on an iPhone 4 or 4S, but there doesn't seem to be an alternative as of Beta 4.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>I want to comment/partially answer/share my thoughts. I am using the overflow-y:scroll technique for a big upcoming project of mine. Using it has two MAJOR advantages.</p>\n\n<p>a) You can use a drawer with action buttons from the bottom of the screen; if the document scrolls and the bottom bar disappears, tapping on a button located at the bottom of the screen will first make the bottom bar appear, and then be clickable. Also, the way this thing works, causes trouble with modals that have buttons at the far bottom.</p>\n\n<p>b) When using an overflown element, the only things that are repainted in case of major css changes are the ones in the viewable screen. This gave me a huge performance boost when using javascript to alter css of multiple elements on the fly. For example, if you have a list of 20 elements you need repainted and only two of them are on-screen in the overflown element, only those are repainted while the rest are repainted when scrolling. Without it all 20 elements are repainted.</p>\n\n<p>..of course it depends on the project and if you need any of the functionality I mentioned. Google uses overflown elements for gmail to use the functionality I described on a). Imo, it's worth the while, even considering the small height in older iphones (372px as you said).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Since there is no programmatic way to mimic <code>minimal-ui</code>, we have come up with a different workaround, using <code>calc()</code> and known iOS address bar height to our advantage:</p>\n\n<p>The following demo page (<a href=\"https://gist.github.com/bitinn/1700068a276fb29740a7\">also available on gist, more technical details there</a>) will prompt user to scroll, which then triggers a soft-fullscreen (hide address bar/menu), where header and content fills the new viewport.</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Scroll Test&lt;/title&gt;\n\n    &lt;style&gt;\n        html, body {\n            height: 100%;\n        }\n\n        html {\n            background-color: red;\n        }\n\n        body {\n            background-color: blue;\n            margin: 0;\n        }\n\n        div.header {\n            width: 100%;\n            height: 40px;\n            background-color: green;\n            overflow: hidden;\n        }\n\n        div.content {\n            height: 100%;\n            height: calc(100% - 40px);\n            width: 100%;\n            background-color: purple;\n            overflow: hidden;\n        }\n\n        div.cover {\n            position: absolute;\n            top: 0;\n            left: 0;\n            z-index: 100;\n            width: 100%;\n            height: 100%;\n            overflow: hidden;\n            background-color: rgba(0, 0, 0, 0.5);\n            color: #fff;\n            display: none;\n        }\n\n        @media screen and (width: 320px) {\n            html {\n                height: calc(100% + 72px);\n            }\n\n            div.cover {\n                display: block;\n            }\n        }\n    &lt;/style&gt;\n    &lt;script&gt;\n        var timeout;\n\n        window.addEventListener('scroll', function(ev) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            timeout = setTimeout(function() {\n\n                if (window.scrollY &gt; 0) {\n                    var cover = document.querySelector('div.cover');\n                    cover.style.display = 'none';\n                }\n\n            }, 200);\n\n        });\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n    &lt;div class=\"header\"&gt;\n        &lt;p&gt;header&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;div class=\"content\"&gt;\n        &lt;p&gt;content&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;div class=\"cover\"&gt;\n        &lt;p&gt;scroll to soft fullscreen&lt;/p&gt;\n    &lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>The root problem here seems that iOS8 safari won't hide the address bar when scrolling down if the content is equal or less than the viewport.</p>\n\n<p>As you found out already, adding some padding at the bottom gets around this issue:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>html {\n    /* enough space to scroll up to get fullscreen on iOS8 */\n    padding-bottom: 80px;\n}\n</code></pre>\n\n<pre class=\"lang-js prettyprint-override\"><code>// sort of emulate safari's \"bounce back to top\" scroll\nwindow.addEventListener('scroll', function(ev) {\n    // avoids scrolling when the focused element is e.g. an input\n    if (\n        !document.activeElement\n        || document.activeElement === document.body\n    ) {\n        document.body.scrollIntoViewIfNeeded(true);\n    }\n});\n</code></pre>\n\n<p>The above css should be conditionally applied, for example with UA sniffing adding a <code>gt-ios8</code> class to <code>&lt;html&gt;</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h3>Just say goodbye to minimal-ui (for now)</h3>\n\n<p>It's true, <code>minimal-ui</code> could be both useful and harmful, and I suppose the trade-off now has another balance, in favor of newer, bigger iPhones.</p>\n\n<p>I've been dealing with the issue while working with my js framework for HTML5 apps. After many attempted solutions, each with their drawbacks, I surrendered to considering that space lost on iPhones previous than 6.\nGiven the situation, I think that the only solid and predictable behavior is a pre-determined one.</p>\n\n<p>In short, I ended up <strong>preventing any form of minimal-ui</strong>, so at least my screen height is always the same and you always know what actual space you have for your app.</p>\n\n<p>With the help of time, enough users will have more room.</p>\n\n<hr>\n\n<p>EDIT</p>\n\n<h3>How I do it</h3>\n\n<p>This is a little simplified, for demo purpose, but should work for you. Assuming you have a main container</p>\n\n<pre><code>html, body, #main {\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n.view {\n  width: 100%;\n  height: 100%;\n  overflow: scroll;\n}\n</code></pre>\n\n<p>Then:</p>\n\n<ol>\n<li><p>then with js, I set <code>#main</code>'s height to the window's available height. This also helps dealing with other scrolling bugs found in both iOS and Android. It also means that you need to deal on how to update it, just note that;</p></li>\n<li><p>I block over-scrolling when reaching the boundaries of the scroll. This one is a bit more deep in my code, but I think you can as well follow the principle of <a href=\"http://stackoverflow.com/a/14130056/902480\">this answer</a> for basic functionality. I think it could flickr a little, but will do the job.</p></li>\n</ol>\n\n<hr>\n\n<h3><a href=\"http://fornacestudio.com\" rel=\"nofollow\">See the demo</a> (on a iPhone)</h3>\n\n<p>As a sidenote: this app too is bookmarkable, as it uses an internal routing to hashed addresses, but I also added a prompt iOS users to add to home. I feel this way helps loyalty and returning visitors (and so the lost space is back).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I came across this solution from @doublesharp and it's worked brilliantly for me, so I thought I'd share it here:</p>\n\n<pre><code>// track width, set to window width\nvar width = $(window).width(); \n\n// fire on window resize\n$(window).resize(function() {\n    // do nothing if the width is the same\n    if ($(window).width()==width) return; \n    // ... your code\n});\n</code></pre>\n\n<p>So, for something like the iOS 8 address bar, when you scroll down, the address bar resizing won't fire your $(window).resize() code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The minimal-ui viewport property is <a href=\"https://developer.apple.com/library/ios/releasenotes/General/RN-iOSSDK-8.0/\">no longer supported</a> in iOS 8. However, the minimal-ui itself is not gone. User can enter the minimal-ui with a \"touch-drag down\" gesture.</p>\n\n<p>There are several pre-conditions and obstacles to manage the view state, e.g. for minimal-ui to work, there has to be enough content to enable user to scroll; for minimal-ui to persist, window scroll must be offset on page load and after orientation change. However, <a href=\"http://stackoverflow.com/questions/26801943/how-to-get-the-window-size-of-fullscreen-view-when-not-in-fullscreen\">there is no way of calculating the dimensions of the minimal-ui</a> using the <code>screen</code> variable, and thus no way of telling when user is in the minimal-ui in advance.</p>\n\n<p>These observations is a result of research as part of developing <strong><a href=\"https://github.com/gajus/brim\">Brim \u2013\u00a0view manager for iOS 8</a></strong>. The end implementation works in the following way:</p>\n\n<blockquote>\n  <p>When page is loaded, Brim will create a treadmill element.\n  Treadmill element is used to give user space to scroll. Presence of\n  the treadmill element ensures that user can enter the minimal-ui view\n  and that it continues to persist if user reloads the page or changes\n  device orientation. It is invisible to the user the entire time. This\n  element has ID <code>brim-treadmill</code>.</p>\n  \n  <p>Upon loading the page or after changing the orientation, Brim is using\n  <a href=\"https://github.com/gajus/scream\">Scream</a> to detect if page is in the\n  minimal-ui view (page that has been previously in minimal-ui and has\n  been reloaded will remain in the minimal-ui if content height is\n  greater than the viewport height).</p>\n  \n  <p>When page is in the minimal-ui, Brim will disable scrolling of the\n  document (it does this in a <a href=\"http://stackoverflow.com/a/26853900/368691\">safe\n  way</a> that does not affect\n  the contents of the main element). Disabling document scrolling\n  prevents accidentally leaving the minimal-ui when scrolling upwards.\n  As per the original iOS 7.1 spec, tapping the top bar brings back the\n  rest of the chrome.</p>\n</blockquote>\n\n<p>The end result looks like this:</p>\n\n<p><img src=\"http://i.stack.imgur.com/mVciy.gif\" alt=\"Brim in iOS simulator.\"></p>\n\n<p>For the sake of documentation, and in case you prefer to write your own implementation, it is worth noting that you cannot use <a href=\"https://github.com/gajus/scream\">Scream</a> to detect if device is in minimal-ui straight after the <a href=\"https://developer.mozilla.org/en-US/docs/Web/Events/orientationchange\">orientationchange</a> event because <code>window</code> dimensions do not reflect the new orientation until the rotation animation has ended. You have to attach a listener to the <a href=\"https://github.com/gajus/orientationchangeend\">orientationchangeend</a> event.</p>\n\n<p><a href=\"https://github.com/gajus/scream\">Scream</a> and <a href=\"https://github.com/gajus/orientationchangeend\">orientationchangeend</a> have been developed as part of this project.</p>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>(This is a multi-part question, I will try my best to summarise the scenario.)</p>\n\n<p>We are currently building a responsive web app (news reader) that allow users to swipe between tabbed content, as well as scroll vertically inside each tabbed content.</p>\n\n<p>A common approach to the problem is to have a wrapper <code>div</code> that fills the browser viewport, set <code>overflow</code> to <code>hidden</code> or <code>auto</code>, then scroll horizontally and/or vertically inside it.</p>\n\n<p>This approach is great but has one main drawback: <strong>since the height of the document is exactly the same as the browser viewport, the mobile browser will not hide the address bar/navigation menu</strong>.</p>\n\n<p>There are <a href=\"http://www.html5rocks.com/en/mobile/fullscreen/\">numerous hacks and viewport properties</a> that enable us to get more screen real estate, but none are quite as effective as <code>minimal-ui</code> (introduced in iOS 7.1).</p>\n\n<p>News came yesterday that iOS 8 beta4 had removed <code>minimal-ui</code> from Mobile Safari (see Webkit section in <a href=\"https://developer.apple.com/library/prerelease/ios/releasenotes/General/RN-iOSSDK-8.0/\">iOS 8 Release Notes</a>), which left us wondering:</p>\n\n<p><strong>Q1. Is it still possible to hide the address bar on Mobile Safari?</strong></p>\n\n<p>As far as we know, iOS 7 <a href=\"http://www.mobilexweb.com/blog/safari-ios7-html5-problems-apis-review\">no longer responds</a> to the <code>window.scrollTo</code> hack, this suggests we have to live with the smaller screen space, unless we adopt a vertical layout or use <code>mobile-web-app-capable</code>.</p>\n\n<p><strong>Q2. Is it still possible to have a similar soft fullscreen experience?</strong></p>\n\n<p>By <em>soft fullscreen</em> I really mean without using the <code>mobile-web-app-capable</code> meta tag.</p>\n\n<p>Our web app is built to be accessible, any page can be bookmarked or shared using the native browser menu. By adding <code>mobile-web-app-capable</code> we prevent users from invoking such menu (when it's saved to homescreen), which confuses and antagonises users.</p>\n\n<p><code>minimal-ui</code> used to be the middle-ground, hiding the menu by default but <a href=\"http://www.mobilexweb.com/blog/ios-7-1-safari-minimal-ui-bugs\">keeping it accessible with a tap</a> -- though Apple might have removed it due to other accessibility concerns (such as users not knowing where to tap to activate the menu).</p>\n\n<p><strong>Q3. Is a fullscreen experience worth the trouble?</strong></p>\n\n<p>It would seem that a <a href=\"http://caniuse.com/fullscreen\">fullscreen API</a> is not coming to iOS anytime soon, but even if it is, I don't see how the menu will be kept accessible (same goes for Chrome on Android).</p>\n\n<p>In this case, maybe we should just leave mobile safari as it is, and account for viewport height (for iPhone 5+, it's 460 = 568 - 108, where 108 includes the OS bar, address bar and navigation menu; for iPhone 4 or older, it's 372).</p>\n\n<p><strong>Would love to hear some alternatives (besides building a native app).</strong></p>\n",
            "last_activity_date": 1416576548,
            "question_id": 24889100,
            "score": 67,
            "tags": [
                "javascript",
                "ios",
                "css",
                "responsive-design",
                "mobile-safari"
            ],
            "title": "iOS 8 removed &quot;minimal-ui&quot; viewport property, are there other &quot;soft fullscreen&quot; solutions?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Use <code>position:fixed;</code> and set the <code>top:0;left:0;right:0;height:100px;</code> and you should be able to have it \"stick\" to the top of the page.</p>\n\n<pre><code>&lt;div style=\"position:fixed;top:0;left:0;right:0;height:100px;\"&gt;Some buttons&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>There was a <a href=\"http://stackoverflow.com/questions/2905908/horizontally-centering-an-absolute-position-to-match-a-relative-position\">previous question today</a> (no answers) that gave a <a href=\"http://perldoc.perl.org/perl.html\" rel=\"nofollow\">good example of this functionality</a>.  You can check the <a href=\"http://perldoc.perl.org/static/combined-20100403.js\" rel=\"nofollow\">relevant source code for specifics</a> (search for \"toolbar\"), but basically they use a combination of webdestroya's solution and a bit of JavaScript:</p>\n\n<ol>\n<li>Page loads and element is position: static</li>\n<li>On scroll, the position is measured, and if the element is position: static and it's off the page then the element is flipped to position: fixed.</li>\n</ol>\n\n<p>I'd recommend checking the aforementioned source code though, because they do handle some \"gotchas\" that you might not immediately think of, such as adjusting scroll position when clicking on anchor links.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The trick is that you have to set it as position:fixed, but only after the user has scrolled past it.</p>\n\n<p>This is done with something like this, attaching a handler to the window.scroll event</p>\n\n<pre><code>   // Cache selectors outside callback for performance. \n   var $window = $(window),\n       $stickyEl = $('#the-sticky-div'),\n       elTop = $stickyEl.offset().top;\n\n   $window.scroll(function() {\n        $stickyEl.toggleClass('sticky', $window.scrollTop() &gt; elTop);\n    });\n</code></pre>\n\n<p>This simply adds a <code>sticky</code> CSS class when the page has scrolled past it, and removes the class when it's back up.</p>\n\n<p>And the CSS class looks like this</p>\n\n<pre><code>  #the-sticky-div.sticky {\n     position: fixed;\n     top: 0;\n  }\n</code></pre>\n\n<p>EDIT- Modified code to cache jQuery objects, faster now.</p>\n",
                    "is_accepted": true,
                    "score": 82
                },
                {
                    "body": "<p>You should try the waypoints jQuery plugin.</p>\n\n<p><a href=\"http://imakewebthings.github.com/jquery-waypoints/sticky-elements/\" rel=\"nofollow\">http://imakewebthings.github.com/jquery-waypoints/sticky-elements/</a></p>\n\n<p>I think it does exactly what you want, and with no flicker. From memory, though, I don't think it worked well in Mobile Safari (YMMV).</p>\n\n<p>A good example of this was on New York Times recently:</p>\n\n<p><a href=\"http://www.nytimes.com/interactive/2010/11/13/weekinreview/deficits-graphic.html\" rel=\"nofollow\">http://www.nytimes.com/interactive/2010/11/13/weekinreview/deficits-graphic.html</a></p>\n\n<p>The box graphic in the page doesn't scroll off the top of the page.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The trick to make infinity's answer work without the flickering is to put the scroll-check on another div then the one you want to have fixed.</p>\n\n<p>Derived from the code <a href=\"http://www.viixii.com\">viixii.com</a> uses I ended up using this:</p>\n\n<pre><code>function sticky_relocate() {\n      var window_top = $(window).scrollTop();\n      var div_top = $('#sticky-anchor').offset().top;\n      if (window_top &gt; div_top)\n        $('#sticky-element').addClass('sticky')\n      else\n        $('#sticky-element').removeClass('sticky');\n      }\n     $(function() {\n      $(window).scroll(sticky_relocate);\n      sticky_relocate();\n      });\n</code></pre>\n\n<p>This way the function is only called once the sticky-anchor is reached and thus won't be removing and adding the '.sticky' class on every scroll event.</p>\n\n<p>Now it adds the sticky class when the sticky-anchor reaches the top and removes it once the sticky-anchor return into view.</p>\n\n<p>Just place an empty div with a class acting like an anchor just above the element you want to have fixed.</p>\n\n<p>Like so:</p>\n\n<pre><code>&lt;div id=\"sticky-anchor\"&gt;&lt;/div&gt;\n&lt;div id=\"sticky-element\"&gt;Your sticky content&lt;/div&gt;\n</code></pre>\n\n<p>All credit for the code goes to <a href=\"http://www.viixii.com\">viixii.com</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I created a jQuery plugin for this. Would love to get some feedback as it is my first one. <a href=\"https://github.com/dubroe/sticky-div\" rel=\"nofollow\">https://github.com/dubroe/sticky-div</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a div which, when my page is first loaded, is about 100px from the top (it holds some buttons etc. for the page).</p>\n\n<p>When a user scrolls past it, I would like the div to \"follow\" the user in that it attaches to the top of the screen. When the user returns to the top of the page, I want it back in its original position. </p>\n\n<pre><code>Visualization - xxxxx is the div:\n\nDefault (page load)          User vertically scrolled well past it\n---------                    ---------\n|       |                    |xxxxxxx| &lt; after div reaches top of screen when\n|xxxxxxx|                    |       |   page is scrolled vertically, it stays\n|       |                    |       |   there\n---------                    ---------\n</code></pre>\n",
            "last_activity_date": 1354384870,
            "question_id": 2907367,
            "score": 62,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "Have a div cling to top of screen if scrolled down past it"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>In the .aspx page, you need a Javascript function to tell whether or not the form info is \"dirty\"</p>\n\n<pre><code>&lt;script language=\"javascript\"&gt;\n    var isDirty;\n    isDirty = 0;\n\n    function setDirty() {\n        isDirty = 1;\n    }\n\n    function checkSave() {\n        var sSave;\n        if (isDirty == 1) {\n            sSave = window.confirm(\"You have some changes that have not been saved. Click OK to save now or CANCEL to continue without saving.\");\n            if (sSave == true) {\n                document.getElementById('__EVENTTARGET').value = 'btnSubmit';\n                document.getElementById('__EVENTARGUMENT').value = 'Click';  \n                window.document.formName.submit();\n            } else {\n                 return true;\n            }\n        }\n    }\n&lt;/script&gt;\n&lt;body class=\"StandardBody\" onunload=\"checkSave()\"&gt;\n</code></pre>\n\n<p>and in the codebehind, add the triggers to the input fields as well as resets on the submission/cancel buttons....</p>\n\n<pre><code>btnSubmit.Attributes.Add(\"onclick\", \"isDirty = 0;\");\nbtnCancel.Attributes.Add(\"onclick\", \"isDirty = 0;\");\ntxtName.Attributes.Add(\"onchange\", \"setDirty();\");\ntxtAddress.Attributes.Add(\"onchange\", \"setDirty();\");\n//etc..\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p><a href=\"http://www.4guysfromrolla.com/demos/OnBeforeUnloadDemo3.htm\" rel=\"nofollow\">One method</a>, using arrays to hold the variables so changes can be tracked.</p>\n\n<p>Here's a very simple method to <a href=\"http://gadgetopia.com/post/2507\" rel=\"nofollow\">detect changes</a>, but the rest isn't as elegant.</p>\n\n<p>Another method which is fairly simple and small, from <a href=\"http://farfetched.blogspot.com/2005/03/warn-of-unsaved-changes-javascript.html\" rel=\"nofollow\">Farfetched Blog</a>:</p>\n\n<pre><code>&lt;body onLoad=\"lookForChanges()\" onBeforeUnload=\"return warnOfUnsavedChanges()\"&gt;\n&lt;form&gt;\n&lt;select name=a multiple&gt;\n &lt;option value=1&gt;1\n &lt;option value=2&gt;2\n &lt;option value=3&gt;3\n&lt;/select&gt;\n&lt;input name=b value=123&gt;\n&lt;input type=submit&gt;\n&lt;/form&gt;\n\n&lt;script&gt;\nvar changed = 0;\nfunction recordChange() {\n changed = 1;\n}\nfunction recordChangeIfChangeKey(myevent) {\n if (myevent.which &amp;&amp; !myevent.ctrlKey &amp;&amp; !myevent.ctrlKey)\n  recordChange(myevent);\n}\nfunction ignoreChange() {\n changed = 0;\n}\nfunction lookForChanges() {\n var origfunc;\n for (i = 0; i &lt; document.forms.length; i++) {\n  for (j = 0; j &lt; document.forms[i].elements.length; j++) {\n   var formField=document.forms[i].elements[j];\n   var formFieldType=formField.type.toLowerCase();\n   if (formFieldType == 'checkbox' || formFieldType == 'radio') {\n    addHandler(formField, 'click', recordChange);\n   } else if (formFieldType == 'text' || formFieldType == 'textarea') {\n    if (formField.attachEvent) {\n     addHandler(formField, 'keypress', recordChange);\n    } else {\n     addHandler(formField, 'keypress', recordChangeIfChangeKey);\n    }\n   } else if (formFieldType == 'select-multiple' || formFieldType == 'select-one') {\n    addHandler(formField, 'change', recordChange);\n   }\n  }\n  addHandler(document.forms[i], 'submit', ignoreChange);\n }\n}\nfunction warnOfUnsavedChanges() {\n if (changed) {\n  if (\"event\" in window) //ie\n   event.returnValue = 'You have unsaved changes on this page, which will be discarded if you leave now. Click \"Cancel\" in order to save them first.';\n  else //netscape\n   return false;\n }\n}\nfunction addHandler(target, eventName, handler) {\n if (target.attachEvent) {\n  target.attachEvent('on'+eventName, handler);\n } else {\n  target.addEventListener(eventName, handler, false);\n }\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One piece of the puzzle:</p>\n\n<pre><code>/**\n * Determines if a form is dirty by comparing the current value of each element\n * with its default value.\n *\n * @param {Form} form the form to be checked.\n * @return {Boolean} &lt;code&gt;true&lt;/code&gt; if the form is dirty, &lt;code&gt;false&lt;/code&gt;\n *                   otherwise.\n */\nfunction formIsDirty(form) {\n  for (var i = 0; i &lt; form.elements.length; i++) {\n    var element = form.elements[i];\n    var type = element.type;\n    if (type == \"checkbox\" || type == \"radio\") {\n      if (element.checked != element.defaultChecked) {\n        return true;\n      }\n    }\n    else if (type == \"hidden\" || type == \"password\" ||\n             type == \"text\" || type == \"textarea\") {\n      if (element.value != element.defaultValue) {\n        return true;\n      }\n    }\n    else if (type == \"select-one\" || type == \"select-multiple\") {\n      for (var j = 0; j &lt; element.options.length; j++) {\n        if (element.options[j].selected !=\n            element.options[j].defaultSelected) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n</code></pre>\n\n<p><a href=\"http://developer.mozilla.org/en/DOM/window.onbeforeunload\">And another</a>:</p>\n\n<pre><code>window.onbeforeunload = function(e) {\n  e = e || window.event;  \n  if (formIsDirty(document.forms[\"someForm\"])) {\n    // For IE and Firefox\n    if (e) {\n      e.returnValue = \"You have unsaved changes.\";\n    }\n    // For Safari\n    return \"You have unsaved changes.\";\n  }\n};\n</code></pre>\n\n<p>Wrap it all up, and what do you get?</p>\n\n<pre><code>var confirmExitIfModified = (function() {\n  function formIsDirty(form) {\n    // ...as above\n  }\n\n  return function(form, message) {\n    window.onbeforeunload = function(e) {\n      e = e || window.event;\n      if (formIsDirty(document.forms[form])) {\n        // For IE and Firefox\n        if (e) {\n          e.returnValue = message;\n        }\n        // For Safari\n        return message;\n      }\n    };\n  };\n})();\n\nconfirmExitIfModified(\"someForm\", \"You have unsaved changes.\");\n</code></pre>\n\n<p>You'll probably also want to change the registration of the <code>beforeunload</code> event handler to use <code>LIBRARY_OF_CHOICE</code>'s event registration.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Using jQuery:</p>\n\n<pre><code>var _isDirty = false;\n$(\"input[type='text']\").change(function(){\n  _isDirty = true;\n});\n// replicate for other input types and selects\n</code></pre>\n\n<p>Combine with <code>onunload</code>/<code>onbeforeunload</code> methods as required.</p>\n\n<p>From the comments, the following references all input fields, without duplicating code:</p>\n\n<pre><code>$(':input').change(function () {\n</code></pre>\n\n<p>Using <code>$(\":input\")</code> refers to all input, textarea, select, and button elements.</p>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>Thanks for the replies everyone.  I ended up implementing a solution using JQuery and the <a href=\"http://code.google.com/p/protect-data/\">Protect-Data</a> plug-in.  This allows me to automatically apply monitoring to all controls on a page.</p>\n\n<p>There are a few caveats however, especially when dealing with an ASP .Net application:</p>\n\n<ul>\n<li><p>When a user chooses the cancel option, the doPostBack function will throw a JavaScript error.  I had to manually put a try-catch around the .submit call within doPostBack to suppress it.</p></li>\n<li><p>On some pages, a user could perform an action that performs a postback to the same page, but isn't a save.  This results in any JavaScript logic resetting, so it thinks nothing has changed after the postback when something may have.  I had to implement a hidden textbox that gets posted back with the page, and is used to hold a simple boolean value indicating whether the data is dirty.  This gets persisted across postbacks.</p></li>\n<li><p>You may want some postbacks on the page to not trigger the dialog, such as a Save button.  In this case, you can use JQuery to add an OnClick function which sets window.onbeforeunload to null.</p></li>\n</ul>\n\n<p>Hopefully this is helpful for anyone else who has to implement something similar.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This is exactly what the Fleegix.js plugin <code>fleegix.form.diff</code> (<a href=\"http://js.fleegix.org/plugins/form/diff\" rel=\"nofollow\">http://js.fleegix.org/plugins/form/diff</a>) was created for. Serialize the initial state of the form on load using <code>fleegix.form.toObject</code> (<a href=\"http://js.fleegix.org/ref#fleegix.form.toObject\" rel=\"nofollow\">http://js.fleegix.org/ref#fleegix.form.toObject</a>) and save it in a variable, then compare with the current state using <code>fleegix.form.diff</code> on unload. Easy as pie.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The following solution works for prototype (tested in FF, IE 6 and Safari). It uses a generic form observer (which fires form:changed when any fields of the form have been modified), which you can use for other stuff as well.</p>\n\n<pre><code>/* use this function to announce changes from your own scripts/event handlers.\n * Example: onClick=\"makeDirty($(this).up('form'));\"\n */\nfunction makeDirty(form) {\n    form.fire(\"form:changed\");\n}\n\nfunction handleChange(form, event) {\n    makeDirty(form);\n}\n\n/* generic form observer, ensure that form:changed is being fired whenever\n * a field is being changed in that particular for\n */\nfunction setupFormChangeObserver(form) {\n    var handler = handleChange.curry(form);\n\n    form.getElements().each(function (element) {\n        element.observe(\"change\", handler);\n    });\n}\n\n/* installs a form protector to a form marked with class 'protectForm' */\nfunction setupProtectForm() {\n    var form = $$(\"form.protectForm\").first();\n\n    /* abort if no form */\n    if (!form) return;\n\n    setupFormChangeObserver(form);\n\n    var dirty = false;\n    form.observe(\"form:changed\", function(event) {\n        dirty = true;\n    });\n\n    /* submitting the form makes the form clean again */\n    form.observe(\"submit\", function(event) {\n        dirty = false;\n    });\n\n    /* unfortunatly a propper event handler doesn't appear to work with IE and Safari */\n    window.onbeforeunload = function(event) {\n        if (dirty) {\n            return \"There are unsaved changes, they will be lost if you leave now.\";\n        }\n    };\n}\n\ndocument.observe(\"dom:loaded\", setupProtectForm);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The following uses the browser's onbeforeunload function and jquery to capture any onchange event.  IT also looks for any submit or reset buttons to reset the flag indicating changes have occurred. </p>\n\n<pre><code>dataChanged = 0;     // global variable flags unsaved changes      \n\nfunction bindForChange(){    \n     $('input,checkbox,textarea,radio,select').bind('change',function(event) { dataChanged = 1})\n     $(':reset,:submit').bind('click',function(event) { dataChanged = 0 })\n}\n\n\nfunction askConfirm(){  \n    if (dataChanged){ \n        return \"You have some unsaved changes.  Press OK to continue without saving.\" \n    }\n}\n\nwindow.onbeforeunload = askConfirm;\nwindow.onload = bindForChange;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I expanded on Slace's suggestion above, to include most editable elements and also excluding certain elements (with a CSS style called \"srSearch\" here) from causing the dirty flag to be set.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n        var _isDirty = false;\n        $(document).ready(function () {            \n\n            // Set exclude CSS class on radio-button list elements\n            $('table.srSearch input:radio').addClass(\"srSearch\");\n\n            $(\"input[type='text'],input[type='radio'],select,textarea\").not(\".srSearch\").change(function () {\n                _isDirty = true;\n            });\n        });\n\n        $(window).bind('beforeunload', function () {\n            if (_isDirty) {\n                return 'You have unsaved changes.';\n            }\n        });        \n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I recently contributed to an open source jQuery plugin called <a href=\"https://github.com/snikch/jquery.dirtyforms\" rel=\"nofollow\">dirtyForms</a>. </p>\n\n<p>The plugin is designed to work with dynamically added HTML, supports multiple forms, can support virtually any dialog framework, falls back to the browser beforeunload dialog, has a pluggable helper framework to support getting dirty status from custom editors (a tinyMCE plugin is included), works within iFrames, and the dirty status can be set or reset at will.</p>\n\n<p><a href=\"https://github.com/snikch/jquery.dirtyforms\" rel=\"nofollow\">https://github.com/snikch/jquery.dirtyforms</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here's a javascript / jquery solution that is simple. It accounts for \"undos\" by the user, it is encapsulated within a function for ease of application, and it doesn't misfire on submit. Just call the function and pass the ID of your form.</p>\n\n<p>This function serializes the form once when the page is loaded, and again before the user leaves the page. If the two form states are different, the prompt is shown.</p>\n\n<p>Try it out: <a href=\"http://jsfiddle.net/skibulk/Ydt7Y/\" rel=\"nofollow\">http://jsfiddle.net/skibulk/Ydt7Y/</a></p>\n\n<pre><code>function formUnloadPrompt(formSelector) {\n    var formA = $(formSelector).serialize(), formB, formSubmit = false;\n\n    // Detect Form Submit\n    $(formSelector).submit( function(){\n        formSubmit = true;\n    });\n\n    // Handle Form Unload    \n    window.onbeforeunload = function(){\n        if (formSubmit) return;\n        formB = $(formSelector).serialize();\n        if (formA != formB) return \"Your changes have not been saved.\";\n    };\n}\n\n$(function(){\n    formUnloadPrompt('form');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>      var unsaved = false;\n    $(\":input\").change(function () {         \n        unsaved = true;\n    });\n\n    function unloadPage() {         \n        if (unsaved) {             \n          alert(\"You have unsaved changes on this page. Do you want to leave this page and discard your changes or stay on this page?\");\n        }\n    } \n</code></pre>\n\n<p>window.onbeforeunload = unloadPage;</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Detect form changes with using jQuery is very simple:</p>\n\n<pre><code>var formInitVal = $('#formId').serialize(); // detect form init value after form is displayed\n\n// check for form changes\nif ($('#formId').serialize() != formInitVal) {\n    // show confirmation alert\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a requirement to implement an \"Unsaved Changes\" prompt in an ASP .Net application.  If a user modifies controls on a web form, and attempts to navigate away before saving, a prompt should appear warning them that they have unsaved changes, and give them the option to cancel and stay on the current page.  The prompt should not display if the user hasn't touched any of the controls.</p>\n\n<p>Ideally I'd like to implement this in JavaScript, but before I go down the path of rolling my own code, are there any existing frameworks or recommended design patterns for achieving this?  Ideally I'd like something that can easily be reused across multiple pages with minimal changes.</p>\n",
            "last_activity_date": 1418640499,
            "question_id": 155739,
            "score": 54,
            "tags": [
                "javascript",
                "asp.net",
                "prompt"
            ],
            "title": "Detecting Unsaved Changes"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The difference is in the second argument. The second argument to <code>substring</code> is the index to stop at (but not include), but the second argument to <code>substr</code> is the maximum length to return.</p>\n\n<p>Links?</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/substr\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/substr</a></p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/substring\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/substring</a></p>\n",
                    "is_accepted": true,
                    "score": 287
                },
                {
                    "body": "<p><code>substr</code> (<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring\">MDN</a>) takes parameters as <code>(from, length)</code>.<br>\n<code>substring</code> (<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr\">MDN</a>) takes parameters as <code>(from, to)</code>.</p>\n\n<pre><code>alert(\"abc\".substr(1,2)); // returns \"bc\"\nalert(\"abc\".substring(1,2)); // returns \"b\"\n</code></pre>\n\n<p>You can remember substring takes indices, as does yet another string extraction method, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice\">slice</a>.</p>\n\n<p>When starting from 0 you can use either method.</p>\n",
                    "is_accepted": false,
                    "score": 93
                },
                {
                    "body": "<p>Another gotcha I recently came across is that in IE 8, <code>\"abcd\".substr(-1)</code> erroneously returns <code>\"abcd\"</code>, whereas Firefox 3.6 returns <code>\"d\"</code> as it should. <code>slice</code> works correctly on both.</p>\n\n<p>More on this topic can be found <a href=\"http://rapd.wordpress.com/2007/07/12/javascript-substr-vs-substring/\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><a href=\"http://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/3\" rel=\"nofollow\">Slice vs Substr vs Substring vs [ ] Methods</a></p>\n\n<p>There are performance benefits to each of these javascript methods. Please use these functions accordingly.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As hinted at in yatima2975's answer, there is an additional difference:</p>\n\n<p>substr() accepts a negative starting position as an offset from the end of the string.  substring() does not.</p>\n\n<p>So to sum up the functional differences:</p>\n\n<p>substring(begin-offset, end-offset + 1) where begin-offset is 0 or greater</p>\n\n<p>substr(begin-offset, length) where begin-offset may also be negative</p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>What is the difference between</p>\n\n<pre><code>alert(\"abc\".substr(0,2));\n</code></pre>\n\n<p>and</p>\n\n<pre><code>alert(\"abc\".substring(0,2));\n</code></pre>\n\n<p>They both seem to output \u201cab\u201d.</p>\n",
            "last_activity_date": 1424753102,
            "question_id": 3745515,
            "score": 241,
            "tags": [
                "javascript",
                "substring"
            ],
            "title": "What is the difference between substr and substring?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>You could do it like this:</p>\n\n<ul>\n<li>mark the <code>&lt;a&gt;</code> with a class, say \"cancel\"</li>\n<li><p>set up the dialog by acting on all elements with class=\"cancel\":</p>\n\n<pre><code>$('a.cancel').click(function() { \n  var a = this; \n  $('#myDialog').dialog({\n\tbuttons: {\n\t  \"Yes\": function() {\n\t\t window.location = a.href; \n\t  }\n\t}\n  }); \n  return false;\n});\n</code></pre></li>\n</ul>\n\n<p>(plus your other options)</p>\n\n<p>The key points here are:</p>\n\n<ul>\n<li>make it as unobtrusive as possible</li>\n<li>if all you need is the URL, you already have it in the href.</li>\n</ul>\n\n<p>However, I recommend that you make this  a POST instead of a GET, since a cancel action has side effects and thus <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html\">doesn't comply with GET semantics</a>...</p>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>In terms of what you are doing with jQuery, my understanding is that you can chain functions like you have and the inner ones have access to variables from the outer ones. So is your ShowDialog(x) function contains these other functions, you can re-use the x variable within them and it will be taken as a reference to the parameter from the outer function.</p>\n\n<p>I agree with mausch, you should really look at using POST for these actions, which will add a <code>&lt;form&gt;</code> tag around each element, but make the chances of an automated script or tool triggering the Cancel event much less likely. The Change action can remain as is because it (presumably just opens an edit form).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have now tried your suggestions and found that it kinda works,</p>\n\n<ol>\n<li>The dialog div is alsways written out in plaintext</li>\n<li>With the $.post version it actually works in terms that the controller gets called and actually cancels the booking, but the dialog stays open and page doesn't refresh.\nWith the get version window.location = h.ref works great. </li>\n</ol>\n\n<p>Se my \"new\" script below:</p>\n\n<pre><code>$('a.cancel').click(function() {\n        var a = this;               \n        $(\"#dialog\").dialog({\n            autoOpen: false,\n            buttons: {\n                \"Ja\": function() {\n                    $.post(a.href);                     \n                },\n                \"Nej\": function() { $(this).dialog(\"close\"); }\n            },\n            modal: true,\n            overlay: {\n                opacity: 0.5,\n\n            background: \"black\"\n        }\n    });\n    $(\"#dialog\").dialog('open');\n    return false;\n});\n</code></pre>\n\n<p>});   </p>\n\n<p>Any clues?</p>\n\n<p>oh and my Action link now looks like this:</p>\n\n<pre><code>&lt;%= Html.ActionLink(\"Cancel\", \"Cancel\", new { id = v.BookingId }, new  { @class = \"cancel\" })%&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Ok the first issue with the div tag was easy enough:\nI just added a <code>style=\"display:none;\"</code> to it and then before showing the dialog I added this in my dialog script:</p>\n\n<pre><code>$(\"#dialog\").css(\"display\", \"inherit\");\n</code></pre>\n\n<p>But for the post version I'm still out of luck.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Looking at your code what you need to do is add the functionality to close the window and update the page. In your \"Yes\" function you should write:</p>\n\n<pre><code>        buttons: {\n            \"Ja\": function() {\n                $.post(a.href);\n                $(a). // code to remove the table row\n                $(\"#dialog\").dialog(\"close\");\n            },\n            \"Nej\": function() { $(this).dialog(\"close\"); }\n        },\n</code></pre>\n\n<p>The code to remove the table row isn't fun to write so I'll let you deal with the nitty gritty details, but basically, you need to tell the dialog what to do after you post it. It may be a smart dialog but it needs some kind of direction.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just give you some idea may help you, if you want fully control dialog, you can try to avoid use of default button options, and add buttons by yourself in your #dialog div. You also can put data into some dummy attribute of link, like Click. call attr(\"data\") when you need it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>After SEVERAL HOURS of try/catch I finally came with this working example, its working on AJAX POST with new rows appends to the TABLE on the fly (that was my real problem): </p>\n\n<p>Tha magic came with link this:</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"removecompany(this);return false;\" id=\"remove_13\"&gt;remove&lt;/a&gt;\n&lt;a href=\"#\" onclick=\"removecompany(this);return false;\" id=\"remove_14\"&gt;remove&lt;/a&gt;\n&lt;a href=\"#\" onclick=\"removecompany(this);return false;\" id=\"remove_15\"&gt;remove&lt;/a&gt;\n</code></pre>\n\n<p>This is the final working with AJAX POST and Jquery Dialog:  </p>\n\n<pre><code>  &lt;script type= \"text/javascript\"&gt;/*&lt;![CDATA[*/\n    var $k = jQuery.noConflict();  //this is for NO-CONFLICT with scriptaculous\n     function removecompany(link){\n        companyid = link.id.replace('remove_', '');\n    $k(\"#removedialog\").dialog({\n        \t\tbgiframe: true,\n        \t\tresizable: false,\n        \t\theight:140,\n        \t\tautoOpen:false,\n        \t\tmodal: true,\n        \t\toverlay: {\n        \t\t\tbackgroundColor: '#000',\n        \t\t\topacity: 0.5\n        \t\t},\n        \t\tbuttons: {\n        \t\t\t'Are you sure ?': function() {\n        \t\t\t\t$k(this).dialog('close');\n        \t\t\t\talert(companyid);\n        \t\t\t\t$k.ajax({\n        \t\t\t\t      type: \"post\",\n        \t\t\t          url: \"../ra/removecompany.php\",\n        \t\t\t          dataType: \"json\",\n        \t\t\t          data: {\n        \t\t\t          \t\t'companyid' : companyid\n        \t\t\t                },\n        \t\t\t          success: function(data) {\n        \t\t\t                //alert(data);\n        \t\t\t                if(data.success)\n        \t\t\t                {\n        \t\t\t                \t//alert('success');\t\n        \t\t\t                \t$k('#companynew'+companyid).remove();\n        \t\t\t                }\n        \t\t\t      }\n        \t\t\t\t}); // End ajax method\n        \t\t\t},\n        \t\t\tCancel: function() {\n        \t\t\t\t$k(this).dialog('close');\n        \t\t\t}\n        \t\t}\n        \t});\n        \t$k(\"#removedialog\").dialog('open');\t\n        \t//return false;\n     }\n    /*]]&gt;*/&lt;/script&gt;\n    &lt;div id=\"removedialog\" title=\"Remove a Company?\"&gt;\n        &lt;p&gt;&lt;span class=\"ui-icon ui-icon-alert\" style=\"float:left; margin:0 7px 20px 0;\"&gt;&lt;/span&gt;\n        This company will be permanently deleted and cannot be recovered. Are you sure?&lt;/p&gt;\n    &lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jQuery provides a method which store data for you, no need to use a dummy attribute or to find workaround to your problem.</p>\n\n<p>Bind the click event:</p>\n\n<pre><code>$('a[href*=/Booking.aspx/Change]').bind('click', function(e) {\n    e.preventDefault();\n    $(\"#dialog-confirm\")\n        .data('link', this)  // The important part .data() method\n        .dialog('open');\n});\n</code></pre>\n\n<p>And your dialog:</p>\n\n<pre><code>$(\"#dialog-confirm\").dialog({\n    autoOpen: false,\n    resizable: false,\n    height:200,\n    modal: true,\n    buttons: {\n        Cancel: function() {\n            $(this).dialog('close');\n        },\n        'Delete': function() {\n            $(this).dialog('close');\n            var path = $(this).data('link').href; // Get the stored result\n            $(location).attr('href', path);\n        }\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 210
                },
                {
                    "body": "<p>A solution inspired by Boris Guery that I employed looks like this:\nThe link:</p>\n\n<pre><code>&lt;a href=\"#\" class = \"remove {id:15} \" id = \"mylink1\" &gt;This is my clickable link&lt;/a&gt;\n</code></pre>\n\n<p>bind an action to it:</p>\n\n<pre><code>$('.remove').live({\n        click:function(){\n            var data = $('#'+this.id).metadata();\n            var id = data.id;\n            var name = data.name;\n            $('#dialog-delete')\n                .data('id', id)\n                .dialog('open');    \n            return false;\n        }\n    });\n</code></pre>\n\n<p>And then to access the id field (in this case with value of 15:</p>\n\n<pre><code>$('#dialog-delete').dialog({\n    autoOpen: false,\n    position:'top',\n    width: 345,\n    resizable: false,\n    draggable: false,\n    modal: true,\n    buttons: {            \n        Cancel: function() {\n\n            $(this).dialog('close');\n        },\n        'Confirm delete': function() {\n            var id = $(this).data('id');\n            $.ajax({\n                url:\"http://example.com/system_admin/admin/delete/\"+id,\n                type:'POST',\n                dataType: \"json\",\n                data:{is_ajax:1},\n                success:function(msg){\n\n                }\n            })\n        }\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This work for me:</p>\n\n<p><code>&lt;a href=\"#\" onclick=\"sposta(100)\"&gt;SPOSTA&lt;/a&gt;</code></p>\n\n<pre><code>function sposta(id) {\n        $(\"#sposta\").data(\"id\",id).dialog({\n            autoOpen: true,\n            modal: true,\n            buttons: { \"Sposta\": function () { alert($(this).data('id')); } }\n        });\n    }\n</code></pre>\n\n<p>When you click on \"Sposta\" in dialog alert display 100</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>i hope this helps</p>\n\n<pre><code>$(\"#dialog-yesno\").dialog({\n    autoOpen: false,\n    resizable: false,\n    closeOnEscape: false,\n    height:180,\n    width:350,\n    modal: true,\n    show: \"blind\",\n    open: function() {\n        $(document).unbind('keydown.dialog-overlay');\n        },\n    buttons: {\n        \"Delete\": function() {\n            $(this).dialog(\"close\");\n            var dir = $(this).data('link').href;\n            var arr=dir.split(\"-\");\n            delete(arr[1]);\n        },\n    \"Cancel\": function() {\n        $(this).dialog(\"close\");\n        }\n    }\n});\n\n\n\n&lt;a href=\"product-002371\" onclick=\"$( '#dialog-yesno' ).data('link', this).dialog( 'open' ); return false;\"&gt;Delete&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm developing an ASP.Net MVC site and on it I list some bookings from a database query in a table with an ActionLink to cancel the booking on a specific row with a certain BookingId like this:   </p>\n\n           \n            My bookings\n    </p>\n\n<pre><code>&lt;table cellspacing=\"3\"&gt;\n    &lt;thead&gt;\n        &lt;tr style=\"font-weight: bold;\"&gt;\n            &lt;td&gt;Date&lt;/td&gt;\n            &lt;td&gt;Time&lt;/td&gt;\n            &lt;td&gt;Seats&lt;/td&gt;      \n            &lt;td&gt;&lt;/td&gt;              \n            &lt;td&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/thead&gt;            \n    &lt;tr&gt;\n        &lt;td style=\"width: 120px;\"&gt;2008-12-27&lt;/td&gt;\n        &lt;td style=\"width: 120px;\"&gt;13:00 - 14:00&lt;/td&gt;\n        &lt;td style=\"width: 100px;\"&gt;2&lt;/td&gt;\n        &lt;td style=\"width: 60px;\"&gt;&lt;a href=\"/Booking.aspx/Cancel/15\"&gt;cancel&lt;/a&gt;&lt;/td&gt;\n        &lt;td style=\"width: 80px;\"&gt;&lt;a href=\"/Booking.aspx/Change/15\"&gt;change&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;            \n    &lt;tr&gt;\n        &lt;td style=\"width: 120px;\"&gt;2008-12-27&lt;/td&gt;\n        &lt;td style=\"width: 120px;\"&gt;15:00 - 16:00&lt;/td&gt;\n        &lt;td style=\"width: 100px;\"&gt;3&lt;/td&gt;\n        &lt;td style=\"width: 60px;\"&gt;&lt;a href=\"/Booking.aspx/Cancel/10\"&gt;cancel&lt;/a&gt;&lt;/td&gt;\n        &lt;td style=\"width: 80px;\"&gt;&lt;a href=\"/Booking.aspx/Change/10\"&gt;change&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;  \n&lt;/table&gt;\n</code></pre>\n\n<p>What would be nice is if I could use the jQuery Dialog to popup a message asking if the user is sure he wants to cancel the booking. I have been trying get this to work but I keep getting stuck on how to create a jQuery function that accepts parameters so that I can replace the <code>&lt;a href=\"/Booking.aspx/Cancel/10\"&gt;cancel&lt;/a&gt;</code> with <code>&lt;a href=\"#\" onclick=\"ShowDialog(10)\"&gt;cancel&lt;/a&gt;</code>. The ShowDialog function would then open the dialog and also pass the paramter 10 to the dialog so that if the user clicks yes then It will post the href: /Booking.aspx/Change/10</p>\n\n<p>I have created the jQuery Dialog in a script like this:</p>\n\n<pre><code>$(function() {\n    $(\"#dialog\").dialog({\n        autoOpen: false,\n        buttons: {\n            \"Yes\": function() {\n                alert(\"a Post to :/Booking.aspx/Cancel/10 would be so nice here instead of the alert\");},\n            \"No\": function() {$(this).dialog(\"close\");}\n        },\n        modal: true,\n        overlay: {\n            opacity: 0.5,\n            background: \"black\"\n        }\n    });\n});\n</code></pre>\n\n<p>and the dialog itself:</p>\n\n<pre><code>   &lt;div id=\"dialog\" title=\"Cancel booking\"&gt;Are you sure you want to cancel your booking?&lt;/div&gt;\n</code></pre>\n\n<p>So finally to my question: How can I accomplish this? or is there a better way of doing it?</p>\n",
            "last_activity_date": 1339269632,
            "question_id": 394491,
            "score": 64,
            "tags": [
                "javascript",
                "jquery",
                "asp.net-mvc",
                "jquery-ui"
            ],
            "title": "Passing data to a jQuery UI Dialog"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>It would probably make most sense (if you have control over the folder) to create an index.js file and then assign all the \"modules\" and then simply require that.</p>\n\n<p><em>yourfile.js</em></p>\n\n<pre><code>var routes = require(\"./routes\");\n</code></pre>\n\n<p><em>index.js</em></p>\n\n<pre><code>exports.something = require(\"./routes/something.js\");\nexports.others = require(\"./routes/others.js\");\n</code></pre>\n\n<p>If you don't know the filenames you should write some kind of loader.</p>\n\n<p>Working example of a loader:</p>\n\n<pre><code>var normalizedPath = require(\"path\").join(__dirname, \"routes\");\n\nrequire(\"fs\").readdirSync(normalizedPath).forEach(function(file) {\n  require(\"./routes/\" + file);\n});\n\n// Continue application logic here\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 173
                },
                {
                    "body": "<p>This might be helpful:</p>\n\n<p><a href=\"https://github.com/stephenhandley/requireindex\">https://github.com/stephenhandley/requireindex</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Another option is to use the package <a href=\"https://npmjs.org/package/require-dir\">require-dir</a> which let's you do the following. It supports recursion as well.<br>\n<code>\nvar requireDir = require('require-dir');<br>\nvar dir = requireDir('./path/to/dir');\n</code></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I have a folder /fields full of files with a single class each, ex:</p>\n\n<pre><code>fields/Text.js -&gt; Test class\nfields/Checkbox.js -&gt; Checkbox class\n</code></pre>\n\n<p>Drop this in fields/index.js to export each class:</p>\n\n<pre><code>var collectExports, fs, path,\n  __hasProp = {}.hasOwnProperty;\n\nfs = require('fs');    \npath = require('path');\n\ncollectExports = function(file) {\n  var func, include, _results;\n\n  if (path.extname(file) === '.js' &amp;&amp; file !== 'index.js') {\n    include = require('./' + file);\n    _results = [];\n    for (func in include) {\n      if (!__hasProp.call(include, func)) continue;\n      _results.push(exports[func] = include[func]);\n    }\n    return _results;\n  }\n};\n\nfs.readdirSync('./fields/').forEach(collectExports);\n</code></pre>\n\n<p>This makes the modules act more like they would in Python:</p>\n\n<pre><code>var text = new Fields.Text()\nvar checkbox = new Fields.Checkbox()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Base on @tbranyen's solution, I create an <code>index.js</code> file that load arbitrary javascripts under current folder as part of the <code>exports</code>. </p>\n\n<pre><code>// Load `*.js` under current directory as properties\n//  i.e., `User.js` will become `exports['User']` or `exports.User`\nrequire('fs').readdirSync(__dirname + '/').forEach(function(file) {\n  if (file.match(/.+\\.js/g) !== null &amp;&amp; file !== 'index.js') {\n    var name = file.replace('.js', '');\n    exports[name] = require('./' + file);\n  }\n});\n</code></pre>\n\n<p>Then you can <code>require</code> this directory from any where else. </p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>One module that I have been using for this exact use case is <a href=\"https://github.com/felixge/node-require-all\" rel=\"nofollow\">require-all</a>.</p>\n\n<p>It recursively requires all files in a given directory and its sub directories as long they don't match the <code>excludeDirs</code> property.</p>\n\n<p>It also allows specifying a file filter and how to derive the keys of the returned hash from the filenames.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you include all files of *.js in directory example (\"app/lib/*.js\"):</p>\n\n<h1>In directory app/lib</h1>\n\n<p>example.js:</p>\n\n<pre><code>module.exports = function (example) { }\n</code></pre>\n\n<p>example-2.js:</p>\n\n<pre><code>module.exports = function (example2) { }\n</code></pre>\n\n<h1>In directory app create index.js</h1>\n\n<p>index.js:</p>\n\n<pre><code>module.exports = require('./app/lib');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I recommend using <a href=\"https://github.com/isaacs/node-glob\" rel=\"nofollow\">node-glob</a> to accomplish that task.</p>\n\n<pre><code>var glob = require( 'glob' )\n  , path = require( 'path' );\n\nglob.sync( './routes/**/*.js' ).forEach( function( file ) {\n  require( path.resolve( file ) );\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I require all files in a folder in node.js?</p>\n\n<p>need something like:</p>\n\n<pre><code>files.forEach(function (v,k){\n  // require routes\n  require('./routes/'+v);\n}};\n</code></pre>\n",
            "last_activity_date": 1426031603,
            "question_id": 5364928,
            "score": 101,
            "tags": [
                "javascript",
                "node.js",
                "folder",
                "require"
            ],
            "title": "node.js require all files in a folder?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Edit: For an overview which also covers some ES6 declarations (<code>let</code>, <code>const</code>): <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Scope_Cheatsheet\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Scope_Cheatsheet</a></p>\n\n<p>This weird behavior depends on </p>\n\n<ol>\n<li>How you define the functions and </li>\n<li>When you call them.</li>\n</ol>\n\n<p>Here's some examples.</p>\n\n<pre><code>bar(); //This won't throw an error\nfunction bar() {}\n\nfoo(); //This will throw an error\nvar foo = function() {}\n\n----\n\nbar();\nfunction bar() {\n    foo(); //This will throw an error\n}\nvar foo = function() {}\n\n----\n\nbar();\nfunction bar() {\n    foo(); //This _won't_ throw an error\n}\nfunction foo() {}\n\n---\n\nfunction bar() {\n    foo(); //no error\n}\nvar foo = function() {}\nbar();\n</code></pre>\n\n<p>This is because of something called <strong>hoisting</strong>!</p>\n\n<p>There are two ways to define functions: Function <em>declaration</em> and function <em>expression</em>. The difference is annoying and minute, so let's just say this slightly wrong thing: If you're writing it like <code>function name() {}</code>, it's a <strong>declaration</strong>, and when you write it like <code>var name = function() {}</code> (or an anonymous function assigned to a return, things like that), it's a function <strong>expression</strong>.</p>\n\n<h3>First, let's look at how variables are handled:</h3>\n\n<pre><code>var foo = 42;\n\n//the interpreter turns it into this:\nvar foo;\nfoo = 42;\n</code></pre>\n\n<h3>Now, how function <em>declarations</em> are handled:</h3>\n\n<pre><code>var foo = 42;\nfunction bar() {}\n\n//turns into\nvar foo; //Insanity! It's now at the top\nfunction bar() {}\nfoo = 42;\n</code></pre>\n\n<p>The <code>var</code> statements \"throws\" the <em>creation</em> of <code>foo</code> to the very top, but doesn't assign the value to it yet. The function declaration comes next in line, and finally a value is assigned to <code>foo</code>.</p>\n\n<h3>And what about this?</h3>\n\n<pre><code>bar();\nvar foo = 42;\nfunction bar() {}\n//=&gt;\nvar foo;\nfunction bar() {}\nbar();\nfoo = 42;\n</code></pre>\n\n<p>Only the <em>declaration</em> of <code>foo</code> is moved to the top. The assignment comes only after the call to <code>bar</code> is made, where it was before all the hoisting occurred.</p>\n\n<h3>And finally, for conciseness:</h3>\n\n<pre><code>bar();\nfunction bar() {}\n//turns to\nfunction bar() {}\nbar();\n</code></pre>\n\n<h3>Now, what about function <em>expressions</em>?</h3>\n\n<pre><code>var foo = function() {}\nfoo();\n//=&gt;\nvar foo;\nfoo = function() {}\nfoo();\n</code></pre>\n\n<p>Just like regular variables, first <code>foo</code> is <em>declared</em> at the highest point of the scope, then it is assigned a value.</p>\n\n<h3>Let's see why the second example throws an error.</h3>\n\n<pre><code>bar();\nfunction bar() {\n    foo();\n}\nvar foo = function() {}\n//=&gt;\nvar foo;\nfunction bar() {\n    foo();\n}\nbar();\nfoo = function() {}\n</code></pre>\n\n<p>As we've seen before, only the creating of <code>foo</code> is hoisted, the assignment comes where it appeared in the \"original\" (un-hoisted) code.  When <code>bar</code> is called, it is before <code>foo</code> is assigned a value, so <code>foo === undefined</code>. Now in the function-body of <code>bar</code>, it's as if you're doing <code>undefined()</code>, which throws an error.</p>\n\n<hr>\n\n<p><strong>tl;dr</strong> If you're not calling anything until everything loads, you should be fine.</p>\n",
                    "is_accepted": true,
                    "score": 127
                },
                {
                    "body": "<p>The main reason is probably that JSLint does only one pass on the file so it doesn't know you <em>will</em> define such a function.</p>\n\n<p>If you used functions statement syntax</p>\n\n<pre><code>function foo(){ ... }\n</code></pre>\n\n<p>There is actually no difference at all where you declare the function (it always behaves as if the declaration is on the beginning).</p>\n\n<p>On the other hand, if your function was set like a regular variable</p>\n\n<pre><code>var foo = function() { ... };\n</code></pre>\n\n<p>You have to guarantee you wont call it before the initialization (this can actually be a source of bugs).</p>\n\n<hr>\n\n<p>Since reordering tons of code is complicated and can be a source of bugs in itself, I would suggest you search for a workaround. I'm pretty sure you can tell JSLint the name of global variables beforehand so it doesn't complain about undeclared stuff.</p>\n\n<p>Put a comment on the beggining of the file</p>\n\n<pre><code>/*globals foo1 foo2 foo3*/\n</code></pre>\n\n<p>Or you can use a text box there for that. (I also think you can pass this in the arguments to the inner jslint function if you can meddle with it.)</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<h3>Original Question:</h3>\n\n<p><a href=\"http://www.jshint.com/\">JSHint</a> complains when my JavaScript calls a function that is defined further down the page than the call to it. However, my page is for a game, and no functions are called until the whole thing has downloaded. So why does the order functions appear in my code matter?</p>\n\n<h3>EDIT: I think I may have found the answer.</h3>\n\n<p><a href=\"http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting\">http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting</a></p>\n\n<p>I am groaning inside. Looks like I need to spend ANOTHER day re-ordering six thousand lines of code. The learning curve with javascript is not steep at all, but it is very loooooong.</p>\n",
            "last_activity_date": 1422022508,
            "question_id": 7609276,
            "score": 38,
            "tags": [
                "javascript",
                "function",
                "order",
                "jslint",
                "jshint"
            ],
            "title": "JavaScript function order: why does it matter?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>This should be what you are looking for using jQuery.</p>\n\n<pre><code>$(function(){\n  $('#header_nav').data('size','big');\n});\n\n$(window).scroll(function(){\n  if($(document).scrollTop() &gt; 0)\n{\n    if($('#header_nav').data('size') == 'big')\n    {\n        $('#header_nav').data('size','small');\n        $('#header_nav').stop().animate({\n            height:'40px'\n        },600);\n    }\n}\nelse\n  {\n    if($('#header_nav').data('size') == 'small')\n      {\n        $('#header_nav').data('size','big');\n        $('#header_nav').stop().animate({\n            height:'100px'\n        },600);\n      }  \n  }\n});\n</code></pre>\n\n<p>Demonstration:\n    <a href=\"http://jsfiddle.net/jezzipin/JJ8Jc/\">http://jsfiddle.net/jezzipin/JJ8Jc/</a></p>\n",
                    "is_accepted": true,
                    "score": 53
                },
                {
                    "body": "<p>Here a CSS animation fork of jezzipin's Solution</p>\n\n<p>JS:</p>\n\n<pre><code>$(window).on(\"scroll touchmove\", function () {\n  $('#header_nav').toggleClass('tiny', $(document).scrollTop() &gt; 0);\n});\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.header {\n  width:100%;\n  height:100px;\n  background: #26b;\n  color: #fff;\n  position:fixed;\n  top:0;\n  left:0;\n  transition: height 500ms, background 500ms;\n}\n.header.tiny {\n  height:40px;\n  background: #aaa;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/sinky/S8Fnq/\">http://jsfiddle.net/sinky/S8Fnq/</a></p>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>Heres a solution I've worked up. Its a bit more involved, but does the job with a bit of stretchy animation. <a href=\"https://github.com/Jlshulman/Elastic-Bar\" rel=\"nofollow\">https://github.com/Jlshulman/Elastic-Bar</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Based on twitter scroll trouble (<a href=\"http://ejohn.org/blog/learning-from-twitter/\" rel=\"nofollow\">http://ejohn.org/blog/learning-from-twitter/</a>).</p>\n\n<p>Here is my solution, throttling the js scroll event (usefull for mobile devices)</p>\n\n<p>JS:</p>\n\n<pre><code>$(function() {\n    var $document, didScroll, offset;\n    offset = $('.menu').position().top;\n    $document = $(document);\n    didScroll = false;\n    $(window).on('scroll touchmove', function() {\n      return didScroll = true;\n    });\n    return setInterval(function() {\n      if (didScroll) {\n        $('.menu').toggleClass('fixed', $document.scrollTop() &gt; offset);\n        return didScroll = false;\n      }\n    }, 250);\n  });\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.menu {\n  background: pink;\n  top: 5px;\n}\n\n.fixed {\n  width: 100%;\n  position: fixed;\n  top: 0;\n}\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"menu\"&gt;MENU FIXED ON TOP&lt;/div&gt;\n</code></pre>\n\n<p><a href=\"http://codepen.io/anon/pen/BgqHw\" rel=\"nofollow\">http://codepen.io/anon/pen/BgqHw</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://callmenick.com/2014/02/18/create-an-animated-resizing-header-on-scroll/\" rel=\"nofollow\">http://callmenick.com/2014/02/18/create-an-animated-resizing-header-on-scroll/</a></p>\n\n<p>This link has a great tutorial with source code that you can play with, showing how to made elements within the header smaller as well as the header itself.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I wonder how to make a sticky header shrink(with animation) when you scroll down the page and goes back to normal state when the page is scrolled up to the top. Here are two examples to clearify:</p>\n\n<p><a href=\"http://themenectar.com/demo/salient/\">http://themenectar.com/demo/salient/</a></p>\n\n<p><a href=\"http://www.kriesi.at/themes/enfold/\">http://www.kriesi.at/themes/enfold/</a></p>\n\n<p>I get the part to make it fixed, but how should I do to shrink my header when the user scrolls down?</p>\n\n<p>Thanks a ton</p>\n",
            "last_activity_date": 1418817075,
            "question_id": 16442016,
            "score": 35,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "web-deployment"
            ],
            "title": "jQuery - Sticky header that shrinks when scrolling down"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>Edit 7/31/2012 - This functionality is now in the canvas spec! See separate answer here:</strong></p>\n\n<p><a href=\"http://stackoverflow.com/a/11751817/154112\">http://stackoverflow.com/a/11751817/154112</a></p>\n\n<p>Old answer is below for posterity.</p>\n\n<hr>\n\n<p>Depending on your desired effect, you have this as one option:</p>\n\n<pre><code>var can = document.getElementById('b');\nvar ctx = can.getContext('2d');\nctx.scale(5,5);\n$('canvas').each(function () {\n    var ctx = this.getContext(\"2d\");\n    ctx.moveTo(0,0);\n    ctx.lineTo(21,21);\n    ctx.moveTo(0,21);\n    ctx.lineTo(21,0);\n    ctx.stroke();\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/wa95p/\">http://jsfiddle.net/wa95p/</a></p>\n\n<p>Which creates this:</p>\n\n<p><img src=\"http://i.stack.imgur.com/YAQdz.png\" alt=\"enter image description here\"></p>\n\n<p>Probably not what you want. But if you were merely looking to have zero blur then that would be the ticket so I'll offer it just in case.</p>\n\n<p>A more difficult option is to use pixel manipulation and write an algorithm yourself for the job. Each pixel of the first image becomes a 5x5 block of pixels on the new image. It wouldn't be too hard to do with imagedata.</p>\n\n<p>But Canvas and CSS alone won't help you here for scaling one to the other with the exact effect you desire.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<h2>Last Updated: 2014-09-12</h2>\n\n<blockquote>\n  <p>Is there a canvas property or browser setting I can change programmatically to disable interpolation when scaling  elements?</p>\n</blockquote>\n\n<p>The answer is <em>maybe some day</em>. For now, you'll have to resort to hack-arounds to get what you want.</p>\n\n<hr>\n\n<h2><code>image-rendering</code></h2>\n\n<p><a href=\"http://dev.w3.org/csswg/css-images/#the-image-rendering\">The working draft of CSS3 outlines a new property, <strong><code>image-rendering</code></strong></a> that should do what I want:</p>\n\n<blockquote>\n  <p>The image-rendering property provides a hint to the user-agent about what aspects of an image are most important to preserve when the image is scaled, to aid the user-agent in the choice of an appropriate scaling algorithm.</p>\n</blockquote>\n\n<p>The specification outlines three accepted values: <code>auto</code>, <code>crisp-edges</code>, and <strong><code>pixelated</code></strong>.</p>\n\n<blockquote>\n  <p><strong>pixelated:</strong></p>\n  \n  <p>When scaling the image up, the \"nearest neighbor\" or similar algorithm must be used, so that the image appears to be simply composed of very large pixels. When scaling down, this is the same as auto.</p>\n</blockquote>\n\n<h2>Standard? Cross-browser?</h2>\n\n<p>Since this is merely a <em>working draft</em>, there's no guarantee that this will become standard. Browser support is currently spotty, at best.</p>\n\n<p>The Mozilla Developer Network has <a href=\"https://developer.mozilla.org/En/CSS/Image-rendering\">a pretty thorough page dedicated to the current state of the art</a> which I highly recommend reading.</p>\n\n<p>The Webkit developers initially chose to <a href=\"https://bugs.webkit.org/show_bug.cgi?id=56627\">tentatively implement this as <code>-webkit-optimize-contrast</code></a>, but Chromium/Chrome don't seem to be using a version of Webkit that implements this.</p>\n\n<p><strong>Update: 2014-09-12</strong></p>\n\n<p><a href=\"http://www.chromestatus.com/feature/5118058116939776\">Chrome 38 now supports <code>image-rendering: pixelated</code></a>!</p>\n\n<p>Firefox has a <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=856337\">bug report</a> open to get <code>image-rendering: pixelated</code> implemented, but <code>-moz-crisp-edges</code> works for now.</p>\n\n<h2>Solution?</h2>\n\n<p>The most cross-platform, CSS-only solution so far is thus:</p>\n\n<pre><code>canvas {\n    image-rendering: optimizeSpeed;             // Older versions of FF\n    image-rendering: -moz-crisp-edges;          // FF 6.0+\n    image-rendering: -webkit-optimize-contrast; // Safari\n    image-rendering: -o-crisp-edges;            // OS X &amp; Windows Opera (12.02+)\n    image-rendering: pixelated;                 // Awesome future-browsers\n    -ms-interpolation-mode: nearest-neighbor;   // IE\n}\n</code></pre>\n\n<p>Sadly this wont work on all major HTML5 platforms yet (Chrome, in particular).</p>\n\n<p>Of course, one could manually scale up images using nearest-neighbor interpolation onto high-resolution canvas surfaces in javascript, or even pre-scale images server-side, but in my case this will be forbiddingly costly so it is not a viable option.</p>\n\n<p><a href=\"http://impactjs.com\">ImpactJS</a> uses a texture pre-scaling technique to get around all this FUD. Impact's developer, Dominic Szablewski, <a href=\"http://phoboslab.org/log/2012/09/drawing-pixels-is-hard\">wrote a very in-depth article about this</a> (he even ended up citing this question in his research).</p>\n\n<p>See <a href=\"http://stackoverflow.com/a/11751817/742156\">Simon's answer</a> for a canvas-based solution that relies on the <code>imageSmoothingEnabled</code> property (not available in older browsers, but simpler than pre-scaling and pretty widely-supported).</p>\n\n<h2>Live Demo</h2>\n\n<p>If you'd like to test the CSS properties discussed in the MDN article on <code>canvas</code> elements, I've made <a href=\"http://jsfiddle.net/namuol/VAXrL/1459/\">this fiddle</a> which should display something like this, blurry or not, depending on your browser:\n<a href=\"http://jsfiddle.net/namuol/VAXrL/1459/\"><img src=\"http://i.stack.imgur.com/89AWQ.png\" alt=\"a 4:1 (64x64 to 256x256) image of an isometric pixel-art style TV\"></a></p>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>In google chrome, canvas image patterns aren't interpolated.</p>\n\n<p>Here is a working example edited from the namuol answer <a href=\"http://jsfiddle.net/pGs4f/\" rel=\"nofollow\">http://jsfiddle.net/pGs4f/</a></p>\n\n<pre><code>ctx.scale(4, 4);\nctx.fillStyle = ctx.createPattern(image, 'repeat');\nctx.fillRect(0, 0, 64, 64);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>New answer 7/31/2012</strong></p>\n\n<p>This is finally in the canvas spec!</p>\n\n<p>The specification has recently added a property called <code>imageSmoothingEnabled</code>, which defaults to <code>true</code> and determines if images drawn on non-integer coordinates or drawn scaled will use a smoother algorithm. If it is set to <code>false</code> then nearest-neighbor is used, producing a less smooth image and instead just making larger looking pixels.</p>\n\n<p>Image smoothing has only recently been added to the canvas specification and isn\u2019t supported by all browsers, but some browsers have implemented vendor-prefixed versions of this property. On the context there exists <code>mozImageSmoothingEnabled</code> in Firefox and <code>webkitImageSmoothingEnabled</code> in Chrome and Safari, and setting these to false will stop anti-aliasing from occurring. Unfortunately, at the time of writing, IE9 and Opera have not implemented this property, vendor prefixed or otherwise.</p>\n\n<hr>\n\n<p>Preview: <strong><a href=\"http://jsfiddle.net/ikaruss/VAXrL/1164/\">JSFiddle</a></strong></p>\n\n<p>Result:</p>\n\n<p><img src=\"http://i.stack.imgur.com/sMa7m.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p><a href=\"http://jsfiddle.net/saviski/pGs4f/12\" rel=\"nofollow\">Saviski's workaround</a> explicated <a href=\"http://stackoverflow.com/a/10421777/1691517\">here</a> is promising, because it works on:</p>\n\n<ul>\n<li>Chrome 22.0.1229.79 Mac OS X 10.6.8   </li>\n<li>Chrome 22.0.1229.79 m Windows 7  </li>\n<li>Chromium 18.0.1025.168 (Developer Build 134367 Linux) Ubuntu 11.10  </li>\n<li>Firefox 3.6.25 Windows 7  </li>\n</ul>\n\n<p>But not works in the following, but the same effect can be achieved using CSS image-rendering:</p>\n\n<ul>\n<li>Firefox 15.0.1 Mac OS X 10.6.8 (image-rendering:-moz-crisp-edges works in <a href=\"http://jsfiddle.net/VAXrL/21/\" rel=\"nofollow\">this</a> )  </li>\n<li>Opera 12.02 Mac OS X 10.6.8 (image-rendering:-o-crisp-edges works in <a href=\"http://jsfiddle.net/VAXrL/21/\" rel=\"nofollow\">this</a> )  </li>\n<li>Opera 12.02 Windows 7 (image-rendering:-o-crisp-edges works in <a href=\"http://jsfiddle.net/VAXrL/21/\" rel=\"nofollow\">this</a> )  </li>\n</ul>\n\n<p>The problematic are these, because ctx.XXXImageSmoothingEnabled is not working and image-rendering is not working:  </p>\n\n<ul>\n<li>Safari 5.1.7 Mac OS X 10.6.8. (image-rendering:-webkit-optimize-contrast NOT works)  </li>\n<li>Safari 5.1.7 Windows 7 (image-rendering:-webkit-optimize-contrast NOT works)  </li>\n<li>IE 9 Windows 7 (-ms-interpolation-mode:nearest-neighbor NOT works)  </li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><em><strong>NOTE</em></strong>: This has to do with how <em>existing canvas elements are rendered when scaled up</em>, <strong>not</strong> to do with how lines or graphics are rendered <em>onto a canvas surface</em>. In other words, this has everything to do with <em>interpolation</em> of <em>scaled elements</em>, and nothing to do with <em>antialiasing</em> of graphics being drawn on a canvas. I'm not concerned with how the browser draws lines; I care about how the browser renders the canvas element <em>itself</em> when it is scaled up.</p>\n\n<hr>\n\n<p>Is there a canvas property or browser setting I can change programmatically to disable interpolation when scaling <code>&lt;canvas&gt;</code> elements? A cross-browser solution is ideal but not essential; Webkit-based browsers are my main target. Performance is very important.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/2670084/canvas-image-smoothing\">This question</a> is most similar but does not illustrate the problem sufficiently. For what it's worth, I have tried <code>image-rendering: -webkit-optimize-contrast</code> to no avail.</p>\n\n<p>The application will  be a \"retro\" 8-bit styled game written in HTML5+JS to make it clear what I need.</p>\n\n<hr>\n\n<p>To illustrate, here is an example. (<a href=\"http://jsfiddle.net/VAXrL/\">live version</a>)</p>\n\n<p>Suppose I have a 21x21 canvas...</p>\n\n<pre><code>&lt;canvas id='b' width='21' height='21'&gt;&lt;/canvas&gt;\n</code></pre>\n\n<p>...which has css that makes the element 5 times larger (105x105):</p>\n\n<pre><code>canvas { border: 5px solid #ddd; }\ncanvas#b { width: 105px; height: 105px; } /* 5 * 21 = 105 */\n</code></pre>\n\n<p>I draw a simple 'X' on the canvas like so:</p>\n\n<pre><code>$('canvas').each(function () {\n    var ctx = this.getContext(\"2d\");\n    ctx.moveTo(0,0);\n    ctx.lineTo(21,21);\n    ctx.moveTo(0,21);\n    ctx.lineTo(21,0);\n    ctx.stroke();\n});\n</code></pre>\n\n<p>The image on the left is what Chromium (14.0) renders. The image on the right is what I want (hand-drawn for illustrative purposes).</p>\n\n<p><img src=\"http://i.stack.imgur.com/k72vO.png\" alt=\"Chrome interpolates scaled canvas elements\"> <img src=\"http://i.stack.imgur.com/yI76Z.png\" alt=\"A non-interpolated version\"></p>\n",
            "last_activity_date": 1410545779,
            "question_id": 7615009,
            "score": 48,
            "tags": [
                "javascript",
                "html5",
                "canvas"
            ],
            "title": "Disable Interpolation when Scaling a &lt;canvas&gt;"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I can't test it right now, but have you tried <code>css(\"background-color\", \"\")</code>?</p>\n",
                    "is_accepted": true,
                    "score": 557
                },
                {
                    "body": "<p>@Pekka's answer works but leaves an empty <code>style</code> attribute on the DOM in my tests. No big deal, but this removes it all:</p>\n\n<pre><code>removeAttr( 'style' );\n</code></pre>\n\n<p>This assumes you want to remove all dynamic styling and return back to the stylesheet styling.</p>\n",
                    "is_accepted": false,
                    "score": 250
                },
                {
                    "body": "<p>I got the way to remove a style attribute with pure JavaScript just to let you know the way of pure JavaScript </p>\n\n<pre><code>   var bodyStyle = document.body.style;\n    if(bodyStyle .removeAttribute)\n       bodyStyle .removeAttribute('background-color');\n    else        \n       bodyStyle .removeProperty('background-color');\n</code></pre>\n\n<p>Regards </p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>How about something like:</p>\n\n<pre><code>var myCss = $(element).attr('css');\nmyCss = myCss.replace('background-color: '+$(element).css('background-color')+';', '');\nif(myCss == '') {\n  $(element).removeAttr('css');\n} else {\n  $(element).attr('css', myCss);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There are several ways to remove a CSS property using jQuery:</p>\n\n<p><strong>1. Setting the CSS property to its default (initial) value</strong></p>\n\n<pre><code>.css(\"background-color\", \"transparent\")\n</code></pre>\n\n<p>See the <a href=\"https://developer.mozilla.org/en/docs/CSS/background-color\">initial value for the CSS property at MDN</a>.\nHere the default value is <code>transparent</code>. You can also use <code>inherit</code> for several CSS properties to inherite the attribute from its parent.</p>\n\n<p><strong>2. Removing the CSS property</strong></p>\n\n<p>An empty string removes the CSS property, i.e.</p>\n\n<pre><code>.css(\"background-color\",\"\")\n</code></pre>\n\n<p>But beware, as specified in <a href=\"http://api.jquery.com/css/#css2\">jQuery .css() documentation</a>, this removes the property but it has compatibilty issues with IE8 for certain CSS shorthand properties, including <strong>background</strong>.</p>\n\n<blockquote>\n  <p>Setting the value of a style property to an empty string \u2014 e.g.\n  $('#mydiv').css('color', '') \u2014 removes that property from an element\n  if it has already been directly applied, whether in the HTML style\n  attribute, through jQuery's .css() method, or through direct DOM\n  manipulation of the style property. It does not, however, remove a\n  style that has been applied with a CSS rule in a stylesheet or \n  element. Warning: <strong>one notable exception is that, for IE 8 and below,\n  removing a shorthand property such as border or background will\n  remove that style entirely from the element, regardless of what is set\n  in a stylesheet or  element</strong>.</p>\n</blockquote>\n\n<p><strong>3. Removing the whole style of the element</strong></p>\n\n<pre><code>.removeAttr(\"style\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 80
                },
                {
                    "body": "<p>If you use CSS style, you can use:</p>\n\n<pre><code>$(\"#element\").css(\"background-color\",\"none\"); \n</code></pre>\n\n<p>and then replace with:</p>\n\n<pre><code>$(\"#element\").css(\"background-color\", color);\n</code></pre>\n\n<p>If you don't use CSS style and you have attribute in HTML element, you can use:</p>\n\n<pre><code>$(\"#element\").attr(\"style.background-color\",color);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use my Plugin : </p>\n\n<pre><code>$.fn.removeCss=function(all){\n        if(all===true){\n            $(this).removeAttr('class');\n        }\n        return $(this).removeAttr('style')\n    }\n</code></pre>\n\n<p>For your case ,Use it as following : </p>\n\n<pre><code>$(&lt;mySelector&gt;).removeCss();\n</code></pre>\n\n<p>or </p>\n\n<pre><code>$(&lt;mySelector&gt;).removeCss(false);\n</code></pre>\n\n<p>if you want to remove also CSS defined in its classes : </p>\n\n<pre><code>$(&lt;mySelector&gt;).removeCss(true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>either of these jQuery functions should work:</p>\n\n<pre><code>$(\"#element\").removeAttr(\"style\");\n$(\"#element\").removeAttr(\"background-color\") \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>$('#divID').css({\"background\":\"none\"});// remove existing\n\n$('#divID').css({\"background\":\"#bada55\"});// add new color here.\n</code></pre>\n\n<p>Thanks</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This one also work!!</p>\n\n<pre><code>$elem.attr('style','');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm changing CSS with jQuery and I wish to remove the styling I'm adding based on the input value:</p>\n\n<pre><code>if(color != '000000') $(\"body\").css(\"background-color\", color); else // remove style ?\n</code></pre>\n\n<p>How can I do this? Note that the line above runs whenever a color is selected using a color picker (ie. when mouse moves over a color wheel).</p>\n\n<p>2nd note: I can't do this with <code>css(\"background-color\", \"none\")</code> because it will remove the default styling from the css files. I just want to remove the <code>background-color</code> inline style added by jQuery.</p>\n",
            "last_activity_date": 1424941444,
            "question_id": 4036857,
            "score": 304,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "jQuery - remove style added with .css() function"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>KnockoutJS has some great tutorials, particularly <a href=\"http://learn.knockoutjs.com/#/?tutorial=loadingsaving\" rel=\"nofollow\">the one about loading and saving data</a></p>\n\n<p>In their case, they pull data using <code>getJSON()</code> which is extremely fast.  From their example:</p>\n\n<pre><code>function TaskListViewModel() {\n    // ... leave the existing code unchanged ...\n\n    // Load initial state from server, convert it to Task instances, then populate self.tasks\n    $.getJSON(\"/tasks\", function(allData) {\n        var mappedTasks = $.map(allData, function(item) { return new Task(item) });\n        self.tasks(mappedTasks);\n    });    \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Give <a href=\"https://github.com/ericmbarnard/KoGrid\">KoGrid</a> a look. It intelligently manages your row rendering so that it's more performant.</p>\n\n<p>If you you're trying to bind 400 rows to a table using a <code>foreach</code> binding, you're going to have trouble pushing that much through KO into the DOM.</p>\n\n<p>KO does some very interesting things using the <code>foreach</code> binding, most of which are very good operations, but they do start to break down on perf as the size of your array grows.</p>\n\n<p>I've been down the long dark road of trying to bind large data-sets to tables/grids, and you end up needing to break apart/page the data locally.</p>\n\n<p><a href=\"https://github.com/ericmbarnard/KoGrid\">KoGrid</a> does this all. Its been built to only render the rows that the viewer can see on the page, and then virtualize the other rows until they are needed. I think you'll find its perf on 400 items to be much better than you're experiencing.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>As suggested in the comments.</p>\n\n<p>Knockout has it's own native template engine associated with the (foreach, with) bindings. It also supports other template engines, namely jquery.tmpl. Read <a href=\"http://knockoutjs.com/documentation/template-binding.html\">here</a> for more details. I haven't done any benchmarking with different engines so don't know if it will help. Reading your previous comment, in IE7 you may struggle to get the performance that you are after.</p>\n\n<p>As an aside, KO supports any js templating engine, if someone has written the adapter for it that is. You may want to try others out there as jquery tmpl is due to be replaced by <a href=\"https://github.com/BorisMoore/jsrender\">JsRender</a>.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p><strong>Use pagination</strong> with KO in addition to using $.map.</p>\n\n<p>I had the same problem with a large datasets of 1400 records until I used paging with knockout. Using <code>$.map</code> to load the records did make a huge difference but the DOM render time was still hideous. Then I tried using pagination and that made my dataset lighting fast as-well-as more user friendly. A page size of 50 made the dataset much less overwhelming and reduced the number of DOM elements dramatically.</p>\n\n<p>Its very easy to do with KO:</p>\n\n<p><a href=\"http://jsfiddle.net/rniemeyer/5Xr2X/\">http://jsfiddle.net/rniemeyer/5Xr2X/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>A possible work-around, in combination with using jQuery.tmpl, is to push items on at a time to the observable array in an asynchronous manner, using setTimeout;</p>\n\n<pre><code>var self = this,\n    remaining = data.length;\n\nadd(); // Start adding items\n\nfunction add() {\n  self.projects.push(data[data.length - remaining]);\n\n  remaining -= 1;\n\n  if (remaining &gt; 0) {\n    setTimeout(add, 10); // Schedule adding any remaining items\n  }\n}\n</code></pre>\n\n<p>This way, when you only add a single item at a time, the browser / knockout.js can take its time to manipulate the DOM accordingly, without the browser being completely blocked for several seconds, so that the user may scroll the list simultaneously.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Please see: <a href=\"http://www.knockmeout.net/2012/04/knockoutjs-performance-gotcha.html\">Knockout.js Performance Gotcha #2 - Manipulating observableArrays</a></p>\n\n<blockquote>\n  <p>A better pattern is to get a reference to our underlying array, push to it, then call .valueHasMutated(). Now, our subscribers will only receive one notification indicating that the array has changed.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>A solution to avoid locking up the browser when rendering a very large array is to 'throttle' the array such that only a few elements get added at a time, with a sleep in between. Here's a function which will do just that:</p>\n\n<pre><code>function throttledArray(getData) {\n    var showingDataO = ko.observableArray(),\n        showingData = [],\n        sourceData = [];\n    ko.computed(function () {\n        var data = getData();\n        if ( Math.abs(sourceData.length - data.length) / sourceData.length &gt; 0.5 ) {\n            showingData = [];\n            sourceData = data;\n            (function load() {\n                if ( data == sourceData &amp;&amp; showingData.length != data.length ) {\n                    showingData = showingData.concat( data.slice(showingData.length, showingData.length + 20) );\n                    showingDataO(showingData);\n                    setTimeout(load, 500);\n                }\n            })();\n        } else {\n            showingDataO(showingData = sourceData = data);\n        }\n    });\n    return showingDataO;\n}\n</code></pre>\n\n<p>Depending on your use case, this could result in massive UX improvement, as the user might only see the first batch of rows before having to scroll.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Taking advantage of push() accepting variable arguments gave the best performance in my case.\n1300 rows were loading for 5973ms (~ 6 sec.). With this optimization the load time was down to 914ms (&lt; 1 sec.)<br>\nThat's 84.7 % improvement!</p>\n\n<p>More info at  <a href=\"http://www.knockmeout.net/2012/04/knockoutjs-performance-gotcha.html\" rel=\"nofollow\">Pushing items to an observableArray</a></p>\n\n<pre><code>this.projects = ko.observableArray( [] ); //Bind to empty array at startup\n\nthis.loadData = function (data) //Called when AJAX method returns\n{\n   var arrMappedData = ko.utils.arrayMap(data, function (item) {\n       return new ResultRow(item);\n   });\n   //take advantage of push accepting variable arguments\n   this.projects.push.apply(this.projects, arrMappedData);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've been experimenting with performance, and have two contributions that I hope might be useful.</p>\n\n<p>My experiments focus on the DOM manipulation time. So before going into this, it is definitely worth following the points above about pushing into a JS array before creating an observable array, etc.</p>\n\n<p>But if DOM manipulation time is still getting in your way, then this might help:</p>\n\n<hr>\n\n<p>1: A pattern to wrap a loading spinner around the slow render, then hide it using afterRender</p>\n\n<p><a href=\"http://jsfiddle.net/HBYyL/1/\" rel=\"nofollow\">http://jsfiddle.net/HBYyL/1/</a></p>\n\n<p>This isn't really a fix for the performance problem, but shows that a delay is probably inevitable if you loop over thousands of items and it uses a pattern where you can ensure you have a loading spinner appear before the long KO operation, then hide it afterwards. So it improves the UX, at least.</p>\n\n<p>Ensure you can load a spinner:</p>\n\n<pre><code>// Show the spinner immediately...\n$(\"#spinner\").show();\n\n// ... by using a timeout around the operation that causes the slow render.\nwindow.setTimeout(function() {\n    ko.applyBindings(vm)  \n}, 1)\n</code></pre>\n\n<p>Hide the spinner:</p>\n\n<pre><code>&lt;div data-bind=\"template: {afterRender: hide}\"&gt;\n</code></pre>\n\n<p>which triggers:</p>\n\n<pre><code>hide = function() {\n    $(\"#spinner\").hide()\n}\n</code></pre>\n\n<hr>\n\n<p>2: Using the html binding as a hack</p>\n\n<p>I remembered an old technique back from when I was working on a set top box with Opera, building UI using DOM manipulation. It was appalling slow, so the solution was to store large chunks of HTML as strings, and load the strings by setting the innerHTML property. </p>\n\n<p>Something similar can be achieved by using the html binding and a computed that derives the HTML for the table as a big chunk of text, then applies it in one go. This does fix the performance problem, but the massive downside is that it severely limits what you can do with binding inside each table row. </p>\n\n<p>Here's a fiddle that shows this approach, together with a function that can be called from inside the table rows to delete an item in a vaguely-KO-like way. Obviously this isn't as good as proper KO, but if you really need blazing(ish) performance, this is a possible workaround.</p>\n\n<p><a href=\"http://jsfiddle.net/9ZF3g/5/\" rel=\"nofollow\">http://jsfiddle.net/9ZF3g/5/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I also noticed that Knockout js template engine works slower in IE, I replaced it with underscore.js, works way faster.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I been dealing with such huge volumes of data coming in for me <code>valueHasMutated</code> worked like a charm .</p>\n\n<p><strong>View Model :</strong></p>\n\n<pre><code>this.projects([]); //make observableArray empty --(1)\n\nvar mutatedArray = this.projects(); -- (2)\n\nthis.loadData = function (data) //Called when AJAX method returns\n{\nko.utils.arrayForEach(data,function(item){\n    mutatedArray.push(new ResultRow(item)); -- (3) // push to the array(normal array)  \n});  \n};\n this.projects.valueHasMutated(); -- (4) \n</code></pre>\n\n<p>After calling <code>(4)</code> array data will be loaded into required observableArray which is <code>this.projects</code> automatically .</p>\n\n<p>if you got time have a look at this and just in-case any trouble let me know </p>\n\n<p><strong>Trick here :</strong> By doing like this , if in case of any dependencies (computed,subscribes etc) can be avoided at push level and we can make them execute at one go after calling <code>(4)</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm just getting started with Knockout.js (always wanted to try it out, but now I finally have an excuse!) - However, I'm running into some really bad performance problems when binding a table to a relatively small set of data (around 400 rows or so).</p>\n\n<p>In my model, I have the following code:</p>\n\n<pre><code>this.projects = ko.observableArray( [] ); //Bind to empty array at startup\n\nthis.loadData = function (data) //Called when AJAX method returns\n{\n   for(var i = 0; i &lt; data.length; i++)\n   {\n      this.projects.push(new ResultRow(data[i])); //&lt;-- Bottleneck!\n   }\n};\n</code></pre>\n\n<p>The issue is the <code>for</code> loop above takes about 30 seconds or so with around 400 rows.  However, if I change the code to:</p>\n\n<pre><code>this.loadData = function (data)\n{\n   var testArray = []; //&lt;-- Plain ol' Javascript array\n   for(var i = 0; i &lt; data.length; i++)\n   {\n      testArray.push(new ResultRow(data[i]));\n   }\n};\n</code></pre>\n\n<p>Then the <code>for</code> loop completes in the blink of an eye.  In other words, the <code>push</code> method of Knockout's <code>observableArray</code> object is incredibly slow.</p>\n\n<p>Here is my template:</p>\n\n<pre><code>&lt;tbody data-bind=\"foreach: projects\"&gt;\n    &lt;tr&gt;\n       &lt;td data-bind=\"text: code\"&gt;&lt;/td&gt;\n       &lt;td&gt;&lt;a data-bind=\"projlink: key, text: projname\"&gt;&lt;/td&gt;\n       &lt;td data-bind=\"text: request\"&gt;&lt;/td&gt;\n       &lt;td data-bind=\"text: stage\"&gt;&lt;/td&gt;\n       &lt;td data-bind=\"text: type\"&gt;&lt;/td&gt;\n       &lt;td data-bind=\"text: launch\"&gt;&lt;/td&gt;\n       &lt;td&gt;&lt;a data-bind=\"mailto: ownerEmail, text: owner\"&gt;&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/tbody&gt;\n</code></pre>\n\n<p><strong>My Questions:</strong></p>\n\n<ol>\n<li>Is this the right way to bind my data (which comes from an AJAX method) to an observable collection?</li>\n<li>I expect <code>push</code> is doing some heavy re-calc every time I call it, such as maybe rebuilding bound DOM objects.  Is there a way to either delay this recalc, or perhaps push in all my items at once?</li>\n</ol>\n\n<p>I can add more code if needed, but I'm pretty sure this is what's relevant.  For the most part I was just following Knockout tutorials from the site.</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>Per the advice below, I've updated my code:</p>\n\n<pre><code>this.loadData = function (data)\n{\n   var mappedData = $.map(data, function (item) { return new ResultRow(item) });\n   this.projects(mappedData);\n};\n</code></pre>\n\n<p>However, <code>this.projects()</code> still takes about 10 seconds for 400 rows.  I do admit I'm not sure how fast this would be <em>without</em> Knockout (just adding rows through the DOM), but I have a feeling it would be much faster than 10 seconds.</p>\n\n<p><strong>UPDATE 2:</strong></p>\n\n<p>Per other advice below, I gave <strong>jQuery.tmpl</strong> a shot (which is natively supported by KnockOut), and this templating engine will draw around 400 rows in just over 3 seconds.  This seems like the best approach, short of a solution that would dynamically load in more data as you scroll.</p>\n",
            "last_activity_date": 1417538088,
            "question_id": 9709374,
            "score": 59,
            "tags": [
                "javascript",
                "performance",
                "knockout.js"
            ],
            "title": "Knockout.js incredibly slow under semi-large datasets"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Never used Express, although according to <a href=\"http://www.senchalabs.org/connect/session.html\" rel=\"nofollow\">their docs</a> on the subject it sounds like:</p>\n\n<ul>\n<li><p>Cookies are stored on the client, with a key (which the server will use to retrieve the session data) and a hash (which the server will use to make sure the cookie data hasn't been tampered with, so if you try and change a value the cookie will be invalid)</p></li>\n<li><p>The session data, as opposed to some frameworks (e.g. Play!) is held on the server, so the cookie is more like a placeholder for the session than a holder of actual session data.</p></li>\n<li><p>From <a href=\"http://expressjs.com/guide.html#session-support\" rel=\"nofollow\">here</a>, it looks like this session data on the server is by default held in memory, although that could be altered to whatever storage form implements the appropriate API.</p></li>\n</ul>\n\n<p>So if you want to check things without a specific <code>req</code> request object, like you said, you need to just access that same storage. On the bottom of the first docs page, it details required methods the storage needs to implement, so if you're familiar with your storage API, maybe you could execute a <code>.getAll()</code> if something like that exists, and loop through the session data and read whatever values you want.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<blockquote>\n  <p>I'm curious how they actually work though.</p>\n</blockquote>\n\n<p>Try to look at <a href=\"http://stackoverflow.com/questions/4371178/session-only-cookie-for-express-js#4371471\">this</a> answer and <a href=\"http://en.wikipedia.org/wiki/HTTP_cookie#Session_cookie\" rel=\"nofollow\">wiki</a> stuff.</p>\n\n<blockquote>\n  <p>Does it store some cookie on the client?</p>\n</blockquote>\n\n<p>Yes, it's usually a cookie with assigned session ID, which should be signed with a secret in order to prevent forgery.</p>\n\n<blockquote>\n  <p>If so, where can I find that cookie? If required, how do I decode it?</p>\n</blockquote>\n\n<p>You shouldn't mess with a session cookie on the client side. If you want to work with sessions on the server side you should check out related <a href=\"http://expressjs.com/guide.html#session-support\" rel=\"nofollow\">express.js</a> and <a href=\"http://senchalabs.github.com/connect/middleware-session.html\" rel=\"nofollow\">connect</a> docs.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<h1>Overview</h1>\n\n<p>Express uses a cookie to store a session id (with an encryption signature) in the user's browser and then, on subsequent requests, uses the value of that cookie to retrieve session information stored on the server. This server side storage can be a memory store (default) or any other store which implements the required methods (like <a href=\"https://github.com/visionmedia/connect-redis/\">connect-redis</a>).</p>\n\n<h1>Details</h1>\n\n<p>Express/Connect creates a 24 character base64 string using <code>utils.uid(24)</code> and stores\nit in <code>req.sessionID</code>. This string is then used as the value in a cookie.</p>\n\n<h2>Client Side</h2>\n\n<p>Signed cookies are always used for sessions so the cookie value will have the following\nformat.</p>\n\n<pre><code>[sid].[signature]\n</code></pre>\n\n<p>Where [sid] is the sessionID and [signature] is generated by signing [sid] using the secret key provided when initializing the session middleware.\nThe signing step is done to prevent tampering. It should be computationally infeasable to\nmodify [sid] and then recreate [signature] without knowledge of\nthe secret key used. The session cookie is still vulnerable to theft and reuse, if no\nmodification of [sid] is required.</p>\n\n<p>The name for this cookie is</p>\n\n<pre><code>connect.sid\n</code></pre>\n\n<h2>Server Side</h2>\n\n<p>If a handler occurs after the <code>cookieParser</code> and <code>session</code> middleware it will\nhave access to the variable <code>req.cookies</code>. This contains a JSON object whose\nkeys are the cookie keys and values are the cookie values. This will contain a\nkey named <code>connect.sid</code> and it's value will be the signed session identifier.</p>\n\n<p>Here's an example of how to set up a route that will check for the existence of the\nsession cookie on every request and print it's value to the console.</p>\n\n<pre><code>app.get(\"/*\", function(req, res, next){\n\n    if(typeof req.cookies['connect.sid'] !== 'undefined'){\n        console.log(req.cookies['connect.sid']);\n    }\n\n    next(); // call the next middleware\n});\n</code></pre>\n\n<p>You'll also need to make sure the router (<code>app.use(app.router)</code>)is included after <code>cookieParser</code> and <code>session</code> in your configure section.</p>\n\n<p>The following is an example of the data stored internally by Express/Connect.</p>\n\n<pre><code>{\n  \"lastAccess\": 1343846924959,\n  \"cookie\": {\n    \"originalMaxAge\": 172800000,\n    \"expires\": \"2012-08-03T18:48:45.144Z\",\n    \"httpOnly\": true,\n    \"path\": \"/\"\n  },\n  \"user\": { \n    \"name\":\"waylon\",\n    \"status\":\"pro\"\n  }\n}\n</code></pre>\n\n<p>The <code>user</code> field is custom. Everything else is part of session management.</p>\n\n<p>Example from Express 2.5</p>\n",
                    "is_accepted": false,
                    "score": 105
                }
            ],
            "body": "<p>Using Express, sessions are dead simple. I'm curious how they actually work though.</p>\n\n<p>Does it store some cookie on the client? If so, where can I find that cookie? If required, how do I decode it?</p>\n\n<p>I basically want to be able to see if a user is logged in, even when the user is not actually on the site at the time (Like how facebook knows you're logged in when you're on other sites). But I suppose to understand that I should first understand how sessions work.</p>\n",
            "last_activity_date": 1398790717,
            "question_id": 5522020,
            "score": 52,
            "tags": [
                "javascript",
                "node.js",
                "session",
                "cookies",
                "express"
            ],
            "title": "How do sessions work in Express with NodeJs?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>There is currently no support in HTML5 Canvas specification for dashed lines.</p>\n\n<p>check this out:</p>\n\n<p><a href=\"http://davidowens.wordpress.com/2010/09/07/html-5-canvas-and-dashed-lines/\" rel=\"nofollow\">http://davidowens.wordpress.com/2010/09/07/html-5-canvas-and-dashed-lines/</a></p>\n\n<p>or</p>\n\n<p>Check out the Raphael JS Library:</p>\n\n<p><a href=\"http://raphaeljs.com/\" rel=\"nofollow\">http://raphaeljs.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Fun question! I've written a custom implementation of dashed lines; you can <a href=\"http://phrogz.net/tmp/canvas_dashed_line.html\">try it out here</a>. I took the route of Adobe Illustrator and allow you to specify an array of dash/gap lengths.</p>\n\n<p>For stackoverflow posterity, here's my implementation (slightly altered for s/o line widths):</p>\n\n<pre><code>var CP = window.CanvasRenderingContext2D &amp;&amp; CanvasRenderingContext2D.prototype;\nif (CP &amp;&amp; CP.lineTo){\n  CP.dashedLine = function(x,y,x2,y2,dashArray){\n    if (!dashArray) dashArray=[10,5];\n    if (dashLength==0) dashLength = 0.001; // Hack for Safari\n    var dashCount = dashArray.length;\n    this.moveTo(x, y);\n    var dx = (x2-x), dy = (y2-y);\n    var slope = dx ? dy/dx : 1e15;\n    var distRemaining = Math.sqrt( dx*dx + dy*dy );\n    var dashIndex=0, draw=true;\n    while (distRemaining&gt;=0.1){\n      var dashLength = dashArray[dashIndex++%dashCount];\n      if (dashLength &gt; distRemaining) dashLength = distRemaining;\n      var xStep = Math.sqrt( dashLength*dashLength / (1 + slope*slope) );\n      if (dx&lt;0) xStep = -xStep;\n      x += xStep\n      y += slope*xStep;\n      this[draw ? 'lineTo' : 'moveTo'](x,y);\n      distRemaining -= dashLength;\n      draw = !draw;\n    }\n  }\n}\n</code></pre>\n\n<p>To draw a line from <code>20,150</code> to <code>170,10</code> with dashes that are 30px long followed by a gap of 10px, you would use:</p>\n\n<pre><code>myContext.dashedLine(20,150,170,10,[30,10]);\n</code></pre>\n\n<p>To draw alternating dashes and dots, use (for example):</p>\n\n<pre><code>myContext.lineCap   = 'round';\nmyContext.lineWidth = 4; // Lines 4px wide, dots of diameter 4\nmyContext.dashedLine(20,150,170,10,[30,10,0,10]);\n</code></pre>\n\n<p>The \"very short\" dash length of <code>0</code> combined with the rounded lineCap results in dots along your line.</p>\n\n<p><em>If anyone knows of a way to access the current point of a canvas context path, I'd love to know about it, as it would allow me to write this as <code>ctx.dashTo(x,y,dashes)</code> instead of requiring you to re-specify the start point in the method call.</em></p>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p>This simplified version of Phrogz's code utilises the built-in transformation functionality of Canvas and also handles special cases e.g. when dx = 0</p>\n\n<pre><code>var CP = window.CanvasRenderingContext2D &amp;&amp; CanvasRenderingContext2D.prototype;\nif (CP.lineTo) {\n    CP.dashedLine = function(x, y, x2, y2, da) {\n        if (!da) da = [10,5];\n        this.save();\n        var dx = (x2-x), dy = (y2-y);\n        var len = Math.sqrt(dx*dx + dy*dy);\n        var rot = Math.atan2(dy, dx);\n        this.translate(x, y);\n        this.moveTo(0, 0);\n        this.rotate(rot);       \n        var dc = da.length;\n        var di = 0, draw = true;\n        x = 0;\n        while (len &gt; x) {\n            x += da[di++ % dc];\n            if (x &gt; len) x = len;\n            draw ? this.lineTo(x, 0): this.moveTo(x, 0);\n            draw = !draw;\n        }       \n        this.restore();\n    }\n}\n</code></pre>\n\n<p><em>I think my calculations are correct and it seems to render OK.</em></p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>Mozilla has been working on an <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=662038\">implementation of dashed stroking</a> for canvas, so we may see it added to the spec in the near future.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I found properties <code>mozDash</code> and <code>mozDashOffset</code> in Mozilla specification: <br/>\n<a href=\"http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/canvas/nsIDOMCanvasRenderingContext2D.idl\" rel=\"nofollow\">http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/canvas/nsIDOMCanvasRenderingContext2D.idl</a></p>\n\n<p>They're probaly used to control dashes, but i haven't used them.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Phroz's solution is great. But when I used it in my application, I found two bugs.</p>\n\n<p>Following code is debugged (and refactored for readability) version of Phroz's one.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// Fixed: Minus xStep bug (when x2 &lt; x, original code bugs)\n// Fixed: Vertical line bug (when abs(x - x2) is zero, original code bugs because of NaN)\nvar CP = window.CanvasRenderingContext2D &amp;&amp; CanvasRenderingContext2D.prototype;\nif(CP &amp;&amp; CP.lineTo) CP.dashedLine = function(x, y, x2, y2, dashArray){\n    if(! dashArray) dashArray=[10,5];\n    var dashCount = dashArray.length;\n    var dx = (x2 - x);\n    var dy = (y2 - y);\n    var xSlope = (Math.abs(dx) &gt; Math.abs(dy));\n    var slope = (xSlope) ? dy / dx : dx / dy;\n\n    this.moveTo(x, y);\n    var distRemaining = Math.sqrt(dx * dx + dy * dy);\n    var dashIndex = 0;\n    while(distRemaining &gt;= 0.1){\n        var dashLength = Math.min(distRemaining, dashArray[dashIndex % dashCount]);\n        var step = Math.sqrt(dashLength * dashLength / (1 + slope * slope));\n        if(xSlope){\n            if(dx &lt; 0) step = -step;\n            x += step\n            y += slope * step;\n        }else{\n            if(dy &lt; 0) step = -step;\n            x += slope * step;\n            y += step;\n        }\n        this[(dashIndex % 2 == 0) ? 'lineTo' : 'moveTo'](x, y);\n        distRemaining -= dashLength;\n        dashIndex++;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>There's a much simpler way to do this. According to <a href=\"http://www.w3.org/TR/2dcontext/#dom-context-2d-strokestyle\" rel=\"nofollow\">http://www.w3.org/TR/2dcontext/#dom-context-2d-strokestyle</a> strokeStyle accepts strings, CanvasGradients, or CanvasPatterns. So we just take an image like this:</p>\n\n<pre><code>  &lt;img src=\"images/dashedLineProto.jpg\" id=\"cvpattern1\" width=\"32\" height=\"32\" /&gt;\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/sXLgY.jpg\" alt=\"\"></p>\n\n<p>load it into a canvas, and draw our little rectangle with it.</p>\n\n<pre><code>  var img=document.getElementById(\"cvpattern1\");\n  var pat=ctx.createPattern(img,\"repeat\");\n  ctx.strokeStyle = pat;\n  ctx.strokeRect(20,20,150,100);\n</code></pre>\n\n<p>that doesnt result in a perfect dashed line, but it's really straightforward and modifiable. Results may of course become imperfect when you're drawing lines which arent horizontal or vertical, a dotted pattern might help there.</p>\n\n<p>PS. keep in mind SOP applies when you're trying to use imgs from external sources in your code.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There are support for it in <a href=\"https://developer.mozilla.org/en-US/docs/DOM/CanvasRenderingContext2D#Gecko-specific_attributes\" rel=\"nofollow\">Firefox at least</a></p>\n\n<pre><code>ctx.mozDash = [5,10];\n</code></pre>\n\n<p>seems like <code>ctx.webkitLineDash</code> worked before, but they removed it because it had some <a href=\"http://bugs.webkit.org/show_bug.cgi?id=80674\" rel=\"nofollow\">compabillity issues</a>.</p>\n\n<p>The <a href=\"http://www.whatwg.org/specs/web-apps/current-work/#line-styles\" rel=\"nofollow\">W3C specs</a> says <code>ctx.setLineDash([5,10]);</code> but it doesn't seem to be implemented yet anywhere.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>At the moment at least setLineDash([5,10]) works with Chrome and ctx.mozDash = [5,10] works with FF:</p>\n\n<pre><code>var c=document.getElementById(\"myCanvas\");\nvar ctx=c.getContext(\"2d\");\n\nif ( ctx.setLineDash !== undefined )   ctx.setLineDash([5,10]);\nif ( ctx.mozDash !== undefined )       ctx.mozDash = [5,10];\n\nctx.beginPath();              \nctx.lineWidth=\"2\";\nctx.strokeStyle=\"green\";\nctx.moveTo(0,75);\nctx.lineTo(250,75);\nctx.stroke();\n</code></pre>\n\n<p>Setting to null makes the line solid.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I made modified the <code>dashedLine</code> function to add support for offsetting. It utilizes native dashed lines if the browser supports <code>ctx.setLineDash</code> and <code>ctx.lineDashOffset</code>. </p>\n\n<p>Example: <a href=\"http://jsfiddle.net/mLY8Q/6/\" rel=\"nofollow\">http://jsfiddle.net/mLY8Q/6/</a></p>\n\n<pre><code>var CP = window.CanvasRenderingContext2D &amp;&amp; CanvasRenderingContext2D.prototype;\nif (CP.lineTo) {\n\n    CP.dashedLine = CP.dashedLine || function (x, y, x2, y2, da, offset) {\n\n        if (!da) da = [10, 5];\n        if (!offset) offset = 0;\n\n        if (CP.setLineDash &amp;&amp; typeof (CP.lineDashOffset) == \"number\") {\n            this.save();\n            this.setLineDash(da);\n            this.lineDashOffset = offset;\n\n            this.moveTo(x, y);\n            this.lineTo(x2, y2);\n\n            this.restore();\n            return;\n        }\n\n\n        this.save();\n        var dx = (x2 - x),\n            dy = (y2 - y);\n        var len = Math.sqrt(dx * dx + dy * dy);\n        var rot = Math.atan2(dy, dx);\n        this.translate(x, y);\n        this.moveTo(0, 0);\n        this.rotate(rot);\n        var dc = da.length;\n        var di = 0;\n\n        var patternLength = 0;\n        for (var i = 0; i &lt; dc; i++) {\n            patternLength += da[i];\n        }\n        if (dc % 2 == 1) {\n            patternLength *= 2;\n        }\n\n        offset = offset % patternLength;\n        if (offset &lt; 0) {\n            offset += patternLength;\n        }\n\n        var startPos = 0;\n        var startSegment = 0;\n        while (offset &gt;= startPos) {\n\n\n\n            if (offset &gt;= startPos + da[startSegment % dc]) {\n                startPos += da[startSegment % dc];\n                startSegment++;\n            } else {\n                offset = Math.abs(offset - startPos);\n                break;\n            }\n\n\n            if (startSegment &gt; 100) break;\n        }\n        draw = startSegment % 2 === 0;\n        x = 0;\n        di = startSegment;\n\n\n        while (len &gt; x) {\n            var interval = da[di++ % dc];\n            if (x &lt; offset) {\n                interval = Math.max(interval - offset, 1);\n                offset = 0;\n            }\n\n            x += interval;\n            if (x &gt; len) x = len;\n            draw ? this.lineTo(x, 0) : this.moveTo(x, 0);\n            draw = !draw;\n        }\n        this.restore();\n    };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Looks like context.setLineDash is pretty much implemented.\nSee <a href=\"http://www.rgraph.net/blog/2013/january/html5-canvas-dashed-lines.html\" rel=\"nofollow\">this</a>.</p>\n\n<p>\" context.setLineDash([5])\n will result in a dashed line where both the dashes and spaces are 5 pixels in size. \"</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I guess it is not possible to set stroke property such as CSS which is quite easy. With CSS we have dashed, dotted, solid but on canvas when drawing lines/or strokes this doesn't seem to be an option. How have you implemented this?</p>\n\n<p>I've seen some examples but they are really long for such a silly function.</p>\n\n<p>For example:</p>\n\n<p><a href=\"http://groups.google.com/group/javascript-information-visualization-toolkit/browse_thread/thread/22000c0d0a1c54f9?pli=1\">http://groups.google.com/group/javascript-information-visualization-toolkit/browse_thread/thread/22000c0d0a1c54f9?pli=1</a></p>\n",
            "last_activity_date": 1391877866,
            "question_id": 4576724,
            "score": 43,
            "tags": [
                "javascript",
                "html5",
                "canvas"
            ],
            "title": "dotted stroke in &lt;canvas&gt;"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No, it is blocking. Have a look at the <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_15.4.4.18\">specification of the algorithm</a>.</p>\n\n<p>However a maybe easier to understand implementation is given on <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/array/foreach\">MDC</a>:</p>\n\n<pre><code>if (!Array.prototype.forEach)\n{\n  Array.prototype.forEach = function(fun /*, thisp */)\n  {\n    \"use strict\";\n\n    if (this === void 0 || this === null)\n      throw new TypeError();\n\n    var t = Object(this);\n    var len = t.length &gt;&gt;&gt; 0;\n    if (typeof fun !== \"function\")\n      throw new TypeError();\n\n    var thisp = arguments[1];\n    for (var i = 0; i &lt; len; i++)\n    {\n      if (i in t)\n        fun.call(thisp, t[i], i, t);\n    }\n  };\n}\n</code></pre>\n\n<hr>\n\n<p>If you have to execute a lot of code for each element, you should consider to use a different approach:</p>\n\n<pre><code>function processArray(items, process) {\n    var todo = items.concat();\n\n    setTimeout(function() {\n        process(todo.shift());\n        if(todo.length &gt; 0) {\n            setTimeout(arguments.callee, 25);\n        }\n    }, 25);\n}\n</code></pre>\n\n<p>and then call it with:</p>\n\n<pre><code>processArray([many many elements], function () {lots of work to do});\n</code></pre>\n\n<p>This would be non-blocking then. The example is taken from <a href=\"http://rads.stackoverflow.com/amzn/click/059680279X\"><em>High Performance JavaScript</em></a>.</p>\n\n<p>Another option might be <a href=\"https://developer.mozilla.org/En/Using_web_workers\"><em>web workers</em></a>.</p>\n",
                    "is_accepted": true,
                    "score": 123
                },
                {
                    "body": "<p><code>Array.forEach</code> is meant for computing stuff not waiting, and there is nothing to be gained making computations asynchronous in an event loop (webworkers add multiprocessing, if you need multi-core computation). If you want to wait for multiple tasks to end, use a counter, which you can wrap in a semaphore class.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is a common pattern for doing a really heavy computation in Node that may be applicable to you...</p>\n\n<p>Node is single-threaded (as a deliberate design choice, see <a href=\"http://stackoverflow.com/questions/1884724/what-is-node-js/6782438#6782438\">What is node.js?</a>); this means that it can only utilize a single core.  Modern boxes have 8, 16, or even more cores, so this could leave 90+% of the machine idle.  The common pattern for a REST service is to fire up one node process per core, and put these behind a local load balancer like <a href=\"http://nginx.org/\">http://nginx.org/</a>.</p>\n\n<p><em><strong>Forking a child</em></strong> - \nFor what you are trying to do, there is another common pattern, forking off a child process to do the heavy lifting.  The upside is that the child process can do heavy computation in the background while your parent process is responsive to other events.  The catch is that you can't / shouldn't share memory with this child process (not without a LOT of contortions and some native code); you have to pass messages.  This will work beautifully if the size of your input and output data is small compared to the computation that must be performed.  You can even fire up a child node.js process and use the same code you were using previously.</p>\n\n<p>For example:</p>\n\n<pre>\nvar child_process = require('child_process');\nfunction run_in_child(array, cb) {\n    var process = child_process.exec('node libfn.js', function(err, stdout, stderr) {\n        var output = JSON.parse(stdout);\n        cb(err, output);\n    });\n    process.stdin.write(JSON.stringify(array), 'utf8');\n    process.stdin.end();\n}\n</pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If you need an asynchronous-friendly version of Array.forEach and similar, they're available in the Node.js 'async' module: <a href=\"http://github.com/caolan/async\">http://github.com/caolan/async</a> ...as a bonus this module also works in the browser.</p>\n\n<pre><code>async.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>This is a short asynchronous function to use without requiring third party libs</p>\n\n<pre><code>Array.prototype.each = function (iterator, callback) {\n    var iterate = function () {\n            pointer++;\n            if (pointer &gt;= this.length) {\n                callback();\n                return;\n            }\n            iterator.call(iterator, this[pointer], iterate, pointer);\n    }.bind(this),\n        pointer = -1;\n    iterate(this);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a question regarding the native <code>Array.forEach</code> implementation of JavaScript: Does it behave asynchronously?\nFor example, if I call:</p>\n\n<pre><code>[many many elements].forEach(function () {lots of work to do})\n</code></pre>\n\n<p>Will this be non-blocking?</p>\n",
            "last_activity_date": 1419849413,
            "question_id": 5050265,
            "score": 109,
            "tags": [
                "javascript",
                "arrays",
                "asynchronous",
                "foreach",
                "node.js"
            ],
            "title": "JavaScript, Node.js: is Array.forEach asynchronous?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Cookies are transfered <a href=\"http://en.wikipedia.org/wiki/HTTP_cookie\">through HTTP-Headers</a><br>\nYou'll only have to parse the request-headers and put response-headers.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There is no quick function access to getting/setting cookies, so I came up with the following hack:</p>\n\n<pre><code>var http = require('http');\n\nfunction parseCookies (request) {\n    var list = {},\n        rc = request.headers.cookie;\n\n    rc &amp;&amp; rc.split(';').forEach(function( cookie ) {\n        var parts = cookie.split('=');\n        list[parts.shift().trim()] = decodeURI(parts.join('='));\n    });\n\n    return list;\n}\n\n\nhttp.createServer(function (request, response) {\n\n  // To Read a Cookie\n  var cookies = parseCookies(request);\n\n  // To Write a Cookie\n  response.writeHead(200, {\n    'Set-Cookie': 'mycookie=test',\n    'Content-Type': 'text/plain'\n  });\n  response.end('Hello World\\n');\n}).listen(8124);\n\nconsole.log('Server running at http://127.0.0.1:8124/');\n</code></pre>\n\n<p>This will store all cookies into the cookies object, and you need to set cookies when you write the head.</p>\n",
                    "is_accepted": true,
                    "score": 89
                },
                {
                    "body": "<p>You can use the \"cookies\" npm module, which has a comprehensive set of features.</p>\n\n<p>Documentation and examples at:<br />\n<a href=\"https://github.com/jed/cookies\">https://github.com/jed/cookies</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>If you're using the express library, as many node.js developers do, there is an easier way. Check the Express.js documentation page for more information.</p>\n\n<p>The parsing example above works but express gives you a nice function to take care of that:</p>\n\n<pre><code>app.use(express.cookieParser());\n</code></pre>\n\n<p>To set a cookie:</p>\n\n<pre><code>res.cookie('cookiename', 'cookievalue', { maxAge: 900000, httpOnly: true });\n</code></pre>\n\n<p>To clear the cookie:</p>\n\n<pre><code>res.clearCookie('cookiename');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 59
                },
                {
                    "body": "<p>Here's a neat copy-n-paste patch for managing cookies in node. I'll do this in CoffeeScript, for the beauty.</p>\n\n<pre><code>http = require 'http'\n\nhttp.IncomingMessage::getCookie = (name) -&gt;\n  cookies = {}\n  this.headers.cookie &amp;&amp; this.headers.cookie.split(';').forEach (cookie) -&gt;\n    parts = cookie.split '='\n    cookies[parts[0].trim()] = (parts[1] || '').trim()\n    return\n\n  return cookies[name] || null\n\nhttp.IncomingMessage::getCookies = -&gt;\n  cookies = {}\n  this.headers.cookie &amp;&amp; this.headers.cookie.split(';').forEach (cookie) -&gt;\n    parts = cookie.split '='\n    cookies[parts[0].trim()] = (parts[1] || '').trim()\n    return\n\n  return cookies\n\nhttp.OutgoingMessage::setCookie = (name, value, exdays, domain, path) -&gt;\n  cookies = this.getHeader 'Set-Cookie'\n  if typeof cookies isnt 'object'\n    cookies = []\n\n  exdate = new Date()\n  exdate.setDate(exdate.getDate() + exdays);\n  cookieText = name+'='+value+';expires='+exdate.toUTCString()+';'\n  if domain\n    cookieText += 'domain='+domain+';'\n  if path\n    cookieText += 'path='+path+';'\n\n  cookies.push cookieText\n  this.setHeader 'Set-Cookie', cookies\n  return\n</code></pre>\n\n<p>Now you'll be able to handle cookies just as you'd expect:</p>\n\n<pre><code>server = http.createServer (request, response) -&gt;\n  #get individually\n  cookieValue = request.getCookie 'testCookie'\n  console.log 'testCookie\\'s value is '+cookieValue\n\n  #get altogether\n  allCookies = request.getCookies()\n  console.log allCookies\n\n  #set\n  response.setCookie 'newCookie', 'cookieValue', 30\n\n  response.end 'I luvs da cookies';\n  return\n\nserver.listen 8080\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To get a <strong>single cookie</strong> this code would be faster than parsing all the cookies:</p>\n\n<pre><code>getSingleCookie = (cookie, name) -&gt;\n  vIx = cookie.indexOf \"#{name}=\"\n  if vIx != -1\n    egalIx = vIx+name.length+1\n    colIx = cookie.indexOf ';', egalIx\n    v = if colIx == -1\n      cookie.substring egalIx\n    else\n      cookie.substring egalIx, colIx\n    return v\n</code></pre>\n\n<p>Should be use like :</p>\n\n<pre><code>getSingleCookie request.headers, 'my_cookie'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>To get a cookie splitter to work with cookies that have '=' in the cookie values:</p>\n\n<pre><code>var get_cookies = function(request) {\n  var cookies = {};\n  request.headers &amp;&amp; request.headers.cookie.split(';').forEach(function(cookie) {\n    var parts = cookie.match(/(.*?)=(.*)$/)\n    cookies[ parts[1].trim() ] = (parts[2] || '').trim();\n  });\n  return cookies;\n};\n</code></pre>\n\n<p>then to get an individual cookie:</p>\n\n<pre><code>get_cookies(request)['my_cookie']\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to be able to set a single cookie, and read that single cookie with each request made to the nodejs server instance. Can it be done in a few lines of code, without the need to pull in a third party lib?</p>\n\n<pre><code>var http = require('http');\n\nhttp.createServer(function (request, response) {\n  response.writeHead(200, {'Content-Type': 'text/plain'});\n  response.end('Hello World\\n');\n}).listen(8124);\n\nconsole.log('Server running at http://127.0.0.1:8124/');\n</code></pre>\n\n<p>Just trying to take the above code directly from nodejs.org, and work a cookie into it.</p>\n",
            "last_activity_date": 1417641616,
            "question_id": 3393854,
            "score": 64,
            "tags": [
                "javascript",
                "cookies",
                "node.js"
            ],
            "title": "Get and Set a Single Cookie with Node.js HTTP Server"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Without knowing all the information... You could bind a reset trigger to your model or controller:</p>\n\n<pre><code>this.bind(\"reset\", this.updateView);\n</code></pre>\n\n<p>and when you want to reset the views, trigger a reset.</p>\n\n<p>For your callback, do something like:</p>\n\n<pre><code>updateView: function() {\n  view.remove();\n  view.render();\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>some other patterns from these great posts:</p>\n\n<p><a href=\"http://lostechies.com/derickbailey/2011/09/15/zombies-run-managing-page-transitions-in-backbone-apps/\">http://lostechies.com/derickbailey/2011/09/15/zombies-run-managing-page-transitions-in-backbone-apps/</a></p>\n\n<p><a href=\"http://coenraets.org/blog/2012/01/backbone-js-lessons-learned-and-improved-sample-app/#comment-57351\">http://coenraets.org/blog/2012/01/backbone-js-lessons-learned-and-improved-sample-app/#comment-57351</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I had to be absolutely sure the view was not just removed from DOM but also completely unbound from events.</p>\n\n<pre><code>destroy_view: function() {\n\n    // COMPLETELY UNBIND THE VIEW\n    this.undelegateEvents();\n\n    this.$el.removeData().unbind(); \n\n    // Remove view from DOM\n    this.remove();  \n    Backbone.View.prototype.remove.call(this);\n\n}\n</code></pre>\n\n<p>Seemed like overkill to me, but other approaches did not completely do the trick.</p>\n",
                    "is_accepted": false,
                    "score": 123
                },
                {
                    "body": "<p>This is what I've been using. Haven't seen any issues.</p>\n\n<pre><code>destroy: function(){\n  this.remove();\n  this.unbind();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I know I am late to the party, but hopefully this will be useful for someone else. If you are using backbone v0.9.9+, you could use, <code>listenTo</code> and <code>stopListening</code></p>\n\n<pre><code>initialize: function () {\n    this.listenTo(this.model, 'change', this.render);\n    this.listenTo(this.model, 'destroy', this.remove);\n}\n</code></pre>\n\n<p><code>stopListening</code> is called automatically by <code>remove</code>. You can read more <a href=\"http://backbonejs.org/#Events-listenTo\">here</a> and <a href=\"http://backbonejs.org/#View-remove\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I'm currently trying to implement a destroy/remove method for views but I can't get a generic solution to work for all my views.</p>\n\n<p>I was hoping there would be an event to attach to the controller, so that when a new request comes through it destroys previous views <strong>then</strong> loads the new ones.</p>\n\n<p>Is there any way to do this without having to build a remove function for each view?</p>\n",
            "last_activity_date": 1400809309,
            "question_id": 6569704,
            "score": 54,
            "tags": [
                "javascript",
                "javascript-events",
                "backbone.js"
            ],
            "title": "Destroy or remove a view in Backbone.js"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>The second one tends to be faster in some browsers, but the main point is that you have to use it because the first one is just not cross-browser. Even though The Times They Are a-Changin'</p>\n\n<p><strong><a href=\"http://perfectionkills.com/jscript-and-dom-changes-in-ie9-preview-3/\">@kangax</a></strong> (<strong><em>IE 9 preview</em></strong>)</p>\n\n<blockquote>\n  <p><strong>Array.prototype.slice</strong> can now convert\n  certain host objects (e.g. NodeList\u2019s)\n  to arrays \u2014 something that majority of\n  modern browsers have been able to do\n  for quite a while.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Check out this blog post <a href=\"http://weblogs.asp.net/alexeigorkov/archive/2008/02/18/array-prototype-slice-vs-manual-array-creation.aspx\" rel=\"nofollow\">here</a> that talks about the same thing. From what I gather, the extra time might have to do with walking up the scope chain.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The results will completely depend on the browser, to give an objective verdict, we have to make some performance tests, here are some results, you can run them <a href=\"http://jsbin.com/oqeda/3/edit\">here</a>:</p>\n\n<p>Chrome 6:</p>\n\n<p><img src=\"http://chart.apis.google.com/chart?chtt=NodeList%20to%20Array%7COps/sec%20%28Chrome%206.0.453.1%20on%20Windows%20NT%29&amp;chts=000000,10&amp;cht=bhg&amp;chd=t:3632,3994,3652&amp;chds=0,3994&amp;chxt=x&amp;chxl=0:|0|4K&amp;chsp=0,1&amp;chm=tArray.prototype.slice.call%283.6K%29,000000,0,0,10|tfor%20loop%284K%29,000000,0,1,10|treverse%20while%20loop%283.7K%29,000000,0,2,10&amp;chbh=15,0,5&amp;chs=250x130\"/></p>\n\n<p>Firefox 3.6:</p>\n\n<p><img src=\"http://chart.apis.google.com/chart?chtt=NodeList%20to%20Array%7COps/sec%20%28Firefox%203.6.3%20on%20Windows%20NT%29&amp;chts=000000,10&amp;cht=bhg&amp;chd=t:1037,1333,1065&amp;chds=0,1333&amp;chxt=x&amp;chxl=0:|0|1.3K&amp;chsp=0,1&amp;chm=tArray.prototype.slice.call%281K%29,000000,0,0,10|tfor%20loop%281.3K%29,000000,0,1,10|treverse%20while%20loop%281.1K%29,000000,0,2,10&amp;chbh=15,0,5&amp;chs=250x130\"/></p>\n\n<p>Firefox 4.0b2:</p>\n\n<p><img src=\"http://chart.apis.google.com/chart?chtt=NodeList%20to%20Array%7COps/sec%20%28unknown%20platform%29&amp;chts=000000,10&amp;cht=bhg&amp;chd=t:1349,2278,1096&amp;chds=0,2278&amp;chxt=x&amp;chxl=0:|0|2.3K&amp;chsp=0,1&amp;chm=tArray.prototype.slice.call%281.3K%29,000000,0,0,10|tfor%20loop%282.3K%29,000000,0,1,10|treverse%20while%20loop%281.1K%29,000000,0,2,10&amp;chbh=15,0,5&amp;chs=250x130\" /></p>\n\n<p>Safari 5:</p>\n\n<p><img src=\"http://chart.apis.google.com/chart?chtt=NodeList%20to%20Array%7COps/sec%20%28Safari%205.0%20on%20Windows%20NT%29&amp;chts=000000,10&amp;cht=bhg&amp;chd=t:4881,3418,4281&amp;chds=0,4881&amp;chxt=x&amp;chxl=0:|0|4.9K&amp;chsp=0,1&amp;chm=tArray.prototype.slice.call%284.9K%29,000000,0,0,10|tfor%20loop%283.4K%29,000000,0,1,10|treverse%20while%20loop%284.3K%29,000000,0,2,10&amp;chbh=15,0,5&amp;chs=250x130\"/></p>\n\n<p>IE9 Platform Preview 3:</p>\n\n<p><img src=\"http://chart.apis.google.com/chart?chtt=NodeList%20to%20Array%7COps/sec%20%28MSIE%209.0%20on%20Windows%20NT%29&amp;chts=000000,10&amp;cht=bhg&amp;chd=t:373,304,379&amp;chds=0,379&amp;chxt=x&amp;chxl=0:|0|379&amp;chsp=0,1&amp;chm=tArray.prototype.slice.call%28373%29,000000,0,0,10|tfor%20loop%28304%29,000000,0,1,10|treverse%20while%20loop%28379%29,000000,0,2,10&amp;chbh=15,0,5&amp;chs=250x130\" /></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Some optimizations:</p>\n\n<ul>\n<li>save the NodeList's length in a variable</li>\n<li>explicitly set the new array's length before setting.</li>\n<li>access the indices, rather than pushing or unshifting.</li>\n</ul>\n\n<p>Code (<a href=\"http://jsperf.com/nodelist-to-array\">jsPerf</a>):</p>\n\n<pre><code>var arr = [];\nfor (var i = 0, ref = arr.length = nl.length; i &lt; ref; i++) {\n arr[i] = nl[i];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>faster and shorter : </p>\n\n<pre><code>// nl is the nodelist\nvar a=[], l=nl.length&gt;&gt;&gt;0;\nfor( ; l--; a[l]=nl[l] );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The most faster and cross browser is</p>\n\n<pre><code>for(var i=-1,l=nl.length;++i!==l;arr[i]=nl[i]);\n</code></pre>\n\n<p>As I compared in</p>\n\n<p><a href=\"http://jsbin.com/oqeda/91/edit\" rel=\"nofollow\">http://jsbin.com/oqeda/91/edit</a></p>\n\n<p>*Thanks @CMS for the idea!</p>\n\n<p><img src=\"http://i.stack.imgur.com/5ioTY.png\" alt=\"Chromium (Similar to Google Chrome)\">\n<img src=\"http://i.stack.imgur.com/6YAqy.png\" alt=\"Firefox\">\n<img src=\"http://i.stack.imgur.com/4exJk.png\" alt=\"Opera\"></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is the function I use in my JS:</p>\n\n<pre><code>function toArray(nl) {\n    for(var a=[], l=nl.length; l--; a[l]=nl[l]);\n    return a;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>NodeList.prototype.forEach = Array.prototype.forEach;\n</code></pre>\n\n<p>Now you can do document.querySelectorAll('div').forEach(function()...)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Previously answered questions here said that this was the fastest way:</p>\n\n<pre><code>//nl is a NodeList\nvar arr = Array.prototype.slice.call(nl);\n</code></pre>\n\n<p>In benchmarking on my browser I have found that it is more than 3 times slower than this:</p>\n\n<pre><code>var arr = [];\nfor(var i = 0, n; n = nl[i]; ++i) arr.push(n);\n</code></pre>\n\n<p>They both produce the same output, but I find it hard to believe that my second version is the fastest possible way, especially since people have said otherwise here.</p>\n\n<p>Is this a quirk in my browser (Chromium 6)? Or is there a faster way?</p>\n\n<p>EDIT: For anyone who cares, I settled on the following (which seems to be the fastest in every browser that I tested):</p>\n\n<pre><code>//nl is a NodeList\nvar l = []; // Will hold the array of Node's\nfor(var i = 0, ll = nl.length; i != ll; l.push(nl[i++]));\n</code></pre>\n\n<p>EDIT2: I found an even faster way</p>\n\n<pre><code>// nl is the nodelist\nvar arr = [];\nfor(var i = nl.length; i--; arr.unshift(nl[i]));\n</code></pre>\n",
            "last_activity_date": 1419529953,
            "question_id": 3199588,
            "score": 68,
            "tags": [
                "javascript",
                "arrays",
                "nodelist"
            ],
            "title": "Fastest way to convert JavaScript NodeList to Array?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I like <a href=\"http://www.jslint.com/\" rel=\"nofollow\">Jslint</a> for this sort of thing...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I agree that JSLint is the best place to start.  Note that <a href=\"http://www.javascriptlint.com/\">JavaScript Lint</a> is distinct from <a href=\"http://www.jslint.com/\">JSLint</a>.  I\u2019d also suggest checking out <a href=\"https://github.com/berke/jsure\">JSure</a>, which in my limited testing did better than either of them, though with some rough edges in the implementation\u2014the Intel Mac version crashed on startup for me, though the PowerPC version ran fine even on Intel, and the Linux version ran fine as well.  (The developer, Berke Durak, said he'd get back to me when this was fixed, but I haven't heard from him.)</p>\n\n<p>Don\u2019t expect as much from JavaScript static analysis as you get from a good C checker.  As Durak told me, \u201cany non-trivial analysis is very difficult due to Javascript's dynamic nature.\u201d</p>\n\n<p>(Another, even more obscure Mac-only bug, this time with JSLint\u2019s Konfabulator widget:  Dragging a BBEdit document icon onto the widget moves the document to the trash.  The developer, Douglas Crockford, hadn\u2019t tried the widget on a Mac.) </p>\n\n<p>10 August 2009:  Today at the <a href=\"http://sas09.cs.ucdavis.edu/\">Static Analysis Symposium</a>, Simon Holm Jensen presented a paper on <a href=\"http://www.brics.dk/TAJS/\">TAJS: Type Analyzer for JavaScript</a>, written with Anders M\u00f8ller and Peter Thiemann.  The paper doesn\u2019t mention the above tools, but Jensen told me he\u2019d looked at some of them and wasn\u2019t impressed.  The code for TAJS should be available sometime this summer.</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p><a href=\"http://code.google.com/closure/compiler/\">Google's \"Closure\" JS compiler</a> produces configurable warnings and errors at compile-time.  It definitely finds misspelled variables and methods, plus arity mistakes.  If you're willing to write JsDoc the Closure way, it can do a lot with type information, too.</p>\n\n<p>The YUI \"Compressor\" tool can produce warnings too, but haven't tried it yet.</p>\n\n<p>I haven't had much luck with the Aptana IDE, built on Eclipse, but other people like it.  See Stack Overflow discussion of JS IDEs.</p>\n\n<p>The IntelliJ IDE, which isn't free last I checked, has frickin' excellent JS support.  It will detect and highlight misspelled vars and methods as you type, and more.  It's got autocomplete, too.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Our <a href=\"http://www.semanticdesigns.com/Products/Clone/ECMAScriptCloneDR.html\" rel=\"nofollow\">SD ECMAScript CloneDR</a> is a tool for finding exact and near-miss copies of duplicated code across large JavaScript source code bases.</p>\n\n<p>It uses the language syntax to guide the detection, so it will find clones in spite of format changes, inserted/deleted comments, renamed variables and even some inserted/deleted statements.</p>\n\n<p>The site has a sample CloneDR run on Google's Closure library.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Full disclosure, I'm behind this: <a href=\"http://www.toptensoftware.com/minime\" rel=\"nofollow\">http://www.toptensoftware.com/minime</a> which does minification, obfuscation and a reasonable set of lint style checks. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>JSAnalyse has just been published on codeplex. \nIt is a tool which analyses the dependencies between javascript files. You can even define the allowed dependencies and JSAnalysis checks whether the defined rules are fulfilled or not. That allows to keep track about the javascript dependencies even in big projects and have a clean architecture.</p>\n\n<p>JSAnalyse can be executed as a command line tool or configured via the Visual Studio Layer Diagramm. It is also easy to integrate into the build. With gated check-ins you can keep the dependencies under control.</p>\n\n<p><a href=\"http://jsanalyse.codeplex.com/\" rel=\"nofollow\">http://jsanalyse.codeplex.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In addition to <a href=\"http://jslint.org\">JSLint</a> (already mentioned in <a href=\"http://stackoverflow.com/a/710837/55478\">Flash Sheridan's answer</a>) and the <a href=\"https://developers.google.com/closure/compiler/docs/gettingstarted_app\">Closure compiler</a> (previously mentioned in <a href=\"http://stackoverflow.com/a/2220180/55478\">awhyte's answer</a>) I have have also gotten a lot of benefit from running <a href=\"http://jshint.com/about\">JSHint</a> and <a href=\"http://pear.php.net/package/PHP_CodeSniffer\">PHP CodeSniffer</a>.  As of 2012, all four tools are free open-source and have a large and active developer community behind them. They're each a bit different (and I think, complementary) in the kinds of checks they perform:</p>\n\n<p><strong>JSLint</strong> was designed to be, and still is Douglas Crockford's personal linting tool.  It ships with a <em>great</em> default ruleset -- Crockford's own, <a href=\"https://github.com/douglascrockford/JSLint/commits/master/\">constantly updated</a> as he <a href=\"http://tech.groups.yahoo.com/group/jslint_com/msearch?date=any&amp;DM=------------&amp;DD=----&amp;DY=----&amp;DM2=------------&amp;DD2=----&amp;DY2=----&amp;AM=contains&amp;AT=douglas&amp;SM=contains&amp;ST=&amp;MM=contains&amp;MT=%22try+it+now%22&amp;charset=UTF-8\">continues to learn</a> about JavaScript and its pitfalls. JSLint is <a href=\"https://gist.github.com/1745829\">highly opinionated</a> and this is generally <a href=\"http://docs.jquery.com/JQuery_Core_Style_Guidelines#JSLint\">seen as a good thing.</a> Thus there's (intentionally) a <a href=\"http://www.jslint.com/lint.html#options\">limited amount</a> you can do to configure or disable individual rules. But this can make it tough to apply JSLint to legacy code.</p>\n\n<p><strong>JSHint</strong> is very similar to JSLint (in fact it <a href=\"http://anton.kovalyov.net/2011/02/20/why-i-forked-jslint-to-jshint/\">began life</a> as JSLint fork) but it is easier/possible to <a href=\"http://www.jshint.com/docs/\">configure or disable</a> all of JSLint's checks via command line options or via a <a href=\"https://npmjs.org/package/jshint\"><code>.jshintrc</code> file</a>.</p>\n\n<p>I particularly like that I can tell JSHint to report <em>all</em> of the errors in a file, even if there are hundreds of errors. By contrast, although JSLint does have a <code>maxerr</code> configuration option, it will generally bail out relatively early when attempting to process files that contain large numbers of errors.</p>\n\n<p><strong>The Closure compiler</strong> is extremely useful in that, if code <em>won't</em> compile with Closure, you can feel very certain said code <em>is</em> deeply hosed in some fundamental way.  Closure compilation is possibly the closest thing that there is in the JS world to an \"interpreter\" syntax check like <code>php -l</code> or <code>ruby -c</code></p>\n\n<p>Closure also <a href=\"https://developers.google.com/closure/compiler/docs/error-ref\">warns you about potential issues</a> such as missing parameters and undeclared or redefined variables.  If you aren't seeing the warnings you expect, try increasing the warning level by invoking Closure with an option of <code>--warning_level VERBOSE</code></p>\n\n<p><strong>PHP CodeSniffer</strong> <a href=\"https://github.com/squizlabs/PHP_CodeSniffer/blob/master/CodeSniffer/Tokenizers/JS.php\">can parse JavaScript</a> as well as PHP and CSS.  CodeSniffer ships with several different coding standards, (say <code>phpcs -i</code> to see them) which include many useful sniffs for JavaScript code including checks against <a href=\"https://github.com/squizlabs/PHP_CodeSniffer/blob/master/CodeSniffer/Standards/Generic/Sniffs/ControlStructures/InlineControlStructureSniff.php\">inline control structures</a> and <a href=\"https://github.com/squizlabs/PHP_CodeSniffer/blob/master/CodeSniffer/Standards/Squiz/Sniffs/WhiteSpace/SuperfluousWhitespaceSniff.php\">superfluous whitespace</a>.  </p>\n\n<p>Here is a <a href=\"https://gist.github.com/3375708#file_js_code_sniffs.md\">list of JavaScript sniffs</a> available in PHP CodeSniffer as of version 1.3.6 and here is a <a href=\"https://gist.github.com/3375708#file_js_sniffs.xml\">custom ruleset that would allow you to run them all at once.</a>  Using custom rulesets, it's easy to <a href=\"http://pear.php.net/manual/en/package.php.php-codesniffer.annotated-ruleset.php\">pick and choose the rules</a> you want to apply.  And you can even <a href=\"http://pear.php.net/manual/en/package.php.php-codesniffer.coding-standard-tutorial.php\">write your own sniffs</a> if you want to enforce a particular \"house style\" that isn't supported out of the box.  Afaik CodeSniffer is the only tool of the four mentioned here that supports customization and creation of new static analysis rules.  One caveat though: CodeSniffer is also the slowest-running of any of the tools mentioned.</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>I tried out ESlint and found it good..you can also add custom rules there..Here is the github repo: <a href=\"https://github.com/nzakas/eslint\" rel=\"nofollow\">https://github.com/nzakas/eslint</a> and here is the introduction to it: <a href=\"http://www.nczonline.net/blog/2013/07/16/introducing-eslint/\" rel=\"nofollow\">http://www.nczonline.net/blog/2013/07/16/introducing-eslint/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>In summary, JSLint, JSHint, Plato, ESLint, Google Closure-Linter are the tools available. \nI faced installation issues while trying out Google Closure-Linter for Windows. But, it does mention on the web page that its support for Windows is experimental.\nI found and tried another tool which works well. Here is the link for it: \n<a href=\"http://esprima.org/\">http://esprima.org/</a></p>\n\n<p>Also, this is the github link for the tool Esprima:\n<a href=\"https://github.com/ariya/esprima\">https://github.com/ariya/esprima</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>More security focused than general purpose list can be found on the Mozilla Wiki at <a href=\"https://wiki.mozilla.org/Security/B2G/JavaScript_code_analysis\" rel=\"nofollow\">Security/B2G/JavaScript code analysis</a></p>\n\n<blockquote>\n  <p>The purpose of this document is to collect JavaScript code analysis\n  tools suitable for including in coming Mozilla projects or for\n  internal use.</p>\n</blockquote>\n\n<p>Also there is at least one commercial product that does security analysis:  <a href=\"http://blog.portswigger.net/2014/07/burp-gets-new-javascript-analysis.html\" rel=\"nofollow\">Burp gets new JavaScript analysis capabilities</a></p>\n\n<blockquote>\n  <p>The latest release of Burp includes a new engine for static analysis of JavaScript code. This enables Burp Scanner to report a range of new vulnerabilities, including:</p>\n  \n  <ul>\n  <li>DOM-based XSS</li>\n  <li>JavaScript injection</li>\n  <li>Client-side SQL injection</li>\n  <li>WebSocket hijacking</li>\n  <li>Local file path manipulation</li>\n  <li>DOM-based open redirection</li>\n  <li>Cookie manipulation</li>\n  <li>Ajax request header manipulation</li>\n  <li>DOM-based denial of service</li>\n  <li>Web message manipulation</li>\n  <li>HTML5 storage manipulation</li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm used to having my compiler complain when I do something stupid like a typo on a variable name but JavaScript has a habit of letting this pass.</p>\n\n<p>Are there any static analysis tools for JavaScript?</p>\n\n<p>Preferably a free one (either beer or speech) because I'm a tightarse.</p>\n",
            "last_activity_date": 1415030308,
            "question_id": 534601,
            "score": 63,
            "tags": [
                "javascript",
                "static-analysis"
            ],
            "title": "Are there any JavaScript static analysis tools?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.w3.org/TR/domcore/#dom-element-children\"><code>.children</code></a> is a property of an <a href=\"http://www.w3.org/TR/domcore/#element\">Element</a>. Only Elements have children, and these children are all of type Element.</p>\n\n<p>However <a href=\"http://www.w3.org/TR/domcore/#dom-node-childnodes\"><code>.childNodes</code></a> is a property of <a href=\"http://www.w3.org/TR/domcore/#node\">Node</a>. <code>.childNodes</code> can contain any node.</p>\n\n<p>So a concrete example would be </p>\n\n<pre><code>var el = document.createElement(\"div\");\nel.textContent = \"foo\"\nel.childNodes.length === 1; // TextNode is a node child\nel.children.length === 0; // no Element children\n</code></pre>\n\n<p>Of course <code>.children</code> is DOM4 so browser support is shaky, however if you use the <a href=\"https://github.com/Raynos/DOM-shim\">DOM-shim</a>, your cross browser problems will go away!</p>\n\n<p>Most of the time you want to use <code>.children</code> because generally you don't want to loop over TextNodes or Comments in your DOM manipulation.</p>\n\n<p>If you do want to manipulate TextNodes you probably want <code>.textContent</code> instead.</p>\n",
                    "is_accepted": true,
                    "score": 91
                },
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en/DOM/Element.children\"><code>Element.children</code></a> returns only element children, while <a href=\"https://developer.mozilla.org/En/DOM/Node.childNodes\"><code>Node.childNodes</code></a> returns all node children.  Note that elements are nodes, so both are available on elements.</p>\n\n<p>I believe <code>childNodes</code> is more reliable.  For example, MDC (linked above) notes that IE only got <code>children</code> right in IE 9.  <code>childNodes</code> provides less room for error by browser implementors.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p><code>children</code> will return the immediate child elements, while <code>childNodes</code> will return all the child nodes, deep nested too, and text as well.</p>\n\n<p>Check the jsFiddle example: <a href=\"http://jsfiddle.net/xRqPv/\" rel=\"nofollow\">http://jsfiddle.net/xRqPv/</a></p>\n",
                    "is_accepted": false,
                    "score": -7
                }
            ],
            "body": "<p>I have found myself using JavaScript and I ran across <code>childNodes</code> and <code>children</code> properties. I am wondering what the difference between them is. Also is one preferred to the other?</p>\n",
            "last_activity_date": 1319843270,
            "question_id": 7935689,
            "score": 81,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "What is the difference between children and childNodes in JavaScript?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I think you need Java or ActiveX for that. For example <a href=\"http://upload.thinfile.com/image/upload.php\" rel=\"nofollow\" title=\"Thin Image Upload\">Thin Image Upload</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Unfortunately you won't be able to resize the images in Javascript.  It is possible in Silverlight 2 tho.</p>\n\n<p>If you want to buy something already done: <a href=\"http://www.aurigma.com/Products/ImageUploader/Licensing.aspx\" rel=\"nofollow\">Aurigma Image Uploader</a> is pretty impressive - $USD250 for the ActiveX and Java versions.  There's some demos on the site, I'm pretty sure facebook use the same control.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What jao and russau say is true. The reason being is JavaScript does not have access to the local filesystem due to security reasons. If JavaScript could \"see\" your image files, it could see any file, and that is dangerous.</p>\n\n<p>You need an application-level control to be able to do this, and that means Flash, Java or Active-X.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You have several options:</p>\n\n<ol>\n<li>Java</li>\n<li>ActiveX (only on windows)</li>\n<li><a href=\"http://silverlight.net/forums/p/45674/164450.aspx\">Silverlight</a></li>\n<li><a href=\"http://www.element-it.com/MultiPowUpload.aspx\">Flash</a></li>\n<li><a href=\"http://livedocs.adobe.com/flex/3/html/help.html?content=controls%5F16.html\">Flex</a> </li>\n<li><a href=\"http://gears.google.com/\">Google Gears</a> (the most recent version is capable of resizing and drag and drop from your desktop)</li>\n</ol>\n\n<p>I've done a lot of research looking for a similar solution to what you have described and there a lot of solutions out there that vary a lot in quality and flexibility.</p>\n\n<p>My suggestion is find a solution which will do 80% of what you need and customize it to suit your needs.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>You can look here:\n<a href=\"http://www.adylevy.com/index.php/2009/07/22/multiple-files-uploader-with-preview-on-client-side/\" rel=\"nofollow\">http://www.adylevy.com/index.php/2009/07/22/multiple-files-uploader-with-preview-\non-client-side/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Google Gears-based solution: <a href=\"http://bitbucket.org/kmike/gearsuploader/\" rel=\"nofollow\">GearsUploader</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A very flexible resize before upload tool that works really well and has features no other tool has (currently at least): <a href=\"http://www.shift8creative.com/pages/projects/agile-uploader/index.html\" rel=\"nofollow\">http://www.shift8creative.com/pages/projects/agile-uploader/index.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is multiple-technology-capable <a href=\"http://www.plupload.com/\">Plupload tool</a> which declares that it can do resizing before upload, but I haven't tried it yet. I have also find a suitable answer in my <a href=\"http://stackoverflow.com/questions/2369788/pure-javascript-image-handling-library-in-binary-form-not-through-dom\">question about binary image handling javascript libs</a>.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>In 2011, we can know do it with the File API, and canvas.\nThis works for now only in firefox and chrome.\nHere is an example :</p>\n\n<pre><code>var file = YOUR_FILE,\n    fileType = file.type,\n    reader = new FileReader();\n\nreader.onloadend = function() {\n  var image = new Image();\n      image.src = reader.result;\n\n  image.onload = function() {\n    var maxWidth = 960,\n        maxHeight = 960,\n        imageWidth = image.width,\n        imageHeight = image.height;\n\n    if (imageWidth &gt; imageHeight) {\n      if (imageWidth &gt; maxWidth) {\n        imageHeight *= maxWidth / imageWidth;\n        imageWidth = maxWidth;\n      }\n    }\n    else {\n      if (imageHeight &gt; maxHeight) {\n        imageWidth *= maxHeight / imageHeight;\n        imageHeight = maxHeight;\n      }\n    }\n\n    var canvas = document.createElement('canvas');\n    canvas.width = imageWidth;\n    canvas.height = imageHeight;\n\n    var ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(this, 0, 0, imageWidth, imageHeight);\n\n    // The resized file ready for upload\n    var finalFile = canvas.toDataURL(fileType);\n  }\n}\n\nreader.readAsDataURL(file);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 54
                },
                {
                    "body": "<p>Pure JavaScript solution. My code resizes JPEG by bilinear interpolation, and it doesn't lose exif.</p>\n\n<p><a href=\"https://github.com/hMatoba/JavaScript-MinifyJpegAsync\" rel=\"nofollow\">https://github.com/hMatoba/JavaScript-MinifyJpegAsync</a></p>\n\n<pre><code>function post(data) {\n    var req = new XMLHttpRequest();\n    req.open(\"POST\", \"/jpeg\", false);\n    req.setRequestHeader('Content-Type', 'image/jpeg');\n    req.send(data.buffer);\n}\n\nfunction handleFileSelect(evt) {\n    var files = evt.target.files;\n\n    for (var i = 0, f; f = files[i]; i++){\n        var reader = new FileReader();\n        reader.onloadend = function(e){\n            MinifyJpegAsync.minify(e.target.result, 1280, post);\n        };\n        reader.readAsDataURL(f);\n    }\n}\n\ndocument.getElementById('files').addEventListener('change', handleFileSelect, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to provide a means for a user to upload photos to their web site in jpeg format.  However, the photos are very large in original size, and I would like to make the resize before upload option very effortless for the user.  It seems my only options are a client side application that resizes the photos before uploading them via a web service, or a client side JavaScript hook on the upload operation that resizes the images.  The second option is very tentative because I don't have a JavaScript image resizing library, and it will be difficult to get the JavaScript to run my current resize tool, ImageMagick.  </p>\n\n<p>I'm sure this is not too uncommon a scenario, and some suggestions or pointers to sites that do this will be appreciated.</p>\n",
            "last_activity_date": 1424396438,
            "question_id": 961913,
            "score": 46,
            "tags": [
                "javascript",
                "image-processing"
            ],
            "title": "Image resize before upload"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<pre><code>$(\"#form input, #form select, #form textarea\").each(function() {\n data[theFieldName] = theFieldValue;\n});\n</code></pre>\n\n<p>other than that, you might want to look at <a href=\"http://api.jquery.com/serialize/\">serialize()</a>;</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>$('form').serialize() //this produces: \"foo=1&amp;bar=xxx&amp;this=hi\"\n</code></pre>\n\n<p><a href=\"http://jsbin.com/UpASuHo/113/edit?html,js,output\">demo</a></p>\n",
                    "is_accepted": true,
                    "score": 115
                },
                {
                    "body": "<pre><code>$('#myform').serialize();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Use <a href=\"http://api.jquery.com/serializeArray/\">$('form').serializeArray()</a>, which returns <strong>array</strong>:</p>\n\n<pre><code>[\n {\"name\":\"foo\",\"value\":\"1\"},\n {\"name\":\"bar\",\"value\":\"xxx\"},\n {\"name\":\"this\",\"value\":\"hi\"}\n]\n</code></pre>\n\n<p>Other option is <a href=\"http://api.jquery.com/serialize/\">$('form').serialize()</a>, which returns a string:</p>\n\n<pre><code>\"foo=1&amp;bar=xxx&amp;this=hi\"\n</code></pre>\n\n<p>Take a look at <a href=\"http://jsfiddle.net/paulftw/umcFW/183/\">this jsfiddle demo</a></p>\n",
                    "is_accepted": false,
                    "score": 176
                },
                {
                    "body": "<p>This will append all form fields to the JavaScript object \"res\":</p>\n\n<pre><code>var res = {};\n$(\"#form input, #form select, #form textarea\").each(function(i, obj) {\n    res[obj.name] = $(obj).val();\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>use .serializeArray() to get the data in array format and then convert it into an object:</p>\n\n<pre><code>function getFormObj(formId) {\n    var formObj = {};\n    var inputs = $('#'+formId).serializeArray();\n    $.each(inputs, function (i, input) {\n        formObj[input.name] = input.value;\n    });\n    return formObj;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Based on <a href=\"http://api.jquery.com/serializeArray/\"><code>jQuery.serializeArray</code></a>, returns key-value pairs.</p>\n\n<pre><code>var data = $('#form').serializeArray().reduce(function(obj, item) {\n    obj[item.name] = item.value;\n    return obj;\n}, {});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You are all not fully correct. You cannot write:</p>\n\n<pre><code>formObj[input.name] = input.value;\n</code></pre>\n\n<p>Because this way if you have multiselect list - its values will be overwritten with the last one, since it's transmitted as: \"param1\" : \"value1\", \"param1\" : \"value2\".</p>\n\n<p>So, correct approach is:</p>\n\n<pre><code>if (formData[input.name] === undefined) {\n    formData[input.name] = input.value;\n}\nelse {\n    var inputFieldArray = $.merge([], $.isArray(formData[input.name]) ? formData[input.name] : [formData[input.name]]);\n    $.merge(inputFieldArray, [input.value]);\n    formData[input.name] = $.merge([], inputFieldArray);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a really simple and short soluton that even doesn't require Jquery.</p>\n\n<pre><code>var formElements=document.getElementById(\"myForm\").elements;    \nvar postData={};\nfor (var i=0; i&lt;formElements.length; i++)\n    if (formElements[i].type!=\"submit\")//we dont want to include the submit-buttom\n        postData[formElements[i].name]=formElements[i].value;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can also use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Using_FormData_Objects\" rel=\"nofollow\">FormData</a> Objects; The FormData object lets you compile a set of key/value pairs to send using XMLHttpRequest. Its primarily intended for use in sending form data, but can be used independently from forms in order to transmit keyed data.</p>\n\n<pre><code>        var formElement = document.getElementById(\"myform_id\");\n        var formData = new FormData(formElement);\n        console.log(formData);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Updated answer for 2014:</strong> <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Using_FormData_Objects\">HTML5 FormData</a> does this</p>\n\n<pre><code>var formData = new FormData(document.querySelector('form'))\n</code></pre>\n\n<p>You can then post formData exactly as it is - it contains all names and values used in the form.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This method should do it. It serializes the form data and then converts them to an object. Takes care of groups of checkboxes as well.</p>\n\n<pre><code>function getFormObj(formId) {\n  var formParams = {};\n  $('#' + formId)\n    .serializeArray()\n    .forEach(function(item) {\n      if (formParams[item.name]) {\n        formParams[item.name] = [formParams[item.name]];\n        formParams[item.name].push(item.value)\n      } else {\n        formParams[item.name] = item.value\n      }\n    });\n  return formParams;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I wrote a library to solve this very problem: <a href=\"https://github.com/cezary/JSONForms\" rel=\"nofollow\">JSONForms</a>. It takes a form, goes through each input and builds a JSON object you can easily read.</p>\n\n<p>Say you have the following form:</p>\n\n<pre><code>&lt;form enctype='application/json'&gt;\n  &lt;input name='places[0][city]' value='New York City'&gt;\n  &lt;input type='number' name='places[0][population]' value='8175133'&gt;\n  &lt;input name='places[1][city]' value='Los Angeles'&gt;\n  &lt;input type='number' name='places[1][population]' value='3792621'&gt;\n  &lt;input name='places[2][city]' value='Chicago'&gt;\n  &lt;input type='number' name='places[2][population]' value='2695598'&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>Passing the form to JSONForms' encode method returns you the following object:</p>\n\n<pre><code>{\n  \"places\": [\n    {\n      \"city\": \"New York City\",\n      \"population\": 8175133\n    },\n    {\n      \"city\": \"Los Angeles\",\n      \"population\": 3792621\n    },\n    {\n      \"city\": \"Chicago\",\n      \"population\": 2695598\n    }\n  ]\n}\n</code></pre>\n\n<p>Here's <a href=\"http://jsbin.com/xepuvasaki/2/edit\" rel=\"nofollow\">demo</a> with your form.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are using jQuery, here is a little function that will do what you are looking for.</p>\n\n<p>First, add an ID to your form (unless it is the only form on the page, then you can just use 'form' as the dom query)</p>\n\n<pre><code>&lt;form id=\"some-form\"&gt;\n &lt;input type=\"radio\" name=\"foo\" value=\"1\" checked=\"checked\" /&gt;\n &lt;input type=\"radio\" name=\"foo\" value=\"0\" /&gt;\n &lt;input name=\"bar\" value=\"xxx\" /&gt;\n &lt;select name=\"this\"&gt;\n  &lt;option value=\"hi\" selected=\"selected\"&gt;Hi&lt;/option&gt;\n  &lt;option value=\"ho\"&gt;Ho&lt;/option&gt;\n&lt;/form&gt;\n\n&lt;script&gt;\n//read in a form's data and convert it to a key:value object\nfunction getFormData(dom_query){\n    var out = {};\n    var s_data = $(dom_query).serializeArray();\n    //transform into simple data/value object\n    for(var i = 0; i&lt;s_data.length; i++){\n        var record = s_data[i];\n        out[record.name] = record.value;\n    }\n    return out;\n}\n\nconsole.log(getFormData('#some-form'));\n&lt;/script&gt;\n</code></pre>\n\n<p>The output would look like:</p>\n\n<pre><code>{\n \"foo\": \"1\",\n \"bar\": \"xxx\",\n \"this\": \"hi\"\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a simple, one-command way to get the data of a form as it would be if it was to be submitted in the classic HTML-only way?</p>\n\n<p>For example, in:</p>\n\n<pre><code>&lt;form&gt;\n &lt;input type=\"radio\" name=\"foo\" value=\"1\" checked=\"checked\" /&gt;\n &lt;input type=\"radio\" name=\"foo\" value=\"0\" /&gt;\n &lt;input name=\"bar\" value=\"xxx\" /&gt;\n &lt;select name=\"this\"&gt;\n  &lt;option value=\"hi\" selected=\"selected\"&gt;Hi&lt;/option&gt;\n  &lt;option value=\"ho\"&gt;Ho&lt;/option&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>Out:</p>\n\n<pre><code>{\n \"foo\": \"1\",\n \"bar\": \"xxx\",\n \"this\": \"hi\"\n}\n</code></pre>\n\n<p>Something like this is too simple, since it does not (correctly) include textareas, selects, radio buttons and checkboxes:</p>\n\n<pre><code>$(\"#form input\").each(function() {\n data[theFieldName] = theFieldValue;\n});\n</code></pre>\n",
            "last_activity_date": 1424097237,
            "question_id": 2276463,
            "score": 87,
            "tags": [
                "javascript",
                "jquery",
                "html-form"
            ],
            "title": "Get form data with Javascript/Jquery"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You were on the right track with the directions service. Here's sample code:</p>\n\n<pre><code>var map, path = new google.maps.MVCArray(),\n    service = new google.maps.DirectionsService(), poly;\n\nfunction Init() {\n  var myOptions = {\n    zoom: 17,\n    center: new google.maps.LatLng(37.2008385157313, -93.2812106609344),\n    mapTypeId: google.maps.MapTypeId.HYBRID,\n    mapTypeControlOptions: {\n      mapTypeIds: [google.maps.MapTypeId.ROADMAP, google.maps.MapTypeId.HYBRID,\n          google.maps.MapTypeId.SATELLITE]\n    },\n    disableDoubleClickZoom: true,\n    scrollwheel: false,\n    draggableCursor: \"crosshair\"\n  }\n\n  map = new google.maps.Map(document.getElementById(\"map_canvas\"), myOptions);\n  poly = new google.maps.Polyline({ map: map });\n  google.maps.event.addListener(map, \"click\", function(evt) {\n    if (path.getLength() === 0) {\n      path.push(evt.latLng);\n      poly.setPath(path);\n    } else {\n      service.route({\n        origin: path.getAt(path.getLength() - 1),\n        destination: evt.latLng,\n        travelMode: google.maps.DirectionsTravelMode.DRIVING\n      }, function(result, status) {\n        if (status == google.maps.DirectionsStatus.OK) {\n          for (var i = 0, len = result.routes[0].overview_path.length;\n              i &lt; len; i++) {\n            path.push(result.routes[0].overview_path[i]);\n          }\n        }\n      });\n    }\n  });\n}\n</code></pre>\n\n<p>Also, see my working example: <a href=\"http://people.missouristate.edu/chadkillingsworth/mapsexamples/snaptoroad.htm\">http://people.missouristate.edu/chadkillingsworth/mapsexamples/snaptoroad.htm</a></p>\n",
                    "is_accepted": true,
                    "score": 52
                }
            ],
            "body": "<p>In google maps api v2 it was easy, </p>\n\n<pre><code>var map = new GMap2(document.getElementById(\"map\"));\n    map.setCenter(new GLatLng(53.7877, -2.9832),13)\n//    map.addControl(new GLargeMapControl());\n//    map.addControl(new GMapTypeControl());\n    var dirn = new GDirections();\n\n//      var firstpoint = true;\n    var gmarkers = [];\n    var gpolys = [];\n    var dist = 0;\n\n// == When the user clicks on a the map, get directiobns from that point to itself ==\n\ngmarkers.push(new google.maps.LatLng(53.7877, -2.9832));\ngmarkers.push(new google.maps.LatLng(53.9007, -2.9832));\ngmarkers.push(new GLatLng(53.600, -2.700));\n\n\n\nfor (var i = 0; i &lt; gmarkers.length-1; i++) {\n    console.log(gmarkers[i]);\n                dirn.loadFromWaypoints([gmarkers[i].toUrlValue(6),gmarkers[i+1].toUrlValue(6)],{getPolyline:true});\n\n}\n\n\n// == when the load event completes, plot the point on the street ==\n    GEvent.addListener(dirn,\"load\", function() {\n// snap to last vertex in the polyline\n        var n = dirn.getPolyline().getVertexCount();\n            map.addOverlay(dirn.getPolyline());\n            gpolys.push(dirn.getPolyline());\n            dist += dirn.getPolyline().getDistance();\n            document.getElementById(\"distance\").innerHTML=\"Path length: \"+(dist/1000).toFixed(2)+\" km. \"+(dist/1609.344).toFixed(2)+\" miles.\";\n           });\n    GEvent.addListener(dirn,\"error\", function() {\n        GLog.write(\"Failed: \"+dirn.getStatus().code);\n    });\nconsole.log(dirn);\n</code></pre>\n\n<p>In google api V3 this way simple doesnt work. There is something like directions service but I dont have any idea how I can draw polyline through my points and polyline will be snaped to road.</p>\n",
            "last_activity_date": 1388388805,
            "question_id": 10513360,
            "score": 19,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3"
            ],
            "title": "polyline snap to road using google maps api v3"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p><code>break</code> doesn't take parameters. There are two workarounds:</p>\n\n<ol>\n<li><p>Wrap them in a function and call <code>return</code></p></li>\n<li><p>Set a flag in the inner loop and break again right after the loop if the flag is set.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You should be able to break to a label, like so:</p>\n\n<pre><code>function foo ()\n{\n    dance:\n    for(var k = 0; k &lt; 4; k++){\n        for(var m = 0; m &lt; 4; m++){\n            if(m == 2){\n                break dance;\n            }\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 279
                },
                {
                    "body": "<p>Unfortunately you'll have to set a flag or use labels (think old school goto statements)</p>\n\n<pre><code>var breakout = false;\n\nfor(i=0;i&lt;5;i++)\n{\n    for(j=i+1;j&lt;5;j++)\n    {\n        breakout = true;\n        break;\n    }\n    if (breakout) break;\n    alert(1)\n};\n</code></pre>\n\n<p>The label approach looks like:</p>\n\n<pre><code>end_loops:\nfor(i=0;i&lt;5;i++)\n{\n    for(j=i+1;j&lt;5;j++)\n    {\n        break end_loops;\n    }\n    alert(1)\n};\n</code></pre>\n\n<p>edit: label incorrectly placed.</p>\n\n<p>also see:</p>\n\n<ul>\n<li><a href=\"http://www.devguru.com/Technologies/ecmascript/quickref/break.html\" rel=\"nofollow\">http://www.devguru.com/Technologies/ecmascript/quickref/break.html</a></li>\n<li><a href=\"http://www.daaq.net/old/javascript/index.php?page=js+exiting+loops&amp;parent=js+statements\" rel=\"nofollow\">http://www.daaq.net/old/javascript/index.php?page=js+exiting+loops&amp;parent=js+statements</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Break 1st loop:</p>\n\n<pre><code>for(i=0;i&lt;5;i++)\n{\n  for(j=i+1;j&lt;5;j++)\n  {\n    //do something\n\n    break;\n  }\n  alert(1);\n};\n</code></pre>\n\n<p>Break both loops:</p>\n\n<pre><code>for(i=0;i&lt;5;i++)\n{\n  var breakagain = false;\n  for(j=i+1;j&lt;5;j++)\n  {\n    //do something\n\n    breakagain = true;\n    break;\n  }\n  alert(1);\n  if(breakagain)\n    break;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>You need to name your outer loop and break that loop, rather than your inner loop - like this.</p>\n\n<pre><code>outer_loop: \nfor(i=0;i&lt;5;i++) {\n    for(j=i+1;j&lt;5;j++) {\n    \tbreak outer_loop;\n    }\n    alert(1);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>See Aaron's. Otherwise:\n<code>j=5;i=5</code> instead of <code>break</code>. </p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<pre><code>loop1:\n    for (var i in set1) {\nloop2:\n        for (var j in set2) {\nloop3:\n            for (var k in set3) {\n                break loop2;  // breaks out of loop3 and loop2\n            }\n        }\n    }\n</code></pre>\n\n<p>code copied from <a href=\"http://stackoverflow.com/questions/183161/best-way-to-break-from-nested-loops-in-javascript/183197#183197\">http://stackoverflow.com/questions/183161/best-way-to-break-from-nested-loops-in-javascript/183197#183197</a></p>\n\n<p>Please search before posting a question.  The link was the FIRST related question I saw on the left side of this page!</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>function myFunction(){\n  for(var i = 0;i &lt; n;i++){\n    for(var m = 0;m &lt; n;m++){\n      if(/*break condition*/){\n        goto out;\n      }\n    }\n  }\nout:\n //your out of the loop;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -6
                },
                {
                    "body": "<p>Use function for multilevel loops - this is good way:</p>\n\n<pre><code>function find_dup () {\n    for (;;) {\n        for(;;) {\n            if (done) return;\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In my opinion, it's important to keep your construct vocabulary to a minimum. If I can do away with breaks and continues easily, I do so.</p>\n\n<pre><code>function foo ()\n{\n    var found = false;\n    for(var k = 0; (k &lt; 4 &amp;&amp; !found); k++){\n        for(var m = 0; (m &lt; 4 &amp;&amp; !found); m++){\n           if( m === 2){\n               found = true;\n           }\n        }\n    }\n    return found;\n}\n</code></pre>\n\n<p>Be warned, after the loop, m and k are one larger that you might think. This is because m++ and k++ are executed before their loop conditions. However, it's still better than 'dirty' breaks.</p>\n\n<p>EDIT: long comment @Dennis...</p>\n\n<p>I wasn't being 100% serious about being 'dirty', but I still think that 'break' contravenes my own conception of clean code. The thought of having multi-level breaks actually makes me feel like taking a shower.</p>\n\n<p>I find justifying what I mean about a feeling about code because I have coded all life. The best why I can think of it is is a combination of manners and grammar. Breaks just aren't polite. Multi level breaks are just plain rude.</p>\n\n<p>When looking at a for statement, a reader knows exactly where to look. Everything you need to know about the rules of engagement are in the contract, in between the parenthesis. As a reader, breaks insult me, it feels like I've been cheated upon.</p>\n\n<p>Clarity is much more respectful than cheating.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Wrap in a self executing function and return</p>\n\n<pre><code>(function(){\n    for(i=0;i&lt;5;i++){\n        for (j=0;j&lt;3;j++){\n            //console.log(i+' '+j);\n            if (j == 2) return;\n        }\n    }\n})()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I tried this:</p>\n\n<pre><code>for(i=0;i&lt;5;i++)\n{\n    for(j=i+1;j&lt;5;j++)\n    {\n        break(2);\n    }\n    alert(1)\n};\n</code></pre>\n\n<p>only to get:</p>\n\n<blockquote>\n  <p>SyntaxError: missing ; before\n  statement</p>\n</blockquote>\n",
            "last_activity_date": 1400714794,
            "question_id": 1564818,
            "score": 101,
            "tags": [
                "javascript",
                "break"
            ],
            "title": "How to break 2 loops in javascript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You can either append a unique querystring (I believe this is what jQuery does with the cache: false option) to the request.</p>\n\n<pre><code>$http({\n    url: '...',\n    params: { 'foobar': new Date().getTime() }\n})\n</code></pre>\n\n<p>A perhaps better solution is if you have access to the server, then you can make sure that necessary headers are set to prevent caching. If you're using <code>ASP.NET MVC</code> <a href=\"http://stackoverflow.com/a/10011896/1378453\">this answer</a> might help.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>Instead of disabling caching for each single GET-request, I disable it globally in the $httpProvider: </p>\n\n<pre><code>myModule.config(['$httpProvider', function($httpProvider) {\n    //initialize get if not there\n    if (!$httpProvider.defaults.headers.get) {\n        $httpProvider.defaults.headers.get = {};    \n    }    \n\n    // Answer edited to include suggestions from comments\n    // because previous version of code introduced browser-related errors\n\n    //disable IE ajax request caching\n    $httpProvider.defaults.headers.get['If-Modified-Since'] = 'Mon, 26 Jul 1997 05:00:00 GMT';\n    // extra\n    $httpProvider.defaults.headers.get['Cache-Control'] = 'no-cache';\n    $httpProvider.defaults.headers.get['Pragma'] = 'no-cache';\n}]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 103
                },
                {
                    "body": "<p>you may add an interceptor .</p>\n\n<pre><code>myModule.config(['$httpProvider', function($httpProvider) {\n $httpProvider.interceptors.push('noCacheInterceptor');\n}]).factory('noCacheInterceptor', function () {\n            return {\n                request: function (config) {\n                    console.log(config.method);\n                    console.log(config.url);\n                    if(config.method=='GET'){\n                        var separator = config.url.indexOf('?') === -1 ? '?' : '&amp;';\n                        config.url = config.url+separator+'noCache=' + new Date().getTime();\n                    }\n                    console.log(config.method);\n                    console.log(config.url);\n                    return config;\n               }\n           };\n    });\n</code></pre>\n\n<p>you should remove console.log lines after verifying.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Solution above will work (make the url unique by adding in the querystring a new param) but I prefer the solution propose [here]: <a href=\"http://stackoverflow.com/questions/16971831/better-way-to-prevent-ie-cache-in-angularjs\">Better Way to Prevent IE Cache in AngularJS?</a>, which handle this at server level as it's not specific to IE. I mean, if that resource should not be cached, do it on the server (this as nothing to do with the browser used; it's intrisic to the resource).</p>\n\n<p>For example in java with JAX-RS do it <a href=\"http://www.javacodegeeks.com/2013/10/http-caching-using-jax-rs.html\" rel=\"nofollow\">programatically</a> for JAX-RS v1 or  <a href=\"http://www.jalg.net/2012/09/declarative-cache-control-with-jax-rs-2-0/\" rel=\"nofollow\">declativly</a> for JAX-RS v2.</p>\n\n<p>I'm sure anyone will figure out how to do it </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I simply added three meta tags into index.html on angular project, and cache issue was solved on IE.</p>\n\n<pre><code>&lt;meta http-equiv=\"Pragma\" content=\"no-cache\"&gt;\n&lt;meta http-equiv=\"Cache-Control\" content=\"no-cache\"&gt;\n&lt;meta http-equiv=\"Expires\" content=\"Sat, 01 Dec 2001 00:00:00 GMT\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I get it resolved appending datetime as an random number:</p>\n\n<pre><code>$http.get(\"/your_url?rnd=\"+new Date().getTime()).success(function(data, status, headers, config) {\n    console.log('your get response is new!!!');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The guaranteed one that I had working was:</p>\n\n<pre><code>        if (!$httpProvider.defaults.headers.get) {\n            $httpProvider.defaults.headers.common = {};\n        }\n        $httpProvider.defaults.headers.common[\"Cache-Control\"] = \"no-cache\";\n        $httpProvider.defaults.headers.common.Pragma = \"no-cache\";\n        $httpProvider.defaults.headers.common[\"If-Modified-Since\"] = \"0\";\n</code></pre>\n\n<p>I had to merge 2 of the above solutions in order to guarantee the correct usage</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have found better solution: <a href=\"http://stackoverflow.com/questions/16971831/better-way-to-prevent-ie-cache-in-angularjs\">Better Way to Prevent IE Cache in AngularJS?</a></p>\n\n<p>For lazy ones here is a solution:</p>\n\n<pre><code>[OutputCache(NoStore = true, Duration = 0, VaryByParam = \"None\")]\npublic ActionResult Get()\n{\n    // return your response\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>All the ajax calls that are sent from the IE are cached by Angular and I get a <code>304 response</code> for all the subsequent calls . Though the request is the same, the response is not gonna be the same in my case. I wanna disable this cache. I tried adding the <code>cache attribute</code> to $http.get but still it didnt help. How can this issue be resolved?</p>\n",
            "last_activity_date": 1425515446,
            "question_id": 16098430,
            "score": 63,
            "tags": [
                "javascript",
                "caching",
                "angularjs"
            ],
            "title": "Angular IE Caching issue for $http"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Unlike Shift/Alt/Ctrl, Mac/Apple key is not considered as a modifier key--instead, you should hook on keydown/keyup and record when a key is pressed and then depressed based on event.keyCode.</p>\n\n<p>Unfortunately, these key codes are browser-dependent:</p>\n\n<pre><code>Firefox: 224\nOpera: 17\nWebKit (Safari/Chrome): 91 (Left Apple) or 93 (Right Apple)\n</code></pre>\n\n<p>You might be interested in reading this article: <a href=\"http://unixpapa.com/js/key.html\">JavaScript Madness: Keyboard Events</a> from which I mastered that knowledge.</p>\n",
                    "is_accepted": true,
                    "score": 102
                },
                {
                    "body": "<p>You can also look at the <code>event.metaKey</code> attribute on the event if you are working with keydown events. Worked wonderfully for me! <a href=\"http://jsbin.com/vezof/1/edit?js,output\">You can try it here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 54
                },
                {
                    "body": "<p>For people using jQuery, there is an excellent plugin for handling key events:</p>\n\n<p><a href=\"https://github.com/tzuryby/jquery.hotkeys\" rel=\"nofollow\">jQuery hotkeys on GitHub</a></p>\n\n<p>For capturing <kbd>\u2318</kbd>+<kbd>S</kbd> and <kbd>Ctrl</kbd>+<kbd>S</kbd> I'm using this:</p>\n\n<pre><code>$(window).bind('keydown.ctrl_s keydown.meta_s', function(event) {\n    event.preventDefault();\n    // Do something here\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I found that you can detect the command key in the latest version of Safari (7.0: 9537.71) if it is pressed in conjunction with another key. For example, if you want to detect \u2318+x:, you can detect the x key AND check if event.metaKey is set to true. For example:</p>\n\n<pre><code>var key = event.keyCode || event.charCode || 0;\nconsole.log(key, event.metaKey);\n</code></pre>\n\n<p>When pressing x on it's own, this will output <code>120, false</code>. When pressing \u2318+x, it will output <code>120, true</code></p>\n\n<p>This only seems to work in Safari - not Chrome</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is a javascript-lib for that: <a href=\"https://github.com/madrobby/keymaster\" rel=\"nofollow\">keymaster.js</a></p>\n\n<p>(no dependencies like jquery)</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How does one capture a Mac's command key via Javascript?</p>\n",
            "last_activity_date": 1415370411,
            "question_id": 3902635,
            "score": 58,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "How does one capture a Mac&#39;s command key via Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Unfortunately, this is not a portable solution.  IE has nothing like this to my knowledge, though it would be awesome if there was</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could probably implement your own system of notifcation, by overwriting methods and variables. I don't see it as being that critical though, but I don't know what you planning on doing with such a system.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I have created a small <a href=\"https://gist.github.com/384583\">object.watch shim</a> for this a while ago. It works in IE8, Safari, Chrome, Firefox, Opera, etc.</p>\n\n<pre><code>/*\n* object.watch v0.0.1: Cross-browser object.watch\n*\n* By Elijah Grey, http://eligrey.com\n*\n* A shim that partially implements object.watch and object.unwatch\n* in browsers that have accessor support.\n*\n* Public Domain.\n* NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n*/\n\n// object.watch\nif (!Object.prototype.watch)\n    Object.prototype.watch = function (prop, handler) {\n        var oldval = this[prop], newval = oldval,\n        getter = function () {\n            return newval;\n        },\n        setter = function (val) {\n            oldval = newval;\n            return newval = handler.call(this, prop, oldval, val);\n        };\n        if (delete this[prop]) { // can't watch constants\n            if (Object.defineProperty) // ECMAScript 5\n                Object.defineProperty(this, prop, {\n                    get: getter,\n                    set: setter\n                });\n            else if (Object.prototype.__defineGetter__ &amp;&amp; Object.prototype.__defineSetter__) { // legacy\n                Object.prototype.__defineGetter__.call(this, prop, getter);\n                Object.prototype.__defineSetter__.call(this, prop, setter);\n            }\n        }\n    };\n\n// object.unwatch\nif (!Object.prototype.unwatch)\n    Object.prototype.unwatch = function (prop) {\n        var val = this[prop];\n        delete this[prop]; // remove accessors\n        this[prop] = val;\n    };\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 45
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1029241/javascript-object-watch-for-all-browsers\">Javascript Object.Watch for all browsers?</a>  </p>\n</blockquote>\n\n\n\n<p>I just read Mozilla's documentation for the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object/watch\">watch() method</a>. It looks very useful.</p>\n\n<p>However, I can't find something similar for Safari. Neither Internet Explorer.</p>\n\n<p>How do you manage portability across browsers?</p>\n",
            "last_activity_date": 1312650566,
            "question_id": 1269633,
            "score": 22,
            "tags": [
                "javascript",
                "object",
                "cross-browser",
                "properties",
                "watch"
            ],
            "title": "Watch for object properties changes in JavaScript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You can use <code>typeof</code> operator:</p>\n\n<pre><code>var booleanValue = true; \nvar numericalValue = 354;\nvar stringValue = \"This is a String\";\nalert(typeof booleanValue) // displays \"boolean\"\nalert(typeof numericalValue) // displays \"number\"\nalert(typeof stringValue) // displays \"string\"\n</code></pre>\n\n<p>Example from <a href=\"http://hubpages.com/hub/javascript-typeof-operator\">this webpage</a>. (Example was slightly modified though).</p>\n\n<p><a href=\"http://www.webreference.com/javascript/reference/core_ref/ops.html\">Here's</a> reference for <code>typeof</code> operator.</p>\n",
                    "is_accepted": true,
                    "score": 201
                },
                {
                    "body": "<p>This is what works for me:</p>\n\n<pre><code>if (typeof myVar == 'string' || myVar instanceof String)\n// it's a string\nelse\n// it's something else\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 443
                },
                {
                    "body": "<p>Best way:</p>\n\n<pre><code>var s = 'String';\nvar a = [1,2,3];\nvar o = {key: 'val'};\n\n(s.constructor === String) &amp;&amp; console.log('its a string');\n(a.constructor === Array) &amp;&amp; console.log('its an array');\n(o.constructor === Object) &amp;&amp; console.log('its an object');\n(o.constructor === Number || s.constructor === Boolean) &amp;&amp; console.log('this won\\'t run');\n</code></pre>\n\n<p>Each of these has been constructed by its appropriate class function, like \"new Object()\" etc.</p>\n\n<p>Also, Duck-Typing:\n\"If it looks like a duck, walks like a duck, and smells like a duck - it must be an Array\"\nMeaning, check its properties.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I transcoded this from underscore.js, it seems like a totally kick ass way to go.  </p>\n\n<pre><code>['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'].forEach( \n    function(name) { \n        window['is' + name] = function(obj) {\n              return toString.call(obj) == '[object ' + name + ']';\n    }; \n});\n</code></pre>\n\n<p>That will define isString, isNumber, etc.</p>\n\n<p>PS. If someone could rewrite that to work in non-browser contexts (e.g. node.js)?</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I also found that this works fine too, and its a lot shorter than the other examples.</p>\n\n<pre><code>if (myVar === myVar + '') {\n   //its string\n} else {\n   //its something else\n}\n</code></pre>\n\n<p>By concatenating on empty quotes it turns the value into a string. If <code>myVar</code> is already a string then the if statement is successful.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jQuery's <strong>type()</strong> method works well for this.  This method handles the case DRAX mentioned...  that is, it checks both if the variable is a string literal or if it's an instance of the string object, and will return \"string\" in either case.</p>\n\n<p>The resulting code is simpler and easier to read:</p>\n\n<pre><code>if($.type(myVar) === \"string\")\n   //it's a string\nelse\n   //it's something else\n</code></pre>\n\n<p>See the <a href=\"http://api.jquery.com/jQuery.type/\">jQuery Documentation on this method</a> for more details:  </p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>    function isString(o) {\n        return (Object.prototype.toString.call(o) === '[object String]');\n    }\n</code></pre>\n\n<p>I saw that here:</p>\n\n<p><a href=\"http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/\" rel=\"nofollow\">http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just to expand on @DRAX's <a href=\"http://stackoverflow.com/a/9436948/670017\">answer</a>, I'd do this:</p>\n\n<pre><code>function isWhitespaceEmptyString(str)\n{\n    //RETURN:\n    //      = 'true' if 'str' is empty string, null, undefined, or consists of white-spaces only\n    return str ? !(/\\S/.test(str)) : (str === \"\" || str === null || str === undefined);\n}\n</code></pre>\n\n<p>It will account also for <code>null</code>s and <code>undefined</code> types, and it will take care of non-string types, such as <code>0</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A simple solution would be:</p>\n\n<pre><code>var x = \"hello\"\n\nif(x === x.toString(){\n// it's a string \n}else{\n// it isn't\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am currently using the isNaN function to check if my variable is a string or an object. I just wondered if this is the wrong way of doing it because it does not seem to be working.</p>\n\n<pre><code>if(isNaN(element))\n    element = document.querySelector(element);\n</code></pre>\n\n<p>At the moment even if element is an object it is still causing isNaN to return true. Any ideas? I am sure I am missing something obvious. Is it that isNaN only works for a string/integer test?</p>\n",
            "last_activity_date": 1424876408,
            "question_id": 4059147,
            "score": 205,
            "tags": [
                "javascript",
                "string",
                "object"
            ],
            "title": "Check if a variable is a string"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>what about creating a stub node (document.createElement('div') - or using your library equivalent), filling it with the xml string (via innerHTML) and calling simple recursive function for the root element/or the stub element in case you don't have a root. The function would call itself for all the child nodes.</p>\n\n<p>You could then syntax-highlight along the way, be certain the markup is well-formed (done automatically by browser when appending via innerHTML) etc. It wouldn't be that much code and probably fast enough.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>From the text of the question <strong>I get the impression that a string result is expected</strong>, as opposed to an HTML-formatted result.</p>\n\n<p>If this is so, <strong>the simplest way to achieve this is to process the XML document with the <a href=\"http://www.w3.org/TR/xslt#copying\">identity transformation</a> and with an <a href=\"http://www.w3.org/TR/xslt#section-XML-Output-Method\"><code>&lt;xsl:output indent=\"yes\"/&gt;</code></a> instruction</strong>:</p>\n\n<pre>\n&lt;xsl:stylesheet version=\"1.0\"\n xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n &lt;xsl:output omit-xml-declaration=\"yes\" indent=\"yes\"/>\n\n    &lt;xsl:template match=\"node()|@*\">\n      &lt;xsl:copy>\n        &lt;xsl:apply-templates select=\"node()|@*\"/>\n      &lt;/xsl:copy>\n    &lt;/xsl:template>\n&lt;/xsl:stylesheet>\n</pre>\n\n<p>When applying this transformation on the provided XML document:</p>\n\n<pre>\n&lt;root>&lt;node/>&lt;/root>\n</pre>\n\n<p>most XSLT processors (.NET XslCompiledTransform, Saxon 6.5.4 and Saxon 9.0.0.2, AltovaXML) produce the wanted result:</p>\n\n<pre>\n&lt;root>\n  &lt;node />\n&lt;/root>\n</pre>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>Personnaly, I use <a href=\"http://google-code-prettify.googlecode.com/svn/trunk/README.html\" rel=\"nofollow\">google-code-prettify</a> with this function :</p>\n\n<pre><code>prettyPrintOne('&lt;root&gt;&lt;node1&gt;&lt;root&gt;', 'xml')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Or if you'd just like another js function to do it, I've modified Darin's (a lot):</p>\n\n<pre><code>var formatXml = this.formatXml = function (xml) {\n    var reg = /(&gt;)(&lt;)(\\/*)/g;\n    var wsexp = / *(.*) +\\n/g;\n    var contexp = /(&lt;.+&gt;)(.+\\n)/g;\n    xml = xml.replace(reg, '$1\\n$2$3').replace(wsexp, '$1\\n').replace(contexp, '$1\\n$2');\n    var pad = 0;\n    var formatted = '';\n    var lines = xml.split('\\n');\n    var indent = 0;\n    var lastType = 'other';\n    // 4 types of tags - single, closing, opening, other (text, doctype, comment) - 4*4 = 16 transitions \n    var transitions = {\n        'single-&gt;single'    : 0,\n        'single-&gt;closing'   : -1,\n        'single-&gt;opening'   : 0,\n        'single-&gt;other'     : 0,\n        'closing-&gt;single'   : 0,\n        'closing-&gt;closing'  : -1,\n        'closing-&gt;opening'  : 0,\n        'closing-&gt;other'    : 0,\n        'opening-&gt;single'   : 1,\n        'opening-&gt;closing'  : 0, \n        'opening-&gt;opening'  : 1,\n        'opening-&gt;other'    : 1,\n        'other-&gt;single'     : 0,\n        'other-&gt;closing'    : -1,\n        'other-&gt;opening'    : 0,\n        'other-&gt;other'      : 0\n    };\n\n    for (var i=0; i &lt; lines.length; i++) {\n        var ln = lines[i];\n        var single = Boolean(ln.match(/&lt;.+\\/&gt;/)); // is this line a single tag? ex. &lt;br /&gt;\n        var closing = Boolean(ln.match(/&lt;\\/.+&gt;/)); // is this a closing tag? ex. &lt;/a&gt;\n        var opening = Boolean(ln.match(/&lt;[^!].*&gt;/)); // is this even a tag (that's not &lt;!something&gt;)\n        var type = single ? 'single' : closing ? 'closing' : opening ? 'opening' : 'other';\n        var fromTo = lastType + '-&gt;' + type;\n        lastType = type;\n        var padding = '';\n\n        indent += transitions[fromTo];\n        for (var j = 0; j &lt; indent; j++) {\n            padding += '    ';\n        }\n\n        formatted += padding + ln + '\\n';\n    }\n\n    return formatted;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Slight modification of efnx clckclcks's javascript function.  I changed the formatting from spaces to tab, but most importantly I allowed text to remain on one line:</p>\n\n<pre><code>var formatXml = this.formatXml = function (xml) {\n        var reg = /(&gt;)(&lt;)(\\/*)/g;\n        var wsexp = / *(.*) +\\n/g;\n        var contexp = /(&lt;.+&gt;)(.+\\n)/g;\n        xml = xml.replace(reg, '$1\\n$2$3').replace(wsexp, '$1\\n').replace(contexp, '$1\\n$2');\n        var pad = 0;\n        var formatted = '';\n        var lines = xml.split('\\n');\n        var indent = 0;\n        var lastType = 'other';\n        // 4 types of tags - single, closing, opening, other (text, doctype, comment) - 4*4 = 16 transitions \n        var transitions = {\n            'single-&gt;single': 0,\n            'single-&gt;closing': -1,\n            'single-&gt;opening': 0,\n            'single-&gt;other': 0,\n            'closing-&gt;single': 0,\n            'closing-&gt;closing': -1,\n            'closing-&gt;opening': 0,\n            'closing-&gt;other': 0,\n            'opening-&gt;single': 1,\n            'opening-&gt;closing': 0,\n            'opening-&gt;opening': 1,\n            'opening-&gt;other': 1,\n            'other-&gt;single': 0,\n            'other-&gt;closing': -1,\n            'other-&gt;opening': 0,\n            'other-&gt;other': 0\n        };\n\n        for (var i = 0; i &lt; lines.length; i++) {\n            var ln = lines[i];\n            var single = Boolean(ln.match(/&lt;.+\\/&gt;/)); // is this line a single tag? ex. &lt;br /&gt;\n            var closing = Boolean(ln.match(/&lt;\\/.+&gt;/)); // is this a closing tag? ex. &lt;/a&gt;\n            var opening = Boolean(ln.match(/&lt;[^!].*&gt;/)); // is this even a tag (that's not &lt;!something&gt;)\n            var type = single ? 'single' : closing ? 'closing' : opening ? 'opening' : 'other';\n            var fromTo = lastType + '-&gt;' + type;\n            lastType = type;\n            var padding = '';\n\n            indent += transitions[fromTo];\n            for (var j = 0; j &lt; indent; j++) {\n                padding += '\\t';\n            }\n            if (fromTo == 'opening-&gt;closing')\n                formatted = formatted.substr(0, formatted.length - 1) + ln + '\\n'; // substr removes line break (\\n) from prev loop\n            else\n                formatted += padding + ln + '\\n';\n        }\n\n        return formatted;\n    };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<pre><code>var formatXml = this.formatXml = function (xml) {\n        var reg = /(&gt;)(&lt;)(\\/*)/g;\n        var wsexp = / *(.*) +\\n/g;\n        var contexp = /(&lt;.+&gt;)(.+\\n)/g;\n        xml = xml.replace(reg, '$1\\n$2$3').replace(wsexp, '$1\\n').replace(contexp, '$1\\n$2');\n        var pad = 0;\n        var formatted = '';\n        var lines = xml.split('\\n');\n        var indent = 0;\n        var lastType = 'other';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>Or just print out the special HTML characters?\n\nEx: &lt;xmlstuff&gt;&amp;#10; &amp;#09;&lt;node /&gt;&amp;#10;&lt;/xmlstuff&gt;   \n\n\n&amp;#09;   Horizontal tab  \n&amp;#10;   Line feed\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are looking for a JavaScript solution just take the code from the Pretty Diff tool at <a href=\"http://prettydiff.com/?m=beautify\" rel=\"nofollow\">http://prettydiff.com/?m=beautify</a></p>\n\n<p>You can also send files to the tool using the s parameter, such as:\n<a href=\"http://prettydiff.com/?m=beautify&amp;s=http://stackoverflow.com/\" rel=\"nofollow\">http://prettydiff.com/?m=beautify&amp;s=http://stackoverflow.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>consider to use vkBeautify plugin</p>\n\n<p><a href=\"http://www.eslinstructor.net/vkbeautify/\">http://www.eslinstructor.net/vkbeautify/</a></p>\n\n<p>it's written in plain javascript, very small: less then 1.5K if minified, very fast: less then 5 msec. to process 50K XML text.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>All of the javascript functions given here won't work for an xml document having unspecified white spaces between the end tag '>' and the start tag '&lt;'. To fix them, you just need to replace the first line in the functions</p>\n\n<pre><code>var reg = /(&gt;)(&lt;)(\\/*)/g;\n</code></pre>\n\n<p>by</p>\n\n<pre><code>var reg = /(&gt;)\\s*(&lt;)(\\/*)/g;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"https://github.com/pgfearo/xmlspectrum\" rel=\"nofollow\">XMLSpectrum</a> formats XML, supports attribute indentation and also does syntax-highlighting for XML and any embedded XPath expressions:</p>\n\n<p><img src=\"http://i.stack.imgur.com/WULv5.png\" alt=\"XMLSpectrum formatted XML\"></p>\n\n<p>XMLSpectrum is an open source project, coded in XSLT 2.0 - so you can run this server-side with a processor such as Saxon-HE (recommended) or client-side using Saxon-CE.</p>\n\n<p><em>XMLSpectrum is not yet optimised to run in the browser - hence the recommendation to run this server-side.</em></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>var reg = /(&gt;)\\s*(&lt;)(\\/*)/g;\nxml = xml.replace(/\\r|\\n/g, ''); //deleting already existing whitespaces\nxml = xml.replace(reg, '$1\\r\\n$2$3');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use above method for pretty print and then add this in any div by using jquery <strong>text()</strong> method. for example id of div is <code>xmldiv</code> then use :</p>\n\n<p><code>$(\"#xmldiv\").text(formatXml(youXmlString));</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This library does exactly what you want!</p>\n\n<p><a href=\"https://code.google.com/p/vkbeautify/\" rel=\"nofollow\">https://code.google.com/p/vkbeautify/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a string that represents a non indented XML that I would like to pretty-print. For example:</p>\n\n<pre><code>&lt;root&gt;&lt;node/&gt;&lt;/root&gt;\n</code></pre>\n\n<p>should become:</p>\n\n<pre><code>&lt;root&gt;\n  &lt;node/&gt;\n&lt;/root&gt;\n</code></pre>\n\n<p>Syntax highlighting is not a requirement. To tackle the problem I first transform the XML to add carriage returns and white spaces and then use a <a href=\"http://www.w3.org/TR/html401/struct/text.html#h-9.3.4\"><em>pre</em></a> tag to output the XML. To add new lines and white spaces I wrote the following function: </p>\n\n<pre><code>function formatXml(xml) {\n    var formatted = '';\n    var reg = /(&gt;)(&lt;)(\\/*)/g;\n    xml = xml.replace(reg, '$1\\r\\n$2$3');\n    var pad = 0;\n    jQuery.each(xml.split('\\r\\n'), function(index, node) {\n        var indent = 0;\n        if (node.match( /.+&lt;\\/\\w[^&gt;]*&gt;$/ )) {\n            indent = 0;\n        } else if (node.match( /^&lt;\\/\\w/ )) {\n            if (pad != 0) {\n                pad -= 1;\n            }\n        } else if (node.match( /^&lt;\\w[^&gt;]*[^\\/]&gt;.*$/ )) {\n            indent = 1;\n        } else {\n            indent = 0;\n        }\n\n        var padding = '';\n        for (var i = 0; i &lt; pad; i++) {\n            padding += '  ';\n        }\n\n        formatted += padding + node + '\\r\\n';\n        pad += indent;\n    });\n\n    return formatted;\n}\n</code></pre>\n\n<p>I then call the function like this:</p>\n\n<pre><code>jQuery('pre.formatted-xml').text(formatXml('&lt;root&gt;&lt;node1/&gt;&lt;/root&gt;'));\n</code></pre>\n\n<p>This works perfectly fine for me but while I was writing the previous function I thought that there must be a better way. So my question is do you know of any better way given an XML string to pretty-print it in an html page? Any javascript frameworks and/or plugins that could do the job are welcome. My only requirement is this to be done on the client side.</p>\n",
            "last_activity_date": 1421885133,
            "question_id": 376373,
            "score": 60,
            "tags": [
                "javascript",
                "xml",
                "xslt",
                "pretty-print"
            ],
            "title": "Pretty printing XML with javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>window.open(\n  'https://support.wwf.org.uk/earth_hour/index.php?type=individual',\n  '_blank' // &lt;- This is what makes it open in a new window.\n);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 307
                },
                {
                    "body": "<p>You can open it in a new window with <code>window.open('https://support.wwf.org.uk/earth_hour/index.php?type=individual');</code>. If you want to open it in new tab open the current page in two tabs and then alllow the script to run so that both current page and the new page will be obtained.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you want the URL opened in a tab, versus a new window, most modern browsers support this:</p>\n\n<pre><code>window.open('http://google.com','_newtab');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -6
                },
                {
                    "body": "<p>If you want to use <code>location.href</code> to avoid popup problems, you can use an empty <code>&lt;a&gt;</code> ref and then use javascript to click it.</p>\n\n<p>something like in HTML</p>\n\n<pre><code>&lt;a id=\"anchorID\" href=\"mynewurl\" target=\"newwindow\"&gt;&lt;/a&gt;\n</code></pre>\n\n<p>Then javascript click it as follows</p>\n\n<pre><code>document.getElementById(\"anchorID\").click();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a JavaScript file from a third party developer. It has a has link which replaces the current page with the target. I want to have this page opened in a new tab.</p>\n\n<p>This is what I have so far:</p>\n\n<pre><code>if (command == 'lightbox') {\n location.href=\"https://support.wwf.org.uk/earth_hour/index.php?type=individual\";\n}\n</code></pre>\n\n<p>Can anyone help me out?</p>\n",
            "last_activity_date": 1408114556,
            "question_id": 5141910,
            "score": 115,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript: location.href to open in new window/tab?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>jQuery(document).ready(function(){\n   $(\"#special\").click(function(e){\n      $('#status2').html(e.pageX +', '+ e.pageY);\n   }); \n})\n</code></pre>\n\n<p>Here you can find more <a href=\"http://api.jquery.com/event.pageX/\" rel=\"nofollow\"><strong>info</strong></a> with DEMO</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Are you trying to get the  position of mouse pointer <code>relative</code> to element ( or ) simply the mouse pointer location<br /><br />\nTry this Demo : <a href=\"http://jsfiddle.net/AMsK9/\"><strong>http://jsfiddle.net/AMsK9/</strong></a></p>\n\n<hr>\n\n<h2>Edit :</h2>\n\n<p>1) <code>event.pageX</code>, <code>event.pageY</code> gives you the mouse position relative document !</p>\n\n<p><strong>Ref</strong> : <a href=\"http://api.jquery.com/event.pageX/\">http://api.jquery.com/event.pageX/</a><br>\n       <a href=\"http://api.jquery.com/event.pageY/\">http://api.jquery.com/event.pageY/</a></p>\n\n<p>2) <code>offset()</code> : It gives the offset position of an element</p>\n\n<p><strong>Ref</strong> :  <a href=\"http://api.jquery.com/offset/\">http://api.jquery.com/offset/</a></p>\n\n<p>3) <code>position()</code> : It gives you the relative Position of an element i.e.,</p>\n\n<p>consider an element is embedded inside another element </p>\n\n<p><strong>example</strong> : </p>\n\n<pre><code>&lt;div id=\"imParent\"&gt;\n   &lt;div id=\"imchild\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>Ref</strong> : <a href=\"http://api.jquery.com/position/\">http://api.jquery.com/position/</a></p>\n\n<p><em><strong>HTML</em></strong></p>\n\n<pre><code>&lt;body&gt;\n   &lt;div id=\"A\" style=\"left:100px;\"&gt; Default    &lt;br /&gt; mouse&lt;br/&gt;position &lt;/div&gt;\n   &lt;div id=\"B\" style=\"left:300px;\"&gt; offset()   &lt;br /&gt; mouse&lt;br/&gt;position &lt;/div&gt;\n   &lt;div id=\"C\" style=\"left:500px;\"&gt; position() &lt;br /&gt; mouse&lt;br/&gt;position &lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p><em><strong>JavaScript</em></strong></p>\n\n<pre><code>$(document).ready(function (e) {\n\n    $('#A').click(function (e) { //Default mouse Position \n        alert(e.pageX + ' , ' + e.pageY);\n    });\n\n    $('#B').click(function (e) { //Offset mouse Position\n        var posX = $(this).offset().left,\n            posY = $(this).offset().top;\n        alert((e.pageX - posX) + ' , ' + (e.pageY - posY));\n    });\n\n    $('#C').click(function (e) { //Relative ( to its parent) mouse position \n        var posX = $(this).position().left,\n            posY = $(this).position().top;\n        alert((e.pageX - posX) + ' , ' + (e.pageY - posY));\n    });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 123
                },
                {
                    "body": "<pre><code>For future readers:\n</code></pre>\n\n<p>Here is a better demo of Avinash' Explanation: <a href=\"http://jsfiddle.net/AMsK9/558/\" rel=\"nofollow\">http://jsfiddle.net/AMsK9/558/</a></p>\n\n<p><br>\nPS: I can't comment for now, but I wanted to share it. That's why I made an answer ;)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have the following event handler for my html element</p>\n\n<pre><code>jQuery(\"#seek-bar\").click(function(e){\n    var x = e.pageX - e.target.offsetLeft;\n    alert(x);    \n});\n</code></pre>\n\n<p>I need to find the position of the mouse on the #seek-bar at the time of clicking. I would have thought the above code should work, but it gives incorrect result </p>\n",
            "last_activity_date": 1419646430,
            "question_id": 3234977,
            "score": 51,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "jquery-ui"
            ],
            "title": "Using jQuery how to get click coordinates on the target element"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I got lucky and answered this in a comment to the question, but I'm posting a full answer for the sake of completeness and so we can mark this question as \"Answered\".</p>\n\n<hr>\n\n<p>It depends on what you want to accomplish by sharing a controller; you can either share the same controller (though have different instances), or you can share the same controller instance.</p>\n\n<p><strong>Share a Controller</strong></p>\n\n<p>Two directives can use the same controller by passing the same method to two directives, like so:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>app.controller( 'MyCtrl', function ( $scope ) {\n  // do stuff...\n});\n\napp.directive( 'directiveOne', function () {\n  return {\n    controller: 'MyCtrl'\n  };\n});\n\napp.directive( 'directiveTwo', function () {\n  return {\n    controller: 'MyCtrl'\n  };\n});\n</code></pre>\n\n<p>Each directive will get its own instance of the controller, but this allows you to share the logic between as many components as you want.</p>\n\n<p><strong>Require a Controller</strong></p>\n\n<p>If you want to share the same <em>instance</em> of a controller, then you use <code>require</code>. </p>\n\n<p><code>require</code> ensures the presence of another directive and then includes its controller as a parameter to the link function. So if you have two directives on one element, your directive can <em>require</em> the presence of the other directive and gain access to its controller methods. A common use case for this is to require <code>ngModel</code>.</p>\n\n<p><code>^require</code>, with the addition of the caret, checks elements above directive in addition to the current element to try to find the other directive. This allows you to create complex components where \"sub-components\" can communicate with the parent component through its controller to great effect. Examples could include tabs, where each pane can communicate with the overall tabs to handle switching; an accordion set could ensure only one is open at a time; etc.</p>\n\n<p>In either event, you have to use the two directives together for this to work. <code>require</code> is a way of communicating between components.</p>\n\n<p>Check out the Guide page of directives for more info: <a href=\"http://docs.angularjs.org/guide/directive\">http://docs.angularjs.org/guide/directive</a></p>\n",
                    "is_accepted": true,
                    "score": 98
                },
                {
                    "body": "<p>There is a good stackoverflow answer here by Mark Rajcok:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/15622863/angularjs-directive-controllers-requiring-parent-directive-controllers\"><strong>AngularJS directive controllers requiring parent directive controllers?</strong></a></p>\n\n<p>with a link to this very clear jsFiddle: <a href=\"http://jsfiddle.net/mrajcok/StXFK/\" rel=\"nofollow\">http://jsfiddle.net/mrajcok/StXFK/</a></p>\n\n<pre><code>&lt;div ng-controller=\"MyCtrl\"&gt;\n    &lt;div screen&gt;\n        &lt;div component&gt;\n            &lt;div widget&gt;\n                &lt;button ng-click=\"widgetIt()\"&gt;Woo Hoo&lt;/button&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>JavaScript</p>\n\n<pre><code>var myApp = angular.module('myApp',[])\n\n.directive('screen', function() {\n    return {\n        scope: true,\n        controller: function() {\n            this.doSomethingScreeny = function() {\n                alert(\"screeny!\");\n            }\n        }\n    }\n})\n\n.directive('component', function() {\n    return {\n        scope: true,\n        require: '^screen',\n        controller: function($scope) {\n            this.componentFunction = function() {\n                $scope.screenCtrl.doSomethingScreeny();\n            }\n        },\n        link: function(scope, element, attrs, screenCtrl) {\n            scope.screenCtrl = screenCtrl\n        }\n    }\n})\n\n.directive('widget', function() {\n    return {\n        scope: true,\n        require: \"^component\",\n        link: function(scope, element, attrs, componentCtrl) {\n            scope.widgetIt = function() {\n                componentCtrl.componentFunction();\n            };\n        }\n    }\n})\n\n\n//myApp.directive('myDirective', function() {});\n//myApp.factory('myService', function() {});\n\nfunction MyCtrl($scope) {\n    $scope.name = 'Superhero';\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Can anyone tell me how to include a controller from one directive in another angularJS directive.\nfor example I have the following code</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var app = angular.module('shop', []).\nconfig(['$routeProvider', function ($routeProvider) {\n    $routeProvider.when('/', {\n        templateUrl: '/js/partials/home.html'\n    })\n        .when('/products', {\n        controller: 'ProductsController',\n        templateUrl: '/js/partials/products.html'\n    })\n        .when('/products/:productId', {\n        controller: 'ProductController',\n        templateUrl: '/js/partials/product.html'\n    });\n}]);\n\napp.directive('mainCtrl', function () {\n    return {\n        controller: function ($scope) {}\n    };\n});\n\napp.directive('addProduct', function () {\n    return {\n        restrict: 'C',\n        require: '^mainCtrl',\n        link: function (scope, lElement, attrs, mainCtrl) {\n            //console.log(cartController);\n        }\n    };\n});\n</code></pre>\n\n<p>By all account I should be able to access the controller in the addProduct directive but I am not. Is there a better way of doing this? </p>\n",
            "last_activity_date": 1418698963,
            "question_id": 15672709,
            "score": 35,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-directive"
            ],
            "title": "How to require a controller in an angularjs directive"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>CDATA</code> has no meaning at all in HTML.</p>\n\n<p><code>CDATA</code> is an XML construct which sets a tag's contents that is normally #PCDATA - parsed character data, to be instead taken as #CDATA, that is, non-parsed character data. It is only relevant and valid in XHTML.</p>\n\n<p>It is used in <code>script</code> tags to avoid parsing <code>&lt;</code> and <code>&amp;</code>. In HTML, this is not needed, because in HTML, <code>script</code> is already #CDATA.</p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>CDATA is a sequence of characters from the document character set and may include character entities. User agents should interpret attribute values as follows:\nReplace character entities with characters,</p>\n\n<p>Ignore line feeds,</p>\n\n<p>Replace each carriage return or tab with a single space. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>All text in an XML document will be parsed by the parser.</p>\n\n<p>But text inside a CDATA section will be ignored by the parser.</p>\n\n<p><strong>CDATA - (Unparsed) Character Data</strong></p>\n\n<blockquote>\n  <p>The term CDATA is used about text data that should not be parsed by the XML parser.</p>\n  \n  <p>Characters like \"&lt;\" and \"&amp;\" are illegal in XML elements.</p>\n  \n  <p>\"&lt;\" will generate an error because the parser interprets it as the start of a new element.</p>\n  \n  <p>\"&amp;\" will generate an error because the parser interprets it as the start of an character entity.</p>\n  \n  <p>Some text, like JavaScript code, contains a lot of \"&lt;\" or \"&amp;\" characters. To avoid errors script code can be defined as CDATA.</p>\n  \n  <p>Everything inside a CDATA section is ignored by the parser.</p>\n  \n  <p>A CDATA section starts with \"<code>&lt;![CDATA[</code>\" and ends with \"<code>]]&gt;</code>\"</p>\n</blockquote>\n\n<p><strong>Use of CDATA in program output</strong></p>\n\n<blockquote>\n  <p>CDATA sections in XHTML documents are liable to be parsed differently by web browsers if they render the document as HTML, since HTML parsers do not recognise the CDATA start and end markers, nor do they recognise HTML entity references such as &lt; within <code>&lt;script&gt;</code> tags. This can cause rendering problems in web browsers and can lead to cross-site scripting vulnerabilities if used to display data from untrusted sources, since the two kinds of parser will disagree on where the CDATA section ends.</p>\n</blockquote>\n\n<p>See the reference: <a href=\"http://en.wikipedia.org/wiki/CDATA\">Click Here</a></p>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>From <a href=\"http://en.wikipedia.org/wiki/CDATA\">http://en.wikipedia.org/wiki/CDATA</a>:</p>\n\n<blockquote>\n  <p>Since it is useful to be able to use less-than signs (&lt;) and\n  ampersands (&amp;) in web page scripts, and to a lesser extent styles,\n  without having to remember to escape them, it is common to use CDATA\n  markers around the text of inline  and  elements in\n  XHTML documents. But so that the document can also be parsed by HTML\n  parsers, which do not recognise the CDATA markers, the CDATA markers\n  are usually commented-out, as in this JavaScript example:</p>\n</blockquote>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n//&lt;![CDATA[\ndocument.write(\"&lt;\");\n//]]&gt;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>What is the use of CDATA inside JavaScript tags and HTML?</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt; \n// &lt;![CDATA[\n\n// ]]&gt;\n&lt;/script&gt; \n</code></pre>\n",
            "last_activity_date": 1388173252,
            "question_id": 7092236,
            "score": 73,
            "tags": [
                "javascript",
                "html",
                "cdata"
            ],
            "title": "What is CDATA in HTML?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>You could use substr.</p>\n\n<pre><code>str.substr(i).match(/[abc]/);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The string object's <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/search\">search method</a> accepts a RegExp and returns the character position index of the first match.</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>To start search from a particular position (faking second parameter)</p>\n\n<pre><code>str.substr(i).search(/re/) \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>It does not natively, but you certainly can add this functionality</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nString.prototype.regexIndexOf = function( pattern, startIndex )\n{\n    startIndex = startIndex || 0;\n    var searchResult = this.substr( startIndex ).search( pattern );\n    return ( -1 === searchResult ) ? -1 : searchResult + startIndex;\n}\n\nString.prototype.regexLastIndexOf = function( pattern, startIndex )\n{\n    startIndex = startIndex === undefined ? this.length : startIndex;\n    var searchResult = this.substr( 0, startIndex ).reverse().regexIndexOf( pattern, 0 );\n    return ( -1 === searchResult ) ? -1 : this.length - ++searchResult;\n}\n\nString.prototype.reverse = function()\n{\n    return this.split('').reverse().join('');\n}\n\n// Indexes 0123456789\nvar str = 'caabbccdda';\n\nalert( [\n        str.regexIndexOf( /[cd]/, 4 )\n    ,   str.regexLastIndexOf( /[cd]/, 4 )\n    ,   str.regexIndexOf( /[yz]/, 4 )\n    ,   str.regexLastIndexOf( /[yz]/, 4 )\n    ,   str.lastIndexOf( 'd', 4 )\n    ,   str.regexLastIndexOf( /d/, 4 )\n    ,   str.lastIndexOf( 'd' )\n    ,   str.regexLastIndexOf( /d/ )\n    ]\n);\n\n&lt;/script&gt;\n</code></pre>\n\n<p>I didn't fully test these methods, but they seem to work so far.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Based on BaileyP's answer. The main difference is that these methods return <code>-1</code> if the pattern can't be matched.</p>\n\n<p><strong>Edit:</strong> Thanks to Jason Bunting's answer I got an idea. Why not modify the <code>.lastIndex</code> property of the regex? Though this will only work for patterns with the global flag (<code>/g</code>).</p>\n\n<p><strong>Edit:</strong> Updated to pass the test-cases.</p>\n\n<pre><code>String.prototype.regexIndexOf = function(re, startPos) {\n    startPos = startPos || 0;\n\n    if (!re.global) {\n        var flags = \"g\" + (re.multiline?\"m\":\"\") + (re.ignoreCase?\"i\":\"\");\n        re = new RegExp(re.source, flags);\n    }\n\n    re.lastIndex = startPos;\n    var match = re.exec(this);\n\n    if (match) return match.index;\n    else return -1;\n}\n\nString.prototype.regexIndexOf = function(re, startPos) {\n    startPos = startPos === undefined ? this.length : startPos;\n\n    if (!re.global) {\n        var flags = \"g\" + (re.multiline?\"m\":\"\") + (re.ignoreCase?\"i\":\"\");\n        re = new RegExp(re.source, flags);\n    }\n\n    var lastSuccess = -1;\n    for (var pos = 0; pos &lt;= startPos; pos++) {\n        re.lastIndex = pos;\n\n        var match = re.exec(this);\n        if (!match) break;\n\n        pos = match.index;\n        if (pos &lt;= startPos) lastSuccess = pos;\n    }\n\n    return lastSuccess;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Well, as you are just looking to match the position of a <em>character</em> , regex is possibly overkill. </p>\n\n<p>I presume all you want is, instead of \"find first of these this character\" , just find first of these characters. </p>\n\n<p>This of course is the simple answer, but does what your question sets out to do, albeit without the regex part ( because you didn't clarify why specifically it had to be a regex )</p>\n\n<pre><code>function mIndexOf( str , chars, offset )\n{\n   var first  = -1; \n   for( var i = 0; i &lt; chars.length;  i++ )\n   {\n      var p = str.indexOf( chars[i] , offset ); \n      if( p &lt; first || first === -1 )\n      {\n           first = p;\n      }\n   }\n   return first; \n}\nString.prototype.mIndexOf = function( chars, offset )\n{\n   return mIndexOf( this, chars, offset ); # I'm really averse to monkey patching.  \n};\nmIndexOf( \"hello world\", ['a','o','w'], 0 );\n&gt;&gt; 4 \nmIndexOf( \"hello world\", ['a'], 0 );\n&gt;&gt; -1 \nmIndexOf( \"hello world\", ['a','o','w'], 4 );\n&gt;&gt; 4\nmIndexOf( \"hello world\", ['a','o','w'], 5 );\n&gt;&gt; 6\nmIndexOf( \"hello world\", ['a','o','w'], 7 );\n&gt;&gt; -1 \nmIndexOf( \"hello world\", ['a','o','w','d'], 7 );\n&gt;&gt; 10\nmIndexOf( \"hello world\", ['a','o','w','d'], 10 );\n&gt;&gt; 10\nmIndexOf( \"hello world\", ['a','o','w','d'], 11 );\n&gt;&gt; -1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Combining a few of the approaches already mentioned (the indexOf is obviously rather simple), I think these are the functions that will do the trick:</p>\n\n<pre><code>String.prototype.regexIndexOf = function(regex, startpos) {\n    var indexOf = this.substring(startpos || 0).search(regex);\n    return (indexOf &gt;= 0) ? (indexOf + (startpos || 0)) : indexOf;\n}\n\nString.prototype.regexLastIndexOf = function(regex, startpos) {\n    regex = (regex.global) ? regex : new RegExp(regex.source, \"g\" + (regex.ignoreCase ? \"i\" : \"\") + (regex.multiLine ? \"m\" : \"\"));\n    if(typeof (startpos) == \"undefined\") {\n        startpos = this.length;\n    } else if(startpos &lt; 0) {\n        startpos = 0;\n    }\n    var stringToWorkWith = this.substring(0, startpos + 1);\n    var lastIndexOf = -1;\n    var nextStop = 0;\n    while((result = regex.exec(stringToWorkWith)) != null) {\n        lastIndexOf = result.index;\n        regex.lastIndex = ++nextStop;\n    }\n    return lastIndexOf;\n}\n</code></pre>\n\n<p>Obviously, modifying the built-in String object would send up red flags for most people, but this may be one time when it is not that big of a deal; simply be aware of it.</p>\n\n<p><hr /></p>\n\n<p>UPDATE: Edited <code>regexLastIndexOf()</code> so that is seems to mimic <code>lastIndexOf()</code> now. Please let me know if it still fails and under what circumstances.</p>\n\n<p><hr /></p>\n\n<p>UPDATE: Passes all tests found on in comments on this page, and my own. Of course, that doesn't mean it's bulletproof. Any feedback appreciated.</p>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>After having all the proposed solutions fail my tests one way or the other, (edit: some were updated to pass the tests after I wrote this) I found the mozilla implementation for <a href=\"https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference:Objects:String:indexOf\" rel=\"nofollow\">Array.indexOf</a> and <a href=\"https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference:Objects:String:lastIndexOf\" rel=\"nofollow\">Array.lastIndexOf</a></p>\n\n<p>I used those to implement my version of String.prototype.regexIndexOf and String.prototype.regexLastIndexOf as follows:</p>\n\n<pre><code>String.prototype.regexIndexOf = function(elt /*, from*/)\n  {\n\tvar arr = this.split('');\n\tvar len = arr.length;\n\n\tvar from = Number(arguments[1]) || 0;\n\tfrom = (from &lt; 0) ? Math.ceil(from) : Math.floor(from);\n\tif (from &lt; 0)\n\t  from += len;\n\n\tfor (; from &lt; len; from++) {\n\t  if (from in arr &amp;&amp; elt.exec(arr[from]) ) \n\t\treturn from;\n\t}\n\treturn -1;\n};\n\nString.prototype.regexLastIndexOf = function(elt /*, from*/)\n  {\n\tvar arr = this.split('');\n\tvar len = arr.length;\n\n\tvar from = Number(arguments[1]);\n\tif (isNaN(from)) {\n\t  from = len - 1;\n\t} else {\n\t  from = (from &lt; 0) ? Math.ceil(from) : Math.floor(from);\n\t  if (from &lt; 0)\n\t\tfrom += len;\n\t  else if (from &gt;= len)\n\t\tfrom = len - 1;\n\t}\n\n\tfor (; from &gt; -1; from--) {\n\t  if (from in arr &amp;&amp; elt.exec(arr[from]) )\n\t\treturn from;\n\t}\n\treturn -1;\n  };\n</code></pre>\n\n<p>They seem to pass the test functions I provided in the question.</p>\n\n<p>Obviously they only work if the regular expression matches one character but that is enough for my purpose since I will be using it for things like ( [abc]  , \\s , \\W , \\D )</p>\n\n<p>I will keep monitoring the question in case someone provides a better/faster/cleaner/more generic implementation that works on any regular expression.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>RexExp</code> instances have a <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/RegExp/lastIndex\" rel=\"nofollow\">lastIndex</a> property already (if they are global) and so what I'm doing is copying the regular expression, modifying it slightly to suit our purposes, <code>exec</code>-ing it on the string and looking at the <code>lastIndex</code>.  This will inevitably be faster than looping on the string.  (You have enough examples of how to put this onto the string prototype, right?)</p>\n\n<pre><code>function reIndexOf(reIn, str, startIndex) {\n    var re = new RegExp(reIn.source, 'g' + (reIn.ignoreCase ? 'i' : '') + (reIn.multiLine ? 'm' : ''));\n    re.lastIndex = startIndex || 0;\n    var res = re.exec(str);\n    if(!res) return -1;\n    return re.lastIndex - res[0].length;\n};\n\nfunction reLastIndexOf(reIn, str, startIndex) {\n    var src = /\\$$/.test(reIn.source) &amp;&amp; !/\\\\\\$$/.test(reIn.source) ? reIn.source : reIn.source + '(?![\\\\S\\\\s]*' + reIn.source + ')';\n    var re = new RegExp(src, 'g' + (reIn.ignoreCase ? 'i' : '') + (reIn.multiLine ? 'm' : ''));\n    re.lastIndex = startIndex || 0;\n    var res = re.exec(str);\n    if(!res) return -1;\n    return re.lastIndex - res[0].length;\n};\n\nreIndexOf(/[abc]/, \"tommy can eat\");  // Returns 6\nreIndexOf(/[abc]/, \"tommy can eat\", 8);  // Returns 11\nreLastIndexOf(/[abc]/, \"tommy can eat\"); // Returns 11\n</code></pre>\n\n<p>You could also prototype the functions onto the RegExp object:</p>\n\n<pre><code>RegExp.prototype.indexOf = function(str, startIndex) {\n    var re = new RegExp(this.source, 'g' + (this.ignoreCase ? 'i' : '') + (this.multiLine ? 'm' : ''));\n    re.lastIndex = startIndex || 0;\n    var res = re.exec(str);\n    if(!res) return -1;\n    return re.lastIndex - res[0].length;\n};\n\nRegExp.prototype.lastIndexOf = function(str, startIndex) {\n    var src = /\\$$/.test(this.source) &amp;&amp; !/\\\\\\$$/.test(this.source) ? this.source : this.source + '(?![\\\\S\\\\s]*' + this.source + ')';\n    var re = new RegExp(src, 'g' + (this.ignoreCase ? 'i' : '') + (this.multiLine ? 'm' : ''));\n    re.lastIndex = startIndex || 0;\n    var res = re.exec(str);\n    if(!res) return -1;\n    return re.lastIndex - res[0].length;\n};\n\n\n/[abc]/.indexOf(\"tommy can eat\");  // Returns 6\n/[abc]/.indexOf(\"tommy can eat\", 8);  // Returns 11\n/[abc]/.lastIndexOf(\"tommy can eat\"); // Returns 11\n</code></pre>\n\n<p>A quick explanation of how I am modifying the <code>RegExp</code>:  For <code>indexOf</code> I just have to ensure that the global flag is set.  For <code>lastIndexOf</code> of I am using a negative look-ahead to find the last occurrence unless the <code>RegExp</code> was already matching at the end of the string.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I needed a <code>regexIndexOf</code> function also for an array, so I programed one myself. However I doubt, that it's optimized, but i guess it should work properly.</p>\n\n<pre><code>Array.prototype.regexIndexOf = function (regex, startpos = 0) {\n    len = this.length;\n    for(x = startpos; x &lt; len; x++){\n        if(typeof this[x] != 'undefined' &amp;&amp; (''+this[x]).match(regex)){\n            return x;\n        }\n    }\n    return -1;\n}\n\narr = [];\narr.push(null);\narr.push(NaN);\narr[3] = 7;\narr.push('asdf');\narr.push('qwer');\narr.push(9);\narr.push('...');\nconsole.log(arr);\narr.regexIndexOf(/\\d/, 4);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In certain simple cases, you can simplify your backwards search by using split.</p>\n\n<pre><code>function regexlast(string,re){\n  var tokens=string.split(re);\n  return (tokens.length&gt;1)?(string.length-tokens[tokens.length-1].length):null;\n}\n</code></pre>\n\n<p>This has a few serious problems:</p>\n\n<ol>\n<li>overlapping matches won't show up</li>\n<li>returned index is for the end of the match rather than the beginning (fine if your regex is a constant)</li>\n</ol>\n\n<p>But on the bright side it's way less code. For a constant-length regex that can't overlap (like <code>/\\s\\w/</code> for finding word boundaries) this is good enough.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have a short version for you. It works well for me!</p>\n\n<pre><code>var match      = str.match(/[abc]/gi);\nvar firstIndex = str.indexOf(match[0]);\nvar lastIndex  = str.lastIndexOf(match[match.length-1]);\n</code></pre>\n\n<p>And if you want a prototype version:</p>\n\n<pre><code>String.prototype.indexOfRegex = function(regex){\n  var match = this.match(regex);\n  return match ? this.indexOf(match[0]) : -1;\n}\n\nString.prototype.lastIndexOfRegex = function(regex){\n  var match = this.match(regex);\n  return match ? this.lastIndexOf(match[match.length-1]) : -1;\n}\n</code></pre>\n\n<p>To use it, as simple as this:</p>\n\n<pre><code>var firstIndex = str.indexOfRegex(/[abc]/gi);\nvar lastIndex  = str.lastIndexOfRegex(/[abc]/gi);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>For data with sparse matches, using string.search is the fastest across browsers. It re-slices a string each iteration to :</p>\n\n<pre><code>function lastIndexOfSearch(string, regex, index) {\n  if(index === 0 || index)\n     string = string.slice(0, Math.max(0,index));\n  var idx;\n  var offset = -1;\n  while ((idx = string.search(regex)) !== -1) {\n    offset += idx + 1;\n    string = string.slice(idx + 1);\n  }\n  return offset;\n}\n</code></pre>\n\n<p>For dense data I made this. It's complex compared to the execute method, but for dense data, it's 2-10x faster than every other method I tried, and about 100x faster than the accepted solution. The main points are:</p>\n\n<ol>\n<li>It calls exec on the regex passed in once to verify there is a match or quit early. I do this using (?= in a similar method, but on IE checking with exec is dramatically faster.</li>\n<li>It constructs and caches a modified regex in the format '(r).<em>(?!.</em>?r)'</li>\n<li><p>The new regex is executed and the results from either that exec, or the first exec, are returned;</p>\n\n<pre><code>function lastIndexOfGroupSimple(string, regex, index) {\n    if (index === 0 || index) string = string.slice(0, Math.max(0, index + 1));\n    regex.lastIndex = 0;\n    var lastRegex, index\n    flags = 'g' + (regex.multiline ? 'm' : '') + (regex.ignoreCase ? 'i' : ''),\n    key = regex.source + '$' + flags,\n    match = regex.exec(string);\n    if (!match) return -1;\n    if (lastIndexOfGroupSimple.cache === undefined) lastIndexOfGroupSimple.cache = {};\n    lastRegex = lastIndexOfGroupSimple.cache[key];\n    if (!lastRegex)\n        lastIndexOfGroupSimple.cache[key] = lastRegex = new RegExp('.*(' + regex.source + ')(?!.*?' + regex.source + ')', flags);\n    index = match.index;\n    lastRegex.lastIndex = match.index;\n    return (match = lastRegex.exec(string)) ? lastRegex.lastIndex - match[1].length : index;\n};\n</code></pre></li>\n</ol>\n\n<p><a href=\"http://jsperf.com/lastindexof-regex/6\" rel=\"nofollow\">jsPerf of methods</a></p>\n\n<p>I don't understand the purpose of the tests up top. Situations that require a regex are impossible to compare against a call to indexOf, which I think is the point of making the method in the first place. To get the test to pass, it makes more sense to use 'xxx+(?!x)', than adjust the way the regex iterates.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In javascript, is there an equivalent of String.indexOf() that takes a regular expression instead of a string for the first first parameter while still allowing a second parameter ?</p>\n\n<p>I need to do something like </p>\n\n<pre><code>str.indexOf(/[abc]/ , i);\n</code></pre>\n\n<p>and</p>\n\n<pre><code>str.lastIndexOf(/[abc]/ , i);\n</code></pre>\n\n<p>While String.search() takes a regexp as a parameter it does not allow me to specify a second argument!</p>\n\n<p>Edit:<br />\nThis turned out to be harder than I originally thought so I wrote a small test function to test all the provided solutions... it assumes regexIndexOf and regexLastIndexOf have been added to the String object.</p>\n\n<pre><code>function test (str) {\n\tvar i = str.length +2;\n\twhile (i--) {\n\t\tif (str.indexOf('a',i) != str.regexIndexOf(/a/,i)) \n\t\t\talert (['failed regexIndexOf ' , str,i , str.indexOf('a',i) , str.regexIndexOf(/a/,i)]) ;\n\t\tif (str.lastIndexOf('a',i) != str.regexLastIndexOf(/a/,i) ) \n\t\t\talert (['failed regexLastIndexOf ' , str,i,str.lastIndexOf('a',i) , str.regexLastIndexOf(/a/,i)]) ;\n\t}\n}\n</code></pre>\n\n<p>and I am testing as follow to make sure that at least for one character regexp, the result is the same as if we used indexOf</p>\n\n<p>//Look for the a among the xes<br />\ntest('xxx');<br />\ntest('axx');<br />\ntest('xax');<br />\ntest('xxa');<br />\ntest('axa');<br />\ntest('xaa');<br />\ntest('aax');<br />\ntest('aaa');  </p>\n",
            "last_activity_date": 1422466118,
            "question_id": 273789,
            "score": 54,
            "tags": [
                "javascript",
                "regex",
                "indexof"
            ],
            "title": "Is there a version of JavaScript&#39;s String.indexOf() that allows for regular expressions?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>IE8 implements the <a href=\"http://msdn.microsoft.com/en-us/library/cc197016%28v=VS.85%29.aspx\"><code>remainingSpace</code></a> property for this purpose:</p>\n\n<pre><code>alert(window.localStorage.remainingSpace);  // should return 5000000 when empty\n</code></pre>\n\n<p>Unfortunately it seems that this is not available in the other browsers. However I am not sure if they implement something similar.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>I didn't find a universal way to get the remaining limit on the browsers I needed, but I did find out that when you do reach the limit there is an error message that pops up. This is of-course different in each browser.</p>\n\n<p>To max it out I used this little script:</p>\n\n<pre><code>localStorage.setItem(\"DATA\", \"m\");\nfor(i=0 ; i&lt;40 ; i++) {\n    var data = localStorage.getItem(\"DATA\");\n    try { \n        localStorage.setItem(\"DATA\", data + data);\n    } catch(e) {\n        console.log(\"LIMIT REACHED: (\" + i + \")\");\n        console.log(e);\n    }\n}\nlocalStorage.removeItem(\"DATA\");\n</code></pre>\n\n<p>From that I got this information:</p>\n\n<p><strong>Google Chrome</strong></p>\n\n<ul>\n<li>DOMException:\n<ul>\n<li>code: 22</li>\n<li>message: \"Failed to execute 'setItem' on 'Storage': Setting the value of 'data' exceeded the quota.\"</li>\n<li>name: \"QuotaExceededError\"</li>\n</ul></li>\n</ul>\n\n<p><strong>Mozilla Firefox</strong></p>\n\n<ul>\n<li>DOMException:\n<ul>\n<li>code: 1014</li>\n<li>message: \"Persistent storage maximum size reached\"</li>\n<li>name: \"NS_ERROR_DOM_QUOTA_REACHED\"</li>\n</ul></li>\n</ul>\n\n<p><strong>Safari</strong></p>\n\n<ul>\n<li>Crashed (almost, took about 4 min to recover)</li>\n</ul>\n\n<p><strong>Internet Explorer</strong> (community)</p>\n\n<ul>\n<li>Anyone wanna to try? (I'm on a Mac, no Windows)</li>\n</ul>\n\n<hr>\n\n<p><strong>My solution</strong></p>\n\n<p>So far my solution is to add an extra call each time the user would save anything. And if the exception is caught then I would tell them that they are running out of storage capacity.</p>\n\n<hr>\n\n<p><strong>Edit: Delete the added data</strong></p>\n\n<p>I forgot to mention that for this to actually work you would need to delete the <code>DATA</code> item that was set originally. The change is reflected above by using the <a href=\"http://dev.w3.org/html5/webstorage/#dom-storage-removeitem\">removeItem()</a> function.</p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>You may be able to get somewhat of an idea by using the JSON methods to turn the whole localStorage object to a JSON Object:</p>\n\n<pre><code>JSON.stringify(localStorage).length\n</code></pre>\n\n<p>I don't know how byte-accurate it would be, especially with the few bytes of added markup if you're using additional objects - but I figure it's better than thinking you're only pushing 28K and instead doing 280K (or vice-versa).</p>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>To add to the browser test results:</p>\n\n<p><strong>Firefox</strong>\ni=22.</p>\n\n<p><strong>Safari</strong>\nVersion 5.0.4 on my Mac didn't hang. Error as Chrome. i=21.</p>\n\n<p><strong>Opera</strong>\nTells the user that the website wants to store data but doesn't have enough space. The user can reject the request, up the limit to the amount required or to several other limits, or set it to unlimited. Go to opera:webstorage to say whether this message appears or not. i=20. Error thrown is same as Chrome.</p>\n\n<p><strong>IE9 standards mode</strong>\nError as Chrome. i=22.</p>\n\n<p><strong>IE9 in IE8 standards mode</strong>\nConsole message \"Error: Not enough storage is available to complete this operation\". i=22</p>\n\n<p><strong>IE9 in older modes</strong>\nobject error. i=22.</p>\n\n<p><strong>IE8</strong>\nDon't have a copy to test, but local storage is supported (http://stackoverflow.com/questions/3452816/does-ie8-support-out-of-the-box-in-localstorage)</p>\n\n<p><strong>IE7 and below</strong>\nDoesn't support local storage.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use the below line to accurately calculate this value and <a href=\"http://jsfiddle.net/RLyam/\" rel=\"nofollow\">here is a jsfiddle</a> for illustration of its use</p>\n\n<pre><code>alert(1024 * 1024 * 5 - unescape(encodeURIComponent(JSON.stringify(localStorage))).length);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Ran into this today while testing (exceeding storage quota) and whipped up a solution. IMO, knowing what the limit is and where we are in relation is far less valuable than implementing a functional way to continue storing beyond the quota.</p>\n\n<p>Thus, rather than trying to do size comparisons and capacity checks, lets react when we've hit the quota, reduce our current storage by a third, and resume storing. If said reduction fails, stop storing.</p>\n\n<pre><code>set: function( param, val ) { \n    try{\n        localStorage.setItem( param, typeof value == 'object' ? JSON.stringify(value) : value )\n        localStorage.setItem( 'lastStore', new Date().getTime() )\n    }\n    catch(e){\n      if( e.code === 22 ){\n        // we've hit our local storage limit! lets remove 1/3rd of the entries (hopefully chronologically)\n        // and try again... If we fail to remove entries, lets silently give up\n        console.log('Local storage capacity reached.')\n\n        var maxLength = localStorage.length\n          , reduceBy = ~~(maxLength / 3);\n\n        for( var i = 0; i &lt; reduceBy; i++ ){\n          if( localStorage.key(0) ){\n            localStorage.removeItem( localStorage.key(0) );\n          }\n          else break;\n        }\n\n        if( localStorage.length &lt; maxLength ){\n          console.log('Cache data reduced to fit new entries. (' + maxLength + ' =&gt; ' + localStorage.length + ')');\n          public.set( param, value );\n        }\n        else {\n          console.log('Could not reduce cache size. Removing session cache setting from this instance.');\n          public.set = function(){}\n        }\n      }\n    }\n}\n</code></pre>\n\n<p>This function lives within a wrapper object, so public.set simply calls itself. Now we can add to storage and not worry what the quota is or how close we are too it. If a single store is exceeding 1/3rd the quota size is where this function will stop culling and quit storing, and at that point, you shouldn't be caching anyways, right?</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Wish I could add this in a comment - not enough rep, sorry.</p>\n\n<p>I ran some perf tests - expecting JSON.stringify(localStorage).length to be an expensive op at large localStorage occupancy. </p>\n\n<p><a href=\"http://jsperf.com/occupied-localstorage-json-stringify-length\" rel=\"nofollow\">http://jsperf.com/occupied-localstorage-json-stringify-length</a></p>\n\n<p>It is indeed so - about 50x more expensive than keeping track of what you're storing, and gets worse  the fuller localStorage gets.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can test your browser with this <a href=\"http://dev-test.nemikor.com/web-storage/support-test/\" rel=\"nofollow\">web storage support test</a></p>\n\n<p>I tested <a href=\"https://www.mozilla.org/en-US/firefox/\" rel=\"nofollow\">Firefox</a> on both my android tablet and windows laptop and <a href=\"http://www.chromium.org/\" rel=\"nofollow\">Chromium</a> just on windows \nresults:</p>\n\n<ol>\n<li><p><strong><a href=\"https://www.mozilla.org/en-US/firefox/\" rel=\"nofollow\">Firefox</a></strong>(windows):</p>\n\n<ul>\n<li><strong>localStorage</strong>: 5120 char</li>\n<li><strong>sessionStorage</strong>: 5120 char</li>\n<li><strong>localStorage</strong>: *not supported</li>\n</ul></li>\n<li><p><strong><a href=\"https://www.mozilla.org/en-US/firefox/\" rel=\"nofollow\">Firefox</a></strong>(android):</p>\n\n<ul>\n<li><strong>localStorage</strong>: 2560 char</li>\n<li><strong>sessionStorage</strong>: Unlimited (exactly test runs up to 10240 char == 20480 byte)</li>\n<li><strong>localStorage</strong>: <em>not supported</em></li>\n</ul></li>\n<li><p><strong><a href=\"http://www.chromium.org/\" rel=\"nofollow\">Chromium</a></strong>(windows):</p>\n\n<ul>\n<li><strong>localStorage</strong>: 5120 char</li>\n<li><strong>sessionStorage</strong>: 5120 char</li>\n<li><strong>localStorage</strong>: <em>not supported</em></li>\n</ul></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This might help somebody. In chrome is possible to ask the user to allow to use more disk space if needed:</p>\n\n<pre><code>// Request Quota (only for File System API)  \nwindow.webkitStorageInfo.requestQuota(PERSISTENT, 1024*1024, function(grantedBytes) {\n  window.webkitRequestFileSystem(PERSISTENT, grantedBytes, onInitFs, errorHandler); \n}, function(e) {\n  console.log('Error', e); \n});\n</code></pre>\n\n<p>Visit <a href=\"https://developers.google.com/chrome/whitepapers/storage#asking_more\" rel=\"nofollow\">https://developers.google.com/chrome/whitepapers/storage#asking_more</a> for more info.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am creating an app using the Bespin editor and HTML5's localStorage. It stores all files locally and helps with grammar, uses JSLint and some other parsers for CSS and HTML to aid the user.</p>\n\n<p>I want to calculate how much of the localStorage limit has been used and how much there actually is. <strong>Is this possible today?</strong> I was thinking for not to simply calculate the bits that are stored. But then again I'm not sure what more is there that I can't measure myself.</p>\n",
            "last_activity_date": 1422029684,
            "question_id": 3027142,
            "score": 50,
            "tags": [
                "javascript",
                "size",
                "storage",
                "local-storage",
                "capacity"
            ],
            "title": "Calculating usage of localStorage space"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>First things first, grab the awesome <code>RGBColor</code> class <a href=\"http://www.phpied.com/rgb-color-parser-in-javascript/\">here</a>.</p>\n\n<p><strong>Here goes:</strong>\n<a href=\"http://jsfiddle.net/gZSa9/5/\"><h3><strong>jsFiddle example</strong></h3></a></p>\n\n<pre><code>//set up color properties to iterate through\nvar colorProperties = ['color', 'background-color'];\n\n//iterate through every element in reverse order...\n$(\"*\").get().reverse().each(function() {\n    var color = null;\n\n    for (var prop in colorProperties) {\n        prop = colorProperties[prop];\n\n        //if we can't find this property or it's null, continue\n        if (!$(this).css(prop)) continue; \n\n        //create RGBColor object\n        color = new RGBColor($(this).css(prop));\n\n        if (color.ok) { \n            //good to go, let's build up this RGB baby!\n            //subtract each color component from 255\n            $(this).css(prop, 'rgb(' + (255 - color.r) + ', ' + (255 - color.g) + ', ' + (255 - color.b) + ')');\n        }\n        color = null; //some cleanup\n    }\n});\n</code></pre>\n\n<p><strong>Screenshot:</strong> </p>\n\n<p><img src=\"http://i.stack.imgur.com/zgSMm.png\" alt=\"alt text\"></p>\n\n<p><strong>EDIT</strong>: Here's a bookmarklet you can now copy-paste into your browser (<a href=\"http://jsfiddle.net/F7HqS/1/\">http://jsfiddle.net/F7HqS/1/</a>)</p>\n\n<pre><code>javascript:function load_script(src,callback){var s=document.createElement('script');s.src=src;s.onload=callback;document.getElementsByTagName('head')[0].appendChild(s);}function invertColors(){var colorProperties=['color','background-color'];$('*').each(function(){var color=null;for(var prop in colorProperties){prop=colorProperties[prop];if(!$(this).css(prop))continue;color=new RGBColor($(this).css(prop));if(color.ok){$(this).css(prop,'rgb('+(255-color.r)+','+(255-color.g)+','+(255-color.b)+')');}color=null;}});}load_script('http://www.phpied.com/files/rgbcolor/rgbcolor.js',function(){if(!window.jQuery)load_script('https://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js',invertColors);else invertColors();});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 61
                },
                {
                    "body": "<p>I figured it would be fun to try inverting images. Didn't take long to find an appropriate Javascript library for image editing: <a href=\"http://www.pixastic.com/lib/\" rel=\"nofollow\">http://www.pixastic.com/lib/</a></p>\n\n<p>You probably can't load that whole library into a bookmarklet, but if you host it yourself you can add something like this to the end of the bookmarklet (after invertColors):</p>\n\n<pre><code>load_script('http://www.example.com/pixastic.invert.js', function () {$('img').each(function() {try{$(this).pixastic(\"invert\");} catch(e) {}})})\n</code></pre>\n\n<hr>\n\n<p>I think it's worth noting that if your goal is to take a page with a white background and make it black (or vice versa), something simpler might be in order.</p>\n\n<p>I just tried the bookmarklet from Jacob and compared it to a more naive version I found on the Google support forums:\n<a href=\"http://www.google.com/support/forum/p/Chrome/thread?tid=26affebdd0da12d9&amp;hl=en\" rel=\"nofollow\">http://www.google.com/support/forum/p/Chrome/thread?tid=26affebdd0da12d9&amp;hl=en</a></p>\n\n<p>Jacob's invert seems to work less frequently and takes quite a bit longer on large pages. I think I'll end up using the naive version more frequently.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Hello fellow inverters!</p>\n\n<p>my solution seems to work only for chrome right now, but it inverts everything (including images and iframes) as seen here:</p>\n\n<p><img src=\"http://i.stack.imgur.com/CR8XX.jpg\" alt=\"enter image description here\"></p>\n\n<p>Also it does not make use of external libraries and is very simple: adding a <code>-webkit-filter: invert(100%)</code> to the <code>html</code>-selector.</p>\n\n<pre><code>javascript: (\nfunction () { \n// the css we are going to inject\nvar css = 'html {-webkit-filter: invert(100%);' +\n    '-moz-filter: invert(100%);' + \n    '-o-filter: invert(100%);' + \n    '-ms-filter: invert(100%); }',\n\nhead = document.getElementsByTagName('head')[0],\nstyle = document.createElement('style');\n\n// a hack, so you can \"invert back\" clicking the bookmarklet again\nif (!window.counter) { window.counter = 1;} else  { window.counter ++;\nif (window.counter % 2 == 0) { var css ='html {-webkit-filter: invert(0%); -moz-filter:    invert(0%); -o-filter: invert(0%); -ms-filter: invert(0%); }'}\n };\n\nstyle.type = 'text/css';\nif (style.styleSheet){\nstyle.styleSheet.cssText = css;\n} else {\nstyle.appendChild(document.createTextNode(css));\n}\n\n//injecting the css to the head\nhead.appendChild(style);\n}());\n</code></pre>\n\n<p>For me, this only works in chrome. But there it works like a charm.</p>\n\n<p>Here's the fiddle: <a href=\"http://jsfiddle.net/nikita_turing/jVKw6/3/\">http://jsfiddle.net/nikita_turing/jVKw6/3/</a>\nWith the Bookmarklet included. If someone has an Idea how to make it work for Firefox (SVG-Filters?) go ahead!</p>\n\n<p>Greets\nleosok</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>I cleaned up the comments from one of the answers (by leosok) above, so it will work as a bookmarklet in chrome. Note that this solution is more efficient than the current highest-point here, plus it works even if the html changes after you run the script.</p>\n\n<pre><code>javascript:(function () { \n    var css = 'html {-webkit-filter: invert(100%);' + '-moz-filter: invert(100%);' + '-o-filter: invert(100%);' + '-ms-filter: invert(100%); }';\n    var head = document.getElementsByTagName('head')[0];\n    var style = document.createElement('style');\n    if (!window.counter) { \n        window.counter = 1;\n    } else { \n        window.counter++;\n        if (window.counter % 2 == 0) { \n            var css = 'html {-webkit-filter: invert(0%); -moz-filter: invert(0%); -o-filter: invert(0%); -ms-filter: invert(0%); }'\n        } \n    }\n    style.type = 'text/css';\n    if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        style.appendChild(document.createTextNode(css));\n    }\n    head.appendChild(style);\n}());\n</code></pre>\n\n<p>One line for bookmarklet. create a bookmark, then edit the url to this:\n<code>javascript:(function () { var css = 'html {-webkit-filter: invert(100%);' + '-moz-filter: invert(100%);' + '-o-filter: invert(100%);' + '-ms-filter: invert(100%); }'; var head = document.getElementsByTagName('head')[0]; var style = document.createElement('style'); if (!window.counter) { window.counter = 1; } else { window.counter++; if (window.counter % 2 == 0) { var css = 'html {-webkit-filter: invert(0%); -moz-filter: invert(0%); -o-filter: invert(0%); -ms-filter: invert(0%); }' } } style.type = 'text/css'; if (style.styleSheet) { style.styleSheet.cssText = css; } else { style.appendChild(document.createTextNode(css)); } head.appendChild(style); }());</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><strike><strong>Note: I am keeping an up-to-date version of the bookmarklet in my question which works well and is based on Jacob's answer.  If you are looking for a bookmarklet to use, use that one.</strike> See leosok's fantastic answer if you just want something amazing that works on chrome.</strong></p>\n\n<p>I want to be able to invert the color of all the elements on a page with a JavaScript bookmarklet.  I know that to invert a color you subtract each of the RGB hex values from 255(xFF), but beyond that I am unsure of how to proceed.</p>\n\n<p>How can I accomplish this?</p>\n\n<p>Using <code>jQuery</code> is acceptable, and it only needs to work on Chrome, although if it worked in Firefox that'd be a plus.</p>\n\n<p>This is excluding images - background, text and links colors should all be inverted.  Basically anything that gets its color from CSS.</p>\n\n<p><strong>UPDATE</strong>\nHere is an updated bookmarklet that fixes the nested element issue and will work on a lot of different sites (including this one)</p>\n\n<p><strong>UPDATE2</strong>\nAdded some support for transparency, handling elements that have default background-color rgba(0, 0, 0, 0).  More sites should be working now with the updated one.</p>\n\n<pre><code>javascript: (function ($) {\n    function load_script(src, callback) {\n        var s = document.createElement('script');\n        s.src = src;\n        s.onload = callback;\n        document.getElementsByTagName('head')[0].appendChild(s);\n    }\n\n    function invertElement() {\n        var colorProperties = ['color', 'background-color'];\n        var color = null;\n        for (var prop in colorProperties) {\n            prop = colorProperties[prop];\n            if (!$(this).css(prop)) continue;\n            if ($(this).data(prop) != $(this).css(prop)) continue;\n\n            if (($(this).css(prop) === 'rgba(0, 0, 0, 0)') || ($(this).css(prop) === 'transparent')) {\n                if ($(this).is('body')) {\n                    $(this).css(prop, 'black');\n                    continue;\n                } else {\n                    continue;\n                }\n            }\n            color = new RGBColor($(this).css(prop));\n            if (color.ok) {\n                $(this).css(prop, 'rgb(' + (255 - color.r) + ',' + (255 - color.g) + ',' + (255 - color.b) + ')');\n            }\n            color = null;\n        }\n    }\n\n    function setColorData() {\n        var colorProperties = ['color', 'background-color'];\n        for (var prop in colorProperties) {\n            prop = colorProperties[prop];\n            $(this).data(prop, $(this).css(prop));\n        }\n    }\n\n    function invertColors() {\n        $(document).live('DOMNodeInserted', function(e) {\n            var $toInvert = $(e.target).find('*').andSelf();\n            $toInvert.each(setColorData);\n            $toInvert.each(invertElement);\n        });\n        $('*').each(setColorData);\n        $('*').each(invertElement);\n        $('iframe').each(function () {\n            $(this).contents().find('*').each(setColorData);\n            $(this).contents().find('*').each(invertElement);\n        });\n    }\n    load_script('http://www.phpied.com/files/rgbcolor/rgbcolor.js', function () {\n        if (!window.jQuery) load_script('https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js', invertColors);\n        else invertColors();\n    });\n\n})(jQuery);\n</code></pre>\n\n<p>Now works with most sites I've tried.  Background images can pose a problem, however.</p>\n",
            "last_activity_date": 1417797908,
            "question_id": 4766201,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "google-chrome",
                "bookmarklet"
            ],
            "title": "JavaScript: Invert color on all elements of a page"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Javascripts <code>.call()</code> and <code>.apply()</code> methods allow you to set the <strong>context</strong> for a function.</p>\n\n<pre><code>var myfunc = function(){\n    alert(this.name);\n};\n\nvar obj_a = {\n    name:  \"FOO\"\n};\n\nvar obj_b = {\n    name:  \"BAR!!\"\n};\n</code></pre>\n\n<p>Now you can call:</p>\n\n<pre><code>myfunc.call(obj_a);\n</code></pre>\n\n<p>Which would alert <code>FOO</code>. The other way around, passing <code>obj_b</code> would alert <code>BAR!!</code>. The difference between <code>.call()</code> and <code>.apply()</code> is that <code>.call()</code> takes a comma separated list if you're passing arguments to your function and <code>.apply()</code> needs an array.</p>\n\n<pre><code>myfunc.call(obj_a, 1, 2, 3);\nmyfunc.apply(obj_a, [1, 2, 3]);\n</code></pre>\n\n<p>Therefore, you can easily write a function <code>hook</code> by using the <code>apply()</code> method. For instance, we want to add a feature to jQuerys <code>.css()</code> method. We can store the original function reference, overwrite the function with custom code and call the stored function.</p>\n\n<pre><code>var _css = $.fn.css;\n$.fn.css = function(){\n   alert('hooked!');\n   _css.apply(this, arguments);\n};\n</code></pre>\n\n<p>Since the magic <code>arguments</code> object is an array like object, we can just pass it to <code>apply()</code>. That way we guarantee, that all parameters are passed through to the original function.</p>\n",
                    "is_accepted": true,
                    "score": 112
                },
                {
                    "body": "<p><a href=\"http://odetocode.com/Blogs/scott/archive/2007/07/05/function-apply-and-function-call-in-javascript.aspx\">Use</a>:</p>\n\n<pre><code>function.call(that, arg1, arg2, etc);\n</code></pre>\n\n<p>Where <code>that</code> is the object which you want <code>this</code> in the function to be.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>jQuery uses a <code>.call(...)</code> method to assign the current node to <code>this</code> inside the function you pass as the parameter.</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>Don't be afraid to look inside jQuery's code when you have a doubt, it's all in clear and well documented Javascript.</p>\n\n<p>ie: the answer to this question is around line 574,<br/> <code>callback.call( object[ name ], name, object[ name ] ) === false</code></p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I thought this would be something I could easily google, but maybe I'm not asking the right question...</p>\n\n<p>How do I set whatever \"this\" refers to in a given javascript function?</p>\n\n<p>for example, like with most of jQuery's functions such as:  </p>\n\n<pre><code>$(selector).each(function() {\n   //$(this) gives me access to whatever selector we're on\n});\n</code></pre>\n\n<p>How do I write/call my own standalone functions that have an appropriate \"this\" reference when called?  I use jQuery, so if there's a jQuery-specific way of doing it, that'd be ideal.</p>\n",
            "last_activity_date": 1400905284,
            "question_id": 3630054,
            "score": 67,
            "tags": [
                "javascript",
                "jquery",
                "context",
                "this"
            ],
            "title": "How do I pass the this context to a function?"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>You should be able to use CSS (<a href=\"http://docs.jquery.com/CSS/css#name\">http://docs.jquery.com/CSS/css#name</a>). You may have to be more specific such as \"padding-left\" or \"margin-top\".</p>\n\n<p>Example:</p>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>a, a:link, a:hover, a:visited, a:active {color:black;margin-top:10px;text-decoration: none;}\n</code></pre>\n\n<p><strong>JS</strong></p>\n\n<pre><code>alert($(\"a\").css(\"margin-top\"));\n</code></pre>\n\n<p>The result is 10px.</p>\n\n<p>Update:\nIf you want to get the \"integer\" value, you can do the following:</p>\n\n<pre><code>alert($(\"a\").css(\"margin-top\").replace(\"px\", \"\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 141
                },
                {
                    "body": "<p>You can just grab them <a href=\"http://docs.jquery.com/CSS\">like any other CSS attribute</a>:</p>\n\n<pre><code>alert($(\"#mybox\").css(\"padding-right\"));\nalert($(\"#mybox\").css(\"margin-bottom\"));\n</code></pre>\n\n<p>You can set them with a second attribute in the css method:</p>\n\n<pre><code>$(\"#mybox\").css(\"padding-right\", \"20px\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Compare outer and inner height/widths to get the total margin and padding:</p>\n\n<pre><code>var that = $(\"#myId\");\nalert(that.outerHeight(true) - that.innerHeight());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 51
                },
                {
                    "body": "<p>See Ian Robinson's answer for the best way to do this without the need for a plugin.</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>You could also extend the jquery framework yourself with something like:</p>\n\n<pre><code>jQuery.fn.margin = function() {\nvar marginTop = this.outerHeight(true) - this.outerHeight();\nvar marginLeft = this.outerWidth(true) - this.outerWidth();\n\nreturn {\n    top: marginTop,\n    left: marginLeft\n}};\n</code></pre>\n\n<p>Thereby adding a function on your jquery objects called margin(), which returns a collection like the offset function. </p>\n\n<p>fx. </p>\n\n<pre><code>$(\"#myObject\").margin().top\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>ok just to answer the original question:</p>\n\n<p>you can get the padding as a usable integer like this:</p>\n\n<blockquote>\n  <p>var padding =\n  parseInt($(\"myId\").css(\"padding-top\").replace(\"ems\",\"\"));</p>\n</blockquote>\n\n<p>If you have defined another measurement like px just replace \"ems\" with \"px\". \nparseInt interprets the stringpart as a wrong value so its important to replace it with ... nothing.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The parseInt function has a \"radix\" parameter which defines the numeral system used on the conversion, so calling <code>parseInt(jQuery('#something').css('margin-left'), 10);</code> returns the left margin as an Integer.</p>\n\n<p>This is what JSizes use.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>This simple function will do it:</p>\n\n<pre><code>$.fn.pixels = function(property) {\n    return parseInt(this.css(property).slice(0,-2));\n};\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var padding = $('#myId').pixels('paddingTop');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Here's how you can get the surrounding dimentions:</p>\n\n<pre><code>var elem = $('#myId');\n\nvar marginTopBottom  = elem.outerHeight(true) - elem.outerHeight();\nvar marginLeftRight  = elem.outerWidth(true)  - elem.outerWidth();\n\nvar borderTopBottom  = elem.outerHeight() - elem.innerHeight();\nvar borderLeftRight  = elem.outerWidth()  - elem.innerWidth();\n\nvar paddingTopBottom  = elem.innerHeight() - elem.height();\nvar paddingLeftRight  = elem.innerWidth()  - elem.width();\n</code></pre>\n\n<p>Pay attention that each variable, <code>paddingTopBottom</code> for example, contains the sum of the margins on the both sides of the element; i.e., <code>paddingTopBottom == paddingTop + paddingBottom</code>. I wonder if there is a way to get them separately. Of course, if they are equal you can divide by 2 :)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I probably use <a href=\"https://github.com/bramstein/jsizes\" rel=\"nofollow\">github.com/bramstein/jsizes</a> jquery plugin for paddings and margins in very comfortable way, Thanks...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Parse int</p>\n\n<pre><code>parseInt(canvas.css(\"margin-left\")); \n</code></pre>\n\n<p>returns 0 for 0px</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Shamelessly adopted from <a href=\"http://stackoverflow.com/a/1901665/1250044\">Quickredfox</a>.</p>\n\n<pre><code>jQuersy.fn.cssNum = function(){\n    return parseInt(jQuery.fn.css.apply(this, arguments));\n};\n</code></pre>\n\n<p><strong>update</strong></p>\n\n<p>Changed to <code>parseInt</code> since it is faster than <code>parseFloat</code>.</p>\n\n<p><a href=\"http://jsperf.com/number-vs-plus-vs-toint-vs-tofloat/20\" rel=\"nofollow\">http://jsperf.com/number-vs-plus-vs-toint-vs-tofloat/20</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Not to necro but I made this which can determine pixels based on a variety of values:</p>\n\n<pre><code>$.fn.extend({\n  pixels: function (property, base) {\n    var value = $(this).css(property);\n    var original = value;\n    var outer = property.indexOf('left') != -1 || property.indexOf('right') != -1 \n      ? $(this).parent().outerWidth()\n      : $(this).parent().outerHeight();\n\n    // EM Conversion Factor\n    base = base || 16;\n\n    if (value == 'auto' || value == 'inherit') \n        return outer || 0;\n\n    value = value.replace('rem', '');\n    value = value.replace('em', '');\n\n    if (value !== original) {\n       value = parseInt(value, 10);\n       return value ? base * value : 0;\n    }\n\n    value = value.replace('pt', '');\n\n    if (value !== original) {\n       value = parseInt(value, 10);\n       return value ? value * 1.333333 : 0; // 1pt = 1.333px\n    }\n\n    value = value.replace('%', '');\n\n    if (value !== original) {\n      value = parseInt(value, 10);\n      return value ? (outer * value / 100) : 0;\n    }\n\n    value = value.replace('px', '');\n    return parseInt(value, 10) || 0;\n  }\n});\n</code></pre>\n\n<p>This way, we take into account for sizing, and auto / inherit.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>@Sampo Sarralla is correct:</p>\n\n<p>PLEASE don't go loading another library just to do something that's already natively available!</p>\n\n<p>Using jQuery's <code>.css()</code> converts %'s and em's to their pixel equivalent to begin with, and <code>parseInt()</code> will remove the <code>'px'</code> from the end of the returned string and convert it to an integer:</p>\n\n<p><a href=\"http://jsfiddle.net/BXnXJ/\" rel=\"nofollow\">http://jsfiddle.net/BXnXJ/</a></p>\n\n<pre><code>$(document).ready(function () {\n    var $h1 = $('h1');\n    console.log($h1);\n    $h1.after($('&lt;div&gt;Padding-top: ' + parseInt($h1.css('padding-top')) + '&lt;/div&gt;'));\n    $h1.after($('&lt;div&gt;Margin-top: ' + parseInt($h1.css('margin-top')) + '&lt;/div&gt;'));\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>jQuery has height() en width() functions that returns the height or width in pixels as integer... </p>\n\n<p>How can I get a padding or margin value of an element <strong>in pixels and as integer</strong> using jQuery?</p>\n\n<p>My first idea was to do the following:</p>\n\n<pre><code>var padding = parseInt(jQuery(\"myId\").css(\"padding-top\"));\n</code></pre>\n\n<p>But if padding is given in ems for example, how can I get the value in pixels?</p>\n\n<p><hr /></p>\n\n<p>Looking into the JSizes plugin suggested by Chris Pebble i realized that my own version was the right one :). jQuery returns always value in pixels, so just parsing it to integer was the solution.</p>\n\n<p>Thanks to Chris Pebble and Ian Robinson</p>\n",
            "last_activity_date": 1426169639,
            "question_id": 590602,
            "score": 123,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "Padding or margin value in pixels as integer using jQuery"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>There is one difference in that you can bind custom events using the second form that you have.  Otherwise, they seem to be synonymous.  See: <a href=\"http://docs.jquery.com/Events\">jQuery Event Docs</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>For what it's worth, from the <a href=\"http://code.google.com/p/jqueryjs/source/browse/trunk/jquery/src/event.js#661\">jQuery source</a>:</p>\n\n<pre><code>jQuery.each( (\"blur,focus,load,resize,scroll,unload,click,dblclick,\" +\n    \"mousedown,mouseup,mousemove,mouseover,mouseout,mouseenter,mouseleave,\" +\n    \"change,select,submit,keydown,keypress,keyup,error\").split(\",\"), function(i, name){\n\n    // Handle event binding\n    jQuery.fn[name] = function(fn){\n        return fn ? this.bind(name, fn) : this.trigger(name);\n    };\n});\n</code></pre>\n\n<p>So no, there's no difference - </p>\n\n<pre><code>$().click(fn)\n</code></pre>\n\n<p>calls</p>\n\n<pre><code>$().bind('click',fn)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 124
                },
                {
                    "body": "<p>+1 for Matthew's answer, but I thought I should mention that you can also bind more than one event handler in one go using <code>bind</code></p>\n\n<pre><code>$('#myDiv').bind('mouseover focus', function() {\n    $(this).addClass('focus')\n});\n</code></pre>\n\n<p>which is the much cleaner equivalent to:</p>\n\n<pre><code>var myFunc = function() {\n    $(this).addClass('focus');\n};\n$('#myDiv')\n    .mouseover(myFunc)\n    .focus(myFunc)\n;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 91
                },
                {
                    "body": "<p>There is the [data] parameter of bind which will occur only at bind-time, once.</p>\n\n<p>You can also specify custom events as the first parameter of bind.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you have Google Chrome, their developer tools have an event listener tool, select the element you want to spy its' event.</p>\n\n<p>You'll find that trying the both ways lead to the same result, so they are equivalent.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I prefer <strong>.bind()</strong> because of its interface consistency with <strong>.live()</strong>. Not only does it make the code more readable, but it makes it easier to change a line of code to use one method instead of the other. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I find the .click() is way more logical, but I guess it's how you think of things.</p>\n\n<pre><code>$('#my_button').click(function() { alert('BOOM!'); });\n</code></pre>\n\n<p>Seems to be about as dead simple as you get.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>When using jQuery to hookup an event handler, is there any difference between using the click method</p>\n\n<pre><code>$().click(fn)\n</code></pre>\n\n<p>versus using the bind method</p>\n\n<pre><code>$().bind('click',fn);\n</code></pre>\n\n<p>Other than bind's optional data parameter.</p>\n",
            "last_activity_date": 1337769320,
            "question_id": 518762,
            "score": 98,
            "tags": [
                "javascript",
                "jquery",
                "event-handling"
            ],
            "title": "jQuery: $().click(fn) vs. $().bind(&#39;click&#39;,fn);"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Use <code>application/javascript</code>, that way clients can rely on the content-type without having to manually check whether a response has padding or not.</p>\n",
                    "is_accepted": true,
                    "score": 119
                },
                {
                    "body": "<p>Use <code>application/json</code> <a href=\"http://www.ietf.org/rfc/rfc4627.txt\">as per rfc4627.txt</a> if what you return is plain JSON.</p>\n\n<p>If you return JavaScript (which is really what JSONP is), then use <code>application/javascript</code> <a href=\"http://www.rfc-editor.org/rfc/rfc4329.txt\">as per rfc4329.txt</a> </p>\n",
                    "is_accepted": false,
                    "score": 78
                }
            ],
            "body": "<p>I have a webservice that when called without specifying a callback will return a JSON string using <code>application/json</code> as the content type.</p>\n\n<p>When a callback is specified it will wrap the JSON string in a callback function, so it's not really valid JSON anymore. My question is, should I serve it as <code>application/javascript</code> in this case or still use <code>application/json</code>?</p>\n",
            "last_activity_date": 1343999187,
            "question_id": 111302,
            "score": 93,
            "tags": [
                "javascript",
                "json",
                "jsonp"
            ],
            "title": "Best content type to serve JSONP?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>$('#textbox').live('keypress', function(e) {\n    if (e.keyCode === 9) {\n        e.preventDefault();\n        // do work\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><strong>Edit:</strong> Since your element is dynamically inserted, you have to use <a href=\"http://api.jquery.com/on/\">delegated <code>on()</code></a> as in your example, but you should bind it to the keydown event, because as @Marc comments, in IE the keypress event doesn't capture non-character keys: </p>\n\n<pre><code>$(\"#parentOfTextbox\").on('keydown', '#textbox', function(e) { \n  var keyCode = e.keyCode || e.which; \n\n  if (keyCode == 9) { \n    e.preventDefault(); \n    // call custom function here\n  } \n});\n</code></pre>\n\n<p>Check an example <a href=\"http://jsbin.com/amoci/123/\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 145
                },
                {
                    "body": "<p>Working example in jQuery 1.9:</p>\n\n<pre><code>$('body').on('keydown', '#textbox', function(e) {\n    if (e.which == 9) {\n        e.preventDefault();\n        // do your code\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><strong>Above shown methods did not work for me, may be i am using bit old jquery, then finally the below shown code snippet works for - posting just in case somebody in my same position</strong></p>\n\n<pre><code>$('#textBox').live('keydown', function(e) {\n    if (e.keyCode == 9) {\n        e.preventDefault();\n        alert('tab');\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>An important part of using a key down on tab is knowing that tab will always try to do something already, don't forget to \"return false\" at the end.</p>\n\n<p>Here is what I did. I have a function that runs on .blur and a function that swaps where my form focus is. Basically it adds an input to the end of the form and goes there while running calculations on blur.</p>\n\n<pre><code>$(this).children('input[type=text]').blur(timeEntered).keydown(function (e) {\n        var code = e.keyCode || e.which;\n        if (code == \"9\") {\n            window.tabPressed = true;\n            // Here is the external function you want to call, let your external\n            // function handle all your custom code, then return false to\n            // prevent the tab button from doing whatever it would naturally do.\n            focusShift($(this));\n            return false;\n        } else {\n            window.tabPressed = false;\n        }\n        // This is the code i want to execute, it might be different than yours\n        function focusShift(trigger) {\n            var focalPoint = false;\n            if (tabPressed == true) {\n                console.log($(trigger).parents(\"td\").next(\"td\"));\n                focalPoint = $(trigger).parents(\"td\").next(\"td\");\n\n            }\n            if (focalPoint) {\n                $(focalPoint).trigger(\"click\");\n            }\n        }\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want to capture the TAB keypress, cancel the default action and call my own javascript function.</p>\n",
            "last_activity_date": 1410328195,
            "question_id": 1314450,
            "score": 86,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery: How to capture the TAB keypress within a Textbox"
        },
        {
            "answer_count": 30,
            "answers": [
                {
                    "body": "<p>Perhaps this will help you out - I've done something similar using jquery, except I'm loading up an unknown number of ckeditor objects. It took my a while to stumble onto this - it's not clear in the documentation.</p>\n\n<pre><code>function loadEditors() {\n    var $editors = $(\"textarea.ckeditor\");\n    if ($editors.length) {\n        $editors.each(function() {\n            var editorID = $(this).attr(\"id\");\n            var instance = CKEDITOR.instances[editorID];\n            if (instance) { instance.destroy(true); }\n            CKEDITOR.replace(editorID);\n        });\n    }\n}\n</code></pre>\n\n<p>And here is what I run to get the content from the editors:</p>\n\n<pre><code>    var $editors = $(\"textarea.ckeditor\");\n    if ($editors.length) {\n        $editors.each(function() {\n            var instance = CKEDITOR.instances[$(this).attr(\"id\")];\n            if (instance) { $(this).val(instance.getData()); }\n        });\n    }\n</code></pre>\n\n<p><strong>UPDATE</strong>: I've changed my answer to use the correct method - which is .destroy(). .remove() is meant to be internal, and was improperly documented at one point.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>var e= CKEDITOR.instances['sample'];\ne.destroy();\ne= null;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>function loadEditor(id)\n{\n    var instance = CKEDITOR.instances[id];\n    if(instance)\n    {\n        CKEDITOR.remove(instance);\n    }\n    CKEDITOR.replace(id);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>This is the simplest (and only) solution that worked for me:</p>\n\n<pre><code>if(CKEDITOR.instances[editorName])\n   delete CKEDITOR.instances[editorName];\nCKEDITOR.replace(editorName);\n</code></pre>\n\n<p>Deleting this entry in the array prevents this form safety check from destroying your application.</p>\n\n<p>destroy() and remove() did not work for me.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I had this problem too, but I solved it in a much simpler way...</p>\n\n<p>I was using the class \".ckeditor\" in the jQuery as the selector for which textares's I wanted ckeditorized.</p>\n\n<p>The default ckeditor js you include before the also uses this class to identify which textareas to ckeditoriz. This means both your jQuery ckeditor function and the default ckeditor js are trying to run on the textarea. </p>\n\n<p>What you need to do is simply change the class of the jQuery, I use '.do_ckeditor' and remove the 'ckeditor' class from your html.</p>\n\n<p>I was pulling my hair out about this and felt the need to come back and post this answer.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Indeed, removing the \".ckeditor\" class from your code solves the issue. Most of us followed the jQuery integration example from the ckeditor's documentation: </p>\n\n<pre><code>$('.jquery_ckeditor')\n.ckeditor( function() { /* callback code */ }, { skin : 'office2003' } );\n</code></pre>\n\n<p>and thought \"... maybe I can just get rid or the '.jquery_' part\". </p>\n\n<p>I've been wasting my time tweaking the callback function (because the {skin:'office2003'}  actually worked), while the problem was coming from elsewhere.</p>\n\n<p>I think the documentation should mention that the use of \"ckeditor\" as a class name is not recommended, because it is a reserved keyword.</p>\n\n<p>Cheers.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had the same problem where I was receiving a null reference exception and the word \"null\" would be displayed in the editor.  I tried a handful of solutions, including upgrading the editor to 3.4.1 to no avail.</p>\n\n<p>I ended up having to edit the source.  At about line 416 to 426 in _source\\plugins\\wysiwygarea\\plugin.js, there's a snippet like this:</p>\n\n<pre><code>iframe = CKEDITOR.dom.element.createFromHtml( '&amp;lt;iframe' + ... + '&gt;&lt;/iframe&gt;' );\n</code></pre>\n\n<p>In FF at least, the iframe isn't completely instantiated by the time it's needed.  I surrounded the rest of the function after that line with a setTimeout function:</p>\n\n<pre><code>iframe = CKEDITOR.dom.element.createFromHtml( '&lt;iframe' + ... + '&gt;&lt;/iframe&gt;' );\nsetTimeout(function()\n{ \n    // Running inside of Firefox chrome the load event doesn't bubble like in a normal page (#5689)\n    ...\n}, 1000);\n\n};\n\n// The script that launches the bootstrap logic on 'domReady', so the document\n...\n</code></pre>\n\n<p>The text renders consistently now in the modal dialogs.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've had similar issue where we were making several instances of CKeditor for the content loaded via ajax. </p>\n\n<blockquote>\n  <p>CKEDITOR.remove()</p>\n</blockquote>\n\n<p>Kept the DOM in the memory and didn't remove all the bindings. </p>\n\n<blockquote>\n  <p>CKEDITOR.instance[instance_id].destroy()</p>\n</blockquote>\n\n<p>Gave the error <strong>i.contentWindow</strong> error whenever I create new instance with new data from ajax. But this was only until I figured out that I was destroying the instance after clearing the DOM. </p>\n\n<p>Use <strong>destroy()</strong> while the instance &amp; it's DOM is present on the page, then it works perfectly fine.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I learned that</p>\n\n<p>delete CKEDITOR.instances[editorName];</p>\n\n<p>by itself, actually removed the instance. ALL other methods i have read and seen, including what was found here at stackoverflow from its users, did not work for me.</p>\n\n<p>In my situation, im using an ajax call to pull a copy of the content wrapped around the  and 's. The problem happens to be because i am using a jQuery .live event to bind a \"Edit this document\" link and then applying the ckeditor instance after success of the ajax load. This means, that when i click another link a link with another .live event, i must use the delete CKEDITOR.instances[editorName] as part of my task of clearing the content window (holding the form), then re-fetching content held in the database or other resource.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For this to work you need to pass boolean parameter <strong>true</strong> when destroying instance:</p>\n\n<pre><code>    var editor = CKEDITOR.instances[name];\n    if (editor) { editor.destroy(true); }\n    CKEDITOR.replace(name);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 70
                },
                {
                    "body": "<p>I hade the same problem with a jQuery Dialog.</p>\n\n<p>Why destroy the instance if you just want to remove previous data ?</p>\n\n<pre><code>function clearEditor(id)\n{\n  var instance = CKEDITOR.instances[id];\n  if(instance)\n  {\n    instance.setData( '' );\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I chose to rename all instances instead of destroy/replace - since sometimes the AJAX loaded instance doesn't really replace the one on the core of the page...  keeps more in RAM, but less conflict this way.</p>\n\n<pre><code>    if (CKEDITOR &amp;&amp; CKEDITOR.instances) {\n        for (var oldName in CKEDITOR.instances) {\n            var newName = \"ajax\"+oldName;\n            CKEDITOR.instances[newName] = CKEDITOR.instances[oldName];\n            CKEDITOR.instances[newName].name = newName;\n            delete CKEDITOR.instances[oldName];\n        }\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For ajax requests, </p>\n\n<pre><code> for(k in CKEDITOR.instances){\n    var instance = CKEDITOR.instances[k];\n    instance.destroy()\n }\n  CKEDITOR.replaceAll();\n</code></pre>\n\n<p>this snipped removes all instances from document. \nThen creates new instances.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>To support dynamic (Ajax) loading of forms (without page refreshes between) which contain textareas with the same (same form is called again) or different ID's (previously unloaded form) and convert them to CKEditor elements I did the following (using the JQuery adapter):</p>\n\n<p>After the page has finished every Ajax call that delivers a textarea to be converted, I make a call to the following function:</p>\n\n<pre><code>setupCKeditor()\n</code></pre>\n\n<p>This looks like this (it assumes your textareas to be converted to RTE's have <em>class=\"yourCKClass\"</em>):</p>\n\n<pre><code>    /* Turns textAreas into TinyMCE Rich Text Editors where\n * class: tinymce applied to textarea.\n */\nfunction setupCKeditor(){\n\n    // define editor configuration      \n    var config = {skin : 'kama'};\n\n    // Remove and recreate any existing CKEditor instances\n    var count = 0;\n    if (CKEDITOR.instances !== 'undefined') {\n        for(var i in CKEDITOR.instances) {\n\n            var oEditor   = CKEDITOR.instances[i];\n            var editorName = oEditor.name;\n\n             // Get the editor data.\n            var data = $('#'+editorName).val();\n\n            // Check if current instance in loop is the same as the textarea on current page\n            if ($('textarea.yourCKClass').attr('id') == editorName) {\n                if(CKEDITOR.instances[editorName]) {\n\n                    // delete and recreate the editor\n                    delete CKEDITOR.instances[editorName];\n                    $('#'+editorName).ckeditor(function() { },config);\n                    count++;\n\n                }\n            }   \n\n\n        }\n    }\n\n    // If no editor's exist in the DOM, create any that are needed.             \n    if (count == 0){\n\n        $('textarea.yourCKClass').each( function(index) {\n\n                var editorName = $(this).attr('id');\n                $('#'+editorName).ckeditor(function() { $('#'+editorName).val(data); },config);\n\n            });\n\n    }\n\n\n}\n</code></pre>\n\n<p>I should mention that the line: </p>\n\n<pre><code>$('#'+editorName).ckeditor(function() { $('#'+editorName).val(data); },config);\n</code></pre>\n\n<p>could (and should) be simply:</p>\n\n<pre><code>$('#'+editorName).ckeditor(function() { },config);\n</code></pre>\n\n<p>however I found that the editor would often show the correct content for a second after loading and them empty the editor of the desired content.  So that line with the callback code forces the CKEditor content to be the same as the originating textarea content.  Causes a flicker when used. If you can avoid using it, do so..</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>CKEDITOR.instances = new Array();\n</code></pre>\n\n<p>I am using this before my calls to create an instance (ones per page load). Not sure how this affects memory handling and what not. This would only work if you wanted to replace all of the instances on a page.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The <code>i.contentWindow is null</code> error seems to occur when calling destroy on an editor instance that was tied to a textarea no longer in the DOM.</p>\n\n<p><code>CKEDITORY.destroy</code> takes a parameter <code>noUpdate</code>.</p>\n\n<p>The APIdoc states:</p>\n\n<blockquote>\n  <blockquote>\n    <p>If the instance is replacing a DOM element, this parameter indicates whether or not to update the element with the instance contents.</p>\n  </blockquote>\n</blockquote>\n\n<p>So, to avoid the error, either call destroy before removing the textarea element from the DOM, or call destory(true) to avoid trying to update the non-existent DOM element.</p>\n\n<pre><code>if (CKEDITOR.instances['textarea_name']) {\n   CKEDITOR.instances['textarea_name'].destroy(true);\n}\n</code></pre>\n\n<p>(using version 3.6.2 with jQuery adapter)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I had exactly the same problem like jackboberg. I was using dynamic form loading into jquery dialogs then attaching various widgets (datepickers, ckeditors etc...).\nAnd I tried all solutions noted above, none of them worked for me.</p>\n\n<p>For some reason ckeditor only attached the first time I loaded form, the second time I got exactly the same error message jackboberg did.</p>\n\n<p>I've analyzed my code and discovered that if you attach ckeditor in \"mid-air\" that is while form content is still not placed into dialog, ckeditor won't properly attach its bindings. That is since ckeditor is attached in \"mid-air\", second time you attach it in \"mid-air\"... poof ... an error is thrown since the first instance was not properly removed from DOM.</p>\n\n<p>This was my code that ptoduced the error:</p>\n\n<pre><code>var $content = $(r.content); // jQuery can create DOM nodes from html text gotten from &lt;xhr response&gt; - so called \"mid-air\" DOM creation\n$('.rte-field',$content).ckeditor(function(){});\n$content.dialog();\n</code></pre>\n\n<p>This is the fix that worked:</p>\n\n<pre><code>var $content = $(r.content).dialog(); // first create dialog\n$('.rte-field',$content).ckeditor(function(){}); // then attach ckeditor widget\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I ran into this exact same thing and the problem was that the wordcount plugin was taking too long to initialize.  30+ seconds.  The user would click into the view displaying the ckeditor, then cancel, thereby ajax-loading a new page into the dom.  The plugin was complaining because the iframe or whatever contentWindow is pointing to was no longer visible by the time it was ready to add itself to the contentWindow.  You can verify this by clicking into your view and then waiting for the Word Count to appear in the bottom right of the editor.  If you cancel now, you won't have a problem.  If you don't wait for it, you'll get the i.contentWindow is null error.  To fix it, just scrap the plugin:</p>\n\n<pre><code>if (CKEDITOR.instances['textarea_name']) \n{\n   CKEDITOR.instances['textarea_name'].destroy();\n}\nCKEDITOR.replace('textarea_name', { removePlugins: \"wordcount\" } );\n</code></pre>\n\n<p>If you need a word counter, register for the paste and keyup events on the editor with a function that counts the words.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I am in the situation where I have to controls that spawn dialogs, each of them need to have a ckeditor embedded inside these dialogs.  And it just so happens the text areas share the same id.  (normally this is very bad practice, but I have 2 jqGrids, one of assigned items and another of unassigned items.)  They share almost identical configuration.  Thus, I am using common code to configure both.</p>\n\n<p>So, when I load a dialog, for adding rows, or for editing them, from either jqGrid; I must remove all instances of CKEDITOR in all textareas.</p>\n\n<pre><code>$('textarea').each(function()\n{\n    try \n    {\n        if(CKEDITOR.instances[$(this)[0].id] != null)\n        {\n            CKEDITOR.instances[$(this)[0].id].destroy();\n        }\n    }\n    catch(e)\n    {\n\n    }\n});\n</code></pre>\n\n<p>This will loop over all textareas, and if there is a CKEDITOR instance, then destroy it.</p>\n\n<p>Alternatively if you use pure jQuery:</p>\n\n<pre><code>$('textarea').each(function()\n{\n    try \n    {\n        $(this).ckeditorGet().destroy();\n    }\n    catch(e)\n    {\n\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've prepared my own solution based on all above codes.</p>\n\n<pre><code>      $(\"textarea.ckeditor\")\n      .each(function () {\n\n                var editorId = $(this).attr(\"id\");\n\n                try {    \n                    var instance = CKEDITOR.instances[editorId];\n                    if (instance) { instance.destroy(true); }\n\n                }\n                catch(e) {}\n                finally {\n                    CKEDITOR.replace(editorId);\n                }\n            });\n</code></pre>\n\n<p>It works perfectly for me.</p>\n\n<p>Sometimes after AJAX request there is wrong DOM structure. \nFor instace:</p>\n\n<pre><code>&lt;div id=\"result\"&gt;\n   &lt;div id=\"result&gt;\n   //CONTENT\n   &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>This will cause issue as well, and ckEditor will not work. So make sure that you have correct DOM structure.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For those using the jquery \"adapter\" and having trouble (as I was), as super hackish yet working solution is to do something like this:</p>\n\n<pre><code>// content editor plugin\n(function($){\n    $.fn.contentEditor = function( params ) {\n        var xParams = $.extend({}, $.fn.contentEditor.defaultParams, params);\n        return this.each( function() {   \n            var $editor = $(this);\n            var $params = $.extend({}, xParams, $editor.data());\n\n            // if identifier is set, detect type based on identifier in $editor\n            if( $params.identifier.type ) {\n                $params.type = $editor.find($params.identifier.type).val();\n            }\n\n            $editor.data('type', $params.type);\n\n            // edit functionality\n            editButton = $('&lt;button&gt;Edit Content&lt;/button&gt;').on('click',function(){\n                // content container\n                var $cc = $('#' + $editor.data('type'));\n\n                // editor window\n                var $ew = $('&lt;form class=\"editorWindow\" /&gt;');\n                $ew.appendTo('body');\n\n                // editor content\n                $ec = $('&lt;textarea name=\"editorContent\" /&gt;').val($cc.html());\n                $ec.appendTo($ew);\n                $ec.ckeditor();\n\n\n                //$ec.ckeditorGet().setMode('source');\n\n\n                $ew.dialog({\n                    \"autoOpen\": true,\n                    \"modal\": true,\n                    \"draggable\": false,\n                    \"resizable\": false,\n                    \"width\": 850,\n                    \"height\": 'auto',\n                    \"title\": \"Content Editor\",\n                    \"buttons\": { \n                        'Save': function() {                            \n                            $cc.html( $ec.val() );\n                            $ec.ckeditorGet().destroy(); \n                            $ew.remove();\n                        },\n                        'Cancel / Close': function() { \n\n                            $ec.ckeditorGet().destroy();                        \n                            $ew.remove();\n                        }\n                    },\n                    'close': function() {\n                        $ec.ckeditorGet().destroy(); \n                    },\n                    'open': function() {\n                        $ew.find('a.cke_button_source').click();\n\n                        setTimeout(function(){\n                            $ew.find('a.cke_button_source.cke_on').click();\n                        }, 500);\n                    }\n                });\n\n                return false;\n            });\n\n            editButton.appendTo( $editor );\n\n        });\n    }\n\n    // set default option values\n    $.fn.contentEditor.defaultParams = {\n        'identifier': {\n            'type': 'input[name=\"type\"]'\n        }\n    };   \n\n})(jQuery);   \n\n$(function(){\n\n    $('form.contentEditor').contentEditor();\n\n});\n</code></pre>\n\n<p>The key point being this part:</p>\n\n<pre><code>                'open': function() {\n                    $ew.find('a.cke_button_source').click();\n\n                    setTimeout(function(){\n                        $ew.find('a.cke_button_source.cke_on').click();\n                    }, 500);\n                }\n</code></pre>\n\n<p>This fixes the problem with the editor text not being visible the next time you open the dialog. I realise this is very hackish, but considering that most of these are going to be used for admin tools, I don't think that's as big a concern as it normally would be.. and this works, so hopefully it will save someone some time ;)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>i had the same problem with instances, i was looking everywhere and finally this implementation works for me:</p>\n\n<pre><code>\n\n    //set my instance id on a variable\n\n    myinstance = CKEDITOR.instances['info'];\n\n    //check if my instance already exist\n\n    if (myinstance) { \n        CKEDITOR.remove(info)\n    }\n\n    //call ckeditor again\n\n    $('#info').ckeditor({\n        toolbar: 'Basic',\n        entities: false,\n        basicEntities: false\n    });\n\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is the fully working code for jquery .load() api and ckeditor, in my case I am loading a page with ckeditor  into div with some jquery effects. I hope it will help you.   </p>\n\n<pre><code> $(function() {\n            runEffect = function(fileload,lessonid,act) {\n            var selectedEffect = 'drop';\n            var options = {};\n            $( \"#effect\" ).effect( selectedEffect, options, 200, callback(fileload,lessonid,act) );\n        };\n        function callback(fileload,lessonid,act) {\n            setTimeout(function() {//load the page in effect div\n                $( \"#effect\" ).load(fileload,{lessonid:lessonid,act:act});\n                 $(\"#effect\").show( \"drop\", \n                          {direction: \"right\"}, 200 );\n                $(\"#effect\").ajaxComplete(function(event, XMLHttpRequest, ajaxOptions) {\n                    loadCKeditor(); //call the function after loading page\n                });\n            }, 100 );   \n        };\n\n        function loadCKeditor()\n        {//you need to destroy  the instance if already exist\n            if (CKEDITOR.instances['introduction']) \n            {\n                CKEDITOR.instances['introduction'].destroy();\n            }\n            CKEDITOR.replace('introduction').getSelection().getSelectedText();\n        }\n    });\n\n===================== button for call the function ================================\n\n&lt;input type=\"button\" name=\"button\" id=\"button\" onclick=\"runEffect('lesson.php','','add')\" &gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Its pretty simple. In my case, I ran the below jquery method that will destroy ckeditor instances during a page load. This did the trick and resolved the issue -</p>\n\n<p>JQuery method -</p>\n\n<pre><code>function resetCkEditorsOnLoad(){\n\n    for(var i in CKEDITOR.instances) {\n        editor = CKEDITOR.instances[i];\n            editor.destroy();\n            editor = null;\n    }\n}\n\n$(function() {\n\n            $(\".form-button\").button();\n    $(\".button\").button();\n\n    resetCkEditorsOnLoad(); // CALLING THE METHOD DURING THE PAGE LOAD\n\n            .... blah.. blah.. blah.... // REST OF YOUR BUSINESS LOGIC GOES HERE\n\n       });\n</code></pre>\n\n<p>That's it. I hope it helps you.</p>\n\n<p>Cheers,\nSirish.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can remove any ckeditor instance by remove method of ckeditor. Instance will be id or name of the textarea.</p>\n\n<pre><code>if (CKEDITOR.instances[instance_name]) {\n    CKEDITOR.remove(CKEDITOR.instances[instance_name]);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is what worked for me: </p>\n\n<pre><code>for(name in CKEDITOR.instances)\n{\n  CKEDITOR.instances[name].destroy()\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>remove <code>class=\"ckeditor\"</code> , it might have triggered ckeditor initialization</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you don't need to destroy the object CKeditor, you need remove() : </p>\n\n<p>Change this :</p>\n\n<p><code>CKEDITOR.instances['textarea_name'].destroy();</code></p>\n\n<p>for that :</p>\n\n<p><code>CKEDITOR.remove(CKEDITOR.instances['textarea_name']);</code></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This functions works for me in CKEditor version 4.4.5, it does not have any memory leaks</p>\n\n<pre><code> function CKEditor_Render(CkEditor_id) {\n        var instance = CKEDITOR.instances[CkEditor_id];\n        if (CKEDITOR.instances.instance) {\n            CKEDITOR.instances.instance.destroy();\n        }\n        CKEDITOR.replace(CkEditor_id);\n    }\n</code></pre>\n\n<p>// call this function as below</p>\n\n<pre><code>var id = 'ckeditor'; // Id of your textarea\n\nCKEditor_Render(id);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>CKeditor 4.2.1</p>\n\n<p>There is a lot of answers here but for me I needed something more (bit dirty too so if anyone can improve please do). For me MODALs where my issue.</p>\n\n<p>I was rendering the CKEditor in a modal, using Foundation. Ideally I would have destoryed the editor upon closing, however I didn't want to mess with Foundation.</p>\n\n<p>I called delete, I tried remove and another method but this was what I finally settled with.</p>\n\n<p>I was using textarea's to populate not DIVs.</p>\n\n<p>My Solution</p>\n\n<pre><code>//hard code the DIV removal (due to duplication of CKeditors on page however they didn't work)\n\n    $(\"#cke_myckeditorname\").remove();\n\n\n     if (CKEDITOR.instances['myckeditorname']) {\n                delete CKEDITOR.instances['myckeditorname'];\n                CKEDITOR.replace('myckeditorname', GetCKEditorSettings());\n            } else {\n                CKEDITOR.replace('myckeditorname', GetCKEditorSettings());\n            }\n</code></pre>\n\n<p>this was my method to return my specific formatting, which you might not want.</p>\n\n<pre><code>    function GetCKEditorSettings()\n    {\n       return {\n                    linkShowAdvancedTab: false,\n                    linkShowTargetTab: false,\n                    removePlugins: 'elementspath,magicline',\n                    extraAllowedContent: 'hr blockquote div',\n                    fontSize_sizes: 'small/8px;normal/12px;large/16px;larger/24px;huge/36px;',\n                    toolbar: [\n                        ['FontSize'],\n                        ['Bold', 'Italic', 'Underline', '-', 'NumberedList', 'BulletedList', '-', 'Link', 'Unlink'],\n                        ['Smiley']\n                    ]\n                };\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using jquery dialogs to present forms (fetched via AJAX). On some forms I am using a CKEditor for the textareas. The editor displays fine on the first load.</p>\n\n<p>When the user cancels the dialog, I am removing the contents so that they are loaded fresh on  a later request. The issue is, once the dialog is reloaded, the CKEditor claims the editor already exists.</p>\n\n<pre><code>uncaught exception: [CKEDITOR.editor] The instance \"textarea_name\" already exists.\n</code></pre>\n\n<p>The API includes a method for destroying existing editors, and I have seen people claiming this is a solution:</p>\n\n<pre><code>if (CKEDITOR.instances['textarea_name']) {\nCKEDITOR.instances['textarea_name'].destroy();\n}\nCKEDITOR.replace('textarea_name');\n</code></pre>\n\n<p>This is not working for me, as I receive a new error instead:</p>\n\n<pre><code>TypeError: Result of expression 'i.contentWindow' [null] is not an object.\n</code></pre>\n\n<p>This error seems to occur on the \"destroy()\" rather than the \"replace()\". Has anyone experienced this and found a different solution?</p>\n\n<p>Is is possible to 're-render' the existing editor, rather than destroying and replacing it?</p>\n\n<p><strong>UPDATED</strong>\n<a href=\"http://stackoverflow.com/questions/1835940/multiple-instances-of-ckeditor\">Here is another question</a> dealing with the same problem, but he has provided a <a href=\"http://sethbaur.com/ckedit.zip\">downloadable test case</a>.</p>\n",
            "last_activity_date": 1420386812,
            "question_id": 1794219,
            "score": 74,
            "tags": [
                "javascript",
                "ckeditor"
            ],
            "title": "CKEditor instance already exists"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If you just stuff a block of HTML containing script tags into your DOM with \"innerHTML\", the script tags won't be executed at all. When you load stuff with something like jQuery, code in that library explicitly handles finding and executing the scripts.</p>\n\n<p>It's not precisely accurate, but you can basically think of the processing of a <code>&lt;script&gt;</code> tag as if the whole contents of the tag (i.e., the script body) were executed with <code>eval()</code>.  If the script declares global (window) variables, then old values are overwritten.</p>\n\n<p>Script tags are processed in the order that they appear. Of course the code inside the script blocks may be set up so that what it does upon initial execution is to defer the <em>real</em> processing until later. Lots of jQuery setup/initialization code will do that.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The answer varies depending on where the script tag is and how you've added it:</p>\n\n<ol>\n<li><p>Script tags inline with your markup are executed synchronously with the browser's processing of that markup (except, see #2), and so if -- for instance -- those tags reference external files, they tend to slow down the processing of the page. (This is so the browser can handle <code>document.write</code> statements, which change the markup they're processing.)</p></li>\n<li><p>Script tags with the <code>defer</code> attribute may, on some browsers, not be executed until after the DOM has been fully rendered. Naturally these can't use <code>document.write</code>. (Similarly there's an <code>async</code> attribute that makes the script asynchronous, but I don't know much about it or how well it's supported; <a href=\"http://dev.w3.org/html5/spec/semantics.html#script\">details</a>.)</p></li>\n<li><p>Script tags in content you assign to elements after DOM load (via <code>innerHTML</code> and similar) are not executed at all, barring your use of a library like jQuery or Prototype to do it for you. <em>(With one exception pointed out by Andy E: On IE, if they have a <code>defer</code> attribute, it will execute them. Doesn't work in other browsers.)</em></p></li>\n<li><p>If you append an actual <code>script</code> element to the document via <a href=\"https://developer.mozilla.org/En/DOM/Node.appendChild\"><code>Element#appendChild</code></a>, the browser begins downloading that script immediately and will execute it as soon as the download is finished. Scripts added this way are not executed synchronously or necessarily in order. First appending a <code>&lt;script type=\"text/javascript\" src=\"MyFct.js\"&gt;&lt;/script&gt;</code>, and then appending <code>&lt;script type=\"text/javascript\"&gt;myFunction();&lt;/script&gt;</code> may well execute the inline (second) one before the remote (first) one. If that happens and <code>MyFct.js</code> declares <code>myFunction()</code>, it will not be defined when we try to use it with the inline script. If you need things done in order, you can tell when a remote script has been loaded by watching the <code>load</code> and <code>readyStateChange</code> events on the <code>script</code> element you add (<code>load</code> is the event on most browsers, <code>readyStateChange</code> on some versions of IE, and some browsers do both, so you have to handle multiple notifications for the same script).</p></li>\n<li><p>Script inside event handlers on attributes (<code>&lt;a href='#' onclick='myNiftyJavaScript();'&gt;</code>) rather than in a script tag is executed when the relevant event occurs.</p></li>\n</ol>\n\n<hr>\n\n<p>I was working away at my Real Job and suddenly my hindbrain said \"You know, you've been <em>told</em> they won't be executed if you assign them to <code>innerHTML</code>, but have you personally checked?\" And I hadn't, so I did -- FWIW:</p>\n\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-type\" content=\"text/html;charset=UTF-8\"&gt;\n&lt;title&gt;Script Test Page&lt;/title&gt;\n&lt;style type='text/css'&gt;\nbody {\n    font-family: sans-serif;\n}\n&lt;/style&gt;\n&lt;script type='text/javascript'&gt;\nfunction addScript()\n{\n    var str, div;\n\n    div = document.getElementById('target');\n    str = \"Content added&lt;\" + \"script type='text/javascript'&gt;alert('hi there')&lt;\" + \"/\" + \"script&gt;\";\n    alert(\"About to add:\" + str);\n    div.innerHTML = str;\n    alert(\"Done adding script\");\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;&lt;div&gt;\n&lt;input type='button' value='Go' onclick='addScript();'&gt;\n&lt;div id='target'&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>The alert from the script doesn't appear on IE7, FF3.6, or Chrome4 (I haven't bothered to check others, I'm meant to be working :-) ). Whereas if you append elements as shown <a href=\"http://proto-scripty.wikidot.com/prototype%3ahow-to-load-scripts-dynamically\">here</a>, the script gets executed.</p>\n",
                    "is_accepted": true,
                    "score": 38
                }
            ],
            "body": "<p>I was wondering if there are any available resources that describe how a browser's cursor executes Javascript.</p>\n\n<p>I know it loads and executes  tags when a page loads, and that you can attach functions to various window events, but where things get fuzzy is when, for instance, I retrieve a remote page via AJAX and put its contents into a div.</p>\n\n<p>If that remote page has got to load script libraries such as <code>&lt;script src=\"anotherscript.js\" /&gt;</code>, when is \"anotherscript.js\" being loaded and its contents are being executed?</p>\n\n<p>What happens if I included \"anotherscript.js\" on my current page, and then I load some remote content which has a duplicate include of this script?  Does it overwrite the original one?  What if the original \"anotherscript.js\" has a var in it whose value I altered, and then I reload that file... do I lose the original value or is the second inclusion of this script ignored?</p>\n\n<p>If I load some procedural Javascript via AJAX, when is it executed?  Immediately after I do <code>mydiv.innerHTML(remoteContent)</code>?  Or is it executed before that?</p>\n",
            "last_activity_date": 1346760251,
            "question_id": 2342974,
            "score": 42,
            "tags": [
                "javascript",
                "ajax"
            ],
            "title": "When does the browser execute Javascript? How does the execution cursor move?"
        }
    ]
}
