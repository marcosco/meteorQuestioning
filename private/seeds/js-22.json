{
    "items": [
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I've always just used document.documentElement.clientHeight/clientWidth.  I don't think you need the OR conditions in this case.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Use this tipp: <a href=\"http://www.appelsiini.net/projects/viewport\" rel=\"nofollow\">http://www.appelsiini.net/projects/viewport</a> or that code: <a href=\"http://updatepanel.wordpress.com/2009/02/20/getting-the-page-and-viewport-dimensions-using-jquery/\" rel=\"nofollow\">http://updatepanel.wordpress.com/2009/02/20/getting-the-page-and-viewport-dimensions-using-jquery/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You might try this:</p>\n\n<pre><code>function getViewport() {\n\n var viewPortWidth;\n var viewPortHeight;\n\n // the more standards compliant browsers (mozilla/netscape/opera/IE7) use window.innerWidth and window.innerHeight\n if (typeof window.innerWidth != 'undefined') {\n   viewPortWidth = window.innerWidth,\n   viewPortHeight = window.innerHeight\n }\n\n// IE6 in standards compliant mode (i.e. with a valid doctype as the first line in the document)\n else if (typeof document.documentElement != 'undefined'\n &amp;&amp; typeof document.documentElement.clientWidth !=\n 'undefined' &amp;&amp; document.documentElement.clientWidth != 0) {\n    viewPortWidth = document.documentElement.clientWidth,\n    viewPortHeight = document.documentElement.clientHeight\n }\n\n // older versions of IE\n else {\n   viewPortWidth = document.getElementsByTagName('body')[0].clientWidth,\n   viewPortHeight = document.getElementsByTagName('body')[0].clientHeight\n }\n return [viewPortWidth, viewPortHeight];\n}\n</code></pre>\n\n<p>( <a href=\"http://andylangton.co.uk/articles/javascript/get-viewport-size-javascript/\">http://andylangton.co.uk/articles/javascript/get-viewport-size-javascript/</a> )</p>\n\n<p>However, it is not even possible to get the viewport information in all browsers (e.g. IE6 in quirks mode). But the above script should do a good job :-)</p>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>U may use shorter version:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n&lt;!--\nfunction viewport(){\n    var e = window;\n    var a = 'inner';\n    if (!('innerWidth' in window)){\n        a = 'client';\n        e = document.documentElement || document.body;\n    }\n    return { width : e[ a+'Width' ] , height : e[ a+'Height' ] }\n}\n//--&gt;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p><strong>Try this..</strong> </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction ViewPort()\n{\nvar w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0)\nvar h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\nvar viewsize = w + \",\" + h;\nalert(\"Your View Port Size is:\" + viewsize);\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm trying to find the exact height and width of a browser's viewport, but I suspect that either Mozilla or IE is giving me the wrong number. Here's my method for height:</p>\n\n<pre><code>var viewportHeight = window.innerHeight || \n                     document.documentElement.clientHeight || \n                     document.body.clientHeight;\n</code></pre>\n\n<p>I haven't started on width yet but I'm guessing it's going to be something similar.</p>\n\n<p>Is there a more correct way of getting this information? Ideally, I'd like the solution to work with Safari/Chrome/other browsers as well.</p>\n",
            "last_activity_date": 1416131571,
            "question_id": 1766861,
            "score": 36,
            "tags": [
                "javascript",
                "cross-browser",
                "viewport"
            ],
            "title": "Find the exact height and width of the viewport in a cross-browser way (no Prototype/jQuery)"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>Check out the <a href=\"http://benalman.com/projects/jquery-outside-events-plugin/\">jQuery Outside Events plugin</a></p>\n\n<p>Lets you do:</p>\n\n<pre><code>$field_hint.bind('clickoutside',function(){\n    $field_hint.dialog('close');\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Try this post:</p>\n\n<p><a href=\"http://www.jensbits.com/2010/06/16/jquery-modal-dialog-close-on-overlay-click/\" rel=\"nofollow\">http://www.jensbits.com/2010/06/16/jquery-modal-dialog-close-on-overlay-click/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Sorry to drag this up after so long but I used the below. Any disadvantages? See the open function...</p>\n\n<pre><code>$(\"#popup\").dialog({\n\n        height: 670,\n        width: 680,\n        modal: true,\n        autoOpen: false,\n        close: function(event, ui) { $('#wrap').show(); },\n        open: function(event, ui) { $('.ui-widget-overlay').bind('click', function(){ $(\"#popup\").dialog('close'); }); }\n\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 106
                },
                {
                    "body": "<p>This doesn't use jQuery UI, but does use jQuery, and may be useful for those who aren't using jQuery UI for whatever reason. Do it like so:</p>\n\n<pre><code>function showDialog(){\n  $('#dialog').show();\n  $('*').on('click',function(e){\n    $('#zoomer').hide();\n  });\n}\n\n$(document).ready(function(){\n\n  showDialog();    \n\n});\n</code></pre>\n\n<p>So, once I've shown a dialog, I add a click handler that only looks for the first click on anything. </p>\n\n<p>Now, it would be nicer if I could get it to ignore clicks on anything on #dialog and its contents, but when I tried switching $('*') with $(':not(\"#dialog,#dialog *\")'), it still detected #dialog clicks.</p>\n\n<p>Anyway, I was using this purely for a photo lightbox, so it worked okay for that purpose.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had to do two parts. First the outside click-handler:</p>\n\n<pre><code>$(document).on('click', function(e){\n    if ($(\".ui-dialog\").length) {\n        if (!$(e.target).parents().filter('.ui-dialog').length) {\n            $('.ui-dialog-content').dialog('close');\n        }\n    }\n}); \n</code></pre>\n\n<p>This calls <code>dialog('close')</code> on the generic <code>ui-dialog-content</code> class, and so will close <strong>all</strong> dialogs if the click didn't originate in one. It will work with modal dialogs too, since the overlay is not part of the <code>.ui-dialog</code> box.</p>\n\n<p>The problem is:</p>\n\n<ol>\n<li>Most dialogs are created because of clicks outside of a dialog</li>\n<li>This handler runs after those clicks have created a dialog and bubbled up to the document, so it immediately closes them.</li>\n</ol>\n\n<p>To fix this, I had to add stopPropagation to those click handlers:</p>\n\n<pre><code>moreLink.on('click', function (e) {\n    listBox.dialog();\n    e.stopPropagation(); //Don't trigger the outside click handler\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This question is a bit old, but in case someone wants to close a dialog that is NOT modal when user clicks somewhere, you can use this that I took from the  <a href=\"https://raw.github.com/ehynds/jquery-ui-multiselect-widget/1.12/src/jquery.multiselect.js\" rel=\"nofollow\">JQuery UI Multiselect plugin</a>. The main advantage is that the click is not \"lost\" (if user wants to click on a link or a button, the action is done). </p>\n\n<pre><code>$myselector.dialog({\n            title: \"Dialog that closes when user clicks outside\",\n            modal:false,\n            close: function(){\n                        $(document).off('mousedown.mydialog');\n                    },\n            open: function(event, ui) { \n                    var $dialog = $(this).dialog('widget');\n                    $(document).on('mousedown.mydialog', function(e) {\n                        // Close when user clicks elsewhere\n                        if($dialog.dialog('isOpen') &amp;&amp; !$.contains($myselector.dialog('widget')[0], e.target)){\n                            $myselector.dialog('close');\n                        }            \n                    });\n                }                    \n            });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Forget using another plugin:</p>\n\n<p>Here are 3 methods to close a jquery UI dialog when clicking outside popin:</p>\n\n<p>If the dialog is modal/has background overlay: <a href=\"http://jsfiddle.net/jasonday/6FGqN/\">http://jsfiddle.net/jasonday/6FGqN/</a></p>\n\n<pre><code>jQuery(document).ready(function() {\n    jQuery(\"#dialog\").dialog({\n        bgiframe: true,\n        autoOpen: false,\n        height: 100,\n        modal: true,\n        open: function(){\n            jQuery('.ui-widget-overlay').bind('click',function(){\n                jQuery('#dialog').dialog('close');\n            })\n        }\n    });\n}); \n</code></pre>\n\n<p>If dialog is non-modal Method 1: method 1: <a href=\"http://jsfiddle.net/jasonday/xpkFf/\">http://jsfiddle.net/jasonday/xpkFf/</a></p>\n\n<pre><code> // Close Pop-in If the user clicks anywhere else on the page\n                     jQuery('body')\n                      .bind(\n                       'click',\n                       function(e){\n                        if(\n                         jQuery('#dialog').dialog('isOpen')\n                         &amp;&amp; !jQuery(e.target).is('.ui-dialog, a')\n                         &amp;&amp; !jQuery(e.target).closest('.ui-dialog').length\n                        ){\n                         jQuery('#dialog').dialog('close');\n                        }\n                       }\n                      );\n</code></pre>\n\n<p>Non-Modal dialog Method 2: <a href=\"http://jsfiddle.net/jasonday/eccKr/\">http://jsfiddle.net/jasonday/eccKr/</a></p>\n\n<pre><code>  $(function() {\n            $( \"#dialog\" ).dialog({\n                autoOpen: false, \n                minHeight: 100,\n                width: 342,\n                draggable: true,\n                resizable: false,\n                modal: false,\n                closeText: 'Close',\n                  open: function() {\n                      closedialog = 1;\n                      $(document).bind('click', overlayclickclose);\n                  },\n                  focus: function() {\n                      closedialog = 0;\n                  },\n                  close: function() {\n                      $(document).unbind('click');\n                  }\n\n\n\n        });\n\n         $('#linkID').click(function() {\n            $('#dialog').dialog('open');\n            closedialog = 0;\n        });\n\n         var closedialog;\n\n          function overlayclickclose() {\n              if (closedialog) {\n                  $('#dialog').dialog('close');\n              }\n\n              //set to one because click on dialog box sets to zero\n              closedialog = 1;\n          }\n\n\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>Just add this global script, which closes all the modal dialogs just clicking outsite them.</p>\n\n<pre><code>$(document).ready(function()\n{\n    $(document.body).on(\"click\", \".ui-widget-overlay\", function()\n    {\n        $.each($(\".ui-dialog\"), function()\n        {\n            var $dialog;\n            $dialog = $(this).children(\".ui-dialog-content\");\n            if($dialog.dialog(\"option\", \"modal\"))\n            {\n                $dialog.dialog(\"close\");\n            }\n        });\n    });;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You can do this without using any additional plug-in</p>\n\n<pre><code>var $dialog= $(document.createElement(\"div\")).appendTo(document.body);\n    var dialogOverlay;\n\n    $dialog.dialog({\n        title: \"Your title\",\n        modal: true,\n        resizable: true,\n        draggable: false,\n        autoOpen: false,\n        width: \"auto\",\n        show: \"fade\",\n        hide: \"fade\",\n        open:function(){\n            $dialog.dialog('widget').animate({\n                width: \"+=300\", \n                left: \"-=150\"\n            });\n\n//get the last overlay in the dom\n            $dialogOverlay = $(\".ui-widget-overlay\").last();\n//remove any event handler bound to it.\n            $dialogOverlay.unbind();\n            $dialogOverlay.click(function(){\n//close the dialog whenever the overlay is clicked.\n                $dialog.dialog(\"close\");\n            });\n        }\n    });\n</code></pre>\n\n<p>Here $dialog is the dialog.\nWhat we are basically doing is to get the last overlay widget whenever this dialog is opened and binding a click handler to that overlay to close $dialog as anytime the overlay is clicked.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>no need for the outside events plugin... </p>\n\n<p>just add an event handler to the .ui-widget-overlay div:</p>\n\n<pre><code>jQuery(document).on('click', 'body &gt; .ui-widget-overlay', function(){\n     jQuery(\"#ui-dialog-selector-goes-here\").dialog(\"close\");\n     return false;\n});\n</code></pre>\n\n<p>just make sure that whatever selector you used for the jQuery ui dialog, is also called to close it.. i.e. <em>#ui-dialog-selector-goes-here</em></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The given example(s) use one dialog with id '#dialog', i needed a solution that close any dialog:</p>\n\n<pre><code>$.extend($.ui.dialog.prototype.options, {\n    modal: true,\n    open: function(object) {\n        jQuery('.ui-widget-overlay').bind('click', function() {              \n            var id = jQuery(object.target).attr('id');\n            jQuery('#'+id).dialog('close');\n        })\n    }\n});\n</code></pre>\n\n<p>Thanks to my colleague Youri Arkesteijn for the suggestion of using prototype.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For those you are interested I've created a generic plugin that enables to close a dialog when clicking outside of it whether it a modal or non-modal dialog. It supports one or multiple dialogs on the same page. </p>\n\n<p>More information here: <a href=\"http://www.coheractio.com/blog/closing-jquery-ui-dialog-widget-when-clicking-outside\" rel=\"nofollow\">http://www.coheractio.com/blog/closing-jquery-ui-dialog-widget-when-clicking-outside</a></p>\n\n<p>Laurent</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I use this solution based in one posted here:</p>\n\n<pre><code>var g_divOpenDialog = null;\nfunction _openDlg(l_d) {\n\n  // http://stackoverflow.com/questions/2554779/jquery-ui-close-dialog-when-clicked-outside\n  jQuery('body').bind(\n   'click',\n   function(e){\n    if(\n      g_divOpenDialog!=null \n      &amp;&amp; !jQuery(e.target).is('.ui-dialog, a')\n      &amp;&amp; !jQuery(e.target).closest('.ui-dialog').length\n    ){\n      _closeDlg();\n    }\n   }\n  );\n\n  setTimeout(function() {\n    g_divOpenDialog = l_d;\n    g_divOpenDialog.dialog();\n  }, 500);\n}\nfunction _closeDlg() {\n  jQuery('body').unbind('click');\n  g_divOpenDialog.dialog('close');\n  g_divOpenDialog.dialog('destroy');\n  g_divOpenDialog = null;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>\u0130t's simple actually you don't need any plugins, just jquery or you can do it with simple javascript.</p>\n\n<pre><code>$('#dialog').on('click', function(e){\n  e.stopPropagation();\n});\n$(document.body).on('click', function(e){\n  master.hide();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a jQuery UI Dialog that gets displayed when specific elements are clicked.  I would like to close the dialog if a click occurs anywhere other than on those triggering elements or the dialog itself.</p>\n\n<p>Here's the code for opening the dialog:</p>\n\n<pre><code>$(document).ready(function() {\n    var $field_hint = $('&lt;div&gt;&lt;/div&gt;')\n        .dialog({\n            autoOpen: false,\n            minHeight: 50,\n            resizable: false,\n            width: 375\n        });\n\n    $('.hint').click(function() {\n        var $hint = $(this);\n        $field_hint.html($hint.html());\n        $field_hint.dialog('option', 'position', [162, $hint.offset().top + 25]);\n        $field_hint.dialog('option', 'title', $hint.siblings('label').html());\n        $field_hint.dialog('open');\n    });\n    /*$(document).click(function() {\n        $field_hint.dialog('close');\n    });*/\n});\n</code></pre>\n\n<p>If I uncomment the last part, the dialog never opens. I assume it's because the same click that opens the dialog is closing it again.</p>\n\n<hr>\n\n<p><strong>Final Working Code</strong><br>\n<em>Note: This is using the <a href=\"http://benalman.com/projects/jquery-outside-events-plugin/\">jQuery outside events</a> plugin</em></p>\n\n<pre><code>$(document).ready(function() {\n    // dialog element to .hint\n    var $field_hint = $('&lt;div&gt;&lt;/div&gt;')\n            .dialog({\n                autoOpen: false,\n                minHeight: 0,\n                resizable: false,\n                width: 376\n            })\n            .bind('clickoutside', function(e) {\n                $target = $(e.target);\n                if (!$target.filter('.hint').length\n                        &amp;&amp; !$target.filter('.hintclickicon').length) {\n                    $field_hint.dialog('close');\n                }\n            });\n\n    // attach dialog element to .hint elements\n    $('.hint').click(function() {\n        var $hint = $(this);\n        $field_hint.html('&lt;div style=\"max-height: 300px;\"&gt;' + $hint.html() + '&lt;/div&gt;');\n        $field_hint.dialog('option', 'position', [$hint.offset().left - 384, $hint.offset().top + 24 - $(document).scrollTop()]);\n        $field_hint.dialog('option', 'title', $hint.siblings('label').html());\n        $field_hint.dialog('open');\n    });\n\n    // trigger .hint dialog with an anchor tag referencing the form element\n    $('.hintclickicon').click(function(e) {\n        e.preventDefault();\n        $($(this).get(0).hash + ' .hint').trigger('click');\n    });\n});\n</code></pre>\n",
            "last_activity_date": 1424813254,
            "question_id": 2554779,
            "score": 66,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "jquery-ui-dialog"
            ],
            "title": "jQuery UI - Close Dialog When Clicked Outside"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I use RegexBuddy for debbuging my regexes it has almost all languages very usefull. Than copy/paste for the targeted language.\nTerrific tool and not very expensive.</p>\n\n<p>So I copy/pasted your regex and your issue is that [,] are special characters in regex, so you need to escape them. So the regex should be : /!@#$^&amp;%*()+=-[\\x5B\\x5D]\\/{}|:&lt;>?,./im</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>var desired = stringToReplace.replace(/[^\\w\\s]/gi, '')\n</code></pre>\n\n<p>As was mentioned in the comments it's easier to do this as a whitelist - replace the characters which <em>aren't</em> in your safelist. </p>\n\n<p>The caret (<code>^</code>) character is the negation of the set <code>[...]</code>, <code>gi</code> say global and case-insensitive (the latter is a bit redundant but I wanted to mention it) and the safelist in this example is digits, word characters, underscores (<code>\\w</code>) and whitespace (<code>\\s</code>).</p>\n",
                    "is_accepted": true,
                    "score": 158
                },
                {
                    "body": "<p>why dont you do something like:</p>\n\n<pre><code>re = /^[a-z0-9 ]$/i;\nvar isValid = re.test(yourInput);\n</code></pre>\n\n<p>to check if your input contain any special char</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Note that if you still want to exclude a set, including things like slashes and special characters you can do the following:</p>\n\n<pre><code>var outString = sourceString.replace(/[`~!@#$%^&amp;*()_|+\\-=?;:'\",.&lt;&gt;\\{\\}\\[\\]\\\\\\/]/gi, '');\n</code></pre>\n\n<p>take special note that in order to also include the \"minus\" character, you need to escape it with a backslash like the latter group.  if you don't it will also select 0-9 which is probably undesired.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>use regex\n<code>^[^/\\\\()~!@#$%^&amp;*{\u00ab\u00bb\u201e\u201c\u201c\u201d\u2018\u2019|\\n\\t\u2026.,;`^\"&lt;&gt;'}+:?\u00ae\u00a9]*$</code></p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>The first solution does not work for any UTF-8 alphaben. (It will cut text such as \u0407\u0436\u0430\u043a). I have managed to create function which do not use RegExp and use good UTF-8 support in JavaScript engine. The idea is simple if symbol is equal in uppercase and lowercase it is special character. The only exception is made for whitespace.    </p>\n\n<pre><code>function removeSpecials(str) {\n    var lower = str.toLowerCase();\n    var upper = str.toUpperCase();\n\n    var res = \"\";\n    for(var i=0; i&lt;lower.length; ++i) {\n        if(lower[i] != upper[i] || lower[i].trim() === '')\n            res += str[i];\n    }\n    return res;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I would like one RegExp that will remove all special characters from a string. I am trying something like this but it doesn't work in IE7 (which is what the works intranet uses). Works in Firefox.</p>\n\n<pre><code>var specialChars = \"!@#$^&amp;%*()+=-[]\\/{}|:&lt;&gt;?,.\";\nfor (var i = 0; i &lt; specialChars.length; i++) {\n    stringToReplace = stringToReplace .replace(new RegExp(\"\\\\\" + specialChars[i], 'gi'), '');\n}\n</code></pre>\n\n<p>I suck with RegExp so a detailed description of it would be helpful as well.</p>\n",
            "last_activity_date": 1413881405,
            "question_id": 4374822,
            "score": 59,
            "tags": [
                "javascript",
                "regex",
                "blacklist"
            ],
            "title": "javascript regexp remove all special characters"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><strong>Update:</strong> My anwswer refers to a similar issue that happened in Firefox a few months ago and I suggested in hopes that it would work for Chrome 19, but currently Oleg's answer is the correct approach.</p>\n\n<p>I had a similar issue a few months ago with FF and I was using the ForceFit option which should disable the HScroll entirely but like you mentioned I would still get it so I just disabled the HScroll for my forcefit grids. A few updates later of FF, it did stop happening, and currently all of my grids are fine in Chrome 18 so hopefully it will not be an issue when 19 is released.</p>\n\n<pre><code>//remove HScroll\nfunction jqGridDisableHScroll(gridid) {\n    //if columns are force fit all columns will always fit on screen.\n    if ($('#' + gridid).jqGrid('getGridParam', 'forceFit')) {\n        var gridview = $('#gview_' + gridid);\n        $('.ui-jqgrid-bdiv', gridview).css({ 'overflow-x': 'hidden' });\n    }\n}\n</code></pre>\n\n<p><strong>Force Fit</strong></p>\n\n<p>If set to true, and resizing the width of a column, the adjacent column (to the right) will resize so that the overall grid width is maintained (e.g., reducing the width of column 2 by 30px will increase the size of column 3 by 30px). In this case there is no horizontal scrolbar. Note: this option is not compatible with shrinkToFit option - i.e if shrinkToFit is set to false, forceFit is ignored.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I updated today my Chrome to version 19, have reproduced the problem and made the corresponding quick&amp;dirty fix:</p>\n\n<p>I suggest to change <a href=\"https://github.com/tonytomov/jqGrid/blob/v4.3.2/js/grid.base.js#L937\">the line</a> of jqGrid code</p>\n\n<pre><code>isSafari = $.browser.webkit || $.browser.safari ? true : false;\n</code></pre>\n\n<p>to the following</p>\n\n<pre><code>isSafari = ($.browser.webkit || $.browser.safari) &amp;&amp;\n    parseFloat($.browser.version)&lt;536.5 ? true : false; // Chrome &lt; version 19\n</code></pre>\n\n<p><a href=\"http://www.ok-soft-gmbh.com/jqGrid/Chrome19Fix.htm\">The demo</a> use the fix. The fixed version of <code>jquery.jqGrid.src.js</code> which I used in the demo you can get <a href=\"http://www.ok-soft-gmbh.com/jqGrid/jquery.jqGrid-4.3.2_/js/jquery.jqGrid.src-fixed1.js\">here</a>.</p>\n\n<p>I tested it in IE9 (v9.0.8112.16421), IE8 (8.0.6001.18702CO), Chrome 18.0.125.168, Chrome 19.0.1084.46, Safari 5.1.7 (7534.57.2), Firefox 12, Opera 11.62. In all the web browsers the demo has no horizontal scrollbars and it looks as following:</p>\n\n<p><img src=\"http://i.stack.imgur.com/aqer6.png\" alt=\"enter image description here\"></p>\n\n<p>In the future it would be better to change the calculation of width of the grid more deep to have no direct dependency from any version number or web browser. I hope it will be possible if one would use more jQuery methods <a href=\"http://api.jquery.com/width/\">$.width</a> and <a href=\"http://api.jquery.com/outerWidth/\">$.outerWidth</a> in some places of jqGrid. In any way I hope that the above described fix would be already helpful for many jqGrid users.</p>\n\n<p><strong>UPDATED</strong>: I posted my suggestion to trirand as <a href=\"http://www.trirand.com/blog/?page_id=393/bugs/fixing-width-calculation-of-the-grid-in-google-chrome-19/#p26607\">the bug report</a>.</p>\n\n<p><strong>UPDATED 2</strong>: To be exactly there are three places in the code where are used the same <code>$.browser.webkit || $.browser.safari</code> construct as described above: <a href=\"https://github.com/tonytomov/jqGrid/blob/v4.3.2/js/grid.base.js#L2028\">inside setGridWidth</a>, <a href=\"https://github.com/tonytomov/jqGrid/blob/v4.3.2/js/grid.base.js#L2088\">inside of getOffset</a>, <a href=\"https://github.com/tonytomov/jqGrid/blob/v4.3.2/js/grid.base.js#L2139\">inside of calculation of the width</a> of <code>multiselect</code> column, <a href=\"https://github.com/tonytomov/jqGrid/blob/v4.3.2/js/grid.base.js#L3020\">inside showHideCol</a> and <a href=\"https://github.com/tonytomov/jqGrid/blob/v4.3.2/js/grid.base.js#L3113\">inside setGridWidth</a>. The first three places uses <code>isSafari</code> variable. The last two places uses <code>$.browser.webkit || $.browser.safari</code> directly. One should replace <strong>in all the places</strong> the code</p>\n\n<pre><code>$.browser.webkit||$.browser.safari\n</code></pre>\n\n<p>to </p>\n\n<pre><code>($.browser.webkit || $.browser.safari) &amp;&amp; parseFloat($.browser.version)&lt;536.5\n</code></pre>\n\n<p>So one should do this in <strong>three places</strong>:</p>\n\n<ol>\n<li>at the definition of the <code>isSafari</code> (see me original post)</li>\n<li>inside of <code>showHideCol</code></li>\n<li>inside of <code>setGridWidth</code></li>\n</ol>\n\n<p>You can download the fixed version of the <code>jquery.jqGrid.src</code> with all the fixes <a href=\"http://www.ok-soft-gmbh.com/jqGrid/jquery.jqGrid-4.3.2_/js/jquery.jqGrid.src-fixed3.js\">here</a>. You can make the same changes in the code of <code>jquery.jqGrid.src</code> yourself if you have to use old version of jqGrid. To created minimized version for the production you can use any minimizer which you good know. I use for example Microsoft Ajax Minifier 4.0. Just install it and execute</p>\n\n<pre><code>AjaxMin.exe jquery.jqGrid.src-fixed3.js -o jquery.jqGrid.min-fixed3.js\n</code></pre>\n\n<p>As the result you will get <a href=\"http://www.ok-soft-gmbh.com/jqGrid/jquery.jqGrid-4.3.2_/js/jquery.jqGrid.min-fixed3.js\">jquery.jqGrid.min-fixed3.js</a> which will be even smaller as original <code>jquery.jqGrid.min.js</code>. Even if you add the comment header to the file (see <a href=\"http://www.ok-soft-gmbh.com/jqGrid/jquery.jqGrid-4.3.2_/js/jquery.jqGrid.min-fixed3_.js\">modified file</a>) the file will be still smaller as original version of <code>jquery.jqGrid.min.js</code>.</p>\n\n<p>After some iterations of my <a href=\"http://www.trirand.com/blog/?page_id=393/bugs/fixing-width-calculation-of-the-grid-in-google-chrome-19/#p26607\">bug report</a> and <a href=\"https://github.com/tonytomov/jqGrid/commit/3988795bc8d1ac43e349af4eec42f1032f82bb1f\">the improvements</a> there are one more version of the fix where the method <code>cellWidth</code> was introduced:</p>\n\n<pre><code>cellWidth : function () {\n    var $testDiv = $(\"&lt;div class='ui-jqgrid' style='left:10000px'&gt;&lt;table class='ui-jqgrid-btable' style='width:5px;'&gt;&lt;tr class='jqgrow'&gt;&lt;td style='width:5px;'&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;\"),\n        testCell = $testDiv.appendTo(\"body\")\n            .find(\"td\")\n            .width();\n        $testDiv.remove();\n        return testCell !== 5;\n}\n</code></pre>\n\n<p>See <a href=\"https://github.com/tonytomov/jqGrid/blob/master/js/grid.base.js#L184-191\">here</a>. If you prefer to follow the way you can do this also. In the case in all places where <code>isSafari</code> or <code>$.browser.webkit || $.browser.safari</code> (in <code>showHideCol</code> and <code>setGridWidth</code>) are used you can use <code>$.jgrid.cellWidth()</code> instead.</p>\n\n<p><strong>UPDATED 3</strong>: Today was published jqGrid 4.3.3 which contains the fix which I described above (the <code>cellWidth</code> method). So I recommend all to use the new version.</p>\n\n<p><strong>UPDATED 4:</strong> Google Chrome 20 uses WebKit 536.11. So everybody who can't use the last version of jqGrid with the fixed calculation of the width should use <code>parseFloat($.browser.version)&lt;536.11</code> (or some close) instead of <code>parseFloat($.browser.version)&lt;536.5</code> described at the beginning of the answer. Google Chrome 23 WebKit uses 537.11.</p>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p>Oleg's solution worked for me.</p>\n\n<p>I just edited the min version </p>\n\n<p>line 49:</p>\n\n<p>replaced:</p>\n\n<p>m=b.browser.webkit||b.browser.safari?!0:!1</p>\n\n<p>with:</p>\n\n<p>m=(b.browser.webkit||b.browser.safari)&amp;&amp;parseFloat(b.browser.version)&lt;536.5?!0:!1</p>\n\n<p>Thanks for the help!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Oleg's answer is correct. However, if you are using an older version of jqGrid and want to apply these fixes, it may be easier to take the changes directly from the diffs on Github. I have tested this successfully using jqGrid 4.0.0, so presumably it will work on any of the 4.x series.</p>\n\n<p>Just start with the first diff and apply each of them in order. This will add the <code>cellWidth</code> function and make all of the necessary changes across the jquery.jqGrid.src.js file. Then you can use the Google closure compiler if you want to create a minified version:</p>\n\n<ul>\n<li><a href=\"https://github.com/tonytomov/jqGrid/commit/8c56dc81a1c7c94089922f6dc55b52dfdd7d8c9f\" rel=\"nofollow\">8c56dc8</a></li>\n<li><a href=\"https://github.com/tonytomov/jqGrid/commit/b50b55f389c4749d38cd2028aa341053a01ea5f9\" rel=\"nofollow\">b50b55f</a> </li>\n<li><a href=\"https://github.com/tonytomov/jqGrid/commit/cf26b2cf41b9cc8f9da410ab4ad01fb1cec8f0d3\" rel=\"nofollow\">cf26b2c</a> </li>\n<li><a href=\"https://github.com/tonytomov/jqGrid/commit/8d7eff0aac7a2d93dea3e5b405cc4b50c1b72f58\" rel=\"nofollow\">8d7eff0</a> </li>\n<li><a href=\"https://github.com/tonytomov/jqGrid/commit/46a14ce93fe1b91f199e4fdc560fa26c17ee9bb4\" rel=\"nofollow\">46a14ce</a></li>\n</ul>\n\n<p>It seems like a lot of changes, but when you look at the actual code the changes will go very quickly. Only a few source lines are affected.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just wanted to point out that this is likely due to webkit <a href=\"https://bugs.webkit.org/show_bug.cgi?id=78412\" rel=\"nofollow\">issue 78412</a> finally being resolved. Essentially it would not account for borders, and I believe the padding as well, when calculating the width of tables with a fixed layout. </p>\n\n<p>This meant that jqGrid would incorrectly calculate the width of the table as only the width of its content area. So removing the borders and padding should also solve the problem, but you probably wouldn't want to do that.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>oh oh - its broken again.  Chrome beta 20.0.1132.11 is out and reports the following:</p>\n\n<p>User-Agent:Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 Safari/536.11</p>\n\n<p>I'm guessing 536.11 is evaluating as &lt; 536.5 due to numeric vs text comparison causing the patch not to be operative?</p>\n\n<p>Oleg - help!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>We use jgGrid 4.3.3 and <code>cellWidth</code> didn't solve the issue...in order to solve it, I added the line <code>return parseInt(testCell) !== 5;</code> instead <code>return testCell !== 5;</code> in <code>cellWidth</code> method. Maybe it's not the best solution, but it works for us :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Currently using Chrome v19.0.1084.46 (Official Build 135956) beta-m\njqGrid 4.3.2 (latest release)</p>\n\n<p>The problem is that no matter the size of my grid, columns, or containing div, a small fraction of my last column gets pushed beyond the edge of the grid, causing horizontal scroll bars to appear, which should not happen. See below:</p>\n\n<p><img src=\"http://i.stack.imgur.com/q5hzk.jpg\" alt=\"grid\"></p>\n\n<p>I've been fiddling with the following attributes on jqGrid to try and fix this:</p>\n\n<ul>\n<li><code>width</code></li>\n<li><code>autowidth</code></li>\n<li><code>height</code></li>\n<li><code>shrinkToFit</code></li>\n<li><code>scrollOffset</code> - Had the best luck with this one, but nothing repeatable.</li>\n</ul>\n\n<p>I've also stripped down to the basic grid css only, thinking it might have been a rule I put in place...with no luck.</p>\n\n<p>Has anyone else experienced this and/or found a solution to this? Help is much appreciated.</p>\n",
            "last_activity_date": 1369833180,
            "question_id": 10588587,
            "score": 47,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "jqgrid"
            ],
            "title": "jqGrid does not render correctly in Chrome/Chrome Frame"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>bootstrap() will call the AngularJS compiler for you, just like ng-app.</p>\n\n<pre><code>// Make module Foo\nangular.module('Foo', []);\n// Make controller Ctrl in module Foo\nangular.module('Foo').controller('Ctrl', function($scope) { \n    $scope.name = 'DeathCarrot' });\n// Load an element that uses controller Ctrl\n$('&lt;div ng-controller=\"Ctrl\"&gt;{{name}}&lt;/div&gt;').appendTo('body');\n// Bootstrap with Foo\nangular.bootstrap($('body'), ['Foo']);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mrajcok/f85br/\">Fiddle</a>.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I've found a possible solution where I don't need to know about the controller before bootstrapping:</p>\n\n<pre><code>// Make module Foo and store $controllerProvider in a global\nvar controllerProvider = null;\nangular.module('Foo', [], function($controllerProvider) {\n    controllerProvider = $controllerProvider;\n});\n// Bootstrap Foo\nangular.bootstrap($('body'), ['Foo']);\n\n// .. time passes ..\n\n// Load javascript file with Ctrl controller\nangular.module('Foo').controller('Ctrl', function($scope, $rootScope) {\n    $scope.msg = \"It works! rootScope is \" + $rootScope.$id +\n        \", should be \" + $('body').scope().$id;\n});\n// Load html file with content that uses Ctrl controller\n$('&lt;div id=\"ctrl\" ng-controller=\"Ctrl\" ng-bind=\"msg\"&gt;').appendTo('body');\n\n// Register Ctrl controller manually\n// If you can reference the controller function directly, just run:\n// $controllerProvider.register(controllerName, controllerFunction);\n// Note: I haven't found a way to get $controllerProvider at this stage\n//    so I keep a reference from when I ran my module config\nfunction registerController(moduleName, controllerName) {\n    // Here I cannot get the controller function directly so I\n    // need to loop through the module's _invokeQueue to get it\n    var queue = angular.module(moduleName)._invokeQueue;\n    for(var i=0;i&lt;queue.length;i++) {\n        var call = queue[i];\n        if(call[0] == \"$controllerProvider\" &amp;&amp;\n           call[1] == \"register\" &amp;&amp;\n           call[2][0] == controllerName) {\n            controllerProvider.register(controllerName, call[2][1]);\n        }\n    }\n}\nregisterController(\"Foo\", \"Ctrl\");\n// compile the new element\n$('body').injector().invoke(function($compile, $rootScope) {\n    $compile($('#ctrl'))($rootScope);\n    $rootScope.$apply();\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/MzseV/5/\">Fiddle</a>. Only problem is that you need to store the <code>$controllerProvider</code> and use it in a place where it really shouldn't be used (after the bootstrap). Also there doesn't seem to be an easy way to get at a function used to define a controller until it is registered, so I need to loop through the module's <code>_invokeQueue</code>, which is undocumented.</p>\n\n<p><strong>UPDATE:</strong> To register directives and services, instead of <code>$controllerProvider.register</code> simply use <code>$compileProvider.directive</code> and <code>$provide.factory</code> respectively. Again, you'll need to save references to these in your initial module config.</p>\n\n<p><strong>UDPATE 2:</strong> <a href=\"http://jsfiddle.net/MzseV/7/\">Here's a fiddle</a> which automatically registers all controllers/directives/services loaded without having to specify them individually.</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>I have just improved the function written by Jussi-Kosunen so that all stuff can be done with one single call.</p>\n\n<pre><code>function registerController(moduleName, controllerName, template, container) {\n    // Load html file with content that uses Ctrl controller\n    $(template).appendTo(container);\n    // Here I cannot get the controller function directly so I\n    // need to loop through the module's _invokeQueue to get it\n    var queue = angular.module(moduleName)._invokeQueue;\n    for(var i=0;i&lt;queue.length;i++) {\n        var call = queue[i];\n        if(call[0] == \"$controllerProvider\" &amp;&amp;\n            call[1] == \"register\" &amp;&amp;\n            call[2][0] == controllerName) {\n                controllerProvider.register(controllerName, call[2][1]);\n            }\n        }\n\n        angular.injector(['ng', 'Foo']).invoke(function($compile, $rootScope) {\n            $compile($('#ctrl'+controllerName))($rootScope);\n            $rootScope.$apply();\n        });\n}\n</code></pre>\n\n<p>This way you could load your template from anywhere and instanciate controllers programmatically, even nested.</p>\n\n<p>Here is a working example loading a controller inside another one:\n<a href=\"http://plnkr.co/edit/x3G38bi7iqtXKSDE09pN\" rel=\"nofollow\">http://plnkr.co/edit/x3G38bi7iqtXKSDE09pN</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would suggest to take a look at <a href=\"https://github.com/ocombe/ocLazyLoad\" rel=\"nofollow\">ocLazyLoad library</a>, which registers modules (or controllers, services etc on existing module) at run time and also loads them using requireJs or other such library.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an existing page into which I need to drop an angular app with controllers that can be loaded dynamically.</p>\n\n<p>Here's a snippet which implements my best guess as to how it should be done based on the API and some related questions I've found:</p>\n\n<pre><code>// Make module Foo\nangular.module('Foo', []);\n// Bootstrap Foo\nvar injector = angular.bootstrap($('body'), ['Foo']);\n// Make controller Ctrl in module Foo\nangular.module('Foo').controller('Ctrl', function() { });\n// Load an element that uses controller Ctrl\nvar ctrl = $('&lt;div ng-controller=\"Ctrl\"&gt;').appendTo('body');\n// compile the new element\ninjector.invoke(function($compile, $rootScope) {\n    // the linker here throws the exception\n    $compile(ctrl)($rootScope);\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/MzseV/2/\">JSFiddle</a>. Note that this is a simplification of the actual chain of events, there are various async calls and user inputs between the lines above.</p>\n\n<p>When I try to run the above code, the linker which is returned by $compile throws: <code>Argument 'Ctrl' is not a function, got undefined</code>. If I understood bootstrap correctly, the injector it returns should know about the <code>Foo</code> module, right?</p>\n\n<p>If instead I make a new injector using <code>angular.injector(['ng', 'Foo'])</code>, it seems to work but it creates a new <code>$rootScope</code> which is no longer the same scope as the element where the <code>Foo</code> module was bootstrapped.</p>\n\n<p>Am I using the right functionality to do this or is there something I've missed? I know this isn't doing it the Angular way, but I need to add new components that use Angular to old pages that don't, and I don't know all the components that might be needed when I bootstrap the module.</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>I've updated the <a href=\"http://jsfiddle.net/MzseV/3/\">fiddle</a> to show that I need to be able to add multiple controllers to the page at undetermined points in time.</p>\n",
            "last_activity_date": 1413313759,
            "question_id": 15250644,
            "score": 37,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "AngularJS: Loading a controller dynamically"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>/**\n * Creates a RegExp that matches the words in the search string.\n * Case and accent insensitive.\n */\nfunction make_pattern(search_string) {\n    // escape meta characters\n    search_string = search_string.replace(/([|()[{.+*?^$\\\\])/g,\"\\\\$1\");\n\n    // split into words\n    var words = search_string.split(/\\s+/);\n\n    // sort by length\n    var length_comp = function (a,b) {\n        return b.length - a.length;\n    };\n    words.sort(length_comp);\n\n    // replace characters by their compositors\n    var accent_replacer = function(chr) {\n        return accented[chr.toUpperCase()] || chr;\n    }\n    for (var i = 0; i &lt; words.length; i++) {\n        words[i] = words[i].replace(/\\S/g,accent_replacer);\n    }\n\n    // join as alternatives\n    var regexp = words.join(\"|\");\n    return new RegExp(regexp,'g');\n}\n\nvar accented = {\n    'A': '[Aa\\xaa\\xc0-\\xc5\\xe0-\\xe5\\u0100-\\u0105\\u01cd\\u01ce\\u0200-\\u0203\\u0226\\u0227\\u1d2c\\u1d43\\u1e00\\u1e01\\u1e9a\\u1ea0-\\u1ea3\\u2090\\u2100\\u2101\\u213b\\u249c\\u24b6\\u24d0\\u3371-\\u3374\\u3380-\\u3384\\u3388\\u3389\\u33a9-\\u33af\\u33c2\\u33ca\\u33df\\u33ff\\uff21\\uff41]',\n    'B': '[Bb\\u1d2e\\u1d47\\u1e02-\\u1e07\\u212c\\u249d\\u24b7\\u24d1\\u3374\\u3385-\\u3387\\u33c3\\u33c8\\u33d4\\u33dd\\uff22\\uff42]',\n    'C': '[Cc\\xc7\\xe7\\u0106-\\u010d\\u1d9c\\u2100\\u2102\\u2103\\u2105\\u2106\\u212d\\u216d\\u217d\\u249e\\u24b8\\u24d2\\u3376\\u3388\\u3389\\u339d\\u33a0\\u33a4\\u33c4-\\u33c7\\uff23\\uff43]',\n    'D': '[Dd\\u010e\\u010f\\u01c4-\\u01c6\\u01f1-\\u01f3\\u1d30\\u1d48\\u1e0a-\\u1e13\\u2145\\u2146\\u216e\\u217e\\u249f\\u24b9\\u24d3\\u32cf\\u3372\\u3377-\\u3379\\u3397\\u33ad-\\u33af\\u33c5\\u33c8\\uff24\\uff44]',\n    'E': '[Ee\\xc8-\\xcb\\xe8-\\xeb\\u0112-\\u011b\\u0204-\\u0207\\u0228\\u0229\\u1d31\\u1d49\\u1e18-\\u1e1b\\u1eb8-\\u1ebd\\u2091\\u2121\\u212f\\u2130\\u2147\\u24a0\\u24ba\\u24d4\\u3250\\u32cd\\u32ce\\uff25\\uff45]',\n    'F': '[Ff\\u1da0\\u1e1e\\u1e1f\\u2109\\u2131\\u213b\\u24a1\\u24bb\\u24d5\\u338a-\\u338c\\u3399\\ufb00-\\ufb04\\uff26\\uff46]',\n    'G': '[Gg\\u011c-\\u0123\\u01e6\\u01e7\\u01f4\\u01f5\\u1d33\\u1d4d\\u1e20\\u1e21\\u210a\\u24a2\\u24bc\\u24d6\\u32cc\\u32cd\\u3387\\u338d-\\u338f\\u3393\\u33ac\\u33c6\\u33c9\\u33d2\\u33ff\\uff27\\uff47]',\n    'H': '[Hh\\u0124\\u0125\\u021e\\u021f\\u02b0\\u1d34\\u1e22-\\u1e2b\\u1e96\\u210b-\\u210e\\u24a3\\u24bd\\u24d7\\u32cc\\u3371\\u3390-\\u3394\\u33ca\\u33cb\\u33d7\\uff28\\uff48]',\n    'I': '[Ii\\xcc-\\xcf\\xec-\\xef\\u0128-\\u0130\\u0132\\u0133\\u01cf\\u01d0\\u0208-\\u020b\\u1d35\\u1d62\\u1e2c\\u1e2d\\u1ec8-\\u1ecb\\u2071\\u2110\\u2111\\u2139\\u2148\\u2160-\\u2163\\u2165-\\u2168\\u216a\\u216b\\u2170-\\u2173\\u2175-\\u2178\\u217a\\u217b\\u24a4\\u24be\\u24d8\\u337a\\u33cc\\u33d5\\ufb01\\ufb03\\uff29\\uff49]',\n    'J': '[Jj\\u0132-\\u0135\\u01c7-\\u01cc\\u01f0\\u02b2\\u1d36\\u2149\\u24a5\\u24bf\\u24d9\\u2c7c\\uff2a\\uff4a]',\n    'K': '[Kk\\u0136\\u0137\\u01e8\\u01e9\\u1d37\\u1d4f\\u1e30-\\u1e35\\u212a\\u24a6\\u24c0\\u24da\\u3384\\u3385\\u3389\\u338f\\u3391\\u3398\\u339e\\u33a2\\u33a6\\u33aa\\u33b8\\u33be\\u33c0\\u33c6\\u33cd-\\u33cf\\uff2b\\uff4b]',\n    'L': '[Ll\\u0139-\\u0140\\u01c7-\\u01c9\\u02e1\\u1d38\\u1e36\\u1e37\\u1e3a-\\u1e3d\\u2112\\u2113\\u2121\\u216c\\u217c\\u24a7\\u24c1\\u24db\\u32cf\\u3388\\u3389\\u33d0-\\u33d3\\u33d5\\u33d6\\u33ff\\ufb02\\ufb04\\uff2c\\uff4c]',\n    'M': '[Mm\\u1d39\\u1d50\\u1e3e-\\u1e43\\u2120\\u2122\\u2133\\u216f\\u217f\\u24a8\\u24c2\\u24dc\\u3377-\\u3379\\u3383\\u3386\\u338e\\u3392\\u3396\\u3399-\\u33a8\\u33ab\\u33b3\\u33b7\\u33b9\\u33bd\\u33bf\\u33c1\\u33c2\\u33ce\\u33d0\\u33d4-\\u33d6\\u33d8\\u33d9\\u33de\\u33df\\uff2d\\uff4d]',\n    'N': '[Nn\\xd1\\xf1\\u0143-\\u0149\\u01ca-\\u01cc\\u01f8\\u01f9\\u1d3a\\u1e44-\\u1e4b\\u207f\\u2115\\u2116\\u24a9\\u24c3\\u24dd\\u3381\\u338b\\u339a\\u33b1\\u33b5\\u33bb\\u33cc\\u33d1\\uff2e\\uff4e]',\n    'O': '[Oo\\xba\\xd2-\\xd6\\xf2-\\xf6\\u014c-\\u0151\\u01a0\\u01a1\\u01d1\\u01d2\\u01ea\\u01eb\\u020c-\\u020f\\u022e\\u022f\\u1d3c\\u1d52\\u1ecc-\\u1ecf\\u2092\\u2105\\u2116\\u2134\\u24aa\\u24c4\\u24de\\u3375\\u33c7\\u33d2\\u33d6\\uff2f\\uff4f]',\n    'P': '[Pp\\u1d3e\\u1d56\\u1e54-\\u1e57\\u2119\\u24ab\\u24c5\\u24df\\u3250\\u3371\\u3376\\u3380\\u338a\\u33a9-\\u33ac\\u33b0\\u33b4\\u33ba\\u33cb\\u33d7-\\u33da\\uff30\\uff50]',\n    'Q': '[Qq\\u211a\\u24ac\\u24c6\\u24e0\\u33c3\\uff31\\uff51]',\n    'R': '[Rr\\u0154-\\u0159\\u0210-\\u0213\\u02b3\\u1d3f\\u1d63\\u1e58-\\u1e5b\\u1e5e\\u1e5f\\u20a8\\u211b-\\u211d\\u24ad\\u24c7\\u24e1\\u32cd\\u3374\\u33ad-\\u33af\\u33da\\u33db\\uff32\\uff52]',\n    'S': '[Ss\\u015a-\\u0161\\u017f\\u0218\\u0219\\u02e2\\u1e60-\\u1e63\\u20a8\\u2101\\u2120\\u24ae\\u24c8\\u24e2\\u33a7\\u33a8\\u33ae-\\u33b3\\u33db\\u33dc\\ufb06\\uff33\\uff53]',\n    'T': '[Tt\\u0162-\\u0165\\u021a\\u021b\\u1d40\\u1d57\\u1e6a-\\u1e71\\u1e97\\u2121\\u2122\\u24af\\u24c9\\u24e3\\u3250\\u32cf\\u3394\\u33cf\\ufb05\\ufb06\\uff34\\uff54]',\n    'U': '[Uu\\xd9-\\xdc\\xf9-\\xfc\\u0168-\\u0173\\u01af\\u01b0\\u01d3\\u01d4\\u0214-\\u0217\\u1d41\\u1d58\\u1d64\\u1e72-\\u1e77\\u1ee4-\\u1ee7\\u2106\\u24b0\\u24ca\\u24e4\\u3373\\u337a\\uff35\\uff55]',\n    'V': '[Vv\\u1d5b\\u1d65\\u1e7c-\\u1e7f\\u2163-\\u2167\\u2173-\\u2177\\u24b1\\u24cb\\u24e5\\u2c7d\\u32ce\\u3375\\u33b4-\\u33b9\\u33dc\\u33de\\uff36\\uff56]',\n    'W': '[Ww\\u0174\\u0175\\u02b7\\u1d42\\u1e80-\\u1e89\\u1e98\\u24b2\\u24cc\\u24e6\\u33ba-\\u33bf\\u33dd\\uff37\\uff57]',\n    'X': '[Xx\\u02e3\\u1e8a-\\u1e8d\\u2093\\u213b\\u2168-\\u216b\\u2178-\\u217b\\u24b3\\u24cd\\u24e7\\u33d3\\uff38\\uff58]',\n    'Y': '[Yy\\xdd\\xfd\\xff\\u0176-\\u0178\\u0232\\u0233\\u02b8\\u1e8e\\u1e8f\\u1e99\\u1ef2-\\u1ef9\\u24b4\\u24ce\\u24e8\\u33c9\\uff39\\uff59]',\n    'Z': '[Zz\\u0179-\\u017e\\u01f1-\\u01f3\\u1dbb\\u1e90-\\u1e95\\u2124\\u2128\\u24b5\\u24cf\\u24e9\\u3390-\\u3394\\uff3a\\uff5a]'\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>A more complete version with case sensitive support, ligatures and whatnot.\nOriginal source at: <a href=\"http://web.archive.org/web/20120918093154/http://lehelk.com/2011/05/06/script-to-remove-diacritics/\">http://lehelk.com/2011/05/06/script-to-remove-diacritics/</a></p>\n\n<pre><code>var defaultDiacriticsRemovalMap = [\n    {'base':'A', 'letters':/[\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F]/g},\n    {'base':'AA','letters':/[\\uA732]/g},\n    {'base':'AE','letters':/[\\u00C6\\u01FC\\u01E2]/g},\n    {'base':'AO','letters':/[\\uA734]/g},\n    {'base':'AU','letters':/[\\uA736]/g},\n    {'base':'AV','letters':/[\\uA738\\uA73A]/g},\n    {'base':'AY','letters':/[\\uA73C]/g},\n    {'base':'B', 'letters':/[\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181]/g},\n    {'base':'C', 'letters':/[\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E]/g},\n    {'base':'D', 'letters':/[\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779]/g},\n    {'base':'DZ','letters':/[\\u01F1\\u01C4]/g},\n    {'base':'Dz','letters':/[\\u01F2\\u01C5]/g},\n    {'base':'E', 'letters':/[\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E]/g},\n    {'base':'F', 'letters':/[\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B]/g},\n    {'base':'G', 'letters':/[\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E]/g},\n    {'base':'H', 'letters':/[\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D]/g},\n    {'base':'I', 'letters':/[\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197]/g},\n    {'base':'J', 'letters':/[\\u004A\\u24BF\\uFF2A\\u0134\\u0248]/g},\n    {'base':'K', 'letters':/[\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2]/g},\n    {'base':'L', 'letters':/[\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780]/g},\n    {'base':'LJ','letters':/[\\u01C7]/g},\n    {'base':'Lj','letters':/[\\u01C8]/g},\n    {'base':'M', 'letters':/[\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C]/g},\n    {'base':'N', 'letters':/[\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4]/g},\n    {'base':'NJ','letters':/[\\u01CA]/g},\n    {'base':'Nj','letters':/[\\u01CB]/g},\n    {'base':'O', 'letters':/[\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C]/g},\n    {'base':'OI','letters':/[\\u01A2]/g},\n    {'base':'OO','letters':/[\\uA74E]/g},\n    {'base':'OU','letters':/[\\u0222]/g},\n    {'base':'P', 'letters':/[\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754]/g},\n    {'base':'Q', 'letters':/[\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A]/g},\n    {'base':'R', 'letters':/[\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782]/g},\n    {'base':'S', 'letters':/[\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784]/g},\n    {'base':'T', 'letters':/[\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786]/g},\n    {'base':'TZ','letters':/[\\uA728]/g},\n    {'base':'U', 'letters':/[\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244]/g},\n    {'base':'V', 'letters':/[\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245]/g},\n    {'base':'VY','letters':/[\\uA760]/g},\n    {'base':'W', 'letters':/[\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72]/g},\n    {'base':'X', 'letters':/[\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C]/g},\n    {'base':'Y', 'letters':/[\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE]/g},\n    {'base':'Z', 'letters':/[\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762]/g},\n    {'base':'a', 'letters':/[\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250]/g},\n    {'base':'aa','letters':/[\\uA733]/g},\n    {'base':'ae','letters':/[\\u00E6\\u01FD\\u01E3]/g},\n    {'base':'ao','letters':/[\\uA735]/g},\n    {'base':'au','letters':/[\\uA737]/g},\n    {'base':'av','letters':/[\\uA739\\uA73B]/g},\n    {'base':'ay','letters':/[\\uA73D]/g},\n    {'base':'b', 'letters':/[\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253]/g},\n    {'base':'c', 'letters':/[\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184]/g},\n    {'base':'d', 'letters':/[\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A]/g},\n    {'base':'dz','letters':/[\\u01F3\\u01C6]/g},\n    {'base':'e', 'letters':/[\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD]/g},\n    {'base':'f', 'letters':/[\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C]/g},\n    {'base':'g', 'letters':/[\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F]/g},\n    {'base':'h', 'letters':/[\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265]/g},\n    {'base':'hv','letters':/[\\u0195]/g},\n    {'base':'i', 'letters':/[\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131]/g},\n    {'base':'j', 'letters':/[\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249]/g},\n    {'base':'k', 'letters':/[\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3]/g},\n    {'base':'l', 'letters':/[\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747]/g},\n    {'base':'lj','letters':/[\\u01C9]/g},\n    {'base':'m', 'letters':/[\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F]/g},\n    {'base':'n', 'letters':/[\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5]/g},\n    {'base':'nj','letters':/[\\u01CC]/g},\n    {'base':'o', 'letters':/[\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275]/g},\n    {'base':'oi','letters':/[\\u01A3]/g},\n    {'base':'ou','letters':/[\\u0223]/g},\n    {'base':'oo','letters':/[\\uA74F]/g},\n    {'base':'p','letters':/[\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755]/g},\n    {'base':'q','letters':/[\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759]/g},\n    {'base':'r','letters':/[\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783]/g},\n    {'base':'s','letters':/[\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B]/g},\n    {'base':'t','letters':/[\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787]/g},\n    {'base':'tz','letters':/[\\uA729]/g},\n    {'base':'u','letters':/[\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289]/g},\n    {'base':'v','letters':/[\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C]/g},\n    {'base':'vy','letters':/[\\uA761]/g},\n    {'base':'w','letters':/[\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73]/g},\n    {'base':'x','letters':/[\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D]/g},\n    {'base':'y','letters':/[\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF]/g},\n    {'base':'z','letters':/[\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763]/g}\n];\nvar changes;\nfunction removeDiacritics (str) {\n    if(!changes) {\n        changes = defaultDiacriticsRemovalMap;\n    }\n    for(var i=0; i&lt;changes.length; i++) {\n        str = str.replace(changes[i].letters, changes[i].base);\n    }\n    return str;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                }
            ],
            "body": "<p>I need to compare 2 strings as equal such as these:</p>\n\n<blockquote>\n  <p>Lubeck == L\u00fcbeck</p>\n</blockquote>\n\n<p>In JavaScript.</p>\n\n<p>Why? Well, I have an auto-completion field that's going out to a Java service using Lucene, where place names are stored naturally (as L\u00fcbeck), but also indexed as normalized text, </p>\n\n<pre><code>import sun.text.Normalizer;\noDoc.setNameLC = Normalizer.normalize(oLocName, Normalizer.DECOMP, 0)\n    .toLowerCase().replaceAll(\"[^\\\\p{ASCII}]\",\"\");\n</code></pre>\n\n<p>This way some-one who doesn't know to type \"M\u00e8xico\" can type \"mexico\" and get a match which returns \"M\u00e8xico\" (among a lot of other possible hits, like \"Caf\u00e9 M\u00e8xico, Dubai, UAE\").</p>\n\n<p>Now the thing is I don't have the ability to change the service to do any highlighting on the server side, therefore I am highlighting on the client JavaScript side with something like:</p>\n\n<pre><code>return result.replace( input.replace(/[aeiou]/g,\".\"), \"&lt;b&gt;$1&lt;/b&gt;\");\n</code></pre>\n\n<p>It's a little more fancy because I am escaping special regex characters in the input. This is fine for simple one word matches at the beginning of a hit, but it really breaks down if you suddenly wish to support multi-word matches like \"london cafe\":</p>\n\n<pre><code>input = input.strip().toLowerCase(); //fyi prototype's strip is like trim\nre = new RegEx(input.replace(/[aeiou]/g,\".\").replace(/\\s+/g,\"|\"),\"gi\");\nreturn result.replace(re, \"&lt;b&gt;$1&lt;/b&gt;\");\n</code></pre>\n\n<p>This doesn't work for say \"london ca\" (was typing london cafe), because it would mark \"Jack London Cabin, Dawson City, Canada\" as: <code>\"Ja&lt;b&gt;ck&lt;/b&gt; &lt;b&gt;London&lt;/b&gt; &lt;b&gt;ca&lt;/b&gt;bin, Dawson &lt;b&gt;Ci&lt;/b&gt;ty, &lt;b&gt;Ca&lt;b/&gt;nada\"</code> [note the \"ck\" and \"Ci\" particularly]</p>\n\n<p>Therefore I'm sort of looking for something that's not as crazy as:</p>\n\n<pre><code>input = input.strip().toLowerCase();\ninput = input.replace(/a/g,\"[\u00c0\u00e0\u00c1\u00e1\u00c2\u00e2\u00c3\u00e3\u00c4\u00e4\u00c5\u00e5\u00c6\u00e6\u0100\u0101\u0102\u0103\u0104\u0105]\");\ninput = input.replace(/e/g,\"[\u00c8\u00e8\u00c9\u00e9\u00ca\u00ea\u00cb\u00eb\u0112\u0113\u0114\u0115\u0116\u0117\u0118\u0119\u011a\u011b]\");\n// ditto for i, o, u, y, c, n, maybe also d, g, h, j, k, l, r, s, t, w, z \nre = new RegEx(input.replace(/\\s+/g,\"|\"),\"gi\");\nreturn result.replace(re, \"&lt;b&gt;$1&lt;/b&gt;\");\n</code></pre>\n\n<p>Is there a compiled table I can refer to mapping a range of characters which are accented versions of an other character to that character, by which I don't mean the plain unicode chart. And if so, could I avoid using weird, possibly slow, RegEx statements?</p>\n\n<p><em>About the bounty:</em><br />\nBefore I started a bounty there were two answers, the one pointing me to doing it in Ruby, and <a href=\"http://stackoverflow.com/questions/227950/programatic-accent-reduction-in-javascript-aka-text-normalization-or-unaccenting/228006#228006\">the one</a> that <a href=\"http://stackoverflow.com/users/22364/mizardx\">MizzardX</a> wrote which was a completion of the basic form I'd put in my question. Now don't get me wrong, I really appreciate working it out as completely as he did, but I just wished that there might be another way.  It seems so far that everyone who's dropped by to look at the question and answer has decided that MizzardX covers it just fine, or that they have no different approach. I would be interested in a different approach, and if it simply isn't available before the bounty closes, MizzardX will win the bounty (though in a cruel twist, his edits mad it a community wiki answer, so I'm not sure if he'll get the bounty!)</p>\n",
            "last_activity_date": 1382551935,
            "question_id": 227950,
            "score": 33,
            "tags": [
                "javascript",
                "normalize-text",
                "unaccent"
            ],
            "title": "Programatic Accent Reduction in JavaScript (aka text normalization or unaccenting)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>use the</p>\n\n<pre><code>setInterval(function, 60000);\n</code></pre>\n\n<p>EDIT : (In case if you want to stop the clock after it is started)</p>\n\n<p>Script section</p>\n\n<pre><code>&lt;script&gt;\nvar int=self.setInterval(function, 60000);\n&lt;/script&gt;\n</code></pre>\n\n<p>and HTML Code</p>\n\n<pre><code>&lt;!-- Stop Button --&gt;\n&lt;a href=\"#\" onclick=\"window.clearInterval(int);return false;\"&gt;Stop&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<pre><code>setInterval(fn,time)\n</code></pre>\n\n<p>is the method you're after.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you don't care if the code within the <code>timer</code> may take longer than your interval, use <code>setInterval()</code>:</p>\n\n<pre><code>setInterval(function, delay)\n</code></pre>\n\n<p>That fires the function passed in as first parameter over and over.</p>\n\n<p>A better approach is, to use <code>setTimeout</code> along with a <code>self-executing anonymous</code> function:</p>\n\n<pre><code>(function(){\n    // do some stuff\n    setTimeout(arguments.callee, 60000);\n})();\n</code></pre>\n\n<p>that guarantees, that the next call is not made before your code was executed. I used <code>arguments.callee</code> in this example as function reference. It's a better way to give the function a name and call that within <code>setTimeout</code> because <code>arguments.callee</code> is deprecated in ecmascript 5.</p>\n",
                    "is_accepted": true,
                    "score": 124
                },
                {
                    "body": "<p>Use <a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.setInterval\" rel=\"nofollow\"><code>window.setInterval(func, time)</code></a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Using setTimeout() it is possible to launch a function at specified time, e.g.:</p>\n\n<pre><code>setTimeout(function, 60000);\n</code></pre>\n\n<p>But what if I would like to launch the function multiple times? Every time a time interval passes, I would like to execute the function (every 60 seconds, let's say).</p>\n",
            "last_activity_date": 1413382987,
            "question_id": 3138756,
            "score": 67,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Jquery repeat function every 60 seconds"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Check here:\n<a href=\"http://www.bloggingdeveloper.com/post/KeyPress-KeyDown-KeyUp-The-Difference-Between-Javascript-Key-Events.aspx\">http://www.bloggingdeveloper.com/post/KeyPress-KeyDown-KeyUp-The-Difference-Between-Javascript-Key-Events.aspx</a></p>\n\n<p>From that link:</p>\n\n<blockquote>\n  <p>In theory, the keydown and keyup\n  events represent keys being pressed or\n  released, while the keypress event\n  represents a character being typed.\n  The implementation of the theory is\n  not same in all browsers.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>KeyPress, KeyUp and KeyDown are analagous to, respectively, Click, MouseUp, and MouseDown.</p>\n\n<p>The *Down happens first, the *Press happens second (when text is entered), and the *Up happens last (when text input is complete).</p>\n\n<p>The exception is webkit, which has an extra event in there:</p>\n\n<pre><code>keydown\nkeypress\ntextInput     \nkeyup\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p><code>onkeydown</code> is fired when the key is down (like in shortcuts; for example, in <code>Ctrl+A</code>, <code>Ctrl</code> is held 'down'.</p>\n\n<p><code>onkeyup</code> is fired when the key is released (including modifier/etc keys)</p>\n\n<p><code>onkeypress</code> is fired as a combination of <code>onkeydown</code> and <code>onkeyup</code>, or depending on keyboard repeat (when <code>onkeyup</code> isn't fired). (this repeat behaviour is something that I haven't tested. If you do test, add a comment!)</p>\n\n<p><code>textInput</code> (webkit only) is fired when some text is entered (for example, <code>Shift+A</code> would enter uppercase 'A', but <code>Ctrl+A</code> would select text and not enter any text input. In that case, all other events are fired)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It seems that onkeypress and onkeydown make the same (whithin the small difference of shortcut keys already mentioned above).</p>\n\n<p>You can try this:</p>\n\n<pre><code>    &lt;textarea type=\"text\" onkeypress=\"this.value=this.value + 'onkeypress '\"&gt;&lt;/textarea&gt;&lt;br/&gt;\n    &lt;textarea type=\"text\" onkeydown=\"this.value=this.value + 'onkeydown '\" &gt;&lt;/textarea&gt;&lt;br/&gt;\n    &lt;textarea type=\"text\" onkeyup=\"this.value=this.value + 'onkeyup '\" &gt;&lt;/textarea&gt;&lt;br/&gt;\n</code></pre>\n\n<p>And you will see that the events onkeypress and onkeydown are both triggered while the key is pressed and not when the key is pressed.</p>\n\n<p>The difference is that the event is triggered not once but many times (as long as you hold the key pressed).</p>\n\n<p>If you use some of these events be aware and handle how many times your code is run.</p>\n\n<p>And sorry for my English the lessons were poor.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I found that if I hold the TAB key down that it continuously cycles through all fields and only triggers 'onkeydown'.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Basically, these events act differently on different browser type and version, I created a little jsBin test and you can check the console for find out how these events behavior for your targeted environment, hope this help. <a href=\"http://jsbin.com/zipivadu/10/edit\" rel=\"nofollow\">http://jsbin.com/zipivadu/10/edit</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The onkeypress event works for all the keys except ALT, CTRL, SHIFT, ESC in all browsers where as onkeydown event works for all keys. Means onkeydown event captures all the keys.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is the difference between these three events? Upon googling I found that</p>\n\n<blockquote>\n  <p>The <strong>KeyDown</strong> event is triggered when\n  the user presses a Key.</p>\n  \n  <p>The <strong>KeyUp</strong> event is triggered when the\n  user releases a Key.</p>\n  \n  <p>The <strong>KeyPress</strong> event is triggered when\n  the user presses &amp; releases a Key. \n  (onKeyDown followed by onKeyUp)</p>\n</blockquote>\n\n<p>I understand the first two, but isn't <strong>KeyPress</strong> the same as <strong>KeyUp</strong>? (or is it possible to release a key(keyup) without pressing(keydown) it?)</p>\n\n<p>This is a bit confusing, can someone clear this up for me?</p>\n",
            "last_activity_date": 1425491505,
            "question_id": 3396754,
            "score": 66,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "onKeyPress Vs. onKeyUp and onKeyDown"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p><em>If <code>url</code> does not begin with '/'</em></p>\n\n<p>Take the current page's url, chop off everything past the last '/'; then append the relative url.</p>\n\n<p><em>Else if <code>url</code> begins with '/'</em></p>\n\n<p>Take the current page's url and chop off everything to the right of the single '/'; then append the url.</p>\n\n<p><em>Else if <code>url</code> starts with # or ?</em></p>\n\n<p>Take the current page's url and simply append <code>url</code></p>\n\n<p><hr /></p>\n\n<p>Hope it works for you</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>How strange! IE does, however, understand it when you use innerHTML instead of DOM methods.</p>\n\n<pre><code>function escapeHTML(s) {\n    return s.split('&amp;').join('&amp;amp;').split('&lt;').join('&amp;lt;').split('\"').join('&amp;quot;');\n}\nfunction qualifyURL(url) {\n    var el= document.createElement('div');\n    el.innerHTML= '&lt;a href=\"'+escapeHTML(url)+'\"&gt;x&lt;/a&gt;';\n    return el.firstChild.href;\n}\n</code></pre>\n\n<p>A bit ugly, but more concise than Doing It Yourself.</p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>I found this blog post that suggests using an image element instead of an anchor:</p>\n\n<p><a href=\"http://james.padolsey.com/javascript/getting-a-fully-qualified-url/\" rel=\"nofollow\">http://james.padolsey.com/javascript/getting-a-fully-qualified-url/</a></p>\n\n<p>That works to reliably expand a URL, even in IE6.  But the problem is that the browsers that I have tested will immediately download the resource upon setting the image src attribute - even if you set the src to null on the next line.</p>\n\n<p>I am going to give bobince's solution a go instead.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As long as the browser implements the &lt;base&gt; tag correctly, which browsers tend to:</p>\n\n<pre><code>function resolve(url, base_url) {\n  var doc      = document\n    , old_base = doc.getElementsByTagName('base')[0]\n    , old_href = old_base &amp;&amp; old_base.href\n    , doc_head = doc.head || doc.getElementsByTagName('head')[0]\n    , our_base = old_base || doc_head.appendChild(doc.createElement('base'))\n    , resolver = doc.createElement('a')\n    , resolved_url\n    ;\n  our_base.href = base_url;\n  resolver.href = url;\n  resolved_url  = resolver.href; // browser magic at work here\n\n  if (old_base) old_base.href = old_href;\n  else doc_head.removeChild(our_base);\n  return resolved_url;\n}\n</code></pre>\n\n<p>Here's a jsfiddle where you can experiment with it: <a href=\"http://jsfiddle.net/ecmanaut/RHdnZ/\">http://jsfiddle.net/ecmanaut/RHdnZ/</a></p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>If it runs in the browser, this sort of works for me..</p>\n\n<pre><code>  function resolveURL(url, base){\n    if(/^https?:/.test(url))return url; // url is absolute\n    // let's try a simple hack..\n    var basea=document.createElement('a'), urla=document.createElement('a');\n    basea.href=base, urla.href=url;\n    urla.protocol=basea.protocol;// \"inherit\" the base's protocol and hostname\n    if(!/^\\/\\//.test(url))urla.hostname=basea.hostname; //..hostname only if url is not protocol-relative  though\n    if( /^\\//.test(url) )return urla.href; // url starts with /, we're done\n    var urlparts=url.split(/\\//); // create arrays for the url and base directory paths\n    var baseparts=basea.pathname.split(/\\//); \n    if( ! /\\/$/.test(base) )baseparts.pop(); // if base has a file name after last /, pop it off\n    while( urlparts[0]=='..' ){baseparts.pop();urlparts.shift();} // remove .. parts from url and corresponding directory levels from base\n    urla.pathname=baseparts.join('/')+'/'+urlparts.join('/');\n    return urla.href;\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This solution works in all browsers.</p>\n\n<pre><code>/**\n * Given a filename for a static resource, returns the resource's absolute\n * URL. Supports file paths with or without origin/protocol.\n */\nfunction toAbsoluteURL (url) {\n  // Handle absolute URLs (with protocol-relative prefix)\n  // Example: //domain.com/file.png\n  if (url.search(/^\\/\\//) != -1) {\n    return window.location.protocol + url\n  }\n\n  // Handle absolute URLs (with explicit origin)\n  // Example: http://domain.com/file.png\n  if (url.search(/:\\/\\//) != -1) {\n    return url\n  }\n\n  // Handle absolute URLs (without explicit origin)\n  // Example: /file.png\n  if (url.search(/^\\//) != -1) {\n    return window.location.origin + url\n  }\n\n  // Handle relative URLs\n  // Example: file.png\n  var base = window.location.href.match(/(.*\\/)/)[0]\n  return base + url\n</code></pre>\n\n<p>However, it doesn't support relative URLs with \"..\" in them, like \"../file.png\".</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://medialize.github.io/URI.js/\" rel=\"nofollow\">URI.js</a> seems to solve the issue:</p>\n\n<pre><code>URI(\"../foobar.html\").absoluteTo(\"http://example.org/hello/world.html\").toString()\n</code></pre>\n\n<p>See also <a href=\"http://medialize.github.io/URI.js/docs.html#absoluteto\" rel=\"nofollow\">http://medialize.github.io/URI.js/docs.html#absoluteto</a></p>\n\n<p>Not testeed with IE6, but maybe helpful for others searching to the general issue.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I found on this <a href=\"http://grack.com/blog/2009/11/17/absolutizing-url-in-javascript/\" rel=\"nofollow\">blog</a> another method that really looks like @bobince solution.</p>\n\n<pre><code>function canonicalize(url) {\n    var div = document.createElement('div');\n    div.innerHTML = \"&lt;a&gt;&lt;/a&gt;\";\n    div.firstChild.href = url; // Ensures that the href is properly escaped\n    div.innerHTML = div.innerHTML; // Run the current innerHTML back through the parser\n    return div.firstChild.href;\n}\n</code></pre>\n\n<p>I found it a little more elegant, not a big deal.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can make it work on IE6 just cloning the element:</p>\n\n<pre><code>function qualifyURL(url) {\n    var a = document.createElement('a');\n    a.href = url;\n    return a.cloneNode(false).href;\n}\n</code></pre>\n\n<p><sup>(Tested using IETester on IE6 and IE5.5 modes)</sup></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is the function I use to resolve basic relative URLs:</p>\n\n<pre><code>function resolveRelative(path, base) {\n    // Upper directory\n    if (path.startsWith(\"../\")) {\n        return resolveRelative(path.slice(3), base.replace(/\\/[^\\/]*$/, ''));\n    }\n    // Relative to the root\n    if (path.startsWith('/')) {\n        var match = base.match(/(\\w*:\\/\\/)?[^\\/]*\\//) || [base];\n        return match[0] + path.slice(1);\n    }\n    //relative to the current directory\n    return base.replace(/\\/[^\\/]*$/, \"\") + '/' + path;\n}\n</code></pre>\n\n<p>It works both in the browser and in node.js or other environments.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I actually wanted an approach to this that didn't require modifying the original document (not even temporarily) but still used the browser's builtin url parsing and such. Also, I wanted to be able to provide my own base (like ecmanaught's answer). It's rather straightforward, but uses createHTMLDocument (could be replaced with createDocument to be a bit more compatible possibly):</p>\n\n<pre><code>function absolutize(base, url) {\n    d = document.implementation.createHTMLDocument();\n    b = d.createElement('base');\n    d.head.appendChild(b);\n    a = d.createElement('a');\n    d.body.appendChild(a);\n    b.href = base;\n    a.href = url;\n    return a.href;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/5u6j403k/\" rel=\"nofollow\">http://jsfiddle.net/5u6j403k/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm currently using the following function to 'convert' a relative URL to an absolute one:</p>\n\n<pre><code>function qualifyURL(url) {\n\tvar a = document.createElement('a');\n\ta.href = url;\n\treturn a.href;\n}\n</code></pre>\n\n<p>This works quite well in most browsers but IE6 insists on returning the relative URL still! It does the same if I use getAttribute('href'). </p>\n\n<p>The only way I've been able to get a qualified URL out of IE6 is to create an img element and query it's 'src' attribute - the problem with this is that it generates a server request; something I want to avoid.</p>\n\n<p>So my question is: Is there any way to get a fully qualified URL in IE6 from a relative one (without a server request)?</p>\n\n<p><hr /></p>\n\n<p>Before you recommend a quick regex/string fix I assure you it's not that simple. Base elements + double period relative urls + a tonne of other potential variables really make it hell! </p>\n\n<p>There must be a way to do it without having to create a mammoth of a regex'y solution??</p>\n",
            "last_activity_date": 1422408586,
            "question_id": 470832,
            "score": 49,
            "tags": [
                "javascript",
                "url",
                "internet-explorer-6"
            ],
            "title": "Getting an absolute URL from a relative one. (IE6 issue)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Thanks for prompting me to write a clearer explanation.  Here's a fuller example with my comments.  There were a few bugs and inconsistencies that I've cleaned up.  Next docs release will use this.</p>\n\n<p><a href=\"http://docs.meteor.com/#meteor_publish\" rel=\"nofollow\"><code>Meteor.publish</code></a> is quite flexible.  It's not limited to publishing existing MongoDB collections to the client: we can publish anything we want.  Specifically, <code>Meteor.publish</code> defines a <em>set of documents</em> that a client can subscribe to.  Each document belongs to some collection name (a string), has a unique <code>_id</code> field, and then has some set of JSON attributes.  As the documents in the set change, the server will send the changes down to each subscribed client, keeping the client up to date.  </p>\n\n<p>We're going to define a document set here, called <code>\"counts-by-room\"</code>, that contains a single document in a collection named <code>\"counts\"</code>.  The document will have two fields: a <code>roomId</code> with the ID of a room, and <code>count</code>: the total number of messages in that room.  There is no real MongoDB collection named <code>counts</code>.  This is just the name of the collection that our Meteor server will be sending down to the client, and storing in a <em>client-side</em> collection named <code>counts</code>.</p>\n\n<p>To do this, our publish function takes a <code>roomId</code> parameter that will come from the client, and observes a query of all Messages (defined elsewhere) in that room.  We can use the more efficient <code>observeChanges</code> form of observing a query here since we won't need the full document, just the knowledge that a new one was added or removed.  Anytime a new message is added with the <code>roomId</code> we're interested in, our callback increments the internal count, and then publishes a new document to the client with that updated total.  And when a message is removed, it decrements the count and sends the client the update.</p>\n\n<p>When we first call <code>observeChanges</code>, some number of <code>added</code> callbacks will run right away, for each message that already exists.  Then future changes will fire whenever messages are added or removed.</p>\n\n<p>Our publish function also registers an <code>onStop</code> handler to clean up when the client unsubscribes (either manually, or on disconnect).  This handler removes the attributes from the client and tears down the running <code>observeChanges</code>.</p>\n\n<p>A publish function runs each time a new client subscribes to <code>\"counts-by-room\"</code>, so each client will have an <code>observeChanges</code> running on its behalf.</p>\n\n<pre><code>// server: publish the current size of a collection\nMeteor.publish(\"counts-by-room\", function (roomId) {\n  var self = this;\n  var count = 0;\n  var initializing = true;\n\n  var handle = Messages.find({room_id: roomId}).observeChanges({\n    added: function (doc, idx) {\n      count++;\n      if (!initializing)\n        self.changed(\"counts\", roomId, {count: count});  // \"counts\" is the published collection name\n    },\n    removed: function (doc, idx) {\n      count--;\n      self.changed(\"counts\", roomId, {count: count});  // same published collection, \"counts\"\n    }\n    // don't care about moved or changed\n  });\n\n  initializing = false;\n\n  // publish the initial count. `observeChanges` guaranteed not to return\n  // until the initial set of `added` callbacks have run, so the `count`\n  // variable is up to date.\n  self.added(\"counts\", roomId, {count: count});\n\n  // and signal that the initial document set is now available on the client\n  self.ready();\n\n  // turn off observe when client unsubscribes\n  self.onStop(function () {\n    handle.stop();\n  });\n});\n</code></pre>\n\n<p>Now, on the client, we can treat this just like a typical Meteor subscription.  First, we need a <code>Mongo.Collection</code> that will hold our calculated counts document.  Since the server is publishing into a collection named <code>\"counts\"</code>, we pass <code>\"counts\"</code> as the argument to the <code>Mongo.Collection</code> constructor.</p>\n\n<pre><code>// client: declare collection to hold count object\nCounts = new Mongo.Collection(\"counts\");\n</code></pre>\n\n<p>Then we can subscribe.  (You can actually subscribe before declaring the collection: Meteor will queue the incoming updates until there's a place to put them.)  The name of the <em>subscription</em> is <code>\"counts-by-room\"</code>, and it takes one argument: the current room's ID.  I've wrapped this inside <code>Deps.autorun</code> so that as <code>Session.get('roomId')</code> changes, the client will automatically unsubscribe from the old room's count and resubscribe to the new room's count.</p>\n\n<pre><code>// client: autosubscribe to the count for the current room\nTracker.autorun(function () {\n  Meteor.subscribe(\"counts-by-room\", Session.get(\"roomId\"));\n});\n</code></pre>\n\n<p>Finally, we've got the document in <code>Counts</code> and we can use it just like any other Mongo collection on the client.  Any template that references this data will automatically redraw whenever the server sends a new count.</p>\n\n<pre><code>// client: use the new collection\nconsole.log(\"Current room has \" + Counts.findOne().count + \" messages.\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Just found a solution to the problem where self.flush() is sending thousands of updates to the client - just use _.debounce when counting:</p>\n\n<pre><code>count = 0\nthrottled_subscription = _.debounce =&gt;\n  @set 'items-count', uuid, count: count\n  @flush()\n, 10\nhandle = Items.find(selector).observe\n  added: =&gt;\n    count++\n    throttled_subscription()\n  removed: =&gt;\n    count--\n    throttled_subscription()\n</code></pre>\n\n<p>This will only set the count and flush the subscription after 10ms of no change.</p>\n\n<p>Thanks to @possibilities on #meteor for the hint.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As Leonhardt Wille said, the downside of this solution is that meteor downloads the whole collection of items from Mongo server just to count them. His solution at  <a href=\"http://gist.github.com/3925008\" rel=\"nofollow\">gist.github.com/3925008</a> is better, but counter will not update when new items inserted.</p>\n\n<p>Here is my reactive solution</p>\n\n<p>Collections:\n</p>\n\n<pre><code>Players = new Meteor.Collection(\"players\");\nPlayersCounts = new Meteor.Collection(\"players_counts\")\n</code></pre>\n\n<p>Server:\n</p>\n\n<pre><code>Meteor.publish(\"players_counts\", function(){\n    var uuid = Meteor.uuid()\n    var self = this;\n\n    var unthrottled_setCount = function(){\n        cnt = Players.find({}).count()\n        self.set(\"players_counts\", uuid, {count: cnt})\n        self.flush()\n    }\n\n    var setCount = _.throttle(unthrottled_setCount, 50)\n\n    var handle = Meteor._InvalidationCrossbar.listen({collection: \"players\"}, function(notification, complete){\n        setCount();\n        complete();\n    })\n\n    setCount();\n    self.complete()\n    self.flush()\n\n    self.onStop(function(){\n        handle.stop();\n        self.unset(\"players_counts\", uuid, [\"count\"]);\n        self.flush();\n    });\n});\n</code></pre>\n\n<p>Client:\n</p>\n\n<pre><code>Meteor.subscribe(\"players_counts\")\n\nTemplate.leaderboard.total = function(){\n    var cnt = PlayersCounts.findOne({})\n    if(cnt) {\n        return cnt.count;\n    } else {\n        return null;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>What would happen if handle.stop() was commented out? See this example is it not working because I need to put onStop() inside this function: checkSharedBy() ??</p>\n\n<p><a href=\"http://stackoverflow.com/questions/20688718/meteor-one-to-many-relationship-add-field-only-to-client-side-collection-in-p\">Meteor, One to Many Relationship &amp; add field only to client side collection in Publish?</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Having trouble full understanding this example from <a href=\"http://docs.meteor.com/#meteor_publish\">the docs</a>... I tried running it a bunch of different ways so I could observe how it works, etc.</p>\n\n<p>How do you subscribe to this? Can we include the client side code needed to make this work?</p>\n\n<p>Is there a collection called <code>messages-count</code>? Is a <code>Room</code> a collection of messages? Can we include the collection definitions in the example?</p>\n\n<p>Any tips on this would be great!</p>\n\n<p><em>NOTE</em>: this is the code as it appeared when this question was initially posted (May 2012). It's simpler now.</p>\n\n<pre><code>// server: publish the current size of a collection\nMeteor.publish(\"messages-count\", function (roomId) {\n  var self = this;\n  var uuid = Meteor.uuid();\n  var count = 0;\n\n  handle = Room.find({room_id: roomId}).observe({\n    added: function (doc, idx) {\n      count++;\n      self.set(\"messages-count\", uuid, \"count\", count);\n      self.flush();\n    },\n    removed: function (doc, idx) {\n      count--;\n      self.set(\"messages-count\", uuid, \"count\", count);\n      self.flush();\n    }\n    // don't care about moved or changed\n  });\n\n  // remove data and turn off observe when client unsubs\n  self.onStop(function () {\n    handle.stop();\n    self.unset(\"messages-count\", uuid, \"count\");\n    self.flush();\n  });\n});\n</code></pre>\n",
            "last_activity_date": 1418968452,
            "question_id": 10565654,
            "score": 31,
            "tags": [
                "javascript",
                "mongodb",
                "meteor",
                "publish-subscribe"
            ],
            "title": "How does the messages-count example in Meteor docs work?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>I recently solved it by placing the following script on the page. </p>\n\n<pre><code>setTimeout('window.location = 'yoururltofile.file', 5000);\n</code></pre>\n\n<p>I agree that a meta-refresh would be nicer but if it doesn't work what do you do...</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p><a href=\"http://en.wikipedia.org/wiki/SourceForge\">SourceForge</a> uses an &lt;iframe&gt; element with the src=\"\" attribute pointing to the file to download.</p>\n\n<pre><code>&lt;iframe width=\"1\" height=\"1\" frameborder=\"0\" src=\"[File location]\"&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p>(Side effect: no redirect, no JavaScript, original URL remains unchanged.)</p>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p>Be sure to serve up the file <strong>without</strong> a no-cache header! IE has issues with this, if user tries to \"open\" the download without saving first.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I <em>hate</em> when sites complicate download so much and <a href=\"http://adactio.com/journal/6022/\" rel=\"nofollow\">use hacks instead of a good old link</a>.</p>\n\n<h3>Dead simple version:</h3>\n\n<pre><code>&lt;a href=\"file.zip\"&gt;Start automatic download!&lt;/a&gt;\n</code></pre>\n\n<p>It works! In every browser!</p>\n\n<hr>\n\n<p>If you want to download a file that is usually displayed inline (such as an image) then HTML5 has a <code>download</code> attribute that forces download of the file. It also allows you to override filename (<a href=\"http://stackoverflow.com/a/216777/27009\">although there is a better way to do it</a>):</p>\n\n<pre><code>&lt;a href=\"report-generator.php\" download=\"result.xls\"&gt;Download&lt;/a&gt;\n</code></pre>\n\n<h3>Version with a \"thanks\" page:</h3>\n\n<p>If you want to display \"thanks\" after download, then use:</p>\n\n<pre><code>&lt;a href=\"file.zip\" \n   onclick=\"if (event.button==0) \n     setTimeout(function(){document.body.innerHTML='thanks!'},500)\"&gt;\n Start automatic download!\n&lt;/a&gt;\n</code></pre>\n\n<p>Function in that <code>setTimeout</code> might be more advanced and e.g. download full page via AJAX (but don't navigate away from the page \u2014\u00a0don't touch <code>window.location</code> or activate other links).   </p>\n\n<p>The point is that link to download is real, can be copied, dragged, intercepted by download accelerators, gets <code>:visited</code> color, doesn't re-download if page is left open after browser restart, etc.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>This seemed to work for me - across all browsers.</p>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt;\n    window.onload = function(){\n     document.location = 'somefile.zip';\n    }\n    &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A simple bit of jQuery solved this problem for me.</p>\n\n<pre><code>$(function() {\n   $(window).bind('load', function() {\n      $(\"div.downloadProject\").delay(1500).append('&lt;iframe width=\"0\" height=\"0\" frameborder=\"0\" src=\"[YOUR FILE SRC]\"&gt;&lt;/iframe&gt;'); \n   });\n});\n</code></pre>\n\n<p>In my HTML, I simply have</p>\n\n<pre><code>&lt;div class=\"downloadProject\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>All this does is wait a second and a half, then append the div with the iframe referring to the file that you want to download. When the iframe is updated onto the page, your browser downloads the file. Simple as that. :D</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I think this will work for you. But visitors are easy if they got something in seconds without spending more time and hence they will also again visit your site.\n<code>&lt;a href=\"file.zip\" \n   onclick=\"if (event.button==0) \n     setTimeout(function(){document.body.innerHTML='thanks!'},500)\"&gt;\n Start automatic download!\n&lt;/a&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had a similar issue and none of the above solutions worked for me. Here's my try (requires jquery):</p>\n\n<pre><code>$(function() {\n  $('a[data-auto-download]').each(function(){\n    var $this = $(this);\n    setTimeout(function() {\n      window.location = $this.attr('href');\n    }, 2000);\n  });\n});\n</code></pre>\n\n<p>Usage: Just add an attribute called <code>data-auto-download</code> to the link pointing to the download in question:</p>\n\n<pre><code>&lt;p&gt;The download should start shortly. If it doesn't, click\n&lt;a data-auto-download href=\"/your/file/url\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n</code></pre>\n\n<p>It should work in all cases.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I checked and found, it will work on button click via writing onclick event to Anchor tag or Input button</p>\n\n<pre><code>onclick='javascript:setTimeout(window.location=[File location], 1000);'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I used this, seems working and is just simple JS, no framework:</p>\n\n<pre><code>Your file should start downloading in a few seconds. \nIf downloading doesn't start automatically \n&lt;a id=\"downloadLink\" href=\"[link to your file]\"&gt;click here to get your file&lt;/a&gt;.\n\n\n&lt;script&gt; \nvar downloadTimeout = setTimeout(\n    function() {\n        window.location = document.getElementById('downloadLink').href;\n    },\n    2000\n);\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>NOTE: this starts the timeout in the moment the page is loaded.</strong></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is what I'm using in some sites (requires jQuery).:</p>\n\n<pre><code>$(document).ready(function() {\n    var downloadUrl = \"your_file_url\";\n    setTimeout(\"window.location.assign('\" + downloadUrl + \"');\", 1000);\n});\n</code></pre>\n\n<p>The file is downloaded automatically after 1 second.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How do I initialize an automatic download of a file in Internet Explorer?</p>\n\n<p>For example, in the download page, I want the download link to appear and a message: \"If you download doesn't start automatically .... etc\". The download should begin shortly after the page loads.</p>\n\n<p>In Firefox this is easy, you just need to include a meta tag in the header, <em>&lt;meta http-equiv=\"Refresh\" content=\"n;url\"></em> where n is number of seconds and <code>url</code> is the download URL. This does not work in Internet Explorer. How do I make this work in Internet Explorer browsers?</p>\n",
            "last_activity_date": 1422822119,
            "question_id": 156686,
            "score": 30,
            "tags": [
                "javascript",
                "html",
                "internet-explorer",
                "meta-tags"
            ],
            "title": "How to start automatic download of a file in Internet Explorer?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Let's work through it.</p>\n\n<p>You can't make a div editable. There's no such thing as an editable div, at least for now. So the problem is finding out what to use for editing instead. A textarea works perfectly. So the idea is to somehow get a textarea where the div currently sits.</p>\n\n<p>The question is how and from where do we get the textarea. There are various ways, but one of them is to dynamically create a textarea on the fly:</p>\n\n<pre><code>var editableText = $(\"&lt;textarea /&gt;\");\n</code></pre>\n\n<p>and replace it with the div:</p>\n\n<pre><code>$(\"#myDiv\").replaceWith(editableText);\n</code></pre>\n\n<p>The textarea is in place now. But it is empty and we have just replaced the div and lost everything. So we need to preserve the text of the div somehow. One way is to copy the text/html inside the div before replacing it:</p>\n\n<pre><code>var divHtml = $(\"#myDiv\").html(); // or text(), whatever suits.\n</code></pre>\n\n<p>Once we have the html from the div, we can populate the textarea and safely replace the div with the textarea. And set the focus inside the textarea as the user might want to start editing. Combining all the work upto this point, we get:</p>\n\n<pre><code>// save the html within the div\nvar divHtml = $(\"#myDiv\").html();\n// create a dynamic textarea\nvar editableText = $(\"&lt;textarea /&gt;\");\n// fill the textarea with the div's text\neditableText.val(divHtml);\n// replace the div with the textarea\n$(\"#myDiv\").replaceWith(editableText);\n// editableText.focus();\n</code></pre>\n\n<p>It's functional but nothing happens when a user clicks a div because we didn't setup any events. Let's wire up the events. When the user clicks any div <code>$(\"div\").click(..)</code>, we create a click handler, and do all of the above.</p>\n\n<pre><code>$(\"div\").click(function() {\n    var divHtml = $(this).html(); // notice \"this\" instead of a specific #myDiv\n    var editableText = $(\"&lt;textarea /&gt;\");\n    editableText.val(divHtml);\n    $(this).replaceWith(editableText);\n    editableText.focus();\n});\n</code></pre>\n\n<p>This is good, but we'd want a way to get our div back when a user clicks out or leaves the textarea. There is a <code>blur</code> event for form controls that is triggered when a user leaves the control. That can be used to detect when a user leaves the textarea, and replace back the  div. We do the exact reverse this time. Preserve the value of textarea, create a dynamic div, set it's html, and replace out the textarea.</p>\n\n<pre><code>$(editableText).blur(function() {\n    // Preserve the value of textarea\n    var html = $(this).val();\n    // create a dynamic div\n    var viewableText = $(\"&lt;div&gt;\");\n    // set it's html \n    viewableText.html(html);\n    // replace out the textarea\n    $(this).replaceWith(viewableText);\n});\n</code></pre>\n\n<p>Everything is great, except that this new div will no longer convert into a textarea on click. This is a newly created div, and we'll have to setup the <code>click</code> event again. We already have the entire code, but better than repeating it twice, it's better to make a function out of it.</p>\n\n<pre><code>function divClicked() {\n    var divHtml = $(this).html();\n    var editableText = $(\"&lt;textarea /&gt;\");\n    editableText.val(divHtml);\n    $(this).replaceWith(editableText);\n    editableText.focus();\n    // setup the blur event for this new textarea\n    editableText.blur(editableTextBlurred);\n})\n</code></pre>\n\n<p>Since the whole operation is two-way reversible, we'll need to do the same for the textarea. Let's convert that into a function too.</p>\n\n<pre><code>function editableTextBlurred() {\n    var html = $(this).val();\n    var viewableText = $(\"&lt;div&gt;\");\n    viewableText.html(html);\n    $(this).replaceWith(viewableText);\n    // setup the click event for this new div\n    $(viewableText).click(divClicked);\n});\n</code></pre>\n\n<hr />\n\n<p>Wiring up everything together, we have 2 functions, <code>divClicked</code>, <code>editableTextBlurred</code> and the line below triggers everything:</p>\n\n<pre><code>$(\"div\").click(divClicked);\n</code></pre>\n\n<p>Checkout this code at <a href=\"http://jsfiddle.net/GeJkU/\">http://jsfiddle.net/GeJkU/</a>. This is not the best way of writing editable divs by any means, but just one way to start and approach the solution step by step. Honestly I have learnt just as much as you in writing this long piece. Signing off, adios!</p>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p>Use <code>contenteditable=\"true\"</code> attributes for the division.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>For a <code>div</code>, you can use this HTML attribute to make it editable:</p>\n\n<pre><code>&lt;div contenteditable=\"true\"&gt;Anything inside this div will be editable!&lt;/div&gt;\n</code></pre>\n\n<p>More info here: <a href=\"http://html5demos.com/contenteditable\">http://html5demos.com/contenteditable</a></p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p><code>contenteditable</code> has some grave defects. The most damning in my view, is cross browser incompatability on Enter use. See this <a href=\"http://dev.opera.com/articles/view/rich-html-editing-in-the-browser-part-1/\" rel=\"nofollow\">article</a> for a description. In Firefox clicking Enter for a carriage return creates a new paragraph, effectively double spacing every line that isn't long enough to wrap. Very ugly.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>This is my code:</p>\n\n<pre><code>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n    \"http://www.w3.org/TR/html4/loose.dtd\"&gt; \n&lt;html&gt; \n    &lt;head&gt; \n        &lt;meta name=\"viewport\" content=\"width=device-width, user-scalable=no\"&gt; \n    &lt;/head&gt; \n&lt;body&gt; \n        &lt;style type=\"text/css\" media=\"screen\"&gt; \n\n        &lt;/style&gt; \n\n        &lt;!--&lt;div id=\"map_canvas\" style=\"width: 500px; height: 300px;background:blue;\"&gt;&lt;/div&gt;--&gt;\n\n        &lt;div class=b style=\"width: 200px; height: 200px;background:pink;position:absolute;left:500px;top:100px;\"&gt;&lt;/div&gt;\n        &lt;script src=\"jquery-1.4.2.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n        &lt;script src=\"jquery-ui-1.8rc3.custom.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\" charset=\"utf-8\"&gt; \n\n        &lt;/script&gt; \n    &lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1350655327,
            "question_id": 2441565,
            "score": 29,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How do I make a div element editable (like a textarea when I click it)?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The closest thing would be the bind function:</p>\n\n<p><a href=\"http://api.jquery.com/bind/\">http://api.jquery.com/bind/</a></p>\n\n<pre><code>$('#foo').bind('click', function() {\n  alert('User clicked on \"foo.\"');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>Not all browsers support event capturing (for example, Internet Explorer versions less than 9 don't) but all do support event bubbling, which is why it is the phase used to bind handlers to events in all cross-browser abstractions, jQuery's included.</p>\n\n<p>The nearest to what you are looking for in jQuery is using <a href=\"http://api.jquery.com/bind/\"><code>bind()</code></a> (superseded by <a href=\"http://api.jquery.com/on/\"><code>on()</code></a> in jQuery 1.7+)  or the event-specific jQuery methods (in this case, <a href=\"http://api.jquery.com/click/\"><code>click()</code></a>, which calls <code>bind()</code> internally anyway). All use the bubbling phase of a raised event.</p>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>As of jQuery 1.7, <code>.on()</code> is now the preferred method of binding events, rather than <code>.bind()</code>:</p>\n\n<p>From <a href=\"http://api.jquery.com/bind/\">http://api.jquery.com/bind/</a>:</p>\n\n<blockquote>\n  <p>As of jQuery 1.7, the .on() method is the preferred method for\n  attaching event handlers to a document. For earlier versions, the\n  .bind() method is used for attaching an event handler directly to\n  elements. Handlers are attached to the currently selected elements in\n  the jQuery object, so those elements must exist at the point the call\n  to .bind() occurs. For more flexible event binding, see the discussion\n  of event delegation in .on() or .delegate().</p>\n</blockquote>\n\n<p>The documentation page is at\n<a href=\"http://api.jquery.com/on/\">http://api.jquery.com/on/</a></p>\n",
                    "is_accepted": false,
                    "score": 70
                },
                {
                    "body": "<p>Use the <code>.on()</code> function to bind events.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here is an excellent treatment on the Mozilla Development Network (MDN) of this issue for standard JavaScript (if you do not wish to rely on jQuery or understand it better in general):</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/DOM/element.addEventListener\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/DOM/element.addEventListener</a></p>\n\n<p>Here is a discussion of event flow from a link in the above treatment:</p>\n\n<p><a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#event-flow\" rel=\"nofollow\">http://www.w3.org/TR/DOM-Level-3-Events/#event-flow</a></p>\n\n<p>Some key points are:</p>\n\n<ul>\n<li>It allows adding more than a single handler for an event</li>\n<li>It gives you finer-grained control of the phase when the listener gets activated (capturing vs. bubbling)</li>\n<li>It works on any DOM element, not just HTML elements</li>\n<li>The value of \"this\" passed to the event is not the global object (window), but the element from which the element is fired.  This is very convenient.</li>\n<li>Code for legacy IE browsers is simple and included under the heading \"Legacy Internet Explorer and attachEvent\"</li>\n<li>You can include parameters if you enclose the handler in an anonymous function</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One thing to note is that jQuery event methods do not fire/trap <code>load</code> on <code>embed</code> tags that contain SVG DOM which loads as a separate document in the <code>embed</code> tag. The only way I found to trap a <code>load</code> event on these were to use raw JavaScript.</p>\n\n<p>This will not work (I've tried on/bind/load methods):</p>\n\n<pre><code>    $img.on('load', function () {\n      console.log('FOO!');\n    });\n</code></pre>\n\n<p>However, this works:</p>\n\n<pre><code>    $img[0].addEventListener('load', function () {\n      console.log('FOO!');\n    }, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm trying to find the jQuery equivalent of this JavaScript method call:</p>\n\n<pre><code>document.addEventListener('click', select_element, true);\n</code></pre>\n\n<p>I've gotten as far as:</p>\n\n<pre><code>$(document).click(select_element);\n</code></pre>\n\n<p>but that doesn't achieve the same result, as the last parameter of the JavaScript method - a boolean that indicates whether the event handler should be executed in the capturing or bubbling phase (per my understanding from <a href=\"http://www.quirksmode.org/js/events_advanced.html\">http://www.quirksmode.org/js/events_advanced.html</a>) - is left out.</p>\n\n<p>How do I specify that parameter, or otherwise achieve the same functionality, using jQuery?</p>\n",
            "last_activity_date": 1406745054,
            "question_id": 2398099,
            "score": 98,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "javascript-events",
                "event-handling"
            ],
            "title": "jQuery equivalent of JavaScript&#39;s addEventListener method"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>The JQuery object :)</p>\n\n<p>From the JQuery doc:</p>\n\n<blockquote>\n  <p>By default, jQuery uses \"$\" as a shortcut for \"jQuery\"</p>\n</blockquote>\n\n<p>So, using <code>$(\"#id\"</code>) or <code>jQuery(\"#id\")</code> is the same</p>\n",
                    "is_accepted": false,
                    "score": 84
                },
                {
                    "body": "<p>it's short for jquery.  The object where all the jquery functionality live</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>$ is simply a function called jQuery. It is how you access all of the functionality in the jQuery lib.</p>\n\n<p>You can find it here: <a href=\"http://docs.jquery.com/%24\">http://docs.jquery.com/%24</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>As said in other answers $ is a shortcut to the jQuery function.</p>\n\n<p>Some JavaScript libraries uses $ too (example: prototype). To avoid conflict with those other libraries jQuery provides jQuery.noConflict() function. Calling this function the control of the $ variable goes back to the other library that first implemented it. Doing this to use jQuery you can't do this $('div.someClass') anymore, instead jQuery('div.someClass').</p>\n\n<p>Alternatively can do this:</p>\n\n<pre><code>jQuery.noConflict();\n\njQuery.ready(function($) {\n   // use $ for jQuery\n}\n\n//use $ for the other library\n</code></pre>\n\n<p>When writing plugins to avoid problems with the usage of noConflict you can pass 'jQuery' to a function:</p>\n\n<pre><code>function($) {\n\n//use $ writing your plugin\n\n}(jQuery)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Strange but true, you can use \"$\" as a function name in JavaScript.  It is shorthand for jQuery().  Which you can use if you want.  jQuery can be ran in compatibility mode if another library is using the $ already.  Just use jQuery.noConflict().  $ is pretty commonly used as a selector function in JS.</p>\n\n<p>In jQuery the $ function does much more than select things though.  </p>\n\n<ol>\n<li>You can pass it a selector to get a\ncollection of matching elements from the DOM.  </li>\n<li>You can pass\nit a function to run when the\ndocument is ready (similar to\nbody.onload() but better).   </li>\n<li>You can pass it a string of HTML to turn\ninto a DOM element which you can\nthen inject into the document.   </li>\n<li>You can pass it a DOM element or\nelements that you want to wrap with\nthe jQuery object.</li>\n</ol>\n\n<p>Here is the documentation: <a href=\"http://docs.jquery.com/Core\" rel=\"nofollow\">http://docs.jquery.com/Core</a></p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>It is <a href=\"http://en.wikipedia.org/wiki/Syntactic%5Fsugar\">syntactic sugar</a>. It is not specific only to jQuery, other libraries use it as well.\nYou can look for a full details article about the use of dollar sign in Javascript <a href=\"http://www.authenticsociety.com/blog/JavaScript%5FDollarSign\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>$ is just another variable, in the case of JQuery this references the function JQuery. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The $ is Syntactic Sugar like @Elzo mentioned. Nobody actually answered your question though. The $ is shorthand in jQuery for <code>window.jQuery</code> so you don't have to type it every single time.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>$ sign to define/access jQuery\n$(selector).action()</p>\n\n<p><a href=\"http://www.w3schools.com/jquery/jquery_syntax.asp\" rel=\"nofollow\">http://www.w3schools.com/jquery/jquery_syntax.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What does '$' - sign in JQuery stand for?</p>\n",
            "last_activity_date": 1413111267,
            "question_id": 1049112,
            "score": 69,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "What is the meaning of symbol $ in jQuery?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The tilde operator isn't actually part of jQuery at all - it's a bitwise NOT operator in Javascript itself.</p>\n\n<p><a href=\"http://www.joezimjs.com/javascript/great-mystery-of-the-tilde/\">http://www.joezimjs.com/javascript/great-mystery-of-the-tilde/</a></p>\n\n<p>You are getting strange numbers in your experiments because you are performing a bitwise logical operation on an integer (which, for all I know, may be stored as two's complement or something like that...)</p>\n\n<p>Edit: Here's a link to how Two's Complement represents a number in binary. I think I was right.</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Two%27s_complement\">http://en.wikipedia.org/wiki/Two%27s_complement</a></p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>The <code>~</code> operator is the bitwise complement operator. The integer result from <code>inArray()</code> is either -1, when the element is not found, or some non-negative integer.  The bitwise complement of -1 (represented in binary as all 1 bits) is zero. The bitwise-complement of any non-negative integer is always non-zero.</p>\n\n<p>Thus, <code>!!~i</code> will be <code>true</code> when integer \"i\" is a non-negative integer, and <code>false</code> when \"i\" is exactly -1.</p>\n\n<p>Note that <code>~</code> always coerces its operand to integer; that is, it forces non-integer floating point values to integer, as well as non-numeric values.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Tilde is bitwise NOT - it inverts each bit of the value. As a general rule of thumb, if you use <code>~</code> on a number, its sign will be inverted, then 1 will be subtracted.</p>\n\n<p>Thus, when you do <code>~0</code>, you get -1 (0 inverted is -0, subtract 1 is -1).</p>\n\n<p>It's essentially an elaborate, super-micro-optimised way of getting a value that's always Boolean.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>The <code>~</code> operator is the bitwise NOT operator. What this means is that it takes a number in binary form and turns all zeroes into ones and ones into zeroes.</p>\n\n<p>For instance, the number 0 in binary is <code>0000000</code>, while -1 is <code>11111111</code>. Likewise, 1 is <code>00000001</code> in binary, while -2 is <code>11111110</code>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There's a specfic reason you'll sometimes see <code>~</code> applied in front of <code>$.inArray</code>.</p>\n\n<p>Basically, </p>\n\n<pre><code>~$.inArray(\"foo\", bar)\n</code></pre>\n\n<p>is a shorter way to do</p>\n\n<pre><code>$.inArray(\"foo\", bar) !== -1\n</code></pre>\n\n<p><code>$.inArray</code> returns the index of the item in the array if the first argument is found, and it returns -1 if its not found. This means that if you're looking for a boolean of \"is this value in the array?\", you can't do a boolean comparison, since -1 is a truthy value, and when $.inArray returns 0 (a falsy value), it means its actually found in the first element of the array.</p>\n\n<p>Applying the <code>~</code> bitwise operator causes <code>-1</code> to become <code>0</code>, and causes 0 to become `-1. Thus, not finding the value in the array and applying the bitwise NOT results in a falsy value (0), and all other values will return non-0 numbers, and will represent a truthy result.</p>\n\n<pre><code>if (~$.inArray(\"foo\", [\"foo\",2,3])) {\n    // Will run\n}\n</code></pre>\n\n<p>And it'll work as intended.</p>\n",
                    "is_accepted": false,
                    "score": 82
                },
                {
                    "body": "<p><code>jQuery.inArray()</code> returns <code>-1</code> for \"not found\", whose complement (<code>~</code>) is <code>0</code>. Thus, <code>~jQuery.inArray()</code> returns a falsy value (<code>0</code>) for \"not found\", and a truthy value (a negative integer) for \"found\". <code>!!</code> will then formalise the falsy/truthy into real boolean <code>false</code>/<code>true</code>. So, <code>!!~jQuery.inArray()</code> will give <code>true</code> for \"found\" and <code>false</code> for \"not found\".</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>the conclusion from all these answers is </p>\n\n<p>The <code>~</code> is equal to this formula <code>-(N+1)</code> </p>\n\n<p><strong>SO</strong></p>\n\n<pre><code>~0   = -(0+1)   // -1\n~35  = -(35+1)  // -36 \n~-35 = -(-35+1) //34 \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>If you read the comments at the jQuery inArray page <a href=\"http://api.jquery.com/jQuery.inArray/\">here</a>, there's an interesting declaration:</p>\n\n<pre><code>!!~jQuery.inArray(elm, arr) \n</code></pre>\n\n<p>Now, I believe a double-exclamation point will convert the result to type boolean, with the value of true.  What I don't understand is what is the use of the tilde (<code>~</code>) operator in all of this?</p>\n\n<pre><code>var arr = [\"one\", \"two\", \"three\"];\nif (jQuery.inArray(\"one\", arr) &gt; -1)\n  alert(\"Found\");\n</code></pre>\n\n<p>Refactoring the if statement:</p>\n\n<pre><code>if (!!~jQuery.inArray(\"one\", arr))\n  alert(\"Found\");\n</code></pre>\n\n<p>Breakdown:</p>\n\n<pre><code>jQuery.inArray(\"one\", arr)     // 0\n~jQuery.inArray(\"one\", arr)    // -1 (why?)\n!~jQuery.inArray(\"one\", arr)   // false\n!!~jQuery.inArray(\"one\", arr)  // true\n</code></pre>\n\n<p>I also noticed if I put the tilde in front, the result is <code>-2</code>.  </p>\n\n<pre><code>~!!~jQuery.inArray(\"one\", arr) // -2\n</code></pre>\n\n<p>I don't understand the purpose of the tilde here.  Can someone please explain it or point me towards a resource?</p>\n",
            "last_activity_date": 1412122279,
            "question_id": 9316612,
            "score": 58,
            "tags": [
                "javascript",
                "jquery",
                "tilde"
            ],
            "title": "What does tilde (~) preceding jQuery object do?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>No. Browsers can only initiate WebSockets connections, not receive them. The <a href=\"http://dev.w3.org/html5/websockets/\">W3C browser API spec</a> only defines how to start an outbound connection.</p>\n\n<p>You can make an application that would both initiate and accept WebSockets connections, but browsers do not do this.</p>\n\n<p>You might look at <a href=\"http://pusherapp.com/\">Pusher App</a> which you could use to build a WebSockets application with multiple clients. The service provides up to 20 simultaneous WebSockets clients for free (you can pay for higher scaling).</p>\n\n<p><strong>Update</strong>:</p>\n\n<p>The <a href=\"http://www.webrtc.org/reference/architecture\">WebRTC</a> protocol and API is making rapid progress and allows a Data Channel to be established between two peers (you still may need a STUN/TURN server for the initial NAT traversal and setup).</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>In theory it is possible with <a href=\"http://www.html5rocks.com/en/tutorials/webrtc/basics/#toc-rtcdatachannel\">WebRTC DataChannel</a>:</p>\n\n<blockquote>\n  <p>RTCDataChannel is a WebRTC API for high performance, low latency,\n  peer-to-peer communication of arbritary data. The API is\n  simple\u2014similar to WebSocket\u2014but communication occurs directly between\n  browsers, so RTCDataChannel can be much faster than WebSocket even if\n  a relay (TURN) server is required (when 'hole punching' to cope with\n  firewalls and NATs fails).</p>\n</blockquote>\n\n<p>\"In theory\" because it isn't supported by a stable browser yet and you still need a relay server (TURN) if one of the browsers is behind a <a href=\"http://en.wikipedia.org/wiki/Network_address_translation#Methods_of_port_translation\">symmetric NAT</a>. Nevertheless, it is a really promising feature.</p>\n\n<p><strong>Update:</strong> Chrome 26 and Firefox 22 support RTCDataChannel by default and Firefox 19-21 if you enable WebRTC by setting <code>media.peerconnection.enabled</code> to true (about:config).</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>I was reading about websocket and peer 2 peer and found <a href=\"http://peerjs.com/\" rel=\"nofollow\" title=\"peerJS\">PeerJS</a>.</p>\n\n<p>I still haven't made anything though, but by the examples it looks promising.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Now days it's possible, currently only Chrome,FF and Opera support it (desktop).</p>\n\n<p>There's some libraries starting to pop up around the web right now, such as <a href=\"http://peerjs.com/\" rel=\"nofollow\">PeerJS</a> and <a href=\"https://github.com/js-platform/p2p\" rel=\"nofollow\">js-platform-p2p</a> which pretty much simplifies things.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>To clarify when I ask about browser to browser communication I mean without a server in between forwarding message.  I would like to implement something like this for a game.  If p2p in websockets isn't possible are there similar alternatives?  Any help is appreciated.  </p>\n",
            "last_activity_date": 1394008387,
            "question_id": 4118272,
            "score": 38,
            "tags": [
                "java",
                "javascript",
                "ajax",
                "flash",
                "websocket"
            ],
            "title": "Do websockets allow for p2p (browser to browser) communication?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I do not believe there is a callback-function like the one you describe. </p>\n\n<p>What is normal here is to do the alterations using some server-side language, like PHP. </p>\n\n<p>In PHP you could for instance fetch a hidden field from your form and do some changes if it is  present. </p>\n\n<p>PHP: </p>\n\n<pre><code>  $someHiddenVar = $_POST[\"hidden_field\"];\n    if (!empty($someHiddenVar)) {\n        // do something \n    }\n</code></pre>\n\n<p>One way to go about it in Jquery is to use Ajax. You could listen to submit, return false to cancel its default behaviour and use jQuery.post() instead. jQuery.post has a success-callback. </p>\n\n<pre><code>$.post(\"test.php\", $(\"#testform\").serialize(), function(data) {\n  $('.result').html(data);\n});\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/jQuery.post/\" rel=\"nofollow\">http://api.jquery.com/jQuery.post/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You'll have to do things manually with an AJAX call to the server. This will require you to override the form as well.</p>\n\n<p>But don't worry, it's a piece of cake. Here's an overview on how you'll go about working with your form:</p>\n\n<ul>\n<li>override the default submit action (thanks to the passed in event object, that has a <code>preventDefault</code> method)</li>\n<li>grab all necessary values from the form</li>\n<li>fire off an HTTP request</li>\n<li>handle the response to the request</li>\n</ul>\n\n<p>First, you'll have to cancel the form submit action like so:</p>\n\n<pre><code>$(\"#myform\").submit(function(event) {\n    // Cancels the form's submit action.\n    event.preventDefault();\n});\n</code></pre>\n\n<p>And then, grab the value of the data. Let's just assume you have one text box.</p>\n\n<pre><code>$(\"#myform\").submit(function(event) {\n    event.preventDefault();\n    var val = $(this).find('input[type=\"text\"]').val();\n});\n</code></pre>\n\n<p>And then fire off a request. Let's just assume it's a POST request.</p>\n\n<pre><code>$(\"#myform\").submit(function(event) {\n    event.preventDefault();\n    var val = $(this).find('input[type=\"text\"]').val();\n\n    // I like to use defers :)\n    deferred = $.post(\"http://somewhere.com\", { val: val });\n\n    deferred.success(function () {\n        // Do your stuff.\n    });\n\n    deferred.error(function () {\n        // Handle any errors here.\n    });\n});\n</code></pre>\n\n<p>And this should about do it.</p>\n\n<p><strong>Note 2:</strong> For parsing the form's data, it's preferable that you use a <a href=\"http://css-tricks.com/snippets/jquery/serialize-form-to-json/\">plugin</a>. It will make your life really easy, as well as provide a nice semantic that mimics an actual form submit action.</p>\n\n<p><strong>Note 2:</strong> You don't have to use defers. It's  just a personal preference. You can equally do the following, and it should work, too.</p>\n\n<pre><code>$.post(\"http://somewhere.com\", { val: val }, function () {\n    // Start partying here.\n}, function () {\n    // Handle the bad news here.\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I just did this - </p>\n\n<pre><code> $(\"#myform\").bind('ajax:complete', function() {\n\n         // tasks to do \n\n\n   });\n</code></pre>\n\n<p>And things worked perfectly .</p>\n\n<p>See <a href=\"http://api.jquery.com/ajaxComplete/\">this api documentation</a> for more specific details.</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<pre><code>$(\"#formid\").ajaxForm({ success: function(){ //to do after submit } });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I could not get the number one upvoted solution to work reliably, but have found this works.  Not sure if it's required or not, but I do not have an action or method attribute on the  tag, which ensures the POST is handled by the $.ajax function and gives you the callback option.</p>\n\n<pre><code>&lt;form id=\"form\"&gt;\n...\n&lt;button type=\"submit\"&gt;&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;script&gt;\n$(document).ready(function() {\n  $(\"#form_selector\").submit(function() {\n\n    $.ajax({\n     type: \"POST\",\n      url: \"form_handler.php\",\n      data: $(this).serialize(),\n      success: function() {\n        // callback code here\n       }\n    })\n\n  })\n})\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I did it and it worked for me to trigger on form submission</p>\n\n<pre><code>$(\"#my-form\").ajaxComplete(function() {\n            Close_Popup(); \n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For MVC here was an even easier approach.\nYou need to use the Ajax form and set the AjaxOptions</p>\n\n<pre><code>@using (Ajax.BeginForm(\"UploadTrainingMedia\", \"CreateTest\", new AjaxOptions() { HttpMethod = \"POST\", OnComplete = \"displayUploadMediaMsg\" }, new { enctype = \"multipart/form-data\", id = \"frmUploadTrainingMedia\" }))\n{ \n  ... html for form\n}\n</code></pre>\n\n<p>here is the submission code, this is in the document ready section and ties the onclick event of the button to to submit the form</p>\n\n<pre><code>$(\"#btnSubmitFileUpload\").click(function(e){\n        e.preventDefault();\n        $(\"#frmUploadTrainingMedia\").submit();\n});\n</code></pre>\n\n<p>here is the callback referenced in the AjaxOptions</p>\n\n<pre><code>function displayUploadMediaMsg(d){\n    var rslt = $.parseJSON(d.responseText);\n    if (rslt.statusCode == 200){\n        $().toastmessage(\"showSuccessToast\", rslt.status);\n    }\n    else{\n        $().toastmessage(\"showErrorToast\", rslt.status);\n    }\n}\n</code></pre>\n\n<p>in the controller method for MVC it looks like this</p>\n\n<pre><code>[HttpPost]\n[ValidateAntiForgeryToken]\npublic JsonResult UploadTrainingMedia(IEnumerable&lt;HttpPostedFileBase&gt; files)\n{\n    if (files != null)\n    {\n        foreach (var file in files)\n        {\n            // there is only one file  ... do something with it\n        }\n        return Json(new\n        {\n            statusCode = 200,\n            status = \"File uploaded\",\n            file = \"\",\n        }, \"text/html\");\n    }\n    else\n    {\n        return Json(new\n        {\n            statusCode = 400,\n            status = \"Unable to upload file\",\n            file = \"\",\n        }, \"text/html\");\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I have a simple form with remote=true. </p>\n\n<p>This form is actually on an HTML Dialog , which gets closed as soon as the Submit button is clicked.</p>\n\n<p>Now I need to make some changes on the main HTML page , after the form gets submitted successfully . </p>\n\n<p>I tried this using jQuery. But this doesnt ensure that the tasks get performed after some form of response of the form submission.</p>\n\n<pre><code>$(\"#myform\").submit(function(event) {\n\n// do the task here ..\n\n});\n</code></pre>\n\n<p>How do I attach a callback , so that my code gets executed only after the form is successfully submitted ? Is there anyway to add some .success or .complete callback to the form ?</p>\n",
            "last_activity_date": 1391719846,
            "question_id": 11534690,
            "score": 33,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "forms"
            ],
            "title": "How to do a Jquery Callback after form submit?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><a href=\"http://plugins.jquery.com/project/Timer\" rel=\"nofollow\">There's a jQuery Timer plugin</a> you may want to try</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Another modification:</p>\n\n<pre><code>function update() {\n  $.get(\"response.php\", function(data) {\n    $(\"#some_div\").html(data);\n    window.setTimeout(update, 10000);\n  });\n}\n</code></pre>\n\n<p>The difference with this is that it waits 10 seconds AFTER the ajax call is one. So really the time between refreshes is 10 seconds + length of ajax call. The benefit of this is if your server takes longer than 10 seconds to respond, you don't get two (and eventually, many) simultaneous AJAX calls happening. </p>\n\n<p>Also, if the server fails to respond, it won't keep trying. </p>\n\n<p>I've used a similar method in the past using .ajax to handle even more complex behaviour:</p>\n\n<pre><code>function update() {\n  $(\"#notice_div\").html('Loading..'); \n  $.ajax({\n    type: 'GET',\n    url: 'response.php',\n    timeout: 2000,\n    success: function(data) {\n      $(\"#some_div\").html(data);\n      $(\"#notice_div\").html(''); \n      window.setTimeout(update, 10000);\n    },\n    error: function (XMLHttpRequest, textStatus, errorThrown) {\n      $(\"#notice_div\").html('Timeout contacting server..');\n      window.setTimeout(update, 60000);\n    }\n}\n</code></pre>\n\n<p>This shows a loading message while loading (put an animated gif in there for typical \"web 2.0\" style). If the server times out (in this case takes longer than 2s) or any other kind of error happens, it shows an error, and it waits for 60 seconds before contacting the server again.</p>\n\n<p>This can be especially beneficial when doing fast updates with a larger number of users, where you don't want everyone to suddenly cripple a lagging server with requests that are all just timing out anyways.</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<pre><code>function update() {\n  $(\"#notice_div\").html('Loading..'); \n  $.ajax({\n    type: 'GET',\n    url: 'jbede.php',\n    timeout: 2000,\n    success: function(data) {\n      $(\"#some_div\").html(data);\n      $(\"#notice_div\").html(''); \n      window.setTimeout(update, 10000);\n    },\n    error: function (XMLHttpRequest, textStatus, errorThrown) {\n      $(\"#notice_div\").html('Timeout contacting server..');\n      window.setTimeout(update, 60000);\n    }\n});\n}\n$(document).ready(function() {\n    update();\n});\n</code></pre>\n\n<p>This is Better Code</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>$(document).ready(function() {\n  $.ajaxSetup({ cache: false }); // This part addresses an IE bug.  without it, IE will only load the first number and will never refresh\n  setInterval(function() {\n    $('#notice_div').load('response.php');\n  }, 3000); // the \"3000\" \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Hhow exactly do you make an auto-refreshing <code>div</code> with JavaScript (specifically, jQuery)?\nI knew about the <code>setTimeout</code> method, but is it really a good practice ? Is there a better method?</p>\n\n<pre><code>function update() {\n    $.get(\"response.php\", function(data) {\n        $(\"#some_div\").html(data);\n    });\n    window.setTimeout(\"update();\", 10000);\n}\n</code></pre>\n\n<p>Thanks before.</p>\n",
            "last_activity_date": 1409154371,
            "question_id": 220767,
            "score": 12,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Auto-refreshing div with jQuery - setTimeout or another method?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Modern browsers support <code>JSON.parse()</code>.</p>\n\n<pre><code>var arr_from_json = JSON.parse( json_string );\n</code></pre>\n\n<p>In browsers that don't, you can include <a href=\"https://github.com/douglascrockford/JSON-js/blob/master/json2.js\">the <code>json2</code> library</a>.</p>\n",
                    "is_accepted": true,
                    "score": 136
                },
                {
                    "body": "<p>The whole point of JSON is that JSON strings can be converted to native objects without doing anything. Check this <a href=\"http://www.json.org/js.html\">link</a></p>\n\n<p>You can use either eval(string) or JSON.parse(string).</p>\n\n<p>However, eval is risky. From json.org</p>\n\n<blockquote>\n  <p>The eval function is very fast.\n  However, it can compile and execute\n  any JavaScript program, so there can\n  be security issues. The use of eval is\n  indicated when the source is trusted\n  and competent. It is much safer to use\n  a JSON parser. In web applications\n  over XMLHttpRequest, communication is\n  permitted only to the same origin that\n  provide that page, so it is trusted.\n  But it might not be competent. If the\n  server is not rigorous in its JSON\n  encoding, or if it does not\n  scrupulously validate all of its\n  inputs, then it could deliver invalid\n  JSON text that could be carrying\n  dangerous script. The eval function\n  would execute the script, unleashing\n  its malice.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Do like jQuery does! (the essence)</p>\n\n<pre><code>function parseJSON(data) {\n    return window.JSON &amp;&amp; window.JSON.parse ? window.JSON.parse( data ) : (new Function(\"return \" + data))(); \n}\n// testing\nobj = parseJSON('{\"name\":\"John\"}');\nalert(obj.name);\n</code></pre>\n\n<p>This way you don't need any external library and it still works on old browsers.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong>If you paste the string in server-side into the html don't need to do nothing:</strong></p>\n\n<p>For plain java in jsp:</p>\n\n<pre><code>var jsonObj=&lt;%=jsonStringInJavaServlet%&gt;;\n</code></pre>\n\n<p>For jsp width struts:</p>\n\n<pre><code>var jsonObj=&lt;s:property value=\"jsonStringInJavaServlet\" escape=\"false\" escapeHtml=\"false\"/&gt;;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>TO collect all item  of an array and return a json object</p>\n\n<pre><code>collectData: function (arrayElements) {\n\n        var main = [];\n\n        for (var i = 0; i &lt; arrayElements.length; i++) {\n            var data = {};\n            this.e = arrayElements[i];            \n            data.text = arrayElements[i].text;\n            data.val = arrayElements[i].value;\n            main[i] = data;\n        }\n        return main;\n    },\n</code></pre>\n\n<p>TO parse the same data we go through like this </p>\n\n<pre><code>dummyParse: function (json) {       \n        var o = JSON.parse(json); //conerted the string into JSON object        \n        $.each(o, function () {\n            inner = this;\n            $.each(inner, function (index) {\n                alert(this.text)\n            });\n        });\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a string at a java server application that is accessed using AJAX. It looks something like the following.</p>\n\n<pre><code>var json = [{\n    \"adjacencies\": [\n        {\n          \"nodeTo\": \"graphnode2\",\n          \"nodeFrom\": \"graphnode1\",\n          \"data\": {\n            \"$color\": \"#557EAA\"\n          }\n        }\n    ],\n    \"data\": {\n      \"$color\": \"#EBB056\",\n      \"$type\": \"triangle\",\n      \"$dim\": 9\n    },\n    \"id\": \"graphnode1\",\n    \"name\": \"graphnode1\"\n},{\n    \"adjacencies\": [],\n    \"data\": {\n      \"$color\": \"#EBB056\",\n      \"$type\": \"triangle\",\n      \"$dim\": 9\n    },\n    \"id\": \"graphnode2\",\n    \"name\": \"graphnode2\"\n}];\n</code></pre>\n\n<p>When the string gets pulled over, is there an easy way to turn this into a living Javascript object (or array)? Or do I have to manually split the string and build my object manually?</p>\n",
            "last_activity_date": 1378970666,
            "question_id": 6487167,
            "score": 86,
            "tags": [
                "javascript",
                "json",
                "deserialization"
            ],
            "title": "deserialize from json to javascript object"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Firefox would be optimal.</p>\n</blockquote>\n\n<p>If you can live with Internet Explorer, you may be able to use an .hta application</p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ms536496%28VS.85%29.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/ms536496(VS.85).aspx</a></p>\n\n<p>(This is one of the ways the Selenium test automation tool deals with the issue)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Make a page on your local server that calls the remote server and answer the same as the remote server.</p>\n\n<p>Example, javascript calls local server for a JSON. The local server makes the call to the remote server for that JSON. The local server receives the JSON from the remote server and send it to the javascript.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>All of the given answers are good ones when it comes to getting around the same origin policy in production.</p>\n\n<p>For development, there is no convenient way to \"disable\" this security check.  There are workarounds (see other answers) or hacks (you could use Greasemonkey to wrap up the JavaScript and use their GM_xmlhttprequest as a temporary measure), but no way to actually \"turn it off\" as you describe.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can also redirect a local port to the remote server and port via ssh.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I have no real experience with this, but FireFox 3.5 allows Cross-Site JS according to the <a href=\"http://dev.w3.org/2006/waf/access-control/\" rel=\"nofollow\">W3C Cross-Origin Resource Sharing Draft</a>.</p>\n\n<p>See: <a href=\"https://developer.mozilla.org/En/HTTP%5Faccess%5Fcontrol\" rel=\"nofollow\">https://developer.mozilla.org/En/HTTP_access_control</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>UPDATE 6/2012: This used to work at the time of the writing, but obviously no more. Sorry.</strong></p>\n\n<p>In Firefox (might apply to other Gecko-based browsers as well) you can use the following JavaScript snippet to allow cross-domain calls:</p>\n\n<pre><code>if (navigator.userAgent.indexOf(\"Firefox\") != -1) {\n    try {\n        netscape.security.PrivilegeManager.enablePrivilege(\"UniversalBrowserRead\");\n    } \n    catch (e) {\n        alert(\"Permission UniversalBrowserRead denied -- not running Mozilla?\");\n    }\n}\n</code></pre>\n\n<p>It looks like there's <a href=\"https://code.google.com/p/chromium/issues/detail?id=6449\">an issue</a> created in the Chromium issue tracker for achieving the same functionality, so you could try starting Chrome with the argument <code>--disable-web-security</code>. I don't know which builds this works on exactly, but at least Nokia's <a href=\"http://developer.symbian.org/wiki/index.php/Wrttools\">WRT Tools</a> comes with a Chrome installation that does in fact allow loading content from other sites.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Unfortunately, using the following:</p>\n\n<pre><code>netscape.security.PrivilegeManager.enablePrivilege(\"UniversalBrowserRead\");\n</code></pre>\n\n<p>has been disabled in Firefox 5.</p>\n\n<p><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=667312\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=667312 </a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I created a <a href=\"https://addons.mozilla.org/en-US/firefox/addon/forcecors/\">Firefox extension</a> that adds the <a href=\"http://www.w3.org/TR/cors/\">CORS</a> headers to any HTTP response.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>Using the Chromium 13.07, you can start it with security disabled:</p>\n\n<p>/usr/bin/chromium-browser --disable-web-security</p>\n\n<p>That's on Ubuntu 11, but change the location as your system.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want to develop JavaScript on my Windows machine. Do you know a browser where I can turn off <em>Same Origin Policy</em> so I can develop locally? Firefox would be optimal.</p>\n\n<p>Or if you know a proxy I could use for a SOAP/WSDL site it would be great too.</p>\n\n<p>I am trying to work with the <a href=\"http://www.codeplex.com/JavaScriptSoapClient\">JavaSCript SOAP Client</a>.</p>\n",
            "last_activity_date": 1361271181,
            "question_id": 330427,
            "score": 31,
            "tags": [
                "javascript",
                "soap",
                "wsdl",
                "same-origin-policy"
            ],
            "title": "Can I disable SOP (Same Origin Policy) on any browser for development?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>First do a loop using a filter that will return only unique teams, and then a nested loop that returns all players per current team:</p>\n\n<p><a href=\"http://jsfiddle.net/plantface/L6cQN/\">http://jsfiddle.net/plantface/L6cQN/</a></p>\n\n<p>html:</p>\n\n<pre><code>&lt;div ng-app ng-controller=\"Main\"&gt;\n    &lt;div ng-repeat=\"playerPerTeam in playersToFilter() | filter:filterTeams\"&gt;\n        &lt;b&gt;{{playerPerTeam.team}}&lt;/b&gt;\n        &lt;li ng-repeat=\"player in players | filter:{team: playerPerTeam.team}\"&gt;{{player.name}}&lt;/li&gt;        \n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>script:</p>\n\n<pre><code>function Main($scope) {\n    $scope.players = [{name: 'Gene', team: 'team alpha'},\n                    {name: 'George', team: 'team beta'},\n                    {name: 'Steve', team: 'team gamma'},\n                    {name: 'Paula', team: 'team beta'},\n                    {name: 'Scruath of the 5th sector', team: 'team gamma'}];\n\n    var indexedTeams = [];\n\n    // this will reset the list of indexed teams each time the list is rendered again\n    $scope.playersToFilter = function() {\n        indexedTeams = [];\n        return $scope.players;\n    }\n\n    $scope.filterTeams = function(player) {\n        var teamIsNew = indexedTeams.indexOf(player.team) == -1;\n        if (teamIsNew) {\n            indexedTeams.push(player.team);\n        }\n        return teamIsNew;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I originally used Plantface's answer, but I didn't like how the syntax looked in my view.</p>\n\n<p>I reworked it to use <a href=\"http://docs.angularjs.org/api/ng.%24q\">$q.defer</a> to post-process the data and return a list on unique teams, which is then uses as the filter.</p>\n\n<p><a href=\"http://plnkr.co/edit/waWv1donzEMdsNMlMHBa?p=preview\">http://plnkr.co/edit/waWv1donzEMdsNMlMHBa?p=preview</a></p>\n\n<h3>View</h3>\n\n<pre><code>&lt;ul&gt;\n  &lt;li ng-repeat=\"team in teams\"&gt;{{team}}\n    &lt;ul&gt;\n      &lt;li ng-repeat=\"player in players | filter: {team: team}\"&gt;{{player.name}}&lt;/li&gt; \n    &lt;/ul&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<h3>Controller</h3>\n\n<pre><code>app.controller('MainCtrl', function($scope, $q) {\n\n  $scope.players = []; // omitted from SO for brevity\n\n  // create a deferred object to be resolved later\n  var teamsDeferred = $q.defer();\n\n  // return a promise. The promise says, \"I promise that I'll give you your\n  // data as soon as I have it (which is when I am resolved)\".\n  $scope.teams = teamsDeferred.promise;\n\n  // create a list of unique teams. unique() definition omitted from SO for brevity\n  var uniqueTeams = unique($scope.players, 'team');\n\n  // resolve the deferred object with the unique teams\n  // this will trigger an update on the view\n  teamsDeferred.resolve(uniqueTeams);\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Both answers were good so I moved them in to a directive so that it is reusable and a second scope variable doesn't have to be defined.</p>\n\n<p><a href=\"http://jsfiddle.net/S3vaj/1/\">Here is the fiddle</a> if you want to see it implemented</p>\n\n<p>Below is the directive:</p>\n\n<pre><code>var uniqueItems = function (data, key) {\n    var result = [];\n    for (var i = 0; i &lt; data.length; i++) {\n        var value = data[i][key];\n        if (result.indexOf(value) == -1) {\n            result.push(value);\n        }\n    }\n    return result;\n};\n\nmyApp.filter('groupBy',\n            function () {\n                return function (collection, key) {\n                    if (collection === null) return;\n                    return uniqueItems(collection, key);\n        };\n    });\n</code></pre>\n\n<p>Then it can be used as follows:</p>\n\n<pre><code>&lt;div ng-repeat=\"team in players|groupBy:'team'\"&gt;\n    &lt;b&gt;{{team}}&lt;/b&gt;\n    &lt;li ng-repeat=\"player in players | filter: {team: team}\"&gt;{{player.name}}&lt;/li&gt;        \n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>In addition to the accepted answers above I created a generic 'groupBy' filter using the underscore.js library.</p>\n\n<p>JSFiddle (updated):\n<a href=\"http://jsfiddle.net/TD7t3/\">http://jsfiddle.net/TD7t3/</a></p>\n\n<p><strong>The filter</strong></p>\n\n<pre><code>app.filter('groupBy', function() {\n    return _.memoize(function(items, field) {\n            return _.groupBy(items, field);\n        }\n    );\n});\n</code></pre>\n\n<p>Note the 'memoize' call. This underscore method caches the result of the function and stops angular from evaluating the filter expression every time, thus preventing angular from reaching the digest iterations limit.</p>\n\n<p><strong>The html</strong></p>\n\n<pre><code>&lt;ul&gt;\n    &lt;li ng-repeat=\"(team, players) in teamPlayers | groupBy:'team'\"&gt;\n        {{team}}\n        &lt;ul&gt;\n            &lt;li ng-repeat=\"player in players\"&gt;\n                {{player.name}}\n            &lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>We apply our 'groupBy' filter on the teamPlayers scope variable, on the 'team' property. Our ng-repeat receives a combination of (key, values[]) that we can use in our following iterations.</p>\n\n<p><strong>Update June 11th 2014</strong>\nI expanded the group by filter to account for the use of expressions as the key (eg nested variables). The angular parse service comes in quite handy for this:</p>\n\n<p><strong>The filter (with expression support)</strong></p>\n\n<pre><code>app.filter('groupBy', function($parse) {\n    return _.memoize(function(items, field) {\n        var getter = $parse(field);\n        return _.groupBy(items, function(item) {\n            return getter(item);\n        });\n    });\n});\n</code></pre>\n\n<p><strong>The controller (with nested objects)</strong></p>\n\n<pre><code>app.controller('homeCtrl', function($scope) {\n    var teamAlpha = {name: 'team alpha'};\n    var teamBeta = {name: 'team beta'};\n    var teamGamma = {name: 'team gamma'};\n\n    $scope.teamPlayers = [{name: 'Gene', team: teamAlpha},\n                      {name: 'George', team: teamBeta},\n                      {name: 'Steve', team: teamGamma},\n                      {name: 'Paula', team: teamBeta},\n                      {name: 'Scruath of the 5th sector', team: teamGamma}];\n});\n</code></pre>\n\n<p><strong>The html (with sortBy expression)</strong></p>\n\n<pre><code>&lt;li ng-repeat=\"(team, players) in teamPlayers | groupBy:'team.name'\"&gt;\n    {{team}}\n    &lt;ul&gt;\n        &lt;li ng-repeat=\"player in players\"&gt;\n            {{player.name}}\n        &lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/li&gt;\n</code></pre>\n\n<p>JSFiddle:\n<a href=\"http://jsfiddle.net/k7fgB/2/\">http://jsfiddle.net/k7fgB/2/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You can use groupBy of <a href=\"https://github.com/a8m/angular-filter\">angular.filter</a> module.<br/>\nso you can do something like this:</p>\n\n<p><strong>JS:</strong></p>\n\n<pre><code>$scope.players = [\n  {name: 'Gene', team: 'alpha'},\n  {name: 'George', team: 'beta'},\n  {name: 'Steve', team: 'gamma'},\n  {name: 'Paula', team: 'beta'},\n  {name: 'Scruath', team: 'gamma'}\n];\n</code></pre>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;ul ng-repeat=\"(key, value) in players | groupBy: 'team'\"&gt;\n  Group name: {{ key }}\n  &lt;li ng-repeat=\"player in value\"&gt;\n    player: {{ player.name }} \n  &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p><strong>RESULT:</strong><br/>\n  Group name: alpha<br/>\n    * player: Gene<br/>\n  Group name: beta<br/>\n    * player: George<br/>\n    * player: Paula<br/>\n  Group name: gamma<br/>\n    * player: Steve<br/>\n    * player: Scruath<br/></p>\n\n<p><strong>UPDATE:</strong> <a href=\"http://jsbin.com/weyov/45/edit?html,js,output\">jsbin</a></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<h1>Update</h1>\n\n<p>I initially wrote this answer because the old version of the solution suggested by Ariel M. <a href=\"http://plnkr.co/edit/Mo4PdOd3s0VQlhc68VvH?p=preview\" rel=\"nofollow\">when combined with other <code>$filter</code>s</a> triggered an <a href=\"https://docs.angularjs.org/error/$rootScope/infdig\" rel=\"nofollow\">\"<em>Infite $diggest Loop Error</em>\" (<code>infdig</code>)</a>. Fortunately this issue has been solved in the latest version of the <a href=\"https://github.com/a8m/angular-filter\" rel=\"nofollow\">angular.filter</a>. </p>\n\n<p>I suggested the following implementation, <a href=\"http://plnkr.co/edit/Trr3dIEplKxODk4WpqTr?p=preview\" rel=\"nofollow\">that didn't have that issue</a>:</p>\n\n<pre><code>angular.module(\"sbrpr.filters\", [])\n.filter('groupBy', function () {\n  var results={};\n    return function (data, key) {\n        if (!(data &amp;&amp; key)) return;\n        var result;\n        if(!this.$id){\n            result={};\n        }else{\n            var scopeId = this.$id;\n            if(!results[scopeId]){\n                results[scopeId]={};\n                this.$on(\"$destroy\", function() {\n                    delete results[scopeId];\n                });\n            }\n            result = results[scopeId];\n        }\n\n        for(var groupKey in result)\n          result[groupKey].splice(0,result[groupKey].length);\n\n        for (var i=0; i&lt;data.length; i++) {\n            if (!result[data[i][key]])\n                result[data[i][key]]=[];\n            result[data[i][key]].push(data[i]);\n        }\n\n        var keys = Object.keys(result);\n        for(var k=0; k&lt;keys.length; k++){\n          if(result[keys[k]].length===0)\n            delete result[keys[k]];\n        }\n        return result;\n    };\n});\n</code></pre>\n\n<p>However, this implementation will only work with versions prior to Angular 1.3. (I will update this answer shortly providing a solution that works with all versions.)</p>\n\n<p>I've actually <a href=\"http://sobrepere.com/blog/2014/10/14/creating-groupby-filter-angularjs/\" rel=\"nofollow\">wrote a post about the steps that I took to develop this <code>$filter</code>, the problems that I encountered and the things that I learned from it</a>. </p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I have a list of players which belong to a group each. How can I use a filter to list the users per group?</p>\n\n<pre><code>[{name: 'Gene', team: 'team alpha'},\n {name: 'George', team: 'team beta'},\n {name: 'Steve', team: 'team gamma'},\n {name: 'Paula', team: 'team beta'},\n {name: 'Scruath of the 5th sector', team: 'team gamma'}];\n</code></pre>\n\n<p>I'm looking for this result:</p>\n\n<ul>\n<li>team alpha\n<ul>\n<li>Gene</li>\n</ul></li>\n<li>team beta\n<ul>\n<li>George</li>\n<li>Paula</li>\n</ul></li>\n<li>team gamma\n<ul>\n<li>Steve</li>\n<li>Scruath of the 5th sector</li>\n</ul></li>\n</ul>\n",
            "last_activity_date": 1416452751,
            "question_id": 14800862,
            "score": 28,
            "tags": [
                "javascript",
                "filter",
                "angularjs",
                "grouping"
            ],
            "title": "How can I group data with an Angular filter?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The <a href=\"https://developers.google.com/youtube/iframe_api_reference\">YouTube Frame API</a> <em>does</em> support <strong>existing frames</strong>. To improve the usage, I have created some helper functions. Have a look at the code + comments below and the demo: <a href=\"http://jsfiddle.net/YzvXa/197\">http://jsfiddle.net/YzvXa/197</a></p>\n\n<p>To bind functions to existent frames, you <strong>have to</strong> pass an ID reference to the frame. In your case, the frame is contained within a container with <code>id=\"tab2\"</code>. I have defined a custom function for an easier implementation:</p>\n\n<pre><code>function getFrameID(id){\n    var elem = document.getElementById(id);\n    if (elem) {\n        if(/^iframe$/i.test(elem.tagName)) return id; //Frame, OK\n        // else: Look for frame\n        var elems = elem.getElementsByTagName(\"iframe\");\n        if (!elems.length) return null; //No iframe found, FAILURE\n        for (var i=0; i&lt;elems.length; i++) {\n           if (/^https?:\\/\\/(?:www\\.)?youtube(?:-nocookie)?\\.com(\\/|$)/i.test(elems[i].src)) break;\n        }\n        elem = elems[i]; //The only, or the best iFrame\n        if (elem.id) return elem.id; //Existing ID, return it\n        // else: Create a new ID\n        do { //Keep postfixing `-frame` until the ID is unique\n            id += \"-frame\";\n        } while (document.getElementById(id));\n        elem.id = id;\n        return id;\n    }\n    // If no element, return null.\n    return null;\n}\n\n// Define YT_ready function.\nvar YT_ready = (function() {\n    var onReady_funcs = [], api_isReady = false;\n    /* @param func function     Function to execute on ready\n     * @param func Boolean      If true, all qeued functions are executed\n     * @param b_before Boolean  If true, the func will added to the first\n                                 position in the queue*/\n    return function(func, b_before) {\n        if (func === true) {\n            api_isReady = true;\n            while (onReady_funcs.length) {\n                // Removes the first func from the array, and execute func\n                onReady_funcs.shift()();\n            }\n        } else if (typeof func == \"function\") {\n            if (api_isReady) func();\n            else onReady_funcs[b_before?\"unshift\":\"push\"](func); \n        }\n    }\n})();\n// This function will be called when the API is fully loaded\nfunction onYouTubePlayerAPIReady() {YT_ready(true)}\n\n// Load YouTube Frame API\n(function() { // Closure, to not leak to the scope\n  var s = document.createElement(\"script\");\n  s.src = (location.protocol == 'https:' ? 'https' : 'http') + \"://www.youtube.com/player_api\";\n  var before = document.getElementsByTagName(\"script\")[0];\n  before.parentNode.insertBefore(s, before);\n})();\n</code></pre>\n\n<p><code>//</code> Previously, core functions were defined. Look ahead for the implementation:</p>\n\n<pre><code>var player; //Define a player object, to enable later function calls, without\n            // having to create a new class instance again.\n\n// Add function to execute when the API is ready\nYT_ready(function(){\n    var frameID = getFrameID(\"tabs2\");\n    if (frameID) { //If the frame exists\n        player = new YT.Player(frameID, {\n            events: {\n                \"onStateChange\": stopCycle\n            }\n        });\n    }\n});\n\n// Example: function stopCycle, bound to onStateChange\nfunction stopCycle(event) {\n    alert(\"onStateChange has fired!\\nNew state:\" + event.data);\n}\n</code></pre>\n\n<p>If you want to invoke additional functions at a later point, e.g. mute a video, use:</p>\n\n<pre><code>player.mute();\n</code></pre>\n\n<ul>\n<li>If you only have to call <strong>simple single-direction</strong> functions, it's not necessary to use this code. Instead, use the function <code>callPlayer</code> as defined at <strong><a href=\"http://stackoverflow.com/questions/7443578/youtube-iframe-api-control-a-iframe-player-thats-already-in-the-html#7513356\">this answer</a></strong>.</li>\n<li>If you want to implement this feature for <strong>multiple frames</strong>, simultaneously, have a look at <strong><a href=\"http://stackoverflow.com/questions/8948403/youtube-api-target-existing-iframe#8949636\">this answer</a></strong>. <em>Also includes a detailed explanation of <code>getFrameID</code> and <code>YT_ready</code></em>.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>You can use the <a href=\"http://plugins.jquery.com/project/tubeplayer\" rel=\"nofollow\">tubeplayer</a> plugin, it comes with lots of events to listen for.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since yesterday this isn't working any more. The onStateChange isn't fired.\nJeffrey posted an quick fix but I am not able to update the above answer</p>\n\n<p>More info about this issue <a href=\"https://code.google.com/p/gdata-issues/issues/detail?id=4706\" rel=\"nofollow\">https://code.google.com/p/gdata-issues/issues/detail?id=4706</a></p>\n\n<p>Got it working :-) with the fix</p>\n\n<p>Add the following function</p>\n\n<pre><code>function onReady() {\n    player.addEventListener('onStateChange', function(e) {\n        console.log('State is:', e.data);\n    });\n}\n</code></pre>\n\n<p>and before \"onStateChange\": stopCycle add \"onReady\": onReady,</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a slider which includes 4 youtube videos that are embedded via the iframe embed code</p>\n\n<p><code>http://www.youtube.com/embed/'.$i.'?enablejsapi=1</code></p>\n\n<p>I'm trying to make the <code>onStateChange</code> event of any of the four videos call a function I have called <code>stopCycle()</code> which will stop the slider when the video begins to play. The iframes do not have an id. I'm not sure about how to capture this event properly and could use any advice as to what i'm doing wrong.</p>\n\n<pre><code>&lt;script charset=\"utf-8\" type=\"text/javascript\" src=\"http://www.youtube.com/player_api\"&gt;&lt;/script&gt;\n\nvar playerObj = document.getElementById(\"tab2\"); // the container for 1 of the 4 iframes\n\nplayerObj.addEventListener(\"onStateChange\", \"stopCycle\");\n\nfunction stopCycle(event) {\n    alert('Stopped!');\n}\n</code></pre>\n",
            "last_activity_date": 1371126987,
            "question_id": 7988476,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "youtube",
                "youtube-api"
            ],
            "title": "Listening for Youtube Event in JavaScript or jQuery"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Get the keys in the first <code>for</code> loop, sort it, use the sorted result in the 2nd <code>for</code> loop.</p>\n\n<pre><code>var a = new Array();\na['b'] = 1;\na['z'] = 1;\na['a'] = 1;\n\nvar b = [];\nfor (k in a) b.push(k);\nb.sort();\nfor (var i = 0; i &lt; b.length; ++i) alert(b[i]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You cannot iterate over them directly, but you can find all the keys and then just sort them.</p>\n\n<pre><code>var a = new Array();\na['b'] = 1;\na['z'] = 1;\na['a'] = 1;    \n\nfunction keys(obj)\n{\n    var keys = [];\n\n    for(var key in obj)\n    {\n        if(obj.hasOwnProperty(key))\n        {\n            keys.push(key);\n        }\n    }\n\n    return keys;\n}\n\nkeys(a).sort(); // [\"a\", \"b\", \"z\"]\n</code></pre>\n\n<p>However there is no need to make the variable 'a' an array.  You are really just using it as an object and should create it like this:</p>\n\n<pre><code>var a = {};\na[\"key\"] = \"value\";\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 102
                },
                {
                    "body": "<p>you could even prototype it onto object:</p>\n\n<pre><code>Object.prototype.iterateSorted = function(worker)\n{\n    var keys = [];\n    for (var key in this)\n    {\n        if (this.hasOwnProperty(key))\n            keys.push(key);\n    }\n    keys.sort();\n\n    for (var i = 0; i &lt; keys.length; i++)\n    {\n        worker(this[ keys[i] ]);\n    }\n}\n</code></pre>\n\n<p>and the usage:</p>\n\n<pre><code>var myObj = { a:1, b:2 };\nmyObj.iterateSorted(function(value)\n{\n    alert(value);\n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>There's no concise way to directly manipulate the \"keys\" of a Javascript object. It's not really designed for that. Do you have the freedom to put your data in something better than a regular object (or an Array, as your sample code suggests)?</p>\n\n<p>If so, and if your question could be rephrased as \"What dictionary-like object should I use if I want to iterate over the keys in sorted order?\" then you might develop an object like this:</p>\n\n<pre><code>var a = {\n  keys : new Array(),\n  hash : new Object(),\n  set : function(key, value) {\n    if (typeof(this.hash[key]) == \"undefined\") { this.keys.push(key); }\n    this.hash[key] = value;\n  },\n  get : function(key) {\n    return this.hash[key];\n  },\n  getSortedKeys : function() {\n    this.keys.sort();\n    return this.keys;\n  }\n};\n\n// sample use\na.set('b',1);\na.set('z',1);\na.set('a',1);\nvar sortedKeys = a.getSortedKeys();\nfor (var i in sortedKeys) { print(sortedKeys[i]); }\n</code></pre>\n\n<p>If you have no control over the fact that the data is in a regular object, this utility would convert the regular object to your fully-functional dictionary:</p>\n\n<pre><code>a.importObject = function(object) {\n  for (var i in object) { this.set(i, object); }\n};\n</code></pre>\n\n<p>This was a object definition (instead of a reusable constructor function) for simplicity; edit at will.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var a = {\n        b:1,\n        z:1,\n        a:1\n    }; // your JS Object\n    var keys = [];\n    for (key in a) {\n        keys.push(key);\n    }\n    keys.sort();\n    var i = 0;\n    var keyslen = keys.length;\n    var str = '';\n    //SORTED KEY ITERATION\n    while (i &lt; keyslen) {\n        str += keys[i] + '=&gt;' + a[keys[i]] + '\\n';\n        ++i;\n    }\n    alert(str);\n    /*RESULT:\n    a=&gt;1\n    b=&gt;1\n    z=&gt;1\n    */\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I agree with <a href=\"http://stackoverflow.com/questions/890807/iterate-over-a-javascript-associative-array-in-sorted-order/891017#891017\">Swingley's answer</a>, and I think it is an important point a lot of these more elaborate solutions are missing. If you are only concerned with the keys in the associative array and all the values are '1', then simply store the 'keys' as values in an array.</p>\n\n<p>Instead of:</p>\n\n<pre><code>var a = { b:1, z:1, a:1 };\n// relatively elaborate code to retrieve the keys and sort them\n</code></pre>\n\n<p>Use:</p>\n\n<pre><code>var a = [ 'b', 'z', 'a' ];\nalert(a.sort());\n</code></pre>\n\n<p>The one drawback to this is that you can not determine whether a specific key is set as easily. See <a href=\"http://stackoverflow.com/questions/890782/javascript-function-inarray/890798#890798\">this answer</a> to <a href=\"http://stackoverflow.com/questions/890782\">javascript function inArray</a> for an answer to that problem. One issue with the solution presented is that <code>a.hasValue('key')</code> is going to be slightly slower than <code>a['key']</code>. That may or may not matter in your code.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In ECMAscript 5 compatible browsers (basically every browser except IE6, 7 and 8) you can use the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys\">Object.keys</a> built-in method like this:</p>\n\n<pre><code>var sorted_keys = Object.keys(a).sort()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 64
                },
                {
                    "body": "<p>You can use the <a href=\"http://underscorejs.org/#keys\" rel=\"nofollow\"><code>keys</code></a> function from the <a href=\"http://underscorejs.org/\" rel=\"nofollow\">underscore.js</a> library to get the keys, then the <code>sort()</code> array method to sort them:</p>\n\n<pre><code>var sortedKeys = _.keys(dict).sort();\n</code></pre>\n\n<p>The <code>keys</code> function in the underscore's source code:</p>\n\n<pre><code>// Retrieve the names of an object's properties.\n// Delegates to **ECMAScript 5**'s native `Object.keys`\n_.keys = nativeKeys || function(obj) {\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    return keys;\n};    \n\n// Shortcut function for checking if an object has a given property directly\n// on itself (in other words, not on a prototype).\n_.has = function(obj, key) {\n    return hasOwnProperty.call(obj, key);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There exists this library with this characteristics:</p>\n\n<p><a href=\"https://www.pastecoin.com/lrqdQP24RGkx\" rel=\"nofollow\">https://www.pastecoin.com/lrqdQP24RGkx</a></p>\n\n<p>/*  Description:</p>\n\n<pre><code>This script can be used to generate an ordered keys object that contains:\n\n    - An array storing keys in an alphabetic order (for text type keys) or ascending numerical order (for int and float type keys).\n\n    - Methods to add, find and remove keys in the list, keeping them in the right order.\n\n    - An array storing variables or objects associated one-by-one with the ordered keys array elements.\n\n    - Methods to store and retrieve data associated with each key.\n\nTo use in your code, include this tag in your page html &lt;head&gt;\n(assuming the file is in the same folder the page is and is called ksorderedLists.js)\n\n    &lt;script type=\"text/javascript\" src=\"ksorderedLists.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>*/</p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>Let's say I have a Javascript associative array (a.k.a. hash, a.k.a. dictionary):</p>\n\n<pre><code>var a = new Array();\na['b'] = 1;\na['z'] = 1;\na['a'] = 1;\n</code></pre>\n\n<p>How can I iterate over the keys in sorted order? If it helps simplify things, I don't even need the values (they're all just the number 1).</p>\n",
            "last_activity_date": 1423423649,
            "question_id": 890807,
            "score": 75,
            "tags": [
                "javascript"
            ],
            "title": "Iterate over a Javascript associative array in sorted order"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Like this:</p>\n\n<pre><code>$(document).ready(function ()\n{\n    document.title = \"Hello World!\";\n});\n</code></pre>\n\n<p>Be sure to set a default-title if you want your site to be properly indexed by search-engines.</p>\n\n<p>A little tip:</p>\n\n<pre><code>$(function ()\n{\n    // this is a shorthand for the whole document-ready thing\n    // In my opinion, it's more readable \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\n$(document).ready(function() {\n\n    $(this).attr(\"title\", \"sometitle\");\n\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>The following should work but it wouldn't be SEO compatible. It's best to put the title in the title tag.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    $(document).ready(function() {\n        document.title = 'blah';\n    });\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 188
                },
                {
                    "body": "<blockquote>\n  <p>I am using some nested layouts in Ruby on Rails, and in one of the layouts i have a need to read in a string from a div and set that as the title of the document.</p>\n</blockquote>\n\n<p>The correct way to do this is on the server side.</p>\n\n<p>In your layout, there at some point will be some code which <em>puts the text in the div</em>. Make this code also set some instance variable such as <code>@page_title</code>, and then in your outer layout have it do <code>&lt;%= @page_title || 'Default Title' %&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Do not use <code>$('title').text('hi')</code>, because IE doesn't support it.</p>\n\n<p>It is better to use <code>document.title = 'new title';</code></p>\n\n<p>(sorry for my english ;-)</p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>This works fine in all browser...</p>\n\n<pre><code>$(document).attr(\"title\", \"New Title\");\n</code></pre>\n\n<p>Works in IE too</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>If you have got a serverside script get_title.php that echoes the current title session this works fine in jQuery:</p>\n\n<pre><code>$.get('get_title.php',function(*respons*){\n    title=*respons* + 'whatever you want'   \n    $(document).attr('title',title)\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>document.title was not working for me.</p>\n\n<p>Here is another way to do it using JQuery</p>\n\n<pre><code>$('html head').find('title').text(\"My New Page Title\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am using some nested layouts in Ruby on Rails, and in one of the layouts i have a need to read in a string from a div and set that as the title of the document. What is correct way (if any) to set the title of the document?</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n$(document).ready(function() {\n\n    // ???\n\n});\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1401353558,
            "question_id": 180103,
            "score": 75,
            "tags": [
                "javascript",
                "jquery",
                "ruby-on-rails"
            ],
            "title": "jQuery: how to change title of document during .ready()?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You want <code>$.param()</code>: <a href=\"http://api.jquery.com/jQuery.param/\">http://api.jquery.com/jQuery.param/</a></p>\n\n<p>Specifically, you want this:</p>\n\n<pre><code>var data = { one: 'first', two: 'second' };\nvar result = decodeURIComponent($.param(data));\n</code></pre>\n\n<p>The decodeURIComponent function searches the given string for escape sequences and replaces them with the actual character.</p>\n\n<p>When given something like this:</p>\n\n<pre><code>{a: 1, b : 23, c : \"te!@#st\"}\n</code></pre>\n\n<p><code>$.param</code> will return this:</p>\n\n<pre><code>a=1&amp;b=23&amp;c=te!%40%23st\n</code></pre>\n\n<p>If you don't want the escape sequences, <code>decodeURIComponent</code> is used. The result, using my original suggestion, is this:</p>\n\n<pre><code>a=1&amp;b=23&amp;c=te!@#st\n</code></pre>\n\n<p>Pure <code>$.param</code> is safe for when you don't have characters such as + and ? in your data. Otherwise, use the second version. I hope that has clarified things.</p>\n",
                    "is_accepted": true,
                    "score": 122
                },
                {
                    "body": "<p>Alternatively YUI has <a href=\"http://yuilibrary.com/yui/docs/api/classes/QueryString.html#method_stringify\" rel=\"nofollow\">http://yuilibrary.com/yui/docs/api/classes/QueryString.html#method_stringify</a>.</p>\n\n<p>For example:</p>\n\n<pre><code>var data = { one: 'first', two: 'second' };\nvar result = Y.QueryString.stringify(data);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Another option might be <a href=\"http://github.com/visionmedia/node-querystring\" rel=\"nofollow\">node-querystring</a>.</p>\n\n<p>It's available in both <code>npm</code> and <code>bower</code>, which is why I have been using it.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm trying to find information on how to serialize an object to query string format, but all my searches are drowning in results on how to go the other way (string/form/whatever to JSON).</p>\n\n<p>I have</p>\n\n<pre><code>{ one: 'first', two: 'second' }\n</code></pre>\n\n<p>and I want</p>\n\n<pre><code>?one=first&amp;two=second\n</code></pre>\n\n<p>Is there a good way to do this? I don't mind plugins or whatnots - if the code I find is not a plugin, I'll probably re-write it to one anyway...</p>\n",
            "last_activity_date": 1403410028,
            "question_id": 3308846,
            "score": 62,
            "tags": [
                "javascript",
                "jquery",
                "serialization",
                "query-string"
            ],
            "title": "Serialize object to query string in JavaScript/jQuery"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Not a <em>real</em> array, but objs are all associative arrays in javascript.</p>\n\n<p>I chose not to use a real array with [] and [].push because technically, you can have multiple ID's on a page even though that is incorrect to do so. So just another option in case some html has duplicated ID's</p>\n\n<pre><code>$(function() {\n\n       var oArr = {};\n       $(\"*[id]\").each(function() {\n           var id = $(this).attr('id');\n           if (!oArr[id]) oArr[id] = true;\n       });\n\n       for (var prop in oArr)\n           alert(prop);\n\n   });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>//but i cannot really get the id and assign it to an array that is not with in the scope?(or can I)</p>\n</blockquote>\n\n<p>Yes, you can!</p>\n\n<pre><code>var IDs = [];\n$(\"#mydiv\").find(\"span\").each(function(){ IDs.push(this.id); });\n</code></pre>\n\n<p>This is the beauty of <a href=\"http://stackoverflow.com/questions/tagged/closures%20javascript\">closures</a>. </p>\n\n<p>Note that while you were on the right track, <a href=\"http://stackoverflow.com/questions/827294/how-to-get-all-of-the-ids-with-jquery/827320#827320\">sighohwell</a> and <a href=\"http://stackoverflow.com/questions/827294/how-to-get-all-of-the-ids-with-jquery/827329#827329\">cletus</a> both point out more reliable and concise ways of accomplishing this, taking advantage of <a href=\"http://docs.jquery.com/Selectors/attributeHas#attribute\">attribute filters</a> (to limit matched elements to those with IDs) and jQuery's built-in <a href=\"http://docs.jquery.com/Traversing/map#callback\"><code>map()</code></a> function:</p>\n\n<pre><code>var IDs = $(\"#mydiv span[id]\")         // find spans with ID attribute\n  .map(function() { return this.id; }) // convert to set of IDs\n  .get(); // convert to instance of Array (optional)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 67
                },
                {
                    "body": "<p>The best way I can think of to answer this is to make a custom jquery plugin to do this:</p>\n\n<pre><code>jQuery.fn.getIdArray = function() {\n  var ret = [];\n  $('[id]', this).each(function() {\n    ret.push(this.id);\n  });\n  return ret;\n};\n</code></pre>\n\n<p>Then do something like </p>\n\n<pre><code>var array = $(\"#mydiv\").getIdArray();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The .get() method will return an array from a jQuery object. In addition you can use .map to project to something before calling get()</p>\n\n<pre><code>var idarray = $(\"#myDiv\")\n             .find(\"span\") //Find the spans\n             .map(function() { return this.id; }) //Project Ids\n             .get(); //ToArray\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>My suggestion?</p>\n\n<pre><code>var arr = $.map($(\"#mydiv [id]\"), function(n, i) {\n  return n.id;\n});\n</code></pre>\n\n<p>you could also do this as:</p>\n\n<pre><code>var arr = $.map($(\"#mydiv span\"), function(n, i) {\n</code></pre>\n\n<p>or</p>\n\n<pre><code>var arr = $.map($(\"#mydiv span[id]\"), function(n, i) {\n</code></pre>\n\n<p>or even just:</p>\n\n<pre><code>var arr = $(\"#mydiv [id]\").map(function() {\n  return this.id;\n});\n</code></pre>\n\n<p>Lots of ways basically.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>It's a late answer but now there is an easy way. Current version of jquery lets you search if attribute exists. For example</p>\n\n<pre><code>$('[id]')\n</code></pre>\n\n<p>will give you all the elements if they have id. If you want all spans with id starting with <code>span</code> you can use</p>\n\n<pre><code>$('span[id^=\"span\"]')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>for(i=1;i&lt;13;i++)     \n{\n\n   alert($(\"#tdt\"+i).val());  \n\n}  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I am trying to gather a list (array) of ids in a sector</p>\n\n<pre><code>&lt;div id=\"mydiv\"&gt;\n &lt;span id='span1'&gt;\n &lt;span id='span2'&gt;\n&lt;/div&gt;\n\n$(\"#mydiv\").find(\"span\"); \n</code></pre>\n\n<p>gives me a jQuery object, but not a real array;</p>\n\n<p>I can do </p>\n\n<pre><code>var array = jQuery.makeArray($(\"#mydiv\").find(\"span\"));\n</code></pre>\n\n<p>and then use a for loop to put the id attributes into another array</p>\n\n<p>or I can do</p>\n\n<pre><code>$(\"#mydiv\").find(\"span\").each(function(){}); //but i cannot really get the id and assign it to an array that is not with in the scope?(or can I)\n</code></pre>\n\n<p>Anyhow, I just wanna see if there is a shorthand in jQuery to do that;</p>\n\n<p>Thanks =)</p>\n",
            "last_activity_date": 1406553569,
            "question_id": 827294,
            "score": 30,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to get all of the IDs with jQuery?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Unfortunately, there's no easy way of achieving this.  There's certainly no method of pre-determining whether or not the protocol handler is installed.  </p>\n\n<p><strong>Internet Explorer</strong>, as you mentioned, has the <code>protocolLong</code> property but I'm having trouble getting it to return anything other than \"Unknown Protocol\" for all custom protocol handlers -- if anyone knows how to get IE to return the correct value please let me know so I can update this section.  The best solution I've found with IE is to <a href=\"http://msdn.microsoft.com/en-us/library/ms537503%28VS.85%29.aspx#UARegistry\">append to the user agent string</a> or install a browser extension along with your app that exposes a Javascript accessible property.</p>\n\n<p><strong>Firefox</strong> is by far the easiest of the major browsers, as it will allow you to try and catch a navigation attempt that fails.  The error object returned contains a <code>name</code> property whose value is <code>NS_ERROR_UNKNOWN_PROTOCOL</code>:</p>\n\n<pre><code>try {\n    iframe.contentWindow.location.href = \"randomprotocolstring://test/\";\n} catch(e) {\n    if (e.name == \"NS_ERROR_UNKNOWN_PROTOCOL\")\n        window.location = \"/download/\";\n}\n</code></pre>\n\n<p>Firefox will pop up with its own alert box:</p>\n\n<blockquote>\n  <p>Firefox doesn't know how to open this address, because the protocol (randomprotocolstring) isn't associated with any program.</p>\n</blockquote>\n\n<p>Once you close this box, the <code>catch</code> block will execute and you have a working fallback.</p>\n\n<p>Second is <strong>Opera</strong>, which allows you to employ the laws of predictability to detect success of a custom protocol link clicked.  If a custom protocol click works, the page will remain the same location.  If there is no handler installed, Opera will navigate to an error page.  This makes it rather easy to detect with an iframe:</p>\n\n<pre><code>   iframe.contentWindow.location = \"randomprotocolstring://test/\";\n   window.setTimeout(function () {\n       try {\n           alert(ifr.contentWindow.location); \n       } catch (e) { window.location = \"/download/\"; }\n   }, 0);\n</code></pre>\n\n<p>The <code>setTimeout</code> here is to make sure we check the location <em>after</em> navigation.  It's important to note that if you try and access the page, Opera throws a ReferenceException (cross-domain security error).  That doesn't matter, because all we need to know is that the location changed from <code>about:blank</code>, so a <code>try...catch</code> works just fine. </p>\n\n<p><strong>Chrome</strong> officially sucks with this regard.  If a custom protocol handler fails, it does absolutely zip.  If the handler works... you guessed it... it does absolutely zip.  No way of differentiating between the two, I'm afraid.</p>\n\n<p>I haven't tested <strong>Safari</strong> but I fear it would be the same as Chrome.  </p>\n\n<p>You're welcome to try the <a href=\"http://jsfiddle.net/Pd6ed/\">test code I wrote</a> whilst investigating this (I had a vested interest in it myself).  It's Opera and Firefox cross compatible but currently does nothing in IE and Chrome.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>For Internet Explorer, the best solution I've found is to use Conditionl comments &amp; Version Vector (application must write something to registry while installing protocol, see <a href=\"http://msdn.microsoft.com/en-us/library/ms537512.aspx#Version_Vectors\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/ms537512.aspx#Version_Vectors</a>). protocolLong doesn't work for custom protocol.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>On mobile you can use an embedded iframe to auto switch between the custom protocol and a known one (web or app store), see <a href=\"https://gist.github.com/2662899\" rel=\"nofollow\">https://gist.github.com/2662899</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just to chime in with our own experience, we used FireBreath to create a simple cross-platform plugin. Once installed this plugin registers a mime type which can be detected from the browser javascript after a page refresh. Detection of the mime type indicates that the protocol handler is installed. </p>\n\n<pre><code>if(IE) { //This bastard always needs special treatment\n    try {\n        var flash = new ActiveXObject(\"Plugin.Name\");\n    } catch (e) {\n        //not installed\n    }\nelse { //firefox,chrome,opera\n    navigator.plugins.refresh(true);\n    var mimeTypes = navigator.mimeTypes;\n    var mime = navigator.mimeTypes['application/x-plugin-name'];\n    if(mime) {\n        //installed\n    } else {\n        //not installed\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Internet Explorer 10 on Windows 8 introduced the very useful <a href=\"http://msdn.microsoft.com/en-us/library/ie/jj154912.aspx\" rel=\"nofollow\">navigator.msLaunchUri</a> method for launching a custom protocol URL and detecting the success or failure. For example:</p>\n\n<pre><code>        if (typeof (navigator.msLaunchUri) == typeof (Function)) {\n            navigator.msLaunchUri(witchUrl,\n                function () { /* Success */ },\n                function () { /* Failure */ showError(); });\n\n            return;\n        }\n</code></pre>\n\n<p>Windows 7 / IE 9 and below support conditional comments as suggested by @mark-kahn.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>We are using software that registers its own protocol. We can run application from browser then by link like:</p>\n\n<pre><code>customprotocol://do_this.\n</code></pre>\n\n<p>but is there a way to check is such custom protocol supported by user`s system? If not we would like to ask user to install software first.</p>\n\n<p>E.g:</p>\n\n<pre><code>if (canHandle ('customprotocol')) {\n     // run software\n}\nelse {\n    // ask to install\n}\n</code></pre>\n\n<p><strong>Edit</strong>\nI know about protocolLong property but it works only in IE.</p>\n",
            "last_activity_date": 1421809933,
            "question_id": 2872090,
            "score": 28,
            "tags": [
                "javascript"
            ],
            "title": "How to check if a custom protocol supported"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>To check whether a certain field is valid, use:</p>\n\n<pre><code>$('#myField')[0].checkValidity() // returns true/false\n</code></pre>\n\n<p>To check if the form is valid, use:</p>\n\n<pre><code>$('#myForm')[0].checkValidity() // returns true/false\n</code></pre>\n\n<p>If you want to display the native error messages that some browsers have (such as Chrome), unfortunately the only way to do that is by submitting the form, like this:</p>\n\n<pre><code>var $myForm = $('#myForm')\nif (!$myForm[0].checkValidity()) {\n  // If the form is invalid, submit it. The form won't actually submit;\n  // this will just cause the browser to display the native HTML5 error messages.\n  $myForm.find(':submit').click()\n}\n</code></pre>\n\n<p>Hope this helps. Keep in mind that HTML5 validation is not supported in all browsers.</p>\n",
                    "is_accepted": true,
                    "score": 86
                },
                {
                    "body": "<p>You speak of two different things \"HTML5 validation\" and validation of HTML form using javascript/jquery. </p>\n\n<p>HTML5 \"has\" built-in options for validating a form. Such as using \"required\" attribute on a field, which could (based on browser implementation) fail form submission without using javascript/jquery.</p>\n\n<p>With javascrip/jquery you can do something like this</p>\n\n<pre><code>$('your_form_id').bind('submit', function() {\n   // validate your form here\n   return (valid) ? true : false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I found this solution to work for me.\nJust call a javascript function wlike this: action=\"javascript:myFunction();\"\nThen you have the html5 validation... really simple :-)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is a more general way that is a bit cleaner:</p>\n\n<p>Create your form like this (can be a dummy form that does nothing):</p>\n\n<pre><code>&lt;form class=\"validateDontSubmit\"&gt;\n...\n</code></pre>\n\n<p>Bind all forms that you dont really want to submit:</p>\n\n<pre><code>$(document).on('submit','.validateDontSubmit',function (e) {\n    //prevent the form from doing a submit\n    e.preventDefault();\n    return false;\n})\n</code></pre>\n\n<p>Now lets say you have an <code>&lt;a&gt;</code> (within the <code>&lt;form&gt;</code>) that on click you want to validate the form:</p>\n\n<pre><code>$('#myLink').click(function(e){\n  //Leverage the HTML5 validation w/ ajax. Have to submit to get em. Wont actually submit cuz form\n  //has .validateDontSubmit class\n  var $theForm = $(this).closest('form');\n  //Some browsers don't implement checkValidity\n  if (( typeof($theForm[0].checkValidity) == \"function\" ) &amp;&amp; !$theForm[0].checkValidity()) {\n     return;\n  }\n\n  //if you've gotten here - play on playa'\n});\n</code></pre>\n\n<p>Few notes here:</p>\n\n<ul>\n<li>I have noticed that you don't have to actually submit the form for validation to occur - the call to <code>checkValidity()</code> is enough (at least in chrome). If others could add comments with testing this theory on other browsers I'll update this answer.</li>\n<li>The thing that triggers the validation does not have to be within the <code>&lt;form&gt;</code>. This was just a clean and flexible way to have a general purpose solution..</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>To check all the required fields of form without using submit button you can use below function.</p>\n\n<p>You have to assign <strong>required</strong> attribute to the controls.</p>\n\n<pre><code>  $(\"#btnSave\").click(function () {\n    $(\":input[required]\").each(function () {                     \n        var myForm = $('#form1');\n        if (!$myForm[0].checkValidity()) \n          {                \n            $(myForm).submit();              \n          }\n        });\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had a rather complex situation, where I needed multiple submit buttons to process different things. For example, Save and Delete. </p>\n\n<p>The basis was that it was also unobtrusive, so I couldn't just make it a normal button. But also wanted to utilize html5 validation.</p>\n\n<p>As well the submit event was overridden in case the user pressed enter to trigger the expected default submission; in this example save.</p>\n\n<p>Here is the efforts of the processing of the form to still work with/without javascript and with html5 validation, with both submit and click events.</p>\n\n<blockquote>\n  <p><strong><a href=\"http://jsfiddle.net/TXGry/\" rel=\"nofollow\">jsFiddle Demo - HTML5 validation with submit and click overrides</a></strong></p>\n</blockquote>\n\n<p><strong>xHTML</strong></p>\n\n<pre><code>&lt;form&gt;\n    &lt;input type=\"text\" required=\"required\" value=\"\" placeholder=\"test\" /&gt;\n    &lt;button type=\"submit\" name=\"save\"&gt;Save&lt;/button&gt;\n    &lt;button type=\"submit\" name=\"delete\"&gt;Delete&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p><strong>JavaScript</strong></p>\n\n<pre><code>//wrap our script in an annonymous function so that it can not be affected by other scripts and does not interact with other scripts\n//ensures jQuery is the only thing declared as $\n(function($){\n    var isValid = null;\n    var form = $('form');\n    var submitButton = form.find('button[type=\"submit\"]')\n    var saveButton = submitButton.filter('[name=\"save\"]');\n    var deleteButton = submitButton.filter('[name=\"delete\"]');\n\n    //submit form behavior\n    var submitForm = function(e){\n        console.log('form submit');\n        //prevent form from submitting valid or invalid\n        e.preventDefault();\n        //user clicked and the form was not valid\n        if(isValid === false){\n            isValid = null;\n            return false;\n        }\n        //user pressed enter, process as if they clicked save instead\n        saveButton.trigger('click');\n    };\n\n    //override submit button behavior\n    var submitClick = function(e){\n        //Test form validitiy (HTML5) and store it in a global variable so both functions can use it\n        isValid = form[0].checkValidity();\n        if(false === isValid){\n            //allow the browser's default submit event behavior \n            return true;\n        }\n        //prevent default behavior\n        e.preventDefault();\n        //additional processing - $.ajax() etc\n        //.........\n        alert('Success');\n    };\n\n    //override submit form event\n    form.submit(submitForm);\n\n    //override submit button click event\n    submitButton.click(submitClick);\n})(jQuery);\n</code></pre>\n\n<p>The caveat to using Javascript is that the browser's default onclick must propagate to the submit event MUST occur in order to  display the error messages without supporting each browser in your code.\nOtherwise if the click event is overridden with event.preventDefault() or return false it will never propagate to the browser's submit event.</p>\n\n<p>The thing to point out is that in some browsers will not trigger the form submit when the user presses enter, instead it will trigger the first submit button in the form. Hence there is a console.log('form submit') to show that it does not trigger.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can do it without submitting the form.</p>\n\n<p>For example, if the form submit button with id \"search\" is in the other form . You can call click event on that submit button and call ev.preventDefault after that.\nFor my case I validate form B from Form A submission.\nLike this</p>\n\n<pre><code>function validateFormB(ev){ // DOM Event object\n  //search is in Form A\n  $(\"#search\").click();\n  ev.preventDefault();\n  //Form B validation from here on\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have this form in my app and I will submit it via ajax, but I want to use html5 for client-side validation. So I want to be able to force the form validation via javascript/jquery. Is it possible?</p>\n\n<p>EDIT* </p>\n\n<p>I want to trigger the validation without submitting the form.</p>\n",
            "last_activity_date": 1425547807,
            "question_id": 11866910,
            "score": 54,
            "tags": [
                "javascript",
                "jquery",
                "html5",
                "validation"
            ],
            "title": "How to force a html5 form validation without submitting it via JavaScript/jQuery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You need to declare the variable before you include the helpers.js file.  Simply create a script tag above the include for helpers.js and define it there.</p>\n\n<pre><code>&lt;script type='text/javascript' &gt; \n  var myFunctionTag = false; \n&lt;/script&gt;\n&lt;script type='text/javascript' src='js/helpers.js'&gt;&lt;/script&gt;     \n... \n&lt;script type='text/javascript' &gt; \n  // rest of your code, which may depend on helpers.js\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>The variable can be declared in the <code>.js</code> file and simply referenced in the HTML file.\nMy version of <code>helpers.js</code>:</p>\n\n<pre><code>var myFunctionWasCalled = false;\n\nfunction doFoo()\n{\n    if (!myFunctionWasCalled) {\n        alert(\"doFoo called for the very first time!\");\n        myFunctionWasCalled = true;\n    }\n    else {\n        alert(\"doFoo called again\");\n    }\n}\n</code></pre>\n\n<p>And a page to test it:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Test Page&lt;/title&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/&gt;\n&lt;script type=\"text/javascript\" src=\"helpers.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n\n&lt;p&gt;myFunctionWasCalled is\n&lt;script type=\"text/javascript\"&gt;document.write(myFunctionWasCalled);&lt;/script&gt;\n&lt;/p&gt;\n\n&lt;script type=\"text/javascript\"&gt;doFoo();&lt;/script&gt;\n\n&lt;p&gt;Some stuff in between&lt;/p&gt;\n\n&lt;script type=\"text/javascript\"&gt;doFoo();&lt;/script&gt;\n\n&lt;p&gt;myFunctionWasCalled is\n&lt;script type=\"text/javascript\"&gt;document.write(myFunctionWasCalled);&lt;/script&gt;\n&lt;/p&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>You'll see the test <code>alert()</code> will display two different things, and the value written to the page will be different the second time.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>OK, guys, here's my little test too. I had a similar problem, so I decided to test out 3 situations:</p>\n\n<ol>\n<li>One HTML file, one external JS file... does it work at all - can functions communicate via a global var?</li>\n<li>Two HTML files, one external JS file, one browser, two tabs: will they interfere via the global var?</li>\n<li>One HTML file, open by 2 browsers, will it work and will they interfere?</li>\n</ol>\n\n<p>All the results were as expected.</p>\n\n<ol>\n<li>It works. Functions f1() and f2() communicate via global var (var is in the external JS file, not in HTML file).</li>\n<li>They do not interfere. Apparently distinct copies of JS file have been made for each browser tab, each HTML page.</li>\n<li>All works independently, as expected.</li>\n</ol>\n\n<p>Instead of browsing tutorials, I found it easier to try it out, so I did. My conclusion: whenever you include an external JS file in your HTML page, the contents of the external JS gets \"copy/pasted\" into your HTML page before the page is rendered. Or into your PHP page if you will. <strong>Please correct me if I'm wrong here.</strong> Thanx.</p>\n\n<p>My example files follow:</p>\n\n<p>EXTERNAL JS:</p>\n\n<pre><code>var global = 0;\n\nfunction f1()\n{\n    alert('fired: f1');\n    global = 1;\n    alert('global changed to 1');\n}\n\nfunction f2()\n{\n    alert('fired f2');\n    alert('value of global: '+global);\n}\n</code></pre>\n\n<p>HTML 1:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\"&gt;\n&lt;script type=\"text/javascript\" src=\"external.js\"&gt;&lt;/script&gt;\n&lt;title&gt;External JS Globals - index.php&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;button type=\"button\" id=\"button1\" onclick=\"f1();\"&gt; fire f1 &lt;/button&gt;\n&lt;br /&gt;\n&lt;button type=\"button\" id=\"button2\" onclick=\"f2();\"&gt; fire f2 &lt;/button&gt;\n&lt;br /&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>HTML 2</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\"&gt;\n&lt;script type=\"text/javascript\" src=\"external.js\"&gt;&lt;/script&gt;\n&lt;title&gt;External JS Globals - index2.php&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;button type=\"button\" id=\"button1\" onclick=\"f1();\"&gt; fire f1 &lt;/button&gt;\n&lt;br /&gt;\n&lt;button type=\"button\" id=\"button2\" onclick=\"f2();\"&gt; fire f2 &lt;/button&gt;\n&lt;br /&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I think you should be using \"local storage\" rather than global variables.</p>\n\n<p>If you are concerned that \"local storage\" may not be supported in very old browsers, consider using an existing plug-in which checks the availability of \"local storage\" and uses other methods if it isn't available.</p>\n\n<p>I used  <a href=\"http://www.jstorage.info/\" rel=\"nofollow\">http://www.jstorage.info/</a> and I'm happy with it so far.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can make a json object like:</p>\n\n<pre><code>globalVariable={example_attribute:\"SomeValue\"}; \n</code></pre>\n\n<p>in fileA.js </p>\n\n<p>And access it from fileB.js like: \n<code>globalVariable.example_attribute</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>A bunch of my JavaScript code is in an external file called helpers.js. Inside the HTML that calls this JavaScript code I find myself in need of knowing if a certain function from helpers.js has been called.</p>\n\n<p>I have attempted to create a global variable by defining:</p>\n\n<pre><code>var myFunctionTag = true;\n</code></pre>\n\n<p>In global scope both in my HTML code and in helpers.js.</p>\n\n<p>Heres what my html code looks like:</p>\n\n<pre><code>&lt;html&gt;\n...\n&lt;script type='text/javascript' src='js/helpers.js'&gt;&lt;/script&gt;    \n...\n&lt;script&gt;\n  var myFunctionTag = false;\n  ...\n  //I try to use myFunctionTag here but it is always false, even though it has been se t to 'true' in helpers.js\n&lt;/script&gt;\n</code></pre>\n\n<p>Is what I am trying to do even doable? </p>\n\n<p>Thanks,</p>\n",
            "last_activity_date": 1424184023,
            "question_id": 2932782,
            "score": 47,
            "tags": [
                "javascript"
            ],
            "title": "Global variables in Javascript across multiple files"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<pre><code>setTimeout(function () { location.reload(1); }, 5000);\n</code></pre>\n\n<p>But as development tools go, you are probably better off with <a href=\"https://addons.mozilla.org/en-US/firefox/addon/115\">https://addons.mozilla.org/en-US/firefox/addon/115</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code> &lt;meta http-equiv=\"refresh\" content=\"5; URL=http://www.yourdomain.com/yoursite.html\"&gt;\n</code></pre>\n\n<p>If it has to be in the script use setTimeout like:</p>\n\n<pre><code>setTimeout(function(){\n   window.location.reload(1);\n}, 5000);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 104
                },
                {
                    "body": "<p>A decent alternative if you're using firefox is the <a href=\"http://xrefresh.binaryage.com/\" rel=\"nofollow\">XRefresh plugin</a>. It will reload your page everytime it detect the file has been modified. So rather than just refreshing every 5 seconds, it will just refresh when you hit save in your HTML editor.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are developing and testing in Firefox, there's a plug-in called \"<a href=\"https://addons.mozilla.org/en-US/firefox/addon/115\" rel=\"nofollow\">ReloadEvery</a>\" is available, which allows you to reload the page at the specified intervals. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There's an automatic refresh-on-change tool for IE.  It's called ReloadIt, and is available at <a href=\"http://reloadit.codeplex.com\">http://reloadit.codeplex.com</a> . Free.  </p>\n\n<p>You choose a URL that you'd like to auto-reload, and specify one or more directory paths to monitor for changes.  Press F12 to start monitoring.</p>\n\n<p><img src=\"http://i.stack.imgur.com/IKXuR.png\" alt=\"enter image description here\"></p>\n\n<p>After you set it, minimize it.  Then edit your content files. When you save any change, the page gets reloaded.  like this: </p>\n\n<p><img src=\"http://i.stack.imgur.com/OP1Z2.gif\" alt=\"enter image description here\"></p>\n\n<p>Simple. easy. </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>To reload the same page you don't need the 2nd argument. You can just use:</p>\n\n<pre><code> &lt;meta http-equiv=\"refresh\" content=\"30\" /&gt;\n</code></pre>\n\n<p>This triggers a reload every 30 seconds.</p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>Alternatively there's the application called <a href=\"http://livereload.com/\" rel=\"nofollow\">LiveReload</a>...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For auto reload and clear cache after 3 second you can do it easily using javascript setInterval function. Here is simple code</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n &lt;html&gt;\n &lt;head&gt;\n &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js\"&gt;\n &lt;/script&gt;\n &lt;script&gt;\n $(document).ready(function(){\n setInterval(function(){cache_clear()},3000);\n });\n function cache_clear()\n{\n window.location.reload(true);\n}\n&lt;/script&gt;\n&lt;/head&gt;\n\n &lt;body&gt;\n &lt;p&gt;Auto reload page and clear cache&lt;/p&gt;\n &lt;/body&gt;\n &lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Answer provided by @jAndy should work but in <strong><em>Firefox</em></strong> you may face problem, <strong>window.location.reload(1)</strong>; might not work, that's my personal experience.</p>\n\n<p>So i would like to suggest:</p>\n\n<pre><code>setTimeout(function() { window.location=window.location;},5000);\n</code></pre>\n\n<p>This is tested and works fine.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am converting one layout to html; once I make the changes in code/html/css, every time I have to hit F5. Is there any simple javascript/jQuery solution for this? I.e. after I add the script, reload the whole page every 5 seconds (or some other specific time).</p>\n",
            "last_activity_date": 1424734284,
            "question_id": 2787679,
            "score": 42,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to reload page every 5 second?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You could try to use the non-standard IE <a href=\"http://msdn.microsoft.com/en-us/library/ms535231%28VS.85%29.aspx\"><code>element.currentStyle</code></a> property, otherwise you can look for the <a href=\"http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSview-getComputedStyle\">DOM Level 2</a> standard <a href=\"https://developer.mozilla.org/en/DOM/window.getComputedStyle\"><code>getComputedStyle</code></a> method if available :</p>\n\n<pre><code>function getStyle(el,styleProp) {\n  var camelize = function (str) {\n    return str.replace(/\\-(\\w)/g, function(str, letter){\n      return letter.toUpperCase();\n    });\n  };\n\n  if (el.currentStyle) {\n    return el.currentStyle[camelize(styleProp)];\n  } else if (document.defaultView &amp;&amp; document.defaultView.getComputedStyle) {\n    return document.defaultView.getComputedStyle(el,null)\n                               .getPropertyValue(styleProp);\n  } else {\n    return el.style[camelize(styleProp)]; \n  }\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var element = document.getElementById('elementId');\ngetStyle(element, 'font-size');\n</code></pre>\n\n<p>More info:</p>\n\n<ul>\n<li><a href=\"http://www.quirksmode.org/dom/getstyles.html\">Get Styles</a> (QuirksMode)</li>\n</ul>\n\n<p><strong>Edit:</strong> Thanks to <em>@Crescent Fresh</em>, <em>@kangax</em> and <em>@Pekka</em> for the comments.</p>\n\n<p>Changes:</p>\n\n<ul>\n<li>Added <code>camelize</code> function, since properties containing hypens, like <code>font-size</code>, must be accessed as camelCase (eg.: <code>fontSize</code>) on the <code>currentStyle</code> IE object.</li>\n<li>Checking the existence of <code>document.defaultView</code> before accessing <code>getComputedStyle</code>.</li>\n<li>Added last case, when <code>el.currentStyle</code> and <code>getComputedStyle</code> are not available, get the inline CSS property via <code>element.style</code>.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>To overcome the 'em' problem I have quickly written a function, if the font-size in ie is 'em' the function calculates with the body font-size.</p>\n\n<pre><code>        function getFontSize(element){\n        var size = computedStyle(element, 'font-size');\n        if(size.indexOf('em') &gt; -1){\n            var defFont = computedStyle(document.body, 'font-size');\n            if(defFont.indexOf('pt') &gt; -1){\n                defFont = Math.round(parseInt(defFont)*96/72);\n            }else{\n                defFont = parseInt(defFont);\n            }\n            size = Math.round(defFont * parseFloat(size));\n        } \n        else if(size.indexOf('pt') &gt; -1){\n            size = Math.round(parseInt(size)*96/72)\n        }\n        return parseInt(size);\n    }\n\n    function computedStyle(element, property){\n        var s = false;\n        if(element.currentStyle){\n            var p = property.split('-');\n            var str = new String('');\n            for(i in p){\n                str += (i &gt; 0)?(p[i].substr(0, 1).toUpperCase() + p[i].substr(1)):p[i];\n            }\n            s = element.currentStyle[str];\n        }else if(window.getComputedStyle){\n            s = window.getComputedStyle(element, null).getPropertyValue(property);\n        }\n        return s;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Looks like jQuery (1.9 at least) uses <code>getComputedStyle()</code> or <code>currentStyle</code> itself when you use <code>$('#element')[.css][1]('fontSize')</code>, so you really shouldn't have to bother with more complicated solutions if you're OK using jQuery.</p>\n\n<p>Tested in IE 7-10, FF and Chrome</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is it possible to detect the computed <code>font-size</code> of a DOM element, taking into consideration generic settings made elsewhere (In the <code>body</code> tag for example), inherited values, and so on? </p>\n\n<p>A framework-independent approach would be nice, as I'm working on a script that should work standalone, but that is not a requirement of course.</p>\n\n<p>Background: I'm trying to tweak <a href=\"http://ckeditor.com/\">CKEditor's</a> font selector plugin (source <a href=\"http://svn.fckeditor.net/CKEditor/releases/stable/_source/plugins/font/plugin.js\">here</a>) so that it always shows the font size of the current cursor position (as opposed to only when within a <code>span</code> that has an explicit <code>font-size</code> set, which is the current behaviour).</p>\n",
            "last_activity_date": 1365649947,
            "question_id": 1955048,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "ckeditor",
                "font-size"
            ],
            "title": "Get computed font size for DOM element in JS"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>If I understand correctly, you will need AJAX.</p>\n\n<p><a href=\"http://www.w3schools.com/Ajax/Default.Asp\" rel=\"nofollow\">http://www.w3schools.com/Ajax/Default.Asp</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You cant run PHP when a user clicks on a link without leaving the page unless you use AJAX. PHP is a serverside scripting language, meaning the second that the browser sees the page, there is no PHP in it.</p>\n\n<p>Unlike Javascript, PHP is ran completely on the server, and browser wouldn't know how to interpret it if it bit them on the rear. The only way to invoke PHP code is to make a Page request, by either refreshing the page, or using javascript to go fetch a page.</p>\n\n<p>In an AJAX Solution, basically the page uses javascript to send a page request to another page on your domain. Javascript then gets whatever you decide to <code>echo</code> in the response, and it can parse it and do what it wants from there. When you are creating the response, you can also do any backend stuff like updating databases.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Yeah, you'd need to have a javascript function triggered by an onclick that does an AJAX load of a page and then returns false, that way they won't be redirected in the browser.  You could use the following in jQuery, if that's acceptable for your project:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction doSomething() {\n    $.get(\"somepage.php\");\n    return false;\n}\n&lt;/script&gt;\n\n&lt;a href=\"#\" onclick=\"doSomething();\"&gt;Click Me!&lt;/a&gt;\n</code></pre>\n\n<p>You could also do a post-back if you need to use form values (use the $.post() method).</p>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>as others have suggested, use javascript to make an ajax call.</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"myJsFunction()\"&gt;whatever&lt;/a&gt;\n\n&lt;script&gt;\nfunction myJsFunction() {\n     // use ajax to make a call to your PHP script\n     // for more examples, using Jquery. see the link below\n     return false; // this is so the browser doesn't follow the link\n}\n</code></pre>\n\n<p><a href=\"http://docs.jquery.com/Ajax/jQuery.ajax\">http://docs.jquery.com/Ajax/jQuery.ajax</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>either send the user to another page which does it</p>\n\n<pre><code>&lt;a href=\"exec.php\"&gt;Execute PHP&lt;/a&gt;\n</code></pre>\n\n<p>or do it with ajax</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n// &lt;![CDATA[\n    document.getElementById('link').onclick = function() {\n        // call script via ajax...\n        return false;\n    }\n// ]]&gt;\n&lt;/script&gt;\n...\n&lt;a href=\"#\" id=\"link\"&gt;Execute PHP&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is the only better way is AJAX as everyone is suggest in their posts.\nThe alternative is using IFrames like below:</p>\n\n<pre><code>&lt;iframe name=\"f1\" id=\"f1\"&gt; &lt;/iframe&gt;\n\n&lt;a href='yourpage.php' target='f1'&gt;Click &lt;/a&gt;\n</code></pre>\n\n<p>Now you will get the output in IFrame (you can place IFrame wherever you need in the page or event hide it and the result from the script).</p>\n\n<p>Hope for non Ajax solution this is better.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This should work as well</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"callFunction();\"&gt;Submit&lt;/a&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n\nfunction callFunction()\n{\n  &lt;?php require(\"functions.php\");  ?&gt;\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>Thanks,</p>\n\n<p>cowtipper</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I know this post is old but I just wanted to add my answer!</p>\n\n<p>You said to log a user out WITHOUT directing... this method DOES redirect but it returns the user to the page they were on! here's my implementation:</p>\n\n<pre><code>// every page with logout button\n&lt;?php\n        // get the full url of current page\n        $page = $_SERVER['PHP_SELF'];\n        // find position of the last '/'\n        $file_name_begin_pos = strripos($page, \"/\");\n        // get substring from position to end \n        $file_name = substr($page, ++$fileNamePos);\n    }\n?&gt;\n\n// the logout link in your html\n&lt;a href=\"logout.php?redirect_to=&lt;?=$file_name?&gt;\"&gt;Log Out&lt;/a&gt;\n\n// logout.php page\n&lt;?php\n    session_start();\n    $_SESSION = array();\n    session_destroy();\n    $page = \"index.php\";\n    if(isset($_GET[\"redirect_to\"])){\n        $file = $_GET[\"redirect_to\"];\n        if ($file == \"user.php\"){\n            // if redirect to is a restricted page, redirect to index\n            $file = \"index.php\";\n        }\n    }\n    header(\"Location: $file\");\n?&gt;\n</code></pre>\n\n<p>and there we go!</p>\n\n<p>the code that gets the file name from the full url isn't bug proof. for example if query strings are involved with un-escaped '/' in them, it will fail.</p>\n\n<p>However there are many scripts out there to get the filename from url!</p>\n\n<p>Happy Coding!</p>\n\n<p>Alex</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Well you said without redirecting. Well its a javascript code:</p>\n\n<pre><code>&lt;a href=\"JavaScript:void(0);\" onclick=\"function()\"&gt;Whatever!&lt;/a&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nfunction confirm_delete() {\n    var delete_confirmed=confirm(\"Are you sure you want to delete this file?\");\n\n    if (delete_confirmed==true) {\n       // the php code :) can't expose mine ^_^\n    } else { \n       // this one returns the user if he/she clicks no :)\n       document.location.href = 'whatever.php';\n    }\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>give it a try :) hope you like it</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want to have a page run some PHP code when a user clicks on a link, without redirecting them. Is this possible with </p>\n\n<pre><code>&lt;a href=\"\"&gt;&lt;/a&gt;\n</code></pre>\n\n<p>or with the javascript onclick event?</p>\n",
            "last_activity_date": 1350488388,
            "question_id": 1280767,
            "score": 16,
            "tags": [
                "php",
                "javascript",
                "html",
                "hyperlink",
                "anchor"
            ],
            "title": "How do I run PHP code when a user clicks on a link?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I'd go with Perl's <a href=\"http://search.cpan.org/~abeltje/Win32-IE-Mechanize-0.009/lib/Win32/IE/Mechanize.pm\" rel=\"nofollow\">Win32::IE::Mechanize</a> which lets you automate Internet Explorer. You should be able to click on icons and extract text while letting MSIE do the annoying tasks of processing all the JS.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You may consider using <a href=\"http://htmlunit.sourceforge.net\" rel=\"nofollow\">HTMLunit</a>\nIt's a java class library made to automate browsing without having to control a browser, and it integrates the Mozilla Rhino Javascript engine to process javascript on the pages it loads. There's also a JRuby wrapper for that, named Celerity. Its javascript support is not really perfect right now, but if your pages don't use many hacks things should work fine the performance should be way better than controlling a browser. Furthermore, you don't have to worry about cookies being persisted after your scraping is over and all the other nasty things connected to controlling a browser (history, autocomplete, temp files etc).</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Since you say that no AJAX is used, then all the info is present at the HTML source. The javascript just renders it based on user clicks. So you need to reverse engineer the way the application works, parse the html and the javascript code and extract the useful information. It is strictly business of text parsing - you shouldn't deal with running javascript and producing a new DOM. This would be much more difficult to do.</p>\n\n<p>If AJAX was used, your job would be easier. You could easily find out how the AJAX services work (probably by receiving JSON and XML) and extract the information.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I agree with <a href=\"http://stackoverflow.com/questions/857515/screen-scraping-from-a-web-page-with-a-lot-of-javascript/857672#857672\">kgiannakakis' answer</a>. I'd be suprised if you couldn't reverse engineer the javascript to identify where the information comes from and then write some simple Python scripts using <a href=\"http://www.voidspace.org.uk/python/articles/urllib2.shtml\" rel=\"nofollow\">Urllib2</a> and <a href=\"http://www.crummy.com/software/BeautifulSoup/\" rel=\"nofollow\">the Beautiful Soup library</a> to scrape the same information.</p>\n\n<p>If Python and scraping are a new idea, there's some excellent <a href=\"http://www.palewire.com/2008/04/20/python-recipe-grab-a-page-scrape-a-table-download-a-file/\" rel=\"nofollow\">tutorials</a> available on how to get going.</p>\n\n<p><strong>[Edit]</strong> Looks like there's <a href=\"http://wwwsearch.sourceforge.net/mechanize/\" rel=\"nofollow\">a Python version of mechanize</a> too. Time to re-write some scrapers I developed a while back! :-)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could consider using a greasemonkey JS. greasemonkey is a very powerful Firefox add on that allows you to run your own script alongside that of specific web sites. This allows you to modify how the web site is displayed, add or remove content. You can even use it to  do AJAX style lookups and add dynamic content. </p>\n\n<p>If your tool is for in house use, and users are all happy to use Firefox then this could be a winner.</p>\n\n<p>Regards</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I suggest IRobotSoft web scraper.  It is a dedicated free software for screen scraping with the best javascript support.  You can create and test a robot with its visual interface.  You can also embed it into your own application using its ActiveX control and hide the browser window. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I created a project <a href=\"https://github.com/damoeb/site2archive\" rel=\"nofollow\">site2archive</a> that uses <em>phantomJs</em> to render including JS stuff and <em>wget</em> to scrape. <em>phantomJs</em> is based on Webkit, that delivers a similar browsing environment as Safari and Google Chrome.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have been asked to write an app which screen scrapes info from an intranet web page and presents the certain info from it in a nice easy to view format. The web page is a real mess and requires the user to click on half a dozen icons to discover if an ordered item has arrived or has been receipted. As you can imagine users find this irritating to say the least and it would be nice to have an app anyone can use that lists the state of their orders in a single screen.</p>\n\n<p>Yes I know a better solution would be to re-write the web app but that would involve calling in the vendor and would cost us as small fortune.</p>\n\n<p>Anyway while looking into this I discovered the web page I want to scrape is mostly Javascript (although it doesn't use any AJAX techniques). Does anyone know if a library or program exists which I could feed with the Javascript and which would then spit out the DOM for my app to parse ? </p>\n\n<p>I can pretty much write the app in any language but my preference would be JavaFX just so I could have a play with it.</p>\n\n<p>Thanks for your time.</p>\n\n<p>Ian</p>\n",
            "last_activity_date": 1424450433,
            "question_id": 857515,
            "score": 16,
            "tags": [
                "javascript",
                "html",
                "dom",
                "screen-scraping"
            ],
            "title": "Screen Scraping from a web page with a lot of Javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>It's simplest to just call the function yourself directly the first time:</p>\n\n<pre><code>foo();\nsetInterval(foo, delay);\n</code></pre>\n\n<p>However there are good reasons to avoid <code>setInterval</code> - in particular in some circumstances a whole load of <code>setInterval</code> events can arrive immediately after each other without any delay.  Another reason is that if you want to stop the loop you have to explicitly call <code>clearInterval</code> which means you have to remember the handle returned from the original <code>setInterval</code> call.</p>\n\n<p>So an alternative method is to have <code>foo</code> trigger itself for subsequent calls using <code>setTimeout</code> instead:</p>\n\n<pre><code>function foo() {\n   // do stuff\n   // ...\n\n   // and schedule a repeat\n   setTimeout(foo, delay);\n}\n\n// start the cycle\nfoo();\n</code></pre>\n\n<p>This guarantees that there is <em>at least</em> an interval of <code>delay</code> between calls.  It also makes it easier to cancel the loop if required - you just don't call <code>setTimeout</code> when your loop termination condition is reached.</p>\n\n<p>Better yet, you can wrap that all up in an <em>immediately invoked function expression</em> which creates the function, which then calls itself again as above, and automatically starts the loop:</p>\n\n<pre><code>(function foo() {\n    ...\n    setTimeout(foo, delay);\n})();\n</code></pre>\n\n<p>which defines the function and starts the cycle all in one go.</p>\n",
                    "is_accepted": true,
                    "score": 93
                },
                {
                    "body": "<p>If you extract the code you are passing to <code>setInterval</code> into a function, you can call the function directly immediately after calling <code>setInterval</code>. This achieves the same effect.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm not sure if I'm understanding you correctly, but you could easily do something like this:</p>\n\n<pre><code>setInterval(function hello() {\n  console.log('world');\n  return hello;\n}(), 5000);\n</code></pre>\n\n<p>There's obviously any number of ways of doing this, but that's the most concise way I can think of.</p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>You could wrap <code>setInterval()</code> in a function that provides that behavior:</p>\n\n<pre><code>function instantGratification( fn, delay ) {\n    fn();\n    setInterval( fn, delay );\n}\n</code></pre>\n\n<p>...then use it like this:</p>\n\n<pre><code>instantGratification( function() {\n    console.log( 'invoked' );\n}, 3000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There's a problem with immediate asynchronous call of your function, because standard setTimeout/setInterval has a minimal timeout about several milliseconds even if you directly set it to 0. It caused by a browser specific work.</p>\n\n<p>An example of code with a REAL zero delay wich works in Chrome, Safari, Opera</p>\n\n<pre><code>function setZeroTimeout(callback) {\nvar channel = new MessageChannel();\nchannel.port1.onmessage = callback;\nchannel.port2.postMessage('');\n}\n</code></pre>\n\n<p>You can find more information <a href=\"http://ajaxian.com/archives/settimeout-delay\" rel=\"nofollow\">here</a></p>\n\n<p>And after the first manual call you can create an interval with your function.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Here's a wrapper to pretty-fy it if you need it:</p>\n\n<pre><code>(function() {\n    var originalSetInterval = window.setInterval;\n\n    window.setInterval = function(fn, delay, runImmediately) {\n        if(runImmediately) fn();\n        originalSetInterval(fn, delay);\n    };\n})();\n</code></pre>\n\n<p>Set the third argument of setInterval to true and it'll run for the first time immediately after calling setInterval:</p>\n\n<pre><code>setInterval(function() { console.log(\"hello world\"); }, 5000, true);\n</code></pre>\n\n<p>Or omit the third argument and it will retain its original behaviour:</p>\n\n<pre><code>setInterval(function() { console.log(\"hello world\"); }, 5000);\n</code></pre>\n\n<p>Some browsers support <a href=\"https://developer.mozilla.org/en/docs/DOM/window.setInterval\" rel=\"nofollow\">additional arguments</a> for setInterval which this wrapper doesn't take into account; I think these are rarely used, but keep that in mind if you do need them.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>actually the quickest is to do</p>\n\n<pre><code>interval = setInterval(myFunction(),45000)\n</code></pre>\n\n<p>this will call myfunction, and then will do it agaian every 45 seconds which is different than doing</p>\n\n<pre><code>interval = setInterval(myfunction, 45000)\n</code></pre>\n\n<p>which won't call it, but schedule it only</p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>It's there a way to configure the <code>setInterval</code> method of javascript to execute the method immediately and then executes with the timer</p>\n",
            "last_activity_date": 1382957230,
            "question_id": 6685396,
            "score": 53,
            "tags": [
                "javascript"
            ],
            "title": "execute the first time the setInterval without delay"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Since you are looking for something stable, the merge sort should do.  </p>\n\n<p><a href=\"http://en.literateprograms.org/Merge%5Fsort%5F%28JavaScript%29\">http://en.literateprograms.org/Merge_sort_(JavaScript)</a></p>\n\n<p>EDIT:</p>\n\n<p>According to this <a href=\"http://stackoverflow.com/questions/234683/javascript-array-sort-implementation\">post</a>, it looks like Array.Sort in some implementations uses a merge sort. </p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Will the built in sort function do?\n<a href=\"http://www.w3schools.com/jsref/jsref%5Fsort.asp\" rel=\"nofollow\">http://www.w3schools.com/jsref/jsref%5Fsort.asp</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>It is possible to get a stable sorting from a non-stable sort function.</p>\n\n<p>Before sorting you get the position of all the elements.\nIn your sort condition, if both elements are equal, then you sort by the position.</p>\n\n<p>Tada! You've got a stable sort.</p>\n\n<p>I've written an article about it on my blog if you want to know more about this technique and how to implement it: <a href=\"http://blog.vjeux.com/2010/javascript/javascript-sorting-table.html\">http://blog.vjeux.com/2010/javascript/javascript-sorting-table.html</a></p>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>Counting Sort is faster than merge sort (it performs in O(n) time) and it is intended for use on integers.</p>\n\n<pre><code>Math.counting_sort = function (m) {\n    var i\n    var j\n    var k\n    var step\n    var start\n    var Output\n    var hash\n    k = m.length\n    Output = new Array ()\n    hash = new Array ()\n    // start at lowest possible value of m\n    start = 0\n    step = 1\n    // hash all values\n    i = 0\n    while ( i &lt; k ) {\n        var _m = m[i]\n        hash [_m] = _m\n        i = i + 1\n    }\n    i = 0\n    j = start\n    // find all elements within x\n    while ( i &lt; k ) {\n        while ( j != hash[j] ) {\n            j = j + step\n        }\n        Output [i] = j\n        i = i + 1\n        j = j + step\n    }\n    return Output\n}\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>var uArray = new Array ()&lt;br/&gt;\nvar sArray = new Array ()&lt;br/&gt;&lt;br/&gt;\nuArray = [ 10,1,9,2,8,3,7,4,6,5 ]&lt;br/&gt;\nsArray = Math.counting_sort ( uArray ) // returns a sorted array\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I know that this question has been answered for some time, but I happen to have a good stable merge sort implementation for Array and jQuery in my clipboard, so I'll share it in the hopes that some future searchers might find it useful.</p>\n\n<p>It allows you to specify your own comparison function just like the normal <code>Array.sort</code> implementation.</p>\n\n<h2>Implementation</h2>\n\n<pre><code>// Add stable merge sort to Array and jQuery prototypes\n// Note: We wrap it in a closure so it doesn't pollute the global\n//       namespace, but we don't put it in $(document).ready, since it's\n//       not dependent on the DOM\n(function() {\n\n  // expose to Array and jQuery\n  Array.prototype.mergeSort = jQuery.fn.mergeSort = mergeSort;\n\n  function mergeSort(compare) {\n\n    var length = this.length,\n        middle = Math.floor(length / 2);\n\n    if (!compare) {\n      compare = function(left, right) {\n        if (left &lt; right)\n          return -1;\n        if (left == right)\n          return 0;\n        else\n          return 1;\n      };\n    }\n\n    if (length &lt; 2)\n      return this;\n\n    return merge(\n      this.slice(0, middle).mergeSort(compare),\n      this.slice(middle, length).mergeSort(compare),\n      compare\n    );\n  }\n\n  function merge(left, right, compare) {\n\n    var result = [];\n\n    while (left.length &gt; 0 || right.length &gt; 0) {\n      if (left.length &gt; 0 &amp;&amp; right.length &gt; 0) {\n        if (compare(left[0], right[0]) &lt;= 0) {\n          result.push(left[0]);\n          left = left.slice(1);\n        }\n        else {\n          result.push(right[0]);\n          right = right.slice(1);\n        }\n      }\n      else if (left.length &gt; 0) {\n        result.push(left[0]);\n        left = left.slice(1);\n      }\n      else if (right.length &gt; 0) {\n        result.push(right[0]);\n        right = right.slice(1);\n      }\n    }\n    return result;\n  }\n})();\n</code></pre>\n\n<h2>Example Usage</h2>\n\n<pre><code>var sorted = [\n  'Finger',\n  'Sandwich',\n  'sandwich',\n  '5 pork rinds',\n  'a guy named Steve',\n  'some noodles',\n  'mops and brooms',\n  'Potato Chip Brand\u00ae chips'\n].mergeSort(function(left, right) {\n  lval = left.toLowerCase();\n  rval = right.toLowerCase();\n\n  console.log(lval, rval);\n  if (lval &lt; rval)\n    return -1;\n  else if (lval == rval)\n    return 0;\n  else\n    return 1;\n});\n\nsorted == [\"5 pork rinds\", \"a guy named Steve\", \"Finger\", \"mops and brooms\", \"Potato Chip Brand\u00ae chips\", \"Sandwich\", \"sandwich\", \"some noodles\"];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>A simple one mergeSort from <a href=\"http://www.stoimen.com/blog/2010/07/02/friday-algorithms-javascript-merge-sort/\" rel=\"nofollow\">http://www.stoimen.com/blog/2010/07/02/friday-algorithms-javascript-merge-sort/</a></p>\n\n<pre><code>var a = [34, 203, 3, 746, 200, 984, 198, 764, 9];\n\nfunction mergeSort(arr)\n{\n    if (arr.length &lt; 2)\n         return arr;\n\n    var middle = parseInt(arr.length / 2);\n    var left   = arr.slice(0, middle);\n    var right  = arr.slice(middle, arr.length);\n\n    return merge(mergeSort(left), mergeSort(right));\n}\n\nfunction merge(left, right)\n{\n     var result = [];\n\n    while (left.length &amp;&amp; right.length) {\n         if (left[0] &lt;= right[0]) {\n             result.push(left.shift());\n         } else {\n            result.push(right.shift());\n         }\n    }\n\n    while (left.length)\n        result.push(left.shift());\n\n    while (right.length)\n        result.push(right.shift());\n\n    return result;\n}\n\nconsole.log(mergeSort(a));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's a stable implementation. It works by using the native sort, but in cases where elements compare as equal, you break ties using the original index position.</p>\n\n<pre><code>function stableSort(arr, cmpFunc) {\n    //wrap the arr elements in wrapper objects, so we can associate them with their origional starting index position\n    var arrOfWrapper = arr.map(function(elem, idx){\n        return {elem: elem, idx: idx};\n    });\n\n    //sort the wrappers, breaking sorting ties by using their elements orig index position\n    arrOfWrapper.sort(function(wrapperA, wrapperB){\n        var cmpDiff = cmpFunc(wrapperA.elem, wrapperB.elem);\n        return cmpDiff === 0 \n             ? wrapperA.idx - wrapperB.idx\n             : cmpDiff;\n    });\n\n    //unwrap and return the elements\n    return arrOfWrapper.map(function(wrapper){\n        return wrapper.elem;\n    });\n}\n</code></pre>\n\n<p>a non-thorough test</p>\n\n<pre><code>var res = stableSort([{a:1, b:4}, {a:1, b:5}], function(a, b){\n    return a.a - b.a;\n});\nconsole.log(res);\n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/a/2085225/249538\">another answer</a> alluded to this, but didn't post teh codez.</p>\n\n<p>but, its not fast according to my <a href=\"http://jsperf.com/stable-sort-comparison\" rel=\"nofollow\">benchmark</a>. I modified a <a href=\"http://en.literateprograms.org/Merge_sort_%28JavaScript%29\" rel=\"nofollow\">merge sort impl</a> to accept a custom comparator function, and it was much faster.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have to sort multidimensional arrays by an arbitrary column, and then by another. I use this function to sort:</p>\n\n<pre><code>function sortMDArrayByColumn(ary, sortColumn){\n\n    //Adds a sequential number to each row of the array\n    //This is the part that adds stability to the sort\n    for(var x=0; x&lt;ary.length; x++){ary[x].index = x;}\n\n    ary.sort(function(a,b){\n        if(a[sortColumn]&gt;b[sortColumn]){return 1;}\n        if(a[sortColumn]&lt;b[sortColumn]){return -1;}\n        if(a.index&gt;b.index){\n            return 1;\n        }\n        return -1;\n    });\n}\n</code></pre>\n\n<p>Notice that ary.sort never returns zero, which is where some implementations of the \"sort\" function make decisions that might not be right. </p>\n\n<p>This is pretty darn fast, too.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking to sort an array of about 200-300 objects, sorting on a specific key and a given order (asc/desc). The order of results must be consistent and stable.</p>\n\n<p>What would be the best algorithm to use, and could you provide an example of it's implementation in javascript?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1403652884,
            "question_id": 1427608,
            "score": 42,
            "tags": [
                "javascript",
                "algorithm",
                "sorting"
            ],
            "title": "Fast stable sorting algorithm implementation in javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The mouse's position is reported on the <code>event</code> object received by a handler for the <code>mousemove</code> event, which you can attach to the window (the event bubbles):</p>\n\n<pre><code>(function() {\n    document.onmousemove = handleMouseMove;\n    function handleMouseMove(event) {\n        var dot, eventDoc, doc, body, pageX, pageY;\n\n        event = event || window.event; // IE-ism\n\n        // If pageX/Y aren't available and clientX/Y are,\n        // calculate pageX/Y - logic taken from jQuery.\n        // (This is to support old IE)\n        if (event.pageX == null &amp;&amp; event.clientX != null) {\n            eventDoc = (event.target &amp;&amp; event.target.ownerDocument) || document;\n            doc = eventDoc.documentElement;\n            body = eventDoc.body;\n\n            event.pageX = event.clientX +\n              (doc &amp;&amp; doc.scrollLeft || body &amp;&amp; body.scrollLeft || 0) -\n              (doc &amp;&amp; doc.clientLeft || body &amp;&amp; body.clientLeft || 0);\n            event.pageY = event.clientY +\n              (doc &amp;&amp; doc.scrollTop  || body &amp;&amp; body.scrollTop  || 0) -\n              (doc &amp;&amp; doc.clientTop  || body &amp;&amp; body.clientTop  || 0 );\n        }\n\n        // Use event.pageX / event.pageY here\n    }\n})();\n</code></pre>\n\n<p>(Note that the body of that <code>if</code> will only run on old IE.)</p>\n\n<p><a href=\"http://jsbin.com/gejuz/1\">Example of the above in action</a> - it draws dots as you drag your mouse over the page. (Tested on IE8, IE11, Firefox 30, Chrome 38.)</p>\n\n<p>If you really need a timer-based solution, you combine this with some state variables:</p>\n\n<pre><code>(function() {\n    var mousePos;\n\n    document.onmousemove = handleMouseMove;\n    setInterval(getMousePosition, 100); // setInterval repeats every X ms\n\n    function handleMouseMove(event) {\n        var dot, eventDoc, doc, body, pageX, pageY;\n\n        event = event || window.event; // IE-ism\n\n        // If pageX/Y aren't available and clientX/Y are,\n        // calculate pageX/Y - logic taken from jQuery.\n        // (This is to support old IE)\n        if (event.pageX == null &amp;&amp; event.clientX != null) {\n            eventDoc = (event.target &amp;&amp; event.target.ownerDocument) || document;\n            doc = eventDoc.documentElement;\n            body = eventDoc.body;\n\n            event.pageX = event.clientX +\n              (doc &amp;&amp; doc.scrollLeft || body &amp;&amp; body.scrollLeft || 0) -\n              (doc &amp;&amp; doc.clientLeft || body &amp;&amp; body.clientLeft || 0);\n            event.pageY = event.clientY +\n              (doc &amp;&amp; doc.scrollTop  || body &amp;&amp; body.scrollTop  || 0) -\n              (doc &amp;&amp; doc.clientTop  || body &amp;&amp; body.clientTop  || 0 );\n        }\n\n        mousePos = {\n            x: event.pageX,\n            y: event.pageY\n        };\n    }\n    function getMousePosition() {\n        var pos = mousePos;\n        if (!pos) {\n            // We haven't seen any movement yet\n        }\n        else {\n            // Use pos.x and pos.y\n        }\n    }\n})();\n</code></pre>\n\n<p>As far as I'm aware, you can't get the mouse position without having seen an event, something which <a href=\"http://stackoverflow.com/questions/1133807/mouse-position-using-jquery-outside-of-events\">this answer to another Stack Overflow question</a> seems to confirm.</p>\n\n<p><strong>Side note</strong>: If you're going to do something every 100ms (10 times/second), try to keep the actual processing you do in that function <em>very, very limited</em>. That's a lot of work for the browser, particularly older Microsoft ones. Yes, on modern computers it doesn't seem like much, but there is a lot going on in browsers... So for example, you might keep track of the last position you processed and bail from the handler immediately if the position hasn't changed.</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>Here's a solution, based on jQuery and a mouse event listener (which is far better than a regular polling) on the body:</p>\n\n<pre><code>$(\"body\").mousemove(function(e) {\n    document.Form1.posx.value = e.pageX;\n    document.Form1.posx.value = e.pageY;\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I am hoping to track the position of the mouse cursor, periodically every t mseconds. So essentially, when a page loads - this tracker should start and for (say) every 100 ms, I should get the new value of posX and posY and print it out in the form. </p>\n\n<p>I tried the following code - but the values do not get refreshed - only the initial values of posX and posY show up in the form boxes. Any ideas on how I can get this up and running ? </p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt; Track Mouse &lt;/title&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction mouse_position()\n{\n    var e = window.event;\n\n    var posX = e.clientX;\n    var posY = e.clientY;\n\n    document.Form1.posx.value = posX;\n    document.Form1.posy.value = posY;\n\n    var t = setTimeout(\"mouse_position()\",100);\n\n}\n&lt;/script&gt;\n\n&lt;/head&gt;\n\n&lt;body onload=\"mouse_position()\"&gt;\n&lt;form name=\"Form1\"&gt;\nPOSX: &lt;input type=\"text\" name=\"posx\"&gt;&lt;br&gt;\nPOSY: &lt;input type=\"text\" name=\"posy\"&gt;&lt;br&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1414231355,
            "question_id": 7790725,
            "score": 30,
            "tags": [
                "javascript"
            ],
            "title": "Javascript - Track mouse position"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Without addressing whether you <em>should</em> use jQuery to build XML, here are some ideas on <em>how</em> you might do it:</p>\n\n<pre><code>// Simple helper function creates a new element from a name, so you don't have to add the brackets etc.\n$.createElement = function(name)\n{\n    return $('&lt;'+name+' /&gt;');\n};\n\n// JQ plugin appends a new element created from 'name' to each matched element.\n$.fn.appendNewElement = function(name)\n{\n    this.each(function(i)\n    {\n        $(this).append('&lt;'+name+' /&gt;');\n    });\n    return this;\n}\n\n/* xml root element - because html() does not include the root element and we want to \n * include &lt;report /&gt; in the output. There may be a better way to do this.\n */\nvar $root = $('&lt;XMLDocument /&gt;');\n\n$root.append\n(\n    // one method of adding a basic structure\n    $('&lt;report /&gt;').append\n    (\n        $('&lt;submitter /&gt;').append\n        (\n            $('&lt;name /&gt;').text('John Doe')\n        )\n    )\n    // example of our plugin\n    .appendNewElement('students')\n);\n\n// get a reference to report\nvar $report = $root.find('report');\n\n// get a reference to students\nvar $students = $report.find('students');\n// or find students from the $root like this: $root.find('report&gt;students');\n\n// create 'Alice'\nvar $newStudent = $.createElement('student');\n// add 'name' element using standard jQuery\n$newStudent.append($('&lt;name /&gt;').text('Alice'));\n// add 'grade' element using our helper\n$newStudent.append($.createElement('grade').text('80'));\n\n// add 'Alice' to &lt;students /&gt;\n$students.append($newStudent);\n\n// create 'Bob'\n$newStudent = $.createElement('student');\n$newStudent.append($('&lt;name /&gt;').text('Bob'));\n$newStudent.append($.createElement('grade').text('90'));\n\n// add 'Bob' to &lt;students /&gt;\n$students.append($newStudent);\n\n// display the markup as text\nalert($root.html());\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>&lt;report&gt;\n    &lt;submitter&gt;\n        &lt;name&gt;John Doe&lt;/name&gt;\n    &lt;/submitter&gt;\n    &lt;students&gt;\n        &lt;student&gt;\n            &lt;name&gt;Alice&lt;/name&gt;\n            &lt;grade&gt;80&lt;/grade&gt;\n        &lt;/student&gt;\n        &lt;student&gt;\n            &lt;name&gt;Bob&lt;/name&gt;\n            &lt;grade&gt;90&lt;/grade&gt;\n        &lt;/student&gt;\n    &lt;/students&gt;\n&lt;/report&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Have you considered JSON?  You could save the data using objects.  Then you could use <code>JSON.stringify(obj);</code> and send that to the server.</p>\n\n<p>a simple example</p>\n\n<pre><code>var obj = new student('Alice',80);\n\nfunction student(a,b){\n  this.name=a;\n  this.grade=b;\n}\n\nfunction sendToServer(){\n  var dataString = JSON.stringify(obj);\n  //the HTTP request\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The second approach seems a good way to go. It was designed to work with XML documents.\nOnce you have the document object created, use the standard XML DOM manipulation methods to construct the entire document.</p>\n\n<pre><code>// creates a Document object with root \"&lt;report&gt;\"\nvar doc = document.implementation.createDocument(null, \"report\", null);\n\n// create the &lt;submitter&gt;, &lt;name&gt;, and text node\nvar submitterElement = doc.createElement(\"submitter\");\nvar nameElement = doc.createElement(\"name\");\nvar name = doc.createTextNode(\"John Doe\");\n\n// append nodes to parents\nnameElement.appendChild(name);\nsubmitterElement.appendChild(nameElement);\n\n// append to document\ndoc.documentElement.appendChild(submitterElement);\n</code></pre>\n\n<p>This may seem a little verbose but is the right way to build the XML document. jQuery does not actually construct any XML document, but just relies on the <code>innerHTML</code> property to parse and reconstruct a DOM given an HTML string. The problem with that approach is that when tag names in your XML collide with tag names in HTML such as <code>&lt;table&gt;</code> or <code>&lt;option&gt;</code>, then the results can be unpredictable.</p>\n\n<p>To cut down on the verboseness, write a small helper library, or maybe a jQuery plugin to construct the document.</p>\n\n<p>Here's a quick and dirty solution to creating a XML document using a recursive approach.</p>\n\n<pre><code>// use this document for creating XML\nvar doc = document.implementation.createDocument(null, null, null);\n\n// function that creates the XML structure\nfunction \u03a3() {\n    var node = doc.createElement(arguments[0]), text, child;\n\n    for(var i = 1; i &lt; arguments.length; i++) {\n        child = arguments[i];\n        if(typeof child == 'string') {\n            child = doc.createTextNode(child);\n        }\n        node.appendChild(child);\n    }\n\n    return node;\n};\n\n// create the XML structure recursively\n\u03a3('report',\n    \u03a3('submitter',\n        \u03a3('name', 'John Doe')\n    ),\n    \u03a3('students',\n        \u03a3('student',\n            \u03a3('name', 'Alice'),\n            \u03a3('grade', '80')\n        ),\n        \u03a3('student',\n            \u03a3('name', 'Bob'),\n            \u03a3('grade', '90')\n        )\n    )\n);\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>&lt;report&gt;\u200b\n    &lt;submitter&gt;\u200b\n        &lt;name&gt;\u200bJohn Doe\u200b&lt;/name&gt;\u200b\n    &lt;/submitter&gt;\u200b\n    &lt;students&gt;\u200b\n        &lt;student&gt;\u200b\n            &lt;name&gt;\u200bAlice\u200b&lt;/name&gt;\u200b\n            &lt;grade&gt;\u200b80\u200b&lt;/grade&gt;\u200b\n        &lt;/student&gt;\u200b\n        &lt;student&gt;\u200b\n            &lt;name&gt;\u200bBob\u200b&lt;/name&gt;\u200b\n            &lt;grade&gt;\u200b90\u200b&lt;/grade&gt;\u200b\n        &lt;/student&gt;\u200b\n    &lt;/students&gt;\u200b\n&lt;/report&gt;\u200b\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/vquyT/1\">See example</a></p>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>I've found Ariel Flesler's XMLWriter constructor function to be a good start for creating XML from scratch (in memory), take a look at this </p>\n\n<p><a href=\"http://flesler.blogspot.com/2008/03/xmlwriter-for-javascript.html\" rel=\"nofollow\">http://flesler.blogspot.com/2008/03/xmlwriter-for-javascript.html</a></p>\n\n<p>Example</p>\n\n<pre><code>function test(){    \n   // XMLWriter will use DOMParser or Microsoft.XMLDOM\n   var v = new  XMLWriter();\n   v.writeStartDocument(true);\n   v.writeElementString('test','Hello World');\n   v.writeAttributeString('foo','bar');\n   v.writeEndDocument();\n   console.log( v.flush() );\n}\n</code></pre>\n\n<p>Result</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\" standalone=\"true\" ?&gt;\n&lt;test foo=\"bar\"&gt;Hello World&lt;/test&gt;\n</code></pre>\n\n<p>A couple of caveats, it doesn't escape strings and the syntax can get coyote++ ugly.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Note:</p>\n\n<pre><code>$.createElement = function(name)\n{\n  return $('&lt;'+name+' /&gt;');\n};\n</code></pre>\n\n<p>jquery creates elements in lower case, <code>$(\"&lt;topMenu /&gt;\")</code> and <code>$(\"&lt;topmenu /&gt;\")</code> creates equal elements <code>&lt;topmenu /&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am working on a Web application that needs to send XML to a server backend. I'd like to build a XML document in-memory on the client-side, but using XML manipulation routines, instead of appending countless strings together. I'm hoping jQuery can help me out.</p>\n\n<p>Let's say I need to generate this (toy) XML document with JavaScript:</p>\n\n<pre><code>&lt;report&gt;\n    &lt;submitter&gt;\n        &lt;name&gt;John Doe&lt;/name&gt;\n    &lt;/submitter&gt;\n    &lt;students&gt;\n        &lt;student&gt;\n            &lt;name&gt;Alice&lt;/name&gt;\n            &lt;grade&gt;80&lt;/grade&gt;\n        &lt;/student&gt;\n        &lt;student&gt;\n            &lt;name&gt;Bob&lt;/name&gt;\n            &lt;grade&gt;90&lt;/grade&gt;\n        &lt;/student&gt;\n    &lt;/students&gt;\n&lt;/report&gt;\n</code></pre>\n\n<p>To start, I need to create some kind of an XML document object with the \"report\" root. I'm assuming one of these should be close, but none of them work quite right, and/or I can't quite figure out how to use the object properly:</p>\n\n<pre><code>function generateDocument1()\n{\n    var report = $('&lt;report&gt;&lt;/report&gt;');\n    return report;\n}\n\nfunction generateDocument2()\n{\n    var report = document.implementation.createDocument(null, \"report\", null);\n\n    return new XMLSerializer().serializeToString(report);   \n}\n\nfunction createXmlDocument(string)\n{\n    var doc;\n    if (window.DOMParser)\n    {\n        parser = new DOMParser();\n        doc = parser.parseFromString(string, \"application/xml\");\n    }\n    else // Internet Explorer\n    {\n        doc = new ActiveXObject(\"Microsoft.XMLDOM\");\n        doc.async = \"false\";\n        doc.loadXML(string); \n    }\n    return doc;\n}\n\nfunction generateDocument3()\n{\n    var report = createXmlDocument('&lt;report&gt;&lt;/report&gt;');\n\n    return report;\n}\n</code></pre>\n\n<p>Now I want to create and append elements. How do I do that? I imagine it's something like this:</p>\n\n<pre><code>function generateReportXml()\n{\n    // Somehow generate the XML document object with root\n    var report = /*???*/;\n\n    // Somehow create the XML nodes\n    var submitter = /*???*/;\n    var name = /*???*/;\n\n    // Somehow append name to submitter, and submitter to report\n    submitter.append(name); /*???*/\n    report.append(submitter); /*???*/\n\n    // ... append the rest of the XML\n\n    return report;\n}\n</code></pre>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1391472414,
            "question_id": 3191179,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "xml"
            ],
            "title": "Generate XML document in-memory with JavaScript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Due to privacy concerns, it's impossible to disable the back button or examine the user's history, but it is possible to create new entries in this history without changing pages. Whenever your AJAX application changes state, update <code>top.location</code> with a new <a href=\"http://en.wikipedia.org/wiki/URI%5Fscheme#Generic%5Fsyntax\" rel=\"nofollow\">URI fragment</a>.</p>\n\n<pre><code>top.location = \"#new-application-state\";\n</code></pre>\n\n<p>This will create a new entry in the browser's history stack. A number of AJAX libraries already handle all the boring details, such as <a href=\"http://code.google.com/p/reallysimplehistory/\" rel=\"nofollow\">Really Simple History</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Ah, the back button. You might imagine \"back\" fires a JavaScript event which you could simply cancel like so:</p>\n\n<pre><code>document.onHistoryGo = function() { return false; }\n</code></pre>\n\n<p>No so. There simply is no such event.</p>\n\n<p>If you really do have a <em>web app</em> (as opposed to just a web site with some ajaxy features) it's reasonable to take over the back button (with fragments on the URL, as you mention). Gmail does this. I'm talking about when your web app in all in one page, all self-contained.</p>\n\n<p>The technique is simple &mdash; whenever the user takes action that modifies things, redirect to the same URL you're already on, but with a different hash fragment. E.g.</p>\n\n<pre><code>window.location.hash = \"#deleted_something\";\n...\nwindow.location.hash = \"#did_something_else\";\n</code></pre>\n\n<p>If the overall state of your web app is hashable, this is a great place to use a hash. Say you have a list of emails, maybe you'd concatenate all their IDs and read/unread statuses, and take an MD5 hash, using that as your fragment identifier.</p>\n\n<p>This kind of redirect (hash only) doesn't try to fetch anything from the server, but it does insert a slot in the browser's history list. So in the example above, user hits \"back\" and they're now showing *#deleted_something* in the address bar. They hit back again and they're still on your page but with no hash. Then back again and they <em>actually</em> go back, to wherever they came from.</p>\n\n<p>Now the hard part though, having your JavaScript detect when the user hit back (so you can revert state). All you do is watch the window location and see when it changes. With polling. (I know, yuck, polling. Well, there's nothing better cross-browser right now). You won't be able to tell if they went forward or back though, so you'll have to get creative with your hash identifiers. (Perhaps a hash concatenated with a sequence number...)</p>\n\n<p>This is the gist of the code. (This is also how the jQuery History plugin works.)</p>\n\n<pre><code>var hash = window.location.hash;\nsetInterval(function(){\n    if (window.location.hash != hash) {\n        hash = window.location.hash;\n        alert(\"User went back or forward to application state represented by \" + hash);\n    }\n}, 100);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>I do something like this. I keep an array with previous app states.</p>\n\n<p>Initiated as:</p>\n\n<pre><code>var backstack = [];\n</code></pre>\n\n<p>Then I listen for changes in the location hash, and when it changes I do this:</p>\n\n<pre><code>if (backstack.length &gt; 1 &amp;&amp; backstack[backstack.length - 2] == newHash) {\n    // Back button was probably pressed\n    backstack.pop();\n} else\n    backstack.push(newHash);\n</code></pre>\n\n<p>This way I have a somewhat simple way of keeping track of user history. Now if I want to implement a back button in the app (not the browser-botton), I just make it do:</p>\n\n<pre><code>window.location.hash = backstack.pop();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Using jQuery I've made a simple solution:</p>\n\n<pre><code>$(window).bind('hashchange', function() {\n        top.location = '#main';\n        // Eventually alert the user describing what happened\n});\n</code></pre>\n\n<p>So far only tested in Google Chrome though.</p>\n\n<p>This solved the problem for my web app which is also highly AJAX-based.</p>\n\n<p>It is perhaps a little hack'ish - but I'd call it elegant hacking ;-) Whenever you try to navigate backwards it pops a hash part in the URI which is technically what it then tries to navigate backwards over.</p>\n\n<p>It intercepts both clicking the browser button and mouse button. And you can't bruteforce it backwards either by clicking several times a second, which is a problem that would occur in solutions based on setTimeout or setInterval.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I really appreciate the explanation given in <a href=\"http://stackoverflow.com/a/1844577/1766230\">darkporter's answer</a>, but I think it can be improved by using a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.onhashchange\" rel=\"nofollow\">\"<strong>hashchange</strong>\" event</a>. As darkporter explained, you want to make sure that all of your buttons change the window.location.hash value. </p>\n\n<ul>\n<li>One way is to use <code>&lt;button&gt;</code> elements, and then attach events to them that then set <code>window.location.hash = \"#!somehashstring\";</code>. </li>\n<li>Another way to do this is to just use links for your buttons, like <code>&lt;a href=\"#!somehashstring\"&gt;Button 1&lt;/a&gt;</code>. The hash is automatically updated when these links are clicked.</li>\n</ul>\n\n<p>The reason I have an exclamation mark after the hash sign is to satisfy Google's \"hashbang\" paradigm (<a href=\"https://developers.google.com/webmasters/ajax-crawling/docs/getting-started\" rel=\"nofollow\">read more about that</a>), which is useful if you want to be indexed by search engines. Your hashstring will typically be name/value pairs like <code>#!color=blue&amp;shape=triangle</code> or a list like <code>#!/blue/triangle</code> -- whatever makes sense for your web app.</p>\n\n<p>Then you only need to add this bit of code which will fire whenever the hash value changes (including <strong>when the back button is hit</strong>). No polling loop seems to be necessary.</p>\n\n<pre><code>window.addEventListener(\"hashchange\", function(){\n    console.log(\"Hash changed to\", window.location.hash);\n    // .... Do your thing here...\n});\n</code></pre>\n\n<p>I haven't tested in anything but Chrome 36, but <a href=\"http://caniuse.com/hashchange\" rel=\"nofollow\">according to caniuse.com</a>, this should be available in IE8+, FF21+, Chrome21+, and most other browsers except Opera Mini.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>To give an up-to-date answer to an old (but popular) question:</p>\n\n<blockquote>\n  <p>HTML5 introduced the <code>history.pushState()</code> and <code>history.replaceState()</code> methods, which allow you to add and modify history entries, respectively. These methods work in conjunction with the <code>window.onpopstate</code> event.</p>\n  \n  <p>Using <code>history.pushState()</code> changes the referrer that gets used in the HTTP header for <code>XMLHttpRequest</code> objects created after you change the state. The referrer will be the URL of the document whose window is <code>this</code> at the time of creation of the <code>XMLHttpRequest</code> object.</p>\n</blockquote>\n\n<p>Source: <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history?redirectlocale=en-US&amp;redirectslug=DOM%2FManipulating_the_browser_history#Adding_and_modifying_history_entries\" rel=\"nofollow\">Manipulating the browser history</a> from Mozilla Developer Network.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have an AJAX app. A user clicks a button, and the page's display changes. They click the back button, expecting to go to the original state, but instead, they go to the previous page in their browser. </p>\n\n<p>How can I intercept and re-assign the back button event? I've looked into libraries like RSH (which I couldn't get to work...), and I've heard that using the hash tag somehow helps, but I can't make sense of it.</p>\n\n<p>Thank you!</p>\n",
            "last_activity_date": 1418053934,
            "question_id": 1844491,
            "score": 20,
            "tags": [
                "javascript",
                "ajax",
                "cross-browser",
                "history"
            ],
            "title": "Intercepting call to the back button in my AJAX application: I don&#39;t want it to do anything!"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Without flash, it's simply not possible in most browsers. The user's clipboard is a security-relevant resource since it could contain things like passwords or credit card numbers. Thus, browsers rightly don't allow Javascript access to it (some allow it with a warning shown that the user has confirm, or with signed Javascript code, but none of that is cross-browser).</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>There is not way around, you have to use flash. There is a JQuery plugin called <a href=\"http://yangshuai.googlepages.com/jquerycopyplugin\" rel=\"nofollow\">jquery.copy</a> that provided cross browser copy and paste by using a flash (swf) file. This is similar to how the syntax highlighter on my blog works.</p>\n\n<p>Once you reference the jquery.copy.js file all you need to do to push data into the clipboard is run the following:</p>\n\n<pre><code>$.copy(\"some text to copy\");\n</code></pre>\n\n<p>Nice and easy ;)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use a clipboard local to the HTML page. This allows you to copy/cut/paste content WITHIN the HTML page, but not from/to third party applications or between two HTML pages.</p>\n\n<p>This is how you can write a custom function to do this (tested in chrome and firefox):</p>\n\n<p><strong>Here is the <a href=\"http://jsfiddle.net/eatchocolate/t91qsvah/\" rel=\"nofollow\">FIDDLE</a> that demonstrates how you can do this.</strong></p>\n\n<p>I will also paste the fiddle here for reference.</p>\n\n<hr>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;p id=\"textToCopy\"&gt;This is the text to be copied&lt;/p&gt;\n&lt;input id=\"inputNode\" type=\"text\" placeholder=\"Copied text will be pasted here\" /&gt; &lt;br/&gt;\n\n&lt;a href=\"#\" onclick=\"cb.copy()\"&gt;copy&lt;/a&gt;\n&lt;a href=\"#\" onclick=\"cb.cut()\"&gt;cut&lt;/a&gt;\n&lt;a href=\"#\" onclick=\"cb.paste()\"&gt;paste&lt;/a&gt;\n</code></pre>\n\n<hr>\n\n<p><strong>JS</strong></p>\n\n<pre><code>function Clipboard() {\n    /* Here we're hardcoding the range of the copy\n    and paste. Change to achieve desire behavior. You can\n    get the range for a user selection using\n    window.getSelection or document.selection on Opera*/\n    this.oRange = document.createRange();\n    var textNode = document.getElementById(\"textToCopy\");\n    var inputNode = document.getElementById(\"inputNode\");\n    this.oRange.setStart(textNode,0);\n    this.oRange.setEndAfter(textNode);\n    /* --------------------------------- */\n}\n\nClipboard.prototype.copy = function() {\n    this.oFragment= this.oRange.cloneContents();\n};\n\nClipboard.prototype.cut = function() {\n    this.oFragment = this.oRange.extractContents();\n};\n\nClipboard.prototype.paste = function() {\n    var cloneFragment=this.oFragment.cloneNode(true)\n    inputNode.value = cloneFragment.textContent;\n};\n\nwindow.cb = new Clipboard();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had tryed the flash solution and I don't liked too. Too complex and too slow. What I did was to create a textarea, put the data into that and use the browser \"CTRL + C\" behavior.</p>\n\n<p>The jQuery javascript part:</p>\n\n<pre><code>// catch the \"ctrl\" combination keydown\n$.ctrl = function(key, callback, args) {\n    $(document).keydown(function(e) {\n        if(!args) args=[]; // IE barks when args is null\n        if(e.keyCode == key &amp;&amp; e.ctrlKey) {\n            callback.apply(this, args);\n            return false;\n        }\n    });\n};\n\n// put your data on the textarea and select all\nvar performCopy = function() {\n    var textArea = $(\"#textArea1\");\n    textArea.text('PUT THE TEXT TO COPY HERE. CAN BE A FUNCTION.');\n    textArea[0].focus();\n    textArea[0].select();\n};\n\n// bind CTRL + C\n$.ctrl('C'.charCodeAt(0), performCopy);\n</code></pre>\n\n<p>The HTML part:<br>\n    <code>&lt;textarea id=\"textArea1\"&gt;&lt;/textarea&gt;</code></p>\n\n<p>Now, put what do you want to copy in 'PUT THE TEXT TO COPY HERE. CAN BE A FUNCTION.' area.\nWorks fine for me me. You just have to make one CTRL+C combination. The only drawback is that you are going to have an ugly textarea displayed in you site. If you use the style=\"display:none\" the copy solution will not work.</p>\n",
                    "is_accepted": false,
                    "score": 23
                }
            ],
            "body": "<p>I found many solutions for copying to the clipboard, but they all either with flash, or for websites side.\nI'm looking for method copy to clipboard automatically, without flash and for user side, it's for userscripts and of course cross-browser.</p>\n",
            "last_activity_date": 1414012555,
            "question_id": 6355300,
            "score": 65,
            "tags": [
                "javascript",
                "jquery",
                "clipboard"
            ],
            "title": "Copy to clipboard without Flash"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Add an 100% wide element inside it. Then set overflow to hidden. If the element's computed style (from jQ) changes, the parent had a scrollbar.</p>\n\n<p>EDIT: It seems you want a cross browser method like <em>getComputedStyle</em>. Try:</p>\n\n<pre><code>function getCSS(_elem, _style)\n{\n    var computedStyle;\n    if (typeof _elem.currentStyle != 'undefined')\n        computedStyle = _elem.currentStyle;\n    else\n        computedStyle = document.defaultView.getComputedStyle(_elem, null);\n    return computedStyle[_style];\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>Try:</p>\n\n<p>For vertical scroll bar </p>\n\n<blockquote>\n  <p>el.scrollHeight > el.clientHeight</p>\n</blockquote>\n\n<p>For horizontal scrollbar</p>\n\n<blockquote>\n  <p>el.scrollWidth > el.clientWidth</p>\n</blockquote>\n\n<p>I know this works for IE8 and Firefox 3.6+ at least.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This may seem <em>(or be)</em> a little hackish, but you could test the <code>scrollTop</code> and <code>scrollLeft</code> properties.</p>\n\n<p>If they're greater than 0, you know there are scrollbars. If they're 0, then set them to 1, and test them again to see if you get a result of 1. Then set them back to 0.</p>\n\n<p><strong>Example:</strong> <a href=\"http://jsfiddle.net/MxpR6/1/\">http://jsfiddle.net/MxpR6/1/</a></p>\n\n<pre><code>function hasScroll(el, direction) {\n    direction = (direction === 'vertical') ? 'scrollTop' : 'scrollLeft';\n    var result = !! el[direction];\n\n    if (!result) {\n        el[direction] = 1;\n        result = !!el[direction];\n        el[direction] = 0;\n    }\n    return result;\n}\n\nalert('vertical? ' + hasScroll(document.body, 'vertical'));\nalert('horizontal? ' + hasScroll(document.body, 'horizontal'));\n</code></pre>\n\n<p><s>I believe there's a different property for IE, so I'll update in a minute with that.</s></p>\n\n<p><strong>EDIT:</strong> Appears as though IE may support this property. (I can't test IE right now.)</p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ms534618(VS.85).aspx\">http://msdn.microsoft.com/en-us/library/ms534618(VS.85).aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I found this somewhere a couple of weeks ago. It worked for me.</p>\n\n<pre><code>div = document.getElementById('container_div_id');\nvar hasHorizontalScrollbar= div.scrollWidth&gt;div.clientWidth;\nvar hasVerticalScrollbar= div.scrollHeight&gt;div.clientHeight;\n\n/* you get true/false */\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>I maybe a little late to the party, but...</p>\n\n<p>I believe you can detect for scrollbars with e.offsetWidth vs. e.clientWidth. Offset width includes borders and scrollbars, padding and width. Client width includes padding and width. Please see:</p>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/element.offsetWidth\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/element.offsetWidth</a> (second image)\n<a href=\"https://developer.mozilla.org/en/DOM/element.clientWidth\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/element.clientWidth</a> (second image)</p>\n\n<p>You need to check:</p>\n\n<ol>\n<li>Whether or not the element has overflow set to auto/scroll (including overflowX/Y) using the computed/cascaded/current style.</li>\n<li>If the element does have overflow set to auto/scroll. Establish the offsetWidth and clientWidth.</li>\n<li>If the clientWidth is less than the offsetWidth - right border (found again through the computed/cascaded/current style), then you know you have a scrollbar.</li>\n</ol>\n\n<p>Do the same for the vertical (offset/clientHeight).</p>\n\n<p>IE7 reports a clientHeight of 0 for some elements (I haven't checked why), therefore you always need the first overflow check.</p>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just messing around here as none of the above solutions worked out for me (so far).\nI have found some success with comparing a Div's scrollheight against its offsetHeight</p>\n\n<pre><code>var oh = $('#wrapDiv').get(0).offsetHeight;\nvar sh = $('#wrapDiv').get(0).scrollHeight;\n</code></pre>\n\n<p>It seems to give me an acurate comparison...so far. Does someone know if this is legitimate?</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What's the fastest way of checking whether an element has scroll bars?</p>\n\n<p>One thing of course is checking whether element is larger than its viewport, which can easily be done by checking these two values:</p>\n\n<pre><code>el.scrollHeight &gt; el.offsetHeight || el.scrollWidth &gt; el.offsetWidth\n</code></pre>\n\n<p>but that doesn't mean that it has scrollbars as well (so it can actually be scrolled by humans).</p>\n\n<h2>Question</h2>\n\n<p>How do I check for scrollbars in a <strong>1</strong> cross browser and <strong>2</strong> javascript only (as in <em>no jQuery</em>) way?</p>\n\n<p>Javascript only, because I need as small overhead as possible, because I'd like to write a very fast jQuery selector filter</p>\n\n<pre><code>// check for specific scrollbars\n$(\":scrollable(x/y/both)\")\n\n// check for ANY scrollbar\n$(\":scrollable\")\n</code></pre>\n\n<p>I suppose I'd have to check for <code>overflow</code> style settings but how do I do that in a cross browser way?</p>\n\n<h2>Additional edit</h2>\n\n<p>Not only <code>overflow</code> style settings. Checking whether an element has a scrollbar isn't as trivial as it seems. The first formula I've written above works fine when element doesn't have a border, but when it does (especially when border is of considerable width), <code>offset</code> dimension can be larger than <code>scroll</code> dimension but the element can still be scrollable. We actually have to subtract borders from <code>offset</code> dimension to get the actual scrollable viewport of the element and compare that to <code>scroll</code> dimension.</p>\n\n<h2>For future reference</h2>\n\n<p><code>:scrollable</code> jQuery selector filter is included in my <code>.scrollintoview()</code> jQuery plugin. Complete code can be found in my <a href=\"http://erraticdev.blogspot.com/2011/02/jquery-scroll-into-view-plugin-with.html\">blog post</a> if anybody needs it. Even though it didn't provide the actual solution Soumya's code considerably helped me solve the problem. It pointed me in the right direction.</p>\n",
            "last_activity_date": 1385631158,
            "question_id": 4880381,
            "score": 39,
            "tags": [
                "javascript",
                "dom",
                "scrollbar",
                "overflow"
            ],
            "title": "Check whether HTML element has scrollbars"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Have you tried using jQuery's <a href=\"http://docs.jquery.com/Ajax/jQuery.ajax#options\">ajax</a> request? As of version 1.3 jQuery supports certain types of cross domain ajax requests.</p>\n\n<p>Quoting from the reference above:</p>\n\n<blockquote>\n  <p>Note: All remote (not on the same\n  domain) requests should be specified\n  as GET when 'script' or 'jsonp' is the\n  dataType (because it loads script\n  using a DOM script tag). Ajax options\n  that require an XMLHttpRequest object\n  are not available for these requests.\n  The complete and success functions are\n  called on completion, but do not\n  receive an XHR object; the beforeSend\n  and dataFilter functions are not\n  called.</p>\n  \n  <p>As of jQuery 1.2, you can load JSON\n  data located on another domain if you\n  specify a JSONP callback, which can be\n  done like so: \"myurl?callback=?\".\n  jQuery automatically replaces the ?\n  with the correct method name to call,\n  calling your specified callback. Or,\n  if you set the dataType to \"jsonp\" a\n  callback will be automatically added\n  to your Ajax request.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I've tried using that 'UniversalBrowswerRead' thing too and it didn't work. You might be able to add an 'allow' header, but I haven't actually tried doing it yet. It's pretty new.</p>\n\n<p>You can find more information <a href=\"http://websecurity.ro/blog/2008/04/10/cross-domain-requests-will-be-back/\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>What about using something like mod_proxy? Then it looks to your browser like the requests are going to the same server, but they're really being forwarded to another server.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is the thing, there is no way to \"temporarily\" disable cross-domain XMLHttpRequest, if you can disable it temporarily then it can be disabled permanently.  This is a rather common problem in the modern-day of AJAX programming and is most often solved using the technique known as cross-domain scripting.  </p>\n\n<p>The idea here being is that if you call out to a cross-domain script it returns JavaScript (JSON) results that are then passed on to a function on your end.  </p>\n\n<p>Here is some sample code to illustrate how it may look from a JavaScript code perspective:</p>\n\n<pre><code>  function request_some_data() {\n    var s = \"http://my.document.url.com/my_data?p1=v1&amp;p2=v2&amp;callback=myfunc\";\n\n      try {\n        try{\n          document.write(\"&lt;scr\"+\"ipt type='text/javascript' src='\"+s+\"'&gt;&lt;/scr\"+\"ipt&gt;\");\n        } \n        catch(e){\n          var x = document.createElement(\"script\");\n          x.src = s;\n          document.getElementsByTagName(\"head\")[0].appendChild(x);\n        }\n      }\n      catch (e) {\n        alert(e.message);\n      }\n   }\n</code></pre>\n\n<p>You will then define a function in your code that receives the data and in the server you \"handle\" the callback case, here is the client-side JavaScript:</p>\n\n<pre><code>function myfunc(data) {\n  alert(data);\n}\n</code></pre>\n\n<p>And on the server side, here i'm giving a PHP example but this can be done just as easily in Java or what-ever your server-side technology is:</p>\n\n<pre><code>&lt;?php\n   if($_GET[\"callback\"]) {\n     print($_GET[\"callback\"] . \"(\");\n   }\n   /* place your JSON object code/logic here */\n   if($_GET[\"callback\"]) {\n     print(\");\");\n   }\n ?&gt;\n</code></pre>\n\n<p>Note that what you are generating on the server side winds up being some JavaScript that gets executed on the client side.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>For modern browsers, you may try the following approach:</p>\n\n<p><a href=\"https://developer.mozilla.org/en/HTTP_access_control\">https://developer.mozilla.org/en/HTTP_access_control</a></p>\n\n<p>In short, you need to add the following into the <code>SERVER</code> response header (the following allows access <em>from</em> <code>foo.example</code>):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Access-Control-Allow-Origin: http://foo.example\nAccess-Control-Allow-Methods: POST, GET, OPTIONS\nAccess-Control-Allow-Headers: X-PINGOTHER\nAccess-Control-Max-Age: 1728000\n</code></pre>\n\n<p>Note that the <code>X-PINGOTHER</code> is the custom header that is inserted by JavaScript, and should differ from site to site.</p>\n\n<p>If you want any site access your server in Ajax, use <code>*</code> instead.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>I'm facing this from <code>file://</code>. I'd like to send queries to two servers from a local HTML file (a testbed).</p>\n\n<p>This particular case should not be any safety concern, but only Safari allows this.</p>\n\n<p>Here is the <a href=\"http://www.simple-talk.com/dotnet/asp.net/calling-cross-domain-web-services-in-ajax/\" rel=\"nofollow\">best discussion</a> I've found of the issue.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I used Fiddler as a proxy. <a href=\"http://www.fiddler2.com/fiddler2/\" rel=\"nofollow\">Fiddler</a> redirects localhost calls to a external server.</p>\n\n<p>I configured Firefox to use manual proxy (127.0.0.1 port 8888). Fiddler capture the calls and redirect them to another server, by using URL filters.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you just don't want to waste your time on cross-domain issues during development and testing of your app you can use addon <a href=\"https://addons.mozilla.org/en-US/firefox/addon/forcecors/\" rel=\"nofollow\">Force CORS</a> for FF.</p>\n\n<p>UPDATE: It seems that this addon no longer exists. But there is another option - this <a href=\"https://chrome.google.com/webstore/detail/allow-control-allow-origi/nlfbmbojpeacfghkpbjhddihlkkiljbi\" rel=\"nofollow\">Chrome extension</a></p>\n",
                    "is_accepted": false,
                    "score": 24
                }
            ],
            "body": "<p>I need to <em>temporally</em> allow cross domain XMLHttpRequest. Changing firefox security setting seems to be the way to go. But I've tried with <a href=\"http://blog.dirolf.com/2007/06/enabling-cross-domain-ajax-in-firefox.html\">this</a> and <a href=\"http://www.zachleat.com/web/2007/08/30/cross-domain-xhr-with-firefox/\">this</a> but they didnt work. Has anyone been able to configure this before? Thanks.</p>\n",
            "last_activity_date": 1410422201,
            "question_id": 667519,
            "score": 39,
            "tags": [
                "javascript",
                "http",
                "xmlhttprequest"
            ],
            "title": "Firefox setting to enable cross domain ajax request"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>For security reasons most browsers do not allow to modify the clipboard (except IE, of course...).</p>\n\n<p>The only way to make a copy-to-clipboard function cross-browser compatible is to use Flash.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This works on firefox 3.6.x and IE:</p>\n\n<pre><code>    function copyToClipboardCrossbrowser(s) {           \n        s = document.getElementById(s).value;               \n\n        if( window.clipboardData &amp;&amp; clipboardData.setData )\n        {\n            clipboardData.setData(\"Text\", s);\n        }           \n        else\n        {\n            // You have to sign the code to enable this or allow the action in about:config by changing\n            //user_pref(\"signed.applets.codebase_principal_support\", true);\n            netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');\n\n            var clip = Components.classes[\"@mozilla.org/widget/clipboard;1\"].createInstance(Components.interfaces.nsIClipboard);\n            if (!clip) return;\n\n            // create a transferable\n\n            var trans = Components.classes[\"@mozilla.org/widget/transferable;1\"].createInstance(Components.interfaces.nsITransferable);\n            if (!trans) return;\n\n            // specify the data we wish to handle. Plaintext in this case.\n            trans.addDataFlavor('text/unicode');\n\n            // To get the data from the transferable we need two new objects\n            var str = new Object();\n            var len = new Object();\n\n            var str = Components.classes[\"@mozilla.org/supports-string;1\"].createInstance(Components.interfaces.nsISupportsString);\n\n            str.data= s;        \n\n            trans.setTransferData(\"text/unicode\",str, str.data.length * 2);\n\n            var clipid=Components.interfaces.nsIClipboard;              \n            if (!clip) return false;\n            clip.setData(trans,null,clipid.kGlobalClipboard);      \n        }\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I spent a lot of time looking for a solution to this problem too. Here's what i've found thus far:</p>\n\n<p>If you want your users to be able to click on a button and copy some text, you may have to use Flash.</p>\n\n<p>If you want your users to press Ctrl+C anywhere on the page, but always copy xyz to the clipboard, I wrote an all-JS solution in YUI3 (although it could easily be ported to other frameworks, or raw JS if you're feeling particularly self-loathing).</p>\n\n<p>It involves creating a textbox off the screen which gets highlighted as soon as the user hits Ctrl/CMD. When they hit 'C' shortly after, they copy the hidden text. If they hit 'V', they get redirected to a container (of your choice) before the paste event fires.</p>\n\n<p>This method can work well, because while you listen for the Ctrl/CMD keydown anywhere in the body, the 'A', 'C' or 'V' keydown listeners only attach to the hidden text box (and not the whole body). \nIt also doesn't have to break the users expectations - you only get redirected to the hidden box if you had nothing selected to copy anyway!</p>\n\n<p>Here's what i've got working on my site, but check <a href=\"http://at.cg/js/clipboard.js\">http://at.cg/js/clipboard.js</a> for updates if there are any:</p>\n\n<pre><code>YUI.add('clipboard', function(Y) {\n\n\n// Change this to the id of the text area you would like to always paste in to:\n\npasteBox = Y.one('#pasteDIV');\n\n\n// Make a hidden textbox somewhere off the page.\n\nY.one('body').append('&lt;input id=\"copyBox\" type=\"text\" name=\"result\" style=\"position:fixed; top:-20%;\" onkeyup=\"pasteBox.focus()\"&gt;');\ncopyBox = Y.one('#copyBox');\n\n\n// Key bindings for Ctrl+A, Ctrl+C, Ctrl+V, etc:\n\n// Catch Ctrl/Window/Apple keydown anywhere on the page.\nY.on('key', function(e) {\n    copyData();\n        //  Uncomment below alert and remove keyCodes after 'down:' to figure out keyCodes for other buttons.\n        //  alert(e.keyCode);\n        //  }, 'body',  'down:', Y);\n}, 'body',  'down:91,224,17', Y);\n\n// Catch V - BUT ONLY WHEN PRESSED IN THE copyBox!!!\nY.on('key', function(e) {\n    // Oh no! The user wants to paste, but their about to paste into the hidden #copyBox!!\n    // Luckily, pastes happen on keyPress (which is why if you hold down the V you get lots of pastes), and we caught the V on keyDown (before keyPress).\n    // Thus, if we're quick, we can redirect the user to the right box and they can unload their paste into the appropriate container. phew.\n    pasteBox.select();\n}, '#copyBox',  'down:86', Y);\n\n// Catch A - BUT ONLY WHEN PRESSED IN THE copyBox!!!\nY.on('key', function(e) {\n    // User wants to select all - but he/she is in the hidden #copyBox! That wont do.. select the pasteBox instead (which is probably where they wanted to be).\n    pasteBox.select();\n}, '#copyBox',  'down:65', Y);\n\n\n\n// What to do when keybindings are fired:\n\n// User has pressed Ctrl/Meta, and is probably about to press A,C or V. If they've got nothing selected, or have selected what you want them to copy, redirect to the hidden copyBox!\nfunction copyData() {\n    var txt = '';\n    // props to Sabarinathan Arthanari for sharing with the world how to get the selected text on a page, cheers mate!\n        if (window.getSelection) { txt = window.getSelection(); }\n        else if (document.getSelection) { txt = document.getSelection(); }\n        else if (document.selection) { txt = document.selection.createRange().text; }\n        else alert('Something went wrong and I have no idea why - please contact me with your browser type (Firefox, Safari, etc) and what you tried to copy and I will fix this immediately!');\n\n    // If the user has nothing selected after pressing Ctrl/Meta, they might want to copy what you want them to copy. \n        if(txt=='') {\n                copyBox.select();\n        }\n    // They also might have manually selected what you wanted them to copy! How unnecessary! Maybe now is the time to tell them how silly they are..?!\n        else if (txt == copyBox.get('value')) {\n        alert('This site uses advanced copy/paste technology, possibly from the future.\\n \\nYou do not need to select things manually - just press Ctrl+C! \\n \\n(Ctrl+V will always paste to the main box too.)');\n                copyBox.select();\n        } else {\n                // They also might have selected something completely different! If so, let them. It's only fair.\n        }\n}\n});\n</code></pre>\n\n<p>Hope someone else finds this useful :]</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I think zeroclipboard is great. this version work with latest Flash 11: <a href=\"http://www.itjungles.com/javascript/javascript-easy-cross-browser-copy-to-clipboard-solution\" rel=\"nofollow\">http://www.itjungles.com/javascript/javascript-easy-cross-browser-copy-to-clipboard-solution</a>.</p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I was trying to make <strong>\"Copy to Clipboard\"</strong> work on all browsers but no luck.</p>\n\n<p>Am using javascript and I don't want to use <strong>Zero Clipboard</strong> to do.</p>\n\n<p>Please let us know what wrong in my code.</p>\n\n<p>Appreciate for your help.</p>\n\n<p>Below is the code (Currently my code is working only on IE browser):- </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction copyToClipboard(s)\n{\n    if( window.clipboardData &amp;&amp; clipboardData.setData )\n    {\n        clipboardData.setData(\"Text\", s);\n    }\n    else\n    {\n        // You have to sign the code to enable this or allow the action in about:config by changing\n        user_pref(\"signed.applets.codebase_principal_support\", true);\n        netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');\n\n        var clip = Components.classes['@mozilla.org/widget/clipboard;[[[[1]]]]'].createInstance(Components.interfaces.nsIClipboard);\n        if (!clip) return;\n\n        // create a transferable\n        var trans = Components.classes['@mozilla.org/widget/transferable;[[[[1]]]]'].createInstance(Components.interfaces.nsITransferable);\n        if (!trans) return;\n\n        // specify the data we wish to handle. Plaintext in this case.\n        trans.addDataFlavor('text/unicode');\n\n        // To get the data from the transferable we need two new objects\n        var str = new Object();\n        var len = new Object();\n\n        var str = Components.classes[\"@mozilla.org/supports-string;[[[[1]]]]\"].createInstance(Components.interfaces.nsISupportsString);\n\n        var copytext=meintext;\n\n        str.data=copytext;\n\n        trans.setTransferData(\"text/unicode\",str,copytext.length*[[[[2]]]]);\n\n        var clipid=Components.interfaces.nsIClipboard;\n\n        if (!clip) return false;\n\n        clip.setData(trans,null,clipid.kGlobalClipboard);      \n    }\n}\n&lt;/script&gt;\n\n&lt;textarea id='testText' rows=\"10\" cols=\"100\"&gt;Enter your Sample text&lt;/textarea&gt;&lt;br /&gt;\n&lt;button onclick=\"copyToClipboard(document.getElementById('testText').value);\" &gt;clipboard&lt;/button&gt;&lt;br /&gt;&lt;br /&gt;\n&lt;textarea rows=\"10\" cols=\"100\"&gt;Paste your text here&lt;/textarea&gt;&lt;br /&gt;\n</code></pre>\n",
            "last_activity_date": 1384252917,
            "question_id": 7713182,
            "score": 30,
            "tags": [
                "javascript",
                "clipboard"
            ],
            "title": "Copy to Clipboard for all Browsers using javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>In your UIWebView delegate, provide an implementation for <a href=\"http://developer.apple.com/iphone/library/documentation/uikit/reference/UIWebViewDelegate_Protocol/Reference/Reference.html#//apple_ref/occ/intfm/UIWebViewDelegate/webView%3ashouldStartLoadWithRequest%3anavigationType%3a\" rel=\"nofollow\">webView:shouldStartLoadWithRequest:navigationType:</a></p>\n\n<p>In your HTML or Javascript files, add functions that send URLs to a custom scheme (for readability purposes, the custom scheme isn't required). All the URLs sent will be passed to your Objective-C method implementation, and then you can do what you'd like.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Just to illustrate the solution by \"bpapa\" with actual code:</p>\n\n<p><strong>WARNING: untested code</strong></p>\n\n<p>Implement this method in the UIWebView's delegate...</p>\n\n<pre><code>-(BOOL) webView:(UIWebView *)inWeb shouldStartLoadWithRequest:(NSURLRequest *)inRequest navigationType:(UIWebViewNavigationType)inType {\n    if ( [[[inRequest URL] scheme] isEqualToString:@\"callback\"] ) {\n\n        // Do something interesting...\n\n        return NO;\n    }\n\n    return YES;\n}\n</code></pre>\n\n<p>...then put a link in the webwieb like this:</p>\n\n<pre><code>&lt;a href=\"callback:whatever\"&gt;Click me&lt;/a&gt;\n</code></pre>\n\n<p>And it should activate your callback-code. Obviously, you could trigger it with a javascript instead of a plain link.</p>\n",
                    "is_accepted": false,
                    "score": 21
                }
            ],
            "body": "<p>Is there a way to get a callback to objective-c when a certain event has been detected in a UIWebView? Can Javascript send a callback to Objective-C?</p>\n",
            "last_activity_date": 1396934401,
            "question_id": 2873899,
            "score": 28,
            "tags": [
                "javascript",
                "objective-c",
                "ios",
                "cocoa-touch",
                "uiwebview"
            ],
            "title": "Javascript in UIWebView callback to C/Objective-C"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><strong>UPDATE:</strong> Here's <a href=\"http://geekswithblogs.net/lorint/archive/2006/03/07/71625.aspx\">an example</a> of how you can handle a timeout:</p>\n\n<pre><code>var xmlHttp = new XMLHttpRequest();\nxmlHttp.open(\"GET\", \"http://www.example.com\", true);\n\nxmlHttp.onreadystatechange=function(){\n   if (xmlHttp.readyState == 4 &amp;&amp; xmlHttp.status == 200) {\n      clearTimeout(xmlHttpTimeout); \n      alert(xmlHttp.responseText);\n   }\n}\n// Now that we're ready to handle the response, we can make the request\nxmlHttp.send(\"\");\n// Timeout to abort in 5 seconds\nvar xmlHttpTimeout=setTimeout(ajaxTimeout,5000);\nfunction ajaxTimeout(){\n   xmlHttp.abort();\n   alert(\"Request timed out\");\n}\n</code></pre>\n\n<p>In IE8, You can add a <a href=\"http://msdn.microsoft.com/en-us/library/cc304105%28VS.85%29.aspx\">timeout</a> event handler to the <code>XMLHttpRequest</code> object.</p>\n\n<pre><code>var xmlHttp = new XMLHttpRequest();\nxmlHttp.ontimeout = function(){\n  alert(\"request timed out\");\n}\n</code></pre>\n\n<p>I would recommend against making synchronous calls as your code implies and also recommend using a javascript framework to do this. <strong><a href=\"http://jquery.com\">jQuery</a></strong> is the most popular one. It makes your code more efficient, easier to maintain and cross-browser compatible.</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Some of the modern browsers (2012) do this without having to rely on <code>setTimeout</code>: it's included in the XMLHttpRequest. See answer <a href=\"http://stackoverflow.com/a/4958782/698168\">http://stackoverflow.com/a/4958782/698168</a>:</p>\n\n<pre><code>var xhr = new XMLHttpRequest();\nxhr.onreadystatechange = function () {\n    if (xhr.readyState == 4) {\n        alert(\"ready state = 4\");\n    }\n};\n\nxhr.open(\"POST\", \"http://www.service.org/myService.svc/Method\", true);\nxhr.setRequestHeader(\"Content-type\", \"application/json; charset=utf-8\");\nxhr.timeout = 4000;\nxhr.ontimeout = function () { alert(\"Timed out!!!\"); }\nxhr.send(json);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I'm looking on the web, but documentation is hard to come by.  We all know the basic AJAX call using the browser's built-in XMLHttpRequest object (assume a modern browser here):</p>\n\n<pre><code>    var xmlHttp = new XMLHttpRequest();  // Assumes native object\n\n    xmlHttp.open(\"GET\", \"http://www.example.com\", false);\n\n    xmlHttp.send(\"\");\n\n    var statusCode = xmlHttp.status;\n    // Process it, and I'd love to know if the request timed out\n</code></pre>\n\n<p>So, is there a way that I can detect that the AJAX call timed out by inspecting the XMLHttpRequest object in the browser?  Would I be advised to do something like window.setTimeout(function() { xmlHttp.abort() }, 30000);?</p>\n\n<p>Thanks!</p>\n\n<p>-Mike</p>\n",
            "last_activity_date": 1372671206,
            "question_id": 1018705,
            "score": 26,
            "tags": [
                "javascript",
                "ajax",
                "browser"
            ],
            "title": "How to detect timeout on an AJAX (XmlHttpRequest) call in the browser?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Using <a href=\"http://www.jquery.com\">jQuery</a> you can do exactly the same thing, for example:</p>\n\n<pre><code>$(\"a\").click();\n</code></pre>\n\n<p>Which will \"click\" all anchors on the page.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>element.click() is a standard method outlined by the <a href=\"http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-2651361\">W3C DOM specification</a>. Mozilla's Gecko/Firefox <a href=\"https://developer.mozilla.org/en/DOM/element.click\">follows the standard</a> and only allows this method to be called on INPUT elements.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Are you trying to actually follow the link or trigger the onclick? You can trigger an onclick with something like this:</p>\n\n<pre><code>var link = document.getElementById(linkId);\nlink.onclick.call(link);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here's a cross browser working function (usable for other than click handlers too):</p>\n\n<pre><code>function eventFire(el, etype){\n    if (el.fireEvent) {\n      el.fireEvent('on' + etype);\n    } else {\n      var evObj = document.createEvent('Events');\n      evObj.initEvent(etype, true, false);\n      el.dispatchEvent(evObj);\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>For firefox links appear to be \"special\". The only way I was able to get this working was to use the createEvent (described here: https://developer.mozilla.org/en/DOM/document.createEvent) and call the initMouseEvent function.  Even that didn't work completely, I had to manually tell the browser to open a link...</p>\n\n<pre><code>var theEvent = document.createEvent(\"MouseEvent\");\ntheEvent.initMouseEvent(\"click\", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\nvar element = document.getElementById('link');\nelement.dispatchEvent(theEvent);\n\nwhile (element)\n{\n    if (element.tagName == \"A\" &amp;&amp; element.href != \"\")\n    {\n        if (element.target == \"_blank\") { window.open(element.href, element.target); }\n        else { document.location = element.href; }\n        element = null;\n    }\n    else\n    {\n        element = element.parentElement;\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>I used KooiInc's function listed above but I had to use two different input types one 'button' for IE and one 'submit' for FireFox. I am not exactly sure why but it works.</p>\n\n<p>// HTML</p>\n\n<pre><code>&lt;input type=\"button\" id=\"btnEmailHidden\" style=\"display:none\" /&gt;\n&lt;input type=\"submit\" id=\"btnEmailHidden2\" style=\"display:none\" /&gt;\n</code></pre>\n\n<p>// in JavaScript</p>\n\n<pre><code>var hiddenBtn = document.getElementById(\"btnEmailHidden\");\n\nif (hiddenBtn.fireEvent) {\n    hiddenBtn.fireEvent('onclick');\n    hiddenBtn[eType]();\n}\nelse {\n    // dispatch for firefox + others\n    var evObj = document.createEvent('MouseEvent');\n    evObj.initEvent(eType, true, true);\n    var hiddenBtn2 = document.getElementById(\"btnEmailHidden2\");\n    hiddenBtn2.dispatchEvent(evObj);\n}\n</code></pre>\n\n<p>I have search and tried many suggestions but this is what ended up working. If I had some more time I would have liked to investigate why submit works with FF and button with IE but that would be a luxury right now so on to the next problem.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/document.createEvent\"><code>document.createEvent</code> documentation</a> says that \"<strong>The <em>createEvent</em> method is deprecated. Use <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\">event constructors</a> instead.</strong>\"</p>\n\n<p>So you should use this method instead:</p>\n\n<pre><code>var clickEvent = new MouseEvent(\"click\", {\n    \"view\": window,\n    \"bubbles\": true,\n    \"cancelable\": false\n});\n</code></pre>\n\n<p>and fire it on an element like this:</p>\n\n<pre><code>element.dispatchEvent(clickEvent);\n</code></pre>\n\n<p>as shown <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events#Triggering_built-in_events\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>In IE, I can just call element.click() from JavaScript - how do I accomplish the same task in Firefox?  Ideally I'd like to have some JavaScript that would work equally well cross-browser, but if necessary I'll have different per-browser JavaScript for this.</p>\n",
            "last_activity_date": 1395108466,
            "question_id": 809057,
            "score": 16,
            "tags": [
                "javascript",
                "firefox",
                "dom",
                "javascript-events",
                "dhtml"
            ],
            "title": "How do I programmatically click on an element in firefox?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>To access named elements placed in a form, it is a good practice to use the <code>form</code> object itself.</p>\n\n<p>To access an arbitrary element in the DOM tree that may on occasion be found within a form, use <code>getElementById</code> and the element's <code>id</code>.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Form 2 is ok, and form 3 is also recommended.<br>\nRedundancy between name and id is caused by the need to keep compatibility, on html 5 some elements (as img, form, iframe and such) will lose their \"name\" attribute, and it's recommended to use just their id to reference them from now on :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>[1]  document.forms[0].elements[0];</p>\n</blockquote>\n\n<p>\"<em>No-omg-never!</em>\" comes to mind when I see this method of element access.  The problem with this is that it assumes that the DOM is a normal data structure (e.g.: an array) wherein the element order is static, consistent or reliable in anyway.  We know that 99.9999% of the time, that this is not the case. Reordering or <code>input</code> elements within the form, adding another <code>form</code> to the page before the form in question, or moving the the form in question are all cases where this code breaks.  Short story: this is very fragile.  As soon as you add or move something, it's going to break.</p>\n\n<blockquote>\n  <p>[2]  document.myForm.foo;</p>\n</blockquote>\n\n<p>I'm with <a href=\"http://stackoverflow.com/questions/2435525/best-practice-access-form-elements-by-html-id-or-name-attribute/2435554#2435554\">Sergey ILinsky</a> on this: </p>\n\n<ul>\n<li>Access arbitrary elements by referring to their <code>id</code> attribute: <code>document.getElementById(\"myform\");</code></li>\n<li>Access named form elements by name, relative to their parent form element: <code>document.getElementById(\"myform\").foo;</code></li>\n</ul>\n\n<p>My main issue with this method is that the <code>name</code> attribute is useless when applied to a form.  The name is not passed to the server as part of the POST/GET and doesn't work for hash style bookmarks.</p>\n\n<blockquote>\n  <p>[3]  document.getElementById('foo');</p>\n</blockquote>\n\n<p><strong>In my opinion, this is the most preferable method.  Direct access is the most concise and clear method.</strong></p>\n\n<blockquote>\n  <p>[4]  document.getElementById('myForm').foo;</p>\n</blockquote>\n\n<p>In my opinion, this is acceptable, but more verbose than necessary.  Method #3 is preferable.</p>\n\n<hr>\n\n<p>I just so happened to be watch a <a href=\"http://www.javascriptbank.com/javascript/video/theory-of-the-dom-1-by-douglas-crockford/preview/en/\">video from Douglas Crockford</a> and he weighed in on this very subject.  The point of interest is at -12:00.  To summarize:</p>\n\n<ul>\n<li>Document collections (document.anchor, document.form, etc) are obsolete and irrelevant (method 1).</li>\n<li>The <code>name</code> attribute is used to name things, not to access them.  It is for naming things like windows, input fields, and anchor tags.</li>\n<li>\"ID is the thing that you should use to uniquely identify an element so that you can get access to it.  They (name and ID) used to be interchangeable, but they aren't anymore.\"</li>\n</ul>\n\n<p>So there you have it.  Semantically, this makes the most sense.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Check out this page: <a href=\"https://developer.mozilla.org/En/DOM/Document.getElementsByName\" rel=\"nofollow\">https://developer.mozilla.org/En/DOM/Document.getElementsByName</a></p>\n\n<pre><code>document.getElementsByName('foo')[0]; // returns you element.\n</code></pre>\n\n<p>It has to be 'elements' and must return an array because more than one element could have the same name.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It\u2019s not really answering your question, but just on this part:</p>\n\n<blockquote>\n  <p>[3] requires both an id and a name... having both is <em>somewhat</em> redundant</p>\n</blockquote>\n\n<p>You\u2019ll most likely need to have an <code>id</code> attribute on each form field anyway, so that you can associate its <code>&lt;label&gt;</code> element with it, like this:</p>\n\n<pre><code>&lt;label for=\"foo\"&gt;Foo:&lt;/label&gt;\n&lt;input type=\"text\" name=\"foo\" id=\"foo\" /&gt;\n</code></pre>\n\n<p>This is required for accessibility (i.e. if you don\u2019t associate form labels and controls, why do you hate blind people so much?).</p>\n\n<p>It is somewhat redundant, although less so when you have checkboxes/radio buttons, where several of them can share a <code>name</code>. Ultimately, <code>id</code> and <code>name</code> are for different purposes, even if both are often set to the same value.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>To supplement the other answers, document.myForm.foo is the so-called DOM level 0, which is the way implemented by Netscape and thus is not really an open standard even though it is supported by most browsers.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I much prefer a 5th method.  That is<br>\n[5] Use the special JavaScript identifier <strong><em>this</em></strong> to pass the form or field object to the function from the event handler.</p>\n\n<p>Specifically, for forms:  </p>\n\n<pre><code>&lt;form id=\"form1\" name=\"form1\" onsubmit=\"return validateForm(this)\"&gt;\n</code></pre>\n\n<p>and </p>\n\n<pre><code>// The form validation function takes the form object as the input parameter\nfunction validateForm(thisForm) {\n  if (thisform.fullname.value !=...\n</code></pre>\n\n<p>Using this technique, the function never has to know<br>\n- the order in which forms are defined in the page,<br>\n- the form ID, nor<br>\n- the form name  </p>\n\n<p>Similarly, for fields:  </p>\n\n<pre><code>&lt;input type=\"text\" name=\"maxWeight\"&gt;\n...\n&lt;input type=\"text\" name=\"item1Weight\" onchange=\"return checkWeight(this)\"&gt;\n&lt;input type=\"text\" name=\"item2Weight\" onchange=\"return checkWeight(this)\"&gt;\n</code></pre>\n\n<p>and</p>\n\n<pre><code>function checkWeight(theField) {\n  if (theField.value &gt; theField.form.maxWeight.value) {\n    alert (\"The weight value \" + theField.value + \" is larger than the limit\");\n    return false;\n  }\nreturn true;\n}\n</code></pre>\n\n<p>In this case, the function never has to know the name or id of a particular weight field, though it does need to know the name of the weight limit field.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Being old-fashioned I've always used the 'document.myform.myvar' syntax but I recently found it failed in Chrome (OK in Firefox and IE).  It was an Ajax page (i.e. loaded into the innerHTML property of a div).  Maybe Chrome didn't recognise the form as an element of the main document. I used getElementById (without referencing the form) instead and it worked OK.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>My answer will differ on the exact question. \nIf I want to access a certain element specifically, then will I use document.getElementById().\nAn example is computing the full name of a person, because it is building on multiple fields, but it is a repeatable formula.</p>\n\n<p>If I want to access the element as part of a functional structure (a form), then will I use:</p>\n\n<pre><code>var frm = document.getElementById('frm_name');\nfor(var i = 0; i &lt; frm.elements.length;i++){\n   ..frm.elements[i]..\n</code></pre>\n\n<p>This is how it also works from the perspective of the business. Changes within the loop go along with functional changes in the application and are therefor meaningful. I apply it mostly for user friendly validation and preventing network calls for checking wrong data. I repeat the validation server side (and add there some more to it), but if I can help the user client side, then is that beneficial to all.</p>\n\n<p>For aggregation of data (like building a pie chart based on data in the form) I use configuration documents and custom made Javascript objects. Then is the exact meaning of the field important in relation to its context and do I use document.getElementById().</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Give your form an <strong>id</strong> only, and your input a <strong>name</strong> only:</p>\n\n<pre><code>&lt;form id=\"myform\"&gt;\n  &lt;input type=\"text\" name=\"foo\"&gt;\n</code></pre>\n\n<p>Then the most standards-compliant and least problematic way to access your input element is via:</p>\n\n<pre><code>document.getElementById(\"myform\").elements[\"foo\"]\n</code></pre>\n\n<p>using <code>.elements[\"foo\"]</code> instead of just <code>.foo</code> is preferable because the latter might return a property of the form named \"foo\" rather than a HTML element!</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>As any seasoned JavaScript developer knows, there are many (too many) ways to do the same thing.  For example, say you have a text field as follows:</p>\n\n<pre><code>&lt;form name=\"myForm\"&gt;  \n    &lt;input type=\"text\" name=\"foo\" id=\"foo\" /&gt;\n</code></pre>\n\n<p>There are many way to access this in JavaScript:</p>\n\n<pre><code>[1]  document.forms[0].elements[0];\n[2]  document.myForm.foo;\n[3]  document.getElementById('foo');\n[4]  document.getElementById('myForm').foo;\n     ... and so on ...\n</code></pre>\n\n<p>Methods [1] and [3] are well documented in the Mozilla Gecko documentation, but neither are ideal. [1] is just too general to be useful and [3] requires both an id and a name (assuming you will be posting the data to a server side language). Ideally, it would be best to have only an id attribute or a name attribute (having both is <em>somewhat</em> redundant, especially if the id isn't necessary for any css, and increases the likelihood of typos, etc).</p>\n\n<p>[2] seems to be the most intuitive and it seems to be widely used, but I haven't seen it referenced in the Gecko documentation and I'm worried about both forwards compatibility and cross browser compatiblity (and of course I want to be as standards compliant as possible).</p>\n\n<p>So what's best practice here?  Can anyone point to something in the DOM documentation or W3C specification that could resolve this?</p>\n\n<p>Note I am specifically interested in a non-library solution (jQuery/Prototype).</p>\n",
            "last_activity_date": 1422808074,
            "question_id": 2435525,
            "score": 47,
            "tags": [
                "javascript",
                "html",
                "forms",
                "dom"
            ],
            "title": "Best Practice: Access form elements by HTML id or name attribute?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Sorted - I added tabindex attribute to the target DIV, which causes it to pick up keyboard events, for example</p>\n\n<pre><code>&lt;div id=\"inner\" tabindex=\"0\"&gt;\n    this div can now have focus and recieve keyboard events\n&lt;/div&gt;\n</code></pre>\n\n<p>Information gleaned from <a href=\"http://www.w3.org/WAI/GL/WCAG20/WD-WCAG20-TECHS/SCR29.html\">http://www.w3.org/WAI/GL/WCAG20/WD-WCAG20-TECHS/SCR29.html</a></p>\n",
                    "is_accepted": true,
                    "score": 90
                },
                {
                    "body": "<p>Paul's answer works fine, but you could also use contentEditable, like this...</p>\n\n<pre><code>document.getElementById('inner').contentEditable=true;\ndocument.getElementById('inner').focus();\n</code></pre>\n\n<p>Might be preferable in some cases.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am building an application where I want to be able to click a rectangle represented by a DIV, and then use the keyboard to move that DIV</p>\n\n<p>Rather than using an event listener for keyboard events at the document level, can I listen for keyboard events at the DIV level, perhaps by giving it keyboard focus?</p>\n\n<p>Here's a simplified sample to illustrate the problem:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;div id=\"outer\" style=\"background-color:#eeeeee;padding:10px\"&gt;\nouter\n\n   &lt;div id=\"inner\" style=\"background-color:#bbbbbb;width:50%;margin:10px;padding:10px;\"&gt;\n   want to be able to focus this element and pick up keypresses\n   &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;script language=\"Javascript\"&gt;\n\nfunction onClick()\n{\n    document.getElementById('inner').innerHTML=\"clicked\";\n    document.getElementById('inner').focus();\n\n}\n\n//this handler is never called\nfunction onKeypressDiv()\n{\n    document.getElementById('inner').innerHTML=\"keypress on div\";\n}\n\nfunction onKeypressDoc()\n{\n    document.getElementById('inner').innerHTML=\"keypress on doc\";\n}\n\n//install event handlers\ndocument.getElementById('inner').addEventListener(\"click\", onClick, false);\ndocument.getElementById('inner').addEventListener(\"keypress\", onKeypressDiv, false);\ndocument.addEventListener(\"keypress\", onKeypressDoc, false);\n\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>On clicking the inner DIV I try to give it focus, but subsequent keyboard events are always picked up at the document level, not my DIV level event listener.</p>\n\n<p>Do I simply need to implement an application-specific notion of keyboard focus?</p>\n\n<p>I should add I only need this to work in Firefox.</p>\n",
            "last_activity_date": 1324002607,
            "question_id": 148361,
            "score": 42,
            "tags": [
                "javascript",
                "events",
                "keyboard"
            ],
            "title": "How can I give keyboard focus to a DIV and attach keyboard event handlers to it?"
        },
        {
            "answer_count": 26,
            "answers": [
                {
                    "body": "<p>Try setting your ScriptManager to this.</p>\n\n<pre><code>&lt;asp:ScriptManager ID=\"ScriptManager1\" runat=\"server\" EnablePartialRendering=\"true\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In addition to ensuring you have the ScriptManager on your page you need to ensure that your web.config is appropriately configured.</p>\n\n<p>When ASP.NET AJAX 1.0 was released (for .NET 2.0) there was a lot of custom web.config settings which added handlers, controls, etc.</p>\n\n<p>You'll find the config info here: <a href=\"http://www.asp.net/AJAX/documentation/live/ConfiguringASPNETAJAX.aspx\" rel=\"nofollow\">http://www.asp.net/AJAX/documentation/live/ConfiguringASPNETAJAX.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think you have just to make sure your javascript starts <em>after</em> the loading of the page\n<em>\"Sys is undefined\"</em> error means that Sys is not <em>yet</em> loaded ;)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Make sure that any client scripts you have that interact with .NET AJAX have the following line at the end:</p>\n\n<pre><code>if (typeof(Sys) !== 'undefined')  Sys.Application.notifyScriptLoaded();\n</code></pre>\n\n<p>This tells the script manager that the whole script file has loaded and that it can begin to call client methods</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I was having this same issue and after much wrangling I decided to try and isolate the problem and simply load the script manager in an empty page which still resulted in this same error.  Having isolated the problem I discovered through a comparison of my site's web.config with a brand new (working) test site that changing <code>&lt;compilation debug=\"true\"&gt;</code> to <code>&lt;compilation debug=\"false\"&gt;</code> in the system.web section of my web.config fixes the problem.  </p>\n\n<p>I also had to remove the <code>&lt;xhtmlConformance mode=\"Legacy\"/&gt;</code> entry from system.web to make the update panel work properly.  <a href=\"http://weblogs.asp.net/scottgu/archive/2006/12/10/gotcha-don-t-use-xhtmlconformance-mode-legacy-with-asp-net-ajax.aspx\" rel=\"nofollow\">Click here</a> for a description of this issue.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Was having a similar issue,  except that my page was consistently generating the Sys is undefined error. </p>\n\n<p>For me the problem stems from the fact that I've just installed the AJAX 1.0 extension for .NET 2.0 but had already created my web project  in Visual Studio.</p>\n\n<p>When tried to create AJAX controls I kept encountering this error, I spotted Slace's and MadMax1138s posts here.  And figured it was my web.config, I created a new project using the new \"AJAX enabled web site\" project type,  and sure enough the web.config has a large number of customizations necessary to use the AJAX controls.   </p>\n\n<p>I just updated that web.config with the web.config updates I had already made myself and dropped it into my existing project and everything worked fine.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I fixed my problem by moving the <code>&lt;script type=\"text/javascript\"&gt;&lt;/script&gt;</code> block containing the Sys.* calls lower down (to the last item before the close of the body's <code>&lt;asp:Content/&gt;</code> section) in the HTML on the page. I originally had my the script block in the HEAD <code>&lt;asp:Content/&gt;</code> section of my page. I was working inside a page that had a MasterPageFile. Hope this helps someone out.</p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>When I experienced the errors </p>\n\n<ul>\n<li>Sys is undefined</li>\n<li>ASP.NET Ajax client-side framework failed to load</li>\n</ul>\n\n<p>in IE when using ASP.NET Ajax controls in .NET 2.0, I needed to add the following to the web.config file within the <code>&lt;system.web&gt;</code> tags:</p>\n\n<pre><code>&lt;httpHandlers&gt;\n  &lt;remove verb=\"*\" path=\"*.asmx\"/&gt;\n  &lt;add verb=\"*\" path=\"*.asmx\" validate=\"false\" type=\"System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n  &lt;add verb=\"GET\" path=\"ScriptResource.axd\" type=\"System.Web.Handlers.ScriptResourceHandler\" validate=\"false\"/&gt;\n&lt;/httpHandlers&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Please please please do check that the Server has the correct time and date set...</p>\n\n<p>After about wasting 6 hours, i read it somewhere...</p>\n\n<p>The date and time for the server must be updated to work correctly...</p>\n\n<p>otherwise you will get 'Sys' is undefined error.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just create blank .axd files in your solutions root foder problem will be resolved. (2 file: scriptresouce.asx, webresource.asxd)</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I have been seeing the exact same error today, but it was not a config or direct JavaScript issue.</p>\n\n<p>An external .net project had been updated but the changes not picked up properly in the compilation of the web site. My presumption is that ASP.NET ajax was not able to construct the client representations of the .NET objects properly and so was failing to load correctly.</p>\n\n<p>To resolve, I rebuilt the external project(s), and rebuilt my solution that was experiencing issues. The problem went away. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Hi thanx a lot it solved my issue ,</p>\n\n<p>By default vs 2008 will add </p>\n\n<pre><code> &lt;!--&lt;add verb=\"*\" path=\"*.asmx\" validate=\"false\" type=\"Microsoft.Web.Script.Services.ScriptHandlerFactory, Microsoft.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\" /&gt;\n      &lt;add verb=\"GET\" path=\"ScriptResource.axd\" type=\"Microsoft.Web.Handlers.ScriptResourceHandler\" validate=\"false\" /&gt;--&gt;\n</code></pre>\n\n<p>Need to correct Default config(Above) to below code\n<strong>FIX</strong></p>\n\n<pre><code> &lt;add verb=\"*\" path=\"*.asmx\" validate=\"false\" type=\"System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n  &lt;add verb=\"GET\" path=\"ScriptResource.axd\" type=\"System.Web.Handlers.ScriptResourceHandler\" validate=\"false\"/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You must add these lines in the web.config</p>\n\n<p>\n    \n      \n        \n        \n          \n          \n          \n        \n      \n    \n  </p>\n\n<pre><code>&lt;httpHandlers&gt;\n  &lt;remove verb=\"*\" path=\"*.asmx\"/&gt;\n  &lt;add verb=\"*\" path=\"*.asmx\" validate=\"false\" type=\"System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n  &lt;add verb=\"*\" path=\"*_AppService.axd\" validate=\"false\" type=\"System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n  &lt;add verb=\"GET,HEAD\" path=\"ScriptResource.axd\" type=\"System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\" validate=\"false\"/&gt;\n&lt;/httpHandlers&gt;\n&lt;httpModules&gt;\n  &lt;add name=\"ScriptModule\" type=\"System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n&lt;/httpModules&gt;\n&lt;/system.web&gt;\n</code></pre>\n\n<p>\n    \n      \n      \n    \n  \n  \n    \n    \n      \n    \n    \n      \n      \n      \n      \n    \n  </p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I found the error when using a combination of the Ajax Control Toolkit ToolkitScriptManager and URL Write 2.0.</p>\n\n<p>In my <code>&lt;rewrite&gt; &lt;outboundRules&gt;</code> I had a precondition:</p>\n\n<pre><code>&lt;preConditions&gt;\n    &lt;preCondition name=\"IsHTML\"&gt;\n        &lt;add input=\"{RESPONSE_CONTENT_TYPE}\" pattern=\"^text/html\"/&gt;\n    &lt;/preCondition&gt;\n&lt;/preConditions&gt;\n</code></pre>\n\n<p>But apparently some of my outbound rules weren't set to use the precondition. </p>\n\n<p>Once I had that preCondition set on all my outbound rules:</p>\n\n<pre><code>&lt;rule preCondition=\"IsHTML\" name=\"MyOutboundRule\"&gt;\n</code></pre>\n\n<p>No more problem.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I solved this problem by creating separate asp.net ajax solution and copy and paste all ajax configuration from web.config to working project.</p>\n\n<p>here are  the must configuration you should set in web.config</p>\n\n<pre><code>    &lt;configuration&gt;\n&lt;configSections&gt;\n    &lt;sectionGroup name=\"system.web.extensions\" type=\"System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"&gt;\n        &lt;sectionGroup name=\"scripting\" type=\"System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"&gt;\n            &lt;section name=\"scriptResourceHandler\" type=\"System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\" requirePermission=\"false\" allowDefinition=\"MachineToApplication\"/&gt;\n&lt;/sectionGroup&gt;\n\n    &lt;/sectionGroup&gt;\n&lt;/configSections&gt;\n</code></pre>\n\n<p></p>\n\n<pre><code>        &lt;assemblies&gt;\n\n            &lt;add assembly=\"System.Web.Extensions,     Version=1.0.61025.0,       Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n\n        &lt;/assemblies&gt;\n           &lt;/compilation&gt;\n        &lt;httpHandlers&gt;\n        &lt;remove verb=\"*\" path=\"*.asmx\"/&gt;\n        &lt;add verb=\"*\" path=\"*.asmx\" validate=\"false\" type=\"System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n        &lt;add verb=\"*\" path=\"*_AppService.axd\" validate=\"false\" type=\"System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n        &lt;add verb=\"GET,HEAD\" path=\"ScriptResource.axd\" type=\"System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\" validate=\"false\"/&gt;\n    &lt;/httpHandlers&gt;\n    &lt;httpModules&gt;\n        &lt;add name=\"ScriptModule\" type=\"System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n    &lt;/httpModules&gt;\n&lt;/system.web&gt;\n    &lt;system.webServer&gt;\n    &lt;validation validateIntegratedModeConfiguration=\"false\"/&gt;\n    &lt;modules&gt;\n        &lt;add name=\"ScriptModule\" preCondition=\"integratedMode\" type=\"System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n    &lt;/modules&gt;\n    &lt;handlers&gt;\n        &lt;remove name=\"WebServiceHandlerFactory-Integrated\"/&gt;\n        &lt;add name=\"ScriptHandlerFactory\" verb=\"*\" path=\"*.asmx\" preCondition=\"integratedMode\" type=\"System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n        &lt;add name=\"ScriptHandlerFactoryAppServices\" verb=\"*\" path=\"*_AppService.axd\" preCondition=\"integratedMode\" type=\"System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n        &lt;add name=\"ScriptResource\" preCondition=\"integratedMode\" verb=\"GET,HEAD\" path=\"ScriptResource.axd\" type=\"System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n    &lt;/handlers&gt;\n&lt;/system.webServer&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Make sure you don't have any Rewrite rules that change your url.</p>\n\n<p>In my case the application thought it was only level deeper then the url reached.</p>\n\n<p>Example: <a href=\"http://mysite.com/app/page.aspx\" rel=\"nofollow\">http://mysite.com/app/page.aspx</a> was the real url.\nBut i cut off /app/ this worked fine for ASP.net and WCF, but clearly not for Ajax.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was using telerik and had exactly same problem.</p>\n\n<p>adding this to web.config resolved my issue :)</p>\n\n<pre><code>&lt;location path=\"Telerik.Web.UI.WebResource.axd\"&gt;   \n   &lt;system.web&gt;  \n     &lt;authorization&gt;  \n       &lt;allow users=\"*\"/&gt;  \n     &lt;/authorization&gt;  \n   &lt;/system.web&gt;  \n&lt;/location&gt;\n</code></pre>\n\n<p>maybe it will help you too. it was Authentication problem.</p>\n\n<p><a href=\"http://blogs.telerik.com/blogs/posts/10-03-16/common-reasons-for-the-lsquo-sys-is-undefined-rsquo-error-in-asp-net-ajax-applications.aspx\" rel=\"nofollow\">Source</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I had similar problems and to my surprise what I found that one of my developer had saved web.config in the same folder/solution as <strong>web123.config</strong> and by mistake both of these files were uploaded.</p>\n\n<p>As soon as I deleted the <strong>web123.config</strong> file, this error disappeared and ajax framework was loading correctly. even though I have </p>\n\n<pre><code>&lt;compilation debug=\"true\"&gt;\n</code></pre>\n\n<p>In my case I also have following segment. My project is using framework 3.5</p>\n\n<pre><code>    &lt;httpHandlers&gt;\n  &lt;remove verb=\"*\" path=\"*.asmx\"/&gt;\n  &lt;add verb=\"*\" path=\"*.asmx\" validate=\"false\" type=\"System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n  &lt;add verb=\"*\" path=\"*_AppService.axd\" validate=\"false\" type=\"System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n  &lt;add verb=\"GET,HEAD\" path=\"ScriptResource.axd\" type=\"System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\" validate=\"false\"/&gt;\n&lt;/httpHandlers&gt;\n&lt;httpModules&gt;\n  &lt;add name=\"ScriptModule\" type=\"System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n&lt;/httpModules&gt;\n&lt;/system.web&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is going to sound stupid but I had a similar problem with a site being developed in VS2010 and hosted in the VS Dev Server. The page in question had a scriptmanager to create the connection to a wcf service. I added an extra method to the service and this error started appearing. </p>\n\n<p>What fixed it for me was changing from 'Auto-assign Port' to 'Specific port' with a different port number in the oroject Web settings.</p>\n\n<p>I wish I knew why...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "Development Environment:\n\n<ul>\n<li>Dev-Env: VS 2012</li>\n<li>FX: 4.0/4.5</li>\n<li>Implementations: Master(ScriptManager + UpdatePanel/Timer) + Content (UpdatePanel)</li>\n<li>Patterns: PageRouting.</li>\n</ul>\n\n<h2>Disclaimer:</h2>\n\n<p>If all the <code>web.config</code> solutions do not work for you and you have implemented PageRouting (IIS 7+), then the code snippet below will solve your problems.</p>\n\n<h2>Background:</h2>\n\n<p>Dont mean to Highjack this question but had the same problem as everyone else and implemented 100% of the suggestions here, with minor modifications for .Net 4.0/4.5, and none of them worked for me.</p>\n\n<p>In my situation i had implemented <a href=\"http://msdn.microsoft.com/en-us/library/cc668201.aspx\" rel=\"nofollow\">Page Routing</a> which was ghosting my problem.  Basically it would work for about 20, or so, debug runs and then BAM would error out with the <code>Sys is undefined</code> error.</p>\n\n<p>After reviewing a couple other posts, that got to talking about the Clean-URL logic, i remembered that i had done PageRouting setup's.</p>\n\n<p>Here is the resource i used to build my patterns: <a href=\"http://msdn.microsoft.com/en-us/library/cc668201.aspx\" rel=\"nofollow\">Page Routing</a></p>\n\n<p>My one-liner code fixed my VS2012 Debugging problem:</p>\n\n<pre><code>rts.Ignore(\"{resource}.axd/{*pathInfo}\")    'Ignores any Resource cache references, used heavily in AJAX interactions.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Even after adding the correct entry for web config still getting this error ?  most common reason for this error is JavaScript that references the Sys namespace too early.\nThen most obvious fix would be   move the java script block below the ScriptManager control:</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't think this point has been added and since I just spent some time hunting this down I hope it can help.<br/><br/>\nI am working with IIS 7 and using the ASP.NET v4 Framework.<br/>\nIn my case it was <strong>important that an entry be added to both the  and  section of the  entry in the web.config file.</strong><br/><br/>\nMy web.config file has a lot of handlers and in my case it was easiest to add the ScriptResources entry to the top of the handlers section.  <strong>Most importantly, it needs to be placed before any entry that will act as a wildcard and capture the request.</strong>  Adding it after a wildcard entry will cause it to be ignored and the error will still appear.<br/><br/>The module can be added to the top or bottom of the section.<br/><br/>\nWeb.config Sample:</p>\n\n<pre><code>&lt;system.webServer&gt;\n    &lt;handlers&gt;\n      &lt;clear /&gt;\n      &lt;add name=\"ScriptResource\" preCondition=\"integratedMode\" verb=\"GET,HEAD\" path=\"ScriptResource.axd\" type=\"System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\" /&gt;\n      &lt;!-- Make sure wildcard rules are below the ScriptResource tag --&gt;\n    &lt;/handlers&gt;\n    &lt;modules&gt;\n      &lt;add name=\"ScriptModule\" type=\"System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/&gt;\n      &lt;!-- Other modules are added here --&gt;\n    &lt;/modules&gt;\n  &lt;/system.webServer&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In case none of the above works for you, and you happen to be overriding OnPreRenderComplete, make sure you call base.OnPreRenderComplete. My therapist is going to be happy to see me back</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Dean L's answer, <a href=\"http://stackoverflow.com/a/1718513/292060\">http://stackoverflow.com/a/1718513/292060</a> worked for me, since my call to Sys was also too early. Since I'm using jQuery, instead of moving it down, I put the script inside a document.ready call:</p>\n\n<pre><code>$(document).ready(function () {\n  Sys. calls here\n});\n</code></pre>\n\n<p>This seems to be late enough that Sys is available.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had the same problem after updating my AjaxControlToolkit.dll to the latest version 4.1.7.725 from 4.1.60623.0. \nI've searched and came up to this page, but none of the answers help me.\nAfter looking to the sample website of the Ajax Control Toolkit that is in the CodePlex zip file, I have realized that the <strong></strong> replaced by the new <strong></strong>. I did so and there is no <em>Sys.Extended is undefined</em> any more.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had same probleme but i fixed it by: </p>\n\n<p>When putting a script file into a page, make sure it is </p>\n\n<pre><code>&lt;script&gt;&lt;/script&gt; and not &lt;script /&gt;.\n</code></pre>\n\n<p>I have followed this:\n<a href=\"http://forums.asp.net/t/1742435.aspx?An+element+with+id+form1+could+not+be+found+Script+error+on+page+load\" rel=\"nofollow\">http://forums.asp.net/t/1742435.aspx?An+element+with+id+form1+could+not+be+found+Script+error+on+page+load</a></p>\n\n<p>Hope this will help</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an ASP.Net/AJAX control kit project that i am working on.  80% of the time there is no problem.  The page runs as it should.  If you refresh the page it will sometimes show a javascript error \"Sys is undefined\".</p>\n\n<p>It doesn't happen all the time, but it is reproducible.  When it happens, the user has to shut down their browser and reopen the page.</p>\n\n<p>This leads me to believe that it could be an IIS setting.</p>\n\n<p>Another note.  I looked at the page source both when I get the error, and when not.  When the page throws errors the following code is missing:</p>\n\n<pre><code>&lt;script src=\"/ScriptResource.axd?d=EAvfjPfYejDh0Z2Zq5zTR_TXqL0DgVcj_h1wz8cst6uXazNiprV1LnAGq3uL8N2vRbpXu46VsAMFGSgpfovx9_cO8tpy2so6Qm_0HXVGg_Y1&amp;amp;t=baeb8cc\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n//&lt;![CDATA[\nif (typeof(Sys) === 'undefined') throw new Error('ASP.NET Ajax client-side framework failed to load.');\n//]]&gt;\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1425995385,
            "question_id": 75322,
            "score": 36,
            "tags": [
                "asp.net",
                "javascript",
                "asp.net-ajax"
            ],
            "title": "Sys is undefined"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You <em>can</em> use regular expressions if you prepare the search string. In PHP e.g. there is a function preg_quote, which replaces all regex-chars in a string with their escaped versions.</p>\n\n<p>Here is such a function for javascript:</p>\n\n<pre><code>function preg_quote( str ) {\n    // http://kevin.vanzonneveld.net\n    // +   original by: booeyOH\n    // +   improved by: Ates Goral (http://magnetiq.com)\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: Onno Marsman\n    // *     example 1: preg_quote(\"$40\");\n    // *     returns 1: '\\$40'\n    // *     example 2: preg_quote(\"*RRRING* Hello?\");\n    // *     returns 2: '\\*RRRING\\* Hello\\?'\n    // *     example 3: preg_quote(\"\\\\.+*?[^]$(){}=!&lt;&gt;|:\");\n    // *     returns 3: '\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}\\=\\!\\&lt;\\&gt;\\|\\:'\n\n    return (str+'').replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}\\=\\!\\&lt;\\&gt;\\|\\:])/g, \"\\\\$1\");\n}\n</code></pre>\n\n<p>(Taken from <a href=\"http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_preg_quote/\">http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_preg_quote/</a> )</p>\n\n<p>So you coudl do the following:</p>\n\n<pre><code>function highlight( data, search )\n{\n    return data.replace( new RegExp( \"(\" + preg_quote( search ) + \")\" , 'gi' ), \"&lt;b&gt;$1&lt;/b&gt;\" );\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>Why not just create a new regex on each call to your function? You can use:</p>\n\n<pre><code>new Regex([pat], [flags])\n</code></pre>\n\n<p>where [pat] is a string for the pattern, and [flags] are the flags.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function highlightWords( line, word )\n{\n     var regex = new RegExp( '(' + word + ')', 'gi' );\n     return line.replace( regex, \"&lt;b&gt;$1&lt;/b&gt;\" );\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>Regular expressions are fine as long as keywords are really words, you can just use a RegExp constructor instead of a literal to create one from a variable:</p>\n\n<pre><code>var re= new RegExp('('+word+')', 'gi');\nreturn s.replace(re, '&lt;b&gt;$1&lt;/b&gt;');\n</code></pre>\n\n<p>The difficulty arises if \u2018keywords\u2019 can have punctuation in, as punctuation tends to have special meaning in regexps. Unfortunately unlike most other languages/libraries with regexp support, there is no standard function to escape punctation for regexps in JavaScript.</p>\n\n<p>And you can't be totally sure exactly what characters need escaping because not every browser's implementation of regexp is guaranteed to be exactly the same. (In particular, newer browsers may add new functionality.) And backslash-escaping characters that are not special is not guaranteed to still work, although in practice it does.</p>\n\n<p>So about the best you can do is one of:</p>\n\n<ul>\n<li>attempting to catch each special character in common browser use today [add: see Sebastian's recipe]</li>\n<li>backslash-escape all non-alphanumerics. care: \\W will also match non-ASCII Unicode characters, which you don't really want.</li>\n<li>just ensure that there are no non-alphanumerics in the keyword before searching</li>\n</ul>\n\n<p>If you are using this to highlight words in HTML which already has markup in, though, you've got trouble. Your \u2018word\u2019 might appear in an element name or attribute value, in which case attempting to wrap a &lt; b> around it will cause brokenness. In more complicated scenarios possibly even an HTML-injection to XSS security hole. If you have to cope with markup you will need a more complicated approach, splitting out \u2018&lt; ... >\u2019 markup before attempting to process each stretch of text on its own.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can enhance the RegExp object with a function that does special character escaping for you:</p>\n\n<pre><code>RegExp.escape = function(str) \n{\n  var specials = /[.*+?|()\\[\\]{}\\\\$^]/g; // .*+?|()[]{}\\$^\n  return str.replace(specials, \"\\\\$&amp;\");\n}\n</code></pre>\n\n<p>Then you would be able to use what the others suggested without any worries:</p>\n\n<pre><code>function highlightWordsNoCase(line, word)\n{\n  var regex = new RegExp(\"(\" + RegExp.escape(word) + \")\", \"gi\");\n  return line.replace(regex, \"&lt;b&gt;$1&lt;/b&gt;\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>What about something like this:</p>\n\n<pre><code>if(typeof String.prototype.highlight !== 'function') {\n  String.prototype.highlight = function(match, spanClass) {\n    var pattern = new RegExp( match, \"gi\" );\n    replacement = \"&lt;span class='\" + spanClass + \"'&gt;$&amp;&lt;/span&gt;\";\n\n    return this.replace(pattern, replacement);\n  }\n}\n</code></pre>\n\n<p>This could then be called like so:</p>\n\n<pre><code>var result = \"The Quick Brown Fox Jumped Over The Lazy Brown Dog\".highlight(\"brown\",\"text-highlight\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I need to highlight, case insensitively, given keywords in a JavaScript string.</p>\n\n<p>For example:</p>\n\n<ul>\n<li><code>highlight(\"foobar Foo bar FOO\", \"foo\")</code> should return <code>\"&lt;b&gt;foo&lt;/b&gt;bar &lt;b&gt;Foo&lt;/b&gt; bar &lt;b&gt;FOO&lt;/b&gt;\"</code></li>\n</ul>\n\n<p>I need the code to work for any keyword, and therefore using a hardcoded regular expression like <code>/foo/i</code> is not a sufficient solution.</p>\n\n<p>What is the easiest way to do this?</p>\n\n<p>(This an instance of a more general problem detailed in the title, but I feel that it's best to tackle with a concrete, useful example.)</p>\n",
            "last_activity_date": 1423952740,
            "question_id": 280793,
            "score": 26,
            "tags": [
                "javascript",
                "string",
                "replace",
                "case-insensitive"
            ],
            "title": "Case insensitive string replacement in JavaScript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can use doc.xml in internet exlporer.</p>\n\n<p>You'll get something like this:</p>\n\n<pre><code>function xml2Str(xmlNode) {\n   try {\n      // Gecko- and Webkit-based browsers (Firefox, Chrome), Opera.\n      return (new XMLSerializer()).serializeToString(xmlNode);\n  }\n  catch (e) {\n     try {\n        // Internet Explorer.\n        return xmlNode.xml;\n     }\n     catch (e) {  \n        //Other browsers without XML Serializer\n        alert('Xmlserializer not supported');\n     }\n   }\n   return false;\n}\n</code></pre>\n\n<p>Found it <a href=\"http://www.webdeveloper.com/forum/showthread.php?t=187378\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 35
                }
            ],
            "body": "<p>I have an XML object (loaded using XMLHTTPRequest's responseXML).  I have modified the object (using jQuery) and would like to store it as text in a string.</p>\n\n<p>There is apparently a simple way to do it in Firefox et al:</p>\n\n<pre><code>var xmlString = new XMLSerializer().serializeToString( doc );\n</code></pre>\n\n<p>(from <a href=\"http://www.rosettacode.org/w/index.php?title=DOM_XML_Serialization#JavaScript\">rosettacode</a> )</p>\n\n<p>But how does one do it in <strong>IE6 and other browsers</strong> (without, of course, breaking Firefox)?</p>\n",
            "last_activity_date": 1312829837,
            "question_id": 43455,
            "score": 23,
            "tags": [
                "javascript",
                "xml",
                "dom",
                "serialization"
            ],
            "title": "How do I serialize a DOM to XML text, using JavaScript, in a cross browser way?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can intercept the paste event by attaching an \"onpaste\" handler and get the pasted text by using \"<code>window.clipboardData.getData('Text')</code>\" in IE or \"<code>event.clipboardData.getData('text/plain')</code>\" in other browsers.</p>\n\n<p>For example:</p>\n\n<pre><code>var myElement = document.getElementById('pasteElement');\nmyElement.onpaste = function(e) {\n  var pastedText = undefined;\n  if (window.clipboardData &amp;&amp; window.clipboardData.getData) { // IE\n    pastedText = window.clipboardData.getData('Text');\n  } else if (e.clipboardData &amp;&amp; e.clipboardData.getData) {\n    pastedText = e.clipboardData.getData('text/plain');\n  }\n  alert(pastedText); // Process and handle text...\n  return false; // Prevent the default handler from running.\n};\n</code></pre>\n\n<p>As @pimvdb notes, you will need to use \"<code>e.originalEvent.clipboardData</code>\" if using jQuery.</p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>As it happens, I answered a <a href=\"http://stackoverflow.com/questions/6022551/pasting-into-contentedittable-results-in-random-tag-insertion/6023399#6023399\">similar question</a> earlier today. In short, you need a hack to redirect the caret to an off-screen textarea when the paste event fires.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$(document).ready(function() {\n    $(\"#editor\").bind('paste', function (e){\n        $(e.target).keyup(getInput);\n    });\n\n    function getInput(e){\n        var inputText = $(e.target).val();\n        alert(inputText);\n        $(e.target).unbind('keyup');\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to intercept the paste event in Javascript and get the raw value, parse it, and set the associated DOM's value to be the parsed value?</p>\n\n<p>For instance, I have a user trying to copy and paste a string with spaces in it and the string's length exceeds the max length of my text box. I want to intercept the text, remove the spaces, and then set the text box's value with the parsed value.</p>\n\n<p>Is this possible?</p>\n",
            "last_activity_date": 1396597211,
            "question_id": 6035071,
            "score": 22,
            "tags": [
                "javascript",
                "dom",
                "copy-paste",
                "paste"
            ],
            "title": "Intercept paste event in Javascript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You can watch <a href=\"http://docs.jquery.com/Events/mousemove#fn\">mouse movement</a>, but that's about the best you're going to get for indication of a user still being there without listening to the click event. But there is no way for javascript to tell if it is the active tab or if the browser is even open. (well, you could get the width and height of the browser and that'd tell you if it was minimized)</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Using jQuery, you can easily watch mouse movement, and use it to set a variable indicating activity to true, then using vanilla javascript, you can check this variable every 30 minutes (or any other interval) to see if its true. If it's false, run your function or whatever.\nLook up setTimeout and setInterval for doing the timing. You'll also probably have to run a function every minute or so to reset the variable to false.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here my shot:</p>\n\n<pre><code>var lastActivityDateTime = null;\n\nfunction checkActivity( )\n{\n    var currentTime = new Date();\n    var diff = (lastActivityDateTime.getTime( ) - currentTime.getTime( ));\n    if ( diff &gt;= 30*60*1000)\n    {\n        //user wasn't active;\n        ...\n    }\n    setTimeout( 30*60*1000-diff, checkActivity);\n}\n\nsetTimeout( 30*60*1000, checkActivity); // for first time we setup for 30 min.\n\n\n// for each event define handler and inside update global timer\n$( \"body\").live( \"event_you_want_to_track\", handler);\n\nfunction handler()\n{\n   lastActivityDateTime = new Date();\n   // rest of your code if needed.\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I just recently did something like this, albeit using Prototype instead of JQuery, but I imagine the implementation would be roughly the same as long as JQuery supports custom events.</p>\n\n<p>In a nutshell, IdleMonitor is a class that observes mouse and keyboard events (adjust accordingly for your needs). Every 30 seconds it resets the timer and broadcasts an state:idle event, unless it gets a mouse/key event, in which case it broadcasts a state:active event.</p>\n\n<pre><code>var IdleMonitor = Class.create({\n\n    debug: false,\n    idleInterval: 30000, // idle interval, in milliseconds\n    active: null,\n    initialize: function() {\n        document.observe(\"mousemove\", this.sendActiveSignal.bind(this));\n        document.observe(\"keypress\", this.sendActiveSignal.bind(this));\n        this.timer = setTimeout(this.sendIdleSignal.bind(this), this.idleInterval);\n    },\n\n    // use this to override the default idleInterval\n    useInterval: function(ii) {\n    \tthis.idleInterval = ii;\n    \tclearTimeout(this.timer);\n    \tthis.timer = setTimeout(this.sendIdleSignal.bind(this), ii);\n    },\n\n    sendIdleSignal: function(args) {\n        // console.log(\"state:idle\");\n        document.fire('state:idle');\n        this.active = false;\n        clearTimeout(this.timer);\n    },\n\n    sendActiveSignal: function() {\n        if(!this.active){\n            // console.log(\"state:active\");\n            document.fire('state:active');\n            this.active = true;\n            this.timer = setTimeout(this.sendIdleSignal.bind(this), this.idleInterval);\n        }\n    }\n});\n</code></pre>\n\n<p>Then I just created another class that has the following somewhere in it:</p>\n\n<pre><code>Event.observe(document, 'state:idle', your-on-idle-functionality);\nEvent.observe(document, 'state:active', your-on-active-functionality)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>This is what I've come up with. It seems to work in most browsers, but I want to be sure it will work everywhere, all the time:</p>\n\n<pre><code>var timeoutTime = 1800000;\nvar timeoutTimer = setTimeout(ShowTimeOutWarning, timeoutTime);\n$(document).ready(function() {\n    $('body').bind('mousedown keydown', function(event) {\n        clearTimeout(timeoutTimer);\n        timeoutTimer = setTimeout(ShowTimeOutWarning, timeoutTime);\n    });\n});\n</code></pre>\n\n<p>Anyone see any problems?</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>If it's a security issue, doing this clientside with javascript is absolutely the wrong end of the pipe to be performing this check. The user could easily have javascript disabled: what does your application do then? What if the user closes their browser before the timeout. do they ever get logged out?</p>\n\n<p>Most serverside frameworks have some kind of session timeout setting for logins. Just use that and save yourself the engineering work.</p>\n\n<p>You can't rely on the assumption that people cannot log in without javascript, therefore the user has javascript. Such an assumption is no deterrent to any determined, or even modestly educated attacker.</p>\n\n<p>Using javascript for this is like a security guard handing customers the key to the bank vault. The only way it works is on faith.</p>\n\n<p>Please believe me when I say that using javascript in this way (and requiring javascript for logins!!) is an incredibly thick skulled way to engineer any kind of web app.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Without using JS, a simpler (and safer) way would simply be to have a lastActivity timestamp stored with the user's session and checking it on page load. Assuming you are using PHP (you can easily redo this code for another platform):</p>\n\n<pre><code>if(($_SESSION['lastAct'] + 1800) &lt; time()) {\n    unset($_SESSION);\n    session_destroy();\n    header('Location: session_timeout_message.php');\n    exit;\n}\n\n$_SESSION['lastAct'] = time();\n</code></pre>\n\n<p>and add this in your page (optional, the user will be logged out regardless of if the page is refreshed or not (as he logs out on next page log)).</p>\n\n<pre><code>&lt;meta http-equiv=\"refresh\" content=\"1801;\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If your concern is the lost of information for the user after a login timeout; another option would be to simply store all the posted information upon the opening of a new session (a new session will always be started when the older session has been closed/scrapped by the server) when the request to a page is made before re-routing to the logging page.  If the user successfully login, then you can use this saved information to return the user back to where he was.  This way, even if the user walk away a few hours, he can always return back to where he was after a successful login; without losing any information.</p>\n\n<p>This require more work by the programmer but it's a great feature totally appreciated by the users. They especially appreciate the fact that they can fully concentrate about what they have to do without stressing out about potentially losing their information every 30 minutes or so.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Check this example, it could be what you are looking for\n<a href=\"http://www.webappers.com/2013/10/31/ifvisible-js-check-if-user-is-idle-or-active-on-the-page/\" rel=\"nofollow\">http://www.webappers.com/2013/10/31/ifvisible-js-check-if-user-is-idle-or-active-on-the-page/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am needing to detect when a user is inactive (not clicking or typing) on the current page for more than 30 minutes.</p>\n\n<p>I thinking it might be best to use event blubbling attached to the body tag and then just keep resetting a timer for 30 minutes, but I'm not exactly sure how to create this.</p>\n\n<p>I have jQuery available, although I'm not sure how much of this will actually use jQuery.</p>\n\n<p><strong>Edit:</strong> I'm more needing to know if they are actively using the site, therefore clicking (changing fields or position within a field or selecting checkboxes/radios) or typing (in an input, textarea, etc). If they are in another tab or using another program, then my assumption is they are not using the site and therefore should be logged out (for security reasons).</p>\n\n<p><strong>Edit #2:</strong> So everyone is clear, this is not at all for determining if the user is logged in, authenticated or anything. Right now the server will log the user out if they don't make a page request within 30 minutes. This functionality to prevent the times when someone spends >30 minutes filling in a form and then submitting the form only to find out that they haven't been logged out. Therefore, this will be used in combination with the server site to determine if the user is inactive (not clicking or typing). Basically, the deal is that after 25 minutes of idle, they will be presented with a dialog to enter their password. If they don't within 5 minutes, the system automatically logs them out as well as the server's session is logged out (next time a page is accessed, as with most sites).</p>\n\n<p>The Javascript is only used as a warning to user. If JavaScript is disabled, then they won't get the warning and (along with most of the site not working) they will be logged out next time they request a new page.</p>\n",
            "last_activity_date": 1393848578,
            "question_id": 1009260,
            "score": 18,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How can I detect with JavaScript/jQuery if the user is currently active on the page?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>This works fine for me in FF 3.6, IE 8, Safari 4.0, and Chrome 3.195.</p>\n\n<p>A few style pointers though:</p>\n\n<ul>\n<li>Don't use a fixed-width preview area, your picture will be distorted to fit the area</li>\n<li><p>Instead of <code>document.getElementById()</code> use this:</p>\n\n<p><code>function $(id) { return document.getElementById(id); }</code></p></li>\n<li><p>Example: <code>$('send')</code> </p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's not possible to grab a user file before upload, except using the new File API:</p>\n\n<p><a href=\"https://developer.mozilla.org/en/using_files_from_web_applications\" rel=\"nofollow\">Example: Showing thumbnails of user-selected images</a></p>\n\n<p>This will not, of course, be cross-browser.  There might also be a way to do it via Flash and data URLs (or just previewing in Flash), but I prefer to avoid JavaScript &lt;-> Flash integration.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For Firefox. Because of security it has a truncated path. However, they have provided other ways of doing this:</p>\n\n<pre><code>var img = document.createElement(\"IMG\");\nif(document.all)\n    img.src = document.getElementById('submit').value;\nelse\n    // Your solution for Firefox.\n    img.src = document.getElementById('submit').files.item(0).getAsDataURL();\ndocument.getElementById('div').appendChild(img);\n</code></pre>\n\n<p>The below is working in Internet Explorer 7 and Firefox 3.</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n    #prevImage {\n        border: 8px solid #ccc;\n        width: 300px;\n        height: 200px;\n    }\n&lt;/style&gt;\n&lt;script type=\"text/javascript\"&gt;\n    function setImage(file) {\n        if(document.all)\n            document.getElementById('prevImage').src = file.value;\n        else\n            document.getElementById('prevImage').src = file.files.item(0).getAsDataURL();\n        if(document.getElementById('prevImage').src.length &gt; 0) \n            document.getElementById('prevImage').style.display = 'block';\n    }\n&lt;/script&gt;\n&lt;pre&gt;\n     IE8 needs a security settings change: internet settings, security, custom level :\n\n     [] Include local directory path when uploading files to a server\n ( ) Disable\n (o) Enable \n&lt;/pre&gt;\n&lt;form&gt;\n    &lt;input type=\"file\" name=\"myImage\" onchange=\"setImage(this);\" /&gt;\n&lt;/form&gt;\n&lt;img id=\"prevImage\" style=\"display:none;\" /&gt;\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/FileList\">Documentation of File List object on MDC</a></p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>This works fine in FF 3.6, IE 9, Safari 4.0, and Chrome 3.195.</p>\n\n<pre><code>var reader = new FileReader();\n\nfunction preview(what) {\n     if(jQuery.browser.msie || jQuery.browser.safari || jQuery.browser.chrome) {\n         document.getElementById(\"preview-photo\").src=what.value;\n         return;\n    }\n    else{                   \n        // array with acceptable file types\n        var accept = [\"image/png\",\"image/jpeg\",\"image/jpg\",\"image/gif\"];\n\n        // if we accept the first selected file type\n        if (accept.indexOf(what.files[0].type) &gt; -1) {\n            if(what.files &amp;&amp; what.files[0]){\n                  reader.readAsDataURL(what.files[0]);\n                  document.getElementById(\"preview-photo\").src=reader.result;\n            }\n        }       \n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>just have a look on following link related on file API, it works for IE9+ i checked it does not  work for IE8\nit shows how to preview image and text files\n<a href=\"http://www.xul.fr/en/html5/filereader.php\" rel=\"nofollow\">http://www.xul.fr/en/html5/filereader.php</a>\nFileReader, loading an image in a webpage</p>\n\n<p>FileReader allows access to the local file system and load documents with just JavaScript code.</p>\n\n<p>This completes the  for selecting local file, as this tag can only provide the content of this file to a script on the server, with the form data.</p>\n\n<p>Compatibility test</p>\n\n<p>The current browser recognizes it the File API,  which includes the FileReader object?</p>\n\n<p>Result\nFile API supported.\nSource code of the test:</p>\n\n<pre><code>&lt;script&gt;\nif (window.File &amp;&amp; window.FileReader &amp;&amp; window.FileList &amp;&amp; window.Blob) \n  document.write(\"&lt;b&gt;File API supported.&lt;/b&gt;\");\nelse\n  document.write('&lt;i&gt;File API not supported by this browser.&lt;/i&gt;');\n&lt;/script&gt;   \n</code></pre>\n\n<p>HTML code:</p>\n\n<pre><code>&lt;input type=\"file\" id=\"getimage\"&gt;\n\n&lt;fieldset&gt;&lt;legend&gt;Your image here&lt;/legend&gt;\n    &lt;div  id=\"imgstore\"&gt;&lt;/div&gt;\n&lt;/fieldset&gt; \n</code></pre>\n\n<p>JavaScript code:</p>\n\n<pre><code>&lt;script&gt;\nfunction imageHandler(e2) \n{ \n  var store = document.getElementById('imgstore');\n  store.innerHTML='&lt;img src=\"' + e2.target.result +'\"&gt;';\n}\n\nfunction loadimage(e1)\n{\n  var filename = e1.target.files[0]; \n  var fr = new FileReader();\n  fr.onload = imageHandler;  \n  fr.readAsDataURL(filename); \n}\n\nwindow.onload=function()\n{\n  var x = document.getElementById(\"filebrowsed\");\n  x.addEventListener('change', readfile, false);\n  var y = document.getElementById(\"getimage\");\n  y.addEventListener('change', loadimage, false);\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>if input type is file then using htmlfilereader function can we see the preview of html page? using accept type =\"text/html\"\n\ni got the file description and size...\n\n    &lt;input type=\"file\" id=\"files\" name=\"files[]\" multiple /&gt;\n    &lt;output id=\"list\"&gt;&lt;/output&gt;\n\n    &lt;script&gt;\n      function handleFileSelect(evt) {\n        var files = evt.target.files; // FileList object\n\n        // files is a FileList of File objects. List some properties.\n        var output = [];\n        for (var i = 0, f; f = files[i]; i++) {\n          output.push('&lt;li&gt;&lt;strong&gt;', escape(f.name), '&lt;/strong&gt; (', f.type || 'n/a', ') - ',\n                      f.size, ' bytes, last modified: ',\n                      f.lastModifiedDate ? f.lastModifiedDate.toLocaleDateString() : 'n/a',\n                      '&lt;/li&gt;');\n        }\n        document.getElementById('list').innerHTML = '&lt;ul&gt;' + output.join('') + '&lt;/ul&gt;';\n      }\n\n      document.getElementById('files').addEventListener('change', handleFileSelect, false);\n    &lt;/script&gt;\n\n\n above mention problem is related with offline local stored html pages.we can see the preview of live page using live url as-\n\n    &lt;html&gt;\n    &lt;head&gt;\n    &lt;!--[if IE]&gt;\n    &lt;style&gt;\n    #frame {\n        zoom: 0.2;\n    }\n    &lt;/style&gt;\n    &lt;![endif]--&gt;\n    &lt;style&gt;\n    #frame {\n        width: 800px;\n        height: 520px;\n        border: none;\n        -moz-transform: scale(0.2);\n        -moz-transform-origin: 0 0;\n        -o-transform: scale(0.2);\n        -o-transform-origin: 0 0;\n        -webkit-transform: scale(0.2);\n        -webkit-transform-origin: 0 0;\n    }\n    &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;iframe id=\"frame\" src=\"http://www.bing.com\"&gt;\n    &lt;/iframe&gt;\n    &lt;/body&gt;\n    &lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to preview an image before uploading it to the server. I have written a little bit code for it, but it is only being previewed in Internet Explorer, not in other browsers like Safari, Chrome, Firefox, due to some type of security reasons. Is there any solution to preview the image in these browsers?</p>\n\n<pre><code>    &lt;body&gt;\n       &lt;form name=\"Upload\" enctype=\"multipart/form-data\" method=\"post\"&gt;\n           Filename: &lt;INPUT type=\"file\" id=\"submit\"&gt;\n           &lt;INPUT type=\"button\" id=\"send\" value=\"Upload\"&gt;\n       &lt;/form&gt;\n       &lt;div \n           id=\"div\" \n           align=\"center\" \n           style=\"height: 200px;width: 500px;border-style: ridge;border-color: red\"&gt;\n       &lt;/div&gt;\n    &lt;/body&gt;\n\n    &lt;script type=\"text/javascript\"&gt;\n        var img_id=0\n        var image = new Array()\n        document.getElementById('send').onclick=function()\n        {\n            img_id++\n            var id=\"imgid\"+img_id\n            image = document.getElementById('submit').value;\n            document.getElementById('div').innerHTML=\"&lt;img id='\"+id+\"' src='\"+image+\"' width=500px height=200px&gt;\"\n        }\n    &lt;/script&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1406360441,
            "question_id": 4094012,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "How to upload preview image before upload through JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use the <code>setTimeout</code> or <code>setInterval</code> functions.</p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>If you are looking to block the execution of code with call to <code>sleep</code>, then no, there is no method for that in <code>JavaScript</code>.</p>\n\n<p><code>JavaScript</code> does have <code>setTimeout</code> method. <code>setTimeout</code> will let you <strong>defer</strong> execution of a function for x milliseconds.</p>\n\n<pre><code>setTimeout(myFunction, 3000);\n\n// if you have defined a function named myFunction \n// it will run after 3 seconds (3000 milliseconds)\n</code></pre>\n\n<p>Remember, this is completely different from how <code>sleep</code> method, if it existed, would behave.</p>\n\n<pre><code>function test1()\n{    \n    // let's say JavaScript did have a sleep function..\n    // sleep for 3 seconds\n    sleep(3000);\n\n    alert('hi'); \n}\n</code></pre>\n\n<p>If you run the above function, you will have to wait for 3 seconds (<code>sleep</code> method call is blocking) before you see the alert 'hi'. Unfortunately, there is no <code>sleep</code> function like that in <code>JavaScript</code>.</p>\n\n<pre><code>function test2()\n{\n    // defer the execution of anonymous function for \n    // 3 seconds and go to next line of code.\n    setTimeout(function(){ \n\n        alert('hello');\n    }, 3000);  \n\n    alert('hi');\n}\n</code></pre>\n\n<p>If you run test2, you will see 'hi' right away (<code>setTimeout</code> is non blocking) and after 3 seconds you will see the alert 'hello'.</p>\n",
                    "is_accepted": false,
                    "score": 127
                },
                {
                    "body": "<p>If you run the above function, you will have to wait for 3 seconds (sleep method call is blocking) </p>\n\n<pre><code>&lt;strong class=\"highlight\"&gt;function&lt;/strong&gt; myFunction(){\n       doSomething();\n       sleep(500);\n       doSomethingElse();\n    }\n\n\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      /**\n       * Delay for a number of milliseconds\n       */\n      function sleep(delay) {\n        var start = new Date().getTime();\n        while (new Date().getTime() &lt; start + delay);\n      }\n    &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Eureka!&lt;/h1&gt;\n      &lt;script type=\"text/javascript\"&gt;\n        alert(\"Wait for 5 seconds.\");\n        sleep(5000)\n        alert(\"5 seconds passed.\");\n      &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<pre><code>  function sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() &lt; start + delay);\n  }\n</code></pre>\n\n<p>This code is not blocking .. this is CPU hogging code.. This is different from a thread blocking itself and releasing CPU cycles to be utilized by another thread.. No such thing is going on here.. Do not use this code.. bad bad idea.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>Is there a sleep function in JavaScript?</p>\n",
            "last_activity_date": 1403089988,
            "question_id": 1141302,
            "score": 66,
            "tags": [
                "javascript"
            ],
            "title": "Is there a sleep function in JavaScript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>in some cases* you can initially <code>return false</code> instead of <code>e.preventDefault()</code>, then when you want to restore the default to <code>return true</code>.</p>\n\n<p>*Meaning when you don't mind the event bubbling and you don't use the <code>e.stopPropagation()</code> together with <code>e.preventDefault()</code> </p>\n\n<p>Also see <a href=\"http://stackoverflow.com/questions/1164132/how-to-reenable-event-preventdefault/1168022#1168022\">similar question</a> (also in stack Overflow)</p>\n\n<p>or in the case of checkbox you can have something like: </p>\n\n<pre><code>$(element).toggle(function(){\n  $(\":checkbox\").attr('disabled', true);\n  },\nfunction(){\n   $(\":checkbox\").removeAttr('disabled');\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>its not possible to restore a prevent default but what u can do is trick it :)</p>\n\n<pre><code>&lt;div id=\"t1\"&gt;Toggle&lt;/div&gt;\n$('#t1').click(function (e){\n   if($(this).hasClass('prevented')){\n       e.preventDefault();\n       $(this).removeClass('prevented');\n   }else{\n       $(this).addClass('prevented');\n   }\n});\n</code></pre>\n\n<p>If you want to go a step further u can event use the trigger button to trigger an event.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Its fairly simple</p>\n\n<p>Lets suppose you do something like</p>\n\n<pre><code>document.ontouchmove = function(e){ e.preventDefault(); }\n</code></pre>\n\n<p>now to revert it to the original situation, do the below...</p>\n\n<pre><code>document.ontouchmove = function(e){ return true; }\n</code></pre>\n\n<p>via - <a href=\"http://www.bcreatives.com.au/blog/enabledisable-scrolling-in-iphoneipads-safari-browser.html\">http://www.bcreatives.com.au/blog/enabledisable-scrolling-in-iphoneipads-safari-browser.html</a></p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>I'm not sure you're what you mean: but here's a solution for a similar (and possibly the same) problem...</p>\n\n<p>I often use preventDefault() to intercept items. However: it's not the only method of interception... often you may just want a \"question\" following which behaviour continues as before, or stops. \nIn a recent case I used the following solution:</p>\n\n<p><code>$(\"#content\").on('click', '#replace', (function(event){\nreturn confirm('Are you sure you want to do that?')\n}));</code></p>\n\n<p>Basically, the \"prevent default\" is meant to intercept and do something else: the \"confirm\" is designed for use in ... well - confirming!</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>In my case:</p>\n\n<pre><code>$('#some_link').click(function(event){\n    event.preventDefault();\n});\n</code></pre>\n\n<p><code>$('#some_link').unbind('click');</code> worked as the only method to restore the default action.</p>\n\n<p>As seen over here: <a href=\"http://stackoverflow.com/a/1673570/211514\">http://stackoverflow.com/a/1673570/211514</a></p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>Disable:</p>\n\n<pre><code>document.ontouchstart = function(e){ e.preventDefault(); }\n</code></pre>\n\n<p>Enable:</p>\n\n<pre><code>document.ontouchstart = function(e){ return true; }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can restore the default action (if it is a HREF follow) by doing this:</p>\n\n<p><code>window.location = $(this).href;</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Test this code, I think solve your problem:</p>\n\n<pre><code>event.stopPropagation();\n</code></pre>\n\n<p><a href=\"http://www.bennadel.com/blog/1771-enable-and-disable-jquery-event-handlers-rather-than-bind-and-unbind.htm\" rel=\"nofollow\">Reference</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>jquery toggle  calls preventDefault() by default, so the defaults don't work.\nyou can't click a checkbox, you cant click a link etc etc</p>\n\n<p>is it possible to restore the default handler?</p>\n",
            "last_activity_date": 1417713998,
            "question_id": 1551389,
            "score": 61,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "preventdefault",
                "event-bubbling"
            ],
            "title": "how to enable default after event.preventDefault()?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You need to set the <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Global%5FObjects/RegExp#Parameters\"><em>g</em> flag</a> to replace globally:</p>\n\n<pre><code>date.replace(new RegExp(\"/\", \"g\"), '')\n// or\ndate.replace(/\\//g, '')\n</code></pre>\n\n<p>Otherwise only the first occurrence will be replaced.</p>\n",
                    "is_accepted": true,
                    "score": 100
                },
                {
                    "body": "<p>Unlike the C#/.NET class library (and most other sensible languages), when you pass a <code>String</code> in as the string-to-match argument to the <code>string.replace</code> method, it doesn't do a string replace. It converts the string to a <code>RegExp</code> and does a regex substitution. As Gumbo explains, a regex substitution requires the <code>g</code>\u200dlobal flag, which is not on by default, to replace all matches in one go.</p>\n\n<p>If you want a real string-based replace\u2009\u2014\u2009for example because the match-string is dynamic and might contain characters that have a special meaning in regexen\u2009\u2014\u2009the JavaScript idiom for that is:</p>\n\n<pre><code>var id= 'c_'+date.split('/').join('');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 38
                }
            ],
            "body": "<p>I have this</p>\n\n<pre><code> var date = $('#Date').val();\n</code></pre>\n\n<p>this get the value in the textbox what would look like this</p>\n\n<p>12/31/2009</p>\n\n<p>Now I do this on it</p>\n\n<pre><code>var id = 'c_' + date.replace(\"/\", '');\n</code></pre>\n\n<p>and the result is </p>\n\n<p>c_1231/2009</p>\n\n<p>It misses the last '/' I don't understand why though.</p>\n",
            "last_activity_date": 1261955586,
            "question_id": 1967119,
            "score": 50,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Why does javascript replace only first instance when using replace?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>One method is to do it without JavaScript and this is something like this:</p>\n\n<pre><code>    &lt;textarea style=\"overflow: visible\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Decide a width and check how many characters one line could hold, and then for each key pressed you call a function that looks something like:</p>\n\n<pre><code>function changeHeight()\n{\nvar chars_per_row = 100;\nvar pixles_per_row = 16;\nthis.style.height = Math.round((this.value.length / chars_per_row) * pixles_per_row) + 'px';\n}\n</code></pre>\n\n<p>Havn't tested the code.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I don't think there's any way to get width of texts in <em>variable-width</em> fonts, especially in javascript.</p>\n\n<p>The only way I can think is to make a hidden element that has variable width set by css, put text in its innerHTML, and get the width of that element. So you may be able to apply this method to cope with textarea auto-sizing problem.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can achieve this by using a span and a textarea.</p>\n\n<p>You have to update the span with the text in textarea each time the text is changed. Then set the css width and height of the textarea to the span's clientWidth and clientHeight property.</p>\n\n<p>Eg: </p>\n\n<pre><code>.textArea {\n    border: #a9a9a9 1px solid;\n    overflow: hidden;\n    width:  expression( document.getElementById(\"spnHidden\").clientWidth );\n    height: expression( document.getElementById(\"spnHidden\").clientHeight );\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try this :</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script&gt;\nfunction textAreaAdjust(o) {\n    o.style.height = \"1px\";\n    o.style.height = (25+o.scrollHeight)+\"px\";\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;textarea onkeyup=\"textAreaAdjust(this)\" style=\"overflow:hidden\"&gt;&lt;/textarea&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>It works under Firefox 3, IE 7, Safari, Opera and Chrome.</p>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>You may also try <code>contenteditable</code> attribute onto a normal <code>p</code> or <code>div</code>. Not really a <code>textarea</code> but it will auto-resize without script.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;style&gt;\n.divtext {\n    border: ridge 2px;\n    padding: 5px;\n    width: 20em;\n    min-height: 5em;\n    overflow: auto;\n}\n&lt;/style&gt;\n\n&lt;div class=\"divtext\" contentEditable&gt;Hello World&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Use this function:</p>\n\n<pre><code>function adjustHeight(el){\n    el.style.height = (el.scrollHeight &gt; el.clientHeight) ? (el.scrollHeight)+\"px\" : \"60px\";\n}\n</code></pre>\n\n<p>Use this html:</p>\n\n<pre><code>&lt;textarea onkeyup=\"adjustHeight(this)\"&gt;&lt;/textarea&gt;\n</code></pre>\n\n<p>And finally use this css:</p>\n\n<pre><code>textarea {\nmin-height: 60px;\noverflow-y: auto;\nword-wrap:break-word\n}\n</code></pre>\n\n<p>The solution simply is letting the scrollbar appears to detect that height needs to be adjusted, and whenever the scrollbar appears in your text area, it adjusts the height just as much as to hide the scrollbar again.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Alciende's answer didn't quite work for me in Safari for whatever reason just now, but did after a minor modification:</p>\n\n<pre><code>function textAreaAdjust(o) {\n    o.style.height = \"1px\";\n    setTimeout(function() {\n        o.style.height = (o.scrollHeight)+\"px\";\n    }, 1);\n}\n</code></pre>\n\n<p>Hope this helps someone</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A jquery solution has been implemented, and source code is available in github at: <a href=\"https://github.com/jackmoore/autosize\" rel=\"nofollow\">https://github.com/jackmoore/autosize</a> .</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I need a textarea where I type my text in the box, it grows in length as needed to avoid having to deal with scroll bars and it need to shrink after delete text!\nI didn\u2019t want to go down the mootools or jquery route because I have a lightweight form.</p>\n",
            "last_activity_date": 1397414444,
            "question_id": 995168,
            "score": 35,
            "tags": [
                "javascript"
            ],
            "title": "Textarea to resize based on content length"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Works on <a href=\"http://jsbin.com/aracov\">my chrome</a>...</p>\n\n<pre><code>$('#audio').bind('canplay', function() {\n  this.currentTime = 29; // jumps to 29th secs\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Make sure you attempt to set the <code>currentTime</code> property <strong>after</strong> the audio element is ready to play. You can bind your function to the <code>oncanplay</code> event attribute defined in the specification.</p>\n\n<p>Can you post a sample of the code that fails?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To jump around an audio file, your server must be configured properly.</p>\n\n<p>The client sends <a href=\"https://developer.mozilla.org/en/Configuring_servers_for_Ogg_media#Handle_HTTP_1.1_byte_range_requests_correctly\">byte range requests</a> to seek and play certain regions of a file, so the server must response adequately:</p>\n\n<blockquote>\n  <p>In order to support seeking and playing back regions of the media that\n  aren't yet downloaded, Gecko uses HTTP 1.1 byte-range requests to\n  retrieve the media from the seek target position. In addition, if you\n  don't serve X-Content-Duration headers, Gecko uses byte-range requests\n  to seek to the end of the media (assuming you serve the Content-Length\n  header) in order to determine the duration of the media.</p>\n</blockquote>\n\n<p>Then, if the server responses to byte range requests correctly, you can set the position of audio via <code>currentTime</code>:</p>\n\n<pre><code>audio.currentTime = 30;\n</code></pre>\n\n<p>See MDN's <a href=\"https://developer.mozilla.org/en/Configuring_servers_for_Ogg_media\">Configuring servers for Ogg media</a> (the same applies for other formats, actually).</p>\n\n<p>Also, see <a href=\"http://blog.pearce.org.nz/2009/08/configuring-web-servers-for-html5-ogg.html\">Configuring web servers for HTML5 Ogg video and audio</a>.</p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>I was facing problem that progress bar of audio was not working but audio was working properly. This code works for me. Hope it will help you too.\nHere song is the object of audio component.</p>\n\n<p>HTML Part </p>\n\n<pre><code>&lt;input type=\"range\" id=\"seek\" value=\"0\" max=\"\"/&gt;\n</code></pre>\n\n<p>JQuery Part</p>\n\n<pre><code>    $(\"#seek\").bind(\"change\", function() {\n            song.currentTime = $(this).val();               \n        });\n\nsong.addEventListener('timeupdate',function (){\n\n    $(\"#seek\").attr(\"max\", song.duration);\n    $('#seek').val(song.currentTime);\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The @katspaugh's answer is correct, but there is a workaround that does not require any additional server configuration. The idea is to get the audio file as a blob, transform it to <code>dataURL</code> and use it as the <code>src</code> for the <code>audio</code> element.</p>\n\n<p>Here is solution for angular <code>$http</code>, but if needed I can add vanilla JS version as well:</p>\n\n<pre><code>$http.get(audioFileURL,\n        {responseType:'blob'})\n        .success(function(data){\n            var fr = new FileReader;\n            fr.readAsDataURL(data);\n            fr.onloadend = function(){\n                domObjects.audio.src = fr.result;\n            };\n        });\n</code></pre>\n\n<h3>cautions</h3>\n\n<ol>\n<li>This workaround is not suitable for large files.</li>\n<li>It will not work cross-origin unless CORS are set properly.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How to jump to certain time offsets in <strong>HTML5 Audio</strong> elements?</p>\n\n<p>They say you can simply set their <a href=\"http://www.w3.org/TR/html5/the-iframe-element.html#dom-media-currenttime\"><code>currentTime</code> property</a> (emphasis mine):</p>\n\n<blockquote>\n  <p>The <code>currentTime</code> attribute must, on getting, return the current\n  playback position, expressed in seconds. <strong>On setting</strong>, if the media\n  element has a current media controller, then it must throw an\n  INVALID_STATE_ERR exception; otherwise, <strong>the user agent must seek to\n  the new value</strong> (which might raise an exception).</p>\n</blockquote>\n\n<p>Alas, it doesn't seem to work (I need it in Chrome).</p>\n\n<p>There are similar questions, although, no answers.</p>\n",
            "last_activity_date": 1415711108,
            "question_id": 9563887,
            "score": 23,
            "tags": [
                "javascript",
                "google-chrome",
                "html5-audio"
            ],
            "title": "Setting HTML5 audio position"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Do you want to adjust the images themselves, or just the way they display? If the former, you want something on the server side. If the latter, you just need to change image.height and image.width.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>...but... wouldn't it be better to adjust the image size on the server side rather than transmitting the bytes to the browser and doing it there? </p>\n\n<p>When I say adjust the image size, I don't mean set the height and width in the HTML image tag.   If you do that, you are still shipping a large number of bytes from server to client.  I mean, actually manipulate the image itself server side.</p>\n\n<p>I have .NET C# code here that takes that approach, but there must be a php way to do it too:  <a href=\"http://ifdefined.com/www/gallery.html\" rel=\"nofollow\">http://ifdefined.com/www/gallery.html</a></p>\n\n<p>Also, by doing it server side, that opens up the possibility of doing the adjustment just once and then saving the adjusted image, which would be very fast.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Well...there's several ways to interrpret this question.</p>\n\n<p>First way, and the way I think you mean, is to simply alter the display size so all images display the same size.  For this I would actually use CSS and not JavaScript.  Simply create a class that has the appropriate width and height values set, and make all img tags use this class.</p>\n\n<p>Second way is that you want to preserve the aspect ration of all the images, but scale the display size to a sane value.  There is a way to access this in JavaScript, but I'll need a bit to write up a quick code sample.</p>\n\n<p>Third way, and I hope you don't mean this way, is to alter the actual size of the image.  This is something you'd have to do on the server side, as not only is JavaScript unable to create images, but it wouldn't make any sense, as the full sized image has already been sent.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>var curHeight;\nvar curWidth;\n\nfunction getImgSize(imgSrc)\n{\nvar newImg = new Image();\nnewImg.src = imgSrc;\ncurHeight = newImg.height;\ncurWidth = newImg.width;\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>It's worth noting that in Firefox 3 and Safari, resizing an image by just changing the height and width doesn't look too bad. In other browsers it can look very noisy because it's using nearest-neighbor resampling. Of course, you're paying to serve a larger image, but that might not matter.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My preferred solution for this would be to do the resizing server-side, so you are transmitting less unnecessary data.</p>\n\n<p>If you have to do it client-side though, and need to keep the image ratio, you could use the below:</p>\n\n<pre><code>var image_from_ajax = new Image();\nimage_from_ajax.src = fetch_image_from_ajax(); // Downloaded via ajax call?\n\nimage_from_ajax = rescaleImage(image_from_ajax);\n\n// Rescale the given image to a max of max_height and max_width\nfunction rescaleImage(image_name)\n{\n    var max_height = 100;\n    var max_width = 100;\n\n    var height = image_name.height;\n    var width = image_name.width;\n    var ratio = height/width;\n\n    // If height or width are too large, they need to be scaled down\n    // Multiply height and width by the same value to keep ratio constant\n    if(height &gt; max_height)\n    {\n        ratio = max_height / height;\n        height = height * ratio;\n        width = width * ratio;\n    }\n\n    if(width &gt; max_width)\n    {\n        ratio = max_width / width;\n        height = height * ratio;\n        width = width * ratio;\n    }\n\n    image_name.width = width;\n    image_name.height = height;\n    return image_name;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was searching a solution to get height and widht of an image using javascript. I got many but all those solution only worked when image present in browser cache.</p>\n\n<p>Finally I got one solution to get image height and width even image does not exist in browser cache. Just I want to share all of you.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n  var imgHeight;\n  var imgWidth;\n\n  function findHHandWW() {\n    imgHeight = this.height;imgWidth = this.width;return true;\n  }\n\n  function showImage(imgPath) {\n    var myImage = new Image();\n    myImage.name = imgPath;\n    myImage.onload = findHHandWW;\n    myImage.src = imgPath;\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>Thanks,</p>\n\n<p>Binod Suman</p>\n\n<p><a href=\"http://binodsuman.blogspot.com/2009/06/how-to-get-height-and-widht-of-image.html\">http://binodsuman.blogspot.com/2009/06/how-to-get-height-and-widht-of-image.html</a></p>\n",
                    "is_accepted": false,
                    "score": 49
                },
                {
                    "body": "<p>Try with JQuery:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction jquery_get_width_height()\n{\n    var imgWidth = $(\"#img\").width();\n    var imgHeight = $(\"#img\").height();\n    alert(\"JQuery -- \" + \"imgWidth: \" + imgWidth + \" - imgHeight: \" + imgHeight);\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction javascript_get_width_height()\n{\n    var img = document.getElementById('img');\n    alert(\"JavaSript -- \" + \"imgWidth: \" + img.width + \" - imgHeight: \" + img.height);\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>just load the image in a hidden img tag - display none - listen to the load event firing with jQuery, then create an new Image() with JavaScript, set the source to the invisible image, and get the size like above ...</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have to display a bunch of images all of which may be of different dimensions on a webpage using AJAX.I want to adjust their size before displaying them. Is there any way to do this in\nJavascript. Using PHP's getimagesize() for each image is unnecessary performance hit \nsince there will be many images.</p>\n",
            "last_activity_date": 1367348904,
            "question_id": 106828,
            "score": 23,
            "tags": [
                "javascript"
            ],
            "title": "Javascript - Get Image height"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I expect the first page is executing the JavaScript, however this is not accessible from the second page, so <code>alert(x)</code> will not work</p>\n\n<p>If you want <code>x</code> returned, you'll have to output it to the AJAX response.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm not totally sure about this, but it's possible that what's happening is that when jQuery builds up the fragment from <code>$(data)</code>, the script tags are lost at that point.</p>\n\n<p>If you can arrange for the included page to really be just a fragment:</p>\n\n<pre><code>&lt;div id='something'&gt;\n  &lt;!-- ... --&gt;\n  &lt;script&gt;var x = 'hello world';&lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>without any other surrounding stuff, then your success callback can do this:</p>\n\n<pre><code>success: function(data) {\n  $('#mydiv').html(data);\n}\n</code></pre>\n\n<p>Now those script tags will be noticed by the jQuery <code>html()</code> function, which explicitly looks for them and strips them out. It does however hold onto those script blocks, and it executes them after it finishes updating the target contents.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As Pointy <em>pointed</em> out (<em>excuse the pun</em>), jQuery messes with the SCRIPT tags when you pass HTML to <code>$()</code>. It doesn't remove them though -- it simply adds them to the DOM collection produced from your HTML. You can execute the scripts like so:</p>\n\n<pre><code>$.ajax({\n    url: 'example.html',\n    type: 'GET',\n    success: function(data) {\n\n        var dom = $(data);\n\n        dom.filter('script').each(function(){\n            $.globalEval(this.text || this.textContent || this.innerHTML || '');\n        });\n\n        $('#mydiv').html(dom.find('#something').html());\n\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>As alternative to @James answer, the HTML string can be parsed with <code>$.parseHTML()</code>, by paying attention to add the boolean flag that includes the scripts to <code>true</code>:</p>\n\n<pre><code>$.ajax({\n    url: 'example.html',\n    type: 'GET',\n    success: function(data) {\n\n        var content = $($.parseHTML(data, document, true)).find('#something');\n        $('#mydiv').html(content);\n\n    }\n});\n</code></pre>\n\n<p>in this way any scripts embedded in the downloaded text can be executed.  </p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Solution 1:the server return exact content </p>\n\n<pre><code>$.ajax({\n    url: 'example.html',\n    type: 'GET',\n    success: function(data) {\n\n        $('#mydiv').html(data);\n\n    }\n});\n</code></pre>\n\n<p>Solution 2:use innerHTML</p>\n\n<pre><code>$.ajax({\n    url: 'example.html',\n    type: 'GET',\n    success: function(data) {\n\n        var dom = $(data);\n        $('#mydiv').html(dom.find('#something')[0].innerHTML);\n\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><strong>I have an HTML page like so:</strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;div id='something'&gt;\n    ...\n    &lt;script&gt;\n    var x = 'hello world';\n    &lt;/script&gt;\n    ...\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>On another page, I am doing this:</strong></p>\n\n<pre><code>$.ajax({\n    url: 'example.html',\n    type: 'GET',\n    success: function(data) {\n        $('#mydiv').html($(data).find('#something').html());\n        alert(x);\n    }\n});\n</code></pre>\n\n<p>jQuery, however, is not executing the javascript in the first file, even though the documentation says it does. How can I make it do that?</p>\n\n<p><strong>EDIT: Unfortunately in the real world application I am working on I don't have control over what the \"included\" page has. We are on the same domain, but I can't modify the code that it outputs as it is a packaged product our IT department will not let us modify.</strong></p>\n",
            "last_activity_date": 1411117917,
            "question_id": 2699320,
            "score": 22,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery - script tags in the HTML are parsed out by jQuery and not executed"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>$(document).ready(function(){</code> doesn't really work with Turbolinks. <a href=\"https://github.com/rails/turbolinks/#turbolinks\">Turbolinks</a>:</p>\n\n<blockquote>\n  <p>... makes following links in your web application faster. Instead of letting the browser recompile the JavaScript and CSS between each page change, it keeps the current page instance alive and replaces only the body and the title in the head.</p>\n</blockquote>\n\n<p>So the page is only loaded once and then pieces are replaced as needed. Since the page is only loaded once, your <code>$(document).ready()</code> callbacks are only triggered when the site is initially visited, you won't get more document-ready events when switching pages because Turbolinks doesn't actually switch pages. From the <a href=\"https://github.com/rails/turbolinks/#events\">fine manual</a>:</p>\n\n<blockquote>\n  <p>With Turbolinks pages will change without a full reload, so you can't rely on <code>DOMContentLoaded</code> or <code>jQuery.ready()</code> to trigger your code. Instead Turbolinks fires events on document to provide hooks into the lifecycle of the page.</p>\n</blockquote>\n\n<p>You probably want to listen for one of the Turbolinks events instead:</p>\n\n<blockquote>\n  <ul>\n  <li><code>page:change</code> the page has been parsed and changed to the new version and on DOMContentLoaded</li>\n  <li>[...]</li>\n  <li><code>page:load</code> is fired at the end of the loading process.</li>\n  </ul>\n</blockquote>\n\n<p><code>page:change</code> is usually what you're looking for as it is triggered when loading a fresh page and restoring a page from the Turbolinks page cache.</p>\n\n<p>You might want to turn off Turbolinks until you've had time to review <strong>all</strong> of your JavaScript and you've done a full QA sweep. You should also test your site's speed to see if it is worth using at all.</p>\n\n<p>Another option would be to use <a href=\"https://github.com/kossnocorp/jquery.turbolinks\">jquery.turbolinks</a> to patch up things for you. I haven't used this but <a href=\"http://stackoverflow.com/a/18834209/479863\">other people</a> are using it to good effect.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>A solution to this is already available at this <a href=\"http://railscasts.com/episodes/390-turbolinks\" rel=\"nofollow\">railscast</a></p>\n\n<p>Here is one example (the one i like to use).</p>\n\n<pre><code>ready = -&gt;\n  # ..... your js\n\n$(document).ready(ready)\n$(document).on('page:load', ready)\n</code></pre>\n\n<p><a href=\"https://github.com/kossnocorp/jquery.turbolinks\" rel=\"nofollow\">There is also a gem</a> that solves this issue in a way that lets you keep doing it the old way. It works really well :)</p>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>I'm building a Rails 4 app and I have a few scattered js files that I'm trying to include \"the rails way\". I moved jquery plugins into the /vendor/assets/javascripts and I updated the manifest (application.js) to require them. When I load the pages locally I see that they appear correctly.</p>\n\n<p>However, I'm getting inconsistent behavior from one of the scripts that's compiled. I have a controller-specific js file called projects.js which is referenced in the application.js via the use of <code>require_tree .</code>:</p>\n\n<pre><code>//= require jquery\n//= require jquery_ujs\n//= require turbolinks\n//= require bootstrap.min\n//= require jquery.form.min\n//= require_tree .\n</code></pre>\n\n<p>I see the file is included correctly, and it works... half the time. The other half of the time, the stuff in projects.js doesn't seem to do anything (it's mostly jquery animations and some ajax requests). When it doesn't work, I'll click buttons a couple times, nothing will happen, and then I'll throw this error:</p>\n\n<pre><code>Uncaught TypeError: Cannot read property 'position' of null \nturbolinks.js?body=1:75\n</code></pre>\n\n<p>This never happened when the scripts were in the individual views (the wrong way), so I'm fairly certain the problem is not with my javascript code. One other potentially relevant details is that the stuff in projects.js is wrapped in a <code>$(document).ready(function(){</code>. Also, I'm testing in development mode so the javascripts and css are not combined by the asset pipeline.</p>\n\n<p>Any idea what's going on here? I'm new to Rails but I've done my best to follow all the conventions.</p>\n\n<p><strong>Update!</strong></p>\n\n<p>It's predictable <em>when</em> my project scripts don't work. The first page load works every time. Then I click one link to a new page which uses my project.js behaviors and the <em>second</em> page never works. I click a few times and eventually throw the error above. I'm still not sure why, but I'm suspecting this is related to turbo-linking.</p>\n",
            "last_activity_date": 1406028342,
            "question_id": 18769109,
            "score": 18,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "ruby",
                "ruby-on-rails-4",
                "turbolinks"
            ],
            "title": "Rails 4 turbo-link prevents jQuery scripts from working"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>How about a solution where you put the actual \"data\" of the table inside its own div, with <code>overflow: scroll;</code>? Then the browser will automatically create scrollbars for the portion of the \"table\" you do not want to lock, and you can put the \"table header\"/first row just above that <code>&lt;div&gt;</code>.</p>\n\n<p>Not sure how that would work with scrolling horizontally though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://javascript.internet.com/miscellaneous/sort-and-lock-table.html\" rel=\"nofollow\">Sort and Lock Table</a> is the only solution I have seen which does work on other browsers than IE. (although this \"<a href=\"http://www.webdeveloper.com/forum/showthread.php?t=105305\" rel=\"nofollow\">locked column css</a>\" might do the trick as well)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I ran across a site a few weeks back. This is a working example of the first column locked but it is not browser compatible with Firefox. I didn't do a lot of checking around but it seems it only works in IE. There are some notes the author provided along with it that you can read.</p>\n\n<p>Lock the First column:\n<a href=\"http://home.tampabay.rr.com/bmerkey/examples/locked-column-csv.html\" rel=\"nofollow\">http://home.tampabay.rr.com/bmerkey/examples/locked-column-csv.html</a></p>\n\n<p>Let me know if you need the Javascript to lock the Table headers too.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You'd have to test it but if you embedded an iframe within your page then used CSS to absolutely position the 1st row &amp; column at 0,0 in the iframe page would that solve your problem?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need two tables, where the first one is an exact overlay over the second one. The second one contains all the data, where the first one just contains the first column. You have to synchronize it's width and depending on the content also the height of it's rows. </p>\n\n<p>Additional to this two tables, you need a third one. That's the first row, which lays exactly between the other two and has to be synchronized in the same way.</p>\n\n<p>You will need absolute positioning here. Next, you would synchronize the scrolling of the data table with the scrolling positions of the head row and first column table.</p>\n\n<p>That works very well in all major browsers, except for one issue: The synchronized scrolling will flutter. To fix that, you need two outher div containers that hold a clone of the content of the header row and the first column. When scrolling vertically, you display the header row clone to prevent fluttering, while you reposition the original in the background.\nWhen scrolling horizontally, you would show the first row clone. Same thing here.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've posted my jQuery plugin solution here: <a href=\"http://stackoverflow.com/questions/486576/frozen-table-header-inside-scrollable-div/1533619#1533619\">http://stackoverflow.com/questions/486576/frozen-table-header-inside-scrollable-div/1533619#1533619</a></p>\n\n<p>It does exactly what you want and is really lightweight and easy to use.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are quite a few cross browser solutions for this today, among which are <a href=\"http://www.matts411.com/post/super_tables/\" rel=\"nofollow\">SuperTable</a> which I like due to its elegance and simplicity (now being continued with MooGrid) and <a href=\"https://github.com/mleibman/SlickGrid/wiki\" rel=\"nofollow\">SlickGrid</a> with its awesome set of features.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Oh well, I looked up for scrollable table with fixed column to understand the need of this specific requirement and your question was one of it with no close answers.. </p>\n\n<p>I answered this question <a href=\"http://stackoverflow.com/questions/10838700/large-dynamically-sized-html-table-with-a-fixed-scroll-row-and-fixed-scroll-colu/10922732#10922732\">Large dynamically sized html table with a fixed scroll row and fixed scroll column</a> which inspired to showcase my work as a plugin <a href=\"https://github.com/meetselva/fixed-table-rows-cols\">https://github.com/meetselva/fixed-table-rows-cols</a></p>\n\n<p>The plugin basically converts a well formatted HTML table to a scrollable table with fixed table header and columns.</p>\n\n<p>The usage is as below,</p>\n\n<pre><code>$('#myTable').fxdHdrCol({\n    fixedCols    : 3,       /* 3 fixed columns */\n    width        : \"100%\",  /* set the width of the container (fixed or percentage)*/\n    height       : 500      /* set the height of the container */\n});\n</code></pre>\n\n<p>You can check the <a href=\"http://meetselva.github.io/fixed-table-rows-cols/\">demo and documentation here</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I did this with a combination of: </p>\n\n<ul>\n<li>Using multiple tables</li>\n<li>Fixed-size cells</li>\n<li>jQuery's scrollTop and scrollLeft functions</li>\n</ul>\n\n<p>Here's a <a href=\"http://jsfiddle.net/software_christian/Fp9a3/8/\" rel=\"nofollow\">jsfiddle example</a> to demonstrate. </p>\n\n<p>Haven't tested on all browsers but I imagine it's not great on older IE versions.</p>\n\n<p><strong>jQuery</strong></p>\n\n<pre><code>$(\"#clscroll-content\").scroll(function() {\n    $(\"#clscroll-row-headers\").scrollTop($(\"#clscroll-content\").scrollTop());\n    $(\"#clscroll-column-headers\").scrollLeft($(\"#clscroll-content\").scrollLeft());\n});\n\n$(\"#clscroll-column-headers\").scroll(function() {\n    $(\"#clscroll-content\").scrollLeft($(\"#clscroll-column-headers\").scrollLeft());\n});\n\n$(\"#clscroll-row-headers\").scroll(function() {\n    $(\"#clscroll-content\").scrollTop($(\"#clscroll-row-headers\").scrollTop());\n});\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div class=\"clscroll corner-header\"&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;th&gt;&amp;nbsp;&lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/div&gt;\n&lt;div class=\"clscroll column-headers\" id=\"clscroll-column-headers\"&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Bus&lt;/th&gt;\n            &lt;th&gt;Plane&lt;/th&gt;\n            &lt;th&gt;Boat&lt;/th&gt;\n            &lt;th&gt;Bicycle&lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/div&gt;\n&lt;div class=\"clscroll row-headers\" id=\"clscroll-row-headers\"&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Red&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Green&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Blue&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Orange&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Purple&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Yellow&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Pink&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Brown&lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/div&gt;\n&lt;div class=\"clscroll table-content\" id=\"clscroll-content\"&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Red Bus&lt;/td&gt;\n            &lt;td&gt;Red Plane&lt;/td&gt;\n            &lt;td&gt;Red Boat&lt;/td&gt;\n            &lt;td&gt;Red Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Green Bus&lt;/td&gt;\n            &lt;td&gt;Green Plane&lt;/td&gt;\n            &lt;td&gt;Green Boat&lt;/td&gt;\n            &lt;td&gt;Green Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Blue Bus&lt;/td&gt;\n            &lt;td&gt;Blue Plane&lt;/td&gt;\n            &lt;td&gt;Blue Boat&lt;/td&gt;\n            &lt;td&gt;Blue Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Orange Bus&lt;/td&gt;\n            &lt;td&gt;Orange Plane&lt;/td&gt;\n            &lt;td&gt;Orange Boat&lt;/td&gt;\n            &lt;td&gt;Orange Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Purple Bus&lt;/td&gt;\n            &lt;td&gt;Purple Plane&lt;/td&gt;\n            &lt;td&gt;Purple Boat&lt;/td&gt;\n            &lt;td&gt;Purple Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Yellow Bus&lt;/td&gt;\n            &lt;td&gt;Yellow Plane&lt;/td&gt;\n            &lt;td&gt;Yellow Boat&lt;/td&gt;\n            &lt;td&gt;Yellow Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Pink Bus&lt;/td&gt;\n            &lt;td&gt;Pink Plane&lt;/td&gt;\n            &lt;td&gt;Pink Boat&lt;/td&gt;\n            &lt;td&gt;Pink Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Brown Bus&lt;/td&gt;\n            &lt;td&gt;Brown Plane&lt;/td&gt;\n            &lt;td&gt;Brown Boat&lt;/td&gt;\n            &lt;td&gt;Brown Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>.clscroll table {\n    table-layout: fixed;\n}\n\n.clscroll td, .clscroll th { \n    overflow: hidden;\n}\n\n.corner-header {\n    float: left;\n}\n\n.column-headers {\n    float: left;\n    overflow: scroll;\n}\n\n.row-headers {\n    clear: both;\n    float: left;    \n    overflow: scroll;\n}\n\n.table-content {\n    table-layout: fixed;\n    float: left;\n    overflow: scroll;\n}\n\n.clscroll td, .clscroll th { \n    width: 200px;\n    border: 1px solid black;\n}\n\n.row-headers, .table-content {\n    height: 100px;\n}\n\n.column-headers, .table-content, .table-content table, .column-headers table {\n    width: 400px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can do it, without javascript</p>\n\n<p>see this link:\n<a href=\"http://yonax73.blogspot.com/2014/09/tabla-con-cabecera-estatica-cuerpo-con.html\" rel=\"nofollow\">http://yonax73.blogspot.com/2014/09/tabla-con-cabecera-estatica-cuerpo-con.html</a></p>\n\n<p>or live demo:\n<a href=\"http://jsfiddle.net/yonatanalexis22/aeeme8mt/7/\" rel=\"nofollow\">http://jsfiddle.net/yonatanalexis22/aeeme8mt/7/</a></p>\n\n<pre><code>table{\nborder-spacing: 0;\ndisplay: flex;/*Se ajuste dinamicamente al tamano del dispositivo**/\nmax-height: 40vh; /*El alto que necesitemos**/\noverflow-y: auto; /**El scroll verticalmente cuando sea necesario*/\noverflow-x: hidden;/*Sin scroll horizontal*/\ntable-layout: fixed;/**Forzamos a que las filas tenga el mismo ancho**/\nwidth: 98vw; /*El ancho que necesitemos*/\nborder:1px solid gray;}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I create a table that has its first row and first column both locked, as in Excel, when you activate 'freeze panes'?  I need the table to both scroll horizontally and vertically (a lot of solutions for this exist, but only allow vertical scrolling).</p>\n\n<p>So, when you scroll down in the table, the first row will stay put, since it will have the column headings.  This may end up being in a <code>thead</code>, or it may not, whatever makes the solution easier.</p>\n\n<p>When you scroll right, the first column stays put, since it holds the labels for the rows.</p>\n\n<p>I am pretty certain this is impossible with CSS alone, but can anyone point me toward a javascript solution?  It needs to work in all major browsers.</p>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1411664604,
            "question_id": 296020,
            "score": 18,
            "tags": [
                "javascript",
                "css",
                "excel",
                "table",
                "scroll"
            ],
            "title": "How can I lock the first row and first column of a table when scrolling, possibly using javascript and CSS?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>A multi dimensional sorting method, <a href=\"http://stackoverflow.com/questions/979256/how-to-sort-a-json-array/979325#979325\">based on this answer</a>:</p>\n\n<p><strong>Update</strong>: Here is an \"optimized\" version. It does a lot more preprocessing and creates a comparison function for each sorting option beforehand. It might need more more memory (as it stores a function for each sorting option, but it should preform a bit better as it does not have to determine the correct settings during the comparison. I have not done any profiling though.</p>\n\n<pre><code>var sort_by;\n\n(function() {\n    // utility functions\n    var default_cmp = function(a, b) {\n            if (a == b) return 0;\n            return a &lt; b ? -1 : 1;\n        },\n        getCmpFunc = function(primer, reverse) {\n            var dfc = default_cmp, // closer in scope\n                cmp = default_cmp;\n            if (primer) {\n                cmp = function(a, b) {\n                    return dfc(primer(a), primer(b));\n                };\n            }\n            if (reverse) {\n                return function(a, b) {\n                    return -1 * cmp(a, b);\n                };\n            }\n            return cmp;\n        };\n\n    // actual implementation\n    sort_by = function() {\n        var fields = [],\n            n_fields = arguments.length,\n            field, name, reverse, cmp;\n\n        // preprocess sorting options\n        for (var i = 0; i &lt; n_fields; i++) {\n            field = arguments[i];\n            if (typeof field === 'string') {\n                name = field;\n                cmp = default_cmp;\n            }\n            else {\n                name = field.name;\n                cmp = getCmpFunc(field.primer, field.reverse);\n            }\n            fields.push({\n                name: name,\n                cmp: cmp\n            });\n        }\n\n        // final comparison function\n        return function(A, B) {\n            var a, b, name, result;\n            for (var i = 0; i &lt; n_fields; i++) {\n                result = 0;\n                field = fields[i];\n                name = field.name;\n\n                result = field.cmp(A[name], B[name]);\n                if (result !== 0) break;\n            }\n            return result;\n        }\n    }\n}());\n</code></pre>\n\n<p><strong>Example usage:</strong></p>\n\n<pre><code>homes.sort(sort_by('city', {name:'price', primer: parseInt, reverse: true}));\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/zJ6UA/5/\"><strong>DEMO</strong></a></p>\n\n<hr>\n\n<p><strong>Original function:</strong></p>\n\n<pre><code>var sort_by = function() {\n   var fields = [].slice.call(arguments),\n       n_fields = fields.length;\n\n   return function(A,B) {\n       var a, b, field, key, primer, reverse, result, i;\n\n       for(i = 0; i &lt; n_fields; i++) {\n           result = 0;\n           field = fields[i];\n\n           key = typeof field === 'string' ? field : field.name;\n\n           a = A[key];\n           b = B[key];\n\n           if (typeof field.primer  !== 'undefined'){\n               a = field.primer(a);\n               b = field.primer(b);\n           }\n\n           reverse = (field.reverse) ? -1 : 1;\n\n           if (a&lt;b) result = reverse * -1;\n           if (a&gt;b) result = reverse * 1;\n           if(result !== 0) break;\n       }\n       return result;\n   }\n};\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/zJ6UA/1/\"><strong>DEMO</strong></a></p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Here's another one that's perhaps closer to your idea for the syntax</p>\n\n<pre><code>function sortObjects(objArray, properties /*, primers*/) {\n    var primers = arguments[2] || {}; // primers are optional\n\n    properties = properties.map(function(prop) {\n        if( !(prop instanceof Array) ) {\n            prop = [prop, 'asc']\n        }\n        if( prop[1].toLowerCase() == 'desc' ) {\n            prop[1] = -1;\n        } else {\n            prop[1] = 1;\n        }\n        return prop;\n    });\n\n    function valueCmp(x, y) {\n        return x &gt; y ? 1 : x &lt; y ? -1 : 0; \n    }\n\n    function arrayCmp(a, b) {\n        var arr1 = [], arr2 = [];\n        properties.forEach(function(prop) {\n            var aValue = a[prop[0]],\n                bValue = b[prop[0]];\n            if( typeof primers[prop[0]] != 'undefined' ) {\n                aValue = primers[prop[0]](aValue);\n                bValue = primers[prop[0]](bValue);\n            }\n            arr1.push( prop[1] * valueCmp(aValue, bValue) );\n            arr2.push( prop[1] * valueCmp(bValue, aValue) );\n        });\n        return arr1 &lt; arr2 ? -1 : 1;\n    }\n\n    objArray.sort(function(a, b) {\n        return arrayCmp(a, b);\n    });\n}\n\n// just for fun use this to reverse the city name when sorting\nfunction demoPrimer(str) {\n    return str.split('').reverse().join('');\n}\n\n// Example\nsortObjects(homes, ['city', ['price', 'desc']], {city: demoPrimer});\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/Nq4dk/2/\">http://jsfiddle.net/Nq4dk/2/</a></p>\n\n<hr>\n\n<p>Edit: Just for fun, <a href=\"http://jsfiddle.net/Nq4dk/3/\">here's a variation</a> that just takes an sql-like string, so you can do <code>sortObjects(homes, \"city, price desc\")</code></p>\n\n<pre><code>function sortObjects(objArray, properties /*, primers*/) {\n    var primers = arguments[2] || {};\n\n    properties = properties.split(/\\s*,\\s*/).map(function(prop) {\n        prop = prop.match(/^([^\\s]+)(\\s*desc)?/i);\n        if( prop[2] &amp;&amp; prop[2].toLowerCase() === 'desc' ) {\n            return [prop[1] , -1];\n        } else {\n            return [prop[1] , 1];\n        }\n    });\n\n    function valueCmp(x, y) {\n        return x &gt; y ? 1 : x &lt; y ? -1 : 0; \n    }\n\n    function arrayCmp(a, b) {\n        var arr1 = [], arr2 = [];\n        properties.forEach(function(prop) {\n            var aValue = a[prop[0]],\n                bValue = b[prop[0]];\n            if( typeof primers[prop[0]] != 'undefined' ) {\n                aValue = primers[prop[0]](aValue);\n                bValue = primers[prop[0]](bValue);\n            }\n            arr1.push( prop[1] * valueCmp(aValue, bValue) );\n            arr2.push( prop[1] * valueCmp(bValue, aValue) );\n        });\n        return arr1 &lt; arr2 ? -1 : 1;\n    }\n\n    objArray.sort(function(a, b) {\n        return arrayCmp(a, b);\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The following function will allow you to sort an array of objects on one or multiple properties, either ascending (default) or descending on each property, and allow you to choose whether or not to perform case sensitive comparisons.  By default, this function performs case insensitive sorts.</p>\n\n<p>The first argument must be the array containing the objects.\nThe subsequent argument(s) must be a comma separated list of strings that reference the different object properties to sort by.  The last argument (which is optional) is a boolean to choose whether or not to perform case sensitive sorts - use <code>true</code> for case sensitive sorts.</p>\n\n<p>The function will sort each property/key in ascending order by default.  If you want a particular key to sort in descending order, then instead pass in an array in this format: <code>['property_name', true]</code>.</p>\n\n<p>Here are some sample uses of the function followed by an explanation (where <code>homes</code> is an array containing the objects):</p>\n\n<p><code>objSort(homes, 'city')</code> --> sort by city (ascending, case in-sensitive)</p>\n\n<p><code>objSort(homes, ['city', true])</code> --> sort by city (descending, case in-sensitive)</p>\n\n<p><code>objSort(homes, 'city', true)</code> --> sort by city then price (ascending, case <em>sensitive</em>)</p>\n\n<p><code>objSort(homes, 'city', 'price')</code> --> sort by city then price (both ascending, case in-sensitive)</p>\n\n<p><code>objSort(homes, 'city', ['price', true])</code> --> sort by city (ascending) then price (descending), case in-sensitive)</p>\n\n<p>And without further ado, here's the function:</p>\n\n<pre><code>function objSort() {\n    var args = arguments,\n        array = args[0],\n        case_sensitive, keys_length, key, desc, a, b, i;\n\n    if (typeof arguments[arguments.length - 1] === 'boolean') {\n        case_sensitive = arguments[arguments.length - 1];\n        keys_length = arguments.length - 1;\n    } else {\n        case_sensitive = false;\n        keys_length = arguments.length;\n    }\n\n    return array.sort(function (obj1, obj2) {\n        for (i = 1; i &lt; keys_length; i++) {\n            key = args[i];\n            if (typeof key !== 'string') {\n                desc = key[1];\n                key = key[0];\n                a = obj1[args[i][0]];\n                b = obj2[args[i][0]];\n            } else {\n                desc = false;\n                a = obj1[args[i]];\n                b = obj2[args[i]];\n            }\n\n            if (case_sensitive === false &amp;&amp; typeof a === 'string') {\n                a = a.toLowerCase();\n                b = b.toLowerCase();\n            }\n\n            if (! desc) {\n                if (a &lt; b) return -1;\n                if (a &gt; b) return 1;\n            } else {\n                if (a &gt; b) return -1;\n                if (a &lt; b) return 1;\n            }\n        }\n        return 0;\n    });\n} //end of objSort() function\n</code></pre>\n\n<p>And here's some sample data:</p>\n\n<p><code>var homes = [\n{\n   \"h_id\": \"3\",\n   \"city\": \"Dallas\",\n   \"state\": \"TX\",\n   \"zip\": \"75201\",\n   \"price\": 162500\n},\n{\n   \"h_id\": \"4\",\n   \"city\": \"Bevery Hills\",\n   \"state\": \"CA\",\n   \"zip\": \"90210\",\n   \"price\": 1000000\n},\n{\n   \"h_id\": \"5\",\n   \"city\": \"new york\",\n   \"state\": \"NY\",\n   \"zip\": \"00010\",\n   \"price\": 1000000\n},\n{\n   \"h_id\": \"6\",\n   \"city\": \"Dallas\",\n   \"state\": \"TX\",\n   \"zip\": \"85000\",\n   \"price\": 300000\n},\n{\n   \"h_id\": \"7\",\n   \"city\": \"New York\",\n   \"state\": \"NY\",\n   \"zip\": \"00020\",\n   \"price\": 345000\n}\n];</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I made a quite generic multi feature sorter today. You can have a look at thenBy.js here: <a href=\"https://github.com/Teun/thenBy.js\">https://github.com/Teun/thenBy.js</a></p>\n\n<p>It allows you to use the standard Array.sort, but with firstBy().thenBy().thenBy() style. It is way less code and complexity than the solutions posted above.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>for a non-generic, simple solution to your exact problem:</p>\n\n<pre><code>homes.sort(\n   function(a,b){\n      if (a.city!=b.city){\n         return (b.price-a.price);\n      } else {\n         return (a.city-b.city);\n      }\n   });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>homes.sort(function(a,b) { return a.city - b.city } );\nhomes.sort(function(a,b){\n    if (a.city==b.city){\n        return parseFloat(b.price) - parseFloat(a.price);\n    } else {\n        return 0;\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is a generic version of @Snowburnt's solution:</p>\n\n<pre><code>var sortarray = [{field:'city', direction:'asc'}, {field:'price', direction:'desc'}];\narray.sort(function(a,b){\n    for(var i=0; i&lt;sortarray.length; i++){\n        retval = a[sortarray[i].field] &lt; b[sortarray[i].field] ? -1 : a[sortarray[i].field] &gt; b[sortarray[i].field] ? 1 : 0;\n        if (sortarray[i].direction == \"desc\") {\n            retval = retval * -1;\n        }\n        if (retval !== 0) {\n            return retval;\n        }\n    }\n}\n\n\n})\n</code></pre>\n\n<p>This is based on a sort routine I'm using.  I didn't test this specific code so it may have errors but you get the idea.  The idea is to sort based on the first field that indicates a difference and then stop and go to the next record.  So, if you're sorting by three fields and the first field in the compare is enough to determine the sort order of the two records being sorted then return that sort result and go to the next record.  </p>\n\n<p>I tested it (actually with a little more complex sort logic) on 5000 records and it did it in the blink of an eye.  If you're actually loading more than 1000 records to the client you should probably be using sever-side sorting and filtering.</p>\n\n<p>This code isn't handling case-sensitivity but I leave it to the reader to handle this trivial modification.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>From this <a href=\"http://stackoverflow.com/q/979256/178383\">original question</a>, how would I apply a sort on multiple fields?</p>\n\n<p>Using this slightly adapted structure, how would I sort city (ascending) &amp; then price (descending)?</p>\n\n<pre><code>var homes = [\n    {\"h_id\":\"3\",\n     \"city\":\"Dallas\",\n     \"state\":\"TX\",\n     \"zip\":\"75201\",\n     \"price\":\"162500\"},\n    {\"h_id\":\"4\",\n     \"city\":\"Bevery Hills\",\n     \"state\":\"CA\",\n     \"zip\":\"90210\",\n     \"price\":\"319250\"},\n    {\"h_id\":\"6\",\n     \"city\":\"Dallas\",\n     \"state\":\"TX\",\n     \"zip\":\"75000\",\n     \"price\":\"556699\"},\n    {\"h_id\":\"5\",\n     \"city\":\"New York\",\n     \"state\":\"NY\",\n     \"zip\":\"00010\",\n     \"price\":\"962500\"}\n    ];\n</code></pre>\n\n<p>I liked the fact than an <a href=\"http://stackoverflow.com/questions/979256/how-to-sort-a-json-array/979325#979325\">answer</a> was given which provided a general approach.  Where I plan to use this code, I will have to sort dates as well as other things.  The ability to \"prime\" the object seemed handy, if not a little cumbersome.</p>\n\n<p>I've tried to build this <a href=\"http://stackoverflow.com/questions/3230028/how-to-order-a-json-object-by-two-keys/3230748#3230748\">answer</a> into a nice generic example, but I'm not having much luck.</p>\n",
            "last_activity_date": 1411491053,
            "question_id": 6913512,
            "score": 13,
            "tags": [
                "javascript",
                "arrays",
                "sorting"
            ],
            "title": "How to sort an array of objects by multiple fields?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I've seen it done in a kind of iffy, but pretty reliable way.  Basically, an element is set to use a specific font and a string is set to that element.  If the font set for the element does not exist, it takes the font of the parent element.  So, what they do is measure the width of the rendered string.  If it matches what they expected for the desired font as opposed to the derived font, it's present.</p>\n\n<p>Here's where it came from:\n<a href=\"http://ajaxian.com/archives/javascriptcss-font-detector\">Javascript/CSS Font Detector (ajaxian.com; 12 Mar 2007)</a></p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>I ran across this:</p>\n\n<p><a href=\"http://www.lalit.org/lab/javascript-css-font-detect\" rel=\"nofollow\">Javascript/CSS Font Detector</a></p>\n\n<p>which lets you detect what fonts are available based on the size of fonts. </p>\n\n<p>From here you can tell what font was loaded onto the page by using the same technique. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>A technique that works is to look at the computed style of the element. This is supported in Opera and Firefox (and I recon in safari, but haven't tested). IE (7 at least), provides a method to get a style, but it seems to be whatever was in the stylesheet, not the computed style. More details on quirksmode: <a href=\"http://www.quirksmode.org/dom/getstyles.html\" rel=\"nofollow\">Get Styles</a></p>\n\n<p>Here's a simple function to grab the font used in an element:</p>\n\n<pre><code>/**\n * Get the font used for a given element\n * @argument {HTMLElement} the element to check font for\n * @returns {string} The name of the used font or null if font could not be detected\n */\nfunction getFontForElement(ele) {\n    if (ele.currentStyle) { // sort of, but not really, works in IE\n        return ele.currentStyle[\"fontFamily\"];\n    } else if (document.defaultView) { // works in Opera and FF\n        return document.defaultView.getComputedStyle(ele,null).getPropertyValue(\"font-family\");\n    } else {\n        return null;\n    }\n}\n</code></pre>\n\n<p>If the CSS rule for this was:</p>\n\n<pre><code>#fonttester {\n    font-family: sans-serif, arial, helvetica;\n}\n</code></pre>\n\n<p>Then it should return helvetica if that is installed, if not, arial, and lastly, the name of the system default sans-serif font. Note that the ordering of fonts in your CSS declaration is significant.</p>\n\n<p>An interesting hack you could also try is to create lots of hidden elements with lots of different fonts to try to detect which fonts are installed on a machine. I'm sure someone could make a nifty font statistics gathering page with this technique.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>@pat Actually, Safari does not give the font used, Safari instead always returns the first font in the stack regardless of whether it is installed, at least in my experience.</p>\n\n<pre><code>    font-family: \"my fake font\", helvetica, san-serif;\n</code></pre>\n\n<p>Assuming Helvetica is the one installed/used, you'll get:</p>\n\n<ul>\n<li>\"my fake font\" in Safari (and I believe other webkit browsers).</li>\n<li>\"my fake font, helvetica, san-serif\" in Gecko browsers and IE. </li>\n<li>\"helvetica\" in Opera 9, though I read that they are changing this in Opera 10 to match\nGecko.</li>\n</ul>\n\n<p>I took a pass at this problem and created Font Unstack, which tests each font in a stack and returns the first installed one only. It uses the trick that @MojoFilter mentions, but only returns the first one if multiple are installed. Though it does suffer from the weakness that @tlrobinson mentions (Windows will substitute Arial for Helvetica silently and report that Helvetica is installed), it otherwise works well.</p>\n\n<p><a href=\"http://github.com/philoye/fontunstack/tree/master\" rel=\"nofollow\">FontUnstack</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I wrote a simple JavaScript tool that you can use it to check if a font is installed or not.<br>\nIt uses simple technique and should be correct most of the time.\n<br></p>\n\n<p><strong><a href=\"https://github.com/derek1906/jFont-Checker/\" rel=\"nofollow\">jFont Checker</a></strong> on github</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>A simplified form is:</p>\n\n<pre><code>function getFont() {\n    return document.getElementById('header').style.font;\n}\n</code></pre>\n\n<p>If you need something more complete, check <a href=\"http://www.lalit.org/lab/javascript-css-font-detect/#comment-43\" rel=\"nofollow\">this</a> out.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is a simple solution</p>\n\n<pre><code>function getUserBrowsersFont() \n{\n    var browserHeader = document.getElementById('header');\n    return browserHeader.style.font;\n}\n</code></pre>\n\n<p>this function will  exactly do what you want. On execution It will return the User/visitor Browsers Font Type. Hope this will help</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Another solution would be to install the font automatically via <code>@font-face</code> which might negate the need for detection.</p>\n\n<pre><code>@font-face { \nfont-family: \"Calibri\"; \nsrc: url(\"http://www.yourwebsite.com/fonts/Calibri.eot\"); \nsrc: local(\"Calibri\"), url(\"http://www.yourwebsite.com/fonts/Calibri.ttf\") format(\"truetype\");\n}\n</code></pre>\n\n<p>Of course it wouldn't solve any copyright issues, however you could always use a freeware font or even make your own font. You will need both <code>.eot</code> &amp; <code>.ttf</code> files to work best.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Calibri is a font owned by Microsoft, and shouldn't be distributed for free. Also, requiring a user to download a specific font isn't very user-friendly. </p>\n\n<p>I would suggest purchasing a license for the font and embedding it into your application.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Suppose I have the following CSS rule in my HTML.</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>body {\n    font-family: Calibri, Trebuchet MS, Helvetica, sans-serif;\n}\n</code></pre>\n\n<p>How can I detect which one of the defined fonts was used in the user's browser?</p>\n\n<p>Edit for people wondering why I want to do this: The font I am detecting contains glyphs not available in other fonts and when the user does not have it I want to display a link asking the user to download that font so they can use my web application.</p>\n\n<p>Currently I am displaying the download font link for all users, now I can only display it for people who do not have the correct font installed.</p>\n",
            "last_activity_date": 1422351281,
            "question_id": 845,
            "score": 58,
            "tags": [
                "javascript",
                "html",
                "css",
                "fonts"
            ],
            "title": "How can I detect which font was used in a web page?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>You can certainly do it with canvas, try out this code as an example:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;Testing min-width and max-width&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n\n    &lt;/style&gt;\n\n  &lt;/head&gt;\n  &lt;body&gt;\n      &lt;canvas id=\"cnv\"&gt;&lt;/canvas&gt;\n      &lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n          cnv = document.getElementById(\"cnv\");\n          cnv.width = 500;\n          cnv.height = 300;\n          ctx = cnv.getContext(\"2d\");\n          ctx.font = \"bold 12px sans-serif\";\n          text = \"abcdefghijklm\"\n          for (i = 0; i &lt; text.length; i++) {\n              ctx.fillText(text[i], 300, 100);\n              ctx.rotate(0.1);\n          }\n      &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>It doesn't do it exactly right, but I'm certain you'll manage to tweak it to your likening ;)</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I was able to run examples from \n<a href=\"http://apike.ca/prog_svg_text.html\" rel=\"nofollow\">http://apike.ca/prog_svg_text.html</a> into Chrome but it does not work in IE.</p>\n\n<p>You can use SVGWeb, <a href=\"http://code.google.com/p/svgweb/\" rel=\"nofollow\">http://code.google.com/p/svgweb/</a></p>\n\n<p>Alternatively, you can write your own image generating utility at server site (in .NET/PHP) like an Http Handler and pass text to it and it would return GIF/PNG by using the graphics library and rendering image on the fly for you.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Or you can do it using some CSS, however I'm sure you won't get it running on IE any time soon. On the other hand the cool thing is that the text is selectable :D</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;Testing min-width and max-width&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n        .num1 {\n            -webkit-transform: translate(0px, 30px) rotate(-35deg); \n        }\n        .num2 {\n            -webkit-transform: translate(0px, 25px) rotate(-25deg); \n        }\n        .num3 {\n            -webkit-transform: translate(0px, 23px) rotate(0deg); \n        }\n        .num4 {\n            -webkit-transform: translate(0px, 25px) rotate(25deg); \n        }\n        .num5 {\n            -webkit-transform: translate(0px, 30px) rotate(35deg); \n        }\n\n       span {display: inline-block; margin: 1px;}\n    &lt;/style&gt;\n\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div style=\"width: 300px; height: 300px; margin: 50px auto\"&gt;\n      &lt;span class=\"num1\"&gt;a&lt;/span&gt;&lt;span class=\"num2\"&gt;b&lt;/span&gt;&lt;span class=\"num3\"&gt;c&lt;/span&gt;&lt;span class=\"num4\"&gt;d&lt;/span&gt;&lt;span class=\"num5\"&gt;e&lt;/span&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>SVG supports text-on-a-path directly, though it does not 'bend' the individual glyphs along the path. Here's <a href=\"http://www.kevlindev.com/tutorials/basics/text/svg/index.htm\">an example</a> of how you create it:</p>\n\n<pre><code>...\n&lt;defs&gt;\n  &lt;path id=\"textPath\" d=\"M10 50 C10 0 90 0 90 50\"/&gt;\n&lt;/defs&gt;\n&lt;text fill=\"red\"&gt;\n  &lt;textPath xlink:href=\"#textPath\"&gt;Text on a Path&lt;/textPath&gt;\n&lt;/text&gt;\n...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I realize this is over a year late, but here is my solution</p>\n\n<p><a href=\"http://jsfiddle.net/pukster/EazNL/2/\" rel=\"nofollow\">JS Fiddle snippet</a></p>\n\n<p>it wraps the text around but I can't figure out how to flip the letters vertically along the bottom because I really really really hate the canvas transformations and I can't wrap my head around how to do two rotations on text (flip once along the y axis and once again about the center of an imaginary circle).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;embed width=\"100\" height=\"100\" type=\"image/svg+xml\" src=\"path.svg\"&gt;\n  &lt;svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt;\n    &lt;defs&gt;\n      &lt;path id=\"textPath\" d=\"M10 50 C10 0 90 0 90 50\"/&gt;\n    &lt;/defs&gt;\n  &lt;/svg&gt;\n&lt;/embed&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This <a href=\"http://www.html5canvastutorials.com/labs/html5-canvas-text-along-arc-path/\" rel=\"nofollow\" title=\"tutorial\">tutorial</a> shows you exactly how to do it using HTML5 and canvas.  One of the other replies, above, had a similar idea, to use the canvas.rotate method.  This one also uses canvas.translate.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a jQuery Plugin to curve text using CSS3 called <a href=\"http://tympanus.net/codrops/2012/01/24/arctext-js-curving-text-with-css3-and-jquery/\" rel=\"nofollow\">arctext.js</a>.  It's pretty good and has a range of configuration options.  I guess it won't work on IE8 but I guess most CSS3 thing don't!</p>\n\n<p>There's also a demo page with some example of it in action <a href=\"http://tympanus.net/Development/Arctext/\" rel=\"nofollow\">here</a>. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can try this jQuery plugin <a href=\"http://codecanyon.net/item/jquery-text-arch/3669779\" rel=\"nofollow\">http://codecanyon.net/item/jquery-text-arch/3669779</a><br/>\nIt has a lot of options for customizing text arches and text circles.<br/>\nWorks in all major browsers and OS's</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's not a pure CSS solution but CircleText.js works great for arced text.</p>\n\n<p><a href=\"http://circletype.labwire.ca/\">http://circletype.labwire.ca/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I used the tutorial mentioned above (by Simon Tewsi) to write a better solution, regarding the kerning issue. Uses no library, pure JS.</p>\n\n<p>See it at <a href=\"http://jsfiddle.net/fidnut/cjccg74f/\" rel=\"nofollow\">http://jsfiddle.net/fidnut/cjccg74f/</a></p>\n\n<pre><code>function drawTextAlongArcInside(ctx, str, font, color, radius, angle, centerX, centerY, wspace)\n</code></pre>\n\n<p>Note: SO is demanding that I put all the code from JSFiddle in here too. I don't think this is wise, too much code, so I am adding only the name of the function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to curve text this effect using CSS3, HTML Canvas, or even SVG (see image below for example)? Is this possible? If so, how can I achieve this effect?</p>\n\n<p><strong>Update:</strong> To clarify: The text that will be styled this way will be dynamic.</p>\n\n<p><img src=\"http://img685.yfrog.com/img685/6952/nvv.png\" alt=\"Curved Text Example\"></p>\n",
            "last_activity_date": 1422237254,
            "question_id": 2840862,
            "score": 40,
            "tags": [
                "javascript",
                "html",
                "css",
                "canvas",
                "css3"
            ],
            "title": "Is there a way to curve / arc text using CSS3 / Canvas"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><code>HttpUtility.HtmlEncode</code> / Decode<br>\n<code>HttpUtility.UrlEncode</code> / Decode</p>\n\n<p>You can add a reference to the <code>System.Web</code> assembly if it's not available in your project</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>You can use the Server object in the System.Web namespace</p>\n\n<p>Server.UrlEncode, Server.UrlDecode, Server.HtmlEncode, and Server.HtmlDecode.</p>\n\n<p>Edit: poster added that this was a windows application and not a web one as one would believe.  The items listed above would be available from the HttpUtility class inside System.Web which must be added as a reference to the project.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Try <code>Server.UrlEncode()</code>, or <code>System.Web.HttpUtility.UrlEncode()</code> for instances when you don't have access to the <code>Server</code> object. You can also use <code>System.Uri.EscapeUriString()</code> to avoid adding a reference to the <code>System.Web</code> assembly.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>System.Uri.EscapeUriString() didn't seem to do anything, but System.Uri.Escape**Data**String() worked for me.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Technically, and often in practice, the up-voted answer is not correct. </p>\n\n<p><code>Uri.EscapeUriString</code> or <code>HttpUtility.UrlPathEncode</code> is the correct way to escape a string meant to be part of a URL.</p>\n\n<p>Take for example the string <code>\"Stack Overflow\"</code>:</p>\n\n<ul>\n<li><p><code>HttpUtility.UrlEncode(\"Stack Overflow\")</code> --> <code>\"Stack+Overflow\"</code></p></li>\n<li><p><code>Uri.EscapeUriString(\"Stack Overflow\")</code> --> <code>\"Stack%20Overflow\"</code></p></li>\n<li><p><code>Uri.EscapeDataString(\"Stack +  Overflow\")</code> --> Also encodes <code>\"+\" to \"%2b\"</code> ----><code>Stack%20%2B%20%20Overflow</code></p></li>\n</ul>\n\n<p>Only the latter is correct when used as an actual part of the URL (as opposed to the value of one of the query string parameters)</p>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>I tried to do full compatible analog of javascript's encodeURIComponent for c# and after my 4 hour experiments I found this</p>\n\n<p>c# CODE:</p>\n\n<pre><code>string a = \"!@#$%^&amp;*()_+ some text here \u0430\u043b\u0438 \u043c\u0430\u043c\u0435\u0434\u043e\u0432 \u0431\u0430\u043a\u0443\";\na = System.Web.HttpUtility.UrlEncode(a);\na = a.Replace(\"+\", \"%20\");\n</code></pre>\n\n<p>the result is:\n<strong>!%40%23%24%25%5e%26*()_%2b%20some%20text%20here%20%d0%b0%d0%bb%d0%b8%20%d0%bc%d0%b0%d0%bc%d0%b5%d0%b4%d0%be%d0%b2%20%d0%b1%d0%b0%d0%ba%d1%83</strong></p>\n\n<p>After you decode It with Javascript's decodeURLComponent();</p>\n\n<p>you will get this: \n<strong>!@#$%^&amp;*()_+ some text here \u0430\u043b\u0438 \u043c\u0430\u043c\u0435\u0434\u043e\u0432 \u0431\u0430\u043a\u0443</strong></p>\n\n<p>Thank You for attention</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>For a Windows Store App, you won't have HttpUtility. Instead, you have:</p>\n\n<p>For an URI, before the '?':</p>\n\n<ul>\n<li>System.<strong>Uri.EscapeUriString</strong>(\"example.com/Stack Overflow++?\")\n<ul>\n<li>-> \"example.com/Stack%20Overflow++?\"</li>\n</ul></li>\n</ul>\n\n<p>For an URI query name or value, after the '?':</p>\n\n<ul>\n<li>System.<strong>Uri.EscapeDataString</strong>(\"Stack Overflow++\")\n<ul>\n<li>-> \"Stack%20Overflow%2B%2B\"</li>\n</ul></li>\n</ul>\n\n<p>For a <a href=\"http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\" rel=\"nofollow\">x-www-form-urlencoded</a> query name or value, in a POST content:</p>\n\n<ul>\n<li>System.Net.<strong>WebUtility.UrlEncode</strong>(\"Stack Overflow++\")\n<ul>\n<li>-> \"Stack+Overflow%2B%2B\"</li>\n</ul></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In JavaScript:</p>\n\n<pre><code>encodeURIComponent(\"\u00a9\u221a\") == \"%C2%A9%E2%88%9A\"\n</code></pre>\n\n<p>Is there an equivalent for C# applications? For escaping HTML characters I used:</p>\n\n<pre><code>txtOut.Text = Regex.Replace(txtIn.Text, @\"[\\u0080-\\uFFFF]\",\n    m =&gt; @\"&amp;#\" + ((int)m.Value[0]).ToString() + \";\");\n</code></pre>\n\n<p>But I'm not sure how to convert the match to the correct hexadecimal format that JS uses. For example this code:</p>\n\n<pre><code>txtOut.Text = Regex.Replace(txtIn.Text, @\"[\\u0080-\\uFFFF]\",\n\tm =&gt; @\"%\" + String.Format(\"{0:x}\", ((int)m.Value[0])));\n</code></pre>\n\n<p>Returns \"<code>%a9%221a\"</code> for <code>\"\u00a9\u221a\"</code> instead of <code>\"%C2%A9%E2%88%9A\"</code>. It looks like I need to split the string up into bytes or something.</p>\n\n<p>Edit: This is for a windows app, the only items available in <code>System.Web</code> are: <code>AspNetHostingPermission</code>, <code>AspNetHostingPermissionAttribute</code>, and <code>AspNetHostingPermissionLevel</code>.</p>\n",
            "last_activity_date": 1395755953,
            "question_id": 86477,
            "score": 37,
            "tags": [
                "c#",
                "javascript",
                ".net",
                "windows",
                "encoding"
            ],
            "title": "Does C# have an equivalent to JavaScript&#39;s encodeURIComponent()?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>var time = new Date().getTime();\nvar date = new Date(time);\nalert(date.toString()); // Wed Jan 12 2011 12:42:46 GMT-0800 (PST)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 72
                },
                {
                    "body": "<p>Sample Code...<br /><br /></p>\n\n<pre><code>\n...\nvar time = new Date();\nvar time = time.getTime();\n...\n\nvar theyear=time.getFullYear()\nvar themonth=time.getMonth()+1\nvar thetoday=time.getDate()\n\ndocument.write(\"The date is: \")\ndocument.write(theyear+\"/\"+themonth+\"/\"+thetoday)\n\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Unless you absolutely need to use getTime(), I suggest using any of the other JavaScript Date methods.  </p>\n\n<pre><code>var myTime = new Date();\nalert(myTime);\n</code></pre>\n\n<p>This should output a formatted timestamp.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you want custom formatting for your date I offer <a href=\"http://phrogz.net/JS/FormatDateTime_JS.txt\">a simple function</a> for it:</p>\n\n<pre><code>var now = new Date;\nconsole.log( now.customFormat( \"#DD#/#MM#/#YYYY# #hh#:#mm#:#ss#\" ) );\n</code></pre>\n\n<p>Here are the tokens supported:</p>\n\n<pre><code>token:     description:             example:\n#YYYY#     4-digit year             1999\n#YY#       2-digit year             99\n#MMMM#     full month name          February\n#MMM#      3-letter month name      Feb\n#MM#       2-digit month number     02\n#M#        month number             2\n#DDDD#     full weekday name        Wednesday\n#DDD#      3-letter weekday name    Wed\n#DD#       2-digit day number       09\n#D#        day number               9\n#th#       day ordinal suffix       nd\n#hhh#      military/24-based hour   17\n#hh#       2-digit hour             05\n#h#        hour                     5\n#mm#       2-digit minute           07\n#m#        minute                   7\n#ss#       2-digit second           09\n#s#        second                   9\n#ampm#     \"am\" or \"pm\"             pm\n#AMPM#     \"AM\" or \"PM\"             PM\n</code></pre>\n\n<p>And here's the code:</p>\n\n<pre><code>Date.prototype.customFormat = function(formatString){\n    var YYYY,YY,MMMM,MMM,MM,M,DDDD,DDD,DD,D,hhh,hh,h,mm,m,ss,s,ampm,AMPM,dMod,th;\n    var dateObject = this;\n    YY = ((YYYY=dateObject.getFullYear())+\"\").slice(-2);\n    MM = (M=dateObject.getMonth()+1)&lt;10?('0'+M):M;\n    MMM = (MMMM=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"][M-1]).substring(0,3);\n    DD = (D=dateObject.getDate())&lt;10?('0'+D):D;\n    DDD = (DDDD=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"][dateObject.getDay()]).substring(0,3);\n    th=(D&gt;=10&amp;&amp;D&lt;=20)?'th':((dMod=D%10)==1)?'st':(dMod==2)?'nd':(dMod==3)?'rd':'th';\n    formatString = formatString.replace(\"#YYYY#\",YYYY).replace(\"#YY#\",YY).replace(\"#MMMM#\",MMMM).replace(\"#MMM#\",MMM).replace(\"#MM#\",MM).replace(\"#M#\",M).replace(\"#DDDD#\",DDDD).replace(\"#DDD#\",DDD).replace(\"#DD#\",DD).replace(\"#D#\",D).replace(\"#th#\",th);\n\n    h=(hhh=dateObject.getHours());\n    if (h==0) h=24;\n    if (h&gt;12) h-=12;\n    hh = h&lt;10?('0'+h):h;\n    AMPM=(ampm=hhh&lt;12?'am':'pm').toUpperCase();\n    mm=(m=dateObject.getMinutes())&lt;10?('0'+m):m;\n    ss=(s=dateObject.getSeconds())&lt;10?('0'+s):s;\n    return formatString.replace(\"#hhh#\",hhh).replace(\"#hh#\",hh).replace(\"#h#\",h).replace(\"#mm#\",mm).replace(\"#m#\",m).replace(\"#ss#\",ss).replace(\"#s#\",s).replace(\"#ampm#\",ampm).replace(\"#AMPM#\",AMPM);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 67
                },
                {
                    "body": "<p>Try this one :</p>\n\n<p><code>var time = new Date().toJSON();</code></p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm a bit of a rambler, but I'll try to keep this clear - </p>\n\n<p>I'm bored, so I'm working on a \"shoutbox\", and I'm a little confused over one thing. I want to get the time that a message is entered, and I want to make sure I'm getting the server time, or at least make sure I'm not getting the local time of the user. I know it doesn't matter, since this thing won't be used by anyone besides me, but I want to be thorough. I've looked around and tested a few things, and I think the only way to do this is to get the milliseconds since ?/?/1970 or whatever it is, since that'd be the same for everyone.</p>\n\n<p>I'm doing that like so:</p>\n\n<pre><code>var time = new Date();\nvar time = time.getTime();\n</code></pre>\n\n<p>That returns a number like <code>1294862756114</code>.</p>\n\n<p>Is there a way to convert <code>1294862756114</code> to a more readable date, like <code>DD/MM/YYYY HH:MM:SS</code>? </p>\n\n<p>So, basically, I'm looking for JavaScripts equivelant of PHP's <code>date();</code> function.</p>\n",
            "last_activity_date": 1389603317,
            "question_id": 4673527,
            "score": 36,
            "tags": [
                "javascript",
                "jquery",
                "datetime"
            ],
            "title": "Converting milliseconds to a date (jQuery/JS)"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<h2>JavaScript</h2>\n\n<p>In JavaScript you simple test for the <a href=\"http://www.w3schools.com/jsref/prop_nav_cookieenabled.asp\">cookieEnabled</a> property, which is supported in all major browsers. If you deal with an older browser, you can set a cookie and check if it exists. (borrowed from <a href=\"http://modernizr.com/\">Modernizer</a>):</p>\n\n<pre><code>if (navigator.cookieEnabled) return true;\n\n// set and read cookie\ndocument.cookie = \"cookietest=1\";\nvar ret = document.cookie.indexOf(\"cookietest=\") != -1;\n\n// delete cookie\ndocument.cookie = \"cookietest=1; expires=Thu, 01-Jan-1970 00:00:01 GMT\";\n\nreturn ret;\n</code></pre>\n\n<ul>\n<li><a href=\"https://github.com/Modernizr/Modernizr/commit/33f00fbbeb12e92bf24711ea386e722cce6f60cc\">Modernizer cookie check commit</a></li>\n<li><a href=\"http://www.sveinbjorn.org/cookiecheck\">Checking if Cookies are Enabled</a></li>\n</ul>\n\n<h2>PHP</h2>\n\n<p>In PHP it is rather \"complicated\" since you have to refresh the page or redirect to another script. Here I will use two scripts:</p>\n\n<p><em>somescript.php</em></p>\n\n<pre><code>&lt;?php\nsession_start();\nsetcookie('foo', 'bar', time()+3600);\nheader(\"location: check.php\");\n</code></pre>\n\n<p><em>check.php</em></p>\n\n<pre><code>&lt;?php echo (isset($_COOKIE['foo']) &amp;&amp; $_COOKIE['foo']=='bar') ? 'enabled' : 'disabled';\n</code></pre>\n\n<ul>\n<li><a href=\"http://nik.chankov.net/2010/01/16/detecting-if-the-cookies-are-enabled-with-php/\">Detecting if the cookies are enabled with PHP</a></li>\n<li><a href=\"http://www.developertutorials.com/tutorials/php/articlename-050526-1149/\">PHP and Cookies, A Good Mix!</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>To check if cookies are enabled you need use javascript.</p>\n\n<p>Example how to do that you can find here: <a href=\"http://www.javascriptkit.com/javatutors/cookiedetect.shtml\" rel=\"nofollow\">Detect cookies</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p><strong>JavaScript</strong></p>\n\n<p>You could create a cookie using JavaScript and check if it exists:</p>\n\n<pre><code>//Set a Cookie`\ndocument.cookie=\"testcookie\"`\n\n//Check if cookie exists`\ncookiesEnabled=(document.cookie.indexOf(\"testcookie\")!=-1)? true : false`\n</code></pre>\n\n<p>Or you could use a <a href=\"http://www.webmuse.co.uk/projects/jcookie-jquery-plugin/\" rel=\"nofollow\">jQuery Cookie plugin</a></p>\n\n<pre><code>//Set a Cookie`\n$.cookie(\"testcookie\", \"testvalue\")\n\n//Check if cookie exists`\ncookiesEnabled=( $.cookie(\"testcookie\") ) ? true : false`\n</code></pre>\n\n<p><strong>Php</strong></p>\n\n<pre><code>setcookie(\"testcookie\", \"testvalue\");\n\nif( isset( $_COOKIE['testcookie'] ) ) {\n\n}\n</code></pre>\n\n<p>Not sure if the Php will work as I'm unable to test it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>it is easy to detect whether the cookies is enabled:</p>\n\n<ol>\n<li>set a cookie.</li>\n<li>get the cookie</li>\n</ol>\n\n<p>if you can get the cookie you set, the <code>cookie</code> is enabled, otherwise not.</p>\n\n<p>BTW: it is a bad idea to <code>Embedding the session id in the links and forms</code>, it is bad for SEO.\nIn my opinion, it is <strong>not very common</strong> that people dont want to enable cookies.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>But to check whether cookies are enabled using isset($_COOKIE[\"cookie\"]) you have to refresh.\nIm doing it ths way (with sessions based on cookies :)</p>\n\n<pre><code>session_start();\n$a = session_id();\nsession_destroy();\n\nsession_start();\n$b = session_id();\nsession_destroy();\n\nif ($a == $b)\n    echo\"Cookies ON\";\nelse\n    echo\"Cookies OFF\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You cannot in the same page's loading set and check if cookies is set you must perform reload page: </p>\n\n<ul>\n<li>PHP run at Server;</li>\n<li>cookies at client.</li>\n<li>cookies sent to server only during loading of a page.</li>\n<li>Just created cookies have not been sent to server yet and will be sent only at next load of the page.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>Answer on an old question, this new post is posted on April the 4th 2013</strong></p>\n\n<p>To complete the answer of @misza, here a advanced method to check if cookies are enabled without page reloading. The problem with @misza is that it not always work when the php ini setting <code>session.use_cookies</code> is not true. Also the solution does not check if a session is already started.</p>\n\n<p>I made this function and test it many times with in different situations and does the job very well.</p>\n\n<pre><code>    function suGetClientCookiesEnabled() // Test if browser has cookies enabled\n    {\n      // Avoid overhead, if already tested, return it\n      if( defined( 'SU_CLIENT_COOKIES_ENABLED' ))\n       { return SU_CLIENT_COOKIES_ENABLED; }\n\n      $bIni = ini_get( 'session.use_cookies' ); \n      ini_set( 'session.use_cookies', 1 ); \n\n      $a = session_id();\n      $bWasStarted = ( is_string( $a ) &amp;&amp; strlen( $a ));\n      if( !$bWasStarted )\n      {\n        @session_start();\n        $a = session_id();\n      }\n\n   // Make a copy of current session data\n  $aSesDat = (isset( $_SESSION ))?$_SESSION:array();\n   // Now we destroy the session and we lost the data but not the session id \n   // when cookies are enabled. We restore the data later. \n  @session_destroy(); \n   // Restart it\n  @session_start();\n\n   // Restore copy\n  $_SESSION = $aSesDat;\n\n   // If no cookies are enabled, the session differs from first session start\n  $b = session_id();\n  if( !$bWasStarted )\n   { // If not was started, write data to the session container to avoid data loss\n     @session_write_close(); \n   }\n\n   // When no cookies are enabled, $a and $b are not the same\n  $b = ($a === $b);\n  define( 'SU_CLIENT_COOKIES_ENABLED', $b );\n\n  if( !$bIni )\n   { @ini_set( 'session.use_cookies', 0 ); }\n\n  //echo $b?'1':'0';\n  return $b;\n    }\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>if( suGetClientCookiesEnabled())\n { echo 'Cookies are enabled!'; }\nelse { echo 'Cookies are NOT enabled!'; }\n</code></pre>\n\n<p><strong>Important note:</strong>\nThe function temporarily modify the ini setting of PHP when it not has the correct setting and restore it when it was not enabled. This is only to test if cookies are enabled. It can get go wrong when you start a session and the php ini setting session.use_cookies has an incorrect value. To be sure that the session is working correctly, check and/or set it before start a session, for example:</p>\n\n<pre><code>   if( suGetClientCookiesEnabled())\n     { \n       echo 'Cookies are enabled!'; \n       ini_set( 'session.use_cookies', 1 ); \n       echo 'Starting session';\n       @start_session(); \n\n     }\n    else { echo 'Cookies are NOT enabled!'; }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>@misza your solution will only work if you already have the cookie on your browser, otherwise with a fresh visit <code>$a</code> will not be <code>$b</code> .. I think.. In any case, what is the problem with \"refresh\" or redirection ?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A transparent, clean and simple approach, checking cookies availability with <strong>PHP</strong> and taking advantage of <strong>AJAX</strong> transparent redirection, hence <strong>not triggering a page reload</strong>. It doesn't require sessions either.</p>\n\n<p><strong>Client-side code (JavaScript)</strong></p>\n\n<pre><code>function showCookiesMessage(cookiesEnabled) {\n    if (cookiesEnabled == 'true')\n        alert('Cookies enabled');\n    else\n        alert('Cookies disabled');\n}\n\n$(document).ready(function() {\n    var jqxhr = $.get('/cookiesEnabled.php');\n    jqxhr.done(showCookiesMessage);\n});\n</code></pre>\n\n<p><em>(JQuery AJAX call can be replaced with pure JavaScript AJAX call)</em></p>\n\n<p><strong>Server-side code (PHP)</strong></p>\n\n<pre><code>if (isset($_COOKIE['cookieCheck'])) {\n    echo 'true';\n} else {\n    if (isset($_GET['reload'])) {\n        echo 'false';\n    } else {\n        setcookie('cookieCheck', '1', time() + 60);\n        header('Location: ' . $_SERVER['PHP_SELF'] . '?reload');\n        exit();\n    }\n}\n</code></pre>\n\n<p>First time the script is called, the cookie is set and the script tells the browser to redirect to itself. The browser does it transparently. <em>No page reload takes place because it's done within an AJAX call scope</em>.</p>\n\n<p>The second time, when called by redirection, if the cookie is received, the script responds an HTTP 200 (with string \"true\"), hence the <code>showCookiesMessage</code> function is called.</p>\n\n<p>If the script is called for the second time (identified by the \"reload\" parameter) and the cookie is not received, it responds an HTTP 200 with string \"false\" -and the <code>showCookiesMessage</code> function gets called.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am working on a page that requires javascript and sessions. I already have code to warn the user if javascript is disabled. Now, I want to handle the case where cookies are disabled, as the session id is stored in cookies.</p>\n\n<p>I have thought of just a couple ideas:</p>\n\n<ol>\n<li>Embedding the session id in the links and forms</li>\n<li>Warn the user they must enable cookies if they are disabled (would need help detecting if cookies are disabled)</li>\n</ol>\n\n<p>What is the best way to approach this? Thanks</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>Based on the articles linked, I came up with my own approach and thought I would share, somebody else might be able to use it, maybe I will get a few critiques. (Assumes your PHP session stores in a cookie named <code>PHPSESSID</code>)</p>\n\n<pre><code>&lt;div id=\"form\" style=\"display:none\"&gt;Content goes here&lt;/div&gt;\n&lt;noscript&gt;Sorry, but Javascript is required&lt;/noscript&gt;\n&lt;script type=\"text/javascript\"&gt;&lt;!--\nif(document.cookie.indexOf('PHPSESSID')!=-1)\n   document.getElementById('form').style.display='';\nelse\n   document.write('&lt;p&gt;Sorry, but cookies must be enabled&lt;/p&gt;');\n--&gt;&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1405334326,
            "question_id": 6663859,
            "score": 35,
            "tags": [
                "php",
                "javascript",
                "session-cookies"
            ],
            "title": "Check if cookies are enabled"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You are looking for the <code>.elementFromPoint()</code> JavaScript/DOM method.</p>\n\n<pre><code>var elem = document.elementFromPoint(100, 100) // x, y\n</code></pre>\n\n<p>That returns a <code>DOM node</code>, which of course then can be wrapped into a jQuery object:</p>\n\n<pre><code>$(elem).remove(); // for instance\n</code></pre>\n\n<p>I'm not that aware about the cross-browser compatibility and I would like some guys who know better to edit this post or write a comment about it.</p>\n\n<p>Reference: <a href=\"https://developer.mozilla.org/En/DOM%3adocument.elementFromPoint\">.elementFromPoint()</a></p>\n\n<p>Example Link: <a href=\"http://www.jsfiddle.net/YjC6y/22/\">http://www.jsfiddle.net/YjC6y/22/</a></p>\n",
                    "is_accepted": true,
                    "score": 53
                },
                {
                    "body": "<p>Provided you know the exact coordinates relative to the document:</p>\n\n<pre><code>function getElsAt(top, left){\n    return $(\"body\")\n               .find(\"*\")\n               .filter(function() {\n                           return $(this).offset().top == top \n                                    &amp;&amp; $(this).offset().left == left;\n               });\n}\n</code></pre>\n\n<p>The other answer stops at the first overlay.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Is there a method in jQuery to select an element located at a particular position?</p>\n\n<p>For example, can I select the element that is located at left:100 and top:300 in absolute position?</p>\n\n<p>It would be nice if I could select an element located in a range of positions, for example, select the element that is located left: 100 - 150 px top 200 - 280px.</p>\n",
            "last_activity_date": 1400345632,
            "question_id": 3942776,
            "score": 32,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Using jQuery to find an element at a particular position?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>It's true that javascript can't do anything at all with byte arrays.  It's not a supported data type and there's no built-in conversion.  ADODB.Stream works fine for me on several \"out of the box\" machines, I use it with XHR for downloading files using a Windows Desktop Gadget.  I can't say that I've mass-tested it, though.</p>\n\n<p>There's a more cross-browser solution available from <a href=\"http://www.codeproject.com/KB/scripting/Javascript%5Fbinaryenc.aspx\" rel=\"nofollow\">CodeProject</a> which requires the server to send the data as a base64 string.  I haven't tested it, but no \"native\" solution is likely to give great performance - it's just not what javascript was intended for.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes, the answer I came up with for reading binary data via XHR in IE, is to use VBScript injection. This was distasteful to me at first, but, I look at it as just one more browser dependent bit of code. \n(The regular XHR and responseText works fine in other browsers; you may have to coerce the mime type with <a href=\"https://developer.mozilla.org/en/XMLHttpRequest\"><code>XMLHttpRequest.overrideMimeType()</code></a>. This isn't available on IE). </p>\n\n<p>This is how I got a thing that works like <code>responseText</code> in IE, even for binary data.\nFirst, inject some VBScript as a one-time thing, like this: </p>\n\n<pre><code>if(/msie/i.test(navigator.userAgent) &amp;&amp; !/opera/i.test(navigator.userAgent)) {\n    var IEBinaryToArray_ByteStr_Script =\n    \"&lt;!-- IEBinaryToArray_ByteStr --&gt;\\r\\n\"+\n    \"&lt;script type='text/vbscript'&gt;\\r\\n\"+\n    \"Function IEBinaryToArray_ByteStr(Binary)\\r\\n\"+\n    \"   IEBinaryToArray_ByteStr = CStr(Binary)\\r\\n\"+\n    \"End Function\\r\\n\"+\n    \"Function IEBinaryToArray_ByteStr_Last(Binary)\\r\\n\"+\n    \"   Dim lastIndex\\r\\n\"+\n    \"   lastIndex = LenB(Binary)\\r\\n\"+\n    \"   if lastIndex mod 2 Then\\r\\n\"+\n    \"       IEBinaryToArray_ByteStr_Last = Chr( AscB( MidB( Binary, lastIndex, 1 ) ) )\\r\\n\"+\n    \"   Else\\r\\n\"+\n    \"       IEBinaryToArray_ByteStr_Last = \"+'\"\"'+\"\\r\\n\"+\n    \"   End If\\r\\n\"+\n    \"End Function\\r\\n\"+\n    \"&lt;/script&gt;\\r\\n\";\n\n    // inject VBScript\n    document.write(IEBinaryToArray_ByteStr_Script);\n}\n</code></pre>\n\n<p>The JS class I'm using that reads binary files exposes a single interesting method, <code>readCharAt(i)</code>, which reads the character (a byte, really) at the i'th index.  This is how I set it up: </p>\n\n<pre><code>// see doc on http://msdn.microsoft.com/en-us/library/ms535874(VS.85).aspx\nfunction getXMLHttpRequest() \n{\n    if (window.XMLHttpRequest) {\n        return new window.XMLHttpRequest;\n    }\n    else {\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP\"); \n        }\n        catch(ex) {\n            return null;\n        }\n    }\n}\n\n// this fn is invoked if IE\nfunction IeBinFileReaderImpl(fileURL){\n    this.req = getXMLHttpRequest();\n    this.req.open(\"GET\", fileURL, true);\n    this.req.setRequestHeader(\"Accept-Charset\", \"x-user-defined\");\n    // my helper to convert from responseBody to a \"responseText\" like thing\n    var convertResponseBodyToText = function (binary) {\n        var byteMapping = {};\n        for ( var i = 0; i &lt; 256; i++ ) {\n            for ( var j = 0; j &lt; 256; j++ ) {\n                byteMapping[ String.fromCharCode( i + j * 256 ) ] =\n                    String.fromCharCode(i) + String.fromCharCode(j);\n            }\n        }\n        // call into VBScript utility fns\n        var rawBytes = IEBinaryToArray_ByteStr(binary);\n        var lastChr = IEBinaryToArray_ByteStr_Last(binary);\n        return rawBytes.replace(/[\\s\\S]/g,\n                                function( match ) { return byteMapping[match]; }) + lastChr;\n    };\n\n    this.req.onreadystatechange = function(event){\n        if (that.req.readyState == 4) {\n            that.status = \"Status: \" + that.req.status;\n            //that.httpStatus = that.req.status;\n            if (that.req.status == 200) {\n                // this doesn't work\n                //fileContents = that.req.responseBody.toArray(); \n\n                // this doesn't work\n                //fileContents = new VBArray(that.req.responseBody).toArray(); \n\n                // this works...\n                var fileContents = convertResponseBodyToText(that.req.responseBody);\n\n                fileSize = fileContents.length-1;\n                if(that.fileSize &lt; 0) throwException(_exception.FileLoadFailed);\n                that.readByteAt = function(i){\n                    return fileContents.charCodeAt(i) &amp; 0xff;\n                };\n            }\n            if (typeof callback == \"function\"){ callback(that);}\n        }\n    };\n    this.req.send();\n}\n\n// this fn is invoked if non IE\nfunction NormalBinFileReaderImpl(fileURL){\n    this.req = new XMLHttpRequest();\n    this.req.open('GET', fileURL, true);\n    this.req.onreadystatechange = function(aEvt) {\n        if (that.req.readyState == 4) {\n            if(that.req.status == 200){\n                var fileContents = that.req.responseText;\n                fileSize = fileContents.length;\n\n                that.readByteAt = function(i){\n                    return fileContents.charCodeAt(i) &amp; 0xff;\n                }\n                if (typeof callback == \"function\"){ callback(that);}\n            }\n            else\n                throwException(_exception.FileLoadFailed);\n        }\n    };\n    //XHR binary charset opt by Marcus Granado 2006 [http://mgran.blogspot.com] \n    this.req.overrideMimeType('text/plain; charset=x-user-defined');\n    this.req.send(null);\n}\n</code></pre>\n\n<p>The conversion code was <a href=\"http://miskun.com/javascript/internet-explorer-and-binary-files-data-access/#comment-11\">provided by Miskun</a></p>\n\n<p>Very fast, works great.</p>\n\n<p>I used this method to read and extract zip files from Javascript, and also in a class that reads and displays EPUB files in Javascript. Very reasonable performance.  About half a second for a 500kb file. </p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Thanks so much for this solution. the BinaryToArray() function in VbScript works great for me.</p>\n\n<p>Incidentally, I need the binary data for providing it to an Applet. (Don't ask me why Applets can't be used for downloading binary data. Long story short.. weird MS authentication that cant go thru applets (URLConn) calls. Its especially weird in cases where users are behind a proxy )</p>\n\n<p>The Applet needs a byte array from this  data, so here's what I do to get it:</p>\n\n<pre><code> String[] results = result.toString().split(\",\");\n    byte[] byteResults = new byte[results.length];\n    for (int i=0; i&lt;results.length; i++){\n        byteResults[i] = (byte)Integer.parseInt(results[i]);\n    }\n</code></pre>\n\n<p>The byte array can then converted into a bytearrayinputstream for further processing.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would suggest two other (fast) options:</p>\n\n<ol>\n<li><p>First, you can use\n<strong>ADODB.Recordset</strong> to convert the byte array into a string. I would guess that this object is more common that ADODB.Stream, which is often disabled for security reasons. This option is VERY fast, less than <em>30ms</em> for a 500kB file.</p></li>\n<li><p>Second, if the Recordset component is not accessible, there is a <strong>trick to access the byte array data from Javascript</strong>. Send your xhr.responseBody to VBScript, pass it through any VBScript string function such as CStr (takes no time), and return it to JS. You will get a weird string with bytes concatenated into 16-bit unicode (in reverse). You can then convert this string quickly into a usable bytestring through a <strong>regular expression</strong> with dictionary-based replacement. Takes about <em>1s</em> for 500kB.</p></li>\n</ol>\n\n<p>For comparison, the byte-by-byte conversion through loops takes <em>several minutes</em> for this same 500kB file, so it's a no-brainer :) Below the code I have been using, to insert into your header. Then call the function <em>ieGetBytes</em> with your xhr.responseBody.</p>\n\n<pre><code>&lt;!--[if IE]&gt;    \n&lt;script type=\"text/vbscript\"&gt;\n\n    'Best case scenario when the ADODB.Recordset object exists\n    'We will do the existence test in Javascript (see after)\n    'Extremely fast, about 25ms for a 500kB file\n    Function ieGetBytesADO(byteArray)\n        Dim recordset\n        Set recordset = CreateObject(\"ADODB.Recordset\")\n        With recordset\n            .Fields.Append \"temp\", 201, LenB(byteArray)\n            .Open\n            .AddNew\n            .Fields(\"temp\").AppendChunk byteArray\n            .Update\n        End With\n        ieGetBytesADO = recordset(\"temp\")\n        recordset.Close\n        Set recordset = Nothing\n    End Function\n\n    'Trick to return a Javascript-readable string from a VBScript byte array\n    'Yet the string is not usable as such by Javascript, since the bytes\n    'are merged into 16-bit unicode characters. Last character missing if odd length.\n    Function ieRawBytes(byteArray)\n        ieRawBytes = CStr(byteArray)\n    End Function\n\n    'Careful the last character is missing in case of odd file length\n    'We Will call the ieLastByte function (below) from Javascript\n    'Cannot merge directly within ieRawBytes as the final byte would be duplicated\n    Function ieLastChr(byteArray)\n        Dim lastIndex\n        lastIndex = LenB(byteArray)\n        if lastIndex mod 2 Then\n            ieLastChr = Chr( AscB( MidB( byteArray, lastIndex, 1 ) ) )\n        Else\n            ieLastChr = \"\"\n        End If\n    End Function\n\n&lt;/script&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    try {   \n        // best case scenario, the ADODB.Recordset object exists\n        // we can use the VBScript ieGetBytes function to transform a byte array into a string\n        var ieRecordset = new ActiveXObject('ADODB.Recordset');\n        var ieGetBytes = function( byteArray ) {\n            return ieGetBytesADO(byteArray);\n        }\n        ieRecordset = null;\n\n    } catch(err) {\n        // no ADODB.Recordset object, we will do the conversion quickly through a regular expression\n\n        // initializes for once and for all the translation dictionary to speed up our regexp replacement function\n        var ieByteMapping = {};\n        for ( var i = 0; i &lt; 256; i++ ) {\n            for ( var j = 0; j &lt; 256; j++ ) {\n                ieByteMapping[ String.fromCharCode( i + j * 256 ) ] = String.fromCharCode(i) + String.fromCharCode(j);\n            }\n        }\n\n        // since ADODB is not there, we replace the previous VBScript ieGetBytesADO function with a regExp-based function,\n        // quite fast, about 1.3 seconds for 500kB (versus several minutes for byte-by-byte loops over the byte array)\n        var ieGetBytes = function( byteArray ) {\n            var rawBytes = ieRawBytes(byteArray),\n                lastChr = ieLastChr(byteArray);\n\n            return rawBytes.replace(/[\\s\\S]/g, function( match ) {\n                return ieByteMapping[match]; }) + lastChr;\n        }\n    }\n&lt;/script&gt;\n&lt;![endif]--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could also just make a proxy script that goes to the address you're requesting &amp; base64's it. Then you just have to pass a query string to the proxy script that tells it the address. In IE you have to manually do base64 in JS though. But this is a way to go if you don't want to use VBScript.</p>\n\n<p>I used this for my GameBoy Color emulator @ <a href=\"http://grantgalitz.org/gameboy/\" rel=\"nofollow\">http://grantgalitz.org/gameboy/</a></p>\n\n<p>My proxy script is at the subfolder res/proxy.php</p>\n\n<p>Here is the PHP script that does the magic:</p>\n\n<pre><code>&lt;?php\n//Binary Proxy\nif (isset($_GET['url'])) {\n    try {\n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL, stripslashes($_GET['url']));\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($curl, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']);\n        curl_setopt($curl, CURLOPT_POST, false);\n        curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 30);\n        $result = curl_exec($curl);\n        curl_close($curl);\n        if ($result !== false) {\n            header('Content-Type: text/plain; charset=ASCII');\n            header('Expires: '.gmdate('D, d M Y H:i:s \\G\\M\\T', time() + (3600 * 24 * 7)));\n            echo(base64_encode($result));\n        }\n        else {\n            header('HTTP/1.0 404 File Not Found');\n        }\n    }\n    catch (Exception $error) { }\n}\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use the JScript \"<a href=\"http://msdn.microsoft.com/en-us/library/y39d47w8%28v=VS.85%29.aspx\">VBArray</a>\" object to get at these bytes in IE (without using VBScript):</p>\n\n<p><code>var data = new VBArray(xhr.responseBody).toArray();</code></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I was trying to download a file and than sign it using CAPICOM.DLL. The only way I coud do it was by injecting a VBScript function that does the download. That is my solution:</p>\n\n<pre><code>if(/msie/i.test(navigator.userAgent) &amp;&amp; !/opera/i.test(navigator.userAgent)) {\n    var VBConteudo_Script =\n    '&lt;!-- VBConteudo --&gt;\\r\\n'+\n    '&lt;script type=\"text/vbscript\"&gt;\\r\\n'+\n    'Function VBConteudo(url)\\r\\n'+\n    '   Set objHTTP = CreateObject(\"MSXML2.XMLHTTP\")\\r\\n'+\n    '   objHTTP.open \"GET\", url, False\\r\\n'+\n    '   objHTTP.send\\r\\n'+\n    '   If objHTTP.Status = 200 Then\\r\\n'+\n    '       VBConteudo = objHTTP.responseBody\\r\\n'+\n    '   End If\\r\\n'+\n    'End Function\\r\\n'+\n    '\\&lt;\\/script&gt;\\r\\n';\n\n    // inject VBScript\n    document.write(VBConteudo_Script);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Thank you for this post. </p>\n\n<p>I found this link usefull:</p>\n\n<p><a href=\"http://www.codingforums.com/javascript-programming/47018-help-using-responsetext-property-microsofts-xmlhttp-activexobject-ie6.html\" rel=\"nofollow\">http://www.codingforums.com/javascript-programming/47018-help-using-responsetext-property-microsofts-xmlhttp-activexobject-ie6.html</a></p>\n\n<p>Specially this part:</p>\n\n<pre><code>&lt;/script&gt;\n&lt;script language=\"VBScript\"&gt;\nFunction BinaryToString(Binary)\nDim I,S\nFor I = 1 to LenB(Binary)\nS = S &amp; Chr(AscB(MidB(Binary,I,1)))\nNext\nBinaryToString = S\nEnd Function\n&lt;/script&gt;\n</code></pre>\n\n<p>I've added this to my htm page. \nThen I call this function from my javascript:</p>\n\n<pre><code> responseText = BinaryToString(xhr.responseBody);\n</code></pre>\n\n<p>Works on IE8, IE9, IE10, FF &amp; Chrome.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've got a web page that uses <a href=\"http://msdn.microsoft.com/en-us/library/ms535874%28VS.85%29.aspx\">XMLHttpRequest</a> to download a binary resource. </p>\n\n<p>In Firefox and Gecko I can use responseText to get the bytes, even if the bytestream includes binary zeroes. I may need to coerce the mimetype with <code>overrideMimeType()</code> to make that happen.  In IE, though, responseText doesn't work, because it appears to terminate at the first zero. If you read 100,000 bytes, and byte 7 is a binary zero, you will be able to access only 7 bytes. IE's XMLHttpRequest exposes a <code>responseBody</code> property to access the bytes. I've seen a few posts suggesting that it's impossible to access this property in any meaningful way directly from Javascript. This sounds crazy to me. </p>\n\n<p><code>xhr.responseBody</code> <em>is</em> accessible from VBScript, so the obvious workaround is to define a method in VBScript in the webpage, and then call that method from Javascript.  See <a href=\"http://code.google.com/p/jsdap/source/browse/trunk/api.js?r=64\">jsdap</a> for one example.   <strong>EDIT: DO NOT USE THIS VBScript!!</strong></p>\n\n<pre><code>var IE_HACK = (/msie/i.test(navigator.userAgent) &amp;&amp; \n               !/opera/i.test(navigator.userAgent));   \n\n// no no no!  Don't do this! \nif (IE_HACK) document.write('&lt;script type=\"text/vbscript\"&gt;\\n\\\n     Function BinaryToArray(Binary)\\n\\\n         Dim i\\n\\\n         ReDim byteArray(LenB(Binary))\\n\\\n         For i = 1 To LenB(Binary)\\n\\\n             byteArray(i-1) = AscB(MidB(Binary, i, 1))\\n\\\n         Next\\n\\\n         BinaryToArray = byteArray\\n\\\n     End Function\\n\\\n&lt;/script&gt;'); \n\nvar xml = (window.XMLHttpRequest) \n    ? new XMLHttpRequest()      // Mozilla/Safari/IE7+\n    : (window.ActiveXObject) \n      ? new ActiveXObject(\"MSXML2.XMLHTTP\")  // IE6\n      : null;  // Commodore 64?\n\n\nxml.open(\"GET\", url, true);\nif (xml.overrideMimeType) {\n    xml.overrideMimeType('text/plain; charset=x-user-defined');\n} else {\n    xml.setRequestHeader('Accept-Charset', 'x-user-defined');\n}\n\nxml.onreadystatechange = function() {\n    if (xml.readyState == 4) {\n        if (!binary) {\n            callback(xml.responseText);\n        } else if (IE_HACK) {\n            // call a VBScript method to copy every single byte\n            callback(BinaryToArray(xml.responseBody).toArray());\n        } else {\n            callback(getBuffer(xml.responseText));\n        }\n    }\n};\nxml.send('');\n</code></pre>\n\n<p>Is this really true? The best way? copying every byte?  For a large binary stream that's not going to be very efficient.  </p>\n\n<p>There is also a <em>possible</em> technique using ADODB.Stream, which is a COM equivalent of a MemoryStream.  <a href=\"http://help.dottoro.com/ljgqlcox.php\">See here</a> for an example.  It does not require VBScript but does require a separate COM object.</p>\n\n<pre><code>if (typeof (ActiveXObject) != \"undefined\" &amp;&amp; typeof (httpRequest.responseBody) != \"undefined\") {\n    // Convert httpRequest.responseBody byte stream to shift_jis encoded string\n    var stream = new ActiveXObject(\"ADODB.Stream\");\n    stream.Type = 1; // adTypeBinary\n    stream.Open ();\n    stream.Write (httpRequest.responseBody);\n    stream.Position = 0;\n    stream.Type = 1; // adTypeBinary;\n    stream.Read....          /// ???? what here\n}\n</code></pre>\n\n<p>But that's not going to work well - ADODB.Stream is disabled on most machines these days. </p>\n\n<hr>\n\n<p>In The IE8 developer tools - the IE equivalent of Firebug - I can see the responseBody is an array of bytes and I can even see the bytes themselves. The data is <em>right there</em>.  I don't understand why I can't get to it. </p>\n\n<p>Is it possible for me to read it with responseText? </p>\n\n<p>hints? (other than defining a VBScript method)</p>\n",
            "last_activity_date": 1396611796,
            "question_id": 1919972,
            "score": 23,
            "tags": [
                "javascript",
                "xmlhttprequest"
            ],
            "title": "how do I access XHR responseBody (for binary data) from Javascript in IE?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>serialize it with <code>System.Web.Script.Serialization.JavaScriptSerializer</code> class and assign to javascript var</p>\n\n<p>dummy sample:</p>\n\n<pre><code>&lt;% var serializer = new System.Web.Script.Serialization.JavaScriptSerializer(); %&gt;\nvar jsVariable = &lt;%= serializer.Serialize(array) %&gt;;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>In the page file:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var a = eval('[&lt;% =string.Join(\", \", numbers) %&gt;]');\n&lt;/script&gt;\n</code></pre>\n\n<p>while in code behind:</p>\n\n<pre><code>public int[] numbers = WhatEverGetTheArray();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can use ClientScript.RegisterStartUpScript to inject javascript into the page on Page_Load.</p>\n\n<p>Here's a link to MSDN reference:\n<a href=\"http://msdn.microsoft.com/en-us/library/asz8zsxy.aspx\">http://msdn.microsoft.com/en-us/library/asz8zsxy.aspx</a></p>\n\n<p>Here's the code in Page_Load:</p>\n\n<pre><code>  List&lt;string&gt; tempString = new List&lt;string&gt;();\n  tempString.Add(\"Hello\");\n  tempString.Add(\"World\");\n\n  StringBuilder sb = new StringBuilder();\n  sb.Append(\"&lt;script&gt;\");\n  sb.Append(\"var testArray = new Array;\");\n  foreach(string str in tempString)\n  {\n    sb.Append(\"testArray.push('\" + str + \"');\");\n  }\n  sb.Append(\"&lt;/script&gt;\");\n\n  ClientScript.RegisterStartupScript(this.GetType(), \"TestArrayScript\", sb.ToString());\n</code></pre>\n\n<p>Notes: Use StringBuilder to build the script string as it will probably be long.</p>\n\n<p>And here's the Javascript that checks for the injected array \"testArray\" before you can  work with it:</p>\n\n<pre><code>if (testArray)\n{\n  // do something with testArray\n}\n</code></pre>\n\n<p>There's 2 problems here:</p>\n\n<ol>\n<li><p>Some consider this intrusive for C# to inject Javascript</p></li>\n<li><p>We'll have to declare the array at a global context</p></li>\n</ol>\n\n<p>If you can't live with that, another way would be to have the C# code save the Array into View State, then have the JavaScript use PageMethods (or web services) to call back to the server to get that View State object as an array.  But I think that may be overkill for something like this.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>This is to supplement zerkms's answer.</p>\n\n<p>To pass data across language barriers, you would need a way to represent the data as a string by serializing the data. One of the serialization methods for JavaScript is JSON. In zerkms's example, the code would be placed inside of an aspx page. To combine his example and yours together on one aspx page, you would have,</p>\n\n<pre><code>&lt;%\n    int[] numbers = new int[5];\n    // Fill up numbers...\n\n    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();\n%&gt;\n</code></pre>\n\n<p>somewhere later on the aspx page</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var jsVariable = &lt;%= serializer.Serialize(numbers) %&gt;;\n&lt;/script&gt;\n</code></pre>\n\n<p>This answer though, assumes that you are generating JavaScript from the initial page load. As per the comments in your post, this could have been done via AJAX. In that case, you would have the server respond with the result of the serialization and then deserialize it in JavaScript using your favorite framework.</p>\n\n<p>Note: Also do not mark this as an answer since I wanted the syntax highlighting to make another answer more clear.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>For array of objects:</p>\n\n<pre><code>var array= JSON.parse('@Newtonsoft.Json.JsonConvert.SerializeObject(numbers)'.replace(/&amp;quot;/g, \"\\\"\"));\n</code></pre>\n\n<p>For array of int:</p>\n\n<pre><code> var array= JSON.parse('@Newtonsoft.Json.JsonConvert.SerializeObject(numbers)');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Does anyone know how to pass a C# ASP.NET array to a Javascript array? Sample code will also be nice.</p>\n\n<p>Sorry if I was vague earlier guys. The question is actually quite simple. Let's say for simplicity that in my aspx.cs file I declare:</p>\n\n<p><code>int [] numbers = new int[5];</code></p>\n\n<p>now I want to pass \"numbers\" to the client side and use the data in the array within javascript. How would I do this?</p>\n",
            "last_activity_date": 1420652242,
            "question_id": 3464498,
            "score": 22,
            "tags": [
                "c#",
                "javascript",
                "asp.net"
            ],
            "title": "Pass C# ASP.NET array to Javascript array"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>When you draw to a <code>canvas</code> element, you are simply drawing a bitmap in <a href=\"http://en.wikipedia.org/wiki/Immediate_mode_(computer_graphics)\" rel=\"nofollow\">immediate mode</a>.</p>\n\n<p>The <em>elements</em> (shapes, lines, images) that are drawn have no representation besides the pixels they use and their colour.</p>\n\n<p>Therefore, to get a <em>click</em> event on a <code>canvas</code> <em>element</em> (shape), you need to capture click events on the <code>canvas</code> HTML element and use some math to determine which element was clicked, provided you are storing the elements' width/height and x/y offset.</p>\n\n<p>To add a <code>click</code> event to your <code>canvas</code> element, use...</p>\n\n<pre><code>canvas.addEventListener('click', function() { }, false);\n</code></pre>\n\n<p>To determine what <em>element</em> was clicked...</p>\n\n<pre><code>var elem = document.getElementById('myCanvas'),\n    elemLeft = elem.offsetLeft,\n    elemTop = elem.offsetTop,\n    context = elem.getContext('2d'),\n    elements = [];\n\n// Add event listener for `click` events.\nelem.addEventListener('click', function(event) {\n    var x = event.pageX - elemLeft,\n        y = event.pageY - elemTop;\n\n    // Collision detection between clicked offset and element.\n    elements.forEach(function(element) {\n        if (y &gt; element.top &amp;&amp; y &lt; element.top + element.height \n            &amp;&amp; x &gt; element.left &amp;&amp; x &lt; element.left + element.width) {\n            alert('clicked an element');\n        }\n    });\n\n}, false);\n\n// Add element.\nelements.push({\n    colour: '#05EFFF',\n    width: 150,\n    height: 100,\n    top: 20,\n    left: 15\n});\n\n// Render elements.\nelements.forEach(function(element) {\n    context.fillStyle = element.colour;\n    context.fillRect(element.left, element.top, element.width, element.height);\n});\u200b\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/BmeKr/\" rel=\"nofollow\">jsFiddle</a>.</p>\n\n<p>This code attaches a <code>click</code> event to the <code>canvas</code> element, and then pushes one shape (called an <code>element</code> in my code) to an <code>elements</code> array. You could add as many as you wish here.</p>\n\n<p>The purpose of creating an array of objects is so we can query their properties later. After all the elements have been pushed onto the array, we loop through and render each one based on their properties.</p>\n\n<p>When the <code>click</code> event is triggered, the code loops through the elements and determines if the click was over any of the elements in the <code>elements</code> array. If so, it fires an <code>alert()</code>, which could easily be modified to do something such as remove the array item, in which case you'd need a separate <em>render</em> function to update the <code>canvas</code>.</p>\n\n<p>For completeness, why your attempts didn't work...</p>\n\n<pre><code>elem.onClick = alert(\"hello world\"); // displays alert without clicking\n</code></pre>\n\n<p>This is assigning the return value of <code>alert()</code> to the <code>onClick</code> property of <code>elem</code>. It is immediately invoking the <code>alert()</code>.</p>\n\n<pre><code>elem.onClick = alert('hello world');  // displays alert without clicking\n</code></pre>\n\n<p>In JavaScript, the <code>'</code> and <code>\"</code> are semantically identical, the lexer probably uses <code>['\"]</code> for quotes.</p>\n\n<pre><code>elem.onClick = \"alert('hello world!')\"; // does nothing, even with clicking\n</code></pre>\n\n<p>You are assigning a string to the <code>onClick</code> property of <code>elem</code>.</p>\n\n<pre><code>elem.onClick = function() { alert('hello world!'); }; // does nothing\n</code></pre>\n\n<p>JavaScript is case sensitive. The <code>onclick</code> property is the archaic method of attaching event handlers. It only allows one event to be attached with the property and the event can be lost when serialising the HTML.</p>\n\n<pre><code>elem.onClick = function() { alert(\"hello world!\"); }; // does nothing\n</code></pre>\n\n<p>Again, <code>' === \"</code>.</p>\n",
                    "is_accepted": true,
                    "score": 49
                }
            ],
            "body": "<p>I'm an experienced Java programmer but am looking at some JavaScript/HTML5 stuff for the first time in about a decade.  I'm completely stumped on what should be the simplest thing ever.</p>\n\n<p>As an example I just wanted to draw something and add an event handler to it.  I'm sure I'm doing something stupid, but I've searched all over and nothing that is suggested (e.g. the answer to this question:  <a href=\"http://stackoverflow.com/questions/789824/add-onclick-property-to-input-with-javascript\">Add onclick property to input with JavaScript</a>) works.  I'm using Firefox 10.0.1.  My code follows.  You'll see several commented lines and at the end of each is a description of what (or what doesn't) happen.</p>\n\n<p>What's the correct syntax here?  I'm going crazy!</p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n    &lt;canvas id=\"myCanvas\" width=\"300\" height=\"150\"/&gt;\n    &lt;script language=\"JavaScript\"&gt;\n        var elem = document.getElementById('myCanvas');\n        // elem.onClick = alert(\"hello world\");  - displays alert without clicking\n        // elem.onClick = alert('hello world');  - displays alert without clicking\n        // elem.onClick = \"alert('hello world!')\";  - does nothing, even with clicking\n        // elem.onClick = function() { alert('hello world!'); };  - does nothing\n        // elem.onClick = function() { alert(\"hello world!\"); };  - does nothing\n        var context = elem.getContext('2d');\n        context.fillStyle = '#05EFFF';\n        context.fillRect(0, 0, 150, 100);\n    &lt;/script&gt;\n\n&lt;/body&gt;\n</code></pre>\n\n<p></p>\n",
            "last_activity_date": 1419428606,
            "question_id": 9880279,
            "score": 21,
            "tags": [
                "javascript",
                "html5",
                "canvas",
                "event-handling",
                "onclick"
            ],
            "title": "How do I add a simple onClick event handler to a canvas element?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>As far as I know, the $.ajax() function has no support for \"bytes loaded\".  It only has start and complete events, no progress event.</p>\n\n<p>I found <a href=\"http://markmail.org/message/kmrpk7w3h56tidxs#query:jquery%20ajax%20download%20progress+page:1+mid:kmrpk7w3h56tidxs+state:results\">this thread</a> detailing an attempt, but apparently the code works in several browsers but not IE.  The suggestion they make is to show progress in other browsers, and a simple \"loading...\" message for IE.</p>\n\n<p>Do note that there are several similar discussions on the same site, so browse the left panel for other methods.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Some browser provide support for download status events wher you can track your progress (i know ff 3.5+ does).</p>\n\n<p>This is done by ajax XHR.</p>\n\n<p>You can read more <a href=\"https://developer.mozilla.org/en/using_xmlhttprequest\" rel=\"nofollow\">here</a> and <a href=\"http://hacks.mozilla.org/2009/06/xhr-progress-and-richer-file-uploading-feedback/\" rel=\"nofollow\">here</a></p>\n\n<p>also, it is possible to split up a file in an array (let's say we divide it in 10 pieces),</p>\n\n<p>now send 1peace, and return succes after, progress = 10% etc ...</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I want to get the progress of my AJAX request - how much has been downloaded so far out of how much the file is. For example, I am downloading a large picture with AJAX so I can put the content in a DATA url (this may not be the best way to do that, it's just a example.) </p>\n\n<p>So, I make the AJAX request to some host I have no control over (flickr), and report the progress back to the user. I cannot find a way to do this without a server-side script or something like that. Preferably the solution would use JQuery, because that is what I use for my website.\nThanks! Isaac</p>\n",
            "last_activity_date": 1343079823,
            "question_id": 399641,
            "score": 21,
            "tags": [
                "javascript",
                "ajax",
                "jquery"
            ],
            "title": "AJAX Page Download progress"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Both direct property access (<code>localStorage.item</code> or <code>localStorage['item']</code>) and using the functional interface (<code>getItem('item')</code>) work fine. Both are standard and cross-browser compatible.<sup>*</sup> According to <a href=\"http://www.w3.org/TR/webstorage/#the-storage-interface\" rel=\"nofollow\">the spec</a>:</p>\n\n<blockquote>\n  <p>The supported property names on a Storage object are the keys of each key/value pair currently present in the list associated with the object, in the order that the keys were last added to the storage area.</p>\n</blockquote>\n\n<p>They just behave differently when no key/value pair is found with the requested name. For example, if key <code>'item'</code> does not exist, <code>var a = localStorage.item;</code> will result in <code>a</code> being <code>undefined</code>, while <code>var a = localStorage.getItem('item');</code> will result in <code>a</code> having the value <code>null</code>. As you have discovered, <code>undefined</code> and <code>null</code> are not interchangeable in JavaScript/EcmaScript. :)</p>\n\n<p><strong>EDIT:</strong> As Christoph points out in <a href=\"http://stackoverflow.com/a/24904863/535871\">his answer</a>, the functional interface is the only way to reliably store and retrieve values under keys equal to the predefined properties of <code>localStorage</code> (<code>length</code>, <code>key</code>, <code>setItem</code>, <code>getItem</code>, <code>removeItem</code>, and <code>clear</code>). So, for instance, the following will always work:</p>\n\n<pre><code>localStorage.setItem('length', 2);\nconsole.log(localStorage.getItem('length'));\n</code></pre>\n\n<p>Note in particular that the first statement will not affect the property <code>localStorage.length</code> (except perhaps incrementing it if there was no key <code>'length'</code> already in <code>localStorage</code>). In this respect, the spec seems to be internally inconsistent.</p>\n\n<p>However, the following will probably not do what you want:</p>\n\n<pre><code>localStorage.length = 2;\nconsole.log(localStorage.length);\n</code></pre>\n\n<p>Interestingly, the first is a no-op in Chrome, but is synonymous with the functional call in Firefox. The second will always log the number of keys present in <code>localStorage</code>.</p>\n\n<p><sup>*</sup> <sub>This is true for browsers that support web storage in the first place. For environments that simulate local storage using cookies, the behavior depends on the shim that is used. The one <a href=\"https://developer.mozilla.org/en-US/docs/DOM/Storage#Compatibility\" rel=\"nofollow\">suggested by Mozilla</a> is compatible with the spec.</sub></p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>I know it's an old post but since nobody actually mentioned performance I set up some JsPerf tests to benchmark it and as well as being a coherent interface <code>getItem</code> and <code>setItem</code> are also consistently faster than using dot notation or brackets as well as being much easier to read.</p>\n\n<p>Here are my tests <a href=\"http://jsperf.com/localstorage-get-set-vs-dot-notation\" rel=\"nofollow\">on JsPerf</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As it was mentioned, there is almost no difference except of nonexisting key. The <a href=\"http://jsperf.com/localstorage-get-by-key-comparison\" rel=\"nofollow\">difference in performance varies</a> depending on what browser/OS are you using. But it is not really that different.</p>\n\n<p>I suggest you to use standard interface, just because it is a recommended way of using it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The question is already quite old, but since I have been quoted in the question, I think I should say two words about my statement.</p>\n\n<p>The Storage Object is rather special, it's an object, which provides access to a list of key/value pairs. Thus it's not an ordinary object or array. </p>\n\n<p>For example it has the length attribute, which unline the array lenght attribute is readonly and returns the number of keys in the storage.</p>\n\n<p>With an array you can do:</p>\n\n<pre><code>var a = [1,2,3,4];\na.length // =&gt; 4\na.length = 2;\na // =&gt; [1,2]\n</code></pre>\n\n<p>Here we have the first reason to use the getters/setters. What if you want to set an item called <code>length</code>?</p>\n\n<pre><code>localStorage.length = \"foo\";\nlocalStorage.length  // =&gt; 0\nlocalStorage.setItem(\"length\",\"foo\");\n// the \"length\" key is now only accessable via the getter method:\nlocalStorage.length  // =&gt; 1\nlocalStorage.getItem(\"length\") // =&gt; \"foo\"\n</code></pre>\n\n<p>With other members of the Storage object it's even more critical, since they are writable and you can accidently overwrite methods like <code>getItem</code>. Using the API methods prevents any of these possible problems and provides a consistent Interface.</p>\n\n<p>Also perhaps the most important point is the following in the spec (emphasized by me):</p>\n\n<blockquote>\n  <p><strong>The setItem() and removeItem() methods must be atomic</strong> with respect to failure. In the case of failure, the method does nothing. That is, changes to the data storage area must either be successful, or the data storage area must not be changed at all.</p>\n</blockquote>\n\n<p>I haven't tested this, but I guess this does not apply to dot or bracket notation.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I recently asked <a href=\"http://stackoverflow.com/questions/12623951/localstorage-get-item-with-dot-bracket-notation-not-working-with-json-parse\">a question about LocalStorage</a>. Using <code>JSON.parse(localStorage.item)</code> and <code>JSON.parse(localStorage['item'])</code> weren't working to return <code>NULL</code> when the item hadn't been set yet. </p>\n\n<p>However, <code>JSON.parse(localStorage.getItem('item')</code> did work. And it turns out, <code>JSON.parse(localStorage.testObject || null)</code> also works.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/12623951/localstorage-get-item-with-dot-bracket-notation-not-working-with-json-parse/12624333#comment17030808_12624333\">One of the comments</a> basically said that <code>localStorage.getItem()</code> and <code>localStorage.setItem()</code> should always be preferred:</p>\n\n<blockquote>\n  <p>The getter and setter provide a consistent, standardised and\n  crossbrowser compatible way to work with the LS api and should always\n  be preferred over the other ways. -<a href=\"http://stackoverflow.com/users/1047823/christoph\">Christoph</a></p>\n</blockquote>\n\n<p>I've come to like using the shorthand dot and bracket notations for localStorage, but I'm curious to know others' take on this. <strong>Is localStorage.getItem('item') better than localStorage.item or localStorage['item'] OR as long as they work are the shorthand notations okay?</strong></p>\n",
            "last_activity_date": 1426215765,
            "question_id": 12632463,
            "score": 19,
            "tags": [
                "javascript",
                "syntax",
                "local-storage"
            ],
            "title": "Is localStorage.getItem(&#39;item&#39;) better than localStorage.item or localStorage[&#39;item&#39;]?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Never mind. <a href=\"http://stackoverflow.com/questions/133310/how-can-i-get-jquery-to-perform-a-synchronous-rather-than-asynchronous-ajax-req\">How can I get jQuery to perform a synchronous, rather than asynchronous, AJAX request?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want an synchronous request set the <code>async</code> property to <code>false</code> for the request. Check out the <a href=\"http://api.jquery.com/jQuery.ajax/\">jQuery AJAX Doc</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>May I suggest that you use <code>$.ajax()</code> instead of <code>$.post()</code> as it's much more customizable.</p>\n\n<p>If you are calling <code>$.post()</code>, e.g., like this:</p>\n\n<pre><code>$.post( url, data, success, dataType );\n</code></pre>\n\n<p>You could turn it into its <code>$.ajax()</code> equivalent:</p>\n\n<pre><code>$.ajax({\n  type: 'POST',\n  url: url,\n  data: data,\n  success: success,\n  dataType: dataType,\n  async:false\n});\n</code></pre>\n\n<p>Please note the <code>async:false</code> at the end of the <code>$.ajax()</code> parameter object.</p>\n\n<p>Here you have a full detail of the <code>$.ajax()</code> parameters: <a href=\"http://api.jquery.com/jQuery.ajax/\">jQuery.ajax() \u2013 jQuery API Documentation</a>.</p>\n",
                    "is_accepted": true,
                    "score": 103
                },
                {
                    "body": "<p>From the Jquery docs: you specify the async option to be false to get a synchronous Ajax request. Then your callback can set some data before your mother function proceeds.</p>\n\n<p>Here's what your code would look like if changed as suggested:</p>\n\n<pre><code>beforecreate: function(node,targetNode,type,to) {\n    jQuery.ajax({\n         url:    url,\n         success: function(result) {\n                      if(result.isOk == false)\n                          alert(result.message);\n                  },\n         async:   false\n    });          \n}\n</code></pre>\n\n<p>this is because $.ajax is the only request type that you can set the asynchronousity for</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I\u2019ve been googling this and avoiding this error in my bug fix list for a long time now, but I\u2019ve finally reached the end of the list, the last of which I have to make a function return true/false to state whether the validation has succeeded or not. </p>\n\n<p>I'm using ajax to compare certain fields with those that are already in the db and by default the <code>$.post()</code> method does it's operations asynchronously.</p>\n\n<p>I\u2019m setting a variable inside the call <code>onSuccess</code> and the calling method doesn't get a response because of this, so all my js/jquery fails on pageLoad... I would prefer if I could still keep using the <code>$.post</code> method.</p>\n",
            "last_activity_date": 1368023048,
            "question_id": 5821380,
            "score": 63,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "how to make a jquery &quot;$.post&quot; request synchronous"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Check the form to see whether there is a <code>HTMLInputElement</code> with id or name is <code>submit</code>.</p>\n\n<p>This will set a property <code>submit</code> to the <code>HTMLFormElement</code>, so the <code>submit</code> function which is in the prototype of the form element can't be executed.</p>\n\n<p><em><strong>Example:</em></strong></p>\n\n<pre><code>&lt;form class=\"form\" id=\"form\" action=\"/mailer.php\" method=\"post\"&gt;\n    \u200b&lt;input type=\"button\" name=\"submit\" value=\"go\"/&gt;\n&lt;/form&gt;\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\n</code></pre>\n\n<p>js:</p>\n\n<pre><code>\u200bconsole.log($(\"#form\")[0].submit)\u200b;\u200b  // will be the button element, not the submit function.\n</code></pre>\n\n<p>jQuery's <code>.submit()</code> method will call the <code>.submit()</code> on the original dom element, so the error will happen.</p>\n",
                    "is_accepted": true,
                    "score": 134
                },
                {
                    "body": "<p>If you have a button or input with the name submit or id submit, I have seen errors in IE. Make sure your inputs are correctly named. Here's an article on it <a href=\"http://bugs.jquery.com/ticket/1414\" rel=\"nofollow\">http://bugs.jquery.com/ticket/1414</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><strong>xdazz</strong> explained the issue well.</p>\n\n<p>You can use a native <strong>submit</strong> method of HTMLFormElement to work around a problem:</p>\n\n<pre><code>HTMLFormElement.prototype.submit.call($('#form')[0]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                }
            ],
            "body": "<p>Can anyone explain to me what this error means? I would appreciate it a lot for any kindof help with this.</p>\n\n<pre><code>&lt;form class=\"form\" id=\"form\" action=\"/mailer.php\" method=\"post\"&gt;\n</code></pre>\n\n<p>The Jquery code I'm using for it is this.</p>\n\n<pre><code>$('#form').submit();  \n</code></pre>\n",
            "last_activity_date": 1393433672,
            "question_id": 12540953,
            "score": 47,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "forms",
                "submit"
            ],
            "title": "Property &#39;submit&#39; of object #&lt;HTMLFormElement&gt; is not a function"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Sure, simply bind multiple listeners to it.</p>\n\n<p><code>Short cutting with jQuery</code></p>\n\n<pre><code>$(\"#id\").bind(\"click\", function () { alert(\"Event 1\"); });\n$(\".foo\").bind(\"click\", function () { alert(\"Foo class\"); });\n\n&lt;div class=\"foo\" id=\"id\"&gt;Click&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>onClick=\"doSomething();doSomethingElse();\"\n</code></pre>\n\n<p>But really you're better off not using onClick at all and attaching the event handler to the DOM node through your JS code.  This is known as <a href=\"http://en.wikipedia.org/wiki/Unobtrusive_JavaScript\">unobtrusive javascript</a>.</p>\n",
                    "is_accepted": true,
                    "score": 102
                },
                {
                    "body": "<p><strong>A link with 1 function defined</strong></p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"someFunc()\"&gt;Click me To fire some functions&lt;/a&gt;\n</code></pre>\n\n<p><strong>Firing multiple functions from <code>someFunc()</code></strong></p>\n\n<pre><code>function someFunc() {\n    showAlert();\n    validate();\n    anotherFunction();\n    YetAnotherFunction();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>I would use the element.addEventListener method to link it to a function. From that function you can call multiple functions. This could be useful...</p>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/element.addEventListener\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/element.addEventListener</a></p>\n\n<p>The advantage I see in binding an event to a single function and then calling multiple functions is that you can perform some error checking, have some if else statements so that some functions only get called if certain criteria is met.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Is there any way to use the <code>onClick</code> html attribute to call more than one JavaScript function?</p>\n",
            "last_activity_date": 1404721250,
            "question_id": 3910736,
            "score": 45,
            "tags": [
                "javascript",
                "html",
                "methods",
                "onclick"
            ],
            "title": "How to call multiple JavaScript functions in onclick event?"
        },
        {
            "answer_count": 20,
            "answers": [
                {
                    "body": "<p>I think it's a well known fact that ~10% of people have JavaScript turned off, so it's important to take that into account.  If you feel you can safely ignore up to 10% of your audience, then blowing it off is fine.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Older than IE6 ? A few percentage. Older than Firefox 2? About the same.</p>\n\n<p>You should always anticipate people with Javascript turned off and accommodate those who have it turned on.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Phones would be a primary one that I can think of off the top of my head.  A lot of mobile devices just aren't very good at working through a javascript heavy site.  And considering that mobile devices are quickly becoming one to the top internet access points you might want to reconsider your position.. ;)</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Many of the text oriented browsers like <a href=\"http://en.wikipedia.org/wiki/Lynx%5F%28web%5Fbrowser%29\">Lynx</a> that are used by people with <a href=\"http://en.wikipedia.org/wiki/Braille%5Fterminal\">braille terminals</a> do not support JavaScript. It would be very rude to exclude these people from having access to sites.</p>\n\n<p>Learn more about <a href=\"http://www.w3.org/WAI/\">Web Accessibility Initiative</a>.</p>\n\n<p><strong>Edit:</strong>\nDo <strong>not</strong> confuse the text browser <a href=\"http://en.wikipedia.org/wiki/Lynx%5F%28web%5Fbrowser%29\">Lynx</a> with the graphical browser <a href=\"http://en.wikipedia.org/wiki/Links%5F%28web%5Fbrowser%29\">Links</a></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Think outside of the PC... lots of mobile phones have browsers that don't support javascript.\nIf you want your site visible to them, then it might pay to think about how the non-javascript experience would be to those clients.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<blockquote>\n  <p>Who uses browsers older than Firefox 2 or IE6?</p>\n</blockquote>\n\n<p>Wrong question.  It's not the age of the browser that's the problem.  There are plenty of <em>new</em> browsers out there that don't support javascript or support it well, and they can be just as important as the latest safari or firefox.  </p>\n\n<p>Others have mentioned smartphones or lynx, but the main one in my book is <strong>Googlebot</strong>.  That's a browser just like any other, and it won't run most of your javascript.  Also, even if you have firefox you might use a plugin like NoScript.  That's not the same thing as running with javascript disabled, but if you do things wrong you can really mess up for those users (ie, detect javascript state once at the start of a session or creation of an account, and then no longer serve javascript pages at al, even if they wanted to enable it for you).  Finally, if you do any work for the US Goverment you are required by law to support certain accessibility standards that include working with javascript disabled.</p>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>Many people disable Javascript because of security concerns with plugins like <a href=\"http://noscript.net/\" rel=\"nofollow\">NoScript</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I disable and reenable JavaScript several times a day depending on which site I'm about to visit. For example, news sites that like popups and resizing my window, stay still wih me.</p>\n\n<p>It doesn't take much for an ordinary user to learn that these things are done by something mystical called \"JavaScript\" and where to turn it off in browser.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is more a personal pet peeve but...</p>\n\n<p>I really don't like it when webpages load additional pages using AJAX calls and don't provide any method for opening the window in another tab. For example, on gmail, if you want to open up your drafts folder in a new window, you can right click on it and hit open in new  window. No problem there.</p>\n\n<p>On the other hand, if you want to open the contacts window, there is no non-javascript method of doing that. Therefore, you aren't able to right click and choose open in new window. <strong>The option doesn't exist!</strong></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>For me it looks more like a decision that product manager makes - it's up to PM to decide how product looks like and what is it target audience. As developer all I need is requirement \"should work in every browser\" or \"should work in most of browsers\". That should not come from web developer, unless he decided what your product should look like which makes him PM. And it's not up to dev to argue about it. </p>\n\n<p>Corporation that uses your SaaS and pays for it is one thing - on one project we explicitly said that only IE 6-7 is supported and customers were ok with that. Web site that may be visited on mobile browser is different story. But on mobile browser it may be not enough just to work without JS, you may need to simplify your page layout and reduce graphics usage as well. If you really need mobile users, you may consider making two versions of web site, fully functional JS-enabled desktop, and simplified, reduced version for mobile users.</p>\n\n<p>Of course you should never rely security on client side JS.</p>\n\n<p>Usually I prefer to deliver most of functionality without JS. For example readonly access to SO does not really need JS. And it's not that hard for user to enable JS if he really wants to post question. Posting question without JS is also not that hard, just forget about auto loading of similar questions.</p>\n\n<p>Certain things can be done both in JS and server side, and it's still often a product feature rather than technical decision which way to use. For example voting in SO could be done without JS but that would involve page reloading - more frustration for user and more traffic.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The simple fact of the matter is that forcing the use of JavaScript is limiting your audience. Some day, someone is going to try to run your site without JavaScript. If they can't do it, they'll either turn it on or get upset and leave. If they leave, they may very well never come back. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>Disabling all scripts by default, enabling them only for the sites they need, is at least recommended practice for any internet user.</strong>  I would even go so far to say that it is reckless and careless not to.  There are some nice plugins to allow scripts selectively for chosen sites.</p>\n\n<p>This means that <strong>you have to assume that first time visitors to your site will not allow any scripts in their browsers</strong>.  Your site should thus be able to <strong>present a useful interface to gather information what it is about, without requiring the user to allow scripts</strong>.</p>\n\n<p>In my opinion, JavaScript should only be used to provide <em>additional</em> functionality that goes beyond the simple display of information.</p>\n\n<p>My behaviour is like this: when I stumble upon a site that just displays \"You need to enable JavaScript\", I instantly reevaluate my interest that led me there.  In some cases, I will just close the tab.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Worth worrying about a small percentage of people, or striving towards best practices? Graceful failure is something web developers should shoot for, regardless of the user base affected. John Resig's talk at Yahoo <a href=\"http://ejohn.org/blog/the-dom-is-a-mess/\" rel=\"nofollow\">\"The DOM is Messy\"</a> makes a good case for accommodating users of all browsers and configurations.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A few months ago I tested the user population on a mainstream million-member site I was working on, and around 10% of unique users did not have Javascript running.</p>\n\n<p>Consider reversing the question: is it worth developing a site that only works for Ajax-capable users?  Would you really ignore search bots, most mobiles, and a heap of other users?</p>\n\n<p>Back to basics.  First, create your site using <strong>bare-bones (X)HTML</strong>, on REST-like principles (at least to the extent of requiring POST requests for state changes).  Simple semantic markup, and forget about CSS and Javascript.</p>\n\n<p>Step one is to get that right, and have your entire site (or as much of it as makes sense) working nicely this way for search bots and Lynx-like user agents.</p>\n\n<p>Then add a <strong>visual</strong> layer: CSS/graphics/media for visual polish, but don't significantly change your original (X)HTML markup; allow the original text-only site to stay intact and functioning.  Keep your markup clean!</p>\n\n<p>Third is to add a <strong>behavioural</strong> layer: Javascript (Ajax).  Offer things that make the experience faster, smoother, nicer for users/browsers with Ajax-capable JS... but only those users.  Users without Javascript are still welcome; and so are search bots, the visually impaired, many mobiles, etc.</p>\n\n<p>This is called <strong>progressive enhancement</strong> in web design circles.  Do it this way and your site works, in some reasonable form, for everyone.</p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>There is no definite Yes or No answer; it all depends on the website and how you use JavaScript.</p>\n\n<p>Basically, if your site is to be indexed by Google (or any other search engine) then you'll want the content of the page to be just plain HTML so anyone will easily be able to read it; the same goes for making links regular hyperlinks and not some \"window.navigate\" script so they can be followed appropriately. However, if your \"website\" is actually a more complicated web application, then you may be able to provide a much better experience for the user if you required JavaScript support; also in this case you may want to create a \"mobile\" version to be used by mobile devices that don't support JavaScript if that would be an issue.</p>\n\n<p>Most times, it is ok to require JavaScript support, but you still want to keep in mind the percentage of your users (and potential users) that may have JavaScript disabled or not have JavaScript support altogether.</p>\n\n<p>Also, for example, StackOverflow.com uses JavaScript for things you do when logged in, but doesn't require JavaScript support in order to just view individual pages, or in hyperlinks to other pages.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Wow... I guess I'll be the first one to say it but... \"To hell with all the people who disable JavaScript.\" If your site <em>requires</em> JavaScript to run, forget all those people that have it turned off. Seriously. If your site really is good enough to worry about losing a substantial audience, it's probably good enough for people to turn on their JavaScript.</p>\n\n<p>Case in point, go to Facebook, YouTube, Google Docs, Google Maps, or Digg (heck, try to do some of the more cool stuff with SO) with JS turned off and see what you can do (not a whole lot).</p>\n\n<p>The web browser is turning into more of a cloud-based operating system than a portal to \"web sites\". There are just so many compelling reasons to allow JavaScript to run and, IMO, so few reasons not to. To me, turning off JS is akin to, like, enabling UAC in Windows Vista. Yeah... it's there to help prevent you from making mistakes but having it on is <em>sooooo</em> annoying (but the reverse logic... :-).</p>\n\n<p>So, anyways... I might get a lot of flack for this answer but I feel that my reasons are sound and backed up by a lot of <em>incredibly</em> successful web sites and web applications.</p>\n\n<p>Just make sure that pages you want indexed by Google (and most other spiders) are able to be accessed without JavaScript on. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Most users are not techinical, and thus they dont know/care what javascript is, so if it is turned on by default,then that is what they use.  So, if they see your site, and it does not work, they are not gonna come back.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The usual reasons are:</p>\n\n<ul>\n<li>Its good SEO practice, ensuring content is parsed and linked properly by search engines</li>\n<li>Some modern web enabled phones do not process client side script properly</li>\n<li>508 compliance, in addition to helping SEO, is to some degree required by most government projects</li>\n<li>Some people just turn it off for whatever reason</li>\n</ul>\n\n<p>The general rule is to provide enhanced functionality but degrade gracefully for those that cannot use the enhanced feature set.  That means all navigation should be accessible without scripting, as well as all content for search engine parsing.</p>\n\n<p>Think of SO.  Questions and answers are processed server side and sent to the browser.  Until recently comments were retrieved on demand through javascript to a web service call.  That means that no matter how great a comment was, it is not going to be parsed by a search engine.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Think mobile phones, not whether people turn JS on or off. There are millions of people who view the web on their phones (not exclusively of course). That alone is a reason to cater for non-JS users.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I generally don't accomodate people with javascript off, but I am sure to let them know that because they have it turned off, certain features will be unavailable to them. </p>\n\n<p>I think its unacceptable to 'break' your website if there is no javascript, but its acceptable, imo, to have a minimum standard of what is required to use your website.</p>\n\n<p>For my websites this works...your audience may have different needs.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Why do many professional web developers always insist on developing sites that accommodate for browsers that have Javascript disabled?</p>\n\n<p>Besides tech heads and developers, most 'normal' users don't even know what it is.</p>\n",
            "last_activity_date": 1333635031,
            "question_id": 822872,
            "score": 40,
            "tags": [
                "javascript"
            ],
            "title": "Do web sites really need to cater for browsers that don&#39;t have Javascript enabled?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Head, or before closure of body tag.\nWhen DOM loads JS is then executed, that is exactly what jQuery document.ready does.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>See <a href=\"http://www.golivecentral.com/pages/txttut/jstut/headorbody.shtml\" rel=\"nofollow\">http://www.golivecentral.com/pages/txttut/jstut/headorbody.shtml</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I always put my scripts in the header. My reasons:</p>\n\n<ol>\n<li>I like to separate code and (static) text</li>\n<li>I usually load my script from external sources</li>\n<li>The same script is used from several pages, so it feels like an include file (which also goes in the header)</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>W3Schools have a <a href=\"http://www.w3schools.com/js/js_whereto.asp\">nice article on this subject</a>.</p>\n\n<p>Scripts in <code>&lt;head&gt;</code></p>\n\n<blockquote>\n  <p>Scripts to be executed when they are\n  called, or when an event is triggered,\n  are placed in functions.</p>\n  \n  <p>Put your functions in the head\n  section, this way they are all in one\n  place, and they do not interfere with\n  page content.</p>\n</blockquote>\n\n<p>Scripts in <code>&lt;body&gt;</code></p>\n\n<blockquote>\n  <p>If you don't want your script to be\n  placed inside a function, or if your\n  script should write page content, it\n  should be placed in the body section.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The problem with writing scripts at the head of a page is blocking. The browser must stop processing the page until the script is download, parsed and executed. The reason for this is pretty clear, these scripts might insert more into the page changing the result of the rendering, they also may remove things that dont need to be rendered, etc. </p>\n\n<p>Some of the more modern browsers violate this rule by not blocking on the downloading the scripts (ie8 was the first) but overall the download isn't the majority of the time spent blocking.</p>\n\n<p>Check out <a href=\"http://rads.stackoverflow.com/amzn/click/0596522304\">Even Faster Websites</a>, I just finished reading it and it goes over all of the fast ways to get scripts onto a page, Including putting scripts at the bottom of the page to allow rendering to complete (better UX).</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>I would answer this with multiple options actually, the some of which actually render in the body.</p>\n\n<ul>\n<li>Place library script such as the jQuery library in the head section.</li>\n<li>Place normal script in the head unless it becomes a performance/page load issue.</li>\n<li>Place script associated with includes, within and at the end of that include.  One example of this is .ascx user controls in asp.net pages - place the script at the end of that markup.</li>\n<li>Place script that impacts the render of the page at the end of the body (before the body closure).</li>\n<li>do NOT place script in the markup such as <code>&lt;input onclick=\"myfunction()\"/&gt;</code> - better to put it in event handlers in your script body instead.</li>\n<li>If you cannot decide, put it in the head until you have a reason not to such as page blocking issues.</li>\n</ul>\n\n<p>Footnote:  \"When you need it and not prior\" applies to the last item when page blocking (perceptual loading speed) - the users perception IS thier reality, if it is percieved to load faster, it does load faster (even though stuff might still be occuring in code).</p>\n\n<p>EDIT: references:</p>\n\n<ul>\n<li>asp.net discussion: <a href=\"http://west-wind.com/weblog/posts/154797.aspx\">http://west-wind.com/weblog/posts/154797.aspx</a>\nand here: <a href=\"http://msdn.microsoft.com/en-us/library/3hc29e2a.aspx\">http://msdn.microsoft.com/en-us/library/3hc29e2a.aspx</a></li>\n<li>jQuery document ready discussion: <a href=\"http://encosia.com/2010/08/18/dont-let-jquerys-document-ready-slow-you-down/?utm_source=feedburner&amp;utm_medium=email&amp;utm_campaign=Feed%3A+Encosia+%28Encosia%29\">http://encosia.com/2010/08/18/dont-let-jquerys-document-ready-slow-you-down/?utm_source=feedburner&amp;utm_medium=email&amp;utm_campaign=Feed%3A+Encosia+%28Encosia%29</a></li>\n<li>the other answers on this question present valid information as well.</li>\n<li>use www.google.com and www.bing.com to search for related information (there are a lot of references)</li>\n</ul>\n\n<p>Side note: IF you place script blocks within markup, it may effect layout in certain browsers by taking up space (ie7 and opera 9.2 are known to have this issue) so place them in a hidden div (use a css class like: <code>.hide { display: none; visibility: hidden; }</code> on the div)</p>\n\n<p>Standards: Note that the standards allow placement of the script blocks virtually anywhere if that is in question:  <a href=\"http://www.w3.org/TR/1999/REC-html401-19991224/sgml/dtd.html\">http://www.w3.org/TR/1999/REC-html401-19991224/sgml/dtd.html</a> and <a href=\"http://www.w3.org/TR/xhtml11/xhtml11_dtd.html\">http://www.w3.org/TR/xhtml11/xhtml11_dtd.html</a></p>\n\n<p>EDIT2: Note that whenever possible (always?) you should put the actual Javascript in external files and reference those - this does not change the pertinent sequence validity.</p>\n",
                    "is_accepted": true,
                    "score": 27
                }
            ],
            "body": "<p>I have seen both ways, both implementation work just the structures are a bit different. In your experience, which work better and why?</p>\n",
            "last_activity_date": 1336147385,
            "question_id": 3531314,
            "score": 34,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Should I write script in the body or the head of the html?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>The only way i can think of at the moment is to create a function on your parent page that has a timeout in it which calls itself after 10 seconds. In the function you could also check for the value of a cookie to see whether it's true or false. When the popup window closes set a cookie to true.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try looking into the <a href=\"https://developer.mozilla.org/en/DOM/window.onunload\" rel=\"nofollow\"><code>unload</code></a> and <a href=\"https://developer.mozilla.org/en/DOM/window.onbeforeunload\" rel=\"nofollow\"><code>beforeunload</code></a> window events. Monitoring these should give you an opportunity to call back when the DOM unloads when the window is closed via something like this:</p>\n\n<pre><code>var newWin = window.open('/some/url');\nnewWin.onunload = function(){\n  // DOM unloaded, so the window is likely closed.\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you can use the <a href=\"http://jqueryui.com/demos/dialog/\">jQuery UI Dialog</a>, it actually has a <code>close</code> event.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Yes, handle the onbeforeUnload event for the popup window and then call a function on the parent window using:</p>\n\n<pre><code>window.opener.myFunction()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To open a new window call:</p>\n\n<pre><code>var wnd = window.open(\"file.html\", \"youruniqueid\", \"width=400, height=300\");\n</code></pre>\n\n<p>If you just want to know when that window is going to close, use <code>onunload</code>.</p>\n\n<pre><code>wnd.onunload = function(){\n    // do something\n};\n</code></pre>\n\n<p>If you want a confirmation from the user before the can close it, use <code>onbeforeunload</code>.</p>\n\n<pre><code>wnd.onbeforeunload = function(){\n    return \"are you sure?\";\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>We do this in one of my projects at work.</p>\n\n<p>The trick is to have a JS function in your parent page that you plan to call when the popup is closed, then hook the unload event in the popup.</p>\n\n<p>The <code>window.opener</code> property refers to the page that spawned this popup.</p>\n\n<p>For example, if I wrote a function named <code>callingPageFunction</code> on my original page, I would call it from the popup like this:</p>\n\n<pre><code>$(window).unload(function() {\n    window.opener.callingPageFunction()\n});\n</code></pre>\n\n<p>Two notes:</p>\n\n<ol>\n<li>This should be wrapped in a ready function.</li>\n<li>I have an anonymous function because you may want other logic in there</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you have control over the contents of the pop-up, handle the window's <code>unload</code> event there and notify the original window via the <code>opener</code> property, checking first whether the opener has been closed. Note this won't always work in Opera.</p>\n\n<pre><code>window.onunload = function() {\n    var win = window.opener;\n    if (!win.closed) {\n        win.someFunctionToCallWhenPopUpCloses();\n    }\n};\n</code></pre>\n\n<p>Since the <code>unload</code> event will fire whenever the user navigates away from the page in the pop-up and not just when the window is closed, you should check that the pop-up has actually closed in <code>someFunctionToCallWhenPopUpCloses</code>:</p>\n\n<pre><code>var popUp = window.open(\"popup.html\", \"thePopUp\", \"\");\nfunction someFunctionToCallWhenPopUpCloses() {\n    window.setTimeout(function() {\n        if (popUp.closed) {\n            alert(\"Pop-up definitely closed\");\n        }\n    }, 1);\n}\n</code></pre>\n\n<p>If you don't have control over the contents of the pop-up, or if one of your target browsers does not support the <code>unload</code> event, you're reduced to some kind of polling solution in the main window. Adjust interval to suit.</p>\n\n<pre><code>var win = window.open(\"popup.html\", \"thePopUp\", \"\");\nvar pollTimer = window.setInterval(function() {\n    if (win.closed !== false) { // !== is required for compatibility with Opera\n        window.clearInterval(pollTimer);\n        someFunctionToCallWhenPopUpCloses();\n    }\n}, 200);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>There is a very simple solution to your problem.</p>\n\n<p>First make a new object which will open up a pop like this :</p>\n\n<pre><code>var winObj = window.open('http://www.google.com','google','width=800,height=600,status=0,toolbar=0');\n</code></pre>\n\n<p>In order to know when this popup window is closed, you just have to keep checking this with a loop like the following :</p>\n\n<pre><code>var loop = setInterval(function() {   \n    if(winObj.closed) {  \n        clearInterval(loop);  \n        alert('closed');  \n    }  \n}, 1000); \n</code></pre>\n\n<p>Now you can replace alert with any javascript code you want.</p>\n\n<p>Have Fun! :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The question is pretty much all in the title.</p>\n\n<p>Is it possible (and how?) to open a popup with javascript and then detect when the user closes it?</p>\n\n<p>I am using jquery within the project so a jquery solution would be good. Cheers!</p>\n",
            "last_activity_date": 1425964536,
            "question_id": 3291712,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "popup"
            ],
            "title": "is it possible to open a popup with javascript and then detect when the user closes it?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Because you haven't specified neither request content type, nor correct JSON request. Here's the correct way to send a JSON request:</p>\n\n<pre><code>var arr = { City: 'Moscow', Age: 25 };\n$.ajax({\n    url: 'Ajax.ashx',\n    type: 'POST',\n    data: JSON.stringify(arr),\n    contentType: 'application/json; charset=utf-8',\n    dataType: 'json',\n    async: false,\n    success: function(msg) {\n        alert(msg);\n    }\n});\n</code></pre>\n\n<p>Things to notice:</p>\n\n<ul>\n<li>Usage of the <code>JSON.stringify</code> method to convert a javascript object into a JSON string which is native and built-into modern browsers. If you want to support older browsers you might need to include <a href=\"http://www.json.org/js.html\">json2.js</a></li>\n<li>Specifying the request content type using the <code>contentType</code> property in order to indicate to the server the intent of sending a JSON request</li>\n<li>The <code>dataType: 'json'</code> property is used for the response type you expect from the server. jQuery is intelligent enough to <em>guess</em> it from the server <code>Content-Type</code> response header. So if you have a web server which respects more or less the HTTP protocol and responds with <code>Content-Type: application/json</code> to your request jQuery will automatically parse the response into a javascript object into the <code>success</code> callback so that you don't need to specify the <code>dataType</code> property.</li>\n</ul>\n\n<p>Things to be careful about:</p>\n\n<ul>\n<li>What you call <code>arr</code> is <strong>not an array</strong>. It is a javascript object with properties (<code>City</code> and <code>Age</code>). Arrays are denoted with <code>[]</code> in javascript. For example <code>[{ City: 'Moscow', Age: 25 }, { City: 'Paris', Age: 30 }]</code> is an array of 2 objects.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>Checkout \"stringify\", here: <a href=\"http://www.json.org/js.html\" rel=\"nofollow\">json.org</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Because by default jQuery serializes objects passed as the <code>data</code> parameter to <code>$.ajax</code>.  It uses <a href=\"http://api.jquery.com/jquery.param\" rel=\"nofollow\"><code>$.param</code></a> to convert the data to a query string.</p>\n\n<p>From the jQuery docs for <a href=\"http://api.jquery.com/jquery.ajax\" rel=\"nofollow\"><code>$.ajax</code></a>:</p>\n\n<blockquote>\n  <p>[the <code>data</code> argument] is converted to a query string, if not already a string</p>\n</blockquote>\n\n<p>If you want to send JSON, you'll have to encode it yourself:</p>\n\n<pre><code>data: JSON.stringify(arr);\n</code></pre>\n\n<p>Note that <code>JSON.stringify</code> is only present in modern browsers. For legacy support, look into <a href=\"https://github.com/douglascrockford/JSON-js\" rel=\"nofollow\">json2.js</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It gets serialized so that the URI can read the name value pairs in the POST request by default. You could try setting processData:false to your list of params. Not sure if that would help.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need to set the correct content type and stringify your object.</p>\n\n<pre><code> var arr = {City:'Moscow', Age:25};\n $.ajax(\n\n            {\n                url: \"Ajax.ashx\",\n                type: \"POST\",\n                data: JSON.stringify(arr),\n                dataType: 'json',\n                async: false,\n                contentType: 'application/json; charset=utf-8',\n                success: function(msg) {\n                    alert(msg);\n                }\n            }\n        );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I wrote a short convenience function for posting JSON.</p>\n\n<pre><code>$.postJSON = function(url, data, success, args) {\n  args = $.extend({\n    url: url,\n    type: 'POST',\n    data: JSON.stringify(data),\n    contentType: 'application/json; charset=utf-8',\n    dataType: 'json',\n    async: true,\n    success: success\n  }, args);\n  return $.ajax(args);\n};\n\n$.postJSON('test/url', data, function(result) {\n  console.log('result', result);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Why code below sent data as \"City=Moscow&amp;Age=25\" instead of JSON format?</p>\n\n<pre><code>var arr = {City:'Moscow', Age:25};\n$.ajax(\n   {\n        url: \"Ajax.ashx\",\n        type: \"POST\",\n        data: arr,\n        dataType: 'json',\n        async: false,\n        success: function(msg) {\n            alert(msg);\n        }\n    }\n);\n</code></pre>\n",
            "last_activity_date": 1382442272,
            "question_id": 6587221,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "ajax"
            ],
            "title": "Send json data with jquery"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>You can simplify it somewhat by changing the first two lines of the function to this:</p>\n\n<pre><code>var matches = this.match(/^([0-9]{2})\\/([0-9]{2})\\/([0-9]{4})$/);\n</code></pre>\n\n<p>Or, just change the parameter to the RegExp constructor to be </p>\n\n<pre><code>^([0-9]{2})\\/([0-9]{2})\\/([0-9]{4})$\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>what isn't working about it? here's a tested version:</p>\n\n<pre><code>String.prototype.isValidDate = function()   {\n\n    var match   =   this.match(/^([0-9]{2})\\/([0-9]{2})\\/([0-9]{4})$/);\n    var test    =   new Date(match[3], match[1] - 1, match[2]);\n    return (\n        (test.getMonth() == match[1] - 1) &amp;&amp;\n        (test.getDate() == match[2]) &amp;&amp;\n        (test.getFullYear() == match[3])\n    );\n}\n\nvar date = '12/08/1984'; // Date() is 'Sat Dec 08 1984 00:00:00 GMT-0800 (PST)'\nalert(date.isValidDate() ); // true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I use this regex for validating MM-DD-YYYY:</p>\n\n<pre><code>function isValidDate(subject){\n  if (subject.match(/^(?:(0[1-9]|1[012])[\\- \\/.](0[1-9]|[12][0-9]|3[01])[\\- \\/.](19|20)[0-9]{2})$/)){\n    return true;\n  }else{\n    return false;\n  }\n}\n</code></pre>\n\n<p>It will match only valid months and you can use / - or . as separators.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>function isValidDate(date)\n{\n    var matches = /^(\\d{2})[-\\/](\\d{2})[-\\/](\\d{4})$/.exec(date);\n    if (matches == null) return false;\n    var d = matches[2];\n    var m = matches[1] - 1;\n    var y = matches[3];\n    var composedDate = new Date(y, m, d);\n    return composedDate.getDate() == d &amp;&amp;\n            composedDate.getMonth() == m &amp;&amp;\n            composedDate.getFullYear() == y;\n}\nconsole.log(isValidDate('10-12-1961'));\nconsole.log(isValidDate('12/11/1961'));\nconsole.log(isValidDate('02-11-1961'));\nconsole.log(isValidDate('12/01/1961'));\nconsole.log(isValidDate('13-11-1961'));\nconsole.log(isValidDate('11-31-1961'));\nconsole.log(isValidDate('11-31-1061'));\n</code></pre>\n\n<p>It works. (Tested with Firebug, hence the console.log().)</p>\n",
                    "is_accepted": false,
                    "score": 50
                },
                {
                    "body": "<p>How about validating dates in \"ANY\" date format?  I've been using the DateJS library and adding it to existing forms to ensure that I get valid dates &amp; times formatted the way that I want.  The user can even enter things like \"now\" and \"tomorrow\" and it will be converted into a valid date.</p>\n\n<p>Here's the dateJS library:\n<a href=\"http://www.datejs.com/\" rel=\"nofollow\">http://www.datejs.com/</a></p>\n\n<p>and here's a jQuery tip that I wrote:\n<a href=\"http://www.ssmedia.com/utilities/jquery/index.cfm/datejs.htm\" rel=\"nofollow\">http://www.ssmedia.com/utilities/jquery/index.cfm/datejs.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>function isValidDate(date) {\n        var valid = true;\n\n        date = date.replace('/-/g', '');\n\n        var month = parseInt(date.substring(0, 2),10);\n        var day   = parseInt(date.substring(2, 4),10);\n        var year  = parseInt(date.substring(4, 8),10);\n\n        if((month &lt; 1) || (month &gt; 12)) valid = false;\n        else if((day &lt; 1) || (day &gt; 31)) valid = false;\n        else if(((month == 4) || (month == 6) || (month == 9) || (month == 11)) &amp;&amp; (day &gt; 30)) valid = false;\n        else if((month == 2) &amp;&amp; (((year % 400) == 0) || ((year % 4) == 0)) &amp;&amp; ((year % 100) != 0) &amp;&amp; (day &gt; 29)) valid = false;\n        else if((month == 2) &amp;&amp; ((year % 100) == 0) &amp;&amp; (day &gt; 29)) valid = false;\n\n    return valid;\n}\n</code></pre>\n\n<p>This checks for valid days in each month and for valid leap year days.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>pass this function to date with format //10-10-2012 and id of object.</p>\n\n<pre><code>function isValidDateFormat(date, id)\n{\n  var todayDate = new Date();\n  var matches = /^(\\d{2})[-\\/](\\d{2})[-\\/](\\d{4})$/.exec(date);\n\n  if (matches == null)\n  {\n   if(date != '__-__-____')\n    {\n      alert('Please enter valid date');\n    }\n  }\n  else\n  {\n    var day    = 31;\n    var month  = 12;\n    var b_date = date.split(\"-\");\n    if(b_date[0] &lt;= day)\n    {\n      if(b_date[1] &lt;= month)\n      {\n        if(b_date[2] &gt;= 1900 &amp;&amp; b_date[2] &lt;= todayDate.getFullYear())\n        {\n          return true;\n        }\n        else\n        {\n          $(\"#\"+id).val('');\n          alert('Please enter valid Year'); \n        }         \n      }\n      else\n      {\n        $(\"#\"+id).val('');\n        alert('Please enter valid Month');    \n      } \n    }\n    else\n    {\n      alert('Please enter valid Day');\n      $(\"#\"+id).val('');  \n    }\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Simple way to solve</p>\n\n<pre><code>var day = document.getElementById(\"DayTextBox\").value;\n\nvar regExp = /^([1-9]|[1][012])\\/|-([1-9]|[1][0-9]|[2][0-9]|[3][01])\\/|-([1][6-9][0-9][0-9]|[2][0][01][0-9])$/;\n\nreturn regExp.test(day);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is for validating the date string in formate dd.mm.yyyy It is easy to customize it. You just need to adjust the pos1 and pos2 in isValidDate(). </p>\n\n<p>var dtCh= \".\";\n    var minYear=1900;</p>\n\n<pre><code>function isInteger(s){\n    var i;\n    for (i = 0; i &lt; s.length; i++){   \n        // Check that current character is number.\n        var c = s.charAt(i);\n        if (((c &lt; \"0\") || (c &gt; \"9\"))) return false;\n    }\n    // All characters are numbers.\n    return true;\n}\n\nfunction stripCharsInBag(s, bag){\n    var i;\n    var returnString = \"\";\n    // Search through string's characters one by one.\n    // If character is not in bag, append to returnString.\n    for (i = 0; i &lt; s.length; i++){   \n        var c = s.charAt(i);\n        if (bag.indexOf(c) == -1) returnString += c;\n    }\n    return returnString;\n}\n\nfunction daysInFebruary (year){\n    // February has 29 days in any year evenly divisible by four,\n    // EXCEPT for centurial years which are not also divisible by 400.\n    return (((year % 4 == 0) &amp;&amp; ( (!(year % 100 == 0)) || (year % 400 == 0))) ? 29 : 28 );\n}\nfunction DaysArray(n) {\n    for (var i = 1; i &lt;= n; i++) {\n        this[i] = 31;\n        if (i==4 || i==6 || i==9 || i==11) {\n            this[i] = 30;\n        }\n        if (i==2) {\n            this[i] = 29;\n        }\n   } \n   return this;\n}\n\nfunction isValidDate(dtStr){\n    var daysInMonth = DaysArray(12);\n    var pos1=dtStr.indexOf(dtCh);\n    var pos2=dtStr.indexOf(dtCh,pos1+1);\n    var strDay=dtStr.substring(0,pos1);\n    var strMonth=dtStr.substring(pos1+1,pos2);\n    var strYear=dtStr.substring(pos2+1);\n    strYr=strYear;\n    if (strDay.charAt(0)==\"0\" &amp;&amp; strDay.length&gt;1) \n        strDay=strDay.substring(1);\n    if (strMonth.charAt(0)==\"0\" &amp;&amp; strMonth.length&gt;1) \n        strMonth=strMonth.substring(1);\n    for (var i = 1; i &lt;= 3; i++) {\n        if (strYr.charAt(0)==\"0\" &amp;&amp; strYr.length&gt;1) \n            strYr=strYr.substring(1);\n    }\n    month=parseInt(strMonth);\n    day=parseInt(strDay);\n    year=parseInt(strYr);\n    if (pos1==-1 || pos2==-1){\n        alert(\"The date format should be : dd.mm.yyyy\");\n        return false;\n    }\n    if (strMonth.length&lt;1 || month&lt;1 || month&gt;12){\n        alert(\"Please enter a valid month\");\n        return false;\n    }\n    if (strDay.length&lt;1 || day&lt;1 || day&gt;31 || (month==2 &amp;&amp; day&gt;daysInFebruary(year)) || day &gt; daysInMonth[month]){\n        alert(\"Please enter a valid day\");\n        return false;\n    }\n    if (strYear.length != 4 || year==0 || year&lt;minYear){\n        alert(\"Please enter a valid 4 digit year after \"+minYear);\n        return false;\n    }\n    if (dtStr.indexOf(dtCh,pos2+1)!=-1 || isInteger(stripCharsInBag(dtStr, dtCh))==false){\n        alert(\"Please enter a valid date\");\n        return false;\n    }\n    return true;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;script language = \"Javascript\"&gt;\n// Declaring valid date character, minimum year and maximum year\nvar dtCh= \"/\";\nvar minYear=1900;\nvar maxYear=2100;\n\nfunction isInteger(s){\n    var i;\n    for (i = 0; i &lt; s.length; i++){   \n        // Check that current character is number.\n        var c = s.charAt(i);\n        if (((c &lt; \"0\") || (c &gt; \"9\"))) return false;\n    }\n    // All characters are numbers.\n    return true;\n}\n\nfunction stripCharsInBag(s, bag){\n    var i;\n    var returnString = \"\";\n    // Search through string's characters one by one.\n    // If character is not in bag, append to returnString.\n    for (i = 0; i &lt; s.length; i++){   \n        var c = s.charAt(i);\n        if (bag.indexOf(c) == -1) returnString += c;\n    }\n    return returnString;\n}\n\nfunction daysInFebruary (year){\n    // February has 29 days in any year evenly divisible by four,\n    // EXCEPT for centurial years which are not also divisible by 400.\n    return (((year % 4 == 0) &amp;&amp; ( (!(year % 100 == 0)) || (year % 400 == 0))) ? 29 : 28 );\n}\nfunction DaysArray(n) {\n    for (var i = 1; i &lt;= n; i++) {\n        this[i] = 31\n        if (i==4 || i==6 || i==9 || i==11) {this[i] = 30}\n        if (i==2) {this[i] = 29}\n   } \n   return this\n}\n\nfunction isDate(dtStr){\n    var daysInMonth = DaysArray(12)\n    var pos1=dtStr.indexOf(dtCh)\n    var pos2=dtStr.indexOf(dtCh,pos1+1)\n    var strDay=dtStr.substring(0,pos1)\n    var strMonth=dtStr.substring(pos1+1,pos2)\n    var strYear=dtStr.substring(pos2+1)\n    strYr=strYear\n    if (strDay.charAt(0)==\"0\" &amp;&amp; strDay.length&gt;1) strDay=strDay.substring(1)\n    if (strMonth.charAt(0)==\"0\" &amp;&amp; strMonth.length&gt;1) strMonth=strMonth.substring(1)\n    for (var i = 1; i &lt;= 3; i++) {\n        if (strYr.charAt(0)==\"0\" &amp;&amp; strYr.length&gt;1) strYr=strYr.substring(1)\n    }\n    month=parseInt(strMonth)\n    day=parseInt(strDay)\n    year=parseInt(strYr)\n    if (pos1==-1 || pos2==-1){\n        alert(\"The date format should be : dd/mm/yyyy\")\n        return false\n    }\n    if (strMonth.length&lt;1 || month&lt;1 || month&gt;12){\n        alert(\"Please enter a valid month\")\n        return false\n    }\n    if (strDay.length&lt;1 || day&lt;1 || day&gt;31 || (month==2 &amp;&amp; day&gt;daysInFebruary(year)) || day &gt; daysInMonth[month]){\n        alert(\"Please enter a valid day\")\n        return false\n    }\n    if (strYear.length != 4 || year==0 || year&lt;minYear || year&gt;maxYear){\n        alert(\"Please enter a valid 4 digit year between \"+minYear+\" and \"+maxYear)\n        return false\n    }\n    if (dtStr.indexOf(dtCh,pos2+1)!=-1 || isInteger(stripCharsInBag(dtStr, dtCh))==false){\n        alert(\"Please enter a valid date\")\n        return false\n    }\nreturn true\n}\n\nfunction ValidateForm(){\n    var dt=document.frmSample.txtDateenter code here\n    if (isDate(dt.value)==false){\n        dt.focus()\n        return false\n    }\n    return true\n }\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Esta funcion te permite validar si una fecha es correcta o no en el formato DD/MM/YYYY</p>\n\n<p>English Translation: This function will validate the date to see if it's correct or if it's in the proper format of: DD/MM/YYYY.</p>\n\n<pre><code>/**\n * Esta funcion te permite validar si una fecha es correcta o no en el formato DD/MM/YYYY\n * Ej.:\n * console.log(isValidDate('10-12-1961'));\n * console.log(isValidDate('12/11/1961'));\n * console.log(isValidDate('02-11-1961'));\n * console.log(isValidDate('12/01/1961'));\n * console.log(isValidDate('13-11-1961'));\n * console.log(isValidDate('11-31-1961'));\n * console.log(isValidDate('11-31-1061'));\n *\n */\nfunction isValidDate(date)\n{\n    var matches = /^(\\d{2})[-\\/](\\d{2})[-\\/](\\d{4})$/.exec(date);\n    if (matches == null) return false;\n    var d = matches[1];\n    var m = matches[2]-1;\n    var y = matches[3];\n    var composedDate = new Date(y, m, d);\n    return composedDate.getDate() == d &amp;&amp;\n           composedDate.getMonth() == m &amp;&amp;\n           composedDate.getFullYear() == y;\n}\nconsole.log(isValidDate('10-12-1961'));\nconsole.log(isValidDate('12/11/1961'));\nconsole.log(isValidDate('02-11-1961'));\nconsole.log(isValidDate('12/01/1961'));\nconsole.log(isValidDate('13-11-1961'));\nconsole.log(isValidDate('11-31-1961'));\nconsole.log(isValidDate('11-31-1061'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would use <a href=\"http://momentjs.com/\" rel=\"nofollow\">Moment.js</a> for this task. It makes it <em>very easy</em> to parse dates and it also provides support to detect a an invalid date<sup>1</sup> in the correct format. For instance, consider <a href=\"http://jsfiddle.net/ygqgz/\" rel=\"nofollow\">this example</a>:</p>\n\n<pre><code>var formats = ['MM-DD-YYYY', 'MM/DD/YYYY']\n\nmoment('11/28/1981', formats).isValid()  // true\nmoment('2-29-2003', formats).isValid()   // false (not leap year)\nmoment('2-29-2004', formats).isValid()   // true  (leap year)\n</code></pre>\n\n<p>First <code>moment(.., formats)</code> is used to parse the input according to the localized format supplied. Then the <code>isValid</code> function is called on the resulting moment object so that we can actually tell if it is a <em>valid</em> date.</p>\n\n<p>This can be used to trivially derive the isValidDate method:</p>\n\n<pre><code>String.prototype.isValidDate = function() {\n    var formats = ['MM-DD-YYYY', 'MM/DD/YYYY'];\n    return moment(\"\" + this, formats).isValid();\n}\n</code></pre>\n\n<hr>\n\n<p><sup>1</sup> As I can find scarce little commentary on the matter, I would only use moment.js for dates covered by the <a href=\"http://en.wikipedia.org/wiki/Gregorian_calendar\" rel=\"nofollow\">Gregorian calendar</a>. There may be plugins for other (including historical or scientific) calendars.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>if (document.getElementById('expiryDay').value != test(match(\"/^([0-9]{2})\\/([0-9]{2})$/\"))){\n     alert(\"Enter the date in two digit month flowed by two digits year \\n\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I saw a potential answer here but that was for YYYY-MM-DD:\n<a href=\"http://paulschreiber.com/blog/2007/03/02/javascript-date-validation/\">http://paulschreiber.com/blog/2007/03/02/javascript-date-validation/</a></p>\n\n<p>I modified the code code above for MM-DD-YYYY like so but I still can't get it to work:</p>\n\n<pre><code>String.prototype.isValidDate = function() \n{\n     var IsoDateRe = new RegExp(\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\");\n     var matches = IsoDateRe.exec(this);\n     if (!matches) return false;\n     var composedDate = new Date(matches[3], (matches[1] - 1), matches[2]);\n     return ((composedDate.getMonth() == (matches[1] - 1)) &amp;&amp;\n      (composedDate.getDate() == matches[2]) &amp;&amp;\n      (composedDate.getFullYear() == matches[3]));\n}\n</code></pre>\n\n<p>How can I get the above code to work for MM-DD-YYYY and better yet MM/DD/YYYY?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1403091151,
            "question_id": 276479,
            "score": 18,
            "tags": [
                "javascript",
                "validation",
                "date"
            ],
            "title": "Javascript: how to validate dates in format MM-DD-YYYY?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>This is a bit of a hack, but you could try loading the gif into an iframe and calling <code>window.stop()</code> from inside the iframe (on itself) once the image has loaded. This prevents the rest of the page from stopping.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Could try this...</p>\n\n<pre><code>var img = document.getElementById('animatedgif');\nsetInterval(function() { img.src = img.src; }, 1);\n</code></pre>\n\n<p>You could probably include an interval value of ~15 ms without seeing any animation for most gifs. Works in Chrome at least...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is not a cross browser solution but this worked in firefox and opera (not in ie8 :-/). Taken <a href=\"http://userscripts.org/scripts/review/80588\">from here</a></p>\n\n<pre><code>[].slice.apply(document.images).filter(is_gif_image).map(freeze_gif);\n\nfunction is_gif_image(i) {\n    return /^(?!data:).*\\.gif/i.test(i.src);\n}\n\nfunction freeze_gif(i) {\n    var c = document.createElement('canvas');\n    var w = c.width = i.width;\n    var h = c.height = i.height;\n    c.getContext('2d').drawImage(i, 0, 0, w, h);\n    try {\n        i.src = c.toDataURL(\"image/gif\"); // if possible, retain all css aspects\n    } catch(e) { // cross-domain -- mimic original with all its tag attributes\n        for (var j = 0, a; a = i.attributes[j]; j++)\n            c.setAttribute(a.name, a.value);\n        i.parentNode.replaceChild(c, i);\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>Inspired by the answer of @Karussell I wrote Gifffer. Check it out here <a href=\"https://github.com/krasimir/gifffer\" rel=\"nofollow\">https://github.com/krasimir/gifffer</a></p>\n\n<p>It automatically adds stop/play control on top of your Gif.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I an attempt to improve on Karussell's answer, this version should be cross-browser, freezes all images including those that have an incorrect file ending (e.g. automated image loading pages), and does not conflict with the function of the original image, allowing the original to be interacted with as if it were moving.</p>\n\n<p>I would make it detect animation but that is much more intensive than just freezing them regardless.</p>\n\n<pre><code>function createElement(type, callback) {\n    var element = document.createElement(type);\n\n    callback(element);\n\n    return element;\n}\n\nfunction freezeGif(img) {\n    var width = img.width,\n    height = img.height,\n    canvas = createElement('canvas', function(clone) {\n        clone.width = width;\n        clone.height = height;\n    }),\n    attr,\n    i = 0;\n\n    var freeze = function() {\n        canvas.getContext('2d').drawImage(img, 0, 0, width, height);\n\n        for (i = 0; i &lt; img.attributes.length; i++) {\n            attr = img.attributes[i];\n\n            if (attr.name !== '\"') { // test for invalid attributes\n                canvas.setAttribute(attr.name, attr.value);\n            }\n        }\n\n        canvas.style.position = 'absolute';\n\n        img.parentNode.insertBefore(canvas, img);\n        img.style.opacity = 0;\n    };\n\n    if (img.complete) {\n        freeze();\n    } else {\n        img.addEventListener('load', freeze, true);\n    }\n}\n\nfunction freezeAllGifs() {\n    return new Array().slice.apply(document.images).map(freezeGif);\n}\n\nfreezeAllGifs();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am developing a Twitter application which references to the images directly from Twitter.\nHow can I prevent animated gifs from being played?</p>\n\n<p>Using <code>window.stop()</code> at the end of the page does not work for me in Firefox.</p>\n\n<p>Is there a better JavaScript hack? Preferable this should work for all browsers</p>\n",
            "last_activity_date": 1405115266,
            "question_id": 3688460,
            "score": 17,
            "tags": [
                "javascript",
                "html",
                "animated-gif"
            ],
            "title": "Stopping GIF Animation Programmatically"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I'm not sure this will answer your question but may give you some insight. Consider the following example:</p>\n\n<pre><code>var Person = (function () {\n    var Person = function (name) {\n        this.name = name;\n    }\n\n    Person.greet = function () {\n        console.log(\"Hello!\");\n    }\n\n    Person.prototype = {\n        greet: function () {\n            console.log('Hello, my name is ' + this.name);\n        }\n    };\n    return Person;\n})();\n\nvar bob = new Person(\"Bob\");\n\nPerson.greet(); // logs \"Hello!\"\nbob.greet(); // logs \"Hello, my name is Bob\n</code></pre>\n\n<p>The function object \"Person\" has a direct 'greet' property that is a Function. OOP-wise, you can almost think of that as a static method that can be called directly from the Person Function (Person.greet()). Once you \"instantiate\" a person object from the Person constructor, that new object \"bob\" now references it's methods from the Person.prototype object. Now when you call bob.greet(), it uses the greet function in the prototype object.</p>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>No, your last code only makes sense if you used <code>addNum</code> as a constructor function:</p>\n\n<pre><code>var instance = new addNum();\ninstance.divide();\n</code></pre>\n\n<p>However, because functions are objects, the following would be valid:</p>\n\n<pre><code>var addNum = function(num1, num2) {\n        return num1 + num2;\n}\naddNum.divide = function() {}\n</code></pre>\n\n<p>In this case <code>divide</code> would be a property of <code>addNum</code> itself, not of one of its prototypes.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To understand prototypal inheritance is somewhat obscure at first, but think of it as the name suggests, there are a few prototypes in javascript and Function is one of them.</p>\n\n<p>whenever you create a new function you can check it's type by <code>typeof</code> command for your case</p>\n\n<p>var a = function(a,b) { return a + b; }</p>\n\n<p>it would return <code>\"function\"</code> so there are two ways to add to your <code>a</code> variable more method, one would be as @Keith Morris suggested, to create a new constructor and have it's methods inside and return it, that is also the preferred way because then you don't pollute the basic objects with prototypal methods which are extended to each and every object that is represented by them.</p>\n\n<p>meaning:</p>\n\n<p>if I instead do this</p>\n\n<p>Function.prototype.divide = function(a, b) { return a / b; }</p>\n\n<p>I now can do <code>a.divide(2, 1);</code> and it would return <code>2</code> but for example if I use <code>jQuery</code> and do <code>jQuery.divide(2,1)</code> I will also get <code>2</code> because it tries to find it in the immediate scope of the function and if not it will go to the prototype of it.\nHope it explained it better.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As you say so yourself: <em>you have a function <strong>object</em></strong>. Functions are objects in JS, just like Object literals, arrays, or anything else: a function can be assigned properties and methods at will:</p>\n\n<pre><code>var someAnonFunction = function(foo)\n{\n    console.log(this);\n    console.log(this === someAnonFunction);//will be false most of the time\n};\nsomeAnonFunction.x = 123;//assign property\nsomeAnonFunction.y = 312;\nsomeAnonFunction.divide = function()\n{\n    console.log(this === someAnonFunction);//will be true most of the time\n    return this.x/this.y;//divide properties x &amp; y\n};\nsomeAnonFunction.divide();\n</code></pre>\n\n<p>In this case, the function object, referenced by <code>someAnonFunction</code> has been assigned a reference to the anonymous function, called <code>divide</code> (well, the reference to an anonymous function was dubbed divide anyway). So there is no prototype involvement at all here. Mind you, as you say so yourself: all objects can be traced back to <code>Object.prototype</code>, just try this:</p>\n\n<pre><code>console.log(someAnonFunction.toString === Function.prototype.toString);//functions are stringified differently than object literals\nconsole.log(someAnonFunction.hasOwnProperty === Object.prototype.hasOwnProperty);//true\n</code></pre>\n\n<p>Or, perhaps this is more clear: a simple scheme of how a method/property call is resolved to a value in JS:</p>\n\n<pre><code>[      F.divide      ]&lt;=========================================================\\ \\\nF[divide] ===&gt; JS checks instance for property divide                           | |\n /\\ ||                                                                          | |\n || || --&gt; property found @instance, return value-------------------------------| |\n || ||                                                                          | |\n || ===========&gt; Function.prototype.divide could not be found, check prototype  | |\n ||      ||                                                                     | |\n ||      ||--&gt; property found @Function.prototype, return-----------------------| |\n ||      ||                                                                     | |\n ||      ==========&gt; Object.prototype.divide: not found check prototype?        | |\n ||          ||                                                                 | |\n ||          ||--&gt; property found @Object.prototype, return---------------------|_|\n ||          ||                                                                 |=|\n ||          =======&gt;prototype is null, return \"undefined.divide\"~~~~~~~~~~~~~~~|X|\n ||                                                                             \\ /\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt; TypeError can't read property 'x' of undefined\n</code></pre>\n\n<p>It therefore follows, that if you want the code above to work using prototypes, you'll have to augment a prototype of sorts (in this case, the <code>Function.prototype</code>). Do know that this isn't to be recommended, in fact changing <em>\"native\"</em> prototypes is often frowned upon. Still:</p>\n\n<pre><code>Function.prototype.divide = function (a, b)\n{\n    a = +(a || 0);//coerce to number, use default value\n    b = +(b || 1) || 1;//division by zeroe is not allowed, default to 1\n    return a/b;\n};\nfunction someFunction ()\n{\n    return 'someString';\n};\nvar another = function(a, b)\n{\n    return a + b;\n};\nsomeFunction.divide(12, 6);//will return 2\nanother.divide(12, 4);//3\n</code></pre>\n\n<p>In both cases, the function object, referenced by the name (<code>someFunction</code> or <code>another</code>) will be scanned for a property called <code>divide</code>, which isn't found. Then however it'll scan the <code>Function.prototype</code>, where such a property is found.<br/>\nIf that weren't the case, JS would also check the <code>Object.prototype</code>, if that failed, it will eventually throw an error.</p>\n\n<p>I've posted quite lengthy answers on SO on this subject a while back:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/14213074/what-makes-my-class-js-so-fast/14336037#14336037\">What makes my.class.js so fast?</a> (deals with prototype chains)<br/>\n<a href=\"http://stackoverflow.com/questions/13500101/objects-and-functions-in-javascript/13500475#13500475\">Objects and functions in javascript</a> (recap of functions &lt;=> objects &lt;=> constructors)<br/>\n<a href=\"http://stackoverflow.com/questions/13789559/what-are-the-differences-between-these-three-patterns-of-class-definitions-in/13790503#13790503\">What are the differences between these three patterns of &quot;class&quot; definitions in JavaScript?</a> (some more info, still)<br/>\n<a href=\"http://stackoverflow.com/questions/14701661/javascript-dynamically-change-the-contents-of-a-function/14701820#14701820\">Javascript - Dynamically change the contents of a function</a> (vaguely touches on the anonymous functions, assigned to variables and properties and changing their context)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can create <code>divide</code> as a [sort of a] <code>static</code> method:</p>\n\n<pre><code>var addNum = function(num1, num2) {\n  addNum.divide = function(){return num1/num2;};\n  return num1 + num2;\n}\n// now you first have to run addNum\nvar onethirds = addNum(1,3); //=&gt; 4\naddNum.divide(); //=&gt; 0.333333...\n</code></pre>\n\n<p>But it's not advisable. Better create a <a href=\"http://www.javascriptkit.com/javatutors/oopjs2.shtml\" rel=\"nofollow\">constructor</a> function:</p>\n\n<pre><code>function Pair(n1,n2){\n   n1 = n1 || 1;\n   n2 = n2 || 1;\n   // create instance methods\n   this.add      = function(){return n1+n2;};\n   this.divide   = function(){return n1/n2;};\n   this.multiply = function(){return n1*n2;}\n}\nvar pair1 = new Pair(2,6)\n   ,pair2 = new Pair(1,2);\npair1.add();    //=&gt; 8\npair2.divide(); //=&gt; 0.5\n//etc.\n</code></pre>\n\n<p>or a more prototypal approach (methods are added to the constructor prototype, not to every instance):</p>\n\n<pre><code>function Pair(n1,n2){\n   this.n1 = n1 || 1;\n   this.n2 = n2 || 1;\n   // create prototype methods (once)\n   if (!Pair.prototype.add){\n    var proto      = Pair.prototype;\n    proto.add      = function(){return this.n1+this.n2;};\n    proto.divide   = function(){return this.n1/this.n2;};\n    proto.multiply = function(){return this.n1*this.n2;}\n   }\n}\n</code></pre>\n\n<p><a href=\"http://blog.vjeux.com/2011/javascript/how-prototypal-inheritance-really-works.html\" rel=\"nofollow\">Reading stuff</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a JavaScript function object as;</p>\n\n<pre><code>var addNum = function(num1, num2) {\n        return num1 + num2;\n}\n</code></pre>\n\n<p>Now if I try to access </p>\n\n<pre><code>addNum.divide()\n</code></pre>\n\n<p>I wanted to understand the prototype chain for the above code. I read that in the above example, addNum would be searched for divide(), followed by Function.prototype and finally Object.prototype. </p>\n\n<p>But my question is in the above example, how can addNum would be searched for divide()</p>\n\n<p>Does it refer to something like ;</p>\n\n<pre><code>var addNum = function(num1, num2) {\n\nthis.divide = function(){}\n\n            return num1 + num2;\n    }\n</code></pre>\n\n<p>I could not understand the line where it says addNum would be searched for divide()</p>\n\n<p>Please help me understand the same.</p>\n",
            "last_activity_date": 1362229304,
            "question_id": 15174187,
            "score": 9,
            "tags": [
                "javascript",
                "oop",
                "prototype",
                "prototypal-inheritance"
            ],
            "title": "Properties of Javascript function objects"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I'm not aware of any Javascript libraries which can make an Excel file. But you could simply export it as HTML or CSV - note that Javascript cannot make files (yet), but the working draft of HTML caters for this: <a href=\"http://www.w3.org/TR/file-writer-api/\" rel=\"nofollow\">http://www.w3.org/TR/file-writer-api/</a></p>\n\n<p>Excel is quite good at reading tables made in HTML, so you could simply do that and open the HTML file with Excel.</p>\n\n<p>You can create a file for download using Downloadify: <a href=\"https://github.com/dcneiner/Downloadify\" rel=\"nofollow\">https://github.com/dcneiner/Downloadify</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think you're misunderstanding the answer to the question you linked to, it's suggesting you use a Data URI for export.</p>\n\n<p>Excel is a bit of a complicated target to aim for as the file format is itself binary (<a href=\"http://www.ecma-international.org/publications/standards/Ecma-376.htm\">or OOXML</a>).  If you just want something that opens <em>in</em> Excel then you can export the more straightforward CSV as a data URI.  The following code is a bit rough and ready and has only been tested in Firefox:</p>\n\n<pre><code>function exportData() {\n    var data = '';\n    for (var i=1;i&lt;=2;i++) {\n        var sep = '';\n        for (var j=1;j&lt;=4;j++) {\n            data +=  sep + document.getElementById(i + '_' + j).value;\n            sep = ',';\n        }\n        data += '\\r\\n';\n    }\n    var exportLink = document.createElement('a');\n    exportLink.setAttribute('href', 'data:text/csv;base64,' + window.btoa(data));\n    exportLink.appendChild(document.createTextNode('test.csv'));\n    document.getElementById('results').appendChild(exportLink);\n}\n</code></pre>\n\n<p>Here's the page markup:</p>\n\n<pre><code>&lt;input type=\"number\" id=\"1_1\" value=\"2\"&gt;,\n&lt;input type=\"number\" id=\"1_2\" value=\"1\"&gt;,\n&lt;input type=\"number\" id=\"1_3\" value=\"4\"&gt;,\n&lt;input type=\"number\" id=\"1_4\" value=\"3\"&gt;\n&lt;br&gt;\n&lt;input type=\"number\" id=\"2_1\" value=\"1\"&gt;,\n&lt;input type=\"number\" id=\"2_2\" value=\"2\"&gt;,\n&lt;input type=\"number\" id=\"2_3\" value=\"3\"&gt;,\n&lt;input type=\"number\" id=\"2_4\" value=\"4\"&gt;\n&lt;br&gt;\n&lt;button onclick=\"exportData()\"&gt;Export as CSV&lt;/button&gt;\n&lt;div id=\"results\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p><a href=\"http://www.boogdesign.com/examples/export.html\">Demo here</a>.  Click the button you get a link, click the link and you get a file.  Change the values, click the link again and you get a different file.  Firefox made me select Excel every time to open it but I don't know whether that's my configuration or a general issue.</p>\n\n<p><img src=\"http://www.boogdesign.com/images/external/data-uri-csv.png\" alt=\"CSV in Excel 2007\"></p>\n\n<p>Like I said, only tested in Firefox, and it will only work in browsers which support <a href=\"http://en.wikipedia.org/wiki/Data_URI_scheme\">Data URIs</a>.  You also need the <a href=\"https://developer.mozilla.org/en/DOM/window.btoa\">window.btoa() function</a> or implement your own <a href=\"http://code.google.com/p/stringencoders/source/browse/trunk/javascript/base64.js?r=210\">base64 encoder</a>.</p>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p><a href=\"http://stackoverflow.com/questions/2845603/import-export-html5-localstorage-data\">This question</a> is similar, but doesn't highlight any possibilities to <em>export</em> the data. Thoughts?</p>\n",
            "last_activity_date": 1358161241,
            "question_id": 3286423,
            "score": 8,
            "tags": [
                "javascript",
                "excel",
                "html5",
                "local-storage"
            ],
            "title": "Is it possible to use any HTML5 fanciness to export local storage to Excel?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>yes.. this should work on all major browsers</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>Alternative: <a href=\"http://www.thecssninja.com/css/even-better-image-preloading-with-css2\" rel=\"nofollow\">http://www.thecssninja.com/css/even-better-image-preloading-with-css2</a></p>\n\n<pre><code>body:after {\n  content: url(img01.jpg) url(img02.jpg) url(img03.jpg);\n  display: none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Yes it does, If you are wanting a little load page as well try the link below</p>\n\n<p><a href=\"http://stackoverflow.com/questions/13982789/cache-dynamic-images-from-array-before-page-loads-using-javascript\">Cache dynamic images from array before page loads using javascript</a> - Includes a demo</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This approach is a little more elaborate. Here you store all preloaded images in a container, may be a div. And after you could show the images or move it within the DOM to the correct position.</p>\n\n<pre><code>function preloadImg(containerId, imgUrl, imageId) {\n    var i = document.createElement('img'); // or new Image()\n    i.id = imageId;\n    i.onload = function() {\n         var container = document.getElementById(containerId);\n         container.appendChild(this);\n    };\n    i.src = imgUrl;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/qwxj8/2/\">Try it here</a>, I have also added few comments</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I recommend you use a try/catch to prevent some possible issues:</p>\n\n<p>OOP:</p>\n\n<pre><code>    var preloadImage = function (url) {\n        try {\n            var _img = new Image();\n            _img.src = url;\n        } catch (e) { }\n    }\n</code></pre>\n\n<p>Standard:</p>\n\n<pre><code>    function preloadImage (url) {\n        try {\n            var _img = new Image();\n            _img.src = url;\n        } catch (e) { }\n    }\n</code></pre>\n\n<p>Also, while I love DOM, old stupid browsers may have problems with you using DOM, so avoid it altogether IMHO contrary to freedev's contribution. Image() has better support in old trash browsers.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Can you tell me if the function I wrote below is enough to preload images in most if not all browsers commonly used today?</p>\n\n<pre><code>function preloadImage(url)\n{\n    var img=new Image();\n    img.src=url;\n}\n</code></pre>\n\n<p>I have an array of imageURLs that I loop and call the preloadImage function for each URL.</p>\n\n<p>Thank you.</p>\n",
            "last_activity_date": 1421879714,
            "question_id": 3646036,
            "score": 62,
            "tags": [
                "javascript",
                "image",
                "preload",
                "confirmation"
            ],
            "title": "JavaScript Preloading Images"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Yes, the page will load the content and render it before loading and executing javascript, and the page will, as a result, load faster.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Assuming you aren't running on a CDN or aren't serving your JS from a separate sub-domain or server, it will load synchronously and force your HTML content to wait until it has downloaded the files. By placing the JS at the bottom of your page before the closing <code>&lt;/body&gt;</code> tag, you are allowing the HTML to be parsed prior to loading the javascript.  <strong>This gives the effect of faster page load times.</strong></p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>It'll allow the web page to load visibly before executing JavaScript, which makes sense for things like Google Analytics, which don't need to happen before the page loads.</p>\n\n<p>You may also want to look into things like jQuery, prototype, etc and attach to the \"ready\" handler, which executes JavaScript code after the DOM has been fully loaded, which is an appropriate place for much JavaScript code.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>If you have static html content and a lot of javascript, it can make a difference in perceived page load time since the html will load first giving the user something to look at.  If you don't have much javascript, or the existing page content relies on the javascript to be useful, then this is not as useful practically-speaking.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I want to bring update to this topic, google has recently introduced async snipped <a href=\"http://support.google.com/analytics/bin/answer.py?hl=en&amp;answer=1008080&amp;rd=1\" rel=\"nofollow\">http://support.google.com/analytics/bin/answer.py?hl=en&amp;answer=1008080&amp;rd=1</a> which can be added for your site to bring e.g. google statistics support. It should be placed bottom of the <code>&lt;head&gt;</code> section for best performance. The point is that this increases likely hood of tracking beacon to be sent before user leaves the page.</p>\n\n<p>Also it should be located there if you want to verify your site in google webmaster tools using your google analytics.</p>\n\n<p>Other than that, same rules still applies basically - javascript at bottom for \"fast\" loading of the page. I used quotes because I dont count page fully loaded until javascript finishes ;-)</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I was just using the plugin \"Yslow\" for Mozilla Firefox, and it told me that I should put JavaScript at the bottom.  I have heard this before but haven't really thought about it too much.  Is there really an advantage in putting JavaScript at the bottom of a web page compared to the top?</p>\n",
            "last_activity_date": 1351176382,
            "question_id": 1638670,
            "score": 42,
            "tags": [
                "javascript",
                "webpage"
            ],
            "title": "JavaScript at bottom/top of web page?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><em><strong>Edit</strong>: in lieu of my own answer, this one is quite excellent: <a href=\"http://stackoverflow.com/questions/570960/how-to-debug-javascript-jquery-event-bindings-with-firebug-or-similar-tool\">How to debug Javascript/jQuery event bindings with FireBug (or similar tool)</a></em></p>\n\n<p>Google Chromes developer tools has a search function built into the scripts section</p>\n\n<p>If you are unfamiliar with this tool: (just in case)</p>\n\n<ul>\n<li>right click anywhere on a page (in chrome)</li>\n<li>click 'Inspect Element'</li>\n<li>click the 'Scripts' tab</li>\n<li>Search bar in the top right</li>\n</ul>\n\n<p>Doing a quick search for the #ID should take you to the binding function eventually.</p>\n\n<p>Ex: searching for <code>#foo</code> would take you to </p>\n\n<pre><code>$('#foo').click(function(){ alert('bar'); })\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/NFeLt.jpg\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Using <strong>Chrome 15.0.865.0 dev</strong>. There's an \"Event Listeners\" section on the Elements panel:</p>\n\n<p><img src=\"http://i.stack.imgur.com/ATeg8.png\" alt=\"enter image description here\"></p>\n\n<p>And an \"Event Listeners Breakpoints\" on the Scripts panel. Use a Mouse -> click breakpoint and then \"step into next function call\" while keeping an eye on the call stack to see what userland function handles the event. Ideally, you'd replace the minified version of jQuery with an unminified one so that you don't have to <em>step in</em> all the time, and use <em>step over</em> when possible.</p>\n\n<p><img src=\"http://i.stack.imgur.com/FxqpX.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>You can also use Chrome's inspector to find attached events another way, as follows: </p>\n\n<ol>\n<li>Right click on the element to inspect, or find it in the 'Elements' pane.</li>\n<li>Then in the 'Event Listeners' tab/pane, expand the event (eg 'click')</li>\n<li>Expand the various sub-nodes to find the one you want, and then look for where the 'handler' sub-node is.</li>\n<li>Right click the word 'function', and then click 'Show function definition'</li>\n</ol>\n\n<p>This will take you to where the handler was defined, as demonstrated in the following image, and explained by Paul Irish here: <a href=\"https://groups.google.com/forum/#!topic/google-chrome-developer-tools/NTcIS15uigA\" rel=\"nofollow\">https://groups.google.com/forum/#!topic/google-chrome-developer-tools/NTcIS15uigA</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/nda3f.png\" alt=\"&#39;Show Function definition&#39;\"></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Let suppose I've a link on my page:</p>\n\n<pre><code>&lt;a href=\"#\" id=\"foo\"&gt;Click Here&lt;/a&gt;\n</code></pre>\n\n<p>I don't know anything else, but when I click on the link, an alert(\"bar\") is displayed.\nSo I know that somewhere, some code is getting binded to #foo.</p>\n\n<p>How can I find the code that is binding the alert(\"bar\") to the click event ?\nI'm looking for a solution with Chrome.</p>\n\n<p>Ps.: The example is fictive, so I'm not looking for solution like: \"Use XXXXXX and search the whole project for \"alert(\\\"bar\\\")\". I want a real debugging/tracing solution.</p>\n",
            "last_activity_date": 1407734890,
            "question_id": 7338193,
            "score": 36,
            "tags": [
                "javascript",
                "debugging",
                "google-chrome",
                "javascript-events",
                "inspector"
            ],
            "title": "Using Chrome, how to find who&#39;s binded to an event?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>You only need one temporary variable.</p>\n\n<pre><code>var b = list[y];\nlist[y] = list[x];\nlist[x] = b;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p>Well, you don't need to buffer <em>both</em> values - only one:</p>\n\n<pre><code>var tmp = list[x];\nlist[x] = list[y];\nlist[y] = tmp;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>With numeric values you can avoid a temporary variable by using bitwise xor</p>\n\n<pre><code>list[x] = list[x] ^ list[y];\nlist[y] = list[y] ^ list[x];\nlist[x] = list[x] ^ list[y];\n</code></pre>\n\n<p>or an arithmetic sum (noting that this only works if x + y is less than the maximum value for the data type)</p>\n\n<pre><code>list[x] = list[x] + list[y];\nlist[y] = list[x] - list[y];\nlist[x] = list[x] - list[y];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This seems ok....</p>\n\n<pre><code>var b = list[y];\nlist[y] = list[x];\nlist[x] = b;\n</code></pre>\n\n<p>Howerver using </p>\n\n<pre><code>var b = list[y];\n</code></pre>\n\n<p>means a <strong>b</strong> variable is going to be to be present for the rest of the scope. This can potentially lead to a memory leak. Unlikely, but still better to avoid.</p>\n\n<p>Maybe a good idea to put this into Array.prototype.swap</p>\n\n<pre><code>Array.prototype.swap = function (x,y) {\n  var b = this[x];\n  this[x] = this[y];\n  this[y] = b;\n  return this;\n}\n</code></pre>\n\n<p>which can be called like:</p>\n\n<pre><code>list.swap( x, y )\n</code></pre>\n\n<p>This is a clean approach to both <strong>avoiding memory leaks</strong> and <a href=\"http://en.wikipedia.org/wiki/Don%27t%5Frepeat%5Fyourself\"><strong>DRY</strong></a>.</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>If you want a single expression, using native javascript, \nremember that the return value from a splice operation \ncontains the element(s) that was removed.</p>\n\n<pre><code>var A = [1, 2, 3, 4, 5, 6, 7, 8, 9], x= 0, y= 1;\nA[x] = A.splice(y, 1, A[x])[0];\nalert(A); // alerts \"2,1,3,4,5,6,7,8,9\"\n</code></pre>\n\n<p><em>Edit:</em></p>\n\n<p>The <code>[0]</code> is necessary at the end of the expression as <code>Array.splice()</code> returns an array, and in this situation we require the single element in the returned array.</p>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>Digest from <a href=\"http://www.greywyvern.com/?post=265\">http://www.greywyvern.com/?post=265</a></p>\n\n<pre><code>var a = 5, b = 9;    \nb = (a += b -= a) - b;    \nalert([a, b]); // alerts \"9, 5\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>var a = [1,2,3,4,5], b=a.length;\n\nfor (var i=0; i&lt;b; i++) {\n    a.unshift(a.splice(1+i,1).shift());\n}\na.shift();\n//a = [5,4,3,2,1];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To swap two consecutive elements of array</p>\n\n<pre><code>array.splice(IndexToSwap,2,array[IndexToSwap+1],array[IndexToSwap]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>According to <a href=\"http://ask.metafilter.com/170451/How-do-I-swap-two-variables-with-a-function-in-Javascript#2452701\" rel=\"nofollow\">some random person on Metafilter</a>,\n\"Recent versions of Javascript allow you to do swaps (among other things) much more neatly:\"</p>\n\n<pre><code>[ list[x], list[y] ] = [ list[y], list[x] ];\n</code></pre>\n\n<p>My quick tests showed that this <a href=\"http://stackoverflow.com/questions/4554130/fastest-way-to-swap-elements-in-python-list\">Pythonic code</a> works great in the version of JavaScript\ncurrently used in \"Google Apps Script\" (\".gs\").\nAlas, further tests show this code gives a \"Uncaught ReferenceError: Invalid left-hand side in assignment.\" in\nwhatever version of JavaScript (\".js\") is used by\nGoogle Chrome Version 24.0.1312.57 m.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's a compact version \nswaps value at i1 with i2 in arr</p>\n\n<pre><code>arr.slice(0,i1).concat(arr[i2],arr.slice(i1+1,i2),arr[i1],arr.slice(i2+1))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can swap any number of objects or literals, even of different types, using a simple identity function like this:</p>\n\n<pre><code>var swap = function (x){return x};\nb = swap(a, a=b);\nc = swap(a, a=b, b=c);\n</code></pre>\n\n<p>For your problem:</p>\n\n<pre><code>var swap = function (x){return x};\nlist[y]  = swap(list[x], list[x]=list[y]);\n</code></pre>\n\n<p>This works in JavaScript because it accepts additional arguments even if they are not declared or used.  The assignments <code>a=b</code> etc, happen after <code>a</code> is passed into the function.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is one interesting way of swaping:</p>\n\n<pre><code>var a = 1;\nvar b = 2;\n[a,b] = [b,a];\n</code></pre>\n\n<p>(javascript>1.7)</p>\n\n<p><strong>Note</strong> : Tested in Mozilla 27, not working in Chrome 32.0.1700.107</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can swap elements in an array the following way:</p>\n\n<pre><code>list[x] = [list[y],list[y]=list[x]][0]\n</code></pre>\n\n<p>See the following example:</p>\n\n<pre><code>list = [1,2,3,4,5]\nlist[1] = [list[3],list[3]=list[1]][0]\n//list is now [1,4,3,2,5]\n</code></pre>\n\n<p>Note: it works the same way for regular variables</p>\n\n<pre><code>var a=1,b=5;\na = [b,b=a][0]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Is there any simpler way to swap two elements in an array?</p>\n\n<pre><code>var a = list[x], b = list[y];\nlist[y] = a;\nlist[x] = b;\n</code></pre>\n",
            "last_activity_date": 1408040861,
            "question_id": 872310,
            "score": 31,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "Javascript swap array elements"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Yes, objects can be used as maps, and any string can be a property name.  As you've discovered, some properties can <em>only</em> be accessed using the bracket syntax.</p>\n\n<pre><code>window['abc']\n</code></pre>\n\n<p>is accessing a property.  It is not a variable, even though it refers to the same value (at the global level) as:</p>\n\n<pre><code>abc\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Object property naming rules and variable naming rules are separate. The standard only \"reserves\" a handful of property names (such as <code>prototype</code> and <code>constructor</code>, IIRC), but other than those, any string goes.</p>\n\n<p>Except when the execution environment (i.e. the browser) decides to add more magic properties, of course. (I hear setting <code>__proto__</code> breaks some things in quite weird ways)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<ol>\n<li><p>Every time you create a global variable you create in fact a new member of a <strong>global object</strong> (which is <code>window</code> in browser environment, <code>global</code> in Node.js, etc.). This is why <code>window.x</code> is exactly the same like (global) <code>var x</code>, <code>this.x</code> or just <code>x</code>.</p></li>\n<li><p>Understanding JavaScript <strong>object like a map</strong> is quite right, because: a) you can add a new element dynamically - at any moment; b) the element can have any name - also including special characters, c) you can try to access a non-existing element of an object/map and it is not an error, d) you can remove an element from an object. </p></li>\n<li><p>If you like to access object members with standard <strong>dot notation</strong> (eg. <code>a.x</code>) you are not allowed to use any special characters different than _ or $; also the name cannot start from a number. For all other cases you are forced to use square brackets and quotation marks to access object elements. </p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm trying to work out what is considered valid for the property name of a javascript object.  For example</p>\n\n<pre><code>var b = {}\nb['-^colour'] = \"blue\";     // Works fine in Firefox, Chrome, Safari\nb['colour'] = \"green\";      // Ditto\nalert(b['-^colour']);       // Ditto\nalert(b.colour);            // Ditto\nfor(prop in b) alert(prop); // Ditto\n//alert(b.-^colour);     // Fails (expected)\n</code></pre>\n\n<p>This <a href=\"http://stackoverflow.com/questions/1661197/valid-characters-for-javascript-variable-names\">post</a> details valid javascript variable names, and '-^colour' is clearly not valid (as a variable name). Does the same apply to object property names? Looking at the above I'm trying to work out if</p>\n\n<ol>\n<li><p>b['-^colour'] is invalid, but works in all browsers by quirk, and I shouldn't trust it to work going forward</p></li>\n<li><p>b['-^colour'] is completely valid, but it's just of a form that can only be accessed in this manner - (it's supported so Objects can be used as maps perhaps?)</p></li>\n<li><p>Something else</p></li>\n</ol>\n\n<p>As an aside, a global variable in javascript might be declared at the top level as</p>\n\n<pre><code>var abc = 0;\n</code></pre>\n\n<p>but could also be created (as I understand it) with </p>\n\n<pre><code>window['abc'] = 0;\n</code></pre>\n\n<p>the following works in all the above browsers</p>\n\n<pre><code>window['@\u00a3$%'] = \"bling!\";\nalert(window['@\u00a3$%']);\n</code></pre>\n\n<p>Is this valid? It seems to contradict the variable naming rules - or am I not declaring a variable there?  What's the difference between a variable and an object property name?</p>\n",
            "last_activity_date": 1328097855,
            "question_id": 2940424,
            "score": 25,
            "tags": [
                "javascript"
            ],
            "title": "Valid javascript object property names"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You cannot (using a CSS selector) select elements based on the CSS properties that have been applied to them.</p>\n\n<p>If you want to do this manually, you could select every element in the document, loop over them, and check the computed value of the property you are interested in (this would probably only work with real CSS properties though, not made up ones such as <code>rounded</code>). It would also would be slow.</p>\n\n<p>Update in response to edits \u2014 <a href=\"http://www.w3.org/TR/CSS21/selector.html#grouping\">group selectors</a>:</p>\n\n<pre><code>$(\".Title, .Caption\").corner();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>This is a two year old thread, but it was still useful to me so it could be useful to others, perhaps. Here's what I ended up doing:</p>\n\n<pre><code>var x = $('.myselector').filter(function () { \n    return this.style.some_prop == 'whatever' \n});\n</code></pre>\n\n<p>not as succinct as I would like, but I have never needed something like this except now, and it's not very efficient for general use anyway, as I see it.</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>Thank you, Bijou. I used your solution, but used the jQuery .css instead of pure javascript, like this:</p>\n\n<pre><code>$('*').filter(function(){ return $(this).css('font-family').toLowerCase().indexOf('futura') &gt; -1 })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Custom CSS properties aren't inherited, so must be applied directly to each element (even if you use js to dynamically add properties, you should do it by adding a class), so...</p>\n\n<p>CSS</p>\n\n<pre><code>.Title\n{\n    color:red;\n}\n\n.Caption\n{\n    color:black;\n}\n</code></pre>\n\n<p>HTML</p>\n\n<p>You don't need to define a rounded:true property at all.  Just use the presence of the 'Rounded' class:</p>\n\n<pre><code>&lt;div class='Title Rounded'&gt;&lt;h1&gt;Title&lt;/h1&gt;&lt;/div&gt;\n&lt;div class='Caption Rounded'&gt;Caption&lt;/div&gt;\n</code></pre>\n\n<p>JS</p>\n\n<pre><code>jQuery( '.Rounded' ).corner();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Similar as Bijou's. Just a little bit enhancement:</p>\n\n<pre><code>$('[class]').filter(function() {\n    return $(this).css('your css property') == 'the expected value';\n  }\n).corner();\n</code></pre>\n\n<p>I think using $('[class]') is better: </p>\n\n<ul>\n<li>no need to hard code the selector(s)</li>\n<li>won't check all HTML elements one by one.</li>\n</ul>\n\n<p>Here is an <a href=\"http://jsfiddle.net/anthony_yuan/5fWjK/1/\">example</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>How can I select all elements that have a specific CSS property applied, using jQuery? For example:</p>\n\n<pre><code>.Title\n{\n    color:red;\n    rounded:true;\n}\n\n.Caption\n{\n    color:black;\n    rounded:true;\n}\n</code></pre>\n\n<p>How to select by property named \"rounded\"?</p>\n\n<p>CSS class name is very flexible.</p>\n\n<pre><code>$(\".Title\").corner();\n$(\".Caption\").corner();\n</code></pre>\n\n<p>How to replace this two operation to one operation. Maybe something like this:</p>\n\n<pre><code>$(\".*-&gt;rounded\").corner();\n</code></pre>\n\n<p>Is there any better way to do this?</p>\n",
            "last_activity_date": 1400519206,
            "question_id": 1220834,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "jquery-selectors"
            ],
            "title": "Select all elements that have a specific CSS, using jQuery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You could use jQuery.load(): <a href=\"http://api.jquery.com/load/\">http://api.jquery.com/load/</a></p>\n\n<p>Like this:</p>\n\n<pre><code>$(\".text\").load(\"helloworld.txt\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Try</p>\n\n<pre><code>$(\".text\").text(data);\n</code></pre>\n\n<p>Or to convert the data received to a string.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need to add a dataType - <a href=\"http://api.jquery.com/jQuery.ajax/\">http://api.jquery.com/jQuery.ajax/</a></p>\n\n<pre><code>$(document).ready(function() {\n    $(\"#lesen\").click(function() {\n        $.ajax({\n            url : \"helloworld.txt\",\n            dataType: \"text\",\n            success : function (data) {\n                $(\".text\").html(data);\n            }\n        });\n    });\n}); \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>You can use jQuery <a href=\"http://api.jquery.com/load/\" rel=\"nofollow\">load</a> method to get the contents and insert into an element.</p>\n\n<p>Try this:</p>\n\n<pre><code>$(document).ready(function() {\n        $(\"#lesen\").click(function() {\n                $(\".text\").load(\"helloworld.txt\");\n    }); \n}); \n</code></pre>\n\n<p>You, can also add a call back to execute something once the load process is complete</p>\n\n<p>e.g:</p>\n\n<pre><code>$(document).ready(function() {\n    $(\"#lesen\").click(function() {\n        $(\".text\").load(\"helloworld.txt\", function(){\n            alert(\"Done Loading\");\n        });\n   }); \n}); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The <code>.load(\"file.txt\")</code> is much easier. Which works but even if testing, you won't get results from a localdrive, you'll need an actual http server. The invisible error is an <code>XMLHttpRequest</code> error. </p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I want to load a *.txt file and insert the content into a div.\nHere my code:</p>\n\n<p>js:</p>\n\n<pre><code>$(document).ready(function() {\n    $(\"#lesen\").click(function() {\n        $.ajax({\n            url : \"helloworld.txt\",\n            success : function (data) {\n                $(\".text\").html(data);\n            }\n        });\n    });\n}); \n</code></pre>\n\n<p>html:</p>\n\n<pre><code>&lt;div class=\"button\"&gt;\n    &lt;input type=\"button\" id=\"lesen\" value=\"Lesen!\" /&gt;\n&lt;/div&gt;\n\n&lt;div class=\"text\"&gt;\n    Lorem Ipsum &lt;br /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>txt:</p>\n\n<pre><code>im done\n</code></pre>\n\n<p>If i click on the button firebug report following error:</p>\n\n<pre><code>Syntax-Error\nim done\n</code></pre>\n\n<p>I don\u00b4t know what to do :-(</p>\n",
            "last_activity_date": 1363046752,
            "question_id": 6470567,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "ajax"
            ],
            "title": "jQuery: load txt file and insert into div"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The maximum length until \"it gets sluggish\" is totally dependent on your target machine and your actual code, so you'll need to test on that (those) platform(s) to see what is acceptable.</p>\n\n<p>However, the maximum length of an array according to the ECMA-262 5th Edition specification is bound by an unsigned 32-bit integer due to the <em>ToUint32</em> abstract operation, so the longest possible array could have 2<sup>32</sup>-1 = 4,294,967,295 = 4.29 billion elements.</p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>You could try something like this to test and trim the length:</p>\n\n<p><a href=\"http://jsfiddle.net/orolo/wJDXL/\" rel=\"nofollow\">http://jsfiddle.net/orolo/wJDXL/</a></p>\n\n<pre><code>var longArray = [1, 2, 3, 4, 5, 6, 7, 8];\n\nif (longArray.length &gt;= 6) {\n    longArray.length = 3; \n}\n\n    alert(longArray); //1, 2, 3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It will be very browser dependant. 100 items doesn't sound like a large number - I expect you could go a lot higher than that. Thousands shouldn't be a problem. What may be a problem is the total memory consumption.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have shamelessly pulled some pretty big datasets in memory,  and altough it did get sluggish it took maybe 15 Mo of data upwards with pretty intense calculations on the dataset. I doubt you will run into problems with memory unless you have intense calculations on the data and many many rows.  Profiling and benchmarking with different mock resultsets will be your best bet to evaluate performance.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have built a performance framework that manipulates and graphs millions of datasets, and even then, the javascript calculation latency was on order of tens of milliseconds. Unless you're worried about going over the array size limit, I don't think you have much to worry about.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No need to trim the array, simply address it as a circular buffer (index % maxlen). This will ensure it never goes over the limit (implementing a circular buffer means that once you get to the end you wrap around to the beginning again - not possible to overrun the end of the array).</p>\n\n<p>For example:</p>\n\n<pre><code>var container = new Array ();\nvar maxlen = 100;\nvar index = 0;\n\n// 'store' 1538 items (only the last 'maxlen' items are kept)\nfor (var i=0; i&lt;1538; i++) {\n   container [index++ % maxlen] = \"storing\" + i;\n}\n\n// get element at index 11 (you want the 11th item in the array)\neleventh = container [(index + 11) % maxlen];\n\n// get element at index 11 (you want the 11th item in the array)\nthirtyfifth = container [(index + 35) % maxlen];\n\n// print out all 100 elements that we have left in the array, note\n// that it doesn't matter if we address past 100 - circular buffer\n// so we'll simply get back to the beginning if we do that.\nfor (i=0; i&lt;200; i++) {\n   document.write (container[(index + i) % maxlen] + \"&lt;br&gt;\\n\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Context: I'm building a little site that reads an rss feed, and updates/checks the feed in the background. I have one array to store data to display, and another which stores ID's of records that have been shown.</p>\n\n<p>Question: How many items can an array hold in Javascript before things start getting slow, or sluggish. I'm not sorting the array, but am using jQuery's inArray function to do a comparison.</p>\n\n<p>The website will be left running, and updating and its unlikely that the browser will be restarted / refreshed that often.</p>\n\n<p>If I should think about clearing some records from the array, what is the best way to remove some records after a limit, like 100 items.</p>\n",
            "last_activity_date": 1421594447,
            "question_id": 6154989,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "arrays"
            ],
            "title": "Maximum size of an Array in Javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-eventgroupings-mutationevents\">Mutation events</a> are the W3 recommendation of what you are looking for..</p>\n\n<p>Not sure if they are supported all around.. (IE will most likely not support them..)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You could try using the DOMNodeInserted and DOMNodeRemoved events. Acording to Quirksmode, they kind of work in most browsers, with the notable exception of IE... </p>\n\n<p><a href=\"http://www.quirksmode.org/dom/events/index.html\" rel=\"nofollow\">http://www.quirksmode.org/dom/events/index.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://www.quirksmode.org/js/events/DOMtree.html\" rel=\"nofollow\">http://www.quirksmode.org/js/events/DOMtree.html</a></p>\n\n<p>jQuery now supports a way to attach events to existing and future elements corresponding to a selector: <a href=\"http://docs.jquery.com/Events/live#typefn\" rel=\"nofollow\">http://docs.jquery.com/Events/live#typefn</a></p>\n\n<p>Another interesting find - <a href=\"http://james.padolsey.com/javascript/monitoring-dom-properties/\" rel=\"nofollow\">http://james.padolsey.com/javascript/monitoring-dom-properties/</a></p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p><strong><a href=\"http://www.jqui.net/jquery-projects/jquery-mutate-official/\" rel=\"nofollow\">jQuery Mutate</a></strong> does this too, by default it supports like <code>height, width, scrollHeight</code> etc... but it also can be extended with a little bit of extra code to add new events like see if text has changed etc... </p>\n\n<p><a href=\"http://www.jqui.net/jquery-projects/jquery-mutate-official/\" rel=\"nofollow\">http://www.jqui.net/jquery-projects/jquery-mutate-official/</a></p>\n\n<p>Hope it helps </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To bring this up to date, the DOM4 standard does away with Mutation Events and replaces them with Mutation Observers: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\">https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I have recently written a plugin that does exactly that - <a href=\"https://github.com/AdamPietrasiak/jquery.initialize\" rel=\"nofollow\">jquery.initialize</a></p>\n\n<p>You use it the same way as <code>.each</code> function</p>\n\n<pre><code>$(\".some-element\").initialize( function(){\n    $(this).css(\"color\", \"blue\"); \n});\n</code></pre>\n\n<p>The difference from <code>.each</code> is - it takes your selector, in this case <code>.some-element</code> and wait for new elements with this selector in the future, if such element will be added, it will be initialized too.</p>\n\n<p>In our case initialize function just change element color to blue. So if we'll add new element (no matter if with ajax or even F12 inspector or anything) like:</p>\n\n<pre><code>$(\"&lt;div/&gt;\").addClass('some-element').appendTo(\"body\"); //new element will have blue color!\n</code></pre>\n\n<p>Plugin will init it instantly. Also plugin makes sure one element is initialized only once. So if you add element, then <code>.deatch()</code> it from body and then add it again, it will not be initialized again.</p>\n\n<pre><code>$(\"&lt;div/&gt;\").addClass('some-element').appendTo(\"body\").detach()\n    .appendTo(\".some-container\");\n//initialized only once\n</code></pre>\n\n<p>Plugin is based on <code>MutationObserver</code> - it will work on IE9 and 10 with dependencies as detailed on the <a href=\"https://github.com/AdamPietrasiak/jquery.initialize\" rel=\"nofollow\">readme page</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need an efficient mechanism for detecting changes to the DOM. Preferably cross-browser, but if there's any efficient means which are <em>not</em> cross browser, I can implement these with a fail-safe cross browser method.</p>\n\n<p>In particular, I need to detect changes that would affect the text on a page, so any new, removed or modified elements, or changes to inner text (innerHTML) would be required.</p>\n\n<p>I don't have control over the changes being made (they could be due to 3rd party javascript includes, etc), so it can't be approached from this angle - I need to \"monitor\" for changes somehow.</p>\n\n<p>Currently I've implemented a \"quick'n'dirty\" method which checks <code>body.innerHTML.length</code> at intervals. This won't of course detect changes which result in the same length being returned, but in this case is \"good enough\" - the chances of this happening are extremely slim, and in this project, failing to detect a change won't result in lost data.</p>\n\n<p>The problem with <code>body.innerHTML.length</code> is that it's expensive. It can take between 1 and 5 milliseconds on a <em>fast</em> browser, and this can bog things down a lot - I'm also dealing with a large-ish number of iframes and it all adds up. I'm pretty sure the expensiveness of doing this is because the innerHTML text is not stored statically by browsers, and needs to be calculated from the DOM every time it is read.</p>\n\n<p>The types of answers I am looking for are anything from the \"precise\" (for example event) to the \"good enough\" - perhaps something as \"quick'n'dirty\" as the innerHTML.length method, but that executes faster.</p>\n\n<p>EDIT:\nI should also point out that whilst it would be \"nice\" to detect the precise element that has been modified, it is not an absolute necessity - just the fact that there has been <em>any</em> change would be good enough. Hopefully this broadens people's responses. I'm going to investigate Mutation Events, but I still need a fallback for IE support, so any whacky, creative, outside-of-the-square ideas would be very welcome.</p>\n",
            "last_activity_date": 1423242414,
            "question_id": 2457043,
            "score": 20,
            "tags": [
                "javascript",
                "dom",
                "mutation-events",
                "mutation-observers"
            ],
            "title": "Most efficient method of detecting/monitoring DOM changes?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Wrap it in a jQuery object. Then use jQuery's normal DOM manipulation methods on it.</p>\n\n<pre><code>var t = $('&lt;foo&gt;&lt;bar&gt;something&lt;/bar&gt;&lt;/foo&gt;');\n\n//loop over 'bar' nodes\nt.find('bar').each(function () {\n    alert($(this).text());\n});\n</code></pre>\n\n<p>If you want to convert it back to a plain string (after modifying it for example) you can do it like so:</p>\n\n<pre><code>//then convert it back to a string\n//for IE \nif (window.ActiveXObject) {\n    var str = t.xml;\n    alert(str);\n }\n// code for Mozilla, Firefox, Opera, etc.\nelse {\n   var str = (new XMLSerializer()).serializeToString(t);\n   alert(str);\n}\n</code></pre>\n\n<p>EDIT: The <a href=\"http://docs.jquery.com/Ajax/jQuery.ajax#options\">$.ajax manual says</a> (on the processData option):</p>\n\n<blockquote>\n  <p>By default, data passed in to the data\n  option as an object (technically,\n  anything other than a string) will be\n  processed and transformed into a query\n  string, fitting to the default\n  content-type\n  \"application/x-www-form-urlencoded\".\n  If you want to send DOMDocuments, or\n  other non-processed data, set this\n  option to false.</p>\n</blockquote>\n\n<p>So if you're passing a jQuery object to the server, you'll need to set that to <strong>true</strong>, or omit it altogether (it is set to <strong>true</strong> by default). Hope that helped.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>Just a heads up on calling find - if it's a top level element you need to use filter instead.</p>\n\n<pre><code>var t = $('&lt;foo&gt;&lt;bar&gt;something&lt;/bar&gt;&lt;/foo&gt;');\n\n//loop over 'foo' nodes\nt.filter('foo').each(function () {\n  alert($(this).find('bar').text());\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>you can use this simple code for convert your xml tags to text </p>\n\n<pre><code>var temp_var = $(\"&lt;p/&gt;\").append($(your_xml_data)).htML()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>rock solid code. working perfectly in all browsers.   </p>\n\n<pre><code>var xmlFields = $(\"&lt;root&gt;&lt;reports name='report 1'&gt;&lt;item \n               field='ord_num' desc='Order    Number'/&gt;&lt;/reports&gt;&lt;/root&gt;\");\nalert(xmlFields[0].outerHTML);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Saw this example on the jQuery examples page for Ajax:  </p>\n\n<pre><code>var xmlDocument = [create xml document];\n$.ajax({\n\t\turl: \"page.php\",\n\t\tprocessData: false,\n\t\tdata: xmlDocument,\n\t\tsuccess: someFunction\n    });\n</code></pre>\n\n<p>How do I take a string like:</p>\n\n<pre><code>var t = '&lt;foo&gt;&lt;bar&gt;something&lt;/bar&gt;&lt;/foo&gt;';\n</code></pre>\n\n<p>And convert that to a XML DOM object? cross-browser?  </p>\n\n<p><strong>UPDATE</strong>:\nPlease see comments to karim79's answer.</p>\n",
            "last_activity_date": 1408996334,
            "question_id": 1290321,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "xml",
                "dom"
            ],
            "title": "Convert String to XML Document in JavaScript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>it's possibly a bit out of context, but you could classify ( with for instance \"selected\" ) all selected items ans when a user clicks on the 'do not click here' element, you can declassify all items currently classified \"selected\", and classify the specific element...</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Found the anwser on this <a href=\"http://www.bennadel.com/blog/2422-Capturing-Document-Click-Events-With-AngularJS.htm\" rel=\"nofollow\">blog post</a>.</p>\n\n<p>Directive:</p>\n\n<pre><code>app.directive('documentClick', function ($document, $parse) {\n\n  var linkFunction = function ($scope, $element, $attributes) {\n\n    var scopeExpression = $attributes.documentClick;\n    var invoker = $parse(scopeExpression);\n\n    $document.on('click', function (event) {\n\n      $scope.$apply(function () {\n        invoker($scope, { $event: event });\n      });\n\n    });\n\n  };\n\n  return linkFunction;\n\n});\n</code></pre>\n\n<p>Controller:</p>\n\n<pre><code>app.controller('PageCtrl', function ($scope) {\n\n  $scope.click = function (e) {\n    if (!$(e.target).is('.language')) {\n      //do stuff\n    }\n  };\n\n});\n</code></pre>\n\n<p>View:</p>\n\n<pre><code>&lt;body ng-controller='PageCtrl' document-click='click($event)'&gt;&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h2>EDIT: There were a couple of problems in this old, old answer.</h2>\n\n<p><em>*Also: Marking Community Wiki (no points for me) because errors</em></p>\n\n<ol>\n<li><p>N calls for N uses of the directive. This probably isn't desirable for uses within the same scope with matching expressions.</p></li>\n<li><p>NOTHING WAS TEARING DOWN THE EVENT HANDLERS!!!! BAD! BAD! BAD! </p></li>\n</ol>\n\n<p>So, I'm updating this answer. Hopefully it didn't cause anyone too much trouble.</p>\n\n<h3>Updated answer</h3>\n\n<p><a href=\"http://plnkr.co/edit/kHvyDG1EEho4OkPhN7hJ?p=preview\" rel=\"nofollow\">Here's a new plunker with those issues fixed</a> ... there are likely other things that individual application developers will run into. This is just an example of how to handle this problem.</p>\n\n<pre><code>app.factory('clickAnywhereButHereService', function($document){\n  var tracker = [];\n\n  return function($scope, expr) {\n    var i, t, len;\n    for(i = 0, len = tracker.length; i &lt; len; i++) {\n      t = tracker[i];\n      if(t.expr === expr &amp;&amp; t.scope === $scope) {\n        return t;    \n      }\n    }\n    var handler = function() {\n      $scope.$apply(expr);\n    };\n\n    $document.on('click', handler);\n\n    // IMPORTANT! Tear down this event handler when the scope is destroyed.\n    $scope.$on('$destroy', function(){\n      $document.off('click', handler);\n    });\n\n    t = { scope: $scope, expr: expr };\n    tracker.push(t);\n    return t;\n  };\n});\n\napp.directive('clickAnywhereButHere', function($document, clickAnywhereButHereService){\n  return {\n    restrict: 'A',\n    link: function(scope, elem, attr, ctrl) {\n      var handler = function(e) {\n        e.stopPropagation();\n      };\n      elem.on('click', handler);\n\n      scope.$on('$destroy', function(){\n        elem.off('click', handler);\n      });\n\n      clickAnywhereButHereService(scope, attr.clickAnywhereButHere);\n    }\n  };\n});\n</code></pre>\n\n<h3>Original answer (with fixes for teardown of event handlers)</h3>\n\n<p>You were close with the one answer you've found, but I've <strong><a href=\"http://plnkr.co/edit/gqoNay?p=preview\" rel=\"nofollow\">put together a plunk</a></strong> for you to show you what it was missing.</p>\n\n<pre><code>app.directive('clickAnywhereButHere', function($document){\n  return {\n    restrict: 'A',\n    link: function(scope, elem, attr, ctrl) {\n      var elemClickHandler = function(e) {\n        e.stopPropagation();\n      };\n\n      var docClickHandler = function() {\n        scope.$apply(attr.clickAnywhereButHere);\n      };\n\n      elem.on('click', elemClickHandler);\n      $document.on('click', docClickHandler);\n\n      // teardown the event handlers when the scope is destroyed.\n      scope.$on('$destroy', function() {\n        elem.off('click', elemClickHandler);\n        $document.off('click', docClickHandler);\n      });\n    }\n  }\n})\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;a click-anywhere-but-here=\"clickedSomewhereElse()\" \n  ng-click=\"clickedHere()\"&gt;Don't Click Me!&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>The problem with the current accepted answer is that if you use the directive multiple times, every DOM element which has the directive attached will prevent bubbling (so if you have it on two elements, and you click in either, the callbacks of both will be blocked).</p>\n\n<p><strong>EDIT - avoid jQuery, clean up</strong> -- Define a function on your scope, and pass it to this directive directly (without parentheses), and the event will be passed to it when called.</p>\n\n<pre><code>app.directive('clickAnywhereButHere', function($document, $parse) {\n    return {\n        restrict: 'A',\n        scope: {\n            callback : '=clickAnywhereButHere'\n        },\n        link: function(scope, element, attr, ctrl) {\n            var handler = function(event) {\n                if (!element[0].contains(event.target)) {\n                    scope.callback(event);\n                 }\n            };\n\n            $document.on('click', handler);\n            scope.$on('$destroy', function() {\n                $document.off('click', handler);\n            });\n        }\n    }\n});\n</code></pre>\n\n<p>Usage in HTML</p>\n\n<pre><code>&lt;a click-anywhere-but-here=\"myFunction\"&gt;&lt;/a&gt;\n</code></pre>\n\n<p>Usage in Controller</p>\n\n<pre><code> $scope.myFunction = function (event) { ... } \n</code></pre>\n\n<p>-</p>\n\n<p>Note that you may need to wrap <code>scope.callback(event)</code> with <code>scope.$apply()</code></p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>If you have alot of elements that needs this directive, here is another solution that is performance optimized. (Example a list with 100+ rows, each with this directive)</p>\n\n<p>This will always contain only one $document listener</p>\n\n<pre><code>angular.module('app').directive('clickElsewhere', ['$document', function ($document) {\nreturn {\n  link: function postLink(scope, element, attr) {\n\n    var elsewhere = true;\n\n    element.on('click', function(e) {\n      elsewhere = false\n      $document.off('click', clickElsewhere);\n      $document.on('click', clickElsewhere);\n    });\n\n    var clickElsewhere = function() {\n      if (elsewhere) {\n        scope.$apply(attr.clickElsewhere);\n        $document.off('click', clickElsewhere);\n      }\n      elsewhere = true;\n    };\n\n  }\n};\n}]);\n</code></pre>\n\n<p>Problem with solution from Max Bates is that all directives is adding a listener for the $document.on('click', function(...)); event which makes performance issues.</p>\n\n<p>Problem with accepted answer has Max Bates allready stated.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<h2>Benefit of this solution:</h2>\n\n<ol>\n<li>You only need one bind to <code>$(document)</code>. Other firing of events would depend on the <code>$emit</code> of scope events.</li>\n<li>You could use both expressions <code>click-elsewhere=\"show=false\"</code>, and <code>click-elsewhere=\"fn()\"</code>, thanks to <a href=\"https://docs.angularjs.org/api/ng/service/$parse\" rel=\"nofollow\"><code>$parse</code></a>.</li>\n</ol>\n\n<h2>Code:</h2>\n\n<pre><code>// broadcast click event within AppCtrl\napp.controller('AppCtrl', function($rootScope) {\n  $(document).on('click', function(e) {\n    // use $emit so the event stays inside $rootScope\n    $rootScope.$emit('click', {target: e.target});\n  };\n};\n\napp.directive('clickElsewhere', function($rootScope) {\n  return {\n    restrict: 'A',\n    compile: function($element, attr) {\n      // store fn in compile so it only execute once\n      var fn = $parse(attr['clickElsewhere']); \n\n      return function(scope, element) {\n        var offEvent = $rootScope.$on('click', function(event, target) {\n          if ( (element.find($(target)).length) || element.is($(target)) ) return;\n\n          scope.$apply(function() {\n            fn(scope, {$event: event});\n          });\n        });\n\n        scope.$on('$destroy', offEvent);\n      };\n    }\n  };\n</code></pre>\n\n<h2>Usage in HTML:</h2>\n\n<ol>\n<li><code>click-elsewhere=\"fn()\"</code></li>\n<li><code>click-elsewhere=\"show=false\"</code></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Was wondering how I would implement a 'Click everywhere but on this element' event.</p>\n\n<p>I have something that you can compare to a list of files in a file explorer. You can select certain elements but if you click outside the element controller it needs to deselect everything.</p>\n\n<p><img src=\"http://i.stack.imgur.com/xJyJv.png\" alt=\"enter image description here\"></p>\n\n<p>Added a screenshot to make it more clear. So what I want to do is that if I click anywhere but on the language elements it should fire an event.</p>\n\n<p><strong>Update</strong></p>\n\n<p>To clarify I am not asking how I can do this with jQuery. </p>\n",
            "last_activity_date": 1425923740,
            "question_id": 12931369,
            "score": 18,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Click everywhere but here event"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Use this:</p>\n\n<pre><code>html.replace(#&lt;script.*?&gt;.*?&lt;/script&gt;#im, \" \")\n</code></pre>\n\n<p>Also, you should try to use an XML Parser to remove the tags. If you cannot, then beware that the above regex could cause some script tags to become active if malformed.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Attempting to remove HTML markup using a regular expression is problematic. You don't know what's in there as script or attribute values. One way is to insert it as the innerHTML of a div, remove any script elements and return the innerHTML, e.g.</p>\n\n<pre><code>  function stripScripts(s) {\n    var div = document.createElement('div');\n    div.innerHTML = s;\n    var scripts = div.getElementsByTagName('script');\n    var i = scripts.length;\n    while (i--) {\n      scripts[i].parentNode.removeChild(scripts[i]);\n    }\n    return div.innerHTML;\n  }\n\nalert(\n stripScripts('&lt;span&gt;&lt;script type=\"text/javascript\"&gt;alert(\\'foo\\');&lt;\\/script&gt;&lt;\\/span&gt;')\n);\n</code></pre>\n\n<p>Note that at present, browsers will not execute the script if inserted using the innerHTML property, and likely never will especially as the element is not added to the document.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>jQuery uses a regex to remove script tags in some cases and I'm pretty sure its devs had a damn good reason to do so. Probably some browser <em>does</em> execute scripts when inserting them using <code>innerHTML</code>.</p>\n\n<p>Here's the regex:</p>\n\n<pre><code>/&lt;script\\b[^&lt;]*(?:(?!&lt;\\/script&gt;)&lt;[^&lt;]*)*&lt;\\/script&gt;/gi\n</code></pre>\n\n<p>And before people start crying \"but regexes for HTML are evil\": <a href=\"http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454\">Yes, they are</a> - but for script tags they are safe because of the special behaviour - a <code>&lt;script&gt;</code> section may not contain <code>&lt;/script&gt;</code> at all unless it should end at this position. So matching it with a regex is easily possible. However, from a quick look the regex above does not account for trailing whitespace inside the closing tag so you'd have to test if <code>&lt;/script\u00a0\u00a0\u00a0</code> etc. will still work.</p>\n",
                    "is_accepted": false,
                    "score": 48
                },
                {
                    "body": "<p>Regexes are beatable, but if you have a string version of HTML that you don't want to inject into a DOM, they may be the best approach. You may want to put it in a loop to handle something like:</p>\n\n<pre><code>&lt;scr&lt;script&gt;Ha!&lt;/script&gt;ipt&gt; alert(document.cookie);&lt;/script&gt;\n</code></pre>\n\n<p>Here's what I did, using the jquery regex from above:</p>\n\n<pre><code>var SCRIPT_REGEX = /&lt;script\\b[^&lt;]*(?:(?!&lt;\\/script&gt;)&lt;[^&lt;]*)*&lt;\\/script&gt;/gi;\nwhile (SCRIPT_REGEX.test(text)) {\n    text = text.replace(SCRIPT_REGEX, \"\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>In my case, I needed a requirement to parse out the page title AND and have all the other goodness of jQuery, minus it firing scripts. Here is my solution that seems to work.</p>\n\n<pre><code>        $.get('/somepage.htm', function (data) {\n            // excluded code to extract title for simplicity\n            var bodySI = data.indexOf('&lt;body&gt;') + '&lt;body&gt;'.length,\n                bodyEI = data.indexOf('&lt;/body&gt;'),\n                body = data.substr(bodySI, bodyEI - bodySI),\n                $body;\n\n            body = body.replace(/&lt;script[^&gt;]*&gt;/gi, ' &lt;!-- ');\n            body = body.replace(/&lt;\\/script&gt;/gi, ' --&gt; ');\n\n            //console.log(body);\n\n            $body = $('&lt;div&gt;').html(body);\n            console.log($body.html());\n        });\n</code></pre>\n\n<p>This kind of shortcuts worries about script because you are not trying to remove out the script tags and content, instead you are replacing them with comments rendering schemes to break them useless as you would have comments delimiting your script declarations.</p>\n\n<p>Let me know if that still presents a problem as it will help me too.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This Regex should work too:</p>\n\n<pre><code>&lt;script([^'\"]|\"[^\"]*\"|'[^']*')*?&lt;/script&gt;\n</code></pre>\n\n<p>It even allows to have \"problematic\" variable strings like these inside:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  var test1 = \"&lt;/script&gt;\";\n  var test2 = '&lt;script&gt;';\n&lt;/script&gt;\n</code></pre>\n\n<p>It seams that jQuery and Prototype fail on these ones...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Why not using jQuery.parseHTML() <a href=\"http://api.jquery.com/jquery.parsehtml/\" rel=\"nofollow\">http://api.jquery.com/jquery.parsehtml/</a>?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here are a variety of shell scripts you can use to strip out different elements.</p>\n\n<pre><code># doctype\nfind . -regex \".*\\.\\(html\\|py\\)$\" -type f -exec sed -i \"s/&lt;\\!DOCTYPE\\s\\+html[^&gt;]*&gt;/&lt;\\!DOCTYPE html&gt;/gi\" {} \\;\n\n# meta charset\nfind . -regex \".*\\.\\(html\\|py\\)$\" -type f -exec sed -i \"s/&lt;meta[^&gt;]*content=[\\\"'][^\\\"']*utf-8[\\\"'][^&gt;]*&gt;/&lt;meta charset=\\\"utf-8\\\"&gt;/gi\" {} \\;\n\n# script text/javascript\nfind . -regex \".*\\.\\(html\\|py\\)$\" -type f -exec sed -i \"s/\\(&lt;script[^&gt;]*\\)\\(\\stype=[\\\"']text\\/javascript[\\\"']\\)\\(\\s\\?[^&gt;]*&gt;\\)/\\1\\3/gi\" {} \\;\n\n# style text/css\nfind . -regex \".*\\.\\(html\\|py\\)$\" -type f -exec sed -i \"s/\\(&lt;style[^&gt;]*\\)\\(\\stype=[\\\"']text\\/css[\\\"']\\)\\(\\s\\?[^&gt;]*&gt;\\)/\\1\\3/gi\" {} \\;\n\n# html xmlns\nfind . -regex \".*\\.\\(html\\|py\\)$\" -type f -exec sed -i \"s/\\(&lt;html[^&gt;]*\\)\\(\\sxmlns=[\\\"'][^\\\"']*[\\\"']\\)\\(\\s\\?[^&gt;]*&gt;\\)/\\1\\3/gi\" {} \\;\n\n# html xml:lang\nfind . -regex \".*\\.\\(html\\|py\\)$\" -type f -exec sed -i \"s/\\(&lt;html[^&gt;]*\\)\\(\\sxml:lang=[\\\"'][^\\\"']*[\\\"']\\)\\(\\s\\?[^&gt;]*&gt;\\)/\\1\\3/gi\" {} \\;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>/(?:(?!&lt;/s\\w)&lt;[^&lt;]<em>)</em>&lt;/s\\w*/gi; - Removes any sequence in any combination with </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>i want to strip script tags out of this html at pastebin</p>\n\n<blockquote>\n  <p><a href=\"http://pastebin.com/mdxygM0a\">http://pastebin.com/mdxygM0a</a>  </p>\n</blockquote>\n\n<p>I tried using the below regular expression</p>\n\n<pre><code>html.replace(/&lt;script.*&gt;.*&lt;\\/script&gt;/ims, \" \")\n</code></pre>\n\n<p>But it does not remove all script tags in the html. It only removes in-line scripts. Please i need a regex that can remove all script tags(in-line and multi-line). It would be highly appreciated if a test is carried out on my sample <a href=\"http://pastebin.com/mdxygM0a\">http://pastebin.com/mdxygM0a</a></p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1396941421,
            "question_id": 6659351,
            "score": 16,
            "tags": [
                "javascript",
                "html",
                "regex"
            ],
            "title": "Removing all script tags from html with JS Regular Expression"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>This is not possible, as you say, from a security stand point. The only way you could simulate it, is by creating a modeless dialog window.</p>\n\n<p>There are many third-party javascript-plugins that you could use to fake this effect so you do not have to write all that code.</p>\n",
                    "is_accepted": true,
                    "score": 61
                },
                {
                    "body": "<p>You can't unfortunately. The only way is to simulate this with a window.open call.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Not possible.  You can however use a third party javascript library that emulates a popup window, and it will probably look better as well and be less intrusive. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Don't use the confirm() dialog then...  easy to use a custom dialog from prototype/scriptaculous, YUI, jQuery ... there's plenty out there.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know this is not possible for alert(), so I guess it is not possible for confirm either. Reason is security: it is not allowed for you to change it so you wouldn't present yourself as some system process or something.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could write your own function to provide a similar result. \nSee the newConfim section here:\n<a href=\"http://www.webreference.com/dhtml/column22/js-vbNewjs.html\" rel=\"nofollow\">http://www.webreference.com/dhtml/column22/js-vbNewjs.html</a></p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Yes, this is impossible to modify the title of it. If you still want to have your own title, you can try to use other pop-up windows instead.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can always use a hidden div and use javascript to \"popup\" the div and have buttons that are like yes and or no. Pretty easy stuff to do.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>YES YOU CAN do it!! It's a little tricky way ; )  (it almost works on ios)</p>\n\n<pre><code>var iframe = document.createElement(\"IFRAME\");\niframe.setAttribute(\"src\", 'data:text/plain,');\ndocument.documentElement.appendChild(iframe);\nif(window.frames[0].window.confirm(\"Are you sure?\")){\n    // what to do if answer \"YES\"\n}else{\n    // what to do if answer \"NO\"\n}\n</code></pre>\n\n<p>Enjoy it!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to modify the title of the message box the confirm() function opens in JavaScript? </p>\n\n<p>I could create a modal popup box, but I would like to do this as minimalistic as possible.\nI would like to do something like this:</p>\n\n<pre><code>confirm(\"This is the content of the message box\", \"Modified title\");\n</code></pre>\n\n<p>The default title in Internet Explorer is \"Windows Internet Explorer\" and in Firefox it's \"[JavaScript-program].\" Not very informative. Though I can understand from a browser security stand point that you shouldn't be able to do this.</p>\n",
            "last_activity_date": 1406318274,
            "question_id": 43955,
            "score": 56,
            "tags": [
                "javascript"
            ],
            "title": "Changing the default title of confirm() in JavaScript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>To return a value, simply use the <code>return</code> JavaScript keyword in the string passed to the <code>execute_script()</code> method, e.g.</p>\n\n<pre><code>&gt;&gt;&gt; from selenium import webdriver\n&gt;&gt;&gt; wd = webdriver.Firefox()\n&gt;&gt;&gt; wd.get(\"http://localhost/foo/bar\")\n&gt;&gt;&gt; wd.execute_script(\"return 5\")\n5\n&gt;&gt;&gt; wd.execute_script(\"return true\")\nTrue\n&gt;&gt;&gt; wd.execute_script(\"return {foo: 'bar'}\")\n{u'foo': u'bar'}\n&gt;&gt;&gt; wd.execute_script(\"return foobar()\")\nu'eli'\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 62
                }
            ],
            "body": "<p>I'm using Selenium2 for some automated tests of my website, and I'd like to be able to get the return value of some Javascript code.  If I have a <code>foobar()</code> Javascript function in my webpage and I want to call that and get the return value into my Python code, what can I call to do that?</p>\n\n<p>(I'm asking this question because I can't find the answer anywhere on the web and answer the question myself below.)</p>\n",
            "last_activity_date": 1302198520,
            "question_id": 5585343,
            "score": 37,
            "tags": [
                "javascript",
                "python",
                "selenium-webdriver"
            ],
            "title": "Getting the return value of Javascript code in Selenium"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You should do it like so</p>\n\n<pre><code>var script=document.createElement('script');\nscript.type='text/javascript';\nscript.src=url;\n\n$(\"body\").append(script);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>The error is in the selector:  </p>\n\n<pre><code>$(\"body\").append(\"&lt;script&gt;alert('hello world');&lt;\\/script&gt;\");\n</code></pre>\n\n<p>Note that you have to escape the unallowed characters in the appended string.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Why are you not using <a href=\"http://docs.jquery.com/Ajax/jQuery.getScript\">jQuery.getScript(url,[callback])</a></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>To load from a url:</p>\n\n<pre><code>$(\"body\").append($(\"&lt;script /&gt;\", {\n  src: url\n}))\n</code></pre>\n\n<p>To load from existing source code:</p>\n\n<pre><code>$(\"body\").append($(\"&lt;script /&gt;\", {\n  html: code\n}))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                }
            ],
            "body": "<p>I want to create a script tag by jQuery.</p>\n\n<p>I use the following code:</p>\n\n<pre><code>$(\"&lt;body&gt;\").append(\"&lt;script&gt;&lt;/script&gt;\");\n</code></pre>\n\n<p>It doesn't work.\nWhat will you do to achieve it?</p>\n",
            "last_activity_date": 1421073332,
            "question_id": 1199676,
            "score": 28,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Can I create script tag by jQuery?"
        }
    ]
}
