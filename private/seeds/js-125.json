{
    "items": [
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>To access info from the frame (or write to the frame), it must be in the DOM. It can be hidden, but it still must live in the frames object.  JQuery is accessing the iFrame through the frames object and when removed from the dom, it's removed from the frames object</p>\n\n<p>For future reference to anyone stumbling across this question, you can get the encapsulation like so:</p>\n\n<pre><code>$('#iframeGenerator2').contents().find('html').html(frame2HTML);\n</code></pre>\n\n<p>Here's an example: <a href=\"http://jsfiddle.net/yP34y/4/\" rel=\"nofollow\">http://jsfiddle.net/yP34y/4/</a></p>\n\n<p>In the jsfiddle example, notice everything only works after it's been added to the DOM.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>I played around with your fiddle and was able to get it working. I'm using seamless (only Chrome) to make it behave more in line with what you're looking for and I have a CSS fallback for other browsers.</p>\n\n<p>As a note, the iframe needs to be added to the DOM before you start editing it's contents(adding styles and body). You can remove afterwards <code>document.body.removeChild(iframe);</code>.</p>\n\n<p>There is still a lot you can do to make it behave very similarly to a shadow DOM element, this presentation will help you out <a href=\"http://benvinegar.github.io/seamless-talk/#/\" rel=\"nofollow\" title=\"Seamless iframes: The future, today!\">Seamless iframes: The future, today!</a></p>\n\n<p><strong>JS</strong></p>\n\n<pre><code>var styles = '&lt;style&gt; .pink { color: pink; width: 100px; height: 100px; } body{background-color:#eee;}&lt;/style&gt;';\n\nvar html = '&lt;div class=\"pink\"&gt;PINK!&lt;/div&gt;';\n\n// create iframe\nvar iframe = document.createElement('iframe');\ndocument.body.appendChild(iframe);\n\n//add head and body\niframe.contentDocument.open();\niframe.contentDocument.write(styles);\niframe.contentDocument.write(html);\niframe.contentDocument.close();\niframe.setAttribute('seamless', 'seamless');\n\n//check everything\nconsole.log(iframe);\nvar head = $(iframe).contents().find('head')[0];\nconsole.log(head);\nvar body = $(iframe).contents().find('body')[0];\nconsole.log(body);\n\n//remove from DOM\n//document.body.removeChild(iframe);\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>iframe[seamless]{\n    background-color: transparent;\n    border: 0px none transparent;\n    padding: 0px;\n    overflow: hidden;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to create a totally encapsulated sub-document in JavaScript, with its own <code>&lt;head&gt;</code>, <code>&lt;body&gt;</code>, styles, html, and js. Basically a shadow dom, or an iframe, but without an src attribute.</p>\n\n<p>Though I love the idea of shadow dom, its <a href=\"http://caniuse.com/shadowdom\">support is very low,</a> and thus is not ready for prime time.</p>\n\n<p>So I have been working on creating an iframe, but have been hitting various road-blocks along the way. <a href=\"http://jsfiddle.net/7CeNZ/3/\">Here is a jsFiddle demonstrating my various attempts.</a></p>\n\n<p><strong>The iframe cannot exist in the dom.</strong> This part is critical. To clarify, it is okay if it momentarily exists in the dom, but it must be able to be extracted and exist only in JS.</p>\n\n<pre><code>$('body').append('&lt;iframe id=\"iframeGenerator\" /&gt;');\nvar iframe3 = $('#iframeGenerator');\nvar iframe3Contents = iframe3.contents();\n$('#iframeGenerator').remove();\nvar head = iframe3.contents().find('head');\n</code></pre>\n\n<p>sweet, we have the head</p>\n\n<pre><code>console.log(head.length);\n</code></pre>\n\n<p>but what do the contents look like?</p>\n\n<pre><code>console.log(iframe3Contents.get(0));\n</code></pre>\n\n<p>It is a document, but not inside of an element\nso lets try to put it in the dom or inside of another element?\n<strong>both of the following attempts dont work because the selector has no context or something ...</strong></p>\n\n<pre><code>$('body').append(iframe3Contents);\nvar generatedIframe = $('&lt;iframe /&gt;').append(iframe3Contents);\n</code></pre>\n\n<p>And here's where I turn to you for help :)</p>\n\n<p>I would love to be able to create the iframe / subdocuemnt without appending anything to the dom... but if i must, i would still like to be able to subsequently remove it from the dom and manage it further in js.</p>\n\n<p>I have this little function, which doesn't work, but illustrates the kind of iframe or subdocument generator i would like to create</p>\n\n<pre><code>var iframeHtml;\ngiveMeIframe = function() {\n  var iframeContents;\n  if (iframeHtml) {\n    return iframeHtml;\n  } else {\n    $('body').append('&lt;iframe id=\"iframeGenerator\" style=\"display: none\" /&gt;');\n    iframeContents = $('#iframeGenerator').contents();\n    iframeHtml = $('&lt;iframe /&gt;');\n    iframeHtml.append(iframeContents);\n    $('#iframeGenerator').remove();\n    return iframeHtml;\n  }\n}\n</code></pre>\n\n<p>Thanks a bunch y'all.</p>\n",
            "last_activity_date": 1393026729,
            "question_id": 21739382,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "iframe",
                "shadow-dom"
            ],
            "title": "How to create a cross-browser sub document with iframe or shadow dom?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you're using the .NET Framework's built-in SqlMembershipProvider Class from System.Web.Security, the hash incorporates a salt value as well as the password material when it is generated. Simply hashing the password alone in your node.js will never produce the same result as the hash in the database.</p>\n\n<p>See <a href=\"http://msdn.microsoft.com/en-us/library/aa478948.aspx\" rel=\"nofollow\">Microsoft ASP.NET 2.0 Providers: Introduction</a> for a link to .NET source code for the provider that will let you see how the salt value is applied.</p>\n\n<p>You need to include your code if you need more help than this.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Edit: You are using UTF-16 in C#, you must use same encoding in both languages:</p>\n\n<p>Node.js:</p>\n\n<pre><code>var crypto = require(\"crypto\");\nvar sha256 = crypto.createHash(\"sha256\");\nsha256.update(\"ThisPassword\", \"utf8\");//utf8 here\nvar result = sha256.digest(\"base64\");\nconsole.log(result); //d7I986+YD1zS6Wz2XAcDv2K8yw3xIVUp7u/OZiDzhSY=\n</code></pre>\n\n<p>C#:</p>\n\n<pre><code>SHA256 sha256 = SHA256Managed.Create(); //utf8 here as well\nbyte[] bytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(\"ThisPassword\"));\nstring result = Convert.ToBase64String(bytes);\nConsole.WriteLine(result); //d7I986+YD1zS6Wz2XAcDv2K8yw3xIVUp7u/OZiDzhSY=\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>I created the node pbkdf2 module(source <a href=\"https://github.com/fundon/pbkdf2\" rel=\"nofollow\">https://github.com/fundon/pbkdf2</a>)</p>\n\n<p>Required node >= 0.11.11</p>\n\n<pre><code>var pbkdf2 = require('pbkdf2');\nvar p = 'password';\nvar s = pbkdf2.generateSaltSync(32);\nvar pwd = pbkdf2.hashSync(p, s, 1, 20, 'sha256');\nvar bool = pbkdf2.compareSync(pwd, p, s, 1, 20, 'sha256');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Im Storing SHA256 hashes of user passwords in my database generated by .NET and I need to be able to check them with Node.js. The only problem is that .NET and Node.js create different hashes for the same password.</p>\n\n<pre><code>Password: ThisPassword  \n</code></pre>\n\n<h2>.NET:</h2>\n\n<pre><code>var ue = new UnicodeEncoding();  \nvar byteSourceText = ue.GetBytes(\"ThisPassword\");  \nvar byteHash = new System.Security.Cryptography.SHA256Managed().ComputeHash(byteSourceText);  \nreturn Convert.ToBase64String(byteHash);\n\n//Tlwxyd7HIQhXkN6DrWJtmB9Ag2fz84P/QgMtbi9XS6Q=\n</code></pre>\n\n<h2>Node.js (Using Crypto):</h2>\n\n<pre><code>var crypto = require('crypto');\nreturn crypto.createHash('sha256').update('ThisPassword').digest('base64')\n\n//d7I986+YD1zS6Wz2XAcDv2K8yw3xIVUp7u/OZiDzhSY=\n</code></pre>\n\n<p>I found <a href=\"http://stackoverflow.com/questions/10559203/sha-256-hashes-different-between-c-sharp-and-javascript\">this</a>, but was unable to figure out how to implement his solution.</p>\n",
            "last_activity_date": 1392724112,
            "question_id": 13714103,
            "score": 16,
            "tags": [
                "javascript",
                ".net",
                "node.js",
                "hash",
                "sha2"
            ],
            "title": "Hashing a password using SHA256 and .NET/Node.js"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Try;</p>\n\n<pre>\nvar str = \"foo/bar/test.html\";\nvar tmp = str.split(\"/\");\nalert(tmp.pop());\n</pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>(This has nothing to do with jQuery, just JavaScript.)</p>\n\n<p>At least three ways:</p>\n\n<h3>A regular expression:</h3>\n\n<p><s></p>\n\n<pre><code>var result = /\\/([^/]*)$/.exec(\"foo/bar/test.html\")[1];\n</code></pre>\n\n<p><a href=\"http://jsbin.com/igojef\">Live example</a></p>\n\n<p>That expression says: Find the block of characters at the end of the string that doesn't contain a slash and capture it. Then the <code>[1]</code> indexes into the resulting match object to retrieve the first capture group.</s></p>\n\n<p>Actually, that expression is more complicated than it needs to be. Simply:</p>\n\n<pre><code>var result = /[^/]*$/.exec(\"foo/bar/test.html\")[0];\n</code></pre>\n\n<p>...which says \"grab the series of characters not containing a slash\" (<code>[^/]*</code>) at the end of the string (<code>$</code>). Then it grabs the matched characters from the returned match object by indexing into it (<code>[0]</code>); in a match object, the first entry is the whole matched string. No need for capture groups.</p>\n\n<p><a href=\"http://jsbin.com/igojef/2\">Live example</a></p>\n\n<h3>Using <code>lastIndexOf</code> and <code>substring</code>:</h3>\n\n<pre><code>var str = \"foo/bar/test.html\";\nvar n = str.lastIndexOf('/');\nvar result = str.substring(n + 1);\n</code></pre>\n\n<p><a href=\"http://es5.github.com/#x15.5.4.8\"><code>lastIndexOf</code></a> does what it sounds like it does: It finds the index of the <em>last</em> occurrence of a character (well, string) in a string, returning -1 if not found. Nine times out of ten you probably want to check that return value (<code>if (n !== -1)</code>), but in the above since we're adding 1 to it and calling substring, we'd end up doing <code>str.substring(0)</code> which just returns the string.</p>\n\n<h3>Using <code>Array#split</code></h3>\n\n<p>Sudhir and Tom Walters have this covered <a href=\"http://stackoverflow.com/a/8376537/157247\">here</a> and <a href=\"http://stackoverflow.com/a/8376546/157247\">here</a>, but just for completeness:</p>\n\n<pre><code>var parts = \"foo/bar/test.html\".split(\"/\");\nvar result = parts[parts.length - 1]; // Or parts.pop();\n</code></pre>\n\n<p><code>split</code> splits up a string using the given delimiter, returning an array.</p>\n\n<p>The <code>lastIndexOf</code> / <code>substring</code> solution is <em>probably</em> the most efficient (although one always has to be careful saying anything about JavaScript and performance, since the engines vary so radically from each other), but unless you're doing this thousands of times in a loop, it doesn't matter and I'd strive for clarity of code.</p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>You don't need jQuery, and there are a bunch of ways to do it, for example:</p>\n\n<pre><code>var parts = myString.split('/');\nvar answer = parts[parts.length - 1];\n</code></pre>\n\n<p>Where myString contains your string.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>var str = \"foo/bar/test.html\";\nvar lastSlash = str.lastIndexOf(\"/\");\nalert(str.substring(lastSlash+1));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>When I know the string is going to be reasonably short then I use the following one liner... (remember to escape backslashes)</p>\n\n<pre><code>// if str is C:\\windows\\file system\\path\\picture name.jpg\nalert( str.split('\\\\').pop() );\n</code></pre>\n\n<p>alert pops up with <code>picture name.jpg</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>            String path =\"AnyDirectory/subFolder/last.htm\";\n        int pos = path.lastIndexOf(\"/\") + 1;\n\n        path.substring(pos, path.length()-pos) ;\n</code></pre>\n\n<p>// now you have the last.htm in the path string.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am already trying for over an hour and cant figure out the right way to do it, although it is probably pretty easy:</p>\n\n<p>I have something like this : <code>foo/bar/test.html</code></p>\n\n<p>I would like to use jQuery to extract everything after the last <code>/</code>. In the example above the output would be <code>test.html</code>.</p>\n\n<p>I guess it can be done using <code>substr</code> and <code>indexOf()</code>, but I cant find a working solution.</p>\n",
            "last_activity_date": 1415693793,
            "question_id": 8376525,
            "score": 16,
            "tags": [
                "javascript",
                "substring",
                "indexof",
                "slash"
            ],
            "title": "Get value of a string after a slash in JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>It's nothing more than a reminder that if you do this:</p>\n\n<pre><code>var x=5;\nvar x;\nalert(x);\n</code></pre>\n\n<p><strong>Result will be 5.</strong></p>\n\n<p>If you re-declare variable in some other languages for example - result will be undefined, or NaN, but not in javascript.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<blockquote>\n  <p>Why should I redeclare a variable?</p>\n</blockquote>\n\n<p>You shouldn't. It makes for confusing code.</p>\n\n<blockquote>\n  <p>Is it practical in some situations?</p>\n</blockquote>\n\n<p>No.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>In javascript there is no block scope so it is advisable to redeclare a variable for clarification purposes; this makes for better code.</p>\n\n<p>For example:</p>\n\n<pre><code>for (var x=0; x&lt; 100; x++) { }\n\nalert(x); //In most languages, x would be out of scope here.\n          //In javascript, x is still in scope.\n\n\n//redeclaring a variable helps with clarification: \nvar x = \"hello\";\nalert(x);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>An example of redeclaring a variable can be found in <a href=\"https://developers.google.com/analytics/devguides/collection/gajs/\">Google Analytics</a>.  When the JavaScript tracking code is initiated by the Google Analytics script, it declares or redeclares <code>_gaq</code> in this way:</p>\n\n<pre><code>var _gaq = _gaq || [];\n</code></pre>\n\n<p>In other words, if <code>_gaq</code> is already defined, <code>_gaq</code> is \"redeclared\" as itself.  If it is not defined, it will be declared for the first time as an empty array.</p>\n\n<p>This allows the Google Analytics tracking code to support other scripts which may need to use the variable before Google Analytics code has initiated.  As @xralf pointed out, JavaScript allows for this.</p>\n\n<p>Redeclaring a variable is useful in situations where it cannot be known if the variable has already been defined.</p>\n\n<p>By redeclaring a variable conditionally, as Google Analytics tracking code does, it allows for a variable to safely originate from more than one place.</p>\n\n<p>In this example it could be safe for other code using the <code>_gaq</code> variable to likewise check for a predefined <code>_gaq</code> variable.  If it exists, it knows it can use it.  If it doesn't exist, it knows that it should define it before trying to use it.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>In general, it can be considered bad style to have <code>var</code> assignments after other statements due to the problem of hoisting (<a href=\"http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting\" rel=\"nofollow\">see here</a>). Using the \"Single var pattern\" (<a href=\"http://wonko.com/post/try-to-use-one-var-statement-per-scope-in-javascript\" rel=\"nofollow\">see here</a>), redeclarations could only happen like in Steve Oliver's Google Analtyics example. I'd refactor the example above to:</p>\n\n<pre><code>var x, max = 100; // no further var declarations afterwards!\n\nfor (x = 0; x &lt; max; x++) { }\n\nalert(x);\n\n// redeclaration 'var x = \"hello\"' doesn't make any sense here\n// and would be complained about by JSLint/-Hint \nx = 'hello';\nalert(x);\n</code></pre>\n\n<p>A redeclaration can make sense however when using default values for optional parameters (which is what the Google Analytics example is about, I assume):</p>\n\n<pre><code>function abc(param1) {\n  var param1 = param1 || 'default value';\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>In <a href=\"http://www.w3schools.com/js/js_variables.asp\">this</a> tutorial there is written:</p>\n\n<p><code>If you redeclare a JavaScript variable, it will not lose its value.</code></p>\n\n<p>Why should I redeclare a variable? Is it practical in some situations?</p>\n\n<p>thank you</p>\n",
            "last_activity_date": 1400711581,
            "question_id": 6888506,
            "score": 16,
            "tags": [
                "javascript",
                "variables",
                "declaration"
            ],
            "title": "Redeclaring a javascript variable"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<pre><code>var s = 'abc123';\nvar number = s.match(/\\d+$/);\nnumber = parseInt(number, 10);\n</code></pre>\n\n<p>The first step is a simple regular expression - <code>\\d+$</code> will match the digits near the end.<br>\nOn the next step, we use <code>parseInt</code> on the <em>string</em> we've matched before, to get a proper number.</p>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<pre><code>var str = \"stsfdf233\";\nvar num = parseInt(str.replace(/\\D/g, ''), 10);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>javascript:alert('stsfdf233'.match(/\\d+$/)[0]) \n</code></pre>\n\n<p><code>Global.parseInt</code> with <code>radix</code> is overkill here, regexp extracted decimal digits already and rigth trimmed string</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>This might help you</p>\n\n<pre><code>var str = 'abc123';\nvar number = str.match(/\\d/g).join(\"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use a <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/regexp\" rel=\"nofollow\">regex</a> to extract the numbers in the string via <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/match\" rel=\"nofollow\"><code>String#match</code></a>, and convert each of them to a number via <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\" rel=\"nofollow\"><code>parseInt</code></a>:</p>\n\n<pre><code>var str, matches, index, num;\n\nstr = \"test123and456\";\nmatches = str.match(/\\d+/g);\nfor (index = 0; index &lt; matches.length; ++index) {\n    num = parseInt(matches[index], 10);\n    display(\"Digit series #\" + index + \" converts to \" + num);\n}\n</code></pre>\n\n<p><a href=\"http://jsbin.com/ayoyo4\" rel=\"nofollow\">Live Example</a></p>\n\n<p><strong>If</strong> the numbers really occur only at the ends of the strings or you just want to convert the <em>first</em> set of digits you find, you can simplify a bit:</p>\n\n<pre><code>var str, matches, num;\n\nstr = \"test123\";\nmatches = str.match(/\\d+/);\nif (matches) {\n    num = parseInt(matches[0], 10);\n    display(\"Found match, converts to: \" + num);\n}\nelse {\n    display(\"No digits found\");\n}\n</code></pre>\n\n<p><a href=\"http://jsbin.com/ayoyo4/2\" rel=\"nofollow\">Live example</a></p>\n\n<p>If you want to <em>ignore</em> digits that aren't at the end, add <code>$</code> to the end of the regex:</p>\n\n<pre><code>matches = str.match(/\\d+$/);\n</code></pre>\n\n<p><a href=\"http://jsbin.com/ayoyo4/3\" rel=\"nofollow\">Live example</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var match = \"stsfdf233\".match(/\\d+$/);\nvar result = 0; // default value\nif(match != null) {\n    result = parseInt(match[0], 10); \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yet another alternative, this time without any replace or Regular Expression, just one simple loop:</p>\n\n<pre><code>function ExtractInteger(sValue)\n{\n    var sDigits = \"\";\n    for (var i = sValue.length - 1; i &gt;= 0; i--)\n    {\n        var c = sValue.charAt(i);\n        if (c &lt; \"0\" || c &gt; \"9\")\n            break;\n        sDigits = c + sDigits;\n    }\n    return (sDigits.length &gt; 0) ? parseInt(sDigits, 10) : NaN;\n}\n</code></pre>\n\n<p>Usage example:</p>\n\n<pre><code>var s = \"stsfdf233\";\nvar n = ExtractInteger(s);\nalert(n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use my extension to String class : </p>\n\n<pre><code>String.prototype.toInt=function(){\n    return parseInt(this.replace(/\\D/g, ''),10);\n}\n</code></pre>\n\n<p>Then  : </p>\n\n<pre><code>\"ddfdsf121iu\".toInt();\n</code></pre>\n\n<p>Will return an integer : <code>121</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>First positive or negative number: </p>\n\n<pre><code>\"foo-22bar11\".match(/-?\\d+/); // -22\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>i want  int from string in javascript how i can get them from </p>\n\n<p>test1 , stsfdf233,  fdfk323,</p>\n\n<p>are anyone show me the method to get the integer from this string.</p>\n\n<p>it is a rule that int is always in the back of the string.</p>\n\n<p>how i can get the int who was at last in my string</p>\n",
            "last_activity_date": 1401809413,
            "question_id": 4194092,
            "score": 16,
            "tags": [
                "javascript"
            ],
            "title": "how to parse string to int in javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>From <a href=\"http://en.wikipedia.org/wiki/Internet_media_type\" rel=\"nofollow\">Wikipedia on Internet Media Types</a></p>\n\n<blockquote>\n  <p><code>application/javascript:</code> JavaScript; Defined in <a href=\"http://tools.ietf.org/html/rfc4329\" rel=\"nofollow\">RFC 4329</a> but not accepted in IE 8 or earlier</p>\n</blockquote>\n\n<p>There is also the <a href=\"http://tools.ietf.org/html/rfc4329#section-7\" rel=\"nofollow\">deprecated <code>text/javascript</code></a> (which IE will probably not choke on).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>According to the <a href=\"http://www.iana.org/assignments/media-types/\">IANA Registered MIME media type list</a>, JS has two registered MIME types; the obsolete <code>text/javascript</code> and the now official <code>application/javascript</code>.</p>\n\n<p>Thus, use <code>application/javascript</code>.</p>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p>I am delivering a JS response from a PHP file. When setting the <code>Content-Type</code> header which value should I use, <code>application/javascript</code> or <code>text/javascript</code>?</p>\n\n<p>What\u2019s the difference between the two?</p>\n",
            "last_activity_date": 1367250563,
            "question_id": 3987384,
            "score": 16,
            "tags": [
                "php",
                "javascript",
                "http"
            ],
            "title": "What is an appropriate content-type header for JavaScript files?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/decodeURIComponent\" rel=\"nofollow\">decodeURIComponent</a>.</p>\n\n<p>For example: </p>\n\n<pre><code>decodeURIComponent('http://url.com/my_app/#/store/items%3Fpage=2');\n// will give you `http://url.com/my_app/#/store/items?page=2`\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>There is not enough details in your question so I will assume that you are using AngularJS routing - or at least the <a href=\"http://docs.angularjs.org/api/ng.%24location\">$location service</a> - in non-HTML5 mode. If so, the part after the <code>#</code> character represents your URL from the single-page-application point of view (more about AngularJS <a href=\"http://docs.angularjs.org/guide/dev_guide.services.%24location\">here</a>).</p>\n\n<p>If the above assumptions are correct it means that <strong>you shouldn't try to add or manipulate the question mark \"by hand\"</strong>. Instead you should change the <code>search</code> part of the <code>$location</code> to manipulate query string (part after <code>?</code>) and the question mark will be added / removed to the final URL as needed.</p>\n\n<p>In your case you could write:</p>\n\n<p><code>$location.path('/store/items').search('page', 2)</code></p>\n\n<p>This is assuming that you are manipulating URLs from JavaScript, as stated in your question.</p>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>If you are using the $location service then use <code>$location.url('/store/items?page=2')</code> instead. This has been a setter method from at least 1.0.7 and works a treat in my 1.1.5 app.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If you're using the <strong>ui-router</strong> which is highly recommended, you could use <code>$state.go(to, params, options)</code> as described <a href=\"http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$state\" rel=\"nofollow\">here</a>.</p>\n\n<p>As prerequisite you need to define your state properly, that means every possible query parameter must be made known to the ui-router. See the following example (<code>page</code> and <code>otherParam</code>):</p>\n\n<pre><code>$stateProvider.\nstate('storeItems', {\n  url: '/store/items?page&amp;otherParam',\n  templateUrl: '/modules/store/views/item.client.view.html'\n});\n</code></pre>\n\n<p>And then you can just switch locations for instance from a controller by calling</p>\n\n<pre><code>$scope.gotoItemsPage = function(page) {\n  $state.go('storeItems', {\n    page: page,\n    otherParam: 'Just a show off'\n  });\n};\n</code></pre>\n\n<p>No fiddling with the encoding needed and highly readable!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In Angularjs app, i have a url like<br/> <code>http://url.com/my_app/#/store/items</code>. <br/>\nNow i want to append query string for example,<br/> <code>http://url.com/my_app/#/store/items?page=2</code>. <br/><br/>but in url, javascript encodes the <code>\"?\" to \"%3F\"</code> which i don't want. It should remain \"?\" only in the url as angularjs $location.search() returns nothing for \"%3F\".\n<br/><br/>How it can be done ?</p>\n",
            "last_activity_date": 1420392940,
            "question_id": 15197837,
            "score": 15,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "how to pass &quot;question mark&quot; in url javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>.on()</code> now offers a combination of <code>.live()</code>, <code>.delegate()</code> and <code>.bind()</code> all in one unified method.  You can get the behavior of any of those three just by how you use the arguments to <code>.on()</code>.</p>\n\n<p>These pairs are functionally the same:</p>\n\n<pre><code>// events bound directly to the object they occur on\n$('.button').on('click', fn);\n$('.button').bind('click', fn);\n\n// events intercepted after bubbling up to a common parent object\n$('.container').on(\"click\", '.button', fn);\n$('.container').delegate('.button', \"click\", fn);\n</code></pre>\n\n<p>More info is described in a <a href=\"http://blog.jquery.com/2011/11/03/jquery-1-7-released/\">jQuery blog entry</a>.</p>\n\n<p>Before unifying these separate functions, jQuery had multiple different implementations.  Now, <code>.on()</code> is the superset function and <code>.bind()</code>, <code>.live()</code> and <code>.delegate()</code> all just call <code>.on()</code> in their implementation so there is now only one implementation of the actual event handling.  So, from that standpoint, it was also a code cleanup and streamlining issue.  Similarly, <code>.die()</code>, <code>.undelegate()</code> and <code>.unbind()</code> just call <code>.off()</code> now rather than have separate implementations.</p>\n\n<p>Note: <code>.live()</code> has been deprecated for all versions of jQuery because it's just a special case of intercepting all the bubbled events on the document object so it can be easily replaced with either <code>.delegate()</code> or <code>.on()</code> and when lots of events were all being handled on the document object, it could become a performance problem checking lots of selectors on every event.  It's much more efficient to hook a delegated event like this to a common parent that is much closer to where the event occurs than put them all on the document object (thus why <code>.live()</code> is not good to use).</p>\n\n<p>From the jQuery 1.7 source, you can see how all these functions just now call <code>.on()</code> and <code>.off()</code>:</p>\n\n<pre><code>bind: function( types, data, fn ) {\n    return this.on( types, null, data, fn );\n},\nunbind: function( types, fn ) {\n    return this.off( types, null, fn );\n},\n\nlive: function( types, data, fn ) {\n    jQuery( this.context ).on( types, this.selector, data, fn );\n    return this;\n},\ndie: function( types, fn ) {\n    jQuery( this.context ).off( types, this.selector || \"**\", fn );\n    return this;\n},\n\ndelegate: function( selector, types, data, fn ) {\n    return this.on( types, selector, data, fn );\n},\nundelegate: function( selector, types, fn ) {\n    // ( namespace ) or ( selector, types [, fn] )\n    return arguments.length == 1? this.off( selector, \"**\" ) : this.off( types, selector, fn );\n},\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>The old method was a bit messy - the difference between <code>live()</code>, <code>delegate()</code> and <code>bind()</code> was not clear. By making <code>on()</code> the function that handles attaching any event, regardless of whether it exists or not, it's just easier to work with.</p>\n\n<p>Before now, <code>live()</code> was a lot slower than the new <code>on()</code> function, hence why you had to choose between <code>bind()</code> and <code>live()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The MAIN difference is that .bind requires the element (selector) exist AT THE TIME it gets attached, whereas .on does not have that requirement, and .on frankly has better/more elegant syntax in my opinion.  See the documentation first paragraph <a href=\"http://api.jquery.com/bind/\" rel=\"nofollow\">http://api.jquery.com/bind/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>And why is .on() now preferred in jQuery 1.7?</p>\n",
            "last_activity_date": 1328193956,
            "question_id": 9113783,
            "score": 15,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "What&#39;s the difference between jQuery.bind() and jQuery.on()?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>$(\"select option\").eq(index).before($(\"&lt;option&gt;&lt;/option&gt;\").val(val).html(text));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Here's a way you can do it:</p>\n\n<pre><code>var myOption = \"&lt;option&gt;Dynamic Option&lt;/option&gt;\";\nvar index = 2;\n$(myOption).insertBefore(\"select option:nth-child(\"+index+\")\");\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/T8n7f/8/\" rel=\"nofollow\">fiddle example</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>And yet another option, sans jquery:</p>\n\n<p>Markup:</p>\n\n<pre><code>&lt;select multiple=\"multiple\" id=\"mySelect\"&gt;\n    &lt;option&gt;First&lt;/option&gt;\n    &lt;option&gt;Third&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var myDdl = document.getElementById(\"mySelect\");\n    var myOption = document.createElement(\"OPTION\");\n    myOption.innerText = \"Second\";\n\n    myDdl.options.insertBefore(myOption, myDdl.options[myDdl.options.length - 1]);\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I submit this answer because jquery was not specified in the question.</p>\n\n<pre><code>function insertOptionToSelect(select, idx, option) {\n    var saved = [];\n    var i;\n    for (i = 0; i &lt; select.options.length; i++) {\n        saved.push(select.options[i]);\n    }\n    select.options.length = 0;\n    for (i = 0; i &lt; idx; i++) {\n        select.options[select.options.length] = saved[i];\n    }\n    select.options[select.options.length] = option;\n    while (i &lt; saved.length) {\n        select.options[select.options.length] = saved[i++];\n    }\n}\n</code></pre>\n\n<p>The following will insert an option at the selected index of select with id 'MyPizzaSelect':</p>\n\n<pre><code>var myselect = document.getElementById('MyPizzaSelect');\ninsertOptionToSelect(myselect, myselect.selectedIndex, new Option('Pizza Margarita', '12345'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Vanilla javascript (no jQuery) and cross browser.</strong></p>\n\n<p>To insert a new option into the select \"mySelect\", with value of \"1\" and text of \"text\", before the 0th existing item:</p>\n\n<p><code>mySelect.options.add(new Option(\"text\", \"1\"), mySelect.options[0]);</code></p>\n\n<p>See: <a href=\"https://developer.mozilla.org/en/docs/Web/API/HTMLSelectElement#add%28%29\" rel=\"nofollow\">https://developer.mozilla.org/en/docs/Web/API/HTMLSelectElement#add%28%29</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How can I insert an option element at a specified index in a <code>&lt;select multiple&gt;</code> element?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1402408050,
            "question_id": 6912831,
            "score": 15,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "How to insert option at specified index of select(Multiple) in html?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><strong>Try this:</strong></p>\n\n<ol>\n<li>Decide how many digits of precision you need after the decimal point.</li>\n<li>Multiply your original number by that power of 16 (e.g. 256 if you want two digits).</li>\n<li>Convert it as an integer.</li>\n<li>Put the decimal point in manually according to what you decided in step 1.</li>\n</ol>\n\n<p>Reverse the steps to convert back.</p>\n\n<ol>\n<li>Take out the decimal point, remembering where it was.</li>\n<li>Convert the hex to decimal in integer form.</li>\n<li>Divide the result by the the appropriate power of 16 (16^n, where n is the number of digits after the decimal point you took out in step 1).</li>\n</ol>\n\n<p><strong>A simple example:</strong></p>\n\n<p>Convert decimal 23.5 into hex, and want one digit after the decimal point after conversion.</p>\n\n<p>23.5 x 16 = 376.</p>\n\n<p>Converted to hex = 0x178.</p>\n\n<p>Answer in base 16:  17.8</p>\n\n<p>Now convert back to decimal:</p>\n\n<p>Take out the decimal point:  0x178</p>\n\n<p>Convert to decimal: 376</p>\n\n<p>Divide by 16:  23.5</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Another possibility is to parse the digits separately, splitting the string up in two and treating both parts as ints during the conversion and then add them back together.</p>\n\n<pre><code>function parseFloat(str, radix)\n{\n        var parts = str.split(\".\");\n        if ( parts.length > 1 )\n        {\n                return parseInt(parts[0], radix) + parseInt(parts[1], radix) / Math.pow(radix, parts[1].length);\n        }\n        return parseInt(parts[0], radix);\n}\n\nvar myno = 28.4382;\nvar convno = myno.toString(16);\nvar f = parseFloat(convno, 16);\nalert(myno + \" -> \" + convno + \" -> \" + f );\n\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Please try this:</p>\n\n<pre><code>function hex2dec(hex) {\n    hex = hex.split(/\\./);\n    var len = hex[1].length;\n    hex[1] = parseInt(hex[1], 16);\n    hex[1] *= Math.pow(16, -len);\n    return parseInt(hex[0], 16) + hex[1];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I combined Mark's and Kent's answers to make an overloaded parseFloat function that takes an argument for the radix (much simpler and more versatile):</p>\n\n<pre><code>function parseFloat(string, radix)\n{\n    //split the string at the decimal point\n    string = string.split(/\\./);\n\n    //if there is nothing before the decimal point, make it 0\n    if (string[0] == '') {\n        string[0] = \"0\";\n    }\n\n    //if there was a decimal point &amp; something after it\n    if (string.length &gt; 1 &amp;&amp; string[1] != '') {\n        var fractionLength = string[1].length;\n        string[1] = parseInt(string[1], radix);\n        string[1] *= Math.pow(radix, -fractionLength);\n        return parseInt(string[0], radix) + string[1];\n    }\n\n    //if there wasn't a decimal point or there was but nothing was after it\n    return parseInt(string[0], radix);\n}\n</code></pre>\n\n<p>I hope this helps someone!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'm not sure what hexadecimal format you wanted to parse there, was this something like: \"a1.2c\"?</p>\n\n<p>Floats are commonly stored in hexadecimal format using <a href=\"http://en.wikipedia.org/wiki/IEEE_754-2008\" rel=\"nofollow\">IEEE 754 standard</a>. That standard doesn't use any dots (which don't exist in pure hexadecimal alphabet). Instead of that there are 3 groups of bits of predefined length (1 + 8 + 23 = 32bits in total \u2500 double uses 64bits).</p>\n\n<p>I've written the following function for parsing such a numbers into float:</p>\n\n<pre><code>function hex2float(num) {\n    var sign = (num &amp; 0x80000000) ? -1 : 1;\n    var exponent = ((num &gt;&gt; 23) &amp; 0xff) - 127;\n    var mantissa = 1 + ((num &amp; 0x7fffff) / 0x7fffff);\n    return sign * mantissa * Math.pow(2, exponent);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Try this.</p>\n\n<p>string may be raw data(simple text) with 4 chars(0 - 255) or\nhex string \"0xffffffff\" 4 bytes length</p>\n\n<p><a href=\"http://jsfiddle.net/asler/KZzJZ/\" rel=\"nofollow\">jsfiddle.net</a></p>\n\n<pre><code>var str = '0x3F160008';\n\nfunction parseFloat(str) {\n    var float = 0, sign, order, mantiss,exp,\n    int = 0, multi = 1;\n    if (/^0x/.exec(str)) {\n        int = parseInt(str,16);\n    }else{\n        for (var i = str.length -1; i &gt;=0; i -= 1) {\n            if (str.charCodeAt(i)&gt;255) {\n                console.log('Wrong string parametr'); \n                return false;\n            }\n            int += str.charCodeAt(i) * multi;\n            multi *= 256;\n        }\n    }\n    sign = (int&gt;&gt;&gt;31)?-1:1;\n    exp = (int &gt;&gt;&gt; 23 &amp; 0xff) - 127;\n    mantissa = ((int &amp; 0x7fffff) + 0x800000).toString(2);\n    for (i=0; i&lt;mantissa.length; i+=1){\n        float += parseInt(mantiss[i])? Math.pow(2,exp):0;\n        exp--;\n    }\n    return float*sign;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><a href=\"http://stackoverflow.com/questions/5055635/converting-fractions-into-hexadecimal\">This question</a> made me ask the below question.</p>\n\n<p>I would like to convert a number in base 10 with fraction to a number in base 16.  </p>\n\n<pre><code>var myno = 28.5;\n\nvar convno = myno.toString( 16 );\nalert( convno );\n</code></pre>\n\n<p>all is well there. now i want to convert it back to decimal.<br>\nBut now I cannot write</p>\n\n<pre><code>var orgno = parseInt( convno, 16 );\nalert( orgno );\n</code></pre>\n\n<p>As it doesn't return the decimal part.</p>\n\n<p>And cannot use parseFloat, since per MDC the syntax of parseFloat is</p>\n\n<pre><code>parseFloat(str);\n</code></pre>\n\n<p>It wouldn't have been a problem if I had to convert back to int, since parseInt syntax is</p>\n\n<pre><code>parseInt(str [, radix]);\n</code></pre>\n\n<p>So what is an alternative for this?</p>\n\n<p>Disclaimer: I thought it was a trivial question but googling gave me no answers.</p>\n",
            "last_activity_date": 1356866542,
            "question_id": 5055723,
            "score": 15,
            "tags": [
                "javascript",
                "numbers",
                "hex"
            ],
            "title": "Converting hexadecimal to float in javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This seems standard, return a negative, positive or zero number.</p>\n\n<pre><code>myArray.sort ( function( a , b ){\n  return a-b;\n});\n</code></pre>\n\n<p><a href=\"http://www.w3schools.com/jsref/jsref_sort.asp\">http://www.w3schools.com/jsref/jsref_sort.asp</a></p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>The behavior of Chrome is correct :)</p>\n\n<p>The ECMA standards require the function being passed to sort() to return a number greater than 0, less than 0 or equal to 0. However, the function you have defined returns true / false. ECMA standards state that for a function which does not behave as expected, the implementation depends on the client.</p>\n\n<p><a href=\"http://code.google.com/p/v8/issues/detail?id=103\">Read this</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I think, the correct reason is here: <a href=\"http://stackoverflow.com/questions/3195941/sorting-an-array-of-objects-in-chrome\">Sorting an array of objects in Chrome</a>, more specifically, <a href=\"http://stackoverflow.com/a/3195977/206687\">this post</a>.</p>\n\n<p>Post reading that, if you feel the need to implement your own array sorting function, you may have a look at: <a href=\"http://en.literateprograms.org/Merge_sort_%28JavaScript%29\" rel=\"nofollow\">http://en.literateprograms.org/Merge_sort_%28JavaScript%29</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a way to sort an array using Chrome?</p>\n\n<hr>\n\n<p>Using the sort function does not work as seen in this example:</p>\n\n<pre><code>var myArray = [1,4,5,3,2];\n\nmyArray.sort ( function( a , b ){\n  return b&gt;a\n});\n\nfor ( var i = 0; i &lt; myArray.length; i++ )\n{\n  document.write( myArray[i] )\n}\n</code></pre>\n\n<p>Firefox / IE / Opera / Safri output: <code>54321</code></p>\n\n<p>Chrome output: <code>53241</code></p>\n\n<p><a href=\"http://jsbin.com/ufedu\"><strong>jsBin example</strong></a></p>\n\n<hr>\n\n<p>Thanks for your time!</p>\n",
            "last_activity_date": 1328121644,
            "question_id": 1969145,
            "score": 15,
            "tags": [
                "javascript",
                "arrays",
                "sorting",
                "google-chrome"
            ],
            "title": "Sorting Javascript Array with Chrome?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You never saw it in practice because virtually nothing supports JavaScript 2.0. That draft is from a specification that died before being anything other than draft.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The reason you never saw the <code>class</code> keyword used in practice is that <a href=\"http://en.wikipedia.org/wiki/JavaScript#Versions\">all the current implementations of JavaScript are 1.x.</a></p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/ECMAScript#History%5F2\">JavaScript 2.0 was merged into ECMAScript 4 which was rather unpopular</a> and so never made it into the real world.</p>\n\n<p>So to answer your question, how do you use the <code>class</code> keyword?  You can't.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>You can still build classes in JS of course using prototype!</p>\n\n<pre><code>var foo = function() {\n  this.hurrah = \"yay!\";\n  return this;\n}\n\nfoo.prototype.doit() {\n  alert(this.hurrah);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you've a Java or C# background, here's how to define a class in JavaScript</p>\n\n<pre><code>var MyClass = function (f, l){//constructor \n    //private members\n    var firstName = f,\n        lastName = l,\n        fullName = function () { //fullName is a private function\n            return firstName + \" \" + lastName;\n        };\n    return {\n        //public members\n        getFullName: fullName \n    };\n}\n\nvar output = document.getElementById('Output'); //&lt;div id=\"Output\"&gt;&lt;/div&gt;\nvar myName = new MyClass(\"First\", \"Last\");\noutput.innerHTML = myName.getFullName();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just to add the ECMA5 way of class making.</p>\n\n<p>Note that it does not have a constructor function this way (but you can trigger an init function if you like)</p>\n\n<pre><code>        var Class = {\n          el: null,\n          socket: null,\n\n          init: function (params) {\n\n            if (!(this.el instanceof HTMLElement)) {\n              throw new Error('Chat room has no DOM element to attach on.');\n            }\n\n            return this.doStuff();\n\n          },\n          doStuff: function (params) {\n            return this;\n          }\n        };\n\n    var instanceofClass = Object.create(Class, {\n      el: {\n        value: document.body.querySelector('.what ever')\n      },\n      someMoreData: {\n        value: [0,5,7,3]\n      }\n    }).init();\n</code></pre>\n\n<p>*edit moved description out of code block</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>According to <a href=\"http://www-archive.mozilla.org/js/language/js20-1999-02-18/classes.html\">this article</a> it should be a Javascript 2.0 way to define class. However, I never saw that in practice. Thus the question. How to use class keyword and what is the difference between Javascript 1.x way of doing things?</p>\n",
            "last_activity_date": 1405438589,
            "question_id": 1728984,
            "score": 15,
            "tags": [
                "javascript",
                "class"
            ],
            "title": "Class keyword in Javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There are 3 things around it:</p>\n\n<p>WebSecurity.IsAuthenticated actually returns the value of HttpRequest.IsAuthenticated, which is true if the Forms Authentication cookie has been set and is current. It's not available until the user makes the next request after successfully logging in, which is why you are seeing the behaviour that you describe.</p>\n\n<p>I remember reading on MSDN or someplace, the WebSecurity.IsAuthenticated does not work until the page is fully loaded. Meaning if you login a user in a page and in the same flow of code you check IsAuthenticated, it will NOT return True. For IsAuthenticated to be True the page has to be reloaded or use the better practice; which is to redirect the user to another secured page as soon as the login is successful and in that page check IsAuthenticated.</p>\n\n<p>We had the same issue with Chrome (version 21.0.1180). Despite that we see expiration date on Header, some Chrome in Windows XP ignored it. Then we removed the Expiration Date and Chrome accepted keep the session cookie without problems.</p>\n\n<p>So what to do is:\nAfter login try to check this on new page not on same page.</p>\n\n<p>Also try to set cookie explicitly</p>\n\n<pre><code>System.Web.Security.FormsAuthentication.SetAuthCookie(user.Username, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The issue is not with web security at all, it's with the way you implement your security. You should never be using a userid, email, or anything important in the cookies.</p>\n\n<p>I would suggest you use the <code>FormsAuthentication</code> class to encrypt and decrypt your cookies, and even so, only store something such as the SessionID plus a custom hash of that session ID to verify your self when you decrypt the cookie</p>\n\n<p>Here is a site that  gives a pretty good example: <a href=\"http://www.c-sharpcorner.com/uploadfile/nipuntomar/update-formsauthenticationticket/\" rel=\"nofollow\">http://www.c-sharpcorner.com/uploadfile/nipuntomar/update-formsauthenticationticket/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I don't know if this will help or not.</p>\n\n<p>But I remember I was learning jQuery ajax\nSo I setup a simple project on my laptop. When I tested it, it worked fine on IE, but failed in Chrome. After searching for hours, I found that Chrome will not allow AJAX requests from the local machine. When I tested it using an actual web server it worked fine for IE and Chrome.</p>\n\n<p>So my question and advice is: are you testing on the same machine?\nTry to deploy it to a machine running a web server with a unique domain name and test your application!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<h2>Why is the Web Security is working differently on different browser:</h2>\n\n<p><strong>Details:</strong> </p>\n\n<p><em>I have two applications</em> </p>\n\n<p>One is a simple <code>HTML</code> application and another  one is an <code>ASP.NET MVC4 WebApi</code> application and the projects are inside of same solution and i have set multiple start-up project for run the application for same time .   </p>\n\n<hr/>\n\n<p><strong>Working version:</strong> </p>\n\n<p>I have Used Web Security in the Web API project. I did full implementation of web security...</p>\n\n<p><strong>Login Action Code</strong> </p>\n\n<pre><code>// GET api/company\n[System.Web.Http.AcceptVerbs(\"Post\")]\n[System.Web.Http.HttpPost]\npublic HttpResponseMessage Login(LoginRequest loginRequest)\n{\n    try\n    {\n        if (WebSecurity.Login(loginRequest.EmailAddress, loginRequest.Password, true))\n        {\n            var userDetails = new string[2];\n            userDetails[0] = loginRequest.EmailAddress;\n            var currentUSerRole = Roles.GetRolesForUser(loginRequest.EmailAddress);\n            userDetails[1] = currentUSerRole[0].ToString();\n            HttpResponseMessage response =\n                Request.CreateResponse(HttpStatusCode.Accepted, userDetails);\n            return response;\n        }\n        else\n        {\n            HttpResponseMessage response\n                = Request.CreateResponse(HttpStatusCode.Unauthorized);\n            return response;\n        }\n    }\n    catch (Exception e)\n    {\n            HttpResponseMessage response\n            = Request.CreateResponse(HttpStatusCode.Unauthorized);\n           return response;\n    }  \n}\n</code></pre>\n\n<p><code>*WebSecurity.Login*</code> is working on all browsers when i call the login method using <code>Ajax</code>.\nBut I have another method in another controller, That named as <code>CurrentDateAndUser</code></p>\n\n<p><strong>Code:</strong> </p>\n\n<pre><code>[AllowAnonymous]\n[System.Web.Http.AcceptVerbs(\"Get\")]\n[System.Web.Http.HttpGet]\npublic HttpResponseMessage CurrentDateAndUser()\n{\n    if (WebSecurity.IsAuthenticated)\n    {\n        int userId = WebSecurity.CurrentUserId;\n        string[] currentDateAndUSerId = new string[2];\n        currentDateAndUSerId[0] = userId.ToString();\n        currentDateAndUSerId[1] = DateTime.UtcNow.ToString();\n\n        HttpResponseMessage response =\n            Request.CreateResponse(HttpStatusCode.Accepted, currentDateAndUSerId);\n        return response;\n    }\n    HttpResponseMessage responseNew =\n        Request.CreateResponse(HttpStatusCode.NotAcceptable);\n    return responseNew;\n}\n</code></pre>\n\n<p><strong>Issue:</strong> </p>\n\n<ul>\n<li>If I call the <code>CurrentDateAndUser</code> method from Microsoft Internet Explorer Using an Ajax call, then everything works. The <code>WebSecurity.IsAuthenticated</code> returns true and is working well.</li>\n</ul>\n\n<p><em>However</em>,</p>\n\n<ul>\n<li>If I call the <code>CurrentDateAndUser</code> method from Google Chrome Or Mozilla Firefox using an Ajax call, then nothing works. The <code>WebSecurity.IsAuthenticated</code> always returns false.</li>\n</ul>\n\n<p><em>I don't know why. If you have any idea, then please let me know.</em> </p>\n\n<hr/>\n\n<p><em>I also found a similar problem (not sure if it is a real issue):</em></p>\n\n<p>When I run my application with Fiddler, I see a different result:</p>\n\n<p><strong>When i call the <code>CurrentDateAndUser</code> method from IE, the request is:</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/XPsF5.jpg\" alt=\"enter image description here\"></p>\n\n<p>I can see the Cooke/Login values in above image </p>\n\n<hr/>\n\n<p><strong>But When i call the <code>CurrentDateAndUser</code> method from Chrome And Firefox , the request is:</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/EeLye.jpg\" alt=\"enter image description here\"></p>\n\n<p>I can't see the cookie values, meaning that the <code>Web Security.IsAuthenticated</code> property is returning <code>false</code>. </p>\n\n<hr/>\n\n<hr>\n\n<p>Is it Bug in <code>WebSecurity</code>?????</p>\n\n<hr>\n\n<h2>Edit</h2>\n\n<p><strong>My Ajax request code is</strong> </p>\n\n<pre><code>function GetCurrentUserId() { \n    return $.ajax({\n        method: 'GET',\n        url: rootUrl + '/api/Common/CurrentDateAndUser',\n        async: false\n    }).success(function (response) {\n        return response[0];\n\n    }).error(function () {\n        toastr.error('Somthing is wrong', 'Error');\n    })\n}\n</code></pre>\n\n<p><em>This request does not send the Auth Cookie values to Web API method when I run the application in Chrome and Firefox, however, this request sends the cookie values to the API method, if it is run in IE</em> </p>\n\n<p><strong>i have posted the Image , Please take a look at the above image</strong> </p>\n",
            "last_activity_date": 1401859173,
            "question_id": 23386532,
            "score": 14,
            "tags": [
                "c#",
                "javascript",
                "asp.net",
                "asp.net-mvc",
                "asp.net-web-api"
            ],
            "title": "Web Security in IE VS Chrome &amp; Firefox (bug)"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>All viewable text in a page is in text nodes.  The page consists of a number of different types of nodes (you can see a listing of the different node types here: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node.nodeType\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/Node.nodeType</a>), some of which can have child nodes and some of which cannot.  For example, a div is an ELEMENT node which can contain child nodes.  Those child nodes can be other ELEMENT nodes or they can be TEXT nodes or COMMENT nodes or other types of nodes.</p>\n\n<p>When you set the <code>.innerHTML</code> property of an element node, it creates the appropriate nodes and makes them child nodes of the element that you set the innerHTML property on.  If there is text in the <code>innerHTML</code> you set, then text nodes will be created to hold it.</p>\n\n<p><code>DOCUMENT_NODE</code>, <code>ELEMENT_NODE</code> and <code>TEXT_NODE</code> are the most common node types and are in every page that has text.</p>\n\n<p>In your code example:</p>\n\n<pre><code>var div = document.createElement('div');\nvar text = document.createTextNode('Y HALO THAR');\ndiv.appendChild(text);\n</code></pre>\n\n<p>This creates one text node and puts it into the div you created.  It generates the same DOM structure as this:</p>\n\n<pre><code>var div = document.createElement('div');\ndiv.innerHTML = 'Y HALO THAR';\n</code></pre>\n\n<p>In the latter case, the system creates the text node for you.</p>\n\n<hr>\n\n<p>In plain javascript programming (jQuery tends to shield developers from nodes that aren't of type <code>ELEMENT_NODE</code>), you will encounter text nodes any time you walk the child nodes of an element that has text in it.  You will need to check the <code>.nodeType</code> of each child to know whether it is another element or a text node or some other type of node.</p>\n\n<hr>\n\n<p>In general, there aren't a lot of reasons to manipulate text nodes directly as you can often use the higher level <code>.innerHTML</code> property more simply.  But, to give you an idea, here are a couple reasons you might want to deal directly with text nodes:</p>\n\n<ol>\n<li><p>You want to change some text without affecting any of the elements around it.  <code>.innerHTML</code> creates all new elements for the affected elements which kills any event handlers which might have been set on them, but setting the <code>.nodeValue</code> on a text node doesn't cause any elements to get recreated.</p></li>\n<li><p>If you want to find just the text in a document without any of the resulting HTML markup and know exactly where each piece of text is in the DOM hieararchy, you can just search for all the text nodes.  For example, if you were doing a text search of the document and then highlighting found text, you would probably search text nodes directly.</p></li>\n<li><p>You want to display some text without any security risks that it might contain other markup that the browser would parse and interpret if you used <code>.innerHTML</code>.  So, you create a text node and set the value of its text and the browser won't interpet any HTML in it.  Modern browsers can also use the <code>.textContent</code> property of an element instead of <code>.innerHTML</code> to solve this problem too.</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>So I've been slowly replacing a lot of my normal jQuery code with native javascript, and I happened upon the <code>document.createTextNode()</code> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/document.createTextNode\">related MDN documentation</a>.  After reading I'm somewhat confused what a text node is.  </p>\n\n<p>I understand it can be used to put text inside <code>div</code>'s, but I'm sure there's a bit more to it than just \"use it to put words inside elements\".  <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Text\">Looking at this,</a> it appears a text node can also refer to the text of attributes as well.</p>\n\n<p>Can anyone provide a bit more of a definition of what a text node is and what it's used for?  Are there practical uses for this other than basic stuff like this?</p>\n\n<pre><code>var div = document.createElement('div');\nvar text = document.createTextNode('Y HALO THAR');\ndiv.appendChild(text);\n</code></pre>\n",
            "last_activity_date": 1414976737,
            "question_id": 17195868,
            "score": 14,
            "tags": [
                "javascript",
                "html5",
                "textnode"
            ],
            "title": "What Is A Text Node, Its Uses? //document.createTextNode()"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I would give a try to the jQuery UI widget at: <a href=\"http://jqueryui.com/tooltip/\" rel=\"nofollow\">http://jqueryui.com/tooltip/</a></p>\n\n<p>it is easy to implement and it is visually appealing.</p>\n",
                    "is_accepted": false,
                    "score": -20
                },
                {
                    "body": "<p>There is a chartjs version available along with tooltip\nyou can get it in this github page \n<a href=\"https://github.com/Regaddi/Chart.js/tree/tooltips\">https://github.com/Regaddi/Chart.js/tree/tooltips</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You just have to copy Chart.min.js from <a href=\"https://github.com/nnnick/Chart.js/blob/master/Chart.min.js\" rel=\"nofollow\">https://github.com/nnnick/Chart.js/blob/master/Chart.min.js</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var ctx = document.getElementById(\"canvas\").getContext(\"2d\");\n    window.myLine = new Chart(ctx).Line(lineChartData, {\n        responsive: true,\n        showTooltips: true,\n        multiTooltipTemplate: \"&lt;%= value %&gt;\",\n    });\n</code></pre>\n\n<p>use this to set a gloabl settings in chartjs.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm working on a webapp and I recently swapped google charts with chart.js because it is visually more appealing. However, the one loss that I took is that I can no longer get tooltips above the data points. I was wondering if anyone knows how this can be done as I am a novice with javascript. Here is the code for the graph and the settings:</p>\n\n<pre><code>    var data = {\n            labels : graphData[0],\n            datasets : [\n                {\n                    fillColor : \"rgba(200,160,100,0.5)\",\n                    strokeColor : \"rgba(80,240,70,1)\",\n                    pointColor : \"rgba(80,240,70,1)\",\n                    pointStrokeColor : \"#fff\",\n                    data : graphData[3]\n                },\n                {\n                    fillColor : \"rgba(220,220,220,0.5)\",\n                    strokeColor : \"rgba(220,220,220,1)\",\n                    pointColor : \"rgba(220,220,220,1)\",\n                    pointStrokeColor : \"#fff\",\n                    data : graphData[1]\n                },\n                {\n                    fillColor : \"rgba(151,187,205,0.5)\",\n                    strokeColor : \"rgba(151,187,205,1)\",\n                    pointColor : \"rgba(151,187,205,1)\",\n                    pointStrokeColor : \"#fff\",\n                    data : graphData[2]\n                }\n            ]\n        };\n\n        var options = {\n            scaleShowGridLines : true,\n            scaleShowLabels : true,\n            animationSteps : 150,\n            scaleOverride: true,\n            scaleSteps : Math.max.apply(Math, graphData[3]),\n            scaleStepWidth : 1,\n            scaleStartValue : 1\n        };\n\n        var ctx = document.getElementById(\"chart_div\").getContext(\"2d\");\n        ctx.canvas.width  = Math.max(graphData[0].length * 60, 600);\n        var myNewChart = new Chart(ctx).Line(data,options);\n        $('#chart_area').fadeIn();\n        $('html, body').animate({\n             scrollTop: $(\"#picture_area\").offset().top\n         }, 1000);\n</code></pre>\n",
            "last_activity_date": 1419402921,
            "question_id": 15979149,
            "score": 14,
            "tags": [
                "javascript",
                "charts",
                "chartjs"
            ],
            "title": "How to add tooltips to chart.js graph"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Sure.</p>\n\n<pre><code>var arr = [1,2,3,4,5];\narr.prop = 'value';\n</code></pre>\n\n<p>Arrays are <em>already</em> objects in JavaScript -- they just have some extra features and a special literal syntax.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Yes. You can add them to the object by just declaring them and you can also extend Array using Array.prototype</p>\n\n<pre><code>var j = new Array();\nj.yourprop = \"foo\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Be careful. Some functions, for example JSON.stringify(), ignore properties on arrays.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>As other answers state, it's perfectly possible, because arrays in JavaScript are just objects.  However, there is still the a question of whether it's a good idea or not.</p>\n\n<p>That's a \"coding style\" question, so it's hard to say objectively, but Douglas Crockford doesn't have a problem with it (at least in some cases).  In <a href=\"http://oreilly.com/catalog/9780596517748/\">JavaScript: The Good Parts</a>, he actually uses the example of adding a \"total\" method to an array.</p>\n\n<blockquote>\n  <p>Because an array is really an object, we can add methods directly to an individual array:</p>\n\n<pre><code>// Give the data array a total function\n\ndata.total = function () {\n    return this.reduce(add, 0);\n};\n\ntotal = data.total();    // total is 108\n</code></pre>\n  \n  <p>Since the string <code>'total'</code> is not an integer, adding a <code>total</code> property to an array does not change its length.</p>\n</blockquote>\n\n<p>(p62, Crockford's \"JavaScript The Good Parts\", found on <a href=\"http://books.google.co.uk/books?id=PXa2bby0oQ0C&amp;pg=PA58&amp;lpg=PA58&amp;dq=crockford+properties+on+arrays&amp;source=bl&amp;ots=HJljp2s7iE&amp;sig=5aTyh66Vv0HjBW5KNPTc_yHfTNY&amp;hl=en&amp;sa=X&amp;ei=aCeXU_OhFdjpoASAroCwBw&amp;ved=0CCwQ6AEwAg#v=onepage&amp;q=crockford%20properties%20on%20arrays&amp;f=false\">Google Books</a>)</p>\n\n<p>However, it is worth mentioning that these extra properties are not included in JSON serialisation, and would be thrown away if you do anything like <code>arr = arr.slice(1);</code>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Arrays have a \"length\" property by default.</p>\n\n<p>Can I add custom properties to them?</p>\n\n<p>Without having to make them objects</p>\n",
            "last_activity_date": 1402416351,
            "question_id": 9952126,
            "score": 14,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "Add property to javascript array"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Here's an evil hack that only works in V8. The 140byt.es version:</p>\n\n<pre><code>function x(a,b,c){function d(e,f){d=f}c=(b=Error)[a='prepareStackTrace'];b.captureStackTrace(b[a]=d,x);d.stack;b[a]=c;return d}\n</code></pre>\n\n<p>And the less cryptic version</p>\n\n<pre><code>if ('captureStackTrace' in Error) {\n  void function(){\n    function prepare(e, callsites){\n      return callsites;\n    }\n\n    function stack(f){\n      var e = {};\n      var oldPrepare = Error.prepareStackTrace;\n      Error.prepareStackTrace = prepare;\n      Error.captureStackTrace(e, f || stack.caller);\n      e = e.stack;\n      Error.prepareStackTrace = oldPrepare;\n      return e;\n    }\n\n    function lastReceiver(){\n      return stack(lastReceiver)[2].receiver;\n    }\n\n    var CallSite = stack()[0].constructor;\n    var callsiteMethods = {};\n\n    Object.getOwnPropertyNames(CallSite.prototype).forEach(function(key){\n      if (/^is|^get/.test(key)) {\n        callsiteMethods[key.replace(/^is|^get/, '')] = CallSite.prototype[key];\n      }\n      callsiteMethods.location = CallSite.prototype.toString;\n    });\n\n    CallSite.prototype.resolve = function resolve(){\n      for (var k in callsiteMethods)\n        this[k] = callsiteMethods[k].call(this);\n    }\n\n  }();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>Strict and non-strict code can be mixed. But you can't use caller even if the call to it is not in strict code. Does anybody know any workaround?</p>\n\n<p>I tried this:</p>\n\n<pre><code>(function strict(){\n    \"use strict\";\n    nonStrict();//ok\n    nonStrictCaller();//error :(\n})();\n\nfunction nonStrict(){\n    return 011;//Octal literals are not allowed in strict mode\n}\n\nfunction nonStrictCaller(){\n    return nonStrictCaller.caller;\n}\n</code></pre>\n",
            "last_activity_date": 1394559949,
            "question_id": 9777905,
            "score": 14,
            "tags": [
                "javascript",
                "strict-mode"
            ],
            "title": "How to get caller from strict mode?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Given the \"extremely large\" number of values between 0 and 1, does it really matter? The chances of <em>actually</em> hitting 1 are tiny, so it's very unlikely to make a significant difference to anything you're doing.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The question is akin to asking, <em>what is the floating point number right before 1.0?</em>  There is such a floating point number, but it is one in 2^24 (for an IEEE <code>float</code>) or one in 2^53 (for a <code>double</code>).</p>\n\n<p>The difference is negligible in practice.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>What would be a situation where you would NEED a floating point value to be inclusive of the upper bound? For integers I understand, but for a float, the difference between between inclusive and exclusive is what like 1.0e-32.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Think of it this way. If you imagine that floating-point numbers have arbitrary precision, the chances of getting exactly <code>min</code> are zero. So are the chances of getting <code>max</code>. I'll let you draw your own conclusion on that.</p>\n\n<p>This 'problem' is equivalent to getting a random point on the real line between 0 and 1. There is no 'inclusive' and 'exclusive'.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I believe there is much better decision but this one should work :)</p>\n\n<pre><code>function randomInRange(min, max) {\n  return Math.random() &lt; 0.5 ? ((1-Math.random()) * (max-min) + min) : (Math.random() * (max-min) + min);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Just pick your half-open interval slightly bigger, so that your chosen closed interval is a subset. Then, keep generating the random variable until it lands in said closed interval.</p>\n\n<p>Example: If you want something uniform in [3,8], then repeatedly regenerate a uniform random variable in [3,9) until it happens to land in [3,8].</p>\n\n<pre><code>function randomInRangeInclusive(min,max) {\n var ret;\n for (;;) {\n  ret = min + ( Math.random() * (max-min) * 1.1 );\n  if ( ret &lt;= max ) { break; }\n }\n return ret;\n}\n</code></pre>\n\n<p>Note: The amount of times you generate the half-open R.V. is random and potentially infinite, but you can make the expected number of calls otherwise as close to 1 as you like, and I don't think there exists a solution that doesn't potentially call infinitely many times.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>First off, there's a problem in your code: Try <code>randomInRange(0,5e-324)</code> or just enter <code>Math.random()*5e-324</code> in your browser's JavaScript console.</p>\n\n<p>Even without overflow/underflow/denorms, it's difficult to reason reliably about floating point ops. After a bit of digging, I can find a counterexample:</p>\n\n<pre><code>&gt;&gt;&gt; a=1.0\n&gt;&gt;&gt; b=2**-54\n&gt;&gt;&gt; rand=a-2*b\n&gt;&gt;&gt; a\n1.0\n&gt;&gt;&gt; b\n5.551115123125783e-17\n&gt;&gt;&gt; rand\n0.9999999999999999\n&gt;&gt;&gt; (a-b)*rand+b\n1.0\n</code></pre>\n\n<p>It's easier to explain why this happens with a=2<sup>53</sup> and b=0.5: 2<sup>53</sup>-1 is the next representable number down. The default rounding mode (\"round to nearest even\") rounds 2<sup>53</sup>-0.5 up (because 2<sup>53</sup> is \"even\" [LSB = 0] and 2<sup>53</sup>-1 is \"odd\" [LSB = 1]), so you subtract <code>b</code> and get 2<sup>53</sup>, multiply to get 2<sup>53</sup>-1, and add <code>b</code> to get 2<sup>53</sup> again.</p>\n\n<hr>\n\n<p>To answer your second question: Because the underlying PRNG almost always generates a random number in the interval [0,2<sup>n</sup>-1], i.e. it generates random bits. It's very easy to pick a suitable n (the bits of precision in your floating point representation) and divide by 2<sup>n</sup> and get a predictable distribution. Note that there are some numbers in <code>[0,1)</code> that you will will <em>never</em> generate using this method (anything in (0,2<sup>-53</sup>) with IEEE doubles).</p>\n\n<p>It also means that you can do <code>a[Math.floor(Math.random()*a.length)]</code> and not worry about overflow (homework: In IEEE binary floating point, prove that <code>b &lt; 1</code> implies <code>a*b &lt; a</code> for positive integer <code>a</code>).</p>\n\n<p>The other nice thing is that you can think of each random output x as representing an interval [x,x+2<sup>-53</sup>) (the not-so-nice thing is that the average value returned is slightly less than 0.5). If you return in [0,1], do you return the endpoints with the same probability as everything else, or should they only have half the probability because they only represent half the interval as everything else?</p>\n\n<p>To answer the simpler question of returning a number in [0,1], the method below effectively generates an integer [0,2<sup>n</sup>] (by generating an integer in [0,2<sup>n+1</sup>-1] and throwing it away if it's too big) and dividing by 2<sup>n</sup>:</p>\n\n<pre><code>function randominclusive() {\n  // Generate a random \"top bit\". Is it set?\n  while (Math.random() &gt;= 0.5) {\n    // Generate the rest of the random bits. Are they zero?\n    // If so, then we've generated 2^n, and dividing by 2^n gives us 1.\n    if (Math.random() == 0) { return 1.0; }\n    // If not, generate a new random number.\n  }\n  // If the top bits are not set, just divide by 2^n.\n  return Math.random();\n}\n</code></pre>\n\n<p>The comments imply base 2, but I <em>think</em> the assumptions are thus:</p>\n\n<ul>\n<li>0 and 1 should be returned equiprobably (i.e. the Math.random() doesn't make use of the closer spacing of floating point numbers near 0).</li>\n<li>Math.random() >= 0.5 with probability 1/2 (should be true for even bases)</li>\n<li>The underlying PRNG is good enough that we can do this.</li>\n</ul>\n\n<p>Note that random numbers are always generated in pairs: the one in the <code>while</code> (a) is always followed by either the one in the <code>if</code> or the one at the end (b). It's fairly easy to verify that it's sensible by considering a PRNG that returns either 0 or 0.5:</p>\n\n<ul>\n<li><code>a=0\u00a0\u00a0\u00a0b=0\u00a0\u00a0</code>: return 0</li>\n<li><code>a=0\u00a0\u00a0\u00a0b=0.5</code>: return 0.5</li>\n<li><code>a=0.5\u00a0b=0\u00a0\u00a0</code>: return 1</li>\n<li><code>a=0.5\u00a0b=0.5</code>: loop</li>\n</ul>\n\n<p>Problems:</p>\n\n<ul>\n<li>The assumptions might not be true. In particular, a common PRNG is to take the top 32 bits of a 48-bit LCG (Firefox and Java do this). To generate a double, you take 53 bits from two consecutive outputs and divide by 2<sup>53</sup>, but some outputs are impossible (you can't generate 2<sup>53</sup> outputs with 48 bits of state!). I suspect some of them never return 0 (assuming single-threaded access), but I don't feel like checking Java's implementation right now.</li>\n<li>Math.random() is twice for every <em>potential</em> output as a consequence of needing to get the extra bit, but this places more constraints on the PRNG (requiring us to reason about four consecutive outputs of the above LCG).</li>\n<li>Math.random() is called on average about <em>four</em> times per output. A bit slow.</li>\n<li>It throws away results deterministically (assuming single-threaded access), so is pretty much guaranteed to reduce the output space.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>My solution to this problem has always been to use the following in place of your upper bound.</p>\n\n<pre><code>Math.nextAfter(upperBound,upperBound+1)\n</code></pre>\n\n<p>or</p>\n\n<pre><code>upperBound + Double.MIN_VALUE\n</code></pre>\n\n<p>So your code would look like this:</p>\n\n<pre><code>double myRandomNum = Math.random() * Math.nextAfter(upperBound,upperBound+1) + lowerBound;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>double myRandomNum = Math.random() * (upperBound + Double.MIN_VALUE) + lowerBound;\n</code></pre>\n\n<p>This simply increments your upper bound by the smallest double (<code>Double.MIN_VALUE</code>) so that your upper bound will be included as a possibility in the random calculation.</p>\n\n<p>This is a good way to go about it because it does not skew the probabilities in favor of any one number.</p>\n\n<p>The only case this wouldn't work is where your upper bound is equal to <code>Double.MAX_VALUE</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>private static double random(double min, double max) {\n    final double r = Math.random();\n    return (r &gt;= 0.5d ? 1.5d - r : r) * (max - min) + min;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I am fairly less experienced, So I am also looking for solutions as well.</p>\n\n<p>This is my rough thought:</p>\n\n<p>random number generators produce numbers in [0,1) instead of [0,1],</p>\n\n<p>because [0,1) is an unit length that can be followed by [1,2) and so on without overlapping...</p>\n\n<p>For random[x,y],\nYou can do this:</p>\n\n<pre><code>float randomInclusive(x, y){\n\n    float MIN = smallest_value_above_zero;\n    float result;\n    do{\n        result = random(x, (y + MIN));\n    } while(result &gt; y);\n    return result;\n}\n</code></pre>\n\n<p>Where all values in [x,y] has the same possibility to be picked, and u can reach y now.</p>\n\n<p>Please let me know if this does not work, or has potential problems.</p>\n\n<p>THANKS~</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>We can easily get random floating point numbers within a desired range <code>[X,Y)</code> (note that X is inclusive and Y is exclusive) with the function listed below since <code>Math.random()</code> (and most pseudorandom number generators, AFAIK) produce numbers in <code>[0,1)</code>:</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>function randomInRange(min, max) {\n  return Math.random() * (max-min) + min;\n}\n// Notice that we can get \"min\" exactly but never \"max\".\n</code></pre>\n\n<p>How can we get a random number in a desired range <em>inclusive</em> to both bounds, i.e. <code>[X,Y]</code>?</p>\n\n<p>I suppose we could \"increment\" our value from <code>Math.random()</code> (or equivalent) by \"rolling\" the bits of an <a href=\"http://en.wikipedia.org/wiki/IEEE_754-2008\">IEE-754 floating point double precision</a> to put the maximum possible value at 1.0 exactly but that seems like a pain to get right, especially in languages poorly suited for bit manipulation.  Is there an easier way?</p>\n\n<p>(As an aside, why do random number generators produce numbers in <code>[0,1)</code> instead of <code>[0,1]</code>?)</p>\n\n<p><strong>[Edit]</strong> Please note that I have no <em>need</em> for this and I am fully aware that the distinction is pedantic.  Just being curious and hoping for some interesting answers.  Feel free to vote to close if this question is inappropriate.</p>\n",
            "last_activity_date": 1419873975,
            "question_id": 9724404,
            "score": 14,
            "tags": [
                "java",
                "javascript",
                "c",
                "language-agnostic",
                "random"
            ],
            "title": "Random floating point double in Inclusive Range"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The current draft of HTML5 doesn't require the type attribute for script tags.</p>\n\n<p>Also the <code>&lt;![CDATA</code> is not required in HTML5 (it was XHTML specific anyway). </p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>The CDATA comments are for XML, so only applicable if you're serving your pages up as xml (which you shouldn't be if it's HTML5).</p>\n\n<p>As for the type attribute, it's optional now in HTML5.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<blockquote>\n  <p>Is it still necessary (or even good practice) when using HTML5 to declare the script type when using a script block?</p>\n</blockquote>\n\n<p>HTML 5 defines text/javascript as the default, and you'd be hard pressed to find a browser that didn't treat it as such. So you can omit it.</p>\n\n<blockquote>\n  <p>Plus what about using a CDATA block in the script for browser parsing?</p>\n</blockquote>\n\n<p>Pointless unless you are writing XHTML 5 and using characters such as <code>&lt;</code> or <code>&amp;</code> in the script (but you should almost always be using external scripts anyway). </p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Is it still necessary (or even good practice) when using HTML5 to declare the script type when using a script block?</p>\n\n<p>e.g. <code>&lt;script type=\"text/javascript\"&gt;</code></p>\n\n<p>Plus what about using a CDATA block in the script for browser parsing? </p>\n\n<p>e.g. <code>// &lt;![CDATA[  ... ~code here ~... // ]]&gt;</code></p>\n\n<p>Any help much appreciated.</p>\n",
            "last_activity_date": 1302529642,
            "question_id": 5622091,
            "score": 14,
            "tags": [
                "javascript",
                "html5",
                "content-type"
            ],
            "title": "HTML5 &lt;script&gt; declarations"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Resource interpreted as script but transferred with MIME type text/html.</p>\n</blockquote>\n\n<p>Technically that's not an error but a notice / warning and should not cause any issues in particular; if anything it's a good indication that some browsers may choose to ignore such a response.</p>\n\n<p>The correct <code>Content-Type</code> response header for JavaScript according to the <a href=\"http://www.rfc-editor.org/rfc/rfc4329.txt\" rel=\"nofollow\">RFC</a> is:</p>\n\n<pre><code>Content-Type: application/javascript\n</code></pre>\n\n<p>Previous values of <code>text/javascript</code> and <code>application/x-javascript</code> are either obsolete or deprecated respectively; that said, IE &lt;= 8 will only accept the former so be careful when making any changes to your documents.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I had same issue and it was caused by <em>Web.Config</em> authorization block, I had to add an entry in <em>Web.Config</em> to make this script available also when not logged in:</p>\n\n<pre><code>&lt;location path=\"Scripts/jquery-2.0.3.min.js\"&gt;\n  &lt;system.web&gt;\n    &lt;authorization&gt;\n      &lt;allow users=\"*\"/&gt;\n    &lt;/authorization&gt;\n  &lt;/system.web&gt;\n&lt;/location&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Sorry if this is actual duplicate but I haven't managed to find answer for my problem.</p>\n\n<p>I load the script with jQuery's $.getScript. But it causes the following error:</p>\n\n<blockquote>\n  <p>Resource interpreted as script but transferred with MIME type text/html.</p>\n</blockquote>\n\n<p>The problem appears only in Safari under Mac OS</p>\n\n<p>If to look on headers received from the server, they contain <code>Content-Type:application/x-javascript</code>, so I really don't understand what the problem is.</p>\n",
            "last_activity_date": 1401950931,
            "question_id": 5349939,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "osx",
                "safari",
                "http-headers"
            ],
            "title": "&quot;Resource interpreted as script but transferred with MIME type text/html.&quot;"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There's an orange in your apple basket there, <code>this</code> has a very specific contextual meaning.  The choice is really between <code>self</code> and <code>me</code> of those options.  Between those...you choose, it doesn't matter either way only personal preference.</p>\n\n<p><code>this</code> refers to the context your in, so it's not really an \"option\" without introducing a lot of confusion and easy to make errors.  I see <code>self</code> used much more than <code>me</code> (in example code, frameworks, libraries, etc).  It's just preference, but I agree <code>self</code> is more attractive, not sure why...again just <em>my</em> preference.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I personally use <code>that</code>, but anything else that's clear is fine.</p>\n\n<p>I wouldn't use <code>self</code> because the global variable/<code>window</code>-property <code>self</code> already exists as a reference to <code>window</code>. Although it's totally useless (so no-one is likely to care that you're shadowing it), it slightly increases the risk of silly errors going un-noticed:</p>\n\n<pre><code>var se1f= this;         // mis-spelled (perniciously). or maybe you just forgot to write line\nonclick= function() {\n    self.foo= 1;        // whoops, just wrote to `window`!\n};\n</code></pre>\n\n<p>whereas:</p>\n\n<pre><code>var thot= this;\nonclick= function() {\n    that.foo= 1;        // error thrown\n};\n</code></pre>\n\n<p>Slightly contrived, but JavaScript's so sloppy with letting errors slide you don't really want to make it any more so.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>Well personally I'm trying to get better at making the variable mean something a little more than \"that thing I need later\".  Often you need those temporary variables in situations that get a little gnarly; there might be two or more layers of temporary <code>this</code> stashes to keep track of.</p>\n\n<p>Thus, for example in a jQuery setup, I might use something to note the element type that a temporary <code>this</code> stash should hold:</p>\n\n<pre><code>$('form').each(function() {\n  var $form = $(this);\n  $form.find('input:checkbox').each(function() {\n    var $checkbox = $(this);\n    // ...\n  });\n});\n</code></pre>\n\n<p>Using the \"$\" prefix on the variables is a nice way to keep track of whether the object has been \"jQuery-ized\" or not :-)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>While coding JavaScript sometimes you store the reference of object <code>this</code> in a local variable for different purposes (to set proper scope, to help code obfuscators, etc.). There are coders who prefer aliasing <code>this</code> to <code>that</code> to make it obvious its intention. Other guys use <code>self</code> since it's pointing to the object itself. I even saw source codes where <code>me</code> held the reference and it still makes sense. Certainly there are other ones.</p>\n\n<p>Which one should I prefer? Is there a convention on which to use or is it only the matter of taste.</p>\n",
            "last_activity_date": 1272030153,
            "question_id": 2698831,
            "score": 14,
            "tags": [
                "javascript",
                "naming-conventions",
                "this"
            ],
            "title": "that, self or me \u2014 which one to prefer in JavaScript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Since IE6 is essentially limited to:</p>\n\n<ul>\n<li>class selectors</li>\n<li>ID selectors</li>\n<li>(space) descendant selectors</li>\n<li>a:-only pseudo-selectors</li>\n</ul>\n\n<p>your only options are:</p>\n\n<ul>\n<li>Use more classes to identify your elements</li>\n<li>Use JavaScript (<strong>strongly</strong> not recommended except in highly specialized cases)</li>\n</ul>\n\n<p>I find it very helpful to take advantage of the ability to assign multiple classes to an element by separating them with a space: <code>class=\"foo bar\"</code></p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Use classes, that's the only workaround, sadly.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This isn't possible without peppering your HTML with a stack of extraneous class selectors, sadly.</p>\n\n<p>I'd recommend designing your site so that your entirely valid CSS works for people using modern browsers, and that it's still usable in the IE6, albeit visually not quite right. You just have to find the right balance between getting your site up to standard and bending over backwards for users who won't upgrade. It's a broken browser, treat it as such.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Dean Edwards' <a href=\"http://code.google.com/p/ie7-js/\">IE7 JavaScript library</a> provides <a href=\"http://ie7-js.googlecode.com/svn/test/index.html\">attribute selector support</a> for IE 5 and 6.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you want attribute selector in IE6, you can use Dean Edward IE.js.\n<a href=\"http://dean.edwards.name/IE7/\">http://dean.edwards.name/IE7/</a></p>\n\n<p>That will make IE 5+ behave much more like IE7</p>\n\n<pre>\nsupports the following CSS selectors: \nparent > child\nadjacent + sibling\nadjacent ~ sibling\n[attr], [attr=\"value\"], [attr~=\"value\"] etc\n.multiple.classes (fixes bug)\n:hover, :active, :focus (for all elements)\n:first-child, :last-child, only-child, nth-child, nth-last-child\n:checked, :disabled, :enabled\n:empty, :contains(), :not()\n:before/:after/content:\n:lang()\n</pre>\n\n<p>I didn't have IE6 (use IE7) so i can't said it worked, but give it a try</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If you're using jQuery on your site, another option is <a href=\"http://skulljackpot.com/2009/04/19/super-css-selector-support-with-jquery/\" rel=\"nofollow\">SuperSelectors</a> - it goes through your site\u2019s stylesheets, dynamically adding classes to elements so that even IE6 can bask in the glow of properly supporting CSS selectors like <code>ul li:first-child li:nth-child(odd) a:hover</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong><a href=\"http://sarfraznawaz.wordpress.com/2010/02/22/css-attribute-selector/\" rel=\"nofollow\">Here is some detailed info about CSS selectors</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use Internet Explorer CSS expressions combined with the safe underscore (\"_\", IE6 and earlier) CSS hack:</p>\n\n<pre><code>/* Adds dotted bottom border to `&lt;ABBR&gt;` with a `title` attribute. */\nabbr {\n        _border-bottom: expression(this.title ? '1px dotted' : 'none');\n}\n\nabbr[title] {\n        border-bottom: 1px dotted;\n}\n</code></pre>\n\n<p>I do understand, that you did ask for \"valid\" CSS, but if the CSS hack above freaks you out, please read about <a href=\"http://mathiasbynens.be/notes/safe-css-hacks\" rel=\"nofollow\">Safe CSS Hacks</a>.</p>\n\n<p>The above could be changed to:</p>\n\n<pre><code>.ie6 abbr {\n        _border-bottom: expression(this.title ? '1px dotted' : 'none');\n}\n\nabbr[title] {\n        border-bottom: 1px dotted;\n}\n</code></pre>\n\n<p>That is if your HTML began as:</p>\n\n<pre><code>&lt;!--[if lt IE 7]&gt;&lt;html class=\"ie6\"&gt;&lt;![endif]--&gt;\n&lt;!--[if IE 7]&gt;   &lt;html class=\"ie7\"&gt;&lt;![endif]--&gt;\n&lt;!--[if IE 8]&gt;   &lt;html class=\"ie8\"&gt;&lt;![endif]--&gt;\n&lt;!--[if gt IE 8]&gt;&lt;!--&gt;&lt;html&gt;&lt;!--&lt;![endif]--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>One of the projects which I am working uses CSS \"attribute\" selector [att]</p>\n\n<p><a href=\"http://www.w3.org/TR/CSS21/selector.html#attribute-selectors\">CSS Selectors</a> </p>\n\n<p>which is not supported by ie6:\n<a href=\"http://msdn.microsoft.com/en-us/library/cc351024%28VS.85%29.aspx#attributeselectors\">Support for CSS selectors in IE6</a> (look for text \"Attribute Selectors\")</p>\n\n<p>Is there any workaround/hack which is of course valid html/css to overcome this problem?</p>\n",
            "last_activity_date": 1344008193,
            "question_id": 649341,
            "score": 14,
            "tags": [
                "javascript",
                "css",
                "internet-explorer",
                "internet-explorer-6",
                "css-selectors"
            ],
            "title": "How to workaround: IE6 does not support CSS &quot;attribute&quot; selectors"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I'm not sure about Android or BlackBerry, but iOS will automatically pick up telephone numbers and wrap them like so: <code>&lt;a href=\"tel:xxx\"&gt;xxx&lt;/a&gt;</code>...so you could have a hidden <code>&lt;div&gt;</code> somewhere that contains a phone number like 1-800-555-5555, then, on page load do something like this:</p>\n\n<pre><code>var isTelephone = $(\"a[href*='tel:']\").length &gt; 0;\n</code></pre>\n\n<p>This may or may not be portable to other platforms, you'll have to try it out.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>One might be able to find the first instance of an href with tel:// in it and post an ajax call. If it was successful it should have a readyState of 1 so do nothing. On failure, find all hrefs with tel:// and grab inner html and replace the a tag.</p>\n\n<p>This is more of a hypothesis and untested.</p>\n\n<p>Another thought is most browser have custom support for phone number formatted strings, If you place in a phone number you shouldn't have to create the a tag as it should be done automatically.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'm using the following to detect its <strong>PROBABLY</strong> a phone before enhancing a non link element that into a tel link:</p>\n\n<pre><code>var probablyPhone = (\n    (/iphone|android|ie|blackberry|fennec/).test\n     (navigator.userAgent.toLowerCase())\n     &amp;&amp; 'ontouchstart' in document.documentElement\n  );\n</code></pre>\n\n<p><em>I exclude ipod|ipad because I know they are not phones</em></p>\n\n<p>The key point here is <strong>PROBABLY</strong>\nIt will of course return true an some tablet devices, but this enough for my purposes on a non phone touch device the link would just fail anyway - I mostly just want to exclude desktop hence the touch event detect. I suppose <em>also checking device width</em> would narrow it down too but ultimately there is no guaranteed way to detect a mobile device that is capable of phone calls  that I've found.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In my website, I have several links like so:</p>\n\n<p><code>&lt;a href=\"tel://+12181112222\" class=\"call\"&gt;218.111.2222&lt;/a&gt;</code></p>\n\n<p>I want to use jQuery (or other method) to determine whether the device supports making calls / using the tel:// protocol. Does such a method exist in the world?</p>\n\n<p>I want to use some method for enabling or disabling the links, because when clicked on desktop we come to a page like \"Firefox doesn't know how to open this address, because the protocol (tel) isn't associated with any program.\"</p>\n\n<p>Currently, I am sniffing the user agent and detecting if it is a mobile device. But, is there a better/accurate way? Something like jQuery's <code>$.support.xx</code>?</p>\n\n<pre><code>if ( (/iPhone|iPod|iPad|Android|BlackBerry/).test(navigator.userAgent) != true ){\n    $(\".call\").attr(\"href\", \"#\");\n}\n</code></pre>\n",
            "last_activity_date": 1392240830,
            "question_id": 17345177,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "mobile",
                "detection",
                "browser-detection"
            ],
            "title": "Use jQuery to detect whether a device can make telephone calls (supports &quot;tel://&quot; protocol)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It might be easier to setup something like <a href=\"http://easyxdm.net/wp/\" rel=\"nofollow\">easyXDM</a>.  It is rather quick to get going and will do all the backwards compatibility for you (all the way to IE6).  It might not be the home-grown solution you are looking for but if you want cross-domain (where you have access to both sides) in a hurry it fits the bill.  </p>\n\n<p>You could always write your own iframe (postMessage) interface but why re-invent the wheel (and don't forget to set your document.domain if you are using different sub-domains).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Ok, I figured it out. The certificate I'm using for the HTTPS domain is self-signed and unverified. Adding it to the list of trusted third-party authorities fixed it for me.</p>\n\n<p>You can install the certificate in Windows 7 through IE. This worked for me:\n<a href=\"http://productforums.google.com/forum/#!topic/chrome/bds-Ao9LigA%5B1-25%5D\">http://productforums.google.com/forum/#!topic/chrome/bds-Ao9LigA%5B1-25%5D</a>\npost by <code>zacharysyoung 2/11/09</code>\nMake sure you run IE(9) <strong>as administrator</strong> or the install will fail even-though it says it installed it correctly.</p>\n\n<blockquote>\n  <ol>\n  <li>Open Internet Explorer (IE) and navigate to the site hosting the self-signed certificate. </li>\n  <li>IE should display a page warning that, 'There is a problem with this web site's security certificate.' </li>\n  <li>Click the, 'Continue to this website (not recommended)' link. </li>\n  <li>Once the page has loaded, look to the right of the address bar. A red/pink button, labeled 'Certificate Error,' should be visible. Click\n  that button. </li>\n  <li>A pop-up, titled 'Untrusted Certificate,'  will appear. Click the 'View certificates' link at the bottom of the pop-up. </li>\n  <li>Another pop-up, titled 'Certificate,' will appear. Click the 'Install Certificate...' button. </li>\n  <li>The 'Certificate Import Wizard' will be started. Click the 'Next' button. </li>\n  <li>** For XP:    a. Leave 'Automatically select the certificate...' option selected, and click the 'Next' button.     ** For Vista:    a.\n  Choose 'Place all certificates in the following store' option, and\n  click the 'Browse' button.    b. Click the 'Show physica stores'\n  checkbox.    c. Expand the 'Third-Party Root Certification\n  Authorities' folder, and choose 'Local Computer'. Click the 'OK'\n  button.    d. Click the 'Next' button. </li>\n  <li>This should display the 'Completing the Certificate Import Wizard' dialog. Click the 'Finish' button. </li>\n  <li>A 'Security Warning' pop-up will appear. The warning is informing you that the certificate's origin cannot actually be validated. You\n  should know where the certificate is coming from. If you do, click the\n  'Yes' button to install the certificate. </li>\n  <li>A final pop-up informing you that, 'The import was successful,' will be displayed. Click the 'OK' button. </li>\n  <li>Restart/Open Chrome and navigate to the site in question. You should <em>not</em> be greeted by the security warning page.</li>\n  </ol>\n</blockquote>\n\n<p>Aside from that, I think I may have discovered a bug in Chrome. See:\n<a href=\"https://code.google.com/p/chromium/issues/detail?id=141839\">https://code.google.com/p/chromium/issues/detail?id=141839</a></p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>I'm trying to make Cross-Domain webservice calls from an HTTP page to an HTTPS service.</p>\n\n<p>I have set up the proper CORS headers on the server (it works with HTTP-HTTP and HTTPS-HTTPS).</p>\n\n<p>It <em>does</em> work if I change the requests to JSONp.</p>\n\n<p>What I'm seeing in Chrome and Firefox is the HTTPS request is <em>never sent</em>, it's immediately <em>aborted</em>, and the server never sees the request.</p>\n\n<p>It is worth noting that the preflight <code>OPTIONS</code> request is aborted (and it doesn't reach the server).</p>\n\n<p>I can't find any source that explains that this is indeed not possible (HTTP to HTTPS) and better yet: explains <em>why</em>. I can understand HTTPS to HTTP is unsafe, but the othe way around should be fine right? It seems silly to me because JSONp works (but it's messy).</p>\n\n<p><strong>notes</strong></p>\n\n<p>I also have <code>withCredentials</code> set to <code>true</code> and I'm sending some custom headers and a custom <code>Content-Type</code>: <code>application/json</code></p>\n\n<p>I'm using the regular XMLHTTPRequest with fallbacks to JSONp for IE&lt;=9</p>\n",
            "last_activity_date": 1344602260,
            "question_id": 11690191,
            "score": 13,
            "tags": [
                "javascript",
                "https",
                "xmlhttprequest",
                "cors"
            ],
            "title": "Cross domain request from HTTP to HTTPS aborts immediately"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>Some</strong> browsers in <strong>some</strong> rendering modes will create a global variable for each element with an id.</p>\n\n<p>It is non-standard, won't work everywhere and definitely can't be depended upon.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>They don't \"both work the same\". IE introduced making element ids into global variables, other browsers copied it to some extent but don't fully support it. It's considered a very bad idea, just don't do it.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><code>mybox.value</code> does not work in most cases.  I believe IE is the only browser (and only some versions of it) that would support it.  In my Firefox browser, I get <code>mybox not defined</code> error message in the console.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/4321839/document-getelementbyidsomeid-vs-someid\">document.getElementById(&ldquo;someId&rdquo;) Vs. someId</a>  </p>\n</blockquote>\n\n\n\n<p>For example I have an element with <code>id=\"mybox\"</code> attribute, is there any difference between calling it with <code>document.getElementById('mybox')</code> and <code>mybox</code> directly, as I see both work same in most browsers? The jsfiddle shows <strong>live example</strong> <a href=\"http://jsfiddle.net/usmanhalalit/TmS3k/\">http://jsfiddle.net/usmanhalalit/TmS3k/</a> </p>\n\n<p>If there is no difference then why <code>document.getElementById('mybox')</code> is so popular, is it a bad practice to call <code>mybox</code> directly?</p>\n",
            "last_activity_date": 1316530494,
            "question_id": 7487078,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "What is the difference between document.getElementById(&#39;mybox&#39;) and mybox?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>It's actually very similar to jQuery:</p>\n\n<pre><code>document.getElementsByClassName('class1 class2')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                }
            ],
            "body": "<p>Say I have this:</p>\n\n<pre><code>&lt;div class=\"class1 class2\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>How do I select this <code>div</code> element?</p>\n\n<pre><code>document.getElementsByClassName('class1')[0].getElementsByClassName('class2')[0]\n</code></pre>\n\n<p>That does not work.\nI know that, in jQuery, it is <code>$('.class1.class2')</code>, but I'd like to select it with vanilla JavaScript.</p>\n",
            "last_activity_date": 1424462771,
            "question_id": 7184562,
            "score": 13,
            "tags": [
                "javascript",
                "class",
                "element"
            ],
            "title": "Javascript - how to get elements with multiple classes"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>To get a broad idea go to:</p>\n\n<p><a href=\"http://caniuse.com/#search=placeholder\" rel=\"nofollow\">http://caniuse.com/#search=placeholder</a></p>\n\n<p>And to test in the browser you can do:</p>\n\n<pre><code>function supportsPlaceholder() {\n  var i = document.createElement('input');\n  return 'placeholder' in i;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you want to include third party libraries like Modernizr and yepnope.js, it's really easy to test for support and progressively enhance, gracefully degrade.</p>\n\n<p>This is a good article with lots of resources that should help: <a href=\"http://www.sitepoint.com/regressive-enhancement-with-modernizr-and-yepnope/\" rel=\"nofollow\">http://www.sitepoint.com/regressive-enhancement-with-modernizr-and-yepnope/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://diveinto.html5doctor.com/everything.html#placeholder\" rel=\"nofollow\">http://diveinto.html5doctor.com/everything.html#placeholder</a></p>\n\n<pre><code>return 'placeholder' in document.createElement('input');\n</code></pre>\n\n<p>However, the jQuery plugin you're using might already be checking for native support - you might <em>not</em> need to do this yourself.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<pre><code>var placeholderSupported = ( 'placeholder' in document.createElement('input') );\n</code></pre>\n\n<p>The variable <code>placeholderSupported</code> will be <code>true</code> if it is natively supported. Otherwise, it'll be set to <code>false</code>.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>I borrowed from the answer above and made it so that it is backwards compatible with older modern browsers as well as IE --</p>\n\n<p>With the below code, make sure you have both a 'value' and 'placeholder' attribute set for the input fields.  In my particular case I needed to support IE variants.  </p>\n\n<p>Explanation -- If the browser supports placeholder the input value is removed.  If not, the older browsers will ignore the placeholder attributes and the below js mimics the default placeholder behavior.  This script will also ignore any auth tokens for CSRF (was getting an error where the auth token values were getting cleared in my forms causing a CSRF warning in my Rails apps).</p>\n\n<p>Another approach to simplify the script itself is to assign a class to each input you specifically want to utilize this script and update the true statement accordingly (though the below method is a bit more dry).</p>\n\n<pre><code>var placeholderSupported = !!( 'placeholder' in document.createElement('input') );\n\nif (placeholderSupported === true){\n    $('input:not([type=\"submit\"], [name=\"authenticity_token\"])').val('');\n} else{\n    $('input')\n      .focus(function() {\n            if (this.value === this.defaultValue) {\n                this.value = '';\n            }\n      })\n      .blur(function() {\n            if (this.value === '') {\n                this.value = this.defaultValue;\n            }\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I find out if the browser supports the HTML5 placeholder tag, so I can decide whether to hook my jQuery placeholder plugin or not.</p>\n",
            "last_activity_date": 1369059402,
            "question_id": 7060265,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "html5",
                "placeholder"
            ],
            "title": "HTML5 &quot;placeholder&quot; support"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The max length property is camel-cased: <kbd>maxLength</kbd></p>\n\n<p>jQuery doesn't come with a maxlength method by default. Also, your document ready function isn't technically correct:</p>\n\n<pre><code>$(document).ready(function () {\n    $(\"#ms_num\")[0].maxLength = 6;\n    // OR:\n    $(\"#ms_num\").attr('maxlength', 6);\n    // OR you can use prop if you are using jQuery 1.6+:\n    $(\"#ms_num\").prop('maxLength', 6);\n});\n</code></pre>\n\n<p>Also, since you are using jQuery, you can rewrite your code like this (taking advantage of jQuery 1.6+):</p>\n\n<pre><code>$('input').each(function (index) {\n    var element = $(this);\n    if (index === 1) {\n        element.prop('maxLength', 3);\n    } else if (element.is(':radio') || element.is(':checkbox')) {\n        element.prop('maxLength', 5);\n    }\n});\n\n$(function() {\n    $(\"#ms_num\").prop('maxLength', 6);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>set the attribute, not a property</p>\n\n<pre><code>$(\"#ms_num\").attr(\"maxlength\", 6);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Not sure what you are trying to accomplish on your first few lines but you can try this:</p>\n\n<pre><code>$(document).ready(function()\n{\n    $(\"#ms_num\").attr('maxlength','6');\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 44
                }
            ],
            "body": "<p>I want to change the maxlength of a textbox with javascript or JQuery:  I tried the following but it didn't seem to help:</p>\n\n<pre><code>var a = document.getElementsByTagName('input');\nfor(var i=0; i&lt;a.length; i++) {\n    if((a[i].type!= 'radio')||(a[i].type!= 'checkbox'))\n        a[i].maxlength = 5;\n}\ndocument.getElementsByTagName('input')[1].maxlength=\"3\";\n\n$().ready(function()\n{\n    $(\"#inputID\").maxlength(6);\n});\n</code></pre>\n\n<p>What am I doing wrong?</p>\n",
            "last_activity_date": 1344867847,
            "question_id": 6141680,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "input",
                "textbox"
            ],
            "title": "setting maxlength of textbox with javascript or jQuery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"http://jsfiddle.net/BVbgf/11/\" rel=\"nofollow\">fiddle</a>. This is Undefined Behaviour. It's a mess. </p>\n\n<p>How firefox interprets it is handled by the other answers</p>\n\n<p><strong>How chrome interprets it</strong></p>\n\n<pre><code>var foo = function() { return 1 };\nif (true) {\n    function foo() {\n        return 2;\n    }\n}\nconsole.log(foo());\n</code></pre>\n\n<p>What's acctually happening is <code>function foo</code> is being declared then overwritten with a local variable <code>foo</code> immediately.</p>\n\n<p>This gets translated into</p>\n\n<pre><code>function foo() {\n    return 2;\n}\nvar foo;\nfoo = function() { return 1 };\nif (true) { }\nconsole.log(foo());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The code in the question is not actually allowed at all by current ECMAScript syntax (as of ECMAScript 5).  You can do <code>var foo = function() {}</code> inside a block, but you can only do <code>function foo() {}</code> at the toplevel in functions or scripts.</p>\n\n<p>Currently browsers support the code in the question in incompatible ways because they're all implementing extensions to the core language and they implement different extensions.  A fully conforming ECMAScript 5 implementation would actually end up with a SyntaxError when compiling this script.</p>\n\n<p>There are proposals to add the ability to do this sort of thing to ECMAScript, but they're not quite finalized yet.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>The original poster's code isn't permitted by the ECMAScript standard. (ECMAScript the official name for the JavaScript language specification, for legal reasons.) It is, however, a common extension to the language&mdash;one which is, unfortunately, implemented differently in different browsers.</p>\n\n<p>In standard JavaScript, function definitions may only occur in top level code, or at the top level of a function's body. You can't have conditionals, loops, or even curly braces between the enclosing function's body and the the function definition.</p>\n\n<p>For example, this is permitted:</p>\n\n<pre><code>  function f() {\n    function g() {\n      ...\n    }\n  }\n</code></pre>\n\n<p>but this is not:</p>\n\n<pre><code>  function f() {\n    {\n      function g() {\n        ...\n      }\n    }\n  }\n</code></pre>\n\n<p>What complicates the picture is that most browsers <em>do</em> accept this latter code, but each assigns its own idiosyncratic interpretation to it. Firefox treats it like:</p>\n\n<pre><code>  function f() {\n    {\n      var g = function g() {\n        ...\n      }\n    }\n  }\n</code></pre>\n\n<p>The ECMAScript committee is considering choosing a specific interpretation for these \"function statements\" (as opposed to function definitions). They haven't made a decision yet. Mozilla is discussing its preferred solution <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=585536\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>Both are technically wrong, according to the ECMAScript standard, because function declarations are only allowed at the top level or directly inside other functions. Technically a function declaration inside an <code>if</code> block is a syntax error. Most implementations allow it as in extension, but they interpret it differently.</p>\n\n<p>The reason for the difference is that Chrome is treating the <code>foo</code> \"declaration\" as a normal function declaration and hoisting it to the beginning of the scope. Firefox (for historical reasons IIRC) only declares the function when the <code>if</code> statement gets executed.</p>\n\n<p>To better demonstrate the difference, you could try running this similar code:</p>\n\n<pre><code>console.log(foo()); // 2 in Chrome, error in FF\n\nvar foo = function(){ return 1; };\nconsole.log(foo()); // 1 in both Chrome and FF\n\nif (true) {\n    function foo(){ return 2; }\n}\nconsole.log(foo()); // 1 in Chrome // 2 in FF\n</code></pre>\n\n<p><strong>Edit:</strong> Your second example is exactly the same. JavaScript doesn't have block scope, only function-level and program-level. The \"problem\" isn't that the function declaration is in a block, it's that it's not a top-level statement.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>There is no specified behavior for a function declaration not found at the top level of a program or at the top level of a function body.  Or, rather, the specified behavior is a syntax error, because the JavaScript grammar doesn't allow such function declarations.  The reason for the different behaviors is that browsers historically have been all over the map here, and they remain so due to existing sites written with browser-specific code paths that make it impossible for anyone to change.</p>\n\n<p><a href=\"http://whereswalden.com/2011/01/24/new-es5-strict-mode-requirement-function-statements-not-at-top-level-of-a-program-or-function-are-prohibited/\" rel=\"nofollow\">Strict mode prohibits this syntax</a>, for what it's worth, and it's likely a future version of ECMAScript will define it.  But for now you should not use it, because its behavior is not precisely defined by specs, and you'll get different behavior in different browsers.</p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<pre><code>  var foo = function(){ return 1; };\n  if (true) {\n    function foo(){ return 2; }\n  }\n  foo(); // 1 in Chrome // 2 in FF\n  //I just want to be sure, is FF 4 not \"standard\" in this case?\n</code></pre>\n\n<p>Edit:</p>\n\n<p>what if we have this:</p>\n\n<pre><code>  var foo = function(){ return 1; };\n  if (true) function foo(){ return 2; }      \n  foo(); // is 1 standard or is 2 standard?\n</code></pre>\n",
            "last_activity_date": 1305157140,
            "question_id": 5758042,
            "score": 13,
            "tags": [
                "javascript",
                "firefox",
                "google-chrome",
                "standards"
            ],
            "title": "Which JS function-declaration syntax is correct according to the standard?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The \"View Source\" code is the code <strong>before</strong> any JavaScript is applied.  </p>\n\n<p>Firefox's Web Dev toolbar will allow you to view the resulting post-JavaScript source code from the View Source > View Generated Source menu option.  </p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Before. The page source is the result of the GET request by the browser sans headers. If you want to view the updated content after scripts and so forth, you'll have to use a tool like Firebug or the Web Development toolbar.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Unfortunately, it will always display the HTML as the page was before DOM-change by javascript, etc. So the answer is: what you are seeing is \"raw as received by HTTP GET\".</p>\n\n<p>You can use a tool like Firebug (Firefox &amp; Chrome) to see live dom changes. Or you can make your own function to display the live dom.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It is the source that was returned to the browser by the server, before DOM updates made through javascript.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In Firefox there is a menu item that displays \"Page Source\": View | Page Source (Ctrl+U).\nIn Internet Explorer there is a similar function.</p>\n\n<p>When you invoke it, it displays a nicely formatted and syntax-highlighted collection of HTML (and JavaScript) code.</p>\n\n<p>What I don't know is whether this HTML (viewable in the Page Source) is the result of <em>pre-processing</em> of the JavaScript (resulting in modification of the original raw HTML) or just <em>raw</em> as received by HTTP GET.</p>\n",
            "last_activity_date": 1386972595,
            "question_id": 5301554,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "internet-explorer",
                "firefox"
            ],
            "title": "Is &quot;Page Source&quot; BEFORE or AFTER JavaScript has been rendered?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You are missing the <code>?</code> in the second URL (Also, it should be URL-encoded to be <code>%3F</code>).</p>\n\n<p>Also, I believe that the remaining <code>&amp;</code> need to be URL, not HTML-encoded.  Change <code>&amp;second=12&amp;third=5</code> to <code>%26second=12%26third=5</code> and everything should just work.</p>\n\n<p>This:</p>\n\n<pre><code>&amp;u=http://www.foobar.com/first=12&amp;amp;sec=25&amp;amp;position=2\n</code></pre>\n\n<p>should be:</p>\n\n<pre><code>&amp;u=http://www.foobar.com/%3Ffirst=12%26sec=25%26position=2\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You have to escape the &amp; character. Turn your </p>\n\n<pre><code>&amp;\n</code></pre>\n\n<p>into </p>\n\n<pre><code>&amp;amp;\n</code></pre>\n\n<p>and you should be good.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>In your example parts of your passed-in URL are not URL encoded (for example the colon should be %3A, the forward slashes should be %2F).  It looks like you have encoded the parameters to your parameter URL, but not the parameter URL itself.  Try encoding it as well.  You can use <code>encodeURIComponent</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Rather than <code>html encoding</code> your URL parameter, you need to <code>URL encode</code> it:</p>\n\n<pre><code>http://www.facebook.com/sharer.php?&amp;t=FOOBAR&amp;u=http%3A%2F%2Fwww.foobar.com%2F%3Ffirst%3D12%26sec%3D25%26position%3D\n</code></pre>\n\n<p>You can do this easily in most languages - <a href=\"http://stackoverflow.com/questions/332872/how-to-encode-a-url-in-javascript\">in javascript</a>:</p>\n\n<pre><code>var encodedParam = encodeURIComponent('www.foobar.com/?first=1&amp;second=12&amp;third=5');\n// encodedParam = 'http%3A%2F%2Fwww.foobar.com%2F%3Ffirst%3D12%26sec%3D25%26position%3D'\n</code></pre>\n\n<p>(there are equivalent methods in other languages too)</p>\n",
                    "is_accepted": true,
                    "score": 27
                }
            ],
            "body": "<p>Basically I'm trying to pass a URL like this:</p>\n\n<pre><code>www.foobar.com/?first=1&amp;second=12&amp;third=5\n</code></pre>\n\n<p>into a URL like this:</p>\n\n<pre><code>http://www.facebook.com/sharer.php?&amp;t=FOOBAR&amp;u=http://www.foobar.com/first=12&amp;amp;sec=25&amp;amp;position=2\n</code></pre>\n\n<p>It only recognizes the first parameter. I'm having the same problem with LinkedIn and Twitter sharing, so it must be something I'm doing wrong.</p>\n",
            "last_activity_date": 1392897776,
            "question_id": 5095887,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "query-parameters"
            ],
            "title": "How do I pass a URL with multiple parameters into a URL?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There's the <code>onhashchange</code> event, but it cannot be cancelled reliably across browsers to prevent scrolling.  The best solution is to record the scroll position before changing the hash location and reset it afterwards.  For example, the following code will catch a click on any link \u2015 that doesn't stop propagation \u2015 with a href value of <code>#</code> and prevent the page from scrolling vertically:</p>\n\n<pre><code>document.onclick = function (evt) {\n    var tgt = (evt &amp;&amp; evt.target) || event.srcElement,\n        scr = document.body.scrollTop;\n\n    if (tgt.tagName == \"A\" &amp;&amp; tgt.href.slice(-1) == \"#\") {\n        window.location.href = \"#\";\n        document.body.scrollTop = scr;           \n        return false;\n    }\n}\n</code></pre>\n\n<p>If you're changing the hash through script, you can use the following code:</p>\n\n<pre><code>var scr = document.body.scrollTop;\nwindow.location.href = '#';\ndocument.body.scrollTop = scr;\n</code></pre>\n\n<p>Either of those methods can be adjusted to avoid scrolling individual elements or scrolling the page horizontally.\u2002Note that you <em>can</em> <a href=\"http://stackoverflow.com/a/5298684/94197\">remove the entire hash</a> (including the <code>#</code>) without causing navigation or scrolling in modern browsers by calling the <code>pushState</code> or <code>replaceState</code> functions. </p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>I was having the same problem and came here for an answer. Just found out there is a very easy way:</p>\n\n<pre><code>window.location.hash = ' ';\n</code></pre>\n\n<p>Basically you are setting it to '# ', since the space doesn't exist, it doesn't move. When you revisit the page, it also doesn't treat it any differently than just #</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>First off, thanks for your solutions - @Andy-E and @JustMaier.</p>\n\n<p>However, I had a problem getting it to work based on Andy E's second code block in Firefox and JustMaier's code in chrome. </p>\n\n<p>So I did a mash up of those two code blocks and it works just as intended on both browsers</p>\n\n<pre><code>var scr = document.body.scrollTop;\n\nwindow.location.hash = ' ';\n\ndocument.body.scrollTop = scr;\n</code></pre>\n\n<p><br />\nMy two cents, taking nothing away from the real JS ninjas, mentioned above. : )</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>in my website i set the url adress using</p>\n\n<pre><code>window.location.hash = 'project_name';\n</code></pre>\n\n<p>but if i want to clean the adress url from any hashes (when i close a project) and i set</p>\n\n<pre><code>window.location.hash = '';\n</code></pre>\n\n<p>it happens the page scrolls up to the top page</p>\n\n<p>there is any way to clean up the url without any side effect?</p>\n\n<p>thanks</p>\n",
            "last_activity_date": 1363245967,
            "question_id": 4715073,
            "score": 13,
            "tags": [
                "javascript",
                "fragment-identifier"
            ],
            "title": "window.location.hash = &quot; &quot;; prevent scrolling to the top?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Creating a <code>script</code> DOM element is the only available way as far as I know. After checking the source code of jQuery and YUI, I couldn't find a better way. Both use this technique. Check out the <a href=\"http://code.jquery.com/jquery-latest.js\">globalEval function</a> in jQuery, and the _<a href=\"http://yui.yahooapis.com/2.7.0/build/yuiloader/yuiloader.js\">scriptNode function</a> in YUI.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<pre><code>document.write( '&lt;script language=\"javascript\" src=\"myotherscript.js\" /&gt;' );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>What is the best way to add a reference to a javascript file from another javascript file?</p>\n\n<p>Suppose that I have a js file included in my webpage. This javascript has a dependency on another file. So I want to reference the dependency within my js file, and not from the html code. Is my thinking correct?</p>\n\n<p>I know I can create a <code>script</code> DOM element and then append it to the page, but that smells bad for me.</p>\n\n<p>Have you any tips about that? </p>\n",
            "last_activity_date": 1337466246,
            "question_id": 842504,
            "score": 13,
            "tags": [
                "javascript",
                "reference"
            ],
            "title": "How should I include a js file from another js file?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>If you are using something similar to the jiddle code you have to check if browser is safari and then make it a different way like:</p>\n\n<pre><code>$(function () {\n    var $header = $('h1'),\n        $container = $('.container'),\n        $scrollContainer = $('.scroll-container'),\n        scrollContainerOffset = $scrollContainer.offset().top;\n    $scrollContainer.on('scroll', function () {\n        var top = Math.max(0, $container.offset().top * -1 + scrollContainerOffset);\n        $header.css('top', top + 'px');\n\n    });\n});\n</code></pre>\n\n<p>Even when it isn't the way you want your problem to be solved, it might be a workaround that may help...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>How about a little restructuring, like this:\n<a href=\"http://jsfiddle.net/me2loveit2/zT9KQ/6/\" rel=\"nofollow\">http://jsfiddle.net/me2loveit2/zT9KQ/6/</a></p>\n\n<p>html:</p>\n\n<pre><code>&lt;div&gt;\n&lt;h1&gt;Header&lt;/h1&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"content\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.container {\n    height: 300px;\n    position: relative;\n    overflow-y:scroll;\n}\n.content {\n    height:1000px;\n}\nh1 {\n    position: relative;\n    top:0px;\n    left:0px;\n    margin: 0;\n    width: 100%;\n    background: black;\n    color: white;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It appears to be a bug with Safari scrolling. If you drag the scrollbar manually (don't use the trackpad gesture to scroll), then there is no jittering.</p>\n\n<p>Chrome (and other browsers) handle scrolling differently which is why this bug is only present on Safari. You might want to submit a bug report to Apple.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Since there is an <a href=\"http://jsfiddle.net/AJj56/\">apparent delay</a> between scrolling with the trackpad and the <code>scroll</code> event firing, you can attach the handler to an additional <a href=\"http://www.quirksmode.org/dom/events/scroll.html\"><code>mousewheel</code> event</a> to smoothen things up.</p>\n\n<pre><code>$scrollContainer.on('scroll mousewheel', function () {\n    // reinvent the wheel here\n});\n</code></pre>\n\n<p>You can see in <a href=\"http://jsfiddle.net/Y5SFY/\">this demo here</a> that jittering is far less likely to occur when you scroll with the trackpad. In the demo, I have invoked the handler on load to eliminate the flash when you first scroll on Safari. There may still be some occasional jitter, but if you want to minimize that, you can go the resource intensive way of <a href=\"http://jsfiddle.net/M2zvu/\">using <code>setInterval</code> and <code>requestAnimationFrame</code></a>.</p>\n\n<p>This might fix the problem for now, but as I have said before, this emulation approach is not ideal and you are very likely to run into more trouble down the road.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Scroll events are sent asynchronously in various browsers; you should not rely on them to do things like this.</p>\n\n<p>The best solution would be to use position:-webkit-sticky; top: 0;</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could try and disable all and any javascript-ish scroll handling and just simply remove</p>\n\n<p><code>position: relative;</code> from the <code>.container</code>. </p>\n\n<p>Afterwards just add <code>h1{ top:0; }</code> and it will happily stick to the <code>.scroll-container</code>.</p>\n\n<p>Excerpt from CSS absolute positioning:</p>\n\n<blockquote>\n  <p>Position it at a specified position relative to its closest positioned ancestor...</p>\n</blockquote>\n\n<p>To explain - your absolute H1 will look up the tree for the first ancestor element which defines a \"position\" property and inherit it as a 0,0 reference point.</p>\n\n<p>It could be a WTF at first, but this behaviour is a powerhouse once you tame it. </p>\n\n<p>EDIT: Related to the original jsFiddle, I made some more property removals:</p>\n\n<p><a href=\"http://jsfiddle.net/253Ss/\" rel=\"nofollow\">http://jsfiddle.net/253Ss/</a></p>\n\n<p>^ <code>.container</code> wrapper could be removed as well, since it is no more neccessary in a technical sense.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a simple JSFiddle of a single floating header here:</p>\n\n<p><a href=\"http://jsfiddle.net/zT9KQ/\" rel=\"nofollow\">http://jsfiddle.net/zT9KQ/</a></p>\n\n<p>Basically, this uses <code>translate3d</code> to kick in the GPU and hardware accelerate the floating header so that it may be drawn more smoothly. The header jitters in the latest Safari but gets drawn perfectly fine in the latest Chrome, FF and Opera. The actual code that is being affected by this (the code that spurred this question) is code I've written that cannot be shared publicly but works in a similar manner where <code>fixed</code> positioning is, unfortunately, not a valid solution.</p>\n\n<p>I have tried:</p>\n\n<ol>\n<li>Setting the <code>backface-visibility</code> CSS property to <code>none</code>.</li>\n<li>Setting the <code>perspective</code> CSS property to <code>1000</code>.</li>\n<li>Playing with <code>requestAnimationFrame</code> during the animation logic.</li>\n<li>Throttling the scroll event callback.</li>\n<li>Setting the <code>translateZ</code> transform to something higher than <code>0px</code>.</li>\n</ol>\n\n<p>But none of this has worked (or at least - it seems reasonable to assume the GPU has kicked in but the jittering persists). I noticed that two questions are already open that are identical this one I'm raising but no one has answered them:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/23546270/jitter-in-sticky-header-in-safari\">Jitter in Sticky Header in Safari</a></li>\n<li><a href=\"http://stackoverflow.com/questions/16546411/implementing-fixed-position-in-javascript-causes-jitter-in-safari-when-scrolling\">Implementing fixed position in javascript causes jitter in Safari when scrolling</a></li>\n</ul>\n\n<p>Is this a known bug? Is there a performance hole I'm not sealing up?</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>I have been receiving a lot of questions as to why <code>position: fixed</code> is not a valid option. To directly reply to Antony's comment on the question itself:</p>\n\n<p>I'm not emulating/reinventing <code>position: fixed</code>. If you look at the top-voted answer (as of this comment), you will see that this seems to be a Safari issue. The reason <code>position: fixed</code> is undesirable in this case is because the code in question must be able to support multiple floating headers that sit below each other and have a \"container\" range where there may be infinitely nested containers. Using fixed positioning not only makes the code more complicated in the case where these floating headers live in a container that horizontally scrolls but also makes the component more brittle overall (calculating offsets when the widget needs to sit within another container somewhere else on the page). So, semantically, <code>absolute</code> positioning fits my needs better than <code>fixed</code>.</p>\n\n<p><strong>SECOND EDIT</strong></p>\n\n<p>Upon thinking about what Antony had been telling me (that I may be reinventing the wheel), and after hearing about <code>-wekbit-sticky</code> from user3716477, I would like to update the question to show what I'm trying to do. You can see how my code behaves in every browser other than Safari here:</p>\n\n<p><a href=\"http://cl.ly/3y1i3C473G2G\" rel=\"nofollow\">http://cl.ly/3y1i3C473G2G</a></p>\n\n<p>I have learned:</p>\n\n<ol>\n<li>You cannot rely on the <code>scroll</code> or really any scroll-like events (such as <code>mousewheel</code>) since they are asynchronous in nature. I submitted a bug to Apple detailing what was happening and they closed the bug for this reason.</li>\n<li>There is no real way to do what I want as of now - to have multiple floating headers that stack and replace each other. I guess I'll have to wait for something like <a href=\"http://updates.html5rocks.com/2012/08/Stick-your-landings-position-sticky-lands-in-WebKit\" rel=\"nofollow\"><code>-webkit-sticky</code></a> to come out.</li>\n<li>I should include <em>all</em> relevant information in SO questions from here on out. :-P</li>\n</ol>\n\n<p>Thanks for playing guys! Here's the exact response I received from Apple:</p>\n\n<blockquote>\n  <p>Apple Developer Relations09-Jun-2014 01:16 PM</p>\n  \n  <p>Engineering has determined that there are no plans to address this\n  based on the following:</p>\n  \n  <p>Code is using scroll events, which are asynchronous.</p>\n  \n  <p>We are now closing this bug report.</p>\n  \n  <p>If you have questions regarding the resolution of this issue, please\n  update your bug report with that information.</p>\n  \n  <p>Please be sure to regularly check new Apple releases for any updates\n  that might affect this issue.</p>\n</blockquote>\n",
            "last_activity_date": 1403955317,
            "question_id": 23990069,
            "score": 12,
            "tags": [
                "javascript",
                "css",
                "animation",
                "safari"
            ],
            "title": "Absolute Positioned Floating Header Jitters in Safari"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Based on <a href=\"https://groups.google.com/forum/#!msg/q-continuum/TfV8TIYaCpc/01BDfJ28JXwJ\">this confusing discussion</a> it's a false positive. </p>\n\n<p>To silence the logging you can do this:</p>\n\n<pre><code>Q.stopUnhandledRejectionTracking();\n</code></pre>\n\n<p>If you didn't capture the rejection it would throw the error, so you'll still see it in the console after adding the code above. JSFiddle: <a href=\"http://jsfiddle.net/homeyer/FpyDr/22/\">http://jsfiddle.net/homeyer/FpyDr/22/</a></p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>I'm getting into promises pattern with Q and I keep getting warning \"[Q] Unhandled rejection reasons (should be empty)\" in console. What em I doing wrong?</p>\n\n<p><a href=\"http://jsfiddle.net/FpyDr/1/\">http://jsfiddle.net/FpyDr/1/</a></p>\n\n<pre><code>function load(url) {\n    var deferred = Q.defer();\n\n    $.ajax({\n        type: \"GET\",\n        processData: false,\n        dataType: \"html\",\n        url: url,\n        cache: false\n    }).done(function (response, status, xhr) {\n\n        deferred.reject(new Error(\"test error\"));\n\n        return;\n    }).fail(function (xhr, status, error) {\n\n        deferred.reject(new Error(\"ajax failed\"));\n\n        return;\n    });\n\n    return deferred.promise;\n}\n\nload(\"http://fiddle.jshell.net\")\n    .then(function (result) {\n        console.log(\"got result\", typeof(result));\n    })\n    .catch(function (error) {\n        console.log(\"got error\", error);\n        return true;\n    })\n    .done();\n</code></pre>\n",
            "last_activity_date": 1375904947,
            "question_id": 17544965,
            "score": 12,
            "tags": [
                "javascript",
                "promise",
                "q"
            ],
            "title": "Unhandled rejection reasons (should be empty)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Yes it's possible to extend a native JS object in TS, however there is an issue extending built-in types (those included in lib.d.ts) like Array. Read this post for workaround: <a href=\"http://typescript.codeplex.com/workitem/4\">http://typescript.codeplex.com/workitem/4</a></p>\n\n<p>So defining a type interface which extends a native type object at a later stage can be done in the following way:</p>\n\n<pre><code>/// &lt;reference path=\"lib.d.ts\"/&gt;\ninterface Array {\n    sort: (input: Array) =&gt; Array;\n}\n</code></pre>\n\n<p>Using on a concrete example, you can sort some elements on an array which define a sort function in an interface and later implements it on an object.</p>\n\n<pre><code>class Math implements Array {\n    sort : (x: Array) =&gt; Array {\n          // sorting the array\n    }\n}\nvar x = new Math();\nx.sort([2,3,32,3]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I don't think there is a way to inherit existing interfaces like Array,</p>\n\n<pre><code>export class Xarray implements Array {\n\n}\n</code></pre>\n\n<p>You should create a function and inherit it with its prototype. Typescript also will accept it which is similar to javascript.</p>\n\n<pre><code>function Xarray(...args: any[]): void; // required in TS 0.9.5\nfunction Xarray()\n{\n    Array.apply(this, arguments);\n   // some stuff for insert, add and remove notification\n}\nXarray.prototype = new Array();\n</code></pre>\n\n<p><strong>UPDATE:</strong> This one is discussed well and provided the best solution for this at <a href=\"http://jqfaq.com/how-to-extend-native-javascipt-object-in-typescript/\" rel=\"nofollow\">jqfaq.com</a>.</p>\n\n<pre><code>//a dummy class it to inherite array.\nclass XArray {\n    constructor() {\n        Array.apply(this, arguments);   \n        return new Array();\n    }\n    // we need this, or TS will show an error,\n    //XArray[\"prototype\"] = new Array(); will replace with native js arrray function\n    pop(): any { return \"\" };\n    push(val): number { return 0; };\n    length: number;\n}\n//Adding Arrray to XArray prototype chain.\nXArray[\"prototype\"] = new Array();\n\n//our Class\nclass YArray extends XArray {\n///Some stuff\n}\n\nvar arr = new YArray();\n//we can use the array prop here.\narr.push(\"one\");\narr.push(\"two\");\n\ndocument.writeln(\"First Elemet in array : \" + arr[0]);\ndocument.writeln(\"&lt;/br&gt;Array Lenght : \" + arr.length);\n</code></pre>\n\n<p>Hope, this might help you!!!</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>If you already have a working Xarray implementation, I don't see the point in recreating it in typescript, which eventually will compile back to JavaScript.</p>\n\n<p>But I do see the point in being able to use the Xarray in TypeScirpt. </p>\n\n<p>In order to accomplish this, you simply need an interface for your Xarray. You don't even need to have a concrete implementation of your interface since your existing js implementation will serve as one.</p>\n\n<pre><code>interface Xarray{\n    apply(...arguments : any[]) : void;\n    //some stuff for insert, add and ...\n}\ndeclare var Xarray: {\n   new (...items: any[]): Xarray;\n   (...items: any[]): Xarray;\n   prototype: Array; // This should expose all the Array stuff from EXMAScript \n}\n</code></pre>\n\n<p>After doing this,  should be able to use your custom defined type through the declared variable without actually implementing it in TypeScript.</p>\n\n<pre><code>var xArr = new Xarray();\nxArr.apply(\"blah\", \"hehe\", \"LOL\");\n</code></pre>\n\n<p>You might look for reference here to see how they typed the ECMAScript Array API:\n<a href=\"http://typescript.codeplex.com/SourceControl/changeset/view/2bee84410e02#bin/lib.d.ts\" rel=\"nofollow\">http://typescript.codeplex.com/SourceControl/changeset/view/2bee84410e02#bin/lib.d.ts</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In your case, a good bet would be to use this pattern:</p>\n\n<pre><code>function XArray(array) {\n  array = array || [];\n\n  //add a new method\n  array.second = function second() {\n    return array[1];\n  };\n\n  //overwrite an existing method with a super type pattern\n  var _push = array.push;\n  array.push = function push() {\n    _push.apply(array, arguments);\n    console.log(\"pushed: \", arguments);\n  };\n\n  //The important line.\n  return array\n}\n</code></pre>\n\n<p>Then you can do:</p>\n\n<pre><code>var list = XArray([3, 4]);\nlist.second()   ; =&gt; 4\n\nlist[1] = 5;\nlist.second()   ; =&gt; 5\n</code></pre>\n\n<p>note however that:</p>\n\n<pre><code>list.constructor  ; =&gt; Array and not XArray\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>While researching this, I came across Ben Nadel's excellent post on <a href=\"http://www.bennadel.com/blog/2292-extending-javascript-arrays-while-keeping-native-bracket-notation-functionality.htm\" rel=\"nofollow\">Extending JavaScript Arrays While Keeping Native Bracket-Notation Functionality</a>. After some initial confusion on how to succesfully convert this into TypeScript, I created a fully working Collection class that can be subclassed.</p>\n\n<p>It can do everything an Array can, including indexing by brackets,use in loop constructions (for, while, forEach), maps, etc.</p>\n\n<p><strong>The main implementation points are</strong></p>\n\n<ol>\n<li>Create an array in the constructor, add the methods to the array and return that from the constructor</li>\n<li>Copy dummy declarations of Array methods to pass the <code>implements Array</code> bit</li>\n</ol>\n\n<p><strong>Example of usage:</strong></p>\n\n<pre><code>  var foo = new Foo({id : 1})\n  var c = new Collection();\n\n  c.add(foo)\n  c.length === 1;    // =&gt; true\n\n  foo === c[0];      // =&gt; true\n  foo === c.find(1); // =&gt; true\n</code></pre>\n\n<p>I made it <a href=\"https://gist.github.com/fatso83/3773d4cb5f39128b3732\" rel=\"nofollow\">available as a gist</a>, complete with tests and an example implementation of a subclass, but I present the full source here:</p>\n\n<pre><code>/*\n * Utility \"class\" extending Array with lookup functions\n *\n * Typescript conversion of Ben Nadel's Collection class.\n * https://gist.github.com/fatso83/3773d4cb5f39128b3732\n *\n * @author Carl-Erik Kopseng\n * @author Ben Nadel (javascript original)\n */\n\nexport interface Identifiable {\n    getId : () =&gt; any;\n}\n\nexport class Collection&lt;T extends Identifiable&gt; implements Array&lt;T&gt; {\n\n    constructor(...initialItems:any[]) {\n        var collection = Object.create(Array.prototype);\n\n        Collection.init(collection, initialItems, Collection.prototype);\n\n        return collection;\n    }\n\n    static init(collection, initialItems:any[], prototype) {\n        Object.getOwnPropertyNames(prototype)\n            .forEach((prop) =&gt; {\n                if (prop === 'constructor') return;\n\n                Object.defineProperty(collection, prop, { value: prototype[prop] })\n            });\n\n        // If we don't redefine the property, the length property is suddenly enumerable!\n        // Failing to do this, this would fail: Object.keys([]) === Object.keys(new Collection() )\n        Object.defineProperty(collection, 'length', {\n            value: collection.length,\n            writable: true,\n            enumerable: false\n        });\n\n        var itemsToPush = initialItems;\n        if (Array.isArray(initialItems[0]) &amp;&amp; initialItems.length === 1) {\n            itemsToPush = initialItems[0];\n        }\n        Array.prototype.push.apply(collection, itemsToPush);\n\n        return collection;\n    }\n\n    // Find an element by checking each element's getId() method\n    public find(id:any):T;\n\n    // Find an element using a lookup function that\n    // returns true when given the right element\n    public find(lookupFn:(e:T) =&gt; boolean):T ;\n\n    find(x:any) {\n        var res, comparitor;\n\n        if (typeof x === 'function') {\n            comparitor = x;\n        } else {\n            comparitor = (e) =&gt; {\n                return e.getId() === x;\n            }\n        }\n\n        res = [].filter.call(this, comparitor);\n\n        if (res.length) return res[0];\n        else return null;\n    }\n\n    // Add an element\n    add(value:T);\n\n    // Adds all ements in the array (flattens it)\n    add(arr:T[]);\n\n    add(arr:Collection&lt;T&gt;);\n\n    add(value) {\n\n        // Check to see if the item is an array or a subtype thereof\n        if (value instanceof Array) {\n\n            // Add each sub-item using default push() method.\n            Array.prototype.push.apply(this, value);\n\n        } else {\n\n            // Use the default push() method.\n            Array.prototype.push.call(this, value);\n\n        }\n\n        // Return this object reference for method chaining.\n        return this;\n\n    }\n\n    remove(elem:T):boolean;\n\n    remove(lookupFn:(e:T) =&gt; boolean):boolean ;\n\n    remove(x:any):boolean {\n        return !!this._remove(x);\n    }\n\n    /**\n     * @return the removed element if found, else null\n     */\n    _remove(x:any):T {\n        var arr = this;\n        var index = -1;\n\n        if (typeof x === 'function') {\n\n            for (var i = 0, len = arr.length; i &lt; len; i++) {\n                if (x(this[i])) {\n                    index = i;\n                    break;\n                }\n            }\n\n        } else {\n            index = arr.indexOf(x);\n        }\n\n        if (index === -1) {\n            return null;\n        }\n        else {\n            var res = arr.splice(index, 1);\n            return res.length ? res[0] : null;\n        }\n    }\n\n\n    // dummy declarations\n    // \"massaged\" the Array interface definitions in lib.d.ts to fit here\n    toString:()=&gt; string;\n    toLocaleString:()=&gt; string;\n    concat:&lt;U extends T[]&gt;(...items:U[])=&gt; T[];\n    join:(separator?:string)=&gt; string;\n    pop:()=&gt; T;\n    push:(...items:T[])=&gt; number;\n    reverse:()=&gt; T[];\n    shift:()=&gt; T;\n    slice:(start?:number, end?:number)=&gt; T[];\n    sort:(compareFn?:(a:T, b:T) =&gt; number)=&gt; T[];\n    splice:(start?:number, deleteCount?:number, ...items:T[])=&gt; T[];\n    unshift:(...items:T[])=&gt; number;\n    indexOf:(searchElement:T, fromIndex?:number)=&gt; number;\n    lastIndexOf:(searchElement:T, fromIndex?:number)=&gt; number;\n    every:(callbackfn:(value:T, index:number, array:T[]) =&gt; boolean, thisArg?:any)=&gt; boolean;\n    some:(callbackfn:(value:T, index:number, array:T[]) =&gt; boolean, thisArg?:any)=&gt; boolean;\n    forEach:(callbackfn:(value:T, index:number, array:T[]) =&gt; void, thisArg?:any)=&gt; void;\n    map:&lt;U&gt;(callbackfn:(value:T, index:number, array:T[]) =&gt; U, thisArg?:any)=&gt; U[];\n    filter:(callbackfn:(value:T, index:number, array:T[]) =&gt; boolean, thisArg?:any)=&gt; T[];\n    reduce:&lt;U&gt;(callbackfn:(previousValue:U, currentValue:T, currentIndex:number, array:T[]) =&gt; U, initialValue:U)=&gt; U;\n    reduceRight:&lt;U&gt;(callbackfn:(previousValue:U, currentValue:T, currentIndex:number, array:T[]) =&gt; U, initialValue:U)=&gt; U;\n    length:number;\n[n: number]: T;\n}\n</code></pre>\n\n<p>Of course, the bits on <code>Identifiable</code>, the <code>find</code> and <code>remove</code> methods are not needed, but I supply them none the less as a full fledged example is a tad more usable than a bare-bones Collection without any methods of its own.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there any way to inherit a class from JS native function.</p>\n\n<p>For (eg) i have js function like this in my js.</p>\n\n<pre><code>function Xarray()\n{\n    Array.apply(this, arguments);\n  //some stuff for insert, add and remove notification\n}\nXarray.prototype = new Array();\n</code></pre>\n\n<p>I tried to convert it to Typescript but i failed!!</p>\n\n<pre><code>export class Xarray implements Array {\n\n}\n</code></pre>\n\n<p>the compailer ask me to define all Array Interface property, i know if need this <code>Xarray.prototype = new Array();</code> i have to extend Array in TS, how to extent the JS native object in TS?</p>\n",
            "last_activity_date": 1414495755,
            "question_id": 14000645,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "typescript"
            ],
            "title": "How to extend native JavaScript array in TypeScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Possibly you are not setting a correct mime type for your json content (for IE try text/plain)</p>\n\n<p>See: <a href=\"http://stackoverflow.com/questions/4792291/what-problems-may-using-the-mime-type-application-json-cause\">What problems may using the MIME type application/json cause?</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've solved that with this trick</p>\n\n<pre><code>return Json(new { success = false, message = ex.Message }, \"text/html\");\n</code></pre>\n\n<p>And now it works. But can me anyone explain why it works with text/html, and didn't work with application/json and text/plain. First is trying to download JSON and second is returning undefined properties for JSON fields.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>I was using this same uploader and had the same problem.</p>\n\n<p>It has to do with the request headers sent. IE needs the request to have an accept header that indicates json. </p>\n\n<pre><code>xhr.setRequestHeader(\"Accept\", \"application/json, text/javascript, */*; q=0.01\");\n</code></pre>\n\n<p>If you insert this after this line:</p>\n\n<pre><code>xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n</code></pre>\n\n<p>in the js file (mine is called fileuploader.js) then you should no longer have the problem, and don't need to indicate text/html in your return.</p>\n\n<p>p.s. \nI commented out the content-type line, but am no longer sure why. If just adding this the accept line does not work, try commenting out the content-type header as well.</p>\n\n<p>Edit:</p>\n\n<p>I looked at my file again, and it seems like also made another change. </p>\n\n<p>Instead of the line:</p>\n\n<pre><code>xhr.send(file)\n</code></pre>\n\n<p>I put in:</p>\n\n<pre><code>var formData = new FormData();\nformData.append(\"image\", file);\nxhr.send(formData);\n</code></pre>\n\n<p>This comes after the setrequesrheader line above. </p>\n\n<p>I am not sure if this change will work for all uses, like multiple file upload. I only upload a single image for my use. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This problem occurs when using an upload plugin that uses an <code>iframe</code> to do the upload with IE (tested on 9.0).</p>\n\n<p>IE sets the header <code>Accept: text/html, , application/xhtml+xml, */*</code> and so when you reply with <code>Content-type: application/json</code>, it assumes it's the file (or at least that's the only explanation I could find on the web).</p>\n\n<p>Thus, to circumvent that, you need to set <code>Content-type: text/html</code> or <code>Content-type: text/plain</code>.</p>\n\n<p>I would recommend implementing this using an <code>ActionFilter</code>; instead of manually changing the content type, detect IE and a multipart POST and change the content-type accordingly.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I was trying to return Json from my action and after that IE tried to download it and showed me save dialog.\nI tested it in Firefox, and there it works fine.</p>\n\n<pre><code>return Json(new { success = false, message = ex.Message }, \"application/json\");\n</code></pre>\n\n<p>What is the reason of that behavior and how can I solve that issue?</p>\n\n<p>After that in Javascript part I try this</p>\n\n<pre><code> if (responseJSON.success == false) {\n                        alert(responseJSON.message);\n                        cancel();\n                    }\n</code></pre>\n\n<p>But IE doesn't show alert anyway. It brings me save dialog.</p>\n\n<p>I tried to change <code>\"application/json\"</code> with <code>\"text/plain\"</code> and save dialog disappeared, but I am not able to see alert yet. What am I missing?</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>Here is my complect Javascript, I am using Valums qquploader(ex-Ajaxupload) for uploading images</p>\n\n<pre><code> var uploader = new qq.FileUploader({\n                element: document.getElementById(\"image-upload\"),\n                action: '/Home/ImageUpload',\n                allowedExtensions: ['jpg', 'png', 'gif'],\n                sizeLimlit: 2048,onComplete: function (id, fileName, responseJSON) {\n                    if (responseJSON.success == false) {\n                        alert(responseJSON.message);\n                        cancel();\n                    }\n                    else {\n                         alert(\"success\");\n                          //some code here\n                        }\n                     }\n                   });\n</code></pre>\n\n<p>I had tested with <code>alert(\"success\");</code> in my else part and forwarded json as <code>\"text/plain\"</code> and after that I saw the alert. But in that time <code>responseJSON.success != false</code> for me. Have you any suggestions about that?</p>\n",
            "last_activity_date": 1350367363,
            "question_id": 8591998,
            "score": 12,
            "tags": [
                "javascript",
                "asp.net-mvc",
                "json",
                "asp.net-mvc-3"
            ],
            "title": "IE tries to download JSON in ASP. NET MVC 3"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Any half-decent garbage collector will handle cycles.</p>\n\n<p>Cycles are only a problem if you do naive reference counting.</p>\n\n<p>Most garbage collectors don't do ref-counting (both because it can't handle cycles, and because it's inefficient). Instead, they simply follow every reference they can find, starting from \"roots\" (typically globals and stack-based variables), and mark everything they can find as \"reachable\".</p>\n\n<p>Then they simply reclaim all other memory.</p>\n\n<p>Cycles are no problem because they just mean that the same node will be reached multiple times. After the first time, the node will be marked as \"reachable\" already, and so the GC will know that it's been there already, and skip the node.</p>\n\n<p>Even more primitive GC's based on reference-counting typically implement algorithms to detect and break cycles.</p>\n\n<p>In short, it's not something you have to worry about.\nI seem to recall that IE6's Javascript GC actually failed to handle cycles (I could be wrong, it's been a while since I read it, and it's been much, much longer since I touched IE6), but in any modern implementation, it is no problem.</p>\n\n<p>The entire point in a garbage collector is to abstract away memory management. If you have to do this work yourself, your GC is broken.</p>\n\n<p>See <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Memory_Management#Cycles_are_not_a_problem_anymore\">MDN</a> for more information on modern garbage collection and the mark-and-sweep algorithms that are used.</p>\n",
                    "is_accepted": true,
                    "score": 25
                }
            ],
            "body": "<p>Can somebody explain in detail how Javascript engines deal with circular references ? Is there a big difference between browsers or even node.js ?</p>\n\n<p>What I'm talking about is an explicit back-/next reference within objects. For instance:</p>\n\n<pre><code>var objA = {\n    prop: \"foo\",\n    next: null\n};\n\nvar objB = {\n    prop: \"foo\",\n    prev: null\n};\n\nobjA.next = objB;\nobjB.prev = objA;\n</code></pre>\n\n<p>There we go. If we do a <code>console.log( objA )</code> we can see that we created an infinite chain.\nThe big question is, is this bad ? Does it create memory leaks when not explicitly cleaned?</p>\n\n<p>So do we have to </p>\n\n<pre><code>objA.next = null;\nobjB.prev = null;\n</code></pre>\n\n<p>or will the garbage collectors take care of us on constellations like this?</p>\n",
            "last_activity_date": 1367487483,
            "question_id": 7347203,
            "score": 12,
            "tags": [
                "javascript",
                "memory-leaks",
                "garbage-collection"
            ],
            "title": "Circular references in Javascript / Garbage collector"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Last Marker is at the index of <code>markersArray.length -1</code> so...</p>\n\n<p><code>markersArray[markersArray.length-1].setMap(null);</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://code.google.com/intl/pl/apis/maps/documentation/javascript/overlays.html#RemovingOverlays\">RemovingOverlays</a></p>\n\n<pre><code>markersArray[markersArray.length-1].setMap(null);\n</code></pre>\n\n<p>... for path:</p>\n\n<pre><code>path = poly.getPath();\npath.pop();\n</code></pre>\n\n<p><a href=\"http://code.google.com/intl/pl/apis/maps/documentation/javascript/reference.html#PolylineOptions\">PolylineOptions</a>, <a href=\"http://code.google.com/intl/pl/apis/maps/documentation/javascript/reference.html#MVCArray\">MVCArray</a>.</p>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>I'm using this function to add a new marker (and polyline) to a map:</p>\n\n<pre><code> function addMarker(location) {\n\n    path = poly.getPath();\n    path.push(location);\n    marker = new google.maps.Marker({\n        position: location,\n        icon:'location.png',\n        title: poly.inKm() + ' km',\n        map: map\n    });\n    markersArray.push(marker);\n}\n</code></pre>\n\n<p>How can I remove the last marker (for implementing undo)?</p>\n\n<p>Best regards ...</p>\n",
            "last_activity_date": 1392021232,
            "question_id": 6726049,
            "score": 12,
            "tags": [
                "javascript",
                "google-maps-api-3",
                "google-maps-markers"
            ],
            "title": "Remove marker in Google Maps Api v3"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There isn't anything you can do about this.  Some popup blockers still block everything, even in response to a user clicking.  The best you can do is suggest your users turn off popup blockers, or find a different way to do what you want to do.  A popular method is the div that appears on top of all others on your page, like <a href=\"http://www.huddletogether.com/projects/lightbox2/\" rel=\"nofollow\">Lightbox</a>.</p>\n\n<p>There are <a href=\"http://web.enavu.com/tutorials/top-10-jquery-modal-box-plugins/\" rel=\"nofollow\">many jQuery plugins</a> which make this easy.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>No much you can do. You could ask your users to disable pop-up blockers or inform them that a pop-up blocker is enabled by checking the window object ref returned by window.open()</p>\n\n<p>e.g.</p>\n\n<pre><code>var w = window.open('http://domain.com');\nif(!w) { \n   //an alert in this example\n   alert('oops..seems like a pop-up blocker is enabled. Please disable');\n}\n</code></pre>\n\n<p>you could find another way and try what Brad suggests.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>You have (at least?) 2 options to deal with this:</p>\n\n<ul>\n<li>if you want to keep using popups, display a very visible warning for your users, pointing them to instructions on how to configure their browser to whitelist your domain (like the banners that appear on top of StackOverlow.com when you gain new privileges, or even like the banners Chrome is showing for actions - they are web-based as well);</li>\n<li>use an iFrame and load its content based on your user's click.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is causing some browsers to see my code as unsolicited?</p>\n\n<p>I have a web site devoted to helping people with interactive sessions. It starts with the user clicking [Begin] so this is a consented action. This should (1) open a popup while (2) redirecting the first page to a end page as below : </p>\n\n<pre><code>&lt;head&gt;  \n&lt;SCRIPT language=\"JavaScript\"&gt;\n      function openwindow(){window.open(\"{INTERACTION}\",\"interaction\",\"resizable=0,width=800,height=600,status=0\");}&lt;/SCRIPT&gt;\n&lt;/head&gt;   \n&lt;body&gt;\n&lt;FORM action=\"end.php\" method=\"{METHOD}\" &gt;  \n&lt;input type=\"submit\"  class=\"button\" \n       onClick=\"javascript: openwindow()\" \n       value=\"Begin\" /&gt;\n&lt;/FORM&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>As said, this is not trying to open an unrequested popup but some strains of IE and Chrome appear to be treating it as such. I have been trying to get a fix, most recently digesting <a href=\"http://stackoverflow.com/questions/668286/detect-blocked-popup-in-chrome\">this post</a>. </p>\n\n<p>In it Bobince comments </p>\n\n<blockquote>\n  <p>these days, you don't really need to ask the question \u201cwas my unsolicited popup blocked?\u201d, because the answer is invariably \u201cyes\u201d\u2009\u2014\u2009all the major browsers have the popup blocker turned on by default. Best approach is only ever to window.open() in response to a direct click, which is almost always allowed.I'm quite happy to buy into this principle because I simply want my popup to open. </p>\n</blockquote>\n\n<p>What is causing some browsers to see my code as unsolicited?</p>\n\n<p>I'd appreciate any help you could give me. (as you might have guessed, client side is not my bag and this topic has been bugging me for ages).</p>\n\n<p>Many thanks in advance (and fingers crossed)\nGiles</p>\n",
            "last_activity_date": 1306872929,
            "question_id": 6192889,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "Legally avoiding popup blocking"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>This may help...</p>\n\n<p><a href=\"http://stackoverflow.com/questions/1746608/google-maps-not-rendering-completely-on-page\">Google Maps not rendering completely on page?</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Found the issue. I was hiding the block, GMaps was in</p>\n\n<pre><code>&lt;div id=\"step2\" style=\"display:none\"&gt;\n</code></pre>\n\n<p>But it seams a block containing the map may not be hidden, when GMaps loads.</p>\n\n<p>So I changed it like this</p>\n\n<pre><code>&lt;div id=\"step2\"&gt;\n</code></pre>\n\n<p>and everything worked. But as I just like to show \"step1\" in the beginning, I do a </p>\n\n<pre><code>$('#step2').hide();\n</code></pre>\n\n<p>once the map is loaded.</p>\n\n<p>It's realy strange behaviour of Chrome and FF, but I'm glad it works with this workaround. Thanks for your help.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Try google.maps.event.trigger(map, \"resize\");</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've found that any hide and show operations which are performed on div with google map by using css 'display' property (or jQuery hide() and show() function) causing partially view of the map.</p>\n\n<p>Instead of 'display' I use 'visibility' (hidden, visible) and everything is fine. What I expected was to show the map on a popup. However 'visibility' takes space even when its attribute is set to hidden, but since I use 'z-index' for the popup it does not affect a base layer (0 z-index).</p>\n\n<p>Regards\nBronek</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I found a simple solution for the partially loaded google map. Usually it is caused by the onLoad() being called at times when the rest of the page (including your map element) is not completely loaded. This causes partial map load. A simple way around this issue is to change your onLoad body tag action as follows:</p>\n\n<pre><code>old: onload=\"initialize()\"\n\n\nnew: onLoad=\"setTimeout('initialize()', 2000);\"\n</code></pre>\n\n<p>this waits 2 sec. before the Google JavaScript accesses the correct size attributes.\nHope this helps :)</p>\n\n<p>BTW, this is my top Javascipt part in case you wandering ( exactly as described in Google Documentation but because I am calling the Latitude and Longitude from PHP variables, hence the PHP snippets :)</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://maps.googleapis.com/maps/api/js?sensor=false\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\"&gt;\n      function initialize() {\n        var myOptions = {\n          center: new google.maps.LatLng(&lt;?php echo $my_latitude; ?&gt; , &lt;?php echo $my_longitude; ?&gt;),\n          zoom: 14,\n          mapTypeId: google.maps.MapTypeId.ROADMAP\n        };\n        var map = new google.maps.Map(document.getElementById(\"map_canvas\"),\n            myOptions);\n\n             var point = new google.maps.LatLng(&lt;?php echo $my_latitude; ?&gt; , &lt;?php echo $my_longitude; ?&gt;);\n      var marker = new google.maps.Marker({\n        position:point,\n        map:map })      \n     } &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Call to Initialize() on pagebeforeshow event and try this</p>\n\n<pre><code>jQuery(document).delegate( \"#page-map\", \"pageshow\", function(event){\ngoogle.maps.event.trigger(map, \"resize\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>The Google Map I have is only beeing rendered partially and is centered to the wrong point (it should center to the marker). See below:</p>\n\n<p><img src=\"http://i.stack.imgur.com/i3ksk.jpg\" alt=\"alt text\"></p>\n\n<p>Now to add a little more detail:</p>\n\n<ul>\n<li>It works fine in IE</li>\n<li>It looks like in the screenshot in FF and Chrome.</li>\n<li>In Chrome ist works as soon, as I open the developer console</li>\n</ul>\n\n<p>Especially the last point is the one I'm wondering most about. I guess opening the developer console re-executes some JavaScript.</p>\n\n<p>So: Can I call a function to re-execute JavaScript, the way the developer console does?</p>\n\n<p>This is the code:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n{literal}\nfunction initialize() {\n  if (GBrowserIsCompatible()) {\n\n    var map = new GMap2(document.getElementById(\"map\")); //, { size : {width:600,height:600} }\n    map.addControl(new GLargeMapControl3D());\n    map.addControl(new GMapTypeControl());\n    map.addControl(new GScaleControl());\n    map.setCenter(new GLatLng(51.17689812200107, 9.84375), 5);\n    map.checkResize();\n\n    var geocoder = new GClientGeocoder();\n\n    function showPoint(lat, lon) {\n      if (lat != \"\" &amp;&amp; lon != \"\") {\n        var point = new GLatLng(lat, lon);\n        map.setCenter(point, 10);\n        var marker = new GMarker(point, {draggable: true});\n        GEvent.addListener(marker, \"dragstart\", function() {\n          // map.closeInfoWindow();\n        });\n        GEvent.addListener(marker, \"dragend\", function() {\n          var newPoint = marker.getLatLng();\n          $('#lat').val(newPoint.lat());\n          $('#lon').val(newPoint.lng());\n          // marker.openInfoWindowHtml(\"Neue Koordinaten Lat: \"+ newPoint.lat() +\" Lon: \"+ newPoint.lng());\n        });\n        map.addOverlay(marker);\n      }\n    }\n  {/literal}showPoint(\"{$gmap_lat}\", \"{$gmap_lon}\");{literal}\n  }\n}\n{/literal}\n</code></pre>\n\n<p>This is where I put the div:</p>\n\n<pre><code>    &lt;fieldset style=\"-moz-border-radius: 1em;  -webkit-border-radius: 1em;\"&gt; \n      &lt;legend&gt;Karte&lt;/legend&gt;\n      &lt;div id=\"map\" title=\"Lage von '{$name}'\"&gt;&lt;br&gt;Die Karte wird geladen...&lt;br&gt;&lt;br&gt;Hinweis: Damit dies funktioniert m\u00fcssen Sie in Ihrem Browser JavaScript aktivieren&lt;/div&gt;\n      Falls sich der Marker nicht auf der richtigen Position befinden sollte, bewegen Sie diesen mit Ihrer Maus auf die richtige Position.\n      &lt;br&gt;L\u00e4nge: &lt;input type=\"text\" id=\"lat\" name=\"lat\" value=\"{$gmap_lat}\"&gt;\n      Breite: &lt;input type=\"text\" id=\"lon\" name=\"lon\" value=\"{$gmap_lon}\"&gt;\n    &lt;/fieldset&gt;\n</code></pre>\n\n<p>And on the div the following CSS rules apply:</p>\n\n<p><img src=\"http://i.stack.imgur.com/PeQLf.jpg\" alt=\"alt text\"></p>\n",
            "last_activity_date": 1374629247,
            "question_id": 4358582,
            "score": 12,
            "tags": [
                "javascript",
                "google-maps"
            ],
            "title": "Google Map shows only partially"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>JSON does not allow unquoted keys. JSON is a subset of JavaScript notation, and that does not include unquoted keys. Passing unquoted keys to just about any JSON parser will likely throw an error or return \"unexpected\" results.</p>\n\n<p>Hope this helps</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>data.replace(/(['\"])?([a-zA-Z0-9]+)(['\"])?:/g, '\"$2\":');\n</code></pre>\n\n<p>That will replace any single quotes on the parameter name, and add any that are missing.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I thought it would be helpful to have actual test cases to flush out any issues with this implementation. I've added a github project called JSOL with some tests. Please fill free to add to it and find issues. Thanks.</p>\n\n<p><a href=\"https://github.com/daepark/JSOL\" rel=\"nofollow\">https://github.com/daepark/JSOL</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><a href=\"https://github.com/douglascrockford/JSON-js/blob/master/json2.js\">json2.js</a> is strict requiring all object keys be double-quoted. However, in Javascript syntax <code>{\"foo\":\"bar\"}</code> is equivalent to <code>{foo:\"bar\"}</code>. </p>\n\n<p>I have a textarea that accepts JSON input from the user and would like to \"ease\" the restriction on double quoting the keys. I've looked at how json2.js validates a JSON string in four stages before it evals it. I was able to add a 5th stage to allow unquoted keys and would like to know if there are any security implications to this logic.</p>\n\n<pre><code>var data = '{name:\"hello\", age:\"23\"}';\n\n// Make sure the incoming data is actual JSON\n// Logic borrowed from http://json.org/json2.js\nif ( /^[\\],:{}\\s]*$/.test(data.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, \"@\")\n     .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, \"]\")\n     .replace(/(?:^|:|,)(?:\\s*\\[)+/g, \":\") // EDITED: allow key:[array] by replacing with safe char \":\"\n     /** everything up to this point is json2.js **/\n\n     /** this is the 5th stage where it accepts unquoted keys **/         \n     .replace(/\\w+\\s*\\:/g, \":\")) ) { // EDITED: allow any alphanumeric key\n\n  console.log( (new Function(\"return \" + data))() );\n}\nelse {\n  throw( \"Invalid JSON: \" + data );\n}\n</code></pre>\n",
            "last_activity_date": 1354751132,
            "question_id": 4210160,
            "score": 12,
            "tags": [
                "javascript",
                "json",
                "object-literal"
            ],
            "title": "Safely parsing a JSON string with unquoted keys"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No, there is no such event.</p>\n\n<p>However, a <code>&lt;script&gt;</code> tag placed directly after the HTML element would have a similar effect: It would be executed directly after the element has been rendered:</p>\n\n<pre><code>&lt;input type=\"text\" id=\"input123\" value=\"Hello World!\"&gt;\n\n&lt;script&gt;\nalert(\"Input123 is now ready:\"+document.getElementById(\"input123).value);\n&lt;/script&gt;\n</code></pre>\n\n<p>In most cases, however, it is best to use the document-wide <code>load</code> (or <code>DOMReady</code>, or jQuery's <code>.ready()</code>) to start any script operations. The DOM will be fully ready then.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>No this is not possible. You could however use jQuery + $(document).ready(function) to modify any input field you want right after the page has finished loading.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No. However, any script placed after the markup of the input element, will be run with the input element available because it is parsed before the script. So, if this was all in the body:</p>\n\n<pre><code>&lt;input id=\"a\"&gt;\n&lt;script&gt;document.getElementById('a');&lt;/script&gt;\n</code></pre>\n\n<p>That would all work anyway.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>No, there is not. Just run your code from the document \"ready\" handler, or use something like jQuery to give you a way to run code at \"ready\" (which is when the DOM is complete but images may not have loaded).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A way to simulate such an event is to create a custom data-* atttribute (HTML-5 valid) and use that as a selector. Then in the main javascript code, you can add a selector for anything which has this specific data-XXX attribute and evaluate the javascript code inside.</p>\n\n<p>Example HTML code:</p>\n\n<pre><code>&lt;div data-onload=\"sampleFunction('param1', 2)\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Example Javascript code (using jQuery). It is also possible to use normal DOM to find elements with this attribute.</p>\n\n<pre><code>/* Find any element which has a 'data-onload' function and load that to simulate an onload. */\n$('[data-onload]').each(function(){\n    eval($(this).data('onload'));\n});\n</code></pre>\n\n<p>This works well. I actually use it in production.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Is it possible to trigger a Javascript script, when an input element or any other html element is rendered. This script should be triggered from within the html tag, so that we should be able to pass 'this' to the js function.</p>\n",
            "last_activity_date": 1386343114,
            "question_id": 3708850,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "Is there an onload event for input elements?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Nothing. No difference. $ is a valid character in a JavaScript identifier but has no special meaning. In fact, in the ECMAScript 3 specification in section 7.6 it states that</p>\n\n<blockquote>\n  <p>The dollar sign ($) and the underscore\n  (_) are permitted anywhere in an\n  identifier. The dollar sign is\n  intended for use only in mechanically\n  generated code.</p>\n</blockquote>\n\n<p>... although events have now probably rendered that recommendation obsolete. Indeed, the recent ECMAScript 5 spec omits the final sentence.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p><code>$test</code> is a convention used to indicate that this variable is a jQuery object and you can call the standard functions on it while <code>test</code> could be a standard DOM element and you cannot call the <code>val</code> function on it for example.</p>\n\n<p>For example:</p>\n\n<pre><code>var $test = $('#someId');\nvar test = document.getElementById('#someId');\n</code></pre>\n\n<p>You can do <code>$test.text();</code> but you cannot do <code>test.text();</code></p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>there is no difference between <code>var $test</code> and <code>var test</code>. but its always good to know what kind of data is in your variable: (for example if someone else just want to modify a function in your code without having to read, or have to console.log your vars to know whats in it)</p>\n\n<p>here some examples:</p>\n\n<pre><code>var arrTest = [1, 2, a, b, c], //Array\nobjTest = {test: 1, test2: 2}, //Object\nstrTest = \"test\", //String\nintTest = 4, //integer\n$test = $(\"#test\") //jqueryObject\n</code></pre>\n\n<p>but it would also work like this</p>\n\n<pre><code>var Test1 = [1, 2, a, b, c], //Array\ntest2 = {test: 1, test2: 2}, //Object\nTest3 = \"test\", //String\nTest4 = 4, //integer\n$test = $(\"#test\") //jquery Object\n</code></pre>\n\n<p>i think what confuses you is the <code>$()</code> form jquery.</p>\n\n<p>Jquery is basically a function set on the variable name <code>$</code>:</p>\n\n<pre><code>var $ = function(e){ // the jquery magic }\n</code></pre>\n\n<p>but you can still use <code>$somethingelse</code> as variable. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try critisism on JQuery.</p>\n\n<p>The differences between native javascript and a framework like JQuery is zip - it co-exists.</p>\n\n<p>If you wish to master javascript - skip JQuery.</p>\n\n<p>I use GMap because of its functions - I am not able to develop GMap functionallity myself.</p>\n\n<p>But JQuery and extJS just offers structure - no funtionallity that you cannot do yourself.</p>\n\n<p>Mike</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>what is the difference between these statements? I know that \"var $test\" declares a jquery variable, but what is the difference of a jquery variable with a general javascript variable ?</p>\n",
            "last_activity_date": 1274436652,
            "question_id": 2880926,
            "score": 12,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "JQuery : What is the difference between &quot;var test&quot; and &quot;var $test&quot;"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I'll go with the assumption that you mean Unix timestamps:</p>\n\n<pre><code>var formatTime = function(unixTimestamp) {\n    var dt = new Date(unixTimestamp * 1000);\n\n    var hours = dt.getHours();\n    var minutes = dt.getMinutes();\n    var seconds = dt.getSeconds();\n\n    // the above dt.get...() functions return a single digit\n    // so I prepend the zero here when needed\n    if (hours &lt; 10) \n     hours = '0' + hours;\n\n    if (minutes &lt; 10) \n     minutes = '0' + minutes;\n\n    if (seconds &lt; 10) \n     seconds = '0' + seconds;\n\n    return hours + \":\" + minutes + \":\" + seconds;\n}       \n\nvar formattedTime = formatTime(1266272460);\ndocument.write(formattedTime);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>This will display the current time in the format you asked for (<code>HH:MM:SS</code>)</p>\n\n<pre><code>function dostuff()\n{\n var item = new Date();\n alert(item.toTimeString());\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here's a function that provides flexible formatting of a date in UTC. It accepts a format string similar to that of Java's SimpleDateFormat:</p>\n\n<pre><code>function formatDate(date, fmt) {\n    function pad(value) {\n        return (value.toString().length &lt; 2) ? '0' + value : value;\n    }\n    return fmt.replace(/%([a-zA-Z])/g, function (_, fmtCode) {\n        switch (fmtCode) {\n        case 'Y':\n            return date.getUTCFullYear();\n        case 'M':\n            return pad(date.getUTCMonth() + 1);\n        case 'd':\n            return pad(date.getUTCDate());\n        case 'H':\n            return pad(date.getUTCHours());\n        case 'm':\n            return pad(date.getUTCMinutes());\n        case 's':\n            return pad(date.getUTCSeconds());\n        default:\n            throw new Error('Unsupported format code: ' + fmtCode);\n        }\n    });\n}\n</code></pre>\n\n<p>You could use it like this:</p>\n\n<pre><code>formatDate(new Date(timestamp), '%H:%m:%s');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                }
            ],
            "body": "<p>Basically, I receive raw timestamps and I need to format them into HH:MM:SS format.</p>\n",
            "last_activity_date": 1322664813,
            "question_id": 2315408,
            "score": 12,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How do I format a timestamp in Javascript to display it in graphs? UTC is fine"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Testing with Firefox 3.0.7, Safari 3.2.2, and MSIE 7.0.5730.13 (all on WinXP SP3) it appears that everything within the <code>&lt;noscript&gt;</code> tags is completely omitted from the DOM tree.</p>\n\n<p>It may be possible to access the <code>&lt;noscript&gt;</code> element itself, however, and then use DOM methods to change its child elements.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>From the <a href=\"http://www.w3.org/TR/REC-html40/interact/scripts.html#h-18.3.1\" rel=\"nofollow\">HTML 4.0 spec</a>:</p>\n\n<blockquote>\n  <p>The NOSCRIPT element allows authors to provide alternate content when a script is not executed. The content of a NOSCRIPT element should only be rendered by a script-aware user agent in the following cases:</p>\n  \n  <ul>\n  <li>The user agent is configured not to evaluate scripts.</li>\n  <li>The user agent doesn't support a scripting language invoked by a SCRIPT element earlier in the document.</li>\n  </ul>\n</blockquote>\n\n<p>It seems to me that this implies that the entire contents of the NOSCRIPT tag (in this case, your div) are ignored altogether if scripting is enabled in the browser.  Have you verified that the \"example\" div is accessible through the DOM at all in your case?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>No. Not reliably. You can sorta hack it in FF, IE, and Opera:</p>\n\n<pre><code>var nos = document.getElementsByTagName(\"noscript\")[0]; \n// in some browsers, contents of noscript hang around in one form or another\nvar nosHtml = nos.textContent||nos.innerHTML; \n\nif ( nosHtml )\n{\n  var temp = document.createElement(\"div\");\n  temp.innerHTML = nosHtml;\n\n  // lazy man's query library: add it, find it, remove it\n  document.body.appendChild(temp);\n  var ex = document.getElementById(\"example\");\n  document.body.removeChild(temp);\n\n  alert(ex.innerHTML);\n}\n</code></pre>\n\n<p>...But in Google's Chrome, the noscript element has no children in the DOM, and i would expect this to be true in other browsers as well as future versions of the browsers that i tested. You're better off finding some other place to store your data.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I'm not sure about prototype, but this works in Chrome with jQuery:</p>\n\n<pre><code>$('noscript').before($('noscript').text());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try $($(\"noscript\").text()) with jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<pre><code>&lt;noscript&gt;&lt;div id=\"example\"&gt;I want to get this innerHTML&lt;/div&gt;&lt;/noscript&gt;\n\n&lt;script type=\"text/javascript\"&gt; alert($('example').innerHTML);&lt;/script&gt;\n</code></pre>\n\n<p>This javascript snippet just returns an empty string. Is there a way of getting the contents of a noscript node?</p>\n\n<p>p.s. I'm using prototype on this particular project.</p>\n",
            "last_activity_date": 1345306565,
            "question_id": 620896,
            "score": 12,
            "tags": [
                "javascript",
                "innerhtml",
                "noscript"
            ],
            "title": "Access Contents of &lt;noscript&gt; with Javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use the <a href=\"http://docs.jquery.com/Is\"><code>is()</code></a> method:</p>\n\n<pre><code>if($(this).is(\"p\")){\n // ...\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>I believe the <a href=\"http://docs.jquery.com/Is\" rel=\"nofollow\">is()</a> method is what you are looking for.</p>\n\n<p>Otherwise, you might just try selecting the item directly, if that is what you mean.</p>\n\n<p>So if it's an \"a\" with a class of \"myclass\", just do  $(\"a.myclass\")</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<blockquote>\n  <p>I can't apply my selector to the\n  element's parent and look for children\n  with the same ID as mine.</p>\n</blockquote>\n\n<p>You can't do that anyway - the <code>id</code> attribute must be unique.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Maybe you just want:</p>\n\n<pre><code>$(\".complicated #selector p.with &gt; div.manyParts\").length\n</code></pre>\n\n<p>If there are no matches, length returns 0, which is falsy, so you can use it in an <code>if</code> statement, like:</p>\n\n<pre><code>if($(\".doesThis #exist\").length) {\n    // Do things\n}\n</code></pre>\n\n<p>Probably would be worth storing it in a separate variable and THEN checking the length; that way, if you need to do anything with the matched elements, you don't have to execute the same selector again.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Let's say I've got a DOM element - how can I tell whether it matches a jQuery selector, such as <code>p</code> or <code>.myclass</code>? It's easy to use the selector to match children of the element, but I want a true/false answer to whether this particular element match?</p>\n\n<p>The element may not have an ID (and I can't assign it a random one for reasons beyond this), so I can't apply my selector to the element's parent and look for children with the same ID as mine.</p>\n\n<p>Will this work as intended? I can't figure out Javascript object comparisons.    </p>\n\n<pre><code>$(selector, myElement.parentNode).each({\n  if (this == myElement) // Found it\n});\n</code></pre>\n\n<p>Seems like there would be an easy way to see whether a DOM element matches a jQuery selector...</p>\n",
            "last_activity_date": 1367792535,
            "question_id": 596150,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "dom"
            ],
            "title": "How can I tell whether an element matches a selector?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Reading pure HTML is way <strong>faster</strong> than waiting/calling for javascript functions etc and then making notice, how the page is set up. I think that's the main reason.</p>\n\n<p>Another might be that the whole crawling thing is automated - so, again, reading static page is a lot easier and makes a lot more sense. As with javascript the content of the page might change every second etc, making the crawler <em>\"confused\"</em></p>\n\n<p>Considered, that this has not yet been implemented in search engines, I think that it won't come in the near future.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Even though GoogleBot actually does handle sites written in js. The big problem with ajax sites is that even if GoogleBot can execute js and handle ajax requests.</p>\n\n<p>It's not exactly possible for the web crawler to know when the page finished loading. For that reason, a web crawler could load a page and index the page before it started doing ajax requests. Let say a script will get executed on page scroll. It's very likely that the google bot will not trigger every possible events.</p>\n\n<p>The other problem is navigation</p>\n\n<p>Since navigation can be done without page reloading, one url can map to multiple \"view result\". For that reason, google ask developpers to keep a copy of pages using static pages to support those pages that would be inaccessible otherwise. They are going to get indexed.</p>\n\n<p>If your site can have each page accessible through a fully qualified url. Then you shouldn't have problem indexing your site.</p>\n\n<p>That said, scripts are going to get run. But it's not certain that the crawler will index the page after it finished handling all scripts.</p>\n\n<p>Here's a link:</p>\n\n<p><a href=\"http://www.forbes.com/sites/velocity/2010/06/25/google-isnt-just-reading-your-links-its-now-running-your-code/\" rel=\"nofollow\">GoogleBot smarter</a>: It was written in 2010 and we can expect that the webcrawlers got much smarter since then. </p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>It's harder to read pages with scripts for crawlers, because it is all about dynamically changing content. And crawlers cares not only about first site visit, they rechecking indexed pages every week-two in a fast mode, simply comparing in a way \"find 10 differences\" for content and link changes. Rechecking pages with scripts will be too painful and costly for crawlers in a world web.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have been working with some advanced javascript applications using a lot of ajax requests to render my page. To make the applications crawlable (by google), I have to follow <a href=\"https://developers.google.com/webmasters/ajax-crawling/?hl=fr\" rel=\"nofollow\">https://developers.google.com/webmasters/ajax-crawling/?hl=fr</a> . This tells us to do something like: redesigning our links, creating html snapshots,... to make the site searchable.</p>\n\n<p>I wonder why crawlers don't run javascript to get the <strong><em>rendered page</em></strong> and index on it. Is there a reason behind this? Or it's a missing feature of search engines that may come in the future?</p>\n",
            "last_activity_date": 1394874855,
            "question_id": 19287476,
            "score": 11,
            "tags": [
                "javascript",
                "ajax",
                "search-engine",
                "google-crawlers"
            ],
            "title": "Why do search engine crawlers not run javascript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Ok, I solved it.\nWriting it for anyone who might be tired after a full day of non-stop coding &amp; miss such a silly thing.</p>\n\n<pre><code>@RequestMapping(value=\"/fetch\" , method=RequestMethod.GET)\n    public @ResponseBody String fetchResult(@RequestParam(\"from\") @DateTimeFormat(pattern=\"yyyy-MM-dd\") Date fromDate) {\n        //Content goes here\n    }\n</code></pre>\n\n<p>Yes, it's simple. Just add the DateTimeFormat annotation.</p>\n",
                    "is_accepted": true,
                    "score": 27
                }
            ],
            "body": "<p>I've a GET request that sends a date in YYYY-MM-DD format to a Spring Controller.\nThe controller code is as follows:</p>\n\n<pre><code>@RequestMapping(value=\"/fetch\" , method=RequestMethod.GET)\n    public @ResponseBody String fetchResult(@RequestParam(\"from\") Date fromDate) {\n        //Content goes here\n    }\n</code></pre>\n\n<p>The request is sent correctly as I'm checking with Firebug.\nI get the error:</p>\n\n<blockquote>\n  <p>HTTP Status 400: The request sent by the client was syntactically incorrect.</p>\n</blockquote>\n\n<p>How can I make the controller accept this format of Date? \nPlease help. What am I doing wrong?</p>\n",
            "last_activity_date": 1408441907,
            "question_id": 15164864,
            "score": 11,
            "tags": [
                "java",
                "javascript",
                "spring",
                "date",
                "spring-mvc"
            ],
            "title": "How to accept Date params in a GET request to Spring MVC Controller?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I find using mouseenter and mouseleave to be better than hover. There's more control.</p>\n\n<pre><code>$(\"#somecontent\").mouseenter(function() {\n    $(this).css(\"background\", \"#F00\").css(\"border-radius\", \"3px\");\n}).mouseleave(function() {\n     $(this).css(\"background\", \"00F\").css(\"border-radius\", \"0px\");\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Try this: </p>\n\n<pre><code>$('#some-content').hover(function(){\n    $(this).css({ marginTop: '60px', display: 'inline-block' });\n}, function(){\n    $(this).css({ //other stuff });\n});\n</code></pre>\n\n<p>or using classes</p>\n\n<pre><code>$('#some-content').hover(function(){\n    $(this).toggleClass('newClass');\n});\n</code></pre>\n\n<p>More info here <a href=\"http://api.jquery.com/hover/\" rel=\"nofollow\">.hover()</a> and <a href=\"http://api.jquery.com/toggleClass/\" rel=\"nofollow\">.toggleClass()</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You should put them in a <a href=\"http://api.jquery.com/hover\" rel=\"nofollow\">hover</a> event:</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>var elem = $('#elem');\n\nelem.hover(function () {\n    // ... :hover, set styles\n}, function () {\n    // ... this function is called when the mouse leaves the item, set back the\n    //     normal styles\n});\n</code></pre>\n\n<p>However, I completely recommend to put your CSS in classes and use those classes in JS, you should split the languages as much as you can.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$(\"#someObj\").hover(function(){\n    $(this).css(...);\n}:);\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/hover/\" rel=\"nofollow\">http://api.jquery.com/hover/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Some CSS styles need to be applied to an element on hover, and CSS styles have to be applied using javascript/jquery directly and not through stylesheets or <code>$(this).addClass('someStyle')</code> because I am injecting the DOM elements into another page.</p>\n\n<p>We can apply the usual css styles using </p>\n\n<pre><code>$('#some-content').css({\n    marginTop: '60px',\n    display: 'inline-block'\n});\n</code></pre>\n\n<p>How should we add the CSS styles for <code>:hover</code> events?</p>\n\n<hr>\n\n<p>Do we have to resort to:</p>\n\n<pre><code>$('#some-content').hover(\n       function(){ $(this).css('display', 'block') },\n       function(){ $(this).css('display', 'none') }\n)\n</code></pre>\n",
            "last_activity_date": 1395324670,
            "question_id": 13707134,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "hover"
            ],
            "title": "Adding hover CSS attributes via jQuery/Javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You have to be careful with <code>this</code>. You need to assign your <code>this</code> in the outer scope to a variable. The <code>this</code> keyword <em>always</em> refers to the <code>this</code> of the current scope, which changes any time you wrap something in <code>function() { ... }</code>.</p>\n\n<pre><code>var thing = this;\nthing.alive = false;\nConsole.log(\"death!\");\nvar timer3 = setTimeout((function() {\n    thing.alive = true;\n    Console.log(\"alive!\");\n}),3000);\n</code></pre>\n\n<p>This should give you better success.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>It's because <code>this</code> in the <code>setTimeout</code> handler is referring to <code>window</code>, which is presumably not the same value as referenced by <code>this</code> outside the handler.</p>\n\n<p>You can cache the outer value, and use it inside...</p>\n\n<pre><code>var self = this;\n\nvar timer3 = setTimeout((function() {\n    self.alive = true;\n    Console.log(\"alive!\");\n}),3000);\n</code></pre>\n\n<p>...or you can use ES5 <code>Function.prototype.bind</code>...</p>\n\n<pre><code>var timer3 = setTimeout((function() {\n    this.alive = true;\n    Console.log(\"alive!\");\n}.bind(this)),3000);\n</code></pre>\n\n<p>...though if you're supporting legacy implementations, you'll need to add a shim to <code>Function.prototype</code>.</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind#Compatibility\" rel=\"nofollow\">MDN <code>Function.prototype.bind</code> patch</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Probably because <code>this</code> isn't preserved in the timeout callback. Try:</p>\n\n<pre><code>var that = this;\n...\nvar timer3 = setTimeout(function() {\n    that.alive = true;\n    ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a setTimeout defined inside of a function that controls the player's respawn (i am creating a game):</p>\n\n<pre><code>var player = {\n    ...\n    death:(function() {\n        this.alive = false;\n        Console.log(\"death!\");\n        var timer3 = setTimeout((function() {\n            this.alive = true;\n            Console.log(\"alive!\");\n        }),3000);\n    }),\n    ...\n}\n</code></pre>\n\n<p>When it executes, I read in the console, \"death!\" and 3 seconds later \"alive!\". However, <code>alive</code> is never really set back to true, because if i write <code>player.alive</code> in the console, it returns <code>false</code>. How come i can see \"alive!\" but the variable is never set back to true?</p>\n",
            "last_activity_date": 1343647644,
            "question_id": 11714397,
            "score": 11,
            "tags": [
                "javascript"
            ],
            "title": "setTimeout scope issue"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>forget the .wight  stuff add only this  in css </p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>    .box {\r\n      width: 25%;\r\n      -webkit-box-sizing: border-box;\r\n      -moz-box-sizing: border-box;\r\n      box-sizing: border-box;\r\n    }</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>masonry js </p>\n\n<pre><code>$(function(){\n    var container = $('#boxes');\n\n    container.imagesLoaded(function(){  \n        container.masonry({\n           itemSelector: '.box',\n           columnWidth: function( containerWidth ) {\n              return containerWidth /4;// depends how many boxes per row\n            }(), // () to execute the anonymous function right away and use its result\n            isAnimated: true\n        });\n    });\n});\n</code></pre>\n\n<p>change holder div to </p>\n\n<pre><code> &lt;div id=\"boxes\" class=\"masonry clearfix\"&gt; \n</code></pre>\n\n<p>and boxes to </p>\n\n<pre><code>&lt;div class=\"box\"&gt;...&lt;/div&gt;\n</code></pre>\n\n<p>( note that Firefox might cause bit issue with exact divider of 100  like  25% so set the boxes at 24.9 or 24% )<strong>outdated</strong>.</p>\n\n<p>Use box-sizing to avoid drooping column issue.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>i have same problem, try, try, and try, and this work for me.</p>\n\n<pre><code>.masonry-brick {\n   width:25%;/*or others percents*/\n\n   /*following properties, fix problem*/\n   margin-left:-1px;\n   transform:translateX(1px);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you want <code>25%</code> width not <code>24.9%</code> add <code>margin-left:-1px!important;</code> to your box</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>is there a way to get jquery masonry working with percentage width divs?\nI'm trying to create a fluid layout with 25%, 50%, 75% and 100% widths. But as soon as i set the widths with % the automatic resizing stops working, and if I try to manually trigger mason  onresize I get rounding errors that makes the divs jump around. Also it becomes quite buggy that it sometimes ignores the height, and sometimes just stops placing the divs and put them all on 0,0</p>\n\n<p>HTML markup:</p>\n\n<pre><code>    &lt;div class=\"boxes\"&gt;\n    &lt;div class=\"box weight-1\"&gt;\n        &lt;div class=\"inner\"&gt;\n        &lt;p&gt;lkaj dlksaj ldksjf lkdj flksd flkds flkds flksd jfakldsjf lkdsj flkjfd &lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"box weight-1\"&gt;\n        &lt;div class=\"inner\"&gt;\n        &lt;p&gt;lkaj dlksaj ldksjf lkdj flksd flkds flkds flksd jfakldsjf lkdsj flkjfd &lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"box weight-2\"&gt;\n        &lt;div class=\"inner\"&gt;\n        &lt;p&gt;lkaj dlksaj ldksjf lkdj flksd flkds flkds flksd jfakldsjf lkdsj flkjfd &lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"box weight-3\"&gt;\n        &lt;div class=\"inner\"&gt;\n        &lt;p&gt;lkaj dlksaj ldksjf lkdj flksd flkds flkds flksd jfakldsjf lkdsj flkjfd &lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS properties:</p>\n\n<pre><code>.weight-1 {\nwidth:25%;\n}\n\n.weight-2 {\nwidth:50%;\n}\n\n.weight-3 {\nwidth:75%;\n}\n\n.weight-4 {\nwidth:100%;\n}\n</code></pre>\n\n<p>Muchos gracias for any input, \nJ</p>\n",
            "last_activity_date": 1423403493,
            "question_id": 8446061,
            "score": 11,
            "tags": [
                "javascript",
                "jquery-masonry"
            ],
            "title": "jQuery masonry with percentage width"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I don't believe it possible to get the mouse coordinates on demand via JavaScript / jQuery; however if you bind the position to a global var you can then access them at anytime throughout the document like this:</p>\n\n<pre><code>$(document).ready(function(){\n   $().mousemove(function(e){\n      window.xPos = e.pageX;\n      window.yPos = e.pageY;\n   }); \n});\n</code></pre>\n\n<p>for a less CPU intensive option, you can add a timeout, although you trade performance for a slight delay in knowing where the mouse is:</p>\n\n<pre><code>function getMousePosition(timeoutMilliSeconds) {\n    $(document).one(\"mousemove\", function (event) {\n        window.xPos = event.pageX;\n        window.yPos = event.pageY;\n        setTimeout(\"getMousePosition(\" + timeoutMilliSeconds + \")\", timeoutMilliSeconds);\n    });\n}\ngetMousePosition(100);\n</code></pre>\n\n<p>You should now be able to access the window.xPos and window.yPos from anywhere in the document using either solution without needing to trigger a faux event.</p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>I'm not sure I fully understand the question.  You can do:</p>\n\n<pre><code>$('.someClass').mousemove(function(event){\n    console.log(event.pageX);\n    console.log(event.pageY);\n});\n</code></pre>\n\n<p>Now, whenever the mouse moves over <code>someClass</code>, it will register the xy cordinates.  Here's the <a href=\"http://jsfiddle.net/YA4a2/\" rel=\"nofollow\">jsfiddle</a> to see it in action and the jquery <a href=\"http://api.jquery.com/mousemove/\" rel=\"nofollow\">documentation</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You cannot move a mouse if that is what you're asking. But you could call a function with whatever context and arguments you want. E.g.:</p>\n\n<pre><code>function foobar(e)\n{\n  this.className = 'whatever'; // this == element\n}\n\nsomeElement.onmousemove = foobar;\n\nvar obj = {whatever:'you want'};\nfoobar.call(someElement, obj); // calls foobar(obj) in context of someElement\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Think I know your problem. You're trying to query the mouse position programmatically. Perhaps you have code something like this:</p>\n\n<pre><code>$(document).one('mousemove.myModule', function (e) {\n    // e.pageY and e.pageX is undefined.\n    console.log('e.pageY: ' + e.pageY + ', e.pageX: ' + e.pageX); }\n        ).trigger('mousemove.myModule');\n</code></pre>\n\n<p>Then you're absolutely right. The properties pageY and pageX on the event object won't be defined. Actually, there's a hole lot of stuff in the event object that won't be there, not just <code>.pageY</code> and <code>.pageX</code>. Could be some bug in jQuery. Anyways, just don't chain that call to trigger <strong>and</strong> trigger the event on $(window) instead. Don't ask me why it works though but for me it did:</p>\n\n<pre><code>$(document).one('mousemove.myModule', function (e) {\n    console.log('e.pageY: ' + e.pageY + ', e.pageX: ' + e.pageX); } );\n\n// Now e.pageY and e.pageX will be defined!\n$(window).trigger('mousemove.myModule');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need to set <code>pageX</code> and <code>pageY</code> directly before triggering the event. To set these properties, make a <code>jQuery.Event</code> object.</p>\n\n<pre><code>// create a jQuery event\ne = $.Event('mousemove');\n\n// set coordinates\ne.pageX = 100;\ne.pageY = 100;\n\n// trigger event - must trigger on document\n$(document).trigger(e);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/yPgnp/\">See it in jsFiddle</a>.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>This is the best I could come up with, that doesn't inolve you setting global variables.  The click event will still capture the coordinates, so you can pass that event to your mousemove.</p>\n\n<pre><code>$(element).click(function(e){\n  $(element).trigger('mousemove',e);\n});\n</code></pre>\n\n<p>Then, that event object will be the second argument in your mousemove function; the first being either the actual mousemove event or the jQuery created event.</p>\n\n<pre><code>$(element).mousemove(function(e,clickEvent){\n  if typeof e.pageX === 'undefined' e = clickEvent;\n  // or if you prefer, clickEvent.pageX;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>So, like the question specifies, is there a way to trigger a mousemove event in jQuery which also sends the mouse coordinates to the event Object?</p>\n\n<p>So far my code can trigger the mousemove using the .trigger(event) function but the event.pageX and event.pageY are undefined.</p>\n",
            "last_activity_date": 1378570047,
            "question_id": 7772222,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events",
                "mouseevent"
            ],
            "title": "Is there a way to trigger mousemove and get event.pageX, event.pageY?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Try making the elements you wish to measure inline. Inline elements only take up as much space as required. Thus, it has an absolute width and height that can be retrieved by javascript. Block elements fill up the entire width of the containing element. Thus javascript cannot access its width.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can do this with a <code>Range</code> that supports <a href=\"http://www.w3.org/TR/cssom-view/#extensions-to-the-range-interface\">CSSOM View extensions</a>, which is most recent browsers (Firefox 4+, WebKit since early 2009, Opera 11, maybe earlier) and a <code>TextRange</code> in IE. The <code>TextRange</code> code is tedious, so I've omitted it here.</p>\n\n<p>jsFiddle: <a href=\"http://jsfiddle.net/gdn6C/1/\">http://jsfiddle.net/gdn6C/1/</a></p>\n\n<p>Code:</p>\n\n<pre><code>function getTextNodeHeight(textNode) {\n    var height = 0;\n    if (document.createRange) {\n        var range = document.createRange();\n        range.selectNodeContents(textNode);\n        if (range.getBoundingClientRect) {\n            var rect = range.getBoundingClientRect();\n            if (rect) {\n                height = rect.bottom - rect.top;\n            }\n        }\n    }\n    return height;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I'm having trouble getting the size, in pixels, of a text node using Javascript. Example:</p>\n\n<pre>\n&lt;p>\n  first text block\n  &lt;b>second text block&lt;/b>\n&lt;/p>\n</pre>\n\n<p>I need to get the bounding box of the two text blocks independently. I could get the size of the second block just by measuring the &lt;b> element, but the first one eludes me. It doesn't appear that textnodes in Javascript have a height or width, so far as I can tell.</p>\n\n<p>Wrapping the first text block in a &lt;span> and measuring that is not an option, because I've discovered that a span does not necessarily inherit all of the styles above it, and when I wrap the text it suddenly changes size. It's like the Heisenberg Uncertainty Principle of Javascript; my attempt to measure something changes it.</p>\n\n<p>I'm building an app that breaks HTML into pages (EPUB HTML, actually), and I need to know the position, height, and width of each block of text on the page so I can know whether to put it on this page or the next page.</p>\n\n<p>Any suggestions?</p>\n",
            "last_activity_date": 1312644997,
            "question_id": 6961022,
            "score": 11,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Measure bounding box of text node in Javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You could load the same image using the DOM / a hidden image and bind to the <code>load</code> event on that. The browser's caching should take care of not loading the image twice, and if the image is already loaded the event should fire immediately... not tested, tough.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>do not set background in css, but load the image into an img tag created with javascript (or better, jquery). once loaded, it will fire the load event. when this event is fired, apply the style property to your div</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In chrome, using .ready() of jQuery seems to work for me. Here's my fiddle:</p>\n\n<p><a href=\"http://jsfiddle.net/pWjBM/5/\" rel=\"nofollow\">http://jsfiddle.net/pWjBM/5/</a></p>\n\n<p>The image is just a random one I selected that is reasonably large - it actually takes a very long time to load in some of my tests, so may be worth replacing with something a bit smaller.  But the end result is what you want I think:  It takes a while to load, and once it's loaded the alert and then textbox (#txt) displays.  Seems to work in Firefox too; not sure about other browsers.</p>\n\n<p>EDIT: Hah, it seems to work in Chrome, Firefox and Safari.  Doesn't work in IE8.  So... it works in all real browsers :)</p>\n\n<p>EDIT2:  After much fiddling, a combination of Allesandro and my own solution <em>seems</em> to work.  I use .ready() on a hidden img to detect when the image is actually loaded, then load it into CSS background. </p>\n\n<p><a href=\"http://jsfiddle.net/pWjBM/41/\" rel=\"nofollow\">http://jsfiddle.net/pWjBM/41/</a></p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"testdiv\"&gt;\n    &lt;input type=\"text\" id=\"txt\" style=\"display:none;\" /&gt;\n&lt;/div&gt;\n&lt;img src=\"http://www.nasa.gov/sites/default/files/images/712130main_8246931247_e60f3c09fb_o.jpg\" id=\"dummy\" style=\"display:none;\" alt=\"\" /&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>$(function() {\n    $('#dummy').ready(function() { \n        alert('loaded');\n        $('#testdiv').css('background-image', 'url(http://www.nasa.gov/sites/default/files/images/712130main_8246931247_e60f3c09fb_o.jpg)');\n        $('#txt').show(1000);\n    });\n });\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>#testdiv {\n    background:#aaaaaa none no-repeat right top;\n    width: 400px;\n    height: 400px;\n}\n\n#txt{\n    margin-left: 180px;\n    margin-top: 140px;\n}\n</code></pre>\n\n<p>NOTE: There is a comment below about this not working because you can change the url of the image and it still fires the loaded event.  This is in fact working pretty much exactly as I'd expect given the current code - it doesn't check if the url you're pointing to for your \"image\" is valid and really an image, all it does is fires an event when the img is ready and change the background. The assumption in the code is that your url points to a valid image, and I think any further error checking is not really needed given the question.  </p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I have a sidebar widget that has an image background.</p>\n\n<p>Over this is a search input form. I don't want the input to show before the image has loaded.</p>\n\n<p>Is there a way to attach an <code>load</code> event handler to CSS background images like normal img elements/objects?  </p>\n\n<p>I know this could be done on a normal image, but I'd like to keep it as a CSS background because the image is part of a sprite. I am using jQuery, so solutions using jQuery or plain DOM JS are equally good.</p>\n",
            "last_activity_date": 1407944704,
            "question_id": 6285809,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "javascript-events",
                "background-image"
            ],
            "title": "How can I tell when a CSS background image has loaded? Is an event fired?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>No, that's not possible.</p>\n\n<p>I'd suggest you to use something like the <a href=\"http://jqueryui.com/demos/button/\">jQuery UI Buttons</a>. They support exactly this behaviour: <a href=\"http://jqueryui.com/demos/button/#checkbox\">http://jqueryui.com/demos/button/#checkbox</a></p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>There is no way to do that with javascript. </p>\n\n<p>But you can use javascript to simulate that effect by adding/removing a css class, or directly editing the css properties you have chosen to use.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I would try CSS and use the border-style <code>inset</code>, personally.</p>\n\n<pre><code>&lt;input type=\"button\" value=\"Inset Border\" style=\"border-style:inset;\" /&gt;\n</code></pre>\n\n<p>For a list of different styles, please see <a href=\"http://jsfiddle.net/bradchristie/4mUsP/1/\">this jsFiddle</a>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I have a button <code>&lt;input type=\"button\" name=\"name\" value=\"value\"/&gt;</code>. \nIs there any way to keep it visually pressed and unpress it via javascript?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1307209577,
            "question_id": 6238314,
            "score": 11,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Any way to keep an html button pressed?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This has to be a browser dependent issue.  Some browsers may compile the javascript differently if it's an expression rather than a declaration and some might treat them exactly the same. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Firefox also has non-standard <code>Function Statements</code>, which makes it possible to conditionally choose between function declarations (per spec, you can't). Just using an <a href=\"http://kangax.github.com/nfe/#function-statements\" rel=\"nofollow\">example of Juriy \"kangax\" Zaytsev</a>:</p>\n\n<pre><code>if (true) {\n    function foo(){ return 1; }\n} else {\n    function foo(){ return 2; }\n}\nfoo(); // 1\n// Note that other clients interpet `foo` as function declaration here, \n// overwriting first `foo` with the second one, and producing \"2\", not \"1\" as a result\n</code></pre>\n\n<p>So those are compiled at execution time, instead of in the parse-phase:</p>\n\n<blockquote>\n  <p>Function statements are NOT declared during variable instantiation. They are declared at run time, just like function expressions.</p>\n</blockquote>\n\n<p>Other browsers probably will pre-compile function declarations, making them perform faster at run time, but Firefox has to interpret function declarations at run time, causing not much difference between the speed of function declarations and function expressions in Gecko-based browsers.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>The difference b/w function declaration &amp; function expression is beautifully described in <a href=\"http://stackoverflow.com/questions/336859/\">Javascript: var functionName = function() {} vs function functionName() {}</a><br>\nIn this it's mentioned that function declaration is evaluated during parse-time, &amp; function expression is evaluated in the execution-phase</p>\n\n<p>In <a href=\"http://bytes.com/topic/javascript/answers/827638-function-expressions-versus-declarations\" rel=\"nofollow\">bytes.com</a> it's mentioned that function declaration is faster than function expression.</p>\n\n<p>I created a basic test case for this: <a href=\"http://jsperf.com/function-declaration-vs-function-expression\" rel=\"nofollow\">http://jsperf.com/function-declaration-vs-function-expression</a></p>\n\n<p><strong>Function Declaration</strong>:</p>\n\n<pre><code>function myfunc() {\n alert(\"yo\");\n}\nmyfunc();\n</code></pre>\n\n<p><strong>Function Expression</strong>:</p>\n\n<pre><code>var myfunc = function() {\n alert(\"yo\");\n}\nmyfunc();\n</code></pre>\n\n<p>The test showed that <strong>function expression is 90% slower than function declaration</strong>.</p>\n\n<p>Why such a difference in speed?</p>\n\n<p><strong>Edit</strong>:<br>\nFrom the results in <a href=\"http://jsperf.com/function-declaration-vs-function-expression\" rel=\"nofollow\">http://jsperf.com/function-declaration-vs-function-expression</a></p>\n\n<p>In <code>Chrome, IE9, Opera &amp; Safari</code> -> Function Declaration is faster than Function Expression</p>\n\n<p>In <code>Firefox, IE7, IE8</code> -> Function Expression is faster than Function Declaration</p>\n\n<p>In <strong>IE9</strong> Function declaration is faster, whereas in IE 7 &amp; 8 function expression is faster. <strong>Is it because of change in JavaScript engine in IE9, or was this move intentional?</strong></p>\n",
            "last_activity_date": 1301117925,
            "question_id": 5433883,
            "score": 11,
            "tags": [
                "javascript",
                "function",
                "performance"
            ],
            "title": "function declaration faster than function expression?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>It's binary \"OR\", just like in C or C++ or Java.</p>\n\n<p>The binary logic operators in Javascript are a little fragile because Javascript doesn't really have integer values. It sort-of fakes it.</p>\n\n<p><em>edit</em> &mdash; to clarify, when I wrote \"binary\" I should perhaps have written \"bit-wise\".  The operation acts on each bit of a numeric value, specifically the numeric values coerced to signed 32-bit integers. The result is also a signed 32-bit integer (according to the spec).</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>This will perform a <a href=\"http://en.wikipedia.org/wiki/Bitwise_operation#OR\">bitwise OR</a> between the bits in <code>this.value</code> and the bits already stored in <code>Value</code>, then store the result back into <code>Value</code>.</p>\n\n<pre><code>var Value = 42;  // 00101010\nValue |= 96;     // 01100000\nwindow.alert(Value);  // 01101010 -&gt; 106\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>It's a bitwise or assignment operator, similar to <code>+=</code>.  If you run a test on it like this:</p>\n\n<pre><code>&lt;ol&gt;\n&lt;script language=\"javascript\"&gt;\nvar x=false;\ndocument.writeln(\"&lt;li&gt;\"+x+\"&lt;/li&gt;\");\nx|=true;\ndocument.writeln(\"&lt;li&gt;\"+x+\"&lt;/li&gt;\");\nx&amp;=false;\ndocument.writeln(\"&lt;li&gt;\"+x+\"&lt;/li&gt;\");\n&lt;/script&gt;\n&lt;/ol&gt;\n</code></pre>\n\n<p>You'll get this output (in IE)</p>\n\n<pre><code>1.false\n2.1\n3.0\n</code></pre>\n\n<p>Essentially,  <code>x|=y</code> is the same as saying <code>x=x|y</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As others have pointed out, this is the bitwise OR operator. However, I don't think people use it much on numerical values in Javascript as - generally - you don't do a lot of computation in Javascript. To give you a better idea why this operator is useful, consider the far more common scenario that the user needs to fill in at least one of multiple textfields.</p>\n\n<p>Say you have this HTML:</p>\n\n<pre><code>&lt;input type=\"text\" class=\"phone-nr\" id=\"home-phone-nr-1\" /&gt;\n&lt;input type=\"text\" class=\"phone-nr\" id=\"home-phone-nr-2\" /&gt;\n&lt;input type=\"text\" class=\"phone-nr\" id=\"home-phone-nr-3\" /&gt;\n&lt;input type=\"text\" class=\"phone-nr\" id=\"mobile-phone-nr-1\" /&gt;\n&lt;input type=\"text\" class=\"phone-nr\" id=\"mobile-phone-nr-2\" /&gt;\n&lt;input type=\"text\" class=\"phone-nr\" id=\"mobile-phone-nr-3\" /&gt;\n</code></pre>\n\n<p>The user has the option to fill in multiple phone numbers, but will have to supply at least one. </p>\n\n<p>The easiest way to do this (with jQuery in this case) is:</p>\n\n<pre><code>var valid = false;\n$('.phone-nr').each(function(i, item){\n  valid |= $(item).val();\n}); // untested code\n</code></pre>\n\n<p><code>valid</code> will be true if at least one input field with class <code>phone-nr</code>has a non-empty value. </p>\n\n<p>If every field <em>must</em> be filled in (a more common requirement) you can do it like this with the bitwise AND operator:</p>\n\n<pre><code>var valid = true;\n$('.phone-nr').each(function(i, item){\n  valid &amp;= $(item).val();\n}); // untested code\n</code></pre>\n\n<p><code>valid</code> will only be true if <strong>all</strong> input fields have a value. </p>\n\n<p>If at least single field is required to be filled in, but <strong>no more than one</strong> you can use the XOR operator:</p>\n\n<pre><code>var valid = false;\n$('.phone-nr').each(function(i, item){\n  valid ^= $(item).val();\n}); // untested code\n</code></pre>\n\n<p>Those are, in my opinion, the real-world uses of bitwise operators in Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Some practical use for that operator I have found:</p>\n\n<pre><code>( 3|0 ) === 3;             // \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u043d\u0435 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442\n( 3.3|0 ) === 3;           // \u0443 \u0434\u0440\u043e\u0431\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u043e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c\n( 3.8|0 ) === 3;           // \u043d\u0435 \u043e\u043a\u0440\u0443\u0433\u043b\u044f\u0435\u0442, \u0430 \u0438\u043c\u0435\u043d\u043d\u043e \u043e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c\n( -3.3|0 ) === -3;         // \u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u0438 \u0443 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0434\u0440\u043e\u0431\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b\n( -3.8|0 ) === -3;         // \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 Math.floor(-3.3) == Math.floor(-3.8) == -4\n( \"3\"|0 ) === 3;           // \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u0447\u0438\u0441\u043b\u0430\u043c\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u044e\u0442\u0441\u044f \u043a \u0446\u0435\u043b\u044b\u043c \u0447\u0438\u0441\u043b\u0430\u043c\n( \"3.8\"|0 ) === 3;         // \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u043e\u043f\u044f\u0442\u044c \u0436\u0435 \u043e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0434\u0440\u043e\u0431\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c\n( \"-3.8\"|0 ) === -3;       // \u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u0438 \u0443 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0434\u0440\u043e\u0431\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b\n( NaN|0 ) === 0;           // NaN \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043a \u043d\u0443\u043b\u044e\n( Infinity|0 ) === 0;      // \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043a \u043d\u0443\u043b\u044e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0438 \u0441 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0441\u0442\u044c\u044e,\n( -Infinity|0 ) === 0;     // \u0438 \u0441 \u043c\u0438\u043d\u0443\u0441 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0441\u0442\u044c\u044e,\n( null|0 ) === 0;          // \u0438 \u0441 null,\n( (void 0)|0 ) === 0;      // \u0438 \u0441 undefined,\n( []|0 ) === 0;            // \u0438 \u0441 \u043f\u0443\u0441\u0442\u044b\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u043c,\n( [3]|0 ) === 3;           // \u043d\u043e \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u043e\u0434\u043d\u0438\u043c \u0447\u0438\u0441\u043b\u043e\u043c \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043a \u0447\u0438\u0441\u043b\u0443,\n( [-3.8]|0 ) === -3;       // \u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u0441 \u043e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u043d\u0438\u0435\u043c \u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438,\n( [\" -3.8 \"]|0 ) === -3;   // \u0438 \u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u0441 \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435\u043c \u0447\u0438\u0441\u0435\u043b \u0438\u0437 \u0441\u0442\u0440\u043e\u043a,\n( [-3.8, 22]|0 ) === 0     // \u043d\u043e \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438 \u0447\u0438\u0441\u043b\u0430\u043c\u0438 \u0432\u043d\u043e\u0432\u044c \u0437\u0430\u043d\u0443\u043b\u044f\u0435\u0442\u0441\u044f\n( {}|0 ) === 0;                // \u043a \u043d\u0443\u043b\u044e \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043f\u0443\u0441\u0442\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442\n( {'2':'3'}|0 ) === 0;         // \u0438\u043b\u0438 \u043d\u0435 \u043f\u0443\u0441\u0442\u043e\u0439\n( (function(){})|0 ) === 0;    // \u043a \u043d\u0443\u043b\u044e \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043f\u0443\u0441\u0442\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f\n( (function(){ return 3;})|0 ) === 0;\n</code></pre>\n\n<p>and some magic for me: </p>\n\n<pre><code>3 | '0px' === 3;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>What does this expression mean in JS?</p>\n\n<pre><code>Value |= this.value\n</code></pre>\n",
            "last_activity_date": 1364403742,
            "question_id": 4024429,
            "score": 11,
            "tags": [
                "javascript"
            ],
            "title": "What does a single vertical bar mean in JavaScript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<pre><code>&lt;meta name=\"apple-mobile-web-app-capable\" content=\"yes\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -6
                },
                {
                    "body": "<p>This is not possible.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>I've seen that you might have to remove the web application from your home screen, and then add it again, if you've added the meta tag, for it to make any difference. Worked for me.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Unfortunatly, no. There are only two options <code>black</code> and <code>black-translucent</code>. Just note that with <code>black-translucent</code> part of the web frame will be partially visible under the status bar while using <code>black</code> actually pushes the web frame down so it's height is a little smaller.</p>\n\n<p>This is what Apple says in their <a href=\"http://developer.apple.com/library/safari/#documentation/AppleApplications/Reference/SafariHTMLRef/Articles/MetaTags.html\">documentation</a>:</p>\n\n<pre><code>&lt;meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\"&gt;\n</code></pre>\n\n<blockquote>\n  <p>This meta tag has no effect unless you first specify full-screen mode as described in <a href=\"http://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/MetaTags.html#//apple_ref/doc/uid/TP40008193-SW3\">\u201capple-mobile-web-app-capable.\u201d</a></p>\n  \n  <p>If <code>content</code> is set to <code>default</code>, the status bar appears normal. If set to <code>black</code>, the status bar has a black background. If set to <code>black-translucent</code>, the status bar is black and translucent. If set to <code>default</code> or <code>black</code>, the web content is displayed below the status bar. If set to <code>black-translucent</code>, the web content is displayed on the entire screen, partially obscured by the status bar. The default value is <code>default</code>.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I know this is not really possible, but one small trick that might get you just a little closer to what you want, is described here: <a href=\"https://gist.github.com/nateps/1172490\" rel=\"nofollow\">https://gist.github.com/nateps/1172490</a>\nI take no credit, just found it online.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Visiting this website and following the instructions will remove the status bar. The technique can probably be incorporated into a standalone web app.</p>\n\n<p><a href=\"http://www.cydiahacks.com/noappstatus/\" rel=\"nofollow\">http://www.cydiahacks.com/noappstatus/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It was added in iOS 7.1</p>\n\n<p>Simply add minimal-ui to the viewport meta tag, e.g:</p>\n\n<p></p>\n\n<p>Taken from here:\n<a href=\"https://forums.whirlpool.net.au/archive/2194915\" rel=\"nofollow\">https://forums.whirlpool.net.au/archive/2194915</a></p>\n\n<p>Please note this only works for iPhone as far as I am aware, not iPad</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The closest I could get (iOS7, I think iOS6 would show darkened status bar) shows the status bar but with a transparent background and does not push down the content of the page; so you would see the network connection time and battery percent and time at the top of your app.</p>\n\n<pre><code>meta tags:\nname=\"apple-mobile-web-app-capable\" content=\"yes\"\nname=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\"\n</code></pre>\n\n<p>Also, to view any changes requires you to delete the app from your homescreen then add it back again.</p>\n\n<p>As mentioned by andyg303: </p>\n\n<blockquote>\n  <p>minimal-ui might have worked on beta, but tested and doesn't work on iPhone (iOS 7.1.2 4s) or iPad (v2 7.1.2).</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to disable the status bar in iPhone web apps? I'm working on something that requires a fixed, fullscreen view, and the status bar is rather annoying.</p>\n",
            "last_activity_date": 1409543876,
            "question_id": 2893951,
            "score": 11,
            "tags": [
                "javascript",
                "iphone",
                "html"
            ],
            "title": "Hide the iPhone status bar in a web application?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>var totalLiabilites = '$52.34';\nvar toalAssets      = '$85.12';\nvar pattern         = /[^0-9.-]+/g;\n\nvar result = parseFloat(toalAssets.replace(pattern, '')) -\n             parseFloat(totalLiabilites.replace(pattern, ''));\n\n// result: 32.78\n</code></pre>\n\n<p><strong>Note:</strong> In JavaScript it is recommended<sup>1</sup> to handle money as an integer representing the number of cents (8512 instead of 85.12). This is to avoid problems with floating-point arithmetic. <code>0.1 + 0.2 == 0.3</code> returns false in JavaScript, but fortunately integer arithmetic in floating point is exact, so decimal representation errors can be avoided by scaling.</p>\n\n<p>You may want to check the following post for further reading on this topic: <a href=\"http://stackoverflow.com/questions/588004/is-javascripts-math-broken\">Is JavaScript\u2019s math broken?</a></p>\n\n<p>You can always apply the currency-sign formatting when the values are rendered to the browser.</p>\n\n<hr>\n\n<p><sup>1</sup><sub>Douglas Crockford: <a href=\"http://books.google.com/books?id=PXa2bby0oQ0C&amp;pg=PA105&amp;dq=douglas+crockford+javascript+good+parts+dollar+values+can+be+converted&amp;rview=1&amp;cd=1#v=onepage&amp;q=&amp;f=false\">JavaScript: The Good Parts: Appendix A - Awful Parts (page 105)</a>.</sub></p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p><code>parseFloat()</code> won't work because your string begins with a non-number, the dollar sign.</p>\n\n<p>You can simply do a replace to remove the dollar sign, along with a parseFloat to get the value:</p>\n\n<pre><code>totalAssets = parseFloat(totalAssets.replace('$', ''));\ntotalLiabilities = parseFloat(totalLiabilities.replace('$', ''));\n\nvar difference = '$' + (totalAssets - totalLiabilities);\n</code></pre>\n\n<p>This code replaces your original strings with floats.  You could load them into new variables as well.  Likewise, difference does not have to have the '$' prepended.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>var a = \"$20\";\nvar b = \"$34\";\nvar c = parseFloat(a.replace(/[^0-9\\.]+/g, \"\")) - parseFloat(b.replace(/[^0-9\\.]+/g, \"\"));\nalert(c);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Can someone please help me out with a JavaScript/jQuery solution for this arithmetic problem:</p>\n\n<p>I need to subtract one number from the other.  </p>\n\n<p>The problem is that the numbers have a dollar sign (because its money), therefore jQuery is treating them as strings instead of numbers.</p>\n\n<p>I have created two variables - <code>toalAssets</code> and <code>totalLiabilites</code>.  I would like to subtract the latter from the former and place the result into another variable called <code>netWorth</code>.</p>\n\n<p>Perhaps i need to use <code>parseFloat()</code>?  </p>\n\n<p>But I'm not sure how - This is all a little over my head!</p>\n",
            "last_activity_date": 1270425697,
            "question_id": 2556338,
            "score": 11,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Currency Math in JavaScript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I always go with the first method.  Easier to read, and less indentation.  As far as execution speed, this will depend on the implementation, but I would expect them both to be identical.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Test it yourself. If this JavaScript is being run in the browser, it will almost certainly depend on the browser's JavaScript parsing engine.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My understanding is that would not make a difference because you branch with the if condition. So, if some_condition is true, the  else portion will not be touched, even without the return.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There won't be any difference in performance I would recommend the second example for maintainability. In general it's good practice to have one and only one possible exit point for a routine. It aids debugging and comprehension.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>\"Profile, don't speculate!\"</p>\n\n<ol>\n<li>you're putting the cart before the horse (maintainability by humans trumps machine speed)</li>\n<li><p>you should drive your optimization efforts by <em>measurements</em>, which means</p>\n\n<ul>\n<li>you should time the execution yourself; it'll obviously differ in different browsers and versions</li>\n<li>you should only optimize for speed the <em>hotspots</em> of your application (see point 1)</li>\n</ul></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Maybe slightly, but I don't think it will be measurable unless the rest of the function involves \"heavy\" (and otherwise redundant since I assume that a return would give same result)  js calls.</p>\n\n<p>As a side note, I think this is unnecessary micro optimization, and you should probably look elsewhere for performance improvements, ie profile the script through Chrome's developer tools or Firebug for Firefox (or similar tools) and look for slow/long running calls/functions.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In many languages, is a common practice to <a href=\"http://stackoverflow.com/questions/268132/invert-if-statement-to-reduce-nesting\">invert <code>if</code> statements to reduce nesting</a> or use <a href=\"http://en.wikipedia.org/wiki/Precondition\" rel=\"nofollow\">preconditions</a>.</p>\n\n<p>And having less nesting in your code improves code readability and maintainability.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>While it depends on the JavaScript implementation of the running browser, there should not be any notable difference between them (in terms of speed).</p>\n\n<p>The second form is preferable since breaking the flow is not a good programming habit. Also think about that in assembly, the jump instruction (micro operation) is always evaluated regardless of the evaluation.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Suppose the <code>return</code> takes 1ms versus the nested <code>if</code> taking 0.1ms (or vice-versa).</p>\n\n<p>It's hard to imagine either one being nearly that slow.</p>\n\n<p>Now, are you doing it more than 100 times per second?</p>\n\n<p>If so, <em>maybe</em> you should care.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am working on a project which requires some pretty intricate JavaScript processing. This includes a lot of nested <code>if</code>-<code>else</code>s in quite a few places. I have generally taken care to optimise JavaScript code as much as possible by reading the other tips on Stack&nbsp;Overflow, but I am wondering if the following two constructs would make any difference in terms of speed alone:</p>\n\n<pre><code>if(some_condition) {\n    // process\n    return ;\n}\n\n// Continue the else condition here\n</code></pre>\n\n<p>vs</p>\n\n<pre><code>if(some_condition) {\n    // Process\n}\n\nelse {\n   // The 'else' condition...\n}\n</code></pre>\n",
            "last_activity_date": 1404149144,
            "question_id": 1820839,
            "score": 11,
            "tags": [
                "javascript",
                "optimization",
                "if-statement"
            ],
            "title": "Using &#39;return&#39; instead of &#39;else&#39; in JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I think that would be browser dependent, since <a href=\"http://www.ietf.org/rfc/rfc2965.txt\" rel=\"nofollow\">RFC2965</a> does not define a maximum size for cookies or any standard behavior for when the maximum is exceeded.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The typical behavior of most browsers, to my knowledge, is to simply truncate the oldest data that does not fit.</p>\n\n<p>For example, create cookies 1 through 9.  When creating cookie 10 and the data size is going to overflow, cookie 1 is simply discarded.</p>\n\n<p>In general practice, if you are worried about bumping into the limit and loosing cookies to overflow, it is probably time to rethink your strategy of what you are storing and start caching the data server-side and limiting the cookie to a value to access the cached data.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>The file is truncated to the maximum length. </p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>What really happens when cookies file exceeds maximum size?</p>\n",
            "last_activity_date": 1329807982,
            "question_id": 1595872,
            "score": 11,
            "tags": [
                "javascript",
                "cookies",
                "filesize"
            ],
            "title": "what happens when cookies file exceeds maximum size?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Alright, after pounding away at the problem for the past 2 hours, here's my findings.</p>\n\n<p>The following events are never called between back and forward:</p>\n\n<ul>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/cc197055%28v=vs.85%29.aspx\">load/onload</a> </li>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ms536973%28v=vs.85%29.aspx\">unload/onUnload</a></li>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ms536912%28v=vs.85%29.aspx\">change/onchange</a></li>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ms535873%28v=vs.85%29.aspx\">or any of the other events that looked like it might be called on back/forward</a></li>\n</ul>\n\n<p>IE11 caches everything on page including the javascript state so none of the usual events are fired. When going back and forth between a page via the back/forward buttons, javascript code just resumes state without being notified that it was interrupted. Sorta rude to developers imho or maybe there is an event that is triggered for this, but I certainly don't know about it. </p>\n\n<p>Anyways, you can see this behavior on <a href=\"http://www.mrdoob.com/projects/chromeexperiments/ball-pool/\">this page full of balls</a>. Note in IE11, you navigate to google.com and then press back, all the balls are in the same exact location and everything continues to work. In every other browser, the page is reinitialized and the the balls drop fresh from the ceiling again. I can see scenarios where IE11 behavior would be useful and beneficial, but I just wish Microsoft would provide documentation for when you don't want it like that. Also, it would be nice if the defaults would be like every other browser and making this feature optional instead of breaking all compatibility with everything, including its own IE9 and IE10!</p>\n\n<p>So with that, I realized that if I started a timer, it would just pick off from where I left off. I don't like this code as it is a busy-wait hack, but it does what I want. It would be great if someone could think of something better that wouldn't be so busy...</p>\n\n<pre><code>&lt;!-- IE11 back/forward hack - http://stackoverflow.com/questions/21274085/internet-explorer-11-back-button-javascript-behavior --&gt;\n&lt;script type=\"text/javascript\"&gt;\n    var dumbIEHistory=history.length;\n    function busyWaitCheckForHistoryChange() {\n        if (history.length != dumbIEHistory) {\n            alert(\"History has changed, back/forward has been pressed, run my function!\");\n            myFunction();\n            dumbIEHistory=history.length;\n        }\n    }\n\n// using http://www.pinlady.net/PluginDetect/Browsers/ to do browser detection\n    $( window ).load(function() {\n        if (browser.isIE &amp;&amp; browser.verIE &gt;= 11) {\n            // let's not bog down all the other browsers because of IE11 stupidity\n            window.setInterval(\"busyWaitCheckForHistoryChange()\", 1000);\n        } else {\n            // in other browsers, this will be called when back/forward is pressed\n            myFunction();\n        }\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>Works for what I'm doing to catch when the back/forward button is pressed because the history length will be +1 after we hit back. If the user navigates back and forth too quickly, there might be a split second before the function is called, if that is a concern, you can reduce the interval. Hope this helps others.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>you can use window.onhashchange to monitor behaviors of the back/forward buttons.</p>\n\n<pre><code>var isInited = false;\n\nfunction init() {\n    if (isInited) {\n        return;\n    }\n    isInited = true;\n\n    ...\n}\n\n$(document).ready(init);\n\nwindow.onhashchange = function() {\n    $(document).ready(init);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I have been equally annoyed with this problem. Why is IE so frustratingly different?</p>\n\n<p>I found that setting <code>Cache-Control: no-cache</code> in the HTML file wasn't helping. What helped was to actually set that in the response header.</p>\n\n<p>In my case I'm drawing a Google chart and I need it to redraw whenever I visit the page (IE11 was even preventing the redraw of my chart when I refreshed the page manually!).</p>\n\n<p>I'm using ASP.NET MVC and this code in my action method solves the problem.</p>\n\n<pre><code>Response.CacheControl = \"no-cache\";\n</code></pre>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>It's called the BF Cache and it's been around since FF 1.5</p>\n\n<p>Bind to the <code>pageshow</code> event and <code>event.persisted</code> will tell you if its served from the cache.</p>\n\n<p><a href=\"http://msdn.microsoft.com/library/ie/dn265017(v=vs.85).aspx\" rel=\"nofollow\">http://msdn.microsoft.com/library/ie/dn265017(v=vs.85).aspx</a></p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Using_Firefox_1.5_caching\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Using_Firefox_1.5_caching</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In Chrome, FF, and IE8-10, when I press the back button, my javascript $(document).ready() function is called, but in IE11, none of the javascript is invoked. Does anyone know how to make IE11 respond like all the other browsers and bring consistency to my code?</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    alert(\"Are we called?\"); // neither is this called in IE11\n        $( document ).ready( function() {\n            alert(\"document ready\"); // does not get fired after hitting back on IE11\n        });\n&lt;/script&gt;\n</code></pre>\n\n<p>The annoying issue about IE11 is that if you turn on developer tools and start trying to trace or debug the issue, it goes away and it behaves as IE10 and calls the .ready() after going back.</p>\n\n<p>I do have cache disabled on this page via this header and again, it works on all other browsers that I am looking to support (IE8-10, FF, and Chrome).</p>\n\n<pre><code>Cache-Control: no-cache\n</code></pre>\n",
            "last_activity_date": 1422531745,
            "question_id": 21274085,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "internet-explorer",
                "internet-explorer-11"
            ],
            "title": "Internet Explorer 11 Back Button Javascript Behavior"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You need to escape the <code>/</code> with a <code>\\</code>.</p>\n\n<pre><code>/\\//ig // matches /\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you want to use <code>/</code> you need to escape it with a <code>\\</code></p>\n\n<pre><code>var word = /\\/(\\w+)/ig;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can escape it like this.</p>\n\n<pre><code>/\\//ig; //  Matches /\n</code></pre>\n\n<p>or just use indexOf</p>\n\n<pre><code>if(str.indexOf(\"/\") &gt; -1)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>In regular expressions, \"/\" is a special character which needs to be escaped (AKA flagged by placing a \\ before it thus negating any specialized function it might serve).  </p>\n\n<p>Here's what you need:</p>\n\n<pre><code>var word = /\\/(\\w+)/ig; //   /abc Match\n</code></pre>\n\n<p>Read up on RegEx special characters here: <a href=\"http://www.regular-expressions.info/characters.html\" rel=\"nofollow\">http://www.regular-expressions.info/characters.html</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I encountered two issues related to the foregoing, when extracting text delimited by <code>\\</code> and <code>/</code>, and found a solution that fits both, other than using <code>new RegExp</code>, which requires <code>\\\\\\\\</code> at the start.  These findings are in Chrome and IE11.   </p>\n\n<p>The regular expression</p>\n\n<pre><code>/\\\\(.*)\\//g\n</code></pre>\n\n<p>does not work.  I think the <code>//</code> is interpreted as the start of a comment in spite of the escape character.  The regular expression (equally valid in my case though not in general) </p>\n\n<pre><code>/\\b/\\\\(.*)\\/\\b/g\n</code></pre>\n\n<p>does not work either.  I think the second <code>/</code> terminates the regular expression in spite of the escape character.</p>\n\n<p>What does work for me is to represent <code>/</code> as <code>\\x2F</code>, which is the hexadecimal representation of <code>/</code>.  I think that's more efficient and understandable than using <code>new RegExp</code>, but of course it needs a comment to identify the hex code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I don't have much experience with JavaScript but i'm trying to create a tag system which, instead of using <code>@</code> or <code>#</code>, would use <code>/</code>.</p>\n\n<pre><code>var start = /#/ig; // @ Match\n\nvar word = /#(\\w+)/ig; //@abc Match\n</code></pre>\n\n<p>How could I use a <code>/</code> instead of the <code>#</code>. I've tried doing <code>var slash = '/'</code> and adding <code>+ slash +</code>, but that failed.</p>\n",
            "last_activity_date": 1414720023,
            "question_id": 16657152,
            "score": 10,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Matching a Forward Slash with a regex"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There is an <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/indexOf\"><code>indexOf</code></a> method that all arrays have (except in old version of Internet Explorer) that will return the index of an element in the array, or -1 if it's not in the array:</p>\n\n<pre><code>if (yourArray.indexOf(\"someString\") &gt; -1) {\n    //In the array!\n} else {\n    //Not in the array\n}\n</code></pre>\n\n<p>If you need to support old IE browsers, you can use polyfill this method using the code in <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/indexOf#Compatibility\">the MDN article</a>.</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>This will do it for you:</p>\n\n<pre><code>function inArray(needle, haystack) {\n    var length = haystack.length;\n    for(var i = 0; i &lt; length; i++) {\n        if(haystack[i] == needle)\n            return true;\n    }\n    return false;\n}\n</code></pre>\n\n<p>I found it in Stack Overflow question <em><a href=\"http://stackoverflow.com/questions/784012/javascript-equivalent-of-phps-in-array\">JavaScript equivalent of PHP's in_array()</a></em>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var stringArray = [\"String1\", \"String2\", \"String3\"];\n\nreturn (stringArray.indexOf(searchStr) &gt; -1)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use the <code>indexOf</code>method and \"extend\" the Array class with the method <code>contains</code> like this:</p>\n\n<pre><code>Array.prototype.contains = function(element){\n    return this.indexOf(element) &gt; -1;\n};\n</code></pre>\n\n<p>with the following results:</p>\n\n<p><code>[\"A\", \"B\", \"C\"].contains(\"A\")</code> equals <code>true</code> </p>\n\n<p><code>[\"A\", \"B\", \"C\"].contains(\"D\")</code> equals <code>false</code></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>Create this function prototype:\n    Array.prototype.contains = function ( needle ) {\n       for (i in this) {\n           if (this[i] == needle) return true;\n       }\n       return false;\n    }\n</code></pre>\n\n<p>and then you can use following code to search in array x</p>\n\n<pre><code>if (x.contains('searchedString')) {\n    // do a\n}\nelse\n{\n      // do b\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a string array and one string. I'd like to test this string against the array values and apply a condition the result - if the array contains the string do \"A\", else do \"B\".</p>\n\n<p>How can I do that?</p>\n",
            "last_activity_date": 1365431773,
            "question_id": 12623272,
            "score": 10,
            "tags": [
                "javascript",
                "arrays",
                "string",
                "testing"
            ],
            "title": "How to check if a string array contains one string in JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>JavaScript (well, EcmaScript) defines its DateTime string interchange format based on a simplification of the ISO-8601 standard.</p>\n\n<p>XML Schema defines its DateTime string interchange format based on ISO-8601 also.</p>\n\n<p>I have found it handy to use the .NET class <code>System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDateTime</code> to handle conversion from .NET DateTime values to XML formats and back. </p>\n\n<p>Since JavaScript is based on the same ISO-8601 standard, perhaps it will work for your JSON case as well.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>One thing that catches people out quite often with converting between Javascript dates and various server-side languages is that although both sides may be able to understand a unix-style timestamp value, JS uses microsecond-precision timestamp, whereas in most other languages the default timestamp precision is to the second.</p>\n\n<p>In other words, 1347993132851 in Javascript needs to be divided by 1000 in order to be recognised as a unix timestamp in other languages.</p>\n\n<p>Alternatively, if your platform can accept formatted date strings, use the Javascript <code>Date()</code> object to convert a timestamp value into a formatted date to send to the server. Or even better, use a helper library such as <a href=\"http://www.datejs.com/\" rel=\"nofollow\">Date.js</a> or <a href=\"http://momentjs.com/\" rel=\"nofollow\">Moment.js</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I found a simple answer. In my javascript, I was serializing the data using the JavaScriptSerializer. After much googling, I found this <a href=\"http://james.newtonking.com/archive/2009/02/20/good-date-times-with-json-net.aspx\">article</a> that shows how to serialize using JsonConvert that causes a more .NET-friendly DateTime to be used.</p>\n\n<p><strong>Old:</strong></p>\n\n<pre><code>var specs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.JobSpecEquipment))\n</code></pre>\n\n<p>Dates look like this: <code>Date(1348017917565)</code></p>\n\n<p><strong>New:</strong></p>\n\n<pre><code>var specs = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.JobSpecEquipment));\n</code></pre>\n\n<p>Dates look like this: <code>2012-09-18T21:27:31.1285861-04:00</code></p>\n\n<p>So the problem was really how I was serializing in the first place. Once I used JsonConvert, deserialization on the back end simply worked.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>I found this piece of code on the internet.\nIt worked like a charm for me...</p>\n\n<pre><code>function customJSONstringify(obj) {\n    return JSON.stringify(obj).replace(/\\/Date/g, \"\\\\\\/Date\").replace(/\\)\\//g, \"\\)\\\\\\/\")\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a javascript function that calls an MVC controller with JSON data:</p>\n\n<pre><code>var specsAsJson = JSON.stringify(specs);\n$.post('/Home/Save', { jsonData: specsAsJson });\n</code></pre>\n\n<p>On the server side, within the controller, I can't seem to get past this error:</p>\n\n<blockquote>\n  <p>/Date(1347992529530)/ is not a valid value for DateTime.</p>\n</blockquote>\n\n<p>That exception happens when I call Deserialize() (third line in method below):</p>\n\n<pre><code>    public ActionResult Save(string jsonData)\n    {\n        var serializer = new JavaScriptSerializer();\n        serializer.RegisterConverters(new[] { new TimeSpanJsonConverter() });\n        var specs = serializer.Deserialize&lt;List&lt;EquipmentSpecWithParameterlessConstructor&gt;&gt;(jsonData);\n\n        return View(\"Index\", _allTrackerJobs);\n    }\n</code></pre>\n\n<p>I've been doing some googling, and the above code is my latest attempt to make this work (using the TimeSpanJsonConverter from <a href=\"http://stackoverflow.com/a/12265196/279516\">here</a>). Other approaches show sending only a date to the server, but I have a list of objects that have dates as some properties.</p>\n\n<p>Is there an elegant, generally-accepted approach to solving this, or do we still need some kind of ugly work-around? What's the right way to resolve this?</p>\n\n<p><strong>=================== End of original question ===================</strong></p>\n\n<hr>\n\n<p><strong>Edit - SOLVED by serializing using JsonConvert</strong></p>\n\n<p>See my <strong>answer</strong> below (not the crappy work-around in this question).</p>\n\n<hr>\n\n<p><strong>Edit - Crappy work-around</strong></p>\n\n<p>I created a DTO with the exact same fields as the domain object, except that I made the date fields strings so they would deserialize. Now that I can deserialize it, I'll work on getting the dates into a valid format so I can create domain objects from my DTOs.</p>\n\n<pre><code>public class EquipmentSpecDto\n{\n    public string StartTime { get; set; }\n    public string EndTime { get; set; }\n    // more properties here\n}\n</code></pre>\n\n<p>And I simply just used the DTO for the deserialization:</p>\n\n<pre><code>var specs = serializer.Deserialize&lt;List&lt;EquipmentSpecDto&gt;&gt;(jsonData);\n</code></pre>\n\n<hr>\n\n<p><strong>Edit 2 - Converting JavaScript Dates to .NET</strong></p>\n\n<p>For completeness, and in the hopes that I save someone else an hour, this is how I was able to convert the javascript dates:</p>\n\n<pre><code>    foreach (EquipmentSpecDto specDto in specDtos)\n    {\n        // JavaScript uses the unix epoch of 1/1/1970. Note, it's important to call ToLocalTime()\n        // after doing the time conversion, otherwise we'd have to deal with daylight savings hooey.\n        DateTime unixEpoch       = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);\n        Double startMilliseconds = Convert.ToDouble(specDto.StartTime.Substring(6, 13));\n        Double endMilliseconds   = Convert.ToDouble(specDto.EndTime.Substring(6, 13));\n        DateTime startTime       = unixEpoch.AddMilliseconds(startMilliseconds).ToLocalTime();\n        DateTime endTime         = unixEpoch.AddMilliseconds(endMilliseconds).ToLocalTime();\n        EquipmentSpec spec       = new EquipmentSpec(startTime, endTime, specDto.Equipment);\n\n        specs.Add(spec);\n    }\n</code></pre>\n",
            "last_activity_date": 1392758346,
            "question_id": 12482856,
            "score": 10,
            "tags": [
                "c#",
                "javascript",
                "json",
                "stringify"
            ],
            "title": "Proper Way to Convert JSON Date to .NET DateTime During Deserialization"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>var dom = '&lt;html&gt;&lt;head&gt;....&lt;/head&gt;&lt;body&gt;...&lt;/body&gt;&lt;/html&gt;';\n\ndocument.write(dom);\ndocument.close();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>HTML would like this:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"toolbar_wrapper\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>JS would look like this:</p>\n\n<pre><code>var data = '&lt;div class=\"toolbar\"&gt;'+\n                '&lt;button type=\"button\" class=\"new\"&gt;New&lt;/button&gt;'+\n                '&lt;button type=\"button\" class=\"upload\"&gt;Upload&lt;/button&gt;'+\n                '&lt;button type=\"button\" class=\"undo disabled\"&gt;Undo&lt;/button&gt;'+\n                '&lt;button type=\"button\" class=\"redo disabled\"&gt;Redo&lt;/button&gt;'+\n                '&lt;button type=\"button\" class=\"save disabled\"&gt;Save&lt;/button&gt;'+\n            '&lt;/div&gt;';\ndocument.getElementById(\"toolbar_wrapper\").innerHTML = data;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>createDocumentFragment</code> may help you.</p>\n\n<p><a href=\"https://developer.mozilla.org/En/DOM/DocumentFragment\" rel=\"nofollow\">https://developer.mozilla.org/En/DOM/DocumentFragment</a></p>\n\n<p>Browsers always create document by themselves with empty page (about:blank).\nMaybe, in Chrome application there're some functions available (like XUL in FF), but there's no such function in ordinary javascript.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In case you're still looking for an anwer, and for anyone else coming accross it, I just have been trying to do the same thing myself. It seems you want to be looking at javascript's DOMImplementation:</p>\n\n<p><a href=\"http://reference.sitepoint.com/javascript/DOMImplementation\" rel=\"nofollow\">http://reference.sitepoint.com/javascript/DOMImplementation</a></p>\n\n<p>There are few references to compatibility as well here, but it's fairly well supported.</p>\n\n<p>In essence, to create a new document to manipulate, you want to create a new Doctype object (if you're going to output some standards based stuff) and then create the new Document using the newly created Doctype variable.</p>\n\n<p>There are multiple options to be put into both the doctype and the document, but if you're creating an HTML5 document, it seems you want to leave most of them as blank strings.</p>\n\n<p>Example (New HTML5 DOM Document):</p>\n\n<pre><code>var doctype = document.implementation.createDocumentType( 'html', '', '');\n\nvar dom = document.implementation.createDocument('', 'html', doctype);\n</code></pre>\n\n<p>The new Document now looks like this:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Example (New XHTML DOM Document):</p>\n\n<pre><code>var doctype = document.implementation.createDocumentType(\n    'html',\n    '-//W3C//DTD XHTML 1.0 Strict//EN',\n    'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'\n);\n\nvar dom = document.implementation.createDocument(\n    'http://www.w3.org/1999/xhtml',\n    'html',\n    doctype\n);\n</code></pre>\n\n<p>So it's up to you to populate the rest of it. You could do this as simply as changing</p>\n\n<pre><code>dom.documentElement.innerHTML = '&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;';\n</code></pre>\n\n<p>Or go with the more rigorous:</p>\n\n<pre><code>var head = dom.createElement( 'head' );\nvar body = dom.createElement( 'body' );\ndom.documentElement.appendChild(head);\ndom.documentElement.appendChild(body);\n</code></pre>\n\n<p>All yours.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Here is a version that also works in Internet Explorer:</p>\n\n<pre><code>/**\n * Create document element from string.\n * \n * @param {String} html\n * @returns {XMLDocument|null} null upon error\n */\nfunction stringToDocument(html) {\n    var doc;\n    try { //Internet Explorer\n        doc=new ActiveXObject(\"Microsoft.XMLDOM\");\n    }\n    catch(e)\n    {\n        try { //Firefox, Mozilla, Opera, Chrome etc.\n            doc=document.implementation.createDocument(\"\",\"\",null);\n        }\n        catch(e) {\n            return null;\n        }\n    }\n\n    doc.async=false;\n    doc.load(html);\n    return doc;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>We're looking for ways to create a <strong>DOM document</strong> in javascript from a string, but without using Jquery.\nIs there a way to do so? [I would assume so, since Jquery can do it!]</p>\n\n<p>For those curious, we can't use Jquery, becase we're doing this in the context of a Chrome application's content script, and using Jquery would just make our content script too heavy.</p>\n",
            "last_activity_date": 1422120071,
            "question_id": 9598791,
            "score": 10,
            "tags": [
                "javascript",
                "document"
            ],
            "title": "Create a DOM document from string, without JQuery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>All major interpreters provide efficient accessors for the lengths of native arrays, but not for array-like objects like <a href=\"https://developer.mozilla.org/En/DOM/NodeList\" rel=\"nofollow\"><code>NodeList</code></a>s.</p>\n\n<p><a href=\"http://solutoire.com/2007/02/02/efficient-looping-in-javascript/\" rel=\"nofollow\">\"Efficient looping in Javascript\"</a></p>\n\n<blockquote>\n<pre><code>Test / Browser                Firefox 2.0 Opera 9.1   Internet Explorer 6\nNative For-Loop               155 (ms)    121 (ms)    160 (ms)\n...\nImproved Native While-Loop    120 (ms)    100 (ms)    110 (ms)\n</code></pre>\n</blockquote>\n\n<p><a href=\"http://userjs.org/help/tutorials/efficient-code\" rel=\"nofollow\">\"Efficient JavaScript code\"</a> suggests</p>\n\n<blockquote>\n<pre><code>for( var i = 0; i &lt; document.getElementsByTagName('tr').length; i++ ) {\n  document.getElementsByTagName('tr')[i].className = 'newclass';\n  document.getElementsByTagName('tr')[i].style.color = 'red';\n  ...\n}\n</code></pre>\n  \n  <hr>\n\n<pre><code>var rows = document.getElementsByTagName('tr');\nfor( var i = 0; i &lt; rows.length; i++ ) {\n  rows[i].className = 'newclass';\n  rows[i].style.color = 'red';\n  ...\n}\n</code></pre>\n  \n  <p>Neither of these are efficient. <code>getElementsByTagName</code> returns a dynamic object, not a static array. Every time the loop condition is checked, Opera has to reassess the object, and work out how many elements it references, in order to work out the <code>length</code> property. This takes a little more time than checking against a static number.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>There's probably a modest speed boost attainable by caching the length in a local variable due to attribute lookup speed. This may or may not be negligible, depending on how the JS engine JITs the code.</p>\n\n<p>See <a href=\"http://jsperf.com/for-loop-caching\" rel=\"nofollow\">http://jsperf.com/for-loop-caching</a> for a rudimentary JSperf testcase.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For any collection-type object whose length you will not be manipulating (e.g. any immutable collection), it's always a good idea to cache its length for better performance.</p>\n\n<pre><code>var elems = document.getElementsByName(\"tst\");\nvar elemsLen = elems.length;\nvar i;\nfor(i = 0; i &lt; elemsLen; ++i)\n{\n  // work with elems... example:\n  // elems[i].selected = false;\n}\nelems = [10,20,30,40,50,60,70,80,90,100];\nelemsLen = elems.length;\nfor(i = 0; i &lt; elemsLen; ++i)\n{\n  // work with elems... example:\n  // elems[i] = elems[i] / 10;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As always, the answer is \"it depends\".</p>\n\n<p><a href=\"http://jsperf.com/array-length-performance\">Let's test native arrays with a million-element array:</a></p>\n\n<pre><code>for (var i = 0; i &lt; arr.length; i++);\n\nvar len=arr.length;\nfor (var i = 0; i &lt; len; i++);\n</code></pre>\n\n<p><img src=\"http://josh3736.net/images/arrlen.png\"></p>\n\n<p>Chrome and Firefox optimize the property accessor to be as efficient as copying the length to a local variable.  IE and Opera do not, and are 50%+ slower.</p>\n\n<p><strong>However</strong>, keep in mind that the test results' \"ops/second\" means number of <em>complete iterations through an array of one million elements</em> per second.</p>\n\n<p>To put this in perspective, even in IE8 (the worst performer in this bunch)&mdash;which scored .44 and 3.9 on property access and local variable (respectively)&mdash;the per-iteration penalty was a scant <strong>2 \u00b5s</strong>.  Iterating over a thousand items, using <code>array.length</code> will only cost you an extra 2 ms.  In other words: <strong>beware premature optimization</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>The length of an actual array is not computed on the fly.  It's stored as part of the array data structure so accessing it involves no more work than just fetching the value (there is no computation).  As such, it will generally be as fast as retrieving any fixed property of an object.  As you can see in this performance test, there is basically no difference between retrieving the length of an array and retrieving a property of an object:</p>\n\n<p><a href=\"http://jsperf.com/length-comparisons\" rel=\"nofollow\">http://jsperf.com/length-comparisons</a></p>\n\n<p>An exception to this is the nodeList objects that the DOM returns from functions like <code>getElementsByTagName()</code> or <code>getElementsByClassName()</code>.  In these, it is often much slower to access the length property.  This is probably because these nodeList objects are not true javascript objects and there may be a bridge between Javascript and native code that must be crossed each time something is accessed from these objects.  In this case, it would be a LOT faster (10-100x faster) to cache the length into a local variable rather than use it repeatedly in a loop off the nodeList.  I've added that to the length-comparison and you can see how much slower it is.</p>\n\n<p>In some browsers, it is meaningfully faster to put the length into a local variable and use it from there if you will be referring to it over and over again (like in a loop).  Here's the performance graph from the above jsperf test:</p>\n\n<p><img src=\"http://i.stack.imgur.com/GrSjc.png\" alt=\"\"></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>i'm doing some javascript coding and I was wondering if the length method is \"precomputed\", or remembered by the JS engine.</p>\n\n<p>So, the question is:</p>\n\n<p>If I'm checking really often for an array length, and supposing that i'm not changing it (making it immutable through a closure), should I precompute the length method and store it in some variable?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1331075223,
            "question_id": 9592241,
            "score": 10,
            "tags": [
                "javascript",
                "arrays",
                "immutability"
            ],
            "title": "Javascript: Is the length method efficient?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>As a workaround, you could try using the <a href=\"http://jqueryui.com/demos/draggable/#option-handle\"><code>handle</code> option</a> and only make the dialog draggable by the parts that aren't scrollable. (The title or some such.) </p>\n\n<h3><a href=\"http://jsfiddle.net/LdEGD/1/\">jsFiddle Example</a></h3>\n\n<p>Another solution that @AlexFigueiredo pointed out involves just <a href=\"http://jsfiddle.net/FGXnR/2/\">wrapping the content / handle in a <code>div</code></a> that handles the sizing and scrolling \u2013 that seems stop the click event from being sent to the handle.</p>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>A long time ago I created a dialog box in my application. The dialog is pretty simple, position absolute, centered in the screen via javascript.</p>\n\n<p>Now I have added jQuery UI to the application but I do not want to use jQuery UI's dialogs just because they work differently. But I did make my dialog draggable using jQuery UI as it is very easy:</p>\n\n<pre><code>$('#dialog').draggable();\n</code></pre>\n\n<p>There is one problem with that, some of my dialogs have scrollbars.<br/>\nBut using the draggable method, if there is a scrollbar, it bugs because it drags the dialog.</p>\n\n<p>Is there a way for the dialog to not drag while using the scrollbar ?<br/>\nI noticed there are some ways to avoid elements to be dragged, but scrollbars are not elements.</p>\n\n<p>Thank you</p>\n\n<p>EDIT: JSFiddle: <a href=\"http://jsfiddle.net/FGXnR/\">http://jsfiddle.net/FGXnR/</a></p>\n",
            "last_activity_date": 1326330424,
            "question_id": 8793236,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "modal-dialog",
                "draggable"
            ],
            "title": "Using jQuery UI Draggable, how to avoid drag when using scrollbar?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You're looking for an equivilent of PHP's <code>br2nl()</code>. This should do the job:</p>\n\n<pre><code>function br2nl(str) {\n    return str.replace(/&lt;br\\s*\\/?&gt;/mg,\"\\n\");\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>How can I replace HTML <code>&lt;BR&gt; &lt;BR/&gt; or &lt;BR /&gt;</code> with new line character \"\\n\"</p>\n",
            "last_activity_date": 1320828932,
            "question_id": 8062399,
            "score": 10,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How replace HTML &lt;br&gt; with newline character &quot;\\n&quot;"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This is an <a href=\"https://developer.mozilla.org/en/JavaScript/Guide/Working_with_Objects#Using_Object_Initializers\"><em>object literal</em>  <em><sup>[MDN]</sup></em></a>:</p>\n\n<pre><code>var obj = {\n    key: value\n};\n\n// obj.key === value; // true\n</code></pre>\n\n<p>It assigns <code>value</code> to a property <code>key</code> of <code>obj</code>. While there are no restriction for what <code>value</code> can be (well, it must be something assignable), there are limitations for <code>key</code>: It must be either an <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_7.6\"><em>identifier name</em></a>, a string literal or a numeric literal.</p>\n\n<p>More details can be found in <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_11.1.5\">section 11.1.5</a> of the ECMAScript specification.</p>\n\n<p>The literal notation is similar to:</p>\n\n<pre><code>var stuffToDo = {}; // &lt;-- empty object literal\n\nstuffToDo.bar = function() {...};\n// or stuffToDo['bar'] = ...\n\nstuffToDo.baz = function() {...};\n// or stuffToDo['baz'] = ...\n</code></pre>\n\n<p>The biggest difference is that when using an object literal, you cannot access other properties of the object <em>during the declaration</em>.</p>\n\n<p>This will not work:</p>\n\n<pre><code>var obj = {\n    foo: value,\n    bar: obj.foo\n};\n</code></pre>\n\n<p>whereas this does:</p>\n\n<pre><code>var obj = {};\nobj.foo = value;\nobj.bar = obj.foo;\n</code></pre>\n\n<hr>\n\n<p>For completeness, there are two other uses of colons in JavaScript:</p>\n\n<ul>\n<li><p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special/Conditional_Operator\">Conditional (ternary) operator <em><sup>[MDN]</sup></em></a>:   </p>\n\n<pre><code>var val = condition ? true-value : false-value;\n</code></pre></li>\n<li><p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Statements/label\">Labels <em><sup>[MDN]</sup></em></a>:</p>\n\n<pre><code>someLabel: var x = 5;\n</code></pre></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>It is the <strong>object literal notation</strong> <a href=\"http://www.dyn-web.com/tutorials/obj_lit.php\" rel=\"nofollow\">http://www.dyn-web.com/tutorials/obj_lit.php</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>This is probably a stupid noob question but what does the : represent in the following context:</p>\n\n<pre><code>var stuffToDo = {\n    'bar' : function() {\n        alert('the value was bar -- yay!');\n    },\n\n    'baz' : function() {\n        alert('boo baz :(');\n    },\n\n    'default' : function() {\n        alert('everything else is just ok');\n    }\n};\n\nif (stuffToDo[foo]) {\n    stuffToDo[foo]();\n} else {\n    stuffToDo['default']();\n}\n</code></pre>\n\n<p>Is it storing the function to each of those variables?</p>\n",
            "last_activity_date": 1314089609,
            "question_id": 7147273,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "What does the colon (:) in JavaScript represent?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Something like this ? </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    var d=new Date();\n    document.write(\"Original form: \");\n    document.write(d + \"&lt;br /&gt;\");\n    document.write(\"Formatted form: \");\n    document.write(d.toLocaleString());\n\n    //calculate change of the 2 dates\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's an idea, that may or may not work.</p>\n\n<p>Create a date where all the elements are distinct, like February 18th 1999 at 13:45, use <code>toLocaleString()</code>, then identify the elements based on their distinct values.</p>\n\n<p>Could be kind of complicated and I don't have any code that might help with it, but it's an idea to be thrown out there, maybe you can make use of it.</p>\n\n<hr>\n\n<p>EDIT: Here's some code:</p>\n\n<pre><code>var d = new Date(1999,1,18,13,45,0).toLocaleString();\ndocument.write(\"&lt;p&gt;String: \"+d+\"&lt;/p&gt;\");\nvar f = d\n    .replace(/1999/,\"%Y\")\n    .replace(/99/,\"%y\")\n    .replace(/F[^ ]{3,}/i,\"%M\")\n    .replace(/F[^ ]+/i,\"%m\")\n    .replace(/PM/,\"%A\")\n    .replace(/pm/,\"%a\")\n    .replace(/18[^ ]+/,\"%d%S\") // day number with suffix\n    .replace(/18/,\"%d\")\n    .replace(/13/,\"%H\")\n    .replace(/1/,\"%h\")\n    .replace(/45/,\"%i\")\n    .replace(/00/,\"%s\");\n    // optionally add something to detect the day of the week (Thursday, here)\ndocument.write(\"&lt;p&gt;Format: \"+f+\"&lt;/p&gt;\");\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>String: 18 February 1999 13:45:00\nFormat: %d %M %Y %H:%i:%s\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I wrote something in pure javascript that works in IE/Firefox/Chrome. It will out put MM/DD/YYYY or DD/MM/YYYY,... depending in toLocalDateString().</p>\n\n<p>Did not work on Safari but new Date().toLocalDateString() did not either.</p>\n\n<p>Here is a <a href=\"http://jsfiddle.net/h3P7h/7/\" rel=\"nofollow\">jsFiddle</a></p>\n\n<pre><code> //Create a known date string\nvar y = new Date(2013, 9, 25);\nvar lds = y.toLocaleDateString();\n\n//search for the position of the year, day, and month\nvar yPosi = lds.search(\"2013\");\nvar dPosi = lds.search(\"25\");\nvar mPosi = lds.search(\"10\");\n\n//Sometimes the month is displayed by the month name so guess where it is\nif(mPosi == -1)\n{\n    mPosi = lds.search(\"9\");\n    if(mPosi == -1)\n    {\n        //if the year and day are not first then maybe month is first\n        if(yPosi != 0 &amp;&amp; dPosi != 0)\n        {\n            mPosi = 0;\n        }\n        //if year and day are not last then maybe month is last\n        else if((yPosi+4 &lt;  lds.length) &amp;&amp; (dPosi+2 &lt; lds.length)){\n            mPosi = Infinity;\n        }\n        //otherwist is in the middle\n        else  if(yPosi &lt; dPosi){\n            mPosi = ((dPosi - yPosi)/2) + yPosi;            \n        }else if(dPosi &lt; yPosi){\n            mPosi = ((yPosi - dPosi)/2) + dPosi;\n        }   \n    }\n\n}\n\n\nvar formatString=\"\";\nvar order = [yPosi, dPosi, mPosi];\norder.sort(function(a,b){return a-b});\n\nfor(i=0; i &lt; order.length; i++)\n{\n    if(order[i] == yPosi)\n    {\n        formatString += \"YYYY/\";\n    }else if(order[i] == dPosi){\n        formatString += \"DD/\";\n    }else if(order[i] == mPosi){\n        formatString += \"MM/\";\n    }\n}\n\nformatString = formatString.substring(0, formatString.length-1);\n\n$('#timeformat').html(formatString+\" \"+lds);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Is there a possibility to determine, with pure Javascript, what date time <strong>FORMAT</strong> has user configured on his operating system (Windows, Linux, MAC OS, etc.)?</p>\n\n<p>Thanks in advance.</p>\n\n<p>EDIT: I know about the method toLocaleString(), but this isn't help me to get the <strong>format</strong> that client has configured on his local machine.</p>\n",
            "last_activity_date": 1390701624,
            "question_id": 5548783,
            "score": 10,
            "tags": [
                "javascript",
                "datetime"
            ],
            "title": "How to detect the user&#39;s locale date and time format"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>var $buttons = $('.buttons');\n\n$buttons.each( function (index) { \n    if ( index == $buttons.length - 1 ) {\n        $(this).fadeIn('fast',function() {\n           // my callback\n        });\n    } else {\n        $(this).fadeIn('fast');\n    }\n});\n</code></pre>\n\n<p>Untested but this should apply the callback to the last button only.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>An alternative to @Ross's answer that will always trigger the callback on the last button to fade in (which may or may not be the last button that was told to animate) could be:</p>\n\n<pre><code>var buttons = $(\".buttons\");\nvar numbuttons = buttons.length;\nvar i = 0;\n\nbuttons.fadeIn('fast', function() {\n    i++;\n    if(i == numbuttons) {\n        //do your callback stuff\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>The idea behind my solution is to keep a counter. Whenever an animation finishes, you simply increment this counter, thus you can see when you are at last button. Remember to set the counter back to zero when everything is done, because you might want to repeat this (hide them again, and show them again).</p>\n\n<pre><code>var $buttons=$('.buttons'),\n    button_n=$buttons.length,\n    button_counter=0;\n$buttons.fadeIn('fast', function () {\n    if (button_counter==button_n-1) {\n        alert('It is all done!');\n        button_counter=0;\n    } else {\n        button_counter++;\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>onClickBtnEdit = function(){\n    var $EditDel = $($btnEdit).add($btnDel);\n    var btns = $EditDel.size();\n\n    $EditDel.fadeOut(\"def\",function(){                   \n        btns--;\n        if(btns===0){\n            $($btnSave).add($btnCancel).fadeIn(\"slow\");\n        }\n    });\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>jQuery introduced a <a href=\"http://api.jquery.com/promise/#example-1\">promise</a> in version 1.6 and is far more elegant than adding counters.</p>\n\n<p>Example:</p>\n\n<pre><code>// Step 1: Make your animation\n$(\".buttons\").each(function() {\n    $(this).fadeIn(\"fast\");\n});\n\n// Step 2: Attach a promise to be called once animation is complete\n$(\".buttons\").promise().done(function() {\n    // my callback\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 56
                },
                {
                    "body": "<p>For collecting unrelated element animations into a single callback you can do this:</p>\n\n<pre><code>$.when(\n    $someElement.animate(...).promise(),\n    $someOtherElement.animate(...).promise()\n).done(function() {\n    console.log(\"Both animations complete\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I need a callback to execute once after multiple elements have finished animating.\nMy jquery selector is as follows:</p>\n\n<pre><code>$('.buttons').fadeIn('fast',function() {\n   // my callback\n});\n</code></pre>\n\n<p>The problem with this is that the buttons class matches a number of elements, all of which need to be faded in before the callback is executed. As it stands now, the callback is executed after each individual element has finished animating. This is NOT the desired function. I'm looking for an elegant solution such that my callback is only executed once after all the matched elements have finished animating. This question has popped up in a few places including SO, but there's never been an elegant answer (nor even a definitive answer for that matter - solutions that work for one person don't work at all for others).</p>\n",
            "last_activity_date": 1363389957,
            "question_id": 5220878,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "animation",
                "callback"
            ],
            "title": "Jquery - defer callback until multiple animations are complete"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>$(document)</code> uses jQuery to wrap the global <code>document</code> object.</p>\n\n<p><code>$(\"document\")</code> attempts to look for a <code>&lt;document&gt;</code> element, which obviously makes no sense in HTML because there's no such element, only a root <code>document</code> object represented in the markup by the <code>&lt;html&gt;</code> element. It behaves that way because by passing the jQuery function a string, you're actually giving it a <a href=\"http://api.jquery.com/category/selectors\">selector</a>.</p>\n\n<p>Re edit: as <a href=\"http://stackoverflow.com/questions/4785952/document-vs-document/4786022#4786022\">patrick dw</a> says, in the context of <code>ready()</code> there's no difference. From the <a href=\"http://api.jquery.com/ready\">documentation</a>:</p>\n\n<blockquote>\n  <p>All three of the following syntaxes\n  are equivalent:</p>\n  \n  <ul>\n  <li><code>$(document).ready(handler)</code></li>\n  <li><code>$().ready(handler)</code></li>\n  <li><code>$(handler)</code></li>\n  </ul>\n</blockquote>\n\n<p>Notice the first two are functionally equivalent; this implies whatever you pass to <code>$()</code>, as long as you call <code>ready()</code>, the ready callback is guaranteed to execute immediately after <strong>the DOM</strong> has finished loading. (I suspect the third call simply passes <code>handler</code> to <code>ready()</code> internally too.)</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p><code>document</code> is a pre-made global variable that is the representation of the current HTML document, short for <code>window.document</code>.</p>\n\n<p><code>$(\"document\")</code>, as @BoltClock pointed out, would be using that string as a selector for a <code>&lt;document&gt;</code> element.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Your first example wil search for an variable or object called document within your JS. (be carefull, it is a predefined variable)</p>\n\n<p>The second will search the page for a tag with the name \"document\".</p>\n\n<pre><code>var document = 'div#logo';\n$(document); //will search for div#logo\n$('document'); //will search for document\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><em>If</em> you're talking about calling the <code>.ready()</code> function, it (currently) makes no difference.</p>\n\n<p>In both cases the argument is ignored.</p>\n\n<p>You could do this:</p>\n\n<pre><code>$( \"cheese pizza\" ).ready(function() {});\n</code></pre>\n\n<hr>\n\n<p>To be clear, it is best to use the officially supported calls to <code>.ready()</code>, which are:</p>\n\n<pre><code>$(document).ready(function(){/*...*/});\n</code></pre>\n\n<p>and:</p>\n\n<pre><code>$(function(){/*...*/});\n</code></pre>\n\n<p>When actually selecting the <code>document</code>, you should use <code>$(document)</code>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Is there any difference between: <code>$(document)</code> and <code>$(\"document\")</code>?</p>\n\n<p>EDIT: also when into the <code>.ready()</code> e.g. <code>$(\"document\").ready()</code></p>\n",
            "last_activity_date": 1335414450,
            "question_id": 4785952,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "document"
            ],
            "title": "$(document) vs. $(&quot;document&quot;)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I haven't seen this kind of question in Stackoverflow till now.. but an interesting One to answer..</p>\n\n<p>The only way(I guess) is to check through pixel by pixel, i.e., check the <code>R, G, B, A</code> of each pixel,<br/> if those values are equal to zero then we can say that the pixel is empty..<br/>\nThis is the technique I used to write the below code snippet.. just go through it</p>\n\n<pre><code>window.onload = function() {\n  var canvas  = document.getElementById('canvas');\n  if(!canvas.getContext) return;\n  var ctx     = canvas.getContext('2d');\n  var w       = canvas.width = canvas.height = 100;\n  var drawn   = null;\n  var d       = ctx.getImageData(0, 0, w, w); //image data \n  var len     = d.data.length;\n  for(var i =0; i&lt; len; i++) {\n    if(!d.data[i]) {\n      drawn = false;\n    }else if(d.data[i]) {\n      drawn = true;\n      alert('Something drawn on Canvas');\n      break;\n    }\n  }\n  if(!drawn) {\n    alert('Nothing drawn on canvas.. AKA, Canvas is Empty');\n  }\n}\n</code></pre>\n\n<h2><a href=\"http://jsbin.com/ofoto4\">Test it Here</a></h2>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Instead of checking every single pixel, it may be much more efficient to merely record every time the canvas gets filled or stroked.</p>\n\n<p>Once a fill or stroke or has happened, then you know that something has been drawn.</p>\n\n<p>Of course 'how' is very application specific, since we don't know how your canvas is getting drawn on in the first place.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>A good way I have found is to use the <code>toDataURL()</code> function and compare it with another, blank canvas. If they are different, than the one you are comparing it to has something on it. Something like this:</p>\n\n<pre><code>canvas = document.getElementById('editor');\nctx = canvas.getContext('2d');\n\ncanvas.addEventListener('mousemove',function(e){\n    ctx.lineTo(e.pageX,e.pageY);\n    ctx.stroke();\n});\n\ndocument.getElementById('save').addEventListener('click',function(){\n    if(canvas.toDataURL() == document.getElementById('blank').toDataURL())\n        alert('It is blank');\n    else\n        alert('Save it!');\n});\n</code></pre>\n\n<p>Here is a <a href=\"http://jsfiddle.net/amaan/rX572/\">fiddle</a></p>\n\n<p>I can't take credit for this, I just stumbled upon it and it fixed my same issue. Maybe this will help somebody at some point.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>To get the pixels of the canvas you have to use the getImageData(); method -> <a href=\"http://www.w3schools.com/tags/canvas_getimagedata.asp\" rel=\"nofollow\">getImageData() reference</a></p>\n\n<p>And to check if every pixels of your imageData are at 0 or 255. </p>\n\n<p>Your ImageData will have 4 cells per pixels, r g b a and you cn access every pixels by incrementing your count by 4 and looking each 4 next numbers to hve your rgba value.</p>\n\n<p>You can also get an empty image's DataURL and compare your canvas's DataURL to it to see if it's empty ;)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I check if there is data or something drawn on a canvas?</p>\n\n<p>I have this <code>&lt;canvas id=\"my-canvas\"&gt;&lt;/canvas&gt;</code> element, and I want to check if my canvas has something drawn on it.</p>\n",
            "last_activity_date": 1418757628,
            "question_id": 4644524,
            "score": 10,
            "tags": [
                "javascript",
                "html5",
                "canvas"
            ],
            "title": "How to check if something is drawn on canvas"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Use jQuery's <a href=\"http://api.jquery.com/change/\">change</a> method for updating. Using your example:</p>\n\n<pre><code>$('#txtAmt').change(function() {\n  //get txtAmt value  \n  var txtAmtval = $('#txtAmt').val();\n  //change txtInterest% value\n  $('#txtInterest%').val(txtAmtval);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>This should work assuming <code>txtAmt</code> and <code>txtInterest%</code> are <code>id</code>s on your page:</p>\n\n<pre><code>$(function() {\n    $('#txtAmt').change(function() {\n       $('#txtInterest%').val(this.value);\n    });\n});\n</code></pre>\n\n<p>See jQuery's <a href=\"http://api.jquery.com/change/\" rel=\"nofollow\"><code>change</code></a> event handler.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>One more method for implementing this     </p>\n\n<pre><code>$(document).ready(function(){\n      $('#txtAmt').keyup(function (){\n       $('#txtInterest%').val($('#txtAmt').val())\n    });\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>How do I update the value in one text box (<code>txtInterest%</code>) based on the value entered/changed in another text box (<code>txtAmt</code>)?</p>\n",
            "last_activity_date": 1380137866,
            "question_id": 4567376,
            "score": 10,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to update the value in one text box based on the value entered in another text box?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I am not quite sure if I am answering your question correctly, but if you use the <a href=\"http://api.jquery.com/width/\" rel=\"nofollow\">width() function</a> this will give you an integer representing the rendered width in pixels.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't believe it's possible for the moment. At least not in any other browser than IE. IE implements <code>element.currentStyle</code> which represents styles at they were written in the CSS file. On the other hand, the rest of the browsers implement <code>window.getComputedStyle</code> which returns the <strong>computed values</strong> of those styles. That's what you receive there, a numeric value instead of auto.</p>\n\n<p>The only way around it would be to parse CSS declarations from <a href=\"https://developer.mozilla.org/en/DOM/document.styleSheets\"><code>document.styleSheets</code></a>.</p>\n\n<p>References:</p>\n\n<ul>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ms535231(VS.85).aspx\">http://msdn.microsoft.com/en-us/library/ms535231(VS.85).aspx</a></li>\n<li><a href=\"https://developer.mozilla.org/en/DOM:window.getComputedStyle\">https://developer.mozilla.org/en/DOM:window.getComputedStyle</a></li>\n<li><a href=\"https://developer.mozilla.org/en/CSS/computed_value\">https://developer.mozilla.org/en/CSS/computed_value</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<ol>\n<li>create function</li>\n<li>pass css element id to function</li>\n<li>write a case where statement to be performed on the width property of the element id</li>\n</ol>\n\n<p>NOTE: to use on mulitple elements would be wise to use a loop with an array of element names</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strike><code>$('#test')[0].style.width==\"auto\"</code> should work: <a href=\"http://jsfiddle.net/KxTLE/\" rel=\"nofollow\">http://jsfiddle.net/KxTLE/</a> and <a href=\"http://jsfiddle.net/KxTLE/1/\" rel=\"nofollow\">http://jsfiddle.net/KxTLE/1/</a></strike>\nTry </p>\n\n<pre><code>jQuery.fn.isAuto=function() {\nif(this[0]) {\n    var ele=$(this[0]);\n    if(this[0].style.width=='auto' || ele.outerWidth()==ele.parent().width()) {\n        return true;\n    } else {\n        return false;\n    }\n}\nreturn undefined;\n};\n</code></pre>\n\n<p>And example: <a href=\"http://jsfiddle.net/KxTLE/6/\" rel=\"nofollow\">http://jsfiddle.net/KxTLE/6/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As far as I know, there is no native jQuery function to detect auto widths or heights.  So I wrote a plugin to do it.</p>\n\n<pre><code>$.fn.isAuto = function(dimension){\n    if (dimension == 'width'){\n        var originalWidth = this.innerWidth();\n        var marginLeft = parseInt(this.css('margin-left'));\n        var testMarginWidth = marginLeft+50;\n        this.css('margin-left', testMarginWidth);\n        var newWidth = this.innerWidth();\n        this.css('margin-left', marginLeft);\n        if(newWidth&lt;originalWidth){\n            return true;    \n        }\n        else{\n            return false;\n        }\n    }\n    else if(dimension == 'height'){\n        var originalHeight = this.height();\n        this.append('&lt;div id=\"test\"&gt;&lt;/div&gt;');\n        var testHeight = originalHeight+500;\n        $('#test').css({height: testHeight});\n        var newHeight = this.height();\n        $('#test').remove();\n        if(newHeight&gt;originalHeight){\n            return true;    \n        }\n        else{\n            return false;\n        }\n    }\n};\n</code></pre>\n\n<p>Originally, I had written it to do height, so I just expanded it to include width.  You just call it like this:</p>\n\n<pre><code>$('#element').isAuto('width');\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$('#element').isAuto('height');\n</code></pre>\n\n<p>Here is a <a href=\"http://jsfiddle.net/kAnKa/34/\" rel=\"nofollow\">fiddle</a> demonstrating the plugin's functionality.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm retrieving the width of elements using jQuery and would prefer it if I could have an indication of whether there was an explicit width (and height) specified.</p>\n\n<pre><code>&lt;div id=\"test\"&gt;&lt;/div&gt;\n&lt;script type=\"text/javascript\"&gt;\n$(function() { alert($('#test').css('width')); });\n&lt;/script&gt;\n</code></pre>\n\n<p>This will alert the implicit width of the div in terms of how many pixels it takes up on the client's screen.  Is there any way that if the width is either missing or set as <code>width: auto</code> that it can be verified using jQuery?</p>\n\n<p>That is, instead of the above example returning an integer, it would return either <code>auto</code> or <code>undefined</code>.  Or, alternatively, is there an equivalent of a <code>isAuto</code> function?</p>\n",
            "last_activity_date": 1388704558,
            "question_id": 3557718,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "dom",
                "computed-style"
            ],
            "title": "Detecting width: auto in jQuery"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I think it keeps the design simple. A node <em>may</em> exist in isolation but the more interesting case is the DOM tree. With <code>removeChild</code>, the node to be removed must be a child of the node on which the method was called. </p>\n\n<p>Getting a list of all children and doing a manual comparison against each is not that expensive an operation. However, searching all descendants for a node that is to be removed is indeed expensive.</p>\n\n<p><strong>Edit</strong>: In response to your update, a browser is simply implementing the <a href=\"http://www.w3.org/TR/DOM-Level-3-Core/core.html#i-Document\">DOM spec</a>, which defines a <a href=\"http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1734834066\"><code>removeChild</code></a> method on <code>Node</code>. The spec, <em>in my opinion</em>, has to be unambiguous and free of assumptions. It is similar to <a href=\"http://en.wikipedia.org/wiki/Dependency_injection\">Dependency Injection</a> from that perspective. The DOM Core spec models a tree using building blocks such as Node, Element, etc. Adding a lone method such as <code>removeNode</code> somewhere in these building blocks means the method has implicit knowledge about its environment - that it <code>may</code> be a child of some node, and it should be removed from there if it is.</p>\n\n<p>The task of w3 is to make a very robust API which makes most things possible. They shouldn't worry about syntactic sugar as that can always be written around the native APIs if they are well written.</p>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>After answering <a href=\"http://stackoverflow.com/questions/3416664/iframe-javascript-remove-div-child-elements\">this question</a> I am left wondering why <a href=\"https://developer.mozilla.org/En/DOM/Node.removeChild\"><code>removeChild</code></a> needs a parent element. After all, we could simply do</p>\n\n<pre><code>node.parentNode.removeChild(node);\n</code></pre>\n\n<p>As the parent node should be always directly available to the Javascript/DOM engine, it is not strictly necessary to supply the parent node of the node that is to be removed.</p>\n\n<p>Of course I understand the principle that <code>removeChild</code> is a method of a DOM node, but why doesn't something like <code>document.removeNode</code> exist (that merely accepts an arbitrary node as parameter)?</p>\n\n<p><strong>EDIT:</strong> To be more clear, the question is: why does the JS engine need the parent node at all, if it already has the (unique) node that's to be removed?</p>\n",
            "last_activity_date": 1281087544,
            "question_id": 3422370,
            "score": 10,
            "tags": [
                "javascript",
                "dom",
                "removechild"
            ],
            "title": "Why does removeChild need a parent node?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>var dataArray = new Array;\nfor(var o in dataObject) {\n    dataArray.push(dataObject[o]);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Assuming your dataObject is defined the way you specified, you do this:</p>\n\n<pre><code>var dataArray = [];\nfor (var key in dataObject)\n    dataArray.push(dataObject[key]);\n</code></pre>\n\n<p>And end up having dataArray populated with inner objects.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>With jQuery, you can do it like this -</p>\n\n<pre><code>var dataArray = $.map(dataObject,function(v){\n     return v;\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/CPM4M/1/\" rel=\"nofollow\">Demo</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>var dataArray = Object.keys(dataObject).map(function(k){return dataObject[k]});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Using <a href=\"http://underscorejs.org/#values\" rel=\"nofollow\">underscore</a>:</p>\n\n<pre><code>var dataArray = _.values(dataObject);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Given a JavaScript object: </p>\n\n<pre><code>var dataObject = {\n   object1: {id: 1, name: \"Fred\"}, \n   object2: {id: 2, name: \"Wilma\"}, \n   object3: {id: 3, name: \"Pebbles\"}\n};\n</code></pre>\n\n<p><strong>How do I efficiently extract the inner objects into an array?</strong>  I do not need to maintain a handle on the <em>object[n]</em> IDs.</p>\n\n<pre><code>var dataArray = [\n    {id: 1, name: \"Fred\"}, \n    {id: 2, name: \"Wilma\"}, \n    {id: 3, name: \"Pebbles\"}]\n</code></pre>\n",
            "last_activity_date": 1405216233,
            "question_id": 1718777,
            "score": 10,
            "tags": [
                "javascript",
                "arrays",
                "json"
            ],
            "title": "How might I extract the property values of a JavaScript object into an array?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>If you put JavaScript in a js file (which I assume you did), do NOT put the script tags, put </p>\n\n<pre><code>g_BuildServer = \"/\";\n</code></pre>\n\n<p>only.</p>\n\n<p>Otherwise, to the parser, you just provided an XML document as a script.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Happened to me too, just for having an empty script tag in the page. When I removed this:</p>\n\n<pre><code>&lt;script src=\"\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>everything got back to normal..</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I got the \"XML cannot be the whole program\" error because the server was returning an xml error message in response to a request for a javascript file. My case may be unusual, but here it is:</p>\n\n<p>I had a servlet filter granting or denying access to server resources. If it grants access, you get the resource, otherwise, you get <code>&lt;filterResponse&gt;&lt;Access_Denied/&gt;&lt;/filterResponse&gt;</code>. I had failed to add the javascript file to the list of resources you don't have to be logged in to access. So, when Firefox received an XML error message as the body of a javascript program, its complaint makes perfect sense.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I got this error when using jquery $get with no data type attribute when it was retrieving html.  I added the dataType parameter as \"html\" and it fixed the issue.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I experienced this error when I had a comment in my javascript but it didn't start with a /*\nit just had a few *'s hence creating a syntax error</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Also you can get this error while you use jQuery.\nIn that case replace \"$\" with \"jQuery\"</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It also happens, when you use jQuery's template plugin, and you place the markup in a script tag, but you forget to change the script tag's type attribute to 'text/x-jquery-tmpl'</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I just got this error message in Firebug. A google search reveals nothing but other mystified people! Does anyone have any idea what it means?</p>\n\n<p>It's being indicated on the last line of this 3-line script:</p>\n\n<pre><code>&lt;script&gt;\n    g_BuildServer = \"/\";\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1335789883,
            "question_id": 1371189,
            "score": 10,
            "tags": [
                "javascript",
                "firebug",
                "firefox3.5"
            ],
            "title": "What does Firebug &quot;XML cannot be the whole program&quot; error message mean?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The options added to a dropdown list using JavaScript WILL NEVER reach the server side let alone be preserved during postback. The options are stored in the ViewState. You are modifying the dropdown list using DOM on the client side, but what about ViewState? You are not modifying it, so ASP.NET won't know that any change has been done to the dropdown list, when it reloads the state of the dropdown list from the ViewState.</p>\n\n<h2>Possible Workaround</h2>\n\n<p>One way is to use hidden variables to store the values that you added to the dropdown list. When the control goes to the server side, you can check the value of this hidden field and add the items to the dropdown list, if necessary.</p>\n\n<p>You can store the items in JSON-formatted-string, and parse this string using .NET Framework's <a href=\"http://msdn.microsoft.com/en-us/library/system.runtime.serialization.json.datacontractjsonserializer.aspx\">DataContractJsonSerializer Class</a> (if you are using .NET Framework >= 3.5) on the server side. If you are not using .NET Framework 3.5, then you can use seperators like - <code>text1,text2|value1,value2</code></p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>The only data that is sent back to the server from the <code>select</code> tag is the value of the selected item. The options that you add are not sent back to the server.</p>\n\n<p>The server controls in ASP.NET uses viewstate to keep the <code>ListItem</code> objects that form the <code>option</code> tags in the rendered <code>select</code> tag. The viewstate is usually send in a separate hidden field so that it's returned to the server when the form is posted.</p>\n\n<p>You could use a similar technique for the options that you add, putting them also in a hidden field, which you then can process in the server code to create <code>ListItem</code> objects for the items to put in the <code>DropDown</code> control.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I added some options to the select element by javascript in client side and cannot get it in postback.</p>\n\n<p>What should I do?</p>\n\n<p>Code used to add options:</p>\n\n<pre><code>&lt;asp:DropDownList ID=\"ddlProduct\" runat=\"server\"&gt;&lt;/asp:DropDownList&gt;\n\nvar ddlProduct = \"#\"+\"&lt;%= ddlProduct.ClientID %&gt;\";\n\n$(ddlProduct).append($(\"&lt;option&gt;&lt;/option&gt;\").html(product_name)\n</code></pre>\n",
            "last_activity_date": 1250161495,
            "question_id": 1271172,
            "score": 10,
            "tags": [
                "asp.net",
                "javascript"
            ],
            "title": "Options added to &lt;select&gt; by javascript lost in postback"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Great question. I don't know of any way besides iterating in a for-in loop. You only need to iterate once though. For safety, ensure it's a known property [<a href=\"http://javascript.crockford.com/code.html\" rel=\"nofollow\">more info</a>].</p>\n\n<pre><code>for (var propName in jsonObj) {\n    if (jsonObj.hasOwnProperty(propName)) {\n        return propName;    // or do something with it and break\n    }\n}\n</code></pre>\n\n<p><strong>Edited</strong> to be extra clear that you're iterating over the property names, not their values.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There isn't a \"first\" property. The properties of an object are unordered.</p>\n\n<p>You can get whatever one the JS engine decides to provide first with a loop.</p>\n\n<pre><code>function maybe_first_in_object(ob) {\n    for (var props in ob) {\n        return prop;\n    }\n}\n</code></pre>\n\n<p>&hellip; but if the order matters, use an array not an object.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>The order of the properties of an object are not <em>guaranteed</em> to be the same as the way you put them in. In practice, however, all major browsers do return them in order. So if you're okay with relying on this...</p>\n\n<pre><code>var firstProp;\nfor(var key in jsonObj) {\n    if(jsonObj.hasOwnProperty(key)) {\n        firstProp = jsonObj[key];\n        break;\n    }\n}\n</code></pre>\n\n<p>Also note that there's a <a href=\"http://ejohn.org/blog/javascript-in-chrome/\">bug in Chrome</a> regarding the ordering, in some edge cases it doesn't order it in the way they were provided. As far as it changing in the future, the chances are actually pretty small as I believe this is becoming part of the standard so if anything support for this will only become official.</p>\n\n<p>All things considered, though, if you really, really, absolutely, positively, want to be sure it's going to be in the right order you need to use an array. Otherwise, the above is fine.</p>\n\n<p>Related question: <a href=\"http://stackoverflow.com/questions/280713/elements-order-for-in-loop-in-javascript\">Elements order - for (\u2026 in \u2026) loop in javascript</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>When using jQuery, you can also use <code>$.each</code> to iterate over a JSON object. Looks cleaner IMO than using a <code>for</code>-loop</p>\n\n<pre><code>var items = {\n    'item1': 'content',\n    'item2': 'content',\n    'item3': 'content'\n}\n\n$.each(items, function() { \n    console.log($(this)[0])\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to get the name of the first property of a JSON object?</p>\n\n<p>I'd like to do something like this:</p>\n\n<pre><code>var firstProp = jsonObj[0];\n</code></pre>\n\n<p><strong>edit:</strong> I'm getting a JSON object wich hold categories of arrays with image urls.</p>\n\n<p>like so:</p>\n\n<pre><code>{\n  \"category1\":[\"image/url/1.jpg\",\"image/url/2.jpg\"],\n  \"category2\":[\"image/url/3.jpg\",\"image/url/4.jpg\"]\n}\n</code></pre>\n\n<p>I am then iterating through the object to insert the images, and all I really wanted was an elegant way to see which category was inserted first. At first I just did </p>\n\n<pre><code>for (var cat in images) {\n    if (i==0) firstCat = cat;\n    ...\n}\n</code></pre>\n\n<p>But that some how \"felt\" ugly...So it was basically just a question of elegance :p</p>\n",
            "last_activity_date": 1415291102,
            "question_id": 1116708,
            "score": 10,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "Getting first JSON property"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The only way to set the maximum length for web methods that are called from client script is through the web.config file (below).\nWhat is your issue with setting this?\nI would do this every time over multiple xhr calls to stream parts of the data.</p>\n\n<pre><code>&lt;system.web.extensions&gt;\n  &lt;scripting&gt;\n      &lt;webServices&gt;\n        &lt;jsonSerialization maxJsonLength=\"500000\"&gt;\n        &lt;/jsonSerialization&gt;\n      &lt;/webServices&gt;\n  &lt;/scripting&gt;\n&lt;/system.web.extensions&gt;\n</code></pre>\n\n<p>UPDATE: The default size is 2097152 which is equivalent to 4 MB of Unicode string data. Are you really going to send that much data back to the client? If so ouch and you prob need to look at the app design as the user experience will be slow and cumbersome.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>The maximum value for this property is 2147483647 according to <a href=\"http://forums.asp.net/t/1343461.aspx\" rel=\"nofollow\">this forum post</a>.</p>\n\n<p>I've not spent any time optimizing the data I return, yet (I'll do that before anyone sees it) - but with this value set, IE has started giving me the 'a script on the page is taking too long do you want to kill it' message.</p>\n\n<p>A solution would be to chunk the data - does anyone know of a nice way to do this (in jQuery ideally)? I could just do another ajax call in the success handler, of course.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><code>2147483647</code>  is the correct value to use. Just to avoid confusion in the code you can use something like</p>\n\n<pre><code>var JsonSerializer = new JavaScriptSerializer();\nJsonSerializer.MaxJsonLength = Int32.MaxValue;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>The maximum allowed length is the maximum value an Integer can hold which happens to be - 2147483647</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I've got a large amound of data I'm sending down to the client using jQuery's $.ajax() function. I'm calling a method in a ASP.NET web service that returns the JSON data. Everything is great for most searches, but when I've got a large data set to return I run into a issue with the JavaScriptSerializer MaxJsonLength property. What's the best practice for handling this? I don't want to just arbitrarily set a max length. Can I set the MaxJsonLength in the web service if the data being returned is larger than the current max or should I re-write and send down chucks of data to the client?</p>\n\n<p>Here's the relevant snippet from the web service:</p>\n\n<pre><code>Dictionary&lt;string, object&gt; jsonValuePairs = new Dictionary&lt;string, object&gt;();\n//add some data to the dictionary...\nreturn System.Web.Script.Serialization.JavaScriptSerializer.Serialize(jsonValuePairs);\n</code></pre>\n",
            "last_activity_date": 1378283997,
            "question_id": 1045984,
            "score": 10,
            "tags": [
                "asp.net",
                "javascript",
                "jquery",
                "web-services",
                "json"
            ],
            "title": "JavaScriptSerializer.MaxJsonLength exceeded. What&#39;s the best practice for handling this?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You're appending an element which already has content?  Or you're adding the content after you append?  Either way, you still need to do .text(...) on that element.  </p>\n\n<p>If you're using append and passing HTML as the argument, then try creating the element first, and passing it to append.</p>\n\n<p>Ex:</p>\n\n<pre><code>$('&lt;div&gt;&lt;/div&gt;').text('your content here').appendTo('div#someid')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Check out how jQuery does it:</p>\n\n<pre><code>text: function( text ) {\n\tif ( typeof text !== \"object\" &amp;&amp; text != null )\n\t\treturn this.empty().append( (this[0] &amp;&amp; this[0].ownerDocument || document).createTextNode( text ) );\n\n\tvar ret = \"\";\n\n\tjQuery.each( text || this, function(){\n\t\tjQuery.each( this.childNodes, function(){\n\t\t\tif ( this.nodeType != 8 )\n\t\t\t\tret += this.nodeType != 1 ?\n\t\t\t\t\tthis.nodeValue :\n\t\t\t\t\tjQuery.fn.text( [ this ] );\n\t\t});\n\t});\n\n\treturn ret;\n},\n</code></pre>\n\n<p>So something like this should do it:</p>\n\n<pre><code>$('#mydiv').append(\n    document.createTextNode('&lt;b&gt;Hey There!&lt;/b&gt;')\n);\n</code></pre>\n\n<p><strong>EDIT</strong>: Regarding your example, it's as simple as:</p>\n\n<pre><code>$('#messages').append(document.createTextNode(item));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>If you really want to get jQuery to escape some text to an HTML fragment and don\u2019t want to touch <code>document</code> directly yourself, the following pure jQuery can escape text to HTML for you (but only in an HTML context):</p>\n\n<pre><code>jQuery('&lt;p/&gt;').text('v &amp; M_FLAG == M_FLAG').html()\n</code></pre>\n\n<p>This can be used to append text quite inefficiently:</p>\n\n<pre><code>jQuery('#message').append(jQuery('&lt;p/&gt;').text(item).html());\n</code></pre>\n\n<p>There will be no extra <code>&lt;p/&gt;</code> element inserted because <a href=\"http://api.jquery.com/html\" rel=\"nofollow\"><code>.html()</code></a> returns the HTML-formatted contents of an element, excluding the element itself.</p>\n\n<p>Based on jQuery\u2019s lack of a built-in way to instantiate text nodes, I think jQuery\u2019s authors expect users to directly use <code>document.createTextNode()</code> as shown in an <a href=\"http://stackoverflow.com/a/944456/429091\">earlier answer</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I know that I can use <code>$.html</code> to set the HTML content of something, and <code>$.text</code> to set the content (and that this escapes the HTML).</p>\n\n<p>Unfortunately, I'm using <code>$.append</code>, which doesn't escape the HTML.</p>\n\n<p>I've got something like this:</p>\n\n<pre><code>function onTimer() {\n    $.getJSON(url, function(data) {\n        $.each(data, function(i, item) {\n           $('#messages').append(item);\n        }\n    }\n}\n</code></pre>\n\n<p>...where the url returns an array of strings. Unfortunately, if one of those strings is (e.g.) <code>&lt;script&gt;alert('Hello')&lt;/script&gt;</code>, this gets executed.</p>\n\n<p>How do I get it to escape HTML?</p>\n",
            "last_activity_date": 1386193479,
            "question_id": 944436,
            "score": 10,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Escaping text with jQuery append?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can fix it like this:</p>\n\n<pre><code>$scope.hoverIn = function(){\n    this.hoverEdit = true;\n};\n\n$scope.hoverOut = function(){\n    this.hoverEdit = false;\n};\n</code></pre>\n\n<p>Inside of ngMouseover (and similar) functions context is a current item scope, so this refers to the current child scope.</p>\n\n<p>Also you need to put <code>ngRepeat</code> on <code>li</code>:</p>\n\n<pre><code>&lt;ul&gt;\n    &lt;li ng-repeat=\"task in tasks\" ng-mouseover=\"hoverIn()\" ng-mouseleave=\"hoverOut()\"&gt;\n        {{task.name}}\n        &lt;span ng-show=\"hoverEdit\"&gt;\n            &lt;a&gt;Edit&lt;/a&gt;\n        &lt;/span&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<h3>Demo: <a href=\"http://plnkr.co/edit/eGohFqiGKmkonmLwT3g1?p=preview\">http://plnkr.co/edit/eGohFqiGKmkonmLwT3g1?p=preview</a></h3>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>I'd probably change your example to look like this:</p>\n\n<pre><code>&lt;ul ng-repeat=\"task in tasks\"&gt;\n  &lt;li ng-mouseover=\"enableEdit(task)\" ng-mouseleave=\"disableEdit(task)\"&gt;{{task.name}}&lt;/li&gt;\n  &lt;span ng-show=\"task.editable\"&gt;&lt;a&gt;Edit&lt;/a&gt;&lt;/span&gt;\n&lt;/ul&gt;\n\n//js\n$scope.enableEdit = function(item){\n  item.editable = true;\n};\n\n$scope.disableEdit = function(item){\n  item.editable = false;\n};\n</code></pre>\n\n<p><strong>I know it's a subtle difference</strong>, but makes the domain a little less bound to UI actions. Mentally it makes it easier to think about an item being editable rather than having been moused over.</p>\n\n<p>Example jsFiddle: <a href=\"http://jsfiddle.net/jwcarroll/u8fHc/\" rel=\"nofollow\">http://jsfiddle.net/jwcarroll/u8fHc/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I would simply make the assignment happen in the ng-mouseover and ng-mouseleave; no need to bother js file :)</p>\n\n<pre><code>&lt;ul ng-repeat=\"task in tasks\"&gt;\n    &lt;li ng-mouseover=\"hoverEdit = true\" ng-mouseleave=\"hoverEdit = false\"&gt;{{task.name}}&lt;/li&gt;\n    &lt;span ng-show=\"hoverEdit\"&gt;&lt;a&gt;Edit&lt;/a&gt;&lt;/span&gt;\n&lt;/ul&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<pre><code>          &lt;ul ng-repeat=\"task in tasks\"&gt;\n          &lt;li ng-mouseover=\"hoverIn()\" ng-mouseleave=\"hoverOut()\"&gt;{{task.name}}&lt;/li&gt;\n          &lt;span ng-show=\"hoverEdit\"&gt;&lt;a&gt;Edit&lt;/a&gt;&lt;/span&gt;\n          &lt;/ul&gt;\n\n//js\n    $scope.hoverIn = function(){\n        $scope.hoverEdit = true;\n    };\n\n    $scope.hoverOut = function(){\n        $scope.hoverEdit = false;\n    };\n</code></pre>\n\n<p>the code is ridiculous because I think it's too much. I think it can be simplified. Anyway the result toggle all the item once it's hovered. I've jquery background, so I have no idea how to make single item work in ng-repeat.</p>\n",
            "last_activity_date": 1416271482,
            "question_id": 22532656,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "angularjs"
            ],
            "title": "ng-mouseover and leave to toggle item using mouse in angularjs"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The event triggered when <code>ng-include</code> adds content is <code>$includeContentLoaded</code>. Your scripts should be included in this event:</p>\n\n<p>For example (<a href=\"http://plnkr.co/edit/3SSczrhpZwM318V4aLsD?p=preview\" rel=\"nofollow\">Plucker Demo</a>):</p>\n\n<pre><code>function SettingsController($scope, $window) {\n  $scope.template={};\n  $scope.template.url = \"demo.html\";\n\n  $scope.$on('$includeContentLoaded', function(event){\n    $window.alert('content load');\n  });\n\n}\n</code></pre>\n\n<p>Additionally you can set an init function using the <code>onload</code> attribute:</p>\n\n<p><strong>html</strong></p>\n\n<p>&lt;div ng-include=\"template.url\" onload=\"alertMe()\"  &gt; &lt;/div&gt;\n &lt;/div&gt;</p>\n\n<p><strong>Controller</strong></p>\n\n<pre><code>$scope.alertMe=function(){\n    $window.alert('sending alert on load');\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Angular uses the $sanitize on <code>ng-include</code> directives which strips out scripts.  A better approach for templates is to create a controller for that template.</p>\n\n<p>It is better to use an individual controller for templates.  </p>\n\n<p>In template.html</p>\n\n<pre><code>&lt;form role=\"form\" ng-controller=\"LoginController\"&gt;\n   &lt;input type=\"text\" placeholder=\"Email\" ng-model=\"email\"&gt;\n   &lt;input type=\"password\" placeholder=\"Password\" ng-model=\"password\"&gt;\n    &lt;button class=\"btn btn-success\" ng-click=\"login()\"&gt;Sign in&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>In the <code>LoginController</code> you can use whatever code you want</p>\n\n<pre><code>angular.module('myApp.controllers', []).\n  controller('LoginController', [function() {\n      alert('controller initialized');\n  }])\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>jQlite does not support script tags.  jQuery does, so the recommendation is to include jQuery if you need this functionality.</p>\n\n<p>From Angular's Igor Minar in <a href=\"https://groups.google.com/forum/#!topic/angular/H4haaMePJU0/discussion\">this discussion</a>:</p>\n\n<blockquote>\n  <p>we looked into supporting script tags in jqlite, but what needs to be\n  done to get a cross-browser support involves a lot of black magic. For\n  this reason we decided that for now we are just going to recommend\n  that users use jquery along with angular in this particular case. It\n  doesn't make sense for us to rewrite one third of jquery to get this\n  working in jqlite.</p>\n</blockquote>\n\n<p>Here's the related github issue <a href=\"https://github.com/angular/angular.js/issues/369\">jqLite should create elements in same way as jQuery</a> where Igor sums up, before closing the issue, with this:</p>\n\n<blockquote>\n  <p>This is too much craziness for jqlite, so we are not going to do it.\n  Instead we are going to document that if you want have script elements\n  in ng:include or ng:view templates, you should use jquery.</p>\n</blockquote>\n\n<p><a href=\"http://plnkr.co/edit/asl07QNUU4MUClUZnOJm?p=preview\">demo plunker with jquery</a></p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>In AngularJS, any inline javascript code that included in HTML templates doesn't work.</p>\n\n<p>For Example:</p>\n\n<p>main.html file:</p>\n\n<pre><code>&lt;div ng-include=\"'/templates/script.html'\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>And script.html file:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    alert('yes');\n&lt;/script&gt;\n</code></pre>\n\n<p>When I open main page, I expect an alert message that say 'yes' but nothing happens. I think some security restrictions in the AngularJS is preventing inline scripts, but I couldn't find any workaround about that.</p>\n\n<p>Note: I don't use jQuery or any other framework, only AngularJS 1.2.7.</p>\n",
            "last_activity_date": 1390591682,
            "question_id": 21336350,
            "score": 9,
            "tags": [
                "javascript",
                "html",
                "angularjs"
            ],
            "title": "AngularJS inline script in the included HTML template"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>do you mean something like this:</p>\n\n<pre><code>$('.activeElement').val('Some text');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>First understand where to use what.</p>\n\n<pre><code>&lt;input type=\"text\" value=\"23\" id=\"age\"&gt;\n</code></pre>\n\n<p>Here now </p>\n\n<pre><code>var ageElem=document.getElementById('age');\n</code></pre>\n\n<p>So on this <code>ageElem</code> you can have that many things what that element contains.So you can use its <code>value</code>,<code>type</code> etc attributes. But cannot use innerHTML  because we don't write anything between input tag</p>\n\n<pre><code>  &lt;button id='ageButton'&gt;Display Age&lt;/button&gt;\n</code></pre>\n\n<p>So here <code>Display Age</code> is the innerHTML content as it is written inside HTML tag button.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Using innerHTML on an input tag would just result in: </p>\n\n<pre><code>&lt;input name=\"button\" value=\"Click\" ... &gt; InnerHTML Goes Here &lt;/input&gt;\n</code></pre>\n\n<p>But because an input tag doesn't need a closing tag it'll get reset to:</p>\n\n<p><code>&lt;input name=\"button\" value=\"Click\" ... /&gt;</code></p>\n\n<p>So it's likely your browsers is applying the changes and immediatly resetting it. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Setting the <code>value</code> is normally used for input/form elements. <code>innerHTML</code> is normally used for div, span, td and similar elements.</p>\n\n<p><code>value</code> applies only to objects that have the value attribute (normally, form controls).</p>\n\n<p><code>innerHtml</code> applies to every object that can contain <code>HTML</code> (divs, spans, but many other and also form controls).</p>\n\n<p>They are not equivalent or replaceable. Depends on what you are trying to achieve</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<blockquote>\n  <p>Each HTML element has an innerHTML property that defines both the HTML\n  code and the text that occurs between that element's opening and\n  closing tag. By changing an element's innerHTML after some user\n  interaction, you can make much more interactive pages.</p>\n</blockquote>\n\n<p><strong>JScript</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction changeText(){\n    document.getElementById('boldStuff').innerHTML = 'Fred Flinstone';\n}\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;p&gt;Welcome to Stack OverFlow &lt;b id='boldStuff'&gt;dude&lt;/b&gt; &lt;/p&gt; \n&lt;input type='button' onclick='changeText()' value='Change Text'/&gt;\n</code></pre>\n\n<p>In the above example b tag is the innerhtml and dude is its value so to change those values we have written a function in JScript</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm just trying to do this from the chrome console on Wikipedia. I'm placing my cursor in the search bar and then trying to do <code>document.activeElement.innerHTML += \"some text\"</code> but it doesn't work. I googled around and looked at the other properties and attributes and couldn't figure out what I was doing wrong.</p>\n\n<p>The <code>activeElement</code> selector works fine, it is selecting the correct element.</p>\n\n<p><strong>Edit</strong>: I just found that it's the <code>value</code> property. So I'd like to change what I'm asking. Why <em>doesn't</em> changing <code>innerHTML</code> work on input elements? Why do they have that property if I can't do anything with it?</p>\n",
            "last_activity_date": 1387176136,
            "question_id": 20604299,
            "score": 9,
            "tags": [
                "javascript",
                "html",
                "dom",
                "dom-manipulation"
            ],
            "title": "What is innerHTML on input elements?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Q promises can be <code>resolve</code>d with only one argument - a promise stands for one single value, not for a collection of them. Put them in an array explicitly if you need multiple values. For the multiple-parameter-callbacks, you can use <a href=\"https://github.com/kriskowal/q/wiki/API-Reference#promisespreadonfulfilled-onrejected\"><code>.spread()</code></a>.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Synchronous functions return only one value, same way asynchronous should resolve with one.</p>\n\n<p>It's a bad practice to create async functions that resolve with many values. If you want to pass many values, return them in array or dict object, same as you would do if given function would be synchronous.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want to pass along multiple values, you must wrap them in another single value that you pass, such as an array or an object.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am having trouble passing all arguments. My promise callback only receives one instead of three:</p>\n\n<pre><code>var asyncFunction= function(resolve) {\n    setTimeout(function() {\n        resolve(\"Some string that is passed\", \"and another\", \"third\");\n    }, 1000);\n};\n\nvar promiseFunction = function () {\n    var deferred = Q.defer();\n\n    asyncFunction(deferred.resolve);\n\n    return deferred.promise;\n};\n\npromiseFunction().then(function() {\n    // Only one argument is passed here instead of 3\n    // { '0': 'Some string that is passed' }\n    console.log(arguments); \n});\n</code></pre>\n\n<p>Any idea what I am doing wrong?</p>\n",
            "last_activity_date": 1423235012,
            "question_id": 17970420,
            "score": 9,
            "tags": [
                "javascript",
                "node.js",
                "promise",
                "deferred",
                "q"
            ],
            "title": "javascript promise not passing all arguments (using Q)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If you have two frames on the same domain (and also same protocol and port too), then one frame can redirect the other to wherever you want, and also access javascript properties, execute function from the other frame, etc.</p>\n\n<p>Should you redirect one frame from the other to another domain (or protocol, or port), then you would lose the ability to do all that I previously stated due to the <strong>Same Origin Policy</strong>, but the redirect itself is allowed because, before the redirect, the two frames satisfied said policy.</p>\n\n<p>Here is some useful information: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Same_origin_policy_for_JavaScript\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Same_origin_policy_for_JavaScript</a></p>\n\n<p>Quoting from that page:</p>\n\n<blockquote>\n  <p>Two pages have the same origin if the protocol, port (if one is\n  specified), and host are the same for both pages.</p>\n</blockquote>\n\n<p>Obviously, <code>frames</code> is the same as <code>pages</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My guess is that it is the same reason you can do the following:</p>\n\n<pre><code>&lt;a href=\"http://google.com\" target=\"_top\"&gt;Redirect top to Google&lt;/a&gt;\n</code></pre>\n\n<p>I found the rules for this behavior here: <a href=\"http://www.w3.org/TR/html5/browsers.html#valid-browsing-context-name-or-keyword\" rel=\"nofollow\">http://www.w3.org/TR/html5/browsers.html#valid-browsing-context-name-or-keyword</a></p>\n\n<p>I couldn't find a \"why\", but personally I have found it useful to redirect the parent after someone has clicked on something within an iframe. You may want to first perform an async operation and validate something before redirecting the entire page. Since this is already possible using the <code>&lt;a&gt;</code> tag perhaps it was found appropriate in JS as well. Not sure why the <code>&lt;a&gt;</code> tag allows the functionality though.</p>\n\n<p>That being said you can always prevent this behavior by adding <code>sandbox=\"\"</code> attribute, example: <a href=\"http://jsfiddle.net/ppkzS/1/\" rel=\"nofollow\">http://jsfiddle.net/ppkzS/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Whenever you use <code>iframes</code>, <code>frames</code>, or <code>objects</code>, you set up a hierarchy of windows, with these items acting as \"window\"s in this hierarchy.</p>\n\n<p>You can traverse this hierarchy with properties such as <code>.parent</code>, <code>.frameElement</code> and the like. The property <code>.top</code> is the window at the highest point in the hierarchy and usually corresponds to the outermost frame.</p>\n\n<p><em>Some</em> actions are prohibited between windows in the hierarchy, others are not. Changing the <code>location</code> of a window is <em>not</em> prohibited.</p>\n\n<p>Ultimately, people who say you cannot do this are incorrect. What you <em>can't</em> do is access the contents of one window from a different window if their domains differ. However, you <em>can</em> modify their location properties.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The <strong><em>same domain policy</em></strong> will prevent the iframe content from another domain to redirect parent window, otherwise there would be no problem to do so if both content are on the same domain.\nIf you still need in an iframe content from a diffrenet domain to redirect the parent window then you'll need to apply <a href=\"http://stackoverflow.com/questions/580669/redirect-parent-window-from-an-iframe-action-using-javascript#answer-3193193\">@MIP solution</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The answer to <em>Why</em> it is possible is perfectly simple. <code>window.location</code> is part of the <em>Web API</em>, which is not exactly the same as the JavaScript core. It's part of the <a href=\"https://developer.mozilla.org/en-US/docs/DOM/DOM_Reference\" rel=\"nofollow\">DOM interface</a>, hence it's gouverned by W3C, not ECMA. That's why it allows you to manipulate the top-window's properties.</p>\n\n<p>Strictly speaking, JS isn't capable of doing this, because it lacks IO capabilities, which makes the language extremely portable. That's why browser implementations require the DOM API, to query the DOM, and request repaints or interact with the client. The DOM, though, <em>does</em> need IO, because it renders, and reads from the actual UI. Some people in the ECMAScript committee would rather have seen the access to the <code>window.top</code> heavily restricted, if not removed all together, for XSS vulnerability reasons. Sadly W3C agreed to disagree, and implemented the <code>window.top</code> reference anyway.<Br/>\nWho's right or wrong in this case? I don't know, it's easy to redirect a client to a malicious site from within an iFrame, which is unsafe. But it would be frustrating to have an iFrame, and then not having access to the top window, which would mean not being able to interact with the client as easily. But that's not the point here. Bottom line is, you can change some top window properties, and it <em>can</em> be useful. Just think about <strong>mashups</strong>. They pose a lot of challenges in terms of XSS safety, but open up a lot of new and exciting possibilities for webaps. To plug some of the most dangerous XSS vulnerabilities, <a href=\"http://adsafe.org/\" rel=\"nofollow\">take a look at ADSafe</a>, which was created by Douglas Crockford. Google has a similar lib, but I forgot its name ATM...</p>\n\n<p>the Same origin policy doesn't apply here, either. By changing the url in the address bar in your browser window, you're changing the <code>window.top.location.href</code> property, too. If there were same-origin restrictions there, the internet would be dead. You're not sending a request to another location, you're not getting data from a third-party resource and loading it in your page, you're redirecting the browser to another location, which closes and clears the DOM.</p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I have a look at these two questions and i don't understand.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/580669/redirect-parent-window-from-an-iframe-action-using-javascript\">Redirect parent window from an iframe action using JavaScript</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/369498/how-to-prevent-iframe-from-redirecting-top-level-window\">How to prevent IFRAME from redirecting top-level window</a></p>\n\n<p>On one hand it appears that you can redirect the parent iframe and on the other you cannot?\nWhen i try it, I have no problem redirecting the parent frame so i'm curious as in why everyone say you cannot redirect parent frame unless you are on the same domain. But I can redirect without having the frame on the same domain.</p>\n\n<blockquote>\n  <p>As stated previously, will redirect the parent iframe. One thing to bear in mind is that both the website, and the site contained in the iframe need to be on the same domain for this to work, or you'll get an access denied exception.</p>\n</blockquote>\n\n<p>Is it browser related?</p>\n\n<p>Edit</p>\n\n<p>I have two pages and this works but shouldn't :</p>\n\n<p>On domain 1</p>\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;iframe src=\"http://domain2.fr\"&gt;&lt;/iframe&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>On domain 2</p>\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      window.top.location.href = \"http://google.fr\";\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1376049166,
            "question_id": 17967423,
            "score": 9,
            "tags": [
                "javascript",
                "iframe"
            ],
            "title": "Why can a child redirect a parent frame?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The D3 <a href=\"https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line\" rel=\"nofollow\">line</a> generator has a built in function to do just this, <a href=\"https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line_defined\" rel=\"nofollow\">line.defined</a>.  You can use this function to control where your line is defined and where it is not (like where you have missing data.)  If you wanted to make your line undefined whenever the second value in the point array is well defined, you could say:</p>\n\n<pre><code>line.defined(function(d) { return !isNaN(d[1]); });\n</code></pre>\n\n<p><a href=\"http://bl.ocks.org/mbostock/3035090\" rel=\"nofollow\">Here</a> is a good example of this in action.</p>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>I'm using d3.js to make a simple line graph. I want to know if there's a way to create \"holes\" in the graph, that is, if the line can be interrupted or cut when there is no data available. </p>\n\n<p>I'm looking into either delete the places I don't need from the domain, or setting the line weight to 0 in specific segments, but I can't find a way to do either of these.</p>\n\n<p>Thanks for your help!</p>\n",
            "last_activity_date": 1425940620,
            "question_id": 15259444,
            "score": 9,
            "tags": [
                "javascript",
                "d3.js"
            ],
            "title": "Drawing non-continuous lines with d3"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>That's TCP. It is helping you by economizing on IP packets. Part of it is due to the Nagle algorithm but part of it may also be caused by the intermediate network.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>In the end, the client not recognizing the Nagle's algorithm being disabled, along with it's acknowledge frequency still being set at around 200ms, was causing the intermediate network to hold the following packets in a buffer. Manually sending out an acknowledgement message to the server, every single time the client receives a message, will cause the network to immediately \"wake-up\" and continue to process the next packets, as opposed to holding them in a buffer.</p>\n\n<p>For Example:<br></p>\n\n<pre><code>conn = new WebSocket(url);\nconn.onmessage = function(evt){\n    Server.send('ACKNOWLEDGE BYTES'); // Send ACK to server immediately\n    dispatch('message', evt.data); //Do regular event procedures\n};\n</code></pre>\n\n<p>This temporary solution works, however <strong>this will nearly double bandwidth usage</strong>, among other network problems. Until I can get the WebSocket on the clients end to correctly not 'standby' for server ack, and the network to push through messages immediately, this gets the packets through quicker without the buffer corking problem.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Concerning JavaScript &amp; PHP WebSocket TCP packet clumping, with example below.</p>\n\n<p>For some reason, when sending packets quickly on my VPS, or accessing my localhost through a domain pointing at my IP address, multiple packets will clump together. I am trying to  stream, for this example, 20 (@100byte) packets per second. On the servers end, they ARE indeed being sent out at a steady rate, exactly every 50ms, making 20 per second.\nHowever, when they get to the client, the client only processes new messages about every 1/4th of a second. Causing new packets only to be received at a rate of 4 per second or so...</p>\n\n<p>What is causing this clumping of packets together? This problem does not occur when everything through localhost. What's weirder is that it streams smoothly on iPhone's iOS Mobile Safari, with no problem at all. BUT, it doesn't work at all on PC Safari, (because I haven't set this up to work correctly with the old Hixie-76 WebSocket format, I'm assuming Mobile Safari is already using the newer RFC 6455 or newer JavaScript compiler) I have tried multiple hosting companies, with the exact same results each time.</p>\n\n<p><em>See the example below, hosted on InMotion's VPS:</em>\n<a href=\"http://www.hovel.me/script/serverControl.php\" rel=\"nofollow\">http://www.hovel.me/script/serverControl.php</a></p>\n\n<p><strong>(Click [Connect] on the left, then [View Game] on the right).</strong></p>\n\n<p>The current packet received will jump about 5 every time, as each 5 packets are received at once, every 1/4th of a second. However, I've seen examples that can send a constant, quick stream of packets.\nWhat causes this clumping together / packets to wait for each other?</p>\n\n<p><strong>EDIT</strong>: This HAS to be something to do with <a href=\"http://en.wikipedia.org/wiki/Nagle%27s_algorithm\" rel=\"nofollow\">Nagle's algorithm</a>, which collects &amp; sends small packets together? I'll work towards trying to bypass this in PHP.\nEven with this TCP_NODELAY set in PHP, the problem still stands. Why it works on an iPhone but not a PC is still throwing me off...\n<br><strong>EDIT</strong>: Setting TCPNoDelay and TcpAckFrequency to 1 in the registry fixes this, but I can't expect every user to do that. There must be a client-side, bread &amp; butter JavaScript way.</p>\n\n<p>How can I have functionality replicating node.js' \"<a href=\"http://nodejs.org/api/net.html#net_socket_setnodelay_nodelay\" rel=\"nofollow\">socket.setNoDelay(true)</a>\", without using node.js?</p>\n",
            "last_activity_date": 1353016314,
            "question_id": 13373519,
            "score": 9,
            "tags": [
                "javascript",
                "html5",
                "networking",
                "tcp",
                "websocket"
            ],
            "title": "WebSocket TCP packets clumping together?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>In BASH:</p>\n\n<pre><code>wc -l file.js\n</code></pre>\n\n<p>In PHP:</p>\n\n<pre><code>&lt;?php\n$c=0;\n$file_handle = fopen(\"file.js\", \"r\");\nwhile (!feof($file_handle)) {\n    $line = fgets($file_handle);\n    $c++;\n}\nfclose($file_handle);\nprint \"$c lines.\\n\";\n?&gt;\n</code></pre>\n\n<p>In Node.js:</p>\n\n<pre><code>var i, count = 0, js=require('fs').createReadStream('file.js');\n\njs.on('data', function(chunk) {\n    for (i=0; i &lt; chunk.length; ++i)\n        if (chunk[i] == 10) count++;\n});\n\njs.on('end', function() {\n    console.log(count);\n});\n</code></pre>\n\n<p>Try <a href=\"https://github.com/mishoo/UglifyJS\" rel=\"nofollow\">minification</a> to get your line-numbers down.</p>\n\n<p>This seems like a terrible-lot of code, though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This may help:</p>\n\n<p><a href=\"http://www-archive.mozilla.org/performance/jsprofiler.html\" rel=\"nofollow\">http://www-archive.mozilla.org/performance/jsprofiler.html</a></p>\n\n<blockquote>\n  <p>The first line specifies the js file from which times were gathered.\n  Each line below that is of the format:   [A, B] C {D-E} F {G, H, I}</p>\n</blockquote>\n\n<p>D -> Base line number of the function in the JS file <br />\nE -> Extent (last) line number of the function in the JS file</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>First of all, you should really redesign your code; 5 million statements without handing control back to the browser is by all means a lot of code, imagine how mobile browsers will struggle with it.</p>\n\n<p>One way to find out how many statements are executed is by instrumenting your code, adding one statement for each statement in your code to count the number of times it was executed, effectively doubling up the number of statements in your code.</p>\n\n<p>There are also code coverage tools that can run inside the browser without having to instrument your code at all; Googling for \"javascript code coverage\" gives a fair amount of browser extensions that you could use, such as <a href=\"http://hrtimer.mozdev.org/\" rel=\"nofollow\">hrtimer</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just split it into smaller chunks and call after a timeout - that gets around the IE issue.  e.g.</p>\n\n<pre><code>somethingBig();\nsomethingElseBig();\n</code></pre>\n\n<p>instead write :</p>\n\n<pre><code>somethingBig();\nsetTimeout(somethingElseBig);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an use case where I need to get the total number of Javascript lines executed when my web page is loading.</p>\n\n<p>The problem I am facing is that the browser throws an alert when a certain number of JS execution exceed ( 5 million I think in case of IE ) and the page gets hanged.</p>\n\n<p>I used the profiler available in IE Developers tool bar,but it gives me the total number of JS functions called but not the total number/count of lines executed.</p>\n\n<p>Any help is appreciated.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1355579550,
            "question_id": 13364177,
            "score": 9,
            "tags": [
                "javascript",
                "internet-explorer",
                "profiler"
            ],
            "title": "Number of Javascript lines executed during page load"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<pre><code> $scope.$watch(function() {\n    return $location.path();\n }, function(){\n    ...\n });\n</code></pre>\n\n<p>you should pass a function or a string that can be evaluated inside of the scope</p>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p>This is basically a follow up question this question: <a href=\"http://stackoverflow.com/questions/11534710/angularjs-how-to-use-routeparams-in-generating-the-templateurl\">AngularJS - How to use $routeParams in generating the templateUrl?</a>. See my code there for the proper context of this question.</p>\n\n<p>All the navigation part is working great, but now when I navigate, I want to update some properties in my <code>$scope</code> based on the <code>primaryNav</code> and <code>secondaryNav</code>. I thought I could do something with <code>$watch</code> but I can't seem to get anything to work. Here are a few things I tried:</p>\n\n<pre><code>$scope.$watch($location.path(), function() {...}); //result in js error\n$scope.$watch($location, function() {...}); //function runs once on page load, but not after that\n$scope.$watch($window.location, function() {...}); //function runs once on page load, but not after that\n$scope.$watch(window.location, function() {...}); //function runs once on page load, but not after that\n$scope.$watch(window.location.href, function() {...}); //results in js error\n</code></pre>\n\n<p>I could probably create some method in my controller that would take these navs and update everything and navigate off and just add a <code>ng-click</code> to all the anchor tags. However, one thing I really liked about AngularJS was being to use real URL-looking values for hrefs (e.g. <code>&lt;a href=\"#/priNav/secNav\"&gt;Foo&lt;/a&gt;</code>). Is it not possible to update my model based on the changing URL when I route without going through some method on the controller? I hope it makes sense what I'm asking.</p>\n",
            "last_activity_date": 1364568465,
            "question_id": 11555181,
            "score": 9,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "AngularJS - Update model based on URL"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Since the soft keyboard is part of the OS, more often than not, you won't be able to hide it - also, on iOS, hiding the keyboard drops focus from the element.</p>\n\n<p>However, if you use the <code>onFocus</code> attribute on the input, and then <code>blur()</code> the text input immediately, the keyboard will hide itself and the <code>onFocus</code> event can set a variable to define which text input was focused last.</p>\n\n<p>Then alter your on-page keyboard to only alter the last-focused (check using the variable) text input, rather than simulating a key press.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Scott S's answer worked perfectly.</p>\n\n<p>I was coding a web-based phone dialpad for mobile, and every time the user would press a number on the keypad (composed of td span elements in a table), the softkeyboard would pop up. I also wanted the user to not be able to tap into the input box of the number being dialed. This actually solved both problems in 1 shot. The following was used:</p>\n\n<pre><code>&lt;input type=\"text\" id=\"phone-number\" onfocus=\"blur();\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am developing the front end site for a coupon company, and I have a page where the user only needs to input phone number and $$ spent. We came up with a fun on-screen keyboard built in Javascript, that is easy to use, and fast. However, I am looking for a solution to stop the soft keyboard from popping when the user focuses and enters text/numbers in those fields. </p>\n\n<p>I know about the \"number/phone/email\" type attributes that HTML5 came up with. However, at the risk of sounding crazy, I really want to just use my on-screen keyboard.</p>\n\n<p>Note: this web site is mostly targeted to tablets.  </p>\n\n<p>Thanks. </p>\n",
            "last_activity_date": 1395261796,
            "question_id": 10940287,
            "score": 9,
            "tags": [
                "javascript",
                "android",
                "ipad",
                "html5",
                "tablet"
            ],
            "title": "HTML Mobile -forcing the soft keyboard to hide"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Store a reference to the original function in a variable:</p>\n\n<pre><code>(function() {\n    var _alert = window.alert;                   // &lt;-- Reference\n    window.alert = function(str) {\n        // do something additional\n        if(console) console.log(str);\n        //return _alert.apply(this, arguments);  // &lt;-- The universal method\n        _alert(str);                             // Suits for this case\n    };\n})();\n</code></pre>\n\n<p>The universal way is <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/apply\"><code>&lt;original_func_reference&gt;.apply(this, arguments)</code></a> - To preserve context and pass all arguments. Usually, the return value of the original method should also be returned.</p>\n\n<p>However, it's known that <code>alert</code> is a void function, takes only one argument, and does not use the <code>this</code> object. So, <code>_alert(str)</code> is sufficient in this case.</p>\n\n<p>Note: IE &lt;= 8 throws an error if you try to overwrite <code>alert</code>, so make sure that you're using <code>window.alert = ...</code> instead of <code>alert = ...</code>.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>I'm assuming your question is how do you overwrite a built-in and still be able to call it. First off as a disclaimer, you should never overwrite built ins unless you have a good reason for doing it since it will make it impossible to debug/test. </p>\n\n<p>This is how you would do it:</p>\n\n<pre><code>window._alert = window.alert;\nwindow.alert = function(str) { \n     if(console) console.log(str);\n     window._alert(str);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is no \"super\". Anyway, create a closure to \"keep\" around the original function-object.</p>\n\n<p>Note the \"self invoking function\" that returns a new function-object (that is assigned to the <code>window.alert</code> property). The new function-object returned creates a closure around the <em>variable</em> <code>original</code> which evaluates to the original <em>value</em> of <code>window.alert</code> that was passed in to the \"self invoking function\".</p>\n\n<pre><code>window.alert = (function (original) {\n  return function (str) {\n    //do something additional\n    if(console) {\n      console.log(str)\n    }\n    original(str)\n  }\n})(window.alert)\n</code></pre>\n\n<p>However, I <em>believe</em> some browsers may prevent <code>alert</code> and other built-ins from being modified...</p>\n\n<p>Happy coding.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>JavaScript does not use a classical inheritance model. There is a nice <a href=\"http://www.crockford.com/javascript/inheritance.html\" rel=\"nofollow\">article here</a> which describes a way to write your classes so that a similar syntax can be used, but it's not natively supported.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>How to do simple classical inheritance in Javascript:</p>\n\n<pre><code>SuperClass.call(this) // inherit from SuperClass (multiple inheritance yes)\n</code></pre>\n\n<p>How to override functions:</p>\n\n<pre><code>this.myFunction = this.myFunction.override(\n                    function(){\n                      this.superFunction(); // call the overridden function\n                    }\n                  );\n</code></pre>\n\n<p>The override function is created like this:</p>\n\n<pre><code>Function.prototype.override = function(func)\n{\n var superFunction = this;\n return function() \n {\n  this.superFunction = superFunction;\n  return func.apply(this,arguments);\n };\n};\n</code></pre>\n\n<p>Works with multiple arguments.<br> \nFails when trying to override undefined or nonfunctions.<br>\nMakes \"superFunction\" a \"reserved\" word :-)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I would like to override a Javascript built-in function with a new version that calls the original (similarly to overriding a method on a class with a version that calls <code>super</code> in many languages). How can I do this?</p>\n\n<p>For example...</p>\n\n<pre><code>window.alert = function(str) {\n    //do something additional\n    if(console) console.log(str);\n\n    //super.alert(str) // How do I do this bit?\n}\n</code></pre>\n",
            "last_activity_date": 1390925566,
            "question_id": 10427708,
            "score": 9,
            "tags": [
                "javascript",
                "override"
            ],
            "title": "Override function (e.g. &quot;alert&quot;) and call the original function?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>jQuery DataTables auther Allan Jardine pointed out a simple way to get this done: \nuse the <code>bSortCellsTop</code> option, available since version 1.8. </p>\n\n<p><a href=\"http://datatables.net/ref#bSortCellsTop\">http://datatables.net/ref#bSortCellsTop</a></p>\n\n<p>( <a href=\"http://datatables.net/ref\">http://datatables.net/ref</a> )</p>\n\n<p><a href=\"http://datatables.net/forums/discussion/9046/two-rows-in-thead-first-row-for-sorting-second-row-for-column-filtering\">http://datatables.net/forums/discussion/9046/two-rows-in-thead-first-row-for-sorting-second-row-for-column-filtering</a></p>\n\n<p>+1 for jQuery DataTables!</p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>In older versions of <a href=\"http://datatables.net/release-datatables/examples/api/multi_filter_select.html\">datatables</a> (up to 1.7.?), I used to be able to have a table with a two row column header, where sorting was done in the top row, and included the column name, and filtering with inputs and selects was done in the second row. </p>\n\n<pre><code>&lt;table&gt;\n   &lt;thead&gt;\n     &lt;tr&gt;\n         &lt;th&gt;Col 1&lt;/th&gt;\n         &lt;th&gt;Col 2&lt;/th&gt;\n         &lt;th&gt;Col 3&lt;/th&gt;\n     &lt;/tr&gt;\n     &lt;tr&gt;\n        &lt;td&gt;&lt;input type=\"text\" /&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;select&gt;&lt;option ....&gt;&lt;/select&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;input type=\"text\" /&gt;&lt;/td&gt;         \n     &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;...\n</code></pre>\n\n<p>With higher versions, including the latest (1.9.0), this no longer works, because the sortable header is getting applied to the second row instead of the first row.\nIs there a way to get this working without resorting to an additional plug-in such as \n<a href=\"http://code.google.com/p/jquery-datatables-column-filter/\">http://code.google.com/p/jquery-datatables-column-filter/</a> ?</p>\n",
            "last_activity_date": 1378855832,
            "question_id": 9752529,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "jquery-datatables"
            ],
            "title": "jQuery DataTables two rows in head: first row column names and sorting, second row filtering"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>To allow any previously set timeouts to execute.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are a couple of reasons why you would do this</p>\n\n<ul>\n<li>There is an action you don't want to run immediately but do want to run at some near future time period.  </li>\n<li>You want to allow other previously registered handlers from a <code>setTimeout</code> or <code>setInterval</code> to run </li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>When you want to execute rest of your code without waiting previous one to finish you need to add it in anonymous method passed to setTimeout function. Otherwise your code will wait until previous is done</p>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>function callMe()\n{\n   for(var i = 0; i &lt; 100000; i++)\n     {\n       document.title = i;\n     }\n} \n\nvar x = 10;\nsetTimeout(callMe, 0);\n\nvar el = document.getElementById('test-id');\nel.innerHTML = 'Im done before callMe method';\n</code></pre>\n\n<p>That is the reason I use it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Very simplified:</p>\n\n<p>Browsers are single threaded and this single thread (The UI thread) is shared between the rendering engine and the js engine.</p>\n\n<p>If the thing you want to do takes alot of time (we talking cycles here but still) it could halt (paus) the rendering (flow and paint).</p>\n\n<p>In browsers there also exists \"The bucket\" where all events are first put in wait for the UI thread to be done with whatever it\u00b4s doing. As soon as the thread is done it looks in the bucket and picks the task first in line.</p>\n\n<p>Using <code>setTimeout</code> you create a new task in the bucket after the delay and let the thread deal with it as soon as it\u00b4s available for more work.</p>\n\n<p>A story:</p>\n\n<blockquote>\n  <p>After 0 ms delay create a new task of the function\n  and put it in the bucket. At that exact moment the UI thread is busy\n  doing something else, and there is another tasks in the bucket\n  already. After 6ms the thread is available and gets the task infront\n  of yours, good, you\u00b4re next. But what? That was one huge thing! It has\n  been like foreeeeeever (30ms)!!</p>\n  \n  <p>At last, now the thread is done with that and comes and gets your\n  task.</p>\n</blockquote>\n\n<p>Most browsers have a minimum delay that is more then 0 so putting 0 as delay means: Put this task in the basket ASAP. But telling the UA to put it in the bucket ASAP is no guarantee it will execute at that moment. The bucket is like the post office, it could be that there is a long queue of other tasks. Post offices are also single threaded with only one person helping all the task... sorry customers with their tasks. Your task has to get in the line as everyone else.</p>\n\n<p>If the browser doesn\u00b4t implement its own ticker, it uses the tick cycles of the OS. Older browsers had minimum delays between 10-15ms. HTML5 <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#timers\" rel=\"nofollow\">specifies</a> that if delay is less then 4ms the UA should increase it to 4ms. This is said to be <a href=\"https://developer.mozilla.org/en/DOM/window.setTimeout#Minimum_delay_and_timeout_nesting\" rel=\"nofollow\">consistent across browsers released in 2010 and onward</a>.</p>\n\n<p>See <a href=\"http://ejohn.org/blog/how-javascript-timers-work/\" rel=\"nofollow\">How JavaScript Timers Work</a> by John Resig for more detail.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Apart from previous answers I'd like to add another useful scenario I can think of: to \"escape\" from a try-catch block. A setTimeout-delay from within a try-catch block will be executed outside the block and any exception will propagate in the global scope instead.</p>\n\n<p>Perhaps best example scenario: In today's JavaScript, with the more common use of so called Deferreds/Promises for asynchronous callbacks you are (often) actually running inside a try-catch.\nDeferreds/Promises wrap the callback in a try-catch to be able to detect and propagate an exception as an error in the async-chain. This is all good for functions that need to be in the chain, but sooner or later you're \"done\" (i.e fetched all your ajax) and want to run plain non-async code where you Don't want exceptions to be \"hidden\" anymore.\nAFAIK Dojo, Kris Kowal's Q, MochiKit and Google Closure lib use try-catch wrapping (Not jQuery though).</p>\n\n<p>(On couple of odd occasions I've also used the technique to restart singleton-style code without causing recursion. I.e doing a teardown-restart in same loop).</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Quite often see in JavaScript libraries code like this:</p>\n\n<pre><code>setTimeout(function() {\n    ...\n}, 0);\n</code></pre>\n\n<p>I would like to know why use such a wrapper code.</p>\n",
            "last_activity_date": 1412373520,
            "question_id": 9083594,
            "score": 9,
            "tags": [
                "javascript",
                "settimeout"
            ],
            "title": "Call setTimeout without delay"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>what does \"wait for 2 seconds\" mean? do you mean you want to block a return from the function for 2 seconds?</p>\n\n<p>if so, you can't do that. there is no sleep() function in JavaScript.</p>\n\n<p>you'll have to just use setTimeout()</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just put your code inside an anonymous function passed to setTimeout.</p>\n\n<p>e.g.</p>\n\n<pre><code>functionToRunFirst();\nsetTimeout(function() {\n    // rest of code here\n}, 2000);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>using <code>setTimeout</code> is one way to do it</p>\n\n<pre><code>function run() {    \n    // run this code\n\n    setTimeout(afterTwoSeconds, 2000);    \n}\n\nfunction afterTwoSeconds() {    \n    // run this code two seconds after executing run.   \n}\n\n// call run\nrun();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Nothing wrong with the answers above, but a different way is:</p>\n\n<blockquote>\n<pre><code>$(\"#somethingThatDoesntExist\").fadeTo(2000, 1, function() {\n    // two seconds later\n});\n</code></pre>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think what you're looking for is a method to suspend the execution of the code until a timeout. Many amateur programmers wish for such a construct, but it doesn't exist in JavaScript. It's not needed. For all purposes in JavaScript <code>setTimeout</code> and <code>setInterval</code> are perfect candidate solutions.</p>\n\n<p>However, JavaScript is a powerful language. You can build your own construct to address this issue. Take a look at Neil Mix's <a href=\"http://www.neilmix.com/2007/02/07/threading-in-javascript-17/\" rel=\"nofollow\" title=\"Threading in JavaScript 1.7\">blog post</a>. With his approach you can create a sleep function which can be used along the following lines (note that currently only Firefox supports JavaScript 1.7):</p>\n\n<pre><code>function mainGeneratorFunction() {\n    functionToRunFirst();\n    yield sleep(2000);\n    //rest of the code\n}\n</code></pre>\n\n<p>However, for other browsers don't despair. You can use a hack known as <code>XHR Sleeping</code>. In this approach you simply use a synchronous <code>XMLHttpRequest</code> to call a server side script like php, which then sleeps for the specified time and returns after it wakes up. The JavaScript code is as follows:</p>\n\n<pre><code>function sleep(microseconds) {\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", \"sleep.php?time=\" + microseconds, false);\n    request.send();\n}\n\nfunctionToRunFirst();\nsleep(2000000);\n//rest of the code\n</code></pre>\n\n<p>The php sleep function is as follows:</p>\n\n<pre><code>&lt;?php\n    usleep($_GET[\"time\"]);\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>If I have a function which I would like my js code to run it immediately but after the run, wait for 2 seconds. How to achieve this logic?</p>\n\n<p>(<strong>Note:</strong> It is just the inverse logic compare with <code>setTimeout()</code>, since <code>setTimeout(</code>) first wait a certain amount of time then execute the function.)</p>\n",
            "last_activity_date": 1321351054,
            "question_id": 8133947,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events"
            ],
            "title": "How to wait for a period of time after a function run"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Set focus on the window before closing it</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had the same issue as well. My initial code would focus on the parent window and then close the current one. This always ends up closing the wrong window. What I did was to remove the <code>.focus</code> call and added a small delay to the window.close() and it worked for me. Original source for the delay suggestion - <a href=\"https://twitter.com/#!/gryzzly/statuses/177061204114685952\" rel=\"nofollow\">https://twitter.com/#!/gryzzly/statuses/177061204114685952</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>That did the trick for me (iPad 2 and 3; 3 with iOS 5.1.1)</p>\n\n<pre><code>var host=window.opener;\nwindow.focus(); /* solves the iPad3 problem */\nwindow.close(); /* the actual closing we want to achieve... */\n/* makes the focus go back to opener on iPad2, fails silently on iPad3 */\ntry { host.focus(); } catch() {} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>We have an iPad application that's working on our older iPads.</p>\n\n<p>We open external links using\nvar x = window.open(url)</p>\n\n<p>at the end of the day, when the user closes this part of the app, we go through all the windows it opened and do x.close() for each one and everything is okie dokie.</p>\n\n<p>Testing on the new iPad with IOS 5 and the lovely tabs,\nopening the new windows (although now they open as tabs) is fine, but doing x.close() doesn't seem to necessarily close x, it may close window y or z. Doing x.focus() or y.focus() works just fine, the correct tab comes into focus, but close seems to just pick whatever tab it wants.</p>\n\n<p>Is this a bug or am I doing something wrong? Example program:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;&lt;/head&gt;\n&lt;body&gt;\n    &lt;script&gt;\n        //The openWindow array will hold the handles of all open child windows\n        var openWindow = new Array();\n       var win1;\n       var win2;\n        //Track open adds the new child window handle to the array.\n        function trackOpen(winName) {\n            openWindow[openWindow.length]=winName;\n        }\n\n        //loop over all known child windows and try to close them.  No error is\n        //thrown if a child window(s) was already closed.\n        function closeWindows() {\n            var openCount = openWindow.length;\n            for(r=openCount-1;r&gt;=0;r--) {\n                openWindow[r].close();\n            }\n        }\n\n        //Open a new child window and add it to the tracker.\n        function open1() {\n            win1 = window.open(\"http://www.yahoo.com\");\n            trackOpen(win1);\n        }\n\n        //Open a different child window and add it to the tracker.\n        function open2() {\n            win2 = window.open(\"http://www.google.com\");\n            trackOpen(win2);\n\n        }\n        //Open whatever the user enters and add it to the tracker\n        function open3() {\n            var newURL = document.getElementById(\"url\").value;\n            var win3= window.open(newURL);\n            trackOpen(win3);\n        }\n\n    &lt;/script&gt;\n    &lt;input type=\"button\" value=\"Open 1\" onclick=\"open1()\"&gt;\n    &lt;input type=\"button\" value=\"Open 2\" onclick=\"open2()\"&gt;\n    &lt;input type=\"button\" value=\"Focus 1\" onclick=\"win1.focus()\"&gt;\n    &lt;input type=\"button\" value=\"Focus 2\" onclick=\"win2.focus()\"&gt;\n    &lt;input type=\"button\" value=\"Close 1\" onclick=\"win1.close()\"&gt;\n    &lt;input type=\"button\" value=\"Close 2\" onclick=\"win2.close()\"&gt;\n\n    URL: &lt;input type=\"text\" id=\"url\"&gt; &lt;input type=\"button\" value=\"Open URL\" onclick=\"open3()\"&gt;\n    &lt;input type=\"button\" value=\"Close All\" onclick=\"closeWindows()\"&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1343900086,
            "question_id": 7987625,
            "score": 9,
            "tags": [
                "javascript",
                "ipad",
                "mobile-safari"
            ],
            "title": "iPad Safari IOS 5 window.close() closing wrong window"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You <em>might</em> be able to get this from <code>.toString()</code>:</p>\n\n<pre><code>var blank = function(){};\nvar f = function(){};\nvar f2 = function() { return 1; };\n\nf.toString() == blank.toString(); // true\nf2.toString() == blank.toString(); // false\n</code></pre>\n\n<p>but this is <em>really</em> prone to error:</p>\n\n<pre><code>var blank = function(){};\nvar f = function(){ }; // extra space!\nf.toString() == blank.toString(); // false\n</code></pre>\n\n<p>You could munge the strings a bit to try to overcome this, but I suspect this is very browser-dependent. I wouldn't actually try to do this in a production environment if I were you. Even if you normalize the whitespace, it still won't catch other no-op lines, including comments, useless <code>var</code> statements, etc. To actually address these issues, you'd probably need a whole tokenizer system (or a crazy regex).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One possibility is matching the <code>.toString</code> result against a regexp to get the function body, and then trim to check whether it has become an empty string:</p>\n\n<pre><code>var f = function foo()    { \n\n\n};\n\n/^function [^(]*\\(\\)[ ]*{(.*)}$/.exec(\n     f.toString().replace(/\\n/g, \"\")\n)[1].trim() === \"\"; // true\n</code></pre>\n\n<p>That ugly regexp does take care of spaces aroung named functions as well as extraneous spaces before the name and the opening brace. Spaces like in <code>foo  ()</code> do seem to be removed, so there is no reason to check for those.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can't do it for a host function, but for others, you can fairly reliably do</p>\n\n<pre><code>function isEmpty(f) {\n  return typeof f === \"function\" &amp;&amp;\n      /^function[^{]*[{]\\s*[}]\\s*$/.test(\n          Function.prototype.toString.call(f));\n}\n</code></pre>\n\n<p>This isn't efficient, but major interpreters implement <code>toString</code> for functions in such a way that it works, though it will not work on some interpreters for some empty-ish functions</p>\n\n<pre><code>function () { /* nothing here */ }\nfunction () { ; }\nfunction () { return; }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It seems that you can define a function to retrieve the body of a function(<a href=\"http://www.jslab.dk/library/Function.getBody\" rel=\"nofollow\">1</a>). I wrote a small (non-definitive) test of this:</p>\n\n<p><a href=\"http://jsfiddle.net/6qn5P/\" rel=\"nofollow\">http://jsfiddle.net/6qn5P/</a></p>\n\n<pre><code>Function.prototype.getBody =\n  function() {\n    // Get content between first { and last }\n    var m = this.toString().match(/\\{([\\s\\S]*)\\}/m)[1];\n    // Strip comments\n    return m.replace(/^\\s*\\/\\/.*$/mg,'');\n  };\n\nfunction foo() {\n    var a = 1, b = \"bar\";\n    alert(b + a);\n    return null;\n}\n\nconsole.log(foo.getBody());\nconsole.log(foo.getBody().length);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In some implementation you can just do a toString() on the function and get it's content. Though it contains comments etcetera.</p>\n\n<pre><code>var foo = function(){ /* Comment */ };\nalert(foo.toString());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is no totally reliable way to know if a function is empty because there are multiple kinds of functions in JS, some implemented with JS and some implemented with native code and you can't know for sure whether the function passed in does anything or not.  If you want to limit the passed in function to only very simple JS functions, you could use the mechanisms outlined by other answers here (examining the source of the function).  But, I would not recommend doing that in anything but a tightly controlled situation because there are lots of legal javascript ways to break that.</p>\n\n<p>I would suggest that you should change the contract of your function arguments and have the caller pass null or not pass anything (which will make the argument <code>undefined</code>) rather than an empty function.  Then, it will be very clear whether they intend to have a function called or not.  If they then pass an empty function instead of null or undefined, they are getting the behavior that the interface of the function specifies.  The caller can choose the desired behavior and you can implement your function in a more failsafe manner.</p>\n\n<p>Also, one of your main suppositions in your question is not quite right.  You cannot safely use <code>typeof x == \"function\"</code> to determine if something is a function as that will not work reliably in some older versions of IE for some types of functions.  If you want to learn how to detect if something is a function at all, you can learn from jQuery here (even if you're not using it).  jQuery has a function it uses internally all the time called <code>jQuery.isFunction()</code> that returns a bool.  It uses that mostly for testing arguments to see if a function was passed.</p>\n\n<p>Internally, it calls:</p>\n\n<pre><code>Object.prototype.toString.call(o)\n</code></pre>\n\n<p>and then examines the result.  If the result has \"Function\" in it, then test test parameter is a function.</p>\n\n<p>So, using the same technique used in jQuery, you could build your own simple little <code>isFunction</code> routine like this:</p>\n\n<pre><code>function isFunction(test) {\n    return(Object.prototype.toString.call(test).indexOf(\"Function\") &gt; -1);\n}\n</code></pre>\n\n<p>Of course, if you have jQuery available, you could just use it's own version:</p>\n\n<pre><code>jQuery.isFunction(o)\n</code></pre>\n\n<p>When there are questions with potential cross browser compatibility issues, I find it instructional to look at how one of the big libraries solves the issue, even if you aren't going to be using that library.  You can be sure that the libraries have been vetted against many browsers so a technique they are using is safe.  You sometimes have to unwrap all their own internal routines they may use to figure out what they're really doing (which was the case for this function), but you can save yourself a lot of legwork.</p>\n\n<p>You can see a working test bed for this here: <a href=\"http://jsfiddle.net/jfriend00/PKcsM/\">http://jsfiddle.net/jfriend00/PKcsM/</a></p>\n\n<p>In modern browsers <code>typeof fn === \"function\"</code>, but in older versions of IE, some functions give a <code>typeof === \"object\"</code> which is probably why jQuery uses this other method which does work in those older versions of IE.</p>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>Let's have a function call</p>\n\n<pre><code>function doSomethingAndInvokeCallback(callback){\n    // do something\n    callback();\n}\n</code></pre>\n\n<p>I can check if given argument is function <code>if(typeof callback == 'function')</code>  </p>\n\n<p>How can I discover, if given callback function is function and isn't empty?</p>\n\n<p>like</p>\n\n<pre><code>doSomethingAndInvokeCallback(function(){\n    //nothing here\n})\n</code></pre>\n",
            "last_activity_date": 1320106601,
            "question_id": 7960335,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "Javascript : is given function empty?"
        }
    ]
}
