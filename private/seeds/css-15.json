{
    "items": [
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Honestly I don't see the point in doing superscript/subscript in CSS only.  There's no handy CSS attribute for it, just a bunch of homegrown implementations including:</p>\n\n<pre><code>.superscript { position: relative; top: -0.5em; font-size: 80%; }\n</code></pre>\n\n<p>or using vertical-align or I'm sure other ways.  Thing is, it starts to get complicated:</p>\n\n<ul>\n<li><a href=\"http://www.xs4all.nl/~sbpoley/webmatters/superscripts.html\">CSS superscript spacing</a> on line height;</li>\n<li><a href=\"http://www.personal.psu.edu/ejp10/blogs/tlt/2007/02/beware_css_for_superscriptsubc.html\">Beware CSS for Superscript/Subcript</a> on why you arguably shouldn't style superscript/subscript with CSS <strong>at all</strong>;</li>\n</ul>\n\n<p>The second point is worth emphasizing.  Typically superscript/subscript is not actually a styling issue but is indicative of meaning.</p>\n\n<p><strong>Side note:</strong> It's worth mentioning this <a href=\"http://tlt.its.psu.edu/suggestions/international/bylanguage/mathchart.html#super\">list of entities for common mathematical superscript and subscript expressions</a> even though this question doesn't relate to that.</p>\n\n<p>The sub/sup tags are in HTML and XHTML.  I would just use those.</p>\n\n<p>As for the rest of your CSS, the :after pseudo-element and content attributes are not widely supported.  If you really don't want to put this manually in the HTML I think a Javascript-based solution is your next best bet.  With jQuery this is as simple as:</p>\n\n<pre><code>$(function() {\n  $(\"a.external\").append(\"&lt;sup&gt;+&lt;/sup&gt;\");\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 103
                },
                {
                    "body": "<p>Check out: <a href=\"http://www.cssdesignpatterns.com/Chapter%2012%20-%20ALIGNING%20CONTENT/Vertical-aligned%20Content/example.html\" rel=\"nofollow\">http://www.cssdesignpatterns.com/Chapter%2012%20-%20ALIGNING%20CONTENT/Vertical-aligned%20Content/example.html</a></p>\n\n<p>if looks like you want \"vertical-align:text-top\"</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can do superscript with  <a href=\"https://developer.mozilla.org/en-US/docs/CSS/vertical-align\"><strong><code>vertical-align: super</code></strong></a>, (plus an accompanying <a href=\"https://developer.mozilla.org/en-US/docs/CSS/font-size\"><code>font-size</code></a> reduction).</p>\n\n<p>However,  be sure to <strong>read the other answers</strong> here, particularly those by <a href=\"http://stackoverflow.com/questions/501671/superscript-in-css-only#572967\">paulmurray</a> and <a href=\"http://stackoverflow.com/questions/501671/superscript-in-css-only#501689\">cletus</a>, for useful information.</p>\n",
                    "is_accepted": true,
                    "score": 276
                },
                {
                    "body": "<p><a href=\"http://htmldog.com/articles/superscript/\">http://htmldog.com/articles/superscript/</a> Essentially:</p>\n\n<pre><code>position: relative;\nbottom: 0.5em;\nfont-size: 0.8em;\n</code></pre>\n\n<p>Works well in practice, as far as I can tell.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>The CSS documentation contains industry-standard CSS equivalent for all HTML constructs. That is: most web browsers these days do not explicitly handle <code>SUB</code>, <code>SUP</code>, <code>B</code>, <code>I</code> and so on - they (kinda sorta) are converted into <code>SPAN</code> elements with appropriate CSS properties, and the rendering engine only deals with that.</p>\n\n<p>The page is <a href=\"http://www.w3.org/TR/CSS21/sample.html\">Appendix D. Default style sheet for HTML 4</a></p>\n\n<p>The bits you want are:</p>\n\n<pre><code>small, sub, sup { font-size: .83em }\nsub             { vertical-align: sub }\nsup             { vertical-align: super }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 70
                },
                {
                    "body": "<p>I was working on a page with the aim of having clearly legible text, with superscript elements NOT changing the line's top and bottom margins - with the following observations:</p>\n\n<p>If for your main text you have <code>line-height: 1.5em</code> for example, you should reduce the line-height of your superscript text for it to appear correctly. I used <code>line-height: 0.5em</code>.</p>\n\n<p>Also, <code>vertical-align: super</code> works well in most browsers but in IE8 when you have a superscript element present, the rest of that line is pushed down. So instead I used <code>vertical-align: baseline</code> together with a negative <code>top</code> and <code>position: relative</code> to achieve the same effect, which seems to work better across browsers.</p>\n\n<p>So, to add to the \"homegrown implementations\":\n<pre><code>.superscript {\n    font-size: .83em;\n    line-height: 0.5em;\n    vertical-align: baseline;\n    position: relative;\n    top: -0.4em;\n}\n</code></pre></p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>This is another clean solution:</p>\n\n<pre><code>sub, sup {vertical-align: baseline; position: relative; font-size: 70%;} /* 70% size of its parent element font-size which is good. */\nsub {bottom: -0.6em;} /* use em becasue they adapt to parent font-size */\nsup {top: -0.6em;} /* use em becasue they adapt to parent font-size */\n</code></pre>\n\n<p>In this way you <strong>can still use sup/sub</strong> tags but you <strong>fixed their idious behavior to always screw up paragraph line height</strong>.</p>\n\n<p>So now you can do:</p>\n\n<pre><code>  &lt;p&gt;This is a line of text.&lt;/p&gt;\n  &lt;p&gt;This is a line of text, &lt;sub&gt;with sub text.&lt;/sub&gt;&lt;/p&gt;\n  &lt;p&gt;This is a line of text, &lt;sup&gt;with sup text.&lt;/sup&gt;&lt;/p&gt;\n  &lt;p&gt;This is a line of text.&lt;/p&gt;\n</code></pre>\n\n<p>And your paragraph line height should not get screwed up.</p>\n\n<p>Tested on IE7, IE8, FF3.6, SAFARI4, CHROME5, OPERA9</p>\n\n<p>I tested using a <code>p {line-height: 1.3;}</code> (that is a good line height unless you want your lines to stick too close) and it still works, cause \"-0.6em\" is such a small amount that also with that line height the sub/sub text will fit and don't go over each other.</p>\n\n<p>Forgot a detail that might be relevant I always use DOCTYPE in the <strong>1st line of my page</strong> (specifically I use the HTML 4.01 <code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;</code>). So I don't know if this solution works well when browser is in quirkmode (or not standard mode) due to lack of DOCTYPE or to a DOCTYPE that does not triggers Standard/Almost Standard mode.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you are changing the font size, you might want to stop shrinking sizes with this rule:</p>\n\n<pre><code>sup sub, sub sup, sup sup, sub sub{font-size:1em !important;}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>.superscript {\n  position: relative;\n  top: 5px;\n  font-size: 90%;\n  vertical-align: super;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's the exact way sup uses:</p>\n\n<pre><code>.superscript{\n    vertical-align:super;\n    font-size:smaller;\n}\n</code></pre>\n\n<p>Found this via google chrome inspect element.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The following is taken from Mozilla Firefox's internal html.css:</p>\n\n<pre><code>sup {\n  vertical-align: super;\n  font-size: smaller;\n  line-height: normal;\n}\n</code></pre>\n\n<p>So, in your case it would be something, like:</p>\n\n<pre><code>.superscript {\n  vertical-align: super;\n  font-size: smaller;\n  line-height: normal;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I get superscript done, only in CSS?</p>\n\n<p>I have a stylesheet where I mark the external links with a superscript character, but I'm having a hard time getting the character aligned correctly.</p>\n\n<p>What I have currently, looks like this:</p>\n\n<pre><code>a.external:after {\n  font-size: 50%;\n  vertical-align: top;\n  content: \"+\";\n}\n</code></pre>\n\n<p>but it doesn't work.</p>\n\n<p>Naturally, I'd use the <code>&lt;sup&gt;</code>-tag, only if <code>content</code> would allow for HTML... </p>\n",
            "last_activity_date": 1424856877,
            "question_id": 501671,
            "score": 162,
            "tags": [
                "css"
            ],
            "title": "Superscript in CSS only?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>In addition to suggestion from stackoverflow users, I figured I post a link to the same question on <a href=\"http://doctype.com/\" rel=\"nofollow\">doctype.com</a>:</p>\n\n<ul>\n<li><a href=\"http://doctype.com/html5-reset-css\" rel=\"nofollow\">HTML5 Reset CSS</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's two you might try out:</p>\n\n<p><a href=\"http://html5reset.org/\">http://html5reset.org/</a></p>\n\n<p><a href=\"http://html5boilerplate.com\">http://html5boilerplate.com</a></p>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<pre><code>* {\n    margin: 0;\n    padding: 0;\n}\n</code></pre>\n\n<p>simple yet entirely effective. perhaps throw in a:</p>\n\n<pre><code>body {\n    font-size: small;\n}\n</code></pre>\n\n<p>for good measure.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>The <a href=\"http://github.com/joshuaclayton/blueprint-css/blob/master/blueprint/src/reset.css\">reset.css</a> used by <a href=\"http://github.com/joshuaclayton/blueprint-css\">Blueprint CSS</a> framework works well and includes HTML5 elements.  It gets included in their <a href=\"http://github.com/joshuaclayton/blueprint-css/blob/master/blueprint/screen.css\">screen.css</a> file.</p>\n\n<p>Blueprint is a useful resource for rapid prototyping of new sites, and their source code is well organized and worth learning from.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The HTML5 spec includes <a href=\"http://www.w3.org/TR/html5/rendering.html\" rel=\"nofollow\">recommended CSS declarations</a> for CSS-capable browsers. For the fun of it I took them and reverted those, where it makes sense. You can view the result <a href=\"http://www.manuel-strehl.de/dev/HTML5_reset_styles\" rel=\"nofollow\">in this article</a>.</p>\n\n<p><strong>However</strong>, I don't recommend using this in production. It's more a proof of concept and might better be used to give hints than to serve as an all-purpose-reset stylesheet. Any of the other suggestions before might be a better choice.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Eric Meyer also released v2 of his CSS reset (and he did so almost a year ago now):</p>\n\n<p><a href=\"http://meyerweb.com/eric/tools/css/reset/\" rel=\"nofollow\">http://meyerweb.com/eric/tools/css/reset/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<ol>\n<li>Preserves useful defaults, unlike many CSS resets. </li>\n<li>Normalizes styles for a wide range of HTML elements. </li>\n<li>Corrects bugs and common browser inconsistencies. </li>\n<li>Improves usability with subtle improvements.</li>\n<li>Explains what code does using detailed comments.</li>\n</ol>\n\n<p><a href=\"http://necolas.github.com/normalize.css/\" rel=\"nofollow\">normalize.css</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Real talk: Despite the markdowns <a href=\"http://stackoverflow.com/users/396289/kaikai\">kaikai</a> is right, you only need to reset *padding &amp; margin to 0.</p>\n\n<p>Though unfortunately 99% of us do not have resources or man power to keep up with the hundreds of browser versions out there. So a reset sheet is essential for the typical website.</p>\n\n<p><strong>html5reset: (It's too interfering)</strong> </p>\n\n<p>I just took a look at <a href=\"http://html5reset.org/\">http://html5reset.org/</a></p>\n\n<pre><code>img,\nobject,\nembed {max-width: 100%;}\n</code></pre>\n\n<p>And:</p>\n\n<pre><code>html {overflow-y: scroll;}\n</code></pre>\n\n<p>I understand it has good intentions but, that's not the job of a reset sheet. It's making too many assumptions.</p>\n\n<p><strong>BluePrint Reset:(literally a blueprint)</strong> </p>\n\n<pre><code>body {\n  line-height: 1.5;\n  background: white;\n}\n</code></pre>\n\n<p>Whats up with 1.5. And why background white?(I know it's for correcting but still not necessary) </p>\n\n<p><strong>Normalize.css: (Not normal)</strong> </p>\n\n<p><a href=\"https://github.com/necolas/normalize.css/blob/master/normalize.css\">https://github.com/necolas/normalize.css/blob/master/normalize.css</a></p>\n\n<p>It started good with some webkit/ie hacks but</p>\n\n<pre><code>h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n}\n\nh2 {\n    font-size: 1.5em;\n    margin: 0.83em 0;\n}\n\nh3 {\n    font-size: 1.17em;\n    margin: 1em 0;\n}\n\nh4 {\n    font-size: 1em;\n    margin: 1.33em 0;\n}\n\nh5 {\n    font-size: 0.83em;\n    margin: 1.67em 0;\n}\n\nh6 {\n    font-size: 0.75em;\n    margin: 2.33em 0;\n}\n</code></pre>\n\n<p>Every header tag is targeted. &amp; they don't reset the line-height of the body.</p>\n\n<p>I'm sure all the above does the intended job well, but will probably be overridden more than necessary. </p>\n\n<p><strong>Eric Meyer</strong></p>\n\n<p><strong>YUI</strong></p>\n\n<p><strong>HTML5Boilerplate</strong></p>\n\n<p>The above are more for pros with Boilerplate leaning to the (over friendly) side I'm sure due to popularity. At the moment 80% of my customized reset is boilerplate.</p>\n\n<p>I'm going to go though all three bit by bit and make my own, it's not rocket science.</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>List of most recently and popular CSS Reset scripts: <a href=\"http://www.cssreset.com\" rel=\"nofollow\">http://www.cssreset.com</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://necolas.github.com/normalize.css/\" rel=\"nofollow\">Normalize.css</a> is great for both desktop and mobile browsers and is used in many popular HTML templates.</p>\n\n<p>But what about using the CSS <code>all</code> property which resets CSS properties except <code>direction</code> and <code>unicode-bidi</code>? That way you don't need to include any additional files:</p>\n\n<p><code>* { all: unset }</code></p>\n\n<p>It's currently supported in Firefox and hopefully others will follow suit making the reset process very simple.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I use Normalize or the reset from HTML5 Doctor, and I alter it to fit the project I'm working on.</p>\n\n<p>BTW it's only the concept of using a reset that's become more or less a standard.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Which HTML5 reset CSS do you use and why? Is there one that you've found to cover more cases?</p>\n\n<p>I've started using HTML5 Doctor's: <a href=\"http://html5doctor.com/html-5-reset-stylesheet/\">http://html5doctor.com/html-5-reset-stylesheet/</a> It seems to work, but I'm wondering if there is something better out there.</p>\n",
            "last_activity_date": 1392173252,
            "question_id": 3485720,
            "score": 90,
            "tags": [
                "css",
                "html5",
                "css-reset"
            ],
            "title": "Which HTML5 reset CSS do you use and why?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>jQuery would allow you to do that.</p>\n\n<p>Look up the <code>click()</code> function:\n<a href=\"http://api.jquery.com/click/\" rel=\"nofollow\">http://api.jquery.com/click/</a></p>\n\n<p>Example:</p>\n\n<pre><code>$('#yourDIV').click(function() {\n  alert('You clicked the DIV.');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Something like this? </p>\n\n<pre><code>&lt;div onclick=\"alert('test');\"&gt;\n\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Well you could either add <code>&lt;a&gt;&lt;/a&gt;</code> tags and place the div inside it, adding an href if you want the div to act as a link. Or else just use Javascript and define an 'OnClick' function. But from the limited information provided, it's a bit hard to determine what the context of your problem is.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>AFAIK you will need at least a little bit of JavaScript...</p>\n\n<p>I would suggest to use <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a>.</p>\n\n<p>You can include this library in one line. And then you can access your div with</p>\n\n<pre><code>$('div').click(function(){\n  // do stuff here\n});\n</code></pre>\n\n<p>and respond to the click event.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>a whole div links to another page when clicked without javascript and\n  with valid code, is this possible?</p>\n</blockquote>\n\n<p>Pedantic answer: No.</p>\n\n<p>As you've already put on another comment, it's invalid to nest a <code>div</code> inside an <code>a</code> tag.</p>\n\n<p>However, there's nothing preventing you from making your <code>a</code> tag behave very similarly to a <code>div</code>, with the exception that you cannot nest other block tags inside it. If it suits your markup, set <code>display:block</code> on your <code>a</code> tag and size / float it however you like.</p>\n\n<p>If you renege on your question's premise that you need to avoid javascript, as others have pointed our you can use the onClick event handler. jQuery is a popular choice for making this easy and maintainable.</p>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>It is possible to make a link fill the entire div which gives the appearance of making the div clickable.</p>\n\n<p><em><strong>CSS:</em></strong></p>\n\n<pre><code>#my-div {\n    background-color: #f00;\n    width: 200px;\n    height: 200px;\n}\na.fill-div {\n    display: block;\n    height: 100%;\n    width: 100%;\n    text-decoration: none;\n}\n</code></pre>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div id=\"my-div\"&gt;\n    &lt;a href=\"#\" class=\"fill-div\"&gt;&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 86
                },
                {
                    "body": "<p>My solution without JavaScript/images. Only CSS used. It works in all browsers.</p>\n\n<p><em><strong>HTML:</em></strong></p>\n\n<pre><code>&lt;a class=\"add_to_cart\" href=\"http://www.redracingparts.com\" title=\"Add to Cart!\"&gt;\n  buy now&lt;br /&gt;free shipping&lt;br /&gt;no further costs\n&lt;/a&gt;\n</code></pre>\n\n<p><em><strong>CSS:</em></strong></p>\n\n<pre><code>.add_to_cart:hover {\n  background-color:#FF9933;\n  text-decoration:none;\n  color:#FFFFFF;\n}\n\n.add_to_cart {\n  cursor:pointer;\n  background-color:#EC5500;\n  display:block;\n  text-align:center;\n  margin-top:8px;\n  width:90px;\n  height:31px;\n  border-radius:5px;\n  border-width:1px;\n  border-style:solid;\n  border-color:#E70000;\n}\n</code></pre>\n\n<p>There is an example on <a href=\"http://www.redracingparts.com/english/motorbikesmotorcycles/stackoverflow/examples/div/clickable.php\" rel=\"nofollow\">http://www.redracingparts.com/english/motorbikesmotorcycles/stackoverflow/examples/div/clickable.php</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Nesting block level elements in anchors is <strong>not invalid</strong> anymore in <strong>HTML5</strong>. See <a href=\"http://html5doctor.com/block-level-links-in-html-5/\">http://html5doctor.com/block-level-links-in-html-5/</a> and <a href=\"http://www.w3.org/TR/html5/the-a-element.html\">http://www.w3.org/TR/html5/the-a-element.html</a>.\nI'm not saying you should use it, but in HTML5 it's fine to use <code>&lt;a href=\"#\"&gt;&lt;div&gt;&lt;/div&gt;&lt;/a&gt;</code>.</p>\n\n<p>The accepted answer is otherwise the best one. Using JavaScript like others suggested is also bad because it would make the \"link\" <strong>inaccessible</strong> (to users without JavaScript, which includes search engines and others).</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>&lt;div onclick=\"location.href='#';\" style=\"cursor: pointer;\"&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Without JS, I am doing it like this:</p>\n\n<p>My HTML:</p>\n\n<pre><code>&lt;div class=\"container\"&gt;\n  &lt;div class=\"sometext\"&gt;Some text here&lt;/div&gt;\n  &lt;div class=\"someothertext\"&gt;Some other text here&lt;/div&gt;\n  &lt;a href=\"#\" class=\"mylink\"&gt;text of my link&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>My CSS:</p>\n\n<pre><code>.container{\nposition: relative;\n}\n.container.a{\nposition: absolute;\ntop: 0;\nleft: 0;\nwidth: 100%;\nheight: 100%;\ntext-indent: -9999px; //these two lines are to hide my actual link text.\noverflow: hidden; //these two lines are to hide my actual link text.\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>we are using like this </p>\n\n<pre><code>     &lt;label for=\"1\"&gt;\n&lt;div class=\"options\"&gt;\n&lt;input type=\"radio\" name=\"mem\" id=\"1\" value=\"1\" checked=\"checked\"/&gt;option one\n    &lt;/div&gt;\n&lt;/label&gt;\n   &lt;label for=\"2\"&gt; \n&lt;div class=\"options\"&gt;\n &lt;input type=\"radio\" name=\"mem\" id=\"2\" value=\"1\" checked=\"checked\"/&gt;option two\n&lt;/div&gt;&lt;/label&gt;\n</code></pre>\n\n<p>using </p>\n\n<pre><code>  &lt;label for=\"1\"&gt;\n</code></pre>\n\n<p>tag and catching is with </p>\n\n<pre><code>id=1\n</code></pre>\n\n<p>hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>.clickable {\n  cursor:pointer;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>I want to make it so that a whole div is clickable and links to another page when clicked without javascript and with valid code.</p>\n\n<p>If I have this which is what I want the result to do - </p>\n\n<pre><code>&lt;a href=\"#\"&gt;\n&lt;div&gt;&lt;/div&gt;\n&lt;/a&gt;\n</code></pre>\n\n<p>it says that block elements shouldn't be placed inside an inline element. Is there a better way to do this?</p>\n",
            "last_activity_date": 1409779241,
            "question_id": 8160494,
            "score": 60,
            "tags": [
                "html",
                "css",
                "click"
            ],
            "title": "How to make a whole &#39;div&#39; clickable in html and css without javascript?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Just show the print stylesheet in your browser using <code>media=\"screen\"</code> while debugging. The print preview view uses the same rendering engine as normal browsing mode so you can get accurate results using that.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I'm assuming you want as much control of the printed window as possible without using a HTML to PDF approach... Use @media screen to debug - @media print for final css</p>\n\n<p>Modern browsers can give you a quick visual for what's going to happen at print time using <strong>inches</strong> and <strong>pts</strong> in a <code>@media query</code>.</p>\n\n<pre><code>@media screen and (max-width:8.5in) { /* resize your window until the event is triggered */\n    html { width:8.5in; }\n    body { font: 9pt/1.5 Arial, sans-serif; } /* Roughly 12px font */\n ...\n}\n</code></pre>\n\n<p>Once your browser is displaying \"inches\" you'll have a better idea of what to expect. This approach should all but end the print preview method. All printers will work with <code>pt</code> and <code>in</code> units, and using the @media technique will allow you to quickly see what's going to happen and adjust accordingly. Firebug (or equivalent) will absolutely expedite that process. When you've added your changes to @media, you've got all the code you need for a linked CSS file using <code>media = \"print\"</code> attribute - just copy/paste the @media screen rules to the referenced file.</p>\n\n<p>Good luck. The web wasn't built for print. Creating a solution that delivers all of your content, styles equal to what's seen in the browser can be impossible at times. For instance, a fluid layout for a predominantly 1280 x 1024 audience doesn't always translate easily to a nice and neat 8.5 x 11 laser print.</p>\n\n<p>W3C reference for purusal: <a href=\"http://www.w3.org/TR/css3-mediaqueries/\">http://www.w3.org/TR/css3-mediaqueries/</a></p>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>If you have a print function that rewrites the content of the page to a new window with your print style sheet referenced you'll get a much better idea of what its going to look like on paper , and you'll be able to debug it with the likes of firebug too.</p>\n\n<p>Heres an example of how this can be done with JavaScript / jquery</p>\n\n<pre><code>        $(\"#Print\").click(function () {\n            var a = window.open('', '', 'scrollbars=yes,width=1024,height=768');\n            a.document.open(\"text/html\");\n            a.document.write(\"&lt;html&gt;&lt;head&gt;\");\n            a.document.write('&lt;link rel=\"stylesheet\" href=\"css/style.css\" /&gt;');\n            a.document.write('&lt;link rel=\"stylesheet\" href=\"css/print.css\" /&gt;');\n            a.document.write(\"&lt;/head&gt;&lt;body&gt;\");\n            a.document.write($('#Content').html());\n            a.document.write('&lt;/body&gt;&lt;/html&gt;');\n            a.document.close();\n            a.print();\n        });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I use macros to send keypress and mouse clicks repeatedly.\nUnder Windows, AutoHotKey is a great software and under OS X you can read about Automator sort of <a href=\"http://www.autohotkey.com/forum/topic32145.html\" rel=\"nofollow\">an alternative AHK for OsX</a>.</p>\n\n<p>Under Windows (replace Ctrl by Cmd under OS X) \"Ctrl-s / switch to Fx window wherever it is in the list of windows opened / Ctrl-r\" bound to 1 unused key avoids frustration from uninteresting tasks and will ultimately save my arms from <a href=\"http://en.wikipedia.org/wiki/Repetitive_strain_injury\" rel=\"nofollow\">RSI</a> :)</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>There's an easy way to debug your print stylesheet without switching any media attribute in your HTML code (of course, as pointed out, it doesn't solve the width / pages issue):</p>\n\n<ul>\n<li>Use Firefox + Web Developer extension.</li>\n<li>In the Web Developer menu, choose CSS / Display CSS by Media Type / Print</li>\n<li>Go back to Web Developer menu, choose Options / Persist Features</li>\n</ul>\n\n<p>Now you are viewing the print CSS and you can reload your page indefinitely.\nOnce you're done, uncheck \"Persist Features\" and reload, you'll get the screen CSS again.</p>\n\n<p>HTH.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p><img src=\"http://i.stack.imgur.com/EV3ax.png\" alt=\"enter image description here\"></p>\n\n<p>In DreamWeaver there is a toolbar that shows virtually any rendering option you want: \nscreen, print, handheld media, projection screen, tv media, desitn time style sheets, etc.\nThis is what I use especially because it: <strong>instantly shows a preview with 1 single press of a button.</strong></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>How about this variant of your print reload cycle:</p>\n\n<ul>\n<li>change code</li>\n<li>command-tab</li>\n<li>reload alt + f, v (print preview in Firefox on Windows)</li>\n<li>esc (close print preview)</li>\n</ul>\n\n<p>Iterate a couple of times then do a real print to Microsoft XPS Document Writer or similar.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>There is an option for that in Chrome's inspector. </p>\n\n<ol>\n<li>Open the inspector (mac: <kbd>cmd</kbd> + <kbd>alt</kbd> + <kbd>j</kbd> , windows: <kbd>ctrl</kbd> + <kbd>shift</kbd> + <kbd>j</kbd>) (source: <a href=\"https://developers.google.com/chrome-developer-tools/docs/shortcuts\">google</a>)</li>\n<li>Click on the settings icon (the gear \u2699 icon, lowest right corner)</li>\n<li>Select \"Overrides\", turn on Emulation if it's not already.</li>\n<li>Hit the <kbd>Esc</kbd> key to open the drawer</li>\n<li><p>Click into Emulation, then Screen. At the bottom is CSS Media</p>\n\n<p><img src=\"http://i.stack.imgur.com/2lx0O.png\" alt=\"enter image description here\"></p></li>\n</ol>\n\n<p>This should do the trick.</p>\n",
                    "is_accepted": false,
                    "score": 163
                },
                {
                    "body": "<p>Following up to the answer by rflnogueira, the current Chrome settings (40.0.*) will look like below:</p>\n\n<p><img src=\"http://i.stack.imgur.com/B23vx.png\" alt=\"chrome print css emulation\"></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've recently been working on a print stylesheet for a website, and I realized that I was at a loss for effective ways to tweak it. It's one thing to have a reload cycle for working on the on-screen layout:</p>\n\n<ul>\n<li>change code</li>\n<li>command-tab</li>\n<li>reload</li>\n</ul>\n\n<p>but that whole process gets much more arduous when you're trying to print:</p>\n\n<ul>\n<li>change code</li>\n<li>command-tab</li>\n<li>reload</li>\n<li>print</li>\n<li>squint at print-preview image</li>\n<li>open PDF in Preview for further inspection</li>\n</ul>\n\n<p>Are there tools I'm missing out on here? Does WebKit's inspector have a \"pretend this is paged media\" checkbox? Is there some magic that Firebug (<em>shudder</em>) can do?</p>\n",
            "last_activity_date": 1423760732,
            "question_id": 2452713,
            "score": 123,
            "tags": [
                "css",
                "printing",
                "firebug",
                "google-chrome-devtools",
                "web-inspector"
            ],
            "title": "Suggestions for debugging print stylesheets?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It tells the browser to read the css file as UTF-8. This is handy if you CSS contains unicode characters and not only ASCII.</p>\n\n<p>Using it in the meta tag is fine, but only for pages that include that meta tag.</p>\n\n<p>Read about the rules for character set resolution of CSS files at the <a href=\"http://www.w3.org/TR/CSS2/syndata.html#charset\">w3c spec</a> for CSS 2.</p>\n",
                    "is_accepted": true,
                    "score": 79
                },
                {
                    "body": "<p>This is useful in contexts where the encoding is not told per HTTP header or other meta data, e.g. the local file system.</p>\n\n<p>Imagine the following stylesheet:</p>\n\n<pre><code>[rel=\"external\"]::after\n{\n    content: ' \u2197';\n}\n</code></pre>\n\n<p>If a reader saves the file to a hard drive and you omit the <code>@charset</code> rule, most browsers will read it in the OS\u2019 locale encoding, e.g. Windows-1252, and insert \u00e2\u2020\u2014 instead of an arrow.</p>\n\n<p>Unfortunately, you cannot rely on this mechanism as the support is rather \u2026 rare.\nAnd remember that on the net an HTTP header will always override the <code>@charset</code> rule.</p>\n\n<p>The correct <strong>rules to determine the character set of a stylesheet</strong> are in order of priority:</p>\n\n<ol>\n<li>HTTP Charset header.</li>\n<li>Byte Order Mark.</li>\n<li>The first <code>@charset</code> rule.</li>\n<li>UTF-8. </li>\n</ol>\n\n<p>The last rule is the weakest, it <em>will</em> fail in some browsers.<br>\nThe <code>charset</code> attribute in <code>&lt;link rel='stylesheet' charset='utf-8'&gt;</code> is obsolete in <a href=\"http://www.w3.org/TR/html5/obsolete.html#attr-link-charset\">HTML 5</a>.<br>\nWatch out for conflict between the different declarations. They are not easy to debug.</p>\n\n<h3>Recommended reading</h3>\n\n<ul>\n<li>Russ Rolfe: <a href=\"http://www.w3.org/International/questions/qa-css-charset.en.php\">Declaring character encodings in CSS</a></li>\n<li>IANA: <a href=\"http://www.iana.org/assignments/character-sets\">Official names for character sets</a> \u2013 other names are not allowed; use the <em>preferred name</em> for <code>@charset</code> if more than one name is registered for the same encoding.</li>\n<li>MDN: <a href=\"https://developer.mozilla.org/en/CSS/@charset\"><code>@charset</code></a>. There is a support table. I do not trust this. :)</li>\n<li><a href=\"http://test.csswg.org/suites/css2.1/20110323/html4/at-charset-024.htm\">Test case</a> from the CSS WG.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 100
                },
                {
                    "body": "<p>One reason to always include a character set specification on every page containing text is to avoid cross site scripting vulnerabilities. In most cases the UTF-8 character set is the best choice for text, including HTML pages.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're putting a &lt;meta&gt; tag in your css files, you're doing something wrong. The &lt;meta&gt; tag belongs in your <em>html</em> files, and tells the browser how the html is encoded, it doesn't say anything about the css, which is a separate file. You could conceivably have completely different encodings for your html and css, although I can't imagine this would be a good idea.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've been seeing this instruction as the very first line of numerous css files that have been turned over to me.  </p>\n\n<pre><code>@charset \"UTF-8\";\n</code></pre>\n\n<p>What does it do and is this specification necessary?  </p>\n\n<p>Also, if I include this meta tag in my \"head\" tag would that eliminate the need to have it also present within my css files?</p>\n\n<pre><code>&lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"&gt;\n</code></pre>\n",
            "last_activity_date": 1391968368,
            "question_id": 2526033,
            "score": 105,
            "tags": [
                "css"
            ],
            "title": "Why specify @charset &quot;UTF-8&quot; in your css file"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You are not interested in a lot of \"solutions\" to your problem. I do not think there really is a good way to do what you want to do. Anything you insert using <code>:after</code> and <code>content</code> has exactly the same syntactic and semantic validity it would have done if you had just written it in there yourself.</p>\n\n<p>The tools CSS provide work. You should just float the <code>li</code>s and then <code>clear: left</code> when you want to start a new line, as you have mentioned:</p>\n\n<p>See an example: <a href=\"http://jsfiddle.net/marcuswhybrow/YMN7U/5/\">http://jsfiddle.net/marcuswhybrow/YMN7U/5/</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I've been able to make it work on inline LI elements. Unfortunately, it does not work if the LI elements are inline-block:</p>\n\n<p><em><strong>Live demo:</em></strong> <a href=\"http://jsfiddle.net/dWkdp/\">http://jsfiddle.net/dWkdp/</a></p>\n\n<p>Or the cliff notes version:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>li { display:inline; }\nli:nth-child(3):after { content:\"\\A\"; white-space:pre; }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 159
                },
                {
                    "body": "<p>When rewriting the html is allowed, you can nest <code>&lt;ul&gt;</code>s within the <code>&lt;ul&gt;</code> and just let the inner <code>&lt;li&gt;</code>s display as inline-block. This would also semantically make sense IMHO, as the grouping also is reflected within the html.</p>\n\n<hr>\n\n<pre><code>&lt;ul&gt;\n    &lt;li&gt;\n        &lt;ul&gt;\n            &lt;li&gt;Item 1&lt;/li&gt;\n            &lt;li&gt;Item 2&lt;/li&gt;\n            &lt;li&gt;Item 3&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;ul&gt;\n            &lt;li&gt;Item 4&lt;/li&gt;\n            &lt;li&gt;Item 5&lt;/li&gt;\n            &lt;li&gt;Item 6&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<hr>\n\n<pre><code>li li { display:inline-block; }\n</code></pre>\n\n<hr>\n\n<p><em>Demo:</em> <a href=\"http://jsfiddle.net/fabb/scKVp/1/\" rel=\"nofollow\">http://jsfiddle.net/fabb/scKVp/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>An easy way to split lists into rows is by floating the individual list items and then the item that you want to go to the next line you can clear the float.</p>\n\n<p>for example</p>\n\n<pre><code>&lt;li style=\"float: left; display: inline-block\"&gt;&lt;/li&gt;\n&lt;li style=\"float: left; display: inline-block\"&gt;&lt;/li&gt;\n&lt;li style=\"float: left; display: inline-block\"&gt;&lt;/li&gt;\n\n&lt;li style=\"float: left; display: inline-block; clear: both\"&gt;&lt;/li&gt; --- this will start on a new line\n&lt;li style=\"float: left; display: inline-block\"&gt;&lt;/li&gt;\n&lt;li style=\"float: left; display: inline-block\"&gt;&lt;/li&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I know you didn't want to use floats and the question was just theory but in case anyone finds this useful, here's a solution using floats.</p>\n\n<p>Add a class of left to your <code>li</code> elements that you want to float:</p>\n\n<pre><code>&lt;li class=\"left\"&gt;&lt;img src=\"http://phrogz.net/tmp/alphaball.png\"&gt;Smells Good&lt;/li&gt;\n</code></pre>\n\n<p>and amend your CSS as follows:</p>\n\n<pre><code>li { text-align:center; float: left; clear: left; padding:0.1em 1em }\n.left {float: left; clear: none;}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/chut319/xJ3pe/\" rel=\"nofollow\">http://jsfiddle.net/chut319/xJ3pe/</a></p>\n\n<p>You don't need to specify widths or inline-blocks and works as far back as IE6.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Maybe it's is completely possible with only CSS but I prefer to avoid \"float\" as much as I can because it interferes with it's parent's height.</p>\n\n<p>If you are using jQuery, you can create a simple `wrapN` plugin that is similar to `wrapAll` except it only wraps \"N\" elements and then breaks and wraps the next \"N\" elements using a loop. Then set your wrappers class to `display: block;`.</p>\n\n<pre><code>(function ($) {\n    $.fn.wrapN = function (wrapper, n, start) {\n        if (wrapper === undefined || n === undefined) return false;\n        if (start === undefined) start = 0;\n        for (var i = start; i &lt; $(this).size(); i += n)\n           $(this).slice(i, i + n).wrapAll(wrapper);\n        return this;\n    };\n}(jQuery));\n</code></pre>\n\n<p></p>\n\n<pre><code>$(document).ready(function () {\n    $(\"li\").wrapN(\"&lt;span class='break' /&gt;\", 3);\n});\n</code></pre>\n\n<p></p>\n\n<p>Here is a JSFiddle of the finished product:</p>\n\n<p><a href=\"http://jsfiddle.net/dustinpoissant/L79ahLoz/\" rel=\"nofollow\">http://jsfiddle.net/dustinpoissant/L79ahLoz/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Let's say I have this HTML:</p>\n\n<pre><code>&lt;h3&gt;Features&lt;/h3&gt;\n&lt;ul&gt;\n    &lt;li&gt;&lt;img src=\"alphaball.png\"&gt;Smells Good&lt;/li&gt;\n    &lt;li&gt;&lt;img src=\"alphaball.png\"&gt;Tastes Great&lt;/li&gt;\n    &lt;li&gt;&lt;img src=\"alphaball.png\"&gt;Delicious&lt;/li&gt;\n    &lt;li&gt;&lt;img src=\"alphaball.png\"&gt;Wholesome&lt;/li&gt;\n    &lt;li&gt;&lt;img src=\"alphaball.png\"&gt;Eats Children&lt;/li&gt;\n    &lt;li&gt;&lt;img src=\"alphaball.png\"&gt;Yo' Mama&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>and this CSS:</p>\n\n<pre><code>li { text-align:center; display:inline-block; padding:0.1em 1em }\nimg { width:64px; display:block; margin:0 auto }\n</code></pre>\n\n<p>The result can be seen here: <a href=\"http://jsfiddle.net/YMN7U/1/\">http://jsfiddle.net/YMN7U/1/</a></p>\n\n<p>Now imagine that I want to break this into three columns, the equivalent of injecting a <code>&lt;br&gt;</code> after the third <code>&lt;li&gt;</code>. <em>(Actually doing that would be semantically and syntactically invalid.)</em></p>\n\n<p>I know how to select the third <code>&lt;li&gt;</code> in CSS, but how do I force a line break after it? This does not work:</p>\n\n<pre><code>li:nth-child(4):after { content:\"xxx\"; display:block }\n</code></pre>\n\n<p><em>I also know that this particular case is possible by using <code>float</code> instead of <code>inline-block</code>, but I am not interested in solutions using <code>float</code>. I also know that with fixed-width blocks this is possible by setting the width on the parent <code>ul</code> to about 3x that width; I am not interested in this solution. I also know that I could use <code>display:table-cell</code> if I wanted real columns; I am not interested in this solution. I am interested in the possibility of forcing a break inside inline content.</em></p>\n\n<p><strong>Edit</strong>: To be clear, I am interested in 'theory', not the solution to a particular problem. <em>Can CSS inject a line break in the middle of <code>display:inline(-block)?</code> elements, or is it impossible?</em> If you are certain that it is impossible, that is an acceptable answer.</p>\n",
            "last_activity_date": 1409687156,
            "question_id": 4609279,
            "score": 105,
            "tags": [
                "html",
                "css"
            ],
            "title": "CSS to line break before/after a particular `inline-block` item"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>There is not really much difference in adding a css stylesheet in the head versus using the import functionality. Using <code>@import</code> is generally used for chaining stylesheets so that one can be easily extended. It could be used to easily swap different color layouts for example in conjunction with some general css definitions. I would say the main advantage / purpose is extensibility.</p>\n\n<p>I agree with xbonez comment as well in that portability and maintainability are added benefits.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I think the key in this are the two reasons why you are actually writing multiple CSS style sheets.</p>\n\n<ol>\n<li>You write multiple sheets because the different pages of your website require different CSS definitions. Or at least not all of them require all the CSS definitions one other pages require. So you split up the CSS files in order to optimize what sheets are load on the different pages and avoid loading too many CSS definitions.</li>\n<li>The second reason that comes to mind is that your CSS is getting that large that is becomes clumsy to handle and in order to make it easier to maintain the large CSS file you split them up into multiple CSS files.</li>\n</ol>\n\n<p>For the first reason the additional <code>&lt;link&gt;</code> tag would apply as this allows you to load different set of CSS files for different pages.</p>\n\n<p>For the second reason the <code>@import</code> statement appears as the most handy because you get multiple CSS files but the files loaded are always the same.</p>\n\n<p>From the perspective of the loading time there is no different. The browser has to check and download the seperated CSS files no matter how they are implemented.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>From a page speed standpoint, <code>@import</code> from a CSS file should almost never be used, as it can prevent stylesheets from being downloaded concurrently. For instance, if stylesheet A contains the text:</p>\n\n<pre><code>@import url(\"stylesheetB.css\");\n</code></pre>\n\n<p>then the download of the second stylesheet may not start until the first stylesheet has been downloaded. If, on the other hand, both stylesheets are referenced in <code>&lt;link&gt;</code> elements in the main HTML page, both can be downloaded at the same time. If both stylesheets are always loaded together, it can also be helpful to simply combine them into a single file.</p>\n\n<p>There are occasionally situations where <code>@import</code> is appropriate, but they are generally the exception, not the rule.</p>\n",
                    "is_accepted": true,
                    "score": 117
                },
                {
                    "body": "<p>It is best to NOT use <code>@import</code> to include CSS in a page for speed reasons. See this excellent article to learn why not: <a href=\"http://www.stevesouders.com/blog/2009/04/09/dont-use-import/\">http://www.stevesouders.com/blog/2009/04/09/dont-use-import/</a></p>\n\n<p>Also it is often harder to minify and combine css files that are served via the @import tag, because minify scripts cannot \"peel out\" the @import lines from other css files. When you include them as &lt;link tags you can use existing minify php/dotnet/java modules to do the minification.</p>\n\n<p>So: use <code>&lt;link /&gt;</code> instead of <code>@import</code>.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>using the link method, the stylesheets are loaded parallel (faster and better), and nearly all browsers support link</p>\n\n<p>import loads any extra css files one-by-one (slower), and could give you Flash Of Unstyled Content</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>They are very similar. Some may argue that @import is more maintainable. However, each @import will cost you a new HTTP request in the same fashion as using the \"link\" method. So in the context of speed it is no faster. And as \"duskwuff\" said, it doesn't load simultaneously which is a downfall. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I experienced a \"high peak\" of linked stylesheets you can add. While adding any number of linked Javascript wasn't a problem for my free host provider, after doubling number of external stylesheets I got a crash/slow down.\nAnd the right code example is:</p>\n\n<pre><code>@import 'stylesheetB.css';\n</code></pre>\n\n<p>So, I find it useful for having a good mental map, as Nitram mentioned, while still at hard-coding the design.\nGodspeed.\nAnd I pardon for English grammatical mistakes, if any.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One place where I use @import is when I'm doing two versions of a page, English and French.  I'll build out my page in English, using a main.css.  When I build out the French version, I'll link to a French stylesheet (main_fr.css).  At the top of the French stylesheet, I'll import the main.css, and then redefine specific rules for just the parts I need different in the French version.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>@Nebo Iznad Mi\u0161o Grgur</p>\n\n<p>The following are all correct ways to use @import</p>\n\n<pre><code>@import url(\"fineprint.css\") print;\n@import url(\"bluish.css\") projection, tv;\n@import 'custom.css';\n@import url(\"chrome://communicator/skin/\");\n@import \"common.css\" screen, projection;\n@import url('landscape.css') screen and (orientation:landscape);\n</code></pre>\n\n<p>source: <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@import\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/CSS/@import</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use @import in your CSS if you are using a CSS RESET, like Eric Meyer's Reset CSS v2.0, so it does it's job before applying your CSS, thus preventing conflicts.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>From a page speed standpoint, @import from a CSS file should almost never be used, as it can prevent stylesheets from being downloaded concurrently. For instance, if stylesheet A contains the text:\n@import url(stylesheetB.css);</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm going to play devil's advocate, because I hate it when people agree too much.</p>\n\n<h3>1. If you need a stylesheet that depends on another one, use @import. Do the optimization in a separate step.</h3>\n\n<p>There are two variables you're optimizing for at any given time - the performance of your code, and the <em>performance of the developer</em>. In many, if not a majority of cases, it's more important to <em>make the developer more efficient, and only then make the code more performant</em>.</p>\n\n<p>If you have one stylesheet that <em>depends</em> on another, the most logical thing to do is to put them in two separate files and use @import. <em>That will make the most logical sense to the next person who looks at the code.</em></p>\n\n<blockquote>\n  <p>(When would such a dependency happen? It's pretty rare, in my opinion\n  - usually one stylesheet is enough. However, there are some logical places to put things in different CSS files:)</p>\n  \n  <ul>\n  <li>Theming: If you have different color schemes or themes for the same page, they may share some, but not all components.</li>\n  <li>Subcomponents: A contrived example - say you have a restaurant page that includes a menu. If the menu is very different from the rest of\n  the page, it'll be easier to maintain if it's in its own file.</li>\n  </ul>\n</blockquote>\n\n<p>Usually stylesheets are independent, so it's reasonable to include them all using <code>&lt;link href&gt;</code>. However, if they are a dependent hierarchy, you should do the thing that makes the most logical sense to do.</p>\n\n<p><strong>Python uses import; C uses include; JavaScript has require. CSS has import; when you need it, use it!</strong></p>\n\n<h3>2. Once you get to the point where the site needs to scale, concatenate all the CSS.</h3>\n\n<p>Multiple CSS requests of <strong>any</strong> kind - whether through links or through @imports - <a href=\"https://developers.google.com/speed/docs/best-practices/rtt#CombineExternalCSS\">are bad practice</a> for high performance web sites. Once you're at the point where optimization matters, all your CSS should be flowing through a minifier. <a href=\"https://github.com/gruntjs/grunt-contrib-cssmin/pull/25\">Cssmin</a> combines import statements; as @Brandon points out, grunt has multiple options for doing so as well. (<a href=\"http://stackoverflow.com/questions/787789/any-recommendations-for-a-css-minifier\">See also this question</a>).</p>\n\n<p>Once you're at the minified stage, <code>&lt;link&gt;</code> is faster, as people have pointed out, so at most link to a few stylesheets and don't @import any if at all possible.</p>\n\n<p><strong>Before the site reaches production scale though, it's more important that the code is organized and logical, than that it goes slightly faster.</strong></p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Quoted from <a href=\"http://webdesign.about.com/od/beginningcss/f/css_import_link.htm\" rel=\"nofollow\">http://webdesign.about.com/od/beginningcss/f/css_import_link.htm</a></p>\n\n<blockquote>\n  <p>The main purpose of @import method is to use multiple style sheets on a page, but only one link in your &lt; head >. For example, a corporation might have a global style sheet for every page on the site, with sub-sections having additional styles that only apply to that sub-section. By linking to the sub-section style sheet and importing the global styles at the top of that style sheet, you don't have to maintain a gigantic style sheet with all the styles for the site and every sub-section. The only requirement is that any @import rules need to come before the rest of your style rules. And remember that inheritance can still be a problem.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think @import is most useful when writing code for multiple devices. Include a conditional statement to only include the style for the device in question, then only one sheet gets loaded. You can still use the link tag to add any common style elements.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is almost no reason to use @import as it loads every single imported CSS file separately and can slow your site down significantly. If you are interested in the optimal way to deal with CSS(when it comes to page speed), this is how you should deal with <strong>all</strong> your CSS code:</p>\n\n<ul>\n<li><strong>Open all your CSS files and copy the code of every single file</strong> </li>\n<li><strong>Paste all the code in between a single STYLE tag in the HTML header of your page</strong></li>\n<li><strong>Never use CSS @import or separate CSS files to deliver CSS unless you have a large amount of code or there is a specific need to.</strong></li>\n</ul>\n\n<p>More detailed information here: <a href=\"http://www.giftofspeed.com/optimize-css-delivery/\" rel=\"nofollow\">http://www.giftofspeed.com/optimize-css-delivery/</a></p>\n\n<p>The reason the above works best is because it creates less requests for the browser to deal with and it can immediately start rendering the CSS instead of downloading separate files.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Basically I am wondering what is the advantage / purpose of using <code>@import</code> to import stylesheets into an existing stylesheet versus just adding another ...</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"\" /&gt;\n</code></pre>\n\n<p>to the head of the document?</p>\n",
            "last_activity_date": 1415807212,
            "question_id": 10036977,
            "score": 82,
            "tags": [
                "html",
                "css"
            ],
            "title": "Best way to include CSS? Why use @import?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Definition lists have semantic meaning. They are for listing terms (&lt;dt&gt;) and their associated definitions (&lt;dd&gt;). Therefore in this case a &lt;dl&gt; portrays the semantic meaning of the content more accurately than a table.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>This is a subset of the issue of semantics vs formatting.  A definition list says what they are, a list of related key/value attributes, but does not say how to display it.  A table says more about layout and how to display the data then what the data inside is.  It limits how the list can be formatted both by overspecifying the format and by underspecifying what it is.</p>\n\n<p>HTML, historically, has mixed up semantics with formatting.  Font tags and tables being the worst examples.  The move to CSS for the formatting and the stripping of a lot of the pure formatting tags out of XHTML restores, somewhat, the separation of meaning from formatting.  By separating formatting into CSS you can display the same HTML in many different ways reformatting it for a wide browser, a small mobile browser, printing, plain text, etc...</p>\n\n<p>For enlightenment, visit the <a href=\"http://www.csszengarden.com/\">CSS Zen Garden</a>.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Part of the reason for using &lt;dl> for marking up the form is that it is much easier to do fancy CSS layout tricks with a &lt;dl> than a &lt;table>.  The other part is that it better reflects the semantics of the form (a list of label/field pairs) than a table would.</p>\n\n<p>Ok, table hate is part of it too.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Sometimes, a definition list simply presents the information in the way that's desired, whilst a table does not. Personally, I would probably not use a definition list for a form, unless it suits the style of the site.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I guess it's up to you to determine the semantics, but in my opinion:</p>\n\n<p>Rather than a definition list, form-related properties should be used.  </p>\n\n\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;form&gt;\n  &lt;label for=\"fullname\"&gt;Full Name:&lt;/label&gt;\n  &lt;input type=\"text\" name=\"fullname\" id=\"fullname\"&gt;\n  &lt;label for=\"email\"&gt;Email Address:&lt;/label&gt;\n  &lt;input type=\"text\" name=\"email\" id=\"email\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>The \"for\" attribute in the &lt;label&gt; tag should reference the \"id\" attribute of a &lt;input&gt; tag.  Note that when labels are associated with fields, clicking the label will put the associated field in focus.</p>\n\n<p>You can also use tags like &lt;fieldset&gt; to cluster sections of a form together and &lt;legend&gt; to caption a fieldset.</p>\n",
                    "is_accepted": true,
                    "score": 80
                },
                {
                    "body": "<p>In this case, labels and inputs <strong>are</strong> your semantic meaning and they stand on their own.</p>\n\n<p>Imagine you had to read the web page, out load, to a blind person. You wouldn't say \"Okay, I have a <em>list of definitions</em> here. The first <em>term</em> is 'name'.\" Instead, you'd probably say \"Okay we have a <em>form</em> here and it looks like the there's a <em>set of fields</em>, the first <em>input</em> is <em>labeled</em> 'name'.\"</p>\n\n<p>This is why the semantic web is important. It allows the content of the page to represent itself accurately to both humans and technology. For example, there are <a href=\"http://agilewebsolutions.com/products/1Password\">many</a> <a href=\"http://windowshelp.microsoft.com/Windows/en-us/help/4e72b6fb-b9ec-45f0-9263-bceb34f47e521033.mspx\">browser</a> <a href=\"https://addons.mozilla.org/en-US/firefox/addon/4775\">plugins</a> that help people quickly fill out web forms with their standard information (name, phone number, etc). These rarely work well if inputs don't have associated labels.</p>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I've succesfully used the technique outlined in <a href=\"http://www.sitepoint.com/fancy-form-design-css/\">this article</a> several times.</p>\n\n<p>I agree with sjstrutt that you should use form reated tags like <code>label</code> and <code>form</code> in you forms, but the HTML outlined in his example, will often lack some code you can use as \"hooks\" for styling your form with CSS.</p>\n\n<p>As a consequense of this I markup my forms like this:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;form name=\"LoginForm\" action=\"thispage\"&gt;\n    &lt;fieldset&gt;\n        &lt;legend&gt;Form header&lt;/legend&gt;\n        &lt;ul&gt;\n            &lt;li&gt;\n                &lt;label for=\"UserName\"&gt;Username: &lt;/label&gt;\n                &lt;input id=\"UserName\" name=\"UserName\" type=\"text\" /&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;label for=\"Password\"&gt;Password: &lt;/label&gt;\n                &lt;input id=\"Password\" name=\"Password\" type=\"text\" /&gt;\n            &lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/fieldset&gt;\n    &lt;fieldset class=\"buttons\"&gt;\n        &lt;input class=\"submit\" type=\"submit\" value=\"Login\" /&gt;\n    &lt;/fieldset&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>This approach leaves me with a comprehensible set of tags, which contains enough hooks to style the forms in a lot of different ways.</p>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>Definition lists are almost never used because semantically speaking they rarely show up on the internet.</p>\n\n<p>In your case the correct code has been posted:</p>\n\n\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;form&gt;\n    &lt;label for=\"fullname\"&gt;Full Name:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"fullname\" id=\"fullname\"&gt;\n    &lt;label for=\"email\"&gt;Email Address:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"email\" id=\"email\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>You are creating a form with inputs and labels for said inputs, you are not setting forth a list of words and defining them.</p>\n\n<p>If you are doing some kind of help section then definition lists would be appropriate, e.g.:</p>\n\n\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;dl&gt;\n    &lt;dt&gt;HTML&lt;/dt&gt;\n    &lt;dd&gt;Hypertext Markup Language&lt;/dd&gt;\n    &lt;dt&gt;CSS&lt;/dt&gt;\n    &lt;dd&gt;Cascade Stylesheets&lt;/dd&gt;\n    &lt;dt&gt;PHP&lt;/dt&gt;\n    &lt;dd&gt;Hypertext Preprocessor&lt;/dd&gt;\n&lt;/dl&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Virtually all forms <em>are</em> tabular. Do you ever see a form that's not tabular? The guidelines I've read suggested using the table tag for tabular presentation and that's exactly what forms, calendars, and spreadsheets are for. And now they're using DD and DT instead of tables? What is the Web coming to?! :) </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Using <code>dl</code> <code>dt</code>,<code>dd</code> for forms is just another way to structure your forms, along with <code>ul</code> <code>li</code>, <code>div</code> and <code>table</code>. You can always put a <code>label</code> into <code>dt</code>. This way you keep the form specific element <code>label</code> in place.</p>\n\n\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;form action=\"/login\" method=\"post\"&gt; \n    &lt;dl&gt;\n        &lt;dt&gt;&lt;label for=\"login\"&gt;Login&lt;/label&gt;&lt;/dt&gt;\n        &lt;dd&gt;&lt;input type=\"text\" name=\"login\" id=\"login\"/&gt;&lt;/dd&gt;\n        &lt;dt&gt;&lt;label for=\"password\"&gt;Password&lt;/label&gt;&lt;/dt&gt;\n        &lt;dd&gt;&lt;input type=\"password\" name=\"password\" id=\"password\"/&gt;&lt;/dd&gt;  \n        &lt;dd&gt;&lt;input type=\"submit\" value=\"Add\"/&gt;&lt;/dd&gt;\n    &lt;/dl&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Table List Data will be like this:-</p>\n\n<p><img src=\"http://i.stack.imgur.com/cKa2U.jpg\" alt=\"enter image description here\"></p>\n\n<p>And you can use DL, DT, DD Tags List Data like this:-</p>\n\n<p><img src=\"http://i.stack.imgur.com/4IL5O.jpg\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've come across a few examples recently that do things like:</p>\n\n\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;dl&gt;\n  &lt;dt&gt;Full Name:&lt;/dt&gt;\n  &lt;dd&gt;&lt;input type=\"text\" name=\"fullname\"&gt;&lt;/dd&gt;\n  &lt;dt&gt;Email Address:&lt;/dt&gt;\n  &lt;dd&gt;&lt;input type=\"text\" name=\"email\"&gt;&lt;/dd&gt;\n&lt;/dl&gt;\n</code></pre>\n\n<p>for doing HTML forms.  Why is that?  What is the advantage over using tables?</p>\n",
            "last_activity_date": 1417538242,
            "question_id": 519234,
            "score": 64,
            "tags": [
                "html",
                "css",
                "forms"
            ],
            "title": "Why use definition lists (DL,DD,DT) tags for HTML forms instead of tables?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Syntax</p>\n\n<p>rotate3d(x, y, z, a)</p>\n\n<p>Values</p>\n\n<p>x\n    Is a  describing the x-coordinate of the vector denoting the axis of rotation.\ny\n    Is a  describing the y-coordinate of the vector denoting the axis of rotation.\nz\n    Is a  describing the z-coordinate of the vector denoting the axis of rotation.\na\n    Is an  representing the angle of the rotation. A positive angle denotes a clockwise rotation, a negative angle a counter-clockwise one.</p>\n\n<p>Like in :</p>\n\n<pre><code>.will-distort{\n    transform:rotate3d(10, 10, 10, 45deg);\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/wvYKZ/\">Fiddled here</a></p>\n\n<p><a href=\"http://caniuse.com/#feat=transforms3d\">Caniuse it here</a></p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ie/hh673529%28v=vs.85%29.aspx#the_ms_transform_style_property\">More docs about it</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>The exact value is <code>rotate3d(133,32,58,58deg)</code> </p>\n\n<p>See the <a href=\"http://jsfiddle.net/Qqe7j/\" rel=\"nofollow\">fiddle</a> (For chrome and Safari, using -webkit-transform)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><code>rotateX(50deg)</code> is equivalent to <code>rotate3d(1, 0, 0, 50deg)</code></p>\n\n<p><code>rotateY(20deg)</code> is equivalent to <code>rotate3d(0, 1, 0, 20deg)</code></p>\n\n<p><code>rotateZ(15deg)</code> is equivalent to <code>rotate3d(0, 0, 1, 15deg)</code></p>\n\n<p>So...</p>\n\n<p><code>rotateX(50deg) rotateY(20deg) rotateZ(15deg)</code></p>\n\n<p>is equivalent to</p>\n\n<p><code>rotate3d(1, 0, 0, 50deg) rotate3d(0, 1, 0, 20deg) rotate3d(0, 0, 1, 15deg)</code></p>\n\n<hr>\n\n<p>For a generic <code>rotate3d(x, y, z, \u03b1)</code>, you have the matrix</p>\n\n<p><img src=\"http://i.stack.imgur.com/B5n9T.png\" alt=\"generic rotate matrix\"></p>\n\n<p>where</p>\n\n<p><img src=\"http://i.stack.imgur.com/YWRI3.png\" alt=\"explanation\"></p>\n\n<hr>\n\n<p>You now get the matrices for each of the 3 <code>rotate3d</code> transforms and you multiply them. And the resulting matrix is the matrix corresponding to the resulting single <code>rotate3d</code>. Not sure how to easy it is to extract the values for <code>rotate3d</code> out of it, but it's sure easy to extract those for a single <code>matrix3d</code>.</p>\n\n<hr>\n\n<p>In the first case (<code>rotateX(50deg)</code> or <code>rotate3d(1, 0, 0, 50deg)</code>), you have:</p>\n\n<p><code>x = 1</code>, <code>y = 0</code>, <code>z = 0</code>, <code>\u03b1 = 50deg</code></p>\n\n<p>So the first row of the matrix in this case is <code>1 0 0 0</code>.</p>\n\n<p>The second one is <code>0 cos(50deg) -sin(50deg) 0</code>.</p>\n\n<p>The third one <code>0 sin(50deg) cos(50deg) 0</code>.</p>\n\n<p>And the fourth one is obviously <code>0 0 0 1</code>.</p>\n\n<hr>\n\n<p>In the second case, you have <code>x = 0</code>, <code>y = 1</code>, <code>z = 0</code>, <code>\u03b1 = 20deg</code>.</p>\n\n<p>First row: <code>cos(20deg) 0 sin(20deg) 0</code>.</p>\n\n<p>Second row: <code>0 1 0 0</code>.</p>\n\n<p>Third row: <code>-sin(20) 0 cos(20deg) 0</code>.</p>\n\n<p>Fourth: <code>0 0 0 1</code></p>\n\n<hr>\n\n<p>In the third case, you have <code>x = 0</code>, <code>y = 0</code>, <code>z = 1</code>, <code>\u03b1 = 15deg</code>.</p>\n\n<p>First row: <code>cos(15deg) -sin(15deg) 0 0</code>.</p>\n\n<p>Second row <code>sin(15deg) cos(15deg) 0 0</code>.</p>\n\n<p>And the third and the fourth row are <code>0 0 1 0</code> and <code>0 0 0 1</code> respectively.</p>\n\n<hr>\n\n<p><em><strong>Note</strong>: you may have noticed that the signs of the sin values for the rotateY transform are different than for the other two transforms. It's not a computation mistake. The reason for this is that, for the screen, you have the y-axis pointing down, not up.</em></p>\n\n<hr>\n\n<p>So these are the three <code>4x4</code> matrices that you need to multiply in order to get the <code>4x4</code> matrix for the resulting single <code>rotate3d</code> transform. As I've said, I'm not sure how easy it can be to get the 4 values out, but the 16 elements in the 4x4 matrix are exactly the 16 parameters of the <code>matrix3d</code> equivalent of the chained transform.</p>\n\n<hr>\n\n<p><strong>EDIT</strong>:</p>\n\n<p>Actually, it turns out it's pretty easy... You compute the trace (sum of diagonal elements) of the matrix for the <code>rotate3d</code> matrix.</p>\n\n<p><code>4 - 2*2*(1 - cos(\u03b1))/2 = 4 - 2*(1 - cos(\u03b1)) = 2 + 2*cos(\u03b1)</code></p>\n\n<p>You then compute the trace for the product of the three <code>4x4</code> matrices, you equate the result with <code>2 + 2*cos(\u03b1)</code> you extract <code>\u03b1</code>. Then you compute <code>x</code>, <code>y</code>, <code>z</code>.</p>\n\n<p>In this particular case, if I computed correctly, the trace of the matrix resulting from the product of the three <code>4x4</code> matrices is going to be:</p>\n\n<pre><code>T = \ncos(20deg)*cos(15deg) + \ncos(50deg)*cos(15deg) - sin(50deg)*sin(20deg)*cos(15deg) + \ncos(50deg)*cos(20deg) + \n1\n</code></pre>\n\n<p>So <code>cos(\u03b1) = (T - 2)/2 = T/2 - 1</code>, which means that <code>\u03b1 = acos(T/2 - 1)</code>.</p>\n",
                    "is_accepted": true,
                    "score": 183
                },
                {
                    "body": "<p>Depends on what you are trying to do, this 'hack' could help you. Let's say you are doing animation, and you want add transformation after transformation and so on, and you don't want the CSS to look like it's doing 100's of transformations:</p>\n\n<p>This works in chrome:\n 1. Apply whatever transform you want to an element. \n 2. Next time you want to add a transform, add it to the computed transform:\n    \"window.getComputedStyle(element).transform\" - but make sure to put the new transform to the left.\n 3. Now your transform would look like \"rotateZ(30deg) matrix3d(......).\n 4. Next time you want to add another transform, repeat the process - Chrome always reduces the transforms to matrix3d notation. </p>\n\n<p>TL;DR- apply whatever transforms you want, and then get the computed matrix3d transformation.</p>\n\n<p>This trick also lets you quickly (that is, without doing any math by yourself) make a functionality that rotates an object with respect to your reference frame in any direction. See the sample below:</p>\n\n<p><strong>EDIT</strong>: I have added xyz translations as well. Using this, it would be very easy to place objects in specific 3d locations with specific orientations in mind. Or...imagine a cube that bounces and changes it's spin axis with each bounce depending on how it lands!</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>\tvar boxContainer = document.querySelector('.translator'),\r\n\t    cube = document.getElementById('cube'),\r\n\t    optionsContainer = document.getElementById('options');\r\n\tvar dims = ['x', 'y', 'z'];\r\n\tvar currentTransform;\r\n\tvar currentTranslate;\r\n\tvar init = function () {\r\n\t    optionsContainer.querySelector('.xRotation input')\r\n\t        .addEventListener('input', function (event) {\r\n\t        if (currentTransform != 'none') {\r\n\t            var newTransform = 'rotateX(' + (360 - event.target.value) + 'deg) ' + currentTransform;\r\n\t        } else {\r\n\t            var newTransform = 'rotateX(' + (360 - event.target.value) + 'deg)';\r\n\t        }\r\n\t        cube.style.transform = newTransform;\r\n\t    }, false);\r\n\r\n\t    optionsContainer.querySelector('.yRotation input')\r\n\t        .addEventListener('input', function (event) {\r\n\t        if (currentTransform != 'none') {\r\n\t            var newTransform = 'rotateY(' + (360 - event.target.value) + 'deg) ' + currentTransform;\r\n\t        } else {\r\n\t            var newTransform = 'rotateY(' + (360 - event.target.value) + 'deg)';\r\n\t        }\r\n\t        cube.style.transform = newTransform;\r\n\t    }, false);\r\n\r\n\t    optionsContainer.querySelector('.zRotation input')\r\n\t        .addEventListener('input', function (event) {\r\n\r\n\t        if (currentTransform != 'none') {\r\n\t            var newTransform = 'rotateZ(' + (360 - event.target.value) + 'deg) ' + currentTransform;\r\n\t        } else {\r\n\t            var newTransform = 'rotateZ(' + (360 - event.target.value) + 'deg)';\r\n\t        }\r\n\t        cube.style.transform = newTransform;\r\n\t    }, false);\r\n\r\n\t    optionsContainer.querySelector('.xTranslation input')\r\n\t        .addEventListener('input', function (event) {\r\n\r\n\t        if (currentTranslate != 'none') {\r\n\t            var newTransform = 'translateX(' + (100 - event.target.value) + 'px) ' + currentTranslate;\r\n\t        } else {\r\n\t            var newTransform = 'translateX(' + (100 - event.target.value) + 'px)';\r\n\t        }\r\n\t        boxContainer.style.transform = newTransform;\r\n\t    }, false);\r\n\r\n\t    optionsContainer.querySelector('.yTranslation input')\r\n\t        .addEventListener('input', function (event) {\r\n\r\n\t        if (currentTranslate != 'none') {\r\n\t            var newTransform = 'translateY(' + (100 - event.target.value) + 'px) ' + currentTranslate;\r\n\t        } else {\r\n\t            var newTransform = 'translateY(' + (100 - event.target.value) + 'px)';\r\n\t        }\r\n\t        boxContainer.style.transform = newTransform;\r\n\t    }, false);\r\n\t    optionsContainer.querySelector('.zTranslation input')\r\n\t        .addEventListener('input', function (event) {\r\n\r\n\t        if (currentTranslate != 'none') {\r\n\t            var newTransform = 'translateZ(' + (500 - event.target.value) + 'px) ' + currentTranslate;\r\n\t        } else {\r\n\t            var newTransform = 'translateZ(' + (500 - event.target.value) + 'px)';\r\n\t        }\r\n\t        boxContainer.style.transform = newTransform;\r\n\t    }, false);\r\n\r\n\r\n\r\nreset();\r\n\r\n\t};\r\n\r\n\tfunction reset() {\r\n\t    currentTransform = window.getComputedStyle(cube).transform;\r\n\t    currentTranslate = window.getComputedStyle(boxContainer).transform;\r\n\t    optionsContainer.querySelector('.xRotation input').value = 360;\r\n\t    optionsContainer.querySelector('.yRotation input').value = 360;\r\n\t    optionsContainer.querySelector('.zRotation input').value = 360;\r\n\t    optionsContainer.querySelector('.xTranslation input').value = 100;\r\n\t    optionsContainer.querySelector('.yTranslation input').value = 100;\r\n\t    optionsContainer.querySelector('.zTranslation input').value = 500;\r\n\r\n\r\n\t}\r\n\r\n\r\n\twindow.addEventListener('DOMContentLoaded', init, false);\r\n\tdocument.addEventListener('mouseup', reset, false);</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.translator\r\n{\r\n\theight: 200px;\r\n\tposition: absolute;\r\n\twidth: 200px;\r\n    transform-style: preserve-3d;\r\n}\r\n.threeSpace\r\n{\r\n\theight: 200px;\r\n\tmoz-perspective: 1200px;\r\n\to-perspective: 1200px;\r\n\tperspective: 200px;\r\n\tposition: absolute;\r\n\ttransform-origin: 50px 50px 100px;\r\n\twebkit-perspective: 1200px;\r\n\twidth: 100px;\r\n    perspective-origin: 100px 25px;\r\n    transform-style: preserve-3d;\r\n}\r\n#pointer{\r\n    position:relative;\r\n    height:2px;\r\n    width:2px;\r\n    top:25px;\r\n    left:100px;\r\n    background:blue;\r\n    z-index:9999;\r\n    \r\n}\r\n\r\n\r\n\r\n#cube\r\n{\r\n\theight: 100%;\r\n\tmoz-transform-origin: 90px 110px 0px;\r\n\tmoz-transform-style: preserve-3d;\r\n\to-transform-origin: 90px 110px 0px;\r\n\to-transform-style: preserve-3d;\r\n\tposition: absolute;\r\n\ttransform-origin: 90px 110px 0px;\r\n\ttransform-style: preserve-3d;\r\n\twebkit-transform-origin: 90px 110px 0px;\r\n\twebkit-transform-style: preserve-3d;\r\n\twidth: 100%;\r\n}\r\n#cube .midPoint{\r\n    position:absolute;\r\n    top:48px;\r\n    left:48px;\r\n    height:1px;\r\n    width:1px;\r\n    background:green;\r\n}\r\n\r\n#cube figure\r\n{\r\n\tborder: 2px solid black;\r\n\tcolor: white;\r\n\tdisplay: block;\r\n\tfont-size: 60px;\r\n\tfont-weight: bold;\r\n\theight: 96px;\r\n\tline-height: 96px;\r\n\tposition: absolute;\r\n\ttext-align: center;\r\n\twidth: 96px;\r\n    /* transform-style: preserve-3d; */\r\n}\r\n#cube .front\r\n{\r\n\tbackground: hsl(0, 100%, 50%);\r\n}\r\n\r\n#cube .back\r\n{\r\n\tbackground: hsl(60, 100%, 50%);\r\n}\r\n#cube .right\r\n{\r\n\tbackground: hsl(120, 100%, 50%);\r\n}\r\n#cube .left\r\n{\r\n\tbackground: hsl(180, 100%, 50%);\r\n}\r\n#cube .top\r\n{\r\n\tbackground: hsl(240, 100%, 50%);\r\n}\r\n#cube .bottom\r\n{\r\n\tbackground: hsl(300, 100%, 50%);\r\n}\r\n#cube .front\r\n{\r\n\tmoz-transform: translateZ(50px);\r\n\to-transform: translateZ(50px);\r\n\ttransform: translateZ(50px);\r\n\twebkit-transform: translateZ(50px);\r\n}\r\n\r\n\r\n\r\n#cube .back\r\n{\r\n\tmoz-transform: rotateX(-180deg) translateZ(50px);\r\n\to-transform: rotateX(-180deg) translateZ(50px);\r\n\ttransform: rotateX(-180deg) translateZ(50px);\r\n\twebkit-transform: rotateX(-180deg) translateZ(50px);\r\n}\r\n#cube .right\r\n{\r\n\tmoz-transform: rotateY(90deg) translateZ(50px);\r\n\to-transform: rotateY(90deg) translateZ(50px);\r\n\ttransform: rotateY(90deg) translateZ(50px);\r\n\twebkit-transform: rotateY(90deg) translateZ(50px);\r\n}\r\n#cube .left\r\n{\r\n\tmoz-transform: rotateY(-90deg) translateZ(50px);\r\n\to-transform: rotateY(-90deg) translateZ(50px);\r\n\ttransform: rotateY(-90deg) translateZ(50px);\r\n\twebkit-transform: rotateY(-90deg) translateZ(50px);\r\n}\r\n#cube .top\r\n{\r\n\tmoz-transform: rotateX(90deg) translateZ(50px);\r\n\to-transform: rotateX(90deg) translateZ(50px);\r\n\ttransform: rotateX(90deg) translateZ(50px);\r\n\twebkit-transform: rotateX(90deg) translateZ(50px);\r\n}\r\n#cube .bottom\r\n{\r\n\tmoz-transform: rotateX(-90deg) translateZ(50px);\r\n\to-transform: rotateX(-90deg) translateZ(50px);\r\n\ttransform: rotateX(-90deg) translateZ(50px);\r\n\twebkit-transform: rotateX(-90deg) translateZ(50px);\r\n}\r\n#options{\r\n    position:absolute;\r\n    width:80%;\r\n    top:40%;\r\n    \r\n    \r\n}\r\n#options input\r\n{\r\n\twidth: 60%;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;body&gt;\r\n    \r\n     &lt;div class=\"threeSpace\"&gt;\r\n         &lt;div id=\"pointer\"&gt;&lt;/div&gt;\r\n    &lt;div class=\"translator\"&gt;\r\n        &lt;div id=\"cube\"&gt;\r\n            &lt;figure class=\"front\"&gt;&lt;div class='midPoint'&gt;&lt;/div&gt;&lt;/figure&gt;\r\n            &lt;figure class=\"back\"&gt;&lt;/figure&gt;\r\n            &lt;figure class=\"right\"&gt;&lt;/figure&gt;\r\n            &lt;figure class=\"left\"&gt;&lt;/figure&gt;\r\n            &lt;figure class=\"top\"&gt;&lt;/figure&gt;\r\n            &lt;figure class=\"bottom\"&gt;&lt;/figure&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;section id=\"options\"&gt;\r\n        &lt;p class=\"xRotation\"&gt;\r\n            &lt;label&gt;xRotation&lt;/label&gt;\r\n            &lt;input type=\"range\" min=\"0\" max=\"720\" value=\"360\" data-units=\"deg\" /&gt;\r\n        &lt;/p&gt;\r\n        &lt;p class=\"yRotation\"&gt;\r\n            &lt;label&gt;yRotation&lt;/label&gt;\r\n            &lt;input type=\"range\" min=\"0\" max=\"720\" value=\"360\" data-units=\"deg\" /&gt;\r\n        &lt;/p&gt;\r\n        &lt;p class=\"zRotation\"&gt;\r\n            &lt;label&gt;zRotation&lt;/label&gt;\r\n            &lt;input type=\"range\" min=\"0\" max=\"720\" value=\"360\" data-units=\"deg\" /&gt;\r\n        &lt;/p&gt;\r\n        &lt;p class=\"xTranslation\"&gt;\r\n            &lt;label&gt;xTranslation&lt;/label&gt;\r\n            &lt;input type=\"range\" min=\"0\" max=\"200\" value=\"100\" data-units=\"deg\" /&gt;\r\n        &lt;/p&gt;\r\n        &lt;p class=\"yTranslation\"&gt;\r\n            &lt;label&gt;yTranslation&lt;/label&gt;\r\n            &lt;input type=\"range\" min=\"0\" max=\"200\" value=\"100\" data-units=\"deg\" /&gt;\r\n        &lt;/p&gt;\r\n        &lt;p class=\"zTranslation\"&gt;\r\n            &lt;label&gt;zTranslation&lt;/label&gt;\r\n            &lt;input type=\"range\" min=\"0\" max=\"1000\" value=\"500\" data-units=\"deg\" /&gt;\r\n        &lt;/p&gt;\r\n    &lt;/section&gt;\r\n&lt;/body&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to combine <code>rotateX(50deg) rotateY(20deg) rotateZ(15deg)</code> in shorthand <code>rotate3d()</code>?</p>\n",
            "last_activity_date": 1425736053,
            "question_id": 15207351,
            "score": 33,
            "tags": [
                "css",
                "css3"
            ],
            "title": "rotate3d shorthand"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>for consistent rendering between new and older browsers, add a double container, the outer with the width, the inner with the border.</p>\n\n<pre><code>&lt;div style=\"width:100px;\"&gt;\n&lt;div style=\"border:2px solid #000;\"&gt;\ncontents here\n&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>this is obviously only if your precise width is more important than having extra markup!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use <code>box-sizing</code> property for this. Like so:</p>\n\n<pre><code>div{\n  box-sizing:border-box;\n  -moz-box-sizing:border-box;\n  -webkit-box-sizing:border-box;\n  width:100px;\n  height:100px;\n  border:1px solid red;\n}\n</code></pre>\n\n<p>Check this example <a href=\"http://jsfiddle.net/yWuhU/\">http://jsfiddle.net/yWuhU/</a></p>\n\n<p>It works on IE8 &amp; above.</p>\n",
                    "is_accepted": true,
                    "score": 182
                },
                {
                    "body": "<p>You can also use box-shadow like this:</p>\n\n<pre><code>div{\n    -webkit-box-shadow:inset 0px 0px 0px 10px #f00;\n    -moz-box-shadow:inset 0px 0px 0px 10px #f00;\n    box-shadow:inset 0px 0px 0px 10px #f00;\n}\n</code></pre>\n\n<p>Example here: <a href=\"http://jsfiddle.net/nVyXS/\">http://jsfiddle.net/nVyXS/</a> (hover to view border)</p>\n\n<p>This works in modern browsers only. For example: No IE 8 support.\n<a href=\"http://caniuse.com/#feat=css-boxshadow\">See caniuse.com (box-shadow feature)</a> for more info.</p>\n",
                    "is_accepted": false,
                    "score": 55
                },
                {
                    "body": "<p>I know this is somewhat older, but since the keywords \"border inside\" landed me directly here, I would like to share some findings that may be worth mentioning here.\nWhen I was adding a border on the hover state, i got the effects that OP is talking about. The border ads pixels to the dimension of the box which made it jumpy. \nThere is two more ways one can deal with this that also work for IE7.</p>\n\n<p>1)\nHave a border already attached to the element and simply change the color. This way the mathematics are already included.</p>\n\n<pre><code>div {\n   width:100px;\n   height:100px;\n   background-color: #aaa;\n   border: 2px solid #aaa; /* notice the solid */\n}\n\ndiv:hover {\n   border: 2px dashed #666;\n}\n</code></pre>\n\n<p>2 )\nCompensate your border with a negative margin. This will still add the extra pixels, but the positioning of the element will not be jumpy on </p>\n\n<pre><code>div {\n   width:100px;\n   height:100px;\n   background-color: #aaa;\n}\n\ndiv:hover {\n  margin: -2px;\n  border: 2px dashed #333;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Best cross browser solution (mostly for IE support) like @Steve said is to make a div 98px in width and height than add a border 1px around it, or you could make a background image for div 100x100 px and draw a border on it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Probably it is belated answer, but I want to share with my findings. I found 2 new approaches to this problem that I have not found here in the answers:</p>\n\n<h2>Inner border through <code>box-shadow</code> css property</h2>\n\n<p>Yes, box-shadow is used to add box-shadows to the elements. But you can specify <code>inset</code> shadow, that would look like a inner border rather like a shadow. You just need to set horizontal and vertical shadows to <code>0px</code>, and the \"<code>spread</code>\" property of the <code>box-shadow</code> to the width of the border you want to have. So for the 'inner' border of 10px you would write the following:</p>\n\n<pre><code>div{\n    width:100px;\n    height:100px;\n    background-color:yellow;\n    box-shadow:0px 0px 0px 10px black inset;\n    margin-bottom:20px;\n}\n</code></pre>\n\n<p>Here is <a href=\"http://jsfiddle.net/gh05s9ac/3/\">jsFiddle</a> example that illustrates the difference between <code>box-shadow</code> border and 'normal' border. This way your border and the box width are of total 100px including the border.</p>\n\n<p>More about box-shadow:<a href=\"http://www.w3schools.com/cssref/css3_pr_box-shadow.asp\">here</a></p>\n\n<h2>Border through outline css property</h2>\n\n<p>Here is another approach, but this way the border would be outside of the box. Here is <a href=\"http://jsfiddle.net/tna8garq/\">an example</a> instead of 1000 words.. \nAs follows from the example, you can use css <code>outline</code> property, to set the border that does not affect the width and height of the element. This way, the border width is not added to the width of an element. </p>\n\n<pre><code>div{\n   width:100px;\n   height:100px;\n   background-color:yellow;\n   outline:10px solid black;\n}\n</code></pre>\n\n<p>More about outline: <a href=\"http://www.w3schools.com/cssref/pr_outline.asp\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>It Works!</p>\n\n<pre><code>div{\nmargin:-1px;\nborder:1px solid red;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a <code>&lt;div&gt;</code> element and I want to put a border on it.  I know I can write <code>style=\"border: 1px solid black\"</code>, but this adds 2px to either side of the div, which is not what I want.  </p>\n\n<p>I would rather have this border be -1px from the edge of the div. The div itself is 100px x 100px, and if I add a border, then I have to do some mathematics to make the border appear.</p>\n\n<p>Is there any way that I can make the border appear, and ensure the box will still be 100px (including the border)?</p>\n",
            "last_activity_date": 1422290318,
            "question_id": 9601357,
            "score": 105,
            "tags": [
                "html",
                "css",
                "css3",
                "border"
            ],
            "title": "Placing border inside of div and not on its edge"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You need to use the CSS <a href=\"http://www.impressivewebs.com/css-white-space/\"><code>white-space</code></a> attribute.</p>\n\n<p>In particular, <code>white-space: nowrap</code> and <code>white-space: pre</code> are the most commonly used values. The first one seems to be what you 're after.</p>\n",
                    "is_accepted": true,
                    "score": 315
                }
            ],
            "body": "<p>I feel silly for not being able to figure this out, but how do I turn off wordwrap? the css <code>word-wrap</code> property can be forced on with <code>break-word</code>, but cannot be forced <em>off</em> (only can be left alone with <code>normal</code> value).</p>\n\n<p>How do I force word wrap <em>off</em>?</p>\n",
            "last_activity_date": 1294702793,
            "question_id": 4652654,
            "score": 160,
            "tags": [
                "html",
                "css",
                "word-wrap"
            ],
            "title": "How to turn off word wrapping in HTML?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>concat.js is being included in the <code>concat</code> task's source files <code>public/js/*.js</code>. You could have a task that removes <code>concat.js</code> (if the file exists) before concatenating again, pass an array to explicitly define which files you want to concatenate and their order, or change the structure of your project. </p>\n\n<p>If doing the latter, you could put all your sources under <code>./src</code> and your built files under <code>./dest</code></p>\n\n<pre><code>src\n\u251c\u2500\u2500 css\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 1.css\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 2.css\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 3.css\n\u2514\u2500\u2500 js\n    \u251c\u2500\u2500 1.js\n    \u251c\u2500\u2500 2.js\n    \u2514\u2500\u2500 3.js\n</code></pre>\n\n<p>Then set up your <strong>concat</strong> task</p>\n\n<pre><code>concat: {\n  js: {\n    src: 'src/js/*.js',\n    dest: 'dest/js/concat.js'\n  },\n  css: {\n    src: 'src/css/*.css',\n    dest: 'dest/css/concat.css'\n  }\n},\n</code></pre>\n\n<p>Your <strong>min</strong> task</p>\n\n<pre><code>min: {\n  js: {\n    src: 'dest/js/concat.js',\n    dest: 'dest/js/concat.min.js'\n  }\n},\n</code></pre>\n\n<p>The build-in <strong>min</strong> task uses UglifyJS, so you need a replacement. I found <strong>grunt-css</strong> to be pretty good. After installing it, load it into your grunt file </p>\n\n<pre><code>grunt.loadNpmTasks('grunt-css');\n</code></pre>\n\n<p>And then set it up</p>\n\n<pre><code>cssmin: {\n  css:{\n    src: 'dest/css/concat.css',\n    dest: 'dest/css/concat.min.css'\n  }\n}\n</code></pre>\n\n<p>Notice that the usage is similar to the built-in min. </p>\n\n<p>Change your <code>default</code> task to </p>\n\n<pre><code>grunt.registerTask('default', 'concat min cssmin');\n</code></pre>\n\n<p>Now, running <code>grunt</code> will produce the results you want.</p>\n\n<pre><code>dest\n\u251c\u2500\u2500 css\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 concat.css\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 concat.min.css\n\u2514\u2500\u2500 js\n    \u251c\u2500\u2500 concat.js\n    \u2514\u2500\u2500 concat.min.js\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 69
                },
                {
                    "body": "<p>I agree with above answer.  But here is another way of CSS compression.</p>\n\n<p>You can concat your CSS by using <strong>YUI compressor</strong>:</p>\n\n<pre><code>module.exports = function(grunt) {\n  var exec = require('child_process').exec;\n   grunt.registerTask('cssmin', function() {\n    var cmd = 'java -jar -Xss2048k '\n      + __dirname + '/../yuicompressor-2.4.7.jar --type css '\n      + grunt.template.process('/css/style.css') + ' -o '\n      + grunt.template.process('/css/style.min.css')\n    exec(cmd, function(err, stdout, stderr) {\n      if(err) throw err;\n    });\n  });\n}; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I want to mention here a very, VERY, interesting technique that is being used in huge projects like jQuery and Modernizr for concatenate things. </p>\n\n<p>Both of this projects are entirely developed with requirejs modules (you can see that in their github repos) and then they use the requirejs optimizer as a very smart concatenator. The interesting thing is that, as you can see, nor jQuery neither Modernizr needs on requirejs to work, and this happen because they erase the requirejs syntatic ritual in order to get rid of requirejs in their code. So they end up with a standalone library that was developed with requirejs modules! Thanks to this they are able to perform cutsom builds of their libraries, among other advantages. </p>\n\n<p>For all those interested in concatenation with the requirejs optimizer, check out <a href=\"http://augustoaltman.tumblr.com/post/103432024045/from-requirejs-modules-to-standalone-javascript\" rel=\"nofollow\">this post</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p><em>Note: This question is only relevant for Grunt 0.3.x and has been left for reference. For help with the latest Grunt 0.4.x release please see my comment below this question.</em></p>\n\n<p>I'm currently trying to use Grunt.js to setup an automatic build process for first concatenating and then minifying CSS and JavaScript files.</p>\n\n<p>I have been able to successfully concatenate and minify my JavaScript files, although each time I run grunt it seems to just append to the file instead of overwriting them.</p>\n\n<p>As for the minifying or even concatenating CSS, I have been unable to do this as of yet!</p>\n\n<p>In terms of grunt CSS modules I have tried using <code>consolidate-css</code>, <code>grunt-css</code> &amp; <code>cssmin</code> but to no avail. Could not get my head around how to use them!</p>\n\n<p>My directory structure is as follows (being a typical node.js application):</p>\n\n<ul>\n<li>app.js</li>\n<li>grunt.js</li>\n<li>/public/index.html</li>\n<li>/public/css/[various css files]</li>\n<li>/public/js/[various javascript files]</li>\n</ul>\n\n<p>Here is what my grunt.js file currently looks like in the root folder of my application:</p>\n\n<pre><code>module.exports = function(grunt) {\n\n  // Project configuration.\n  grunt.initConfig({\n    pkg: '&lt;json:package.json&gt;',\n    concat: {\n      dist: {\n        src: 'public/js/*.js',\n        dest: 'public/js/concat.js'\n      }\n    },\n    min: {\n      dist: {\n        src: 'public/js/concat.js',\n        dest: 'public/js/concat.min.js'\n      }\n    },\n    jshint: {\n      options: {\n        curly: true,\n        eqeqeq: true,\n        immed: true,\n        latedef: true,\n        newcap: true,\n        noarg: true,\n        sub: true,\n        undef: true,\n        boss: true,\n        eqnull: true,\n        node: true\n      },\n      globals: {\n        exports: true,\n        module: false\n      }\n    },\n    uglify: {}\n  });\n\n  // Default task.\n  grunt.registerTask('default', 'concat min');\n\n};\n</code></pre>\n\n<p>So just to summarise I need help with two questions:</p>\n\n<ol>\n<li>How to concatenate and minify all my css files under the folder <code>/public/css/</code> into one file, say <code>main.min.css</code></li>\n<li>Why does grunt.js keep on appending to the concatenated and minified javascript files <code>concat.js</code> and <code>concat.min.js</code> under <code>/public/js/</code> instead of overwriting them each time the command <code>grunt</code> is run?</li>\n</ol>\n\n<hr>\n\n<p><strong>Updated 20th of June 2013 - Upgrading from Grunt 0.3.x to Grunt 0.4.x</strong></p>\n\n<p><code>Grunt.js</code> has moved to a new structure in <code>Grunt 0.4.x</code> (the file is now called <code>Gruntfile.js</code>). Please see my open source project <a href=\"https://github.com/jasdeepkhalsa/gruntjs-skeleton\">Grunt.js Skeleton</a> for help with setting up a build process for <code>Grunt 0.4.x</code>.</p>\n",
            "last_activity_date": 1417137014,
            "question_id": 13713273,
            "score": 57,
            "tags": [
                "javascript",
                "css",
                "concatenation",
                "minify",
                "gruntjs"
            ],
            "title": "How to concatenate and minify multiple CSS and JavaScript files with Grunt.js"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<pre><code>$(this).css('marginBottom').replace('px','')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>parseFloat($(this).css('marginBottom'))\n</code></pre>\n\n<p>Even if marginBottom defined in em, the value inside of parseFloat above will be in px, as it's a calculated CSS property.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>parseInt($(this).css('marginBottom'), 10);\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\"><code>parseInt</code></a> will automatically ignore the units.</p>\n\n<p>For example:</p>\n\n<pre><code>var marginBottom = \"10px\";\nmarginBottom = parseInt(marginBottom, 10);\nalert(marginBottom); // alerts: 10\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 171
                },
                {
                    "body": "<p>Should remove units while preserving decimals.</p>\n\n<pre><code>var regExp = new RegExp(\"[a-z][A-Z]\",\"g\");\nparseFloat($(this).css(\"property\").replace(regExp, \"\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This will clean up all non-digits, non-dots, and not-minus-sign from the string:</p>\n\n<pre><code>$(this).css('marginBottom').replace(/[^-\\d\\.]/g, '');\n</code></pre>\n\n<p>UPDATED for negative values</p>\n",
                    "is_accepted": true,
                    "score": 81
                },
                {
                    "body": "<p><code>parseint</code> will truncate any decimal values (e.g. <code>1.5em</code> gives <code>1</code>).</p>\n\n<p>Try a <code>replace</code> function with regex \ne.g.</p>\n\n<pre><code>$this.css('marginBottom').replace(/([\\d.]+)(px|pt|em|%)/,'$1');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I use a simple jQuery plugin to return the numeric value of any single CSS property.</p>\n\n<p>It applies <code>parseFloat</code> to the value returned by jQuery's default <code>css</code> method.</p>\n\n<p><strong>Plugin Definition:</strong> </p>\n\n<pre><code>$.fn.cssNum = function(){\n  return parseFloat($.fn.css.apply(this,arguments));\n}\n</code></pre>\n\n<p><strong>Usage:</strong></p>\n\n<pre><code>var element = $('.selector-class');\nvar numericWidth = element.cssNum('width') * 10 + 'px';\nelement.css('width', numericWidth);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>With the replace method, your css value is a string, and not a number.</p>\n\n<p>This method is more clean, simple, and returns a number :</p>\n\n<pre><code>parseFloat($(this).css('marginBottom'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 75
                },
                {
                    "body": "<p>Id go for:</p>\n\n<pre><code>Math.abs(parseFloat($(this).css(\"property\")));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The simplest way to get the element width without units is :</p>\n\n<pre><code>target.width()\n</code></pre>\n\n<p>Source : <a href=\"https://api.jquery.com/width/#width2\" rel=\"nofollow\">https://api.jquery.com/width/#width2</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>use</p>\n\n<pre><code>$(this).cssUnit('marginBottom');\n</code></pre>\n\n<p>which return an array.\nfirst index returns margin bottom's value(example <strong>20</strong> for 20px)\nand second index returns margin bottom's unit(example <strong>px</strong> for 20px)</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can implement this very simple <strong>jQuery</strong> plugin:</p>\n\n<p><strong>Plugin Definition:</strong></p>\n\n<pre><code>(function($) {\n    $.fn.cssValue = function(p) {\n        return isNaN(parseFloat(this.css(p))) ? 0 : parseFloat(this.css(p));\n    };\n})(jQuery);\n</code></pre>\n\n<p>It is resistant to <code>NaN</code> values that may occur in old IE version (will return <code>0</code> instead)</p>\n\n<p><strong>Usage:</strong></p>\n\n<pre><code>$(this).cssValue('marginBottom');\n</code></pre>\n\n<p>Enjoy! :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to do a numeric calculation based on CSS properties. However, when I use this to get info:</p>\n\n<pre><code>$(this).css('marginBottom')\n</code></pre>\n\n<p>it returns the value '10px'. Is there a trick to just getting the number part of the value no matter whether it is <code>px</code> or <code>%</code> or <code>em</code> or whatever?</p>\n",
            "last_activity_date": 1424833633,
            "question_id": 1100503,
            "score": 80,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "parsing"
            ],
            "title": "How to get just numeric part of CSS property with jQuery?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I \"solved\" this by loading the css file differently:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" href=\"{{ asset('bundles/cmtcore/css/main.css') }}\" type=\"text/css\" media=\"all\" /&gt;\n</code></pre>\n\n<p>This is the way it is done in Acme/DemoBundle.</p>\n\n<p>I'll leave this question unsolved because this seems silly.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>use the <code>cssrewrite</code> filter from Assetic bundle</p>\n\n<p>In config.yml:</p>\n\n<pre><code>assetic:\n    debug:          %kernel.debug%\n    use_controller: false\n    filters:\n        cssrewrite: ~\n</code></pre>\n\n<p>And then call your stylesheets like this:</p>\n\n<pre><code> {% stylesheets 'bundles/cmtcore/css/*' filter='cssrewrite' %}\n        &lt;link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"{{ asset_url }}\" /&gt;\n {% endstylesheets %}\n</code></pre>\n\n<p>Oh and don't forget to use <code>php app/console assetic:dump</code></p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>I solved the problem by following the instructions on this site:\n<a href=\"http://www.craftitonline.com/2011/06/symfony2-beautify-with-assetic-and-a-template-part-ii/\" rel=\"nofollow\">http://www.craftitonline.com/2011/06/symfony2-beautify-with-assetic-and-a-template-part-ii/</a></p>\n\n<p>The actual problem is that you reference your bundle resources absolute, but must reference them relative.</p>\n\n<pre><code>{% stylesheets filter='cssrewrite' output='css/*.css'\n    'bundles/blistercarerisikobewertung/css/*'  %}\n    &lt;link href=\"{{ asset_url }}\" type=\"text/css\" rel=\"stylesheet\" /&gt;\n{% endstylesheets %}\n</code></pre>\n\n<p>Clear your cache and install your assets again</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Regarding Yann's answer, actually you don't have to re-install assets after every change if you use the <code>--symlink</code> option.</p>\n\n<p>Note, however, that running the vendors install script will overwrite the symlinks, so you'll need to delete the <code>bundles/*</code> folders and install the assets with the <code>--symlink</code> option again after running the vendors script.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There was few issues with ccsrewrite:</p>\n\n<p><em>the CssRewrite filter does not work when using the @MyBundle syntax in AsseticBundle to reference the assets. This is a known limitation.</em></p>\n\n<p>Here is php version for cssrewrite:</p>\n\n<pre><code>&lt;?php foreach ($view['assetic']-&gt;stylesheets(\n            array(\n                'bundles/test/css/foundation/foundation.css',\n                'bundles/test/css/foundation/app.css',\n                'bundles/test/css/themes/adapzonManager.css'), array('cssrewrite')) as $url): ?&gt;\n        &lt;link rel=\"stylesheet\" href=\"&lt;?php echo $view-&gt;escape($url) ?&gt;\" /&gt;\n    &lt;?php endforeach; ?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I have a similar problem, and I've looked around for at least a day, and I'm not convinced there's a good practical solution to this problem.  I recommend using Assetic to handle javascript and css, and then just putting your images in the docroot of your web site.  For example, if you have a css file that references ../images/file.png, just create and images folder under your docroot and put file.png in there.  This is definitely not the best theoretical solution, but it's the only one I could find that actually works.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have developed a small bundle with a extra filter to solve this issue. You can find it on github: <a href=\"https://github.com/fkrauthan/FkrCssURLRewriteBundle.git\">https://github.com/fkrauthan/FkrCssURLRewriteBundle.git</a></p>\n\n<p>With this bundle the @Notation for assetic works if you have relativ paths in your css file.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I solved this using htaccess:</p>\n\n<p>My assets are stored in src/Datacode/BudgetBundle/Resources/public/(css|img|js) and the assetic output parameter is set to write to: bundles/datacodebudget/css/styles.css (in web directory)</p>\n\n<p>In my css i use the relative path ../ to reference images.</p>\n\n<p>Here is the .htaccess rule:</p>\n\n<pre><code># Make image path work on dev\n# i.e. /app_dev.php/bundles/datacodebudget/img/glyphicons-halflings-white.png rewrites to /bundles/datacodebudget/img/glyphicons-halflings-white.png\nRewriteRule ^app_dev\\.php/(.*)/(.*)/img/(.*)$ /$1/$2/img/$3 [L]\n</code></pre>\n\n<p>My css is loaded as follows:</p>\n\n<pre><code>{% stylesheets\n    '@DatacodeBudgetBundle/Resources/public/css/bootstrap.css'\n    '@DatacodeBudgetBundle/Resources/public/css/bootstrap-responsive.css'\n    '@DatacodeBudgetBundle/Resources/public/css/styles.css' \n    '@DatacodeBudgetBundle/Resources/public/css/chosen.css' output=\"bundles/datacodebudget/css/styles.css\"\n%}\n&lt;link href=\"{{ asset_url }}\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n{% endstylesheets %}\n</code></pre>\n\n<p>In my config.yml file i have:</p>\n\n<pre><code>assetic:\n    use_controller: true\n</code></pre>\n\n<p>Which (without the htaccess rewrite) causes the images not to load since the relative path for the image is at app_dev.php/bundles/datacodebudget/img/someimage.jpg.  Using the cssrewrite filter doesn't work either because then it rewrites ../img to ../../../../Resources/public/img/ which resolves to Resources/public/img.</p>\n\n<p>By using the htaccess method the images load fine and I only need to run assetic:dump / assets:install when i add new images or want to push changes to production.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I solved this issue by permanently creating 'images' folder with images inside in 'symfony_root/web/' folder. Result: 'symfony_root/web/images/' - and it becomes work great!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a CoreBundle that contains main css files and images. Now I have a problem when I load an image from css; the image isn't shown.</p>\n\n<pre><code> background-image:url(../images/file.png)\n</code></pre>\n\n<p>(with a full path it works)</p>\n\n<p>I installed the assets using the command: <code>assets:install web</code> and i can see the image and css files under <code>web/bundles/cmtcore/(css|images)</code>.</p>\n\n<p>Here's the file structure inside the core bundle:</p>\n\n<ul>\n<li>CoreBundle\n<ul>\n<li>Resources\n<ul>\n<li>public\n<ul>\n<li>css\n<ul>\n<li>main.css</li>\n</ul></li>\n<li>images\n<ul>\n<li>file.png</li>\n</ul></li>\n</ul></li>\n</ul></li>\n</ul></li>\n</ul>\n\n<p>And here's how I load the css file into the template:</p>\n\n<pre><code> {% stylesheets '@CmtCoreBundle/Resources/public/css/*' %}\n        &lt;link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"{{ asset_url }}\" /&gt;\n {% endstylesheets %}\n</code></pre>\n\n<p>Thank you for your help in advance.</p>\n",
            "last_activity_date": 1411904678,
            "question_id": 7044631,
            "score": 41,
            "tags": [
                "css",
                "image",
                "background-image",
                "symfony2",
                "assets"
            ],
            "title": "Symfony2 - Assetic - load images in CSS"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I use <a href=\"http://closure-compiler.appspot.com/home\" rel=\"nofollow\">Googles JS Compiler</a> or <a href=\"http://developer.yahoo.com/yui/compressor/\" rel=\"nofollow\">YUI Compressor</a> for both.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There are a wide variety of options. In terms of actual tools, the most common are:</p>\n\n<ol>\n<li><a href=\"http://closure-compiler.appspot.com/home\">Google Closure Compiler Service</a></li>\n<li><a href=\"http://aspnet.codeplex.com/releases/view/40584\">Microsoft AJAX Minifier</a></li>\n<li><a href=\"https://github.com/yui/ycssmin\">Yahoo's CSS Minifier</a> (also <a href=\"http://yuicompressor.codeplex.com/\">YuiCompressor.NET</a>)</li>\n</ol>\n\n<p>and likely many more, but I have used each of these tools, and all are great to work with. </p>\n\n<p>If you are working with a .NET application library, there are also various other options that extend these base tools, to combine like resources and reduce overall HTTP requests. </p>\n\n<ol>\n<li><a href=\"http://combres.codeplex.com/\">Combres</a></li>\n<li><a href=\"http://xpedite.codeplex.com/\">Xpedite</a></li>\n<li><a href=\"http://www.codethinked.com/post/2010/05/26/SquishIt-The-Friendly-ASPNET-JavaScript-and-CSS-Squisher.aspx\">SquishIt</a> </li>\n</ol>\n\n<p>Again, also likely many more...</p>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>I like to use Google's Closure Compiler (<a href=\"http://closure-compiler.appspot.com/home\">http://closure-compiler.appspot.com/home</a>) for minification (best of class) followed by a code obfuscator (<a href=\"http://www.daftlogic.com/projects-online-javascript-obfuscator.htm\">http://www.daftlogic.com/projects-online-javascript-obfuscator.htm</a>) for source protection.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I don't bother with minizers at all. Instead, I statically generate a gzipped version of all text files and let content-negotiation and caching handle the rest.</p>\n\n<p>Also, Javascript-obfuscation is mostly pointless - I can think of few valid reasons to do so...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For CSS I personaly use <a href=\"http://cleancss.com/\" rel=\"nofollow\">CleanCSS</a>, at the moment best solution for me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking for a good and reliable JS and CSS minimizer. Preferably one that refactors my javascript variables to something more obscure and something it's easy to use.</p>\n\n<p>Which ones do you use?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1376554787,
            "question_id": 4843871,
            "score": 40,
            "tags": [
                "javascript",
                "css",
                "minimize"
            ],
            "title": "JavaScript and CSS minimizer"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Using an <a href=\"https://github.com/SomMeri/less4j/wiki/Less-Language-Escaping\"><strong>escaped string</strong></a> (a.k.a. escaped value):</p>\n\n<pre><code>width: ~\"calc(100% - 200px)\";\n</code></pre>\n\n<hr>\n\n<p>Also, in case you need to mix Less math with escaped strings:</p>\n\n<pre><code>width: calc(~\"100% - 15rem +\" (10px+5px) ~\"+ 2em\");\n</code></pre>\n\n<p>Compiles to:</p>\n\n<pre><code>width: calc(100% - 15rem + 15px + 2em);\n</code></pre>\n\n<p>This works as Less concatenates values (the escaped strings and math result) with a space by default.</p>\n",
                    "is_accepted": true,
                    "score": 134
                },
                {
                    "body": "<p>Apart from using an escaped value as described in <a href=\"http://stackoverflow.com/a/17904128/1331430\">my other answer</a>, it is also possible to fix this issue by enabling the <a href=\"http://lesscss.org/usage/#command-line-usage-strict-math\">Strict Math</a> setting.</p>\n\n<p>With strict math on, only maths that are inside unnecessary parentheses will be processed, so your code:</p>\n\n<pre><code>width: calc(100% - 200px);\n</code></pre>\n\n<p>Would work as expected with the strict math option enabled.</p>\n\n<p><strong>However</strong>, note that Strict Math is applied globally, not only inside <code>calc()</code>. That means, if you have:</p>\n\n<pre><code>font-size: 12px + 2px;\n</code></pre>\n\n<p>The math will no longer be processed by Less -- it will output <code>font-size: 12px + 2px</code> which is, obviously, invalid CSS. You'd have to wrap all maths that should be processed by Less in (previously unnecessary) parentheses:</p>\n\n<pre><code>font-size: (12px + 2px);\n</code></pre>\n\n<p>Strict Math is a nice option to consider when starting a new project, otherwise you'd possibly have to rewrite a good part of the code base. For the most common use cases, the escaped string approach described in the <a href=\"http://stackoverflow.com/a/17904128/1331430\">other answer</a> is more suitable.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>The solutions of Fabricio works just fine.</p>\n\n<p>A very common usecase of calc is add 100% width and adding some margin around the element.</p>\n\n<p>One can do so with:</p>\n\n<pre><code>@someMarginVariable = 15px;\n\nmargin: @someMarginVariable;\nwidth: calc(~\"100% - \"@someMarginVariable*2);\nwidth: -moz-calc(~\"100% - \"@someMarginVariable*2);\nwidth: -webkit-calc(~\"100% - \"@someMarginVariable*2);\nwidth: -o-calc(~\"100% - \"@someMarginVariable*2);\n</code></pre>\n\n<p>Or can use a mixin like:</p>\n\n<pre><code>.fullWidthMinusMarginPaddingMixin(@marginSize,@paddingSize) {\n  @minusValue: (@marginSize+@paddingSize)*2;\n  padding: @paddingSize;\n  margin: @marginSize;\n  width: calc(~\"100% - \"@minusValue);\n  width: -moz-calc(~\"100% - \"@minusValue);\n  width: -webkit-calc(~\"100% - \"@minusValue);\n  width: -o-calc(~\"100% - \"@minusValue);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's a cross-browser less mixin for using CSS's <code>calc</code> with any property:</p>\n\n<pre><code>.calc(@prop; @val) {\n  @{prop}: calc(~'@{val}');\n  @{prop}: -moz-calc(~'@{val}');\n  @{prop}: -webkit-calc(~'@{val}');\n  @{prop}: -o-calc(~'@{val}');\n}\n</code></pre>\n\n<p>Example usage:</p>\n\n<pre><code>.calc(width; \"100% - 200px\");\n</code></pre>\n\n<p>And the CSS that's output:</p>\n\n<pre><code>width: calc(100% - 200px);\nwidth: -moz-calc(100% - 200px);\nwidth: -webkit-calc(100% - 200px);\nwidth: -o-calc(100% - 200px);\n</code></pre>\n\n<p>A codepen of this example: <a href=\"http://codepen.io/patrickberkeley/pen/zobdp\" rel=\"nofollow\">http://codepen.io/patrickberkeley/pen/zobdp</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Right Now I'm trying to do this in CSS3 in my LESS code:</p>\n\n<pre><code>width: calc(100% - 200px);\n</code></pre>\n\n<p>However, when LESS compiles it is outputting this:</p>\n\n<pre><code>width: calc(-100%);\n</code></pre>\n\n<p>Is there a way to tell LESS not to compile it in that manner and to output it normally?</p>\n",
            "last_activity_date": 1409417699,
            "question_id": 17904088,
            "score": 87,
            "tags": [
                "css",
                "css3",
                "less"
            ],
            "title": "Disable LESS-CSS Overwriting calc()"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>You are looking for line 239 of <code>bootstrap-responsive.css</code></p>\n\n<pre class=\"lang-css prettyprint-override\"><code>@media (max-width: 979px) {...}\n</code></pre>\n\n<p>Where the <code>max-width</code> value triggers the responsive nav. Change it to 550px or so and it should resize fine.</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>You can establish a new <code>@media</code> query to drop the navbar elements down as you see fit, all you have to do is reset the former to accommodate your new query with the desired drop width. Take this for example:</p>\n\n<p><strong>CSS</strong></p>\n\n<pre class=\"lang-css prettyprint-override\"><code>/** Modified Responsive CSS **/\n\n@media (max-width: 979px) {\n    .btn-navbar {\n        display: none;\n    }\n    .navbar .nav-collapse {\n        clear: none;\n    }\n\n    .nav-collapse {\n        height: auto;\n        overflow: auto;\n    }\n\n    .navbar .nav {\n        float: left;\n        margin: 0 10px 0 0;\n    }\n\n    .navbar .brand {\n        margin-left: -20px;\n        padding: 8px 20px 12px;\n    }\n\n    .navbar .dropdown-menu:before, .navbar .dropdown-menu:after {\n        display: block;\n    }\n\n    .navbar .nav &gt; li &gt; a, .navbar .dropdown-menu a {\n        border-radius: 0;\n        color: #999999;\n        font-weight: normal;\n        padding: 10px 10px 11px;\n    }\n\n    .navbar .nav &gt; li {\n        float: left;\n    }\n\n    .navbar .dropdown-menu {\n        background-clip: padding-box;\n        background-color: #FFFFFF;\n        border-color: rgba(0, 0, 0, 0.2);\n        border-radius: 0 0 5px 5px;\n        border-style: solid;\n        border-width: 1px;\n        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n        display: none;\n        float: left;\n        left: 0;\n        list-style: none outside none;\n        margin: 0;\n        min-width: 160px;\n        padding: 4px 0;\n        position: absolute;\n        top: 100%;\n        z-index: 1000;\n    }\n\n    .navbar-form, .navbar-search {\n        border:none;\n        box-shadow: 0 1px 0 rgba(255, 255, 255, 0.1) inset, 0 1px 0 rgba(255, 255, 255, 0.1);\n        float: left;\n        margin-bottom: 0;\n        margin-top:6px;\n        padding: 9px 15px;\n    }\n\n    .navbar .nav.pull-right {\n        float: right;\n        margin-left: auto;\n    }\n}\n\n@media (max-width: 550px) {\n    .btn-navbar {\n        display: block;\n    }\n    .navbar .nav-collapse {\n        clear: left;\n    }\n\n    .nav-collapse {\n        height: 0;\n        overflow: hidden;\n    }\n\n    .navbar .nav {\n        float: none;\n        margin: 0 0 9px;\n    }\n\n    .navbar .brand {\n        margin: 0 0 0 -5px;\n        padding-left: 10px;\n        padding-right: 10px;\n    }\n\n    .navbar .dropdown-menu:before, .navbar .dropdown-menu:after {\n        display: none;\n    }\n\n    .navbar .nav &gt; li &gt; a, .navbar .dropdown-menu a {\n        border-radius: 3px 3px 3px 3px;\n        color: #999999;\n        font-weight: bold;\n        padding: 6px 15px;\n    }\n\n    .navbar .nav &gt; li {\n        float: none;\n    }\n\n    .navbar .dropdown-menu {\n        background-color: transparent;\n        border: medium none;\n        border-radius: 0 0 0 0;\n        box-shadow: none;\n        display: block;\n        float: none;\n        left: auto;\n        margin: 0 15px;\n        max-width: none;\n        padding: 0;\n        position: static;\n        top: auto;\n    }\n\n    .navbar-form, .navbar-search {\n        border-bottom: 1px solid #222222;\n        border-top: 1px solid #222222;\n        box-shadow: 0 1px 0 rgba(255, 255, 255, 0.1) inset, 0 1px 0 rgba(255, 255, 255, 0.1);\n        float: none;\n        margin: 9px 0;\n        padding: 9px 15px;\n    }\n\n    .navbar .nav.pull-right {\n        float: none;\n        margin-left: 0;\n    }\n\n}\n</code></pre>\n\n<p>In the following code you can see how I included the original <code>@media</code> query that handles the drop before the <code>979px</code> mark and the new query to support your desired drop point of <code>550px</code>. I modified the original query straight from the bootstrap-responsive css to reset all the styles applied to that specific query for the navbar elements and ported them to the new query that carries the drop point you need instead. This way we can commute all the styles from the original query down to the new query without messing around in the bootstrap-responsive stylesheet, this way the default values will still apply to the other elements in your document.</p>\n\n<p>Here is a short demo with a media query set to drop at <code>550px</code> as you require:\n<a href=\"http://jsfiddle.net/wU8MW/\" rel=\"nofollow\">http://jsfiddle.net/wU8MW/</a></p>\n\n<p>Note: I placed the above modified <code>@media</code> queries way down below the css frame as the new modified css is supposed to be loaded first than the responsive css.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>This is a great example of where you could be using the LESS version of the Bootstrap CSS files. How to do this is below.</p>\n\n<p>Even better would be to submit this as a pull request on Github so that everyone can benefit and your \"custom code\" would hopefully be part of Bootstrap moving forward.</p>\n\n<ul>\n<li>Add a variable to <code>variables.less</code> that specifies when to collapse the navbar. Something like: <code>@navCollapseWidth: 979px</code></li>\n<li>Then modify <code>responsive-navbar.less</code>... \n<ul>\n<li>Up top change <code>@media (max-width: 979px)</code> to <code>@media (max-width: @navCollapseWidth)</code> </li>\n<li>At the bottom change <code>@media (min-width: 980px)</code> to <code>@media (max-width: @navCollapseWidth - 1)</code></li>\n</ul></li>\n</ul>\n\n<p>Of course... you'd have to compile LESS using one of the <a href=\"http://twitter.github.com/bootstrap/less.html#compiling\" rel=\"nofollow\">suggested methods</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I suspect (and hope) this will be implemented in an official way soon.  In the meantime I'm just doing a simple css hack, using visible-phone on the dropdown button and visible-tablet on a second set of buttons I've placed in the navbar.  So before it looked like this:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;div class=\"navbar navbar-fixed-top\"&gt;\n  &lt;div class=\"navbar-inner\"&gt;\n    &lt;div class=\"container-fluid\"&gt;\n      &lt;a href=\"&lt;%= root_url %&gt;\" class=\"brand brandtag\"&gt;&lt;/a&gt;\n      &lt;a class=\"btn btn-navbar\" data-toggle=\"collapse\" data-target=\".nav-collapse\"&gt;\n        &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n        &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n        &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n      &lt;/a&gt;\n      &lt;div class=\"nav-collapse\"&gt;\n        &lt;ul class=\"nav\"&gt;\n          &lt;li&gt;Navigation 1&lt;/li&gt;\n          &lt;li&gt;Navigation 2&lt;/li&gt;\n          &lt;li&gt;Navigation 3&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>And now it looks like:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;div class=\"navbar navbar-fixed-top\"&gt;\n  &lt;div class=\"navbar-inner\"&gt;\n    &lt;div class=\"container-fluid\"&gt;\n      &lt;a href=\"&lt;%= root_url %&gt;\" class=\"brand brandtag\"&gt;&lt;/a&gt;\n      &lt;a class=\"btn btn-navbar visible-phone\" data-toggle=\"collapse\" data-target=\".nav-collapse\"&gt;\n        &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n        &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n        &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n      &lt;/a&gt;\n      &lt;div class=\"visible-tablet\"&gt;\n        &lt;ul class=\"nav\"&gt;\n          &lt;li&gt;Navigation 1&lt;/li&gt;\n          &lt;li&gt;Navigation 2&lt;/li&gt;\n          &lt;li&gt;Navigation 3&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n      &lt;div class=\"nav-collapse\"&gt;\n        &lt;ul class=\"nav\"&gt;\n          &lt;li&gt;Navigation 1&lt;/li&gt;\n          &lt;li&gt;Navigation 2&lt;/li&gt;\n          &lt;li&gt;Navigation 3&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Note that order of elements is important, otherwise you may have issues with elements going into the next line</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Taking tyler's hack even further by adding a <strong>visible-phone</strong> classed block and a <strong>hidden-phone</strong> class to an item in the main collapsible navigation, you can 'pull out' one or two of the collapsed items to display even in the phone navbar.</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;div class=\"navbar navbar-fixed-top\"&gt;\n  &lt;div class=\"navbar-inner\"&gt;\n    &lt;div class=\"container-fluid\"&gt;\n      &lt;a href=\"&lt;%= root_url %&gt;\" class=\"brand brandtag\"&gt;&lt;/a&gt;\n      &lt;a class=\"btn btn-navbar visible-phone\" data-toggle=\"collapse\" data-target=\".nav-collapse\"&gt;\n        &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n        &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n        &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n      &lt;/a&gt;\n      &lt;div class=\"visible-tablet\"&gt;\n        &lt;ul class=\"nav\"&gt;\n          &lt;li&gt;Navigation 1&lt;/li&gt;\n          &lt;li&gt;Navigation 2&lt;/li&gt;\n          &lt;li&gt;Navigation 3&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n      &lt;div class=\"visible-phone\"&gt;\n        &lt;ul class=\"nav\"&gt;\n          &lt;li&gt;Navigation 1&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n      &lt;div class=\"nav-collapse\"&gt;\n        &lt;ul class=\"nav\"&gt;\n          &lt;li class=\"hidden-phone\"&gt;Navigation 1&lt;/li&gt;\n          &lt;li&gt;Navigation 2&lt;/li&gt;\n          &lt;li&gt;Navigation 3&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>Bootstrap > 2.1 &amp;&amp; &lt; 3</h2>\n\n<ul>\n<li>Use the less version of bootstrap</li>\n<li>Change the @navbarCollapseWidth variable in variables.less</li>\n<li>Recompile. </li>\n</ul>\n\n<p><strong>Update 2013: The easy way</strong></p>\n\n<ul>\n<li>Visit <a href=\"http://getbootstrap.com/customize/#less-variables\">http://getbootstrap.com/customize/#less-variables</a></li>\n<li>Change @navbarCollapseWidth in the formfield</li>\n<li>Click \"Compile and Download\".</li>\n</ul>\n\n<p>(THX to Archonic via comment)</p>\n\n<p><strong>Update 2014: Bootstrap 3.1.1 and 3.2</strong>\n(they even <a href=\"https://github.com/twbs/bootstrap/commit/1c19284a38ffc60c3a89bbda0f2f0355cf687417\">added it to the documentation</a>)</p>\n\n<p>If you're <a href=\"http://getbootstrap.com/customize/\">customizing</a> or overriding/editing <code>.less</code> variables, you're looking for:</p>\n\n<pre><code>//** Point at which the navbar becomes uncollapsed.\n@grid-float-breakpoint:     @screen-sm-min;\n//** Point at which the navbar begins collapsing.\n@grid-float-breakpoint-max: (@grid-float-breakpoint - 1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 62
                },
                {
                    "body": "<p>bootstrap-sass will support the variable $navbarCollapseWidth in the next version (2.2.1.0). You'll be able to update it to do exactly what you want once that version is live!</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<h2>Bootstrap 3.x</h2>\n\n<p>using <strong>LESS</strong>, you can change the value of <code>@screen-small</code> to target your min size</p>\n\n<p>example: <code>@screen-small: 600px;</code> </p>\n\n<p>i use this to only switch to \"tiny device\" mode once the width is less than 600px</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As of August 2013, a Bootstrap 3 \"Customize and download\" page can be found at <a href=\"http://getbootstrap.com/customize/\">http://getbootstrap.com/customize/</a></p>\n\n<p>With Bootstrap 3, the relevant variable is @grid-float-breakpoint.</p>\n\n<p>The following Stack Overflow page has additional details: <a href=\"http://stackoverflow.com/questions/18192082/bootstrap-3-navbar-collapse\">Bootstrap 3 Navbar Collapse</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I created a separate SCSS file that listed all of the partials that bootstrap needs, that way I can turn the partials on and off depending on what our site needs. This way, I am able to override the breakpoint variable easily. Here's what I got:</p>\n\n<pre><code>// Core variables and mixins\n$grid-float-breakpoint: 991px;\n@import \"bootstrap/variables\";\n@import \"bootstrap/mixins\";\n\n// Reset\n@import \"bootstrap/normalize\";\n//@import \"bootstrap/print\";\n\n// Core CSS\n@import \"bootstrap/scaffolding\";\n@import \"bootstrap/type\";\n//@import \"bootstrap/code\";\n@import \"bootstrap/grid\";\n@import \"bootstrap/tables\";\n@import \"bootstrap/forms\";\n@import \"bootstrap/buttons\";\n\n// Components\n@import \"bootstrap/component-animations\";\n@import \"bootstrap/glyphicons\";\n@import \"bootstrap/dropdowns\";\n//@import \"bootstrap/button-groups\";\n//@import \"bootstrap/input-groups\";\n@import \"bootstrap/navs\";\n@import \"bootstrap/navbar\";\n@import \"bootstrap/breadcrumbs\";\n@import \"bootstrap/pagination\";\n@import \"bootstrap/pager\";\n@import \"bootstrap/labels\";\n@import \"bootstrap/badges\";\n//@import \"bootstrap/jumbotron\";\n//@import \"bootstrap/thumbnails\";\n@import \"bootstrap/alerts\";\n//@import \"bootstrap/progress-bars\";\n//@import \"bootstrap/media\";\n//@import \"bootstrap/list-group\";\n@import \"bootstrap/panels\";\n//@import \"bootstrap/wells\";\n@import \"bootstrap/close\";\n\n// Components w/ JavaScript\n@import \"bootstrap/modals\";\n@import \"bootstrap/tooltip\";\n//@import \"bootstrap/popovers\";\n//@import \"bootstrap/carousel\";\n\n// Utility classes\n@import \"bootstrap/utilities\";\n@import \"bootstrap/responsive-utilities\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Bootstrap 3.x</strong></p>\n\n<p>using SASS, you can change the value of $screen-sm to target your min size</p>\n\n<p>example: $screen-sm: 600px;</p>\n\n<p>You need to put this value in your application.scss file before the @import \"bootstrap\"; </p>\n\n<pre><code>$screen-sm:600px;\n@import \"bootstrap\";\n</code></pre>\n\n<p>Less variables begin with \"@\" just changed them to \"$\" to override them before the import.</p>\n\n<p><a href=\"http://getbootstrap.com/customize/#less-variables\" rel=\"nofollow\">Here is the list of variables.</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is my code (All other solution showed funky scrollbar as the navbar dropped down so I edited the code so it didn't). I could not post on other answer so I'll do it here for others to find. I am using rails to do this with Bootstrap 3.0. </p>\n\n<p>assets/stylesheets/framework and overrides paste this: (Adjust max width to whatever value to achieve your goal.)</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>@media (max-width: 2500px) {\n.navbar-header {\n    float: none;\n}\n.navbar-toggle {\n    display: block;\n}\n.navbar-collapse {\n    border-top: 1px solid transparent;\n    box-shadow: inset 0 1px 0 rgba(255,255,255,0.1);\n}\n.navbar-collapse.collapse {\n    display: none!important;\n}\n.navbar-collapse.collapse.in {\n    display: block!important;\n}\n.navbar-nav {\n    float: none!important;\n}\n.navbar-nav&gt;li {\n    float: none;\n}\n.navbar-nav&gt;li&gt;a {\n    padding-top: 10px;\n    padding-bottom: 10px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>After trying everything with Bootstrap 2x I got this working with:</p>\n\n<pre><code>@media (max-width: 1205px) {\n  /* line 13, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  body {\n    padding-top: 0;\n  }\n\n  /* line 18, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .navbar-fixed-top,\n  .navbar-fixed-bottom {\n    position: static;\n  }\n\n  /* line 21, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .navbar-fixed-top {\n    margin-bottom: 20px;\n  }\n\n  /* line 24, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .navbar-fixed-bottom {\n    margin-top: 20px;\n  }\n\n  /* line 28, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .navbar-fixed-top .navbar-inner,\n  .navbar-fixed-bottom .navbar-inner {\n    padding: 5px;\n  }\n\n  /* line 31, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .navbar .container {\n    width: auto;\n    padding: 0;\n  }\n\n  /* line 36, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .navbar .brand {\n    padding-left: 10px;\n    padding-right: 10px;\n    margin: 0 0 0 -5px;\n  }\n\n  /* line 45, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse {\n    clear: both;\n  }\n\n  /* line 49, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse .nav {\n    float: none;\n    margin: 0 0 10px;\n  }\n\n  /* line 53, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse .nav &gt; li {\n    float: none;\n  }\n\n  /* line 56, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse .nav &gt; li &gt; a {\n    margin-bottom: 2px;\n  }\n\n  /* line 59, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse .nav &gt; .divider-vertical {\n    display: none;\n  }\n\n  /* line 62, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse .nav .nav-header {\n    color: #777777;\n    text-shadow: none;\n  }\n\n  /* line 68, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse .nav &gt; li &gt; a,\n  .nav-collapse .dropdown-menu a {\n    padding: 9px 15px;\n    font-weight: bold;\n    color: #777777;\n    -webkit-border-radius: 3px;\n    -moz-border-radius: 3px;\n    border-radius: 3px;\n  }\n\n  /* line 75, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse .btn {\n    padding: 4px 10px 4px;\n    font-weight: normal;\n    -webkit-border-radius: 4px;\n    -moz-border-radius: 4px;\n    border-radius: 4px;\n  }\n\n  /* line 80, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse .dropdown-menu li + li a {\n    margin-bottom: 2px;\n  }\n\n  /* line 86, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse .nav &gt; li &gt; a:hover,\n  .nav-collapse .nav &gt; li &gt; a:focus,\n  .nav-collapse .dropdown-menu a:hover,\n  .nav-collapse .dropdown-menu a:focus {\n    background-color: #f2f2f2;\n  }\n\n  /* line 90, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .navbar-inverse .nav-collapse .nav &gt; li &gt; a,\n  .navbar-inverse .nav-collapse .dropdown-menu a {\n    color: #999999;\n  }\n\n  /* line 96, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .navbar-inverse .nav-collapse .nav &gt; li &gt; a:hover,\n  .navbar-inverse .nav-collapse .nav &gt; li &gt; a:focus,\n  .navbar-inverse .nav-collapse .dropdown-menu a:hover,\n  .navbar-inverse .nav-collapse .dropdown-menu a:focus {\n    background-color: #111111;\n  }\n\n  /* line 100, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse.in .btn-group {\n    margin-top: 5px;\n    padding: 0;\n  }\n\n  /* line 105, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse .dropdown-menu {\n    position: static;\n    top: auto;\n    left: auto;\n    float: none;\n    display: none;\n    max-width: none;\n    margin: 0 15px;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    -webkit-border-radius: 0;\n    -moz-border-radius: 0;\n    border-radius: 0;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n    box-shadow: none;\n  }\n\n  /* line 119, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse .open &gt; .dropdown-menu {\n    display: block;\n  }\n\n  /* line 124, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse .dropdown-menu:before,\n  .nav-collapse .dropdown-menu:after {\n    display: none;\n  }\n\n  /* line 127, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse .dropdown-menu .divider {\n    display: none;\n  }\n\n  /* line 132, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse .nav &gt; li &gt; .dropdown-menu:before, .nav-collapse .nav &gt; li &gt; .dropdown-menu:after {\n    display: none;\n  }\n\n  /* line 138, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse .navbar-form,\n  .nav-collapse .navbar-search {\n    float: none;\n    padding: 10px 15px;\n    margin: 10px 0;\n    border-top: 1px solid #f2f2f2;\n    border-bottom: 1px solid #f2f2f2;\n    -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1), 0 1px 0 rgba(255, 255, 255, 0.1);\n    -moz-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1), 0 1px 0 rgba(255, 255, 255, 0.1);\n    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1), 0 1px 0 rgba(255, 255, 255, 0.1);\n  }\n\n  /* line 147, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .navbar-inverse .nav-collapse .navbar-form,\n  .navbar-inverse .nav-collapse .navbar-search {\n    border-top-color: #111111;\n    border-bottom-color: #111111;\n  }\n\n  /* line 152, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .navbar .nav-collapse .nav.pull-right {\n    float: none;\n    margin-left: 0;\n  }\n\n  /* line 158, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse,\n  .nav-collapse.collapse {\n    overflow: hidden;\n    height: 0;\n  }\n\n  /* line 163, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .navbar .btn-navbar {\n    display: block;\n  }\n\n  /* line 169, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .navbar-static .navbar-inner {\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  .page-wrap__inner {\n        padding-top: 0px;\n    }\n}\n@media (min-width: 1206px) {\n  /* line 184, ../../../../.rvm/gems/ruby-1.9.3-p374@goodsounds/gems/bootstrap-sass-2.3.2.2/vendor/assets/stylesheets/bootstrap/_responsive-navbar.scss */\n  .nav-collapse.collapse {\n    height: auto !important;\n    overflow: visible !important;\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using Twitter Bootstrap 2.0.1 in a Rails 3.1.2 project, implemented with bootstrap-sass. I'm loading both the <code>bootstrap.css</code> and the <code>bootstrap-responsive.css</code> files, as well as the <code>bootstrap-collapse.js</code> Javascript.</p>\n\n<p>I have a fluid layout with a navbar similar to the <a href=\"http://twitter.github.com/bootstrap/examples/fluid.html\">example</a>. This follows the navbar \"responsive variation\" instructions <a href=\"http://twitter.github.com/bootstrap/components.html#navbar\">here</a>.  It works fine: if the page is narrower than about 940px, the navbar collapses and displays a \"button\" that I can click on to expand.</p>\n\n<p>However my navbar looks good down to about 550px wide, i.e. it doesn't need to be collapsed unless the screen is very narrow.</p>\n\n<p>How do I tell Bootstrap to only collapse the navbar if the screen is less than 550px wide?</p>\n\n<p>Note that at this point I do <em>not</em> want to modify the other responsive behaviors, e.g. stacking elements instead of displaying them side by side.</p>\n",
            "last_activity_date": 1399604864,
            "question_id": 9405610,
            "score": 76,
            "tags": [
                "css",
                "ruby-on-rails-3",
                "twitter-bootstrap"
            ],
            "title": "How to change navbar collapse threshold using Twitter bootstrap-responsive?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>Perhaps <a href=\"http://www.alistapart.com/articles/multicolumnlayouts/\" rel=\"nofollow\">Multi-Column Layouts Climb Out of the Box</a> is what you're looking for?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think your solution would be to wrap your content container and your sidebar in a parent containing div. Float your sidebar to the left and give it the background image. Create a wide margin at least the width of your sidebar for your content container. Add <a href=\"http://www.positioniseverything.net/easyclearing.html\" rel=\"nofollow\">clearing a float hack</a> to make it all work.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Clearly you are looking for the <a href=\"http://www.alistapart.com/articles/fauxcolumns/\">Faux columns</a> technique :-)</p>\n\n<p>By how the height-property is calculated, you cant set height: 100% inside something that has auto-heigh. </p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>I have run into this issue several times on different projects, but I have found a solution that works for me. You have to use four div tags - one that contains the sidebar, the main content, and a footer. </p>\n\n<p>First, style the elements in your stylesheet:</p>\n\n<pre><code>#container {\nwidth: 100%;\nbackground: #FFFAF0;\n}\n\n.content {\nwidth: 950px;\nfloat: right;\npadding: 10px;\nheight: 100%;\nbackground: #FFFAF0;\n}\n\n.sidebar {\nwidth: 220px;\nfloat: left;\nheight: 100%;\npadding: 5px;\nbackground: #FFFAF0;\n}\n\n#footer {\nclear:both;\nbackground:#FFFAF0;\n}\n</code></pre>\n\n<p>You can edit the different elements however you want to, just be sure you dont change the footer property \"clear:both\" - this is very important to leave in. </p>\n\n<p>Then, simply set up your web page like this:</p>\n\n<pre><code>&lt;div id=\u201dcontainer\u201d&gt;\n&lt;div class=\u201dsidebar\u201d&gt;&lt;/div&gt;\n&lt;div class=\u201dcontent\u201d&gt;&lt;/div&gt;\n&lt;div id=\u201dfooter\u201d&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I wrote a more in-depth blog post about this at <a href=\"http://blog.thelibzter.com/how-to-make-a-sidebar-extend-the-entire-height-of-its-container\" rel=\"nofollow\">http://blog.thelibzter.com/how-to-make-a-sidebar-extend-the-entire-height-of-its-container</a>. Please let me know if you have any questions. Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I was facing the same problem as Jon. TheLibzter put me on the right track, but the image that has to stay at the bottom of the sidebar was not included. So I made some adjustments...</p>\n\n<p>Important:</p>\n\n<ul>\n<li>Positioning of the div which contains the sidebar and the content (#bodyLayout). This should be relative.</li>\n<li>Positioning of the div that has to stay at the bottom of the sidbar (#sidebarBottomDiv). This should be absolute.</li>\n<li>The width of the content + the width of the sidebar must be equal to the width of the page (#container)</li>\n</ul>\n\n<p>Here's the css:</p>\n\n<pre><code>    #container\n    {\n        margin: auto;\n        width: 940px;\n    }\n    #bodyLayout\n    {\n        position: relative;\n        width: 100%;\n        padding: 0;\n    }\n    #header\n    {\n        height: 95px;\n        background-color: blue;\n        color: white;\n    }\n    #sidebar\n    {\n        background-color: yellow;\n    }\n    #sidebarTopDiv\n    {\n        float: left;\n        width: 245px;\n        color: black;\n    }\n    #sidebarBottomDiv\n    {\n        position: absolute;\n        float: left;\n        bottom: 0;\n        width: 245px;\n        height: 100px;\n        background-color: green;\n        color: white;\n    }\n    #content\n    {\n        float: right;\n        min-height: 250px;\n        width: 695px;\n        background-color: White;\n    }\n    #footer\n    {\n        width: 940px;\n        height: 75px;\n        background-color: red;\n        color: white;\n    }\n    .clear\n    {\n        clear: both;\n    }\n</code></pre>\n\n<p>And here's the html:</p>\n\n<pre><code>&lt;div id=\"container\"&gt;\n    &lt;div id=\"header\"&gt;\n        This is your header!\n    &lt;/div&gt;\n    &lt;div id=\"bodyLayout\"&gt;\n        &lt;div id=\"sidebar\"&gt;\n            &lt;div id=\"sidebarTopDiv\"&gt;\n                This is your sidebar!                   \n            &lt;/div&gt;\n            &lt;div id=\"content\"&gt;                  \n            This is your content!&lt;br /&gt;\n            The minimum height of the content is set to 250px so the div at the bottom of\n            the sidebar will not overlap the top part of the sidebar.\n            &lt;/div&gt;\n            &lt;div id=\"sidebarBottomDiv\"&gt;\n                This is the div that will stay at the bottom of your footer!\n            &lt;/div&gt;\n            &lt;div class=\"clear\" /&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"footer\"&gt;\n    This is your footer!\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This worked for me</p>\n\n<pre><code>.container { \n  overflow: hidden; \n  .... \n} \n\n#sidebar { \n  margin-bottom: -5000px; /* any large number will do */\n  padding-bottom: 5000px; \n  .... \n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 56
                },
                {
                    "body": "<p>Until CSS's flexbox becomes more mainstream, you can always just absolutely position the sidebar, sticking it zero pixels away from the top and bottom, then set a margin on your main container to compensate.</p>\n\n<p><strong>JSFiddle</strong></p>\n\n<p><a href=\"http://jsfiddle.net/QDCGv/\">http://jsfiddle.net/QDCGv/</a></p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;section class=\"sidebar\"&gt;I'm a sidebar.&lt;/section&gt;\n\n&lt;section class=\"main\"&gt;I'm the main section.&lt;/section&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>section.sidebar {\n  width: 250px;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  background-color: green;\n}\n\nsection.main { margin-left: 250px; }\n</code></pre>\n\n<p><strong>Note</strong>: This is an \u00fcber simple way to do this but you'll find <code>bottom</code> does not mean \"bottom of page,\" but \"bottom of window.\" The sidebar will probably abrubtly end if your main content scrolls down.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I would use <strong>css tables</strong> to achieve a 100% sidebar height. </p>\n\n<p>The basic idea is to wrap the sidebar and main divs in a container.</p>\n\n<p>Give the container a <code>display:table</code></p>\n\n<p>And give the 2 child divs (sidebar and main) a <code>display: table-cell</code></p>\n\n<p>Like so..</p>\n\n<pre><code>#container {\ndisplay: table;\n}\n#main {\ndisplay: table-cell;\nvertical-align: top;\n}\n#sidebar {\ndisplay: table-cell;\nvertical-align: top;\n} \n</code></pre>\n\n<p>Take a look at this <strong><a href=\"http://jsfiddle.net/danield770/QXZYe/1/\">LIVE DEMO</a></strong> where I have modified your initial markup using the above technique  (I have used background colors for the different divs so that you can see which ones are which)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>i guess, today one would probably use flexbox for this. See the <a href=\"http://philipwalton.github.io/solved-by-flexbox/demos/holy-grail/\" rel=\"nofollow\">holy grail example</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>use body background if you are using fixed width sidebar give the same width image as your side bar. also put background-repeat:repeat-y in your css codes.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Further to @montrealmike 's answer, can I just add my adaptation?</p>\n\n<p>I did this:</p>\n\n<pre><code>.container { \n  overflow: hidden; \n  .... \n} \n\n#sidebar { \n  margin-bottom: -101%;\n  padding-bottom: 101%; \n  .... \n} \n</code></pre>\n\n<p>I did the \"101%\" thing to cater for the (ultra rare) possibility that somebody may be viewing the site on a huge screen with a height more than 5000px!</p>\n\n<p>Great answer though, montrealmike. It worked perfectly for me.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I realise this is an old post but I was trying to work something out for my site to have a sidebar.\nWould this work?</p>\n\n<pre><code>#sidebar-background\n{\n    position:fixed;\n    width:250px;\n    top:0;\n    bottom:0;\n    background-color:orange;\n}\n\n#content-background\n{\n    position:fixed;\n    right:0;\n    top:0;\n    bottom:0;\n    left:250px;\n    background-color:pink;\n}\n\n#sidebar\n{\n    float:left;\n    width:250px;\n}\n\n#content\n{\n    float:left;\n    width:600px;\n}\n\n&lt;div id=\"sidebar-background\"&gt;&lt;/div&gt;\n&lt;div id=\"content-background\"&gt;&lt;/div&gt;\n\n&lt;div id=\"sidebar\"&gt;Sidebar stuff here&lt;/div&gt;\n&lt;div id=\"content\"&gt;Stuff in here&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Position absolute, top:0 and bottom:0 for the sidebar and position relative for the wrapper (or container) witch content all the elements and it's done !</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been banging my head against the wall for hours trying to figure out this issue and think it must be something small I'm missing.  I've searched online, but nothing I have found seems to work.  The HTML is: </p>\n\n<pre><code>&lt;body&gt;\n  &lt;div id=\"header\"&gt;\n    &lt;div id=\"bannerleft\"&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"bannerright\"&gt;\n      &lt;div id=\"WebLinks\"&gt;\n        &lt;span&gt;Web Links:&lt;/span&gt;\n        &lt;ul&gt;\n          &lt;li&gt;&lt;a href=\"#\"&gt;&lt;img src=\"../../Content/images/MySpace_32x32.png\" alt=\"MySpace\"/&gt;&lt;/a&gt;&lt;/li&gt;\n          &lt;li&gt;&lt;a href=\"#\"&gt;&lt;img src=\"../../Content/images/FaceBook_32x32.png\" alt=\"Facebook\"/&gt;&lt;/a&gt;&lt;/li&gt;\n          &lt;li&gt;&lt;a href=\"#\"&gt;&lt;img src=\"../../Content/images/Youtube_32x32.png\" alt=\"YouTube\"/&gt;&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div id=\"Sidebar\"&gt;\n    &lt;div id=\"SidebarBottom\"&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div id=\"NavigationContainer\"&gt;\n    &lt;ul id=\"Navigation\"&gt;\n      &lt;li&gt;&lt;a href=\"#\"&gt;Nav&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"#\"&gt;Nav&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"#\"&gt;Nav&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"#\"&gt;Nav&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"#\"&gt;Nav&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"#\"&gt;Nav&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n  &lt;div id=\"Main\"&gt;\n    &lt;!-- content --&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>My full CSS is:</p>\n\n<pre><code>*\n{\n    margin:0px;\n    padding:0px;\n}\n\nbody \n{\n    font-family:Calibri, Sans-Serif;\n    height:100%;\n}\n#header\n{\n    width:100%;\n    z-index:1;\n    height:340px;\n    background-image:url(\"../../Content/images/bannercenter.gif\");\n    background-repeat:repeat-x;\n}\n#header\n#bannerleft\n{\n    float:left;\n    background-image:url(\"../../Content/images/bannerleft.gif\");\n    background-repeat:no-repeat;\n    height:340px;\n    width:439px;\n    z-index:2;\n}\n#bannerright\n{\n    float:right;\n    background-image:url(\"../../Content/images/bannerright.gif\");\n    background-repeat:no-repeat;\n    width:382px;\n    height:340px;\n    background-color:White;\n    z-index:2;\n}\n#Sidebar\n{\n    width:180px;\n    background:url(\"../../Content/images/Sidebar.png\") repeat-y;\n    z-index:2;\n    height:100%;\n    position:absolute;\n}\n#SidebarBottom\n{\n\n    margin-left:33px;\n    height:100%;\n    background: url(\"../../Content/images/SidebarImage.png\") no-repeat bottom;\n}\n#NavigationContainer\n{\nposition:absolute;\ntop:350px;\nwidth:100%;\nbackground-color:#bbc4c3;\nheight:29px;\nz-index:1;\n    left: 0px;\n}\n#Navigation\n{\nmargin-left:190px;\nfont-family:Calibri, Sans-Serif;\n}\n#Navigation li\n{\nfloat:left;\nlist-style:none;\npadding-right:3%;\npadding-top:6px;\nfont-size:100%;\n}\n#Navigation a:link, a:active, a:visited\n{\ncolor:#012235;\ntext-decoration:none;\nfont-weight:500;\n}\n#Navigation a:hover\n{\n    color:White;\n}\n#WebLinks\n{\nfloat:right;\ncolor:#00324b;\nmargin-top:50px;\nwidth: 375px;\n}\n#WebLinks span\n{\nfloat:left;\nmargin-right:7px;\nmargin-left:21px;\nfont-size:10pt;\nmargin-top:8px;\nfont-family:Helvetica;\n}\n#WebLinks ul li\n{\nfloat:left;\npadding-right:7px;\nlist-style:none;\n}\n#WebLinks ul li a\n{\ntext-decoration:none;\nfont-size:8pt;\ncolor:#00324b;\nfont-weight:normal;\n}\n#WebLinks ul li a img\n{\n    border-style:none;\n}\n#WebLinks ul li a:hover\n{\n    color:#bcc5c4;\n}\n</code></pre>\n\n<p>I'd like the sidebar to stretch in height with the content of my page and leave the sidebar bottom image always at the bottom of the sidebar.  </p>\n",
            "last_activity_date": 1403711910,
            "question_id": 791231,
            "score": 40,
            "tags": [
                "css"
            ],
            "title": "CSS Sidebar Height 100%"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I've found the best method is to write your default CSS for the older browsers, as older browsers including i.e. 5.5, 6, 7 and 8. Can't read @media. When I use @media I use it like this:</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n    /* default styles here for older browsers. \n       I tend to go for a 600px - 960px width max but using percentages\n    */\n    @media only screen and (min-width:960px){\n        /* styles for browsers larger than 960px; */\n    }\n    @media only screen and (min-width:1440px){\n        /* styles for browsers larger than 1440px; */\n    }\n    @media only screen and (min-width:2000px){\n        /* for sumo sized (mac) screens */\n    }\n    @media only screen and (max-device-width:480px){\n       /* styles for mobile browsers smaller than 480px; (iPhone) */\n    }\n    @media only screen and (device-width:768px){\n       /* default iPad screens */\n    }\n    /* different techniques for iPad screening */\n    @media only screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation:portrait) {\n      /* For portrait layouts only */\n    }\n\n    @media only screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation:landscape) {\n      /* For landscape layouts only */\n    }\n&lt;/style&gt;\n</code></pre>\n\n<p>But you can do whatever you like with your @media, This is just an example of what I've found best for me when building styles for all browsers.</p>\n\n<p><a href=\"http://css-tricks.com/snippets/css/ipad-specific-css/\">iPad CSS specifications.</a></p>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>I think the underlying issue is using <code>max-device-width</code> vs plain old <code>max-width</code>. Using the \"device\" keyword targets physical dimension of the screen, not the width of the browser window.</p>\n\n<p>For example:</p>\n\n<pre><code>@media only screen and (max-device-width: 480px) {\n    /* STYLES HERE for DEVICES with physical max-screen width of 480px */\n}\n</code></pre>\n\n<p>Versus</p>\n\n<pre><code>@media only screen and (max-width: 480px) {\n    /* STYLES HERE for BROWSER WINDOWS with a max-width of 480px. This will work on desktops when the window is narrowed.  */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have this <code>@media</code> setup</p>\n\n<p><strong>HTML</strong>:</p>\n\n<pre><code>&lt;head&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, user-scalable=no\" /&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p><strong>CSS</strong>:</p>\n\n<pre><code>@media screen and (min-width: 769px) {\n    /* STYLES HERE */\n}\n\n@media screen and (min-device-width: 481px) and (max-device-width: 768px) { \n    /* STYLES HERE */\n}\n\n@media only screen and (max-device-width: 480px) {\n    /* STYLES HERE */\n}\n</code></pre>\n\n<p>With this setup in works to view it on the iPhone but it does not work in the browser. \nIt's really irritating so help is highly appreciated. Is it because I already have device in the meta and maybe have (<code>max-width:480px</code>) instead? </p>\n",
            "last_activity_date": 1404847463,
            "question_id": 13550541,
            "score": 32,
            "tags": [
                "css",
                "mobile",
                "media-queries"
            ],
            "title": "@Media min-width &amp; max-width"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><strong>EDIT</strong>: Okay, I found another possible solution. Check your html meta tags for something like this: </p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=0\"&gt;\n</code></pre>\n\n<p>Replace it with this:</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.0, target-densityDpi=device-dpi\" /&gt;\n</code></pre>\n\n<p>This fixed the problem for me. I should note that my app is using Cordova though.</p>\n\n<p><strong>Another possible solution</strong>:</p>\n\n<p>If you look in config.xml (probably under the resources directory, you should see a line that says:</p>\n\n<pre><code>&lt;preference name=\"KeyboardShrinksView\" value=\"false\" /&gt;\n</code></pre>\n\n<p>If you set that to true, it keeps footers from moving above the soft keyboard. However, this also causes the keyboard to sometimes cover up the text field that the user is typing in.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>Approved answer works, but can mess with some CSS, so I have to use something else. It's not my fix, but found it on the <a href=\"https://issues.apache.org/jira/browse/CB-4940\" rel=\"nofollow\">internet</a> and it worked for me:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;body onResize=\"onResize();\"&gt;\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>function onResize(){\n    var ios7 = (device.platform == 'iOS' &amp;&amp; parseInt(device.version) &gt;= 7);\n    if (ios7){\n        var height = $('body').height();\n        if (height &lt; 350){ // adjust this height value conforms to your layout\n            $('.myBottomMenu').hide();\n        }\n        else {\n            $('.myBottomMenu').show();\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In my case I used\n to capture the event when entering into input text fields events and hiding the bottom bar\nusing</p>\n\n<pre><code>if($(event.target).hasClass(\"inputtextfield\")){\n\n        $('.bottom_bar').hide();}\n</code></pre>\n\n<p>and capture the  event when the keyboard is closed and show back the keyboard using</p>\n\n<pre><code>document.addEventListener('focusout', function(e) { $('.bottom_bar').show();});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There's the culprit in your <code>#footer</code> class\n<code>bottom:0px;</code>\nIf you give <code>bottom</code> to any element, on appearance of virtual keyboard, those elements move upwards in iOS 7.\nThe workaround is to use <code>top</code> property.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is how we have resolved it:\ncordova 2.9.0.\nSolution 1. adding the viewport meta tag did resolve to some extent but not completely.Hence dropped it.\nSolution 2.</p>\n\n<pre><code>$(document).on('focus','input, select, textarea',function() {\n        if(OSName=== 'iOS' &amp;&amp; ver[0] === 7){\n                if($(this).attr('readonly')===undefined){\n                        $('#footer').hide()\n                }\n         }\n});\n$(document).on('blur','input, select, textarea',function(){\n             if(OSName=== 'iOS' &amp;&amp; ver[0] === 7){\n                   if($(this).attr('readonly')===undefined){\n                   $('#footer').show();\n                   }\n              }\n});\n</code></pre>\n\n<p>where #footer is the id of the div whihc holds footer.\nThis will show the toolbar for a flash of a second and the hide it, to avoid this flicker we have added some code in the native, \n1.Register for the keyboardshow event in your MainViewcontroller.m\nadd the following in the init functioon:</p>\n\n<pre><code>//fix for ios7 footer is scrolled up when the keyboard popsup.\n        [[NSNotificationCenter defaultCenter] addObserver:self\n                                                 selector:@selector(keyboardWillShow:)\n                                                     name:UIKeyboardWillShowNotification\n                                                   object:nil];\n</code></pre>\n\n<p>2.add the following function</p>\n\n<pre><code>-(void)keyboardWillShow:(NSNotification*)notification{\n    //call the javascript to hide the footer.\n    //fix for ios7 footer is scrolled along wiht the content when the keyboard comesup.\n    if (IsAtLeastiOSVersion(@\"7.0\")){\n        [self.webView stringByEvaluatingJavaScriptFromString:@\"()\"];\n    }\n}\n</code></pre>\n\n<p>3.In the js file add the function</p>\n\n<pre><code>//Fix for footer is misalligned when the virtual keyboard pops up ios7\n//check for device is iPhone and os version is 7\nfunction hideFooter(){\n    if(OSName=== 'iOS' &amp;&amp; ver[0] === 7){\n        if($(this).attr('readonly')===undefined)\n            $('#footer').hide();\n    }\n}\n</code></pre>\n\n<p>Let us know if this solution works for u.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm a bit late but this works well:</p>\n\n<pre><code>var footer = $(\".footer\");\nfooter.css({ \"top\": footer.position().top, \"bottom\": \"auto\"});\n</code></pre>\n\n<p>This assumes a fixed or absolutely positioned element that has bottom: <em>some number</em> originally. Add this to wherever it is appropriate in your javascript scripts (probably on a function that is called when the page loads). This uses jQuery but it easily translates into javascript. This basically forces the footer to stay on the bottom related by the 'top' value instead of the ;bottom' value.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm having a problem with a div element to stick to the bottom of my web app when ios 7 virtual keyboard appears after pressing a textbox.</p>\n\n<p>I've this div element:</p>\n\n<pre><code>....\n        &lt;div id=\"footer\" style=\"text-align:center\"&gt;\n            &lt;div id=\"idName\"&gt;&lt;img alt=\"SomeName\" src=\"images/logo.png\" /&gt;&lt;/div&gt;\n        &lt;/div&gt;\n\n    &lt;/form&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p></p>\n\n<p>It uses this style</p>\n\n<pre><code>#footer{\ncolor:#CCC;\nheight: 48px;\n\nposition:fixed;\nz-index:5;\nbottom:0px;\nwidth:100%;\npadding-left:2px;\npadding-right:2px;\npadding:0;\n\nborder-top:1px solid #444;\n\nbackground:#222; /* Old browsers */\nbackground:-webkit-gradient(linear, 0 0, 0 100%, color-stop(0, #999), color-stop(0.02, #666), color-stop(1, #222));  \nbackground:    -moz-linear-gradient(top, #999, #666 2%, #222); /* FF3.6+ */    \nbackground: -webkit-linear-gradient(top, #999, #666 2%, #222); /* Chrome10+,Safari5.1+ */\nbackground:      -o-linear-gradient(top, #999, #666 2%, #222); /* Opera 11.10+ */\nbackground:     -ms-linear-gradient(top, #999, #666 2%, #222); /* IE10+ */\nbackground:         linear-gradient(top, #999, #666 2%, #222); /* W3C */\n}\n</code></pre>\n\n<p>And when I press on the textbox, the footer elementer jumps up above the virtual keyboard.\nIt used to work when my iDevices was running on versions before ios 7.</p>\n\n<p>On the left side is before pressing the textbox and on the right side is after pressing the textbox.</p>\n\n<p><img src=\"http://i.stack.imgur.com/hfMca.png\" alt=\"Left side: Before. Right side: After\"></p>\n\n<p>The footer jumps above the virtual keyboard.</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>I've changed the meta tag provided by Opossum and now the footer stays at the bottom:</p>\n\n<pre><code>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;!--&lt;meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=0\"&gt;--&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.0, target-densityDpi=device-dpi\"/&gt;\n&lt;meta name=\"apple-mobile-web-app-capable\" content=\"yes\" /&gt;\n&lt;meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" /&gt;\n</code></pre>\n\n<p><strong>Extension</strong></p>\n\n<p>This is not a part of the question, but the fix screws things up when running on a Android :)\nAny solution for that?</p>\n\n<p>Solution: removed maximum-scale  and target-densityDpi and now it works for both IOS and Android. The meta tag now looks like this:</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=0, width=device-width, height=device-height\"/&gt;\n</code></pre>\n",
            "last_activity_date": 1415658360,
            "question_id": 18977540,
            "score": 20,
            "tags": [
                "html",
                "asp.net",
                "css",
                "ios7"
            ],
            "title": "Div element won&#39;t stay at the bottom when ios 7 virtual keyboard is present"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>This always works for me:</p>\n\n<pre><code>&lt;head&gt;\n    &lt;title&gt;&lt;/title&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;\n    &lt;style type=\"text/css\"&gt;\n    \thtml, body {\n    \t\theight: 100%;\n    \t\tmargin: 0;\n    \t}\n\n    \t#wrapper {\n    \t\tmin-height: 100%; \n    \t}\n    &lt;/style&gt;\n    &lt;!--[if lte IE 6]&gt;\n    &lt;style type=\"text/css\"&gt;\n    \t#container {\n    \t\theight: 100%;\n    \t}\n    &lt;/style&gt;\n    &lt;![endif]--&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div id=\"wrapper\"&gt;some content&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>This is probably the simplest solution to this problem. Only need to set four CSS attributes (although one of them is only to make <em>stupid</em> IE happy).</p>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>Unfortunately, the <code>height</code> property in CSS is not as reliable as it should be.  Therefore, Javascript will have to be used to set the height style of the element in question to the height of the users viewport.  And yes, this can be done without absolute positioning...</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Test by Josh&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n      * { padding:0; margin:0; }\n      #test { background:#aaa; height:100%; width:100%; }\n    &lt;/style&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      window.onload = function() {\n        var height = getViewportHeight();\n\n        alert(\"This is what it looks like before the Javascript. Click OK to set the height.\");\n\n        if(height &gt; 0)\n          document.getElementById(\"test\").style.height = height + \"px\";\n      }\n\n      function getViewportHeight() {\n        var h = 0;\n\n        if(self.innerHeight)\n          h = window.innerHeight;\n        else if(document.documentElement &amp;&amp; document.documentElement.clientHeight)\n          h = document.documentElement.clientHeight;\n        else if(document.body) \n          h = document.body.clientHeight;\n\n        return h;\n      }\n    &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"test\"&gt;\n      &lt;h1&gt;Test&lt;/h1&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't have IE Josh, could you please test this for me. Thanks.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Hellomoto&lt;/title&gt;\n    &lt;style text=\"text/javascript\"&gt;\n    \t.hellomoto\n    \t{\n    \t\tbackground-color:#ccc;\n    \t\tposition:absolute;\n    \t\ttop:0px;\n    \t\tleft:0px;\n    \t\twidth:100%;\n    \t\theight:100%;\n    \t\toverflow:auto;\n    \t}\n    \tbody\n    \t{\n    \t\tbackground-color:#ff00ff;\n    \t\tpadding:0px;\n    \t\tmargin:0px;\n    \t\twidth:100%;\n    \t\theight:100%;\n    \t\toverflow:hidden;\n    \t}\n    \t.text\n    \t{\n    \t\tbackground-color:#cc00cc;\n    \t\theight:800px;\n    \t\twidth:500px;\n    \t}\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=\"hellomoto\"&gt;\n    &lt;div class=\"text\"&gt;hellomoto&lt;/div&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>This is my solution to create a fullscreen div, using pure css.\nIt displays a full screen div that is persistent on scrolling.\nAnd if the page content fits on the screen, the page won't show a scroll-bar.</p>\n\n<p>Tested in IE9, Firefox 13, Chrome 21</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\" /&gt;\n  &lt;title&gt; Fullscreen Div &lt;/title&gt;\n  &lt;style&gt;\n  .overlay {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background: rgba(51,51,51,0.7);\n    z-index: 10;\n  }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div class='overlay'&gt;&lt;/div&gt;\n  &lt;p&gt; Fullscreen Div&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Instated of CSS you can use Jquery to do this easily. No matter what height and what width of the page.</p>\n\n<pre><code>$(document).ready(function () {\n  $(\"#box\").height(screenheight);\n  $(\"#box\").width(screenwidth);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>The best way to do this with modern browsers would be to make use of <a href=\"http://www.w3.org/TR/css3-values/#viewport-relative-lengths\" rel=\"nofollow\">Viewport-percentage Lengths</a>, falling back to regular percentage lengths for <a href=\"http://caniuse.com/#feat=viewport-units\" rel=\"nofollow\">browsers which do not support those units</a>.</p>\n\n<p>Viewport-percentage lengths are based upon the length of the viewport itself. The two units we will use here are <code>vh</code> (viewport height) and <code>vw</code> (viewport width). <code>100vh</code> is equal to 100% of the height of the viewport, and <code>100vw</code> is equal to 100% of the width of the viewport.</p>\n\n<p>Assuming the following HTML:</p>\n\n<pre><code>&lt;body&gt;\n    &lt;div&gt;&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>You can use the following:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>html, body, div {\n    /* Height and width fallback for older browsers. */\n    height: 100%;\n    width: 100%;\n\n    /* Set the height to match that of the viewport. */\n    height: 100vh;\n\n    /* Set the width to match that of the viewport. */\n    width: 100vw;\n\n    /* Remove any browser-default margins. */\n    margin: 0;\n}\n</code></pre>\n\n<p>Here is a <a href=\"http://jsfiddle.net/qgEwA/\" rel=\"nofollow\"><strong>JSFiddle demo</strong></a> which shows the <code>div</code> element filling both the height and width of the result frame. If you resize the result frame, the <code>div</code> element resizes accordingly.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is the most stable (and easy) way to do it, and it works in all modern browsers:</p>\n\n<pre><code>.fullscreen {\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n}\n</code></pre>\n\n<p><sub>Based on emulation in IE11, I have tested this to work with IE7+.</sub></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Following CSS program that cover the full screen and povide a close button to baack to the main scree.</p>\n\n<pre><code>.button\n{\n    width: 150px;\n    padding: 10px;\n    background-color: #FF8C00;\n    box-shadow: -8px 8px 10px 3px rgba(0,0,0,0.2);\n    font-weight:bold;\n    text-decoration:none;\n}\n#cover{\n    position:fixed;\n    top:0;\n    left:0;\n    background:rgba(0,0,0,0.6);\n    z-index:5;\n    width:100%;\n    height:100%;\n    display:none;\n}\n#loginScreen\n{\n    height:380px;\n    width:340px;\n    margin:0 auto;\n    position:relative;\n    z-index:10;\n    display:none;\n    background: url(login.png) no-repeat;\n    border:5px solid #cccccc;\n    border-radius:10px;\n}\n#loginScreen:target, #loginScreen:target + #cover{\n    display:block;\n    opacity:2;\n}\n.cancel\n{\n    display:block;\n    position:absolute;\n    top:3px;\n    right:2px;\n    background:rgb(245,245,245);\n    color:black;\n    height:30px;\n    width:35px;\n    font-size:30px;\n    text-decoration:none;\n    text-align:center;\n    font-weight:bold;\n}\n</code></pre>\n\n<p>Full source...<a href=\"http://www.corelangs.com/css/box/fulloverlay.html\" rel=\"nofollow\">Full screen overlay</a></p>\n\n<p>George</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>No matter how its content is like.</p>\n\n<p>Is it possible to do this?</p>\n",
            "last_activity_date": 1402723656,
            "question_id": 1719452,
            "score": 45,
            "tags": [
                "css",
                "html"
            ],
            "title": "How to make a &lt;div&gt; always full screen?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You have to add the folder to the assets path (to file <code>config/application.rb</code>), see <a href=\"http://guides.rubyonrails.org/asset_pipeline.html#asset-organization\">Rails Guides</a></p>\n\n<pre><code>config.assets.paths &lt;&lt; \"#{Rails.root}/app/assets/fonts\"\n</code></pre>\n\n<p>And you should use the <code>asset_path</code> helper:</p>\n\n<pre><code>src: url('&lt;%= asset_path('Chunkfive-webfont.eot') %&gt;');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>I just updated that article on Atomic Object's Spin blog. Here is the CSS converted (You were looking at the Sass syntax)</p>\n\n<pre><code>@font-face {\n  font-family: \"Merriweather\";\n  src: url(/assets/merriweather-black-webfont.eot);\n  src: local(\"Merriweather Heavy\"), local(\"Merriweather-Heavy\"), url(/assets/merriweather-black-webfont.eot?#iefix) format(\"embedded-opentype\"), url(/assets/merriweather-black-webfont.woff) format(\"woff\"), url(/assets/merriweather-black-webfont.ttf) format(\"truetype\"), url(/assets/merriweather-black-webfont.svg#MerriweatherHeavy) format(\"svg\");\n  font-weight: 900;\n  font-style: normal;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm using 3.1.1 and have my fonts under vendor/assets/store (Spree implementation).  The solutions given here did not work for me and I eventually just tried what ended up being my solution - there was no need for</p>\n\n<p>Here's an example of my src attribute for EOT:</p>\n\n<pre><code>src: url('1617A5_4.eot');\n</code></pre>\n\n<p>I'm a little bit confused by this but it seems like once assets are compiled the assets are all copied in to their parent folder (assets/store/) at which point the stylesheet can just pick them up.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know this is an old question, but I just stumbled across this issue with rails 3.2, and after reading the link to the documentation posted previously, there was no need to edit the application.rb. All I needed to do was do the following in my stylesheet (using sass)</p>\n\n<pre><code>@font-face {\n    font: {\n       family: 'Junction';\n       weight: 'normal';\n       style: 'normal';\n    }\n    src: asset-url('Junction-webfont.eot', font);\n    src: asset-url('Junction-webfont.eot', font) format('embedded-opentype'),\n         asset-url('Junction-webfont.woff', font) format('woff'),\n         asset-url('Junction-webfont.ttf', font) format('truetype'),\n         asset-url('Junction-webfont.svg#JunctionRegular', font) format('svg')\n}\n</code></pre>\n\n<p>So instead of using url, I used the generic asset-url, which takes 2 arguments, the file and the asset class, in this case 'font'. </p>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>From Rails 3.1 and above you can call <code>font-url</code> directly. Like this:</p>\n\n<pre><code>@font-face {\n  font-family: 'ChunkFiveRegular';\n  src: font-url('Chunkfive-webfont.eot');\n  src: font-url('Chunkfive-webfont.eot?#iefix') format('embedded-opentype'),\n     font-url('Chunkfive-webfont.woff') format('woff'),\n     font-url('Chunkfive-webfont.ttf') format('truetype'),\n     font-url('Chunkfive-webfont.svg#ChunkFiveRegular') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n</code></pre>\n\n<p>Expect your final css to look like that:</p>\n\n<pre><code>@font-face {\n  font-family: 'ChunkFiveRegular';\n  src: url(/assets/Chunkfive-webfont.eot);\n  src: url(/assets/Chunkfive-webfont.eot?#iefix) format('embedded-opentype'),\n     url(/assets/Chunkfive-webfont.woff) format('woff'),\n     url(/assets/Chunkfive-webfont.ttf) format('truetype'),\n     url(/assets/Chunkfive-webfont.svg#ChunkFiveRegular) format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n</code></pre>\n\n<p>Usually works :)</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Using Rails 4.0 (don't know if this is specific to 4, but anyway), I was only able to make it work with <code>url(font_path('font-name.ttf'))</code>. Adding the fonts path to the assets path was not necessary either (<strike><code>config.assets.paths &lt;&lt; \"#{Rails.root}/app/assets/fonts\"</code></strike>).</p>\n\n<p>So, to me this is what worked:</p>\n\n<pre><code>@font-face {\n  font-family: 'ChunkFiveRegular';\n  src: url(font_path('Chunkfive-webfont.eot'));\n  src: url(font_path('Chunkfive-webfont.eot?#iefix')) format('embedded-opentype'),\n     url(font_path('Chunkfive-webfont.woff')) format('woff'),\n     url(font_path('Chunkfive-webfont.ttf')) format('truetype'),\n     url(font_path('Chunkfive-webfont.svg#ChunkFiveRegular')) format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>While this is late, you could use Compass's <code>+font-face</code> mix-in to avoid all this trouble. The mixin helps your life easier by </p>\n\n<ol>\n<li><p>Not remember the awful caveats of the traditional font-face decleration </p></li>\n<li><p>It internally handles url_helper and format declarations for you </p></li>\n<li><p>It's far easier to remember </p></li>\n</ol>\n\n<p>It is declared the following way madams and gentlemen: </p>\n\n    \n\n<pre><code>+font-face(\"#{$font-name}\",\n  font-files(\"#{$font-name}.woff\", woff, \n  \"#{$fontFileName}.ttf\", ttf, \n  \"#{$fontFileName}.svg\", svg), \"#{$fontFileName}.eot\", normal, normal);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm having trouble using the following <code>@font-face</code> declaration to work with my Rails 3.1 app.  I put the fonts in the Asset Pipeline in its own folder called \"Fonts\" alongside <code>images</code> and <code>stylesheets</code> and <code>javascripts</code></p>\n\n<p>Here is the declaration I used (generated by Font Squirrel.)</p>\n\n<pre><code>@font-face {\n  font-family: 'ChunkFiveRegular';\n  src: url('Chunkfive-webfont.eot');\n  src: url('Chunkfive-webfont.eot?#iefix') format('embedded-opentype'),\n     url('Chunkfive-webfont.woff') format('woff'),\n     url('Chunkfive-webfont.ttf') format('truetype'),\n     url('Chunkfive-webfont.svg#ChunkFiveRegular') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n</code></pre>\n\n<p>Anyone successfully utilize @font-face on their Rails 3.1 app?</p>\n\n<p><strong>Update</strong></p>\n\n<p>I just read this thread <a href=\"http://spin.atomicobject.com/2011/09/26/serving-fonts-in-rails-3-1/\">http://spin.atomicobject.com/2011/09/26/serving-fonts-in-rails-3-1/</a> that said to change <code>url</code> to <code>font-url</code> in the declarations.  That didn't seem to work either unfortunately.</p>\n",
            "last_activity_date": 1381705002,
            "question_id": 7973271,
            "score": 28,
            "tags": [
                "css",
                "css3",
                "ruby-on-rails-3.1",
                "font-face",
                "sass"
            ],
            "title": "Using @font-face with Rails 3.1 app?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>See:</strong> <a href=\"http://jsfiddle.net/qx32C/36/\">http://jsfiddle.net/qx32C/36/</a></p>\n\n<pre><code>&lt;div class=\"lineContainer\"&gt;\n    &lt;div class=\"left\"&gt;left&lt;/div&gt;\n    &lt;div class=\"right\"&gt;right&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<hr>\n\n<pre><code>.lineContainer {\n    overflow: hidden; /* clear the float */\n    border: 1px solid #000\n}\n.lineContainer div {\n    height: 10px\n} \n.left {\n    width: 100px;\n    float: left;\n    border-right: 1px solid #000\n}\n.right {\n    overflow: hidden;\n    background: #ccc\n}\n</code></pre>\n\n<hr>\n\n<p><a href=\"http://colinaarts.com/articles/the-magic-of-overflow-hidden/#making-room-for-floats\">Why did I replace <code>margin-left: 100px</code> with <code>overflow: hidden</code> on <code>.right</code>?</a></p>\n",
                    "is_accepted": false,
                    "score": 90
                },
                {
                    "body": "<p>Compatible with common modern browers (IE 8+): <a href=\"http://jsfiddle.net/m5Xz2/3/\">http://jsfiddle.net/m5Xz2/3/</a></p>\n\n<pre><code>&lt;div class=\"lineContainer\"&gt;\n    &lt;div class=\"left\"&gt;left&lt;/div&gt;\n    &lt;div class=\"right\"&gt;right&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<hr>\n\n<pre><code>.lineContainer {\n    display:table;\n    border-collapse:collapse;\n    width:100%;\n}\n.lineContainer div {\n    display:table-cell;\n    border:1px solid black;\n    height:10px;\n}\n.left {\n    width:100px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>If you can't use overflow:hidden (because you don't want overflow:hidden) or maybe because you morally object to css hacks/workarounds, here's a javascript solution (doesn't work as well because it's javascript).</p>\n\n<pre><code>&lt;div class=\"lineContainer\"&gt;\n    &lt;div class=\"left\"&gt;&lt;/div&gt;\n    &lt;div class=\"right\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>_</p>\n\n<pre><code>.lineContainer {\nwidth:100%\nborder: 1px solid #000;\nfont-size:0px;/*you gotta do this because inline block puts an invisible space between them and they     wont fit on the same line*/\n}\n.lineContainer div {\n    height: 10px;\n    display:inline-block;\n} \n.left {\n    width: 100px;\n    background:red\n}\n.right {\n    background: blue\n}\n</code></pre>\n\n<p>_</p>\n\n<pre><code>var parent=document.getElementsByClassName(\"lineContainer\")[0];\nvar left=document.getElementsByClassName(\"left\")[0];\nvar right=document.getElementsByClassName(\"right\")[0];\nright.style.width=(parent.offsetWidth-left.offsetWidth)+\"px\";\nwindow.onresize=function(){\n    right.style.width=(parent.offsetWidth-left.offsetWidth)+\"px\";\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/ys2eogxm/\" rel=\"nofollow\">http://jsfiddle.net/ys2eogxm/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is such a thing possible using CSS and two inline-block (or whatever) DIV tags instead of using a table?</p>\n\n<p>The table version is this (borders added so you can see it):</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;&lt;/head&gt;\n&lt;body&gt;\n&lt;table style=\"width:100%;\"&gt;\n&lt;tr&gt;\n&lt;td style=\"border:1px solid black;width:100px;height:10px;\"&gt;&lt;/td&gt;\n&lt;td style=\"border:1px solid black;height:10px;\"&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>It produces a left column with a <strong>FIXED WIDTH</strong> (not a percentage width), and a right column that expands to fill <strong>THE REMAINING SPACE</strong> on the line.  Sounds pretty simple, right?  Furthermore, since nothing is \"floated\", the parent container's height properly expands to encompass the height of the content.</p>\n\n<p><strong>--BEGIN RANT--</strong><br>\nI've seen the \"clear fix\" and \"holy grail\" implementations for multi-column layouts with fixed-width side column, and they suck and they're complicated.  They reverse the order of elements, they use percentage widths, or they use floats, negative margins, and the relationship between the \"left\", \"right\", and \"margin\" attributes are complex.  Furthermore, the layouts are sub-pixel sensitive so that adding even a single pixel of borders, padding, or margins will break the whole layout, and send entire columns wrapping to the next line.  For example, rounding errors are a problem even if you try to do something simple, like put 4 elements on a line, with each one's width set to 25%.<br>\n<strong>--END RANT--</strong></p>\n\n<p>I've tried using \"inline-block\" and \"white-space:nowrap;\", but the problem is I just can't get the 2nd element to fill the <strong>remaining</strong> space on the line.  Setting the width to something like \"width:100%-(LeftColumWidth)px\" will work in some cases, but performing a calculation in a width property is not really supported.</p>\n",
            "last_activity_date": 1415383397,
            "question_id": 5540485,
            "score": 61,
            "tags": [
                "css",
                "layout",
                "fixed-width"
            ],
            "title": "How to make an inline-block element fill the remainder of the line?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The problem is that fancyBox changes the overflow value of the body in order to hide the browser scrollbars.  I couldn't find an option to toggle this behavior.</p>\n\n<p>You could remove this section of the fancyBox code to prevent it:</p>\n\n<pre><code>if (obj.locked) {\n    this.el.addClass('fancybox-lock');\n\n    if (this.margin !== false) {\n        $('body').css('margin-right', getScalar( this.margin ) + obj.scrollbarWidth);\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This can actually be done with a helper in Fancybox 2.</p>\n\n<pre><code>$('.image').fancybox({\n  helpers: {\n    overlay: {\n      locked: false\n    }\n  }\n});\n</code></pre>\n\n<p><a href=\"http://davekiss.com/prevent-fancybox-from-jumping-to-the-top-of-the-page/\">http://davekiss.com/prevent-fancybox-from-jumping-to-the-top-of-the-page/</a></p>\n",
                    "is_accepted": true,
                    "score": 168
                },
                {
                    "body": "<p>Jordanj77 is correct but easiest solution is to just go to stylesheet <code>jquery.fancybox.css</code> and comment out the row saying <code>overflow: hidden !important;</code> in section <code>.fancybox-lock</code></p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>I fixed it with:</p>\n\n<pre><code>overflow: hidden !important; \n</code></pre>\n\n<p>in <code>.fancybox-lock</code> body in <code>jquery.fancybox.css</code>. And scrollbar not jumping :)</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Maybe this answer is alil late but maybe it could help in the future, if after clicling/closing a image fancybox makes your website scroll to the top, you could just delete the :</p>\n\n<pre><code>F.trigger('onReady');\n</code></pre>\n\n<p>or better use: </p>\n\n<pre><code>/*F.trigger('onReady');*/\n</code></pre>\n\n<p>In fancyBox version: 2.1.5 (Fri, 14 Jun 2013) that part of the code is at line 897.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I realize this is an old question, but I think I have found a good solution for it. \nThe problem is that fancy box changes the overflow value of the body in order to hide the browser scrollbars. </p>\n\n<p>As Dave Kiss points out, we can stop fancy box from doing this by adding the following parameters:</p>\n\n<pre><code>$('.image').fancybox({\n  padding: 0,\n  helpers: {\n    overlay: {\n      locked: false\n    }\n  }\n});\n</code></pre>\n\n<p>But, now we can scroll the main page while looking at our fancy box window. It is better than jumping to the top of the page, but it is probably not what we really want. </p>\n\n<p>We can prevent scrolling the right way by adding the next parameters:</p>\n\n<pre><code>    $('.image').fancybox({\n      padding: 0,\n      helpers: {\n        overlay: {\n          locked: false\n        }\n      },\n    'beforeLoad': function(){\n      disable_scroll();\n        },\n     'afterClose': function(){\n       enable_scroll();\n      }\n    });\n</code></pre>\n\n<p>And add these functions from galambalaz. See: <a href=\"http://stackoverflow.com/questions/4770025/how-to-disable-scrolling-temporarily\">How to disable scrolling temporarily?</a></p>\n\n<pre><code>    var keys = [37, 38, 39, 40];\n\n    function preventDefault(e) {\n      e = e || window.event;\n      if (e.preventDefault) e.preventDefault();\n      e.returnValue = false;  \n    }\n\n    function keydown(e) {\n        for (var i = keys.length; i--;) {\n            if (e.keyCode === keys[i]) {\n                preventDefault(e);\n                return;\n            }\n        }\n    }\n\n    function wheel(e) {\n      preventDefault(e);\n    }\n\n    function disable_scroll() {\n      if (window.addEventListener) {\n          window.addEventListener('DOMMouseScroll', wheel, false);\n      }\n      window.onmousewheel = document.onmousewheel = wheel;\n      document.onkeydown = keydown;\n    }\n\n    function enable_scroll() {\n        if (window.removeEventListener) {\n            window.removeEventListener('DOMMouseScroll', wheel, false);\n        }\n        window.onmousewheel = document.onmousewheel = document.onkeydown = null;  \n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This also helped</p>\n\n<pre><code>.fancybox-lock body {\n    overflow: visible !important;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have implemented fancybox2 on a dev site.</p>\n\n<p>When I engage the fancybox  (click the link etc) the whole html shifts behind it - and goes to the top. I have it working fine in another demo, but when I drag the same code to this project it jumps to the top. Not only with the links to inline divs, but also for simple image gallery.</p>\n\n<p>Has anyone experienced this?</p>\n",
            "last_activity_date": 1425937568,
            "question_id": 13547007,
            "score": 50,
            "tags": [
                "jquery",
                "css",
                "fancybox-2"
            ],
            "title": "fancybox2 / fancybox causes page to to jump to the top"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<h3>Chrome solution:</h3>\n\n<p>Adding <code>-webkit-transform: translateZ(0)</code> to the <code>#sidebar</code> fixed the issue for me.</p>\n\n<p>I've used <code>translateZ(0)</code> to fix numerous Chrome display bugs over the years. The rationale is that by invoking 3D transformation, re-paint is separated from the rest of the CSS pain stack (I can't provide much more detail than that, it's pretty much all Greek to me). In any case, it appears to work for me!</p>\n\n<pre><code>    #sidebar {\n        -webkit-transform: translateZ(0);\n    }\n</code></pre>\n\n<h3>Opera solution:</h3>\n\n<p>This is not a generic solution (will need to be tweaked depending on the positioning requirements of the element in question). It works by forcing continuous repaints (via CSS animation) on a property that could affect layout (forcing other layout factors to be calculated and rendered, ie maintaining fixed positioning), but in practice do not. In this case, I've used <code>margin-bottom</code>, because there's no way that's going to affect your page layout (but Opera doesn't know that!):</p>\n\n<pre><code>@keyframes noop {\n  0%   { margin-bottom: 0; }\n  100% { margin-bottom: 1em; }\n}\n\n#sidebar {\n    animation: noop 1s infinite;\n}\n</code></pre>\n\n<p><strong>Note:</strong> the solution is not perfect, in that (on my machine at least) the bug test cases will result in a minute flicker as Opera loses positioning and quickly redraws. Sadly I think this is as good as you will get, because <a href=\"http://stackoverflow.com/questions/15152470/chrome-rendering-issue-fixed-position-anchor-with-ul-in-body#answer-15245741\">as George says in his answer</a>, this is Opera's natural behaviour between redraws \u2014 in theory my code makes redraw for the element continuous, but in practice there will be infinitesimal gaps.</p>\n\n<p><strong>EDIT 2</strong> (2013-11-05)<strong>:</strong> I've since encountered variations of this bug quite often. Although the original poster's reduced test case presents a perfectly legitimate bug, most occurences have been in situations where there is already a 3D transform operating on the body (or similarly high up the DOM tree). This is often used as a hack to force GPU rendering, but will actually lead to nasty repaint issues like this. 2 no-op 3D transforms don't make a right: if you're using one higher up the tree, try removing it first before adding another one.</p>\n\n<p><strong>EDIT 3</strong> (2014-12-19)<strong>:</strong> <a href=\"http://stackoverflow.com/users/79677/chris-barr\">Chris</a> <a href=\"http://stackoverflow.com/questions/15152470/chrome-rendering-issue-fixed-position-anchor-with-ul-in-body/15203880#comment30610117_15203880\">reports</a> that <code>translateZ(0)</code> doesn't work in some cases where <code>scale3d(1,1,1)</code> does.</p>\n",
                    "is_accepted": true,
                    "score": 96
                },
                {
                    "body": "<p>The key for Chrome is:</p>\n\n<pre><code> html, body {height:100%;overflow:auto}\n</code></pre>\n\n<p>By adding this, the fixed position problem should be fixed.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>It makes sense if you understand how Normal Flow of the document works. Let's say it's an edge case scenario. </p>\n\n<p>There is no height declared in any element and #sidebar is taken OUT of the normal flow of the document by being <code>position:fixed</code>.</p>\n\n<p>If you add a height property to #sidebar (pixels, not percentages) the problem is solved.</p>\n\n<p>I would suggest including Normalize.css, I think it will take care of the bug. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>There is a rendering issue with Google Chrome and Opera (why?=) with such code:</p>\n\n<pre><code>&lt;html&gt;\n&lt;style&gt;\n    #content {\n        width: 150px;\n        background: gray;\n    }\n\n    #sidebar {\n        position: fixed;\n        left: 200px;\n        background: gray;\n    }\n&lt;/style&gt;\n&lt;body&gt;\n    &lt;div id=\"sidebar\"&gt;\n        &lt;a href=\"#s1\"&gt;Link #1&lt;/a&gt;&lt;br/&gt;\n        &lt;a href=\"#s2\"&gt;Link #2&lt;/a&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"content\"&gt;\n        &lt;div id=\"s1\"&gt;\n            &lt;a href=\"#s1\"&gt;Link #1 TARGET&lt;/a&gt;\n            &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit,\n            sed do eiusmod tempor incididunt ut labore et dolore magna\n            aliqua. Ut enim ad minim veniam, quis nostrud exercitation\n            ullamco laboris nisi ut aliquip ex ea commodo consequat.\n            Duis aute irure dolor in reprehenderit in voluptate velit\n            esse cillum dolore eu fugiat nulla pariatur.\n            Excepteur sint occaecat cupidatat non proident, sunt in culpa\n            qui officia deserunt mollit anim id est laborum.&lt;/p&gt;\n        &lt;/div&gt;\n        &lt;div id=\"s2\"&gt;\n            &lt;a href=\"#s2\"&gt;Link #2 TARGET&lt;/a&gt;\n            &lt;ul&gt;\n                &lt;li&gt;Item 1&lt;/li&gt;\n                &lt;li&gt;Item 2&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;a href=\"#\"&gt;TOP&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>As you can see, I am trying to make sidebar static on the right side.\nEverything works fine, until you add some <code>&lt;UL&gt;</code> tag on the page:</p>\n\n<p><a href=\"http://www.youtube.com/watch?v=zkhH6di2M0c\">http://www.youtube.com/watch?v=zkhH6di2M0c</a></p>\n\n<p>The fixed div sometimes starts to disappear when I click anchor links.</p>\n\n<p>What can be done to avoid such behavior?</p>\n",
            "last_activity_date": 1419008822,
            "question_id": 15152470,
            "score": 27,
            "tags": [
                "html",
                "css",
                "google-chrome",
                "rendering"
            ],
            "title": "Chrome rendering issue. Fixed position anchor with UL in body"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Well, I can think of a CSS hack that will resolve this issue.</p>\n\n<p>You could add the following line in your CSS file:</p>\n\n<pre><code>* html .blog_list div.postbody img { width:75px; height: SpecifyHeightHere; }\n</code></pre>\n\n<p>The above code will only be seen by IE6.\nThe aspect ratio won't be perfect, but you could make it look somewhat normal.\nIf you really wanted to make it perfect, you would need to write some javascript that would read the original picture width, and set the ratio accordingly to specify a height.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The only way to do explicit scaling in CSS is to use tricks such as found <a href=\"http://www.markschenk.com/cssexp/background/scaledbgimage.html\" rel=\"nofollow\">here</a>.</p>\n\n<p>IE6 only, you could also use filters (check out <a href=\"http://homepage.ntlworld.com/bobosola/pngtestfixed.htm\" rel=\"nofollow\">PNGFix</a>).  But applying them automatically to the page will need javascript, though that javascript could be embedded in the CSS file.</p>\n\n<p>If you are going to require javascript, then you might want to just have javascript fill in the missing value for the height by inspecting the image once the content has loaded.  (Sorry I do not have a reference for this technique).</p>\n\n<p>Finally, and pardon me for this soapbox, you might want to eschew IE6 support in this matter.  You could add <code>_width: auto</code> after your <code>width: 75px</code> rule, so that IE6 at least renders the image reasonably, even if it is the wrong size.</p>\n\n<p>I recommend the last solution simply because IE6 is on the way out: 20% and going down almost a <a href=\"http://marketshare.hitslink.com/browser-market-share.aspx?qprid=3\" rel=\"nofollow\">percent a month</a>.  Also, I note that your site is recreational and in the UK.  Both of these help the demographic lean to be away from IE6:  IE6 usage drops nearly 40% during weekends (no citation sorry), and UK has a much lower IE6 demographic (again no citation, sorry).</p>\n\n<p>Good luck!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Adam Luter gave me the idea for this, but it actually turned out to be really simple:</p>\n\n<pre><code>img {\n  width:  75px;\n  height: auto;\n}\n</code></pre>\n\n<p>IE6 now scales the image fine and this seems to be what all the other browsers use by default.</p>\n\n<p>Thanks for both the answers though!</p>\n",
                    "is_accepted": true,
                    "score": 136
                },
                {
                    "body": "<p>I'm glad that worked out, so I guess you had to explicitly set 'auto' on IE6 in order for it to mimic other browsers!</p>\n\n<p>I actually recently found another technique for scaling images, again designed for backgrounds.  This technique has some interesting features:</p>\n\n<ol>\n<li>The image aspect ratio is preserved</li>\n<li>The image's original size is maintained (that is, it can never shrink only grow)</li>\n</ol>\n\n<p>The markup relies on a wrapper element:</p>\n\n<pre><code>&lt;div id=\"wrap\"&gt;&lt;img src=\"test.png\" /&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Given the above markup you then use these rules:</p>\n\n<pre><code>#wrap {\n  height: 100px;\n  width: 100px;\n}\n#wrap img {\n  min-height: 100%;\n  min-width: 100%;\n}\n</code></pre>\n\n<p>If you then control the size of wrapper you get the interesting scale effects that I list above.</p>\n\n<p>To be explicit, consider the following base state: A container that is 100x100 and an image that is 10x10.  The result is a scaled image of 100x100.</p>\n\n<ol>\n<li>Starting at the base state, the\ncontainer resized to 20x100, the\nimage stays resized at 100x100.</li>\n<li>Starting at the base state, the\nimage is changed to 10x20, the image\nresizes to 100x200.</li>\n</ol>\n\n<p>So, in other words, the image is always <em>at least</em> as big as the container, but will scale <em>beyond</em> it to maintain it's aspect ratio.</p>\n\n<p>This probably isn't useful for your site, and it doesn't work in IE6.  But, it <em>is</em> useful to get a scaled background for your view port or container.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>Here's the problem. I have an image:</p>\n\n<pre><code>&lt;img alt=\"alttext\" src=\"filename.jpg\"/&gt;\n</code></pre>\n\n<p>Note no height or width specified.</p>\n\n<p>On certain pages I want to only show a thumbnail. I can't alter the html, so I use the following CSS:</p>\n\n<pre><code>.blog_list div.postbody img { width:75px; }\n</code></pre>\n\n<p>Which (in most browsers) makes a page of uniformly wide thumbnails, all with preserved aspect ratios.</p>\n\n<p>In IE6 though, the image is only scaled in the dimension specified in the CSS. It retains the 'natural' height.</p>\n\n<p>Here's an example of a pair of pages that illustrate the problem:</p>\n\n<ul>\n<li><a href=\"http://www.escapelondon.co.uk/profiles/blog/list\">The list, which should show thumbnails</a></li>\n<li><a href=\"http://www.escapelondon.co.uk/profiles/blogs/epernay-champagne\">A single blog post, which shows the full-size image.</a></li>\n</ul>\n\n<p>I'd be very grateful for all suggestions, but would like to point out that (due to the limitations of the clients chosen platform) I'm looking for something that doesn't involve modifying the html. CSS would also be preferable to javascript.</p>\n\n<p>EDIT: Should mention that the images are of different sizes and aspect ratios.</p>\n",
            "last_activity_date": 1326390030,
            "question_id": 757782,
            "score": 57,
            "tags": [
                "javascript",
                "css",
                "internet-explorer",
                "image",
                "internet-explorer-6"
            ],
            "title": "How to preserve aspect ratio when scaling image using one (CSS) dimension in IE6?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can use CSS for that.</p>\n\n<p>HTML (only for demo, it is customizable)</p>\n\n<pre><code>&lt;div class=\"button\"&gt;\n    &lt;input type=\"radio\" name=\"a\" value=\"a\" id=\"a\" /&gt;\n    &lt;label for=\"a\"&gt;a&lt;/label&gt;\n&lt;/div&gt;\n&lt;div class=\"button\"&gt;\n    &lt;input type=\"radio\" name=\"a\" value=\"b\" id=\"b\" /&gt;\n    &lt;label for=\"b\"&gt;b&lt;/label&gt;\n&lt;/div&gt;\n&lt;div class=\"button\"&gt;\n    &lt;input type=\"radio\" name=\"a\" value=\"c\" id=\"c\" /&gt;\n    &lt;label for=\"c\"&gt;c&lt;/label&gt;\n&lt;/div&gt;\n...\n</code></pre>\n\n<p>CSS</p>\n\n<pre><code>input[type=\"radio\"] {\n    display: none;\n}\ninput[type=\"radio\"]:checked + label {\n    border: 1px solid red;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/LgT4A/\" rel=\"nofollow\">jsFiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Keep radio buttons hidden, and on clicking of images, select them using JavaScript and style your image so that it look like selected. Here is the markup - </p>\n\n<pre><code>&lt;div id=\"radio-button-wrapper\"&gt;\n    &lt;span class=\"image-radio\"&gt;\n        &lt;input name=\"any-name\" style=\"display:none\" type=\"radio\"/&gt;\n        &lt;img src=\"...\"&gt;\n    &lt;/span&gt;\n    &lt;span class=\"image-radio\"&gt;\n        &lt;input name=\"any-name\" style=\"display:none\" type=\"radio\"/&gt;\n        &lt;img src=\"...\"&gt;\n    &lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>and JS</p>\n\n<pre><code> $(\".image-radio img\").click(function(){\n     $(this).prev().attr('checked',true);\n })\n</code></pre>\n\n<p>CSS</p>\n\n<pre><code>span.image-radio input[type=\"radio\"]:checked + img{\n    border:1px solid red;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong><a href=\"http://jsbin.com/image-instead-of-radio-button/3/edit\">http://jsbin.com/image-instead-of-radio-button/3/edit</a></strong></p>\n\n<ul>\n<li>Wrap <strong><em>radio</em></strong> and <strong><em>image</em></strong> in <code>&lt;label&gt;</code></li>\n<li><strong>Hide radio</strong> button</li>\n<li>Target the image next to the hidden radio using <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Adjacent_sibling_selectors\">Adjacent sibling selector</a> <code>+</code></li>\n</ul>\n\n<p>\n\n<pre><code>&lt;label&gt;\n  &lt;input type=\"radio\" name=\"fb\" value=\"small\" /&gt;\n  &lt;img src=\"fb1.jpg\"&gt;\n&lt;/label&gt;\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>label &gt; input{ /* HIDE RADIO */\n  visibility: hidden; /* Makes input not-clickable */\n  position: absolute; /* Remove input from document flow */\n}\nlabel &gt; input + img{ /* IMAGE STYLES */\n  cursor:pointer;\n  border:2px solid transparent;\n}\nlabel &gt; input:checked + img{ /* (RADIO CHECKED) IMAGE STYLES */\n  border:2px solid #f00;\n}\n</code></pre>\n\n<p><sub>Don't forget to add a <strong>class</strong> to your labels and in CSS use that <strong>class</strong> instead.</sub></p>\n\n<p>Here's an advanced version without images and using the <code>&lt;i&gt;</code> element and <code>:after</code> pseudo:<br>\n<strong><em><a href=\"http://jsbin.com/pafifi/1/edit?html,css,output\">jsBin demo 2</a></em></strong></p>\n",
                    "is_accepted": true,
                    "score": 61
                },
                {
                    "body": "<h2>Example:</h2>\n\n<blockquote>\n  <p>Heads up! This solution is CSS-only.</p>\n</blockquote>\n\n<p><img src=\"http://i.stack.imgur.com/GLiet.png\" alt=\"Credit-card selector, the MasterCard on the modded demo is hovered.\"></p>\n\n<p>I recommend you take advantage of CSS3 to do that, by hidding the <em>by-default</em> input radio button with CSS3 rules:</p>\n\n<pre><code>.options input{\n    margin:0;padding:0;\n    -webkit-appearance:none;\n       -moz-appearance:none;\n            appearance:none;\n}\n</code></pre>\n\n<p>I just make an example a few days ago.</p>\n\n<ul>\n<li><a href=\"http://jsfiddle.net/La8wQ/313/\" rel=\"nofollow\">JSFiddle</a></li>\n<li><a href=\"https://gist.github.com/rcotrina94/7828886\" rel=\"nofollow\">How to use images for radio-buttons - Gist</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is a simple jQuery UI solution based on the example here:</p>\n\n<p><a href=\"http://jqueryui.com/button/#radio\" rel=\"nofollow\">http://jqueryui.com/button/#radio</a></p>\n\n<p>Modified code:</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;jQuery UI Button - Radios&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.3/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.3/jquery-ui.js\"&gt;&lt;/script&gt;\n  &lt;link rel=\"stylesheet\" href=\"/resources/demos/style.css\"&gt;\n  &lt;script&gt;\n  $(function() {\n    $( \"#radio\" ).buttonset();\n  });\n  &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;form&gt;\n  &lt;div id=\"radio\"&gt;\n    &lt;input type=\"radio\" id=\"radio1\" name=\"radio\"&gt;&lt;label for=\"radio1\"&gt;&lt;img src=\"image1.gif\" /&gt;&lt;/label&gt;\n    &lt;input type=\"radio\" id=\"radio2\" name=\"radio\" checked=\"checked\"&gt;&lt;label for=\"radio2\"&gt;&lt;img src=\"image2.gif\" /&gt;&lt;/label&gt;\n    &lt;input type=\"radio\" id=\"radio3\" name=\"radio\"&gt;&lt;label for=\"radio3\"&gt;&lt;img src=\"image3.gif\" /&gt;&lt;/label&gt;\n  &lt;/div&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>jQueryUI takes care of the image background so you know which button is checked.</p>\n\n<p>Beware: If you want to set a button to checked or unchecked via Javascript, you must call the refresh function:</p>\n\n<pre><code>        $('#radio3').prop('checked', true).button(\"refresh\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Good Day.\nHow can i show the thumbnail images in the user select option instead of radio button. For example if the user click the image it should consider as radio button.\nHere is the Images that is what i was looking for.</p>\n\n<p><strong>With Radio Button</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/Uow4r.png\" alt=\"Image 1\"></p>\n\n<p><strong>Without Radio Button</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/TUbSx.png\" alt=\"enter image description here\"></p>\n\n<p>The following image with radio button and without radio button. With Radio Button is already implemented. For without radio button only iam going to implement, Still I Bit Confuse with  If the user want that third option then he/she directly click the image alone to make as radio button selection. But I am Not sure how can i do this in jquery or css. Any help or Suggestion would be much appreciated.</p>\n\n<p>Thanks,\nvicky</p>\n",
            "last_activity_date": 1424746214,
            "question_id": 17541614,
            "score": 24,
            "tags": [
                "html",
                "css"
            ],
            "title": "Use Thumbnail Image instead of radio button"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If you use the <code>overflow:hidden</code> hack on the <code>&lt;body&gt;</code> element, to get back normal scrolling behavior, you can position a <code>&lt;div&gt;</code> absolutely inside of the  element to get scrolling back with <code>overflow:auto</code>. I think this is the best option, and it's quite easy to implement using only css!</p>\n\n<p>Or, you can try with jQuery:</p>\n\n<pre><code>$(document).bind(\n'touchmove',\nfunction(e) {\ne.preventDefault();\n}\n);\n</code></pre>\n\n<p>Same in javasrcipt:</p>\n\n<pre><code>document.addEventListener(\n'touchmove',\nfunction(e) {\ne.preventDefault();\n},\nfalse\n);\n</code></pre>\n\n<p>Last option, check <a href=\"http://stackoverflow.com/questions/7768269/ipad-safari-disable-scrolling-and-bounce-effect\">ipad safari: disable scrolling, and bounce effect?</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You can achieve this more universally by applying the following CSS:</p>\n\n<pre><code>html,\nbody {\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n}\n</code></pre>\n\n<p>This allows your content, whatever it is, to become scrollable within <code>body</code>, but be aware that the scrolling context where <code>scroll</code> event is fired is now <code>document.body</code>, not <code>window</code>.</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>None of the 'overflow' solutions worked for me. I'm coding a parallax effect with JavaScript using jQuery. In Chrome and Safari on OSX the elastic/rubber-band effect was messing up my scroll numbers, since it actually scrolls past the document's height and updates the window variables with out-of-boundary numbers. What I had to do was check if the scrolled amount was larger than the actual document's height, like so:</p>\n\n<pre><code>$(window).scroll(\n    function() {\n        if ($(window).scrollTop() + $(window).height() &gt; $(document).height()) return;\n        updateScroll(); // my own function to do my parallaxing stuff\n    }\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I made an extension to disable it on all sites. In doing so I used three techniques: pure CSS, pure JS and hybrid.</p>\n\n<p>The CSS version is similar to the above solutions. The JS one goes a bit like this:</p>\n\n<pre><code>var scroll = function(e) {\n    // compute state\n    if (stopScrollX || stopScrollY) {\n        e.preventDefault();              // this one is the key\n        e.stopPropagation();\n        window.scroll(scrollToX, scrollToY);\n    }\n}\n\ndocument.addEventListener('mousewheel', scroll, false);\n</code></pre>\n\n<p>The CSS one works when one is using position: fixed elements and let the browser do the scrolling. The JS one is needed when some other JS depends on window (e.g events), which would get blocked by the previous CSS (since it makes the body scroll instead of the window), and works by stopping event propagation at the edges, but needs to synthesize the scrolling of the non-edge component; the downside is that it prevents some types of scrolling to happen (those do work with the CSS one). The hybrid one tries to take a mixed approach by selectively disabling directional overflow (CSS) when scrolling reaches an edge (JS), and in theory could work in both cases, but doesn't quite currently as it has some leeway at the limit.</p>\n\n<p>So depending on the implementations of one's website, one needs to either take one approach or the other.</p>\n\n<p>See here if one wants more details: <a href=\"https://github.com/lloeki/unelastic\" rel=\"nofollow\">https://github.com/lloeki/unelastic</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You could check if the scroll-offsets are in the bounds. If they go beyond, set them back.</p>\n\n<pre><code>var scrollMinX = 0;\nvar scrollMinY = 0;\nvar scrollMaxX = document.body.scrollWidth - window.innerWidth;\nvar scrollMaxY = document.body.scrollHeight - window.innerHeight;\n\n// make sure that we work with the correct dimensions\nwindow.onresize = function () {\n    scrollMaxX = document.body.scrollWidth - window.innerWidth;\n    scrollMaxY = document.body.scrollHeight - window.innerHeight;\n};\n\n// where the magic happens\ndocument.onscroll = function () {    \n    if (window.scrollX &lt;= scrollMinX) scrollTo(scrollMinX, window.scrollY);\n    if (window.scrollX &gt;= scrollMaxX) scrollTo(scrollMaxX, window.scrollY);\n\n    if (window.scrollY &lt;= scrollMinY) scrollTo(window.scrollX, scrollMinY);\n    if (window.scrollY &gt;= scrollMaxY) scrollTo(window.scrollX, scrollMaxY);\n};\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/yckart/3YnUM/\" rel=\"nofollow\">http://jsfiddle.net/yckart/3YnUM/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I just wanted to <strong>diable the elastic scrolling/bounce effect</strong> in Safari (OSX Lion).</p>\n\n<p>I found the solution to set <code>overflow: hidden</code> for body in css, but as expected it only <strong>disables the scrollbar</strong>, so if the website is \"longer\" than the screen you <em>won't be able to scroll!</em></p>\n\n<p>Any solutions or hints are welcome!\nThanks!</p>\n",
            "last_activity_date": 1415726957,
            "question_id": 8150191,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "safari",
                "osx-lion"
            ],
            "title": "Disable elastic scrolling in Safari"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>As mentioned in a comment, <a href=\"http://api.jquery.com/category/dimensions/\" rel=\"nofollow\">the documentation</a> tells you exactly what the differences are. But in summary:</p>\n\n<ul>\n<li>innerWidth / innerHeight - includes padding but not border</li>\n<li>outerWidth / outerHeight - includes padding, border, and optionally margin</li>\n<li>height / width - element height (no padding, margin, or border)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Did you see these examples? Looks similar to your question.</p>\n\n<p><a href=\"http://www.jquery-tutorial.net/dimensions/working-with-widths-and-heights/\">Working with widths and heights</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/2sJsn.gif\" alt=\"enter image description here\"></p>\n\n<p><a href=\"http://www.w3schools.com/jquery/jquery_dimensions.asp\">jQuery - Dimensions</a></p>\n\n<p><a href=\"http://www.midnight-coding.com/2012/09/jquery-height-width-inner-and-outer.html\">jQuery: height, width, inner and outer</a></p>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>width = get the width,\ninnerWidth = get width + padding,\nouterWidth = get width + padding + border and optionally the margin</p>\n\n<p>If you want to test add some padding, margins, borders to your .test classes and try again.</p>\n\n<p>Also read up in the jQuery docs...everything you need is pretty much there</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I wrote some example to see what is the difference, but they display me same results for width and height.</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;script type=\"text/javascript\" src=\"jquery.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            $(document).ready(function(){\n                var div = $('.test');\n                var width = div.width(); // 200 px\n                var innerWidth = div.innerWidth(); // 200px\n                var outerWidth = div.outerWidth(); // 200px\n\n                var height = div.height(); // 150 px\n                var innerHeight = div.innerHeight(); // 150 px\n                var outerHeight = div.outerHeight(); // 150 px\n            });\n\n        &lt;/script&gt;\n        &lt;style type=\"text/css\"&gt;\n            .test\n            {\n                width: 200px;\n                height: 150px;\n                background: black;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div class=\"test\"&gt;&lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>In this example you can see that they output same results. If anyone know what is the difference please show me appropriate answer.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1376664767,
            "question_id": 17845027,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "dom",
                "styles"
            ],
            "title": "What is difference between width, innerWidth and outerWidth, height, innerHeight and outerHeight in jQuery"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>You can use a class which has no styles, this is entirely valid HTML.</p>\n\n<p>A class referenced in a CSS file is not a definition of a class, it is used as a <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_started/Selectors\">selector rule</a> for styling purposes.</p>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p>There are no ill effects to use classes which don't have styles.  Indeed, that's part of the usefulness of CSS is that it's de-coupled from the markup and can style or not style elements/classes/etc. as needed.</p>\n\n<p>Don't think of them as \"CSS classes.\"  Think of them as \"classes\" which CSS happens to also use if it needs to.</p>\n",
                    "is_accepted": false,
                    "score": 57
                },
                {
                    "body": "<p>The moment you add the Class in your HTML the Class will be defined, so your solution is completely fine</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>\"CSS class\" is a misnomer; <code>class</code> is an attribute (or a property, in terms of scripting) that you assign to HTML elements. In other words, you declare classes in HTML, not CSS, so in your case the \"target\" class <em>does</em> in fact exist on those specific elements, and your markup is perfectly valid as it is.</p>\n\n<p>This doesn't necessarily mean that you need to have a class declared in the HTML before you can use it in CSS either. See ruakh's comment. Whether or not a selector is valid <a href=\"http://www.w3.org/TR/selectors/#Conformance\" rel=\"nofollow\">depends entirely on the selector syntax</a>, and CSS has its own set of <a href=\"http://www.w3.org/TR/CSS21/syndata.html#parsing-errors\" rel=\"nofollow\">rules for handling parsing errors</a>, none of which concern the markup at all. Essentially, this means HTML and CSS are completely independent of each other in the validity aspect.</p>\n\n<p>Once you understand that, it becomes quite clear that there is no side effect of not defining a <code>.target</code> rule in your stylesheet.<sup>1</sup> When you assign classes to your elements, you can reference those elements by those classes either in a script, or a stylesheet, or both. Neither has a dependency on the other. Instead, they both refer to the markup (more precisely, on the DOM representing it). This principle applies even if you're using JavaScript to apply styles, as you're doing in your jQuery one-liner.</p>\n\n<p>When you write a CSS rule with a class selector, all you're saying is \"I want to apply styles to elements that have this class.\" Similarly, when you write a script to retrieve elements by a certain class name, you're saying \"I want to do things with elements that have this class.\"</p>\n\n<hr>\n\n<p><sup>1</sup> <sub>The only situation I'm aware of where an empty CSS rule like that is necessary is when some browsers refuse to apply certain other rules properly as the result of a bug; creating an empty rule will cause those other rules to be applied for some reason. See <a href=\"http://stackoverflow.com/questions/15301357/safari-bug-first-child-doesnt-update-displayblock-when-items-are-removed-with/15302066#15302066\">this answer</a> for an example of such a bug. However this is on the CSS side and therefore should have nothing to do with the markup.</sub></p>\n",
                    "is_accepted": true,
                    "score": 458
                },
                {
                    "body": "<p>It's not necessary to define <a href=\"http://en.wikipedia.org/wiki/Cascading_Style_Sheets\" rel=\"nofollow\">CSS</a> classes in your stylesheet. It should work just fine. However, adding it won't harm.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>When you use a classname in JavaScript, it <strong>does not</strong> look at the CSS to find that class. It looks directly in the HTML code.</p>\n\n<p>All that is required is that the classname is in the HTML. <strong>It does not need to be in the CSS.</strong></p>\n\n<p>In fact, many people think it's actually <a href=\"http://philipwalton.com/articles/decoupling-html-css-and-javascript/\">a good idea to keep separate classes use with CSS and Javascript</a>, as it allows your designers and coders to work independently without getting in each other's way by using each other's classes.</p>\n\n<p>(note, the above paragraph is obviously more applicable for larger projects, so don't feel that you have to go to this extreme if you're working on your own; I mentioned it to make the point that the two can be entirely separate)</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>You can use <a href=\"http://en.wikipedia.org/wiki/Cascading_Style_Sheets\" rel=\"nofollow\">CSS</a> classes without using it, but I suggest that if you are adding CSS classes just for the JavaScript/jQuery code, prefix with it <em>js-YourClassName</em> so the front-end developers never use these classes to style the elements. They should understand that these classes can be removed at any time.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>According to <a href=\"http://www.w3.org/TR/html5/dom.html#classes\">HTML5 specification</a>:</p>\n\n<blockquote>\n  <p>A class attribute must have a value that is a set of space-separated\n  tokens representing the various classes that the element belongs to.\n  ... There are no additional restrictions on the tokens authors can use in\n  the class attribute, but authors are encouraged to use values that\n  describe the nature of the content, rather than values that describe\n  the desired presentation of the content.</p>\n</blockquote>\n\n<p>Also, in the <a href=\"http://www.w3.org/TR/html4/struct/global.html#adef-class\">version 4</a>:</p>\n\n<blockquote>\n  <p>The class attribute has several roles in HTML:</p>\n  \n  <ul>\n  <li>As a style sheet selector (when an author wishes to assign style\n  information to a set of elements). </li>\n  <li>For general purpose processing by\n  user agents.</li>\n  </ul>\n</blockquote>\n\n<p>Your use case falls under the second scenario, which makes it a legitimate example of using a class attribute.</p>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>It will have no effect if you apply a class on a HTML element, and that class is not defined in CSS. It is a common practice and like Aamir afridi said if you are using classes for js only purpose, it is a good practice to prefix them with js- . </p>\n\n<p>It is not only valid for calsses, but also for id attribute of html elements.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There's no problem at all of using classes to just query for elements. I used to give such class names the <code>sys-</code> prefix (for example, I'll name your class <code>sys-target</code>) to distinguish them from classes used for styling. This was a convention used by some microsoft developers in the past. I also noticed a growing practice of using the <code>js-</code> prefix for this purpose.</p>\n\n<p>If you are not comfortable with using classes for purposes other than styling, I recommend using the <a href=\"https://github.com/kossnocorp/role/\" rel=\"nofollow\">Role.js</a> jQuery plugin which allows you to achieve the same purpose using the <code>role</code> attribute, so, you may write your markup as <code>&lt;td role=\"target\"&gt;</code> and query for it using <code>$(\"@target\")</code>. The project page has good description and examples. I use this plugin for big projects because I really like keeping classes for styling purposes only.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As is mentioned by so many others, yes, using classes with no assigned CSS is perfectly valid and rather than thinking of them as 'CSS classes' you should simply recognise the semantics of class and ID to be groups and individual elements respectively. </p>\n\n<p>I wanted to chip in as I felt an important point hasn't been raised given the example. If you ever need to do visual manipulations to a variable length of elements (in this case you're using table rows) then it always makes sense to recognise that the cost of doing so through Javascript could potentially be very expensive (e.g if you have thousands of rows). </p>\n\n<p>In this situation let's say we know that column 2 always has the potential to be hidden (it's a conscious function of your table) then it makes sense to design a CSS style to handle this use case. </p>\n\n<pre><code>table.target-hidden .target { display: none; }\n</code></pre>\n\n<p>Then rather than using JS to traverse through the DOM finding N elements we simply need to toggle a class on one (our table).</p>\n\n<pre><code>$(\"table\").addClass(\"target-hidden\")\n</code></pre>\n\n<p>By assigning the table an ID this would be even quicker and you could even just refer to the column by using the <code>:nth-child</code> selector which would reduce your markup further but I can't comment on efficiency. Another reason for doing this is that I hate inline styling, and will go to great lengths to eradicate it!</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Refer to the <a href=\"http://en.wikipedia.org/wiki/JQuery\" rel=\"nofollow\">jQuery</a> validation engine. Even in there we also use non-existent classes to add validation rules on the <a href=\"http://en.wikipedia.org/wiki/HTML\" rel=\"nofollow\">HTML</a> attributes. So there is nothing wrong in using classes that are not actually declared in a stylesheet.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One thing that nobody here has fully mentioned is that JavaScript (aided by jQuery in this case) isn't able to directly modify a document's cascading style sheet. jQuery's <code>css()</code> method merely changes the matched set of elements' <code>style</code> property. CSS and JavaScript are completely unrelated in this aspect.</p>\n\n<p><code>$('.target').css('display','none');</code> doesn't change your <code>.target { }</code> CSS declaration at all. What has happened here instead is that any element with a <code>class</code> of \"target\" now looks something like this:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;element class=\"target\" style=\"display:none;\"&gt;&lt;/element&gt;\n</code></pre>\n\n<p>Are there any side effects caused by not pre-defining a CSS style rule? None whatsoever.</p>\n\n<p>Is there a better way to do this? Performance-wise, yes there is!</p>\n\n<h2>How can the performance be improved?</h2>\n\n<p>Rather than directly modifying the <code>style</code> of each element, instead you can <a href=\"http://api.jquery.com/addClass/\" rel=\"nofollow\">pre-define a new class and add that to your matched elements using <code>addClass()</code></a> (another jQuery method).</p>\n\n<p>Based on <a href=\"http://jsperf.com/css-vs-addclass\" rel=\"nofollow\">this pre-existing JSPerf</a> which compares <code>css()</code> with <code>addClass()</code>, we can see that <code>addClass()</code> is actually much faster:</p>\n\n<p><img src=\"http://i.stack.imgur.com/PHSno.png\" alt=\"css() vs addClass()\"></p>\n\n<h3>How can we implement this ourselves?</h3>\n\n<p>Firstly we can add in our new CSS declaration:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.hidden {\n    display: none;\n}\n</code></pre>\n\n<p>Your HTML would remain the same, this pre-defined class is simply in place for later use.</p>\n\n<p>We can now modify the JavaScript to use <code>addClass()</code> instead:</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>$('.target').addClass('hidden');\n</code></pre>\n\n<p>When running this code, rather than directly modifying the <code>style</code> property of each of your matched \"target\" elements, this new class will now have been added:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;element class=\"target hidden\"&gt;&lt;/element&gt;\n</code></pre>\n\n<p>With the new \"hidden\" class, this element will inherit the styling declared in your CSS and your element will be set to no longer display.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have a table where I show/hide a full column by jQuery via a CSS class that doesn't exist:</p>\n\n<pre><code>&lt;table&gt;\n   &lt;thead&gt;\n      &lt;tr&gt;\n         &lt;th&gt;&lt;/th&gt;\n         &lt;th class=\"target\"&gt;&lt;/th&gt;\n         &lt;th&gt;&lt;/th&gt;\n      &lt;/tr&gt;\n   &lt;/thead&gt;\n   &lt;tbody&gt;\n      &lt;tr&gt;\n         &lt;td&gt;&lt;/td&gt;\n         &lt;td class=\"target\"&gt;&lt;/td&gt;\n         &lt;td&gt;&lt;/td&gt;\n      &lt;/tr&gt;\n      &lt;tr&gt;\n         &lt;td&gt;&lt;/td&gt;\n         &lt;td class=\"target\"&gt;&lt;/td&gt;\n         &lt;td&gt;&lt;/td&gt;\n      &lt;/tr&gt;\n   &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>With this DOM I can do this in one line via jQuery: <code>$('.target').css('display','none');</code></p>\n\n<p>This works perfectly, but is it valid to use CSS classes that aren't defined? Should I create an empty class for it?</p>\n\n<pre><code>&lt;style&gt;.target{}&lt;/style&gt;\n</code></pre>\n\n<p>Are there any side effects or is there a better way to do this?</p>\n",
            "last_activity_date": 1424167793,
            "question_id": 18701670,
            "score": 232,
            "tags": [
                "html",
                "css",
                "w3c-validation",
                "web-standards"
            ],
            "title": "Can I use non existing CSS classes?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>Add <code>display:block;</code> This will also remove the unnecessary horizontal scroll in FireFox as well. You are also, no doubt, aware that neither example works in MSIE 8.</p>\n\n<pre><code>&lt;table&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;&lt;th&gt;This is the header and doesn't scroll&lt;/th&gt;&lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody style=\"height:100px; overflow:auto;display:block;\"&gt;\n        &lt;tr&gt;&lt;td&gt;content that scrolls&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;content that scrolls&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;content that scrolls&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;content that scrolls&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;content that scrolls&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;content that scrolls&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;content that scrolls&lt;/td&gt;&lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Using the display:block style only works if you have 1 column.  If you have multiple data columns - with multiple  fields - then display:block appears to make all data columns scrollable but under the 1st  column (does the same in Firefox - which is the only browser I know that does tbody scrolling nicely).  Incidentally, on Firefox - you can use the overflow-x: hidden style to suppress the horizontal scroll.</p>\n\n<p>I realized that the issue I mention only occurs if you are not specifying a width for the th &amp; td elements - if you can fix the column widths then it works.  Problem for me is I can't fix the column widths.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Try the first method of this page, pure CSS with a single table (2 divs around the table, and the thead is positionned absolute) : <a href=\"http://www.cssplay.co.uk/menu/tablescroll.html\">http://www.cssplay.co.uk/menu/tablescroll.html</a>\nSeems to work on FF4/IE9/IE8  in addition to IE7/FF3.6.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Here is a working example:</p>\n\n<p><a href=\"http://www.imaputz.com/cssStuff/bigFourVersion.html\">http://www.imaputz.com/cssStuff/bigFourVersion.html</a></p>\n\n<p>You have to add the display:block to the thead > tr and tbody</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>I developed javascript solution for the above problem <br>\nwhich works only in Firefox 7+ as i have tested only in FF <br>\n<br>\nI came to this thread and found solution pointed by <b>Michael Koper</b></p>\n\n<p>In this solution  three important things are done <br>\n1) fix the column width <br>\n2) thead > tr display is set to block<br>\n3) tbody display is set to block <br></p>\n\n<p>as others have mentioned there problem to fix the width , i am also in same position; <br>\neven i cant fix the width statically </p>\n\n<p>so i thought i will fix the width dynamically ( after table is rendered in browser) \nand this did the trick :)</p>\n\n<p>following is the solution in javascript which works only in FF<br>\n( i have tested only in FF , i dont have access to other browsers ) </p>\n\n<pre><code>       function test1(){                \n            var tbodys = document.getElementsByTagName(\"TBODY\");\n            for(var i=0;i&lt;tbodys.length;i++){\n                do_tbodyscroll(tbodys[i]);\n            }\n        }\n\n\n      function do_tbodyscroll(_tbody){\n            // get the table node \n            var table = _tbody.parentNode;\n\n            // first row of tbody \n            var _fr = _tbody.getElementsByTagName(\"TR\")[0];\n\n            // first row cells .. \n            var _frcells = _fr.cells;\n\n            // Width array , width of each element is stored in this array \n            var widtharray = new Array(_frcells.length);\n\n            for(var i=0;i&lt;_frcells.length;i++){                    \n                widtharray[i] = _frcells[i].scrollWidth;\n            }                \n\n            // Apply width to first row                  \n            for(var i=0;i&lt;_frcells.length;i++){\n                _frcells[i].width = widtharray[i];                   \n            }                 \n\n            // Get the Last row in Thead ... \n            // COLGROUPS USING COLSPAN NOT YET SUPPORTED\n\n            var thead = table.getElementsByTagName(\"THEAD\")[0];\n            var _rows = thead.getElementsByTagName(\"TR\");\n            var tableheader = _rows[_rows.length - 1];\n            var headercells = tableheader.cells;\n\n            // Apply width to header ..                                \n            for(var i=0;i&lt;headercells.length;i++){\n                headercells[i].width = widtharray[i];\n            }\n\n            // ADD 16 Pixel of scroll bar to last column ..\n            headercells[headercells.length -1 ].width = widtharray[headercells.length -1] + 16;\n\n            tableheader.style.display = \"block\";\n            _tbody.style.display = \"block\";  \n        }\n</code></pre>\n\n<p>This solutions finds out what is the width of column from browser <br>\nand set again the same width to columns ( header and first row of tbody ) <br>\nafter the width is set; thead > tr and tbody display is set to block <br></p>\n\n<p>Hope this solution is useful for all of you .. <br>\nif you can extend it to other browsers please reply to this post </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A faced the same problem long ago, and I finally set out the two tables approach. This is the result: <a href=\"http://jsfiddle.net/bGr4V/3/\" rel=\"nofollow\">http://jsfiddle.net/bGr4V/3/</a>, it works for all browsers (IE6+ incl).</p>\n\n<p>In <a href=\"http://jsfiddle.net/5Rdwy/1/\" rel=\"nofollow\">this jsFiddle</a> you can play with a clean version.</p>\n\n<p>My solution was to add a <em>fix cell</em> <code>&lt;th class=\"fix\"&gt; &lt;/th&gt;</code> in <code>thead</code> to fill the space of the scroll bar in the <code>tbody</code>, then give one column a variable width (<code>&lt;td class=\"grow\"&gt;</code>), so the header <em>fix cell</em> wouldn't unmatch on resizing.</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div class=\"fixed_table\"&gt;\n  &lt;div class=\"head\"&gt;\n    &lt;table&gt;\n      &lt;thead&gt;\n        &lt;tr&gt;\n          &lt;th&gt;Column header&lt;/th&gt;\n          &lt;th class=\"grow\"&gt;Column header&lt;/th&gt;\n          &lt;th class=\"fix\"&gt; &lt;/th&gt;\n        &lt;/tr&gt;\n      &lt;/thead&gt;\n    &lt;/table&gt;\n  &lt;div class=\"body\"&gt;\n    &lt;table class=\"full_table\"&gt;\n      &lt;caption class=\"caption\"&gt;Caption&lt;/caption&gt;\n      &lt;tbody&gt;\n        &lt;tr&gt;\n          &lt;td&gt;Data&lt;/td&gt;\n          &lt;td class=\"grow\"&gt;Data&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n          &lt;td&gt;...&lt;/td&gt;\n          &lt;td&gt;...&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n          &lt;td&gt;...&lt;/td&gt;\n          &lt;td&gt;...&lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/tbody&gt;\n    &lt;/table&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS:</strong> has <code>*</code> and <code>_</code> hack for ie6-7, and a <code>-webkit</code> specific for the header <em>fix-cell</em> matching scroll width in each case.</p>\n\n<pre><code>.fixed_table table {\n  table-layout: fixed;\n  width: auto;\n  border-width: 0;\n  padding: 0;\n  border-collapse: collapse;\n}\n\n.fixed_table .body {\n  overflow: scroll;\n  overflow-x: hidden;\n  max-height: 10.75em;\n  min-height: 2.5em;\n  padding-bottom: 0.8em;\n  *padding-right: 17px; /*ie7 &amp; ie6*/\n  _padding-right: 0; /*ie6*/\n  _height: 10em ;\n}\n\n.fixed_table th, .fixed_table td {\n  width: 4.7em;\n}\n\n.fixed_table .grow {\n  width: auto;\n}\n\n.fixed_table .fix {\n  width: 16px;\n  *width: 17px; /*ie7 &amp; ie6*/\n  _width: 16px; /*ie6*/\n}\n\n/* webkit specific */\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  .fixed_table .fix{ width: 17px }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is really quite hacky but <em>maybe</em> it will help someone somewhere...</p>\n\n<p><a href=\"http://jsfiddle.net/yUHCq/1/\" rel=\"nofollow\">http://jsfiddle.net/yUHCq/1/</a></p>\n\n<p>It uses columns instead of rows so processing it would essentially be done backwards.</p>\n\n<p>Transitional DOCTYPE added for IE compatibility.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had the same issue and wrote a jQuery script to do this for me... uses two table elements and formats the css accordingly. Hope this helps others who have the same issue...</p>\n\n<p><a href=\"http://jsfiddle.net/pe295/1/\">http://jsfiddle.net/pe295/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I saw Sean Haddy's <a href=\"http://stackoverflow.com/questions/1019938/make-tbody-scrollable-in-webkit-browsers/11460752#11460752\">excellent solution</a> and took the liberty of <a href=\"http://jsfiddle.net/jhfrench/eNP2N/\" rel=\"nofollow\">making some edits</a>:</p>\n\n<ul>\n<li>Use classes instead of ID, so one jQuery script could be reused for\nmultiple tables on one page</li>\n<li>Added support for semantic HTML table elements like caption, thead, tfoot, and tbody</li>\n<li>Made scrollbar optional so it won't appear for tables that are \"shorter\" than the scrollable height</li>\n<li>Adjusted scrolling div's width to bring the scrollbar up to the right edge of the table</li>\n<li>Made concept accessible by\n<ul>\n<li>using aria-hidden=\"true\" on injected static table header</li>\n<li>and leaving original thead in place, just hidden with jQuery and set <code>aria-hidden=\"false\"</code></li>\n</ul></li>\n<li>Showed examples of multiple tables with different sizes</li>\n</ul>\n\n<p>Sean did the heavy lifting, though. Thanks to Matt Burland, too, for pointing out need to support tfoot.</p>\n\n<p>Please see for yourself at <a href=\"http://jsfiddle.net/jhfrench/eNP2N/\" rel=\"nofollow\">http://jsfiddle.net/jhfrench/eNP2N/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Thought I'd throw my solution into the mix - <a href=\"http://tjvantoll.com/2012/11/10/creating-cross-browser-scrollable-tbody/\" rel=\"nofollow\">http://tjvantoll.com/2012/11/10/creating-cross-browser-scrollable-tbody/</a>.</p>\n\n<p>It takes the same basic route as @Michael Koper's solution but includes a workaround so the table will look correct in IE back to IE6.</p>\n\n<p>I solve the width issue by giving the <code>&lt;table&gt;</code> a <code>table-layout: fixed</code> and explicitly assigning width to cells in each column.  Not ideal but it does produce a semantic table that will align cross browser regardless of whether a scrollbar is needed.</p>\n\n<p>Demo: <a href=\"http://codepen.io/tjvantoll/pen/JEKIu\" rel=\"nofollow\">http://codepen.io/tjvantoll/pen/JEKIu</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>BS\"D</p>\n\n<p>It may be overkill for this question, but YUI still provides possibly the best free cross-browser datatable. It can be used for read-only data as well.</p>\n\n<p>YUI 2 DataTable - <a href=\"http://developer.yahoo.com/yui/datatable/\" rel=\"nofollow\">http://developer.yahoo.com/yui/datatable/</a></p>\n\n<p>YUI 3 DataTable - <a href=\"http://yuilibrary.com/yui/docs/datatable/\" rel=\"nofollow\">http://yuilibrary.com/yui/docs/datatable/</a></p>\n\n<p>Click on the examples there to see scrollable samples. Since, I am a newbie to stackoverflow, I can only post these two links.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is an example here that works in IE5+, Firefox and Chrome. However, it uses fixed width columns.\n<a href=\"http://www.cssplay.co.uk/menu/tablescroll.html\" rel=\"nofollow\">http://www.cssplay.co.uk/menu/tablescroll.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm aware of <a href=\"http://stackoverflow.com/questions/130564/i-need-my-html-tables-body-to-scroll-and-its-head-to-stay-put\">this question</a>, but none of the answers work in Safari, Chrome, etc.</p>\n\n<p>The accepted strategy (<a href=\"http://www.w3.org/WAI/UA/TS/html401/cp1001/1001-THEAD-TBODY-TFOOT-OVERFLOW.html\">as demonstrated here</a>) is to set the tbody height and overflow properties like so:</p>\n\n<pre><code>&lt;table&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;&lt;th&gt;This is the header and doesn't scroll&lt;/th&gt;&lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody style=\"height:100px; overflow:auto;\"&gt;\n        &lt;tr&gt;&lt;td&gt;content that scrolls&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;content that scrolls&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;content that scrolls&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;content that scrolls&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;content that scrolls&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;content that scrolls&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;content that scrolls&lt;/td&gt;&lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>Unfortunately, this does not work in any webkit browsers.  There is a <a href=\"https://bugs.webkit.org/show%5Fbug.cgi?id=3239\">bug report</a> about it that doesn't seem to be a high priority (reported June 05).</p>\n\n<p>So my question is: are there alternate strategies that do actually work?  I've tried the two-table approach, but it's impossible to guarantee that the header will line up with the content.  Do I just have to wait for Webkit to fix it?</p>\n",
            "last_activity_date": 1402626955,
            "question_id": 1019938,
            "score": 62,
            "tags": [
                "html",
                "css",
                "webkit"
            ],
            "title": "Make TBODY scrollable in Webkit browsers"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>For XML you might use XPath...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'm not entirely clear as to what you're trying to achieve, but if you have a HTML document that you're trying to extract data from, I'd recommend loading it with a <a href=\"http://stackoverflow.com/questions/100358/looking-for-c-html-parser\">parser</a>, and then it becomes fairly trivial to query the object to pull desired elements.</p>\n\n<p>The parser I linked above allows for use of XPath queries, which sounds like what you are looking for.</p>\n\n<p>Let me know if I've misunderstood.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Not quite jQuery like, but this may help:\n<a href=\"http://www.codeplex.com/htmlagilitypack\" rel=\"nofollow\">http://www.codeplex.com/htmlagilitypack</a> </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You should definitely see @jamietre's <a href=\"https://github.com/jamietre/CsQuery\">CsQuery</a>. Check out his answer to this question!</p>\n\n<p><a href=\"http://code.google.com/p/fizzler/\">Fizzler</a> and <a href=\"http://code.google.com/p/sharp-query/\">Sharp-Query</a> provide similar functionality, but the projects seem to be abandoned.</p>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p><em>Update 10/18/2012</em></p>\n\n<p><a href=\"https://github.com/jamietre/CsQuery\">CsQuery</a> is now in release 1.3. The latest release incorporates a C# port of the <a href=\"http://about.validator.nu/htmlparser/\">validator.nu</a> HTML5 parser. As a result CsQuery will now produce a DOM that uses the HTML5 spec for invalid markup handling and is completely standards compliant.</p>\n\n<p><em>Original Answer</em></p>\n\n<p>Old question but new answer. I've recently released version 1.1 of CsQuery, a jQuery port  for .NET 4 written in C# that I've been working on for about a year. Also on <a href=\"http://www.nuget.org/packages/CsQuery\">NuGet</a> as \"CsQuery\"</p>\n\n<p>The current release implements all CSS2 &amp; CSS3 selectors, all jQuery extensions, and all jQuery DOM manipulation methods. It's got extensive test coverage including all the tests from jQuery and sizzle (the jQuery CSS selection engine). I've also included some performance tests for direct comparisons with Fizzler; for the most part CsQuery dramatically outperforms it. The exception is actually loading the HTML in the first place where Fizzler is faster; I assume this is because fizzler doesn't build an index. You get that time back after your first selection, though.</p>\n\n<p>There's documentation on the github site, but at a basic level it works like this:</p>\n\n<p>Create from a string of HTML</p>\n\n<pre><code>CQ dom = CQ.Create(htmlString);\n</code></pre>\n\n<p>Load synchronously from the web</p>\n\n<pre><code>CQ dom = CQ.CreateFromUrl(\"http://www.jquery.com\");\n</code></pre>\n\n<p>Load asynchronously (non-blocking)</p>\n\n<pre><code>CQ.CreateFromUrlAsync(\"http://www.jquery.com\", responseSuccess =&gt; {\n    Dom = response.Dom;        \n}, responseFail =&gt; {\n    ..\n});\n</code></pre>\n\n<p>Run selectors &amp; do jQuery stuff</p>\n\n<pre><code>var childSpans = dom[\"div &gt; span\"];\nchildSpans.AddClass(\"myclass\");\n</code></pre>\n\n<p>the <code>CQ</code> object is like thejQuery object. The property indexer used above is the default method (like <code>$(...)</code>.</p>\n\n<p>Output:</p>\n\n<pre><code>string html = dom.Render();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 57
                }
            ],
            "body": "<p>I'm wondering if there's a jQuery-like css selector that can be used in C#.</p>\n\n<p>Currently, I'm parsing some html strings using regex and thought it would be much nicer to have something like the css selector in jQuery to match my desired elements.</p>\n",
            "last_activity_date": 1400518661,
            "question_id": 1580635,
            "score": 45,
            "tags": [
                "c#",
                "jquery",
                "css",
                "jquery-selectors",
                "css-selectors"
            ],
            "title": "Is there a jQuery-like CSS/HTML selector that can be used in C#?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try preventing default on mousedown event:</p>\n\n<pre><code>&lt;div onmousedown=\"event.preventDefault ? event.preventDefault() : event.returnValue = false\"&gt;asd&lt;/div&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;div onmousedown=\"return false\"&gt;asd&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>This might work: You can disable selecting with css3 for text, image and basically everything.</p>\n\n<pre><code>.unselectable {\n   -moz-user-select: -moz-none;\n   -khtml-user-select: none;\n   -webkit-user-select: none;\n\n   /*\n     Introduced in IE 10.\n     See http://ie.microsoft.com/testdrive/HTML5/msUserSelect/\n   */\n   -ms-user-select: none;\n   user-select: none;\n}\n</code></pre>\n\n<p>Of course only for the newer browsers. For more details check:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/826782/css-rule-to-disable-text-selection-highlighting\">css rule to disable text selection highlighting</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This thing works.....Try it.</p>\n\n<pre><code>&lt;BODY ondragstart=\"return false;\" ondrop=\"return false;\"&gt;\n</code></pre>\n\n<p>hope it helps. Thanks</p>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>With jQuery it will be something like that:</p>\n\n<pre><code>$(document).ready(function() {\n  $('#yourDiv').on('mousedown', function(e) {\n      e.preventDefault();\n  });\n});\n</code></pre>\n\n<p>In my case I wanted to disable the user from drop text in the inputs so I used \"drop\" instead \"mousedown\".</p>\n\n<pre><code>$(document).ready(function() {\n  $('input').on('drop', function(event) {\n    event.preventDefault();\n  });\n});\n</code></pre>\n\n<p>Instead event.preventDefault() you can return false. <a href=\"http://stackoverflow.com/questions/1357118/event-preventdefault-vs-return-false\">Here's the difference.</a></p>\n\n<p>And the code:</p>\n\n<pre><code>$(document).ready(function() {\n  $('input').on('drop', function() {\n    return false;\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I'm working on a web application for which I'm attempting to implement a full featured windowing system. Right now it's going very well, I'm only running into one minor issue. Sometimes when I go to drag a part of my application (most often the corner div of my window, which is supposed to trigger a resize operation) the web browser gets clever and thinks I mean to drag and drop something. End result, my action gets put on hold while the browser does its drag and drop thing.</p>\n\n<p>Is there an easy way to disable the browser's drag and drop? I'd ideally like to be able to turn it off while the user is clicking on certain elements, but re-enable it so that users can still use their browser's normal functionality on the contents of my windows. I'm using jQuery, and although I wasn't able to find it browsing the docs, if you know a pure jQuery solution it would be excellent.</p>\n\n<p>In short: I need to disable browser text selection and drag-and-drop functions while my user has the mouse button down, and restore that functionality when the user releases the mouse.</p>\n\n<p>Thanks for any advice, I've been searching for a while on this with no luck.</p>\n",
            "last_activity_date": 1388140849,
            "question_id": 704564,
            "score": 44,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "webbrowser-control"
            ],
            "title": "Disable Drag and Drop on HTML elements?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Content that is floating does not influence the height of its container. The element contains no content that isn't floating.</p>\n\n<p>See <a href=\"http://www.ejeliot.com/blog/59\">methods for containing floats</a> if you want to avoid this (my preferred approach is to set <code>overflow: hidden</code> on the container). See <a href=\"http://complexspiral.com/publications/containing-floats/\">containing floats</a> for an explanation about why it was designed this way.</p>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<p>Ordinarily, <code>float</code>s aren't counted in the layout of their parents.</p>\n\n<p>To prevent that, add <code>overflow: hidden</code> to the parent.</p>\n",
                    "is_accepted": false,
                    "score": 19
                }
            ],
            "body": "<p>I have the following in my CSS. All margins/paddings/borders are globally reset to 0.</p>\n\n<pre><code>#wrapper{width: 75%; min-width: 800px;}\n.content{text-align: justify; float: right; width: 90%;}\n.lbar{text-align: justify; float: left; width: 10%;}\n</code></pre>\n\n<p>Now when I write my HTML as </p>\n\n<pre><code>&lt;div id=\"wrapper\"&gt;\n    &lt;div class=\"content\"&gt;\n        some text here\n    &lt;/div&gt;\n    &lt;div class=\"lbar\"&gt;\n        some text here\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>the page renders correctly. However, when I inspect the elements, <code>div#wrapper</code> is shown as being <code>0px</code> high. I would've expected it to expand till the end of <code>div.content</code> and <code>div.lbar</code>... Why does this happen? </p>\n\n<p>Again, the page renders fine. This behaviour just perplexes me.</p>\n",
            "last_activity_date": 1422736375,
            "question_id": 5369954,
            "score": 35,
            "tags": [
                "html",
                "css"
            ],
            "title": "Why is my div&#39;s height zero"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Unfortunately, it looks like this feature is absent in WebKit. See this recent bug report:</p>\n\n<p><a href=\"https://bugs.webkit.org/show_bug.cgi?id=40881\">https://bugs.webkit.org/show_bug.cgi?id=40881</a></p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>WebKit now supports the CSS directive:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>image-rendering:-webkit-optimize-contrast;\n</code></pre>\n\n<p>You can see it working in action using Chrome and the last image on this page:<br>\n<a href=\"http://phrogz.net/tmp/canvas_image_zoom.html\">http://phrogz.net/tmp/canvas_image_zoom.html</a></p>\n\n<p>The rules used on that page are:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.pixelated {\n  image-rendering:optimizeSpeed;             /* Legal fallback */\n  image-rendering:-moz-crisp-edges;          /* Firefox        */\n  image-rendering:-o-crisp-edges;            /* Opera          */\n  image-rendering:-webkit-optimize-contrast; /* Safari         */\n  image-rendering:optimize-contrast;         /* CSS3 Proposed  */\n  image-rendering:crisp-edges;               /* CSS4 Proposed  */\n  image-rendering:pixelated;                 /* CSS4 Proposed  */\n  -ms-interpolation-mode:nearest-neighbor;   /* IE8+           */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>In addition to @Phrogz very useful answer and after reading this: <a href=\"https://developer.mozilla.org/en-US/docs/CSS/image-rendering\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/CSS/image-rendering</a></p>\n\n<p>It seems like the best CSS would be this:</p>\n\n<pre><code>image-rendering:optimizeSpeed;              /* Legal fallback                 */\nimage-rendering:-moz-crisp-edges;           /* Firefox                        */\nimage-rendering:-o-crisp-edges;             /* Opera                          */\nimage-rendering:-webkit-optimize-contrast;  /* Chrome (and eventually Safari) */\nimage-rendering:crisp-edges;                /* CSS3 Proposed                  */\n-ms-interpolation-mode:bicubic;             /* IE8+                           */\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I have an image that is 100x100 in pixels. I want to show it twice the size, so 200x200 and I want to do it by CSS and (explicitly) not by the server.</p>\n\n<p>Since a few years, images get anti-aliased by all browsers instead of doing a by-pixel scale.</p>\n\n<p>Mozilla allows to specify the algorithm: image-rendering: -moz-crisp-edges;\nSo does IE: -ms-interpolation-mode: nearest-neighbor;</p>\n\n<p>Any known webkit alternative?</p>\n",
            "last_activity_date": 1384707716,
            "question_id": 3900436,
            "score": 26,
            "tags": [
                "css",
                "image",
                "firefox",
                "webkit",
                "scaling"
            ],
            "title": "Image scaling by CSS: is there a webkit alternative for -moz-crisp-edges?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The main issue with any iOS app is memory usage. So, it is likely that your pages are using too much memory.</p>\n\n<p>Mobile Safari use some clever technique so that not the whole page has to reside in memory at any given time, only a portion of it. Maybe you could check if anything in your page defeats this mechanism or makes it less effective.</p>\n\n<p>In any case, to give more up to the point suggestions, more information about your page would be really great.</p>\n\n<p>By the way, you could have some hints from the crash log that the device store. Check to see if you can find it under Settings:</p>\n\n<ol>\n<li>General</li>\n<li>About</li>\n<li>Diagnostics &amp; Usage</li>\n<li>Diagnostics &amp; Usage Data</li>\n</ol>\n\n<p>If it's a memory problem, you should find something like \"signal (0)\"; not sure if this can only mean \"killed due to memory usage\", but I usually take this for granted when I found a signal (0).</p>\n\n<p>Otherwise, it might tell you what is wrong...</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>There are both memory limits and Javascript execution time limits, though it's a little fuzzy as to how you may actually hit those. Common reports come in that a page with a size greater than 10MB will have issues, and Javascript execution is limited to 10 seconds.</p>\n\n<p>See <a href=\"http://developer.apple.com/library/safari/#documentation/AppleApplications/Reference/SafariWebContent/CreatingContentforSafarioniPhone/CreatingContentforSafarioniPhone.html#//apple_ref/doc/uid/TP40006482-SW15\" rel=\"nofollow\" title=\"Apple's documentation\">Apple's documentation</a> for more info.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I actually found the problem. It wasn't with JS as I thought, but with the CSS. I added class to make a CSS transition to fade in some elements. For anonymous users these elements had <code>display: none;</code> and probably never ran the opacity transition.</p>\n\n<p>The strange thing is that the transitions was on exactly two elements. So why would this only crash on long threads with 100+ comments?</p>\n\n<p>So the bottom line is: -webkit-transition crashed the page on mobile safari.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Had the same issue, for me it was <code>-webkit-transform: translateZ(0);</code> that caused the crash of Safari. </p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I know this question has been successfully answered but I just wanted to put my five cents in too as I have been banging my head against the wall over this one quite a few times:</p>\n\n<p>As most answers have pointed out already it usually comes down to memory issues. Almost anything can be the last bit that finally tips over the \"memory pile\" much like a <code>translateZ</code> or anything else. </p>\n\n<p>However in my experience it has nothing to do with the actual CSS (or JS) command in specific. It just happens to be that the last transition was one too much.</p>\n\n<p>What tends to help me a lot is to keep anything that is not visible at this time under <code>display: none</code>. This might sound primitive but actually does the trick. It's a simple way to tell the renderer of the browser that you don't need this element at this time and therefore releases memory. This allows you to create mile long vertical scrollers with all sorts of 3d effects as long as you hide elements that you are not using at this time. </p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I had a similar problem, the web page worked like a charm on android devices and crashed on IOS (iphone and simulator).</p>\n\n<p>After a lot of research (using also the ios_webkit_debug_proxy) I found that the problem was connected to the jQuery ready event.</p>\n\n<p>Adding a little timeout solved the problem. My application was also using iframes.</p>\n\n<pre><code>$(document).ready(function () {\n    window.setTimeout(function () { ready(); }, 10);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I recently had an issue with mobile safari crashing on web-app pages containing a lot of images (30+ were enough) and a few transformations for the menu. After a lot of trial and error, I settled with a solution similar to what <a href=\"http://engineering.linkedin.com/linkedin-ipad-5-techniques-smooth-infinite-scrolling-html5\" rel=\"nofollow\">LinkedIn</a> does, but for infinite scrolling using angularjs. I used <strong>requestAnimFrame</strong> and two <strong>expanding/shrinking divs</strong> (with js style attributes) on the top and bottom of the list to remove all image containers (with other stuff overlayed on top) except for a few ones which are close to the viewport. Scrolling performance (native, no js) is fine and memory consumption is in check.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a problem where Mobile Safari crashes when loading and manipulating the DOM with jQuery when the pages get too big.</p>\n\n<p>I get the same problem on both iPhone and iPad.</p>\n\n<p>What are the best way to troubleshoot mobile pages to find the error? Are there any known problems that might crash Mobile Safari? </p>\n",
            "last_activity_date": 1424134777,
            "question_id": 11831429,
            "score": 23,
            "tags": [
                "javascript",
                "css",
                "debugging",
                "mobile-safari"
            ],
            "title": "Mobile Safari on iOS crashes on big pages"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You have a <code>float</code> in <code>static-maincontent</code>, which removes it from the regular flow of the content of the document, and hence <code>static-content</code> doesn't care about its height any more, and so won't expand to cover it.\nAdditionally, remove <code>height:100%</code> for <code>static-content</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>height:100%</code> is the height of the content that flows with your container at hand and is not taking into account your floated content, so that is why the height of your container is stopping short. Remove it and clear your container properly to clear your floated elements  within and it will work:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>#static-content:before, #static-content:aftr {\n display:table;\n content:\"\";\n}\n\n#static-content:after {\n clear:both;\n}\n\n#static-content {\n zoom:1; /*ie fix*/\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You used the wrong <code>overflow-y</code> property for clearing, and you should set a <code>min-height</code> instead of a regular height. Try this:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>#static-content {\n    background-color: #FFFFFF;\n    margin: 0 auto;\n    min-height: 100%; /* Set to minimum height so overflow doesn't get hidden */\n    overflow-y: hidden; /* HIDE overflow; I know, it doesn't make much sense */\n    position: relative;\n    width: 960px;\n}\n</code></pre>\n\n<h2>Floating Content by Itself</h2>\n\n<p>Given this green box which has a padding of 20px (for visibility), notice how a single red box floated to the left will expand past the boundary of its parent box. This is because floating content doesn't actually take up any \"space\" in the visual area. All other elements will expand underneath it, and only <strong>text</strong> will wrap around it.</p>\n\n<p><img src=\"http://i.stack.imgur.com/tLP1Y.jpg\" alt=\"Example 1\"></p>\n\n<h2>Clearing Floated Content in the Parent</h2>\n\n<p>In order to counter this and make the green box completely encompass the area of its child red box, we can add <code>overflow: hidden</code> to its styles. This will expand the box down far enough.</p>\n\n<p><img src=\"http://i.stack.imgur.com/F4LZf.jpg\" alt=\"Example 2\"></p>\n\n<h2>Expanding the Parent to 100% Height</h2>\n\n<p>You might think that just adding <code>height: 100%</code> is the simplest way to make it expand to where it needs to be.However, the <code>height</code> property specifies an absolute height. Since the content which is floated does not actually take up any vertical space, our <code>overflow: hidden</code> property will cut off all the content that goes past the parent's height.</p>\n\n<p><img src=\"http://i.stack.imgur.com/prCLF.jpg\" alt=\"Example 3\"></p>\n\n<h2>Using a Minimum Height Instead</h2>\n\n<p>Since we want it to expand to <strong>at least</strong> a 100% height, we can use the <code>min-height</code> property to force it there and still maintain the \"automatic\" height needed to make the parent green box fully encompass the child red box, letting it push past the 100% only when it needs too.</p>\n\n<p><img src=\"http://i.stack.imgur.com/RNNFD.jpg\" alt=\"Example 4\"></p>\n\n<h2>How You Were Set Up</h2>\n\n<p>All elements, by default, are set to <code>overflow: visible</code> so that property didn't really change anything. The only difference you had between this and the first example I provided was that you had a <code>height: 100%</code> set on the element. So the parent was expanding to 100% height but still not encompassing the full height of its child red box.</p>\n\n<p><img src=\"http://i.stack.imgur.com/nQzbR.jpg\" alt=\"Example 5\"></p>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>If height: 100% doesn't work well for you, you can try this calc function from CSS3:</p>\n\n<pre><code>/* Firefox */\nheight: -moz-calc(100%);\n/* WebKit */\nheight: -webkit-calc(100%);\n/* Standard */\nheight: calc(100%);\n</code></pre>\n\n<p>You can try this either with height, or with min-height, as already said. You can with this calc functions also other calculations like:</p>\n\n<pre><code> height: -moz-calc(100% - 50px);\n</code></pre>\n\n<p>And this is sometimes very useful, as you might guess.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you have to use overflow:visible for some reason, there's other way to force container to stretch to contain all floated content. You have to put element with clear:both as a last container's elements. If you ignore ancient IEs (&lt;8) you can do it with very simple css (vide <a href=\"https://css-tricks.com/snippets/css/clear-fix/\" rel=\"nofollow\">https://css-tricks.com/snippets/css/clear-fix/</a>):</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.your-container:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm struggling with <a href=\"http://cornerstonearts.hostasaurus.com/news/news_1\" rel=\"nofollow\">this</a>. All of my <code>div</code>s have no absolute positioning, <code>height:100%</code> for <code>html</code>, <code>body</code>, and container <code>div</code>s, and yet the static-content stops short of its contents (at 910px).</p>\n\n<p>I can change the overflow property to <code>auto</code>, and the background will continue down to the end of the content, but it adds a scroll bar, and the bottom border of the static-content <code>div</code> stays in the same place (at 910px).</p>\n",
            "last_activity_date": 1425470869,
            "question_id": 9446988,
            "score": 14,
            "tags": [
                "css",
                "css-float"
            ],
            "title": "Expanding the parent container with 100% height to account for floated content"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can use css like this:</p>\n\n<pre><code>overflow-y: scroll;\noverflow-x: hidden;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 271
                },
                {
                    "body": "<p>Use CSS. It's easier and faster than javascript.</p>\n\n<pre><code>overflow-x: hidden;\noverflow-y: scroll;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Using <code>wrap=virtual</code> in your HTML form boxes gets rid of the horizontal scrollbar at the bottom of the box: </p>\n\n<pre><code>  &lt;textarea name= \"enquiry\" rows=\"4\" cols=\"30\" wrap=\"virtual\"&gt;&lt;/textarea&gt;\n</code></pre>\n\n<p>See <strong><em>example</em></strong> here : <a href=\"http://jsbin.com/opube3/2\" rel=\"nofollow\">http://jsbin.com/opube3/2</a> <strong>(Tested on FF and IE)</strong></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>&lt;div style=\"width:100px;height:100px;overflow-x:hidden;overflow-y:auto;background-color:#000000\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>.combobox_selector ul {\n    padding: 0;\n    margin: 0;\n    list-style: none;\n    border:1px solid #CCC;\n    height: 200px;\n    overflow: auto;\n    overflow-x: hidden;\n}\n</code></pre>\n\n<p>sets 200px scrolldown size, <code>overflow-x</code> hides any horizontal scrollbar.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try:</p>\n\n<pre><code>body{\noverflow-x: hidden;\noverflow-y: scroll;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an html textarea that is of fixed width, but variable height. I would like to set overflow:scroll and be able to show a vertical scrollbar, but not a horizontal one. I am not able to use overflow:auto due to other things specific to my situation.</p>\n\n<p>I know there is no way using CSS 2 to show only vertical but not horizontal scrollbars. Is there anything I can do with javascript to hide the horizontal scrollbar?</p>\n",
            "last_activity_date": 1409729338,
            "question_id": 2594389,
            "score": 116,
            "tags": [
                "html",
                "css",
                "scrollbar"
            ],
            "title": "Hide html horizontal but not vertical scrollbar"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>What you posted literally means \"Find any divs that are inside of section divs and are the first child of their parent.\" The sub contents 1 div matches that description.</p>\n\n<p>It is unclear to me whether you want both children of the main div or not. If so, use this:</p>\n\n<pre><code>div.section &gt; div\n</code></pre>\n\n<p>If you only want the header, use this:</p>\n\n<pre><code>div.section &gt; div:first-child\n</code></pre>\n\n<p>Using the <code>&gt;</code> changes the description to: \"Find any divs that are the direct descendents of section divs\" which is what you want.</p>\n\n<p>Please note that all major browsers support this method, except IE6. If IE6 support is mission-critical, you will have to add classes to the child divs and use that, instead. Otherwise, it's not worth caring about.</p>\n",
                    "is_accepted": true,
                    "score": 194
                },
                {
                    "body": "<pre><code>div.section &gt; div\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>CSS is called Cascading Style Sheets because the rules are inherited. Using the following selector, <em>will</em> select just the direct child of the parent, but its rules will be <em>inherited</em> by that <code>div</code>'s children <code>divs</code>:</p>\n\n<pre><code>div.section &gt; div { color: red }\n</code></pre>\n\n<p>Now, both that <code>div</code> <strong>and</strong> its children will be <code>red</code>. You need to cancel out whatever you set on the parent if you don't want it to inherit:</p>\n\n<pre><code>div.section &gt; div { color: red }\ndiv.section &gt; div div { color: black }\n</code></pre>\n\n<p>Now only that single <code>div</code> that is a direct child of <code>div.section</code> will be red, but its children <code>divs</code> will still be black.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Use <code>div.section &gt; div</code>. </p>\n\n<p>Better yet, use an <code>&lt;h1&gt;</code> tag for the heading and <code>div.section h1</code> in your CSS, so as to support older browsers (that don't know about the <code>&gt;</code>) <em>and</em> keep your markup semantic.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you need to support IE6 then this article may help you emulate the child selector for IE6: <a href=\"http://craftycode.wordpress.com/2010/05/19/emulating-css-child-selectors-in-ie6/\" rel=\"nofollow\">http://craftycode.wordpress.com/2010/05/19/emulating-css-child-selectors-in-ie6/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have the following html</p>\n\n<pre><code>&lt;div class=\"section\"&gt;\n   &lt;div&gt;header&lt;/div&gt;\n   &lt;div&gt;\n          contents\n          &lt;div&gt;sub contents 1&lt;/div&gt;              \n          &lt;div&gt;sub contents 2&lt;/div&gt;\n   &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>And the following style:</p>\n\n<pre><code>DIV.section DIV:first-child \n{\n  ...\n}\n</code></pre>\n\n<p>For some reason that I don't understand the style is getting applied to the <em>\"sub contents 1\"</em> <code>&lt;div&gt;</code> as well as the <em>\"header\"</em> <code>&lt;div&gt;</code>.  </p>\n\n<p>I thought that the selector on the style would only apply to the first direct child of a div with a class called \"section\".  How can I change the selector to get what I want?</p>\n",
            "last_activity_date": 1376015141,
            "question_id": 2094508,
            "score": 95,
            "tags": [
                "html",
                "css",
                "css-selectors"
            ],
            "title": "css selector for first direct child only"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><em>The solution is very simple, but took me about 2 hours and half the hair on my head to find it.</em></p>\n\n<p>Simply <strong><em>wrap</em></strong> your content with a <em>(redundant)</em> <code>div</code> that has <code>display: none</code> and <strong>Bob</strong> is your uncle.</p>\n\n<pre><code>&lt;div style=\"display: none\"&gt;\n    &lt;div id=\"content-div\"&gt;Some content here&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>Voila</strong></p>\n",
                    "is_accepted": true,
                    "score": 96
                },
                {
                    "body": "<p>I spent a good deal of time trying to figure this out and the way I did was going through the example index.html/style.css that comes packaged with the Fancybox installation. </p>\n\n<p>If you view the code that is used for the demo website and basically copy/paste, you'll be fine.</p>\n\n<p>To get an inline Fancybox working, you will need to have this code present in your index.html file:</p>\n\n<pre><code>  &lt;head&gt;\n    &lt;link href=\"./fancybox/jquery.fancybox-1.3.4.css\" rel=\"stylesheet\" type=\"text/css\" media=\"screen\" /&gt;\n    &lt;script&gt;!window.jQuery &amp;&amp; document.write('&lt;script src=\"jquery-1.4.3.min.js\"&gt;&lt;\\/script&gt;');&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"./fancybox/jquery.fancybox-1.3.4.pack.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function() {\n\n    $(\"#various1\").fancybox({\n            'titlePosition'     : 'inside',\n            'transitionIn'      : 'none',\n            'transitionOut'     : 'none'\n        });\n    });\n    &lt;/script&gt;\n  &lt;/head&gt;\n\n &lt;body&gt;\n\n    &lt;a id=\"various1\" href=\"#inline1\" title=\"Put a title here\"&gt;Name of Link Here&lt;/a&gt;\n    &lt;div style=\"display: none;\"&gt;\n        &lt;div id=\"inline1\" style=\"width:400px;height:100px;overflow:auto;\"&gt;\n                   Write whatever text you want right here!!\n    &lt;/div&gt; \n</code></pre>\n\n<p></p>\n\n<p>Remember to be precise about what folders your script files are placed in and where you are pointing to in the Head tag; they must correspond.</p>\n\n<p>I hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Just something I found for Wordpress users,</p>\n\n<p>As obvious as it sounds, If your div is returning some AJAX content based on say a header that would commonly link out to a new post page, some tutorials will say to return false since you're returning the post data on the same page and the return would prevent the page from moving. However if you return false, you also prevent Fancybox2 from doing it's thing as well. I spent hours trying to figure that stupid simple thing out. </p>\n\n<p>So for these kind of links, just make sure that the href property is the hashed (#) div you wish to select, and in your javascript, make sure that you do not return false since you no longer will need to.</p>\n\n<p>Simple I know ^_^ </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Well, I'm simply writing this post to hopefully help others that might come across the same issue.</p>\n\n<p>The examples on the vendor website are a little vague and I had assumed the following scenario.</p>\n\n<hr>\n\n<p><strong>You have a link with a <code>href</code>n to some content's <code>#id</code>.</strong></p>\n\n<pre><code>&lt;a href=\"#content-div\" class=\"fancybox\"&gt;Open Example&lt;/a&gt;\n</code></pre>\n\n<p><strong>And you have a div to hold that content.</strong></p>\n\n<pre><code>&lt;div id=\"content-div\" style=\"display: none\"&gt;Some content here&lt;/div&gt;\n</code></pre>\n\n<p><strong>Then you simply run Fancybox through a 1-liner.</strong></p>\n\n<pre><code>$(\".fancybox\").fancybox();\n</code></pre>\n\n<p><strong>Naturally</strong>, you'd think that Fancybox will copy the content and change <code>display: none</code> to <code>display: block</code> and everything will be ok.</p>\n\n<p><em><strong>But this doesn't happen.</em></strong><br />\nIt still loads the content but the content is hidden and you have a blank Fancybox. <code>*cry*</code></p>\n",
            "last_activity_date": 1351893552,
            "question_id": 3963338,
            "score": 54,
            "tags": [
                "jquery",
                "html",
                "css",
                "fancybox"
            ],
            "title": "Loading inline content using FancyBox"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Pixels is more aesthetic for me, and I believe it's considered better practice...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think it depends on what you're trying to do.</p>\n\n<p>I find the key question is does the distance need to resize with the window? Some units are relative, some (like pixels and points) are not - a brief description is <a href=\"http://webdesign.about.com/cs/typemeasurements/a/aa042803a.htm\" rel=\"nofollow\">here</a>.</p>\n\n<p>I haven't seen points used much, px seems more common when an absolute measurement is needed.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The answer is: It depends. What are you using your margins for? Are they an integrated part of a balanced, resizable layout, or do they just provide a gutter around the edges? Percentages work better in the first case, and pixels work well in the second.</p>\n\n<p>You should try the different possibilities and determine which works best for your document. Since there is no \"right and wrong\" in this case, you can choose the answer that works best for you.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I use pixels for nearly everything.</p>\n\n<p>For me, it \"feels\" like I have more precise control.</p>\n\n<p>For the few things that I need to dynamically resize with the window, I use percent.</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p><a href=\"http://www.w3.org/TR/CSS21/syndata.html#em-width\" rel=\"nofollow\">What is \"em\"?</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The rules of thumb is:</p>\n\n<p>Pixels for screen display; points for printing.</p>\n\n<p>'em' or '%' (and the lesser known <code>rem</code>) are better for a more flexible layout.</p>\n\n<p><code>em</code> is a unit of measure based on the size of the letter 'm' in the current font. Specifying sizes in em allows you to have a size based on the font size, meaning that you can change the font, and the layout will change to follow suit.</p>\n\n<p>But there are plenty of times when you need to use a fixed size. In that case, <code>px</code> is usually going to be best, as most web pages are displayed on a pixel-based screen. But if you're planning to have a page which is printed a lot, then you could have a print-specific stylesheet with a point-based layout.</p>\n\n<p>Generally I'd recommend <code>em</code> over <code>px</code> or <code>pt</code>. If you're using <code>px</code>, it is because you have elements on your page which are sized in pixels such as images, which you need the rest of the layout to conform to. In this case, because the images are in pixels, so should the stylesheets. In addition, because points are a printing unit of measure, there's no guarantee how they'll appear on the screen: px is screen-based, so will give you a much more consistent look on-screen cross-browser and cross-platform.</p>\n\n<p>By the way, this page might give you some further info: <a href=\"http://webdesign.about.com/cs/typemeasurements/a/aa042803a.htm\">http://webdesign.about.com/cs/typemeasurements/a/aa042803a.htm</a> </p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<blockquote>\n  <p><strong>Points are great since they are 1/72 inch tall</strong>. You know how tall your text will be. Problem with pixels is that they get smaller the higher the resolution. <strong>Pixels are great if you want to wrap text around a background picture</strong>. Takes some work but it can make a nice looking page. I have heard that pixels are not resizable in IE - so if they want to increase the font size they can't. Don't use IE, so I can't say. Remember hearing that. EM's leave you at the mercy of how the person has that defined font sizes in their browser. Ems and percentages make it easy. I always use points. </p>\n  \n  <p>[...]</p>\n  \n  <p>No, <strong>points are not the best</strong>. To anyone who finds this thread, forget that you ever read that. This is a web design forum. For displaying pages on screen media. <strong>Points are included in CSS solely for the purpose of print design. For print media stylesheets.</strong> _<em>They are not scalable as % and ems are</em>_. If you are any sort of web designer you should be working to make your pages accessible and using points is a strike against that right off the top.</p>\n</blockquote>\n\n<p><a href=\"http://www.v7n.com/forums/coding-forum/17594-font-size-pixel-vs-point.html\">http://www.v7n.com/forums/coding-forum/17594-font-size-pixel-vs-point.html</a></p>\n\n<p>It's funny, everyone answer \"pixel or %/em\" and not \"pixel or points\". </p>\n\n<p>I didn't know there was a difference between both.</p>\n\n<p><a href=\"http://css-discuss.incutio.com/wiki/Using_Points\">more info</a></p>\n\n<p>Edit : <a href=\"http://www.w3.org/QA/Tips/font-size\">even more info... official ones!</a></p>\n\n<blockquote>\n  <p><strong>Do not specify the font-size in pt</strong>, or other absolute length units for screen stylesheets. They render inconsistently across platforms and can't be resized by the User Agent (e.g browser). <strong>Keep the usage of such units for styling on media with fixed and known physical properties (e.g print)</strong>.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><strong>Use <code>px</code> or <code>em</code></strong></p>\n\n<ul>\n<li><a href=\"http://kyleschaeffer.com/best-practices/css-font-size-em-vs-px-vs-pt-vs/\">CSS FONT-SIZE: EM VS. PX VS. PT VS. PERCENT</a></li>\n</ul>\n\n<blockquote>\n  <p><strong>Points (pt):</strong> Points are traditionally used in print media (anything that is to be printed on paper, etc.). One point is equal to 1/72 of an inch. Points are much like pixels, in that they are fixed-size units and cannot scale in size.</p>\n  \n  <p>Generally, <strong>1em = 12pt = 16px = 100%.</strong></p>\n  \n  <p>[Conclusion]</p>\n  \n  <p><strong>The winner:</strong> percent (%).</p>\n</blockquote>\n\n<ul>\n<li>JohnB note: <strong>this is for <em>TEXT.</em></strong>  Obviously you asked about \"things like margins.\"  (I assume you mean <code>padding</code> also.)  For that, I would recommend <code>px</code> or <code>em</code>.  Personally, I switch, depending on the particular situation.</li>\n</ul>\n\n<p><strong>MORE ARTICLES</strong></p>\n\n<ul>\n<li><a href=\"http://css-tricks.com/css-font-size/\">px \u2013 em \u2013 % \u2013 pt \u2013 keyword</a></li>\n</ul>\n\n<blockquote>\n  <p>Point values are only for print CSS! </p>\n</blockquote>\n\n<p><em>(Comment further down)</em></p>\n\n<blockquote>\n  <p><strong>Points are for print? Nope.</strong></p>\n  \n  <p>Points are not for print exclusively. Theoretically, points are for defining an absolute measure. Pixels are not absolute, since depending on your screen and chosen definition (not resolution), the resolution (pixels per inch) can go from a lot (150dpi) or very little (75dpi). Which means your pixels can be a size, or maybe half that size. Which means that text you design to be perfectly legible on your screen may look too big on your client\u2019s screen (\u201cplease make the text smaller, ok?\u201d) or too small to be readable on your neighbor\u2019s screen (\u201chey, the website you told me about the other day? the one you said you had worked on\u2026 well i couldn\u2019t read the text very well, it\u2019s so small\u201d).</p>\n  \n  <p>Points are a solution to this issue. But browsers and operating systems need to manage those. Basically, it means:</p>\n  \n  <p>browsers have to calculate the display size in pixels using the given value (say, 10pt) and the screen\u2019s real resolution;\n  operating systems have to communicate the real current resolution, and not a default value.</p>\n</blockquote>\n\n<p>Also:</p>\n\n<ul>\n<li><a href=\"http://net.jasonpearce.com/tools/cssfontsizes.html\">CSS: Comparing Font Size, Percentage, Em, Point, and Pixel</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>Anybody who tells you to use pixels is <strong>wrong</strong>. Pixels work fine, but they are simply not required... Ever! Points are a perfectly fine way to specify an absolute measure, and for the scale we are commonly working at on the web they are more often then not the preferred measure.</p>\n\n<p>Beside points, there is also pica, inch, centimeter and so forth. Choosing one of these over the other is a lot like saying, \"should I measure this room in feet or inches?\" Let common sense be your guide. They'll all get the job done.</p>\n\n<p>Em, which came up in some of the answers, should be reserved for when it's appropriate. That is to say, \"when this thing scales, I want this other thing to scale\". That's what relative measures are for. I know that is beyound the scope of your original question, but I had to address some of the nonsense about \"always using em\".</p>\n\n<p>BTW, pixels don't equal physical pixels. Today, px in a stylesheet means 1/96th of an inch. This is why I say don't use them. Most people don't know this. They use them thinking they're specifying actual pixels. I can't take these people seriously with this being apparent (Although I don't blame the people, I blame the confusing nature of the state of things which is why I campaign for pixels to disappear.). Furthermore, if pixels really meant pixels, they'd be a horrible way to specify dimensions. Talk about the fact that things would randomly shrink and grow based on uncontrollable arbitrary screen resolutions. Yikes! Stay away from pixels!!! In practice they work, but only due to fudging an unseen efforts on the part of browser makers and OS folks, in theory they're a horribly ambiguous way of specifying your intentions.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>John B's answer above is the best and most accurate. I just wanted to point out a possible confusion created by the answer above his. An \"em\" in typography is the width of the letter \"m\" in the font that you've chosen. To specify height for a font, printers/typesetters used the \"x height\", which is the height of the lower case x for a font.</p>\n\n<p>As John points out, pt's are a fixed unit of measure equal to 1/72nd of an inch. Since monitors have varying pixel densities (72/inch, 96/inch...) it isn't generally a good way to size things in HTML docs.</p>\n\n<p>The em relates directly to the old typography unit and makes an excellent relative measure. As your screen size is scaled, the font sizes scale with it. If you use em's for margins, they scale relative to your font sizes, which is generally a good thing. </p>\n\n<p>But, for margins, padding and all things not directly font related, it's best to use rem's, or \"relative ems\". The best way to do this is declare a default font size for your body or html tag initially. Something like body font-size = 16px is a good place to start. Then everywhere else in the document use em's for text, and rem's for everything else. Or, use percentages. Either will work fine. Like em's and rem's, your % is relative to that original 16px = 100% font size.</p>\n\n<p>Everything in the document will scale relative to your initial setting for your 100% font size at 16px. That way you only use a pixel measurement once in the document. This comes in handy if you later want to set media queries to adjust your sizes and margins to accommodate different pixel densities across different device displays. You only have to have queries for that one initial declaration in the body tag. Everything else will adjust relative to that and won't need to be changed.</p>\n\n<p>just a thought,\nmaxw3st</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>When creating an HTML page, should I specify things like margins with pixels or with points?</p>\n\n<p>Is one of them considered to be better practice than the other? Any advantages or disadvantages to either one?</p>\n",
            "last_activity_date": 1348883235,
            "question_id": 6389914,
            "score": 40,
            "tags": [
                "html",
                "css",
                "pixels",
                "points"
            ],
            "title": "Pixels vs. Points in HTML"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>To prevent the rendering change you need to set <code>font-smoothing: antialiased</code> (or <code>none</code>).</p>\n\n<p>The browser disabling subpixel font rendering is likely a side-effect of hardware acceleration. When the background you are rendering against is constantly shifting, the text cannot be rendered on a separate layer, as each frame must be checked against all background layers. This could severely degrade performance.</p>\n\n<p>Apple often disable subpixel font-smoothing on <a href=\"https://www.apple.com\" rel=\"nofollow\">their</a> <a href=\"https://www.icloud.com\" rel=\"nofollow\">own</a> sites.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think I found A solution:</p>\n\n<pre><code>-webkit-transform: translateZ(0px);\n</code></pre>\n\n<p>Forcing hardware acceleration on the text seems to solve the problem...</p>\n\n<p><strong>EDIT</strong>\nAs commented, this hack disables font-smoothing and can degrade text rendering depending on your fonts, browser and OS!</p>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>To prevent text rendering changes due to hardware-acceleration, you can either:</p>\n\n<ol>\n<li><p>Set all text to -webkit-font-smoothing: antialiased. This means text is thinner and not sub-pixel antialiased.</p></li>\n<li><p>If you want text which is being affected by hardware-acceleration to be sub-pixel antialiased (the default kind of font smoothing), then putting that text inside an input, without borders and disabled, will keep that sub-pixel antialiased (at least on Chrome on Mac OS X). I have not tested this on other platforms, but if sub-pixel antialiasing is important, you can at least use this trick.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I've noticed that pretty much every time I'm having graphics issues (flickering/stuttering/choppiness/etc) due to a transition, using -webkit-backface-visibility: hidden; on the elements that are acting up tends to solve the problem.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Explicitly setting <code>-webkit-font-smoothing: subpixel-antialiased</code> is the best current solution if you wish to at least partially avoid the thinner antialiased text.</p>\n\n<p>--tl;dr--</p>\n\n<p>With both Safari and Chrome where the default font rendering uses subpixel-antialiasing, any CSS that forces GPU based rendering, like the suggestions above to use a transform using translateZ or a even just a scale transition, will cause Safari and Chrome to automatically \"give up\" on subpixel-antialiased font smoothing and instead switch to just antialiased text, which looks a lot lighter and thinner, especially on Safari. </p>\n\n<p>Other responses have focused on maintaining a constant rendering by simply setting or forcing font-smoothing to the thinner antiailiased text. To my eye using translateZ or backface hidden significantly degrades the quality of the text rendering and the best solution if you want the text to just stay consistent and you're OK with the thinner text is just to use <code>-webkit-font-smoothing: antialiased</code>. However, explicitly setting <code>-webkit-font-smoothing: subpixel-antialiased</code> does actually have some effect - the text does still change slightly and is just about visibly thinner during transitions rendered on the GPU but not as thin as it goes without this setting. So it looks like this at least partially prevents the switch to straight antiailiased text.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I had the same problem. Read it carefully:</p>\n\n<blockquote>\n  <p>I notice that when the element is transitioning, the <strong>rest of the text\n  on the page</strong> (in Webkit) tends to slightly alter its rendering until\n  the transition is done.</p>\n</blockquote>\n\n<p>none of the solutions above seemed to work. However, setting (things like)</p>\n\n<pre><code>#myanimation { -webkit-transform: translateZ(0px); }\n</code></pre>\n\n<p>on the element that <strong>has the animation</strong> did work. </p>\n\n<p>By taking the animated element to the GPU layer you take it out of the normal flow of the page rendering (things like z-index will not work anymore too, for example). As a side effect, the animation and the rest of the page wont influence eachother anymore. </p>\n\n<p>If it effects your font rendering, it only does so for the animated element, ofcourse. I don't see the difference in my Chrome.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In addition to the above solutions (<code>-webkit-transform: translateZ(0px)</code> on the element, and <code>-webkit-font-smoothing: antialiased</code> on the page) some elements may still behave badly. For me it was placeholder text in an input element: For this, use <code>position:relative</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm using CSS transitions to transition between CSS transformed states (basically transitioning the scale of an element). I notice that when the element is transitioning, the rest of the text on the page (in Webkit) tends to slightly alter its rendering until the transition is done. </p>\n\n<p>Fiddle: <a href=\"http://jsfiddle.net/russelluresti/UeNFK/\">http://jsfiddle.net/russelluresti/UeNFK/</a></p>\n\n<p>I also noticed that this does not occur on my headers, which have the <code>-webkit-font-smoothing: antialiased</code> property/value pair on them. So, I'm wondering, is there any way to have the text maintain its default look (the \"auto\" value for font-smoothing) and not alter rendering during a transition.</p>\n\n<p>I've tried explicitly setting the text to use the \"auto\" value, but that doesn't do anything. I should also note that setting font-smoothing to \"none\" also prevents the rendering blink during transition.</p>\n\n<p>Any help is appreciated.</p>\n\n<p><strong>Edit 1</strong></p>\n\n<p>I should note that I am on OS X. While looking at my test in Chrome on Parallels, I did not see the two different paragraphs behaving differently, so this may be an issue exclusive to Macs.</p>\n",
            "last_activity_date": 1400559584,
            "question_id": 12502234,
            "score": 35,
            "tags": [
                "css",
                "css3",
                "webkit",
                "css-transitions",
                "css-transforms"
            ],
            "title": "How to prevent Webkit text rendering change during CSS transition"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>There are quite a few ways to accomplish, negative margins is one of my favorites:</p>\n\n<p><a href=\"http://www.alistapart.com/articles/negativemargins/\" rel=\"nofollow\">http://www.alistapart.com/articles/negativemargins/</a></p>\n\n<p>Good luck!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>set your right to the specific width and float it, on your left just set the margin-right to 250px</p>\n\n<pre><code>.left {\nvertical-align: middle;\nmin-height: 50px;\nmargin-right: 250px;\noverflow: auto\n</code></pre>\n\n<p>}</p>\n\n<pre><code>.right {\nwidth:250px;\ntext-align: right;\ndisplay: table-cell;\nvertical-align: middle;\nmin-height: 50px;\nheight: 100%;\noverflow: auto\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you can wrap them in a container <code>&lt;div&gt;</code> you could use positioning to make the left <code>&lt;div&gt;</code> anchored at <code>left:0;right:250px</code>, see <a href=\"http://jsfiddle.net/FQxkq/1/\"><strong>this demo</strong></a>. I'll say now that this will not work in IE6 as only one corner of a <code>&lt;div&gt;</code> can be absolutely positioned on a page (<a href=\"http://www.alistapart.com/articles/conflictingabsolutepositions\">see here</a> for full explanation).</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><strong>See:</strong> <a href=\"http://jsfiddle.net/SpSjL/\">http://jsfiddle.net/SpSjL/</a> <em>(adjust the browser's width)</em></p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div class=\"right\"&gt;&lt;/div&gt;\n&lt;div class=\"left\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>.left {\n    overflow: hidden;\n    min-height: 50px;\n    border: 2px dashed #f0f\n}\n\n.right {\n    float: right;\n    width: 250px;\n    min-height: 50px;\n    margin-left: 10px;\n    border: 2px dashed #00f\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>If you can flip the order in the source code, you can do it like this:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"right\"&gt;&lt;/div&gt; // needs to be 250px    \n&lt;div class=\"left\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.right {\n  width: 250px;\n  float: right;\n}   \n</code></pre>\n\n<p>An example: <a href=\"http://jsfiddle.net/blineberry/VHcPT/\">http://jsfiddle.net/blineberry/VHcPT/</a></p>\n\n<p>Add a container and you can do it with your current source code order and absolute positioning: </p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"container\"&gt;\n  &lt;div class=\"left\"&gt;&lt;/div&gt;\n  &lt;div class=\"right\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS: </p>\n\n<pre><code>#container {\n  /* set a width %, ems, px, whatever */\n  position: relative;\n}\n\n.left {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 250px;\n}\n\n.right {\n  position: absolute;\n  background: red;\n  width: 250px;\n  top: 0;\n  right: 0;\n}\n</code></pre>\n\n<p>Here, the <code>.left</code> div gets an implicitly set width from the <code>top</code>, <code>left</code>, and <code>right</code> styles that allows it to fill the remaining space in <code>#container</code>.</p>\n\n<p>Example: <a href=\"http://jsfiddle.net/blineberry/VHcPT/3/\">http://jsfiddle.net/blineberry/VHcPT/3/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Use the simple this can help you</p>\n\n<pre><code>&lt;table width=\"100%\"&gt;\n    &lt;tr&gt;\n         &lt;td width=\"200\"&gt;fix width&lt;/td&gt;\n         &lt;td&gt;&lt;div&gt;ha ha, this is the rest!&lt;/div&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>1- Have a wrapper div, set the padding and margin as you like<br>\n2- Make the left side div the width you need and make it float left<br>\n3- Set the right side div margin equal to the left side width<br></p>\n\n<pre><code>.left\n{\n    ***width:300px;***\n    float: left;\n    overflow:hidden;\n\n}\n\n.right\n{\n    overflow: visible;\n    ***margin-left:300px;***\n}\n\n\n\n&lt;div class=\"wrapper\"&gt;\n    &lt;div class=\"left\"&gt;\n        ...\n    &lt;/div&gt;\n\n    &lt;div class=\"right\" &gt;\n        ...\n    &lt;/div&gt;\n\n&lt;/div&gt;\n</code></pre>\n\n<p>Hope this works for you!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use calc() Function of CSS.</p>\n\n<p>Demo: <a href=\"http://jsfiddle.net/A8zLY/543/\" rel=\"nofollow\">http://jsfiddle.net/A8zLY/543/</a></p>\n\n<pre><code>&lt;div class=\"left\"&gt;&lt;/div&gt;\n&lt;div class=\"right\"&gt;&lt;/div&gt;\n\n.left {\nheight:200px;\nwidth:calc(100% - 200px);\nbackground:blue;\nfloat:left;\n}\n\n.right {\nwidth:200px;\nheight:200px;\nbackground:red;\nfloat:right;   \n}\n</code></pre>\n\n<p>Hope this will help you!!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've got two div containers.</p>\n\n<p>Whilst one needs to be a specific width, I need to adjust it, so that, the other div takes up the rest of the space. Is there any way I can do this?</p>\n\n<pre><code> &lt;div class=\"left\"&gt;&lt;/div&gt;\n &lt;div class=\"right\"&gt;&lt;/div&gt; // needs to be 250px\n\n.left {\nfloat: left;\nwidth: 83%;\ndisplay: table-cell;\nvertical-align: middle;\nmin-height: 50px;\nmargin-right: 10px;\noverflow: auto\n}\n\n.right {\nfloat: right;\nwidth: 16%;\ntext-align: right;\ndisplay: table-cell;\nvertical-align: middle;\nmin-height: 50px;\nheight: 100%;\noverflow: auto\n}\n</code></pre>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1412861678,
            "question_id": 6487085,
            "score": 30,
            "tags": [
                "css",
                "html"
            ],
            "title": "Two divs, one fixed width, the other, the rest"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>When you have specified a <code>width</code> on the object that you have applied <code>margin: 0 auto</code> to, the object will sit centrally within it's parent container.</p>\n\n<p>Specifying <code>auto</code> as the second parameter basically tells the browser to automatically determine the left and right margins itself, which it does by setting them equally. It guarantees that the left and right margins will be set to the same size. The first parameter 0 indicates that the top and bottom margins will both be set to 0.</p>\n\n<pre><code>margin-top:0;\nmargin-bottom:0;\nmargin-left:auto;\nmargin-right:auto;\n</code></pre>\n\n<p>Therefore, to give you an <strong>example</strong>, if the parent is 100px and the child is 50px, then the <code>auto</code> property will determine that there's 50px of free space to share between <code>margin-left</code> and <code>margin-right</code>:</p>\n\n<pre><code>var freeSpace = 100 - 50;\nvar equalShare = freeSpace / 2;\n</code></pre>\n\n<p>Which would give:   </p>\n\n<pre><code>margin-left:25;\nmargin-right:25;\n</code></pre>\n\n<p>Have a look at this <a href=\"http://jsfiddle.net/Uzs6W/224/\">jsFiddle</a>. You do not have to specify the parent width, only the width of the child object.</p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>auto:   The browser sets the margin. The result of this is dependant of the browser</p>\n\n<p>margin:0 auto specifies</p>\n\n<pre><code>* top and bottom margins are 0\n* right and left margins are auto\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>From the CSS specification on <a href=\"http://www.w3.org/TR/CSS21/visudet.html#blockwidth\" rel=\"nofollow\">Calculating widths and margins for Block-level, non-replaced elements in normal flow</a>:</p>\n\n<blockquote>\n  <p>If both 'margin-left' and 'margin-right' are 'auto', their used values are equal. This horizontally centers the element with respect to the edges of the containing block.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>margin:0 auto;\n</code></pre>\n\n<p><code>0</code> is for top-bottom and <code>auto</code> for left-right. It means that left and right margin will take auto margin according to the width of the element and the width of the container.</p>\n\n<p>Generally if you want to put any element at center position then <code>margin:auto</code> works perfectly.  But it only works in block elements.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What does <code>auto</code> do in <code>margin:0 auto;</code>?</p>\n\n<p>I can't seem to understand what <code>auto</code> does. I know it sometimes has an effect of centering objects. Thanks.</p>\n",
            "last_activity_date": 1397178025,
            "question_id": 3170772,
            "score": 26,
            "tags": [
                "css"
            ],
            "title": "What does auto do in margin:0 auto?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There is a way to filter Safari 5+ from Chrome:</p>\n\n<pre><code>@media screen and (-webkit-min-device-pixel-ratio:0) { \n    /* Safari and Chrome */\n    .myClass {\n     color:red;\n    }\n\n    /* Safari only override */\n    ::i-block-chrome,.myClass {\n     color:blue;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>Sarari Only</p>\n\n<pre><code>.yourClass:not(:root:root){ \n    /* ^_^ */ \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For those who want to impliment the hack for Safris 6+ and 7+  use</p>\n\n<pre><code>.myclass { (;property: value;); }\n.myclass { [;property: value;]; }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>Safari has changed since version 6.1, as many have noticed.\n</code></pre>\n\n<p><strong><em>Please note: if you are using Chrome on iOS (at least in versions 6.1-8) and you wonder why none of the hacks seem to be separating Chrome from Safari, it is because the iOS version of Chrome is using the Safari engine. It uses Safari hacks not the Chrome ones. More about that here: <a href=\"http://allthingsd.com/20120628/googles-chrome-for-ios-is-more-like-a-chrome-plated-apple/\" rel=\"nofollow\">http://allthingsd.com/20120628/googles-chrome-for-ios-is-more-like-a-chrome-plated-apple/</a></em></strong></p>\n\n<pre><code>That out of the way here are hacks for you to use for more recent versions of Safari. \n</code></pre>\n\n<p>This hack I worked out by combining multiple other hacks is for 6.1+:</p>\n\n<pre><code>/* Safari 6.1+ (8.0 is the latest version of Safari at this time) */\n\n@media screen and (min-color-index:0) and(-webkit-min-device-pixel-ratio:0) { @media\n{\n    .safari_only { \n\n        color:#0000FF; \n        background-color:#CCCCCC; \n\n    }\n}}\n</code></pre>\n\n<p>Below are hacks that separate 6.1-7.0, and 7.1+\nThese also required a combination of multiple hacks in order to get the right result:</p>\n\n<pre><code>/* Safari 6.1-7.0 */\n\n@media screen and (-webkit-min-device-pixel-ratio:0) and (min-color-index:0)\n{  \n   .safari_only {(;\n\n      color:#0000FF; \n      background-color:#CCCCCC; \n\n    );}\n}\n</code></pre>\n\n<p>iOS 8/Safari 8 just got released so here is one I have worked out for the new browser:</p>\n\n<pre><code>/* Safari 7.1+ (8.0 is the latest version of Safari at this time) */\n\n_::-webkit-full-page-media, _:future, :root .safari_only {\n\n  color:#0000FF; \n  background-color:#CCCCCC; \n\n}\n</code></pre>\n\n<p>To use them:</p>\n\n<pre><code>&lt;div class=\"safari_only\"&gt;This text will be Blue in Safari&lt;/div&gt;\n</code></pre>\n\n<p>To see them working live, I have created a test page here:</p>\n\n<p><a href=\"http://browserstrangeness.bitbucket.org/css_hacks.html#webkit\" rel=\"nofollow\">http://browserstrangeness.bitbucket.org/css_hacks.html#webkit</a></p>\n\n<hr>\n\n<pre><code>Usually [like in this question] the reason people ask about Safari hacks is \nmostly in reference to separating it from Google Chrome (again NOT iOS!)\nIt may be important to post the alternative: how to target Chrome separately\nfrom Safari as well, so I am providing that for you here in case it is needed.\n</code></pre>\n\n<p>Here are the basics, again check my test page for lots of specific versions of Chrome, but these cover Chrome in general. Chrome is version 40, Dev and Canary versions are up to version 42 at this time.</p>\n\n<p>Chrome 28 and newer are easy to target. This is one I sent to browserhacks after seeing it included within a block of other CSS code (not originally intended as a CSS hack) and realized what it does, so I extracted the relevant portion for our purposes: </p>\n\n<pre><code>/* Chrome 28+ (Chrome is version 40 at the time of this posting) */\n\n@supports (-webkit-appearance:none) \n{\n    .chrome_only {\n\n       color:#0000FF; \n       background-color:#CCCCCC; \n\n    }\n}\n</code></pre>\n\n<p>The block of Chrome versions 22-28 (If needed to support older versions) are also possible to target with a twist on my Safari combo hacks I posted above:</p>\n\n<pre><code>/* Chrome 22-28 */\n\n@media screen and(-webkit-min-device-pixel-ratio:0)\n{\n    .chrome_only {-chrome-:only(;\n\n       color:#0000FF; \n       background-color:#CCCCCC; \n\n    );}\n}\n\nNOTE: If you are new, change class name but leave this the same-&gt; {-chrome-:only(;\n</code></pre>\n\n<p>Like the Safari CSS formatting hacks above, these can be used as follows:</p>\n\n<pre><code>&lt;div class=\"chrome_only\"&gt;This text will be Blue in Chrome&lt;/div&gt;\n</code></pre>\n\n<p>So you don't have to search for it in this post, here is my live test page again:</p>\n\n<p><a href=\"http://browserstrangeness.bitbucket.org/css_hacks.html#webkit\" rel=\"nofollow\">http://browserstrangeness.bitbucket.org/css_hacks.html#webkit</a></p>\n\n<p>The test page has many others as well, specifically version-based to further\nhelp you differentiate between Chrome and Safari, and also many hacks for Firefox\nand Internet Explorer web browsers.</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>This hack 100% work only for safari. I've just tested it with success.</p>\n\n<pre><code>@media only screen and (-webkit-min-device-pixel-ratio: 1) {\n     ::i-block-chrome, .yourcssrule {\n        your css property\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>im trying to find a css hack for just safari NOT chrome, i know these are both webkit browsers but im having problems with div alignments in chrome and safari, each displays differently.</p>\n\n<p>i have been trying to use this but it affects chrome as well, </p>\n\n<pre><code>@media screen and (-webkit-min-device-pixel-ratio:0) { \n  #safari { display: block; } \n} \n</code></pre>\n\n<p>does anyone know of another one that will just apply to safari please?</p>\n",
            "last_activity_date": 1423771407,
            "question_id": 16348489,
            "score": 25,
            "tags": [
                "css",
                "safari"
            ],
            "title": "is there a css hack for safari only NOT chrome?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Well, after some (much more) playing around and the addition of some javascript, I've got the solution - the droid device was not using the resolution I believed it was:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;orientation and device detection in css3&lt;/title&gt;\n\n    &lt;link rel=\"stylesheet\" media=\"all and (max-device-width: 480px) and (orientation:portrait)\" href=\"iphone-portrait.css\" /&gt;\n    &lt;link rel=\"stylesheet\" media=\"all and (max-device-width: 480px) and (orientation:landscape)\" href=\"iphone-landscape.css\" /&gt;\n    &lt;link rel=\"stylesheet\" media=\"all and (device-width: 768px) and (device-height: 1024px) and (orientation:portrait)\" href=\"ipad-portrait.css\" /&gt;\n    &lt;link rel=\"stylesheet\" media=\"all and (device-width: 768px) and (device-height: 1024px) and (orientation:landscape)\" href=\"ipad-landscape.css\" /&gt;\n    &lt;link rel=\"stylesheet\" media=\"all and (device-width: 800px) and (device-height: 1184px) and (orientation:portrait)\" href=\"htcdesire-portrait.css\" /&gt;\n    &lt;link rel=\"stylesheet\" media=\"all and (device-width: 800px) and (device-height: 390px) and (orientation:landscape)\" href=\"htcdesire-landscape.css\" /&gt;\n    &lt;link rel=\"stylesheet\" media=\"all and (min-device-width: 1025px)\" href=\"desktop.css\" /&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"iphonelandscape\"&gt;iphone landscape&lt;/div&gt;\n    &lt;div id=\"iphoneportrait\"&gt;iphone portrait&lt;/div&gt;\n    &lt;div id=\"ipadlandscape\"&gt;ipad landscape&lt;/div&gt;\n    &lt;div id=\"ipadportrait\"&gt;ipad portrait&lt;/div&gt;\n    &lt;div id=\"htcdesirelandscape\"&gt;htc desire landscape&lt;/div&gt;\n    &lt;div id=\"htcdesireportrait\"&gt;htc desire portrait&lt;/div&gt;\n    &lt;div id=\"desktop\"&gt;desktop&lt;/div&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        function res() { document.write(screen.width + ', ' + screen.height); }\n        res();\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                }
            ],
            "body": "<p>I'd like to say that I have read and tried many variations of the instructions here:</p>\n\n<ul>\n<li><a href=\"http://www.cloudfour.com/ipad-css/\">http://www.cloudfour.com/ipad-css/</a></li>\n<li><a href=\"http://stackoverflow.com/questions/3839809/detect-iphone-ipad-purely-by-css\">Detect iPhone/iPad purely by css</a></li>\n<li><a href=\"http://stackoverflow.com/questions/5762734/detect-xoom-browser-android\">Detect Xoom browser (Android)</a></li>\n<li><a href=\"http://www.w3.org/TR/css3-mediaqueries/\">http://www.w3.org/TR/css3-mediaqueries/</a></li>\n<li><a href=\"http://www.w3schools.com/html5/att_link_media.asp\">http://www.w3schools.com/html5/att_link_media.asp</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/List_of_Android_devices\">http://en.wikipedia.org/wiki/List_of_Android_devices</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/File:Vector_Video_Standards2.svg\">http://en.wikipedia.org/wiki/File:Vector_Video_Standards2.svg</a></li>\n</ul>\n\n<p>I would like to have my page use different CSS files depending on the device being used. I have seen many solutions to this, all using some form of the above.</p>\n\n<p>However, when testing on an HTC Desire I consistently get either the output intended for iPad or a completely unfiltered output. Currently, my test code is based on:</p>\n\n<pre><code>http://www.cloudfour.com/ipad-css/\n</code></pre>\n\n<p>Here is my HTML file:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;orientation and device detection in css3&lt;/title&gt;\n\n    &lt;link rel=\"stylesheet\" media=\"all and (max-device-width: 480px) and (orientation:landscape)\" href=\"iphone-landscape.css\" /&gt;\n    &lt;link rel=\"stylesheet\" media=\"all and (max-device-width: 480px) and (orientation:portrait)\" href=\"iphone-portrait.css\" /&gt;\n\n    &lt;link rel=\"stylesheet\" media=\"all and (device-width: 768px) and (device-height: 1024px) and (orientation:landscape)\" href=\"ipad-landscape.css\" /&gt;\n    &lt;link rel=\"stylesheet\" media=\"all and (device-width: 768px) and (device-height: 1024px) and (orientation:portrait)\" href=\"ipad-portrait.css\" /&gt;\n\n    &lt;link rel=\"stylesheet\" media=\"all and (device-width: 480px) and (device-height: 800px) and (orientation:landscape)\" href=\"htcdesire-landscape.css\" /&gt;\n    &lt;link rel=\"stylesheet\" media=\"all and (device-width: 480px) and (device-height: 800px) and (orientation:portrait)\" href=\"htcdesire-portrait.css\" /&gt;\n\n    &lt;link rel=\"stylesheet\" media=\"all and (min-device-width: 1025px)\" href=\"desktop.css\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"iphonelandscape\"&gt;iphone landscape&lt;/div&gt;\n    &lt;div id=\"iphoneportrait\"&gt;iphone portrait&lt;/div&gt;\n    &lt;div id=\"ipadlandscape\"&gt;ipad landscape&lt;/div&gt;\n    &lt;div id=\"ipadportrait\"&gt;ipad portrait&lt;/div&gt;\n    &lt;div id=\"htcdesirelandscape\"&gt;htc desire landscape&lt;/div&gt;\n    &lt;div id=\"htcdesireportrait\"&gt;htc desire portrait&lt;/div&gt;\n    &lt;div id=\"desktop\"&gt;desktop&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>And here is the iPad's Landscape CSS file (I'll only provide that here as they are all basically the same:</p>\n\n<pre><code>div\n{\n    display: none;\n}\n\n#ipadlandscape\n{\n    display: inline;\n}\n</code></pre>\n\n<p>I would like to know what modifications to make to the link elements to ensure that the ipad gets only its stylesheets, the iphone gets its own and (in this case) the htc desire (or same resolution/aspect devices) get that stylesheet.</p>\n",
            "last_activity_date": 1415099690,
            "question_id": 8037973,
            "score": 13,
            "tags": [
                "css",
                "mobile-devices",
                "platform-detection"
            ],
            "title": "Detect different device platforms using CSS"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>jQuery UI Highlight Effect is what you're looking for. </p>\n\n<pre><code>$(\"div\").click(function () {\n      $(this).effect(\"highlight\", {}, 3000);\n});\n</code></pre>\n\n<p>The documentation  and demo can be found <a href=\"http://docs.jquery.com/UI/Effects/Highlight\">here</a></p>\n\n<p><strong>Edit</strong></p>\n\n<p>Maybe the Pulsate Effect is more appropriate, see <a href=\"http://docs.jquery.com/UI/Effects/Pulsate\">here</a></p>\n\n<p><strong>Edit #2</strong></p>\n\n<p>To adjust the opacity you could do this:</p>\n\n<pre><code>$(\"div\").click(function() {\n  // do fading 3 times\n  for(i=0;i&lt;3;i++) {\n    $(this).fadeTo('slow', 0.5).fadeTo('slow', 1.0);\n  }\n});\n</code></pre>\n\n<p>So it won't go any lower than 50% opacity.</p>\n",
                    "is_accepted": true,
                    "score": 104
                },
                {
                    "body": "<p>You may want to look into jQuery UI. Specifically, the highlight effect:</p>\n\n<p><a href=\"http://jqueryui.com/demos/effect/\">http://jqueryui.com/demos/effect/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Take a look at <a href=\"http://jqueryui.com/demos/effect/\">http://jqueryui.com/demos/effect/</a>. It has an effect named pulsate that will do exactly what you want.</p>\n\n<pre><code>$(\"#trigger\").change(function() {$(\"#div_you_want_to_blink\").effect(\"pulsate\");});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>For those who do not want to include the whole of jQuery UI, you can use <a href=\"http://jsoverson.github.com/jquery.pulse.js/\">jQuery.pulse.js</a> instead.</p>\n\n<p>To have looping animation of changing opacity, do this:</p>\n\n<pre><code>$('#target').pulse({opacity: 0.8}, {duration : 100, pulses : 5});\n</code></pre>\n\n<p>It is light (less than 1kb), and allows you to loop any kind of animations.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>If you don't want the overhead of jQuery UI, I recently wrote a recursive solution using <code>.animate()</code>. You can customize the delays and colors as you need.</p>\n\n<pre><code>function doBlink(id, count) {\n    $(id).animate({ backgroundColor: \"#fee3ea\" }, {\n        duration: 100, \n        complete: function() {\n\n            // reset\n            $(id).delay(100).animate({ backgroundColor: \"#ffffff\" }, {\n                duration: 100,\n                complete: function() {\n\n                    // maybe call next round\n                    if(count &gt; 1) {\n                        doBlink(id, --count);\n                    }\n                }\n            });\n\n        }\n    });\n}\n</code></pre>\n\n<p>Of course you'll need the color plugin to get <code>backgroundColor</code> to work with <code>.animate()</code>.\n<a href=\"https://github.com/jquery/jquery-color\" rel=\"nofollow\">https://github.com/jquery/jquery-color</a></p>\n\n<p>And to provide a bit of context this is how I called it. I needed to scroll the page to my target div and then blink it.</p>\n\n<pre><code>$(window).load(function(){\n    $('html,body').animate({\n        scrollTop: $(scrollToId).offset().top - 50\n    }, {\n        duration: 400,\n        complete: function() { doBlink(scrollToId, 5); }\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think you could use a similar answer I gave.  You can find it here... <a href=\"http://stackoverflow.com/a/19083993/2063096\">http://stackoverflow.com/a/19083993/2063096</a></p>\n\n<ul>\n<li>should work on all browsers as it only Javascript and jQuery.</li>\n</ul>\n\n<p>Note: This solution does NOT use jQuery UI, there is also a fiddle so you can play around to your liking before implementing it in your code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is a custom blink effect I created, which uses <code>setInterval</code> and <code>fadeTo</code></p>\n\n<p><a href=\"http://jsfiddle.net/Ajey/25Wfn/\">http://jsfiddle.net/Ajey/25Wfn/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I use different predefined colors like so:</p>\n\n<pre><code>theme = {\n    whateverFlashColor: '#ffffaa',\n    whateverElseFlashColor: '#bbffaa',\n    whateverElseThenFlashColor: '#ffffff',\n};\n</code></pre>\n\n<p>and use them like this</p>\n\n<pre><code>$('#element').effect(\"highlight\", {color:theme.whateverFlashColor}, 1000);\n</code></pre>\n\n<p>easy :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>just give elem.fadeOut(10).fadeIn(10);</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking for a way to do the following.</p>\n\n<p>I add a <code>&lt;div&gt;</code> to a page, and an ajax callback returns some value. The <code>&lt;div&gt;</code> is filled with values from the ajax call, and the <code>&lt;div&gt;</code> is then prepended to another <code>&lt;div&gt;</code>, which acts as a table column.</p>\n\n<p>I would like to get the user's attention, to show her/him that there is something new on the page.<br>\nI want the <code>&lt;div&gt;</code> to blink, not show/hide, but to highlight/unhighlight for some time, lets say 5 seconds.</p>\n\n<p>I have been looking at the blink plugin, but as far as I can see it only does show/hide on an element.</p>\n\n<p>Btw, the solution has to be cross-browser, and yes, IE unfortunately included. I will probably have to hack a little to get it working in IE, but overall it has to work.</p>\n",
            "last_activity_date": 1423212538,
            "question_id": 5205445,
            "score": 46,
            "tags": [
                "jquery",
                "css",
                "effects",
                "highlighting",
                "blinking"
            ],
            "title": "jQuery &quot;blinking highlight&quot; effect on div?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Try this :</p>\n\n<pre><code>select {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    padding: 2px 30px 2px 2px;\n    border: none;\n}\n</code></pre>\n\n<p>JS Bin : <a href=\"http://jsbin.com/aniyu4/2/edit\">http://jsbin.com/aniyu4/2/edit</a></p>\n\n<p>If you use Internet Explorer :</p>\n\n<pre><code>select {\n    overflow:hidden;\n    width: 120%;\n}\n</code></pre>\n\n<p>Or you can use Choosen : <a href=\"http://harvesthq.github.io/chosen/\">http://harvesthq.github.io/chosen/</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>You cannot do this with a fully functional cross browser support.</p>\n\n<p>Try taking a div of 50 pixels suppose and float a desired drop-down icon of your choice at the right of this  </p>\n\n<p>Now within that div, add the select tag with a width of 55 pixels maybe (something more than the container's width)</p>\n\n<p>I think you'll get what you want.</p>\n\n<p>In case you do not want any drop icon at the right, just do all the steps except for floating the image at the right. Set outline:0 on focus for the select tag. that's it</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>no need for hacks or overflow... there's a pseudo-element for the dropdown arrow on IE...</p>\n\n<pre><code>select::-ms-expand {\n    display: none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 58
                },
                {
                    "body": "<p>Try This:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"customselect\"&gt;\n    &lt;select&gt;\n    &lt;option&gt;2000&lt;/option&gt;\n    &lt;option&gt;2001&lt;/option&gt;\n    &lt;option&gt;2002&lt;/option&gt;\n    &lt;/select&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.customselect {\n    width: 70px;\n    overflow: hidden;\n}\n\n.customselect select {\n   width: 100px;\n   -moz-appearance: none;\n   -webkit-appearance: none;\n   appearance: none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The previously mentioned solutions work well with chrome but not on Firefox.</p>\n\n<p>I found a <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=649849#c84\">Solution</a> that works well both in Chrome and Firefox(not on IE). Add the following attributes to the CSS for your SELECTelement and adjust the margin-top to suit your needs.</p>\n\n<pre><code>select {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    text-indent: 1px;\n    text-overflow: '';\n}\n</code></pre>\n\n<p>Hope this helps :)</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>Just wanted to complete the thread. \nTo be very clear this does not works in IE9, however we can do it by little css trick.</p>\n\n<pre><code>&lt;div class=\"customselect\"&gt;\n    &lt;select&gt;\n    &lt;option&gt;2000&lt;/option&gt;\n    &lt;option&gt;2001&lt;/option&gt;\n    &lt;option&gt;2002&lt;/option&gt;\n    &lt;/select&gt;\n&lt;/div&gt;\n\n.customselect {\n    width: 80px;\n    overflow: hidden;\n   border:1px solid;\n}\n\n.customselect select {\n   width: 100px;\n   border:none;\n  -moz-appearance: none;\n   -webkit-appearance: none;\n   appearance: none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Try this it works for me,</p>\n\n<pre><code>&lt;style&gt;\n    select{\n        border: 0 !important;  /*Removes border*/\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        text-overflow:'';\n        padding: 4px 30px 2px 2px;\n        background: #F0F0E9 url(site_media/img/down.png) no-repeat 90% center;\n        width: 380px; /*Width of select dropdown to give space for arrow image*/\n        text-indent: 0.01px; /* Removes default arrow from firefox*/\n        text-overflow: \"\";  /*Removes default arrow from firefox*/ /*My custom style for fonts*/\n        color: #696763;\n        font-size:15px;\n        padding: 5px;\n        margin-top:10px;\n        height:40px;\n    }\n    select::-ms-expand {\n        display: none;\n    }\n    .divDDL\n    {\n        padding-left:0px;width:360px;overflow:hidden;\n    }\n    &lt;/style&gt;\n\n&lt;div class=\"ddlDiv\"&gt;\n    &lt;select&gt; ... &lt;/select&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>You can not hide but using overflow hidden you can actually make it disappear.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>there's a library called DropKick.js that replaces the normal select dropdowns with HTML/CSS so you can fully style and control them with javascript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to remove dropdown arrow from select in html. For example</p>\n\n<pre><code>&lt;select style=\"width:30px;-webkit-appearance: none;\"&gt;\n    &lt;option&gt;2000&lt;/option&gt;\n    &lt;option&gt;2001&lt;/option&gt;\n    &lt;option&gt;2002&lt;/option&gt;\n    ...\n&lt;/select&gt;\n</code></pre>\n\n<p>How to do it in opera, firefox and internet explorer?</p>\n\n<p>There is also an image:\n<img src=\"http://i.stack.imgur.com/y3uMJ.png\" alt=\"enter image description here\"></p>\n\n<p>Thank you</p>\n",
            "last_activity_date": 1414540971,
            "question_id": 16603979,
            "score": 29,
            "tags": [
                "html",
                "css"
            ],
            "title": "Select removing dropdown arrow"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<pre><code>&lt;div id=\"container\"&gt;\n    &lt;div id=\"a\"&gt;Block A&lt;/div&gt;\n    &lt;div id=\"b\"&gt;Block B&lt;/div&gt;\n    &lt;div id=\"c\"&gt;Block C&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>lets say the height of a block is 100px</p>\n\n<pre><code>#container     {position:relative; height: 300px;}\n#a, #b, #c     {position:absolute; height: 100px}\n#c             {top: 0px;}\n#b             {top: 100px;}\n#a             {top: 200px;}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could mess with the margins: <a href=\"http://jsfiddle.net/zV2p4/\" rel=\"nofollow\">http://jsfiddle.net/zV2p4/</a></p>\n\n<p>But you would probably be better off using <code>position: absolute</code>. This does not change <code>display: block</code>, but it will make the width auto. To fix this, make the divs <code>width: 100%</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Possible in CSS3: <a href=\"http://www.w3.org/TR/css3-writing-modes/#writing-mode\" rel=\"nofollow\">http://www.w3.org/TR/css3-writing-modes/#writing-mode</a></p>\n\n<p>Why not change the orders of the tags? Your HTML page isn't made out of stone, are they?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could try something new as the <a href=\"http://www.w3.org/TR/css3-flexbox/#flex-order0\" rel=\"nofollow\">CSS3 Flexbox</a>. Combining this with media queries should help you achieve your goal.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As has already been suggested, <a href=\"http://www.w3.org/TR/css3-flexbox/\">Flexbox</a> is the answer - particularly because you only need <a href=\"http://caniuse.com/flexbox\">to support</a> a single modern browser: Mobile Safari.</p>\n\n<p><strong>See:</strong> <a href=\"http://jsfiddle.net/thirtydot/hLUHL/\">http://jsfiddle.net/thirtydot/hLUHL/</a></p>\n\n<p>You can remove the <code>-moz-</code> prefixed properties if you like, I just left them in for future readers.</p>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>#blockContainer {\n    display: -webkit-box;\n    display: -moz-box;\n    display: box;\n\n    -webkit-box-orient: vertical;\n    -moz-box-orient: vertical;\n    box-orient: vertical;\n}\n#blockA {\n    -webkit-box-ordinal-group: 2;\n    -moz-box-ordinal-group: 2;\n    box-ordinal-group: 2;\n}\n#blockB {\n    -webkit-box-ordinal-group: 3;\n    -moz-box-ordinal-group: 3;\n    box-ordinal-group: 3;\n}\n</code></pre>\n\n<p><strong>HTML:</strong></p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;div id=\"blockContainer\"&gt;\n    &lt;div id=\"blockA\"&gt;Block A&lt;/div&gt;\n    &lt;div id=\"blockB\"&gt;Block B&lt;/div&gt;\n    &lt;div id=\"blockC\"&gt;Block C&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>HTML:</p>\n\n<pre><code>&lt;div id=\"blockC second-order\"&gt;Block C&lt;/div&gt;\n&lt;div id=\"blockA\"&gt;Block A&lt;/div&gt;\n&lt;div id=\"blockB\"&gt;Block B&lt;/div&gt;\n&lt;div id=\"blockC first-order\"&gt;Block C&lt;/div&gt;\n</code></pre>\n\n<p>CSS </p>\n\n<pre><code>.second-order {\n     display: none;\n}\n\n@media only screen and (max-device-width: 480px) {\n     .first-order: {\n         display: none;\n     }\n\n     .second-order: {\n         display: block;\n     }\n}\n</code></pre>\n\n<p>I think this is non-stupid solution becouse repeating content is no problem in the most of cases and in your case if it is advertisment you would repeat not a lot of content.</p>\n\n<p>I've answers on this question althought one year passed, becouse I was searching for solution, I read this and got this idea.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Hows this for low tech...</p>\n\n<p>put the ad at the top and bottom and use media queries to display:none as appropriate.</p>\n\n<p>If the ad wasn't too big, it wouldn't add too much size to the download, you could even customise where the ad sent you for iPhone/pc.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I managed to do it with CSS <code>display: table-*</code>. I haven't tested with more than 3 blocks though.</p>\n\n<p><a href=\"http://jsfiddle.net/yodapt/g9f9w/\" rel=\"nofollow\">fiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is a \"simple as possible\" example, for changing the order of div-elements (when resizing the browser window):</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;foobar&lt;/title&gt;\n    &lt;style&gt;\n      @media screen and (max-width:300px){\n        #parent{\n          display:flex;\n          flex-flow: column;\n        }\n        #a{order:2;}\n        #c{order:1;}\n        #b{order:3;}\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"parent\"&gt;\n      &lt;div id=\"a\"&gt;one&lt;/div&gt;\n      &lt;div id=\"b\"&gt;two&lt;/div&gt;\n      &lt;div id=\"c\"&gt;three&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Example:\n<a href=\"http://jsfiddle.net/devnull/qyroxexv/\" rel=\"nofollow\">http://jsfiddle.net/devnull/qyroxexv/</a>\n(change window-width to see the effect of changing the order of the divs)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I known this is old, but I found a easier solution and it works on ie10, firefox and chrome:</p>\n\n<pre><code>&lt;div id=\"wrapper\"&gt;\n  &lt;div id=\"one\"&gt;One&lt;/div&gt;\n  &lt;div id=\"two\"&gt;Two&lt;/div&gt;\n  &lt;div id=\"three\"&gt;Three&lt;/div&gt;\n&lt;/div&gt; \n</code></pre>\n\n<p>This is the css:</p>\n\n<pre><code>#wrapper {display:table;}\n#one {display:table-footer-group;}\n#three {display:table-header-group;}\n</code></pre>\n\n<p>And the result:</p>\n\n<pre><code>\"Three\"\n\"Two\"\n\"One\"\n</code></pre>\n\n<p>I found it <a href=\"http://www.jtudsbury.com/thoughts/rearrange-div-order.php\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<h2>Update: Two lightweight CSS solutions:</h2>\n\n<p>Using <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/flex\" rel=\"nofollow\"><strong>flex</strong></a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/flex-flow\" rel=\"nofollow\"><strong>flex-flow</strong></a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/order\" rel=\"nofollow\"><strong>order</strong></a>:</p>\n\n<h2><a href=\"http://jsfiddle.net/m37cxb9g/5/\" rel=\"nofollow\">Example1: Demo Fiddle</a></h2>\n\n<pre><code>    body{\n        display:flex;\n        flex-flow: column;\n    }\n    #blockA{\n        order:4;\n    }\n    #blockB{\n        order:3;\n    }\n    #blockC{\n        order:2;\n    }\n</code></pre>\n\n<p>Alternatively, reverse the Y scale:</p>\n\n<h2><a href=\"http://jsfiddle.net/m37cxb9g/6/\" rel=\"nofollow\">Example2: Demo Fiddle</a></h2>\n\n<pre><code>body{\n    -webkit-transform: scaleY(-1);\n    transform: scaleY(-1);\n}\ndiv{\n    -webkit-transform: scaleY(-1);\n    transform: scaleY(-1);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<h1>Short Story</h1>\n\n<p>Let's say my HTML is already set in stone:</p>\n\n<pre><code>&lt;div id=\"blockA\"&gt;Block A&lt;/div&gt;\n&lt;div id=\"blockB\"&gt;Block B&lt;/div&gt;\n&lt;div id=\"blockC\"&gt;Block C&lt;/div&gt;\n</code></pre>\n\n<p>It will look like this:</p>\n\n<pre><code>------------\n| Block A  |\n------------\n| Block B  |\n------------\n| Block C  |\n------------\n</code></pre>\n\n<p>Now I want to switch the order of the blocks. How can I do that with only <em>CSS</em>?</p>\n\n<pre><code>------------\n| Block C  |\n------------\n| Block A  |\n------------\n| Block B  |\n------------\n</code></pre>\n\n<p>I'm aware there's hacky solutions such as using <code>position:absolute</code>, but this doesn't preserve the effective use of the <code>display:block</code> property. That is, blocks push other blocks downward when they grow in size.</p>\n\n<h1>Long Story</h1>\n\n<p>When user uses a computer to view my webpage, the blocks are displayed in this order:</p>\n\n<ol>\n<li>General info.</li>\n<li>Event schedule.</li>\n<li>iPhone app advertisement</li>\n</ol>\n\n<p>The iPhone app advertisement is placed last because it's not terribly important to computer users. A small percentage of computer users will whip out their phone and install the app. </p>\n\n<p>If a mobile user comes to this site, the iPhone app advertisement should be the most important thing on the page. Therefore, it should be moved to the top:</p>\n\n<ol>\n<li>iPhone app advertisement</li>\n<li>General info.</li>\n<li>Event schedule.</li>\n</ol>\n\n<p>I would like iPhone and computer users to share the same HTML, but have a CSS media query switch the order of the blocks.</p>\n\n<pre><code>@media only screen and (max-device-width: 480px) {\n   #blockC {\n      /* magic order switching */\n   }\n}\n</code></pre>\n",
            "last_activity_date": 1417509393,
            "question_id": 7425665,
            "score": 27,
            "tags": [
                "html",
                "css"
            ],
            "title": "Switching the order of block elements with CSS"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Use:</p>\n\n<pre><code>    div#container {\n        overflow: auto;\n    }\n</code></pre>\n\n<p>Or add a clearing div below the three divs with the style:</p>\n\n<pre><code>    {\n        clear: both\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Put the divs you want to scroll in a table like so:</p>\n\n<pre><code>&lt;div style='width:1000;border:2 solid red;overflow-x:auto'&gt;\n   &lt;table&gt;&lt;tr&gt;\n      &lt;td&gt;&lt;div style='width:300;height:200;border:1 solid black'&gt;Cell 1&amp;nbsp;&lt;/div&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;div style='width:300;height:200;border:1 solid black'&gt;Cell 2&amp;nbsp;&lt;/div&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;div style='width:300;height:200;border:1 solid black'&gt;Cell 3&amp;nbsp;&lt;/div&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;div style='width:300;height:200;border:1 solid black'&gt;Cell 4&amp;nbsp;&lt;/div&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;div style='width:300;height:200;border:1 solid black'&gt;Cell 5&amp;nbsp;&lt;/div&gt;&lt;/td&gt;\n   &lt;/tr&gt;&lt;/table&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Edit:\nI tried 3 of these suggested solutions - they all work fine in Google Chrome - but the first one (container1) doesn't work in IE (go figure) - so the SPAN solution gets my vote :-) :</p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;style&gt;\ndiv#container1 \n   {\n   height: 275px;\n   width: 100%;\n   overflow: auto;\n   white-space: nowrap;\n   border:2 solid red;\n   }\n\ndiv#container1 div.block \n   {\n   width: 300px;\n   height: 200px;\n   display: inline-block;\n   border: 1 solid black;\n   }\n\ndiv#container2 \n   {\n   height: 275px;\n   width: 100%;\n   overflow: auto;\n   white-space: nowrap;\n   border:2 solid red;\n   }\n\ndiv#container2 span.block \n   {\n   width: 300px;\n   height: 200px;\n   display: inline-block;\n   border: 1 solid black;\n   }\n\ndiv#container3 \n   {\n   height: 275px;\n   width: 100%;\n   overflow: auto;\n   white-space: nowrap;\n   border:2 solid red;\n   }\n\ndiv#container3 div.block \n   {\n   width: 300px;\n   height: 200px;\n   display: inline-block;\n   border: 1 solid black;\n   }\n\n&lt;/style&gt;\n&lt;p&gt;\n&lt;div id='container1'&gt;\n      &lt;div class='block'&gt;Cell 1&amp;nbsp;&lt;/div&gt;\n      &lt;div class='block'&gt;Cell 2&amp;nbsp;&lt;/div&gt;\n      &lt;div class='block'&gt;Cell 3&amp;nbsp;&lt;/div&gt;\n      &lt;div class='block'&gt;Cell 4&amp;nbsp;&lt;/div&gt;\n      &lt;div class='block'&gt;Cell 5&amp;nbsp;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;\n&lt;div id='container2'&gt;\n      &lt;span class='block'&gt;Cell 1&amp;nbsp;&lt;/span&gt;\n      &lt;span class='block'&gt;Cell 2&amp;nbsp;&lt;/span&gt;\n      &lt;span class='block'&gt;Cell 3&amp;nbsp;&lt;/span&gt;\n      &lt;span class='block'&gt;Cell 4&amp;nbsp;&lt;/span&gt;\n      &lt;span class='block'&gt;Cell 5&amp;nbsp;&lt;/span&gt;\n&lt;/div&gt;\n&lt;p&gt;\n&lt;div id='container3'&gt;\n   &lt;table&gt;&lt;tr&gt;\n      &lt;td&gt;&lt;div class='block'&gt;Cell 1&amp;nbsp;&lt;/div&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;div class='block'&gt;Cell 2&amp;nbsp;&lt;/div&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;div class='block'&gt;Cell 3&amp;nbsp;&lt;/div&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;div class='block'&gt;Cell 4&amp;nbsp;&lt;/div&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;div class='block'&gt;Cell 5&amp;nbsp;&lt;/div&gt;&lt;/td&gt;\n   &lt;/tr&gt;&lt;/table&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Edit 2:</p>\n\n<p>I ran this test page through browsershots.org, to see how different browsers handle it.\nConclusion: Browser compatibility sucks. :-)</p>\n\n<p><a href=\"http://browsershots.org/http://dot-dash-dot.com/files/test_div2.htm\" rel=\"nofollow\">http://browsershots.org/http://dot-dash-dot.com/files/test_div2.htm</a></p>\n\n<p>The table solution worked more often - but the span option (which is cleaner) only broke on browsers I've never heard of. :-)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The table solution should work very well.</p>\n\n<p>If you don't want to use tables, you can also put all .block divs in another div inside the #container and give that \"in-between-div\" a fixed - calculated - width using javascript after loading the page.</p>\n\n<p>Of course if you already know how many .blocks you have / if the number is fixed, you can give  the \"in-between-div\" a fixed width using css.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>div#container {\n    height: 275px;\n    width: 1000px;\n    overflow: auto;\n    white-space: nowrap;\n}\n\ndiv#container span.block {\n    width: 300px;\n    display: inline-block;\n}\n</code></pre>\n\n<p>The trick here is only elements that behave as inline by default will behave properly when set to inline-block in Internet Explorer, so the inner containers need to be &lt;span&gt; instead of &lt;div&gt;.</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>Wrap your floated divs in another div with the wider width.</p>\n\n<pre><code>&lt;div style=\"width:230px;overflow-x:auto;background-color:#ccc;\"&gt;\n    &lt;div style=\"width:400px\"&gt;\n    \t&lt;div style=\"height:100px;width:100px;float:left;border:1px solid #000;\"&gt;&lt;/div&gt;\n    \t&lt;div style=\"height:100px;width:100px;float:left;border:1px solid #000;\"&gt;&lt;/div&gt;\n    \t&lt;div style=\"height:100px;width:100px;float:left;border:1px solid #000;\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You need an extra div with a large width to contain the blocks, then they will extend wider than the container div and not drop down to a new line.</p>\n\n<p><strong>The HTML:</strong></p>\n\n<pre><code>&lt;div id=\"container&gt;\n    &lt;div id=\"width\"&gt;\n        &lt;div class=\"block\"&gt;\n            &lt;!-- contents of block --&gt;\n        &lt;/div&gt;\n        &lt;div class=\"block\"&gt;\n            &lt;!-- contents of block --&gt;\n        &lt;/div&gt;\n        &lt;div class=\"block\"&gt;\n            &lt;!-- contents of block --&gt;\n        &lt;/div&gt;\n        &lt;!-- more blocks here --&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>The CSS:</strong></p>\n\n<pre><code>#container {\n    height: 275px;\n    width: 1000px;\n    overflow-x: auto;\n    overflow-y: hidden;\n    max-height: 275px;\n}\n#container #width {\n    width:2000px; /* make this the width you need for x number of blocks */\n}\n#container div.block {\n    float: left;\n    margin: 3px 90px 0 3px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>It sounds like you are doing gallery with div's?</p>\n\n<p>What exactly are you using the divs for? </p>\n\n<p>It may be easier to use a ul/li with spans inside of the li to get the same effect without all the headaches of floating divs.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>My Ex:</p>\n\n<p>div width: 850px\ngridview\ntemplatedcolumn\nItemTemplate</p>\n\n<pre><code>&lt;span class=\"buttonspanlt\"&gt;&lt;/span&gt;&lt;asp:Button ID=\"imgEditSave\" runat=\"server\" Text=\"Edit SubStatus\" CssClass=\"buttoncenter\" OnClick=\"imgEditSave_OnClick\"/&gt;&lt;span class=\"buttonspanrt\"&gt;&lt;/span&gt;\n&lt;span style=\"display:none;float:left;clear:left;\" id=\"spangrdCancel\" runat=\"server\"&gt;&lt;span class=\"buttonspanlt\"&gt;&lt;/span&gt;&lt;asp:Button ID=\"imgCancel\" runat=\"server\" Text=\"Cancel\" class=\"buttoncenter\"/&gt;&lt;span class=\"buttonspanrt\"&gt;&lt;/span&gt;&lt;/span&gt;\n</code></pre>\n\n<p>end ItemTemplate\nend templatedcolumn\nend gridview\nend div</p>\n\n<p>the button has left middle(actual button) right spans which where not floating as there was outer div with fixed width.</p>\n\n<p>I had to use additional div with width 140px outside the button , inside the itemtemplate then it worked.</p>\n\n\n\n\n\n\n<p>Hope this helps!!!</p>\n\n<p>Thank You\nHarish</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>#row {\r\n    white-space: nowrap; /* important */\r\n    overflow: auto;\r\n}\r\n\r\n.items {\r\n    display: inline-block;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"row\"&gt;\r\n    &lt;div class=\"items\"&gt;\r\n        &lt;img src=\"//placehold.it/200/100\" alt=\"item 1\" /&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"items\"&gt;\r\n        &lt;img src=\"//placehold.it/200/100\" alt=\"item 2\" /&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"items\"&gt;\r\n        &lt;img src=\"//placehold.it/200/100\" alt=\"item 3\" /&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"items\"&gt;\r\n        &lt;img src=\"//placehold.it/200/100\" alt=\"item 4\" /&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"items\"&gt;\r\n        &lt;img src=\"//placehold.it/200/100\" alt=\"item 5\" /&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"items\"&gt;\r\n        &lt;img src=\"//placehold.it/200/100\" alt=\"item 6\" /&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"items\"&gt;\r\n        &lt;img src=\"//placehold.it/200/100\" alt=\"item 7\" /&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"items\"&gt;\r\n        &lt;img src=\"//placehold.it/200/100\" alt=\"item 8\" /&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"items\"&gt;\r\n        &lt;img src=\"//placehold.it/200/100\" alt=\"item 9\" /&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"items\"&gt;\r\n        &lt;img src=\"//placehold.it/200/100\" alt=\"item 10\" /&gt;\r\n    &lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>The trick here is the \"white-space: nowrap\" property of the parent which simply tells all it's child elements to continue horizontally and the \"display: inline-block\" property of it's children. You don't need to add any other property to make this work.</p>\n\n<p>JS Fiddle: <a href=\"http://jsfiddle.net/2c4jfetf/\" rel=\"nofollow\">http://jsfiddle.net/2c4jfetf/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a container DIV with a fixed height and width (275x1000px).  In this DIV I want to put multiple floating DIVs each with a width of 300px, and have a horizontal (x-axis) scrollbar appear to allow the user to scroll left and right to view everything.</p>\n\n<p>This is my CSS so far:</p>\n\n<pre><code>div#container {\n    height: 275px;\n    width: 1000px;\n    overflow-x: auto;\n    overflow-y: hidden;\n    max-height: 275px;\n}\n\ndiv#container div.block {\n    float: left;\n    margin: 3px 90px 0 3px;\n}\n</code></pre>\n\n<p>The problem is that the floating DIVs will not continue past the width of the container.  After putting three of the floating DIV's they will continue on beneath.  If I change overflow-y to auto, then the vertical scrollbar appears and I can scroll down.</p>\n\n<p>How can I change this to make the floating DIVs continue on without going beneath each other?</p>\n",
            "last_activity_date": 1421404828,
            "question_id": 1015809,
            "score": 26,
            "tags": [
                "css",
                "html",
                "css-float"
            ],
            "title": "How to get Floating DIVs inside fixed-width DIV to continue horizontally?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>That sounds about right, it is current supported in:</p>\n\n<ul>\n<li>Chrome 18+</li>\n<li>Chrome for Android 25+</li>\n<li>Safari 6+</li>\n<li>iOS Safari 6+</li>\n<li>Blackberry browser 10+</li>\n</ul>\n\n<p><a href=\"http://caniuse.com/css-filters\" rel=\"nofollow\">Reference</a></p>\n\n<p><a href=\"http://davidwalsh.name/css-image-filters-internet-explorer\" rel=\"nofollow\">Here is an article</a> from David Walsh (works at Mozilla) on IE specific filters, for example t motion blur</p>\n\n<pre><code>.blur { filter:blur(add = 0, direction = 300, strength = 10); }\n</code></pre>\n\n<p>It looks like normal blurring support is patchy with IE though and I'm not surprised, especially pre-9.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can do an SVG blur filter in Gecko-based browsers.  But the thing you have above is WebKit-only and not standardized, so no one else supports it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try with SVG filter. </p>\n\n<pre><code>filter: url(blur.svg#blur); }\n</code></pre>\n\n<p>SVG:</p>\n\n<pre><code>&lt;svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"&gt;\n   &lt;filter id=\"blur\"&gt;\n       &lt;feGaussianBlur stdDeviation=\"3\" /&gt;\n   &lt;/filter&gt;\n&lt;/svg&gt; \n</code></pre>\n\n<p>Complete css:</p>\n\n<pre><code>filter: blur(3px); \n-webkit-filter: blur(3px); \n-moz-filter: blur(3px);\n-o-filter: blur(3px); \n-ms-filter: blur(3px);\nfilter: url(blur.svg#blur);\nfilter:progid:DXImageTransform.Microsoft.Blur(PixelRadius='3');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<pre><code>filter: blur(3px);\n-webkit-filter: blur(3px);\n-moz-filter: blur(3px);\n-o-filter: blur(3px);\n-ms-filter: blur(3px);\nfilter: url(\"data:image/svg+xml;utf9,&lt;svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'&gt;&lt;filter%20id='blur'&gt;&lt;feGaussianBlur%20stdDeviation='3'%20/&gt;&lt;/filter&gt;&lt;/svg&gt;#blur\");\nfilter:progid:DXImageTransform.Microsoft.Blur(PixelRadius='3'); \n</code></pre>\n\n<p>But does not work in Opera((</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have a problem with css: when I try to do </p>\n\n<pre><code>-webkit-filter: blur(1px);\n-moz-filter: blur(1px);\n-ms-filter: blur(1px);\n-o-filter: blur(1px);\nfilter: blur(1px);\n</code></pre>\n\n<p>it looks perfect in safari and chrome, but the blur doesnt show up at all in firefox, opera, or IE. Do those browers support it? Or is there another method of getting the entire page to blur?</p>\n",
            "last_activity_date": 1414058993,
            "question_id": 15803122,
            "score": 13,
            "tags": [
                "css",
                "internet-explorer",
                "firefox",
                "browser",
                "opera"
            ],
            "title": "filter: blur(1px); doesnt work in firefox, IE, and opera"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I think you're asking a lot to get a complete solution for this, but it seemed interesting so I've implemented it. The following works in recent WebKit browsers, including Safari on iPhone running OS 3.0. It uses the non-standard but convenient <code>intersectsNode</code> method of <code>Range</code>, which exists in WebKit but was removed from Firefox in 3.0, so it doesn't work in recent versions of Firefox but could be made to do so trivially.</p>\n\n<p>The following will surround each selected text node with a <code>&lt;span&gt;</code> element with a class of \"someclass\" and also a unique class to allow easy undoing. <code>applyClassToSelection</code> returns this unique class; pass this class into <code>removeSpansWithClass</code> to remove the spans.</p>\n\n<p><strong>UPDATE:</strong> Fixed problem when selection is entirely contained within a single text node</p>\n\n<p><strong>UPDATE 2:</strong> Now tested and works in iPhone running OS 3.0.</p>\n\n<p><strong>UPDATE 3:</strong> Added <code>rangeIntersectsNode</code> function to add support for Firefox 3.0 and later. This code should now work in Firefox 1.0+, Safari 3.1+, Google Chrome, Opera 9.6+ and possibly others (untested so far). <strong>It does not work at all in Internet Explorer and will give errors in that browser.</strong> I plan to work on an IE version soon.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var nextId = 0;\n\n    var rangeIntersectsNode = (typeof window.Range != \"undefined\"\n            &amp;&amp; Range.prototype.intersectsNode) ?\n\n        function(range, node) {\n            return range.intersectsNode(node);\n        } :\n\n        function(range, node) {\n            var nodeRange = node.ownerDocument.createRange();\n            try {\n                nodeRange.selectNode(node);\n            } catch (e) {\n                nodeRange.selectNodeContents(node);\n            }\n\n            return range.compareBoundaryPoints(Range.END_TO_START, nodeRange) == -1 &amp;&amp;\n                range.compareBoundaryPoints(Range.START_TO_END, nodeRange) == 1;\n        };\n\n    function applyClassToSelection(cssClass) {\n        var uniqueCssClass = \"selection_\" + (++nextId);\n        var sel = window.getSelection();\n        if (sel.rangeCount &lt; 1) {\n            return;\n        }\n        var range = sel.getRangeAt(0);\n        var startNode = range.startContainer, endNode = range.endContainer;\n\n        // Split the start and end container text nodes, if necessary\n        if (endNode.nodeType == 3) {\n            endNode.splitText(range.endOffset);\n            range.setEnd(endNode, endNode.length);\n        }\n\n        if (startNode.nodeType == 3) {\n            startNode = startNode.splitText(range.startOffset);\n            range.setStart(startNode, 0);\n        }\n\n        // Create an array of all the text nodes in the selection\n        // using a TreeWalker\n        var containerElement = range.commonAncestorContainer;\n        if (containerElement.nodeType != 1) {\n            containerElement = containerElement.parentNode;\n        }\n\n        var treeWalker = document.createTreeWalker(\n            containerElement,\n            NodeFilter.SHOW_TEXT,\n            // Note that Range.intersectsNode is non-standard but\n            // implemented in WebKit\n            function(node) {\n                return rangeIntersectsNode(range, node) ?\n                    NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT;\n            },\n            false\n        );\n\n        var selectedTextNodes = [];\n        while (treeWalker.nextNode()) {\n            selectedTextNodes.push(treeWalker.currentNode);\n        }\n\n        var textNode, span;\n\n        // Place each text node within range inside a &lt;span&gt;\n        // element with the desired class\n        for (var i = 0, len = selectedTextNodes.length; i &lt; len; ++i) {\n            textNode = selectedTextNodes[i];\n            span = document.createElement(\"span\");\n            span.className = cssClass + \" \" + uniqueCssClass;\n            textNode.parentNode.insertBefore(span, textNode);\n            span.appendChild(textNode);\n        }\n\n        return uniqueCssClass;\n    }\n\n    function removeSpansWithClass(cssClass) {\n        var spans = document.body.getElementsByClassName(cssClass),\n            span, parentNode;\n\n        // Convert spans to an array to prevent live updating of\n        // the list as we remove the spans\n        spans = Array.prototype.slice.call(spans, 0);\n\n        for (var i = 0, len = spans.length; i &lt; len; ++i) {\n            span = spans[i];\n            parentNode = span.parentNode;\n            parentNode.insertBefore(span.firstChild, span);\n            parentNode.removeChild(span);\n\n            // Glue any adjacent text nodes back together\n            parentNode.normalize();\n        }\n    }\n\n    var c;\n&lt;/script&gt;\n\n&lt;input type=\"button\" onclick=\"c = applyClassToSelection('someclass')\"\n    value=\"Add class\"&gt;\n&lt;input type=\"button\" onclick=\"removeSpansWithClass(c)\"\n    value=\"Remove class\"&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>I am displaying some simple styled text as html in a UIWebView on iPhone.  It is basically a series of paragraphs with the occasional strong or emphasized phrase.  At runtime I need to apply styles to ranges of text.</p>\n\n<p>There are a few similar scenarios, one of which is highlighting search results.  If the user has searched for \"something\" I would like to change the background color behind occurrences of the word, then later restore the original background.</p>\n\n<p>Is it possible to apply styles to ranges of text using javascript?  A key part of this is also being able to unset the styles.</p>\n\n<p>There seem to be two likely paths to follow.  One would be modifying some html in Objective-C and passing it through javascript as the new innerHTML of some container.  The other would be to use javascript to directly manipulate DOM nodes.</p>\n\n<p>I could manipulate html, but that sounds tedious in Objective-C so I would rather manipulate the DOM if that is a reasonable approach.  I am not that familiar with javascript and DOM so I do not know if it is a reasonable approach.</p>\n\n<p>I wrote some routines to translate between text ranges and node ranges with offsets.  So if I start with text range 100-200 and that starts in one paragraph and ends in a third, I can get the text nodes and the offsets within the nodes that represent the given text range.  I just need a way to split a text node at an offset in the text.  Currently I just apply styles to the paragraphs containing the text range.</p>\n\n<p>A few notes:</p>\n\n<ul>\n<li>straight javascript please, no external frameworks like jquery.</li>\n<li>the changes never need to be written to disk.</li>\n<li>the changes should be undoable or at least removable.</li>\n<li>the styles to apply already exist in a css file.</li>\n<li>it needs to work in iPhone 3.0 and forward.</li>\n<li>all the source files are shipped with the app.</li>\n<li>please be verbose.</li>\n</ul>\n\n<p>Thanks for any suggestions.</p>\n",
            "last_activity_date": 1284033800,
            "question_id": 2887101,
            "score": 7,
            "tags": [
                "javascript",
                "iphone",
                "html",
                "css",
                "uiwebview"
            ],
            "title": "apply style to range of text with javascript in uiwebview"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Use CSS to remove <code>text-decoration</code>s.</p>\n\n<pre><code>a {\n    text-decoration: none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The css is </p>\n\n<pre><code>text-decoration: none;\n</code></pre>\n\n<p>and</p>\n\n<pre><code>text-decoration: underline;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Use CSS. this removes underlines from <code>a</code> and <code>u</code> elements:</p>\n\n<pre><code>a, u {\n    text-decoration: none;\n}\n</code></pre>\n\n<p>Sometimes you need to override other styles for elements, in which case you can use the <code>!important</code> modifier on your rule:</p>\n\n<pre><code>a {\n    text-decoration: none !important;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 135
                },
                {
                    "body": "<p>To provide another perspective to the problem (as inferred from the title/contents of the original post):</p>\n\n<p>If you want to track down what is creating rogue underlines in your HTML, use a debugging tool. There are plenty to choose from:</p>\n\n<p>For Firefox there is FireBug;</p>\n\n<p>For Opera there is Dragonfly (called \"Developer tools\" in the Tools->Advanced menu; comes with Opera by default);</p>\n\n<p>For IE there is the \"Internet Explorer Developer Toolbar\", which is a separate download for IE7 and below, and is integrated in IE8 (hit F12).</p>\n\n<p>I've no idea about Safari, Chrome and other minority browsers, but you should probably have at least one of the three above on your machine anyway.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Don't forget to either include stylesheets using the link tag</p>\n\n<p><a href=\"http://www.w3schools.com/TAGS/tag_link.asp\" rel=\"nofollow\">http://www.w3schools.com/TAGS/tag_link.asp</a></p>\n\n<p>Or enclose CSS within a style tag on your webpage.</p>\n\n<pre><code>&lt;style&gt;\n  a { text-decoration:none; }\n  p { text-decoration:underline; }\n&lt;/style&gt;\n</code></pre>\n\n<p>I wouldn't recommend using the underline on anything apart from links, underline is generally accepted as something that is clickable. If it isn't clickable don't underline it.</p>\n\n<p>CSS basics can be picked up at w3schools</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;u&gt;\n</code></pre>\n\n<p>is a deprecated tag.</p>\n\n<p>Use...</p>\n\n<pre><code>&lt;span class=\"underline\"&gt;My text&lt;/span&gt;\n</code></pre>\n\n<p>with a CSS file containing...</p>\n\n<pre><code>span.underline\n{\n    text-decoration: underline;\n}  \n</code></pre>\n\n<p>or just...</p>\n\n<pre><code>&lt;span style=\"text-decoration:underline\"&gt;My Text&lt;/span&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Best Option:</p>\n\n<pre><code>&amp;lt;a name=\"#\" style=\"text-decoration:none\" &amp;gt;2000001&amp;lt;/a&amp;gt;\n\n&lt;a style=\"text-decoration:none\" name=\"#\"&gt;2000001&lt;/a&gt;\n</code></pre>\n\n<p>Tested on <code>IPHONE</code>, <code>ANDROID</code> <code>browser/email</code> -- works like a charm.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Sometime it will override by some rendering UI css.\nBetter to use</p>\n\n<pre><code>a.className {\ntext-decoration: none !important;\n</code></pre>\n\n<p>}</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Is there anyway (in CSS) to avoid the underline for the text and links introduced in the page .. ?</p>\n",
            "last_activity_date": 1410778733,
            "question_id": 2041388,
            "score": 65,
            "tags": [
                "html",
                "css"
            ],
            "title": "How to remove the underline for anchors(links)?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>you can use 'transform' to achieve this. \n<a href=\"http://jsfiddle.net/aRcQ8/\" rel=\"nofollow\">http://jsfiddle.net/aRcQ8/</a></p>\n\n<p>css:</p>\n\n<pre><code>-moz-transform: rotate(-180deg);\n-webkit-transform: rotate(-180deg);\ntransform: rotate(-180deg);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Edit:</strong> This answer is now over 3 years old, being written in 2011. At the time I wrote it, this was the best option available for cross browser support, and solved the problem at hand for the user.</p>\n\n<p>As technology has evolved, @DuoPixel's answer below is definitely the correct solution. I will leave my original answer to stand for the record, but the correct way to approach this now is as follows:</p>\n\n<p><strong>New, correct answer:</strong></p>\n\n<pre><code>-moz-transform: scale(-1, 1);\n-webkit-transform: scale(-1, 1);\n-o-transform: scale(-1, 1);\n-ms-transform: scale(-1, 1);\ntransform: scale(-1, 1);\n</code></pre>\n\n<p>The two parameters are X axis, and Y axis, -1 will be a mirror, but you can scale to any size you like to suit your needs. Upside down and backwards would be <code>(-1, -1)</code>.</p>\n\n<p><strong>Old and busted answer:</strong></p>\n\n<p>You can rotate it in CSS using the answer Rito provided, however, the answer differs for IE support.</p>\n\n<pre><code>.rotated{\n    -moz-transform: rotate(-180deg);\n    -webkit-transform: rotate(-180deg);\n    transform: rotate(-180deg);\n    filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\n}\n</code></pre>\n\n<p>In IE, rotation = 1 is 90 degrees, 2 is 180, 3 is 270 and 4 is 360.</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Just as a complement for the rest of the answers, a real flip (mirror) would involve scaling the div like this:</p>\n\n<pre><code>-moz-transform: scale(-1, 1);\n-webkit-transform: scale(-1, 1);\n-o-transform: scale(-1, 1);\n-ms-transform: scale(-1, 1);\ntransform: scale(-1, 1);\n</code></pre>\n\n<p>The rotate solution works for your specific case, but if you want mirrored text this is the way to go.</p>\n",
                    "is_accepted": false,
                    "score": 112
                },
                {
                    "body": "<p>Real mirror:    </p>\n\n<pre><code>.mirror {\n    display:block; \n    -webkit-transform: matrix(-1, 0, 0, 1, 0, 0);\n    -moz-transform: matrix(-1, 0, 0, 1, 0, 0);\n    -o-transform: matrix(-1, 0, 0, 1, 0, 0);\n    transform: matrix(-1, 0, 0, 1, 0, 0);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>You could try box-reflect</p>\n\n<pre><code>box-reflect: 20px right;\n</code></pre>\n\n<p>see <a href=\"http://stackoverflow.com/questions/9173666/css-property-box-reflect-compatibility\">CSS property box-reflect compatibility?</a> for more details</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There's also the <code>rotateY</code> for a real mirror one:</p>\n\n<pre><code>transform: rotateY(180deg);\n</code></pre>\n\n<p>Which, perhaps, is even more clear and understandable.</p>\n\n<p><strong>EDIT:</strong> Doesn't seem to work on Opera though\u2026 sadly. But it works fine on Firefox. I guess it might required to implicitly say that we are doing some kind of <code>translate3d</code> perhaps? Or something like that.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I cobbled together this solution by scouring the Internet including Stack Overflow answers, MSDN articles, <a href=\"http://css-tricks.com/almanac/properties/t/transform/\" rel=\"nofollow\">http://css-tricks.com/almanac/properties/t/transform/</a>, <a href=\"http://caniuse.com/#search=transform\" rel=\"nofollow\">http://caniuse.com/#search=transform</a>, <a href=\"http://browserhacks.com/\" rel=\"nofollow\">http://browserhacks.com/</a>, and <a href=\"http://www.useragentman.com/IETransformsTranslator/\" rel=\"nofollow\">http://www.useragentman.com/IETransformsTranslator/</a>.  This solution seems to work in all browsers including IE6+, using scale(-1,1) (a proper mirror) and appropriate filter/-ms-filter properties when necessary (IE6-8):</p>\n\n<pre><code>/* Cross-browser mirroring of content. Note that CSS pre-processors\n  like LESS cough on the media hack. */\n/*\n  Microsoft recommends using BasicImage as a more efficent/faster form of\n  mirroring, instead of FlipH or some kind of Matrix scaling/transform.\n  @see http://msdn.microsoft.com/en-us/library/ms532972%28v=vs.85%29.aspx\n  @see http://msdn.microsoft.com/en-us/library/ms532992%28v=vs.85%29.aspx\n*/\n/* IE8 only via hack: necessary because IE9+ will also interpret -ms-filter,\n  and mirroring something that's already mirrored results in no net change! */\n@media \\0screen {\n  .mirror {\n    -ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(mirror=1)\";\n  }\n}\n.mirror {\n  /* IE6 and 7 via hack */\n  *filter:progid:DXImageTransform.Microsoft.BasicImage(mirror=1);\n  /* Standards browsers, including IE9+ */\n  -moz-transform: scale(-1,1);\n  -o-transform: scale(-1,1);\n  -webkit-transform: scale(-1,1);\n  -ms-transform: scale(-1,1);\n  transform: scale(-1,1);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For cross browser compatibility create this class</p>\n\n<pre><code>.mirror-icon:before {\n    -webkit-transform: scale(-1, 1);\n    -moz-transform: scale(-1, 1);\n    -ms-transform: scale(-1, 1);\n    -o-transform: scale(-1, 1);\n    transform: scale(-1, 1);\n}\n</code></pre>\n\n<p>And add it to your icon class, i.e.</p>\n\n<pre><code>&lt;i class=\"icon-search mirror-icon\"&gt;&lt;/i&gt;\n</code></pre>\n\n<p>to get a search icon with the handle on the left</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>this is what worked for me for <code>&lt;span class=\"navigation-pipe\"&gt;&amp;gt;&lt;/span&gt;</code></p>\n\n<pre><code>display:inline-block;\n-moz-transform: rotate(360deg);\n-webkit-transform: rotate(360deg);\ntransform: rotate(360deg);\nfilter: progid:DXImageTransform.Microsoft.BasicImage(rotation=4);\n</code></pre>\n\n<p>just need display:inline-block or block to rotate. So basically first answer is good. But -180 didn't worked.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><br>\nIs it possible to use CSS (CSS3 is okay) to mirror text?</p>\n\n<p>Specifically, I have this scissor char \u201c&#9986;\u201d (<code>&amp;#9986;</code>) that I'd like to display pointing left and not right.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1409236279,
            "question_id": 5406368,
            "score": 48,
            "tags": [
                "html",
                "css",
                "css3"
            ],
            "title": "Can you use CSS to mirror/flip text?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Once upon a time I needed to do this, and the only cross-browser reliable solution I came across was hack job. I'm not the biggest fan of solutions like this, but it certainly produces the correct result time and time again. </p>\n\n<p>The idea is that you clone the element, remove any bounding width, and test if the cloned element is wider than the original. If so, you know it's going to have been truncated.</p>\n\n<p>For example, using jQuery:</p>\n\n<pre><code>var $element = $('#element-to-test');\nvar $c = $element\n           .clone()\n           .css({display: 'inline', width: 'auto', visibility: 'hidden'})\n           .appendTo('body');\n\nif( $c.width() &gt; $element.width() ) {\n    // text was truncated. \n    // do what you need to do\n}\n\n$c.remove();\n</code></pre>\n\n<p>I made a jsFiddle to demonstrate this, <a href=\"http://jsfiddle.net/cgzW8/2/\" rel=\"nofollow\">http://jsfiddle.net/cgzW8/2/</a></p>\n\n<p>You could even create your own custom pseudo-selector for jQuery:</p>\n\n<pre><code>$.expr[':'].truncated = function(obj) {\n  var $this = $(obj);\n  var $c = $this\n             .clone()\n             .css({display: 'inline', width: 'auto', visibility: 'hidden'})\n             .appendTo('body');\n\n  var c_width = $c.width();\n  $c.remove();\n\n  if ( c_width &gt; $this.width() )\n    return true;\n  else\n    return false;\n};\n</code></pre>\n\n<p>Then use it to find elements</p>\n\n<pre><code>$truncated_elements = $('.my-selector:truncated');\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/cgzW8/293/\" rel=\"nofollow\">http://jsfiddle.net/cgzW8/293/</a></p>\n\n<p>Hopefully this helps, hacky as it is. </p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>Try this JS function, passing the span element as argument:</p>\n\n<pre><code>function isEllipsisActive(e) {\n     return (e.offsetWidth &lt; e.scrollWidth);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 56
                },
                {
                    "body": "<p>Adding to italo's answer, you can also do this using jQuery.</p>\n\n<pre><code>function isEllipsisActive($jQueryObject) {\n    return ($jQueryObject.width() &lt; $jQueryObject[0].scrollWidth);\n}\n</code></pre>\n\n<p>Also, as Smoky pointed out, you may want to use jQuery outerWidth() instead of width().</p>\n\n<pre><code>function isEllipsisActive($jQueryObject) {\n    return ($jQueryObject.outerWidth() &lt; $jQueryObject[0].scrollWidth);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have a collection of block elements on a page. They all have the CSS rules white-space, overflow, text-overflow set so that overflowing text is trimmed and an ellipsis is used.</p>\n\n<p>However, not all the elements overflow.</p>\n\n<p>Is there anyway I can use javascript to detect which elements are overflowing?</p>\n\n<p>Thanks.</p>\n\n<p>Added: example HTML structure I am working with.</p>\n\n<pre><code>&lt;td&gt;&lt;span&gt;Normal text&lt;/span&gt;&lt;/td&gt;\n&lt;td&gt;&lt;span&gt;Long text that will be trimmed text&lt;/span&gt;&lt;/td&gt;\n</code></pre>\n\n<p>The SPAN elements always fit in the cells, they have the ellipsis rule applied. I want to detect when the ellipsis is applied to the text content of the SPAN.</p>\n",
            "last_activity_date": 1420527535,
            "question_id": 7738117,
            "score": 28,
            "tags": [
                "html",
                "css",
                "ellipsis"
            ],
            "title": "HTML text-overflow ellipsis detection"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Depending on your required browser support. </p>\n\n<pre><code>@page {\n  @bottom-right {\n    content: counter(page) \" of \" counter(pages);\n  }\n}\n</code></pre>\n\n<p>Further reading:</p>\n\n<ul>\n<li><a href=\"http://www.w3.org/TR/css3-page/\">http://www.w3.org/TR/css3-page/</a></li>\n<li><a href=\"http://www.intelligrape.com/blog/2010/08/20/add-page-number-using-page-property-of-css/\">http://www.intelligrape.com/blog/2010/08/20/add-page-number-using-page-property-of-css/</a></li>\n<li><a href=\"http://www.princexml.com/doc/6.0/page-numbers/\">http://www.princexml.com/doc/6.0/page-numbers/</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>There's a test page at <a href=\"http://www.princexml.com/howcome/2007/xtech/papers/output/0082-32/index.xhtml\" rel=\"nofollow\">http://www.princexml.com/howcome/2007/xtech/papers/output/0082-32/index.xhtml</a> that includes the @page content code in its css file. I couldn't get it to work in current versions of IE, Chrome, or Firefox. </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>An interesting use case has popped up for us, we are requiring that when we print a website  the printed copy will have a page header and footer, and inside the footer the page number.</p>\n\n<p>Anyone got any idea how to achieve this?</p>\n\n<p>Note: Browser version can be the latest of anything, clients are other web developers.</p>\n",
            "last_activity_date": 1425475260,
            "question_id": 6109893,
            "score": 20,
            "tags": [
                "html",
                "css",
                "printing"
            ],
            "title": "Page numbers with CSS/HTML"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>According to the w3c, cols and rows are both required attributes for textareas.  Rows and Cols are the number of characters that are going to fit in the textarea rather than pixels or some other potentially arbitrary value.  Go with the rows/cols.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I recommend to use both. Rows and cols are required and useful if the client does not support CSS. But as a designer I overwrite them to get exactly the size I wish (not to mention you don't do this inline via <code>&lt;textarea style=\"width: 300px; height: 150px;\"&gt;</code>, do it in an external stylesheet instead).</p>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>The answer is \"yes\". That is, you should use both. Without rows and cols (and there are default values even if you don't use them explicitly) the textarea is unusably small if CSS is disabled or overriden by a user stylesheet. Always keep accessibility concerns in mind. That being said, if your stylesheet is allowed to control the appearance of the textarea, you will generally wind up with something that looks a whole lot better, fits into the overall page design well, <em>and</em> that can resize to keep up with user input (within the limits of good taste, of course).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code> &lt;textarea style=\"width:300px; height:150px;\" &gt;&lt;/textarea&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The size of a textarea can be specified by the cols and rows attributes, or even better; through CSS' height and width properties.\nThe cols attribute is supported in all major browsers.\nOne main difference is that <code>&lt;TEXTAREA ...&gt;</code> is a container tag: it has a start tag (). </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I usually don't specify <code>height</code>, but do specify <code>width: ...</code> and <code>rows</code> and <code>cols</code>.</p>\n\n<p>Usually, in my cases, only <code>width</code> and <code>rows</code> are needed, for the textarea to look nice in relation to other elems. (And <code>cols</code> is a fallback if someone doesn't use CSS, as explained in the other answers.)</p>\n\n<p>((Specifying both <code>rows</code> and <code>height</code> feels a little bit like duplicating data I think?))</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In HTML set</p>\n\n<pre><code>&lt;textarea rows=\"10\"&gt;&lt;/textarea&gt;\n</code></pre>\n\n<p>In CSS set </p>\n\n<pre><code>textarea { height: auto; }\n</code></pre>\n\n<p>This will trigger the browser to set the height of the textarea EXACTLY to the amount of rows plus the paddings around it. Setting the CSS height to an exact amount of pixels leaves arbitrary whitespaces.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<h1><em><strong>CSS</em></strong></h1>\n\n<hr>\n\n<pre><code>input\n{\n    width: 300px;\n    height: 40px;\n} \n</code></pre>\n\n<p><br /></p>\n\n<h1><em><strong>HTML</em></strong></h1>\n\n<hr>\n\n<pre><code>&lt;textarea rows=\"4\" cols=\"50\"&gt;HELLO&lt;/textarea&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>Every time I develop a new form that includes a <strong><code>textarea</code></strong> I have the following dilemma when I need to specify its dimensions:</p>\n\n<p>Use <strong>CSS</strong> or use the <code>textarea</code>'s attributes <strong><code>cols</code></strong> and <strong><code>rows</code></strong>?</p>\n\n<p>What are the pros and cons of each method?</p>\n\n<p>What are the semantics of using these attributes?</p>\n\n<p>How is it usually done?</p>\n",
            "last_activity_date": 1407937882,
            "question_id": 3896537,
            "score": 70,
            "tags": [
                "html",
                "css",
                "textarea"
            ],
            "title": "Should I size a textarea with CSS width / height or HTML cols / rows attributes?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I wouldn't prefix with the type, as you can infer this in the selector if you must</p>\n\n<pre><code>form#contact {\n    property: value;\n\n}\n</code></pre>\n\n<p>The method you described is known as Hungarian notation, and isn't very popular.</p>\n\n<p>For what you mention, you could place your injected HTML inside one div with one unique class/id, which has a sort of localised reset. Look up CSS selector specificty to ensure your rules will take affect and not other rules in the host page's CSS. <a href=\"http://stackoverflow.com/questions/909025/javascript-widget-affecting-style-of-the-page-it-is-embedded-in/909039#909039\">See this answer to a similar question regarding styling an element within a parent page.</a></p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>A lot of people don't realize you can do this stuff:</p>\n\n<pre><code>.awesome {\n /* rules for anything awesome */\n}\n\ndiv.awesome {\n /* rules for only awesome divs */\n}\n\nbutton.awesome {\n /* rules for any awesome buttons, but not awesome divs */\n}\n\ndiv.awesome h1 {\n /* rules for H1s inside of any div.awesome */\n}\n\ndiv.awesome&gt;button {\n /* rules for immediate children buttons (not grandchildren+) of div.awesomes */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<h2>2015: a fresh answer with focus on existing naming systems</h2>\n\n<p>For any convention you choose, I'd suggest you pick requirements that targets your project's needs.</p>\n\n<p>Namely: is your project small or huge? is your project going to be reused or need to handle some kind of theming? Are the devs working on the CSS/HTML keen or experienced-enough to stick with conventions? &amp; so on..</p>\n\n<hr>\n\n<p>First, if you are not aware of this common (good?) practice: <strong>avoid IDs as styling hooks, try to only use Classes</strong> </p>\n\n<p>Because:</p>\n\n<ul>\n<li><p>only very few blocks (ie. page-header, page-footer) can 100% garantee the fact that they will not be reused elsewhere</p></li>\n<li><p>you want to keep specificity low, there will always be times you need to override it (without using an extra ID selector or !important)</p></li>\n</ul>\n\n<hr>\n\n<h3>Common requirements/conventions:</h3>\n\n<ul>\n<li>Names should be intuitive/meaningfull</li>\n<li>Do NOT abbreviate names unless its a really well known abbreviation (ie. msg for Message, accnt for account)</li>\n<li>Use known/common names: .site-nav, .aside-nav, .global-head, .btn-primary, .btn-secondary</li>\n<li>Allow structural hierarchy (ie. BEM convention)</li>\n<li>Use <code>-</code> or <code>_</code> in namings: probably subjective (devs' opinions) &amp; depending on the keyboard languages used. Note that camelCase has been left aside for browser-compatibility issues I believe, although I never found a proof for this.</li>\n<li>Never use elements in selectors unless exceptional case: this allows for more flexibility, ie. you have buttons you created using <code>&lt;input type=\"button\"&gt;&lt;/input&gt;</code> and you want to switch to using <code>&lt;button&gt;&lt;/button&gt;</code>, if you used element types in some selectors then you can plan some annoying/time-consuming refactoring/testing/prod-bug-fixing, whereas if you use element-less selectors then the switch will be infinitely easier. <a href=\"http://smacss.com/book/type-module#avoid\" rel=\"nofollow\">SMACCS also has it in its conventions</a></li>\n<li>For states, try to match known conventions from other languages (php, java, c#): ie, use \"is-active\", \"is-badass\", &amp; so on</li>\n<li>Name from left-to-right: from the most generic to the most precise, ie. <code>btn-bluetheme-create-accnt</code> or <code>accordion-modrnlook-userlist</code></li>\n<li>a class or id name should always be specific enough to be searched across a whole project &amp; return only the relevant results</li>\n<li>Prefer direct descendant if you use descendent selectors - use <code>.module-name &gt; .sub-module-name</code> vs <code>.module-name .sub-module-name</code> - you'll save yourself some headache in the future (simpler CSS but also more performant, although the term \"CSS performance might be laughable\")</li>\n</ul>\n\n<p>As discussed below you may want to consider using <code>Structural naming convention</code> OR/AND <code>Presentational naming convention</code> (or skins). I'd prefer the structural one overall but then there always are cases where it's needed (ie. using different button styles on 1 website is not unusual &amp; it might be handy/tempting to name them such as <code>btn-dark</code> &amp; <code>btn-light</code>).</p>\n\n<hr>\n\n<h3>Known conventions:</h3>\n\n<p><strong><em>Structural naming convention:</em></strong> name element's class by describing what it is, rather than where it is or how it looks. See examples below.</p>\n\n<pre><code>.page-container\n     .page-wrap-header-n-content\n     .page-header\n          .branding-logo\n          .branding-tagline\n          .wrapper-search\n          .page-nav-main\n     .page-main-content\n     .page-secondary-content\n          .nav-supplementary\n     .page-footer\n          .site-info\n</code></pre>\n\n<p><strong><em>Presentational naming convention:</em></strong> name element's class by describing its location and/or appearance. See examples below.</p>\n\n<pre><code>.theme-ocean-blue\n.theme-apricot-orange\n.skin-red-tango\n.skin-darkness\n</code></pre>\n\n<p><strong><em>Semantic naming convention:</em></strong> name by describing the content it enclose. As in. See examples below.</p>\n\n<pre><code>.product-review\n.notification\n.language-switch\n.currency-switch\n.list-of-friends\n.latest-status\n</code></pre>\n\n<p><strong><em>BEM naming convention:</em></strong> stands for \"Block, Element, Modifier\". Syntax is such as <code>&lt;module-name&gt;__&lt;sub-module-name&gt;--&lt;modifier-or-state&gt;</code>. Block is a the \"main\" container, a kind of module/component whatever you call it. Element is just a child component of the main component (the Block). Modifier is some kind of state. <em>Peculiarities:</em> the syntax (usage of dbl underscore &amp; dbl dash), &amp; child elements must contain their closest component's name. See examples below.</p>\n\n<pre><code>.nav-primary\n.nav-primary__list\n.nav-primary__item\n.nav-primary__link\n.nav-primary__link--is-active\n\n.grid\n.grid__item\n.grid__description\n.grid__img-wrap\n.grid__img\n\n.global-footer\n.global-footer__col\n.global-footer__header\n.global-footer__link\n</code></pre>\n\n<p><strong><em>OCSS naming convention:</em></strong> stands for Object Oriented CSS. Uses skins for branding purposes or consistency of design (ie. bg color, border color, ...). Abstracts the structural styles. Example of abstract structural style below. <a href=\"https://github.com/stubbornella/oocss/wiki\" rel=\"nofollow\">Two main principles of OOCSS: separate structure &amp; skin, secondly separate container &amp; content.</a></p>\n\n<pre><code> .global-width {\n      min-width: 780px;    /* minimum width */\n      max-width: 1400px;   /* maximum width */\n      margin: 0 auto;      /* Centering using margin: auto */\n      position: relative;  /* Relative positioning to create a positioning context for child elements */\n      padding-left: 20px;\n      padding-right: 20px;\n      overflow: hidden;    /* Overflow set to \"hidden\" for clearfixing */\n }\n</code></pre>\n\n<hr>\n\n<h3>Some CSS guidelines:</h3>\n\n<p>There has been a \"trend\" to share your CSS styleguide, here are a few you can read to pick &amp; choose whatever seems to fit for your need (naming convention but also much more, this may be out of scope of your question):</p>\n\n<ul>\n<li><a href=\"http://github.com/styleguide/css/\" rel=\"nofollow\">github.com/styleguide/css/</a> </li>\n<li><a href=\"http://cssguidelin.es\" rel=\"nofollow\">cssguidelin.es</a></li>\n<li><a href=\"http://css-tricks.com/sass-style-guide\" rel=\"nofollow\">css-tricks.com/sass-style-guide</a></li>\n<li><a href=\"http://codepen.io/chriscoyier/blog/codepens-css\" rel=\"nofollow\">codepen.io/chriscoyier/blog/codepens-css</a></li>\n</ul>\n\n<hr>\n\n<h3>My biased opinion:</h3>\n\n<p>I currently use a mix of <strong>BEM</strong>, <strong>semantic</strong> &amp; <strong>structural</strong> naming conventions &amp; it's been working out quite well.</p>\n\n<p><strong>BEM</strong> &amp; <strong>semantic</strong> working quite well together (yes, I name my classes such as  <code>.list-of-friends__single-friend</code>). BEM makes things especially simpler: no nesting madness in the CSS &amp; very verbose code.</p>\n\n<p><strong>Structural</strong> naming convention is also welcome for the bare structure of the website, or each \"template\" if the website has several structures. This should, in my opinion again, be only used for very generic elements, so use carefully.</p>\n\n<p><strong>Presentational</strong> naming convention: really?? thanks, but no thanks. You may consider it in special cases (ie. skin a whole page in different themes).</p>\n\n<p><strong>OCSS</strong> naming convention: I have to admit, still got to look further into this. I provided links in the resources below for you to investigate further.</p>\n\n<hr>\n\n<h3>Resources:</h3>\n\n<ul>\n<li><a href=\"http://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/\" rel=\"nofollow\">http://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/</a> </li>\n<li><a href=\"http://www.smashingmagazine.com/2011/12/12/an-introduction-to-object-oriented-css-oocss/\" rel=\"nofollow\">http://www.smashingmagazine.com/2011/12/12/an-introduction-to-object-oriented-css-oocss/</a></li>\n<li><a href=\"http://bem.info/method/definitions/\" rel=\"nofollow\">http://bem.info/method/definitions/</a> </li>\n<li><a href=\"http://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/\" rel=\"nofollow\">http://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/</a></li>\n<li><a href=\"https://github.com/stubbornella/oocss/wiki\" rel=\"nofollow\">https://github.com/stubbornella/oocss/wiki</a></li>\n<li><a href=\"https://css-tricks.com/semantic-class-names/\" rel=\"nofollow\">https://css-tricks.com/semantic-class-names/</a></li>\n<li><a href=\"http://www.stuffandnonsense.co.uk/archives/naming_conventions_table.html\" rel=\"nofollow\">http://www.stuffandnonsense.co.uk/archives/naming_conventions_table.html</a></li>\n<li><a href=\"http://sixrevisions.com/css/css-tips/css-tip-2-structural-naming-convention-in-css/\" rel=\"nofollow\">http://sixrevisions.com/css/css-tips/css-tip-2-structural-naming-convention-in-css/</a></li>\n<li><a href=\"http://stackoverflow.com/questions/7927193/css-class-naming-convention\">CSS class naming convention</a></li>\n<li><a href=\"http://stackoverflow.com/questions/1547986/can-i-use-camel-case-in-css-class-names\">Can I use camel-case in CSS class names</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Underscores_in_class_and_ID_Names\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Underscores_in_class_and_ID_Names</a></li>\n<li><a href=\"http://programmers.stackexchange.com/questions/141988/practical-considerations-for-html-css-naming-conventions-syntax\">http://programmers.stackexchange.com/questions/141988/practical-considerations-for-html-css-naming-conventions-syntax</a></li>\n<li><a href=\"http://smacss.com/book/type-module\" rel=\"nofollow\">http://smacss.com/book/type-module</a></li>\n<li><a href=\"http://github.com/styleguide/css/\" rel=\"nofollow\">github.com/styleguide/css/</a> </li>\n<li><a href=\"http://cssguidelin.es\" rel=\"nofollow\">cssguidelin.es</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>Does anyone know of a good resource to explain good naming conventions for HTML ID and classes and whether to prefix with IDs with an element type i.e. btn or button or similar?</p>\n\n<p>Should classes be plural or singular?  I get that IDs should be singular due to them being unique, but what about classes?</p>\n\n<p>IDs and classes should use nouns, right?</p>\n\n<p>I am using pages that inject other pages in the existing pages, kind of like partial pages ... hence... I was wondering if anybody as prefixed a name in front of IDs and/or classes .. kind of like a namespace or similar?</p>\n\n<p>Any comments or insights really appreciated.</p>\n",
            "last_activity_date": 1425560892,
            "question_id": 939909,
            "score": 40,
            "tags": [
                "html",
                "css",
                "xhtml",
                "naming-conventions"
            ],
            "title": "HTML naming conventions for ID, class and to include element type prefix?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>A <em>height of 100%</em> for is, presumably, the height of your <em>browser's inner window</em>, because that is the <strong>height of its parent</strong>, the page. An <em><code>auto</code> height</em> will be the <em>minimum height</em> of <em>necessary to contain</em> .</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><code>height:100%</code> implies the element is going to have the 100% height of its parent container.</p>\n\n<p><code>height:auto</code> means, the element will have flexible height i.e. its height will depend upon the height of children elements of it</p>\n\n<p>Consider below example:</p>\n\n<p><strong>height:100%</strong></p>\n\n<pre><code>&lt;div style=\"height:50px\"&gt;\n    &lt;div id=\"innerDiv\" style=\"height:100%\"&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><code>#innerDiv</code> is going to have <code>height:50px</code></p>\n\n<p><strong>height:auto</strong></p>\n\n<pre><code>&lt;div style=\"height:50px\"&gt;\n    &lt;div id=\"innerDiv\" style=\"height:auto\"&gt;\n          &lt;div id=\"evenInner\" style=\"height:10px\"&gt;\n          &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>now the <code>#innerDiv</code> is going to have <code>height:10px</code></p>\n",
                    "is_accepted": true,
                    "score": 65
                }
            ],
            "body": "<p>I was asked a question in an interview that \"what is the difference between the css <code>height:100%</code> and <code>height:auto</code>?\" </p>\n\n<p>Can any one explain?</p>\n",
            "last_activity_date": 1365667441,
            "question_id": 15943009,
            "score": 33,
            "tags": [
                "css"
            ],
            "title": "difference between css height : 100% vs height : auto"
        },
        {
            "answer_count": 18,
            "answers": [
                {
                    "body": "<p>Fundamentally - no. That's about as easy as it gets. You might rewrite it a bit shorter/cleaner, but the idea will be the same. This is how I would write it:</p>\n\n<pre><code>$c = true; // Let's not forget to initialize our variables, shall we?\nforeach($posts as $post)\n    echo '&lt;div'.(($c = !$c)?' class=\"odd\"':'').\"&gt;$post&lt;/div&gt;\";\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Maybe a function with a static variable?</p>\n\n<pre><code>&lt;?php\n\nfunction alternate_row_color($css_class) {\n    static $show = true;\n\n    $show = !$show;\n\n    if ($show) {\n        return $css_class;\n    } else {\n        return NULL;\n    }\n}\n\n?&gt;\n</code></pre>\n\n<p>Then to use it (using your example):</p>\n\n<pre><code>&lt;?php foreach($posts as $post) { ?&gt;\n    &lt;div class=\"&lt;?=alternate_row_color('odd')?&gt;\"&gt;\n        &lt;?=$post?&gt;\n    &lt;/div&gt;\n&lt;?php } ?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It's short enough as it is, but I would probably wrap it into some helper function with a clear name. That way it's more obvious what's going on and you won't have to repeat that logic in all templates where you need it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;?php $alt = true; foreach ($posts as $post): $alt = !$alt; ?&gt;\n&lt;div&lt;?php echo $alt ? ' class=\"odd\"' : ''; ?&gt;&gt;\n    &lt;!-- Content --&gt; \n&lt;/div&gt;  \n&lt;?php endforeach ?&gt;\n</code></pre>\n\n<p>Would be the simplest and clearest way to do it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Smarty has it inbuilt:</p>\n\n<pre><code>{section name=rows loop=$data}\n&lt;tr class=\"{cycle values=\"odd,even\"}\"&gt;\n   &lt;td&gt;{$data[rows]}&lt;/td&gt;\n&lt;/tr&gt;\n{/section}\n</code></pre>\n\n<p>So does Django:</p>\n\n<pre><code>{% for o in some_list %}\n    &lt;tr class=\"{% cycle 'row1' 'row2' %}\"&gt;\n        ...\n    &lt;/tr&gt;\n{% endfor %}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Using CSS3 you can do something like this:</p>\n\n<pre><code>div:nth-child(odd)\n{\n  background-color: red\n}\n</code></pre>\n\n<p>But better not use that for a few years if you actually want your users to see the color...</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If you want to do it on the display end and are comfortable with or otherwise already using javascript, libraries like jQuery will often have <a href=\"http://docs.jquery.com/Selectors/odd\" rel=\"nofollow\" title=\":odd\">:odd</a> and <a href=\"http://docs.jquery.com/Selectors/even\" rel=\"nofollow\" title=\":even\">:even</a> selectors, which you can then hook up to adding specific <a href=\"http://docs.jquery.com/CSS/css#namevalue\" rel=\"nofollow\" title=\"style properties\">style properties</a> or hooking into CSS more generally by <a href=\"http://docs.jquery.com/Attributes/addClass#class\" rel=\"nofollow\" title=\"adding classes\">adding classes</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you'd like to have less in-line PHP, a great way of doing it is via JavaScript.</p>\n\n<p>Using jQuery, it's simply:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n$('div:odd').css('background-color', 'red');\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Just for fun </p>\n\n<p>Assuming you can use CSS3 selectors you can do something like</p>\n\n<pre><code>&lt;div class=\"posts\"&gt;\n&lt;? foreach($posts as $post){?&gt;\n    &lt;div&gt;\n        &lt;?=$post?&gt;\n    &lt;/div&gt;\n&lt;? }?&gt;\n&lt;/div&gt;\n\n&lt;style&gt;\n    div.posts div:odd{background-color:red;}\n&lt;/style&gt;\n</code></pre>\n\n<p>Even with CSS2 support and mootools (javascript library) you can substitute the style with this javascript </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    // obviously this script line should go in a js file in a onload (or onDomReady) function\n    $$('div.posts div:odd').setStyle('background-color','red');\n&lt;/script&gt;\n</code></pre>\n\n<p>If you don't have anything but php a it you can simplify a bit yous code using an array</p>\n\n<pre><code>&lt;? $isodd=array('','odd');\n   $c=0;\n   foreach($posts as $post){?&gt;\n    &lt;div class=\"&lt;?=$isodd[$c++%2]?&gt;\"&gt;\n        &lt;?=$post?&gt;\n    &lt;/div&gt;\n&lt;? }?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can encapsulate the logic as follows:</p>\n\n<pre><code>&lt;?php\n\nclass ListCycler {\n    private $cols, $offs, $len;\n\n    // expects two or more string parameters\n    public function __construct() {\n        $this-&gt;offs = -1;\n        $this-&gt;len = func_num_args();\n        $this-&gt;cols = func_get_args();\n\n        foreach($this-&gt;cols as &amp;$c)\n            $c = trim(strval($c));\n    }\n\n    // the object auto-increments every time it is read\n    public function __toString() {\n        $this-&gt;offs = ($this-&gt;offs+1) % $this-&gt;len;\n        return $this-&gt;cols[ $this-&gt;offs ];\n    }\n}\n?&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;style&gt;\n    ul#posts li.odd { background-color:red; }\n    ul#posts li.even { background-color:white; }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div&gt;\n    &lt;h3&gt;Posts:&lt;/h3&gt;\n    &lt;ul id=\"posts\"&gt;&lt;?php\n        $rc = new ListCycler('odd','even');\n        foreach($posts as $p)\n            echo \"&lt;li class='$rc'&gt;$p&lt;/li&gt;\";\n    ?&gt;&lt;/ul&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>On a side noe, to alternate between two values <em>a</em> and <em>b</em>, a nice way of doing it in a loop is this:</p>\n\n<pre><code>x = a;\nwhile ( true ) {\n    x = a + b - x;\n}\n</code></pre>\n\n<p>You can also do this without addition and subtraction:</p>\n\n<pre><code>x = a ^ b ^ x;\n</code></pre>\n\n<p>where <em>^</em> is the XOR operation.</p>\n\n<p>If you just want to alternate between 0 and 1, you can do this:</p>\n\n<pre><code>x = 0;\nwhile ( true ) {\n    x = !x;\n}\n</code></pre>\n\n<p>You could of course use <em>x</em> as an index of colors, CSS style classes and so on.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Been using something like this:</p>\n\n<pre><code>&lt;?php\nfunction cycle(&amp;$arr) {\n    $arr[] = array_shift($arr);\n    return end($arr); \n}\n\n$oddEven = array('odd', 'even');\necho cycle($oddEven).\"\\n\";\necho cycle($oddEven).\"\\n\";\necho cycle($oddEven).\"\\n\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>i always name my zebra rows \"row0\" and \"row1\" - this makes the code a bit simpler.</p>\n\n<pre><code>&lt;?php  // you should always use the full opening tag for compatibility\n$i = 0;\nforeach ($rows as $row) {\n    echo '&lt;tr class=\"row' . ($i++ % 2) . '\"&gt;...&lt;/tr&gt;';\n} \n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>function row_color($cnt,$even,$odd) { \necho ($cnt%2) ? \"&lt;tr bgcolor=\\\"$odd\\\"&gt;\" : \"&lt;tr bgcolor=\\\"$even\\\"&gt;\"; \n} \n</code></pre>\n\n<p>How to use:</p>\n\n<pre><code>$cnt=0;\nwhile ($row = mysql_fetch_array ($result)) {\nrow_color($cnt++,\"e0e0e0\",\"FFFFFF\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A simple little function that works well for me.</p>\n\n<pre><code> &lt;?php \nclass alternating_rows()\n{\n    private $cycler = true;\n//------------------------------------------------------------------------------\n    function rowclass($row0,$row1)\n    {\n        $this-&gt;cycler = !$this-&gt;cycler;//toggle the cycler\n        $class=($this-&gt;cycler)?$row0:$row1;\n        return $class;\n    }// end function rowclass\n//------------------------------------------------------------------------------    \n\n}//end class alternating rows\n?&gt;\n&lt;?php $tablerows= new alternating_rows();?&gt;\n&lt;table&gt;\n  &lt;tr&gt;\n    &lt;th scope=\"col\"&gt;Heading 1&lt;/th&gt;\n    &lt;th scope=\"col\"&gt;Heading 2&lt;/th&gt;\n  &lt;/tr&gt;\n  &lt;?php foreach ($dataset as $row){?&gt;\n  &lt;tr class=\"&lt;?php echo $tablerows-&gt;rowclass(\"oddrow\",\"evenrow\"); ?&gt;\"&gt;\n    &lt;td&gt;some data&lt;/td&gt;\n    &lt;td&gt;some more data&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;?php } //end foreach?&gt;\n&lt;/table&gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can abuse the $GLOBAL scope to store the current selected class state, see below table_row_toggle() function. Yes, I know its dirty to abuse the $GLOBAL scope, but hey, we're here to fix problems ain't we? :)</p>\n\n<p>Calling the table row toggle function in HTML:</p>\n\n<pre><code>&lt;tr &lt;? table_row_toggle(); ?&gt;&gt;\n</code></pre>\n\n<p>The function in PHP:</p>\n\n<pre><code>/* function to toggle row colors in tables */\nfunction table_row_toggle() {\n    /* check if $trclass is defined in caller */\n    if(array_key_exists('trclass', $GLOBALS)) {\n        $trclass = $GLOBALS['trclass'];\n    }   \n\n    /* toggle between row1 and row2 */\n    if(!isset($trclass) || $trclass == 'row2') {\n        $trclass = 'row1';\n    } else {\n        $trclass = 'row2';\n    }   \n\n    /* set $trclass in caller */\n    $GLOBALS['trclass'] = $trclass;\n\n    /* write the desired class to the caller */\n    echo ' class=\"' . $trclass . '\"';\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>    &lt;?php   ($i%2==1) ? $bgc='#999999' : $bgc='#FFFFFF'; ?&gt;\n    '&lt;div bgcolor=\" bgcolor='.$bgc.'\"&gt;';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In PHP I am using this code:</p>\n\n<pre><code>function alternate($sEven = \"even\", $sOdd = \"odd\")\n{\n    static $iCount;\n    return ($iCount++ &amp; 1) ? $sOdd :$sEven;\n}\n\nfor($i = 0; $i&lt; 5; $i++)\necho alternate();\n\n\n/*output:\n\neven\nodd\neven\nodd\neven\n\n*/\n</code></pre>\n\n<p>Source: <a href=\"http://sklueh.de/2013/11/einfache-alternierung-mit-php/\" rel=\"nofollow\">http://sklueh.de/2013/11/einfache-alternierung-mit-php/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Here's a PHP example of mine. Can anyone find a shorter/easier way to do this?</p>\n\n<pre><code>&lt;? foreach($posts as $post){?&gt;\n    &lt;div class=\"&lt;?=($c++%2==1)?\u2018odd\u2019:NULL?&gt;\"&gt;\n    \t&lt;?=$post?&gt;\n    &lt;/div&gt;\n&lt;? }?&gt;\n\n&lt;style&gt;\n    .odd{background-color:red;}\n&lt;/style&gt;\n</code></pre>\n\n<p>Examples in other languages would be fun to see as well.</p>\n",
            "last_activity_date": 1384001003,
            "question_id": 399137,
            "score": 22,
            "tags": [
                "php",
                "html",
                "css",
                "colors"
            ],
            "title": "Easiest way to alternate row colors in PHP/HTML?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>I added:</p>\n\n<pre><code>html,body\n{\n    width: 100%;\n    height: 100%;\n    margin: 0px;\n    padding: 0px;\n    overflow-x: hidden; \n}\n</code></pre>\n\n<p>into your CSS at the very top above the other classes and it seemed to fix your issue.</p>\n\n<p><a href=\"http://jsfiddle.net/G8kaL/\">Your updated .css file is available here</a></p>\n",
                    "is_accepted": false,
                    "score": 62
                },
                {
                    "body": "<p>The problem is in the file : </p>\n\n<p>style.css - line 721</p>\n\n<pre><code>#sub_footer {\n    background: url(\"../images/exterior/sub_footer.png\") repeat-x;\n    background: -moz-linear-gradient(0% 100% 90deg,#102c40, #091925);\n    background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#091925), to(#102c40));\n    -moz-box-shadow: 3px 3px 4px #999999;\n    -webkit-box-shadow: 3px 3px 4px #999999;\n    box-shadow: 3px 3px 4px #999999;\n    padding-top:10px;\n    font-size:9px;\n    min-height:40px;\n}\n</code></pre>\n\n<p>remove the lines :</p>\n\n<pre><code>-moz-box-shadow: 3px 3px 4px #999999;\n-webkit-box-shadow: 3px 3px 4px #999999;\nbox-shadow: 3px 3px 4px #999999; \n</code></pre>\n\n<p>This basically gives a shadow gradient only to the footer. In Firefox, it is the first line that is causing the problem.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've also had the same issue ( <a href=\"http://stackoverflow.com/questions/5804441/website-body-background-rendering-a-right-white-margin-in-iphone-safari\">Website body background rendering a right white margin in iPhone Safari</a> ) and found that adding the background image to the <code>&lt;html&gt;</code> tag fixed the problem.</p>\n\n<p><strong>Before</strong></p>\n\n<pre><code>body {background:url('images/back.jpg');}\n</code></pre>\n\n<p><strong>After</strong></p>\n\n<pre><code>html, body {background:url('images/back.jpg');}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This question has been hanging around for a while, but none of the fixes I could find worked for me (having the same issue with ipad), but I managed my own solution which should work for most people I imagine.</p>\n\n<p>Here's my code:</p>\n\n<p><code>\nhtml {\n    background: url(\"../images/blahblah.jpg\") repeat-y;\n    min-width: 100%;\n    background-size: contain;\n}\n</code></p>\n\n<p>Enjoy!</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>After exploring some of the helpful strategies provided here, I found that I only needed to add iOS specific CSS (I put it at the bottom of my main css sheet.) Seems like hiding the overflow-x was the answer for me. I assume that stating the width at 100% helps in the event that my content goes wide. It should be noted that I was only having this issue in iOS. If it is also in Firefox, just the html and body block should probably be used as the @media is specifically targeting mobile devices.</p>\n\n<pre><code>@media\nonly screen and (-webkit-min-device-pixel-ratio: 1.5),\nonly screen and (-o-min-device-pixel-ratio: 3/2),\nonly screen and (min--moz-device-pixel-ratio: 1.5),\nonly screen and (min-device-pixel-ratio: 1.5){\n\n  html,\n  body{\n    width:100%;\n    overflow-x:hidden;\n  }\n\n}\n</code></pre>\n\n<p>Please hip me if this seems incorrect to anyone :)</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Apparently the (-o-min-device-pixel-ratio: 3/2) is causing problems.  On my test site it was causing the right side to be cut off.  I found a workaround on <a href=\"https://github.com/cloudhead/less.js/issues/717\" rel=\"nofollow\">github</a> that works for now. Using(-o-min-device-pixel-ratio: ~\"3/2\") seems to work fine. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I was experiencing the white line to the right on my iPad as well in horizontal position only. I was using a fixed-position div with a background set to 960px wide and z-index of -999. This particular div only shows up on an iPad due to a media query. Content was then placed into a 960px wide div wrapper.\nThe answers provided on this page were not helping in my case.\nTo fix the white stripe issue I changed the width of the content wrapper to 958px. Voil\u00e1. No more white right white stripe on the iPad in horizontal position.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I see the question has been answered to a general standard, but when I looked at your site I noticed there is still a horizontal scroll-bar. I also notice the reason for this:\nYou have used the code:</p>\n\n<pre><code>.homepageconference .container {\npadding-left: 12%;\n}\n</code></pre>\n\n<p>which is being used alongside code stating that the element has a width of 100%, causing an element with a total width of 112% of screen size. To fix this, either remove the padding, replace the padding with a margin of 12% for the same effect, or change the width (or max-width) of the element to 88%. This occurs in main.css at line 343. Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Debug your CSS for Ghost CSS Elements.</strong></p>\n\n<p>Use this bookmark to debug your CSS: <a href=\"http://wernull.com/2013/04/debug-ghost-css-elements-causing-unwanted-scrolling/\" rel=\"nofollow\">http://wernull.com/2013/04/debug-ghost-css-elements-causing-unwanted-scrolling/</a></p>\n\n<p>In my case a Facebook Like Button caused the problem. </p>\n\n<p>PS: \nThe <code>overflow-x: hidden;</code> solution caused problems for me in Android Firefox.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I had the same issue, so tried a few things. One of which seemed to work for me - removing the width and adding a float to the body tag.</p>\n\n<p>May not work for all instances, but in the scenario I recently had, hiding overflow on content elements was a no go...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is a pretty old question, but I thought I'd add my 2 cents.  I've tried the above solutions, including the ghost css, which I will definitely be saving for future use.  But none of these worked in my situation.  Here's how I fixed my issue.  Hopefully this will help someone else. </p>\n\n<p>Open inspector (or whatever your preference) and starting with the first div in body tag,  add <code>display: none;</code> to just that element.  If the scroll bar disappears, you know that element contains the element that's causing the issue.  Then, remove the first css rule and go down one level into the containing element.  Add the css to that div, and if the scroll bar goes away, you know that element is either causing, or containing the offending element.  If adding the CSS does nothing, you know it was not that div that caused the issue, and either another div in the container  is causing it, or the container itself is causing it.  </p>\n\n<p>This may be too time consuming for some.  Lucky for me, my issue was in the header, but I can imagine this taking a bit of time if your issue was say, in the footer or something.  </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>overflow-x: hidden;</code> works perfect for me.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Our webpage background images are having problems in FireFox as well as Safari in iOS on iPads/iPhones with white space showing up on the right side of the page. </p>\n\n<p>The background images extend fine on other browsers but we're having difficulty not extending the full length of the browser on those browsers. </p>\n\n<p>Take a <a href=\"http://www.visibleequity.com\" rel=\"nofollow\">look at our site on FireFox</a> to see what I mean. </p>\n",
            "last_activity_date": 1412394991,
            "question_id": 4617872,
            "score": 15,
            "tags": [
                "html",
                "css"
            ],
            "title": "White space showing up on right side of page when background image should extend full length of page"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You do not need to do an <code>else</code>.  <strike>It is implied</strike>.  So</p>\n\n<pre><code>// put your other stylesheets here\n\n&lt;!--[if lt IE 9]&gt;\n    //put your stylesheet here for less than ie9\n&lt;![endif]--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You're not looking for an else, you're looking for <code>&lt;![if !IE]&gt; &lt;something or other&gt; &lt;!--[endif]&gt;</code> (note that this is not a comment).</p>\n\n<pre><code>&lt;!--[if IE]&gt;\n   You're using IE!\n&lt;![endif]--&gt;\n&lt;![if !IE]&gt;\n   You're using something else!\n&lt;![endif]&gt;\n</code></pre>\n\n<p>You can find documentation on the conditional comments <a href=\"http://reference.sitepoint.com/css/conditionalcomments\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 74
                },
                {
                    "body": "<p>conditional comments can be in scripts as well as in html-</p>\n\n<pre><code>/*@cc_on\n@if(@_jscript_version&gt; 5.5){\n    navigator.IEmod= document.documentMode? document.documentMode:\n    window.XMLHttpRequest? 7: 6;\n\n}\n@else{\n    alert('your '+navigator.appName+' is older than dirt.');\n}\n@end\n@*/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I use the following to load resources in IE9 or newer and all other browsers</p>\n\n<pre><code>&lt;!--[if gte IE 9]&gt;&lt;!--&gt;        \n    //your style or script\n&lt;!--&lt;![endif]--&gt;\n</code></pre>\n\n<p>This is hard to believe. Look the opening and closing if statement sections are inside comments (so, its not visible to other browsers) but visible to IE.    </p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>The solution for your problem is (note the use of <code>&lt;!-- --&gt;</code>): </p>\n\n<pre><code>&lt;!--[if lt IE 9]&gt;\n  This is less then IE9\n&lt;![endif]--&gt;\n&lt;!--[if gt IE 8]&gt; &lt;!-- --&gt;\n  this is all browsers: IE9 or higher, firefox, chrome, etc.\n&lt;!-- &lt;![endif]--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code>&lt;!--[if lt IE 9]&gt;\n    This is less then IE9\nELSE\n    this is all browsers: firefox, chrome, etc.\n&lt;![endif]--&gt;\n</code></pre>\n\n<p>How do I do this in my HTML? I want to do an \"else\" ...</p>\n",
            "last_activity_date": 1421921149,
            "question_id": 6742087,
            "score": 43,
            "tags": [
                "javascript",
                "html",
                "css",
                "internet-explorer-9"
            ],
            "title": "How do I make an &quot;else&quot; in an IE HTML conditional?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>If you're using HTML 5, why not use the <code>progress</code> tag?</p>\n\n<pre><code>&lt;progress value=\"1534602\" max=\"4603807\"&gt;33%&lt;/progress&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>The <code>&lt;input type=\"range\"&gt;</code> is pretty new and you are already attempting to customize it with CSS. :)</p>\n\n<p>I wouldn't try that for two reasons:</p>\n\n<ol>\n<li><p>there <strong>might be huge compatibility issues now and for the next few (or many) years</strong>.\nThink that in nowdays a form control like <code>&lt;select&gt;</code> (available since the web started) is still problematic to be customized with CSS in a cross browser way. For instance if you set a <code>padding</code> for the select boxes, many browser (IE7, OPERA9, CHROME5, SAFARI4) will totally ignore the padding.\nIt works only IE8 and on FF 3.6. (all tests done with HTML5 DOCTYPE so in standard mode).</p></li>\n<li><p>The <code>&lt;input type=\"range\"&gt;</code> has been created to <strong>show a slider NOT a progress bar</strong>, attempting to cheat on it with CSS in order to transform a slider into progress bar it sounds bizarre. Like trying to use CSS to change a <code>&lt;textarea&gt;</code> into a table, but why don't you simply use a <code>&lt;table&gt;</code> to render tables?!</p></li>\n</ol>\n\n<p>To show a progress bar in HTML5 you should follow the suggestion given by <em>marcgg</em> in his answer. Since no browser is currently rendereing it you could use a simple div with a p inside like this:</p>\n\n<pre><code>&lt;div id=\"progress\" style=\"position:relative; width:100px; height:20px; border:1px solid #cccccc;\"&gt;\n   &lt;p style=\"position:absolute; left:0; top:0; background-color:#0000ff; height:100%; width:30%; font-size:0px;\"&gt;&amp;nbsp;&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Then simply update the <code>style.width</code> of inner <code>P</code> element in percent like:</p>\n\n<pre><code>width: 75%\n</code></pre>\n\n<p>FYI: if you want to do that in simple JS here is the code:</p>\n\n<pre><code>document.getElementById('progress').(getElementsByTagName('p')[0]).style.width = '75%';\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>You can in Webkit, through the :-webkit-slider-thumb pseudo-element: <a href=\"http://jsfiddle.net/leaverou/BNm8j/\">http://jsfiddle.net/leaverou/BNm8j/</a></p>\n\n<p>Although the others are right about input type=\"range\" not being the right element for the job.</p>\n\n<p>You should use the &lt;progress&gt; element and for browsers that don't support it, this polyfill: <a href=\"http://leaverou.me/polyfills/progress/\">http://leaverou.me/polyfills/progress/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>input[type='range'] {\n    -webkit-appearance: none !important;\n    background:red;\n    height:7px;\n}\ninput[type='range']::-webkit-slider-thumb {\n    -webkit-appearance: none !important;\n    background:blue;\n    height:10px;\n    width:10px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 48
                },
                {
                    "body": "<p>You can edit the css of the range input, using <code>input[type=\"range\"]::-webkit-slider-thumb</code> and <code>input[type=\"range\"]</code></p>\n\n<p>Here is the example of it,</p>\n\n<p><a href=\"http://webstutorial.com/range-input-slider-html5-css3/html-5\">http://webstutorial.com/range-input-slider-html5-css3/html-5</a></p>\n\n<p>I know this is already answered but just sharing it.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>jQuery Tools provides a plug-in that creates stylable elements from a range input, and what's more, makes it still work as a slider in older browsers that don't support <code>input[type=range]</code>. </p>\n\n<p>Allows you to style:</p>\n\n<ul>\n<li>the handle</li>\n<li>the slider</li>\n<li>optional progress fill</li>\n<li>value output field</li>\n</ul>\n\n<p>I've used it many times and it's a great tool.</p>\n\n<p>WARNING: doesn't work on touch devices. I don't have as much experience with it, but you could try the jQuery mobile slider: <a href=\"http://view.jquerymobile.com/1.3.0/docs/widgets/sliders/\" rel=\"nofollow\">http://view.jquerymobile.com/1.3.0/docs/widgets/sliders/</a></p>\n\n<p><a href=\"http://jquerytools.org/demos/rangeinput/index.html\" rel=\"nofollow\">http://jquerytools.org/demos/rangeinput/index.html</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>See <a href=\"http://afarkas.github.io/webshim/demos/demos/webforms/styler/index.html?range\" rel=\"nofollow\">http://afarkas.github.io/webshim/demos/demos/webforms/styler/index.html?range</a></p>\n\n<p>It's a tool that produces cross-browser code to style both native and webshims range inputs like you want.</p>\n\n<pre><code>.ws-range, input[type=\"range\"] {\n    /* Range styles: width, height, border-radius, background */\n    -webkit-appearance: none;cursor: pointer;border: 0;outline: none;padding: 0;margin: 20.5px 0;\n}\n.ws-range .ws-range-thumb {\n    /* Thumb styles: width, height, border, border-radius, background */\n}\n.ws-range.ws-focus .ws-range-thumb {\n    /* Thumb focus styles: border-color, background */\n}\n.ws-range.ws-active .ws-range-thumb {\n    /* Thumb active styles: border-color, background */\n}\n.ws-range .ws-range-min {\n    /* Thumb progress styles: display, background */\n    border-radius: /* same as range */;\n    height: 100%;\n}\ninput[type=\"range\"]::-moz-range-track {\n    border: none;background: transparent;\n}\ninput[type=\"range\"]::-ms-tooltip {\n    display: none;\n}\ninput[type=\"range\"]::-webkit-slider-thumb {\n    /* Thumb styles: width, height, border, border-radius, background */\n    -webkit-appearance: none;\n}\ninput[type=\"range\"]::-ms-track {\n    /* Range styles: width, height, border-radius, background */\n    color: transparent;border: 0;\n}\ninput[type=\"range\"]::-moz-range-thumb {\n    /* Thumb styles: width, height, border, border-radius, background */\n}\ninput[type=\"range\"]::-ms-thumb {\n    /* Thumb styles: width, height, border, border-radius, background */\n}\ninput[type=\"range\"]:focus::-webkit-slider-thumb {\n    /* Thumb focus styles: border-color, background */\n}\ninput[type=\"range\"]:focus::-moz-range-thumb {\n    /* Thumb focus styles: border-color, background */\n}\ninput[type=\"range\"]:focus::-ms-thumb {\n    /* Thumb focus styles: border-color, background */\n}\ninput[type=\"range\"]:active::-webkit-slider-thumb {\n    /* Thumb active styles: border-color, background */\n}\ninput[type=\"range\"]:active::-moz-range-thumb {\n    /* Thumb active styles: border-color, background */\n}\ninput[type=\"range\"]:active::-ms-thumb {\n    /* Thumb active styles: border-color, background */\n}\ninput[type=\"range\"]::-moz-range-progress {\n    /* Thumb progress styles: display, background */\n    border-radius: /* same as range */;\n    height: 100%;\n}\ninput[type=\"range\"]::-ms-fill-lower {\n    /* Thumb progress styles: display, background */\n    border-radius: /* same as range */;\n    height: 100%;\n}\n.no-cssrangeinput input[type=\"range\"] {\n    background: transparent;margin: 0;border: 0;min-height: 51px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>When I looked at this question I needed something simple. There are already a number of framework answers on how to do this, but sometimes it is more lightweight and flexible just to create your own. Of course, you get a certain amount for free with a framework (and it is often the right choice if it is a good fit), but you then have to worry about framework compatibility, support and digging into the depths of the framework to go outside its boundaries.</p>\n\n<p>Here is a simple javascript-only slider. Basically it is an img for the slider, an img for the button and a callback with a progress percent. Not an all-singing and dancing slider, but something simple to build on.</p>\n\n<p><strong><a href=\"http://jsfiddle.net/HnyLN/\" rel=\"nofollow\">The demo</a></strong></p>\n\n<p><strong>The HTML</strong> </p>\n\n<pre><code>&lt;div id='bb_sliderContainer'  ondragstart=\"return false;\" ondrop=\"return false;\"&gt;\n    &lt;img id='bb_slider' src='slider.png'/&gt;\n    &lt;img id='bb_sliderButton' src='sliderbutton.png'/&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>The script</strong></p>\n\n<p>Place in a javascript file:    </p>\n\n<pre><code>(function(bb,undefined){    \nbb.Slider = function(buttonCssId,sliderCssId,initialPercentage,progressUpdate)\n{\n    var halfButtonWidth = 5;\n    var sliderMoving = false;\n    var buttonElement = document.getElementById(buttonCssId);\n    var sliderElement = document.getElementById(sliderCssId);                \n    var length = sliderElement.clientWidth;                \n    var leftPos = 0;\n    var rightPos = leftPos + length;\n    length = rightPos - leftPos;              \n\n    if( initialPercentage )\n    {\n        var buttonPos = leftPos + initialPercentage / 100 * length;\n        buttonElement.style.left = buttonPos - halfButtonWidth + 'px';  \n    }        \n\n    buttonElement.addEventListener( 'mousedown', function(){ \n        sliderMoving = true;\n    } );        \n\n    document.addEventListener( 'mousemove', function(event){\n        if( sliderMoving == true )\n        {                      \n            var rect = sliderElement.getBoundingClientRect();                                                                        \n            var mouseX = event.clientX - rect.left;\n            var prop = mouseX / length;\n            if( prop &lt; 0 )\n            {\n                prop = 0;\n                mouseX = 0;\n            }\n            if( prop &gt; 1 )\n            {\n                prop = 1;\n                mouseX = length;\n            }                \n            buttonElement.style.left = leftPos + prop * length - halfButtonWidth + 'px';                \n            progressUpdate(prop * 100);         \n        }\n    });\n    document.addEventListener( 'mouseup', function(){\n        sliderMoving = false;\n    });\n}    \n}(window.bb = window.bb || {}));\n</code></pre>\n\n<p><strong>Example use</strong></p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;img src='space.png' style='width:50%;position:relative;top:20px' id='bb_sliderSubject'&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>function sliderUpdate(percentage)\n{\n    var sliderSubject = document.getElementById('bb_sliderSubject');\n    sliderSubject.style.width = percentage + '%';\n}\nwindow.onload=function()\n{\n    var slider = new bb.Slider('bb_sliderButton','bb_slider',50,sliderUpdate);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is an example:</p>\n\n<pre><code>&lt;style&gt;\n        input[type='range'] {\n            -webkit-appearance: none;\n            border-radius: 5px;\n            box-shadow: inset 0 0 5px #333;\n            background-color: #999;\n            height: 10px;\n            vertical-align: middle;\n        }\n        input[type='range']::-moz-range-track {\n            -moz-appearance: none;\n            border-radius: 5px;\n            box-shadow: inset 0 0 5px #333;\n            background-color: #999;\n            height: 10px;\n        }\n        input[type='range']::-webkit-slider-thumb {\n            -webkit-appearance: none !important;\n            border-radius: 20px;\n            background-color: #FFF;\n            box-shadow:inset 0 0 10px rgba(000,000,000,0.5);\n            border: 1px solid #999;\n            height: 20px;\n            width: 20px;\n        }\n        input[type='range']::-moz-range-thumb {\n            -moz-appearance: none;\n            border-radius: 20px;\n            background-color: #FFF;\n            box-shadow:inset 0 0 10px rgba(000,000,000,0.5);\n            border: 1px solid #999;\n            height: 20px;\n            width: 20px;\n        }\n    &lt;/style&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to customize the looks of the range input type in HTML5 to look something like a progress bar. I've tried applying some common CSS attributes using CSS class but it seems that they are not working.</p>\n\n<p>Can any one direct me how to customize it??</p>\n",
            "last_activity_date": 1408771389,
            "question_id": 3556157,
            "score": 31,
            "tags": [
                "css",
                "html5"
            ],
            "title": "How to customize the HTML5 input range type looks using CSS?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>To start with the fact that I do not know the answer but would good old browser capability detection work like:</p>\n\n<pre><code>if (document.images)\n</code></pre>\n\n<p>But in your case you would use the css3 property you want to use?</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>Maybe you are looking for something like this? <a href=\"http://www.filamentgroup.com/lab/delivering%5Fthe%5Fright%5Fexperience%5Fto%5Fthe%5Fright%5Fdevice/\" rel=\"nofollow\">http://www.filamentgroup.com/lab/delivering%5Fthe%5Fright%5Fexperience%5Fto%5Fthe%5Fright%5Fdevice/</a></p>\n\n<p>The other thing to think about is what you want for default if JS is turned off.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I believe you can do it this way:</p>\n\n<pre><code>if ('WebkitTransform' in document.body.style \n || 'MozTransform' in document.body.style \n || 'OTransform' in document.body.style \n || 'transform' in document.body.style) \n{\n    alert('I can Rotate!');\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>There is a new DOM API <a href=\"http://dev.w3.org/csswg/css-conditional/#CSS-interface\" rel=\"nofollow\">CSS.supports</a> for that purpose. FF, Opera (as supportsCSS) and Chrome Canary already implement this method. </p>\n\n<p>For cross-browser compatibility you can use my <a href=\"https://github.com/termi/CSS.supports/\" rel=\"nofollow\">CSS.supports polyfill</a></p>\n\n<p>Example:</p>\n\n<p><code>\nCSS.supports(\"display\", \"table\");//IE&lt;8 return false\n</code></p>\n\n<p>But, you still need to specify browser prefix for prefixing css properties. For example:</p>\n\n<p><code>\nCSS.supports(\"-webkit-filter\", \"blur(10px)\");\n</code></p>\n\n<p>I suggest to using <a href=\"http://modernizr.com/\" rel=\"nofollow\">Modernizr</a> for feature-detection.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Is it possible in javascript to know if a css property is supported by the client browser? I'm talking about the rotation properties of css3, i want to execute some functions only if the browser supports them.</p>\n",
            "last_activity_date": 1371831722,
            "question_id": 1342994,
            "score": 16,
            "tags": [
                "javascript",
                "css"
            ],
            "title": "check browser css property support"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>IE doesn't use the text-shadow property.  You can alternately use filter as shows <a href=\"http://www.workingwith.me.uk/articles/css/cross-browser-drop-shadows\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You could use a filter in your css like so:</p>\n\n<pre><code>filter:DropShadow(Color=#000000, OffX=1, OffY=1)\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>{FILTER: DropShadow(Color=color, OffX=offX, OffY=offY, Positive=positive)}\n</code></pre>\n\n<ul>\n<li>Color is the name or RGB value of the color for the shadow.</li>\n<li>OffX and OffY are the number of pixels to offset the shadow from the object. Positive integers move the shadow to the right or down. Negative integers move the image to the left or up.</li>\n<li>Positive can be set to 1 or 0. For normal objects, Positive=1 creates a normal drop shadow and Positive=0 creates a shadow within the non-transparent region with the shadow direction reversed. For transparent objects, the reverse is true.</li>\n</ul>\n\n<p><a href=\"http://www.webdevelopersnotes.com/tips/html/creating_drop_shadows_using_style_sheets_text_effects_in_internet_explorer.php3\">Source</a></p>\n\n<p><a href=\"http://www.jegsworks.com/examples/demodhtml/filter-dropshadow.htm\">Demo</a></p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>Shadows made by filter:DropShadow aren't looking good.</p>\n\n<p>I use another element with position:absolute when I need a good-loking shadow:</p>\n\n<pre><code>.sample {position:relative}\n\n.sample p{position:relative;z-index:2;text-shadow:1px 1px 3px #000;}\n\n.sample p.shadow{position:absolute;zoom:1;z-index:1;\nfilter: progid:DXImageTransform.Microsoft.dropShadow(color=#000000,offX=1,offY=1)\n    progid:DXImageTransform.Microsoft.Alpha(opacity=25)\n    progid:DXImageTransform.Microsoft.Blur(pixelradius=2.15, enabled='true');\n    -ms-filter: \"progid:DXImageTransform.Microsoft.dropShadow(color=#000000,offX=1,offY=1)\"\n    \"progid:DXImageTransform.Microsoft.Alpha(opacity=25)\"\n    \"progid:DXImageTransform.Microsoft.Blur(pixelradius=2.15, enabled='true')\";\n    color: #111111;\n    top:-2px;\n    left:-2px;\n}\n\n*|html .sample p.shadow{display:none} /*hidden in other browsers*/\n\n&lt;div class=\"sample\"&gt;\n &lt;p&gt;text&lt;/p&gt;\n &lt;p class=\"shadow\"&gt;text&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>IE does use text-shadow, at least since IE 10.  You have to have all three distances set, (note the third value has \"px\", where the questioner didn't have the px, I didn't test to see if that matters, though):</p>\n\n<pre><code>.shadow{\n    text-shadow: 1px 1px 0px #FFFFFF;\n}\n</code></pre>\n\n<p>I also recommend having this meta tag:</p>\n\n<pre><code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /&gt;\n</code></pre>\n\n<p>Doesn't seem to work in IE 9 and prior.  Maybe the questioner was working in IE9.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm coding a webpage and here is how it looks in Firefox, Safari, Opera, and Chrome.</p>\n\n<p><img src=\"http://img404.imageshack.us/img404/5610/looksright.jpg\" alt=\"\"></p>\n\n<p>and here is how it looks in Internet Explorer (brace yourselves)</p>\n\n<p><img src=\"http://img209.imageshack.us/img209/8966/67189237.jpg\" alt=\"\"></p>\n\n<p>Where is the Text-shadow for Internet Explorer? This is driving me crazy! As you can see, this page kinda relies on it to look good (Not to mention the header-image looks like crap on IE as well)</p>\n\n<p>For example, I tried this (<a href=\"http://pastebin.ca/1994660\" rel=\"nofollow\">http://pastebin.ca/1994660</a>) and it didn't work.</p>\n\n<p>Here is the code:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=iso-8859-1\" /&gt;\n\n    &lt;title&gt;Jacob's CTF Highscores&lt;/title&gt;\n&lt;!--[if IE]&gt;&lt;style type=\"text/css\"&gt;\n\n\n\n&lt;/style&gt;\n&lt;![endif]--&gt;\n&lt;style&gt;\nbody {\nbackground: url(\"bg.png\") #6d6d6d;\nbackground-repeat:repeat-x;\nfilter: progid:DXImageTransform.Microsoft.DropShadow(\n      offx=1, offy=1, color=#000000);\n}\n#title {\n    background: url(\"title.png\");\n    width:450px;\n    height:74px;\n}\n* {padding:0;margin:0;}\n#mainwrap {\nmargin:0 auto;\nwidth:800px;\n}\n.whole {\nbackground: rgba(255, 255, 255, 0.5);\nborder:4px solid rgba(201, 201, 201, 0.5);\npadding:5px;\nmargin-bottom:10px;\n}\n.scores {\nwidth:77%;\npadding:0;margin:0;\nborder:4px solid #5E5E5E;\nbackground:#c2c2c2;\nfloat:left;\n}\n\n.navigation {\nwidth:20%;\npadding:0;margin:0;\nborder:4px solid #5E5E5E;\nfloat:left;\nmargin-right:5px;\n}\n.navigation ul {\n\nlist-style:none;\nmargin:0;\npadding:0;\nbackground:#c2c2c2;\n}\n\n.navigation ul li {\ndisplay:block;\nmargin:0;\npadding:0;\nfont-family:tahoma;\n}\n.mainlead {\ntext-transform:uppercase;\nfont-family:tahoma;\ntext-align:center;\ncolor:#78CF46;\nfont-weight:bold;\ntext-shadow:1px 1px 0 #000;\npadding:5px;\nbackground:#A3A3A3;\nborder-bottom:1px solid #5E5E5E;\n}\n#menutitle {\ntext-align:center;\ncolor:#005D9C;\nfont-weight:bold;\ntext-shadow:1px 1px 0 #000;\npadding:5px;\nbackground:#A3A3A3;\nborder-bottom:1px solid #5E5E5E;\n}\n.navigation ul li a {\ndisplay:block;\npadding:5px;\ntext-transform:uppercase;\ncolor:yellow;\nfont-size:16px;\ntext-align:left;\nfont-weight:bold;\ntext-shadow:1px 1px 0 #000;\ntext-decoration:none;\n}\n.navigation ul li a:hover {\ncolor:#fff;\nbackground:#B0B0B0;\n}\n#boards {\nborder-collapse:collapse;\nwidth:100%;\nfont-family:tahoma;\nfont-size:16px;\ntext-align:left;\nfont-weight:bold;\ntext-shadow:1px 1px 0 #000;\n}\n#boards td {\nborder-right:1px solid #5E5E5E;\ntext-align:center;\npadding:5px;\n}\n#head {\nborder:0px;\ncolor:#CC4949;\n}\ntr.thescores {\nborder-top:1px solid #5E5E5E;\ncolor:#478FF5;\n}\n#first {\ncolor:#C2C20E;\n}\n#second {\ncolor:#9C9C9C;\n}\n#third {\ncolor:#CD7F32;\n}\n&lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n\n&lt;div id=\"mainwrap\"&gt;\n&lt;div id=\"title\"&gt;&lt;/div&gt;\n&lt;div class=\"whole\"&gt;\n&lt;div class=\"navigation\"&gt;\n\n    &lt;div class=\"navwrap\"&gt;\n\n&lt;ul&gt;\n&lt;li id=\"menutitle\"&gt;&lt;div id=\"leaderboards\"&gt;Leaderboards&lt;/div&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a title=\"How many points you have.\" class=\"current\" href=\"?view=overall\"&gt;Overall&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a title=\"How many captures you've made.\" href=\"?view=captures\"&gt;Captures&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a title=\"Total kills by adding tags, explodes, and mines.\" href=\"?view=kills\"&gt;Kills&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a title=\"How many tags you've made on your side.\" href=\"?view=tags\"&gt;Tags&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a title=\"How many people you've blown up with TNT.\" href=\"?view=explodes\"&gt;Explodes&lt;/a&gt;&lt;/li&gt; \n&lt;li&gt;&lt;a title=\"How many people you've killed with your mines.\" href=\"?view=mines\"&gt;Mines&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n\n        &lt;/div&gt;\n\n&lt;/div&gt;\n\n&lt;div class=\"scores\"&gt;\n&lt;div class='mainlead'&gt;Overall Leaderboards&lt;/div&gt;\n\n&lt;table id=\"boards\"&gt;\n&lt;tr id=\"head\"&gt;&lt;td&gt;Rank&lt;/td&gt;&lt;td&gt;Username&lt;/td&gt;&lt;td&gt;Points&lt;/td&gt;&lt;td style=\"width:80px;\"&gt;Games&lt;/td&gt; &lt;td style=\"width:80px;\"&gt;Avg. Won&lt;/td&gt; &lt;/tr&gt;\n&lt;tr id=\"first\" class=\"thescores\"&gt;&lt;td&gt;1&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Guard&lt;/td&gt;&lt;td&gt;423&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr id=\"second\" class=\"thescores\"&gt;&lt;td&gt;2&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Jacob_&lt;/td&gt;&lt;td&gt;413&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr id=\"third\" class=\"thescores\"&gt;&lt;td&gt;3&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;NoobRUS&lt;/td&gt;&lt;td&gt;407&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;4&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Aanum&lt;/td&gt;&lt;td&gt;351&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;5&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Pandora&lt;/td&gt;&lt;td&gt;320&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;6&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Minec&lt;/td&gt;&lt;td&gt;300&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;7&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;warptera&lt;/td&gt;&lt;td&gt;275&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;4&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Aanum&lt;/td&gt;&lt;td&gt;351&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;5&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Pandora&lt;/td&gt;&lt;td&gt;320&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;6&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Minec&lt;/td&gt;&lt;td&gt;300&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;7&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;warptera&lt;/td&gt;&lt;td&gt;275&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;4&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Aanum&lt;/td&gt;&lt;td&gt;351&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;5&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Pandora&lt;/td&gt;&lt;td&gt;320&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;6&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Minec&lt;/td&gt;&lt;td&gt;300&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;7&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;warptera&lt;/td&gt;&lt;td&gt;275&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;4&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Aanum&lt;/td&gt;&lt;td&gt;351&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;5&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Pandora&lt;/td&gt;&lt;td&gt;320&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;6&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Minec&lt;/td&gt;&lt;td&gt;300&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;7&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;warptera&lt;/td&gt;&lt;td&gt;275&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;4&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Aanum&lt;/td&gt;&lt;td&gt;351&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;5&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Pandora&lt;/td&gt;&lt;td&gt;320&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;6&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Minec&lt;/td&gt;&lt;td&gt;300&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;7&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;warptera&lt;/td&gt;&lt;td&gt;275&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;4&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Aanum&lt;/td&gt;&lt;td&gt;351&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;5&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Pandora&lt;/td&gt;&lt;td&gt;320&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;6&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;Minec&lt;/td&gt;&lt;td&gt;300&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n&lt;tr class=\"thescores\"&gt;&lt;td&gt;7&lt;/td&gt;&lt;td style=\"text-align:left\"&gt;warptera&lt;/td&gt;&lt;td&gt;275&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1.4%&lt;/td&gt; &lt;/tr&gt;\n\n&lt;/table&gt;\n&lt;/div&gt;\n\n\n &lt;div style=\"clear:both;\"&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt;\n\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1382635535,
            "question_id": 4205478,
            "score": 14,
            "tags": [
                "css",
                "internet-explorer",
                "css3"
            ],
            "title": "Text Shadow in Internet Explorer?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can change your body class but you cannot change your style tag:</p>\n\n<h3>HTML:</h3>\n\n<pre><code>&lt;style title=\"css_style\" type=\"text/css\"&gt;\n.highlight\n{\n    background-color:#ff0000;   \n}\n&lt;/style&gt;\n</code></pre>\n\n<h3>JavaScript:</h3>\n\n<pre><code>$('body').toggleClass(\".highlight\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>jQuery always adds its CSS in the tag itself.</p>\n\n<p>I think you should use the <code>append()</code> function with a new body style rule.</p>\n\n<p>Like this:</p>\n\n<pre><code>var newRule = \"body{ /*your CSS rule here...*/ }\";\n$(\"style\").append(newRule);\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$(\"body\").css({ /*CSS rule...*/ });\n</code></pre>\n\n<p>I hope this is what you meant...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The are specific methods for manipulating stylesheets,</p>\n\n<p>DOM: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/CSSStyleSheet/insertRule\">insertRule()</a><br>\nMicrosoft: <a href=\"http://msdn.microsoft.com/en-us/library/aa358796%28VS.85%29.aspx\">addRule()</a></p>\n\n<p>I just made a method for jQuery(maybe somebody else already did, I don't know)</p>\n\n<pre><code>(\nfunction( $ )\n{\n  $.style={\n          insertRule:function(selector,rules,contxt)\n          {\n            var context=contxt||document,stylesheet;\n\n            if(typeof context.styleSheets=='object')\n            {\n              if(context.styleSheets.length)\n              {\n                stylesheet=context.styleSheets[context.styleSheets.length-1];\n              }\n              if(context.styleSheets.length)\n              {\n                if(context.createStyleSheet)\n                {\n                  stylesheet=context.createStyleSheet();\n                }\n                else\n                {\n                  context.getElementsByTagName('head')[0].appendChild(context.createElement('style'));\n                  stylesheet=context.styleSheets[context.styleSheets.length-1];\n                }\n              }\n              if(stylesheet.addRule)\n              {\n                for(var i=0;i&lt;selector.length;++i)\n                {\n                  stylesheet.addRule(selector[i],rules);\n                }\n              }\n              else\n              {\n                stylesheet.insertRule(selector.join(',') + '{' + rules + '}', stylesheet.cssRules.length);  \n              }\n            }\n          }\n        };\n  }\n)( jQuery );\n</code></pre>\n\n<p>Example usage:</p>\n\n<pre><code>$.style.insertRule(['p','h1'], 'color:red;')\n$.style.insertRule(['p'],      'text-decoration:line-through;')\n$.style.insertRule(['div p'],  'text-decoration:none;color:blue')\n</code></pre>\n\n<p>the second argument should be clear, the rules. As optional 3rd argument the context-document can be supplied.<br>\nThe first argument are the selectors as array-elements.<br>\nNote that you dont have to use there different selector separated by comma, as MSIE only accepts  \"Single contextual selectors\" as argument for addRule()</p>\n\n<p>Check out the fiddle: <a href=\"http://jsfiddle.net/doktormolle/ubDDd/\">http://jsfiddle.net/doktormolle/ubDDd/</a></p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>While not changing an existing style element, this works as a cross-browser way to create a new one:</p>\n\n<pre><code>$( \"&lt;style&gt;body { background: black; }&lt;/style&gt;\" ).appendTo( \"head\" )\n</code></pre>\n\n<p>By cascading, it'll override existing styles, which should do the trick.</p>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>I was able to modify the  section by adding to it's html.</p>\n\n<pre><code>var styleText = $('style').html();\nstyleText += '\\n' + '#TabName div ul li a {border-top-left-radius:5px;}';\n$('style').html(styleText);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to change the <code>background-color</code> of the <code>body</code> of my HTML document. My problem is that jQuery adds the style to the <code>body</code> tag, but I want to change the value in the <code>style</code> tag. Is this possible using jQuery?</p>\n\n<p><strong>Example-Code</strong></p>\n\n<pre><code>    &lt;style title=\"css_style\" type=\"text/css\"&gt;\n    body {\n      background-color:#dc2e2e;     /* &lt;- CHANGE THIS */\n      color:#000000;\n      font-family:Tahoma, Verdana;\n      font-size:11px;\n      margin:0px;\n      padding:0px;\n      background-image: url(http://abc.de/image.jpg);\n    }\n    &lt;/style&gt;\n\n    ...\n\n    &lt;body&gt;\n       // ....\n    &lt;/body&gt;\n</code></pre>\n\n<p><strong>jQuery</strong></p>\n\n<pre><code>$('body').css('background-color','#ff0000');\n</code></pre>\n\n<p><strong>Result</strong></p>\n\n<pre><code>&lt;body style=\"background-color:#ff0000;\"&gt;\n   // ....\n&lt;/body&gt;\n</code></pre>\n",
            "last_activity_date": 1408818485,
            "question_id": 4232557,
            "score": 12,
            "tags": [
                "jquery",
                "css",
                "stylesheet"
            ],
            "title": "jQuery CSS - Write into the &lt;style&gt;-tag"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>In general, you should only have one h1 per page, and that h1 should succintly represent the content on that page. As long as you are willing to style with CSS, find out which level of headings (h2, h3, h4, etc) that properly represent the headings you want to use, and then style them instead.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Semantically, I prefer using one h1 on the page, mainly for the title of the page. It probably doesn't matter too much with SEO, and with the way html is going with HTML5, the generic <code>header</code> tag will make it much simpler and this argument obsolete.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just remember that your h1s are used to indicate context, not layout. So, there's nothing inherently wrong with having several on a page.</p>\n\n<p>In this specific example, you need to decide if your left-nav h1s have the same contextual importance as your content h1s and your recent-news h1s. If a clear hierarchy exists in your mind, use your header tags to demonstrate it.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>In my opinion, you don't need to worry, its ok to do it like this.</p>\n\n<p>H1 designates part of your contents to be a first level heading. So if you have a first level heading in your navigation div (e.g. <code>&lt;H1&gt;Navigation Menu&lt;/H1&gt;</code>), of course that should be <code>#nav h1</code>.</p>\n\n<p>If you should have several H1s within your contents depends: If you have a blog and every entry has its own heading, those would be H1s. However, if your blog itself has a heading (e.g. <code>&lt;H1&gt;My Blog!&lt;/H1&gt;</code>), the blog entry heading should be an H2. </p>\n\n<p>But that is only theory. Go for what is readable, semantic markup. You can best decide on that by looking at your html and asking yourself: 'Is it readable? Would the readability improve if I did it the other way?' The answer will vary from project to project.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>In trying to answer the same question I posted this question which may have some useful information. My concern with using the same H1, H2, H3 in differnt places is that unless you ALWAYS specify a 'parent' style as you did in your example* - then you can run into problems.</p>\n\n<blockquote>\n  <p><a href=\"http://stackoverflow.com/questions/647295/dilemma-in-deciding-how-to-create-css-for-h1-h2-h3-etc/647296#647296\">Dilemma in deciding how to create CSS\n  for H1, H2, H3 etc.</a></p>\n</blockquote>\n\n<p>*&nbsp;thats to say you never define 'h1' by itself</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't like the idea of multiple <code>H1</code>s. <code>H1</code> is the top level, most important heading and the page will basically be about that topic. If you have an equally important second topic, don't put it in another <code>H1</code> tag, just put it in another page. It deserves that, right?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I try to have only one H1 on the page and have it almost but slightly re-arranged from the content of the title tag /  H1 is the the main idea of an individual page every thing else should be an h2 tag and Lower.... </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If it is regarding seo it's better to use h1 tags And If you want to use it for just sytling purpose use css stylesheets. </p>\n\n<p>The most important is that:\nIf more then one h1 tag is used in a webpage then google may consider that page as spam. use can other heading tags other than h1 like h2 h3 h4 h5 h6 any number of times.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Matt Cutts from Google answered to <a href=\"http://www.youtube.com/watch?v=GIn5qJKU8VM\">More than one H1 on a page: good or bad?</a> (Mar 5, 2009) with:</p>\n\n<blockquote>\n  <p>Well, if there's a logical reason to have multiple sections, it's not\n  so bad to have, you know multiple <code>h1</code>s. I would pay attention to\n  overdoing it. If your entire page is <code>h1</code>, that looks pretty Creti,\n  right? So don't do all <code>h1</code> and then you CSS to make it look like\n  regular text because we see people, who are competitors complain about\n  that if users ever turn off CSS or the CSS doesn't load, it looks\n  really bad. So, you know, it's ok to have a little bit of <code>h1</code> here\n  and then maybe there's two sections on a page, and so maybe have a\n  little bit of <code>h1</code> here.</p>\n  \n  <p>But you really should use it for headers or headings, which is what\n  the intent is. Not to just throw <code>h1</code> everywhere you can on a page.\n  Because I can tell you, if you just throw <code>h1</code> everywhere on a page,\n  people have tried to abuse that and so our algorithms try to take that\n  into account so it doesn't really do you that much good. So I would\n  use it where it makes sense and more sparingly, but you can have it\n  multiple times.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>It all depends a bit on what your <code>doctype</code> is. With <code>html5</code> it's OK to use multiple <code>h1</code> tags per section. (don't read, per <code>&lt;section&gt;&lt;/section&gt;</code>!)\nWhen using in example the <code>XHTML 1.0 Transitional</code> <code>doctype</code>, I'd avoid using multiple <code>h1</code> tags on a single page.</p>\n\n<p>When using in example the <code>XHTML 1.0 Transitional</code> <code>doctype</code>, I'd often go for something like this:</p>\n\n<ul>\n<li>h1 : max. one time per page</li>\n<li>h2 : max. two times per page</li>\n<li>etc.</li>\n</ul>\n\n<p>Also @joel, even though your answer is sort of OK, please don't try to confuse anyone... I can say I'm a Google software engineer, because I simply work with Google (not the company, but the product) AND I'm an engineer... Please list your company name AND any certifications when claiming things as such.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think its good SEO practice to place an H1 tag at the top of every block element on my page, but thats just me.  Of course this H1 tag should contain information relevant to the keywords/topics you are targeting.</p>\n\n<p>This is a very effective SEO method I have found, so the people telling you not to do this are trying to keep you from joining in on our winnings.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a webpage that I use h1 tags multiple times within various DIVs and I style h1 for each div to be the appropriate size.</p>\n\n<p>For example...</p>\n\n<pre><code>#content h1 {\n  font-size:22px;\n}\n\n#left-nav h1 {\n  font-size:14px;\n}\n\n#content .recent-news h1 {\n  font-size:16px;\n}\n</code></pre>\n\n<p>Is this alright? I am worried about SEO.</p>\n\n<p>What is the best way to go about this? Or am I worrying about nothing?</p>\n",
            "last_activity_date": 1422558133,
            "question_id": 503925,
            "score": 35,
            "tags": [
                "html",
                "css",
                "seo"
            ],
            "title": "Is it alright to use multiple h1 tags on the same page, but style them differently?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>There is no float to center per se. If you want to center a block element inside another do this:</p>\n\n<pre><code>&lt;div id=\"outer\"&gt;\n  &lt;div id=\"inner\"&gt;Stuff to center&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>with:</p>\n\n<pre><code>#outer { width: 600px; }\n#inner { width: 250px; margin: 0 auto; }\n</code></pre>\n\n<p>Now that won't make the text wrap around it (like it would with a float left or right) but like I said: there is no float center.</p>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<h3>The usual technique for this is <code>margin:auto</code></h3>\n\n<p>However, old IE doesn't grok this so one usually adds <code>text-align: center</code> to an outer containing element. You wouldn't think that would work but the same IE's that ignore <code>auto</code> also incorrectly apply the text align center to block level inner elements so things work out.</p>\n\n<p>And this doesn't actually do a real float.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>No, it isn't.</p>\n\n<p>You can either have content bubble up to the right of an element (<code>float: left</code>) or to the left of an element (<code>float: right</code>), there is no provision for having content bubble up on both sides.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use \"spacer\" divs to surround the div you want to center. Works best with a fluid design. Be sure to give the spacers height, or else they will not work.</p>\n\n<pre><code>&lt;style&gt;\ndiv.row{width=100%;}\ndvi.row div{float=left;}\n#content{width=80%;}\ndiv.spacer{width=10%; height=10px;}\n&lt;/style&gt;\n\n&lt;div class=\"row\"&gt;\n&lt;div class=\"spacer\"&gt;&lt;/div&gt;\n&lt;div id=\"content\"&gt;...&lt;/div&gt;\n&lt;div class=\"spacer\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>...it is  possible div to center  ...</p>\n\n<p><a href=\"http://stackoverflow.com/questions/3363562/center-div-vertically-in-a-height-div/9544084\">center div vertically in a % height div?</a></p>\n\n<p><a href=\"http://jsfiddle.net/sanecin/78wvJ/\" rel=\"nofollow\">http://jsfiddle.net/sanecin/78wvJ/</a></p>\n\n<p>...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>&lt;div id=\"outer\" style=\"z-index:10000;width:99%;height:200px;margin-top:300px;margin-left:auto;margin-right:auto;float:left;position:absolute;opacity:0.9;\"&gt;\n\n&lt;div id=\"inner\" style=\"opacity:1;background-color:White;width:300px;height:200px;margin-left:auto;margin-right:auto;\"&gt;Inner&lt;/div&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Float the div in the background to the max width, set a div inside that that's not transparent and center it using margin auto.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This has always worked for me.</p>\n\n<p>Provided you set a fixed width for your DIV, and the proper DOCTYPE, try this</p>\n\n<pre><code>div {        \n  margin-left:auto;\n  margin-right:auto;\n}\n</code></pre>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>One of my websites involves a div whose size is variable and you won't know it ahead of time. it is an outer div with 2 nested divs, the outer div is the same width as the first nested div, which is the content, and the second nested div right below the content is the caption, which must be centered. Because the width is not known, I use jQuery to adjust accordingly.</p>\n\n<p>so my html is this</p>\n\n<pre><code>&lt;div id='outer-container'&gt;\n&lt;div id='inner-container'&gt;&lt;/div&gt;\n&lt;div id='captions'&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>and then I center the captions in jQuery like this</p>\n\n<pre><code>captionWidth=$(\"#captions\").css(\"width\");\nouterWidth=$(\"#outer-container\").css(\"width\");\nmarginIndent=(outerWidth-captionWidth)/2;\n$(\"#captions\").css(\"margin\",\"0px \"+marginIndent+\"px\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>floating divs to center \"works\" with the combination of display:inline-block and text-align:center.</p>\n\n<p>Try changing width of the outer div by resizing the window of this <a href=\"http://jsfiddle.net/qB48w/\" rel=\"nofollow\">jsfiddle</a></p>\n\n<pre><code>&lt;div class=\"outer\"&gt;\n    &lt;div class=\"block\"&gt;one&lt;/div&gt;\n    &lt;div class=\"block\"&gt;two&lt;/div&gt;\n    &lt;div class=\"block\"&gt;three&lt;/div&gt;\n    &lt;div class=\"block\"&gt;four&lt;/div&gt;\n    &lt;div class=\"block\"&gt;five&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>and the css:</p>\n\n<pre><code>.outer {\n    text-align:center;\n    width: 50%;\n    background-color:lightgray;\n}\n\n.block {\n    width: 50px;\n    height: 50px;\n    border: 1px solid lime;\n    display: inline-block;\n    margin: .2rem;\n    background-color: white;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Following solution worked for me.</p>\n\n<pre><code>  .algncenterdiv {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this, it helped me: wrap the div in  tags, the problem is that it will center the content of the div also (if not coded otherwise). Hope that helps :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>this works nicely</p>\n\n<pre><code>width:40%; // the width of the content div\nright:0;\nmargin-right:30%; // 1/2 the remaining space\n</code></pre>\n\n<p>This resizes nicely with adaptive layouts also..</p>\n\n<p>CSS example would be:</p>\n\n<pre><code>.centered-div {\n   position:fixed;\n   background-color:#fff;\n   text-align:center;\n   width:40%;\n   right:0;\n   margin-right:30%;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This worked for me. </p>\n\n<p>I included an unordered list on my page twice. \nOne div class=\"menu\" id=\"vertical\" the other to be centered was div class=\"menu\" id=\"horizontal\". Since the list was floated left, I needed an inner div to center it. See below.</p>\n\n<pre><code>&lt;div class=menu id=\"horizontal\"&gt;\n&lt;div class=\"fix\"&gt;\n  Centered stuff\n&lt;/div&gt;\n&lt;/div&gt;\n\n.menu#horizontal { display: block;  float: left; margin: 0px; padding: 0 10px; position: relative; left: 50%; }\n#fix { float: right; position: relative; left: -50%; margin: 0px auto; }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to float a <code>div</code> to center is it possible. <code>text-align: center</code> is not working in IE... </p>\n",
            "last_activity_date": 1423608361,
            "question_id": 1740587,
            "score": 29,
            "tags": [
                "html",
                "css",
                "margin"
            ],
            "title": "Align a div to center"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Sample page works Google Chrome 4 and Safari 4</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've run into this problem before</p>\n\n<p>Setting the height of the select element works fine on webkit in Windows, but fails on webkit on a Mac.</p>\n\n<p>If you set the css attribute</p>\n\n<pre><code>-webkit-appearance: menulist-button;\n</code></pre>\n\n<p>It will allow the height to work properly on a Mac, but it creates this weird black border on windows.  You can adjust the border by setting the css border property, but that changes the look on all browsers that let you style select borders, not just webkit.  </p>\n\n<p>At this point, i gave up, but hopefully that is a good starting point if you want to investigate further. </p>\n",
                    "is_accepted": false,
                    "score": 100
                },
                {
                    "body": "<p>Increase the <code>line-height</code>.&nbsp;&nbsp;&nbsp;&nbsp;</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>I used jQuery <a href=\"http://simpletutorials.com/?path=tutorials/javascript/jquery/ddcombobox\" rel=\"nofollow\">combobox</a> for this.</p>\n\n<p>With this, you can set the height of the necessary CSS classes to the height you need your select box to be. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Simply set the height property. line-height worked in Safari on Windows, but not on Mac. height worked on both.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can increase the font-size to help with the height as well. I think that Safari mac show up to 16px font-size. At least gets a larger click region. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><em>height</em> will not work on Safari unless you also have a <em>background</em> set.  If you set a background you may lose the drop down arrows in the windows version of Safari.  Again form styling seems to be wrought with issues.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>use css border property. make the select border to none or 0. <strong>border:none</strong>; showing perfectly in chrome and safari in mac os</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Use <strong><em>line-height</em></strong> for safari its working.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>@Chi's answer is correct.  Another quick hack is to add a border CSS style:</p>\n\n<p>select {\n  border: 1px solid #CCC\n}</p>\n\n<p>This both triggers the -webkit-appearance: menulist-button property with the added benefit of removing the ugly black border :).  </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Checkout <a href=\"http://demo.neeraj.name/admin_data\">http://demo.neeraj.name/admin_data</a> in both chrome and firefox. In firefox the select box has large height. In chrome the height of select box is very small.</p>\n\n<p>How do I make the select box of chrome and safari look like the select drop down of firefox?</p>\n",
            "last_activity_date": 1407167272,
            "question_id": 2547354,
            "score": 23,
            "tags": [
                "css"
            ],
            "title": "How to increase the height of the select box"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><a href=\"http://jsfiddle.net/tJkgP/2/\">http://jsfiddle.net/tJkgP/2/</a></p>\n\n<p>CSS to rotate by 45 degrees:</p>\n\n<pre><code>.desk\n{\n    width: 50%;\n    height: 400px;\n    margin: 5em auto;\n    border: solid 1px #000;\n    overflow: visible;\n}\n.desk img\n{\n    behavior:url(-ms-transform.htc);\n    /* Firefox */\n    -moz-transform:rotate(45deg);\n    /* Safari and Chrome */\n    -webkit-transform:rotate(45deg);\n    /* Opera */\n    -o-transform:rotate(45deg);\n    /* IE9 */\n    -ms-transform:rotate(45deg);\n    /* IE6,IE7 */\n    filter: progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=0.7071067811865476, M12=-0.7071067811865475, M21=0.7071067811865475, M22=0.7071067811865476);\n    /* IE8 */\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Matrix(SizingMethod='auto expand', M11=0.7071067811865476, M12=-0.7071067811865475, M21=0.7071067811865475, M22=0.7071067811865476)\"; \n\n}\n</code></pre>\n\n<p>IE6-8 CSS came from here: <a href=\"http://stackoverflow.com/questions/4617220/css-rotate-property-in-ie\">CSS rotate property in IE</a></p>\n",
                    "is_accepted": true,
                    "score": 35
                }
            ],
            "body": "<p>I have a site layout I'm working on that has a main content area and then\nat each of the four corners of the content area sits a corner graphic. The\noverall effect is that of a desk blotter.</p>\n\n<p>Here is the code for my top left hand corner:</p>\n\n<pre><code>.corner-top-left    { width:96px ;\nheight:96px ;\nbackground:url(\"images/corner.png\") no-repeat ;\nposition:absolute ;\ntop:-5px ;\nleft:-5px ;\nz-index:3000 ;\n}\n</code></pre>\n\n<p>Rather than make four individual corner images, what I would like to do\n(if possible) is use the original image (corner.png) and rotate it using\nCSS.</p>\n\n<p>Is there a cross browser compatible way to do this?</p>\n\n<p>Many thanks!</p>\n",
            "last_activity_date": 1344271575,
            "question_id": 11832131,
            "score": 22,
            "tags": [
                "css",
                "image",
                "background",
                "rotation"
            ],
            "title": "Cross browser way to rotate image using CSS?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Short of going through each .tpl file and searching the file for the selectors manually, I don't see any other way.</p>\n\n<p>You could of course use <a href=\"http://www.sitepoint.com/dustmeselectors/\">Dust-Me selectors</a>, but you'd still have to go through each page that uses the .tpl files (not each url as I know that many of them will be duplicates).</p>\n\n<p>Sounds like a big job! I had to do it once before and I did exactly that, took me a week.</p>\n\n<hr>\n\n<p>Another tool is a Firebug plugin called <a href=\"http://www.nealgrosskopf.com/tech/thread.php?pid=66\">CSS Usage</a>. As far as I read it <em>can</em> work across multiple pages but might break if used site-wide. Give it a go.</p>\n\n<hr>\n\n<p><strong>Triumph!</strong> Check out the <a href=\"http://unused-css.com/\">Unused CSS online tool</a>. Type your index url into the field and voila, a few minutees later a list of all the used selectors :) I know you want the unused ones, but then the only work is finding the unused ones in the file (ctrl+f) and removing them :) </p>\n\n<p>Make sure to use the <strong>2nd</strong> option, they'll email you the results of the crawl of your entire webpage. Might take up to half an hour, but that's far better than a week. Take some coffee :)</p>\n\n<p>Just tested it, works a treat :)</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>You could use Dust-Me Selectors plugin for FireFox to find unused styles:</p>\n\n<p><a href=\"http://www.sitepoint.com/dustmeselectors/\" rel=\"nofollow\">http://www.sitepoint.com/dustmeselectors/</a></p>\n\n<p>If you have a sitemap you could use that to let the plugin crawl your site:</p>\n\n<blockquote>\n  <p>The spider dialog has all the controls for performing a site-wide spider operation. Enter the URL of either a Sitemap XML file, or an HTML sitemap, and the program will read that file and extract all its links. It will then load each of those pages in turn and perform a cumulative Find operation on each one.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Additionally, there are many sites that will search for these for you. Like this one: <a href=\"http://unused-css.com/\" rel=\"nofollow\">http://unused-css.com/</a> I don't know how they measure up to Dust-Me Selectors, but I know that Dust-Me selectors isn't compatible with Firefox 8.0.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I had to do this about 3 years ago on a rather large classic ASP web application.</p>\n\n<p>I took the approach that there are only a finite number of styled items on each page and started by identifying these.  For example, I went through the main pages and identified that the majority of labels were bold and dark blue and that all buttons are the same width (for example).</p>\n\n<p>Once I'd done that, I spoke to the team and we decided that anything that didn't conform to these rules I'd identified <em>should</em> conform, so I wrote a stylesheet based on this assumption.</p>\n\n<p>We ended up with about 30 styles to apply to several hundred pages.  Several regular-expression-find-and-replaces later (we were fortunate that the original development had used reasonably well structured HTML) we had something usable that just needed the odd tweaking.</p>\n\n<p>The key points are:</p>\n\n<ol>\n<li><strong>Aim for uniformity across the site</strong>.  In other words, don't assume that the resultant site will look exactly the same as the original, but aim for it to look the same as itself (uniform) from page to page</li>\n<li><strong>Tackle the obvious styles first</strong> (labels / buttons / paragraph fonts / headers) and then worry about the smaller styles or the unique styles later</li>\n</ol>\n\n<p>You might also find that keeping unique styles (e.g. a dashboard page that has unique elements that don't appear elsewhere) in separate files to keep the size of the file down.  Obviously, it depends on your site as to whether this would help.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Our web site has been under a constant development for a better part of the last five years.  As it happens, pretty much all the styles for the site are in one big CSS file.  With time this css file has grown to about 9,000 lines - and I'm sure some of those styles are not used any more and quite a few styles provide duplicate functionality.</p>\n\n<p>The site is written with PHP/Smarty; there are over 300 smarty templates and the whole site contains over 1000 different pages (read - unique URLs).  I'm sure it will continue growing - as will the CSS file.</p>\n\n<p>What's the best way to clean up this file?</p>\n\n<p><strong>Update</strong>: Unfortunately, online parsers where I put in a URL won't work for me, as 75% of the site is behind username/password logins - and depending on login, there are half a dozen different roles, each of which has their own set of of pages.  There are also transactional elements (online shop), where the pages are displayed after (for example) credit card payment is taken/processed.  I doubt that any online tool would be able to handle any of these.  Therefore if there's a tool, it would have to work on a source tree.</p>\n",
            "last_activity_date": 1367400138,
            "question_id": 8120048,
            "score": 21,
            "tags": [
                "css"
            ],
            "title": "How can I effectively clean up styles in a large web site?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can use <a href=\"https://developer.mozilla.org/en/DOM/window.location#replace\"><code>location.replace</code></a> to replace the current location entry (the redirect page) with the new one (the target). That requires that you do the redirection via JavaScript rather than with meta tags or a 302. E.g.:</p>\n\n<pre><code>// In the redirecting page\nlocation.replace(\"path/to/target/page\");\n</code></pre>\n\n<p><a href=\"http://jsbin.com/ijojaz\">Live example</a> | <a href=\"http://jsbin.com/ijojaz/edit\">Live example source</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Instead of using <code>window.location = url;</code> to redirect, </p>\n\n<p>try <code>window.location.replace(url);</code>.</p>\n\n<blockquote>\n  <p>after using replace() the current page will not be saved in session\n  history, meaning the user won't be able to use the Back button to\n  navigate to it.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 39
                }
            ],
            "body": "<p>When the user loads the page, I immediately do a window redirect to another location.</p>\n\n<p>The problem is, when the user clicks back, it'll go back to the page which does the redirect.</p>\n\n<p>Can I \"cancel\" the history of the previous page? So that when the user clicks back, it goes back TWO pages instead?</p>\n",
            "last_activity_date": 1388681826,
            "question_id": 8969878,
            "score": 20,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "In Javascript, how do I &quot;clear&quot; the back (history -1)?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No, use <code>transparent</code> instead <code>none</code> . See working example <a href=\"http://jsfiddle.net/89Cqe/\">here </a> in this example if you will change <code>transparent</code> to <code>none</code> it will not work</p>\n\n<p>use like <code>.class { background-color:transparent; }</code></p>\n",
                    "is_accepted": false,
                    "score": 64
                },
                {
                    "body": "<p>The <a href=\"http://www.w3.org/TR/CSS2/colors.html#propdef-background-color\">CSS 2.1 spec</a> states the following for the <code>background-color</code> property:</p>\n\n<blockquote>\n  <p><code>Value:   &lt;color&gt; | transparent | inherit</code></p>\n</blockquote>\n\n<p><code>&lt;color&gt;</code> can be either a keyword or a numerical representation of a colour. <a href=\"http://www.w3.org/TR/CSS2/syndata.html#value-def-color\">Valid <code>color</code> keywords</a> are:</p>\n\n<blockquote>\n  <p>aqua, black, blue, fuchsia, gray, green, lime, maroon, navy, olive,\n  orange, purple, red, silver, teal, white, and yellow</p>\n</blockquote>\n\n<p>Note that <code>none</code> is not one of them. <code>transparent</code> and <code>inherit</code> are keywords in their own right. So according to the spec, <code>none</code> is not a valid value for <code>background-color</code>.</p>\n\n<p>I'm assuming you want <code>transparent</code>.</p>\n",
                    "is_accepted": false,
                    "score": 118
                },
                {
                    "body": "<p>The answer is no. </p>\n\n<pre><code>.class {\n    background-color: none;\n}\n</code></pre>\n\n<p>It's not a valid property. </p>\n\n<pre><code>.class {\n    background-color: transparent;\n}\n</code></pre>\n\n<p>Does the same thing what you willing to do with \"background-color: none\". \"background-color: transparent\" is the default value of \"background-color\". Thank you</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There is also background-color: initial but it is not supported by IE</p>\n\n<p><a href=\"http://www.w3schools.com/cssref/pr_background-color.asp\" rel=\"nofollow\">http://www.w3schools.com/cssref/pr_background-color.asp</a>\n<a href=\"http://www.w3schools.com/cssref/css_initial.asp\" rel=\"nofollow\">http://www.w3schools.com/cssref/css_initial.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>.class {\n    background-color:none;\n}\n</code></pre>\n\n<p>This is not a valid property. W3C validator will display following error:</p>\n\n<blockquote>\n  <p>Value Error : background-color none is not a background-color value : none</p>\n</blockquote>\n\n<p><code>transparent</code> may have been selected as better term instead of <code>0</code> or <code>none</code> values during the development of specification of CSS.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Can anyone tell me if the following CSS is valid?</p>\n\n<pre><code>.class {\n    background-color:none;\n}\n</code></pre>\n",
            "last_activity_date": 1407831518,
            "question_id": 8739665,
            "score": 89,
            "tags": [
                "css"
            ],
            "title": "Is background-color:none valid CSS?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>With CSS 2 you can do this:</p>\n\n<pre><code>input[type='checkbox'] { ... }\n</code></pre>\n\n<p>The last I checked, none of the IE browsers supported this though.</p>\n",
                    "is_accepted": true,
                    "score": 112
                },
                {
                    "body": "<p>You can apply only to certain attribute by doing:</p>\n\n<pre><code>input[type=\"checkbox\"] {...}\n</code></pre>\n\n<p>It explains it <a href=\"http://www.w3schools.com/css/css%5Fsyntax.asp\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>input[type=\"checkbox\"] {\n /* your style */\n}\n</code></pre>\n\n<p>But this will only work for browsers except IE7 and below, for those you will have to use a class.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Although CSS does provide a way for you to do the style specific to the checkbox type or another type, there are going to be problems with browsers that do not support this.</p>\n\n<p>I think your only option in this case is going to be to apply classes to your checkboxes.</p>\n\n<p>just add the class=\"checkbox\" to your checkboxes.</p>\n\n<p>Then create that style in your css code.</p>\n\n<p>One thing you could do is this:</p>\n\n<p>main.css</p>\n\n<pre><code>input[type=\"checkbox\"] { /* css code here */ }\n</code></pre>\n\n<p>ie.css</p>\n\n<pre><code>.checkbox{ /* css code here for ie */ }\n</code></pre>\n\n<p>Then use the IE specific css include:</p>\n\n<pre><code>&lt;!--[if lt IE 7]&gt;\n   &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"ie.css\" /&gt;\n&lt;![endif]--&gt;\n</code></pre>\n\n<p>You will still need to add the class for it to work in IE, and it will not work in other non-IE browsers that do not support IE. But it will make your website forward-thinking with css code and as IE gets support, you will be able to remove the ie specific css code and also the css classes from the checkboxes.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As IE6 doesn't understand attribute selectors, you can combine a script only seen by IE6 (with conditional comments) and jQuery or <strong><a href=\"http://code.google.com/p/ie7-js/\" rel=\"nofollow\">IE7.js</a></strong> by Dean Edwards.</p>\n\n<blockquote>\n  <p>IE7(.js) is a JavaScript library to make Microsoft Internet Explorer behave like a standards-compliant browser. It fixes many HTML and CSS issues and makes transparent PNG work correctly under IE5 and IE6. </p>\n</blockquote>\n\n<p>The choice of using classes or jQuery or IE7.js depends on your likes and dislikes and your other needs (maybe PNG-24 transparency throughout your site without having to rely on PNG-8 with complete transparency that fallbacks to 1-bit transparency on IE6 - only created by Fireworks and pngnq, etc)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Classes also work well, such as:</p>\n\n<pre><code>&lt;style&gt;\n  form input .checkbox\n  {\n    /* your checkbox styling */\n  }\n&lt;/style&gt;\n\n&lt;form&gt;\n  &lt;input class=\"checkbox\" type=\"checkbox\" /&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Something I recently discovered for styling Radio Buttons AND Checkboxes. Before, I had to use jQuery and other things. But this is stupidly simple.</p>\n\n<pre><code>input[type=radio] {\n    padding-left:5px;\n    padding-right:5px;\n    border-radius:15px;\n\n    -webkit-appearance:button;\n\n    border: double 2px #00F;\n\n    background-color:#0b0095;\n    color:#FFF;\n    white-space: nowrap;\n    overflow:hidden;\n\n    width:15px;\n    height:15px;\n}\n\ninput[type=radio]:checked {\n    background-color:#000;\n    border-left-color:#06F;\n    border-right-color:#06F;\n}\n\ninput[type=radio]:hover {\n    box-shadow:0px 0px 10px #1300ff;\n}\n</code></pre>\n\n<p>You can do the same for a checkbox, obviously change the <code>input[type=radio]</code> to <code>input[type=checkbox]</code> and change <code>border-radius:15px;</code> to <code>border-radius:4px;</code>.</p>\n\n<p>Hope this is somewhat useful to you.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p><strong>Trident</strong> provides the <code>::-ms-check</code> pseudo-element for checkbox and radio button controls. For example:</p>\n\n<pre><code>&lt;input type=\"checkbox\"&gt;\n&lt;input type=\"radio\"&gt;\n\n::-ms-check {\n    color: red;\n    background: black;\n    padding: 1em;\n}\n</code></pre>\n\n<p>This displays as follows in IE10 on Windows 8:</p>\n\n<p><img src=\"http://i.stack.imgur.com/eS5o7.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Any style for <code>input</code> affects every input element. Is there a way to specify styling to apply for only checkboxes without applying a class to each check box element?</p>\n",
            "last_activity_date": 1391023231,
            "question_id": 1120879,
            "score": 59,
            "tags": [
                "css"
            ],
            "title": "CSS checkbox input styling"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<ul>\n<li>Hide the actual control</li>\n<li>Made a DIV with the controls and styling you want on top of it</li>\n</ul>\n\n<p>The button is not a standard HTML control.</p>\n\n<p>See: <a href=\"http://www.quirksmode.org/dom/inputfile.html\">http://www.quirksmode.org/dom/inputfile.html</a></p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>what's wrong with </p>\n\n<pre><code>&lt;input type=\"file\" size=\"50\" .... /&gt;\n</code></pre>\n\n<p>?\nWill look same except safari on mac i guess (on mac, all upload controls looks different, on all browsers)</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>In addition to the quirksmode tutorial, here's another good resource:\n<a href=\"http://www.shauninman.com/archive/2007/09/10/styling_file_inputs_with_css_and_the_dom\">http://www.shauninman.com/archive/2007/09/10/styling_file_inputs_with_css_and_the_dom</a></p>\n\n<p>If you're hiding the actual control, remember that it is very important to set the opacity of the control to zero, and not actually use <code>visibility: hidden</code>. Doing that will actually hide the element, disabling the click action.</p>\n\n<p>Also, if you're covering up the control with a graphic button, do be aware that in some browsers (Firefox and IE, I believe), you will not be able to change the cursor type to a hand when it's over the text-input part of the file control (it will always default to the input or the regular non-link pointer). And yes, I've tried using <code>cursor: pointer</code> (and <code>cursor: hand</code>).</p>\n\n<p>Personally, I've struggled with customized upload boxes, and there is no silver bullet for getting their appearance or customization perfect. (especially concerning the behavior of the cursor, as I consider that a UI deal-breaker). At the end of the day, I think it's just easier to  accept that different browsers will render the control differently, and that's just how it is.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>What combination of CSS or attributes are needed?</p>\n",
            "last_activity_date": 1233956673,
            "question_id": 269582,
            "score": 35,
            "tags": [
                "html",
                "css",
                "cross-browser"
            ],
            "title": "Setting uniform &lt;input type=&quot;file&quot;&gt; width in all browsers"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>If you are looking for this:</p>\n\n<p><img src=\"http://cdn.css-tricks.com/wp-content/uploads/2008/02/text-selection-color.png\" alt=\"alt text\"></p>\n\n<p>Here is the link:</p>\n\n<p><a href=\"http://css-tricks.com/overriding-the-default-text-selection-color-with-css/\">http://css-tricks.com/overriding-the-default-text-selection-color-with-css/</a></p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>Thanks for the links, but it does seem as if the actual text highlighting just isn't exposed.</p>\n\n<p>As far as the actual issue at hand, I ended up opting for a different approach by eliminating the need for a text input altogether and using innerHTML with some JavaScript. Not only does it get around the text highlighting, it actually looks much cleaner.</p>\n\n<p>This granular of a tweak to an HTML form control is just another good argument for eliminating form controls altogether. Haha!</p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>I guess this can help :</p>\n\n<blockquote>\n  <p><strong>selection styles</strong></p>\n  \n  <p>It's possible to define color and background for text the user\n  selects.</p>\n  \n  <p>Try it below. If you select something and it looks like this, your\n  browser supports selection styles.</p>\n  \n  <p>This is the paragraph with <code>normal ::selection</code>.</p>\n  \n  <p>This is the paragraph with <code>::-moz-selection</code>.</p>\n  \n  <p>This is the paragraph with <code>::-webkit-selection</code>.</p>\n  \n  <p>Testsheet:</p>\n\n<pre><code>p.normal::selection {\n  background:#cc0000;\n  color:#fff;\n}\n\np.moz::-moz-selection {\n  background:#cc0000;\n  color:#fff;\n}\n\np.webkit::-webkit-selection {\n  background:#cc0000;\n  color:#fff;\n}\n</code></pre>\n</blockquote>\n\n<p>Quoted from <a href=\"http://www.quirksmode.org/css/selection.html\" rel=\"nofollow\">Quirksmode</a> </p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>I realise this is an old question but for anyone who does come across it this can be done using <code>contenteditable</code> as shown <a href=\"http://jsfiddle.net/ZUQBr/\">in this JSFiddle</a>.</p>\n\n<p>Kudos to Alex who mentioned this in the comments (I didn't see that until now!)</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p><a href=\"http://css-tricks.com/overriding-the-default-text-selection-color-with-css/\" rel=\"nofollow\">http://css-tricks.com/overriding-the-default-text-selection-color-with-css/</a></p>\n\n<p>BUT U WILL GET W3C ERROR USING THIS CSS.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>@ Mike Eng,</p>\n\n<p>On selecting the text background color, text color can be changed with the help of <strong>::selection</strong>, note that <strong>::selection</strong> works in in chrome, to make that work in firefox based browsers try this one <strong>::-moz-selection</strong></p>\n\n<p>Try the following snippet of code in reset.css or the css page where exactly you want to apply the effect.</p>\n\n<pre><code>::selection{\n   //Works only for the chrome browsers\n   background-color: #CFCFCF; //This turns the background color to Gray\n   color: #000; // This turns the selected font color to Black\n}\n\n::-moz-selection{\n   //Works for the firefox based browsers\n   background-color: #CFCFCF; //This turns the background color to Gray\n   color: #000; // This turns the selected font color to Black\n}\n</code></pre>\n\n<p>The above code will work even in the input boxes too. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>this is the code.</p>\n\n<pre><code>1   /*** Works on common browsers ***/\n2   ::selection {\n3       background-color: #352e7e;\n4       color: #fff;\n5   }\n6    \n7   /*** Mozilla based browsers ***/\n8   ::-moz-selection {\n9       background-color: #352e7e;\n10      color: #fff;\n11  }\n12   \n13  /***For Other Browsers ***/\n14  ::-o-selection {\n15      background-color: #352e7e;\n16      color: #fff;\n17  }\n18   \n19  ::-ms-selection {\n20      background-color: #352e7e;\n21      color: #fff;\n22  }\n23   \n24  /*** For Webkit ***/\n25  ::-webkit-selection {\n26      background-color: #352e7e;\n27      color: #fff;\n28  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I've been looking for this throughout the web and can't even find anyone else even asking this, let alone a solution...</p>\n\n<p>Is there a way to change the color of the highlight area within a text input when text is selected? Not the highlight border or the background, but the portion that appears around the text when you have the text actually selected.</p>\n",
            "last_activity_date": 1404474896,
            "question_id": 2258647,
            "score": 33,
            "tags": [
                "html",
                "css",
                "text",
                "input",
                "highlight"
            ],
            "title": "Changing the highlight color when selecting text in an HTML text input"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Create a path with moveTo and lineTo:</p>\n\n<pre><code>var c2 = canvas.getContext('2d');\nc2.fillStyle = '#f00';\nc2.beginPath();\nc2.moveTo(0, 0);\nc2.lineTo(100,50);\nc2.lineTo(50, 100);\nc2.lineTo(0, 90);\nc2.closePath();\nc2.fill();\n</code></pre>\n\n<p>Live demo: <a href=\"http://jsfiddle.net/yd7Wv/1/\">http://jsfiddle.net/yd7Wv/1/</a></p>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<pre><code>//poly [x,y, x,y, x,y.....];\nvar poly=[ 5,5, 100,50, 50,100, 10,90 ];\nvar canvas=document.getElementById(\"canvas\")\nvar ctx = canvas.getContext('2d');\nctx.fillStyle = '#f00';\n\nctx.beginPath();\nctx.moveTo(poly[0], poly[1]);\nfor( item=2 ; item &lt; poly.length-1 ; item+=2 ){ctx.lineTo( poly[item] , poly[item+1] )}\n\nctx.closePath();\nctx.fill();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>from <a href=\"http://www.scienceprimer.com/drawing-regular-polygons-javascript-canvas\">http://www.scienceprimer.com/drawing-regular-polygons-javascript-canvas</a>:</p>\n\n<p>The following code will draw a hexagon. Change the number of sides to create different regular polygons.</p>\n\n<pre><code>// hexagon\nvar numberOfSides = 6,\n    size = 20,\n    Xcenter = 25,\n    Ycenter = 25;\n\ncxt.beginPath();\ncxt.moveTo (Xcenter +  size * Math.cos(0), Ycenter +  size *  Math.sin(0));          \n\nfor (var i = 1; i &lt;= numberOfSides;i += 1) {\n    cxt.lineTo (Xcenter + size * Math.cos(i * 2 * Math.PI / numberOfSides), Ycenter + size * Math.sin(i * 2 * Math.PI / numberOfSides));\n}\n\ncxt.strokeStyle = \"#000000\";\ncxt.lineWidth = 1;\ncxt.stroke();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>You can use the lineTo() method same as:\n var objctx = canvas.getContext('2d');</p>\n\n<pre><code>        objctx.beginPath();\n        objctx.moveTo(75, 50);\n        objctx.lineTo(175, 50);\n        objctx.lineTo(200, 75);\n        objctx.lineTo(175, 100);\n        objctx.lineTo(75, 100);\n        objctx.lineTo(50, 75);\n        objctx.closePath();\n        objctx.fillStyle = \"rgb(200,0,0)\";\n        objctx.fill();\n</code></pre>\n\n<p>if you not want to fill the polygon use the stroke() method in the place of fill()</p>\n\n<p>You can also check the following: <a href=\"http://www.authorcode.com/draw-and-fill-a-polygon-and-triangle-in-html5/\" rel=\"nofollow\">http://www.authorcode.com/draw-and-fill-a-polygon-and-triangle-in-html5/</a></p>\n\n<p>thanks</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>//create and fill polygon\nCanvasRenderingContext2D.prototype.fillPolygon = function (pointsArray, fillColor,     strokeColor) {\n    if (pointsArray.length &lt;= 0) return;\n    this.moveTo(pointsArray[0][0], pointsArray[0][1]);\n    for (var i = 0; i &lt; pointsArray.length; i++) {\n        this.lineTo(pointsArray[i][0], pointsArray[i][1]);\n    }\n    if (strokeColor != null &amp;&amp; strokeColor != undefined)\n        this.strokeStyle = strokeColor;\n\n    if (fillColor != null &amp;&amp; fillColor != undefined) {\n        this.fillStyle = fillColor;\n        this.fill();\n    }\n}\n//And you can use this method as \nvar polygonPoints = [[10,100],[20,75],[50,100],[100,100],[10,100]];\ncontext.fillPolygon(polygonPoints, '#F00','#000');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is a function that even supports clockwise/anticlockwise drawing do that you control fills with the non-zero winding rule.</p>\n\n<p><a href=\"http://www.storminthecastle.com/2013/07/24/how-you-can-draw-regular-polygons-with-the-html5-canvas-api/\" rel=\"nofollow\">Here is a full article on how it works and more.</a></p>\n\n<pre><code>// Defines a path for any regular polygon with the specified number of sides and radius, \n// centered on the provide x and y coordinates.\n// optional parameters: startAngle and anticlockwise\n\nfunction polygon(ctx, x, y, radius, sides, startAngle, anticlockwise) {\n  if (sides &lt; 3) return;\n  var a = (Math.PI * 2)/sides;\n  a = anticlockwise?-a:a;\n  ctx.save();\n  ctx.translate(x,y);\n  ctx.rotate(startAngle);\n  ctx.moveTo(radius,0);\n  for (var i = 1; i &lt; sides; i++) {\n    ctx.lineTo(radius*Math.cos(a*i),radius*Math.sin(a*i));\n  }\n  ctx.closePath();\n  ctx.restore();\n}\n\n// Example using the function.\n// Define a path in the shape of a pentagon and then fill and stroke it.\ncontext.beginPath();\npolygon(context,125,125,100,5,-Math.PI/2);\ncontext.fillStyle=\"rgba(227,11,93,0.75)\";\ncontext.fill();\ncontext.stroke();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to know how to draw polygons on a canvas. Without using jQuery or anything like that.</p>\n",
            "last_activity_date": 1374795626,
            "question_id": 4839993,
            "score": 28,
            "tags": [
                "javascript",
                "html",
                "css",
                "html5",
                "canvas"
            ],
            "title": "How to draw polygons on an HTML5 canvas?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>It seems the h1 in the sample is exactly big enough to always cause a break after it, if you shorten it to just \"The head\", the break-after has an effect.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's what the problem is - no column break after \"The header\" in Safari and Firefox:\n<img src=\"http://i.stack.imgur.com/doyGO.jpg\" alt=\"enter image description here\"></p>\n\n<p>According to <a href=\"http://zomigi.com/blog/deal-breaker-problems-with-css3-multi-columns/\" rel=\"nofollow\">this</a>, <a href=\"http://www.broken-links.com/2010/02/16/help-wanted-webkit-multi-columns/\" rel=\"nofollow\">this</a> and <a href=\"http://help.dottoro.com/lcrthhhv.php\" rel=\"nofollow\">this</a> the column breaks don't work as yet.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>Column breaks have never been supported in previous versions of Safari - my guess this is still the case. It is rather weird that Apple have written that it is supported since 3.0 though (<a href=\"http://developer.apple.com/library/safari/#documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/css/property/-webkit-column-break-after\" rel=\"nofollow\">Safari documentation about column breaks</a>) ... </p>\n\n<p>Same goes with Firefox. Chrome is the only browser which supportes almost all, if not all, column controls.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The CSS column break rules are poorly supported, but I've found a workaround that does something close enough.  Instead of writing this:</p>\n\n<pre><code> &lt;div class=\"columns\"&gt;\n    &lt;h1&gt;Heading&lt;/h1&gt;\n    &lt;p&gt;Paragraph&lt;/p&gt;\n &lt;/div&gt;\n</code></pre>\n\n<p>I'm writing this:</p>\n\n<pre><code> &lt;div class=\"columns\"&gt;\n    &lt;div class=\"keeptogether\"&gt;\n       &lt;h1&gt;Heading&lt;/h1&gt;\n       &lt;p&gt;Paragraph&lt;/p&gt;\n    &lt;/div&gt;\n &lt;/div&gt;\n</code></pre>\n\n<p>Then the CSS looks like this:</p>\n\n<pre><code> div.columns {\n    column-width: 300px;\n    -moz-column-width: 300px;\n    -webkit-column-width: 300px;\n }\n div.keeptogether {\n    display: inline-block;\n    width: 100%;\n }\n</code></pre>\n\n<p>You can see the results on my site: <a href=\"http://www.lumenaris.com/suitors_attributes.html\">http://www.lumenaris.com/suitors_attributes.html</a></p>\n",
                    "is_accepted": false,
                    "score": 53
                },
                {
                    "body": "<p>I encountered the same kind of issue and solved it as follows.</p>\n\n<p>My main issue was not inserting a break after each \"heading/paragraph\" block but avoiding a column break inside a \"heading/paragraph\" block. </p>\n\n<p><strong>The solution is easy :</strong></p>\n\n<ol>\n<li><p>Enclose each \"heading/paragraph\" block in a span tag.</p></li>\n<li><p>In the CSS, add a reference to the span tag, with the following code in it :</p>\n\n<p>display: inline-block;\nwidth: 100%;</p></li>\n</ol>\n\n<p>The little drawback is that this may leave blank areas at the bottom of some columns.</p>\n\n<p>In my case the whole css is as follows (div defines the global formatting of the data flow):   </p>\n\n<pre><code>div {\n    -webkit-column-width: 20em; /* 20em wide */\n    -webkit-column-gap: 2em;  /* 2em gap */\n    -webkit-column-rule: 1px solid #eee;   /* 1px border between columns */\n    -webkit-column-count: 3; /* 3 columns max! */\n\n    -moz-column-width: 20em;\n    -moz-column-gap: 2em;\n    -moz-column-rule: 1px solid #eee; \n    -moz-column-count: 4;\n\n    -ms-column-width: 20em;\n    -ms-column-gap: 2em;\n    -ms-column-rule: 1px solid #eee; \n    -ms-column-count: 3;\n\n    column-width: 20em;\n    column-gap: 2em;\n    column-rule: 1px solid #eee; \n    column-count: 3;\n\n    padding: 5px;\n}\n\n.tokeeptogether {\n    display: inline-block;\n    width: 100%;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If I'm not mistaken, you want the header to go across all columns and let only the following siblings to be split, right?<br/>\nI'm afraid column breaks still do not work as intended, so - it may not be the most \"orthodox\" solution, but saved me - I fixed this with some funky styling:</p>\n\n<p>Essential HTML:   </p>\n\n<pre><code>&lt;div class=\"container\"&gt;\n  &lt;h1&gt;Header&lt;/h1&gt;\n  &lt;p&gt;First paragraph&lt;/p&gt;\n  &lt;p&gt;Second paragraph&lt;/p&gt;\n  &lt;p&gt;Third paragraph&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Essential CSS:</p>\n\n<pre><code>.container{\n  column-count:3; /* Add necessary prefixes */\n  padding-top:2em;\n  position:relative;\n}\n.h1{\n  position:absolute;\n  top:0;\n}\n</code></pre>\n\n<p>Absolute positioning exempts that element from the columns flow and seems to work just fine.</p>\n\n<p>P.S.: just noticed the post is rather old...well, I hope this helps someone else, support for these CSS properties hasn't improved <strong>that</strong> much</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>break-after: \n</code></pre>\n\n<p>is incorrect, should be: </p>\n\n<pre><code>column-break-after\n</code></pre>\n\n<p>also, no one has mentioned these properties:</p>\n\n<pre><code>-webkit-column-span: all;\n-moz-column-span: all;\ncolumn-span: all;\n</code></pre>\n\n<p>which sound like they could be useful here</p>\n\n<p>edit:\nalso, it should be mentioned that support for columns is now pretty decent actually, albeit with the use of vendor prefixes.</p>\n\n<pre><code>column-fill\n</code></pre>\n\n<p>is still not supported by most browsers but AFAIK the majority of other properties are</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have been trying CSS columns, but I can't get breaks to work. Here's the CSS so far:</p>\n\n<pre><code>#container { \n    width: 500px;\n    column-count: 3;\n    -moz-column-count: 3;\n    -webkit-column-count: 3;\n} \nh1 {\n    break-after: always;\n    -moz-column-break-after: always;\n    -webkit-column-break-after: always;\n}\n</code></pre>\n\n<p>And here's the relevant HTML:</p>\n\n<pre><code>&lt;div id=\"container\"&gt;\n    &lt;h1&gt;The header of the first column&lt;/h1&gt;\n    &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;\n    &lt;p&gt;Maecenas interdum mattis leo, id vehicula sapien ultricies et.&lt;/p&gt;\n    &lt;p&gt;Donec orci nunc, rhoncus ut convallis a, pretium quis elit.&lt;/p&gt;\n    &lt;p&gt;Aenean vulputate vulputate bibendum.&lt;/p&gt;\n    &lt;p&gt;Fusce imperdiet velit quis diam fermentum ut volutpat ipsum convallis.&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>No matter if I do <code>break-after: avoid</code>, <code>break-after: always</code>, <code>break-before: avoid</code> or <code>break-before: always</code> I still get the same result. Nothing changes. Can somebody help me out? I have tested it in Firefox 4.6 and Safari 5.0.5.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1380190599,
            "question_id": 6424088,
            "score": 26,
            "tags": [
                "html",
                "css"
            ],
            "title": "CSS column breaks?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>It's certainly easier to use table than div to layout a table, but keep in mind that a table is supposed to mean something - it's presenting data in a regular way for the user to see, more than putting boxes on the screen in a given order.  Generally, I think forms layouts should use divs to decide how the form elements are displayed.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you just need a simply row column grip type layout you shouldn't feel guilty using tables.  I don't know how anyone can call that 'bad design' just because it's not CSS.  I've seen <strong>many</strong> bad CSS based designs.  I love CSS and think it far superior in many ways to traditional nested table layouts, but do what works bests and what is easiest to maintain and move onto more important, more impactful decisions.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It's a grey area.  Not everything in markup has clearly defined boundaries, and this is one case where you get to use your personal preference and make a judgement call.  It doesn't quite fit the idea of data being organised, but the cells are related across multiple axes, and that's the rule of thumb I use to decide whether something fits in a table or not.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Yes, it does apply for form layouts.  Keep in mind that there are also tags like FIELDSET and LABEL which exist specifically for adding structure to a form, so it's not really a question of just using DIV.  You should be able to markup a form with pretty minimal HTML, and let CSS do the rest of the work.  E.g.:</p>\n\n<pre><code>&lt;fieldset&gt;\n    &lt;div&gt;\n         &lt;label for=\"nameTextBox\"&gt;Name:&lt;/label&gt;\n         &lt;input id=\"nameTextBox\" type=\"text\" /&gt;\n    &lt;/div&gt;\n    ...\n&lt;/fieldset&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>The general principle is that you want to use whatever HTML elements best convey the semantic content that you are intending and then rely on css to visually represent that semantic content. Following that principle buys a lot of intrinsic benefits including easier site-general visual changes, search engine optimization, multi-device layouts, and accessibility.</p>\n\n<p>So, the short answer is: you can do whatever you want, but best practices suggest that you only use table tags to represent tabular data and instead use whatever html tags best convey what it is that you are trying to represent. It might be a little harder initially, but once you get used to the idea, you'll wonder why you ever did it any other way.</p>\n\n<p>Depending on what you are trying to do with your form, it shouldn't take that much more markup to use semantic markup and css, especially if you rely on the cascading properties of css. Also, if you have several of the same form across many pages in your site, the semantic approach is much more efficient, both to code and to maintain.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If your forms are laid out in a tabular format (for example, labels on the left and fields on the right), then yes, use table tags.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think it's a myth that forms are \"difficult\" to layout nicely with good HTML and CSS. The level of control that CSS gives you over your layout goes way beyond what any clunky table-based layout ever would. This isn't a new idea, as <a href=\"http://www.smashingmagazine.com/2006/11/11/css-based-forms-modern-solutions/\" rel=\"nofollow\">this Smashing Magazine article</a> from way back in 2006 shows.</p>\n\n<p>I tend to use variants of the following markup in my forms:</p>\n\n<pre><code>&lt;div class=\"field text\"&gt;\n   &lt;label for=\"fieldName\"&gt;Field Title&lt;/label&gt;\n   &lt;input value=\"input value\" type=\"text\" name=\"fieldName\" id=\"fieldName\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I have a generic .form style in my CSS and then variants for text inputs, checkboxes, selects, textareas etc etc. For example:</p>\n\n<pre><code>.field label {\n   float: left;\n   width: 20%;\n}\n\n.field.text input {\n   width: 75%;\n   margin-left: 2%;\n   padding: 3px;\n}\n</code></pre>\n\n<p>Tables aren't evil. They are by far the best option when tabular data needs to be displayed. Forms IMHO aren't tabular data - they're forms, and CSS provides more than enough tools to layout forms however you like.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>A form is not \"presentation\", you ask for data, you do not usually present data. I use a lot of inline editing in tabular data. Obviousely i use the datacells - td as holders for the input elements when switching from presentation to input.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To make forms as accessible as possible and semantically correct, I use the following format:</p>\n\n<pre><code>  &lt;fieldset&gt;\n  &lt;ol&gt;\n    &lt;li&gt;\n      &lt;label for='text_field'&gt;Text Field&lt;/label&gt;\n      &lt;input type='text' name='text_field' id='text_field' /&gt;\n    &lt;/li&gt;\n  &lt;/ol&gt;\n  &lt;/fieldset&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>One thing that I don't often see discussed in these form layout questions, if you've chosen a table to layout your form (with labels on the left and fields on the right as mentioned in one of the answers) then that layout is fixed.  At work we recently had to do a quick 'proof of concept' of our web apps in Arabic.  The apps which had used tables for form layout were basically stuck, whereas I was able to reverse the order of all the form fields and labels on all my pages by changing about ten lines in my CSS file.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Most of the answers I've seen here seem appropriate. The only thing I'd add, specifically to apathetic's or Mr. Matt's is to use <code>&lt;dl&gt;/&lt;dt&gt;/&lt;dd&gt;</code>. I believe these represent the list semantically.</p>\n\n<pre><code>&lt;dl&gt;\n  &lt;dt&gt;&lt;label for=\"nameTextBox\"&gt;Name:&lt;/label&gt;&lt;/dt&gt;\n  &lt;dd&gt;&lt;input value=\"input value\" type=\"text\" name=\"fieldName\" id=\"fieldName\" /&gt;&lt;/dd&gt;\n&lt;/dl&gt;\n</code></pre>\n\n<p>You might want to restyle these, but this says semantically what's going on, that is you've got a list of \"terms\" (<code>&lt;dt&gt;</code>) and \"definitions\" (<code>&lt;dd&gt;</code>), with the term being the label and the definition being the user entered values.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I use CSS mostly until CSS becomes a drag. For example it's a lot easier to create a 3+ column (3 sets of label + form field) form using a table than in css. I couldn't get the layout to look properly in all major browsers using pure css and I was spending too much time getting it to work. So I said screw it and I did it easily using a table. Table are not bad.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I keep hearing that <code>div</code> tags should be used for layout purposes and not <code>table</code> tags. So does that also apply to form layout? I know a form layout is still a layout, but it seems like creating form layouts with <code>div</code>s requires more <code>html</code> and <code>css</code>. So with that in mind, should forms layouts use <code>div</code> tags instead?</p>\n",
            "last_activity_date": 1329940469,
            "question_id": 109488,
            "score": 17,
            "tags": [
                "html",
                "css",
                "forms",
                "layout"
            ],
            "title": "Is it bad design to use table tags when displaying forms in html?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I use the following snippet that I wrote with jQuery. Just add a class of textbox-auto-clear to any textbox on the page and you should be good to go.</p>\n\n<pre><code>&lt;input type=\"text\" value=\"Please enter your name\" class=\"textbox-auto-clear\" /&gt;\n\n$(\".textbox-auto-clear\").each(function(){\n    var origValue = $(this).val(); // Store the original value\n    $(this).focus(function(){\n        if($(this).val() == origValue) {\n            $(this).val('');\n        }\n    });\n    $(this).blur(function(){\n        if($(this).val() == '') {\n            $(this).val(origValue);\n        }\n    });\n});\n</code></pre>\n\n<p>I assume that you want to keep using the placeholder attribute for HTML5 browsers, in which case you'd have to do some browser detection and only apply the jQuery solution to browsers that don't support it.</p>\n\n<p>Better yet, you can us the <a href=\"http://www.modernizr.com/\" rel=\"nofollow\">Modernizer</a> library, as outlined in this answer.\n<a href=\"http://stackoverflow.com/questions/1657170/detecting-support-for-specific-html-5-features-via-jquery/1657182#1657182\">http://stackoverflow.com/questions/1657170/detecting-support-for-specific-html-5-features-via-jquery/1657182#1657182</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One day I'll get around to properly documenting this, but see this example: <a href=\"http://dorward.me.uk/tmp/label-work/example.html\">http://dorward.me.uk/tmp/label-work/example.html</a></p>\n\n<p>In short \u2014 position a <code>&lt;label&gt;</code> under a transparent <code>&lt;input&gt;</code> using <code>&lt;div&gt;</code> to provide background colour and borders.</p>\n\n<p>Then use JS to determine if the label should be visible or not based on focusing.</p>\n\n<p>Apply different styles when JS is not available to position the label beside the element instead.</p>\n\n<p>Unlike using the <code>value</code>, this doesn't render the content inaccessible to devices which only display the focused content (e.g. screen readers), and also works for inputs of the <code>password</code> type.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>By the way...if anyone is interested...I found a nice elegant solution that is a jQuery plugin that is SOOO nice.</p>\n\n<p>It literally is one line of jQuery, a minified js plugin, along with a simple class name on the input.</p>\n\n<p><a href=\"http://labs.thesedays.com/projects/jquery/clearfield/\" rel=\"nofollow\">http://labs.thesedays.com/projects/jquery/clearfield/</a></p>\n\n<p>It's the most beautiful thing I have discovered, next to 'Placeholder' in html.</p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>Here is a MooTools Plugin, that brings the placeholder to browsers that don't support it yet:</p>\n\n<p><a href=\"http://mootools.net/forge/p/form_placeholder\" rel=\"nofollow\">http://mootools.net/forge/p/form_placeholder</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is the simplest solution that I found working everywhere:</p>\n\n<pre><code>&lt;input id=\"search\" \n   name=\"search\" \n   onblur=\"if (this.value == '') {this.value = 'PLACEHOLDER';}\" \n   onfocus=\"if (this.value == 'PLACEHOLDER') {this.value = '';}\"\n/&gt;\n</code></pre>\n\n<p>Replace PLACEHOLDER with your own. </p>\n\n<p>At the moment, FF3 does not yet support the \"placeholder\" attribute of the \"input\" element. FF4, Opera11 and Chrome8 support it partially, i.e. they render the placeholder text in the field, but do not delete it when the user focuses in the field, which is worse that not supporting it at all.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I use this one: <a href=\"https://github.com/danbentley/placeholder\">https://github.com/danbentley/placeholder</a><br>\nLightweight and simple jQuery plugin.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I use this one: <a href=\"https://github.com/Jayphen/placeholder\" rel=\"nofollow\">https://github.com/Jayphen/placeholder</a>\nThis lightweight and simple jQuery plugin is a fork of danbentley/placeholder.</p>\n\n<p>Advantage: it adds a class \"placeholder\" to input fields that are temporarily filled.\nCss \".placeholder {color:silver}\" make the polyfill text look like a placeholder instead of regular input text.</p>\n\n<p>Disadvantage: It doesn't polyfill the placeholder of a password field.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The trick is to use javascript functions onBlur() and onFocus(). </p>\n\n<p>Here is the code that worked for me:</p>\n\n<pre><code>&lt;script language=\"javascript\" type=\"text/javascript\" &gt;\n\n    var hint_color = \"grey\", field_color = null;\n\n    var hinted = true;\n\n    function hint() { // set the default text\n\n        document.getElementById('mce-EMAIL').style.color = hint_color;\n        document.getElementById('mce-EMAIL').value = \"&lt;?php echo SUBSCRIPTION_HINT; ?&gt;\";\n\n        hinted = true;\n\n    }\n\n    function hintIfEmpty() { // set the default text, only if the field is empty\n\n        if (document.getElementById('mce-EMAIL').value == '') hint();\n\n    }\n\n    function removeHint() {\n\n        if (hinted) {\n\n            document.getElementById('mce-EMAIL').style.color = field_color;\n            document.getElementById('mce-EMAIL').value = \"\";\n\n            hinted = false;\n\n        }\n\n    }\n\n    function send() {\n\n        document.getElementById('subscription_form').submit();\n        hint();\n\n    }\n\n&lt;/script&gt;\n\n&lt;div style=\"position:absolute; display: block; top:10; left:10; \"&gt;\n&lt;form id=\"subscription_form\" action=\"&lt;?php echo SUBSCRIPTION_LINK; ?&gt;\" method=\"post\" target=\"_blank\"&gt;\n\n    &lt;input type=\"email\" value=\"\" name=\"EMAIL\" class=\"email\" id=\"mce-EMAIL\" style=\"width: 122px;\" onBlur=\"hintIfEmpty();\" onFocus=\"removeHint();\" required&gt;\n    &lt;a href=\"javascript:send()\"&gt;&lt;font style=\"position: relative; top:-1px;\"&gt;&lt;b&gt;ok&lt;/b&gt;&lt;/font&gt;&lt;/a&gt;\n\n&lt;/form&gt;\n&lt;/div&gt;\n\n&lt;script language=\"javascript\" type=\"text/javascript\" &gt;\n\n    field_color = document.getElementById('mce-EMAIL').style.color;\n    hint();\n\n&lt;/script&gt;\n</code></pre>\n\n<p>SUBSCRIPTION_HINT (i.e.: \"your e-mail\" ) and SUBSCRIPTION_LINK (i.e.: the value of the 'action' tag in your EN mailchimp embed code...) are PHP constants used for localization.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For \"<strong>placeholder</strong>\" work in Firefox just add the attribute </p>\n\n<blockquote>\n  <p>::-moz-placeholder</p>\n</blockquote>\n\n<p>in CSS tags.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>This works in Chrome and any other browser that supports placeholder text in HTML5</p>\n\n<pre><code>&lt;input id=\"name\" name=\"name\"  type=\"text\" placeholder=\"Please enter your name...\" required /&gt; &lt;br /&gt;\n</code></pre>\n\n<p>But, it doesn't work in 3.5 and earlier of Firefox, and obviously IE8, and possibly other browsers.</p>\n\n<p>How do I achieve the same thing (preferably in HTML/CSS - if not I am open to suggestions), to support all the older browsers? If not every single browser, at least Firefox and IE.</p>\n\n<p>Safari and Chrome already support it (or the latest versions anyway).</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1387612542,
            "question_id": 3429520,
            "score": 15,
            "tags": [
                "html",
                "css",
                "firefox",
                "internet-explorer-8"
            ],
            "title": "How do I get placeholder text in firefox and other browsers that don&#39;t support the html5 tag option?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>why not just remove the <code>img</code> tags then set the image as a <code>background</code> and center it like this:</p>\n\n<p>(doing it inline, but via external css file is the best way)</p>\n\n<pre><code>&lt;div style=\"background: url('7-612x612-2.png') no-repeat center center transparent;\"&gt;&amp;nbsp;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>There's a few good ways to both horizontally and vertically center an element, it just comes down to the situation and your preference.</p>\n\n<p>With the following markup:</p>\n\n<pre><code>&lt;div&gt;&lt;img src=\"a.png\" width=\"100\" height=\"100\"&gt;&lt;/div&gt;\n</code></pre>\n\n<h2>line-height</h2>\n\n<pre><code>div { width:300px; height:300px; line-height:300px; text-align:center; }\ndiv img { vertical-align:middle; }\n</code></pre>\n\n<p>Good quick fix without messing with <code>position</code>ing too much but if actually text is being centered this way could be problematic.</p>\n\n<h2>display:table-cell</h2>\n\n<pre><code>div { width:300px; height:300px; text-align:center; display:table-cell; vertical-align:middle; }\n</code></pre>\n\n<p>Works just like good old tables and highly flexible, however only supported in modern browsers.</p>\n\n<h2>position:absolute</h2>\n\n<pre><code>div { width:300px; height:300px; position:relative; }\ndiv img { top:-50px; left:-50px; position:absolute; margin:50% 0 0 50%; }\n</code></pre>\n\n<p><code>top</code> and <code>left</code> offsets should be set to half the respective dimensions of the element being positioned. Works well if the containing element needs to be flexible but absolute values are required to work.</p>\n\n<hr>\n\n<h2>Demo of all techniques: <a href=\"http://jsfiddle.net/Marcel/JQbea/\">jsfiddle.net/Marcel/JQbea</a> (<a href=\"http://jsfiddle.net/Marcel/JQbea/show/\">fullscreen</a>)</h2>\n",
                    "is_accepted": true,
                    "score": 39
                }
            ],
            "body": "<p>Hi I want to place a Image which is center align vertically and horizontally as well,\nMy HTML markup is</p>\n\n<pre><code>&lt;ul class=\"big-wrapper\"&gt;\n&lt;li&gt;\n&lt;div class=\"filler\" style=\"vertical-align: middle; display: inline-block;\"&gt;\n    &lt;img src=\"7-612x612-2.png\" original=\"/7-612x612-2.png\" style=\"margin: 0pt auto; display: table-cell; text-align: center; vertical-align: middle;\"&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;div class=\"filler\" style=\"vertical-align: middle; display: inline-block;\"&gt;\n    &lt;img src=\"7-612x612-2.png\" original=\"/7-612x612-2.png\" style=\"margin: 0pt auto; display: table-cell; text-align: center; vertical-align: middle;\"&gt;\n\n&lt;/li&gt;\n&lt;/ul&gt;\n\nUsed Css\nul.big-wrapper li &gt; div {\nheight:612px;\nwidth:612px;\n}\n\nul.big-wrappe li {\nfloat:left;\nmargin:0 20px 20px 0;\nposition:relative;\ntext-align:center;\n}\n</code></pre>\n\n<p>After doing all those stuff i am not able to do so.Please have a look and help me.</p>\n",
            "last_activity_date": 1301472328,
            "question_id": 5481821,
            "score": 11,
            "tags": [
                "html",
                "css"
            ],
            "title": "Image center align vertically and horizontally"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The <a href=\"http://stackoverflow.com/questions/5953753/flickering-when-navigating-between-pages\">third link</a> in your post is how I fixed it a while back when I had this problem. I also added -webkit-perspective:1000; The flickering is because of 3D acceleration and the backface of the page being transformed becomes visible for a fraction of a second making it look like a flicker.</p>\n\n<p>Edit: Look at <a href=\"http://indiegamr.com/ios6-html-hardware-acceleration-changes-and-how-to-fix-them/\" rel=\"nofollow\">this</a> as well for more info.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Ensure that this code exists in your <code>mobileinit</code> method:</p>\n\n<pre><code>//initialize jQM\n$(document).on(\"mobileinit\", function () {\n  //hack to fix android page transition flicking issue\n  if (navigator.userAgent.indexOf(\"Android\") != -1){\n      $.extend(  $.mobile , {\n          defaultPageTransition: 'none'\n      });   \n    }\n});\n</code></pre>\n\n<p>Also : change the following in the <code>jquerymobile.js</code></p>\n\n<pre><code>// Make our transition handler the public default.\n$.mobile.defaultTransitionHandler = simultaneousHandler;\n\n//transition handler dictionary for 3rd party transitions\n$.mobile.transitionHandlers = {\n    \"default\": $.mobile.defaultTransitionHandler,\n    \"sequential\": sequentialHandler,\n    \"simultaneous\": simultaneousHandler\n};\n</code></pre>\n\n<p>Also kindly let me know which android device version you are using?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Setting viewport to user-scalable=no fixed the problem for me:\u00a0</p>\n\n<p>Change </p>\n\n<pre><code>&lt; meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" /&gt;\n</code></pre>\n\n<p>to</p>\n\n<pre><code>&lt; meta name=\"viewport\" content=\"width=device-width, user-scalable=no\" /&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Setting viewport to user-scalable=no fixed the problem for me:</p>\n\n<pre><code>&lt; meta name=\"viewport\" content=\"width=device-width, user-scalable=no\" /&gt;\n</code></pre>\n\n<p>Works for\njQuery Mobile 1.3.1\nCordova 2.8.0\non Nexus 4 / Android 4.2.2</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>i tried dozens of solutions but none of them worked, form me the best way for me to solve this blink, is to set de autohidesplashscreen property to false , show the splashscreen in the previous page and hide it in the destination page in the deviceready. In some transitions we slept the transitions about 0,5 - 1 sec in order to avoid spalshscreen blink. Not the best solution but worked for us.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using PhoneGap 2.2.0 in combination with jQuery Mobile 1.2.0 for my app on the Android platform (version 2.3.3 and up).\nOn the pages I use fixed headers, and no transitions at all. Rest is pretty much standard jQuery.</p>\n\n<p>When I am navigating from page to page I get a white blink (entire page), for a brief moment. I searched on the Internet for hours.</p>\n\n<p>Failed trying below:</p>\n\n<ul>\n<li>Dozens CSS hacks I found on internet. (like: <a href=\"https://github.com/jquery/jquery-mobile/issues/4024\">https://github.com/jquery/jquery-mobile/issues/4024</a> and <a href=\"https://groups.google.com/forum/?fromgroups=#!topic/phonegap/EtZ2KwseKQ0\">https://groups.google.com/forum/?fromgroups=#!topic/phonegap/EtZ2KwseKQ0</a> and <a href=\"http://stackoverflow.com/questions/5953753/flickering-when-navigating-between-pages\">Flickering when navigating between pages</a> ).</li>\n<li>I tried switching of fixed headers (again, I am not using transition effects)..</li>\n<li>I tried jQuery Mobile 1.3.1. (no luck there)</li>\n<li>One thing I did not tried is PhoneGap 2.3.0, but I don't see anything interesting for that matter in the changelog. Edit: issue persists on PhoneGap 2.5.0.</li>\n</ul>\n\n<p>When I switch hardware acceleration off in the Android project, the blinking is gone. But then some CSS styling goes wrong and overall performance is very very bad (obviously).</p>\n\n<p>I tried the code below now also.</p>\n\n<pre><code>ui.page {\n-webkit-transform: translateZ(0);\n-webkit-perspective:1000;\n-webkit-backface-visibility: hidden;\n}\n</code></pre>\n\n<p>To bad still no luck.</p>\n\n<p>Also tried this one: <a href=\"https://github.com/watusi/jquery.mobile.simultaneous-transitions\">https://github.com/watusi/jquery.mobile.simultaneous-transitions</a>\nStill a brief (full white page) blink before transistion.</p>\n\n<p>It really seems that it has nothing to do with animation transitions of the page itself, but something strange that is happening right after unloading the old page and right before loading the new one.</p>\n\n<p>Update 25-04-2013:\nAlso tried:\n    <a href=\"https://groups.google.com/forum/?fromgroups=#!topic/phonegap/EtZ2KwseKQ0\">https://groups.google.com/forum/?fromgroups=#!topic/phonegap/EtZ2KwseKQ0</a>\n    <a href=\"https://github.com/jquery/jquery-mobile/issues/4024\">https://github.com/jquery/jquery-mobile/issues/4024</a>\n    <a href=\"https://github.com/jquery/jquery-mobile/pull/4129\">https://github.com/jquery/jquery-mobile/pull/4129</a></p>\n\n<p>The only thing that makes the blinking go away is removing the fixedheader part. Then it is as smooth as butter, but I miss the headers that are compatible with the panels.</p>\n\n<p>Also tried the 1 page template (all pages in one file). Did not help either.</p>\n\n<p>jQuery Mobile 1.3.1\nPhoneGap 2.5.0\nAndroid 4+\nDevices:\n- Google Samsung Galaxy Nexus\n- Samsung Galaxy Tab 10.1 (had the issue, but don't have device any more)\n- Samsung Galaxy Note 10.1</p>\n\n<p>I have submitted an issue on Github now: <a href=\"https://github.com/jquery/jquery-mobile/issues/6031\">https://github.com/jquery/jquery-mobile/issues/6031</a></p>\n",
            "last_activity_date": 1401183299,
            "question_id": 14723514,
            "score": 10,
            "tags": [
                "javascript",
                "android",
                "css",
                "cordova",
                "jquery-mobile"
            ],
            "title": "Blinking/flickering with JQM and PhoneGap on Android"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>There is no pure CSS/HTML way to achieve this, as far as I know.  Your best bet would be to do it in pre-processing (if list length > 150, split into 3 columns, esle if > 70, split into  2 columns, else 1).  </p>\n\n<p>The other option, using JavaScript (I'm not familiar with the jQuery library specifically) would be to iterate through lists, probably based on them being a certain class, count the number of children, and if it is a high  enough number, dynamically create a new list after the first, transferring some number of list items to the new list.  As far as implementing the columns, you could probably float them left, followed by an element that had the style <code>clear:left</code> or <code>clear:both</code>.</p>\n\n<p>CSS:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>ul.column {\n    float:left;\n    width:50%;\n}\ndiv.clear {\n    clear:both;\n}\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;ul class=\"column\"&gt;\n    &lt;li&gt;Item 1&lt;/li&gt;\n    &lt;li&gt;Item 2&lt;/li&gt;\n    &lt;!-- ... --&gt;\n    &lt;li&gt;Item 49&lt;/li&gt;\n    &lt;li&gt;Item 50&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=\"column\"&gt;\n    &lt;li&gt;Item 51&lt;/li&gt;\n    &lt;li&gt;Item 52&lt;/li&gt;\n    &lt;!-- ... --&gt;\n    &lt;li&gt;Item 99&lt;/li&gt;\n    &lt;li&gt;Item 100&lt;/li&gt;\n&lt;/ul&gt;\n&lt;div class=\"clear\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>So I dug up this article from A List Apart <a href=\"http://www.alistapart.com/articles/multicolumnlists\">CSS Swag: Multi-Column Lists</a>.  I ended up using the first solution, it's not the best but the others require either using complex HTML that can't be generated dynamically, or creating a lot of custom classes, which could be done but would require loads of in-line styling and possibly a huge page.</p>\r\n\r\n<p>Other solutions are still welcome though.</p>",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>If Safari and Firefox support is good enough for you, there is a CSS solution:</p>\r\n\r\n<pre><code>UL {<br>  column-count:3; -moz-column-count:3; -webkit-column-count:3; <br>  column-gap:2em; -moz-column-gap:2em; -webkit-column-gap:2em;<br>}<br></code></pre>\r\n\r\n<p>I'm not sure about Opera.</p>",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>To output the list into multiple grouped tag you can loop in this fashion.</p>\n\n<pre><code>&lt;cfset list=\"1,2,3,4,5,6,7,8,9,10,11,12,13,14\"&gt;\n&lt;cfset numberOfColumns = \"3\"&gt;\n\n&lt;cfoutput&gt;\n&lt;cfloop from=\"1\" to=\"#numberOfColumns#\" index=\"col\"&gt;\n  &lt;ul&gt;\n  &lt;cfloop from=\"#col#\" to=\"#listLen(list)#\" index=\"i\" step=\"#numberOfColumns#\"&gt;\n    &lt;li&gt;#listGetAt(list,i)#&lt;/li&gt;\n  &lt;/cfloop&gt;\n  &lt;/ul&gt;\n&lt;/cfloop&gt;\n&lt;/cfoutput&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The following JavaScript code works only in Spidermonkey and Rhino, and it operates on E4X nodes--i.e., this is useful only for server-side JavaScript, but it might give someone a starting point for doing a jQuery version. (It's been very useful to me on the server side, but I haven't needed it on the client badly enough to actually build it.)</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function columns(x,num) {\n    num || (num = 2);\n    x.normalize();\n\n    var cols, i, j, col, used, left, len, islist;\n    used = left = 0;\n    cols = &lt;div class={'columns cols'+num}&gt;&lt;/div&gt;;\n\n    if((left = x.length())==1)\n        left = x.children().length();\n    else\n        islist = true;\n\n    for(i=0; i&lt;num; i++) {\n        len = Math.ceil(left/(num-i));\n        col = islist ? new XMLList\n                     : &lt;{x.name()}&gt;&lt;/{x.name()}&gt;;\n\n        if(!islist &amp;&amp; x['@class'].toString())\n            col['@class'] = x['@class'];\n\n        for(j=used; j&lt;len+used; j++)\n            islist ? (col += x[j].copy()) \n                   : (col.appendChild(x.child(j).copy()));\n\n        used += len;\n        left -= len;\n        cols.appendChild(&lt;div class={'column'+(i==(num-1) ? 'collast' : '')}&gt;{col}&lt;/div&gt;);\n    }\n    return cols;\n}\n</code></pre>\n\n<p>You call it like <code>columns(listNode,2)</code> for two columns, and it turns:</p>\n\n<pre><code>&lt;ul class=\"foo\"&gt;\n  &lt;li&gt;a&lt;/li&gt;\n  &lt;li&gt;b&lt;/li&gt;\n  &lt;li&gt;c&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>into:</p>\n\n<pre><code>&lt;div class=\"columns cols2\"&gt;\n  &lt;div class=\"column\"&gt;\n    &lt;ul class=\"foo\"&gt;\n      &lt;li&gt;a&lt;/li&gt;\n      &lt;li&gt;b&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n  &lt;div class=\"column collast\"&gt;\n    &lt;ul class=\"foo\"&gt;\n      &lt;li&gt;c&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>It's meant to be used with CSS like this:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>div.columns {\n    overflow: hidden;\n    _zoom: 1;\n}\n\ndiv.columns div.column {\n    float: left;\n}\n\ndiv.cols2 div.column {\n    width: 47.2%;\n    padding: 0 5% 0 0;\n}\n\ndiv.cols3 div.column {\n    width: 29.8%;\n    padding: 0 5% 0 0;\n}\n\ndiv.cols4 div.column {\n    width: 21.1%;\n    padding: 0 5% 0 0;\n}\n\ndiv.cols5 div.column {\n    width: 15.9%;\n    padding: 0 5% 0 0;\n}\n\ndiv.columns div.collast {\n    padding: 0;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've done this with jQuery - it's cross-platform and a minimum of code.</p>\n\n<p>Select the UL, clone it, and insert it after the previous UL. Something like:</p>\n\n<pre><code>$(\"ul#listname\").clone().attr(\"id\",\"listname2\").after()\n</code></pre>\n\n<p>This will insert a copy of your list after the previous one. If the original list is styled with a float:left, they should appear side by side.</p>\n\n<p>Then you can delete the even items from the left-hand list and the odd items from the right hand list.</p>\n\n<pre><code>$(\"ul#listname li:even\").remove();\n$(\"ul#listname2 li:odd\").remove();\n</code></pre>\n\n<p>Now you have a left to right two column list.</p>\n\n<p>To do more columns you'll want to use <code>.slice(begin,end)</code> and/or the <code>:nth-child</code> selector.\nie, for 21 LIs you could <code>.slice(8,14)</code> to create a new UL inserted after your original UL, then select the original UL and delete the li's selected with <code>ul :gt(8)</code>. </p>\n\n<p>Try the Bibeault/Katz book on jQuery it's a great resource.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>the thing that most people are forgetting is that when floating <code>&lt;li/&gt;</code> items, all the item have to be the same height or the columns start getting out of whack.</p>\n\n<p>since you're using a server side language, my recommendation would be to use cf to split the list into 3 arrays, then you can use an outer ul to wrap the 3 inner ul like so:</p>\n\n<pre><code>&lt;cfset thelist = \"1,2,3,4,5,6,7,8,9,10,11,12,13\"&gt;  \n&lt;cfset container = []&gt;  \n&lt;cfset container[1] = []&gt;  \n&lt;cfset container[2] = []&gt;  \n&lt;cfset container[3] = []&gt;  \n\n&lt;cfloop list=\"#thelist#\" index=\"i\"&gt;  \n    &lt;cfif i mod 3 eq 0&gt;  \n        &lt;cfset arrayappend(container[3], i)&gt;  \n    &lt;cfelseif i mod 2 eq 0&gt;  \n        &lt;cfset arrayappend(container[2], i)&gt;  \n    &lt;cfelse&gt;  \n        &lt;cfset arrayappend(container[1], i)&gt;  \n    &lt;/cfif&gt;  \n&lt;/cfloop&gt;  \n\n&lt;style type=\"text/css\"&gt; \n    ul li { float: left; }  \n    ul li ul li { clear: left; }  \n&lt;/style&gt;  \n\n&lt;cfoutput&gt;  \n&lt;ul&gt;  \n    &lt;cfloop from=\"1\" to=\"3\" index=\"a\"&gt;  \n    &lt;li&gt;  \n        &lt;ul&gt;  \n            &lt;cfloop array=\"#container[a]#\" index=\"i\"&gt;  \n            &lt;li&gt;#i#&lt;/li&gt;  \n            &lt;/cfloop&gt;  \n        &lt;/ul&gt;  \n    &lt;/li&gt;  \n    &lt;/cfloop&gt;  \n&lt;/ul&gt;  \n&lt;/cfoutput&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Using a modulo operation, you can quickly split your list into multiple lists by inserting a <code>&lt;/ul&gt;&lt;ul&gt;</code> during your loop.</p>\n\n<pre><code>&lt;cfset numberOfColumns = 3 /&gt;\n&lt;cfset numberOfEntries = 34 /&gt;\n&lt;ul style=\"float:left;\"&gt;\n    &lt;cfloop from=\"1\" to=\"#numberOfEntries#\" index=\"i\"&gt;\n    \t&lt;li&gt;#i#&lt;/li&gt;\n    \t\t&lt;cfif NOT i MOD ceiling(numberOfEntries / numberOfColumns)&gt;\n    \t\t\t&lt;/ul&gt;\n    \t\t\t&lt;ul style=\"float:left;\"&gt;\n    \t\t&lt;/cfif&gt;\n    &lt;/cfloop&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>Use <code>ceiling()</code> instead of <code>round()</code> to ensure that you don't have extra values at the end of the list and that the last column is shortest.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is a variation on <a href=\"http://stackoverflow.com/questions/4923/wrapping-lists-into-columns/76747#76747\">Thumbkin's</a> example (using Jquery):</p>\n\n<pre><code>var $cat_list = $('ul#catList'); // UL with all list items.\nvar $cat_flow = $('div#catFlow'); // Target div.\nvar $cat_list_clone = $cat_list.clone(); // Clone the list.\n$('li:odd', $cat_list).remove(); // Remove odd list items.\n$('li:even', $cat_list_clone).remove(); // Remove even list items.\n$cat_flow.append($cat_list_clone); // Append the duplicate to the target div.\n</code></pre>\n\n<p>Thanks Thumbkin!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is another solution that allows for columned lists in the following style:</p>\n\n<pre><code>1.      4.      7.       10.\n2.      5.      8.       11.\n3.      6.      9.       12.\n</code></pre>\n\n<p>(but it's pure javascript, and requires jQuery, with no fallback)</p>\n\n<p>The following contains a some code that modifies the Array prototype to give a new function called 'chunk' that breaks any given Array into chunks of a given size. Next is a function called 'buildColumns' that takes a UL selector string and a number used to designate how many rows your columns may contain. (<a href=\"http://jsfiddle.net/bradleygriffith/Nj4LW/\" rel=\"nofollow\">Here is a working JSFiddle</a>)</p>\n\n<pre><code>$(document).ready(function(){\n    Array.prototype.chunk = function(chunk_size){\n        var array = this,\n            new_array = [],\n            chunk_size = chunk_size,\n            i,\n            length;\n\n        for(i = 0, length = array.length; i &lt; length; i += chunk_size){\n            new_array.push(array.slice(i, i + chunk_size));\n        }\n        return new_array;\n    }\n\n    function buildColumns(list, row_limit) {\n        var list_items = $(list).find('li').map(function(){return this;}).get(),\n        row_limit = row_limit,\n        columnized_list_items = list_items.chunk(row_limit);\n\n        $(columnized_list_items).each(function(i){\n            if (i != 0){\n                var item_width = $(this).outerWidth(),\n                    item_height = $(this).outerHeight(),\n                    top_margin = -((item_height * row_limit) + (parseInt($(this).css('margin-top')) * row_limit)),\n                    left_margin = (item_width * i) + (parseInt($(this).css('margin-left')) * (i + 1));\n\n                $(this[0]).css('margin-top', top_margin);\n                $(this).css('margin-left', left_margin);\n            }\n        });\n    }\n\n    buildColumns('ul#some_list', 5);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Since I had the same problem and couldn't find anything \"clean\" I thought I'd posted my solution. In this example I use a reversed <code>while</code> loop so I can use <code>splice</code> instead of <code>slice</code>. The advantage now is splice() only needs an index and a range where slice() needs an index and the total. The latter tends to become difficult while looping. </p>\n\n<p>Disadvantage is I need to reverse the stack while appending.</p>\n\n<p><strong>Example:</strong></p>\n\n<p>cols = 4; \nliCount = 35</p>\n\n<p>for loop with slice = [0, 9]; [9, 18]; [18, 27]; [27, 35]</p>\n\n<p>reversed while with splice = [27, 8]; [18, 9]; [9, 9]; [0, 9]</p>\n\n<p><strong>Code:</strong></p>\n\n<pre><code>// @param (list): a jquery ul object\n// @param (cols): amount of requested columns\nfunction multiColumn (list, cols) {\n    var children = list.children(),\n        target = list.parent(),\n        liCount = children.length,\n        newUl = $(\"&lt;ul /&gt;\").addClass(list.prop(\"class\")),\n        newItems,\n        avg = Math.floor(liCount / cols),\n        rest = liCount % cols,\n        take,\n        stack = [];\n\n    while (cols--) {\n        take = rest &gt; cols ? (avg + 1) : avg;\n        liCount -= take;\n\n        newItems = children.splice(liCount, take);\n        stack.push(newUl.clone().append(newItems));\n    }\n\n    target.append(stack.reverse());\n    list.remove();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using ColdFusion to populate a template that includes HTML lists (<code>&lt;ul&gt;</code>'s).</p>\n\n<p>Most of these aren't that long, but a few have ridiculously long lengths and could really stand to be in 2-3 columns.</p>\n\n<p>Is there an HTML, ColdFusion or perhaps JavaScript (I have jQuery available) way to do this easily?  It's not worth some over-complicated heavy weight solution to save some scrolling.</p>\n",
            "last_activity_date": 1414691568,
            "question_id": 4923,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "cfml"
            ],
            "title": "Wrapping lists into columns"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use pseudo selectors, as easwee said. For example, to make the form element green when valid, and red when invalid, do something like this:</p>\n\n<pre><code>:invalid {\n    background: #ffdddd;\n         }\n:valid{\n      background:#ddffdd;\n      }\n</code></pre>\n\n<p>If you need a full reference of these, head to <a href=\"https://developer.mozilla.org/en/CSS/%3ainvalid\" rel=\"nofollow\">Mozilla's reference.</a></p>\n\n<p>P.S. Sorry if I'm doing these answers wrong, I'm new to this community.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Currently, there is no way to style those little validation tooltips. The only other option, which is what I have chosen to do, is to disable the browser validation all together for now and rely on my own client-side validation scripts.</p>\n\n<p>According to this article:\n<a href=\"http://blog.oldworld.fr/index.php?post/2010/11/17/HTML5-Forms-Validation-in-Firefox-4\" rel=\"nofollow\">http://blog.oldworld.fr/index.php?post/2010/11/17/HTML5-Forms-Validation-in-Firefox-4</a></p>\n\n<p>\"The simplest way to opt out is to add the <strong>novalidate</strong> attribute to your <code>&lt;form&gt;</code>. You can also set <strong>formnovalidate</strong> on your submit controls.\"</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Chrome provides a native look and feel for their validation error speach bubbles. The error bubble is made up of four containing elements that are not normative elements.  These four elements are stylable via pseudo-elements that apply to separate sections of the bubble:</p>\n\n<pre><code>::-webkit-validation-bubble\n\n::-webkit-validation-bubble-arrow-clipper \n\n::-webkit-validation-bubble-arrow \n\n::-webkit-validation-bubble-message \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>For Google Chrome, it is not possible to style validation messages any more:  <a href=\"https://code.google.com/p/chromium/issues/detail?id=259050\" rel=\"nofollow\">https://code.google.com/p/chromium/issues/detail?id=259050</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A required field will be invalid until the correct input is entered. A field that isn't required but has validation, such as a URL field, will be valid until text is entered. </p>\n\n<pre><code> input:invalid { \nborder:solid red;\n}\n</code></pre>\n\n<p>for more info <a href=\"http://msdn.microsoft.com/en-us/library/ie/hh772367%28v=vs.85%29.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/ie/hh772367(v=vs.85).aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I style the HTML5 form validation error messages with CSS?</p>\n",
            "last_activity_date": 1405261317,
            "question_id": 5328883,
            "score": 27,
            "tags": [
                "css",
                "html5",
                "html5-validation"
            ],
            "title": "How do I style the HTML5 form validation error messages with CSS?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>IE won't accept a font that includes a format string in the src descriptor - that second src line could be the culprit. What happens if you remove it (or remove the format string?)</p>\n\n<p>Next - sometimes, IE can be a bit pedantic about whether or not you use quotes around values in CSS. Try <code>font-family: \"HelveticaLTCN\"</code> instead?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One thing you need to check is </p>\n\n<p>.css file and .eot should be in same folder if you do url('HelveticaNeueLTCom-LtCn_0.eot')</p>\n\n<p>or do full url path like src:url(<a href=\"http://www.example.com/path/to/url/Helvetica.eot\" rel=\"nofollow\">http://www.example.com/path/to/url/Helvetica.eot</a>)</p>\n\n<p>Quotes are optional as far as I know.</p>\n\n<p>ps# I am doing font embedding in my blog for long time, its working fine.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you've thrown in the towel or you're still struggling with this I <em>strongly</em> recommend <a href=\"http://www.fontsquirrel.com/fontface/generator\">font squirrel</a>.  It replaces WEFT far better than any of the other online .eot generators. As a huge bonus, it supplies all needed cross-browser formats in one zip file along with a working CSS+HTML sample page.\nIt's the closest thing yet to @fontface nirvana.</p>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>I was having the same problem as panas. I converted from ttf to eot using onlinefontconverter.com. Well, it seems that was the problem: I just tryied fontsquirrel.com as atsjr pointed out and everything is working fine!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Internet Explorer gets a bit iffy with the other @font-face definitions in there. I previously found this to be of amazing help - <a href=\"http://paulirish.com/2009/bulletproof-font-face-implementation-syntax/\" rel=\"nofollow\">http://paulirish.com/2009/bulletproof-font-face-implementation-syntax/</a></p>\n\n<p>In short, they recommend the best way is the following. The only change is to add a question mark at the end of the font url. Weird, no?</p>\n\n<pre><code>@font-face {\n  font-family: 'Graublau Web';\n  src: url('GraublauWeb.eot?') format('eot'), url('GraublauWeb.woff') format('woff'), url('GraublauWeb.ttf') format('truetype');\n}\n</code></pre>\n\n<p>There are a number of other alternatives listed, namely around specifying separate @font-face tags for the EOT file from the others.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>While struggling with a similar problem I've noticed that somehow the <code>DOCTYPE</code> definition affects embedded fonts in <code>IE</code>. When I removed the <code>DOCTYPE</code> definition the font displayed properly.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Remember that: .eot fonts must be the last one \"src\". If not, IE will rewrite the config and crash the font.</p>\n\n<pre><code>@font-face {\n    font-family: \"Aller Bold\";\n    src: url(fonts/Aller_Bd.ttf) format(\"truetype\");\n    src: url(fonts/Aller_Bd.eot);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>this code could solve my problem in IE:</p>\n\n<pre><code>  @font-face {\n      font-family: 'kurdish';\n      src: url('font/zkurd_aras.eot?') format('eot'), url('font/zkurd_aras.woff') format('woff'), url('font/zkurd_aras.ttf') format('truetype');}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The best definition for <strong>font-face</strong> is:</p>\n\n<pre><code>@font-face {\n  font-family: 'Graublau Web';\n  src: url('GraublauWeb.eot?') format('eot'), url('GraublauWeb.woff') format('woff'), url('GraublauWeb.ttf') format('truetype');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had the same issues many folks here encountered. The issue turned out to be simply that IE has a shorter character limit on the value of font-family. I gave my font-family a shorter name and it finally worked using the css that font squirrel spit out.</p>\n\n<p>Weird one!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It's always better to direct the font-face attribute locally and not online, e.g. url('../fonts/font-name.eot'). IE and other browsers won't \"see\" the fonts when you are running your webpage on a local server.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>What worked for me is the following declaration:</p>\n\n<pre><code>@font-face {\n    font-family: 'Frutiger45LightBoldItalic';\n    src: local('\u263a'), url('../font/frutiger-bolditalic-webfont.woff') format('woff'), url('../font/frutiger-bolditalic-webfont.ttf') format('truetype'), url('../font/frutiger-bolditalic-webfont.svg#webfontR2tDy7QH') format('svg'), url('../font/frutiger-bolditalic-webfont.eot');\n}\n</code></pre>\n\n<p>So there is only 1 <code>src</code> attribute and <code>.eot</code> is at the end of it, without question mark.</p>\n\n<p>What I tried before and didn't work:</p>\n\n<ul>\n<li>putting .eot on a separate line (before or after the other <code>src</code>)</li>\n<li>putting a question mark after <code>.eot</code></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to get Internet Explorer to render my pretty fonts. It's not working. They work fine in Firefox and I can see in my Apache access logs that IE has pulled the fonts. So it's parsing the font-face CSS tag, just not rendering them.</p>\n\n<p>The site I used to convert the fonts was: <a href=\"http://www.kirsle.net/wizards/ttf2eot.cgi\">http://www.kirsle.net/wizards/ttf2eot.cgi</a>. I tried that WEFT tool by Microsoft but it wouldn't work properly. After installing and opening it, it said 'First time running it, do this...' then it continually hanged.</p>\n\n<p>Here's my CSS:</p>\n\n<pre><code>@font-face\n{\n   font-family: 'HelveticaLTCN';\n   src: url('HelveticaNeueLTCom-LtCn_0.eot');\n   src: local('HelveticaNeuel TCom LtCn'), url('HelveticaNeueLTCom-LtCn_0.ttf') format('TrueType');\n}\n</code></pre>\n\n<p>Any ideas as to why IE isn't rendering the fonts?</p>\n\n<p>EDIT: Should also mention, I'm calling the font with:</p>\n\n<pre><code>p .mytext\n{\n   font-family: HelveticaLTCN;\n}\n</code></pre>\n",
            "last_activity_date": 1404819754,
            "question_id": 1753838,
            "score": 25,
            "tags": [
                "css",
                "internet-explorer",
                "font-face"
            ],
            "title": "Internet Explorer @font-face is failing"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Your issue is that your selector is for an anchor element <code>&lt;a&gt;</code>. You are treating the <code>&lt;a&gt;</code> tag as if it represents the page which is not the case. </p>\n\n<p><code>$('head')</code> will work as long as this selector is being executed by the page that needs the css.</p>\n\n<p>Why not simply add the css file to the page in question. Any particular reason to attempt this dynamically from another page? I am not even familiar with a way to inject css to remote pages like this ... seems like it would be a major security hole.</p>\n\n<p>ADDENDUM to your reasoning: </p>\n\n<p>Then you should simply pass a parameter to the page, read it using javascript, and then do whatever is needed based on the parameter.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try doing it the other way around.</p>\n\n<pre><code>$('&lt;link rel=\"stylesheet\" href=\"css/style2.css\" type=\"text/css\" /&gt;').appendTo('head');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't think you can attach down into a window that you are instancing... I KNOW you can't do it if the url's are on different domains (XSS and all that jazz), but you can talk UP from that window and access elements of the parent window assuming they are on the same domain. your best bet is to attach the stylesheet at the page you are loading, and if that page isn't on the same domain, (e.g. trying to restyle some one else's page,) you won't be able to.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$('head').append('&lt;link rel=\"stylesheet\" href=\"style2.css\" type=\"text/css\" /&gt;');\n</code></pre>\n\n<p>This should work.</p>\n",
                    "is_accepted": true,
                    "score": 69
                },
                {
                    "body": "<p>Have you tried simply using the media attribute for you css reference?</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" href=\"css/style2.css\" media=\"print\" type=\"text/css\" /&gt;\n</code></pre>\n\n<p>Or set it to screen if you don't want the printed version to use the style:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" href=\"css/style2.css\" media=\"screen\" type=\"text/css\" /&gt;\n</code></pre>\n\n<p>This way you don't need to add it dynamically.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is how I add css using jQuery ajax.  Hope it helps someone..</p>\n\n<pre><code>$.ajax({\n            url:\"site/test/style.css\",\n            success:function(data){\n                 $(\"&lt;style&gt;&lt;/style&gt;\").appendTo(\"head\").html(data);\n            }\n        })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>    var css_link = $(\"&lt;link&gt;\", {\n        rel: \"stylesheet\",\n        type: \"text/css\",\n        href: \"yourcustomaddress/bundles/andreistatistics/css/like.css\"\n    });\n    css_link.appendTo('head');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I am creating a popupwindow and I want to add a css file to that popupwindow below is the code for popupwindow. I have a javascript with creates a popupwindow. </p>\n\n<pre><code>&lt;a href=\"popupwindowcontent.xhtml\" title=\"Print\" class=\"popupwindow\"&gt;Print1&lt;/a&gt;\n</code></pre>\n\n<p>Now I want to add a css file to this popupwindow. I tried something like </p>\n\n<pre><code>$('.popupwindow').append('&lt;link rel=\"stylesheet\" href=\"css/style2.css\" type=\"text/css\" /&gt;');\n\n\n $('head').append('&lt;link rel=\"stylesheet\" href=\"css/style2.css\" type=\"text/css\" /&gt;');\n</code></pre>\n\n<p>but doesnt work.</p>\n\n<p>Thanks </p>\n",
            "last_activity_date": 1384851488,
            "question_id": 5680657,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "adding css file with jquery"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>check this plugin's source code: <a href=\"http://jsbin.com/ahaxe\" rel=\"nofollow\">http://jsbin.com/ahaxe</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Input elements do behave differently from other elements, which would do just about what you want if you give them <code>float: left</code> (see <a href=\"http://jsfiddle.net/hEvYj/5/\" rel=\"nofollow\">http://jsfiddle.net/hEvYj/5/</a>). I do not think that is possible without calculating it in some way with JavaScript (i.e. add 5px to the width per letter in the box).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can do this the easy way by setting the <code>size</code> attribute to the length of the input contents:</p>\n\n<pre><code>function resizeInput() {\n    $(this).attr('size', $(this).val().length);\n}\n\n$('input[type=\"text\"]')\n    // event handler\n    .keyup(resizeInput)\n    // resize on page load\n    .each(resizeInput);\n</code></pre>\n\n<p>See: <a href=\"http://jsfiddle.net/nrabinowitz/NvynC/\">http://jsfiddle.net/nrabinowitz/NvynC/</a></p>\n\n<p>This seems to add some padding on the right that I suspect is browser dependent. If you wanted it to be really tight to the input, you could use a technique like <a href=\"http://stackoverflow.com/questions/6114300/shrinking-font-size-at-a-user-types-to-fit-in-an-input-using-javascript/6114440#6114440\">the one I describe in this related answer</a>, using jQuery to calculate the pixel size of your text.</p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>Alternatively, you could use a contenteditable-span instead of an input element.</p>\n\n<pre><code>&lt;span contenteditable=\"true\"&gt;dummy text&lt;/span&gt;\n</code></pre>\n\n<p>This has the possible drawback that users can enter (and paste) linebreaks and other HTML.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I have a jQuery plugin on GitHub: <a href=\"https://github.com/MartinF/jQuery.Autosize.Input\" rel=\"nofollow\">https://github.com/MartinF/jQuery.Autosize.Input</a></p>\n\n<p>It mirrors the value of the input, calculates the width and uses it for setting the width of the input.</p>\n\n<p>You can see an live example here: <a href=\"http://jsfiddle.net/mJMpw/6/\" rel=\"nofollow\">http://jsfiddle.net/mJMpw/6/</a></p>\n\n<p>Example of how to use it (because some code is needed when posting a jsfiddle link):</p>\n\n<pre><code>&lt;input type=\"text\" value=\"\" placeholder=\"Autosize\" data-autosize-input='{ \"space\": 40 }' /&gt;\n\ninput[type=\"data-autosize-input\"] {\n  width: 90px;\n  min-width: 90px;\n  max-width: 300px;\n  transition: width 0.25s;    \n}\n</code></pre>\n\n<p>You just use css to set min/max-width and use a transition on the width if you want a nice effect.</p>\n\n<p>You can specify the space / distance to the end as the value in json notation for the data-autosize-input attribute on the input element.</p>\n\n<p>Of course you can also just initialize it using jQuery</p>\n\n<pre><code>$(\"selector\").autosizeInput();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>nrabinowitz solution is working great, but I use <code>keypress</code> event instead of <code>keyup</code>, that reduce the latency if the user type slowly</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is my modification of @nrabinowitz solution. I didn't use <strong>size</strong> property because it's not perfect with proportional fonts as @Mark noted.\nMy solution place an element after your input and gets width counted by browser (using jQuery).</p>\n\n<p>Although I don't test it, I suppose it will work only if all CSS properties affecting font are inherited.</p>\n\n<p>The input width changes on <strong>focusout</strong> event, which works better for me. But you can use <strong>keyup/keypress</strong> to change input's width when typing as well.</p>\n\n<pre><code>function resizeInput() {\n    //firstly take the content or placeholder if content is missing\n    var content = \n        $(this).val().length &gt; 0 ? $(this).val() : $(this).prop(\"placeholder\");\n    //create testing element with same content as input\n    var widthTester = $(\"&lt;span&gt;\"+content+\"&lt;/span&gt;\").hide();\n    //place testing element into DOM after input (so it inherits same formatting as input does) \n    widthTester.insertAfter($(this));\n    //set inputs width; you may want to use outerWidth() or innerWidth()\n    //depending whether you want to count padding and border or not\n    $(this).css(\"width\",widthTester.width()+\"px\");\n    //remove element from DOM\n    widthTester.remove();\n }\n\n $('.resizing-input').focusout(resizeInput).each(resizeInput);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There already a lot of good answers here. For fun, I implemented this solution below, based on the other answers and my own ideas.</p>\n\n<pre><code>&lt;input class=\"adjust\"&gt;\n</code></pre>\n\n<p>The input element is adjusted pixel accurate and and additional offset can be defined.</p>\n\n<pre><code>function adjust(elements, offset, min, max) {\n    // initialize parameters\n    offset = offset || 0;\n    min    = min    || 0;\n    max    = max    || Infinity;\n    elements.each(function() {\n        var element = $(this);\n        // add element to measure pixel length of text\n        var id = btoa(Math.floor(Math.random() * Math.pow(2, 64)));\n        var tag = $('&lt;span id=\"' + id + '\"&gt;' + element.val() + '&lt;/span&gt;').css({\n            'display': 'none',\n            'font-family': element.css('font-family'),\n            'font-size': element.css('font-size'),\n        }).appendTo('body');\n        // adjust element width on keydown\n        function update() {\n            // give browser time to add current letter\n            setTimeout(function() {\n                // prevent whitespace from being collapsed\n                tag.html(element.val().replace(/ /g, '&amp;nbsp'));\n                // clamp length and prevent text from scrolling\n                var size = Math.max(min, Math.min(max, tag.width() + offset));\n                if (size &lt; max)\n                    element.scrollLeft(0);\n                // apply width to element\n                element.width(size);\n            }, 0);\n        };\n        update();\n        element.keydown(update);\n    });\n}\n\n// apply to our element\nadjust($('.adjust'), 10, 100, 500);\n</code></pre>\n\n<p>The adjustment gets smoothed with a CSS transition.</p>\n\n<pre><code>.adjust {\n    transition: width .15s;\n}\n</code></pre>\n\n<p>Here is <a href=\"http://jsfiddle.net/5EUA7/5/\" rel=\"nofollow\">the fiddle</a>. I hope this can help others looking for a clean solution.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can solve this problem as here :)\n<a href=\"http://jsfiddle.net/MqM76/217/\" rel=\"nofollow\">http://jsfiddle.net/MqM76/217/</a></p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;input id=\"inpt\" type=\"text\" /&gt;\n&lt;div id=\"inpt-width\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>$.fn.textWidth = function(text, font) {\n    if (!$.fn.textWidth.fakeEl) $.fn.textWidth.fakeEl =      $('&lt;span&gt;').hide().appendTo(document.body);\n    $.fn.textWidth.fakeEl.text(text || this.val() || this.text()).css('font', font || this.css('font'));\n    return $.fn.textWidth.fakeEl.width(); \n};\n\n$('#inpt').on('input', function() {\n    var padding = 10; //Works as a minimum width\n    var valWidth = ($(this).textWidth() + padding) + 'px';\n    $('#'+this.id+'-width').html(valWidth);\n    $('#inpt').css('width', valWidth);\n}).trigger('input');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My jquery plugin works for me:</p>\n\n<p>Usage: </p>\n\n<pre><code>    $('form input[type=\"text\"]').autoFit({\n\n    });\n</code></pre>\n\n<p>Source Code of <code>jquery.auto-fit.js</code>: </p>\n\n<pre><code>;\n(function ($) {\n    var methods = {\n        init: function (options) {\n            var settings = $.extend(true, {}, $.fn.autoFit.defaults, options);\n            var $this = $(this);\n\n            $this.keydown(methods.fit)\n\n            methods.fit.call(this, null);\n\n            return $this;\n        },\n\n        fit: function (event) {\n            var $this = $(this);\n\n            var val = $this.val().replace(' ', '-');\n            var fontSize = $this.css('font-size');\n            var padding = $this.outerWidth() - $this.width();\n            var contentWidth = $('&lt;span style=\"font-size: ' + fontSize + '; padding: 0 ' + padding / 2 + 'px; display: inline-block; position: absolute; visibility: hidden;\"&gt;' + val + '&lt;/span&gt;').insertAfter($this).outerWidth();\n\n            $this.width((contentWidth + padding) + 'px');\n\n            return $this;\n        }\n    };\n\n    $.fn.autoFit = function (options) {\n        if (typeof options == 'string' &amp;&amp; methods[options] &amp;&amp; typeof methods[options] === 'function') {\n            return methods[options].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof options === 'object' || !options) {\n            // Default to 'init'\n            return this.each(function (i, element) {\n                methods.init.apply(this, [options]);\n            });\n        } else {\n            $.error('Method ' + options + ' does not exist on jquery.auto-fit.');\n            return null;\n        }\n    };\n\n    $.fn.autoFit.defaults = {};\n\n})(this['jQuery']);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to scale the width of an <code>&lt;input type=\"text\"&gt;</code> to the width of the actual value?</p>\n\n<p>Here's my JSFiddle: <a href=\"http://jsfiddle.net/hEvYj/2/\">http://jsfiddle.net/hEvYj/2/</a></p>\n",
            "last_activity_date": 1425383711,
            "question_id": 8100770,
            "score": 22,
            "tags": [
                "jquery",
                "html",
                "css"
            ],
            "title": "Auto-scaling input[type=text] to width of value?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Rewrite your css code with this one, assuming that you're trying to achieve a grayscale image:</p>\n\n<pre><code>.google{\n    filter: url(\"data:image/svg+xml;utf8,&lt;svg xmlns=\\'http://www.w3.org/2000/svg\\'&gt;&lt;filter id=\\'grayscale\\'&gt;&lt;feColorMatrix type=\\'matrix\\' values=\\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale\"); /* Firefox 3.5+ */\n    filter: gray; /* IE6-9 */\n    -webkit-filter: grayscale(100%); /* Chrome 19+ &amp; Safari 6+ */\n}\n\u200b\n</code></pre>\n\n<p><strong>Updated jsfiddle:</strong> <a href=\"http://jsfiddle.net/xDJzU/8/\">jsfiddle link</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>GrayScale has limitations to work in firefox using a -moz-filter.</p>\n\n<p>To get it working use the below snippet:</p>\n\n<pre><code>filter: url(\"data:image/svg+xml;utf8,&lt;svg xmlns=\\'http://www.w3.org/2000/svg\\'&gt;&lt;filter id=\\'grayscale\\'&gt;&lt;feColorMatrix type=\\'matrix\\' values=\\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale\"); /* Firefox 3.5+ */\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/xDJzU/7/\"><strong>DEMO</strong></a></p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>This code will work for you 100%.</p>\n\n<pre><code>.google{\n    filter: url(\"data:image/svg+xml;utf8,&lt;svg xmlns=\\'http://www.w3.org/2000/svg\\'&gt;&lt;filter id=\\'grayscale\\'&gt;&lt;feColorMatrix type=\\'matrix\\' values=\\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale\"); \n    filter: gray;\n    -webkit-filter: grayscale(100%)\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I am trying CSS filter but it does not work in my Firefox (15.0) browser. </p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"google\"&gt;\n     &lt;img src=\"https://www.google.com/images/srpr/logo3w.png\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.google{   \n    -moz-filter: grayscale(100%);\n    filter: grayscale(100%);\n}\n</code></pre>\n\n<p>Demo:\n<a href=\"http://jsfiddle.net/xDJzU/\">http://jsfiddle.net/xDJzU/</a></p>\n",
            "last_activity_date": 1396932726,
            "question_id": 12173130,
            "score": 21,
            "tags": [
                "html",
                "css",
                "css3"
            ],
            "title": "CSS Filter not working in Firefox"
        },
        {
            "answer_count": 16,
            "answers": [
                {
                    "body": "<p><a href=\"http://developer.yahoo.net/blog/archives/2007/07/high_performanc_8.html\">Minify</a> seems to be one of the easiest ways to shrink Javascript.</p>\n\n<p>Turning on zip at the web server level can also help.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>For javascript, I use <a href=\"http://dean.edwards.name/download/#packer\" rel=\"nofollow\">Dean Edwards's Javascript Packer</a>. It's been ported to .NET, perl, php4, php5, WSH, and there's even an aptana plugin.</p>\n\n<p>Javascript packing comes in a few flavours - some just strip out comments and whitespace, others will change your variable names to be concise, and others, well, I don't even know what they do, but the output sure is small. The high-end compression works by using the eval() function, which puts some extra burden on the client, so if your scripts are particularly complicated, or you're designing for slower hardware, keep that in mind. the Javascript packer gives you the option for which compression level you want to use.</p>\n\n<p>For CSS, the best you can do is strip whitespace and comments. Thankfully that means that you can achieve that with a one-line function:</p>\n\n<pre><code>function compressCSS($css) {\n    return\n        preg_replace(\n            array('@\\s\\s+@','@(\\w+:)\\s*([\\w\\s,#]+;?)@'),\n            array(' ','$1$2'),\n            str_replace(\n                array(\"\\r\",\"\\n\",\"\\t\",' {','} ',';}'),\n                array('','','','{','}','}'),\n                preg_replace('@/\\*[^*]*\\*+([^/][^*]*\\*+)*/@', '', $css)\n            )\n        )\n    ;\n}\n</code></pre>\n\n<p>While that function and the Javascript packer will reduce the file size of individual files, to get the best performance from your site, you'll also want to be reducing the number of HTTP requests you make. Each Javascript and CSS file is a separate request, so combining them into one file each will the the optimal result. Instead of trying to maintain a single bohemoth JS file, you can use the program/technique I've written on my blog (shameless self plug) at <a href=\"http://spadgos.com/?p=32\" rel=\"nofollow\">http://spadgos.com/?p=32</a></p>\n\n<p>The program basically reads a \"build script\"-type file which will simultaneously combine and compress multiple Javascript and CSS files into one (of each) for you (or more, if you want). There are several options for the output and display of all files. There's a larger write-up there, and the source is freely available.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Rather than tweaking your files directly, I would recommend compressing them. Most clients support it.</p>\n\n<p>I think you'll find that this is easier and just as effective.</p>\n\n<p><a href=\"http://www.codinghorror.com/blog/archives/000059.html\">More details from Jeff's adventures with it</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>See the question: <a href=\"http://stackoverflow.com/questions/28932/best-javascript-compressor\">Best javascript compressor</a></p>\n\n<p>Depending on whether or not you are going to gzip your JavaScript files may change your choice of compressor. (Currently Packer isn't the best choice if you are also going to gzip, but see the above question for the current best answer)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://shrinksafe.dojotoolkit.org/\" rel=\"nofollow\">Dojo Shrinksafe</a> is a Javascript compressor that uses a real JS interpreter, so it won't break your code. The other ones can work well, but Shrinksafe is a good one to use in a build script, since you shouldn't have to re-test the compressed script.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In addition to using server side compression, using intelligent coding is the best way to keep bandwidth costs low. You can always use tools like <a href=\"http://dean.edwards.name/download/#packer\">Dean Edward's Javascript Packer</a>, but for CSS, take the time to learn <a href=\"http://www.webcredible.co.uk/user-friendly-resources/css/css-shorthand-properties.shtml\">CSS Shorthand</a>. E.g. use:</p>\n\n<pre><code>background: #fff url(image.gif) no-repeat top left;\n</code></pre>\n\n<p>...instead of:</p>\n\n<pre><code>background-color: #fff;\nbackground-image: url(image.gif);\nbackground-repeat: no-repeat;\nbackground-position: top left;\n</code></pre>\n\n<p>Also, use the cascading nature of CSS. For example, if you know that your site will use one font-family, define that for all elements that are in the body tag like this:</p>\n\n<pre><code>body{font-family:arial;}\n</code></pre>\n\n<p>One other thing that can help is including your CSS and JavaScript as files instead of inline or at the head of each page. That way your server only has to serve them once to the browser after that browser will go from cache.</p>\n\n<h3>Including Javascript</h3>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"/scripts/loginChecker.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<h3>Including CSS</h3>\n\n<pre><code>&lt;link rel=\"stylesheet\" href=\"/css/myStyle.css\" type=\"text/css\" media=\"All\" /&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Shrinksafe may help: <a href=\"http://shrinksafe.dojotoolkit.org/\" rel=\"nofollow\">http://shrinksafe.dojotoolkit.org/</a>  We're using it and it does a pretty good job. We execute it from an ant build for when packaging our web app.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'd give a test-drive to the new runtime optimizers in ASP.Net published on <a href=\"http://www.codeplex.com/NCOptimizer\" rel=\"nofollow\">http://www.codeplex.com/NCOptimizer</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://yuiblog.com/blog/2008/02/11/helping-the-yui-compressor\" rel=\"nofollow\">Helping the YUI Compressor</a> gives some good advice on how you can tweak your scripts to achieve even better savings.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>YUI Compressor does a pretty good job at compressing both Javascript and CSS.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>YUI Compressor has my vote, for the simple reason that instead of just performing regular expression transformations on the code, it actually builds a parse tree of the code, similar to a Javascript interpreter, and then compresses it that way.  It is usually very careful about how it handles the compression of identifiers.</p>\n\n<p>Additionally it has a CSS compression mode, which I haven't played with as much.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://code.google.com/apis/ajaxlibs/\" rel=\"nofollow\">Google hosts a handful of pre-compressed JavaScript library files</a> that you can include in your own site.  Not only does Google provide the bandwidth for this, but based on most browser's file caching algorithms, if the user has already downloaded the file from Google for another site they won't have to do it again for yours.  A nice little bonus for some of the 90k+ JS libraries out there.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Compression and minify-ing (removing whitespace) are a start.</p>\n\n<p>Additionally:</p>\n\n<ol>\n<li><p>Combine all of your JavaScript and CSS includes into a single file. That way the browser can download the source in a single request to server. Make this part of your build process.</p></li>\n<li><p>Turn caching on at the web-server level using the <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\" rel=\"nofollow\">cache-control</a> http header. Set the expiry to a large value (like a year) so the browser will only download the source once. To allow for future edits, include a version number on the query-string, like this:</p></li>\n</ol>\n\n<p><code>&lt;script src=\"my_js_file.js?1.2.0.1\" type=\"text/javascript\"&gt;&lt;/script&gt;</code></p>\n\n<p><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"my_css_file.css?3.1.0.926\" /&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm surprised no one suggested gzipping your code. A straight ~50% saving there!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://csstidy.sourceforge.net/\" rel=\"nofollow\">CssTidy</a> is the best CSS optimizer of which I am aware. It (configurably) strips comments, eliminates whitespaces, rewrites to use the many shorthand rules <a href=\"http://stackoverflow.com/questions/65491/what-is-the-best-method-to-reduce-the-size-of-my-javascript-and-css-files#65505\">nickf mentioned</a>, etc. Compressing the result helps too, as others have mentioned.</p>\n\n<p>The compression ratio can be fairly dramatic, and it frees you to comment your CSS extensively without worrying about the file size.</p>\n\n<p>Unfortunately, this level of preprocessing interacts with some of the popular \"css hacks\" in unpredictable (or predictable but undesired) ways. <a href=\"http://csstidy.sourceforge.net/hacks.php\" rel=\"nofollow\">Some work</a>, some don't, and some require configuration settings which reduce the level of compression for other things (especially comments).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try <a href=\"http://www.boryi.com/html/free-tools.html\" rel=\"nofollow\">web compressor tools from Boryi</a> to compress your standard HTML file (without Javascript code and css code embedded, but can be linked to or imported), Javascript code (properly ended with ;), and css code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When working with large and/or many Javascript and CSS files, what's the best way to reduce the file sizes?</p>\n",
            "last_activity_date": 1368617454,
            "question_id": 65491,
            "score": 17,
            "tags": [
                "javascript",
                "css",
                "jscompress"
            ],
            "title": "What is the best method to reduce the size of my Javascript and CSS files?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>For inline styles:</p>\n\n<pre><code>var styles = $(\"#someelement\").attr(\"style\");\n</code></pre>\n\n<p>From there, you should be able to split this string if you need to loop the styles.</p>\n\n<p>To check individual styles, check the docs:</p>\n\n<p><a href=\"http://docs.jquery.com/CSS\" rel=\"nofollow\">http://docs.jquery.com/CSS</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$(\"#div1).css(\"background-color\");\n</code></pre>\n\n<p>will return the background color property of an element with id div1.</p>\n\n<p><a href=\"http://docs.jquery.com/CSS/css\" rel=\"nofollow\">css( name )</a> </p>\n\n<p>Sorry, I don't know a way to get all the CSS attributes using jQuery.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>Copying the source from <a href=\"http://stackoverflow.com/questions/1004475/jquery-css-plugin-that-returns-computed-style-of-element-to-pseudo-clone-that-ele\">SO1004475 - jQuery CSS plugin that returns computed style of element to pseudo clone that element?</a> - Please follow link and upvote there if you find it useful.</p>\n\n<p>It seems ridiculous, but this is probably your best option - makes <code>.css()</code> with no arguments get an object with all this stuff set.</p>\n\n<pre><code>jQuery.fn.css = (function(css2) { \n    return function() {\n        if (arguments.length) { return css2.apply(this, arguments); }\n        var attr = ['font-family','font-size','font-weight','font-style','color',\n            'text-transform','text-decoration','letter-spacing','word-spacing',\n            'line-height','text-align','vertical-align','direction','background-color',\n            'background-image','background-repeat','background-position',\n            'background-attachment','opacity','width','height','top','right','bottom',\n            'left','margin-top','margin-right','margin-bottom','margin-left',\n            'padding-top','padding-right','padding-bottom','padding-left',\n            'border-top-width','border-right-width','border-bottom-width',\n            'border-left-width','border-top-color','border-right-color',\n            'border-bottom-color','border-left-color','border-top-style',\n            'border-right-style','border-bottom-style','border-left-style','position',\n            'display','visibility','z-index','overflow-x','overflow-y','white-space',\n            'clip','float','clear','cursor','list-style-image','list-style-position',\n            'list-style-type','marker-offset'];\n        var len = attr.length, obj = {};\n        for (var i = 0; i &lt; len; i++) {\n            obj[attr[i]] = css2.call(this, attr[i]);\n        }\n        return obj;\n    };\n})(jQuery.fn.css);\n</code></pre>\n\n<p>Note that this doesn't capture all possible CSS properties, particularly new ones for CSS3. Here is a <a href=\"https://developer.mozilla.org/en-US/docs/CSS/CSS_Reference\">list of all standard CSS and stable CSS3 properties</a>, and here's one of <a href=\"http://peter.sh/experiments/vendor-prefixed-css-property-overview/\">hyphen-prefixed vendor-specific properties</a> (such as <code>-moz-border-start</code>). If you really want all of them, you can glean them from there.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>As of jQuery 1.8, you can do:</p>\n\n<pre><code>$( \"#yourElement\" ).css( \"cssText\" );\n</code></pre>\n\n<p>Which uses the underlying <code>window.getComputedStyle( element ).cssText</code>. That's the simplest way.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I need to get list of elements all css attributes. How can I do that ?</p>\n",
            "last_activity_date": 1418384938,
            "question_id": 1471118,
            "score": 9,
            "tags": [
                "jquery",
                "css"
            ],
            "title": "How can I get list of all element css attributes with jQuery?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can create an <a href=\"http://css-tricks.com/snippets/css/css-triangle/\" rel=\"nofollow\">individual triangle</a> using CSS quite easily (just tweak border properties). In order for this to work you will need to generate quite a bit of markup yourself. I would recommend against this approach.</p>\n\n<p>Instead you are likely better off using an individual image containing a single triangle (preferably a transparent .png) and then use <code>background-image</code> and <code>background-repeat</code> (<code>repeat-x</code>) properties to bind that to a div (your \"border\").</p>\n\n<p>Unfortunately there is no yet a straight-forward way to achieve this using pure CSS.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is a border-image property in CSS3.\nMaybe you can work it out in a way you want. More here <a href=\"http://www.w3schools.com/cssref/css3_pr_border-image.asp\" rel=\"nofollow\">http://www.w3schools.com/cssref/css3_pr_border-image.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use css3 gradients to create a zig-zag patterned background, use the <code>after</code> css pseudo to apply it like a border.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"header\"&gt;&lt;h1&gt;This is a header&lt;/h1&gt;&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.header{\ncolor:white;\nbackground-color:#2B3A48;\ntext-align:center;\n}\n.header:after {\ncontent: \" \";\n    display:block;\n    position: relative;\ntop:0px;left:0px;\n    width:100%;\n    height:36px;\n    background: linear-gradient(#2B3A48 0%, transparent 0%), linear-gradient(135deg, #272220 33.33%, transparent 33.33%) 0 0%, #272220 linear-gradient(45deg, #272220 33.33%, #2B3A48 33.33%) 0 0%;\n    background: -webkit-linear-gradient(#2B3A48 0%, transparent 0%), -webkit-linear-gradient(135deg, #272220 33.33%, transparent 33.33%) 0 0%, #272220 -webkit-linear-gradient(45deg, #272220 33.33%, #2B3A48 33.33%) 0 0%;\n    background: -o-linear-gradient(#2B3A48 0%, transparent 0%), -o-linear-gradient(135deg, #272220 33.33%, transparent 33.33%) 0 0%, #272220 -o-linear-gradient(45deg, #272220 33.33%, #2B3A48 33.33%) 0 0%;\n    background: -moz-linear-gradient(#2B3A48 0%, transparent 0%), -moz-linear-gradient(135deg, #272220 33.33%, transparent 33.33%) 0 0%, #272220 -moz-linear-gradient(45deg, #272220 33.33%, #2B3A48 33.33%) 0 0%;\n    background-repeat: repeat-x;\n    background-size: 0px 100%, 9px 27px, 9px 27px;\n    }\n</code></pre>\n\n<p>Source: <a href=\"http://stackoverflow.com/q/12031328/1756941\">CSS Zigzag Border with a Textured Background</a></p>\n\n<p>JSFiddle: <a href=\"http://jsfiddle.net/kA4zK/\">http://jsfiddle.net/kA4zK/</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>For future viewers, I found this adaptation of <a href=\"http://stackoverflow.com/a/13777800/1599617\">@extramaster's answer</a> to be a little simpler. </p>\n\n<p>It's essentially the same, but it uses one fewer background gradients and allows the backing object (<code>.navbar</code> in my markup) to show through instead of hard-coding the second color into the zig-zag.</p>\n\n<p><strong>JsFiddle:</strong> <a href=\"http://jsfiddle.net/861gjx0b/2/\" rel=\"nofollow\">http://jsfiddle.net/861gjx0b/2/</a></p>\n\n<p><strong>html:</strong></p>\n\n<pre><code>&lt;div class=\"header\"&gt;&lt;h1&gt;This is a header&lt;/h1&gt;&lt;/div&gt;\n&lt;nav class=\"navbar\"&gt;&lt;/nav&gt;\n</code></pre>\n\n<p><strong>css:</strong></p>\n\n<pre><code>.header{\n      position:relative;\n      color:white;\n      background-color:#2B3A48;\n      text-align:center;\n}\n\n.navbar {\n      background: #272220;\n      height:20px;\n}    \n\n.header:after {\n  content: \"\";\n  position: absolute;      \n  display: block;\n\n  height: 10px;\n  bottom: -10px; /* -height */\n  left:0;\n  right:0;\n\n  /* TODO Add browser prefixes */\n  background:\n    linear-gradient(\n      45deg, transparent 33.333%,\n      #2B3A48 33.333%, #2B3A48 66.667%,\n      transparent 66.667%\n    ),linear-gradient(\n      -45deg, transparent 33.333%,\n      #2B3A48 33.333%, #2B3A48 66.667%,\n      transparent 66.667%\n    );\n\n    background-size: 8px 20px; /* toothSize doubleHeight */\n    background-position: 0 -10px; /* horizontalOffset -height */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a shape with an edge like this in Photoshop:</p>\n\n<p><img src=\"http://i.stack.imgur.com/ckqau.png\" alt=\"image\"></p>\n\n<p>Is it possible to make it in CSS3?</p>\n",
            "last_activity_date": 1408519809,
            "question_id": 13774952,
            "score": 7,
            "tags": [
                "css",
                "css3",
                "photoshop"
            ],
            "title": "Making jagged triangle border in CSS"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<ul>\n<li>#header</li>\n<li>#footer</li>\n<li>#container</li>\n<li>.post</li>\n<li>.title</li>\n</ul>\n\n<p>Those are the ones which come up in most of my projects but obviously it depends what you're doing. Just try to keep it logical.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>be descriptive and name your ids and classes in a semantic way, give them meaning</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>The best advice is to use class with semantics in mind</strong></p>\n\n<blockquote>\n  <p><strong>Good names don't change</strong></p>\n  \n  <p>Think about <strong><em>why</em></strong> you want something to\n  look a certain way, and not really\n  about <strong><em>how</em></strong> it should look. Looks can\n  always change but the reasons for\n  giving something a look stay the same.</p>\n  \n  <p><strong>Good names</strong>\n      <em>warning</em>, <em>important</em>, <em>downloadableImage</em> and <em>submenu</em> are all\n  good names. They describe what a\n  certain element represents, and they\n  are not likely to change. A warning\n  will always remain a warning, no\n  matter how much the look of the page\n  changes. </p>\n  \n  <p><strong>Bad names</strong>\n      <em>border4px</em>, <em>lighttext</em> and <em>prettybackground</em> are all examples of bad\n  names. You might fatten that border to\n  a whopping 5 pixels, or the background\n  may look pretty old after a while, and\n  not pretty at all. An advantage of\n  using CSS is that you won't have to\n  change much in order to change the\n  looks of your website. If you have to\n  change all light text into dark text,\n  and thus change all classes lighttext\n  to darktext in all your HTML pages,\n  you're likely to miss a few.</p>\n</blockquote>\n\n<p><em>from <a href=\"http://www.w3.org/QA/Tips/goodclassnames\" rel=\"nofollow\">this article</a></em></p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>There is no real naming convention. Just agree on one with your team and keep it consistent. For instance don't mix <a href=\"http://en.wikipedia.org/wiki/CamelCase\" rel=\"nofollow\">camel case</a> and snake case.</p>\n\n<p>Try to be as description as possible when naming a class. Example:</p>\n\n<pre><code>.menu: bad\n.head_menu: better\n\n.wrapper: very bad\n.main_content_wrapper: better\n</code></pre>\n\n<p>edit; Worse naming convention I saw is using the actual content of the styling. For instance:</p>\n\n<pre><code>.redButton\n</code></pre>\n\n<p>... because when I got to the code (legacy code), but \"red button\" was not red but blue (or something like that). </p>\n\n<p>Try to use something that will not likely change, like the purpose of the class.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The rules for naming an id or class attribute are simple. Keep it short, keep it consistent (i.e. if you use hyphens, underscores, or CamelCase for one, use the same format for the others), and make sure the name is based on the function or meaning of the element, NOT the style to be applied.</p>\n\n<p>e.g.</p>\n\n<p><code>&lt;span class=\"warningMessage\"&gt;</code>, <code>&lt;span class=\"warning-message\"&gt;</code>, <code>&lt;span class=\"warning-message\"&gt;</code> are all perfectly acceptable.</p>\n\n<p><code>&lt;span class=\"red-text\"&gt;</code> would not be ... what happens when you change the colour to blue?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>IDs can only be used once per page, so they are useful for major structural elements like \"header\" and \"footer\" (until HTML5 comes in and replaces those with native elements).</p>\n\n<p>Classes can be used multiple times, and you can use multiple classes per element. They should be kept fairly generic - so instead of, say, <code>warningMessage</code> you could create one style <code>message</code> with the basic layout style, and then <code>warning</code>, <code>info</code>, and <code>error</code> styles with different colours. Then use <code>&lt;div class=\"message warning\"&gt;etc&lt;/div&gt;</code></p>\n\n<p>You should also use HTML elements where applicable. Instead of <code>&lt;span class=\"title\"&gt;</code>, use a heading tag like <code>&lt;h2&gt;</code>.</p>\n\n<p>As others have said, you can use underscores or hyphens or camel case - i.e. <code>my_style</code> or <code>my-style</code> or <code>myStyle</code>. Just choose a convention and stick to it (personally I use <code>my-style</code>). Jitendra suggested in a comment that lowercase is better when you're using gzip compression, which is true all round - for font names, hex colours, and it's worth naming files (e.g. background images) in lowercase anyway.</p>\n\n<p>Sometimes coming up with good names can be hard. Think about <em>other places</em> you might use the same formatting. For example, if you want to put the author and date of an article below the title in smaller grey text, you might use <code>.authorAndDate</code>, but a better way would be <code>.byline</code>. This is still quite descriptive, and can be used in other places too, say, image captions.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I name my ids and classes for their purpose.  I try not to use descriptions that use color or direction. </p>\n\n<p>For example, if I have a sidebar that is on the left, but it's for the main menu, I may name it <code>#main</code> or <code>#mainMenu</code>. The right sidebar in the same site would be <code>#altSidebar</code> or <code>#subMenu</code>.</p>\n\n<p>I have many more classes than id's so naming them is a little harder. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I like to give them one word, then one number then one letter. For example, Header1A, Header2A</p>\n\n<p>The number describes one section. If I had another header in an other section I would call it, Header1B, Header2B</p>\n\n<p>or you can try a different approach. Use a camelcase names\nfor header you can name it header, simple as that. But for content inside a header use a camelcase. For example, headerMessage. Or headerLogo</p>\n\n<p>Just to give you ideas</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When naming classes and IDs for CSS what is the best method to use. In this case I need there to be some kind of naming convention so that other people can pick up rules and understand how to name their own ids and classes using the same pattern. Any suggestions? Some of the sites we create can get pretty complex but use an overall structure header, content and footer. The naming must be efficient too.</p>\n\n<p>I am not new to CSS. I am aware of giving them names that represent their structure etc., but  just want to know people opinions really and ways of doing this. </p>\n",
            "last_activity_date": 1418906989,
            "question_id": 1790455,
            "score": 7,
            "tags": [
                "html",
                "css",
                "class",
                "naming-conventions"
            ],
            "title": "What&#39;s the best way to name IDs and classes in CSS and HTML?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I am guessing your website is having problems with href, i presume that when user clicks a href, website automatically eradicating itself.</p>\n\n<p><a href=\"http://jsfiddle.net/vRqcb/11/\">Here is new solution's jsFiddle.</a></p>\n\n<p>I have a new solution for you:</p>\n\n<p>updated jQuery:</p>\n\n<pre><code>$('#tabs li a').click(function(){\n  var t = $(this).attr('id');\n\n  if($(this).hasClass('inactive')){ //this is the start of our condition \n    $('#tabs li a').addClass('inactive');           \n    $(this).removeClass('inactive');\n\n    $('.container').hide();\n    $('#'+ t + 'C').fadeIn('slow');\n }\n});\n</code></pre>\n\n<hr>\n\n<p>new html markup:</p>\n\n<pre><code>&lt;ul id=\"tabs\"&gt;\n\n      &lt;li&gt;&lt;a id=\"tab1\"&gt;test1&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a id=\"tab2\"&gt;test2&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a id=\"tab3\"&gt;test3&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a id=\"tab4\"&gt;test4&lt;/a&gt;&lt;/li&gt;\n\n&lt;/ul&gt;\n&lt;div class=\"container\" id=\"tab1C\"&gt;1Some content&lt;/div&gt;\n&lt;div class=\"container\" id=\"tab2C\"&gt;2Some content&lt;/div&gt;\n&lt;div class=\"container\" id=\"tab3C\"&gt;3Some content&lt;/div&gt;\n&lt;div class=\"container\" id=\"tab4C\"&gt;4Some content&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<pre><code>$(document).ready(function() {\n$(\"#content div\").hide(); // Initially hide all content\n$(\"#tabs li:first\").attr(\"id\",\"current\"); // Activate first tab\n$(\"#content div:first\").fadeIn(); // Show first tab content\n$('#tabs li a').click(function(e) {\n    e.preventDefault();\n    if ($(this).attr(\"id\") == \"current\"){ //detection for current tab\n     return       \n    }\n    else{             \n    $(\"#content div\").hide(); //Hide all content\n    $(\"#tabs li\").attr(\"id\",\"\"); //Reset id's\n    $(this).parent().attr(\"id\",\"current\"); // Activate this\n    $( $(this).attr('href')).fadeIn(); // Show content for current tab\n    }\n});\n</code></pre>\n\n<p>});</p>\n\n<p>See Demo:\n<a href=\"http://jsfiddle.net/pradeepk00786/5ezT3/\">http://jsfiddle.net/pradeepk00786/5ezT3/</a> </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>    &lt;script&gt;\n $('.tabheading li').click(function () {\n        var tabid = $(this).attr(\"rel\");\n        $(this).parents('.tabcontainer').find('.active').removeClass('active');\n        $('.tabbody').hide();\n        $('#' + tabid).show();\n        $(this).addClass('active');\n\n        return false;\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>Click <a href=\"http://waybloggy.blogspot.com/2014/09/how-to-make-simple-javascript-tab-with.html\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have the following code: <a href=\"http://jsfiddle.net/AJBweb1986/vRqcb/6/\" rel=\"nofollow\"><strong>fiddle</strong></a> </p>\n\n<p>Which works great in websites I create my self and with no JS the tabs act as jump links to the relevant sections. When placed in the bespoke CMS I am forced to use at the moment the jump links don't work. I have tried adding more relative links to the tabs which makes it work with no JS but with JS the tabbed content doesn't show. </p>\n\n<p>Am I missing something?</p>\n\n<p><strong>html:</strong></p>\n\n<pre><code>&lt;ul id=\"tabs\"&gt;\n\n      &lt;li&gt;&lt;a href=\"#tab1\"&gt;test1&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"#tab2\"&gt;test2&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"#tab3\"&gt;test3&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"#tab4\"&gt;test4&lt;/a&gt;&lt;/li&gt;\n\n&lt;/ul&gt;\n      &lt;div class=\"container\" id=\"tab1\"&gt;Some content&lt;/div&gt;\n      &lt;div class=\"container\" id=\"tab2\"&gt;Some content&lt;/div&gt;\n      &lt;div class=\"container\" id=\"tab3\"&gt;Some content&lt;/div&gt;\n      &lt;div class=\"container\" id=\"tab4\"&gt;Some content&lt;/div&gt;\n</code></pre>\n\n<p><strong>jQuery:</strong></p>\n\n<pre><code>$('#tabs li a:not(:first)').addClass('inactive');\n$('.container').hide();\n$('.container:first').show();\n$('#tabs li a').click(function(){\n    var t = $(this).attr('href');\n    $('#tabs li a').addClass('inactive');        \n    $(this).removeClass('inactive');\n    $('.container').hide();\n    $(t).fadeIn('slow');\n    return false;\n})\n\nif($(this).hasClass('inactive')){ //this is the start of our condition \n    $('#tabs li a').addClass('inactive');         \n    $(this).removeClass('inactive');\n    $('.container').hide();\n    $(t).fadeIn('slow');    \n}\n</code></pre>\n",
            "last_activity_date": 1415393337,
            "question_id": 11645081,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "tabs"
            ],
            "title": "How to build simple tabs with jQuery?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The 'treehouse' has a course on it. I did this one <a href=\"http://thinkvitamin.com/design/beginners-guide-to-responsive-web-design/\" rel=\"nofollow\">(http://thinkvitamin.com/design/beginners-guide-to-responsive-web-design/)</a> and, honestly, I didn't get that much out of it. It just really wasn't that practical.</p>\n\n<p>The thinkvitamin site all looks nice and pretty but I much prefer www.lynda.com. In saying that, lynda doesn't have so much in the way of newer, cutting edge material. You could try this one <a href=\"http://www.lynda.com/Web-Interactive-CSS-training/CSS-Page-Layouts/86003-2.html?srchtrk=index:1%0Alinktypeid:2%0Aq%3aresponsive%20design%0Apage:1%0As%3arelevance%0Asa%3atrue%0Aproducttypeid:2\" rel=\"nofollow\">(http://www.lynda.com/Web-Interactive-CSS-training/CSS-Page-Layouts/)</a> Haven't got around to doing that one myself but the depth of stuff on lynda is good so if you need some long term tutoring, signing up is worth the $30 a month or whatever it is.</p>\n\n<p>Also, I do know the treehouse has undergone a pretty big makeover (hooking up with CSS-tricks and whatnot) whether it's just a (perhaps Chris Coyier inspired) aesthetic makeover or the courses have got better, I couldn't say as I cancelled my subscription after the disappointing tutorial on responsive web design. I think I only did that one and one other though so it's a pretty small sample size.  </p>\n\n<p>Basically though, all you need are media queries in your css to replicate the behaviour of the site that you provided. Then just apply the right css for the right screen width / device... Not sure what you mean by \"since all others resize the window\" - wouldn't the user be resizing the window not the design? Not sure what you're getting at there...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here are several blogs posts on responsive design:</p>\n\n<ul>\n<li><a href=\"http://webdesignerwall.com/tutorials/responsive-design-in-3-steps\">Responsive design in 3 steps</a></li>\n\n<li><a href=\"http://webdesignerwall.com/tutorials/responsive-design-with-css3-media-queries\">Responsive design with css3 media queries</a></li>\n\n<li><a href=\"http://coding.smashingmagazine.com/2012/03/22/device-agnostic-approach-to-responsive-web-design/\">Device-agnostic approach to responsive web design</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>Is there any tutorials how to make responsive layout similar to this one - <a href=\"http://themes.hellominti.com/elogix/\" rel=\"nofollow\">http://themes.hellominti.com/elogix/</a> ? I'm searching on whole internet, but can't find any normal tutorials, since all others resize the window, and you are able to zoomout/zoomin via iphone.</p>\n",
            "last_activity_date": 1353933508,
            "question_id": 10061572,
            "score": 6,
            "tags": [
                "html",
                "css",
                "responsive-design"
            ],
            "title": "Responsive layout tutorial?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Here's the simple, built-in way:</p>\n\n<pre><code>&lt;span title=\"My tip\"&gt;text&lt;/span&gt;\n</code></pre>\n\n<p>That gives you plain text tooltips.  If you want rich tooltips, with formatted HTML in them, you'll need to use a library to do that.  Fortunately <a href=\"http://www.webdesignbooth.com/15-jquery-plugins-to-create-an-user-friendly-tooltip/\">there are loads of those</a>.</p>\n",
                    "is_accepted": true,
                    "score": 212
                },
                {
                    "body": "<p>In most browsers, the title attribute will render as a tooltip, and is generally flexible as to what sorts of elements it'll work with.</p>\n\n<pre><code>&lt;span title=\"This will show as a tooltip\"&gt;Mouse over for a tooltip!&lt;/span&gt;\n&lt;a href=\"http://www.stackoverflow.com\" title=\"Link to stackoverflow.com\"&gt;stackoverflow.com&lt;/a&gt;\n&lt;img src=\"something.png\" alt=\"Something\" title=\"Something\"&gt;\n</code></pre>\n\n<p>All of those will render tooltips in most every browser. </p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>the <code>\"title\"</code> attribute will be used as the text for tooltip by the browser, if you want to apply style to it consider using some <a href=\"http://jquery.bassistance.de/tooltip/demo/\" rel=\"nofollow\">plugins</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<h2>Custom Tooltips with pure CSS - no JavaScript needed:</h2>\n\n<h3><a href=\"http://jsfiddle.net/8nnwytbL/\">Example here (with code)</a> / <a href=\"http://jsfiddle.net/8nnwytbL/show\">Full screen example</a></h3>\n\n<p>As an alternative to the default <code>title</code> attribute tooltips, you can make your own custom CSS tooltips using <code>:before</code>/<code>:after</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\">pseudo elements</a> and HTML5 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_data_attributes\"><code>data-*</code> attributes</a>.</p>\n\n<p>Using the provided CSS, you can add a tooltip to an element using the <code>data-tooltip</code> attribute.</p>\n\n<p>You can also control the position of the custom tooltip using the <code>data-tooltip-position</code> attribute (accepted values: <code>top</code>/<code>right</code>/<code>bottom</code>/<code>left</code>).</p>\n\n<p>For instance, the following will add a tooltop positioned at the bottom of the span element.</p>\n\n<pre><code>&lt;span data-tooltip=\"Custom tooltip text.\" data-tooltip-position=\"bottom\"&gt;Custom bottom tooltip.&lt;/span&gt;\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/t6DjL.png\" alt=\"enter image description here\"></p>\n\n<h3>How does this work?</h3>\n\n<p>You can display the custom tooltips with pseudo elements by retrieving the custom attribute values using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/attr\"><strong><code>attr()</code></strong></a> function.</p>\n\n<pre><code>[data-tooltip]:before {\n    content: attr(data-tooltip);\n}\n</code></pre>\n\n<p>In terms of positioning the tooltip, just use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\">attribute selector</a> and change the placement based on the attribute's value.</p>\n\n<h3><a href=\"http://jsfiddle.net/8nnwytbL/\">Example here (with code)</a> / <a href=\"http://jsfiddle.net/8nnwytbL/show\">Full screen example</a></h3>\n\n<p><strong>Full CSS used in the example</strong> - customize this to your needs.</p>\n\n<pre><code>[data-tooltip] {\n    display: inline-block;\n    position: relative;\n    cursor: help;\n    padding: 4px;\n}\n/* Tooltip styling */\n[data-tooltip]:before {\n    content: attr(data-tooltip);\n    display: none;\n    position: absolute;\n    background: #000;\n    color: #fff;\n    padding: 4px 8px;\n    font-size: 14px;\n    line-height: 1.4;\n    min-width: 100px;\n    text-align: center;\n    border-radius: 4px;\n}\n/* Dynamic horizontal centering */\n[data-tooltip-position=\"top\"]:before,\n[data-tooltip-position=\"bottom\"]:before {\n    left: 50%;\n    -ms-transform: translateX(-50%);\n    -moz-transform: translateX(-50%);\n    -webkit-transform: translateX(-50%);\n    transform: translateX(-50%);\n}\n/* Dynamic vertical centering */\n[data-tooltip-position=\"right\"]:before,\n[data-tooltip-position=\"left\"]:before {\n    top: 50%;\n    -ms-transform: translateY(-50%);\n    -moz-transform: translateY(-50%);\n    -webkit-transform: translateY(-50%);\n    transform: translateY(-50%);\n}\n[data-tooltip-position=\"top\"]:before {\n    bottom: 100%;\n    margin-bottom: 6px;\n}\n[data-tooltip-position=\"right\"]:before {\n    left: 100%;\n    margin-left: 6px;\n}\n[data-tooltip-position=\"bottom\"]:before {\n    top: 100%;\n    margin-top: 6px;\n}\n[data-tooltip-position=\"left\"]:before {\n    right: 100%;\n    margin-right: 6px;\n}\n\n/* Tooltip arrow styling/placement */\n[data-tooltip]:after {\n    content: '';\n    display: none;\n    position: absolute;\n    width: 0;\n    height: 0;\n    border-color: transparent;\n    border-style: solid;\n}\n/* Dynamic horizontal centering for the tooltip */\n[data-tooltip-position=\"top\"]:after,\n[data-tooltip-position=\"bottom\"]:after {\n    left: 50%;\n    margin-left: -6px;\n}\n/* Dynamic vertical centering for the tooltip */\n[data-tooltip-position=\"right\"]:after,\n[data-tooltip-position=\"left\"]:after {\n    top: 50%;\n    margin-top: -6px;\n}\n[data-tooltip-position=\"top\"]:after {\n    bottom: 100%;\n    border-width: 6px 6px 0;\n    border-top-color: #000;\n}\n[data-tooltip-position=\"right\"]:after {\n    left: 100%;\n    border-width: 6px 6px 6px 0;\n    border-right-color: #000;\n}\n[data-tooltip-position=\"bottom\"]:after {\n    top: 100%;\n    border-width: 0 6px 6px;\n    border-bottom-color: #000;\n}\n[data-tooltip-position=\"left\"]:after {\n    right: 100%;\n    border-width: 6px 0 6px 6px;\n    border-left-color: #000;\n}\n/* Show the tooltip when hovering */\n[data-tooltip]:hover:before,\n[data-tooltip]:hover:after {\n    display: block;\n    z-index: 50;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>In the following code, I want a tool-tip to come up when the user hovers the span, how do I do that?  I don't want to use any links.</p>\n\n<pre><code>&lt;span&gt; text &lt;/a&gt;\n</code></pre>\n",
            "last_activity_date": 1410718559,
            "question_id": 1055581,
            "score": 112,
            "tags": [
                "html",
                "css"
            ],
            "title": "How do I add a tool tip to a span element?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Why don't you just use one of those fancy loading graphics (eg: <a href=\"http://ajaxload.info/\" rel=\"nofollow\">http://ajaxload.info/</a>)? The waiting cursor is for the browser itself - so whenever it appears it has something to do with the browser and not with the page.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I understand you may not have control over this, but you might instead go for a \"masking\" div that covers the entire body with a z-index higher than 1. The center part of the div could contain a loading message if you like.</p>\n\n<p>Then, you can set the cursor to wait on the div and don't have to worry about links as they are \"under\" your masking div. Here's some example CSS for the \"masking div\":</p>\n\n<pre>\nbody { height: 100%; }\ndiv#mask { cursor: wait; z-index: 999; height: 100%; width: 100%; }\n</pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>This seems to work in firefox</p>\n\n<pre><code>&lt;style&gt;\n*{ cursor: inherit;}\nbody{ cursor: wait;}\n&lt;/style&gt;\n</code></pre>\n\n<p>The * part ensures that the cursor doesn't change when you hover over a link. Although links will still be clickable.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Try the css:</p>\n\n<pre><code>html.waiting {\ncursor: wait;\n}\n</code></pre>\n\n<p>It seems that if the property <code>body</code> is used as apposed to <code>html</code> it doesn't show the wait cursor over the whole page. Furthermore if you use a css class you can easily control when it actually shows it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you use this slightly modified version of the CSS you posted from Dorward,</p>\n\n<pre><code>html.wait, html.wait * { cursor: wait !important; }\n</code></pre>\n\n<p>you can then add some really simple <a href=\"http://api.jquery.com/\">jQuery</a> to work for all ajax calls:</p>\n\n<pre><code>$(document).ready(function () {\n    $(\"html\").ajaxStart(function () { $(this).addClass(\"wait\"); });\n    $(\"html\").ajaxStop(function () { $(this).removeClass(\"wait\"); });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 58
                },
                {
                    "body": "<p>Easiest way I know is using JQuery like this:</p>\n\n<pre><code>$('*').css('cursor','wait');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have been struggling with this problem for hours today.\nBasically everything was working just fine in FireFox but (of course) not in IE.\nIn IE the wait cursor was showing AFTER the time consuming function was executed.</p>\n\n<p>I finally found the trick on this site:\n<a href=\"http://www.codingforums.com/archive/index.php/t-37185.html\" rel=\"nofollow\">http://www.codingforums.com/archive/index.php/t-37185.html</a></p>\n\n<p>Code:</p>\n\n<pre><code>//...\ndocument.body.style.cursor = 'wait';\nsetTimeout(this.SomeLongFunction, 1);\n\n//setTimeout syntax when calling a function with parameters\n//setTimeout(function() {MyClass.SomeLongFunction(someParam);}, 1);\n\n//no () after function name this is a function ref not a function call\nsetTimeout(this.SetDefaultCursor, 1);\n...\n\nfunction SetDefaultCursor() {document.body.style.cursor = 'default';}\n\nfunction SomeLongFunction(someParam) {...}\n</code></pre>\n\n<p>My code runs in a JavaScript class hence the this and MyClass (MyClass is a singleton).</p>\n\n<p>I had the same problems when trying to display a div as described on this page. In IE it was showing after the function had been executed. So I guess this trick would solve that problem too.</p>\n\n<p>Thanks a zillion time to glenngv the author of the post. You really made my day!!!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>css: <code>.waiting * { cursor: 'wait' }</code></p>\n\n<p>jQuery: <code>$('body').toggleClass('waiting');</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>BlockUI is the answer for everything. Give it a try.</p>\n\n<p><a href=\"http://www.malsup.com/jquery/block/\" rel=\"nofollow\">http://www.malsup.com/jquery/block/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is it possible to set the cursor to 'wait' on the entire html page in a simple way? The idea is to show the user that something is going on while an ajax call is being completed. The code below shows a simplified version of what I tried and also demonstrate the problems I run into:</p>\n\n<ol>\n<li>if an element (#id1) has a cursor style set it will ignore the one set on body (obviously)  </li>\n<li>some elements have a default cursor style (a) and will not show the wait cursor on hover  </li>\n<li>the body element has a certain height depending on the content and if the page is short, the cursor will not show below the footer</li>\n</ol>\n\n<p>The test:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;style type=\"text/css\"&gt;\n            #id1 {\n                background-color: #06f;\n                cursor: pointer;\n            }\n\n            #id2 {\n                background-color: #f60;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div id=\"id1\"&gt;cursor: pointer&lt;/div&gt;\n        &lt;div id=\"id2\"&gt;no cursor&lt;/div&gt;\n        &lt;a href=\"#\" onclick=\"document.body.style.cursor = 'wait'; return false\"&gt;Do something&lt;/a&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Later edit...<br />\nIt worked in firefox and IE with:  </p>\n\n<pre><code>div#mask { display: none; cursor: wait; z-index: 9999; \nposition: absolute; top: 0; left: 0; height: 100%; \nwidth: 100%; background-color: #fff; opacity: 0; filter: alpha(opacity = 0);}\n\n&lt;a href=\"#\" onclick=\"document.getElementById('mask').style.display = 'block'; return false\"&gt;\nDo something&lt;/a&gt;\n</code></pre>\n\n<p>The problem with (or feature of) this solution is that it will prevent clicks because of the overlapping div (thanks Kibbee)</p>\n\n<p>Later later edit...<br />\nA simpler solution from Dorward:</p>\n\n<pre><code>.wait, .wait * { cursor: wait !important; }\n</code></pre>\n\n<p>and then </p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"document.body.className = 'wait'; return false\"&gt;Do something&lt;/a&gt;\n</code></pre>\n\n<p>This solution only shows the wait cursor but allows clicks.</p>\n",
            "last_activity_date": 1378833079,
            "question_id": 192900,
            "score": 50,
            "tags": [
                "javascript",
                "html",
                "css",
                "dynamic-css"
            ],
            "title": "Wait cursor over entire html page"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>if($('#someElement').hasClass('test')) {\n  ... do something ...\n}\nelse {\n  ... do something else ...\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>i've found one solution:</p>\n\n<pre><code>$(\"#someElement\")[0].className.match(\"test\")\n</code></pre>\n\n<p>but somehow i believe that there's a better way!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>CSS Styles are key-value pairs, not just \"tags\". By default, each element has a full set of CSS styles assigned to it, most of them is implicitly using the browser defaults and some of them is explicitly redefined in CSS stylesheets.</p>\n\n<p>To get the value assigned to a particular CSS entry of an element and compare it:</p>\n\n<pre><code>if ($('#yourElement').css('position') == 'absolute')\n{\n   // true\n}\n</code></pre>\n\n<p>If you didn't redefine the style, you will get the browser default for that particular element.</p>\n",
                    "is_accepted": false,
                    "score": 150
                },
                {
                    "body": "<pre><code>if ($(\"element class or id name\").css(\"property\") == \"value\") {\n    your code....\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Or, if you need to access the element that has that property and it does not use an id, you could go this route:</p>\n\n<pre><code>$(\"img\").each(function () {\n        if ($(this).css(\"float\") == \"left\") { $(this).addClass(\"left\"); }\n        if ($(this).css(\"float\") == \"right\") { $(this).addClass(\"right\"); }\n    })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I have a div:</p>\n\n<pre><code>&lt;div class=\"test\" id=\"someElement\" style=\"position: absolute\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Is there any way to check if the certain element:</p>\n\n<pre><code>$(\"#someElement\") \n</code></pre>\n\n<p>has a particular class (in my case, \"test\").</p>\n\n<p>Alternately, is there a way to check that en element has a certain style? In this example, I'd like to know if the element has \"position: absolute\".</p>\n\n<p>Thank you very much!</p>\n",
            "last_activity_date": 1421882708,
            "question_id": 759631,
            "score": 36,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "Jquery: How to check if the element has certain css class/style"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I have heard of this before, but not with the exact text <code>!ie7</code>.</p>\n\n<p>I found a reference here: <a href=\"http://www.javascriptkit.com/dhtmltutors/csshacks3.shtml\">http://www.javascriptkit.com/dhtmltutors/csshacks3.shtml</a></p>\n\n<blockquote>\n  <p>!ie</p>\n  \n  <p>Internet Explorer 7 fixed one of the\n  issues with the !important identifier,\n  but it still has problems when the\n  identifier has an error in it. If an\n  illegal identifier name is used in\n  place of important, Internet Explorer\n  7 and below will handle the property\n  normally instead of failing.\n  Therefore, in any style declaration\n  block, you can include properties\n  intended to only apply to Internet\n  Explorer and add an !ie identifier.\n  <strong>Almost any word can be used in place\n  of ie.</strong></p>\n  \n  <p><strong>The !ie identifier allows the property\n  to be applied in IE 7 and below. It\n  may or may not work in future\n  versions. Warning: this uses invalid\n  CSS!</strong></p>\n</blockquote>\n\n<p>So, <code>width: 650px!ie7;</code> will be applied in only IE 7 and below.</p>\n\n<p>The actual text <code>ie7</code> is not required, but it's a sensible string to use, to remind people of the purpose behind the hack.</p>\n",
                    "is_accepted": true,
                    "score": 53
                }
            ],
            "body": "<p>That title isn't quite as crazy it seems. I promise!!</p>\n\n<p>While researching for another question, I noticed the following in Stack Overflow's stylesheets:</p>\n\n<pre><code>...\nwidth: auto;\n...\nwidth: 650px!ie7;\npadding-bottom: 20px!ie7;\n...\n</code></pre>\n\n<p>Is this an odd type of conditional styling? Is this a mistake? Assuming it isn't a mistake, does this work with all IE versions? Is there a way of specifying that a given rule should only be applied to versions of IE greater than \u2013 say \u2013 7?</p>\n\n<p>I have never encountered of this before \u2013 I've always used conditional comments for IE-specific styles (and for what it's worth, I prefer keeping all IE-specific styles completely separate).</p>\n",
            "last_activity_date": 1311896004,
            "question_id": 4987418,
            "score": 33,
            "tags": [
                "css",
                "internet-explorer",
                "internet-explorer-7",
                "internet-explorer-6"
            ],
            "title": "Bang IE7 - What does it mean?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I think it's a collapsed margin.\nOnly the largest margin between the bottom of the first element and the top of the second is taken into account.</p>\n\n<p>It is quite normal to don't have too much space between two paragraphs eg.</p>\n\n<p><strike>You cannot avoid that with two adjacent elements so you have to enlarge or reduce the larger margin.</strike></p>\n\n<p>EDIT: cf. <a href=\"http://www.w3.org/TR/CSS2/box.html#collapsing-margins\">W3C</a></p>\n\n<blockquote>\n  <p>Two margins are adjoining if and only if:</p>\n  \n  <ul>\n  <li>both belong to in-flow block-level boxes that participate in the same block formatting context</li>\n  <li>no line boxes, no clearance, no padding and no border separate them</li>\n  <li>both belong to vertically-adjacent box edges</li>\n  </ul>\n</blockquote>\n\n<p>So there is no collapsing with <code>float</code> which takes the element out of the flow.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>Margins, in contrary to padding (which pads a specific width) is a \u201cdo this as a minimum distance\u201d.</p>\n\n<p>It won\u2019t put that distance to all elements.</p>\n\n<p>As you can see, the <em>get in touch</em> block bottom margin is marged to the input box. That is the margin active here.\nThe other margin, top margin from the input, is not in effect, as it\u2019s smaller and does not reach a block-element where it would actually <em>push back</em> the element. The 2 margins overlap and don\u2019t effect one another.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Why not just add 10px to your bottom margin in the .contact class?</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I had posted a similar question, for my answer at:\n<a href=\"http://www.w3.org/TR/CSS21/box.html#collapsing-margins\" rel=\"nofollow\">http://www.w3.org/TR/CSS21/box.html#collapsing-margins</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Add a clear div tag between the two objects</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Please see my code, I don't understand why the margins of these divs are overlapping.</p>\n\n<pre><code>&lt;div class=\"alignright\"&gt;\n\n    &lt;div class=\"social\"&gt;\n        &lt;a href=\"#\" class=\"twit\"&gt;&lt;/a&gt;\n        &lt;a href=\"#\" class=\"fb\"&gt;&lt;/a&gt;\n    &lt;/div&gt;&lt;!-- social --&gt;\n\n    &lt;div class=\"contact\"&gt;\n        Get in Touch: &lt;span&gt;+44 10012 12345&lt;/span&gt;            \n    &lt;/div&gt;&lt;!-- contact --&gt;\n\n    &lt;div class=\"search\"&gt;\n        &lt;form method=\"post\" action=\"\"&gt;\n            &lt;input type=\"text\" value=\"\" name=\"s\" gtbfieldid=\"28\"&gt;\n        &lt;/form&gt;\n    &lt;/div&gt;&lt;!-- search --&gt;\n\n&lt;/div&gt;\n</code></pre>\n\n<p>The CSS: </p>\n\n<pre><code>.alignright {float: right}\n\n#header .social {margin-top: 50px;}\n#header .social a {display: inline-block;}\n#header .social .fb {width: 64px; height: 1px; padding-top: 60px; overflow: hidden;}\n#header .social .twit {width: 64px; height: 1px; padding-top: 60px; overflow: hidden;}\n\n#header .contact {margin: 20px 70px 20px 0; font-size: 14px; font-weight: bold;}\n#header .contact span {color: #FFFFFF;}\n\n#header .search {margin: 10px 0 0;}\n</code></pre>\n\n<hr>\n\n<p><img src=\"http://i.stack.imgur.com/tOJW5.png\" alt=\"picture\"></p>\n",
            "last_activity_date": 1349363735,
            "question_id": 3906640,
            "score": 27,
            "tags": [
                "css",
                "margins"
            ],
            "title": "CSS Margins Overlap Problem"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It can be done by refiring the event after you temporarily hide the overlay.</p>\n\n<p>See the first answer to this question: \n<a href=\"http://stackoverflow.com/questions/1401658/html-overlay-which-allows-clicks-to-fall-through-to-elements-behind-it\">http://stackoverflow.com/questions/1401658/html-overlay-which-allows-clicks-to-fall-through-to-elements-behind-it</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It can be done using CSS <a href=\"https://developer.mozilla.org/en/css/pointer-events\"><code>pointer-events</code></a> in Firefox >= 3.6 and Safari >= 4.0. Probably some Chrome version too. Unfortunately, I don't have knowledge of a cross-browser workaround.</p>\n\n<pre><code>#overlay {\n  pointer-events: none;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 53
                }
            ],
            "body": "<p>For various reasons, I need to put a (mostly) transparent <code>&lt;div&gt;</code> over some text. However, this means that the text can't be clicked (eg, to click links or select it). Would it be possible to simply make this div \"invisible\" to clicks and other mouse events?</p>\n\n<p>For example, the <code>overlay</code> div covers covers the text, but I would like to be able to click/select the text through the <code>overlay</code> div:</p>\n\n<pre><code>&lt;div id=\"container\"&gt;\n    &lt;p&gt;Some text&lt;/p&gt;\n    &lt;div id=\"overlay\" style=\"position: absolute; top: 0;\n                             left: 0; width: 100%; height:100%\"&gt;\n        ... some content ...\n    &lt;/div&gt;\n &lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1331414464,
            "question_id": 3538489,
            "score": 26,
            "tags": [
                "html",
                "css",
                "events"
            ],
            "title": "HTML/CSS: Make a div &quot;invisible&quot; to clicks?"
        }
    ]
}
